<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16553.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ioinst_handle_stsch</name><parameter_list pos:start="1:24" pos:end="1:72">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:37">CPUS390XState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">env</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">uint64_t</name></type> <name pos:start="1:54" pos:end="1:57">reg1</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:67">uint32_t</name></type> <name pos:start="1:69" pos:end="1:71">ipb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:14">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">cssid</name></decl>, <decl pos:start="5:16" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:19">ssid</name></decl>, <decl pos:start="5:22" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:26">schid</name></decl>, <decl pos:start="5:29" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:29">m</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">SubchDev</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">sch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:11"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">cc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">SCHIB</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:16">schib</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">hwaddr</name></type> <name pos:start="15:12" pos:end="15:14">len</name> <init pos:start="15:16" pos:end="15:31">= <expr pos:start="15:18" pos:end="15:31"><sizeof pos:start="15:18" pos:end="15:31">sizeof<argument_list pos:start="15:24" pos:end="15:31">(<argument pos:start="15:25" pos:end="15:30"><expr pos:start="15:25" pos:end="15:30"><operator pos:start="15:25" pos:end="15:25">*</operator><name pos:start="15:26" pos:end="15:30">schib</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:70">(<expr pos:start="19:9" pos:end="19:69"><call pos:start="19:9" pos:end="19:69"><name pos:start="19:9" pos:end="19:36">ioinst_disassemble_sch_ident</name><argument_list pos:start="19:37" pos:end="19:69">(<argument pos:start="19:38" pos:end="19:41"><expr pos:start="19:38" pos:end="19:41"><name pos:start="19:38" pos:end="19:41">reg1</name></expr></argument>, <argument pos:start="19:44" pos:end="19:45"><expr pos:start="19:44" pos:end="19:45"><operator pos:start="19:44" pos:end="19:44">&amp;</operator><name pos:start="19:45" pos:end="19:45">m</name></expr></argument>, <argument pos:start="19:48" pos:end="19:53"><expr pos:start="19:48" pos:end="19:53"><operator pos:start="19:48" pos:end="19:48">&amp;</operator><name pos:start="19:49" pos:end="19:53">cssid</name></expr></argument>, <argument pos:start="19:56" pos:end="19:60"><expr pos:start="19:56" pos:end="19:60"><operator pos:start="19:56" pos:end="19:56">&amp;</operator><name pos:start="19:57" pos:end="19:60">ssid</name></expr></argument>, <argument pos:start="19:63" pos:end="19:68"><expr pos:start="19:63" pos:end="19:68"><operator pos:start="19:63" pos:end="19:63">&amp;</operator><name pos:start="19:64" pos:end="19:68">schid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:72" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:20">

        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><call pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:25">program_interrupt</name><argument_list pos:start="21:26" pos:end="21:46">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">env</name></expr></argument>, <argument pos:start="21:32" pos:end="21:42"><expr pos:start="21:32" pos:end="21:42"><name pos:start="21:32" pos:end="21:42">PGM_OPERAND</name></expr></argument>, <argument pos:start="21:45" pos:end="21:45"><expr pos:start="21:45" pos:end="21:45"><literal type="number" pos:start="21:45" pos:end="21:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><call pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:23">trace_ioinst_sch_id</name><argument_list pos:start="27:24" pos:end="27:52">(<argument pos:start="27:25" pos:end="27:31"><expr pos:start="27:25" pos:end="27:31"><literal type="string" pos:start="27:25" pos:end="27:31">"stsch"</literal></expr></argument>, <argument pos:start="27:34" pos:end="27:38"><expr pos:start="27:34" pos:end="27:38"><name pos:start="27:34" pos:end="27:38">cssid</name></expr></argument>, <argument pos:start="27:41" pos:end="27:44"><expr pos:start="27:41" pos:end="27:44"><name pos:start="27:41" pos:end="27:44">ssid</name></expr></argument>, <argument pos:start="27:47" pos:end="27:51"><expr pos:start="27:47" pos:end="27:51"><name pos:start="27:47" pos:end="27:51">schid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:8">addr</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:38"><name pos:start="29:12" pos:end="29:28">decode_basedisp_s</name><argument_list pos:start="29:29" pos:end="29:38">(<argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">env</name></expr></argument>, <argument pos:start="29:35" pos:end="29:37"><expr pos:start="29:35" pos:end="29:37"><name pos:start="29:35" pos:end="29:37">ipb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:12">addr</name> <operator pos:start="31:14" pos:end="31:14">&amp;</operator> <literal type="number" pos:start="31:16" pos:end="31:16">3</literal></expr>)</condition> <block pos:start="31:19" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:20">

        <expr_stmt pos:start="33:9" pos:end="33:53"><expr pos:start="33:9" pos:end="33:52"><call pos:start="33:9" pos:end="33:52"><name pos:start="33:9" pos:end="33:25">program_interrupt</name><argument_list pos:start="33:26" pos:end="33:52">(<argument pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:29">env</name></expr></argument>, <argument pos:start="33:32" pos:end="33:48"><expr pos:start="33:32" pos:end="33:48"><name pos:start="33:32" pos:end="33:48">PGM_SPECIFICATION</name></expr></argument>, <argument pos:start="33:51" pos:end="33:51"><expr pos:start="33:51" pos:end="33:51"><literal type="number" pos:start="33:51" pos:end="33:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:20">return <expr pos:start="35:16" pos:end="35:19"><operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:61"><expr pos:start="39:5" pos:end="39:60"><name pos:start="39:5" pos:end="39:9">schib</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:60"><name pos:start="39:13" pos:end="39:40">s390_cpu_physical_memory_map</name><argument_list pos:start="39:41" pos:end="39:60">(<argument pos:start="39:42" pos:end="39:44"><expr pos:start="39:42" pos:end="39:44"><name pos:start="39:42" pos:end="39:44">env</name></expr></argument>, <argument pos:start="39:47" pos:end="39:50"><expr pos:start="39:47" pos:end="39:50"><name pos:start="39:47" pos:end="39:50">addr</name></expr></argument>, <argument pos:start="39:53" pos:end="39:56"><expr pos:start="39:53" pos:end="39:56"><operator pos:start="39:53" pos:end="39:53">&amp;</operator><name pos:start="39:54" pos:end="39:56">len</name></expr></argument>, <argument pos:start="39:59" pos:end="39:59"><expr pos:start="39:59" pos:end="39:59"><literal type="number" pos:start="39:59" pos:end="39:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:40">(<expr pos:start="41:9" pos:end="41:39"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:14">schib</name> <operator pos:start="41:16" pos:end="41:17">||</operator> <name pos:start="41:19" pos:end="41:21">len</name> <operator pos:start="41:23" pos:end="41:24">!=</operator> <sizeof pos:start="41:26" pos:end="41:39">sizeof<argument_list pos:start="41:32" pos:end="41:39">(<argument pos:start="41:33" pos:end="41:38"><expr pos:start="41:33" pos:end="41:38"><operator pos:start="41:33" pos:end="41:33">*</operator><name pos:start="41:34" pos:end="41:38">schib</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="41:42" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:17">

        <expr_stmt pos:start="43:9" pos:end="43:50"><expr pos:start="43:9" pos:end="43:49"><call pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:25">program_interrupt</name><argument_list pos:start="43:26" pos:end="43:49">(<argument pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:29">env</name></expr></argument>, <argument pos:start="43:32" pos:end="43:45"><expr pos:start="43:32" pos:end="43:45"><name pos:start="43:32" pos:end="43:45">PGM_ADDRESSING</name></expr></argument>, <argument pos:start="43:48" pos:end="43:48"><expr pos:start="43:48" pos:end="43:48"><literal type="number" pos:start="43:48" pos:end="43:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:18"><expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:10">cc</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <operator pos:start="45:14" pos:end="45:14">-</operator><name pos:start="45:15" pos:end="45:17">EIO</name></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:17">goto <name pos:start="47:14" pos:end="47:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:48"><expr pos:start="51:5" pos:end="51:47"><name pos:start="51:5" pos:end="51:7">sch</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:47"><name pos:start="51:11" pos:end="51:24">css_find_subch</name><argument_list pos:start="51:25" pos:end="51:47">(<argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><name pos:start="51:26" pos:end="51:26">m</name></expr></argument>, <argument pos:start="51:29" pos:end="51:33"><expr pos:start="51:29" pos:end="51:33"><name pos:start="51:29" pos:end="51:33">cssid</name></expr></argument>, <argument pos:start="51:36" pos:end="51:39"><expr pos:start="51:36" pos:end="51:39"><name pos:start="51:36" pos:end="51:39">ssid</name></expr></argument>, <argument pos:start="51:42" pos:end="51:46"><expr pos:start="51:42" pos:end="51:46"><name pos:start="51:42" pos:end="51:46">schid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="85:5"><if pos:start="53:5" pos:end="69:5">if <condition pos:start="53:8" pos:end="53:12">(<expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">sch</name></expr>)</condition> <block pos:start="53:14" pos:end="69:5">{<block_content pos:start="55:9" pos:end="67:9">

        <if_stmt pos:start="55:9" pos:end="67:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:35">(<expr pos:start="55:13" pos:end="55:34"><call pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:29">css_subch_visible</name><argument_list pos:start="55:30" pos:end="55:34">(<argument pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><name pos:start="55:31" pos:end="55:33">sch</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:37" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:19">

            <expr_stmt pos:start="57:13" pos:end="57:37"><expr pos:start="57:13" pos:end="57:36"><call pos:start="57:13" pos:end="57:36"><name pos:start="57:13" pos:end="57:24">css_do_stsch</name><argument_list pos:start="57:25" pos:end="57:36">(<argument pos:start="57:26" pos:end="57:28"><expr pos:start="57:26" pos:end="57:28"><name pos:start="57:26" pos:end="57:28">sch</name></expr></argument>, <argument pos:start="57:31" pos:end="57:35"><expr pos:start="57:31" pos:end="57:35"><name pos:start="57:31" pos:end="57:35">schib</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:19"><expr pos:start="59:13" pos:end="59:18"><name pos:start="59:13" pos:end="59:14">cc</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="67:9">else <block pos:start="61:16" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:19">

            <comment type="block" pos:start="63:13" pos:end="63:61">/* Indicate no more subchannels in this css/ss */</comment>

            <expr_stmt pos:start="65:13" pos:end="65:19"><expr pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:14">cc</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="number" pos:start="65:18" pos:end="65:18">3</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="85:5">else <block pos:start="69:12" pos:end="85:5">{<block_content pos:start="71:9" pos:end="83:9">

        <if_stmt pos:start="71:9" pos:end="83:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:51">(<expr pos:start="71:13" pos:end="71:50"><call pos:start="71:13" pos:end="71:50"><name pos:start="71:13" pos:end="71:27">css_schid_final</name><argument_list pos:start="71:28" pos:end="71:50">(<argument pos:start="71:29" pos:end="71:29"><expr pos:start="71:29" pos:end="71:29"><name pos:start="71:29" pos:end="71:29">m</name></expr></argument>, <argument pos:start="71:32" pos:end="71:36"><expr pos:start="71:32" pos:end="71:36"><name pos:start="71:32" pos:end="71:36">cssid</name></expr></argument>, <argument pos:start="71:39" pos:end="71:42"><expr pos:start="71:39" pos:end="71:42"><name pos:start="71:39" pos:end="71:42">ssid</name></expr></argument>, <argument pos:start="71:45" pos:end="71:49"><expr pos:start="71:45" pos:end="71:49"><name pos:start="71:45" pos:end="71:49">schid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:53" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:19">

            <expr_stmt pos:start="73:13" pos:end="73:19"><expr pos:start="73:13" pos:end="73:18"><name pos:start="73:13" pos:end="73:14">cc</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">3</literal></expr>;</expr_stmt> <comment type="block" pos:start="73:21" pos:end="73:60">/* No more subchannels in this css/ss */</comment>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="83:9">else <block pos:start="75:16" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:19">

            <comment type="block" pos:start="77:13" pos:end="77:39">/* Store an empty schib. */</comment>

            <expr_stmt pos:start="79:13" pos:end="79:45"><expr pos:start="79:13" pos:end="79:44"><call pos:start="79:13" pos:end="79:44"><name pos:start="79:13" pos:end="79:18">memset</name><argument_list pos:start="79:19" pos:end="79:44">(<argument pos:start="79:20" pos:end="79:24"><expr pos:start="79:20" pos:end="79:24"><name pos:start="79:20" pos:end="79:24">schib</name></expr></argument>, <argument pos:start="79:27" pos:end="79:27"><expr pos:start="79:27" pos:end="79:27"><literal type="number" pos:start="79:27" pos:end="79:27">0</literal></expr></argument>, <argument pos:start="79:30" pos:end="79:43"><expr pos:start="79:30" pos:end="79:43"><sizeof pos:start="79:30" pos:end="79:43">sizeof<argument_list pos:start="79:36" pos:end="79:43">(<argument pos:start="79:37" pos:end="79:42"><expr pos:start="79:37" pos:end="79:42"><operator pos:start="79:37" pos:end="79:37">*</operator><name pos:start="79:38" pos:end="79:42">schib</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:19"><expr pos:start="81:13" pos:end="81:18"><name pos:start="81:13" pos:end="81:14">cc</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

<label pos:start="87:1" pos:end="87:4"><name pos:start="87:1" pos:end="87:3">out</name>:</label>

    <expr_stmt pos:start="89:5" pos:end="89:55"><expr pos:start="89:5" pos:end="89:54"><call pos:start="89:5" pos:end="89:54"><name pos:start="89:5" pos:end="89:34">s390_cpu_physical_memory_unmap</name><argument_list pos:start="89:35" pos:end="89:54">(<argument pos:start="89:36" pos:end="89:38"><expr pos:start="89:36" pos:end="89:38"><name pos:start="89:36" pos:end="89:38">env</name></expr></argument>, <argument pos:start="89:41" pos:end="89:45"><expr pos:start="89:41" pos:end="89:45"><name pos:start="89:41" pos:end="89:45">schib</name></expr></argument>, <argument pos:start="89:48" pos:end="89:50"><expr pos:start="89:48" pos:end="89:50"><name pos:start="89:48" pos:end="89:50">len</name></expr></argument>, <argument pos:start="89:53" pos:end="89:53"><expr pos:start="89:53" pos:end="89:53"><literal type="number" pos:start="89:53" pos:end="89:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="91:5" pos:end="91:14">return <expr pos:start="91:12" pos:end="91:13"><name pos:start="91:12" pos:end="91:13">cc</name></expr>;</return>

</block_content>}</block></function>
</unit>
