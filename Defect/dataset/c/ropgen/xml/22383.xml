<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22383.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:46">gen_405_mulladd_insn</name> <parameter_list pos:start="1:48" pos:end="5:79">(<parameter pos:start="1:49" pos:end="1:65"><decl pos:start="1:49" pos:end="1:65"><type pos:start="1:49" pos:end="1:65"><name pos:start="1:49" pos:end="1:60">DisasContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">ctx</name></decl></parameter>,

                                                <parameter pos:start="3:49" pos:end="3:56"><decl pos:start="3:49" pos:end="3:56"><type pos:start="3:49" pos:end="3:56"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:56">opc2</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:66"><decl pos:start="3:59" pos:end="3:66"><type pos:start="3:59" pos:end="3:66"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:66">opc3</name></decl></parameter>,

                                                <parameter pos:start="5:49" pos:end="5:54"><decl pos:start="5:49" pos:end="5:54"><type pos:start="5:49" pos:end="5:54"><name pos:start="5:49" pos:end="5:51">int</name></type> <name pos:start="5:53" pos:end="5:54">ra</name></decl></parameter>, <parameter pos:start="5:57" pos:end="5:62"><decl pos:start="5:57" pos:end="5:62"><type pos:start="5:57" pos:end="5:62"><name pos:start="5:57" pos:end="5:59">int</name></type> <name pos:start="5:61" pos:end="5:62">rb</name></decl></parameter>, <parameter pos:start="5:65" pos:end="5:70"><decl pos:start="5:65" pos:end="5:70"><type pos:start="5:65" pos:end="5:70"><name pos:start="5:65" pos:end="5:67">int</name></type> <name pos:start="5:69" pos:end="5:70">rt</name></decl></parameter>, <parameter pos:start="5:73" pos:end="5:78"><decl pos:start="5:73" pos:end="5:78"><type pos:start="5:73" pos:end="5:78"><name pos:start="5:73" pos:end="5:75">int</name></type> <name pos:start="5:77" pos:end="5:78">Rc</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="159:1">{<block_content pos:start="9:5" pos:end="157:5">

    <expr_stmt pos:start="9:5" pos:end="9:27"><expr pos:start="9:5" pos:end="9:26"><call pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:22">gen_op_load_gpr_T0</name><argument_list pos:start="9:23" pos:end="9:26">(<argument pos:start="9:24" pos:end="9:25"><expr pos:start="9:24" pos:end="9:25"><name pos:start="9:24" pos:end="9:25">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><call pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:22">gen_op_load_gpr_T1</name><argument_list pos:start="11:23" pos:end="11:26">(<argument pos:start="11:24" pos:end="11:25"><expr pos:start="11:24" pos:end="11:25"><name pos:start="11:24" pos:end="11:25">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="13:5" pos:end="99:5">switch <condition pos:start="13:12" pos:end="13:24">(<expr pos:start="13:13" pos:end="13:23"><name pos:start="13:13" pos:end="13:16">opc3</name> <operator pos:start="13:18" pos:end="13:18">&amp;</operator> <literal type="number" pos:start="13:20" pos:end="13:23">0x0D</literal></expr>)</condition> <block pos:start="13:26" pos:end="99:5">{<block_content pos:start="15:5" pos:end="97:14">

    <case pos:start="15:5" pos:end="15:14">case <expr pos:start="15:10" pos:end="15:13"><literal type="number" pos:start="15:10" pos:end="15:13">0x05</literal></expr>:</case>

        <comment type="block" pos:start="17:9" pos:end="17:61">/* macchw    - macchw.    - macchwo   - macchwo.   */</comment>

        <comment type="block" pos:start="19:9" pos:end="19:61">/* macchws   - macchws.   - macchwso  - macchwso.  */</comment>

        <comment type="block" pos:start="21:9" pos:end="21:61">/* nmacchw   - nmacchw.   - nmacchwo  - nmacchwo.  */</comment>

        <comment type="block" pos:start="23:9" pos:end="23:61">/* nmacchws  - nmacchws.  - nmacchwso - nmacchwso. */</comment>

        <comment type="block" pos:start="25:9" pos:end="25:30">/* mulchw - mulchw. */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><call pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:25">gen_op_405_mulchw</name><argument_list pos:start="27:26" pos:end="27:27">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:14">case <expr pos:start="31:10" pos:end="31:13"><literal type="number" pos:start="31:10" pos:end="31:13">0x04</literal></expr>:</case>

        <comment type="block" pos:start="33:9" pos:end="33:61">/* macchwu   - macchwu.   - macchwuo  - macchwuo.  */</comment>

        <comment type="block" pos:start="35:9" pos:end="35:61">/* macchwsu  - macchwsu.  - macchwsuo - macchwsuo. */</comment>

        <comment type="block" pos:start="37:9" pos:end="37:32">/* mulchwu - mulchwu. */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:29"><expr pos:start="39:9" pos:end="39:28"><call pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:26">gen_op_405_mulchwu</name><argument_list pos:start="39:27" pos:end="39:28">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:14">case <expr pos:start="43:10" pos:end="43:13"><literal type="number" pos:start="43:10" pos:end="43:13">0x01</literal></expr>:</case>

        <comment type="block" pos:start="45:9" pos:end="45:61">/* machhw    - machhw.    - machhwo   - machhwo.   */</comment>

        <comment type="block" pos:start="47:9" pos:end="47:61">/* machhws   - machhws.   - machhwso  - machhwso.  */</comment>

        <comment type="block" pos:start="49:9" pos:end="49:61">/* nmachhw   - nmachhw.   - nmachhwo  - nmachhwo.  */</comment>

        <comment type="block" pos:start="51:9" pos:end="51:61">/* nmachhws  - nmachhws.  - nmachhwso - nmachhwso. */</comment>

        <comment type="block" pos:start="53:9" pos:end="53:30">/* mulhhw - mulhhw. */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><call pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:25">gen_op_405_mulhhw</name><argument_list pos:start="55:26" pos:end="55:27">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:14">case <expr pos:start="59:10" pos:end="59:13"><literal type="number" pos:start="59:10" pos:end="59:13">0x00</literal></expr>:</case>

        <comment type="block" pos:start="61:9" pos:end="61:61">/* machhwu   - machhwu.   - machhwuo  - machhwuo.  */</comment>

        <comment type="block" pos:start="63:9" pos:end="63:61">/* machhwsu  - machhwsu.  - machhwsuo - machhwsuo. */</comment>

        <comment type="block" pos:start="65:9" pos:end="65:32">/* mulhhwu - mulhhwu. */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:29"><expr pos:start="67:9" pos:end="67:28"><call pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:26">gen_op_405_mulhhwu</name><argument_list pos:start="67:27" pos:end="67:28">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:14">case <expr pos:start="71:10" pos:end="71:13"><literal type="number" pos:start="71:10" pos:end="71:13">0x0D</literal></expr>:</case>

        <comment type="block" pos:start="73:9" pos:end="73:61">/* maclhw    - maclhw.    - maclhwo   - maclhwo.   */</comment>

        <comment type="block" pos:start="75:9" pos:end="75:61">/* maclhws   - maclhws.   - maclhwso  - maclhwso.  */</comment>

        <comment type="block" pos:start="77:9" pos:end="77:61">/* nmaclhw   - nmaclhw.   - nmaclhwo  - nmaclhwo.  */</comment>

        <comment type="block" pos:start="79:9" pos:end="79:61">/* nmaclhws  - nmaclhws.  - nmaclhwso - nmaclhwso. */</comment>

        <comment type="block" pos:start="81:9" pos:end="81:30">/* mullhw - mullhw. */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:28"><expr pos:start="83:9" pos:end="83:27"><call pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:25">gen_op_405_mullhw</name><argument_list pos:start="83:26" pos:end="83:27">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:14">case <expr pos:start="87:10" pos:end="87:13"><literal type="number" pos:start="87:10" pos:end="87:13">0x0C</literal></expr>:</case>

        <comment type="block" pos:start="89:9" pos:end="89:61">/* maclhwu   - maclhwu.   - maclhwuo  - maclhwuo.  */</comment>

        <comment type="block" pos:start="91:9" pos:end="91:61">/* maclhwsu  - maclhwsu.  - maclhwsuo - maclhwsuo. */</comment>

        <comment type="block" pos:start="93:9" pos:end="93:32">/* mullhwu - mullhwu. */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><call pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:26">gen_op_405_mullhwu</name><argument_list pos:start="95:27" pos:end="95:28">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:20">(<expr pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:12">opc2</name> <operator pos:start="101:14" pos:end="101:14">&amp;</operator> <literal type="number" pos:start="101:16" pos:end="101:19">0x02</literal></expr>)</condition> <block pos:start="101:22" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:21">

        <comment type="block" pos:start="103:9" pos:end="103:45">/* nmultiply-and-accumulate (0x0E) */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:21"><expr pos:start="105:9" pos:end="105:20"><call pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:18">gen_op_neg</name><argument_list pos:start="105:19" pos:end="105:20">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="109:5" pos:end="119:5"><if pos:start="109:5" pos:end="119:5">if <condition pos:start="109:8" pos:end="109:20">(<expr pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:12">opc2</name> <operator pos:start="109:14" pos:end="109:14">&amp;</operator> <literal type="number" pos:start="109:16" pos:end="109:19">0x04</literal></expr>)</condition> <block pos:start="109:22" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:31">

        <comment type="block" pos:start="111:9" pos:end="111:54">/* (n)multiply-and-accumulate (0x0C - 0x0E) */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:31"><expr pos:start="113:9" pos:end="113:30"><call pos:start="113:9" pos:end="113:30"><name pos:start="113:9" pos:end="113:26">gen_op_load_gpr_T2</name><argument_list pos:start="113:27" pos:end="113:30">(<argument pos:start="113:28" pos:end="113:29"><expr pos:start="113:28" pos:end="113:29"><name pos:start="113:28" pos:end="113:29">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:28"><expr pos:start="115:9" pos:end="115:27"><call pos:start="115:9" pos:end="115:27"><name pos:start="115:9" pos:end="115:25">gen_op_move_T1_T0</name><argument_list pos:start="115:26" pos:end="115:27">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:31"><expr pos:start="117:9" pos:end="117:30"><call pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:28">gen_op_405_add_T0_T2</name><argument_list pos:start="117:29" pos:end="117:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="121:5" pos:end="133:5"><if pos:start="121:5" pos:end="133:5">if <condition pos:start="121:8" pos:end="121:20">(<expr pos:start="121:9" pos:end="121:19"><name pos:start="121:9" pos:end="121:12">opc3</name> <operator pos:start="121:14" pos:end="121:14">&amp;</operator> <literal type="number" pos:start="121:16" pos:end="121:19">0x10</literal></expr>)</condition> <block pos:start="121:22" pos:end="133:5">{<block_content pos:start="125:9" pos:end="131:35">

        <comment type="block" pos:start="123:9" pos:end="123:28">/* Check overflow */</comment>

        <if_stmt pos:start="125:9" pos:end="131:35"><if pos:start="125:9" pos:end="127:34">if <condition pos:start="125:12" pos:end="125:24">(<expr pos:start="125:13" pos:end="125:23"><name pos:start="125:13" pos:end="125:16">opc3</name> <operator pos:start="125:18" pos:end="125:18">&amp;</operator> <literal type="number" pos:start="125:20" pos:end="125:23">0x01</literal></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:34"><block_content pos:start="127:13" pos:end="127:34">

            <expr_stmt pos:start="127:13" pos:end="127:34"><expr pos:start="127:13" pos:end="127:33"><call pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:31">gen_op_405_check_ov</name><argument_list pos:start="127:32" pos:end="127:33">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="129:9" pos:end="131:35">else<block type="pseudo" pos:start="131:13" pos:end="131:35"><block_content pos:start="131:13" pos:end="131:35">

            <expr_stmt pos:start="131:13" pos:end="131:35"><expr pos:start="131:13" pos:end="131:34"><call pos:start="131:13" pos:end="131:34"><name pos:start="131:13" pos:end="131:32">gen_op_405_check_ovu</name><argument_list pos:start="131:33" pos:end="131:34">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="135:5" pos:end="147:5"><if pos:start="135:5" pos:end="147:5">if <condition pos:start="135:8" pos:end="135:20">(<expr pos:start="135:9" pos:end="135:19"><name pos:start="135:9" pos:end="135:12">opc3</name> <operator pos:start="135:14" pos:end="135:14">&amp;</operator> <literal type="number" pos:start="135:16" pos:end="135:19">0x02</literal></expr>)</condition> <block pos:start="135:22" pos:end="147:5">{<block_content pos:start="139:9" pos:end="145:36">

        <comment type="block" pos:start="137:9" pos:end="137:22">/* Saturate */</comment>

        <if_stmt pos:start="139:9" pos:end="145:36"><if pos:start="139:9" pos:end="141:35">if <condition pos:start="139:12" pos:end="139:24">(<expr pos:start="139:13" pos:end="139:23"><name pos:start="139:13" pos:end="139:16">opc3</name> <operator pos:start="139:18" pos:end="139:18">&amp;</operator> <literal type="number" pos:start="139:20" pos:end="139:23">0x01</literal></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:35"><block_content pos:start="141:13" pos:end="141:35">

            <expr_stmt pos:start="141:13" pos:end="141:35"><expr pos:start="141:13" pos:end="141:34"><call pos:start="141:13" pos:end="141:34"><name pos:start="141:13" pos:end="141:32">gen_op_405_check_sat</name><argument_list pos:start="141:33" pos:end="141:34">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="143:9" pos:end="145:36">else<block type="pseudo" pos:start="145:13" pos:end="145:36"><block_content pos:start="145:13" pos:end="145:36">

            <expr_stmt pos:start="145:13" pos:end="145:36"><expr pos:start="145:13" pos:end="145:35"><call pos:start="145:13" pos:end="145:35"><name pos:start="145:13" pos:end="145:33">gen_op_405_check_satu</name><argument_list pos:start="145:34" pos:end="145:35">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:28"><expr pos:start="149:5" pos:end="149:27"><call pos:start="149:5" pos:end="149:27"><name pos:start="149:5" pos:end="149:23">gen_op_store_T0_gpr</name><argument_list pos:start="149:24" pos:end="149:27">(<argument pos:start="149:25" pos:end="149:26"><expr pos:start="149:25" pos:end="149:26"><name pos:start="149:25" pos:end="149:26">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="157:5"><if pos:start="151:5" pos:end="157:5">if <condition pos:start="151:8" pos:end="151:26">(<expr pos:start="151:9" pos:end="151:25"><call pos:start="151:9" pos:end="151:20"><name pos:start="151:9" pos:end="151:16">unlikely</name><argument_list pos:start="151:17" pos:end="151:20">(<argument pos:start="151:18" pos:end="151:19"><expr pos:start="151:18" pos:end="151:19"><name pos:start="151:18" pos:end="151:19">Rc</name></expr></argument>)</argument_list></call> <operator pos:start="151:22" pos:end="151:23">!=</operator> <literal type="number" pos:start="151:25" pos:end="151:25">0</literal></expr>)</condition> <block pos:start="151:28" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:25">

        <comment type="block" pos:start="153:9" pos:end="153:24">/* Update Rc0 */</comment>

        <expr_stmt pos:start="155:9" pos:end="155:25"><expr pos:start="155:9" pos:end="155:24"><call pos:start="155:9" pos:end="155:24"><name pos:start="155:9" pos:end="155:19">gen_set_Rc0</name><argument_list pos:start="155:20" pos:end="155:24">(<argument pos:start="155:21" pos:end="155:23"><expr pos:start="155:21" pos:end="155:23"><name pos:start="155:21" pos:end="155:23">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
