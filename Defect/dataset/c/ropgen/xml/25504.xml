<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25504.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">chunk_mux_init</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">WebMChunkContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">wc</name> <init pos:start="5:26" pos:end="5:39">= <expr pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:28">s</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:76"><expr pos:start="13:5" pos:end="13:75"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:75"><name pos:start="13:11" pos:end="13:40">avformat_alloc_output_context2</name><argument_list pos:start="13:41" pos:end="13:75">(<argument pos:start="13:42" pos:end="13:49"><expr pos:start="13:42" pos:end="13:49"><operator pos:start="13:42" pos:end="13:42">&amp;</operator><name pos:start="13:43" pos:end="13:49"><name pos:start="13:43" pos:end="13:44">wc</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:49">avf</name></name></expr></argument>, <argument pos:start="13:52" pos:end="13:62"><expr pos:start="13:52" pos:end="13:62"><name pos:start="13:52" pos:end="13:62"><name pos:start="13:52" pos:end="13:53">wc</name><operator pos:start="13:54" pos:end="13:55">-&gt;</operator><name pos:start="13:56" pos:end="13:62">oformat</name></name></expr></argument>, <argument pos:start="13:65" pos:end="13:68"><expr pos:start="13:65" pos:end="13:68"><name pos:start="13:65" pos:end="13:68">NULL</name></expr></argument>, <argument pos:start="13:71" pos:end="13:74"><expr pos:start="13:71" pos:end="13:74"><name pos:start="13:71" pos:end="13:74">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:19"><if pos:start="15:5" pos:end="17:19">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">&lt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:19"><block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:6">oc</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:16"><name pos:start="19:10" pos:end="19:11">wc</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:16">avf</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:6">oc</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:26">interrupt_callback</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <name pos:start="23:30" pos:end="23:50"><name pos:start="23:30" pos:end="23:30">s</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:50">interrupt_callback</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:6">oc</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:17">max_delay</name></name>          <operator pos:start="25:28" pos:end="25:28">=</operator> <name pos:start="25:30" pos:end="25:41"><name pos:start="25:30" pos:end="25:30">s</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:41">max_delay</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:48"><expr pos:start="27:5" pos:end="27:47"><call pos:start="27:5" pos:end="27:47"><name pos:start="27:5" pos:end="27:16">av_dict_copy</name><argument_list pos:start="27:17" pos:end="27:47">(<argument pos:start="27:18" pos:end="27:30"><expr pos:start="27:18" pos:end="27:30"><operator pos:start="27:18" pos:end="27:18">&amp;</operator><name pos:start="27:19" pos:end="27:30"><name pos:start="27:19" pos:end="27:20">oc</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:30">metadata</name></name></expr></argument>, <argument pos:start="27:33" pos:end="27:43"><expr pos:start="27:33" pos:end="27:43"><name pos:start="27:33" pos:end="27:43"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:43">metadata</name></name></expr></argument>, <argument pos:start="27:46" pos:end="27:46"><expr pos:start="27:46" pos:end="27:46"><literal type="number" pos:start="27:46" pos:end="27:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:60"><expr pos:start="31:5" pos:end="31:59"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:6">oc</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:17">priv_data</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:59"><name pos:start="31:21" pos:end="31:30">av_mallocz</name><argument_list pos:start="31:31" pos:end="31:59">(<argument pos:start="31:32" pos:end="31:58"><expr pos:start="31:32" pos:end="31:58"><name pos:start="31:32" pos:end="31:58"><name pos:start="31:32" pos:end="31:33">oc</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:42">oformat</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:58">priv_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:22"><name pos:start="33:10" pos:end="33:11">oc</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:22">priv_data</name></name></expr>)</condition> <block pos:start="33:25" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:31">

        <expr_stmt pos:start="35:9" pos:end="35:27"><expr pos:start="35:9" pos:end="35:26"><call pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:18">avio_close</name><argument_list pos:start="35:19" pos:end="35:26">(<argument pos:start="35:20" pos:end="35:25"><expr pos:start="35:20" pos:end="35:25"><name pos:start="35:20" pos:end="35:25"><name pos:start="35:20" pos:end="35:21">oc</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:62"><expr pos:start="41:5" pos:end="41:61"><operator pos:start="41:5" pos:end="41:5">*</operator><operator pos:start="41:6" pos:end="41:6">(</operator><specifier pos:start="41:7" pos:end="41:11">const</specifier> <name pos:start="41:13" pos:end="41:19">AVClass</name><operator pos:start="41:20" pos:end="41:20">*</operator><operator pos:start="41:21" pos:end="41:21">*</operator><operator pos:start="41:22" pos:end="41:22">)</operator><name pos:start="41:23" pos:end="41:35"><name pos:start="41:23" pos:end="41:24">oc</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:35">priv_data</name></name> <operator pos:start="41:37" pos:end="41:37">=</operator> <name pos:start="41:39" pos:end="41:61"><name pos:start="41:39" pos:end="41:40">oc</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:49">oformat</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:61">priv_class</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><call pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:23">av_opt_set_defaults</name><argument_list pos:start="43:24" pos:end="43:38">(<argument pos:start="43:25" pos:end="43:37"><expr pos:start="43:25" pos:end="43:37"><name pos:start="43:25" pos:end="43:37"><name pos:start="43:25" pos:end="43:26">oc</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:37">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:48"><expr pos:start="45:5" pos:end="45:47"><call pos:start="45:5" pos:end="45:47"><name pos:start="45:5" pos:end="45:18">av_opt_set_int</name><argument_list pos:start="45:19" pos:end="45:47">(<argument pos:start="45:20" pos:end="45:32"><expr pos:start="45:20" pos:end="45:32"><name pos:start="45:20" pos:end="45:32"><name pos:start="45:20" pos:end="45:21">oc</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:32">priv_data</name></name></expr></argument>, <argument pos:start="45:35" pos:end="45:40"><expr pos:start="45:35" pos:end="45:40"><literal type="string" pos:start="45:35" pos:end="45:40">"dash"</literal></expr></argument>, <argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">1</literal></expr></argument>, <argument pos:start="45:46" pos:end="45:46"><expr pos:start="45:46" pos:end="45:46"><literal type="number" pos:start="45:46" pos:end="45:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:79"><expr pos:start="47:5" pos:end="47:78"><call pos:start="47:5" pos:end="47:78"><name pos:start="47:5" pos:end="47:18">av_opt_set_int</name><argument_list pos:start="47:19" pos:end="47:78">(<argument pos:start="47:20" pos:end="47:32"><expr pos:start="47:20" pos:end="47:32"><name pos:start="47:20" pos:end="47:32"><name pos:start="47:20" pos:end="47:21">oc</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:32">priv_data</name></name></expr></argument>, <argument pos:start="47:35" pos:end="47:54"><expr pos:start="47:35" pos:end="47:54"><literal type="string" pos:start="47:35" pos:end="47:54">"cluster_time_limit"</literal></expr></argument>, <argument pos:start="47:57" pos:end="47:74"><expr pos:start="47:57" pos:end="47:74"><name pos:start="47:57" pos:end="47:74"><name pos:start="47:57" pos:end="47:58">wc</name><operator pos:start="47:59" pos:end="47:60">-&gt;</operator><name pos:start="47:61" pos:end="47:74">chunk_duration</name></name></expr></argument>, <argument pos:start="47:77" pos:end="47:77"><expr pos:start="47:77" pos:end="47:77"><literal type="number" pos:start="47:77" pos:end="47:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:48"><expr pos:start="49:5" pos:end="49:47"><call pos:start="49:5" pos:end="49:47"><name pos:start="49:5" pos:end="49:18">av_opt_set_int</name><argument_list pos:start="49:19" pos:end="49:47">(<argument pos:start="49:20" pos:end="49:32"><expr pos:start="49:20" pos:end="49:32"><name pos:start="49:20" pos:end="49:32"><name pos:start="49:20" pos:end="49:21">oc</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:32">priv_data</name></name></expr></argument>, <argument pos:start="49:35" pos:end="49:40"><expr pos:start="49:35" pos:end="49:40"><literal type="string" pos:start="49:35" pos:end="49:40">"live"</literal></expr></argument>, <argument pos:start="49:43" pos:end="49:43"><expr pos:start="49:43" pos:end="49:43"><literal type="number" pos:start="49:43" pos:end="49:43">1</literal></expr></argument>, <argument pos:start="49:46" pos:end="49:46"><expr pos:start="49:46" pos:end="49:46"><literal type="number" pos:start="49:46" pos:end="49:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:6">oc</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:15">streams</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:28"><name pos:start="53:19" pos:end="53:19">s</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:28">streams</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:35"><expr pos:start="55:5" pos:end="55:34"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:6">oc</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:18">nb_streams</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:34"><name pos:start="55:22" pos:end="55:22">s</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:34">nb_streams</name></name></expr>;</expr_stmt>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
