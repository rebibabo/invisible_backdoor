<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7457.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">ssize_t</name></type> <name pos:start="1:9" pos:end="1:23">v9fs_list_xattr</name><parameter_list pos:start="1:24" pos:end="3:50">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:33">FsContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">ctx</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:50">char</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">path</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:35"><decl pos:start="3:25" pos:end="3:35"><type pos:start="3:25" pos:end="3:35"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:35">value</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:49"><decl pos:start="3:38" pos:end="3:49"><type pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:43">size_t</name></type> <name pos:start="3:45" pos:end="3:49">vsize</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:16">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:16">size</name> <init pos:start="7:18" pos:end="7:20">= <expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:25"><name pos:start="9:10" pos:end="9:15">buffer</name><index pos:start="9:16" pos:end="9:25">[<expr pos:start="9:17" pos:end="9:24"><name pos:start="9:17" pos:end="9:24">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">void</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:16">ovalue</name> <init pos:start="11:18" pos:end="11:24">= <expr pos:start="11:20" pos:end="11:24"><name pos:start="11:20" pos:end="11:24">value</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">XattrOperations</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:25">xops</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:20">orig_value</name></decl>, <decl pos:start="15:23" pos:end="15:39"><type ref="prev" pos:start="15:5" pos:end="15:10"><modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:39">orig_value_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:48"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">ssize_t</name></type> <name pos:start="17:13" pos:end="17:21">xattr_len</name></decl>, <decl pos:start="17:24" pos:end="17:37"><type ref="prev" pos:start="17:5" pos:end="17:11"/><name pos:start="17:24" pos:end="17:33">parsed_len</name> <init pos:start="17:35" pos:end="17:37">= <expr pos:start="17:37" pos:end="17:37"><literal type="number" pos:start="17:37" pos:end="17:37">0</literal></expr></init></decl>, <decl pos:start="17:40" pos:end="17:47"><type ref="prev" pos:start="17:5" pos:end="17:11"/><name pos:start="17:40" pos:end="17:47">attr_len</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:28">/* Get the actual len */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:63"><expr pos:start="23:5" pos:end="23:62"><name pos:start="23:5" pos:end="23:13">xattr_len</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:62"><name pos:start="23:17" pos:end="23:26">llistxattr</name><argument_list pos:start="23:27" pos:end="23:62">(<argument pos:start="23:28" pos:end="23:51"><expr pos:start="23:28" pos:end="23:51"><call pos:start="23:28" pos:end="23:51"><name pos:start="23:28" pos:end="23:32">rpath</name><argument_list pos:start="23:33" pos:end="23:51">(<argument pos:start="23:34" pos:end="23:36"><expr pos:start="23:34" pos:end="23:36"><name pos:start="23:34" pos:end="23:36">ctx</name></expr></argument>, <argument pos:start="23:39" pos:end="23:42"><expr pos:start="23:39" pos:end="23:42"><name pos:start="23:39" pos:end="23:42">path</name></expr></argument>, <argument pos:start="23:45" pos:end="23:50"><expr pos:start="23:45" pos:end="23:50"><name pos:start="23:45" pos:end="23:50">buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:54" pos:end="23:58"><expr pos:start="23:54" pos:end="23:58"><name pos:start="23:54" pos:end="23:58">value</name></expr></argument>, <argument pos:start="23:61" pos:end="23:61"><expr pos:start="23:61" pos:end="23:61"><literal type="number" pos:start="23:61" pos:end="23:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:17">xattr_len</name> <operator pos:start="25:19" pos:end="25:20">&lt;=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>)</condition> <block pos:start="25:25" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:25">

        <return pos:start="27:9" pos:end="27:25">return <expr pos:start="27:16" pos:end="27:24"><name pos:start="27:16" pos:end="27:24">xattr_len</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:54">/* Now fetch the xattr and find the actual size */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:37"><expr pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:14">orig_value</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:36"><name pos:start="35:18" pos:end="35:25">g_malloc</name><argument_list pos:start="35:26" pos:end="35:36">(<argument pos:start="35:27" pos:end="35:35"><expr pos:start="35:27" pos:end="35:35"><name pos:start="35:27" pos:end="35:35">xattr_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:76"><expr pos:start="37:5" pos:end="37:75"><name pos:start="37:5" pos:end="37:13">xattr_len</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:75"><name pos:start="37:17" pos:end="37:26">llistxattr</name><argument_list pos:start="37:27" pos:end="37:75">(<argument pos:start="37:28" pos:end="37:51"><expr pos:start="37:28" pos:end="37:51"><call pos:start="37:28" pos:end="37:51"><name pos:start="37:28" pos:end="37:32">rpath</name><argument_list pos:start="37:33" pos:end="37:51">(<argument pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><name pos:start="37:34" pos:end="37:36">ctx</name></expr></argument>, <argument pos:start="37:39" pos:end="37:42"><expr pos:start="37:39" pos:end="37:42"><name pos:start="37:39" pos:end="37:42">path</name></expr></argument>, <argument pos:start="37:45" pos:end="37:50"><expr pos:start="37:45" pos:end="37:50"><name pos:start="37:45" pos:end="37:50">buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:54" pos:end="37:63"><expr pos:start="37:54" pos:end="37:63"><name pos:start="37:54" pos:end="37:63">orig_value</name></expr></argument>, <argument pos:start="37:66" pos:end="37:74"><expr pos:start="37:66" pos:end="37:74"><name pos:start="37:66" pos:end="37:74">xattr_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:32">/* store the orig pointer */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:34"><expr pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:20">orig_value_start</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:33">orig_value</name></expr>;</expr_stmt>

    <while pos:start="45:5" pos:end="87:5">while <condition pos:start="45:11" pos:end="45:34">(<expr pos:start="45:12" pos:end="45:33"><name pos:start="45:12" pos:end="45:20">xattr_len</name> <operator pos:start="45:22" pos:end="45:22">&gt;</operator> <name pos:start="45:24" pos:end="45:33">parsed_len</name></expr>)</condition> <block pos:start="45:36" pos:end="87:5">{<block_content pos:start="47:9" pos:end="85:31">

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:12">xops</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:58"><name pos:start="47:16" pos:end="47:35">get_xattr_operations</name><argument_list pos:start="47:36" pos:end="47:58">(<argument pos:start="47:37" pos:end="47:45"><expr pos:start="47:37" pos:end="47:45"><name pos:start="47:37" pos:end="47:45"><name pos:start="47:37" pos:end="47:39">ctx</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:45">xops</name></name></expr></argument>, <argument pos:start="47:48" pos:end="47:57"><expr pos:start="47:48" pos:end="47:57"><name pos:start="47:48" pos:end="47:57">orig_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:18">(<expr pos:start="49:13" pos:end="49:17"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:17">xops</name></expr>)</condition> <block pos:start="49:20" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:28">

            <goto pos:start="51:13" pos:end="51:28">goto <name pos:start="51:18" pos:end="51:27">next_entry</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="57:9" pos:end="75:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:19">(<expr pos:start="57:13" pos:end="57:18"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:18">value</name></expr>)</condition> <block pos:start="57:21" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:73">

            <expr_stmt pos:start="59:13" pos:end="59:73"><expr pos:start="59:13" pos:end="59:72"><name pos:start="59:13" pos:end="59:16">size</name> <operator pos:start="59:18" pos:end="59:19">+=</operator> <call pos:start="59:21" pos:end="59:72"><name pos:start="59:21" pos:end="59:35"><name pos:start="59:21" pos:end="59:24">xops</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:35">listxattr</name></name><argument_list pos:start="59:36" pos:end="59:72">(<argument pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><name pos:start="59:37" pos:end="59:39">ctx</name></expr></argument>, <argument pos:start="59:42" pos:end="59:45"><expr pos:start="59:42" pos:end="59:45"><name pos:start="59:42" pos:end="59:45">path</name></expr></argument>, <argument pos:start="59:48" pos:end="59:57"><expr pos:start="59:48" pos:end="59:57"><name pos:start="59:48" pos:end="59:57">orig_value</name></expr></argument>, <argument pos:start="59:60" pos:end="59:64"><expr pos:start="59:60" pos:end="59:64"><name pos:start="59:60" pos:end="59:64">value</name></expr></argument>, <argument pos:start="59:67" pos:end="59:71"><expr pos:start="59:67" pos:end="59:71"><name pos:start="59:67" pos:end="59:71">vsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="75:9">else <block pos:start="61:16" pos:end="75:9">{<block_content pos:start="63:13" pos:end="73:26">

            <expr_stmt pos:start="63:13" pos:end="63:72"><expr pos:start="63:13" pos:end="63:71"><name pos:start="63:13" pos:end="63:16">size</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:71"><name pos:start="63:20" pos:end="63:34"><name pos:start="63:20" pos:end="63:23">xops</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:34">listxattr</name></name><argument_list pos:start="63:35" pos:end="63:71">(<argument pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><name pos:start="63:36" pos:end="63:38">ctx</name></expr></argument>, <argument pos:start="63:41" pos:end="63:44"><expr pos:start="63:41" pos:end="63:44"><name pos:start="63:41" pos:end="63:44">path</name></expr></argument>, <argument pos:start="63:47" pos:end="63:56"><expr pos:start="63:47" pos:end="63:56"><name pos:start="63:47" pos:end="63:56">orig_value</name></expr></argument>, <argument pos:start="63:59" pos:end="63:63"><expr pos:start="63:59" pos:end="63:63"><name pos:start="63:59" pos:end="63:63">value</name></expr></argument>, <argument pos:start="63:66" pos:end="63:70"><expr pos:start="63:66" pos:end="63:70"><name pos:start="63:66" pos:end="63:70">vsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="69:13"><if pos:start="65:13" pos:end="69:13">if <condition pos:start="65:16" pos:end="65:25">(<expr pos:start="65:17" pos:end="65:24"><name pos:start="65:17" pos:end="65:20">size</name> <operator pos:start="65:22" pos:end="65:22">&lt;</operator> <literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr>)</condition> <block pos:start="65:27" pos:end="69:13">{<block_content pos:start="67:17" pos:end="67:29">

                <goto pos:start="67:17" pos:end="67:29">goto <name pos:start="67:22" pos:end="67:28">err_out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:26"><expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:17">value</name> <operator pos:start="71:19" pos:end="71:20">+=</operator> <name pos:start="71:22" pos:end="71:25">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:26"><expr pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:17">vsize</name> <operator pos:start="73:19" pos:end="73:20">-=</operator> <name pos:start="73:22" pos:end="73:25">size</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<label pos:start="77:1" pos:end="77:11"><name pos:start="77:1" pos:end="77:10">next_entry</name>:</label>

        <comment type="block" pos:start="79:9" pos:end="79:32">/* Got the next entry */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:16">attr_len</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <call pos:start="81:20" pos:end="81:37"><name pos:start="81:20" pos:end="81:25">strlen</name><argument_list pos:start="81:26" pos:end="81:37">(<argument pos:start="81:27" pos:end="81:36"><expr pos:start="81:27" pos:end="81:36"><name pos:start="81:27" pos:end="81:36">orig_value</name></expr></argument>)</argument_list></call> <operator pos:start="81:39" pos:end="81:39">+</operator> <literal type="number" pos:start="81:41" pos:end="81:41">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:18">parsed_len</name> <operator pos:start="83:20" pos:end="83:21">+=</operator> <name pos:start="83:23" pos:end="83:30">attr_len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:18">orig_value</name> <operator pos:start="85:20" pos:end="85:21">+=</operator> <name pos:start="85:23" pos:end="85:30">attr_len</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:14">(<expr pos:start="89:9" pos:end="89:13"><name pos:start="89:9" pos:end="89:13">value</name></expr>)</condition> <block pos:start="89:16" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:30">

        <expr_stmt pos:start="91:9" pos:end="91:30"><expr pos:start="91:9" pos:end="91:29"><name pos:start="91:9" pos:end="91:12">size</name> <operator pos:start="91:14" pos:end="91:14">=</operator> <name pos:start="91:16" pos:end="91:20">value</name> <operator pos:start="91:22" pos:end="91:22">-</operator> <name pos:start="91:24" pos:end="91:29">ovalue</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="97:1" pos:end="97:8"><name pos:start="97:1" pos:end="97:7">err_out</name>:</label>

    <expr_stmt pos:start="99:5" pos:end="99:29"><expr pos:start="99:5" pos:end="99:28"><call pos:start="99:5" pos:end="99:28"><name pos:start="99:5" pos:end="99:10">g_free</name><argument_list pos:start="99:11" pos:end="99:28">(<argument pos:start="99:12" pos:end="99:27"><expr pos:start="99:12" pos:end="99:27"><name pos:start="99:12" pos:end="99:27">orig_value_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="101:5" pos:end="101:16">return <expr pos:start="101:12" pos:end="101:15"><name pos:start="101:12" pos:end="101:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
