<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21842.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:40"><name pos:start="1:1" pos:end="1:19">matroska_read_close</name> <argument_list pos:start="1:21" pos:end="1:40">(<argument pos:start="1:22" pos:end="1:39">AVFormatContext *s</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:13">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">MatroskaDemuxContext</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:34">matroska</name> <init pos:start="5:36" pos:end="5:49">= <expr pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:38">s</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name> <init pos:start="7:11" pos:end="7:13">= <expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:39"><if pos:start="11:5" pos:end="13:39">if <condition pos:start="11:8" pos:end="11:30">(<expr pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:16">matroska</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:29">writing_app</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:39"><block_content pos:start="13:9" pos:end="13:39">

        <expr_stmt pos:start="13:9" pos:end="13:39"><expr pos:start="13:9" pos:end="13:38"><call pos:start="13:9" pos:end="13:38"><name pos:start="13:9" pos:end="13:15">av_free</name><argument_list pos:start="13:16" pos:end="13:38">(<argument pos:start="13:17" pos:end="13:37"><expr pos:start="13:17" pos:end="13:37"><name pos:start="13:17" pos:end="13:37"><name pos:start="13:17" pos:end="13:24">matroska</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:37">writing_app</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="17:38"><if pos:start="15:5" pos:end="17:38">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:16">matroska</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:28">muxing_app</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:38"><block_content pos:start="17:9" pos:end="17:38">

        <expr_stmt pos:start="17:9" pos:end="17:38"><expr pos:start="17:9" pos:end="17:37"><call pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:15">av_free</name><argument_list pos:start="17:16" pos:end="17:37">(<argument pos:start="17:17" pos:end="17:36"><expr pos:start="17:17" pos:end="17:36"><name pos:start="17:17" pos:end="17:36"><name pos:start="17:17" pos:end="17:24">matroska</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:36">muxing_app</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:33"><if pos:start="19:5" pos:end="21:33">if <condition pos:start="19:8" pos:end="19:24">(<expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:16">matroska</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:23">index</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:33"><block_content pos:start="21:9" pos:end="21:33">

        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><call pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:15">av_free</name><argument_list pos:start="21:16" pos:end="21:32">(<argument pos:start="21:17" pos:end="21:31"><expr pos:start="21:17" pos:end="21:31"><name pos:start="21:17" pos:end="21:31"><name pos:start="21:17" pos:end="21:24">matroska</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:31">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:34">(<expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:16">matroska</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:25">packets</name></name> <operator pos:start="25:27" pos:end="25:28">!=</operator> <name pos:start="25:30" pos:end="25:33">NULL</name></expr>)</condition> <block pos:start="25:36" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:35">

        <for pos:start="27:9" pos:end="33:9">for <control pos:start="27:13" pos:end="27:51">(<init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">n</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:46"><expr pos:start="27:21" pos:end="27:45"><name pos:start="27:21" pos:end="27:21">n</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <name pos:start="27:25" pos:end="27:45"><name pos:start="27:25" pos:end="27:32">matroska</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:45">num_packets</name></name></expr>;</condition> <incr pos:start="27:48" pos:end="27:50"><expr pos:start="27:48" pos:end="27:50"><name pos:start="27:48" pos:end="27:48">n</name><operator pos:start="27:49" pos:end="27:50">++</operator></expr></incr>)</control> <block pos:start="27:53" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:42">

            <expr_stmt pos:start="29:13" pos:end="29:49"><expr pos:start="29:13" pos:end="29:48"><call pos:start="29:13" pos:end="29:48"><name pos:start="29:13" pos:end="29:26">av_free_packet</name><argument_list pos:start="29:27" pos:end="29:48">(<argument pos:start="29:28" pos:end="29:47"><expr pos:start="29:28" pos:end="29:47"><name pos:start="29:28" pos:end="29:47"><name pos:start="29:28" pos:end="29:35">matroska</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:44">packets</name><index pos:start="29:45" pos:end="29:47">[<expr pos:start="29:46" pos:end="29:46"><name pos:start="29:46" pos:end="29:46">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:42"><expr pos:start="31:13" pos:end="31:41"><call pos:start="31:13" pos:end="31:41"><name pos:start="31:13" pos:end="31:19">av_free</name><argument_list pos:start="31:20" pos:end="31:41">(<argument pos:start="31:21" pos:end="31:40"><expr pos:start="31:21" pos:end="31:40"><name pos:start="31:21" pos:end="31:40"><name pos:start="31:21" pos:end="31:28">matroska</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:37">packets</name><index pos:start="31:38" pos:end="31:40">[<expr pos:start="31:39" pos:end="31:39"><name pos:start="31:39" pos:end="31:39">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><call pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:15">av_free</name><argument_list pos:start="35:16" pos:end="35:34">(<argument pos:start="35:17" pos:end="35:33"><expr pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:24">matroska</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:33">packets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="41:5" pos:end="69:5">for <control pos:start="41:9" pos:end="41:46">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">n</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:41"><expr pos:start="41:17" pos:end="41:40"><name pos:start="41:17" pos:end="41:17">n</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:40"><name pos:start="41:21" pos:end="41:28">matroska</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:40">num_tracks</name></name></expr>;</condition> <incr pos:start="41:43" pos:end="41:45"><expr pos:start="41:43" pos:end="41:45"><name pos:start="41:43" pos:end="41:43">n</name><operator pos:start="41:44" pos:end="41:45">++</operator></expr></incr>)</control> <block pos:start="41:48" pos:end="69:5">{<block_content pos:start="43:9" pos:end="67:23">

        <decl_stmt pos:start="43:9" pos:end="43:51"><decl pos:start="43:9" pos:end="43:50"><type pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:21">MatroskaTrack</name> <modifier pos:start="43:23" pos:end="43:23">*</modifier></type><name pos:start="43:24" pos:end="43:28">track</name> <init pos:start="43:30" pos:end="43:50">= <expr pos:start="43:32" pos:end="43:50"><name pos:start="43:32" pos:end="43:50"><name pos:start="43:32" pos:end="43:39">matroska</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:47">tracks</name><index pos:start="43:48" pos:end="43:50">[<expr pos:start="43:49" pos:end="43:49"><name pos:start="43:49" pos:end="43:49">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="47:37"><if pos:start="45:9" pos:end="47:37">if <condition pos:start="45:12" pos:end="45:28">(<expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:17">track</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:27">codec_id</name></name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:37"><block_content pos:start="47:13" pos:end="47:37">

            <expr_stmt pos:start="47:13" pos:end="47:37"><expr pos:start="47:13" pos:end="47:36"><call pos:start="47:13" pos:end="47:36"><name pos:start="47:13" pos:end="47:19">av_free</name><argument_list pos:start="47:20" pos:end="47:36">(<argument pos:start="47:21" pos:end="47:35"><expr pos:start="47:21" pos:end="47:35"><name pos:start="47:21" pos:end="47:35"><name pos:start="47:21" pos:end="47:25">track</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:35">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="51:39"><if pos:start="49:9" pos:end="51:39">if <condition pos:start="49:12" pos:end="49:30">(<expr pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:17">track</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:29">codec_name</name></name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:39"><block_content pos:start="51:13" pos:end="51:39">

            <expr_stmt pos:start="51:13" pos:end="51:39"><expr pos:start="51:13" pos:end="51:38"><call pos:start="51:13" pos:end="51:38"><name pos:start="51:13" pos:end="51:19">av_free</name><argument_list pos:start="51:20" pos:end="51:38">(<argument pos:start="51:21" pos:end="51:37"><expr pos:start="51:21" pos:end="51:37"><name pos:start="51:21" pos:end="51:37"><name pos:start="51:21" pos:end="51:25">track</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:37">codec_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="55:39"><if pos:start="53:9" pos:end="55:39">if <condition pos:start="53:12" pos:end="53:30">(<expr pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:17">track</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:29">codec_priv</name></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:39"><block_content pos:start="55:13" pos:end="55:39">

            <expr_stmt pos:start="55:13" pos:end="55:39"><expr pos:start="55:13" pos:end="55:38"><call pos:start="55:13" pos:end="55:38"><name pos:start="55:13" pos:end="55:19">av_free</name><argument_list pos:start="55:20" pos:end="55:38">(<argument pos:start="55:21" pos:end="55:37"><expr pos:start="55:21" pos:end="55:37"><name pos:start="55:21" pos:end="55:37"><name pos:start="55:21" pos:end="55:25">track</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:37">codec_priv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="59:33"><if pos:start="57:9" pos:end="59:33">if <condition pos:start="57:12" pos:end="57:24">(<expr pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:17">track</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:23">name</name></name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:33"><block_content pos:start="59:13" pos:end="59:33">

            <expr_stmt pos:start="59:13" pos:end="59:33"><expr pos:start="59:13" pos:end="59:32"><call pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:19">av_free</name><argument_list pos:start="59:20" pos:end="59:32">(<argument pos:start="59:21" pos:end="59:31"><expr pos:start="59:21" pos:end="59:31"><name pos:start="59:21" pos:end="59:31"><name pos:start="59:21" pos:end="59:25">track</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:31">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="63:37"><if pos:start="61:9" pos:end="63:37">if <condition pos:start="61:12" pos:end="61:28">(<expr pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:17">track</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:27">language</name></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:37"><block_content pos:start="63:13" pos:end="63:37">

            <expr_stmt pos:start="63:13" pos:end="63:37"><expr pos:start="63:13" pos:end="63:36"><call pos:start="63:13" pos:end="63:36"><name pos:start="63:13" pos:end="63:19">av_free</name><argument_list pos:start="63:20" pos:end="63:36">(<argument pos:start="63:21" pos:end="63:35"><expr pos:start="63:21" pos:end="63:35"><name pos:start="63:21" pos:end="63:35"><name pos:start="63:21" pos:end="63:25">track</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:35">language</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:23"><expr pos:start="67:9" pos:end="67:22"><call pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:15">av_free</name><argument_list pos:start="67:16" pos:end="67:22">(<argument pos:start="67:17" pos:end="67:21"><expr pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:21">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="73:5" pos:end="73:54"><expr pos:start="73:5" pos:end="73:53"><call pos:start="73:5" pos:end="73:53"><name pos:start="73:5" pos:end="73:10">memset</name><argument_list pos:start="73:11" pos:end="73:53">(<argument pos:start="73:12" pos:end="73:19"><expr pos:start="73:12" pos:end="73:19"><name pos:start="73:12" pos:end="73:19">matroska</name></expr></argument>, <argument pos:start="73:22" pos:end="73:22"><expr pos:start="73:22" pos:end="73:22"><literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr></argument>, <argument pos:start="73:25" pos:end="73:52"><expr pos:start="73:25" pos:end="73:52"><sizeof pos:start="73:25" pos:end="73:52">sizeof<argument_list pos:start="73:31" pos:end="73:52">(<argument pos:start="73:32" pos:end="73:51"><expr pos:start="73:32" pos:end="73:51"><name pos:start="73:32" pos:end="73:51">MatroskaDemuxContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

</block_content>}</block>
</unit>
