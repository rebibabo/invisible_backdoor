<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7023.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">proxy_parse_opts</name><parameter_list pos:start="1:28" pos:end="1:69">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:36">QemuOpts</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">opts</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:68"><decl pos:start="1:45" pos:end="1:68"><type pos:start="1:45" pos:end="1:68"><name pos:start="1:45" pos:end="1:64"><name pos:start="1:45" pos:end="1:50">struct</name> <name pos:start="1:52" pos:end="1:64">FsDriverEntry</name></name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">fs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:13">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:22">socket</name> <init pos:start="5:24" pos:end="5:53">= <expr pos:start="5:26" pos:end="5:53"><call pos:start="5:26" pos:end="5:53"><name pos:start="5:26" pos:end="5:37">qemu_opt_get</name><argument_list pos:start="5:38" pos:end="5:53">(<argument pos:start="5:39" pos:end="5:42"><expr pos:start="5:39" pos:end="5:42"><name pos:start="5:39" pos:end="5:42">opts</name></expr></argument>, <argument pos:start="5:45" pos:end="5:52"><expr pos:start="5:45" pos:end="5:52"><literal type="string" pos:start="5:45" pos:end="5:52">"socket"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:23">sock_fd</name> <init pos:start="7:25" pos:end="7:55">= <expr pos:start="7:27" pos:end="7:55"><call pos:start="7:27" pos:end="7:55"><name pos:start="7:27" pos:end="7:38">qemu_opt_get</name><argument_list pos:start="7:39" pos:end="7:55">(<argument pos:start="7:40" pos:end="7:43"><expr pos:start="7:40" pos:end="7:43"><name pos:start="7:40" pos:end="7:43">opts</name></expr></argument>, <argument pos:start="7:46" pos:end="7:54"><expr pos:start="7:46" pos:end="7:54"><literal type="string" pos:start="7:46" pos:end="7:54">"sock_fd"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:28">(<expr pos:start="11:9" pos:end="11:27"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:15">socket</name> <operator pos:start="11:17" pos:end="11:18">&amp;&amp;</operator> <operator pos:start="11:20" pos:end="11:20">!</operator><name pos:start="11:21" pos:end="11:27">sock_fd</name></expr>)</condition> <block pos:start="11:30" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:77"><expr pos:start="13:9" pos:end="13:76"><call pos:start="13:9" pos:end="13:76"><name pos:start="13:9" pos:end="13:15">fprintf</name><argument_list pos:start="13:16" pos:end="13:76">(<argument pos:start="13:17" pos:end="13:22"><expr pos:start="13:17" pos:end="13:22"><name pos:start="13:17" pos:end="13:22">stderr</name></expr></argument>, <argument pos:start="13:25" pos:end="13:75"><expr pos:start="13:25" pos:end="13:75"><literal type="string" pos:start="13:25" pos:end="13:75">"socket and sock_fd none of the option specified\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:26">(<expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:14">socket</name> <operator pos:start="19:16" pos:end="19:17">&amp;&amp;</operator> <name pos:start="19:19" pos:end="19:25">sock_fd</name></expr>)</condition> <block pos:start="19:28" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:71"><expr pos:start="21:9" pos:end="21:70"><call pos:start="21:9" pos:end="21:70"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="21:70">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">stderr</name></expr></argument>, <argument pos:start="21:25" pos:end="21:69"><expr pos:start="21:25" pos:end="21:69"><literal type="string" pos:start="21:25" pos:end="21:69">"Both socket and sock_fd options specified\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:15">(<expr pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:14">socket</name></expr>)</condition> <block pos:start="27:17" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:48">

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:10">fs</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:16">path</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:35"><name pos:start="29:20" pos:end="29:27">g_strdup</name><argument_list pos:start="29:28" pos:end="29:35">(<argument pos:start="29:29" pos:end="29:34"><expr pos:start="29:29" pos:end="29:34"><name pos:start="29:29" pos:end="29:34">socket</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:48"><expr pos:start="31:9" pos:end="31:47"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:10">fs</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:24">export_flags</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:47">V9FS_PROXY_SOCK_NAME</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="39:5">else <block pos:start="33:12" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:46">

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:10">fs</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:16">path</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:36"><name pos:start="35:20" pos:end="35:27">g_strdup</name><argument_list pos:start="35:28" pos:end="35:36">(<argument pos:start="35:29" pos:end="35:35"><expr pos:start="35:29" pos:end="35:35"><name pos:start="35:29" pos:end="35:35">sock_fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:10">fs</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:24">export_flags</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:45">V9FS_PROXY_SOCK_FD</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
