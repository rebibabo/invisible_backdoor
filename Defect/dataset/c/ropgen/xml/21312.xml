<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21312.c" pos:tabs="8"><function pos:start="1:1" pos:end="581:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vc1_decode_p_mb</name><parameter_list pos:start="1:27" pos:end="1:41">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:37">VC1Context</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="581:1">{<block_content pos:start="5:5" pos:end="579:14">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">mb_pos</name> <init pos:start="11:16" pos:end="11:49">= <expr pos:start="11:18" pos:end="11:49"><name pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:18">s</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:24">mb_x</name></name> <operator pos:start="11:26" pos:end="11:26">+</operator> <name pos:start="11:28" pos:end="11:34"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:34">mb_y</name></name> <operator pos:start="11:36" pos:end="11:36">*</operator> <name pos:start="11:38" pos:end="11:49"><name pos:start="11:38" pos:end="11:38">s</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:49">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">cbp</name></decl>;</decl_stmt> <comment type="block" pos:start="13:14" pos:end="13:37">/* cbp decoding stuff */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">mqdiff</name></decl>, <decl pos:start="15:17" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:22">mquant</name></decl>;</decl_stmt> <comment type="block" pos:start="15:25" pos:end="15:45">/* MB quantization */</comment>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">ttmb</name> <init pos:start="17:14" pos:end="17:23">= <expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:16">v</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:23">ttfrm</name></name></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="17:26" pos:end="17:48">/* MB Transform type */</comment>



    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:21">mb_has_coeffs</name> <init pos:start="21:23" pos:end="21:25">= <expr pos:start="21:25" pos:end="21:25"><literal type="number" pos:start="21:25" pos:end="21:25">1</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="21:28" pos:end="21:42">/* last_flag */</comment>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">dmv_x</name></decl>, <decl pos:start="23:16" pos:end="23:20"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:16" pos:end="23:20">dmv_y</name></decl>;</decl_stmt> <comment type="block" pos:start="23:23" pos:end="23:54">/* Differential MV components */</comment>

    <decl_stmt pos:start="25:5" pos:end="25:22"><decl pos:start="25:5" pos:end="25:13"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:13">index</name></decl>, <decl pos:start="25:16" pos:end="25:21"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:16" pos:end="25:21">index1</name></decl>;</decl_stmt> <comment type="block" pos:start="25:24" pos:end="25:40">/* LUT indexes */</comment>

    <decl_stmt pos:start="27:5" pos:end="27:18"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">val</name></decl>, <decl pos:start="27:14" pos:end="27:17"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:14" pos:end="27:17">sign</name></decl>;</decl_stmt> <comment type="block" pos:start="27:20" pos:end="27:36">/* temp values */</comment>

    <decl_stmt pos:start="29:5" pos:end="29:24"><decl pos:start="29:5" pos:end="29:23"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:19">first_block</name> <init pos:start="29:21" pos:end="29:23">= <expr pos:start="29:23" pos:end="29:23"><literal type="number" pos:start="29:23" pos:end="29:23">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:21"><decl pos:start="31:5" pos:end="31:15"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:15">dst_idx</name></decl>, <decl pos:start="31:18" pos:end="31:20"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:18" pos:end="31:20">off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:24"><decl pos:start="33:5" pos:end="33:15"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:15">skipped</name></decl>, <decl pos:start="33:18" pos:end="33:23"><type ref="prev" pos:start="33:5" pos:end="33:7"/><name pos:start="33:18" pos:end="33:23">fourmv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:27"><decl pos:start="35:5" pos:end="35:21"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:17">block_cbp</name> <init pos:start="35:19" pos:end="35:21">= <expr pos:start="35:21" pos:end="35:21"><literal type="number" pos:start="35:21" pos:end="35:21">0</literal></expr></init></decl>, <decl pos:start="35:24" pos:end="35:26"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:24" pos:end="35:26">pat</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:26"><decl pos:start="37:5" pos:end="37:25"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:25">apply_loop_filter</name></decl>;</decl_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:19"><expr pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:10">mquant</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">v</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:18">pq</name></name></expr>;</expr_stmt> <comment type="block" pos:start="41:21" pos:end="41:46">/* Loosy initialization */</comment>



    <if_stmt pos:start="45:5" pos:end="51:45"><if pos:start="45:5" pos:end="47:31">if <condition pos:start="45:8" pos:end="45:26">(<expr pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:9">v</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:25">mv_type_is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:31"><block_content pos:start="47:9" pos:end="47:31">

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:14">fourmv</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:30"><name pos:start="47:18" pos:end="47:26">get_bits1</name><argument_list pos:start="47:27" pos:end="47:30">(<argument pos:start="47:28" pos:end="47:29"><expr pos:start="47:28" pos:end="47:29"><name pos:start="47:28" pos:end="47:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="49:5" pos:end="51:45">else<block type="pseudo" pos:start="51:9" pos:end="51:45"><block_content pos:start="51:9" pos:end="51:45">

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:14">fourmv</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <name pos:start="51:18" pos:end="51:44"><name pos:start="51:18" pos:end="51:18">v</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:36">mv_type_mb_plane</name><index pos:start="51:37" pos:end="51:44">[<expr pos:start="51:38" pos:end="51:43"><name pos:start="51:38" pos:end="51:43">mb_pos</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="53:5" pos:end="59:44"><if pos:start="53:5" pos:end="55:32">if <condition pos:start="53:8" pos:end="53:23">(<expr pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:9">v</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:22">skip_is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:32"><block_content pos:start="55:9" pos:end="55:32">

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:15">skipped</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:31"><name pos:start="55:19" pos:end="55:27">get_bits1</name><argument_list pos:start="55:28" pos:end="55:31">(<argument pos:start="55:29" pos:end="55:30"><expr pos:start="55:29" pos:end="55:30"><name pos:start="55:29" pos:end="55:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="57:5" pos:end="59:44">else<block type="pseudo" pos:start="59:9" pos:end="59:44"><block_content pos:start="59:9" pos:end="59:44">

        <expr_stmt pos:start="59:9" pos:end="59:44"><expr pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:15">skipped</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:43"><name pos:start="59:19" pos:end="59:19">v</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:22">s</name><operator pos:start="59:23" pos:end="59:23">.</operator><name pos:start="59:24" pos:end="59:35">mbskip_table</name><index pos:start="59:36" pos:end="59:43">[<expr pos:start="59:37" pos:end="59:42"><name pos:start="59:37" pos:end="59:42">mb_pos</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><call pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:23"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:10">dsp</name><operator pos:start="63:11" pos:end="63:11">.</operator><name pos:start="63:12" pos:end="63:23">clear_blocks</name></name><argument_list pos:start="63:24" pos:end="63:36">(<argument pos:start="63:25" pos:end="63:35"><expr pos:start="63:25" pos:end="63:35"><name pos:start="63:25" pos:end="63:35"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:32">block</name><index pos:start="63:33" pos:end="63:35">[<expr pos:start="63:34" pos:end="63:34"><literal type="number" pos:start="63:34" pos:end="63:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:92"><expr pos:start="67:5" pos:end="67:91"><name pos:start="67:5" pos:end="67:21">apply_loop_filter</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:38"><name pos:start="67:25" pos:end="67:25">s</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:38">loop_filter</name></name> <operator pos:start="67:40" pos:end="67:41">&amp;&amp;</operator> <operator pos:start="67:43" pos:end="67:43">!</operator><operator pos:start="67:44" pos:end="67:44">(</operator><name pos:start="67:45" pos:end="67:70"><name pos:start="67:45" pos:end="67:45">s</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:52">avctx</name><operator pos:start="67:53" pos:end="67:54">-&gt;</operator><name pos:start="67:55" pos:end="67:70">skip_loop_filter</name></name> <operator pos:start="67:72" pos:end="67:73">&gt;=</operator> <name pos:start="67:75" pos:end="67:90">AVDISCARD_NONKEY</name><operator pos:start="67:91" pos:end="67:91">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="571:5"><if pos:start="69:5" pos:end="299:5">if <condition pos:start="69:8" pos:end="69:16">(<expr pos:start="69:9" pos:end="69:15"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:15">fourmv</name></expr>)</condition> <comment type="block" pos:start="69:18" pos:end="69:31">/* 1MV mode */</comment>

    <block pos:start="71:5" pos:end="299:5">{<block_content pos:start="73:9" pos:end="297:9">

        <if_stmt pos:start="73:9" pos:end="297:9"><if pos:start="73:9" pos:end="271:9">if <condition pos:start="73:12" pos:end="73:21">(<expr pos:start="73:13" pos:end="73:20"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:20">skipped</name></expr>)</condition>

        <block pos:start="75:9" pos:end="271:9">{<block_content pos:start="77:13" pos:end="269:13">

            <expr_stmt pos:start="77:13" pos:end="77:37"><expr pos:start="77:13" pos:end="77:36"><call pos:start="77:13" pos:end="77:36"><name pos:start="77:13" pos:end="77:22">GET_MVDATA</name><argument_list pos:start="77:23" pos:end="77:36">(<argument pos:start="77:24" pos:end="77:28"><expr pos:start="77:24" pos:end="77:28"><name pos:start="77:24" pos:end="77:28">dmv_x</name></expr></argument>, <argument pos:start="77:31" pos:end="77:35"><expr pos:start="77:31" pos:end="77:35"><name pos:start="77:31" pos:end="77:35">dmv_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="81:13" pos:end="87:13"><if pos:start="81:13" pos:end="87:13">if <condition pos:start="81:16" pos:end="81:28">(<expr pos:start="81:17" pos:end="81:27"><name pos:start="81:17" pos:end="81:27"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:27">mb_intra</name></name></expr>)</condition> <block pos:start="81:30" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:75">

                <expr_stmt pos:start="83:17" pos:end="83:75"><expr pos:start="83:17" pos:end="83:74"><name pos:start="83:17" pos:end="83:70"><name pos:start="83:17" pos:end="83:17">s</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:34">current_picture</name><operator pos:start="83:35" pos:end="83:35">.</operator><name pos:start="83:36" pos:end="83:45">motion_val</name><index pos:start="83:46" pos:end="83:48">[<expr pos:start="83:47" pos:end="83:47"><literal type="number" pos:start="83:47" pos:end="83:47">1</literal></expr>]</index><index pos:start="83:49" pos:end="83:67">[<expr pos:start="83:50" pos:end="83:66"><name pos:start="83:50" pos:end="83:66"><name pos:start="83:50" pos:end="83:50">s</name><operator pos:start="83:51" pos:end="83:52">-&gt;</operator><name pos:start="83:53" pos:end="83:63">block_index</name><index pos:start="83:64" pos:end="83:66">[<expr pos:start="83:65" pos:end="83:65"><literal type="number" pos:start="83:65" pos:end="83:65">0</literal></expr>]</index></name></expr>]</index><index pos:start="83:68" pos:end="83:70">[<expr pos:start="83:69" pos:end="83:69"><literal type="number" pos:start="83:69" pos:end="83:69">0</literal></expr>]</index></name> <operator pos:start="83:72" pos:end="83:72">=</operator> <literal type="number" pos:start="83:74" pos:end="83:74">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:75"><expr pos:start="85:17" pos:end="85:74"><name pos:start="85:17" pos:end="85:70"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:34">current_picture</name><operator pos:start="85:35" pos:end="85:35">.</operator><name pos:start="85:36" pos:end="85:45">motion_val</name><index pos:start="85:46" pos:end="85:48">[<expr pos:start="85:47" pos:end="85:47"><literal type="number" pos:start="85:47" pos:end="85:47">1</literal></expr>]</index><index pos:start="85:49" pos:end="85:67">[<expr pos:start="85:50" pos:end="85:66"><name pos:start="85:50" pos:end="85:66"><name pos:start="85:50" pos:end="85:50">s</name><operator pos:start="85:51" pos:end="85:52">-&gt;</operator><name pos:start="85:53" pos:end="85:63">block_index</name><index pos:start="85:64" pos:end="85:66">[<expr pos:start="85:65" pos:end="85:65"><literal type="number" pos:start="85:65" pos:end="85:65">0</literal></expr>]</index></name></expr>]</index><index pos:start="85:68" pos:end="85:70">[<expr pos:start="85:69" pos:end="85:69"><literal type="number" pos:start="85:69" pos:end="85:69">1</literal></expr>]</index></name> <operator pos:start="85:72" pos:end="85:72">=</operator> <literal type="number" pos:start="85:74" pos:end="85:74">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:93"><expr pos:start="89:13" pos:end="89:92"><name pos:start="89:13" pos:end="89:46"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:30">current_picture</name><operator pos:start="89:31" pos:end="89:31">.</operator><name pos:start="89:32" pos:end="89:38">mb_type</name><index pos:start="89:39" pos:end="89:46">[<expr pos:start="89:40" pos:end="89:45"><name pos:start="89:40" pos:end="89:45">mb_pos</name></expr>]</index></name> <operator pos:start="89:48" pos:end="89:48">=</operator> <ternary pos:start="89:50" pos:end="89:92"><condition pos:start="89:50" pos:end="89:62"><expr pos:start="89:50" pos:end="89:60"><name pos:start="89:50" pos:end="89:60"><name pos:start="89:50" pos:end="89:50">s</name><operator pos:start="89:51" pos:end="89:52">-&gt;</operator><name pos:start="89:53" pos:end="89:60">mb_intra</name></name></expr> ?</condition><then pos:start="89:64" pos:end="89:76"> <expr pos:start="89:64" pos:end="89:76"><name pos:start="89:64" pos:end="89:76">MB_TYPE_INTRA</name></expr> </then><else pos:start="89:78" pos:end="89:92">: <expr pos:start="89:80" pos:end="89:92"><name pos:start="89:80" pos:end="89:92">MB_TYPE_16x16</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:86"><expr pos:start="91:13" pos:end="91:85"><call pos:start="91:13" pos:end="91:85"><name pos:start="91:13" pos:end="91:23">vc1_pred_mv</name><argument_list pos:start="91:24" pos:end="91:85">(<argument pos:start="91:25" pos:end="91:25"><expr pos:start="91:25" pos:end="91:25"><name pos:start="91:25" pos:end="91:25">s</name></expr></argument>, <argument pos:start="91:28" pos:end="91:28"><expr pos:start="91:28" pos:end="91:28"><literal type="number" pos:start="91:28" pos:end="91:28">0</literal></expr></argument>, <argument pos:start="91:31" pos:end="91:35"><expr pos:start="91:31" pos:end="91:35"><name pos:start="91:31" pos:end="91:35">dmv_x</name></expr></argument>, <argument pos:start="91:38" pos:end="91:42"><expr pos:start="91:38" pos:end="91:42"><name pos:start="91:38" pos:end="91:42">dmv_y</name></expr></argument>, <argument pos:start="91:45" pos:end="91:45"><expr pos:start="91:45" pos:end="91:45"><literal type="number" pos:start="91:45" pos:end="91:45">1</literal></expr></argument>, <argument pos:start="91:48" pos:end="91:57"><expr pos:start="91:48" pos:end="91:57"><name pos:start="91:48" pos:end="91:57"><name pos:start="91:48" pos:end="91:48">v</name><operator pos:start="91:49" pos:end="91:50">-&gt;</operator><name pos:start="91:51" pos:end="91:57">range_x</name></name></expr></argument>, <argument pos:start="91:60" pos:end="91:69"><expr pos:start="91:60" pos:end="91:69"><name pos:start="91:60" pos:end="91:69"><name pos:start="91:60" pos:end="91:60">v</name><operator pos:start="91:61" pos:end="91:62">-&gt;</operator><name pos:start="91:63" pos:end="91:69">range_y</name></name></expr></argument>, <argument pos:start="91:72" pos:end="91:84"><expr pos:start="91:72" pos:end="91:84"><name pos:start="91:72" pos:end="91:84"><name pos:start="91:72" pos:end="91:72">v</name><operator pos:start="91:73" pos:end="91:74">-&gt;</operator><name pos:start="91:75" pos:end="91:81">mb_type</name><index pos:start="91:82" pos:end="91:84">[<expr pos:start="91:83" pos:end="91:83"><literal type="number" pos:start="91:83" pos:end="91:83">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="95:13" pos:end="95:52">/* FIXME Set DC val for inter block ? */</comment>

            <if_stmt pos:start="97:13" pos:end="129:13"><if pos:start="97:13" pos:end="107:13">if <condition pos:start="97:16" pos:end="97:46">(<expr pos:start="97:17" pos:end="97:45"><name pos:start="97:17" pos:end="97:27"><name pos:start="97:17" pos:end="97:17">s</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:27">mb_intra</name></name> <operator pos:start="97:29" pos:end="97:30">&amp;&amp;</operator> <operator pos:start="97:32" pos:end="97:32">!</operator><name pos:start="97:33" pos:end="97:45">mb_has_coeffs</name></expr>)</condition>

            <block pos:start="99:13" pos:end="107:13">{<block_content pos:start="101:17" pos:end="105:24">

                <expr_stmt pos:start="101:17" pos:end="101:29"><expr pos:start="101:17" pos:end="101:28"><call pos:start="101:17" pos:end="101:28"><name pos:start="101:17" pos:end="101:26">GET_MQUANT</name><argument_list pos:start="101:27" pos:end="101:28">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:43"><expr pos:start="103:17" pos:end="103:42"><name pos:start="103:17" pos:end="103:26"><name pos:start="103:17" pos:end="103:17">s</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:26">ac_pred</name></name> <operator pos:start="103:28" pos:end="103:28">=</operator> <call pos:start="103:30" pos:end="103:42"><name pos:start="103:30" pos:end="103:38">get_bits1</name><argument_list pos:start="103:39" pos:end="103:42">(<argument pos:start="103:40" pos:end="103:41"><expr pos:start="103:40" pos:end="103:41"><name pos:start="103:40" pos:end="103:41">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:24"><expr pos:start="105:17" pos:end="105:23"><name pos:start="105:17" pos:end="105:19">cbp</name> <operator pos:start="105:21" pos:end="105:21">=</operator> <literal type="number" pos:start="105:23" pos:end="105:23">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <if type="elseif" pos:start="109:13" pos:end="119:13">else if <condition pos:start="109:21" pos:end="109:35">(<expr pos:start="109:22" pos:end="109:34"><name pos:start="109:22" pos:end="109:34">mb_has_coeffs</name></expr>)</condition>

            <block pos:start="111:13" pos:end="119:13">{<block_content pos:start="113:17" pos:end="117:29">

                <if_stmt pos:start="113:17" pos:end="113:60"><if pos:start="113:17" pos:end="113:60">if <condition pos:start="113:20" pos:end="113:32">(<expr pos:start="113:21" pos:end="113:31"><name pos:start="113:21" pos:end="113:31"><name pos:start="113:21" pos:end="113:21">s</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:31">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="113:34" pos:end="113:60"><block_content pos:start="113:34" pos:end="113:60"> <expr_stmt pos:start="113:34" pos:end="113:60"><expr pos:start="113:34" pos:end="113:59"><name pos:start="113:34" pos:end="113:43"><name pos:start="113:34" pos:end="113:34">s</name><operator pos:start="113:35" pos:end="113:36">-&gt;</operator><name pos:start="113:37" pos:end="113:43">ac_pred</name></name> <operator pos:start="113:45" pos:end="113:45">=</operator> <call pos:start="113:47" pos:end="113:59"><name pos:start="113:47" pos:end="113:55">get_bits1</name><argument_list pos:start="113:56" pos:end="113:59">(<argument pos:start="113:57" pos:end="113:58"><expr pos:start="113:57" pos:end="113:58"><name pos:start="113:57" pos:end="113:58">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:87"><expr pos:start="115:17" pos:end="115:86"><name pos:start="115:17" pos:end="115:19">cbp</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <call pos:start="115:23" pos:end="115:86"><name pos:start="115:23" pos:end="115:30">get_vlc2</name><argument_list pos:start="115:31" pos:end="115:86">(<argument pos:start="115:32" pos:end="115:39"><expr pos:start="115:32" pos:end="115:39"><operator pos:start="115:32" pos:end="115:32">&amp;</operator><name pos:start="115:33" pos:end="115:39"><name pos:start="115:33" pos:end="115:33">v</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:36">s</name><operator pos:start="115:37" pos:end="115:37">.</operator><name pos:start="115:38" pos:end="115:39">gb</name></name></expr></argument>, <argument pos:start="115:42" pos:end="115:60"><expr pos:start="115:42" pos:end="115:60"><name pos:start="115:42" pos:end="115:60"><name pos:start="115:42" pos:end="115:42">v</name><operator pos:start="115:43" pos:end="115:44">-&gt;</operator><name pos:start="115:45" pos:end="115:53">cbpcy_vlc</name><operator pos:start="115:54" pos:end="115:55">-&gt;</operator><name pos:start="115:56" pos:end="115:60">table</name></name></expr></argument>, <argument pos:start="115:63" pos:end="115:82"><expr pos:start="115:63" pos:end="115:82"><name pos:start="115:63" pos:end="115:82">VC1_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="115:85" pos:end="115:85"><expr pos:start="115:85" pos:end="115:85"><literal type="number" pos:start="115:85" pos:end="115:85">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:29"><expr pos:start="117:17" pos:end="117:28"><call pos:start="117:17" pos:end="117:28"><name pos:start="117:17" pos:end="117:26">GET_MQUANT</name><argument_list pos:start="117:27" pos:end="117:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="121:13" pos:end="129:13">else

            <block pos:start="123:13" pos:end="129:13">{<block_content pos:start="125:17" pos:end="127:24">

                <expr_stmt pos:start="125:17" pos:end="125:31"><expr pos:start="125:17" pos:end="125:30"><name pos:start="125:17" pos:end="125:22">mquant</name> <operator pos:start="125:24" pos:end="125:24">=</operator> <name pos:start="125:26" pos:end="125:30"><name pos:start="125:26" pos:end="125:26">v</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:30">pq</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:24"><expr pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:19">cbp</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <literal type="number" pos:start="127:23" pos:end="127:23">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:61"><expr pos:start="131:13" pos:end="131:60"><name pos:start="131:13" pos:end="131:51"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:30">current_picture</name><operator pos:start="131:31" pos:end="131:31">.</operator><name pos:start="131:32" pos:end="131:43">qscale_table</name><index pos:start="131:44" pos:end="131:51">[<expr pos:start="131:45" pos:end="131:50"><name pos:start="131:45" pos:end="131:50">mb_pos</name></expr>]</index></name> <operator pos:start="131:53" pos:end="131:53">=</operator> <name pos:start="131:55" pos:end="131:60">mquant</name></expr>;</expr_stmt>



            <if_stmt pos:start="135:13" pos:end="139:54"><if pos:start="135:13" pos:end="139:54">if <condition pos:start="135:16" pos:end="135:59">(<expr pos:start="135:17" pos:end="135:58"><operator pos:start="135:17" pos:end="135:17">!</operator><name pos:start="135:18" pos:end="135:25"><name pos:start="135:18" pos:end="135:18">v</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:25">ttmbf</name></name> <operator pos:start="135:27" pos:end="135:28">&amp;&amp;</operator> <operator pos:start="135:30" pos:end="135:30">!</operator><name pos:start="135:31" pos:end="135:41"><name pos:start="135:31" pos:end="135:31">s</name><operator pos:start="135:32" pos:end="135:33">-&gt;</operator><name pos:start="135:34" pos:end="135:41">mb_intra</name></name> <operator pos:start="135:43" pos:end="135:44">&amp;&amp;</operator> <name pos:start="135:46" pos:end="135:58">mb_has_coeffs</name></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="139:54"><block_content pos:start="137:17" pos:end="139:54">

                <expr_stmt pos:start="137:17" pos:end="139:54"><expr pos:start="137:17" pos:end="139:53"><name pos:start="137:17" pos:end="137:20">ttmb</name> <operator pos:start="137:22" pos:end="137:22">=</operator> <call pos:start="137:24" pos:end="139:53"><name pos:start="137:24" pos:end="137:31">get_vlc2</name><argument_list pos:start="137:32" pos:end="139:53">(<argument pos:start="137:33" pos:end="137:34"><expr pos:start="137:33" pos:end="137:34"><name pos:start="137:33" pos:end="137:34">gb</name></expr></argument>, <argument pos:start="137:37" pos:end="137:70"><expr pos:start="137:37" pos:end="137:70"><name pos:start="137:37" pos:end="137:64"><name pos:start="137:37" pos:end="137:51">ff_vc1_ttmb_vlc</name><index pos:start="137:52" pos:end="137:64">[<expr pos:start="137:53" pos:end="137:63"><name pos:start="137:53" pos:end="137:63"><name pos:start="137:53" pos:end="137:53">v</name><operator pos:start="137:54" pos:end="137:55">-&gt;</operator><name pos:start="137:56" pos:end="137:63">tt_index</name></name></expr>]</index></name><operator pos:start="137:65" pos:end="137:65">.</operator><name pos:start="137:66" pos:end="137:70">table</name></expr></argument>,

                                <argument pos:start="139:33" pos:end="139:49"><expr pos:start="139:33" pos:end="139:49"><name pos:start="139:33" pos:end="139:49">VC1_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="139:52" pos:end="139:52"><expr pos:start="139:52" pos:end="139:52"><literal type="number" pos:start="139:52" pos:end="139:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="141:13" pos:end="141:46"><if pos:start="141:13" pos:end="141:46">if<condition pos:start="141:15" pos:end="141:28">(<expr pos:start="141:16" pos:end="141:27"><operator pos:start="141:16" pos:end="141:16">!</operator><name pos:start="141:17" pos:end="141:27"><name pos:start="141:17" pos:end="141:17">s</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:27">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="141:30" pos:end="141:46"><block_content pos:start="141:30" pos:end="141:46"> <expr_stmt pos:start="141:30" pos:end="141:46"><expr pos:start="141:30" pos:end="141:45"><call pos:start="141:30" pos:end="141:45"><name pos:start="141:30" pos:end="141:39">vc1_mc_1mv</name><argument_list pos:start="141:40" pos:end="141:45">(<argument pos:start="141:41" pos:end="141:41"><expr pos:start="141:41" pos:end="141:41"><name pos:start="141:41" pos:end="141:41">v</name></expr></argument>, <argument pos:start="141:44" pos:end="141:44"><expr pos:start="141:44" pos:end="141:44"><literal type="number" pos:start="141:44" pos:end="141:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:24"><expr pos:start="143:13" pos:end="143:23"><name pos:start="143:13" pos:end="143:19">dst_idx</name> <operator pos:start="143:21" pos:end="143:21">=</operator> <literal type="number" pos:start="143:23" pos:end="143:23">0</literal></expr>;</expr_stmt>

            <for pos:start="145:13" pos:end="269:13">for <control pos:start="145:17" pos:end="145:31">(<init pos:start="145:18" pos:end="145:21"><expr pos:start="145:18" pos:end="145:20"><name pos:start="145:18" pos:end="145:18">i</name><operator pos:start="145:19" pos:end="145:19">=</operator><literal type="number" pos:start="145:20" pos:end="145:20">0</literal></expr>;</init> <condition pos:start="145:23" pos:end="145:26"><expr pos:start="145:23" pos:end="145:25"><name pos:start="145:23" pos:end="145:23">i</name><operator pos:start="145:24" pos:end="145:24">&lt;</operator><literal type="number" pos:start="145:25" pos:end="145:25">6</literal></expr>;</condition> <incr pos:start="145:28" pos:end="145:30"><expr pos:start="145:28" pos:end="145:30"><name pos:start="145:28" pos:end="145:28">i</name><operator pos:start="145:29" pos:end="145:30">++</operator></expr></incr>)</control>

            <block pos:start="147:13" pos:end="269:13">{<block_content pos:start="149:17" pos:end="267:17">

                <expr_stmt pos:start="149:17" pos:end="149:52"><expr pos:start="149:17" pos:end="149:51"><name pos:start="149:17" pos:end="149:47"><name pos:start="149:17" pos:end="149:17">s</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:25">dc_val</name><index pos:start="149:26" pos:end="149:28">[<expr pos:start="149:27" pos:end="149:27"><literal type="number" pos:start="149:27" pos:end="149:27">0</literal></expr>]</index><index pos:start="149:29" pos:end="149:47">[<expr pos:start="149:30" pos:end="149:46"><name pos:start="149:30" pos:end="149:46"><name pos:start="149:30" pos:end="149:30">s</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:43">block_index</name><index pos:start="149:44" pos:end="149:46">[<expr pos:start="149:45" pos:end="149:45"><name pos:start="149:45" pos:end="149:45">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="149:49" pos:end="149:49">=</operator> <literal type="number" pos:start="149:51" pos:end="149:51">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:34"><expr pos:start="151:17" pos:end="151:33"><name pos:start="151:17" pos:end="151:23">dst_idx</name> <operator pos:start="151:25" pos:end="151:26">+=</operator> <name pos:start="151:28" pos:end="151:28">i</name> <operator pos:start="151:30" pos:end="151:31">&gt;&gt;</operator> <literal type="number" pos:start="151:33" pos:end="151:33">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:45"><expr pos:start="153:17" pos:end="153:44"><name pos:start="153:17" pos:end="153:19">val</name> <operator pos:start="153:21" pos:end="153:21">=</operator> <operator pos:start="153:23" pos:end="153:23">(</operator><operator pos:start="153:24" pos:end="153:24">(</operator><name pos:start="153:25" pos:end="153:27">cbp</name> <operator pos:start="153:29" pos:end="153:30">&gt;&gt;</operator> <operator pos:start="153:32" pos:end="153:32">(</operator><literal type="number" pos:start="153:33" pos:end="153:35">5</literal> <operator pos:start="153:35" pos:end="153:35">-</operator> <name pos:start="153:37" pos:end="153:37">i</name><operator pos:start="153:38" pos:end="153:38">)</operator><operator pos:start="153:39" pos:end="153:39">)</operator> <operator pos:start="153:41" pos:end="153:41">&amp;</operator> <literal type="number" pos:start="153:43" pos:end="153:43">1</literal><operator pos:start="153:44" pos:end="153:44">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:78"><expr pos:start="155:17" pos:end="155:77"><name pos:start="155:17" pos:end="155:19">off</name> <operator pos:start="155:21" pos:end="155:21">=</operator> <ternary pos:start="155:23" pos:end="155:77"><condition pos:start="155:23" pos:end="155:31"><expr pos:start="155:23" pos:end="155:29"><operator pos:start="155:23" pos:end="155:23">(</operator><name pos:start="155:24" pos:end="155:24">i</name> <operator pos:start="155:26" pos:end="155:26">&amp;</operator> <literal type="number" pos:start="155:28" pos:end="155:28">4</literal><operator pos:start="155:29" pos:end="155:29">)</operator></expr> ?</condition><then pos:start="155:33" pos:end="155:33"> <expr pos:start="155:33" pos:end="155:33"><literal type="number" pos:start="155:33" pos:end="155:33">0</literal></expr> </then><else pos:start="155:35" pos:end="155:77">: <expr pos:start="155:37" pos:end="155:77"><operator pos:start="155:37" pos:end="155:37">(</operator><operator pos:start="155:38" pos:end="155:38">(</operator><name pos:start="155:39" pos:end="155:39">i</name> <operator pos:start="155:41" pos:end="155:41">&amp;</operator> <literal type="number" pos:start="155:43" pos:end="155:43">1</literal><operator pos:start="155:44" pos:end="155:44">)</operator> <operator pos:start="155:46" pos:end="155:46">*</operator> <literal type="number" pos:start="155:48" pos:end="155:50">8</literal> <operator pos:start="155:50" pos:end="155:50">+</operator> <operator pos:start="155:52" pos:end="155:52">(</operator><name pos:start="155:53" pos:end="155:53">i</name> <operator pos:start="155:55" pos:end="155:55">&amp;</operator> <literal type="number" pos:start="155:57" pos:end="155:57">2</literal><operator pos:start="155:58" pos:end="155:58">)</operator> <operator pos:start="155:60" pos:end="155:60">*</operator> <literal type="number" pos:start="155:62" pos:end="155:62">4</literal> <operator pos:start="155:64" pos:end="155:64">*</operator> <name pos:start="155:66" pos:end="155:76"><name pos:start="155:66" pos:end="155:66">s</name><operator pos:start="155:67" pos:end="155:68">-&gt;</operator><name pos:start="155:69" pos:end="155:76">linesize</name></name><operator pos:start="155:77" pos:end="155:77">)</operator></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:63"><expr pos:start="157:17" pos:end="157:62"><name pos:start="157:17" pos:end="157:48"><name pos:start="157:17" pos:end="157:17">v</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:26">mb_type</name><index pos:start="157:27" pos:end="157:29">[<expr pos:start="157:28" pos:end="157:28"><literal type="number" pos:start="157:28" pos:end="157:28">0</literal></expr>]</index><index pos:start="157:30" pos:end="157:48">[<expr pos:start="157:31" pos:end="157:47"><name pos:start="157:31" pos:end="157:47"><name pos:start="157:31" pos:end="157:31">s</name><operator pos:start="157:32" pos:end="157:33">-&gt;</operator><name pos:start="157:34" pos:end="157:44">block_index</name><index pos:start="157:45" pos:end="157:47">[<expr pos:start="157:46" pos:end="157:46"><name pos:start="157:46" pos:end="157:46">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="157:50" pos:end="157:50">=</operator> <name pos:start="157:52" pos:end="157:62"><name pos:start="157:52" pos:end="157:52">s</name><operator pos:start="157:53" pos:end="157:54">-&gt;</operator><name pos:start="157:55" pos:end="157:62">mb_intra</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="159:17" pos:end="267:17"><if pos:start="159:17" pos:end="227:17">if<condition pos:start="159:19" pos:end="159:31">(<expr pos:start="159:20" pos:end="159:30"><name pos:start="159:20" pos:end="159:30"><name pos:start="159:20" pos:end="159:20">s</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:30">mb_intra</name></name></expr>)</condition> <block pos:start="159:33" pos:end="227:17">{<block_content pos:start="163:21" pos:end="225:49">

                    <comment type="block" pos:start="161:21" pos:end="161:74">/* check if prediction blocks A and C are available */</comment>

                    <expr_stmt pos:start="163:21" pos:end="163:48"><expr pos:start="163:21" pos:end="163:47"><name pos:start="163:21" pos:end="163:30"><name pos:start="163:21" pos:end="163:21">v</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:30">a_avail</name></name> <operator pos:start="163:32" pos:end="163:32">=</operator> <name pos:start="163:34" pos:end="163:43"><name pos:start="163:34" pos:end="163:34">v</name><operator pos:start="163:35" pos:end="163:36">-&gt;</operator><name pos:start="163:37" pos:end="163:43">c_avail</name></name> <operator pos:start="163:45" pos:end="163:45">=</operator> <literal type="number" pos:start="163:47" pos:end="163:47">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="165:21" pos:end="167:89"><if pos:start="165:21" pos:end="167:89">if<condition pos:start="165:23" pos:end="165:64">(<expr pos:start="165:24" pos:end="165:63"><name pos:start="165:24" pos:end="165:24">i</name> <operator pos:start="165:26" pos:end="165:27">==</operator> <literal type="number" pos:start="165:29" pos:end="165:29">2</literal> <operator pos:start="165:31" pos:end="165:32">||</operator> <name pos:start="165:34" pos:end="165:34">i</name> <operator pos:start="165:36" pos:end="165:37">==</operator> <literal type="number" pos:start="165:39" pos:end="165:39">3</literal> <operator pos:start="165:41" pos:end="165:42">||</operator> <operator pos:start="165:44" pos:end="165:44">!</operator><name pos:start="165:45" pos:end="165:63"><name pos:start="165:45" pos:end="165:45">s</name><operator pos:start="165:46" pos:end="165:47">-&gt;</operator><name pos:start="165:48" pos:end="165:63">first_slice_line</name></name></expr>)</condition><block type="pseudo" pos:start="167:25" pos:end="167:89"><block_content pos:start="167:25" pos:end="167:89">

                        <expr_stmt pos:start="167:25" pos:end="167:89"><expr pos:start="167:25" pos:end="167:88"><name pos:start="167:25" pos:end="167:34"><name pos:start="167:25" pos:end="167:25">v</name><operator pos:start="167:26" pos:end="167:27">-&gt;</operator><name pos:start="167:28" pos:end="167:34">a_avail</name></name> <operator pos:start="167:36" pos:end="167:36">=</operator> <name pos:start="167:38" pos:end="167:88"><name pos:start="167:38" pos:end="167:38">v</name><operator pos:start="167:39" pos:end="167:40">-&gt;</operator><name pos:start="167:41" pos:end="167:47">mb_type</name><index pos:start="167:48" pos:end="167:50">[<expr pos:start="167:49" pos:end="167:49"><literal type="number" pos:start="167:49" pos:end="167:49">0</literal></expr>]</index><index pos:start="167:51" pos:end="167:88">[<expr pos:start="167:52" pos:end="167:87"><name pos:start="167:52" pos:end="167:68"><name pos:start="167:52" pos:end="167:52">s</name><operator pos:start="167:53" pos:end="167:54">-&gt;</operator><name pos:start="167:55" pos:end="167:65">block_index</name><index pos:start="167:66" pos:end="167:68">[<expr pos:start="167:67" pos:end="167:67"><name pos:start="167:67" pos:end="167:67">i</name></expr>]</index></name> <operator pos:start="167:70" pos:end="167:70">-</operator> <name pos:start="167:72" pos:end="167:87"><name pos:start="167:72" pos:end="167:72">s</name><operator pos:start="167:73" pos:end="167:74">-&gt;</operator><name pos:start="167:75" pos:end="167:84">block_wrap</name><index pos:start="167:85" pos:end="167:87">[<expr pos:start="167:86" pos:end="167:86"><name pos:start="167:86" pos:end="167:86">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="169:21" pos:end="171:74"><if pos:start="169:21" pos:end="171:74">if<condition pos:start="169:23" pos:end="169:51">(<expr pos:start="169:24" pos:end="169:50"><name pos:start="169:24" pos:end="169:24">i</name> <operator pos:start="169:26" pos:end="169:27">==</operator> <literal type="number" pos:start="169:29" pos:end="169:29">1</literal> <operator pos:start="169:31" pos:end="169:32">||</operator> <name pos:start="169:34" pos:end="169:34">i</name> <operator pos:start="169:36" pos:end="169:37">==</operator> <literal type="number" pos:start="169:39" pos:end="169:39">3</literal> <operator pos:start="169:41" pos:end="169:42">||</operator> <name pos:start="169:44" pos:end="169:50"><name pos:start="169:44" pos:end="169:44">s</name><operator pos:start="169:45" pos:end="169:46">-&gt;</operator><name pos:start="169:47" pos:end="169:50">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="171:25" pos:end="171:74"><block_content pos:start="171:25" pos:end="171:74">

                        <expr_stmt pos:start="171:25" pos:end="171:74"><expr pos:start="171:25" pos:end="171:73"><name pos:start="171:25" pos:end="171:34"><name pos:start="171:25" pos:end="171:25">v</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:34">c_avail</name></name> <operator pos:start="171:36" pos:end="171:36">=</operator> <name pos:start="171:38" pos:end="171:73"><name pos:start="171:38" pos:end="171:38">v</name><operator pos:start="171:39" pos:end="171:40">-&gt;</operator><name pos:start="171:41" pos:end="171:47">mb_type</name><index pos:start="171:48" pos:end="171:50">[<expr pos:start="171:49" pos:end="171:49"><literal type="number" pos:start="171:49" pos:end="171:49">0</literal></expr>]</index><index pos:start="171:51" pos:end="171:73">[<expr pos:start="171:52" pos:end="171:72"><name pos:start="171:52" pos:end="171:68"><name pos:start="171:52" pos:end="171:52">s</name><operator pos:start="171:53" pos:end="171:54">-&gt;</operator><name pos:start="171:55" pos:end="171:65">block_index</name><index pos:start="171:66" pos:end="171:68">[<expr pos:start="171:67" pos:end="171:67"><name pos:start="171:67" pos:end="171:67">i</name></expr>]</index></name> <operator pos:start="171:70" pos:end="171:70">-</operator> <literal type="number" pos:start="171:72" pos:end="171:72">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="175:21" pos:end="175:109"><expr pos:start="175:21" pos:end="175:108"><call pos:start="175:21" pos:end="175:108"><name pos:start="175:21" pos:end="175:42">vc1_decode_intra_block</name><argument_list pos:start="175:43" pos:end="175:108">(<argument pos:start="175:44" pos:end="175:44"><expr pos:start="175:44" pos:end="175:44"><name pos:start="175:44" pos:end="175:44">v</name></expr></argument>, <argument pos:start="175:47" pos:end="175:57"><expr pos:start="175:47" pos:end="175:57"><name pos:start="175:47" pos:end="175:57"><name pos:start="175:47" pos:end="175:47">s</name><operator pos:start="175:48" pos:end="175:49">-&gt;</operator><name pos:start="175:50" pos:end="175:54">block</name><index pos:start="175:55" pos:end="175:57">[<expr pos:start="175:56" pos:end="175:56"><name pos:start="175:56" pos:end="175:56">i</name></expr>]</index></name></expr></argument>, <argument pos:start="175:60" pos:end="175:60"><expr pos:start="175:60" pos:end="175:60"><name pos:start="175:60" pos:end="175:60">i</name></expr></argument>, <argument pos:start="175:63" pos:end="175:65"><expr pos:start="175:63" pos:end="175:65"><name pos:start="175:63" pos:end="175:65">val</name></expr></argument>, <argument pos:start="175:68" pos:end="175:73"><expr pos:start="175:68" pos:end="175:73"><name pos:start="175:68" pos:end="175:73">mquant</name></expr></argument>, <argument pos:start="175:76" pos:end="175:107"><expr pos:start="175:76" pos:end="175:107"><ternary pos:start="175:76" pos:end="175:107"><condition pos:start="175:76" pos:end="175:81"><expr pos:start="175:76" pos:end="175:80"><operator pos:start="175:76" pos:end="175:76">(</operator><name pos:start="175:77" pos:end="175:77">i</name><operator pos:start="175:78" pos:end="175:78">&amp;</operator><literal type="number" pos:start="175:79" pos:end="175:79">4</literal><operator pos:start="175:80" pos:end="175:80">)</operator></expr>?</condition><then pos:start="175:82" pos:end="175:94"><expr pos:start="175:82" pos:end="175:94"><name pos:start="175:82" pos:end="175:94"><name pos:start="175:82" pos:end="175:82">v</name><operator pos:start="175:83" pos:end="175:84">-&gt;</operator><name pos:start="175:85" pos:end="175:94">codingset2</name></name></expr></then><else pos:start="175:95" pos:end="175:107">:<expr pos:start="175:96" pos:end="175:107"><name pos:start="175:96" pos:end="175:107"><name pos:start="175:96" pos:end="175:96">v</name><operator pos:start="175:97" pos:end="175:98">-&gt;</operator><name pos:start="175:99" pos:end="175:107">codingset</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="177:21" pos:end="177:71"><if pos:start="177:21" pos:end="177:71">if<condition pos:start="177:23" pos:end="177:61">(<expr pos:start="177:24" pos:end="177:60"><operator pos:start="177:24" pos:end="177:24">(</operator><name pos:start="177:25" pos:end="177:25">i</name><operator pos:start="177:26" pos:end="177:26">&gt;</operator><literal type="number" pos:start="177:27" pos:end="177:27">3</literal><operator pos:start="177:28" pos:end="177:28">)</operator> <operator pos:start="177:30" pos:end="177:31">&amp;&amp;</operator> <operator pos:start="177:33" pos:end="177:33">(</operator><name pos:start="177:34" pos:end="177:41"><name pos:start="177:34" pos:end="177:34">s</name><operator pos:start="177:35" pos:end="177:36">-&gt;</operator><name pos:start="177:37" pos:end="177:41">flags</name></name> <operator pos:start="177:43" pos:end="177:43">&amp;</operator> <name pos:start="177:45" pos:end="177:59">CODEC_FLAG_GRAY</name><operator pos:start="177:60" pos:end="177:60">)</operator></expr>)</condition><block type="pseudo" pos:start="177:63" pos:end="177:71"><block_content pos:start="177:63" pos:end="177:71"> <continue pos:start="177:63" pos:end="177:71">continue;</continue></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="179:21" pos:end="179:58"><expr pos:start="179:21" pos:end="179:57"><call pos:start="179:21" pos:end="179:57"><name pos:start="179:21" pos:end="179:44"><name pos:start="179:21" pos:end="179:21">s</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator><name pos:start="179:24" pos:end="179:26">dsp</name><operator pos:start="179:27" pos:end="179:27">.</operator><name pos:start="179:28" pos:end="179:44">vc1_inv_trans_8x8</name></name><argument_list pos:start="179:45" pos:end="179:57">(<argument pos:start="179:46" pos:end="179:56"><expr pos:start="179:46" pos:end="179:56"><name pos:start="179:46" pos:end="179:56"><name pos:start="179:46" pos:end="179:46">s</name><operator pos:start="179:47" pos:end="179:48">-&gt;</operator><name pos:start="179:49" pos:end="179:53">block</name><index pos:start="179:54" pos:end="179:56">[<expr pos:start="179:55" pos:end="179:55"><name pos:start="179:55" pos:end="179:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="181:21" pos:end="181:84"><if pos:start="181:21" pos:end="181:84">if<condition pos:start="181:23" pos:end="181:38">(<expr pos:start="181:24" pos:end="181:37"><name pos:start="181:24" pos:end="181:37"><name pos:start="181:24" pos:end="181:24">v</name><operator pos:start="181:25" pos:end="181:26">-&gt;</operator><name pos:start="181:27" pos:end="181:37">rangeredfrm</name></name></expr>)</condition><block type="pseudo" pos:start="181:40" pos:end="181:84"><block_content pos:start="181:40" pos:end="181:84"> <for pos:start="181:40" pos:end="181:84">for<control pos:start="181:43" pos:end="181:62">(<init pos:start="181:44" pos:end="181:49"><expr pos:start="181:44" pos:end="181:48"><name pos:start="181:44" pos:end="181:44">j</name> <operator pos:start="181:46" pos:end="181:46">=</operator> <literal type="number" pos:start="181:48" pos:end="181:48">0</literal></expr>;</init> <condition pos:start="181:51" pos:end="181:57"><expr pos:start="181:51" pos:end="181:56"><name pos:start="181:51" pos:end="181:51">j</name> <operator pos:start="181:53" pos:end="181:53">&lt;</operator> <literal type="number" pos:start="181:55" pos:end="181:56">64</literal></expr>;</condition> <incr pos:start="181:59" pos:end="181:61"><expr pos:start="181:59" pos:end="181:61"><name pos:start="181:59" pos:end="181:59">j</name><operator pos:start="181:60" pos:end="181:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="181:64" pos:end="181:84"><block_content pos:start="181:64" pos:end="181:84"> <expr_stmt pos:start="181:64" pos:end="181:84"><expr pos:start="181:64" pos:end="181:83"><name pos:start="181:64" pos:end="181:77"><name pos:start="181:64" pos:end="181:64">s</name><operator pos:start="181:65" pos:end="181:66">-&gt;</operator><name pos:start="181:67" pos:end="181:71">block</name><index pos:start="181:72" pos:end="181:74">[<expr pos:start="181:73" pos:end="181:73"><name pos:start="181:73" pos:end="181:73">i</name></expr>]</index><index pos:start="181:75" pos:end="181:77">[<expr pos:start="181:76" pos:end="181:76"><name pos:start="181:76" pos:end="181:76">j</name></expr>]</index></name> <operator pos:start="181:79" pos:end="181:81">&lt;&lt;=</operator> <literal type="number" pos:start="181:83" pos:end="181:83">1</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="183:21" pos:end="183:121"><expr pos:start="183:21" pos:end="183:120"><call pos:start="183:21" pos:end="183:120"><name pos:start="183:21" pos:end="183:52"><name pos:start="183:21" pos:end="183:21">s</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:26">dsp</name><operator pos:start="183:27" pos:end="183:27">.</operator><name pos:start="183:28" pos:end="183:52">put_signed_pixels_clamped</name></name><argument_list pos:start="183:53" pos:end="183:120">(<argument pos:start="183:54" pos:end="183:64"><expr pos:start="183:54" pos:end="183:64"><name pos:start="183:54" pos:end="183:64"><name pos:start="183:54" pos:end="183:54">s</name><operator pos:start="183:55" pos:end="183:56">-&gt;</operator><name pos:start="183:57" pos:end="183:61">block</name><index pos:start="183:62" pos:end="183:64">[<expr pos:start="183:63" pos:end="183:63"><name pos:start="183:63" pos:end="183:63">i</name></expr>]</index></name></expr></argument>, <argument pos:start="183:67" pos:end="183:88"><expr pos:start="183:67" pos:end="183:88"><name pos:start="183:67" pos:end="183:82"><name pos:start="183:67" pos:end="183:67">s</name><operator pos:start="183:68" pos:end="183:69">-&gt;</operator><name pos:start="183:70" pos:end="183:73">dest</name><index pos:start="183:74" pos:end="183:82">[<expr pos:start="183:75" pos:end="183:81"><name pos:start="183:75" pos:end="183:81">dst_idx</name></expr>]</index></name> <operator pos:start="183:84" pos:end="183:84">+</operator> <name pos:start="183:86" pos:end="183:88">off</name></expr></argument>, <argument pos:start="183:91" pos:end="183:119"><expr pos:start="183:91" pos:end="183:119"><name pos:start="183:91" pos:end="183:101"><name pos:start="183:91" pos:end="183:91">s</name><operator pos:start="183:92" pos:end="183:93">-&gt;</operator><name pos:start="183:94" pos:end="183:101">linesize</name></name> <operator pos:start="183:103" pos:end="183:104">&gt;&gt;</operator> <operator pos:start="183:106" pos:end="183:106">(</operator><operator pos:start="183:107" pos:end="183:107">(</operator><name pos:start="183:108" pos:end="183:108">i</name> <operator pos:start="183:110" pos:end="183:110">&amp;</operator> <literal type="number" pos:start="183:112" pos:end="183:112">4</literal><operator pos:start="183:113" pos:end="183:113">)</operator> <operator pos:start="183:115" pos:end="183:116">&gt;&gt;</operator> <literal type="number" pos:start="183:118" pos:end="183:118">2</literal><operator pos:start="183:119" pos:end="183:119">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="185:21" pos:end="195:21"><if pos:start="185:21" pos:end="195:21">if<condition pos:start="185:23" pos:end="185:48">(<expr pos:start="185:24" pos:end="185:47"><name pos:start="185:24" pos:end="185:28"><name pos:start="185:24" pos:end="185:24">v</name><operator pos:start="185:25" pos:end="185:26">-&gt;</operator><name pos:start="185:27" pos:end="185:28">pq</name></name> <operator pos:start="185:30" pos:end="185:31">&gt;=</operator> <literal type="number" pos:start="185:33" pos:end="185:33">9</literal> <operator pos:start="185:35" pos:end="185:36">&amp;&amp;</operator> <name pos:start="185:38" pos:end="185:47"><name pos:start="185:38" pos:end="185:38">v</name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:47">overlap</name></name></expr>)</condition> <block pos:start="185:50" pos:end="195:21">{<block_content pos:start="187:25" pos:end="193:104">

                        <if_stmt pos:start="187:25" pos:end="189:104"><if pos:start="187:25" pos:end="189:104">if<condition pos:start="187:27" pos:end="187:38">(<expr pos:start="187:28" pos:end="187:37"><name pos:start="187:28" pos:end="187:37"><name pos:start="187:28" pos:end="187:28">v</name><operator pos:start="187:29" pos:end="187:30">-&gt;</operator><name pos:start="187:31" pos:end="187:37">c_avail</name></name></expr>)</condition><block type="pseudo" pos:start="189:29" pos:end="189:104"><block_content pos:start="189:29" pos:end="189:104">

                            <expr_stmt pos:start="189:29" pos:end="189:104"><expr pos:start="189:29" pos:end="189:103"><call pos:start="189:29" pos:end="189:103"><name pos:start="189:29" pos:end="189:48"><name pos:start="189:29" pos:end="189:29">s</name><operator pos:start="189:30" pos:end="189:31">-&gt;</operator><name pos:start="189:32" pos:end="189:34">dsp</name><operator pos:start="189:35" pos:end="189:35">.</operator><name pos:start="189:36" pos:end="189:48">vc1_h_overlap</name></name><argument_list pos:start="189:49" pos:end="189:103">(<argument pos:start="189:50" pos:end="189:71"><expr pos:start="189:50" pos:end="189:71"><name pos:start="189:50" pos:end="189:65"><name pos:start="189:50" pos:end="189:50">s</name><operator pos:start="189:51" pos:end="189:52">-&gt;</operator><name pos:start="189:53" pos:end="189:56">dest</name><index pos:start="189:57" pos:end="189:65">[<expr pos:start="189:58" pos:end="189:64"><name pos:start="189:58" pos:end="189:64">dst_idx</name></expr>]</index></name> <operator pos:start="189:67" pos:end="189:67">+</operator> <name pos:start="189:69" pos:end="189:71">off</name></expr></argument>, <argument pos:start="189:74" pos:end="189:102"><expr pos:start="189:74" pos:end="189:102"><name pos:start="189:74" pos:end="189:84"><name pos:start="189:74" pos:end="189:74">s</name><operator pos:start="189:75" pos:end="189:76">-&gt;</operator><name pos:start="189:77" pos:end="189:84">linesize</name></name> <operator pos:start="189:86" pos:end="189:87">&gt;&gt;</operator> <operator pos:start="189:89" pos:end="189:89">(</operator><operator pos:start="189:90" pos:end="189:90">(</operator><name pos:start="189:91" pos:end="189:91">i</name> <operator pos:start="189:93" pos:end="189:93">&amp;</operator> <literal type="number" pos:start="189:95" pos:end="189:95">4</literal><operator pos:start="189:96" pos:end="189:96">)</operator> <operator pos:start="189:98" pos:end="189:99">&gt;&gt;</operator> <literal type="number" pos:start="189:101" pos:end="189:101">2</literal><operator pos:start="189:102" pos:end="189:102">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="191:25" pos:end="193:104"><if pos:start="191:25" pos:end="193:104">if<condition pos:start="191:27" pos:end="191:38">(<expr pos:start="191:28" pos:end="191:37"><name pos:start="191:28" pos:end="191:37"><name pos:start="191:28" pos:end="191:28">v</name><operator pos:start="191:29" pos:end="191:30">-&gt;</operator><name pos:start="191:31" pos:end="191:37">a_avail</name></name></expr>)</condition><block type="pseudo" pos:start="193:29" pos:end="193:104"><block_content pos:start="193:29" pos:end="193:104">

                            <expr_stmt pos:start="193:29" pos:end="193:104"><expr pos:start="193:29" pos:end="193:103"><call pos:start="193:29" pos:end="193:103"><name pos:start="193:29" pos:end="193:48"><name pos:start="193:29" pos:end="193:29">s</name><operator pos:start="193:30" pos:end="193:31">-&gt;</operator><name pos:start="193:32" pos:end="193:34">dsp</name><operator pos:start="193:35" pos:end="193:35">.</operator><name pos:start="193:36" pos:end="193:48">vc1_v_overlap</name></name><argument_list pos:start="193:49" pos:end="193:103">(<argument pos:start="193:50" pos:end="193:71"><expr pos:start="193:50" pos:end="193:71"><name pos:start="193:50" pos:end="193:65"><name pos:start="193:50" pos:end="193:50">s</name><operator pos:start="193:51" pos:end="193:52">-&gt;</operator><name pos:start="193:53" pos:end="193:56">dest</name><index pos:start="193:57" pos:end="193:65">[<expr pos:start="193:58" pos:end="193:64"><name pos:start="193:58" pos:end="193:64">dst_idx</name></expr>]</index></name> <operator pos:start="193:67" pos:end="193:67">+</operator> <name pos:start="193:69" pos:end="193:71">off</name></expr></argument>, <argument pos:start="193:74" pos:end="193:102"><expr pos:start="193:74" pos:end="193:102"><name pos:start="193:74" pos:end="193:84"><name pos:start="193:74" pos:end="193:74">s</name><operator pos:start="193:75" pos:end="193:76">-&gt;</operator><name pos:start="193:77" pos:end="193:84">linesize</name></name> <operator pos:start="193:86" pos:end="193:87">&gt;&gt;</operator> <operator pos:start="193:89" pos:end="193:89">(</operator><operator pos:start="193:90" pos:end="193:90">(</operator><name pos:start="193:91" pos:end="193:91">i</name> <operator pos:start="193:93" pos:end="193:93">&amp;</operator> <literal type="number" pos:start="193:95" pos:end="193:95">4</literal><operator pos:start="193:96" pos:end="193:96">)</operator> <operator pos:start="193:98" pos:end="193:99">&gt;&gt;</operator> <literal type="number" pos:start="193:101" pos:end="193:101">2</literal><operator pos:start="193:102" pos:end="193:102">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="197:21" pos:end="223:21"><if pos:start="197:21" pos:end="223:21">if<condition pos:start="197:23" pos:end="197:128">(<expr pos:start="197:24" pos:end="197:127"><name pos:start="197:24" pos:end="197:40">apply_loop_filter</name> <operator pos:start="197:42" pos:end="197:43">&amp;&amp;</operator> <name pos:start="197:45" pos:end="197:51"><name pos:start="197:45" pos:end="197:45">s</name><operator pos:start="197:46" pos:end="197:47">-&gt;</operator><name pos:start="197:48" pos:end="197:51">mb_x</name></name> <operator pos:start="197:53" pos:end="197:54">&amp;&amp;</operator> <name pos:start="197:56" pos:end="197:62"><name pos:start="197:56" pos:end="197:56">s</name><operator pos:start="197:57" pos:end="197:58">-&gt;</operator><name pos:start="197:59" pos:end="197:62">mb_x</name></name> <operator pos:start="197:64" pos:end="197:65">!=</operator> <operator pos:start="197:67" pos:end="197:67">(</operator><name pos:start="197:68" pos:end="197:78"><name pos:start="197:68" pos:end="197:68">s</name><operator pos:start="197:69" pos:end="197:70">-&gt;</operator><name pos:start="197:71" pos:end="197:78">mb_width</name></name> <operator pos:start="197:80" pos:end="197:80">-</operator> <literal type="number" pos:start="197:82" pos:end="197:82">1</literal><operator pos:start="197:83" pos:end="197:83">)</operator> <operator pos:start="197:85" pos:end="197:86">&amp;&amp;</operator> <name pos:start="197:88" pos:end="197:94"><name pos:start="197:88" pos:end="197:88">s</name><operator pos:start="197:89" pos:end="197:90">-&gt;</operator><name pos:start="197:91" pos:end="197:94">mb_y</name></name> <operator pos:start="197:96" pos:end="197:97">&amp;&amp;</operator> <name pos:start="197:99" pos:end="197:105"><name pos:start="197:99" pos:end="197:99">s</name><operator pos:start="197:100" pos:end="197:101">-&gt;</operator><name pos:start="197:102" pos:end="197:105">mb_y</name></name> <operator pos:start="197:107" pos:end="197:108">!=</operator> <operator pos:start="197:110" pos:end="197:110">(</operator><name pos:start="197:111" pos:end="197:122"><name pos:start="197:111" pos:end="197:111">s</name><operator pos:start="197:112" pos:end="197:113">-&gt;</operator><name pos:start="197:114" pos:end="197:122">mb_height</name></name> <operator pos:start="197:124" pos:end="197:124">-</operator> <literal type="number" pos:start="197:126" pos:end="197:126">1</literal><operator pos:start="197:127" pos:end="197:127">)</operator></expr>)</condition><block pos:start="197:129" pos:end="223:21">{<block_content pos:start="199:25" pos:end="221:126">

                        <decl_stmt pos:start="199:25" pos:end="199:46"><decl pos:start="199:25" pos:end="199:36"><type pos:start="199:25" pos:end="199:27"><name pos:start="199:25" pos:end="199:27">int</name></type> <name pos:start="199:29" pos:end="199:36">left_cbp</name></decl>, <decl pos:start="199:39" pos:end="199:45"><type ref="prev" pos:start="199:25" pos:end="199:27"/><name pos:start="199:39" pos:end="199:45">top_cbp</name></decl>;</decl_stmt>

                        <if_stmt pos:start="201:25" pos:end="213:25"><if pos:start="201:25" pos:end="207:25">if<condition pos:start="201:27" pos:end="201:33">(<expr pos:start="201:28" pos:end="201:32"><name pos:start="201:28" pos:end="201:28">i</name> <operator pos:start="201:30" pos:end="201:30">&amp;</operator> <literal type="number" pos:start="201:32" pos:end="201:32">4</literal></expr>)</condition><block pos:start="201:34" pos:end="207:25">{<block_content pos:start="203:29" pos:end="205:81">

                            <expr_stmt pos:start="203:29" pos:end="203:81"><expr pos:start="203:29" pos:end="203:80"><name pos:start="203:29" pos:end="203:36">left_cbp</name> <operator pos:start="203:38" pos:end="203:38">=</operator> <name pos:start="203:40" pos:end="203:58"><name pos:start="203:40" pos:end="203:40">v</name><operator pos:start="203:41" pos:end="203:42">-&gt;</operator><name pos:start="203:43" pos:end="203:45">cbp</name><index pos:start="203:46" pos:end="203:58">[<expr pos:start="203:47" pos:end="203:57"><name pos:start="203:47" pos:end="203:53"><name pos:start="203:47" pos:end="203:47">s</name><operator pos:start="203:48" pos:end="203:49">-&gt;</operator><name pos:start="203:50" pos:end="203:53">mb_x</name></name> <operator pos:start="203:55" pos:end="203:55">-</operator> <literal type="number" pos:start="203:57" pos:end="203:57">1</literal></expr>]</index></name>            <operator pos:start="203:71" pos:end="203:72">&gt;&gt;</operator> <operator pos:start="203:74" pos:end="203:74">(</operator><name pos:start="203:75" pos:end="203:75">i</name> <operator pos:start="203:77" pos:end="203:77">*</operator> <literal type="number" pos:start="203:79" pos:end="203:79">4</literal><operator pos:start="203:80" pos:end="203:80">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="205:29" pos:end="205:81"><expr pos:start="205:29" pos:end="205:80"><name pos:start="205:29" pos:end="205:35">top_cbp</name>  <operator pos:start="205:38" pos:end="205:38">=</operator> <name pos:start="205:40" pos:end="205:69"><name pos:start="205:40" pos:end="205:40">v</name><operator pos:start="205:41" pos:end="205:42">-&gt;</operator><name pos:start="205:43" pos:end="205:45">cbp</name><index pos:start="205:46" pos:end="205:69">[<expr pos:start="205:47" pos:end="205:68"><name pos:start="205:47" pos:end="205:53"><name pos:start="205:47" pos:end="205:47">s</name><operator pos:start="205:48" pos:end="205:49">-&gt;</operator><name pos:start="205:50" pos:end="205:53">mb_x</name></name> <operator pos:start="205:55" pos:end="205:55">-</operator> <name pos:start="205:57" pos:end="205:68"><name pos:start="205:57" pos:end="205:57">s</name><operator pos:start="205:58" pos:end="205:59">-&gt;</operator><name pos:start="205:60" pos:end="205:68">mb_stride</name></name></expr>]</index></name> <operator pos:start="205:71" pos:end="205:72">&gt;&gt;</operator> <operator pos:start="205:74" pos:end="205:74">(</operator><name pos:start="205:75" pos:end="205:75">i</name> <operator pos:start="205:77" pos:end="205:77">*</operator> <literal type="number" pos:start="205:79" pos:end="205:79">4</literal><operator pos:start="205:80" pos:end="205:80">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></if><else pos:start="207:26" pos:end="213:25">else<block pos:start="207:30" pos:end="213:25">{<block_content pos:start="209:29" pos:end="211:116">

                            <expr_stmt pos:start="209:29" pos:end="209:115"><expr pos:start="209:29" pos:end="209:114"><name pos:start="209:29" pos:end="209:36">left_cbp</name> <operator pos:start="209:38" pos:end="209:38">=</operator> <ternary pos:start="209:40" pos:end="209:114"><condition pos:start="209:40" pos:end="209:48"><expr pos:start="209:40" pos:end="209:46"><operator pos:start="209:40" pos:end="209:40">(</operator><name pos:start="209:41" pos:end="209:41">i</name> <operator pos:start="209:43" pos:end="209:43">&amp;</operator> <literal type="number" pos:start="209:45" pos:end="209:45">1</literal><operator pos:start="209:46" pos:end="209:46">)</operator></expr> ?</condition><then pos:start="209:50" pos:end="209:67"> <expr pos:start="209:50" pos:end="209:67"><operator pos:start="209:50" pos:end="209:50">(</operator><name pos:start="209:51" pos:end="209:53">cbp</name> <operator pos:start="209:55" pos:end="209:56">&gt;&gt;</operator> <operator pos:start="209:58" pos:end="209:58">(</operator><operator pos:start="209:59" pos:end="209:59">(</operator><name pos:start="209:60" pos:end="209:60">i</name><operator pos:start="209:61" pos:end="209:61">-</operator><literal type="number" pos:start="209:62" pos:end="209:62">1</literal><operator pos:start="209:63" pos:end="209:63">)</operator><operator pos:start="209:64" pos:end="209:64">*</operator><literal type="number" pos:start="209:65" pos:end="209:65">4</literal><operator pos:start="209:66" pos:end="209:66">)</operator><operator pos:start="209:67" pos:end="209:67">)</operator></expr> </then><else pos:start="209:69" pos:end="209:114">: <expr pos:start="209:71" pos:end="209:114"><operator pos:start="209:71" pos:end="209:71">(</operator><name pos:start="209:72" pos:end="209:90"><name pos:start="209:72" pos:end="209:72">v</name><operator pos:start="209:73" pos:end="209:74">-&gt;</operator><name pos:start="209:75" pos:end="209:77">cbp</name><index pos:start="209:78" pos:end="209:90">[<expr pos:start="209:79" pos:end="209:89"><name pos:start="209:79" pos:end="209:85"><name pos:start="209:79" pos:end="209:79">s</name><operator pos:start="209:80" pos:end="209:81">-&gt;</operator><name pos:start="209:82" pos:end="209:85">mb_x</name></name> <operator pos:start="209:87" pos:end="209:87">-</operator> <literal type="number" pos:start="209:89" pos:end="209:89">1</literal></expr>]</index></name>           <operator pos:start="209:102" pos:end="209:103">&gt;&gt;</operator> <operator pos:start="209:105" pos:end="209:105">(</operator><operator pos:start="209:106" pos:end="209:106">(</operator><name pos:start="209:107" pos:end="209:107">i</name><operator pos:start="209:108" pos:end="209:108">+</operator><literal type="number" pos:start="209:109" pos:end="209:109">1</literal><operator pos:start="209:110" pos:end="209:110">)</operator><operator pos:start="209:111" pos:end="209:111">*</operator><literal type="number" pos:start="209:112" pos:end="209:112">4</literal><operator pos:start="209:113" pos:end="209:113">)</operator><operator pos:start="209:114" pos:end="209:114">)</operator></expr></else></ternary></expr>;</expr_stmt>

                            <expr_stmt pos:start="211:29" pos:end="211:116"><expr pos:start="211:29" pos:end="211:115"><name pos:start="211:29" pos:end="211:35">top_cbp</name>  <operator pos:start="211:38" pos:end="211:38">=</operator> <ternary pos:start="211:40" pos:end="211:115"><condition pos:start="211:40" pos:end="211:48"><expr pos:start="211:40" pos:end="211:46"><operator pos:start="211:40" pos:end="211:40">(</operator><name pos:start="211:41" pos:end="211:41">i</name> <operator pos:start="211:43" pos:end="211:43">&amp;</operator> <literal type="number" pos:start="211:45" pos:end="211:45">2</literal><operator pos:start="211:46" pos:end="211:46">)</operator></expr> ?</condition><then pos:start="211:50" pos:end="211:67"> <expr pos:start="211:50" pos:end="211:67"><operator pos:start="211:50" pos:end="211:50">(</operator><name pos:start="211:51" pos:end="211:53">cbp</name> <operator pos:start="211:55" pos:end="211:56">&gt;&gt;</operator> <operator pos:start="211:58" pos:end="211:58">(</operator><operator pos:start="211:59" pos:end="211:59">(</operator><name pos:start="211:60" pos:end="211:60">i</name><operator pos:start="211:61" pos:end="211:61">-</operator><literal type="number" pos:start="211:62" pos:end="211:62">2</literal><operator pos:start="211:63" pos:end="211:63">)</operator><operator pos:start="211:64" pos:end="211:64">*</operator><literal type="number" pos:start="211:65" pos:end="211:65">4</literal><operator pos:start="211:66" pos:end="211:66">)</operator><operator pos:start="211:67" pos:end="211:67">)</operator></expr> </then><else pos:start="211:69" pos:end="211:115">: <expr pos:start="211:71" pos:end="211:115"><operator pos:start="211:71" pos:end="211:71">(</operator><name pos:start="211:72" pos:end="211:101"><name pos:start="211:72" pos:end="211:72">v</name><operator pos:start="211:73" pos:end="211:74">-&gt;</operator><name pos:start="211:75" pos:end="211:77">cbp</name><index pos:start="211:78" pos:end="211:101">[<expr pos:start="211:79" pos:end="211:100"><name pos:start="211:79" pos:end="211:85"><name pos:start="211:79" pos:end="211:79">s</name><operator pos:start="211:80" pos:end="211:81">-&gt;</operator><name pos:start="211:82" pos:end="211:85">mb_x</name></name> <operator pos:start="211:87" pos:end="211:87">-</operator> <name pos:start="211:89" pos:end="211:100"><name pos:start="211:89" pos:end="211:89">s</name><operator pos:start="211:90" pos:end="211:91">-&gt;</operator><name pos:start="211:92" pos:end="211:100">mb_stride</name></name></expr>]</index></name> <operator pos:start="211:103" pos:end="211:104">&gt;&gt;</operator> <operator pos:start="211:106" pos:end="211:106">(</operator><operator pos:start="211:107" pos:end="211:107">(</operator><name pos:start="211:108" pos:end="211:108">i</name><operator pos:start="211:109" pos:end="211:109">+</operator><literal type="number" pos:start="211:110" pos:end="211:110">2</literal><operator pos:start="211:111" pos:end="211:111">)</operator><operator pos:start="211:112" pos:end="211:112">*</operator><literal type="number" pos:start="211:113" pos:end="211:113">4</literal><operator pos:start="211:114" pos:end="211:114">)</operator><operator pos:start="211:115" pos:end="211:115">)</operator></expr></else></ternary></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="215:25" pos:end="217:126"><if pos:start="215:25" pos:end="217:126">if<condition pos:start="215:27" pos:end="215:42">(<expr pos:start="215:28" pos:end="215:41"><name pos:start="215:28" pos:end="215:35">left_cbp</name> <operator pos:start="215:37" pos:end="215:37">&amp;</operator> <literal type="number" pos:start="215:39" pos:end="215:41">0xC</literal></expr>)</condition><block type="pseudo" pos:start="217:29" pos:end="217:126"><block_content pos:start="217:29" pos:end="217:126">

                            <expr_stmt pos:start="217:29" pos:end="217:126"><expr pos:start="217:29" pos:end="217:125"><call pos:start="217:29" pos:end="217:125"><name pos:start="217:29" pos:end="217:50"><name pos:start="217:29" pos:end="217:29">s</name><operator pos:start="217:30" pos:end="217:31">-&gt;</operator><name pos:start="217:32" pos:end="217:34">dsp</name><operator pos:start="217:35" pos:end="217:35">.</operator><name pos:start="217:36" pos:end="217:50">vc1_loop_filter</name></name><argument_list pos:start="217:51" pos:end="217:125">(<argument pos:start="217:52" pos:end="217:73"><expr pos:start="217:52" pos:end="217:73"><name pos:start="217:52" pos:end="217:67"><name pos:start="217:52" pos:end="217:52">s</name><operator pos:start="217:53" pos:end="217:54">-&gt;</operator><name pos:start="217:55" pos:end="217:58">dest</name><index pos:start="217:59" pos:end="217:67">[<expr pos:start="217:60" pos:end="217:66"><name pos:start="217:60" pos:end="217:66">dst_idx</name></expr>]</index></name> <operator pos:start="217:69" pos:end="217:69">+</operator> <name pos:start="217:71" pos:end="217:73">off</name></expr></argument>, <argument pos:start="217:76" pos:end="217:76"><expr pos:start="217:76" pos:end="217:76"><literal type="number" pos:start="217:76" pos:end="217:76">1</literal></expr></argument>, <argument pos:start="217:79" pos:end="217:113"><expr pos:start="217:79" pos:end="217:113"><ternary pos:start="217:79" pos:end="217:113"><condition pos:start="217:79" pos:end="217:85"><expr pos:start="217:79" pos:end="217:83"><name pos:start="217:79" pos:end="217:79">i</name> <operator pos:start="217:81" pos:end="217:81">&amp;</operator> <literal type="number" pos:start="217:83" pos:end="217:83">4</literal></expr> ?</condition><then pos:start="217:87" pos:end="217:99"> <expr pos:start="217:87" pos:end="217:99"><name pos:start="217:87" pos:end="217:99"><name pos:start="217:87" pos:end="217:87">s</name><operator pos:start="217:88" pos:end="217:89">-&gt;</operator><name pos:start="217:90" pos:end="217:99">uvlinesize</name></name></expr> </then><else pos:start="217:101" pos:end="217:113">: <expr pos:start="217:103" pos:end="217:113"><name pos:start="217:103" pos:end="217:113"><name pos:start="217:103" pos:end="217:103">s</name><operator pos:start="217:104" pos:end="217:105">-&gt;</operator><name pos:start="217:106" pos:end="217:113">linesize</name></name></expr></else></ternary></expr></argument>, <argument pos:start="217:116" pos:end="217:116"><expr pos:start="217:116" pos:end="217:116"><literal type="number" pos:start="217:116" pos:end="217:116">8</literal></expr></argument>, <argument pos:start="217:119" pos:end="217:124"><expr pos:start="217:119" pos:end="217:124"><name pos:start="217:119" pos:end="217:124">mquant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="219:25" pos:end="221:126"><if pos:start="219:25" pos:end="221:126">if<condition pos:start="219:27" pos:end="219:42">(<expr pos:start="219:28" pos:end="219:41"><name pos:start="219:28" pos:end="219:34">top_cbp</name>  <operator pos:start="219:37" pos:end="219:37">&amp;</operator> <literal type="number" pos:start="219:39" pos:end="219:41">0xA</literal></expr>)</condition><block type="pseudo" pos:start="221:29" pos:end="221:126"><block_content pos:start="221:29" pos:end="221:126">

                            <expr_stmt pos:start="221:29" pos:end="221:126"><expr pos:start="221:29" pos:end="221:125"><call pos:start="221:29" pos:end="221:125"><name pos:start="221:29" pos:end="221:50"><name pos:start="221:29" pos:end="221:29">s</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:34">dsp</name><operator pos:start="221:35" pos:end="221:35">.</operator><name pos:start="221:36" pos:end="221:50">vc1_loop_filter</name></name><argument_list pos:start="221:51" pos:end="221:125">(<argument pos:start="221:52" pos:end="221:73"><expr pos:start="221:52" pos:end="221:73"><name pos:start="221:52" pos:end="221:67"><name pos:start="221:52" pos:end="221:52">s</name><operator pos:start="221:53" pos:end="221:54">-&gt;</operator><name pos:start="221:55" pos:end="221:58">dest</name><index pos:start="221:59" pos:end="221:67">[<expr pos:start="221:60" pos:end="221:66"><name pos:start="221:60" pos:end="221:66">dst_idx</name></expr>]</index></name> <operator pos:start="221:69" pos:end="221:69">+</operator> <name pos:start="221:71" pos:end="221:73">off</name></expr></argument>, <argument pos:start="221:76" pos:end="221:110"><expr pos:start="221:76" pos:end="221:110"><ternary pos:start="221:76" pos:end="221:110"><condition pos:start="221:76" pos:end="221:82"><expr pos:start="221:76" pos:end="221:80"><name pos:start="221:76" pos:end="221:76">i</name> <operator pos:start="221:78" pos:end="221:78">&amp;</operator> <literal type="number" pos:start="221:80" pos:end="221:80">4</literal></expr> ?</condition><then pos:start="221:84" pos:end="221:96"> <expr pos:start="221:84" pos:end="221:96"><name pos:start="221:84" pos:end="221:96"><name pos:start="221:84" pos:end="221:84">s</name><operator pos:start="221:85" pos:end="221:86">-&gt;</operator><name pos:start="221:87" pos:end="221:96">uvlinesize</name></name></expr> </then><else pos:start="221:98" pos:end="221:110">: <expr pos:start="221:100" pos:end="221:110"><name pos:start="221:100" pos:end="221:110"><name pos:start="221:100" pos:end="221:100">s</name><operator pos:start="221:101" pos:end="221:102">-&gt;</operator><name pos:start="221:103" pos:end="221:110">linesize</name></name></expr></else></ternary></expr></argument>, <argument pos:start="221:113" pos:end="221:113"><expr pos:start="221:113" pos:end="221:113"><literal type="number" pos:start="221:113" pos:end="221:113">1</literal></expr></argument>, <argument pos:start="221:116" pos:end="221:116"><expr pos:start="221:116" pos:end="221:116"><literal type="number" pos:start="221:116" pos:end="221:116">8</literal></expr></argument>, <argument pos:start="221:119" pos:end="221:124"><expr pos:start="221:119" pos:end="221:124"><name pos:start="221:119" pos:end="221:124">mquant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="225:21" pos:end="225:49"><expr pos:start="225:21" pos:end="225:48"><name pos:start="225:21" pos:end="225:29">block_cbp</name> <operator pos:start="225:31" pos:end="225:32">|=</operator> <literal type="number" pos:start="225:34" pos:end="225:36">0xF</literal> <operator pos:start="225:38" pos:end="225:39">&lt;&lt;</operator> <operator pos:start="225:41" pos:end="225:41">(</operator><name pos:start="225:42" pos:end="225:42">i</name> <operator pos:start="225:44" pos:end="225:45">&lt;&lt;</operator> <literal type="number" pos:start="225:47" pos:end="225:47">2</literal><operator pos:start="225:48" pos:end="225:48">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="227:19" pos:end="267:17">else if<condition pos:start="227:26" pos:end="227:30">(<expr pos:start="227:27" pos:end="227:29"><name pos:start="227:27" pos:end="227:29">val</name></expr>)</condition> <block pos:start="227:32" pos:end="267:17">{<block_content pos:start="229:21" pos:end="265:36">

                    <decl_stmt pos:start="229:21" pos:end="229:62"><decl pos:start="229:21" pos:end="229:36"><type pos:start="229:21" pos:end="229:23"><name pos:start="229:21" pos:end="229:23">int</name></type> <name pos:start="229:25" pos:end="229:32">left_cbp</name> <init pos:start="229:34" pos:end="229:36">= <expr pos:start="229:36" pos:end="229:36"><literal type="number" pos:start="229:36" pos:end="229:36">0</literal></expr></init></decl>, <decl pos:start="229:39" pos:end="229:49"><type ref="prev" pos:start="229:21" pos:end="229:23"/><name pos:start="229:39" pos:end="229:45">top_cbp</name> <init pos:start="229:47" pos:end="229:49">= <expr pos:start="229:49" pos:end="229:49"><literal type="number" pos:start="229:49" pos:end="229:49">0</literal></expr></init></decl>, <decl pos:start="229:52" pos:end="229:61"><type ref="prev" pos:start="229:21" pos:end="229:23"/><name pos:start="229:52" pos:end="229:57">filter</name> <init pos:start="229:59" pos:end="229:61">= <expr pos:start="229:61" pos:end="229:61"><literal type="number" pos:start="229:61" pos:end="229:61">0</literal></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="231:21" pos:end="257:21"><if pos:start="231:21" pos:end="257:21">if<condition pos:start="231:23" pos:end="231:128">(<expr pos:start="231:24" pos:end="231:127"><name pos:start="231:24" pos:end="231:40">apply_loop_filter</name> <operator pos:start="231:42" pos:end="231:43">&amp;&amp;</operator> <name pos:start="231:45" pos:end="231:51"><name pos:start="231:45" pos:end="231:45">s</name><operator pos:start="231:46" pos:end="231:47">-&gt;</operator><name pos:start="231:48" pos:end="231:51">mb_x</name></name> <operator pos:start="231:53" pos:end="231:54">&amp;&amp;</operator> <name pos:start="231:56" pos:end="231:62"><name pos:start="231:56" pos:end="231:56">s</name><operator pos:start="231:57" pos:end="231:58">-&gt;</operator><name pos:start="231:59" pos:end="231:62">mb_x</name></name> <operator pos:start="231:64" pos:end="231:65">!=</operator> <operator pos:start="231:67" pos:end="231:67">(</operator><name pos:start="231:68" pos:end="231:78"><name pos:start="231:68" pos:end="231:68">s</name><operator pos:start="231:69" pos:end="231:70">-&gt;</operator><name pos:start="231:71" pos:end="231:78">mb_width</name></name> <operator pos:start="231:80" pos:end="231:80">-</operator> <literal type="number" pos:start="231:82" pos:end="231:82">1</literal><operator pos:start="231:83" pos:end="231:83">)</operator> <operator pos:start="231:85" pos:end="231:86">&amp;&amp;</operator> <name pos:start="231:88" pos:end="231:94"><name pos:start="231:88" pos:end="231:88">s</name><operator pos:start="231:89" pos:end="231:90">-&gt;</operator><name pos:start="231:91" pos:end="231:94">mb_y</name></name> <operator pos:start="231:96" pos:end="231:97">&amp;&amp;</operator> <name pos:start="231:99" pos:end="231:105"><name pos:start="231:99" pos:end="231:99">s</name><operator pos:start="231:100" pos:end="231:101">-&gt;</operator><name pos:start="231:102" pos:end="231:105">mb_y</name></name> <operator pos:start="231:107" pos:end="231:108">!=</operator> <operator pos:start="231:110" pos:end="231:110">(</operator><name pos:start="231:111" pos:end="231:122"><name pos:start="231:111" pos:end="231:111">s</name><operator pos:start="231:112" pos:end="231:113">-&gt;</operator><name pos:start="231:114" pos:end="231:122">mb_height</name></name> <operator pos:start="231:124" pos:end="231:124">-</operator> <literal type="number" pos:start="231:126" pos:end="231:126">1</literal><operator pos:start="231:127" pos:end="231:127">)</operator></expr>)</condition><block pos:start="231:129" pos:end="257:21">{<block_content pos:start="233:25" pos:end="255:126">

                        <expr_stmt pos:start="233:25" pos:end="233:35"><expr pos:start="233:25" pos:end="233:34"><name pos:start="233:25" pos:end="233:30">filter</name> <operator pos:start="233:32" pos:end="233:32">=</operator> <literal type="number" pos:start="233:34" pos:end="233:34">1</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="235:25" pos:end="247:25"><if pos:start="235:25" pos:end="241:25">if<condition pos:start="235:27" pos:end="235:33">(<expr pos:start="235:28" pos:end="235:32"><name pos:start="235:28" pos:end="235:28">i</name> <operator pos:start="235:30" pos:end="235:30">&amp;</operator> <literal type="number" pos:start="235:32" pos:end="235:32">4</literal></expr>)</condition><block pos:start="235:34" pos:end="241:25">{<block_content pos:start="237:29" pos:end="239:81">

                            <expr_stmt pos:start="237:29" pos:end="237:81"><expr pos:start="237:29" pos:end="237:80"><name pos:start="237:29" pos:end="237:36">left_cbp</name> <operator pos:start="237:38" pos:end="237:38">=</operator> <name pos:start="237:40" pos:end="237:58"><name pos:start="237:40" pos:end="237:40">v</name><operator pos:start="237:41" pos:end="237:42">-&gt;</operator><name pos:start="237:43" pos:end="237:45">cbp</name><index pos:start="237:46" pos:end="237:58">[<expr pos:start="237:47" pos:end="237:57"><name pos:start="237:47" pos:end="237:53"><name pos:start="237:47" pos:end="237:47">s</name><operator pos:start="237:48" pos:end="237:49">-&gt;</operator><name pos:start="237:50" pos:end="237:53">mb_x</name></name> <operator pos:start="237:55" pos:end="237:55">-</operator> <literal type="number" pos:start="237:57" pos:end="237:57">1</literal></expr>]</index></name>            <operator pos:start="237:71" pos:end="237:72">&gt;&gt;</operator> <operator pos:start="237:74" pos:end="237:74">(</operator><name pos:start="237:75" pos:end="237:75">i</name> <operator pos:start="237:77" pos:end="237:77">*</operator> <literal type="number" pos:start="237:79" pos:end="237:79">4</literal><operator pos:start="237:80" pos:end="237:80">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="239:29" pos:end="239:81"><expr pos:start="239:29" pos:end="239:80"><name pos:start="239:29" pos:end="239:35">top_cbp</name>  <operator pos:start="239:38" pos:end="239:38">=</operator> <name pos:start="239:40" pos:end="239:69"><name pos:start="239:40" pos:end="239:40">v</name><operator pos:start="239:41" pos:end="239:42">-&gt;</operator><name pos:start="239:43" pos:end="239:45">cbp</name><index pos:start="239:46" pos:end="239:69">[<expr pos:start="239:47" pos:end="239:68"><name pos:start="239:47" pos:end="239:53"><name pos:start="239:47" pos:end="239:47">s</name><operator pos:start="239:48" pos:end="239:49">-&gt;</operator><name pos:start="239:50" pos:end="239:53">mb_x</name></name> <operator pos:start="239:55" pos:end="239:55">-</operator> <name pos:start="239:57" pos:end="239:68"><name pos:start="239:57" pos:end="239:57">s</name><operator pos:start="239:58" pos:end="239:59">-&gt;</operator><name pos:start="239:60" pos:end="239:68">mb_stride</name></name></expr>]</index></name> <operator pos:start="239:71" pos:end="239:72">&gt;&gt;</operator> <operator pos:start="239:74" pos:end="239:74">(</operator><name pos:start="239:75" pos:end="239:75">i</name> <operator pos:start="239:77" pos:end="239:77">*</operator> <literal type="number" pos:start="239:79" pos:end="239:79">4</literal><operator pos:start="239:80" pos:end="239:80">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></if><else pos:start="241:26" pos:end="247:25">else<block pos:start="241:30" pos:end="247:25">{<block_content pos:start="243:29" pos:end="245:116">

                            <expr_stmt pos:start="243:29" pos:end="243:115"><expr pos:start="243:29" pos:end="243:114"><name pos:start="243:29" pos:end="243:36">left_cbp</name> <operator pos:start="243:38" pos:end="243:38">=</operator> <ternary pos:start="243:40" pos:end="243:114"><condition pos:start="243:40" pos:end="243:48"><expr pos:start="243:40" pos:end="243:46"><operator pos:start="243:40" pos:end="243:40">(</operator><name pos:start="243:41" pos:end="243:41">i</name> <operator pos:start="243:43" pos:end="243:43">&amp;</operator> <literal type="number" pos:start="243:45" pos:end="243:45">1</literal><operator pos:start="243:46" pos:end="243:46">)</operator></expr> ?</condition><then pos:start="243:50" pos:end="243:67"> <expr pos:start="243:50" pos:end="243:67"><operator pos:start="243:50" pos:end="243:50">(</operator><name pos:start="243:51" pos:end="243:53">cbp</name> <operator pos:start="243:55" pos:end="243:56">&gt;&gt;</operator> <operator pos:start="243:58" pos:end="243:58">(</operator><operator pos:start="243:59" pos:end="243:59">(</operator><name pos:start="243:60" pos:end="243:60">i</name><operator pos:start="243:61" pos:end="243:61">-</operator><literal type="number" pos:start="243:62" pos:end="243:62">1</literal><operator pos:start="243:63" pos:end="243:63">)</operator><operator pos:start="243:64" pos:end="243:64">*</operator><literal type="number" pos:start="243:65" pos:end="243:65">4</literal><operator pos:start="243:66" pos:end="243:66">)</operator><operator pos:start="243:67" pos:end="243:67">)</operator></expr> </then><else pos:start="243:69" pos:end="243:114">: <expr pos:start="243:71" pos:end="243:114"><operator pos:start="243:71" pos:end="243:71">(</operator><name pos:start="243:72" pos:end="243:90"><name pos:start="243:72" pos:end="243:72">v</name><operator pos:start="243:73" pos:end="243:74">-&gt;</operator><name pos:start="243:75" pos:end="243:77">cbp</name><index pos:start="243:78" pos:end="243:90">[<expr pos:start="243:79" pos:end="243:89"><name pos:start="243:79" pos:end="243:85"><name pos:start="243:79" pos:end="243:79">s</name><operator pos:start="243:80" pos:end="243:81">-&gt;</operator><name pos:start="243:82" pos:end="243:85">mb_x</name></name> <operator pos:start="243:87" pos:end="243:87">-</operator> <literal type="number" pos:start="243:89" pos:end="243:89">1</literal></expr>]</index></name>           <operator pos:start="243:102" pos:end="243:103">&gt;&gt;</operator> <operator pos:start="243:105" pos:end="243:105">(</operator><operator pos:start="243:106" pos:end="243:106">(</operator><name pos:start="243:107" pos:end="243:107">i</name><operator pos:start="243:108" pos:end="243:108">+</operator><literal type="number" pos:start="243:109" pos:end="243:109">1</literal><operator pos:start="243:110" pos:end="243:110">)</operator><operator pos:start="243:111" pos:end="243:111">*</operator><literal type="number" pos:start="243:112" pos:end="243:112">4</literal><operator pos:start="243:113" pos:end="243:113">)</operator><operator pos:start="243:114" pos:end="243:114">)</operator></expr></else></ternary></expr>;</expr_stmt>

                            <expr_stmt pos:start="245:29" pos:end="245:116"><expr pos:start="245:29" pos:end="245:115"><name pos:start="245:29" pos:end="245:35">top_cbp</name>  <operator pos:start="245:38" pos:end="245:38">=</operator> <ternary pos:start="245:40" pos:end="245:115"><condition pos:start="245:40" pos:end="245:48"><expr pos:start="245:40" pos:end="245:46"><operator pos:start="245:40" pos:end="245:40">(</operator><name pos:start="245:41" pos:end="245:41">i</name> <operator pos:start="245:43" pos:end="245:43">&amp;</operator> <literal type="number" pos:start="245:45" pos:end="245:45">2</literal><operator pos:start="245:46" pos:end="245:46">)</operator></expr> ?</condition><then pos:start="245:50" pos:end="245:67"> <expr pos:start="245:50" pos:end="245:67"><operator pos:start="245:50" pos:end="245:50">(</operator><name pos:start="245:51" pos:end="245:53">cbp</name> <operator pos:start="245:55" pos:end="245:56">&gt;&gt;</operator> <operator pos:start="245:58" pos:end="245:58">(</operator><operator pos:start="245:59" pos:end="245:59">(</operator><name pos:start="245:60" pos:end="245:60">i</name><operator pos:start="245:61" pos:end="245:61">-</operator><literal type="number" pos:start="245:62" pos:end="245:62">2</literal><operator pos:start="245:63" pos:end="245:63">)</operator><operator pos:start="245:64" pos:end="245:64">*</operator><literal type="number" pos:start="245:65" pos:end="245:65">4</literal><operator pos:start="245:66" pos:end="245:66">)</operator><operator pos:start="245:67" pos:end="245:67">)</operator></expr> </then><else pos:start="245:69" pos:end="245:115">: <expr pos:start="245:71" pos:end="245:115"><operator pos:start="245:71" pos:end="245:71">(</operator><name pos:start="245:72" pos:end="245:101"><name pos:start="245:72" pos:end="245:72">v</name><operator pos:start="245:73" pos:end="245:74">-&gt;</operator><name pos:start="245:75" pos:end="245:77">cbp</name><index pos:start="245:78" pos:end="245:101">[<expr pos:start="245:79" pos:end="245:100"><name pos:start="245:79" pos:end="245:85"><name pos:start="245:79" pos:end="245:79">s</name><operator pos:start="245:80" pos:end="245:81">-&gt;</operator><name pos:start="245:82" pos:end="245:85">mb_x</name></name> <operator pos:start="245:87" pos:end="245:87">-</operator> <name pos:start="245:89" pos:end="245:100"><name pos:start="245:89" pos:end="245:89">s</name><operator pos:start="245:90" pos:end="245:91">-&gt;</operator><name pos:start="245:92" pos:end="245:100">mb_stride</name></name></expr>]</index></name> <operator pos:start="245:103" pos:end="245:104">&gt;&gt;</operator> <operator pos:start="245:106" pos:end="245:106">(</operator><operator pos:start="245:107" pos:end="245:107">(</operator><name pos:start="245:108" pos:end="245:108">i</name><operator pos:start="245:109" pos:end="245:109">+</operator><literal type="number" pos:start="245:110" pos:end="245:110">2</literal><operator pos:start="245:111" pos:end="245:111">)</operator><operator pos:start="245:112" pos:end="245:112">*</operator><literal type="number" pos:start="245:113" pos:end="245:113">4</literal><operator pos:start="245:114" pos:end="245:114">)</operator><operator pos:start="245:115" pos:end="245:115">)</operator></expr></else></ternary></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="249:25" pos:end="251:126"><if pos:start="249:25" pos:end="251:126">if<condition pos:start="249:27" pos:end="249:42">(<expr pos:start="249:28" pos:end="249:41"><name pos:start="249:28" pos:end="249:35">left_cbp</name> <operator pos:start="249:37" pos:end="249:37">&amp;</operator> <literal type="number" pos:start="249:39" pos:end="249:41">0xC</literal></expr>)</condition><block type="pseudo" pos:start="251:29" pos:end="251:126"><block_content pos:start="251:29" pos:end="251:126">

                            <expr_stmt pos:start="251:29" pos:end="251:126"><expr pos:start="251:29" pos:end="251:125"><call pos:start="251:29" pos:end="251:125"><name pos:start="251:29" pos:end="251:50"><name pos:start="251:29" pos:end="251:29">s</name><operator pos:start="251:30" pos:end="251:31">-&gt;</operator><name pos:start="251:32" pos:end="251:34">dsp</name><operator pos:start="251:35" pos:end="251:35">.</operator><name pos:start="251:36" pos:end="251:50">vc1_loop_filter</name></name><argument_list pos:start="251:51" pos:end="251:125">(<argument pos:start="251:52" pos:end="251:73"><expr pos:start="251:52" pos:end="251:73"><name pos:start="251:52" pos:end="251:67"><name pos:start="251:52" pos:end="251:52">s</name><operator pos:start="251:53" pos:end="251:54">-&gt;</operator><name pos:start="251:55" pos:end="251:58">dest</name><index pos:start="251:59" pos:end="251:67">[<expr pos:start="251:60" pos:end="251:66"><name pos:start="251:60" pos:end="251:66">dst_idx</name></expr>]</index></name> <operator pos:start="251:69" pos:end="251:69">+</operator> <name pos:start="251:71" pos:end="251:73">off</name></expr></argument>, <argument pos:start="251:76" pos:end="251:76"><expr pos:start="251:76" pos:end="251:76"><literal type="number" pos:start="251:76" pos:end="251:76">1</literal></expr></argument>, <argument pos:start="251:79" pos:end="251:113"><expr pos:start="251:79" pos:end="251:113"><ternary pos:start="251:79" pos:end="251:113"><condition pos:start="251:79" pos:end="251:85"><expr pos:start="251:79" pos:end="251:83"><name pos:start="251:79" pos:end="251:79">i</name> <operator pos:start="251:81" pos:end="251:81">&amp;</operator> <literal type="number" pos:start="251:83" pos:end="251:83">4</literal></expr> ?</condition><then pos:start="251:87" pos:end="251:99"> <expr pos:start="251:87" pos:end="251:99"><name pos:start="251:87" pos:end="251:99"><name pos:start="251:87" pos:end="251:87">s</name><operator pos:start="251:88" pos:end="251:89">-&gt;</operator><name pos:start="251:90" pos:end="251:99">uvlinesize</name></name></expr> </then><else pos:start="251:101" pos:end="251:113">: <expr pos:start="251:103" pos:end="251:113"><name pos:start="251:103" pos:end="251:113"><name pos:start="251:103" pos:end="251:103">s</name><operator pos:start="251:104" pos:end="251:105">-&gt;</operator><name pos:start="251:106" pos:end="251:113">linesize</name></name></expr></else></ternary></expr></argument>, <argument pos:start="251:116" pos:end="251:116"><expr pos:start="251:116" pos:end="251:116"><literal type="number" pos:start="251:116" pos:end="251:116">8</literal></expr></argument>, <argument pos:start="251:119" pos:end="251:124"><expr pos:start="251:119" pos:end="251:124"><name pos:start="251:119" pos:end="251:124">mquant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="253:25" pos:end="255:126"><if pos:start="253:25" pos:end="255:126">if<condition pos:start="253:27" pos:end="253:42">(<expr pos:start="253:28" pos:end="253:41"><name pos:start="253:28" pos:end="253:34">top_cbp</name>  <operator pos:start="253:37" pos:end="253:37">&amp;</operator> <literal type="number" pos:start="253:39" pos:end="253:41">0xA</literal></expr>)</condition><block type="pseudo" pos:start="255:29" pos:end="255:126"><block_content pos:start="255:29" pos:end="255:126">

                            <expr_stmt pos:start="255:29" pos:end="255:126"><expr pos:start="255:29" pos:end="255:125"><call pos:start="255:29" pos:end="255:125"><name pos:start="255:29" pos:end="255:50"><name pos:start="255:29" pos:end="255:29">s</name><operator pos:start="255:30" pos:end="255:31">-&gt;</operator><name pos:start="255:32" pos:end="255:34">dsp</name><operator pos:start="255:35" pos:end="255:35">.</operator><name pos:start="255:36" pos:end="255:50">vc1_loop_filter</name></name><argument_list pos:start="255:51" pos:end="255:125">(<argument pos:start="255:52" pos:end="255:73"><expr pos:start="255:52" pos:end="255:73"><name pos:start="255:52" pos:end="255:67"><name pos:start="255:52" pos:end="255:52">s</name><operator pos:start="255:53" pos:end="255:54">-&gt;</operator><name pos:start="255:55" pos:end="255:58">dest</name><index pos:start="255:59" pos:end="255:67">[<expr pos:start="255:60" pos:end="255:66"><name pos:start="255:60" pos:end="255:66">dst_idx</name></expr>]</index></name> <operator pos:start="255:69" pos:end="255:69">+</operator> <name pos:start="255:71" pos:end="255:73">off</name></expr></argument>, <argument pos:start="255:76" pos:end="255:110"><expr pos:start="255:76" pos:end="255:110"><ternary pos:start="255:76" pos:end="255:110"><condition pos:start="255:76" pos:end="255:82"><expr pos:start="255:76" pos:end="255:80"><name pos:start="255:76" pos:end="255:76">i</name> <operator pos:start="255:78" pos:end="255:78">&amp;</operator> <literal type="number" pos:start="255:80" pos:end="255:80">4</literal></expr> ?</condition><then pos:start="255:84" pos:end="255:96"> <expr pos:start="255:84" pos:end="255:96"><name pos:start="255:84" pos:end="255:96"><name pos:start="255:84" pos:end="255:84">s</name><operator pos:start="255:85" pos:end="255:86">-&gt;</operator><name pos:start="255:87" pos:end="255:96">uvlinesize</name></name></expr> </then><else pos:start="255:98" pos:end="255:110">: <expr pos:start="255:100" pos:end="255:110"><name pos:start="255:100" pos:end="255:110"><name pos:start="255:100" pos:end="255:100">s</name><operator pos:start="255:101" pos:end="255:102">-&gt;</operator><name pos:start="255:103" pos:end="255:110">linesize</name></name></expr></else></ternary></expr></argument>, <argument pos:start="255:113" pos:end="255:113"><expr pos:start="255:113" pos:end="255:113"><literal type="number" pos:start="255:113" pos:end="255:113">1</literal></expr></argument>, <argument pos:start="255:116" pos:end="255:116"><expr pos:start="255:116" pos:end="255:116"><literal type="number" pos:start="255:116" pos:end="255:116">8</literal></expr></argument>, <argument pos:start="255:119" pos:end="255:124"><expr pos:start="255:119" pos:end="255:124"><name pos:start="255:119" pos:end="255:124">mquant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:214"><expr pos:start="259:21" pos:end="259:213"><name pos:start="259:21" pos:end="259:23">pat</name> <operator pos:start="259:25" pos:end="259:25">=</operator> <call pos:start="259:27" pos:end="259:213"><name pos:start="259:27" pos:end="259:44">vc1_decode_p_block</name><argument_list pos:start="259:45" pos:end="259:213">(<argument pos:start="259:46" pos:end="259:46"><expr pos:start="259:46" pos:end="259:46"><name pos:start="259:46" pos:end="259:46">v</name></expr></argument>, <argument pos:start="259:49" pos:end="259:59"><expr pos:start="259:49" pos:end="259:59"><name pos:start="259:49" pos:end="259:59"><name pos:start="259:49" pos:end="259:49">s</name><operator pos:start="259:50" pos:end="259:51">-&gt;</operator><name pos:start="259:52" pos:end="259:56">block</name><index pos:start="259:57" pos:end="259:59">[<expr pos:start="259:58" pos:end="259:58"><name pos:start="259:58" pos:end="259:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="259:62" pos:end="259:62"><expr pos:start="259:62" pos:end="259:62"><name pos:start="259:62" pos:end="259:62">i</name></expr></argument>, <argument pos:start="259:65" pos:end="259:70"><expr pos:start="259:65" pos:end="259:70"><name pos:start="259:65" pos:end="259:70">mquant</name></expr></argument>, <argument pos:start="259:73" pos:end="259:76"><expr pos:start="259:73" pos:end="259:76"><name pos:start="259:73" pos:end="259:76">ttmb</name></expr></argument>, <argument pos:start="259:79" pos:end="259:89"><expr pos:start="259:79" pos:end="259:89"><name pos:start="259:79" pos:end="259:89">first_block</name></expr></argument>, <argument pos:start="259:92" pos:end="259:113"><expr pos:start="259:92" pos:end="259:113"><name pos:start="259:92" pos:end="259:107"><name pos:start="259:92" pos:end="259:92">s</name><operator pos:start="259:93" pos:end="259:94">-&gt;</operator><name pos:start="259:95" pos:end="259:98">dest</name><index pos:start="259:99" pos:end="259:107">[<expr pos:start="259:100" pos:end="259:106"><name pos:start="259:100" pos:end="259:106">dst_idx</name></expr>]</index></name> <operator pos:start="259:109" pos:end="259:109">+</operator> <name pos:start="259:111" pos:end="259:113">off</name></expr></argument>, <argument pos:start="259:116" pos:end="259:146"><expr pos:start="259:116" pos:end="259:146"><ternary pos:start="259:116" pos:end="259:146"><condition pos:start="259:116" pos:end="259:121"><expr pos:start="259:116" pos:end="259:120"><operator pos:start="259:116" pos:end="259:116">(</operator><name pos:start="259:117" pos:end="259:117">i</name><operator pos:start="259:118" pos:end="259:118">&amp;</operator><literal type="number" pos:start="259:119" pos:end="259:119">4</literal><operator pos:start="259:120" pos:end="259:120">)</operator></expr>?</condition><then pos:start="259:122" pos:end="259:134"><expr pos:start="259:122" pos:end="259:134"><name pos:start="259:122" pos:end="259:134"><name pos:start="259:122" pos:end="259:122">s</name><operator pos:start="259:123" pos:end="259:124">-&gt;</operator><name pos:start="259:125" pos:end="259:134">uvlinesize</name></name></expr></then><else pos:start="259:135" pos:end="259:146">:<expr pos:start="259:136" pos:end="259:146"><name pos:start="259:136" pos:end="259:146"><name pos:start="259:136" pos:end="259:136">s</name><operator pos:start="259:137" pos:end="259:138">-&gt;</operator><name pos:start="259:139" pos:end="259:146">linesize</name></name></expr></else></ternary></expr></argument>, <argument pos:start="259:149" pos:end="259:185"><expr pos:start="259:149" pos:end="259:185"><operator pos:start="259:149" pos:end="259:149">(</operator><name pos:start="259:150" pos:end="259:150">i</name><operator pos:start="259:151" pos:end="259:151">&amp;</operator><literal type="number" pos:start="259:152" pos:end="259:152">4</literal><operator pos:start="259:153" pos:end="259:153">)</operator> <operator pos:start="259:155" pos:end="259:156">&amp;&amp;</operator> <operator pos:start="259:158" pos:end="259:158">(</operator><name pos:start="259:159" pos:end="259:166"><name pos:start="259:159" pos:end="259:159">s</name><operator pos:start="259:160" pos:end="259:161">-&gt;</operator><name pos:start="259:162" pos:end="259:166">flags</name></name> <operator pos:start="259:168" pos:end="259:168">&amp;</operator> <name pos:start="259:170" pos:end="259:184">CODEC_FLAG_GRAY</name><operator pos:start="259:185" pos:end="259:185">)</operator></expr></argument>, <argument pos:start="259:188" pos:end="259:193"><expr pos:start="259:188" pos:end="259:193"><name pos:start="259:188" pos:end="259:193">filter</name></expr></argument>, <argument pos:start="259:196" pos:end="259:203"><expr pos:start="259:196" pos:end="259:203"><name pos:start="259:196" pos:end="259:203">left_cbp</name></expr></argument>, <argument pos:start="259:206" pos:end="259:212"><expr pos:start="259:206" pos:end="259:212"><name pos:start="259:206" pos:end="259:212">top_cbp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:49"><expr pos:start="261:21" pos:end="261:48"><name pos:start="261:21" pos:end="261:29">block_cbp</name> <operator pos:start="261:31" pos:end="261:32">|=</operator> <name pos:start="261:34" pos:end="261:36">pat</name> <operator pos:start="261:38" pos:end="261:39">&lt;&lt;</operator> <operator pos:start="261:41" pos:end="261:41">(</operator><name pos:start="261:42" pos:end="261:42">i</name> <operator pos:start="261:44" pos:end="261:45">&lt;&lt;</operator> <literal type="number" pos:start="261:47" pos:end="261:47">2</literal><operator pos:start="261:48" pos:end="261:48">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="263:21" pos:end="263:56"><if pos:start="263:21" pos:end="263:56">if<condition pos:start="263:23" pos:end="263:45">(<expr pos:start="263:24" pos:end="263:44"><operator pos:start="263:24" pos:end="263:24">!</operator><name pos:start="263:25" pos:end="263:32"><name pos:start="263:25" pos:end="263:25">v</name><operator pos:start="263:26" pos:end="263:27">-&gt;</operator><name pos:start="263:28" pos:end="263:32">ttmbf</name></name> <operator pos:start="263:34" pos:end="263:35">&amp;&amp;</operator> <name pos:start="263:37" pos:end="263:40">ttmb</name> <operator pos:start="263:42" pos:end="263:42">&lt;</operator> <literal type="number" pos:start="263:44" pos:end="263:44">8</literal></expr>)</condition><block type="pseudo" pos:start="263:47" pos:end="263:56"><block_content pos:start="263:47" pos:end="263:56"> <expr_stmt pos:start="263:47" pos:end="263:56"><expr pos:start="263:47" pos:end="263:55"><name pos:start="263:47" pos:end="263:50">ttmb</name> <operator pos:start="263:52" pos:end="263:52">=</operator> <operator pos:start="263:54" pos:end="263:54">-</operator><literal type="number" pos:start="263:55" pos:end="263:55">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="265:21" pos:end="265:36"><expr pos:start="265:21" pos:end="265:35"><name pos:start="265:21" pos:end="265:31">first_block</name> <operator pos:start="265:33" pos:end="265:33">=</operator> <literal type="number" pos:start="265:35" pos:end="265:35">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if>

        <else pos:start="273:9" pos:end="297:9">else <comment type="line" pos:start="273:14" pos:end="273:22">//Skipped</comment>

        <block pos:start="275:9" pos:end="297:9">{<block_content pos:start="277:13" pos:end="295:21">

            <expr_stmt pos:start="277:13" pos:end="277:28"><expr pos:start="277:13" pos:end="277:27"><name pos:start="277:13" pos:end="277:23"><name pos:start="277:13" pos:end="277:13">s</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:23">mb_intra</name></name> <operator pos:start="277:25" pos:end="277:25">=</operator> <literal type="number" pos:start="277:27" pos:end="277:27">0</literal></expr>;</expr_stmt>

            <for pos:start="279:13" pos:end="285:13">for<control pos:start="279:16" pos:end="279:34">(<init pos:start="279:17" pos:end="279:22"><expr pos:start="279:17" pos:end="279:21"><name pos:start="279:17" pos:end="279:17">i</name> <operator pos:start="279:19" pos:end="279:19">=</operator> <literal type="number" pos:start="279:21" pos:end="279:21">0</literal></expr>;</init> <condition pos:start="279:24" pos:end="279:29"><expr pos:start="279:24" pos:end="279:28"><name pos:start="279:24" pos:end="279:24">i</name> <operator pos:start="279:26" pos:end="279:26">&lt;</operator> <literal type="number" pos:start="279:28" pos:end="279:28">6</literal></expr>;</condition> <incr pos:start="279:31" pos:end="279:33"><expr pos:start="279:31" pos:end="279:33"><name pos:start="279:31" pos:end="279:31">i</name><operator pos:start="279:32" pos:end="279:33">++</operator></expr></incr>)</control> <block pos:start="279:36" pos:end="285:13">{<block_content pos:start="281:17" pos:end="283:52">

                <expr_stmt pos:start="281:17" pos:end="281:53"><expr pos:start="281:17" pos:end="281:52"><name pos:start="281:17" pos:end="281:48"><name pos:start="281:17" pos:end="281:17">v</name><operator pos:start="281:18" pos:end="281:19">-&gt;</operator><name pos:start="281:20" pos:end="281:26">mb_type</name><index pos:start="281:27" pos:end="281:29">[<expr pos:start="281:28" pos:end="281:28"><literal type="number" pos:start="281:28" pos:end="281:28">0</literal></expr>]</index><index pos:start="281:30" pos:end="281:48">[<expr pos:start="281:31" pos:end="281:47"><name pos:start="281:31" pos:end="281:47"><name pos:start="281:31" pos:end="281:31">s</name><operator pos:start="281:32" pos:end="281:33">-&gt;</operator><name pos:start="281:34" pos:end="281:44">block_index</name><index pos:start="281:45" pos:end="281:47">[<expr pos:start="281:46" pos:end="281:46"><name pos:start="281:46" pos:end="281:46">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="281:50" pos:end="281:50">=</operator> <literal type="number" pos:start="281:52" pos:end="281:52">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="283:17" pos:end="283:52"><expr pos:start="283:17" pos:end="283:51"><name pos:start="283:17" pos:end="283:47"><name pos:start="283:17" pos:end="283:17">s</name><operator pos:start="283:18" pos:end="283:19">-&gt;</operator><name pos:start="283:20" pos:end="283:25">dc_val</name><index pos:start="283:26" pos:end="283:28">[<expr pos:start="283:27" pos:end="283:27"><literal type="number" pos:start="283:27" pos:end="283:27">0</literal></expr>]</index><index pos:start="283:29" pos:end="283:47">[<expr pos:start="283:30" pos:end="283:46"><name pos:start="283:30" pos:end="283:46"><name pos:start="283:30" pos:end="283:30">s</name><operator pos:start="283:31" pos:end="283:32">-&gt;</operator><name pos:start="283:33" pos:end="283:43">block_index</name><index pos:start="283:44" pos:end="283:46">[<expr pos:start="283:45" pos:end="283:45"><name pos:start="283:45" pos:end="283:45">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="283:49" pos:end="283:49">=</operator> <literal type="number" pos:start="283:51" pos:end="283:51">0</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="287:13" pos:end="287:62"><expr pos:start="287:13" pos:end="287:61"><name pos:start="287:13" pos:end="287:46"><name pos:start="287:13" pos:end="287:13">s</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:30">current_picture</name><operator pos:start="287:31" pos:end="287:31">.</operator><name pos:start="287:32" pos:end="287:38">mb_type</name><index pos:start="287:39" pos:end="287:46">[<expr pos:start="287:40" pos:end="287:45"><name pos:start="287:40" pos:end="287:45">mb_pos</name></expr>]</index></name> <operator pos:start="287:48" pos:end="287:48">=</operator> <name pos:start="287:50" pos:end="287:61">MB_TYPE_SKIP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:56"><expr pos:start="289:13" pos:end="289:55"><name pos:start="289:13" pos:end="289:51"><name pos:start="289:13" pos:end="289:13">s</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:30">current_picture</name><operator pos:start="289:31" pos:end="289:31">.</operator><name pos:start="289:32" pos:end="289:43">qscale_table</name><index pos:start="289:44" pos:end="289:51">[<expr pos:start="289:45" pos:end="289:50"><name pos:start="289:45" pos:end="289:50">mb_pos</name></expr>]</index></name> <operator pos:start="289:53" pos:end="289:53">=</operator> <literal type="number" pos:start="289:55" pos:end="289:55">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:78"><expr pos:start="291:13" pos:end="291:77"><call pos:start="291:13" pos:end="291:77"><name pos:start="291:13" pos:end="291:23">vc1_pred_mv</name><argument_list pos:start="291:24" pos:end="291:77">(<argument pos:start="291:25" pos:end="291:25"><expr pos:start="291:25" pos:end="291:25"><name pos:start="291:25" pos:end="291:25">s</name></expr></argument>, <argument pos:start="291:28" pos:end="291:28"><expr pos:start="291:28" pos:end="291:28"><literal type="number" pos:start="291:28" pos:end="291:28">0</literal></expr></argument>, <argument pos:start="291:31" pos:end="291:31"><expr pos:start="291:31" pos:end="291:31"><literal type="number" pos:start="291:31" pos:end="291:31">0</literal></expr></argument>, <argument pos:start="291:34" pos:end="291:34"><expr pos:start="291:34" pos:end="291:34"><literal type="number" pos:start="291:34" pos:end="291:34">0</literal></expr></argument>, <argument pos:start="291:37" pos:end="291:37"><expr pos:start="291:37" pos:end="291:37"><literal type="number" pos:start="291:37" pos:end="291:37">1</literal></expr></argument>, <argument pos:start="291:40" pos:end="291:49"><expr pos:start="291:40" pos:end="291:49"><name pos:start="291:40" pos:end="291:49"><name pos:start="291:40" pos:end="291:40">v</name><operator pos:start="291:41" pos:end="291:42">-&gt;</operator><name pos:start="291:43" pos:end="291:49">range_x</name></name></expr></argument>, <argument pos:start="291:52" pos:end="291:61"><expr pos:start="291:52" pos:end="291:61"><name pos:start="291:52" pos:end="291:61"><name pos:start="291:52" pos:end="291:52">v</name><operator pos:start="291:53" pos:end="291:54">-&gt;</operator><name pos:start="291:55" pos:end="291:61">range_y</name></name></expr></argument>, <argument pos:start="291:64" pos:end="291:76"><expr pos:start="291:64" pos:end="291:76"><name pos:start="291:64" pos:end="291:76"><name pos:start="291:64" pos:end="291:64">v</name><operator pos:start="291:65" pos:end="291:66">-&gt;</operator><name pos:start="291:67" pos:end="291:73">mb_type</name><index pos:start="291:74" pos:end="291:76">[<expr pos:start="291:75" pos:end="291:75"><literal type="number" pos:start="291:75" pos:end="291:75">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:29"><expr pos:start="293:13" pos:end="293:28"><call pos:start="293:13" pos:end="293:28"><name pos:start="293:13" pos:end="293:22">vc1_mc_1mv</name><argument_list pos:start="293:23" pos:end="293:28">(<argument pos:start="293:24" pos:end="293:24"><expr pos:start="293:24" pos:end="293:24"><name pos:start="293:24" pos:end="293:24">v</name></expr></argument>, <argument pos:start="293:27" pos:end="293:27"><expr pos:start="293:27" pos:end="293:27"><literal type="number" pos:start="293:27" pos:end="293:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="295:13" pos:end="295:21">return <expr pos:start="295:20" pos:end="295:20"><literal type="number" pos:start="295:20" pos:end="295:20">0</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <comment type="line" pos:start="299:7" pos:end="299:16">//1MV mode</comment>

    <else pos:start="301:5" pos:end="571:5">else <comment type="line" pos:start="301:10" pos:end="301:19">//4MV mode</comment>

    <block pos:start="303:5" pos:end="571:5">{<block_content pos:start="305:9" pos:end="569:9">

        <if_stmt pos:start="305:9" pos:end="569:9"><if pos:start="305:9" pos:end="535:9">if <condition pos:start="305:12" pos:end="305:40">(<expr pos:start="305:13" pos:end="305:20"><operator pos:start="305:13" pos:end="305:13">!</operator><name pos:start="305:14" pos:end="305:20">skipped</name></expr> <comment type="block" pos:start="305:22" pos:end="305:39">/* unskipped MB */</comment>)</condition>

        <block pos:start="307:9" pos:end="535:9">{<block_content pos:start="309:13" pos:end="533:21">

            <decl_stmt pos:start="309:13" pos:end="309:49"><decl pos:start="309:13" pos:end="309:31"><type pos:start="309:13" pos:end="309:15"><name pos:start="309:13" pos:end="309:15">int</name></type> <name pos:start="309:17" pos:end="309:27">intra_count</name> <init pos:start="309:29" pos:end="309:31">= <expr pos:start="309:31" pos:end="309:31"><literal type="number" pos:start="309:31" pos:end="309:31">0</literal></expr></init></decl>, <decl pos:start="309:34" pos:end="309:48"><type ref="prev" pos:start="309:13" pos:end="309:15"/><name pos:start="309:34" pos:end="309:44">coded_inter</name> <init pos:start="309:46" pos:end="309:48">= <expr pos:start="309:48" pos:end="309:48"><literal type="number" pos:start="309:48" pos:end="309:48">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="311:13" pos:end="311:41"><decl pos:start="311:13" pos:end="311:27"><type pos:start="311:13" pos:end="311:15"><name pos:start="311:13" pos:end="311:15">int</name></type> <name pos:start="311:17" pos:end="311:27"><name pos:start="311:17" pos:end="311:24">is_intra</name><index pos:start="311:25" pos:end="311:27">[<expr pos:start="311:26" pos:end="311:26"><literal type="number" pos:start="311:26" pos:end="311:26">6</literal></expr>]</index></name></decl>, <decl pos:start="311:30" pos:end="311:40"><type ref="prev" pos:start="311:13" pos:end="311:15"/><name pos:start="311:30" pos:end="311:40"><name pos:start="311:30" pos:end="311:37">is_coded</name><index pos:start="311:38" pos:end="311:40">[<expr pos:start="311:39" pos:end="311:39"><literal type="number" pos:start="311:39" pos:end="311:39">6</literal></expr>]</index></name></decl>;</decl_stmt>

            <comment type="block" pos:start="313:13" pos:end="313:27">/* Get CBPCY */</comment>

            <expr_stmt pos:start="315:13" pos:end="315:83"><expr pos:start="315:13" pos:end="315:82"><name pos:start="315:13" pos:end="315:15">cbp</name> <operator pos:start="315:17" pos:end="315:17">=</operator> <call pos:start="315:19" pos:end="315:82"><name pos:start="315:19" pos:end="315:26">get_vlc2</name><argument_list pos:start="315:27" pos:end="315:82">(<argument pos:start="315:28" pos:end="315:35"><expr pos:start="315:28" pos:end="315:35"><operator pos:start="315:28" pos:end="315:28">&amp;</operator><name pos:start="315:29" pos:end="315:35"><name pos:start="315:29" pos:end="315:29">v</name><operator pos:start="315:30" pos:end="315:31">-&gt;</operator><name pos:start="315:32" pos:end="315:32">s</name><operator pos:start="315:33" pos:end="315:33">.</operator><name pos:start="315:34" pos:end="315:35">gb</name></name></expr></argument>, <argument pos:start="315:38" pos:end="315:56"><expr pos:start="315:38" pos:end="315:56"><name pos:start="315:38" pos:end="315:56"><name pos:start="315:38" pos:end="315:38">v</name><operator pos:start="315:39" pos:end="315:40">-&gt;</operator><name pos:start="315:41" pos:end="315:49">cbpcy_vlc</name><operator pos:start="315:50" pos:end="315:51">-&gt;</operator><name pos:start="315:52" pos:end="315:56">table</name></name></expr></argument>, <argument pos:start="315:59" pos:end="315:78"><expr pos:start="315:59" pos:end="315:78"><name pos:start="315:59" pos:end="315:78">VC1_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="315:81" pos:end="315:81"><expr pos:start="315:81" pos:end="315:81"><literal type="number" pos:start="315:81" pos:end="315:81">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="317:13" pos:end="367:13">for <control pos:start="317:17" pos:end="317:31">(<init pos:start="317:18" pos:end="317:21"><expr pos:start="317:18" pos:end="317:20"><name pos:start="317:18" pos:end="317:18">i</name><operator pos:start="317:19" pos:end="317:19">=</operator><literal type="number" pos:start="317:20" pos:end="317:20">0</literal></expr>;</init> <condition pos:start="317:23" pos:end="317:26"><expr pos:start="317:23" pos:end="317:25"><name pos:start="317:23" pos:end="317:23">i</name><operator pos:start="317:24" pos:end="317:24">&lt;</operator><literal type="number" pos:start="317:25" pos:end="317:25">6</literal></expr>;</condition> <incr pos:start="317:28" pos:end="317:30"><expr pos:start="317:28" pos:end="317:30"><name pos:start="317:28" pos:end="317:28">i</name><operator pos:start="317:29" pos:end="317:30">++</operator></expr></incr>)</control>

            <block pos:start="319:13" pos:end="367:13">{<block_content pos:start="321:17" pos:end="365:74">

                <expr_stmt pos:start="321:17" pos:end="321:45"><expr pos:start="321:17" pos:end="321:44"><name pos:start="321:17" pos:end="321:19">val</name> <operator pos:start="321:21" pos:end="321:21">=</operator> <operator pos:start="321:23" pos:end="321:23">(</operator><operator pos:start="321:24" pos:end="321:24">(</operator><name pos:start="321:25" pos:end="321:27">cbp</name> <operator pos:start="321:29" pos:end="321:30">&gt;&gt;</operator> <operator pos:start="321:32" pos:end="321:32">(</operator><literal type="number" pos:start="321:33" pos:end="321:35">5</literal> <operator pos:start="321:35" pos:end="321:35">-</operator> <name pos:start="321:37" pos:end="321:37">i</name><operator pos:start="321:38" pos:end="321:38">)</operator><operator pos:start="321:39" pos:end="321:39">)</operator> <operator pos:start="321:41" pos:end="321:41">&amp;</operator> <literal type="number" pos:start="321:43" pos:end="321:43">1</literal><operator pos:start="321:44" pos:end="321:44">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="323:17" pos:end="323:52"><expr pos:start="323:17" pos:end="323:51"><name pos:start="323:17" pos:end="323:47"><name pos:start="323:17" pos:end="323:17">s</name><operator pos:start="323:18" pos:end="323:19">-&gt;</operator><name pos:start="323:20" pos:end="323:25">dc_val</name><index pos:start="323:26" pos:end="323:28">[<expr pos:start="323:27" pos:end="323:27"><literal type="number" pos:start="323:27" pos:end="323:27">0</literal></expr>]</index><index pos:start="323:29" pos:end="323:47">[<expr pos:start="323:30" pos:end="323:46"><name pos:start="323:30" pos:end="323:46"><name pos:start="323:30" pos:end="323:30">s</name><operator pos:start="323:31" pos:end="323:32">-&gt;</operator><name pos:start="323:33" pos:end="323:43">block_index</name><index pos:start="323:44" pos:end="323:46">[<expr pos:start="323:45" pos:end="323:45"><name pos:start="323:45" pos:end="323:45">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="323:49" pos:end="323:49">=</operator> <literal type="number" pos:start="323:51" pos:end="323:51">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="325:17" pos:end="325:32"><expr pos:start="325:17" pos:end="325:31"><name pos:start="325:17" pos:end="325:27"><name pos:start="325:17" pos:end="325:17">s</name><operator pos:start="325:18" pos:end="325:19">-&gt;</operator><name pos:start="325:20" pos:end="325:27">mb_intra</name></name> <operator pos:start="325:29" pos:end="325:29">=</operator> <literal type="number" pos:start="325:31" pos:end="325:31">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="327:17" pos:end="351:17"><if pos:start="327:17" pos:end="351:17">if<condition pos:start="327:19" pos:end="327:25">(<expr pos:start="327:20" pos:end="327:24"><name pos:start="327:20" pos:end="327:20">i</name> <operator pos:start="327:22" pos:end="327:22">&lt;</operator> <literal type="number" pos:start="327:24" pos:end="327:24">4</literal></expr>)</condition> <block pos:start="327:27" pos:end="351:17">{<block_content pos:start="329:21" pos:end="349:48">

                    <expr_stmt pos:start="329:21" pos:end="329:38"><expr pos:start="329:21" pos:end="329:37"><name pos:start="329:21" pos:end="329:25">dmv_x</name> <operator pos:start="329:27" pos:end="329:27">=</operator> <name pos:start="329:29" pos:end="329:33">dmv_y</name> <operator pos:start="329:35" pos:end="329:35">=</operator> <literal type="number" pos:start="329:37" pos:end="329:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="331:21" pos:end="331:36"><expr pos:start="331:21" pos:end="331:35"><name pos:start="331:21" pos:end="331:31"><name pos:start="331:21" pos:end="331:21">s</name><operator pos:start="331:22" pos:end="331:23">-&gt;</operator><name pos:start="331:24" pos:end="331:31">mb_intra</name></name> <operator pos:start="331:33" pos:end="331:33">=</operator> <literal type="number" pos:start="331:35" pos:end="331:35">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="333:21" pos:end="333:38"><expr pos:start="333:21" pos:end="333:37"><name pos:start="333:21" pos:end="333:33">mb_has_coeffs</name> <operator pos:start="333:35" pos:end="333:35">=</operator> <literal type="number" pos:start="333:37" pos:end="333:37">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="335:21" pos:end="339:21"><if pos:start="335:21" pos:end="339:21">if<condition pos:start="335:23" pos:end="335:27">(<expr pos:start="335:24" pos:end="335:26"><name pos:start="335:24" pos:end="335:26">val</name></expr>)</condition> <block pos:start="335:29" pos:end="339:21">{<block_content pos:start="337:25" pos:end="337:49">

                        <expr_stmt pos:start="337:25" pos:end="337:49"><expr pos:start="337:25" pos:end="337:48"><call pos:start="337:25" pos:end="337:48"><name pos:start="337:25" pos:end="337:34">GET_MVDATA</name><argument_list pos:start="337:35" pos:end="337:48">(<argument pos:start="337:36" pos:end="337:40"><expr pos:start="337:36" pos:end="337:40"><name pos:start="337:36" pos:end="337:40">dmv_x</name></expr></argument>, <argument pos:start="337:43" pos:end="337:47"><expr pos:start="337:43" pos:end="337:47"><name pos:start="337:43" pos:end="337:47">dmv_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="341:21" pos:end="341:94"><expr pos:start="341:21" pos:end="341:93"><call pos:start="341:21" pos:end="341:93"><name pos:start="341:21" pos:end="341:31">vc1_pred_mv</name><argument_list pos:start="341:32" pos:end="341:93">(<argument pos:start="341:33" pos:end="341:33"><expr pos:start="341:33" pos:end="341:33"><name pos:start="341:33" pos:end="341:33">s</name></expr></argument>, <argument pos:start="341:36" pos:end="341:36"><expr pos:start="341:36" pos:end="341:36"><name pos:start="341:36" pos:end="341:36">i</name></expr></argument>, <argument pos:start="341:39" pos:end="341:43"><expr pos:start="341:39" pos:end="341:43"><name pos:start="341:39" pos:end="341:43">dmv_x</name></expr></argument>, <argument pos:start="341:46" pos:end="341:50"><expr pos:start="341:46" pos:end="341:50"><name pos:start="341:46" pos:end="341:50">dmv_y</name></expr></argument>, <argument pos:start="341:53" pos:end="341:53"><expr pos:start="341:53" pos:end="341:53"><literal type="number" pos:start="341:53" pos:end="341:53">0</literal></expr></argument>, <argument pos:start="341:56" pos:end="341:65"><expr pos:start="341:56" pos:end="341:65"><name pos:start="341:56" pos:end="341:65"><name pos:start="341:56" pos:end="341:56">v</name><operator pos:start="341:57" pos:end="341:58">-&gt;</operator><name pos:start="341:59" pos:end="341:65">range_x</name></name></expr></argument>, <argument pos:start="341:68" pos:end="341:77"><expr pos:start="341:68" pos:end="341:77"><name pos:start="341:68" pos:end="341:77"><name pos:start="341:68" pos:end="341:68">v</name><operator pos:start="341:69" pos:end="341:70">-&gt;</operator><name pos:start="341:71" pos:end="341:77">range_y</name></name></expr></argument>, <argument pos:start="341:80" pos:end="341:92"><expr pos:start="341:80" pos:end="341:92"><name pos:start="341:80" pos:end="341:92"><name pos:start="341:80" pos:end="341:80">v</name><operator pos:start="341:81" pos:end="341:82">-&gt;</operator><name pos:start="341:83" pos:end="341:89">mb_type</name><index pos:start="341:90" pos:end="341:92">[<expr pos:start="341:91" pos:end="341:91"><literal type="number" pos:start="341:91" pos:end="341:91">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="343:21" pos:end="343:59"><if pos:start="343:21" pos:end="343:59">if<condition pos:start="343:23" pos:end="343:36">(<expr pos:start="343:24" pos:end="343:35"><operator pos:start="343:24" pos:end="343:24">!</operator><name pos:start="343:25" pos:end="343:35"><name pos:start="343:25" pos:end="343:25">s</name><operator pos:start="343:26" pos:end="343:27">-&gt;</operator><name pos:start="343:28" pos:end="343:35">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="343:38" pos:end="343:59"><block_content pos:start="343:38" pos:end="343:59"> <expr_stmt pos:start="343:38" pos:end="343:59"><expr pos:start="343:38" pos:end="343:58"><call pos:start="343:38" pos:end="343:58"><name pos:start="343:38" pos:end="343:52">vc1_mc_4mv_luma</name><argument_list pos:start="343:53" pos:end="343:58">(<argument pos:start="343:54" pos:end="343:54"><expr pos:start="343:54" pos:end="343:54"><name pos:start="343:54" pos:end="343:54">v</name></expr></argument>, <argument pos:start="343:57" pos:end="343:57"><expr pos:start="343:57" pos:end="343:57"><name pos:start="343:57" pos:end="343:57">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="345:21" pos:end="345:47"><expr pos:start="345:21" pos:end="345:46"><name pos:start="345:21" pos:end="345:31">intra_count</name> <operator pos:start="345:33" pos:end="345:34">+=</operator> <name pos:start="345:36" pos:end="345:46"><name pos:start="345:36" pos:end="345:36">s</name><operator pos:start="345:37" pos:end="345:38">-&gt;</operator><name pos:start="345:39" pos:end="345:46">mb_intra</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="347:21" pos:end="347:46"><expr pos:start="347:21" pos:end="347:45"><name pos:start="347:21" pos:end="347:31"><name pos:start="347:21" pos:end="347:28">is_intra</name><index pos:start="347:29" pos:end="347:31">[<expr pos:start="347:30" pos:end="347:30"><name pos:start="347:30" pos:end="347:30">i</name></expr>]</index></name> <operator pos:start="347:33" pos:end="347:33">=</operator> <name pos:start="347:35" pos:end="347:45"><name pos:start="347:35" pos:end="347:35">s</name><operator pos:start="347:36" pos:end="347:37">-&gt;</operator><name pos:start="347:38" pos:end="347:45">mb_intra</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="349:21" pos:end="349:48"><expr pos:start="349:21" pos:end="349:47"><name pos:start="349:21" pos:end="349:31"><name pos:start="349:21" pos:end="349:28">is_coded</name><index pos:start="349:29" pos:end="349:31">[<expr pos:start="349:30" pos:end="349:30"><name pos:start="349:30" pos:end="349:30">i</name></expr>]</index></name> <operator pos:start="349:33" pos:end="349:33">=</operator> <name pos:start="349:35" pos:end="349:47">mb_has_coeffs</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="353:17" pos:end="359:17"><if pos:start="353:17" pos:end="359:17">if<condition pos:start="353:19" pos:end="353:23">(<expr pos:start="353:20" pos:end="353:22"><name pos:start="353:20" pos:end="353:20">i</name><operator pos:start="353:21" pos:end="353:21">&amp;</operator><literal type="number" pos:start="353:22" pos:end="353:22">4</literal></expr>)</condition><block pos:start="353:24" pos:end="359:17">{<block_content pos:start="355:21" pos:end="357:38">

                    <expr_stmt pos:start="355:21" pos:end="355:53"><expr pos:start="355:21" pos:end="355:52"><name pos:start="355:21" pos:end="355:31"><name pos:start="355:21" pos:end="355:28">is_intra</name><index pos:start="355:29" pos:end="355:31">[<expr pos:start="355:30" pos:end="355:30"><name pos:start="355:30" pos:end="355:30">i</name></expr>]</index></name> <operator pos:start="355:33" pos:end="355:33">=</operator> <operator pos:start="355:35" pos:end="355:35">(</operator><name pos:start="355:36" pos:end="355:46">intra_count</name> <operator pos:start="355:48" pos:end="355:49">&gt;=</operator> <literal type="number" pos:start="355:51" pos:end="355:51">3</literal><operator pos:start="355:52" pos:end="355:52">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="357:21" pos:end="357:38"><expr pos:start="357:21" pos:end="357:37"><name pos:start="357:21" pos:end="357:31"><name pos:start="357:21" pos:end="357:28">is_coded</name><index pos:start="357:29" pos:end="357:31">[<expr pos:start="357:30" pos:end="357:30"><name pos:start="357:30" pos:end="357:30">i</name></expr>]</index></name> <operator pos:start="357:33" pos:end="357:33">=</operator> <name pos:start="357:35" pos:end="357:37">val</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="361:17" pos:end="361:48"><if pos:start="361:17" pos:end="361:48">if<condition pos:start="361:19" pos:end="361:26">(<expr pos:start="361:20" pos:end="361:25"><name pos:start="361:20" pos:end="361:20">i</name> <operator pos:start="361:22" pos:end="361:23">==</operator> <literal type="number" pos:start="361:25" pos:end="361:25">4</literal></expr>)</condition><block type="pseudo" pos:start="361:28" pos:end="361:48"><block_content pos:start="361:28" pos:end="361:48"> <expr_stmt pos:start="361:28" pos:end="361:48"><expr pos:start="361:28" pos:end="361:47"><call pos:start="361:28" pos:end="361:47"><name pos:start="361:28" pos:end="361:44">vc1_mc_4mv_chroma</name><argument_list pos:start="361:45" pos:end="361:47">(<argument pos:start="361:46" pos:end="361:46"><expr pos:start="361:46" pos:end="361:46"><name pos:start="361:46" pos:end="361:46">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="363:17" pos:end="363:63"><expr pos:start="363:17" pos:end="363:62"><name pos:start="363:17" pos:end="363:48"><name pos:start="363:17" pos:end="363:17">v</name><operator pos:start="363:18" pos:end="363:19">-&gt;</operator><name pos:start="363:20" pos:end="363:26">mb_type</name><index pos:start="363:27" pos:end="363:29">[<expr pos:start="363:28" pos:end="363:28"><literal type="number" pos:start="363:28" pos:end="363:28">0</literal></expr>]</index><index pos:start="363:30" pos:end="363:48">[<expr pos:start="363:31" pos:end="363:47"><name pos:start="363:31" pos:end="363:47"><name pos:start="363:31" pos:end="363:31">s</name><operator pos:start="363:32" pos:end="363:33">-&gt;</operator><name pos:start="363:34" pos:end="363:44">block_index</name><index pos:start="363:45" pos:end="363:47">[<expr pos:start="363:46" pos:end="363:46"><name pos:start="363:46" pos:end="363:46">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="363:50" pos:end="363:50">=</operator> <name pos:start="363:52" pos:end="363:62"><name pos:start="363:52" pos:end="363:59">is_intra</name><index pos:start="363:60" pos:end="363:62">[<expr pos:start="363:61" pos:end="363:61"><name pos:start="363:61" pos:end="363:61">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="365:17" pos:end="365:74"><if pos:start="365:17" pos:end="365:74">if<condition pos:start="365:19" pos:end="365:32">(<expr pos:start="365:20" pos:end="365:31"><operator pos:start="365:20" pos:end="365:20">!</operator><name pos:start="365:21" pos:end="365:31">coded_inter</name></expr>)</condition><block type="pseudo" pos:start="365:34" pos:end="365:74"><block_content pos:start="365:34" pos:end="365:74"> <expr_stmt pos:start="365:34" pos:end="365:74"><expr pos:start="365:34" pos:end="365:73"><name pos:start="365:34" pos:end="365:44">coded_inter</name> <operator pos:start="365:46" pos:end="365:46">=</operator> <operator pos:start="365:48" pos:end="365:48">!</operator><name pos:start="365:49" pos:end="365:59"><name pos:start="365:49" pos:end="365:56">is_intra</name><index pos:start="365:57" pos:end="365:59">[<expr pos:start="365:58" pos:end="365:58"><name pos:start="365:58" pos:end="365:58">i</name></expr>]</index></name> <operator pos:start="365:61" pos:end="365:61">&amp;</operator> <name pos:start="365:63" pos:end="365:73"><name pos:start="365:63" pos:end="365:70">is_coded</name><index pos:start="365:71" pos:end="365:73">[<expr pos:start="365:72" pos:end="365:72"><name pos:start="365:72" pos:end="365:72">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <comment type="line" pos:start="369:13" pos:end="369:71">// if there are no coded blocks then don't do anything more</comment>

            <if_stmt pos:start="371:13" pos:end="371:54"><if pos:start="371:13" pos:end="371:54">if<condition pos:start="371:15" pos:end="371:44">(<expr pos:start="371:16" pos:end="371:43"><operator pos:start="371:16" pos:end="371:16">!</operator><name pos:start="371:17" pos:end="371:27">intra_count</name> <operator pos:start="371:29" pos:end="371:30">&amp;&amp;</operator> <operator pos:start="371:32" pos:end="371:32">!</operator><name pos:start="371:33" pos:end="371:43">coded_inter</name></expr>)</condition><block type="pseudo" pos:start="371:46" pos:end="371:54"><block_content pos:start="371:46" pos:end="371:54"> <return pos:start="371:46" pos:end="371:54">return <expr pos:start="371:53" pos:end="371:53"><literal type="number" pos:start="371:53" pos:end="371:53">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:24"><expr pos:start="373:13" pos:end="373:23"><name pos:start="373:13" pos:end="373:19">dst_idx</name> <operator pos:start="373:21" pos:end="373:21">=</operator> <literal type="number" pos:start="373:23" pos:end="373:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="375:13" pos:end="375:25"><expr pos:start="375:13" pos:end="375:24"><call pos:start="375:13" pos:end="375:24"><name pos:start="375:13" pos:end="375:22">GET_MQUANT</name><argument_list pos:start="375:23" pos:end="375:24">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="377:13" pos:end="377:61"><expr pos:start="377:13" pos:end="377:60"><name pos:start="377:13" pos:end="377:51"><name pos:start="377:13" pos:end="377:13">s</name><operator pos:start="377:14" pos:end="377:15">-&gt;</operator><name pos:start="377:16" pos:end="377:30">current_picture</name><operator pos:start="377:31" pos:end="377:31">.</operator><name pos:start="377:32" pos:end="377:43">qscale_table</name><index pos:start="377:44" pos:end="377:51">[<expr pos:start="377:45" pos:end="377:50"><name pos:start="377:45" pos:end="377:50">mb_pos</name></expr>]</index></name> <operator pos:start="377:53" pos:end="377:53">=</operator> <name pos:start="377:55" pos:end="377:60">mquant</name></expr>;</expr_stmt>

            <comment type="block" pos:start="379:13" pos:end="379:53">/* test if block is intra and has pred */</comment>

            <block pos:start="381:13" pos:end="405:13">{<block_content pos:start="383:17" pos:end="403:36">

                <decl_stmt pos:start="383:17" pos:end="383:34"><decl pos:start="383:17" pos:end="383:33"><type pos:start="383:17" pos:end="383:19"><name pos:start="383:17" pos:end="383:19">int</name></type> <name pos:start="383:21" pos:end="383:29">intrapred</name> <init pos:start="383:31" pos:end="383:33">= <expr pos:start="383:33" pos:end="383:33"><literal type="number" pos:start="383:33" pos:end="383:33">0</literal></expr></init></decl>;</decl_stmt>

                <for pos:start="385:17" pos:end="399:21">for<control pos:start="385:20" pos:end="385:34">(<init pos:start="385:21" pos:end="385:24"><expr pos:start="385:21" pos:end="385:23"><name pos:start="385:21" pos:end="385:21">i</name><operator pos:start="385:22" pos:end="385:22">=</operator><literal type="number" pos:start="385:23" pos:end="385:23">0</literal></expr>;</init> <condition pos:start="385:26" pos:end="385:29"><expr pos:start="385:26" pos:end="385:28"><name pos:start="385:26" pos:end="385:26">i</name><operator pos:start="385:27" pos:end="385:27">&lt;</operator><literal type="number" pos:start="385:28" pos:end="385:28">6</literal></expr>;</condition> <incr pos:start="385:31" pos:end="385:33"><expr pos:start="385:31" pos:end="385:33"><name pos:start="385:31" pos:end="385:31">i</name><operator pos:start="385:32" pos:end="385:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="387:21" pos:end="399:21"><block_content pos:start="387:21" pos:end="399:21">

                    <if_stmt pos:start="387:21" pos:end="399:21"><if pos:start="387:21" pos:end="399:21">if<condition pos:start="387:23" pos:end="387:35">(<expr pos:start="387:24" pos:end="387:34"><name pos:start="387:24" pos:end="387:34"><name pos:start="387:24" pos:end="387:31">is_intra</name><index pos:start="387:32" pos:end="387:34">[<expr pos:start="387:33" pos:end="387:33"><name pos:start="387:33" pos:end="387:33">i</name></expr>]</index></name></expr>)</condition> <block pos:start="387:37" pos:end="399:21">{<block_content pos:start="389:25" pos:end="397:25">

                        <if_stmt pos:start="389:25" pos:end="397:25"><if pos:start="389:25" pos:end="397:25">if<condition pos:start="389:27" pos:end="391:101">(<expr pos:start="389:28" pos:end="391:100"><operator pos:start="389:28" pos:end="389:28">(</operator><operator pos:start="389:29" pos:end="389:29">(</operator><operator pos:start="389:30" pos:end="389:30">!</operator><name pos:start="389:31" pos:end="389:49"><name pos:start="389:31" pos:end="389:31">s</name><operator pos:start="389:32" pos:end="389:33">-&gt;</operator><name pos:start="389:34" pos:end="389:49">first_slice_line</name></name> <operator pos:start="389:51" pos:end="389:52">||</operator> <operator pos:start="389:54" pos:end="389:54">(</operator><name pos:start="389:55" pos:end="389:55">i</name><operator pos:start="389:56" pos:end="389:57">==</operator><literal type="number" pos:start="389:58" pos:end="389:58">2</literal> <operator pos:start="389:60" pos:end="389:61">||</operator> <name pos:start="389:63" pos:end="389:63">i</name><operator pos:start="389:64" pos:end="389:65">==</operator><literal type="number" pos:start="389:66" pos:end="389:66">3</literal><operator pos:start="389:67" pos:end="389:67">)</operator><operator pos:start="389:68" pos:end="389:68">)</operator> <operator pos:start="389:70" pos:end="389:71">&amp;&amp;</operator> <name pos:start="389:73" pos:end="389:123"><name pos:start="389:73" pos:end="389:73">v</name><operator pos:start="389:74" pos:end="389:75">-&gt;</operator><name pos:start="389:76" pos:end="389:82">mb_type</name><index pos:start="389:83" pos:end="389:85">[<expr pos:start="389:84" pos:end="389:84"><literal type="number" pos:start="389:84" pos:end="389:84">0</literal></expr>]</index><index pos:start="389:86" pos:end="389:123">[<expr pos:start="389:87" pos:end="389:122"><name pos:start="389:87" pos:end="389:103"><name pos:start="389:87" pos:end="389:87">s</name><operator pos:start="389:88" pos:end="389:89">-&gt;</operator><name pos:start="389:90" pos:end="389:100">block_index</name><index pos:start="389:101" pos:end="389:103">[<expr pos:start="389:102" pos:end="389:102"><name pos:start="389:102" pos:end="389:102">i</name></expr>]</index></name> <operator pos:start="389:105" pos:end="389:105">-</operator> <name pos:start="389:107" pos:end="389:122"><name pos:start="389:107" pos:end="389:107">s</name><operator pos:start="389:108" pos:end="389:109">-&gt;</operator><name pos:start="389:110" pos:end="389:119">block_wrap</name><index pos:start="389:120" pos:end="389:122">[<expr pos:start="389:121" pos:end="389:121"><name pos:start="389:121" pos:end="389:121">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="389:124" pos:end="389:124">)</operator>

                            <operator pos:start="391:29" pos:end="391:30">||</operator> <operator pos:start="391:32" pos:end="391:32">(</operator><operator pos:start="391:33" pos:end="391:33">(</operator><name pos:start="391:34" pos:end="391:40"><name pos:start="391:34" pos:end="391:34">s</name><operator pos:start="391:35" pos:end="391:36">-&gt;</operator><name pos:start="391:37" pos:end="391:40">mb_x</name></name> <operator pos:start="391:42" pos:end="391:43">||</operator> <operator pos:start="391:45" pos:end="391:45">(</operator><name pos:start="391:46" pos:end="391:46">i</name><operator pos:start="391:47" pos:end="391:48">==</operator><literal type="number" pos:start="391:49" pos:end="391:49">1</literal> <operator pos:start="391:51" pos:end="391:52">||</operator> <name pos:start="391:54" pos:end="391:54">i</name><operator pos:start="391:55" pos:end="391:56">==</operator><literal type="number" pos:start="391:57" pos:end="391:57">3</literal><operator pos:start="391:58" pos:end="391:58">)</operator><operator pos:start="391:59" pos:end="391:59">)</operator> <operator pos:start="391:61" pos:end="391:62">&amp;&amp;</operator> <name pos:start="391:64" pos:end="391:99"><name pos:start="391:64" pos:end="391:64">v</name><operator pos:start="391:65" pos:end="391:66">-&gt;</operator><name pos:start="391:67" pos:end="391:73">mb_type</name><index pos:start="391:74" pos:end="391:76">[<expr pos:start="391:75" pos:end="391:75"><literal type="number" pos:start="391:75" pos:end="391:75">0</literal></expr>]</index><index pos:start="391:77" pos:end="391:99">[<expr pos:start="391:78" pos:end="391:98"><name pos:start="391:78" pos:end="391:94"><name pos:start="391:78" pos:end="391:78">s</name><operator pos:start="391:79" pos:end="391:80">-&gt;</operator><name pos:start="391:81" pos:end="391:91">block_index</name><index pos:start="391:92" pos:end="391:94">[<expr pos:start="391:93" pos:end="391:93"><name pos:start="391:93" pos:end="391:93">i</name></expr>]</index></name> <operator pos:start="391:96" pos:end="391:96">-</operator> <literal type="number" pos:start="391:98" pos:end="391:98">1</literal></expr>]</index></name><operator pos:start="391:100" pos:end="391:100">)</operator></expr>)</condition> <block pos:start="391:103" pos:end="397:25">{<block_content pos:start="393:29" pos:end="395:34">

                            <expr_stmt pos:start="393:29" pos:end="393:42"><expr pos:start="393:29" pos:end="393:41"><name pos:start="393:29" pos:end="393:37">intrapred</name> <operator pos:start="393:39" pos:end="393:39">=</operator> <literal type="number" pos:start="393:41" pos:end="393:41">1</literal></expr>;</expr_stmt>

                            <break pos:start="395:29" pos:end="395:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

                <if_stmt pos:start="401:17" pos:end="403:36"><if pos:start="401:17" pos:end="401:56">if<condition pos:start="401:19" pos:end="401:29">(<expr pos:start="401:20" pos:end="401:28"><name pos:start="401:20" pos:end="401:28">intrapred</name></expr>)</condition><block type="pseudo" pos:start="401:30" pos:end="401:56"><block_content pos:start="401:30" pos:end="401:56"><expr_stmt pos:start="401:30" pos:end="401:56"><expr pos:start="401:30" pos:end="401:55"><name pos:start="401:30" pos:end="401:39"><name pos:start="401:30" pos:end="401:30">s</name><operator pos:start="401:31" pos:end="401:32">-&gt;</operator><name pos:start="401:33" pos:end="401:39">ac_pred</name></name> <operator pos:start="401:41" pos:end="401:41">=</operator> <call pos:start="401:43" pos:end="401:55"><name pos:start="401:43" pos:end="401:51">get_bits1</name><argument_list pos:start="401:52" pos:end="401:55">(<argument pos:start="401:53" pos:end="401:54"><expr pos:start="401:53" pos:end="401:54"><name pos:start="401:53" pos:end="401:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="403:17" pos:end="403:36">else<block type="pseudo" pos:start="403:22" pos:end="403:36"><block_content pos:start="403:22" pos:end="403:36"> <expr_stmt pos:start="403:22" pos:end="403:36"><expr pos:start="403:22" pos:end="403:35"><name pos:start="403:22" pos:end="403:31"><name pos:start="403:22" pos:end="403:22">s</name><operator pos:start="403:23" pos:end="403:24">-&gt;</operator><name pos:start="403:25" pos:end="403:31">ac_pred</name></name> <operator pos:start="403:33" pos:end="403:33">=</operator> <literal type="number" pos:start="403:35" pos:end="403:35">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block>

            <if_stmt pos:start="407:13" pos:end="409:94"><if pos:start="407:13" pos:end="409:94">if <condition pos:start="407:16" pos:end="407:41">(<expr pos:start="407:17" pos:end="407:40"><operator pos:start="407:17" pos:end="407:17">!</operator><name pos:start="407:18" pos:end="407:25"><name pos:start="407:18" pos:end="407:18">v</name><operator pos:start="407:19" pos:end="407:20">-&gt;</operator><name pos:start="407:21" pos:end="407:25">ttmbf</name></name> <operator pos:start="407:27" pos:end="407:28">&amp;&amp;</operator> <name pos:start="407:30" pos:end="407:40">coded_inter</name></expr>)</condition><block type="pseudo" pos:start="409:17" pos:end="409:94"><block_content pos:start="409:17" pos:end="409:94">

                <expr_stmt pos:start="409:17" pos:end="409:94"><expr pos:start="409:17" pos:end="409:93"><name pos:start="409:17" pos:end="409:20">ttmb</name> <operator pos:start="409:22" pos:end="409:22">=</operator> <call pos:start="409:24" pos:end="409:93"><name pos:start="409:24" pos:end="409:31">get_vlc2</name><argument_list pos:start="409:32" pos:end="409:93">(<argument pos:start="409:33" pos:end="409:34"><expr pos:start="409:33" pos:end="409:34"><name pos:start="409:33" pos:end="409:34">gb</name></expr></argument>, <argument pos:start="409:37" pos:end="409:70"><expr pos:start="409:37" pos:end="409:70"><name pos:start="409:37" pos:end="409:64"><name pos:start="409:37" pos:end="409:51">ff_vc1_ttmb_vlc</name><index pos:start="409:52" pos:end="409:64">[<expr pos:start="409:53" pos:end="409:63"><name pos:start="409:53" pos:end="409:63"><name pos:start="409:53" pos:end="409:53">v</name><operator pos:start="409:54" pos:end="409:55">-&gt;</operator><name pos:start="409:56" pos:end="409:63">tt_index</name></name></expr>]</index></name><operator pos:start="409:65" pos:end="409:65">.</operator><name pos:start="409:66" pos:end="409:70">table</name></expr></argument>, <argument pos:start="409:73" pos:end="409:89"><expr pos:start="409:73" pos:end="409:89"><name pos:start="409:73" pos:end="409:89">VC1_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="409:92" pos:end="409:92"><expr pos:start="409:92" pos:end="409:92"><literal type="number" pos:start="409:92" pos:end="409:92">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <for pos:start="411:13" pos:end="531:13">for <control pos:start="411:17" pos:end="411:31">(<init pos:start="411:18" pos:end="411:21"><expr pos:start="411:18" pos:end="411:20"><name pos:start="411:18" pos:end="411:18">i</name><operator pos:start="411:19" pos:end="411:19">=</operator><literal type="number" pos:start="411:20" pos:end="411:20">0</literal></expr>;</init> <condition pos:start="411:23" pos:end="411:26"><expr pos:start="411:23" pos:end="411:25"><name pos:start="411:23" pos:end="411:23">i</name><operator pos:start="411:24" pos:end="411:24">&lt;</operator><literal type="number" pos:start="411:25" pos:end="411:25">6</literal></expr>;</condition> <incr pos:start="411:28" pos:end="411:30"><expr pos:start="411:28" pos:end="411:30"><name pos:start="411:28" pos:end="411:28">i</name><operator pos:start="411:29" pos:end="411:30">++</operator></expr></incr>)</control>

            <block pos:start="413:13" pos:end="531:13">{<block_content pos:start="415:17" pos:end="529:17">

                <expr_stmt pos:start="415:17" pos:end="415:34"><expr pos:start="415:17" pos:end="415:33"><name pos:start="415:17" pos:end="415:23">dst_idx</name> <operator pos:start="415:25" pos:end="415:26">+=</operator> <name pos:start="415:28" pos:end="415:28">i</name> <operator pos:start="415:30" pos:end="415:31">&gt;&gt;</operator> <literal type="number" pos:start="415:33" pos:end="415:33">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="417:17" pos:end="417:78"><expr pos:start="417:17" pos:end="417:77"><name pos:start="417:17" pos:end="417:19">off</name> <operator pos:start="417:21" pos:end="417:21">=</operator> <ternary pos:start="417:23" pos:end="417:77"><condition pos:start="417:23" pos:end="417:31"><expr pos:start="417:23" pos:end="417:29"><operator pos:start="417:23" pos:end="417:23">(</operator><name pos:start="417:24" pos:end="417:24">i</name> <operator pos:start="417:26" pos:end="417:26">&amp;</operator> <literal type="number" pos:start="417:28" pos:end="417:28">4</literal><operator pos:start="417:29" pos:end="417:29">)</operator></expr> ?</condition><then pos:start="417:33" pos:end="417:33"> <expr pos:start="417:33" pos:end="417:33"><literal type="number" pos:start="417:33" pos:end="417:33">0</literal></expr> </then><else pos:start="417:35" pos:end="417:77">: <expr pos:start="417:37" pos:end="417:77"><operator pos:start="417:37" pos:end="417:37">(</operator><operator pos:start="417:38" pos:end="417:38">(</operator><name pos:start="417:39" pos:end="417:39">i</name> <operator pos:start="417:41" pos:end="417:41">&amp;</operator> <literal type="number" pos:start="417:43" pos:end="417:43">1</literal><operator pos:start="417:44" pos:end="417:44">)</operator> <operator pos:start="417:46" pos:end="417:46">*</operator> <literal type="number" pos:start="417:48" pos:end="417:50">8</literal> <operator pos:start="417:50" pos:end="417:50">+</operator> <operator pos:start="417:52" pos:end="417:52">(</operator><name pos:start="417:53" pos:end="417:53">i</name> <operator pos:start="417:55" pos:end="417:55">&amp;</operator> <literal type="number" pos:start="417:57" pos:end="417:57">2</literal><operator pos:start="417:58" pos:end="417:58">)</operator> <operator pos:start="417:60" pos:end="417:60">*</operator> <literal type="number" pos:start="417:62" pos:end="417:62">4</literal> <operator pos:start="417:64" pos:end="417:64">*</operator> <name pos:start="417:66" pos:end="417:76"><name pos:start="417:66" pos:end="417:66">s</name><operator pos:start="417:67" pos:end="417:68">-&gt;</operator><name pos:start="417:69" pos:end="417:76">linesize</name></name><operator pos:start="417:77" pos:end="417:77">)</operator></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:42"><expr pos:start="419:17" pos:end="419:41"><name pos:start="419:17" pos:end="419:27"><name pos:start="419:17" pos:end="419:17">s</name><operator pos:start="419:18" pos:end="419:19">-&gt;</operator><name pos:start="419:20" pos:end="419:27">mb_intra</name></name> <operator pos:start="419:29" pos:end="419:29">=</operator> <name pos:start="419:31" pos:end="419:41"><name pos:start="419:31" pos:end="419:38">is_intra</name><index pos:start="419:39" pos:end="419:41">[<expr pos:start="419:40" pos:end="419:40"><name pos:start="419:40" pos:end="419:40">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="421:17" pos:end="529:17"><if pos:start="421:17" pos:end="489:17">if <condition pos:start="421:20" pos:end="421:32">(<expr pos:start="421:21" pos:end="421:31"><name pos:start="421:21" pos:end="421:31"><name pos:start="421:21" pos:end="421:28">is_intra</name><index pos:start="421:29" pos:end="421:31">[<expr pos:start="421:30" pos:end="421:30"><name pos:start="421:30" pos:end="421:30">i</name></expr>]</index></name></expr>)</condition> <block pos:start="421:34" pos:end="489:17">{<block_content pos:start="425:21" pos:end="487:49">

                    <comment type="block" pos:start="423:21" pos:end="423:74">/* check if prediction blocks A and C are available */</comment>

                    <expr_stmt pos:start="425:21" pos:end="425:48"><expr pos:start="425:21" pos:end="425:47"><name pos:start="425:21" pos:end="425:30"><name pos:start="425:21" pos:end="425:21">v</name><operator pos:start="425:22" pos:end="425:23">-&gt;</operator><name pos:start="425:24" pos:end="425:30">a_avail</name></name> <operator pos:start="425:32" pos:end="425:32">=</operator> <name pos:start="425:34" pos:end="425:43"><name pos:start="425:34" pos:end="425:34">v</name><operator pos:start="425:35" pos:end="425:36">-&gt;</operator><name pos:start="425:37" pos:end="425:43">c_avail</name></name> <operator pos:start="425:45" pos:end="425:45">=</operator> <literal type="number" pos:start="425:47" pos:end="425:47">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="427:21" pos:end="429:89"><if pos:start="427:21" pos:end="429:89">if<condition pos:start="427:23" pos:end="427:64">(<expr pos:start="427:24" pos:end="427:63"><name pos:start="427:24" pos:end="427:24">i</name> <operator pos:start="427:26" pos:end="427:27">==</operator> <literal type="number" pos:start="427:29" pos:end="427:29">2</literal> <operator pos:start="427:31" pos:end="427:32">||</operator> <name pos:start="427:34" pos:end="427:34">i</name> <operator pos:start="427:36" pos:end="427:37">==</operator> <literal type="number" pos:start="427:39" pos:end="427:39">3</literal> <operator pos:start="427:41" pos:end="427:42">||</operator> <operator pos:start="427:44" pos:end="427:44">!</operator><name pos:start="427:45" pos:end="427:63"><name pos:start="427:45" pos:end="427:45">s</name><operator pos:start="427:46" pos:end="427:47">-&gt;</operator><name pos:start="427:48" pos:end="427:63">first_slice_line</name></name></expr>)</condition><block type="pseudo" pos:start="429:25" pos:end="429:89"><block_content pos:start="429:25" pos:end="429:89">

                        <expr_stmt pos:start="429:25" pos:end="429:89"><expr pos:start="429:25" pos:end="429:88"><name pos:start="429:25" pos:end="429:34"><name pos:start="429:25" pos:end="429:25">v</name><operator pos:start="429:26" pos:end="429:27">-&gt;</operator><name pos:start="429:28" pos:end="429:34">a_avail</name></name> <operator pos:start="429:36" pos:end="429:36">=</operator> <name pos:start="429:38" pos:end="429:88"><name pos:start="429:38" pos:end="429:38">v</name><operator pos:start="429:39" pos:end="429:40">-&gt;</operator><name pos:start="429:41" pos:end="429:47">mb_type</name><index pos:start="429:48" pos:end="429:50">[<expr pos:start="429:49" pos:end="429:49"><literal type="number" pos:start="429:49" pos:end="429:49">0</literal></expr>]</index><index pos:start="429:51" pos:end="429:88">[<expr pos:start="429:52" pos:end="429:87"><name pos:start="429:52" pos:end="429:68"><name pos:start="429:52" pos:end="429:52">s</name><operator pos:start="429:53" pos:end="429:54">-&gt;</operator><name pos:start="429:55" pos:end="429:65">block_index</name><index pos:start="429:66" pos:end="429:68">[<expr pos:start="429:67" pos:end="429:67"><name pos:start="429:67" pos:end="429:67">i</name></expr>]</index></name> <operator pos:start="429:70" pos:end="429:70">-</operator> <name pos:start="429:72" pos:end="429:87"><name pos:start="429:72" pos:end="429:72">s</name><operator pos:start="429:73" pos:end="429:74">-&gt;</operator><name pos:start="429:75" pos:end="429:84">block_wrap</name><index pos:start="429:85" pos:end="429:87">[<expr pos:start="429:86" pos:end="429:86"><name pos:start="429:86" pos:end="429:86">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="431:21" pos:end="433:74"><if pos:start="431:21" pos:end="433:74">if<condition pos:start="431:23" pos:end="431:51">(<expr pos:start="431:24" pos:end="431:50"><name pos:start="431:24" pos:end="431:24">i</name> <operator pos:start="431:26" pos:end="431:27">==</operator> <literal type="number" pos:start="431:29" pos:end="431:29">1</literal> <operator pos:start="431:31" pos:end="431:32">||</operator> <name pos:start="431:34" pos:end="431:34">i</name> <operator pos:start="431:36" pos:end="431:37">==</operator> <literal type="number" pos:start="431:39" pos:end="431:39">3</literal> <operator pos:start="431:41" pos:end="431:42">||</operator> <name pos:start="431:44" pos:end="431:50"><name pos:start="431:44" pos:end="431:44">s</name><operator pos:start="431:45" pos:end="431:46">-&gt;</operator><name pos:start="431:47" pos:end="431:50">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="433:25" pos:end="433:74"><block_content pos:start="433:25" pos:end="433:74">

                        <expr_stmt pos:start="433:25" pos:end="433:74"><expr pos:start="433:25" pos:end="433:73"><name pos:start="433:25" pos:end="433:34"><name pos:start="433:25" pos:end="433:25">v</name><operator pos:start="433:26" pos:end="433:27">-&gt;</operator><name pos:start="433:28" pos:end="433:34">c_avail</name></name> <operator pos:start="433:36" pos:end="433:36">=</operator> <name pos:start="433:38" pos:end="433:73"><name pos:start="433:38" pos:end="433:38">v</name><operator pos:start="433:39" pos:end="433:40">-&gt;</operator><name pos:start="433:41" pos:end="433:47">mb_type</name><index pos:start="433:48" pos:end="433:50">[<expr pos:start="433:49" pos:end="433:49"><literal type="number" pos:start="433:49" pos:end="433:49">0</literal></expr>]</index><index pos:start="433:51" pos:end="433:73">[<expr pos:start="433:52" pos:end="433:72"><name pos:start="433:52" pos:end="433:68"><name pos:start="433:52" pos:end="433:52">s</name><operator pos:start="433:53" pos:end="433:54">-&gt;</operator><name pos:start="433:55" pos:end="433:65">block_index</name><index pos:start="433:66" pos:end="433:68">[<expr pos:start="433:67" pos:end="433:67"><name pos:start="433:67" pos:end="433:67">i</name></expr>]</index></name> <operator pos:start="433:70" pos:end="433:70">-</operator> <literal type="number" pos:start="433:72" pos:end="433:72">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="437:21" pos:end="437:117"><expr pos:start="437:21" pos:end="437:116"><call pos:start="437:21" pos:end="437:116"><name pos:start="437:21" pos:end="437:42">vc1_decode_intra_block</name><argument_list pos:start="437:43" pos:end="437:116">(<argument pos:start="437:44" pos:end="437:44"><expr pos:start="437:44" pos:end="437:44"><name pos:start="437:44" pos:end="437:44">v</name></expr></argument>, <argument pos:start="437:47" pos:end="437:57"><expr pos:start="437:47" pos:end="437:57"><name pos:start="437:47" pos:end="437:57"><name pos:start="437:47" pos:end="437:47">s</name><operator pos:start="437:48" pos:end="437:49">-&gt;</operator><name pos:start="437:50" pos:end="437:54">block</name><index pos:start="437:55" pos:end="437:57">[<expr pos:start="437:56" pos:end="437:56"><name pos:start="437:56" pos:end="437:56">i</name></expr>]</index></name></expr></argument>, <argument pos:start="437:60" pos:end="437:60"><expr pos:start="437:60" pos:end="437:60"><name pos:start="437:60" pos:end="437:60">i</name></expr></argument>, <argument pos:start="437:63" pos:end="437:73"><expr pos:start="437:63" pos:end="437:73"><name pos:start="437:63" pos:end="437:73"><name pos:start="437:63" pos:end="437:70">is_coded</name><index pos:start="437:71" pos:end="437:73">[<expr pos:start="437:72" pos:end="437:72"><name pos:start="437:72" pos:end="437:72">i</name></expr>]</index></name></expr></argument>, <argument pos:start="437:76" pos:end="437:81"><expr pos:start="437:76" pos:end="437:81"><name pos:start="437:76" pos:end="437:81">mquant</name></expr></argument>, <argument pos:start="437:84" pos:end="437:115"><expr pos:start="437:84" pos:end="437:115"><ternary pos:start="437:84" pos:end="437:115"><condition pos:start="437:84" pos:end="437:89"><expr pos:start="437:84" pos:end="437:88"><operator pos:start="437:84" pos:end="437:84">(</operator><name pos:start="437:85" pos:end="437:85">i</name><operator pos:start="437:86" pos:end="437:86">&amp;</operator><literal type="number" pos:start="437:87" pos:end="437:87">4</literal><operator pos:start="437:88" pos:end="437:88">)</operator></expr>?</condition><then pos:start="437:90" pos:end="437:102"><expr pos:start="437:90" pos:end="437:102"><name pos:start="437:90" pos:end="437:102"><name pos:start="437:90" pos:end="437:90">v</name><operator pos:start="437:91" pos:end="437:92">-&gt;</operator><name pos:start="437:93" pos:end="437:102">codingset2</name></name></expr></then><else pos:start="437:103" pos:end="437:115">:<expr pos:start="437:104" pos:end="437:115"><name pos:start="437:104" pos:end="437:115"><name pos:start="437:104" pos:end="437:104">v</name><operator pos:start="437:105" pos:end="437:106">-&gt;</operator><name pos:start="437:107" pos:end="437:115">codingset</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="439:21" pos:end="439:71"><if pos:start="439:21" pos:end="439:71">if<condition pos:start="439:23" pos:end="439:61">(<expr pos:start="439:24" pos:end="439:60"><operator pos:start="439:24" pos:end="439:24">(</operator><name pos:start="439:25" pos:end="439:25">i</name><operator pos:start="439:26" pos:end="439:26">&gt;</operator><literal type="number" pos:start="439:27" pos:end="439:27">3</literal><operator pos:start="439:28" pos:end="439:28">)</operator> <operator pos:start="439:30" pos:end="439:31">&amp;&amp;</operator> <operator pos:start="439:33" pos:end="439:33">(</operator><name pos:start="439:34" pos:end="439:41"><name pos:start="439:34" pos:end="439:34">s</name><operator pos:start="439:35" pos:end="439:36">-&gt;</operator><name pos:start="439:37" pos:end="439:41">flags</name></name> <operator pos:start="439:43" pos:end="439:43">&amp;</operator> <name pos:start="439:45" pos:end="439:59">CODEC_FLAG_GRAY</name><operator pos:start="439:60" pos:end="439:60">)</operator></expr>)</condition><block type="pseudo" pos:start="439:63" pos:end="439:71"><block_content pos:start="439:63" pos:end="439:71"> <continue pos:start="439:63" pos:end="439:71">continue;</continue></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="441:21" pos:end="441:58"><expr pos:start="441:21" pos:end="441:57"><call pos:start="441:21" pos:end="441:57"><name pos:start="441:21" pos:end="441:44"><name pos:start="441:21" pos:end="441:21">s</name><operator pos:start="441:22" pos:end="441:23">-&gt;</operator><name pos:start="441:24" pos:end="441:26">dsp</name><operator pos:start="441:27" pos:end="441:27">.</operator><name pos:start="441:28" pos:end="441:44">vc1_inv_trans_8x8</name></name><argument_list pos:start="441:45" pos:end="441:57">(<argument pos:start="441:46" pos:end="441:56"><expr pos:start="441:46" pos:end="441:56"><name pos:start="441:46" pos:end="441:56"><name pos:start="441:46" pos:end="441:46">s</name><operator pos:start="441:47" pos:end="441:48">-&gt;</operator><name pos:start="441:49" pos:end="441:53">block</name><index pos:start="441:54" pos:end="441:56">[<expr pos:start="441:55" pos:end="441:55"><name pos:start="441:55" pos:end="441:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="443:21" pos:end="443:84"><if pos:start="443:21" pos:end="443:84">if<condition pos:start="443:23" pos:end="443:38">(<expr pos:start="443:24" pos:end="443:37"><name pos:start="443:24" pos:end="443:37"><name pos:start="443:24" pos:end="443:24">v</name><operator pos:start="443:25" pos:end="443:26">-&gt;</operator><name pos:start="443:27" pos:end="443:37">rangeredfrm</name></name></expr>)</condition><block type="pseudo" pos:start="443:40" pos:end="443:84"><block_content pos:start="443:40" pos:end="443:84"> <for pos:start="443:40" pos:end="443:84">for<control pos:start="443:43" pos:end="443:62">(<init pos:start="443:44" pos:end="443:49"><expr pos:start="443:44" pos:end="443:48"><name pos:start="443:44" pos:end="443:44">j</name> <operator pos:start="443:46" pos:end="443:46">=</operator> <literal type="number" pos:start="443:48" pos:end="443:48">0</literal></expr>;</init> <condition pos:start="443:51" pos:end="443:57"><expr pos:start="443:51" pos:end="443:56"><name pos:start="443:51" pos:end="443:51">j</name> <operator pos:start="443:53" pos:end="443:53">&lt;</operator> <literal type="number" pos:start="443:55" pos:end="443:56">64</literal></expr>;</condition> <incr pos:start="443:59" pos:end="443:61"><expr pos:start="443:59" pos:end="443:61"><name pos:start="443:59" pos:end="443:59">j</name><operator pos:start="443:60" pos:end="443:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="443:64" pos:end="443:84"><block_content pos:start="443:64" pos:end="443:84"> <expr_stmt pos:start="443:64" pos:end="443:84"><expr pos:start="443:64" pos:end="443:83"><name pos:start="443:64" pos:end="443:77"><name pos:start="443:64" pos:end="443:64">s</name><operator pos:start="443:65" pos:end="443:66">-&gt;</operator><name pos:start="443:67" pos:end="443:71">block</name><index pos:start="443:72" pos:end="443:74">[<expr pos:start="443:73" pos:end="443:73"><name pos:start="443:73" pos:end="443:73">i</name></expr>]</index><index pos:start="443:75" pos:end="443:77">[<expr pos:start="443:76" pos:end="443:76"><name pos:start="443:76" pos:end="443:76">j</name></expr>]</index></name> <operator pos:start="443:79" pos:end="443:81">&lt;&lt;=</operator> <literal type="number" pos:start="443:83" pos:end="443:83">1</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="445:21" pos:end="445:123"><expr pos:start="445:21" pos:end="445:122"><call pos:start="445:21" pos:end="445:122"><name pos:start="445:21" pos:end="445:52"><name pos:start="445:21" pos:end="445:21">s</name><operator pos:start="445:22" pos:end="445:23">-&gt;</operator><name pos:start="445:24" pos:end="445:26">dsp</name><operator pos:start="445:27" pos:end="445:27">.</operator><name pos:start="445:28" pos:end="445:52">put_signed_pixels_clamped</name></name><argument_list pos:start="445:53" pos:end="445:122">(<argument pos:start="445:54" pos:end="445:64"><expr pos:start="445:54" pos:end="445:64"><name pos:start="445:54" pos:end="445:64"><name pos:start="445:54" pos:end="445:54">s</name><operator pos:start="445:55" pos:end="445:56">-&gt;</operator><name pos:start="445:57" pos:end="445:61">block</name><index pos:start="445:62" pos:end="445:64">[<expr pos:start="445:63" pos:end="445:63"><name pos:start="445:63" pos:end="445:63">i</name></expr>]</index></name></expr></argument>, <argument pos:start="445:67" pos:end="445:88"><expr pos:start="445:67" pos:end="445:88"><name pos:start="445:67" pos:end="445:82"><name pos:start="445:67" pos:end="445:67">s</name><operator pos:start="445:68" pos:end="445:69">-&gt;</operator><name pos:start="445:70" pos:end="445:73">dest</name><index pos:start="445:74" pos:end="445:82">[<expr pos:start="445:75" pos:end="445:81"><name pos:start="445:75" pos:end="445:81">dst_idx</name></expr>]</index></name> <operator pos:start="445:84" pos:end="445:84">+</operator> <name pos:start="445:86" pos:end="445:88">off</name></expr></argument>, <argument pos:start="445:91" pos:end="445:121"><expr pos:start="445:91" pos:end="445:121"><ternary pos:start="445:91" pos:end="445:121"><condition pos:start="445:91" pos:end="445:96"><expr pos:start="445:91" pos:end="445:95"><operator pos:start="445:91" pos:end="445:91">(</operator><name pos:start="445:92" pos:end="445:92">i</name><operator pos:start="445:93" pos:end="445:93">&amp;</operator><literal type="number" pos:start="445:94" pos:end="445:94">4</literal><operator pos:start="445:95" pos:end="445:95">)</operator></expr>?</condition><then pos:start="445:97" pos:end="445:109"><expr pos:start="445:97" pos:end="445:109"><name pos:start="445:97" pos:end="445:109"><name pos:start="445:97" pos:end="445:97">s</name><operator pos:start="445:98" pos:end="445:99">-&gt;</operator><name pos:start="445:100" pos:end="445:109">uvlinesize</name></name></expr></then><else pos:start="445:110" pos:end="445:121">:<expr pos:start="445:111" pos:end="445:121"><name pos:start="445:111" pos:end="445:121"><name pos:start="445:111" pos:end="445:111">s</name><operator pos:start="445:112" pos:end="445:113">-&gt;</operator><name pos:start="445:114" pos:end="445:121">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="447:21" pos:end="457:21"><if pos:start="447:21" pos:end="457:21">if<condition pos:start="447:23" pos:end="447:48">(<expr pos:start="447:24" pos:end="447:47"><name pos:start="447:24" pos:end="447:28"><name pos:start="447:24" pos:end="447:24">v</name><operator pos:start="447:25" pos:end="447:26">-&gt;</operator><name pos:start="447:27" pos:end="447:28">pq</name></name> <operator pos:start="447:30" pos:end="447:31">&gt;=</operator> <literal type="number" pos:start="447:33" pos:end="447:33">9</literal> <operator pos:start="447:35" pos:end="447:36">&amp;&amp;</operator> <name pos:start="447:38" pos:end="447:47"><name pos:start="447:38" pos:end="447:38">v</name><operator pos:start="447:39" pos:end="447:40">-&gt;</operator><name pos:start="447:41" pos:end="447:47">overlap</name></name></expr>)</condition> <block pos:start="447:50" pos:end="457:21">{<block_content pos:start="449:25" pos:end="455:104">

                        <if_stmt pos:start="449:25" pos:end="451:104"><if pos:start="449:25" pos:end="451:104">if<condition pos:start="449:27" pos:end="449:38">(<expr pos:start="449:28" pos:end="449:37"><name pos:start="449:28" pos:end="449:37"><name pos:start="449:28" pos:end="449:28">v</name><operator pos:start="449:29" pos:end="449:30">-&gt;</operator><name pos:start="449:31" pos:end="449:37">c_avail</name></name></expr>)</condition><block type="pseudo" pos:start="451:29" pos:end="451:104"><block_content pos:start="451:29" pos:end="451:104">

                            <expr_stmt pos:start="451:29" pos:end="451:104"><expr pos:start="451:29" pos:end="451:103"><call pos:start="451:29" pos:end="451:103"><name pos:start="451:29" pos:end="451:48"><name pos:start="451:29" pos:end="451:29">s</name><operator pos:start="451:30" pos:end="451:31">-&gt;</operator><name pos:start="451:32" pos:end="451:34">dsp</name><operator pos:start="451:35" pos:end="451:35">.</operator><name pos:start="451:36" pos:end="451:48">vc1_h_overlap</name></name><argument_list pos:start="451:49" pos:end="451:103">(<argument pos:start="451:50" pos:end="451:71"><expr pos:start="451:50" pos:end="451:71"><name pos:start="451:50" pos:end="451:65"><name pos:start="451:50" pos:end="451:50">s</name><operator pos:start="451:51" pos:end="451:52">-&gt;</operator><name pos:start="451:53" pos:end="451:56">dest</name><index pos:start="451:57" pos:end="451:65">[<expr pos:start="451:58" pos:end="451:64"><name pos:start="451:58" pos:end="451:64">dst_idx</name></expr>]</index></name> <operator pos:start="451:67" pos:end="451:67">+</operator> <name pos:start="451:69" pos:end="451:71">off</name></expr></argument>, <argument pos:start="451:74" pos:end="451:102"><expr pos:start="451:74" pos:end="451:102"><name pos:start="451:74" pos:end="451:84"><name pos:start="451:74" pos:end="451:74">s</name><operator pos:start="451:75" pos:end="451:76">-&gt;</operator><name pos:start="451:77" pos:end="451:84">linesize</name></name> <operator pos:start="451:86" pos:end="451:87">&gt;&gt;</operator> <operator pos:start="451:89" pos:end="451:89">(</operator><operator pos:start="451:90" pos:end="451:90">(</operator><name pos:start="451:91" pos:end="451:91">i</name> <operator pos:start="451:93" pos:end="451:93">&amp;</operator> <literal type="number" pos:start="451:95" pos:end="451:95">4</literal><operator pos:start="451:96" pos:end="451:96">)</operator> <operator pos:start="451:98" pos:end="451:99">&gt;&gt;</operator> <literal type="number" pos:start="451:101" pos:end="451:101">2</literal><operator pos:start="451:102" pos:end="451:102">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="453:25" pos:end="455:104"><if pos:start="453:25" pos:end="455:104">if<condition pos:start="453:27" pos:end="453:38">(<expr pos:start="453:28" pos:end="453:37"><name pos:start="453:28" pos:end="453:37"><name pos:start="453:28" pos:end="453:28">v</name><operator pos:start="453:29" pos:end="453:30">-&gt;</operator><name pos:start="453:31" pos:end="453:37">a_avail</name></name></expr>)</condition><block type="pseudo" pos:start="455:29" pos:end="455:104"><block_content pos:start="455:29" pos:end="455:104">

                            <expr_stmt pos:start="455:29" pos:end="455:104"><expr pos:start="455:29" pos:end="455:103"><call pos:start="455:29" pos:end="455:103"><name pos:start="455:29" pos:end="455:48"><name pos:start="455:29" pos:end="455:29">s</name><operator pos:start="455:30" pos:end="455:31">-&gt;</operator><name pos:start="455:32" pos:end="455:34">dsp</name><operator pos:start="455:35" pos:end="455:35">.</operator><name pos:start="455:36" pos:end="455:48">vc1_v_overlap</name></name><argument_list pos:start="455:49" pos:end="455:103">(<argument pos:start="455:50" pos:end="455:71"><expr pos:start="455:50" pos:end="455:71"><name pos:start="455:50" pos:end="455:65"><name pos:start="455:50" pos:end="455:50">s</name><operator pos:start="455:51" pos:end="455:52">-&gt;</operator><name pos:start="455:53" pos:end="455:56">dest</name><index pos:start="455:57" pos:end="455:65">[<expr pos:start="455:58" pos:end="455:64"><name pos:start="455:58" pos:end="455:64">dst_idx</name></expr>]</index></name> <operator pos:start="455:67" pos:end="455:67">+</operator> <name pos:start="455:69" pos:end="455:71">off</name></expr></argument>, <argument pos:start="455:74" pos:end="455:102"><expr pos:start="455:74" pos:end="455:102"><name pos:start="455:74" pos:end="455:84"><name pos:start="455:74" pos:end="455:74">s</name><operator pos:start="455:75" pos:end="455:76">-&gt;</operator><name pos:start="455:77" pos:end="455:84">linesize</name></name> <operator pos:start="455:86" pos:end="455:87">&gt;&gt;</operator> <operator pos:start="455:89" pos:end="455:89">(</operator><operator pos:start="455:90" pos:end="455:90">(</operator><name pos:start="455:91" pos:end="455:91">i</name> <operator pos:start="455:93" pos:end="455:93">&amp;</operator> <literal type="number" pos:start="455:95" pos:end="455:95">4</literal><operator pos:start="455:96" pos:end="455:96">)</operator> <operator pos:start="455:98" pos:end="455:99">&gt;&gt;</operator> <literal type="number" pos:start="455:101" pos:end="455:101">2</literal><operator pos:start="455:102" pos:end="455:102">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="459:21" pos:end="485:21"><if pos:start="459:21" pos:end="485:21">if<condition pos:start="459:23" pos:end="459:127">(<expr pos:start="459:24" pos:end="459:126"><name pos:start="459:24" pos:end="459:39"><name pos:start="459:24" pos:end="459:24">v</name><operator pos:start="459:25" pos:end="459:26">-&gt;</operator><name pos:start="459:27" pos:end="459:27">s</name><operator pos:start="459:28" pos:end="459:28">.</operator><name pos:start="459:29" pos:end="459:39">loop_filter</name></name> <operator pos:start="459:41" pos:end="459:42">&amp;&amp;</operator> <name pos:start="459:44" pos:end="459:50"><name pos:start="459:44" pos:end="459:44">s</name><operator pos:start="459:45" pos:end="459:46">-&gt;</operator><name pos:start="459:47" pos:end="459:50">mb_x</name></name> <operator pos:start="459:52" pos:end="459:53">&amp;&amp;</operator> <name pos:start="459:55" pos:end="459:61"><name pos:start="459:55" pos:end="459:55">s</name><operator pos:start="459:56" pos:end="459:57">-&gt;</operator><name pos:start="459:58" pos:end="459:61">mb_x</name></name> <operator pos:start="459:63" pos:end="459:64">!=</operator> <operator pos:start="459:66" pos:end="459:66">(</operator><name pos:start="459:67" pos:end="459:77"><name pos:start="459:67" pos:end="459:67">s</name><operator pos:start="459:68" pos:end="459:69">-&gt;</operator><name pos:start="459:70" pos:end="459:77">mb_width</name></name> <operator pos:start="459:79" pos:end="459:79">-</operator> <literal type="number" pos:start="459:81" pos:end="459:81">1</literal><operator pos:start="459:82" pos:end="459:82">)</operator> <operator pos:start="459:84" pos:end="459:85">&amp;&amp;</operator> <name pos:start="459:87" pos:end="459:93"><name pos:start="459:87" pos:end="459:87">s</name><operator pos:start="459:88" pos:end="459:89">-&gt;</operator><name pos:start="459:90" pos:end="459:93">mb_y</name></name> <operator pos:start="459:95" pos:end="459:96">&amp;&amp;</operator> <name pos:start="459:98" pos:end="459:104"><name pos:start="459:98" pos:end="459:98">s</name><operator pos:start="459:99" pos:end="459:100">-&gt;</operator><name pos:start="459:101" pos:end="459:104">mb_y</name></name> <operator pos:start="459:106" pos:end="459:107">!=</operator> <operator pos:start="459:109" pos:end="459:109">(</operator><name pos:start="459:110" pos:end="459:121"><name pos:start="459:110" pos:end="459:110">s</name><operator pos:start="459:111" pos:end="459:112">-&gt;</operator><name pos:start="459:113" pos:end="459:121">mb_height</name></name> <operator pos:start="459:123" pos:end="459:123">-</operator> <literal type="number" pos:start="459:125" pos:end="459:125">1</literal><operator pos:start="459:126" pos:end="459:126">)</operator></expr>)</condition><block pos:start="459:128" pos:end="485:21">{<block_content pos:start="461:25" pos:end="483:126">

                        <decl_stmt pos:start="461:25" pos:end="461:46"><decl pos:start="461:25" pos:end="461:36"><type pos:start="461:25" pos:end="461:27"><name pos:start="461:25" pos:end="461:27">int</name></type> <name pos:start="461:29" pos:end="461:36">left_cbp</name></decl>, <decl pos:start="461:39" pos:end="461:45"><type ref="prev" pos:start="461:25" pos:end="461:27"/><name pos:start="461:39" pos:end="461:45">top_cbp</name></decl>;</decl_stmt>

                        <if_stmt pos:start="463:25" pos:end="475:25"><if pos:start="463:25" pos:end="469:25">if<condition pos:start="463:27" pos:end="463:33">(<expr pos:start="463:28" pos:end="463:32"><name pos:start="463:28" pos:end="463:28">i</name> <operator pos:start="463:30" pos:end="463:30">&amp;</operator> <literal type="number" pos:start="463:32" pos:end="463:32">4</literal></expr>)</condition><block pos:start="463:34" pos:end="469:25">{<block_content pos:start="465:29" pos:end="467:81">

                            <expr_stmt pos:start="465:29" pos:end="465:81"><expr pos:start="465:29" pos:end="465:80"><name pos:start="465:29" pos:end="465:36">left_cbp</name> <operator pos:start="465:38" pos:end="465:38">=</operator> <name pos:start="465:40" pos:end="465:58"><name pos:start="465:40" pos:end="465:40">v</name><operator pos:start="465:41" pos:end="465:42">-&gt;</operator><name pos:start="465:43" pos:end="465:45">cbp</name><index pos:start="465:46" pos:end="465:58">[<expr pos:start="465:47" pos:end="465:57"><name pos:start="465:47" pos:end="465:53"><name pos:start="465:47" pos:end="465:47">s</name><operator pos:start="465:48" pos:end="465:49">-&gt;</operator><name pos:start="465:50" pos:end="465:53">mb_x</name></name> <operator pos:start="465:55" pos:end="465:55">-</operator> <literal type="number" pos:start="465:57" pos:end="465:57">1</literal></expr>]</index></name>            <operator pos:start="465:71" pos:end="465:72">&gt;&gt;</operator> <operator pos:start="465:74" pos:end="465:74">(</operator><name pos:start="465:75" pos:end="465:75">i</name> <operator pos:start="465:77" pos:end="465:77">*</operator> <literal type="number" pos:start="465:79" pos:end="465:79">4</literal><operator pos:start="465:80" pos:end="465:80">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="467:29" pos:end="467:81"><expr pos:start="467:29" pos:end="467:80"><name pos:start="467:29" pos:end="467:35">top_cbp</name>  <operator pos:start="467:38" pos:end="467:38">=</operator> <name pos:start="467:40" pos:end="467:69"><name pos:start="467:40" pos:end="467:40">v</name><operator pos:start="467:41" pos:end="467:42">-&gt;</operator><name pos:start="467:43" pos:end="467:45">cbp</name><index pos:start="467:46" pos:end="467:69">[<expr pos:start="467:47" pos:end="467:68"><name pos:start="467:47" pos:end="467:53"><name pos:start="467:47" pos:end="467:47">s</name><operator pos:start="467:48" pos:end="467:49">-&gt;</operator><name pos:start="467:50" pos:end="467:53">mb_x</name></name> <operator pos:start="467:55" pos:end="467:55">-</operator> <name pos:start="467:57" pos:end="467:68"><name pos:start="467:57" pos:end="467:57">s</name><operator pos:start="467:58" pos:end="467:59">-&gt;</operator><name pos:start="467:60" pos:end="467:68">mb_stride</name></name></expr>]</index></name> <operator pos:start="467:71" pos:end="467:72">&gt;&gt;</operator> <operator pos:start="467:74" pos:end="467:74">(</operator><name pos:start="467:75" pos:end="467:75">i</name> <operator pos:start="467:77" pos:end="467:77">*</operator> <literal type="number" pos:start="467:79" pos:end="467:79">4</literal><operator pos:start="467:80" pos:end="467:80">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></if><else pos:start="469:26" pos:end="475:25">else<block pos:start="469:30" pos:end="475:25">{<block_content pos:start="471:29" pos:end="473:116">

                            <expr_stmt pos:start="471:29" pos:end="471:115"><expr pos:start="471:29" pos:end="471:114"><name pos:start="471:29" pos:end="471:36">left_cbp</name> <operator pos:start="471:38" pos:end="471:38">=</operator> <ternary pos:start="471:40" pos:end="471:114"><condition pos:start="471:40" pos:end="471:48"><expr pos:start="471:40" pos:end="471:46"><operator pos:start="471:40" pos:end="471:40">(</operator><name pos:start="471:41" pos:end="471:41">i</name> <operator pos:start="471:43" pos:end="471:43">&amp;</operator> <literal type="number" pos:start="471:45" pos:end="471:45">1</literal><operator pos:start="471:46" pos:end="471:46">)</operator></expr> ?</condition><then pos:start="471:50" pos:end="471:67"> <expr pos:start="471:50" pos:end="471:67"><operator pos:start="471:50" pos:end="471:50">(</operator><name pos:start="471:51" pos:end="471:53">cbp</name> <operator pos:start="471:55" pos:end="471:56">&gt;&gt;</operator> <operator pos:start="471:58" pos:end="471:58">(</operator><operator pos:start="471:59" pos:end="471:59">(</operator><name pos:start="471:60" pos:end="471:60">i</name><operator pos:start="471:61" pos:end="471:61">-</operator><literal type="number" pos:start="471:62" pos:end="471:62">1</literal><operator pos:start="471:63" pos:end="471:63">)</operator><operator pos:start="471:64" pos:end="471:64">*</operator><literal type="number" pos:start="471:65" pos:end="471:65">4</literal><operator pos:start="471:66" pos:end="471:66">)</operator><operator pos:start="471:67" pos:end="471:67">)</operator></expr> </then><else pos:start="471:69" pos:end="471:114">: <expr pos:start="471:71" pos:end="471:114"><operator pos:start="471:71" pos:end="471:71">(</operator><name pos:start="471:72" pos:end="471:90"><name pos:start="471:72" pos:end="471:72">v</name><operator pos:start="471:73" pos:end="471:74">-&gt;</operator><name pos:start="471:75" pos:end="471:77">cbp</name><index pos:start="471:78" pos:end="471:90">[<expr pos:start="471:79" pos:end="471:89"><name pos:start="471:79" pos:end="471:85"><name pos:start="471:79" pos:end="471:79">s</name><operator pos:start="471:80" pos:end="471:81">-&gt;</operator><name pos:start="471:82" pos:end="471:85">mb_x</name></name> <operator pos:start="471:87" pos:end="471:87">-</operator> <literal type="number" pos:start="471:89" pos:end="471:89">1</literal></expr>]</index></name>           <operator pos:start="471:102" pos:end="471:103">&gt;&gt;</operator> <operator pos:start="471:105" pos:end="471:105">(</operator><operator pos:start="471:106" pos:end="471:106">(</operator><name pos:start="471:107" pos:end="471:107">i</name><operator pos:start="471:108" pos:end="471:108">+</operator><literal type="number" pos:start="471:109" pos:end="471:109">1</literal><operator pos:start="471:110" pos:end="471:110">)</operator><operator pos:start="471:111" pos:end="471:111">*</operator><literal type="number" pos:start="471:112" pos:end="471:112">4</literal><operator pos:start="471:113" pos:end="471:113">)</operator><operator pos:start="471:114" pos:end="471:114">)</operator></expr></else></ternary></expr>;</expr_stmt>

                            <expr_stmt pos:start="473:29" pos:end="473:116"><expr pos:start="473:29" pos:end="473:115"><name pos:start="473:29" pos:end="473:35">top_cbp</name>  <operator pos:start="473:38" pos:end="473:38">=</operator> <ternary pos:start="473:40" pos:end="473:115"><condition pos:start="473:40" pos:end="473:48"><expr pos:start="473:40" pos:end="473:46"><operator pos:start="473:40" pos:end="473:40">(</operator><name pos:start="473:41" pos:end="473:41">i</name> <operator pos:start="473:43" pos:end="473:43">&amp;</operator> <literal type="number" pos:start="473:45" pos:end="473:45">2</literal><operator pos:start="473:46" pos:end="473:46">)</operator></expr> ?</condition><then pos:start="473:50" pos:end="473:67"> <expr pos:start="473:50" pos:end="473:67"><operator pos:start="473:50" pos:end="473:50">(</operator><name pos:start="473:51" pos:end="473:53">cbp</name> <operator pos:start="473:55" pos:end="473:56">&gt;&gt;</operator> <operator pos:start="473:58" pos:end="473:58">(</operator><operator pos:start="473:59" pos:end="473:59">(</operator><name pos:start="473:60" pos:end="473:60">i</name><operator pos:start="473:61" pos:end="473:61">-</operator><literal type="number" pos:start="473:62" pos:end="473:62">2</literal><operator pos:start="473:63" pos:end="473:63">)</operator><operator pos:start="473:64" pos:end="473:64">*</operator><literal type="number" pos:start="473:65" pos:end="473:65">4</literal><operator pos:start="473:66" pos:end="473:66">)</operator><operator pos:start="473:67" pos:end="473:67">)</operator></expr> </then><else pos:start="473:69" pos:end="473:115">: <expr pos:start="473:71" pos:end="473:115"><operator pos:start="473:71" pos:end="473:71">(</operator><name pos:start="473:72" pos:end="473:101"><name pos:start="473:72" pos:end="473:72">v</name><operator pos:start="473:73" pos:end="473:74">-&gt;</operator><name pos:start="473:75" pos:end="473:77">cbp</name><index pos:start="473:78" pos:end="473:101">[<expr pos:start="473:79" pos:end="473:100"><name pos:start="473:79" pos:end="473:85"><name pos:start="473:79" pos:end="473:79">s</name><operator pos:start="473:80" pos:end="473:81">-&gt;</operator><name pos:start="473:82" pos:end="473:85">mb_x</name></name> <operator pos:start="473:87" pos:end="473:87">-</operator> <name pos:start="473:89" pos:end="473:100"><name pos:start="473:89" pos:end="473:89">s</name><operator pos:start="473:90" pos:end="473:91">-&gt;</operator><name pos:start="473:92" pos:end="473:100">mb_stride</name></name></expr>]</index></name> <operator pos:start="473:103" pos:end="473:104">&gt;&gt;</operator> <operator pos:start="473:106" pos:end="473:106">(</operator><operator pos:start="473:107" pos:end="473:107">(</operator><name pos:start="473:108" pos:end="473:108">i</name><operator pos:start="473:109" pos:end="473:109">+</operator><literal type="number" pos:start="473:110" pos:end="473:110">2</literal><operator pos:start="473:111" pos:end="473:111">)</operator><operator pos:start="473:112" pos:end="473:112">*</operator><literal type="number" pos:start="473:113" pos:end="473:113">4</literal><operator pos:start="473:114" pos:end="473:114">)</operator><operator pos:start="473:115" pos:end="473:115">)</operator></expr></else></ternary></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="477:25" pos:end="479:126"><if pos:start="477:25" pos:end="479:126">if<condition pos:start="477:27" pos:end="477:42">(<expr pos:start="477:28" pos:end="477:41"><name pos:start="477:28" pos:end="477:35">left_cbp</name> <operator pos:start="477:37" pos:end="477:37">&amp;</operator> <literal type="number" pos:start="477:39" pos:end="477:41">0xC</literal></expr>)</condition><block type="pseudo" pos:start="479:29" pos:end="479:126"><block_content pos:start="479:29" pos:end="479:126">

                            <expr_stmt pos:start="479:29" pos:end="479:126"><expr pos:start="479:29" pos:end="479:125"><call pos:start="479:29" pos:end="479:125"><name pos:start="479:29" pos:end="479:50"><name pos:start="479:29" pos:end="479:29">s</name><operator pos:start="479:30" pos:end="479:31">-&gt;</operator><name pos:start="479:32" pos:end="479:34">dsp</name><operator pos:start="479:35" pos:end="479:35">.</operator><name pos:start="479:36" pos:end="479:50">vc1_loop_filter</name></name><argument_list pos:start="479:51" pos:end="479:125">(<argument pos:start="479:52" pos:end="479:73"><expr pos:start="479:52" pos:end="479:73"><name pos:start="479:52" pos:end="479:67"><name pos:start="479:52" pos:end="479:52">s</name><operator pos:start="479:53" pos:end="479:54">-&gt;</operator><name pos:start="479:55" pos:end="479:58">dest</name><index pos:start="479:59" pos:end="479:67">[<expr pos:start="479:60" pos:end="479:66"><name pos:start="479:60" pos:end="479:66">dst_idx</name></expr>]</index></name> <operator pos:start="479:69" pos:end="479:69">+</operator> <name pos:start="479:71" pos:end="479:73">off</name></expr></argument>, <argument pos:start="479:76" pos:end="479:76"><expr pos:start="479:76" pos:end="479:76"><literal type="number" pos:start="479:76" pos:end="479:76">1</literal></expr></argument>, <argument pos:start="479:79" pos:end="479:113"><expr pos:start="479:79" pos:end="479:113"><ternary pos:start="479:79" pos:end="479:113"><condition pos:start="479:79" pos:end="479:85"><expr pos:start="479:79" pos:end="479:83"><name pos:start="479:79" pos:end="479:79">i</name> <operator pos:start="479:81" pos:end="479:81">&amp;</operator> <literal type="number" pos:start="479:83" pos:end="479:83">4</literal></expr> ?</condition><then pos:start="479:87" pos:end="479:99"> <expr pos:start="479:87" pos:end="479:99"><name pos:start="479:87" pos:end="479:99"><name pos:start="479:87" pos:end="479:87">s</name><operator pos:start="479:88" pos:end="479:89">-&gt;</operator><name pos:start="479:90" pos:end="479:99">uvlinesize</name></name></expr> </then><else pos:start="479:101" pos:end="479:113">: <expr pos:start="479:103" pos:end="479:113"><name pos:start="479:103" pos:end="479:113"><name pos:start="479:103" pos:end="479:103">s</name><operator pos:start="479:104" pos:end="479:105">-&gt;</operator><name pos:start="479:106" pos:end="479:113">linesize</name></name></expr></else></ternary></expr></argument>, <argument pos:start="479:116" pos:end="479:116"><expr pos:start="479:116" pos:end="479:116"><literal type="number" pos:start="479:116" pos:end="479:116">8</literal></expr></argument>, <argument pos:start="479:119" pos:end="479:124"><expr pos:start="479:119" pos:end="479:124"><name pos:start="479:119" pos:end="479:124">mquant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="481:25" pos:end="483:126"><if pos:start="481:25" pos:end="483:126">if<condition pos:start="481:27" pos:end="481:42">(<expr pos:start="481:28" pos:end="481:41"><name pos:start="481:28" pos:end="481:34">top_cbp</name>  <operator pos:start="481:37" pos:end="481:37">&amp;</operator> <literal type="number" pos:start="481:39" pos:end="481:41">0xA</literal></expr>)</condition><block type="pseudo" pos:start="483:29" pos:end="483:126"><block_content pos:start="483:29" pos:end="483:126">

                            <expr_stmt pos:start="483:29" pos:end="483:126"><expr pos:start="483:29" pos:end="483:125"><call pos:start="483:29" pos:end="483:125"><name pos:start="483:29" pos:end="483:50"><name pos:start="483:29" pos:end="483:29">s</name><operator pos:start="483:30" pos:end="483:31">-&gt;</operator><name pos:start="483:32" pos:end="483:34">dsp</name><operator pos:start="483:35" pos:end="483:35">.</operator><name pos:start="483:36" pos:end="483:50">vc1_loop_filter</name></name><argument_list pos:start="483:51" pos:end="483:125">(<argument pos:start="483:52" pos:end="483:73"><expr pos:start="483:52" pos:end="483:73"><name pos:start="483:52" pos:end="483:67"><name pos:start="483:52" pos:end="483:52">s</name><operator pos:start="483:53" pos:end="483:54">-&gt;</operator><name pos:start="483:55" pos:end="483:58">dest</name><index pos:start="483:59" pos:end="483:67">[<expr pos:start="483:60" pos:end="483:66"><name pos:start="483:60" pos:end="483:66">dst_idx</name></expr>]</index></name> <operator pos:start="483:69" pos:end="483:69">+</operator> <name pos:start="483:71" pos:end="483:73">off</name></expr></argument>, <argument pos:start="483:76" pos:end="483:110"><expr pos:start="483:76" pos:end="483:110"><ternary pos:start="483:76" pos:end="483:110"><condition pos:start="483:76" pos:end="483:82"><expr pos:start="483:76" pos:end="483:80"><name pos:start="483:76" pos:end="483:76">i</name> <operator pos:start="483:78" pos:end="483:78">&amp;</operator> <literal type="number" pos:start="483:80" pos:end="483:80">4</literal></expr> ?</condition><then pos:start="483:84" pos:end="483:96"> <expr pos:start="483:84" pos:end="483:96"><name pos:start="483:84" pos:end="483:96"><name pos:start="483:84" pos:end="483:84">s</name><operator pos:start="483:85" pos:end="483:86">-&gt;</operator><name pos:start="483:87" pos:end="483:96">uvlinesize</name></name></expr> </then><else pos:start="483:98" pos:end="483:110">: <expr pos:start="483:100" pos:end="483:110"><name pos:start="483:100" pos:end="483:110"><name pos:start="483:100" pos:end="483:100">s</name><operator pos:start="483:101" pos:end="483:102">-&gt;</operator><name pos:start="483:103" pos:end="483:110">linesize</name></name></expr></else></ternary></expr></argument>, <argument pos:start="483:113" pos:end="483:113"><expr pos:start="483:113" pos:end="483:113"><literal type="number" pos:start="483:113" pos:end="483:113">1</literal></expr></argument>, <argument pos:start="483:116" pos:end="483:116"><expr pos:start="483:116" pos:end="483:116"><literal type="number" pos:start="483:116" pos:end="483:116">8</literal></expr></argument>, <argument pos:start="483:119" pos:end="483:124"><expr pos:start="483:119" pos:end="483:124"><name pos:start="483:119" pos:end="483:124">mquant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="487:21" pos:end="487:49"><expr pos:start="487:21" pos:end="487:48"><name pos:start="487:21" pos:end="487:29">block_cbp</name> <operator pos:start="487:31" pos:end="487:32">|=</operator> <literal type="number" pos:start="487:34" pos:end="487:36">0xF</literal> <operator pos:start="487:38" pos:end="487:39">&lt;&lt;</operator> <operator pos:start="487:41" pos:end="487:41">(</operator><name pos:start="487:42" pos:end="487:42">i</name> <operator pos:start="487:44" pos:end="487:45">&lt;&lt;</operator> <literal type="number" pos:start="487:47" pos:end="487:47">2</literal><operator pos:start="487:48" pos:end="487:48">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="489:19" pos:end="529:17">else if<condition pos:start="489:26" pos:end="489:38">(<expr pos:start="489:27" pos:end="489:37"><name pos:start="489:27" pos:end="489:37"><name pos:start="489:27" pos:end="489:34">is_coded</name><index pos:start="489:35" pos:end="489:37">[<expr pos:start="489:36" pos:end="489:36"><name pos:start="489:36" pos:end="489:36">i</name></expr>]</index></name></expr>)</condition> <block pos:start="489:40" pos:end="529:17">{<block_content pos:start="491:21" pos:end="527:36">

                    <decl_stmt pos:start="491:21" pos:end="491:62"><decl pos:start="491:21" pos:end="491:36"><type pos:start="491:21" pos:end="491:23"><name pos:start="491:21" pos:end="491:23">int</name></type> <name pos:start="491:25" pos:end="491:32">left_cbp</name> <init pos:start="491:34" pos:end="491:36">= <expr pos:start="491:36" pos:end="491:36"><literal type="number" pos:start="491:36" pos:end="491:36">0</literal></expr></init></decl>, <decl pos:start="491:39" pos:end="491:49"><type ref="prev" pos:start="491:21" pos:end="491:23"/><name pos:start="491:39" pos:end="491:45">top_cbp</name> <init pos:start="491:47" pos:end="491:49">= <expr pos:start="491:49" pos:end="491:49"><literal type="number" pos:start="491:49" pos:end="491:49">0</literal></expr></init></decl>, <decl pos:start="491:52" pos:end="491:61"><type ref="prev" pos:start="491:21" pos:end="491:23"/><name pos:start="491:52" pos:end="491:57">filter</name> <init pos:start="491:59" pos:end="491:61">= <expr pos:start="491:61" pos:end="491:61"><literal type="number" pos:start="491:61" pos:end="491:61">0</literal></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="493:21" pos:end="519:21"><if pos:start="493:21" pos:end="519:21">if<condition pos:start="493:23" pos:end="493:127">(<expr pos:start="493:24" pos:end="493:126"><name pos:start="493:24" pos:end="493:39"><name pos:start="493:24" pos:end="493:24">v</name><operator pos:start="493:25" pos:end="493:26">-&gt;</operator><name pos:start="493:27" pos:end="493:27">s</name><operator pos:start="493:28" pos:end="493:28">.</operator><name pos:start="493:29" pos:end="493:39">loop_filter</name></name> <operator pos:start="493:41" pos:end="493:42">&amp;&amp;</operator> <name pos:start="493:44" pos:end="493:50"><name pos:start="493:44" pos:end="493:44">s</name><operator pos:start="493:45" pos:end="493:46">-&gt;</operator><name pos:start="493:47" pos:end="493:50">mb_x</name></name> <operator pos:start="493:52" pos:end="493:53">&amp;&amp;</operator> <name pos:start="493:55" pos:end="493:61"><name pos:start="493:55" pos:end="493:55">s</name><operator pos:start="493:56" pos:end="493:57">-&gt;</operator><name pos:start="493:58" pos:end="493:61">mb_x</name></name> <operator pos:start="493:63" pos:end="493:64">!=</operator> <operator pos:start="493:66" pos:end="493:66">(</operator><name pos:start="493:67" pos:end="493:77"><name pos:start="493:67" pos:end="493:67">s</name><operator pos:start="493:68" pos:end="493:69">-&gt;</operator><name pos:start="493:70" pos:end="493:77">mb_width</name></name> <operator pos:start="493:79" pos:end="493:79">-</operator> <literal type="number" pos:start="493:81" pos:end="493:81">1</literal><operator pos:start="493:82" pos:end="493:82">)</operator> <operator pos:start="493:84" pos:end="493:85">&amp;&amp;</operator> <name pos:start="493:87" pos:end="493:93"><name pos:start="493:87" pos:end="493:87">s</name><operator pos:start="493:88" pos:end="493:89">-&gt;</operator><name pos:start="493:90" pos:end="493:93">mb_y</name></name> <operator pos:start="493:95" pos:end="493:96">&amp;&amp;</operator> <name pos:start="493:98" pos:end="493:104"><name pos:start="493:98" pos:end="493:98">s</name><operator pos:start="493:99" pos:end="493:100">-&gt;</operator><name pos:start="493:101" pos:end="493:104">mb_y</name></name> <operator pos:start="493:106" pos:end="493:107">!=</operator> <operator pos:start="493:109" pos:end="493:109">(</operator><name pos:start="493:110" pos:end="493:121"><name pos:start="493:110" pos:end="493:110">s</name><operator pos:start="493:111" pos:end="493:112">-&gt;</operator><name pos:start="493:113" pos:end="493:121">mb_height</name></name> <operator pos:start="493:123" pos:end="493:123">-</operator> <literal type="number" pos:start="493:125" pos:end="493:125">1</literal><operator pos:start="493:126" pos:end="493:126">)</operator></expr>)</condition><block pos:start="493:128" pos:end="519:21">{<block_content pos:start="495:25" pos:end="517:126">

                        <expr_stmt pos:start="495:25" pos:end="495:35"><expr pos:start="495:25" pos:end="495:34"><name pos:start="495:25" pos:end="495:30">filter</name> <operator pos:start="495:32" pos:end="495:32">=</operator> <literal type="number" pos:start="495:34" pos:end="495:34">1</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="497:25" pos:end="509:25"><if pos:start="497:25" pos:end="503:25">if<condition pos:start="497:27" pos:end="497:33">(<expr pos:start="497:28" pos:end="497:32"><name pos:start="497:28" pos:end="497:28">i</name> <operator pos:start="497:30" pos:end="497:30">&amp;</operator> <literal type="number" pos:start="497:32" pos:end="497:32">4</literal></expr>)</condition><block pos:start="497:34" pos:end="503:25">{<block_content pos:start="499:29" pos:end="501:81">

                            <expr_stmt pos:start="499:29" pos:end="499:81"><expr pos:start="499:29" pos:end="499:80"><name pos:start="499:29" pos:end="499:36">left_cbp</name> <operator pos:start="499:38" pos:end="499:38">=</operator> <name pos:start="499:40" pos:end="499:58"><name pos:start="499:40" pos:end="499:40">v</name><operator pos:start="499:41" pos:end="499:42">-&gt;</operator><name pos:start="499:43" pos:end="499:45">cbp</name><index pos:start="499:46" pos:end="499:58">[<expr pos:start="499:47" pos:end="499:57"><name pos:start="499:47" pos:end="499:53"><name pos:start="499:47" pos:end="499:47">s</name><operator pos:start="499:48" pos:end="499:49">-&gt;</operator><name pos:start="499:50" pos:end="499:53">mb_x</name></name> <operator pos:start="499:55" pos:end="499:55">-</operator> <literal type="number" pos:start="499:57" pos:end="499:57">1</literal></expr>]</index></name>            <operator pos:start="499:71" pos:end="499:72">&gt;&gt;</operator> <operator pos:start="499:74" pos:end="499:74">(</operator><name pos:start="499:75" pos:end="499:75">i</name> <operator pos:start="499:77" pos:end="499:77">*</operator> <literal type="number" pos:start="499:79" pos:end="499:79">4</literal><operator pos:start="499:80" pos:end="499:80">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="501:29" pos:end="501:81"><expr pos:start="501:29" pos:end="501:80"><name pos:start="501:29" pos:end="501:35">top_cbp</name>  <operator pos:start="501:38" pos:end="501:38">=</operator> <name pos:start="501:40" pos:end="501:69"><name pos:start="501:40" pos:end="501:40">v</name><operator pos:start="501:41" pos:end="501:42">-&gt;</operator><name pos:start="501:43" pos:end="501:45">cbp</name><index pos:start="501:46" pos:end="501:69">[<expr pos:start="501:47" pos:end="501:68"><name pos:start="501:47" pos:end="501:53"><name pos:start="501:47" pos:end="501:47">s</name><operator pos:start="501:48" pos:end="501:49">-&gt;</operator><name pos:start="501:50" pos:end="501:53">mb_x</name></name> <operator pos:start="501:55" pos:end="501:55">-</operator> <name pos:start="501:57" pos:end="501:68"><name pos:start="501:57" pos:end="501:57">s</name><operator pos:start="501:58" pos:end="501:59">-&gt;</operator><name pos:start="501:60" pos:end="501:68">mb_stride</name></name></expr>]</index></name> <operator pos:start="501:71" pos:end="501:72">&gt;&gt;</operator> <operator pos:start="501:74" pos:end="501:74">(</operator><name pos:start="501:75" pos:end="501:75">i</name> <operator pos:start="501:77" pos:end="501:77">*</operator> <literal type="number" pos:start="501:79" pos:end="501:79">4</literal><operator pos:start="501:80" pos:end="501:80">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></if><else pos:start="503:26" pos:end="509:25">else<block pos:start="503:30" pos:end="509:25">{<block_content pos:start="505:29" pos:end="507:116">

                            <expr_stmt pos:start="505:29" pos:end="505:115"><expr pos:start="505:29" pos:end="505:114"><name pos:start="505:29" pos:end="505:36">left_cbp</name> <operator pos:start="505:38" pos:end="505:38">=</operator> <ternary pos:start="505:40" pos:end="505:114"><condition pos:start="505:40" pos:end="505:48"><expr pos:start="505:40" pos:end="505:46"><operator pos:start="505:40" pos:end="505:40">(</operator><name pos:start="505:41" pos:end="505:41">i</name> <operator pos:start="505:43" pos:end="505:43">&amp;</operator> <literal type="number" pos:start="505:45" pos:end="505:45">1</literal><operator pos:start="505:46" pos:end="505:46">)</operator></expr> ?</condition><then pos:start="505:50" pos:end="505:67"> <expr pos:start="505:50" pos:end="505:67"><operator pos:start="505:50" pos:end="505:50">(</operator><name pos:start="505:51" pos:end="505:53">cbp</name> <operator pos:start="505:55" pos:end="505:56">&gt;&gt;</operator> <operator pos:start="505:58" pos:end="505:58">(</operator><operator pos:start="505:59" pos:end="505:59">(</operator><name pos:start="505:60" pos:end="505:60">i</name><operator pos:start="505:61" pos:end="505:61">-</operator><literal type="number" pos:start="505:62" pos:end="505:62">1</literal><operator pos:start="505:63" pos:end="505:63">)</operator><operator pos:start="505:64" pos:end="505:64">*</operator><literal type="number" pos:start="505:65" pos:end="505:65">4</literal><operator pos:start="505:66" pos:end="505:66">)</operator><operator pos:start="505:67" pos:end="505:67">)</operator></expr> </then><else pos:start="505:69" pos:end="505:114">: <expr pos:start="505:71" pos:end="505:114"><operator pos:start="505:71" pos:end="505:71">(</operator><name pos:start="505:72" pos:end="505:90"><name pos:start="505:72" pos:end="505:72">v</name><operator pos:start="505:73" pos:end="505:74">-&gt;</operator><name pos:start="505:75" pos:end="505:77">cbp</name><index pos:start="505:78" pos:end="505:90">[<expr pos:start="505:79" pos:end="505:89"><name pos:start="505:79" pos:end="505:85"><name pos:start="505:79" pos:end="505:79">s</name><operator pos:start="505:80" pos:end="505:81">-&gt;</operator><name pos:start="505:82" pos:end="505:85">mb_x</name></name> <operator pos:start="505:87" pos:end="505:87">-</operator> <literal type="number" pos:start="505:89" pos:end="505:89">1</literal></expr>]</index></name>           <operator pos:start="505:102" pos:end="505:103">&gt;&gt;</operator> <operator pos:start="505:105" pos:end="505:105">(</operator><operator pos:start="505:106" pos:end="505:106">(</operator><name pos:start="505:107" pos:end="505:107">i</name><operator pos:start="505:108" pos:end="505:108">+</operator><literal type="number" pos:start="505:109" pos:end="505:109">1</literal><operator pos:start="505:110" pos:end="505:110">)</operator><operator pos:start="505:111" pos:end="505:111">*</operator><literal type="number" pos:start="505:112" pos:end="505:112">4</literal><operator pos:start="505:113" pos:end="505:113">)</operator><operator pos:start="505:114" pos:end="505:114">)</operator></expr></else></ternary></expr>;</expr_stmt>

                            <expr_stmt pos:start="507:29" pos:end="507:116"><expr pos:start="507:29" pos:end="507:115"><name pos:start="507:29" pos:end="507:35">top_cbp</name>  <operator pos:start="507:38" pos:end="507:38">=</operator> <ternary pos:start="507:40" pos:end="507:115"><condition pos:start="507:40" pos:end="507:48"><expr pos:start="507:40" pos:end="507:46"><operator pos:start="507:40" pos:end="507:40">(</operator><name pos:start="507:41" pos:end="507:41">i</name> <operator pos:start="507:43" pos:end="507:43">&amp;</operator> <literal type="number" pos:start="507:45" pos:end="507:45">2</literal><operator pos:start="507:46" pos:end="507:46">)</operator></expr> ?</condition><then pos:start="507:50" pos:end="507:67"> <expr pos:start="507:50" pos:end="507:67"><operator pos:start="507:50" pos:end="507:50">(</operator><name pos:start="507:51" pos:end="507:53">cbp</name> <operator pos:start="507:55" pos:end="507:56">&gt;&gt;</operator> <operator pos:start="507:58" pos:end="507:58">(</operator><operator pos:start="507:59" pos:end="507:59">(</operator><name pos:start="507:60" pos:end="507:60">i</name><operator pos:start="507:61" pos:end="507:61">-</operator><literal type="number" pos:start="507:62" pos:end="507:62">2</literal><operator pos:start="507:63" pos:end="507:63">)</operator><operator pos:start="507:64" pos:end="507:64">*</operator><literal type="number" pos:start="507:65" pos:end="507:65">4</literal><operator pos:start="507:66" pos:end="507:66">)</operator><operator pos:start="507:67" pos:end="507:67">)</operator></expr> </then><else pos:start="507:69" pos:end="507:115">: <expr pos:start="507:71" pos:end="507:115"><operator pos:start="507:71" pos:end="507:71">(</operator><name pos:start="507:72" pos:end="507:101"><name pos:start="507:72" pos:end="507:72">v</name><operator pos:start="507:73" pos:end="507:74">-&gt;</operator><name pos:start="507:75" pos:end="507:77">cbp</name><index pos:start="507:78" pos:end="507:101">[<expr pos:start="507:79" pos:end="507:100"><name pos:start="507:79" pos:end="507:85"><name pos:start="507:79" pos:end="507:79">s</name><operator pos:start="507:80" pos:end="507:81">-&gt;</operator><name pos:start="507:82" pos:end="507:85">mb_x</name></name> <operator pos:start="507:87" pos:end="507:87">-</operator> <name pos:start="507:89" pos:end="507:100"><name pos:start="507:89" pos:end="507:89">s</name><operator pos:start="507:90" pos:end="507:91">-&gt;</operator><name pos:start="507:92" pos:end="507:100">mb_stride</name></name></expr>]</index></name> <operator pos:start="507:103" pos:end="507:104">&gt;&gt;</operator> <operator pos:start="507:106" pos:end="507:106">(</operator><operator pos:start="507:107" pos:end="507:107">(</operator><name pos:start="507:108" pos:end="507:108">i</name><operator pos:start="507:109" pos:end="507:109">+</operator><literal type="number" pos:start="507:110" pos:end="507:110">2</literal><operator pos:start="507:111" pos:end="507:111">)</operator><operator pos:start="507:112" pos:end="507:112">*</operator><literal type="number" pos:start="507:113" pos:end="507:113">4</literal><operator pos:start="507:114" pos:end="507:114">)</operator><operator pos:start="507:115" pos:end="507:115">)</operator></expr></else></ternary></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="511:25" pos:end="513:126"><if pos:start="511:25" pos:end="513:126">if<condition pos:start="511:27" pos:end="511:42">(<expr pos:start="511:28" pos:end="511:41"><name pos:start="511:28" pos:end="511:35">left_cbp</name> <operator pos:start="511:37" pos:end="511:37">&amp;</operator> <literal type="number" pos:start="511:39" pos:end="511:41">0xC</literal></expr>)</condition><block type="pseudo" pos:start="513:29" pos:end="513:126"><block_content pos:start="513:29" pos:end="513:126">

                            <expr_stmt pos:start="513:29" pos:end="513:126"><expr pos:start="513:29" pos:end="513:125"><call pos:start="513:29" pos:end="513:125"><name pos:start="513:29" pos:end="513:50"><name pos:start="513:29" pos:end="513:29">s</name><operator pos:start="513:30" pos:end="513:31">-&gt;</operator><name pos:start="513:32" pos:end="513:34">dsp</name><operator pos:start="513:35" pos:end="513:35">.</operator><name pos:start="513:36" pos:end="513:50">vc1_loop_filter</name></name><argument_list pos:start="513:51" pos:end="513:125">(<argument pos:start="513:52" pos:end="513:73"><expr pos:start="513:52" pos:end="513:73"><name pos:start="513:52" pos:end="513:67"><name pos:start="513:52" pos:end="513:52">s</name><operator pos:start="513:53" pos:end="513:54">-&gt;</operator><name pos:start="513:55" pos:end="513:58">dest</name><index pos:start="513:59" pos:end="513:67">[<expr pos:start="513:60" pos:end="513:66"><name pos:start="513:60" pos:end="513:66">dst_idx</name></expr>]</index></name> <operator pos:start="513:69" pos:end="513:69">+</operator> <name pos:start="513:71" pos:end="513:73">off</name></expr></argument>, <argument pos:start="513:76" pos:end="513:76"><expr pos:start="513:76" pos:end="513:76"><literal type="number" pos:start="513:76" pos:end="513:76">1</literal></expr></argument>, <argument pos:start="513:79" pos:end="513:113"><expr pos:start="513:79" pos:end="513:113"><ternary pos:start="513:79" pos:end="513:113"><condition pos:start="513:79" pos:end="513:85"><expr pos:start="513:79" pos:end="513:83"><name pos:start="513:79" pos:end="513:79">i</name> <operator pos:start="513:81" pos:end="513:81">&amp;</operator> <literal type="number" pos:start="513:83" pos:end="513:83">4</literal></expr> ?</condition><then pos:start="513:87" pos:end="513:99"> <expr pos:start="513:87" pos:end="513:99"><name pos:start="513:87" pos:end="513:99"><name pos:start="513:87" pos:end="513:87">s</name><operator pos:start="513:88" pos:end="513:89">-&gt;</operator><name pos:start="513:90" pos:end="513:99">uvlinesize</name></name></expr> </then><else pos:start="513:101" pos:end="513:113">: <expr pos:start="513:103" pos:end="513:113"><name pos:start="513:103" pos:end="513:113"><name pos:start="513:103" pos:end="513:103">s</name><operator pos:start="513:104" pos:end="513:105">-&gt;</operator><name pos:start="513:106" pos:end="513:113">linesize</name></name></expr></else></ternary></expr></argument>, <argument pos:start="513:116" pos:end="513:116"><expr pos:start="513:116" pos:end="513:116"><literal type="number" pos:start="513:116" pos:end="513:116">8</literal></expr></argument>, <argument pos:start="513:119" pos:end="513:124"><expr pos:start="513:119" pos:end="513:124"><name pos:start="513:119" pos:end="513:124">mquant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="515:25" pos:end="517:126"><if pos:start="515:25" pos:end="517:126">if<condition pos:start="515:27" pos:end="515:42">(<expr pos:start="515:28" pos:end="515:41"><name pos:start="515:28" pos:end="515:34">top_cbp</name>  <operator pos:start="515:37" pos:end="515:37">&amp;</operator> <literal type="number" pos:start="515:39" pos:end="515:41">0xA</literal></expr>)</condition><block type="pseudo" pos:start="517:29" pos:end="517:126"><block_content pos:start="517:29" pos:end="517:126">

                            <expr_stmt pos:start="517:29" pos:end="517:126"><expr pos:start="517:29" pos:end="517:125"><call pos:start="517:29" pos:end="517:125"><name pos:start="517:29" pos:end="517:50"><name pos:start="517:29" pos:end="517:29">s</name><operator pos:start="517:30" pos:end="517:31">-&gt;</operator><name pos:start="517:32" pos:end="517:34">dsp</name><operator pos:start="517:35" pos:end="517:35">.</operator><name pos:start="517:36" pos:end="517:50">vc1_loop_filter</name></name><argument_list pos:start="517:51" pos:end="517:125">(<argument pos:start="517:52" pos:end="517:73"><expr pos:start="517:52" pos:end="517:73"><name pos:start="517:52" pos:end="517:67"><name pos:start="517:52" pos:end="517:52">s</name><operator pos:start="517:53" pos:end="517:54">-&gt;</operator><name pos:start="517:55" pos:end="517:58">dest</name><index pos:start="517:59" pos:end="517:67">[<expr pos:start="517:60" pos:end="517:66"><name pos:start="517:60" pos:end="517:66">dst_idx</name></expr>]</index></name> <operator pos:start="517:69" pos:end="517:69">+</operator> <name pos:start="517:71" pos:end="517:73">off</name></expr></argument>, <argument pos:start="517:76" pos:end="517:110"><expr pos:start="517:76" pos:end="517:110"><ternary pos:start="517:76" pos:end="517:110"><condition pos:start="517:76" pos:end="517:82"><expr pos:start="517:76" pos:end="517:80"><name pos:start="517:76" pos:end="517:76">i</name> <operator pos:start="517:78" pos:end="517:78">&amp;</operator> <literal type="number" pos:start="517:80" pos:end="517:80">4</literal></expr> ?</condition><then pos:start="517:84" pos:end="517:96"> <expr pos:start="517:84" pos:end="517:96"><name pos:start="517:84" pos:end="517:96"><name pos:start="517:84" pos:end="517:84">s</name><operator pos:start="517:85" pos:end="517:86">-&gt;</operator><name pos:start="517:87" pos:end="517:96">uvlinesize</name></name></expr> </then><else pos:start="517:98" pos:end="517:110">: <expr pos:start="517:100" pos:end="517:110"><name pos:start="517:100" pos:end="517:110"><name pos:start="517:100" pos:end="517:100">s</name><operator pos:start="517:101" pos:end="517:102">-&gt;</operator><name pos:start="517:103" pos:end="517:110">linesize</name></name></expr></else></ternary></expr></argument>, <argument pos:start="517:113" pos:end="517:113"><expr pos:start="517:113" pos:end="517:113"><literal type="number" pos:start="517:113" pos:end="517:113">1</literal></expr></argument>, <argument pos:start="517:116" pos:end="517:116"><expr pos:start="517:116" pos:end="517:116"><literal type="number" pos:start="517:116" pos:end="517:116">8</literal></expr></argument>, <argument pos:start="517:119" pos:end="517:124"><expr pos:start="517:119" pos:end="517:124"><name pos:start="517:119" pos:end="517:124">mquant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="521:21" pos:end="521:214"><expr pos:start="521:21" pos:end="521:213"><name pos:start="521:21" pos:end="521:23">pat</name> <operator pos:start="521:25" pos:end="521:25">=</operator> <call pos:start="521:27" pos:end="521:213"><name pos:start="521:27" pos:end="521:44">vc1_decode_p_block</name><argument_list pos:start="521:45" pos:end="521:213">(<argument pos:start="521:46" pos:end="521:46"><expr pos:start="521:46" pos:end="521:46"><name pos:start="521:46" pos:end="521:46">v</name></expr></argument>, <argument pos:start="521:49" pos:end="521:59"><expr pos:start="521:49" pos:end="521:59"><name pos:start="521:49" pos:end="521:59"><name pos:start="521:49" pos:end="521:49">s</name><operator pos:start="521:50" pos:end="521:51">-&gt;</operator><name pos:start="521:52" pos:end="521:56">block</name><index pos:start="521:57" pos:end="521:59">[<expr pos:start="521:58" pos:end="521:58"><name pos:start="521:58" pos:end="521:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="521:62" pos:end="521:62"><expr pos:start="521:62" pos:end="521:62"><name pos:start="521:62" pos:end="521:62">i</name></expr></argument>, <argument pos:start="521:65" pos:end="521:70"><expr pos:start="521:65" pos:end="521:70"><name pos:start="521:65" pos:end="521:70">mquant</name></expr></argument>, <argument pos:start="521:73" pos:end="521:76"><expr pos:start="521:73" pos:end="521:76"><name pos:start="521:73" pos:end="521:76">ttmb</name></expr></argument>, <argument pos:start="521:79" pos:end="521:89"><expr pos:start="521:79" pos:end="521:89"><name pos:start="521:79" pos:end="521:89">first_block</name></expr></argument>, <argument pos:start="521:92" pos:end="521:113"><expr pos:start="521:92" pos:end="521:113"><name pos:start="521:92" pos:end="521:107"><name pos:start="521:92" pos:end="521:92">s</name><operator pos:start="521:93" pos:end="521:94">-&gt;</operator><name pos:start="521:95" pos:end="521:98">dest</name><index pos:start="521:99" pos:end="521:107">[<expr pos:start="521:100" pos:end="521:106"><name pos:start="521:100" pos:end="521:106">dst_idx</name></expr>]</index></name> <operator pos:start="521:109" pos:end="521:109">+</operator> <name pos:start="521:111" pos:end="521:113">off</name></expr></argument>, <argument pos:start="521:116" pos:end="521:146"><expr pos:start="521:116" pos:end="521:146"><ternary pos:start="521:116" pos:end="521:146"><condition pos:start="521:116" pos:end="521:121"><expr pos:start="521:116" pos:end="521:120"><operator pos:start="521:116" pos:end="521:116">(</operator><name pos:start="521:117" pos:end="521:117">i</name><operator pos:start="521:118" pos:end="521:118">&amp;</operator><literal type="number" pos:start="521:119" pos:end="521:119">4</literal><operator pos:start="521:120" pos:end="521:120">)</operator></expr>?</condition><then pos:start="521:122" pos:end="521:134"><expr pos:start="521:122" pos:end="521:134"><name pos:start="521:122" pos:end="521:134"><name pos:start="521:122" pos:end="521:122">s</name><operator pos:start="521:123" pos:end="521:124">-&gt;</operator><name pos:start="521:125" pos:end="521:134">uvlinesize</name></name></expr></then><else pos:start="521:135" pos:end="521:146">:<expr pos:start="521:136" pos:end="521:146"><name pos:start="521:136" pos:end="521:146"><name pos:start="521:136" pos:end="521:136">s</name><operator pos:start="521:137" pos:end="521:138">-&gt;</operator><name pos:start="521:139" pos:end="521:146">linesize</name></name></expr></else></ternary></expr></argument>, <argument pos:start="521:149" pos:end="521:185"><expr pos:start="521:149" pos:end="521:185"><operator pos:start="521:149" pos:end="521:149">(</operator><name pos:start="521:150" pos:end="521:150">i</name><operator pos:start="521:151" pos:end="521:151">&amp;</operator><literal type="number" pos:start="521:152" pos:end="521:152">4</literal><operator pos:start="521:153" pos:end="521:153">)</operator> <operator pos:start="521:155" pos:end="521:156">&amp;&amp;</operator> <operator pos:start="521:158" pos:end="521:158">(</operator><name pos:start="521:159" pos:end="521:166"><name pos:start="521:159" pos:end="521:159">s</name><operator pos:start="521:160" pos:end="521:161">-&gt;</operator><name pos:start="521:162" pos:end="521:166">flags</name></name> <operator pos:start="521:168" pos:end="521:168">&amp;</operator> <name pos:start="521:170" pos:end="521:184">CODEC_FLAG_GRAY</name><operator pos:start="521:185" pos:end="521:185">)</operator></expr></argument>, <argument pos:start="521:188" pos:end="521:193"><expr pos:start="521:188" pos:end="521:193"><name pos:start="521:188" pos:end="521:193">filter</name></expr></argument>, <argument pos:start="521:196" pos:end="521:203"><expr pos:start="521:196" pos:end="521:203"><name pos:start="521:196" pos:end="521:203">left_cbp</name></expr></argument>, <argument pos:start="521:206" pos:end="521:212"><expr pos:start="521:206" pos:end="521:212"><name pos:start="521:206" pos:end="521:212">top_cbp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="523:21" pos:end="523:49"><expr pos:start="523:21" pos:end="523:48"><name pos:start="523:21" pos:end="523:29">block_cbp</name> <operator pos:start="523:31" pos:end="523:32">|=</operator> <name pos:start="523:34" pos:end="523:36">pat</name> <operator pos:start="523:38" pos:end="523:39">&lt;&lt;</operator> <operator pos:start="523:41" pos:end="523:41">(</operator><name pos:start="523:42" pos:end="523:42">i</name> <operator pos:start="523:44" pos:end="523:45">&lt;&lt;</operator> <literal type="number" pos:start="523:47" pos:end="523:47">2</literal><operator pos:start="523:48" pos:end="523:48">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="525:21" pos:end="525:56"><if pos:start="525:21" pos:end="525:56">if<condition pos:start="525:23" pos:end="525:45">(<expr pos:start="525:24" pos:end="525:44"><operator pos:start="525:24" pos:end="525:24">!</operator><name pos:start="525:25" pos:end="525:32"><name pos:start="525:25" pos:end="525:25">v</name><operator pos:start="525:26" pos:end="525:27">-&gt;</operator><name pos:start="525:28" pos:end="525:32">ttmbf</name></name> <operator pos:start="525:34" pos:end="525:35">&amp;&amp;</operator> <name pos:start="525:37" pos:end="525:40">ttmb</name> <operator pos:start="525:42" pos:end="525:42">&lt;</operator> <literal type="number" pos:start="525:44" pos:end="525:44">8</literal></expr>)</condition><block type="pseudo" pos:start="525:47" pos:end="525:56"><block_content pos:start="525:47" pos:end="525:56"> <expr_stmt pos:start="525:47" pos:end="525:56"><expr pos:start="525:47" pos:end="525:55"><name pos:start="525:47" pos:end="525:50">ttmb</name> <operator pos:start="525:52" pos:end="525:52">=</operator> <operator pos:start="525:54" pos:end="525:54">-</operator><literal type="number" pos:start="525:55" pos:end="525:55">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="527:21" pos:end="527:36"><expr pos:start="527:21" pos:end="527:35"><name pos:start="527:21" pos:end="527:31">first_block</name> <operator pos:start="527:33" pos:end="527:33">=</operator> <literal type="number" pos:start="527:35" pos:end="527:35">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <return pos:start="533:13" pos:end="533:21">return <expr pos:start="533:20" pos:end="533:20"><literal type="number" pos:start="533:20" pos:end="533:20">0</literal></expr>;</return>

        </block_content>}</block></if>

        <else pos:start="537:9" pos:end="569:9">else <comment type="line" pos:start="537:14" pos:end="537:25">//Skipped MB</comment>

        <block pos:start="539:9" pos:end="569:9">{<block_content pos:start="541:13" pos:end="567:21">

            <expr_stmt pos:start="541:13" pos:end="541:28"><expr pos:start="541:13" pos:end="541:27"><name pos:start="541:13" pos:end="541:23"><name pos:start="541:13" pos:end="541:13">s</name><operator pos:start="541:14" pos:end="541:15">-&gt;</operator><name pos:start="541:16" pos:end="541:23">mb_intra</name></name> <operator pos:start="541:25" pos:end="541:25">=</operator> <literal type="number" pos:start="541:27" pos:end="541:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="543:13" pos:end="543:56"><expr pos:start="543:13" pos:end="543:55"><name pos:start="543:13" pos:end="543:51"><name pos:start="543:13" pos:end="543:13">s</name><operator pos:start="543:14" pos:end="543:15">-&gt;</operator><name pos:start="543:16" pos:end="543:30">current_picture</name><operator pos:start="543:31" pos:end="543:31">.</operator><name pos:start="543:32" pos:end="543:43">qscale_table</name><index pos:start="543:44" pos:end="543:51">[<expr pos:start="543:45" pos:end="543:50"><name pos:start="543:45" pos:end="543:50">mb_pos</name></expr>]</index></name> <operator pos:start="543:53" pos:end="543:53">=</operator> <literal type="number" pos:start="543:55" pos:end="543:55">0</literal></expr>;</expr_stmt>

            <for pos:start="545:13" pos:end="551:13">for <control pos:start="545:17" pos:end="545:31">(<init pos:start="545:18" pos:end="545:21"><expr pos:start="545:18" pos:end="545:20"><name pos:start="545:18" pos:end="545:18">i</name><operator pos:start="545:19" pos:end="545:19">=</operator><literal type="number" pos:start="545:20" pos:end="545:20">0</literal></expr>;</init> <condition pos:start="545:23" pos:end="545:26"><expr pos:start="545:23" pos:end="545:25"><name pos:start="545:23" pos:end="545:23">i</name><operator pos:start="545:24" pos:end="545:24">&lt;</operator><literal type="number" pos:start="545:25" pos:end="545:25">6</literal></expr>;</condition> <incr pos:start="545:28" pos:end="545:30"><expr pos:start="545:28" pos:end="545:30"><name pos:start="545:28" pos:end="545:28">i</name><operator pos:start="545:29" pos:end="545:30">++</operator></expr></incr>)</control> <block pos:start="545:33" pos:end="551:13">{<block_content pos:start="547:17" pos:end="549:52">

                <expr_stmt pos:start="547:17" pos:end="547:53"><expr pos:start="547:17" pos:end="547:52"><name pos:start="547:17" pos:end="547:48"><name pos:start="547:17" pos:end="547:17">v</name><operator pos:start="547:18" pos:end="547:19">-&gt;</operator><name pos:start="547:20" pos:end="547:26">mb_type</name><index pos:start="547:27" pos:end="547:29">[<expr pos:start="547:28" pos:end="547:28"><literal type="number" pos:start="547:28" pos:end="547:28">0</literal></expr>]</index><index pos:start="547:30" pos:end="547:48">[<expr pos:start="547:31" pos:end="547:47"><name pos:start="547:31" pos:end="547:47"><name pos:start="547:31" pos:end="547:31">s</name><operator pos:start="547:32" pos:end="547:33">-&gt;</operator><name pos:start="547:34" pos:end="547:44">block_index</name><index pos:start="547:45" pos:end="547:47">[<expr pos:start="547:46" pos:end="547:46"><name pos:start="547:46" pos:end="547:46">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="547:50" pos:end="547:50">=</operator> <literal type="number" pos:start="547:52" pos:end="547:52">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="549:17" pos:end="549:52"><expr pos:start="549:17" pos:end="549:51"><name pos:start="549:17" pos:end="549:47"><name pos:start="549:17" pos:end="549:17">s</name><operator pos:start="549:18" pos:end="549:19">-&gt;</operator><name pos:start="549:20" pos:end="549:25">dc_val</name><index pos:start="549:26" pos:end="549:28">[<expr pos:start="549:27" pos:end="549:27"><literal type="number" pos:start="549:27" pos:end="549:27">0</literal></expr>]</index><index pos:start="549:29" pos:end="549:47">[<expr pos:start="549:30" pos:end="549:46"><name pos:start="549:30" pos:end="549:46"><name pos:start="549:30" pos:end="549:30">s</name><operator pos:start="549:31" pos:end="549:32">-&gt;</operator><name pos:start="549:33" pos:end="549:43">block_index</name><index pos:start="549:44" pos:end="549:46">[<expr pos:start="549:45" pos:end="549:45"><name pos:start="549:45" pos:end="549:45">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="549:49" pos:end="549:49">=</operator> <literal type="number" pos:start="549:51" pos:end="549:51">0</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="553:13" pos:end="561:13">for <control pos:start="553:17" pos:end="553:31">(<init pos:start="553:18" pos:end="553:21"><expr pos:start="553:18" pos:end="553:20"><name pos:start="553:18" pos:end="553:18">i</name><operator pos:start="553:19" pos:end="553:19">=</operator><literal type="number" pos:start="553:20" pos:end="553:20">0</literal></expr>;</init> <condition pos:start="553:23" pos:end="553:26"><expr pos:start="553:23" pos:end="553:25"><name pos:start="553:23" pos:end="553:23">i</name><operator pos:start="553:24" pos:end="553:24">&lt;</operator><literal type="number" pos:start="553:25" pos:end="553:25">4</literal></expr>;</condition> <incr pos:start="553:28" pos:end="553:30"><expr pos:start="553:28" pos:end="553:30"><name pos:start="553:28" pos:end="553:28">i</name><operator pos:start="553:29" pos:end="553:30">++</operator></expr></incr>)</control>

            <block pos:start="555:13" pos:end="561:13">{<block_content pos:start="557:17" pos:end="559:38">

                <expr_stmt pos:start="557:17" pos:end="557:82"><expr pos:start="557:17" pos:end="557:81"><call pos:start="557:17" pos:end="557:81"><name pos:start="557:17" pos:end="557:27">vc1_pred_mv</name><argument_list pos:start="557:28" pos:end="557:81">(<argument pos:start="557:29" pos:end="557:29"><expr pos:start="557:29" pos:end="557:29"><name pos:start="557:29" pos:end="557:29">s</name></expr></argument>, <argument pos:start="557:32" pos:end="557:32"><expr pos:start="557:32" pos:end="557:32"><name pos:start="557:32" pos:end="557:32">i</name></expr></argument>, <argument pos:start="557:35" pos:end="557:35"><expr pos:start="557:35" pos:end="557:35"><literal type="number" pos:start="557:35" pos:end="557:35">0</literal></expr></argument>, <argument pos:start="557:38" pos:end="557:38"><expr pos:start="557:38" pos:end="557:38"><literal type="number" pos:start="557:38" pos:end="557:38">0</literal></expr></argument>, <argument pos:start="557:41" pos:end="557:41"><expr pos:start="557:41" pos:end="557:41"><literal type="number" pos:start="557:41" pos:end="557:41">0</literal></expr></argument>, <argument pos:start="557:44" pos:end="557:53"><expr pos:start="557:44" pos:end="557:53"><name pos:start="557:44" pos:end="557:53"><name pos:start="557:44" pos:end="557:44">v</name><operator pos:start="557:45" pos:end="557:46">-&gt;</operator><name pos:start="557:47" pos:end="557:53">range_x</name></name></expr></argument>, <argument pos:start="557:56" pos:end="557:65"><expr pos:start="557:56" pos:end="557:65"><name pos:start="557:56" pos:end="557:65"><name pos:start="557:56" pos:end="557:56">v</name><operator pos:start="557:57" pos:end="557:58">-&gt;</operator><name pos:start="557:59" pos:end="557:65">range_y</name></name></expr></argument>, <argument pos:start="557:68" pos:end="557:80"><expr pos:start="557:68" pos:end="557:80"><name pos:start="557:68" pos:end="557:80"><name pos:start="557:68" pos:end="557:68">v</name><operator pos:start="557:69" pos:end="557:70">-&gt;</operator><name pos:start="557:71" pos:end="557:77">mb_type</name><index pos:start="557:78" pos:end="557:80">[<expr pos:start="557:79" pos:end="557:79"><literal type="number" pos:start="557:79" pos:end="557:79">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="559:17" pos:end="559:38"><expr pos:start="559:17" pos:end="559:37"><call pos:start="559:17" pos:end="559:37"><name pos:start="559:17" pos:end="559:31">vc1_mc_4mv_luma</name><argument_list pos:start="559:32" pos:end="559:37">(<argument pos:start="559:33" pos:end="559:33"><expr pos:start="559:33" pos:end="559:33"><name pos:start="559:33" pos:end="559:33">v</name></expr></argument>, <argument pos:start="559:36" pos:end="559:36"><expr pos:start="559:36" pos:end="559:36"><name pos:start="559:36" pos:end="559:36">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="563:13" pos:end="563:33"><expr pos:start="563:13" pos:end="563:32"><call pos:start="563:13" pos:end="563:32"><name pos:start="563:13" pos:end="563:29">vc1_mc_4mv_chroma</name><argument_list pos:start="563:30" pos:end="563:32">(<argument pos:start="563:31" pos:end="563:31"><expr pos:start="563:31" pos:end="563:31"><name pos:start="563:31" pos:end="563:31">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="565:13" pos:end="565:56"><expr pos:start="565:13" pos:end="565:55"><name pos:start="565:13" pos:end="565:51"><name pos:start="565:13" pos:end="565:13">s</name><operator pos:start="565:14" pos:end="565:15">-&gt;</operator><name pos:start="565:16" pos:end="565:30">current_picture</name><operator pos:start="565:31" pos:end="565:31">.</operator><name pos:start="565:32" pos:end="565:43">qscale_table</name><index pos:start="565:44" pos:end="565:51">[<expr pos:start="565:45" pos:end="565:50"><name pos:start="565:45" pos:end="565:50">mb_pos</name></expr>]</index></name> <operator pos:start="565:53" pos:end="565:53">=</operator> <literal type="number" pos:start="565:55" pos:end="565:55">0</literal></expr>;</expr_stmt>

            <return pos:start="567:13" pos:end="567:21">return <expr pos:start="567:20" pos:end="567:20"><literal type="number" pos:start="567:20" pos:end="567:20">0</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="573:5" pos:end="573:32"><expr pos:start="573:5" pos:end="573:31"><name pos:start="573:5" pos:end="573:19"><name pos:start="573:5" pos:end="573:5">v</name><operator pos:start="573:6" pos:end="573:7">-&gt;</operator><name pos:start="573:8" pos:end="573:10">cbp</name><index pos:start="573:11" pos:end="573:19">[<expr pos:start="573:12" pos:end="573:18"><name pos:start="573:12" pos:end="573:18"><name pos:start="573:12" pos:end="573:12">s</name><operator pos:start="573:13" pos:end="573:14">-&gt;</operator><name pos:start="573:15" pos:end="573:18">mb_x</name></name></expr>]</index></name> <operator pos:start="573:21" pos:end="573:21">=</operator> <name pos:start="573:23" pos:end="573:31">block_cbp</name></expr>;</expr_stmt>



    <comment type="block" pos:start="577:5" pos:end="577:29">/* Should never happen */</comment>

    <return pos:start="579:5" pos:end="579:14">return <expr pos:start="579:12" pos:end="579:13"><operator pos:start="579:12" pos:end="579:12">-</operator><literal type="number" pos:start="579:13" pos:end="579:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
