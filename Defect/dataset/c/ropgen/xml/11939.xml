<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11939.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:35">qemu_spice_display_init_common</name><parameter_list pos:start="1:36" pos:end="1:60">(<parameter pos:start="1:37" pos:end="1:59"><decl pos:start="1:37" pos:end="1:59"><type pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:54">SimpleSpiceDisplay</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">ssd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:38">

    <expr_stmt pos:start="5:5" pos:end="5:32"><expr pos:start="5:5" pos:end="5:31"><call pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:19">qemu_mutex_init</name><argument_list pos:start="5:20" pos:end="5:31">(<argument pos:start="5:21" pos:end="5:30"><expr pos:start="5:21" pos:end="5:30"><operator pos:start="5:21" pos:end="5:21">&amp;</operator><name pos:start="5:22" pos:end="5:30"><name pos:start="5:22" pos:end="5:24">ssd</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:30">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:31"><expr pos:start="7:5" pos:end="7:30"><call pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:15">QTAILQ_INIT</name><argument_list pos:start="7:16" pos:end="7:30">(<argument pos:start="7:17" pos:end="7:29"><expr pos:start="7:17" pos:end="7:29"><operator pos:start="7:17" pos:end="7:17">&amp;</operator><name pos:start="7:18" pos:end="7:29"><name pos:start="7:18" pos:end="7:20">ssd</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:29">updates</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:7">ssd</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:16">mouse_x</name></name> <operator pos:start="9:18" pos:end="9:18">=</operator> <operator pos:start="9:20" pos:end="9:20">-</operator><literal type="number" pos:start="9:21" pos:end="9:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:7">ssd</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:16">mouse_y</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <operator pos:start="11:20" pos:end="11:20">-</operator><literal type="number" pos:start="11:21" pos:end="11:21">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:31">(<expr pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:11">ssd</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:25">num_surfaces</name></name> <operator pos:start="13:27" pos:end="13:28">==</operator> <literal type="number" pos:start="13:30" pos:end="13:30">0</literal></expr>)</condition> <block pos:start="13:33" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:33">

        <expr_stmt pos:start="15:9" pos:end="15:33"><expr pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:11">ssd</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:25">num_surfaces</name></name> <operator pos:start="15:27" pos:end="15:27">=</operator> <literal type="number" pos:start="15:29" pos:end="15:32">1024</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:7">ssd</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:16">bufsize</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <operator pos:start="19:20" pos:end="19:20">(</operator><literal type="number" pos:start="19:21" pos:end="19:22">16</literal> <operator pos:start="19:24" pos:end="19:24">*</operator> <literal type="number" pos:start="19:26" pos:end="19:29">1024</literal> <operator pos:start="19:31" pos:end="19:31">*</operator> <literal type="number" pos:start="19:33" pos:end="19:36">1024</literal><operator pos:start="19:37" pos:end="19:37">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:7">ssd</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:12">buf</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:37"><name pos:start="21:16" pos:end="21:23">g_malloc</name><argument_list pos:start="21:24" pos:end="21:37">(<argument pos:start="21:25" pos:end="21:36"><expr pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:27">ssd</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:36">bufsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
