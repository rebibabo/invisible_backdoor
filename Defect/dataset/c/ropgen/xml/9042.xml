<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9042.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">dump_sprs</name> <parameter_list pos:start="1:23" pos:end="1:40">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:34">CPUPPCState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:19">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">ppc_spr_t</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">spr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">pvr</name> <init pos:start="7:18" pos:end="7:36">= <expr pos:start="7:20" pos:end="7:36"><name pos:start="7:20" pos:end="7:36"><name pos:start="7:20" pos:end="7:22">env</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:27">spr</name><index pos:start="7:28" pos:end="7:36">[<expr pos:start="7:29" pos:end="7:35"><name pos:start="7:29" pos:end="7:35">SPR_PVR</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:15">sr</name></decl>, <decl pos:start="9:18" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:18" pos:end="9:19">sw</name></decl>, <decl pos:start="9:22" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:22" pos:end="9:23">ur</name></decl>, <decl pos:start="9:26" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:26" pos:end="9:27">uw</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>, <decl pos:start="11:15" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:15">n</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><call pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:10">printf</name><argument_list pos:start="15:11" pos:end="15:40">(<argument pos:start="15:12" pos:end="15:34"><expr pos:start="15:12" pos:end="15:34"><literal type="string" pos:start="15:12" pos:end="15:34">"* SPRs for PVR=%08x\n"</literal></expr></argument>, <argument pos:start="15:37" pos:end="15:39"><expr pos:start="15:37" pos:end="15:39"><name pos:start="15:37" pos:end="15:39">pvr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="57:5">for <control pos:start="17:9" pos:end="17:28">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:23"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <literal type="number" pos:start="17:21" pos:end="17:22">32</literal></expr>;</condition> <incr pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:25">i</name><operator pos:start="17:26" pos:end="17:27">++</operator></expr></incr>)</control> <block pos:start="17:30" pos:end="57:5">{<block_content pos:start="19:9" pos:end="55:9">

        <for pos:start="19:9" pos:end="55:9">for <control pos:start="19:13" pos:end="19:32">(<init pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">j</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:27"><expr pos:start="19:21" pos:end="19:26"><name pos:start="19:21" pos:end="19:21">j</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <literal type="number" pos:start="19:25" pos:end="19:26">32</literal></expr>;</condition> <incr pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:29">j</name><operator pos:start="19:30" pos:end="19:31">++</operator></expr></incr>)</control> <block pos:start="19:34" pos:end="55:9">{<block_content pos:start="21:13" pos:end="53:13">

            <expr_stmt pos:start="21:13" pos:end="21:29"><expr pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:13">n</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <operator pos:start="21:17" pos:end="21:17">(</operator><name pos:start="21:18" pos:end="21:18">i</name> <operator pos:start="21:20" pos:end="21:21">&lt;&lt;</operator> <literal type="number" pos:start="21:23" pos:end="21:23">5</literal><operator pos:start="21:24" pos:end="21:24">)</operator> <operator pos:start="21:26" pos:end="21:26">|</operator> <name pos:start="21:28" pos:end="21:28">j</name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="26:0"><expr pos:start="23:13" pos:end="23:33"><name pos:start="23:13" pos:end="23:15">spr</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <operator pos:start="23:19" pos:end="23:19">&amp;</operator><name pos:start="23:20" pos:end="23:33"><name pos:start="23:20" pos:end="23:22">env</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:30">spr_cb</name><index pos:start="23:31" pos:end="23:33">[<expr pos:start="23:32" pos:end="23:32"><name pos:start="23:32" pos:end="23:32">n</name></expr>]</index></name></expr>;</expr_stmt>

<cpp:if pos:start="25:1" pos:end="25:30">#<cpp:directive pos:start="25:2" pos:end="25:3">if</cpp:directive> <expr pos:start="25:5" pos:end="25:30"><operator pos:start="25:5" pos:end="25:5">!</operator><call pos:start="25:6" pos:end="25:30"><name pos:start="25:6" pos:end="25:12">defined</name><argument_list pos:start="25:13" pos:end="25:30">(<argument pos:start="25:14" pos:end="25:29"><expr pos:start="25:14" pos:end="25:29"><name pos:start="25:14" pos:end="25:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="27:13" pos:end="27:74"><expr pos:start="27:13" pos:end="27:73"><name pos:start="27:13" pos:end="27:14">sw</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:31"><name pos:start="27:18" pos:end="27:20">spr</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:31">oea_write</name></name> <operator pos:start="27:33" pos:end="27:34">!=</operator> <name pos:start="27:36" pos:end="27:39">NULL</name> <operator pos:start="27:41" pos:end="27:42">&amp;&amp;</operator> <name pos:start="27:44" pos:end="27:57"><name pos:start="27:44" pos:end="27:46">spr</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:57">oea_write</name></name> <operator pos:start="27:59" pos:end="27:60">!=</operator> <name pos:start="27:62" pos:end="27:73">SPR_NOACCESS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="32:0"><expr pos:start="29:13" pos:end="29:71"><name pos:start="29:13" pos:end="29:14">sr</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:30"><name pos:start="29:18" pos:end="29:20">spr</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:30">oea_read</name></name> <operator pos:start="29:32" pos:end="29:33">!=</operator> <name pos:start="29:35" pos:end="29:38">NULL</name> <operator pos:start="29:40" pos:end="29:41">&amp;&amp;</operator> <name pos:start="29:43" pos:end="29:55"><name pos:start="29:43" pos:end="29:45">spr</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:55">oea_read</name></name> <operator pos:start="29:57" pos:end="29:58">!=</operator> <name pos:start="29:60" pos:end="29:71">SPR_NOACCESS</name></expr>;</expr_stmt>

<cpp:else pos:start="31:1" pos:end="31:5">#<cpp:directive pos:start="31:2" pos:end="31:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="33:13" pos:end="33:19"><expr pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:14">sw</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="38:0"><expr pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:14">sr</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="39:13" pos:end="39:74"><expr pos:start="39:13" pos:end="39:73"><name pos:start="39:13" pos:end="39:14">uw</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:31"><name pos:start="39:18" pos:end="39:20">spr</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:31">uea_write</name></name> <operator pos:start="39:33" pos:end="39:34">!=</operator> <name pos:start="39:36" pos:end="39:39">NULL</name> <operator pos:start="39:41" pos:end="39:42">&amp;&amp;</operator> <name pos:start="39:44" pos:end="39:57"><name pos:start="39:44" pos:end="39:46">spr</name><operator pos:start="39:47" pos:end="39:48">-&gt;</operator><name pos:start="39:49" pos:end="39:57">uea_write</name></name> <operator pos:start="39:59" pos:end="39:60">!=</operator> <name pos:start="39:62" pos:end="39:73">SPR_NOACCESS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:72"><expr pos:start="41:13" pos:end="41:71"><name pos:start="41:13" pos:end="41:14">ur</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:30"><name pos:start="41:18" pos:end="41:20">spr</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:30">uea_read</name></name> <operator pos:start="41:32" pos:end="41:33">!=</operator> <name pos:start="41:35" pos:end="41:38">NULL</name> <operator pos:start="41:40" pos:end="41:41">&amp;&amp;</operator> <name pos:start="41:43" pos:end="41:55"><name pos:start="41:43" pos:end="41:45">spr</name><operator pos:start="41:46" pos:end="41:47">-&gt;</operator><name pos:start="41:48" pos:end="41:55">uea_read</name></name> <operator pos:start="41:57" pos:end="41:58">!=</operator> <name pos:start="41:60" pos:end="41:71">SPR_NOACCESS</name></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="53:13"><if pos:start="43:13" pos:end="53:13">if <condition pos:start="43:16" pos:end="43:37">(<expr pos:start="43:17" pos:end="43:36"><name pos:start="43:17" pos:end="43:18">sw</name> <operator pos:start="43:20" pos:end="43:21">||</operator> <name pos:start="43:23" pos:end="43:24">sr</name> <operator pos:start="43:26" pos:end="43:27">||</operator> <name pos:start="43:29" pos:end="43:30">uw</name> <operator pos:start="43:32" pos:end="43:33">||</operator> <name pos:start="43:35" pos:end="43:36">ur</name></expr>)</condition> <block pos:start="43:39" pos:end="53:13">{<block_content pos:start="45:17" pos:end="51:55">

                <expr_stmt pos:start="45:17" pos:end="51:55"><expr pos:start="45:17" pos:end="51:54"><call pos:start="45:17" pos:end="51:54"><name pos:start="45:17" pos:end="45:22">printf</name><argument_list pos:start="45:23" pos:end="51:54">(<argument pos:start="45:24" pos:end="45:53"><expr pos:start="45:24" pos:end="45:53"><literal type="string" pos:start="45:24" pos:end="45:53">"%4d (%03x) %8s s%c%c u%c%c\n"</literal></expr></argument>,

                       <argument pos:start="47:24" pos:end="47:35"><expr pos:start="47:24" pos:end="47:35"><operator pos:start="47:24" pos:end="47:24">(</operator><name pos:start="47:25" pos:end="47:25">i</name> <operator pos:start="47:27" pos:end="47:28">&lt;&lt;</operator> <literal type="number" pos:start="47:30" pos:end="47:30">5</literal><operator pos:start="47:31" pos:end="47:31">)</operator> <operator pos:start="47:33" pos:end="47:33">|</operator> <name pos:start="47:35" pos:end="47:35">j</name></expr></argument>, <argument pos:start="47:38" pos:end="47:49"><expr pos:start="47:38" pos:end="47:49"><operator pos:start="47:38" pos:end="47:38">(</operator><name pos:start="47:39" pos:end="47:39">i</name> <operator pos:start="47:41" pos:end="47:42">&lt;&lt;</operator> <literal type="number" pos:start="47:44" pos:end="47:44">5</literal><operator pos:start="47:45" pos:end="47:45">)</operator> <operator pos:start="47:47" pos:end="47:47">|</operator> <name pos:start="47:49" pos:end="47:49">j</name></expr></argument>, <argument pos:start="47:52" pos:end="47:60"><expr pos:start="47:52" pos:end="47:60"><name pos:start="47:52" pos:end="47:60"><name pos:start="47:52" pos:end="47:54">spr</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:60">name</name></name></expr></argument>,

                       <argument pos:start="49:24" pos:end="49:37"><expr pos:start="49:24" pos:end="49:37"><ternary pos:start="49:24" pos:end="49:37"><condition pos:start="49:24" pos:end="49:27"><expr pos:start="49:24" pos:end="49:25"><name pos:start="49:24" pos:end="49:25">sw</name></expr> ?</condition><then pos:start="49:29" pos:end="49:31"> <expr pos:start="49:29" pos:end="49:31"><literal type="char" pos:start="49:29" pos:end="49:31">'w'</literal></expr> </then><else pos:start="49:33" pos:end="49:37">: <expr pos:start="49:35" pos:end="49:37"><literal type="char" pos:start="49:35" pos:end="49:37">'-'</literal></expr></else></ternary></expr></argument>, <argument pos:start="49:40" pos:end="49:53"><expr pos:start="49:40" pos:end="49:53"><ternary pos:start="49:40" pos:end="49:53"><condition pos:start="49:40" pos:end="49:43"><expr pos:start="49:40" pos:end="49:41"><name pos:start="49:40" pos:end="49:41">sr</name></expr> ?</condition><then pos:start="49:45" pos:end="49:47"> <expr pos:start="49:45" pos:end="49:47"><literal type="char" pos:start="49:45" pos:end="49:47">'r'</literal></expr> </then><else pos:start="49:49" pos:end="49:53">: <expr pos:start="49:51" pos:end="49:53"><literal type="char" pos:start="49:51" pos:end="49:53">'-'</literal></expr></else></ternary></expr></argument>,

                       <argument pos:start="51:24" pos:end="51:37"><expr pos:start="51:24" pos:end="51:37"><ternary pos:start="51:24" pos:end="51:37"><condition pos:start="51:24" pos:end="51:27"><expr pos:start="51:24" pos:end="51:25"><name pos:start="51:24" pos:end="51:25">uw</name></expr> ?</condition><then pos:start="51:29" pos:end="51:31"> <expr pos:start="51:29" pos:end="51:31"><literal type="char" pos:start="51:29" pos:end="51:31">'w'</literal></expr> </then><else pos:start="51:33" pos:end="51:37">: <expr pos:start="51:35" pos:end="51:37"><literal type="char" pos:start="51:35" pos:end="51:37">'-'</literal></expr></else></ternary></expr></argument>, <argument pos:start="51:40" pos:end="51:53"><expr pos:start="51:40" pos:end="51:53"><ternary pos:start="51:40" pos:end="51:53"><condition pos:start="51:40" pos:end="51:43"><expr pos:start="51:40" pos:end="51:41"><name pos:start="51:40" pos:end="51:41">ur</name></expr> ?</condition><then pos:start="51:45" pos:end="51:47"> <expr pos:start="51:45" pos:end="51:47"><literal type="char" pos:start="51:45" pos:end="51:47">'r'</literal></expr> </then><else pos:start="51:49" pos:end="51:53">: <expr pos:start="51:51" pos:end="51:53"><literal type="char" pos:start="51:51" pos:end="51:53">'-'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="59:5" pos:end="59:19"><expr pos:start="59:5" pos:end="59:18"><call pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:10">fflush</name><argument_list pos:start="59:11" pos:end="59:18">(<argument pos:start="59:12" pos:end="59:17"><expr pos:start="59:12" pos:end="59:17"><name pos:start="59:12" pos:end="59:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:19"><expr pos:start="61:5" pos:end="61:18"><call pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:10">fflush</name><argument_list pos:start="61:11" pos:end="61:18">(<argument pos:start="61:12" pos:end="61:17"><expr pos:start="61:12" pos:end="61:17"><name pos:start="61:12" pos:end="61:17">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
