<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18094.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">init_parse_context</name><parameter_list pos:start="1:31" pos:end="3:60">(<parameter pos:start="1:32" pos:end="1:55"><decl pos:start="1:32" pos:end="1:55"><type pos:start="1:32" pos:end="1:55"><name pos:start="1:32" pos:end="1:49">OptionParseContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">octx</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:59"><decl pos:start="3:32" pos:end="3:59"><type pos:start="3:32" pos:end="3:59"><specifier pos:start="3:32" pos:end="3:36">const</specifier> <name pos:start="3:38" pos:end="3:51">OptionGroupDef</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:59">groups</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:16">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:31"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:31">OptionGroupDef</name></type> <name pos:start="7:33" pos:end="7:44">global_group</name> <init pos:start="7:46" pos:end="7:59">= <expr pos:start="7:48" pos:end="7:59"><block pos:start="7:48" pos:end="7:59">{ <expr pos:start="7:50" pos:end="7:57"><literal type="string" pos:start="7:50" pos:end="7:57">"global"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:26"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:24">OptionGroupDef</name> <modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:27">g</name> <init pos:start="9:29" pos:end="9:36">= <expr pos:start="9:31" pos:end="9:36"><name pos:start="9:31" pos:end="9:36">groups</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><call pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:34">(<argument pos:start="15:12" pos:end="15:15"><expr pos:start="15:12" pos:end="15:15"><name pos:start="15:12" pos:end="15:15">octx</name></expr></argument>, <argument pos:start="15:18" pos:end="15:18"><expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr></argument>, <argument pos:start="15:21" pos:end="15:33"><expr pos:start="15:21" pos:end="15:33"><sizeof pos:start="15:21" pos:end="15:33">sizeof<argument_list pos:start="15:27" pos:end="15:33">(<argument pos:start="15:28" pos:end="15:32"><expr pos:start="15:28" pos:end="15:32"><operator pos:start="15:28" pos:end="15:28">*</operator><name pos:start="15:29" pos:end="15:32">octx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="19:5" pos:end="21:12">while <condition pos:start="19:11" pos:end="19:19">(<expr pos:start="19:12" pos:end="19:18"><name pos:start="19:12" pos:end="19:18"><name pos:start="19:12" pos:end="19:12">g</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:18">name</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:12"><block_content pos:start="21:9" pos:end="21:12">

        <expr_stmt pos:start="21:9" pos:end="21:12"><expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:9">g</name><operator pos:start="21:10" pos:end="21:11">++</operator></expr>;</expr_stmt></block_content></block></while>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:8">octx</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:19">nb_groups</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:23">g</name> <operator pos:start="23:25" pos:end="23:25">-</operator> <name pos:start="23:27" pos:end="23:32">groups</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:74"><expr pos:start="25:5" pos:end="25:73"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:8">octx</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:16">groups</name></name>    <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="25:73"><name pos:start="25:23" pos:end="25:32">av_mallocz</name><argument_list pos:start="25:33" pos:end="25:73">(<argument pos:start="25:34" pos:end="25:72"><expr pos:start="25:34" pos:end="25:72"><sizeof pos:start="25:34" pos:end="25:54">sizeof<argument_list pos:start="25:40" pos:end="25:54">(<argument pos:start="25:41" pos:end="25:53"><expr pos:start="25:41" pos:end="25:53"><operator pos:start="25:41" pos:end="25:41">*</operator><name pos:start="25:42" pos:end="25:53"><name pos:start="25:42" pos:end="25:45">octx</name><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:53">groups</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="25:56" pos:end="25:56">*</operator> <name pos:start="25:58" pos:end="25:72"><name pos:start="25:58" pos:end="25:61">octx</name><operator pos:start="25:62" pos:end="25:63">-&gt;</operator><name pos:start="25:64" pos:end="25:72">nb_groups</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:16"><if pos:start="27:5" pos:end="29:16">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:21"><name pos:start="27:10" pos:end="27:13">octx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:21">groups</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:16"><block_content pos:start="29:9" pos:end="29:16">

        <expr_stmt pos:start="29:9" pos:end="29:16"><expr pos:start="29:9" pos:end="29:15"><call pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:12">exit</name><argument_list pos:start="29:13" pos:end="29:15">(<argument pos:start="29:14" pos:end="29:14"><expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="33:5" pos:end="35:47">for <control pos:start="33:9" pos:end="33:41">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:36"><expr pos:start="33:17" pos:end="33:35"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:35"><name pos:start="33:21" pos:end="33:24">octx</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:35">nb_groups</name></name></expr>;</condition> <incr pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:38">i</name><operator pos:start="33:39" pos:end="33:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:9" pos:end="35:47"><block_content pos:start="35:9" pos:end="35:47">

        <expr_stmt pos:start="35:9" pos:end="35:47"><expr pos:start="35:9" pos:end="35:46"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:12">octx</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:20">groups</name><index pos:start="35:21" pos:end="35:23">[<expr pos:start="35:22" pos:end="35:22"><name pos:start="35:22" pos:end="35:22">i</name></expr>]</index></name><operator pos:start="35:24" pos:end="35:24">.</operator><name pos:start="35:25" pos:end="35:33">group_def</name> <operator pos:start="35:35" pos:end="35:35">=</operator> <operator pos:start="35:37" pos:end="35:37">&amp;</operator><name pos:start="35:38" pos:end="35:46"><name pos:start="35:38" pos:end="35:43">groups</name><index pos:start="35:44" pos:end="35:46">[<expr pos:start="35:45" pos:end="35:45"><name pos:start="35:45" pos:end="35:45">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="39:5" pos:end="39:48"><expr pos:start="39:5" pos:end="39:47"><name pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:8">octx</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:21">global_opts</name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:31">group_def</name></name> <operator pos:start="39:33" pos:end="39:33">=</operator> <operator pos:start="39:35" pos:end="39:35">&amp;</operator><name pos:start="39:36" pos:end="39:47">global_group</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:25"><name pos:start="41:5" pos:end="41:8">octx</name><operator pos:start="41:9" pos:end="41:10">-&gt;</operator><name pos:start="41:11" pos:end="41:21">global_opts</name><operator pos:start="41:22" pos:end="41:22">.</operator><name pos:start="41:23" pos:end="41:25">arg</name></name>       <operator pos:start="41:33" pos:end="41:33">=</operator> <literal type="string" pos:start="41:35" pos:end="41:36">""</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:16"><expr pos:start="45:5" pos:end="45:15"><call pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:13">init_opts</name><argument_list pos:start="45:14" pos:end="45:15">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
