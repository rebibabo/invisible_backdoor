<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16097.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">aac_decode_er_frame</name><parameter_list pos:start="1:31" pos:end="3:69">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:64"><decl pos:start="1:55" pos:end="1:64"><type pos:start="1:55" pos:end="1:64"><name pos:start="1:55" pos:end="1:58">void</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">data</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:34">int</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:49">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:68"><decl pos:start="3:52" pos:end="3:68"><type pos:start="3:52" pos:end="3:68"><name pos:start="3:52" pos:end="3:64">GetBitContext</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:68">gb</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="7:5" pos:end="129:13">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">AACContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">ac</name> <init pos:start="7:20" pos:end="7:37">= <expr pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:26">avctx</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:56"><type pos:start="9:5" pos:end="9:33"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:26">MPEG4AudioConfig</name> <modifier pos:start="9:28" pos:end="9:28">*</modifier><specifier pos:start="9:29" pos:end="9:33">const</specifier></type> <name pos:start="9:35" pos:end="9:38">m4ac</name> <init pos:start="9:40" pos:end="9:56">= <expr pos:start="9:42" pos:end="9:56"><operator pos:start="9:42" pos:end="9:42">&amp;</operator><name pos:start="9:43" pos:end="9:51"><name pos:start="9:43" pos:end="9:44">ac</name><operator pos:start="9:45" pos:end="9:46">-&gt;</operator><name pos:start="9:47" pos:end="9:48">oc</name><index pos:start="9:49" pos:end="9:51">[<expr pos:start="9:50" pos:end="9:50"><literal type="number" pos:start="9:50" pos:end="9:50">1</literal></expr>]</index></name><operator pos:start="9:52" pos:end="9:52">.</operator><name pos:start="9:53" pos:end="9:56">m4ac</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">ChannelElement</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">che</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">err</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:56"><decl pos:start="15:5" pos:end="15:55"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">samples</name> <init pos:start="15:17" pos:end="15:55">= <expr pos:start="15:19" pos:end="15:55"><ternary pos:start="15:19" pos:end="15:55"><condition pos:start="15:19" pos:end="15:44"><expr pos:start="15:19" pos:end="15:42"><name pos:start="15:19" pos:end="15:42"><name pos:start="15:19" pos:end="15:22">m4ac</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:42">frame_length_short</name></name></expr> ?</condition><then pos:start="15:46" pos:end="15:48"> <expr pos:start="15:46" pos:end="15:48"><literal type="number" pos:start="15:46" pos:end="15:48">960</literal></expr> </then><else pos:start="15:50" pos:end="15:55">: <expr pos:start="15:52" pos:end="15:55"><literal type="number" pos:start="15:52" pos:end="15:55">1024</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:40"><decl pos:start="17:5" pos:end="17:39"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">chan_config</name> <init pos:start="17:21" pos:end="17:39">= <expr pos:start="17:23" pos:end="17:39"><name pos:start="17:23" pos:end="17:39"><name pos:start="17:23" pos:end="17:26">m4ac</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:39">chan_config</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">aot</name> <init pos:start="19:13" pos:end="19:31">= <expr pos:start="19:15" pos:end="19:31"><name pos:start="19:15" pos:end="19:31"><name pos:start="19:15" pos:end="19:18">m4ac</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:31">object_type</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:22"><if pos:start="23:5" pos:end="25:22">if <condition pos:start="23:8" pos:end="23:54">(<expr pos:start="23:9" pos:end="23:53"><name pos:start="23:9" pos:end="23:11">aot</name> <operator pos:start="23:13" pos:end="23:14">==</operator> <name pos:start="23:16" pos:end="23:28">AOT_ER_AAC_LD</name> <operator pos:start="23:30" pos:end="23:31">||</operator> <name pos:start="23:33" pos:end="23:35">aot</name> <operator pos:start="23:37" pos:end="23:38">==</operator> <name pos:start="23:40" pos:end="23:53">AOT_ER_AAC_ELD</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:22"><block_content pos:start="25:9" pos:end="25:22">

        <expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:15">samples</name> <operator pos:start="25:17" pos:end="25:19">&gt;&gt;=</operator> <literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:6">ac</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:13">frame</name></name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:20">data</name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="35:19"><if pos:start="33:5" pos:end="35:19">if <condition pos:start="33:8" pos:end="33:52">(<expr pos:start="33:9" pos:end="33:51"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:12">err</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:46"><name pos:start="33:16" pos:end="33:39">frame_configure_elements</name><argument_list pos:start="33:40" pos:end="33:46">(<argument pos:start="33:41" pos:end="33:45"><expr pos:start="33:41" pos:end="33:45"><name pos:start="33:41" pos:end="33:45">avctx</name></expr></argument>)</argument_list></call><operator pos:start="33:47" pos:end="33:47">)</operator> <operator pos:start="33:49" pos:end="33:49">&lt;</operator> <literal type="number" pos:start="33:51" pos:end="33:51">0</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:19"><block_content pos:start="35:9" pos:end="35:19">

        <return pos:start="35:9" pos:end="35:19">return <expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">err</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="39:5" pos:end="39:59">// The FF_PROFILE_AAC_* defines are all object_type - 1</comment>

    <comment type="line" pos:start="41:5" pos:end="41:59">// This may lead to an undefined profile being signaled</comment>

    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:6">ac</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:13">avctx</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">profile</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:28">aot</name> <operator pos:start="43:30" pos:end="43:30">-</operator> <literal type="number" pos:start="43:32" pos:end="43:32">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:24"><expr pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:6">ac</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:19">tags_mapped</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:87">(<expr pos:start="51:9" pos:end="51:86"><name pos:start="51:9" pos:end="51:19">chan_config</name> <operator pos:start="51:21" pos:end="51:21">&lt;</operator> <literal type="number" pos:start="51:23" pos:end="51:23">0</literal> <operator pos:start="51:25" pos:end="51:26">||</operator> <operator pos:start="51:28" pos:end="51:28">(</operator><name pos:start="51:29" pos:end="51:39">chan_config</name> <operator pos:start="51:41" pos:end="51:42">&gt;=</operator> <literal type="number" pos:start="51:44" pos:end="51:44">8</literal> <operator pos:start="51:46" pos:end="51:47">&amp;&amp;</operator> <name pos:start="51:49" pos:end="51:59">chan_config</name> <operator pos:start="51:61" pos:end="51:61">&lt;</operator> <literal type="number" pos:start="51:63" pos:end="51:64">11</literal><operator pos:start="51:65" pos:end="51:65">)</operator> <operator pos:start="51:67" pos:end="51:68">||</operator> <name pos:start="51:70" pos:end="51:80">chan_config</name> <operator pos:start="51:82" pos:end="51:83">&gt;=</operator> <literal type="number" pos:start="51:85" pos:end="51:86">13</literal></expr>)</condition> <block pos:start="51:89" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:35">

        <expr_stmt pos:start="53:9" pos:end="55:43"><expr pos:start="53:9" pos:end="55:42"><call pos:start="53:9" pos:end="55:42"><name pos:start="53:9" pos:end="53:29">avpriv_request_sample</name><argument_list pos:start="53:30" pos:end="55:42">(<argument pos:start="53:31" pos:end="53:35"><expr pos:start="53:31" pos:end="53:35"><name pos:start="53:31" pos:end="53:35">avctx</name></expr></argument>, <argument pos:start="53:38" pos:end="53:74"><expr pos:start="53:38" pos:end="53:74"><literal type="string" pos:start="53:38" pos:end="53:74">"Unknown ER channel configuration %d"</literal></expr></argument>,

                              <argument pos:start="55:31" pos:end="55:41"><expr pos:start="55:31" pos:end="55:41"><name pos:start="55:31" pos:end="55:41">chan_config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:35">return <expr pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="61:5" pos:end="111:5">for <control pos:start="61:9" pos:end="61:54">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:49"><expr pos:start="61:17" pos:end="61:48"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:48"><name pos:start="61:21" pos:end="61:35">tags_per_config</name><index pos:start="61:36" pos:end="61:48">[<expr pos:start="61:37" pos:end="61:47"><name pos:start="61:37" pos:end="61:47">chan_config</name></expr>]</index></name></expr>;</condition> <incr pos:start="61:51" pos:end="61:53"><expr pos:start="61:51" pos:end="61:53"><name pos:start="61:51" pos:end="61:51">i</name><operator pos:start="61:52" pos:end="61:53">++</operator></expr></incr>)</control> <block pos:start="61:56" pos:end="111:5">{<block_content pos:start="63:9" pos:end="109:23">

        <decl_stmt pos:start="63:9" pos:end="63:74"><decl pos:start="63:9" pos:end="63:73"><type pos:start="63:9" pos:end="63:17"><specifier pos:start="63:9" pos:end="63:13">const</specifier> <name pos:start="63:15" pos:end="63:17">int</name></type> <name pos:start="63:19" pos:end="63:27">elem_type</name> <init pos:start="63:29" pos:end="63:73">= <expr pos:start="63:31" pos:end="63:73"><name pos:start="63:31" pos:end="63:73"><name pos:start="63:31" pos:end="63:52">aac_channel_layout_map</name><index pos:start="63:53" pos:end="63:67">[<expr pos:start="63:54" pos:end="63:66"><name pos:start="63:54" pos:end="63:64">chan_config</name><operator pos:start="63:65" pos:end="63:65">-</operator><literal type="number" pos:start="63:66" pos:end="63:66">1</literal></expr>]</index><index pos:start="63:68" pos:end="63:70">[<expr pos:start="63:69" pos:end="63:69"><name pos:start="63:69" pos:end="63:69">i</name></expr>]</index><index pos:start="63:71" pos:end="63:73">[<expr pos:start="63:72" pos:end="63:72"><literal type="number" pos:start="63:72" pos:end="63:72">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:74"><decl pos:start="65:9" pos:end="65:73"><type pos:start="65:9" pos:end="65:17"><specifier pos:start="65:9" pos:end="65:13">const</specifier> <name pos:start="65:15" pos:end="65:17">int</name></type> <name pos:start="65:19" pos:end="65:25">elem_id</name>   <init pos:start="65:29" pos:end="65:73">= <expr pos:start="65:31" pos:end="65:73"><name pos:start="65:31" pos:end="65:73"><name pos:start="65:31" pos:end="65:52">aac_channel_layout_map</name><index pos:start="65:53" pos:end="65:67">[<expr pos:start="65:54" pos:end="65:66"><name pos:start="65:54" pos:end="65:64">chan_config</name><operator pos:start="65:65" pos:end="65:65">-</operator><literal type="number" pos:start="65:66" pos:end="65:66">1</literal></expr>]</index><index pos:start="65:68" pos:end="65:70">[<expr pos:start="65:69" pos:end="65:69"><name pos:start="65:69" pos:end="65:69">i</name></expr>]</index><index pos:start="65:71" pos:end="65:73">[<expr pos:start="65:72" pos:end="65:72"><literal type="number" pos:start="65:72" pos:end="65:72">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="67:9" pos:end="77:9"><if pos:start="67:9" pos:end="77:9">if <condition pos:start="67:12" pos:end="67:51">(<expr pos:start="67:13" pos:end="67:50"><operator pos:start="67:13" pos:end="67:13">!</operator><operator pos:start="67:14" pos:end="67:14">(</operator><name pos:start="67:15" pos:end="67:17">che</name><operator pos:start="67:18" pos:end="67:18">=</operator><call pos:start="67:19" pos:end="67:49"><name pos:start="67:19" pos:end="67:25">get_che</name><argument_list pos:start="67:26" pos:end="67:49">(<argument pos:start="67:27" pos:end="67:28"><expr pos:start="67:27" pos:end="67:28"><name pos:start="67:27" pos:end="67:28">ac</name></expr></argument>, <argument pos:start="67:31" pos:end="67:39"><expr pos:start="67:31" pos:end="67:39"><name pos:start="67:31" pos:end="67:39">elem_type</name></expr></argument>, <argument pos:start="67:42" pos:end="67:48"><expr pos:start="67:42" pos:end="67:48"><name pos:start="67:42" pos:end="67:48">elem_id</name></expr></argument>)</argument_list></call><operator pos:start="67:50" pos:end="67:50">)</operator></expr>)</condition> <block pos:start="67:53" pos:end="77:9">{<block_content pos:start="69:13" pos:end="75:39">

            <expr_stmt pos:start="69:13" pos:end="73:39"><expr pos:start="69:13" pos:end="73:38"><call pos:start="69:13" pos:end="73:38"><name pos:start="69:13" pos:end="69:18">av_log</name><argument_list pos:start="69:19" pos:end="73:38">(<argument pos:start="69:20" pos:end="69:28"><expr pos:start="69:20" pos:end="69:28"><name pos:start="69:20" pos:end="69:28"><name pos:start="69:20" pos:end="69:21">ac</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:28">avctx</name></name></expr></argument>, <argument pos:start="69:31" pos:end="69:42"><expr pos:start="69:31" pos:end="69:42"><name pos:start="69:31" pos:end="69:42">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="71:20" pos:end="71:61"><expr pos:start="71:20" pos:end="71:61"><literal type="string" pos:start="71:20" pos:end="71:61">"channel element %d.%d is not allocated\n"</literal></expr></argument>,

                   <argument pos:start="73:20" pos:end="73:28"><expr pos:start="73:20" pos:end="73:28"><name pos:start="73:20" pos:end="73:28">elem_type</name></expr></argument>, <argument pos:start="73:31" pos:end="73:37"><expr pos:start="73:31" pos:end="73:37"><name pos:start="73:31" pos:end="73:37">elem_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="75:13" pos:end="75:39">return <expr pos:start="75:20" pos:end="75:38"><name pos:start="75:20" pos:end="75:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:25"><expr pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:11">che</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:20">present</name></name> <operator pos:start="79:22" pos:end="79:22">=</operator> <literal type="number" pos:start="79:24" pos:end="79:24">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="83:29"><if pos:start="81:9" pos:end="83:29">if <condition pos:start="81:12" pos:end="81:34">(<expr pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:15">aot</name> <operator pos:start="81:17" pos:end="81:18">!=</operator> <name pos:start="81:20" pos:end="81:33">AOT_ER_AAC_ELD</name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:29"><block_content pos:start="83:13" pos:end="83:29">

            <expr_stmt pos:start="83:13" pos:end="83:29"><expr pos:start="83:13" pos:end="83:28"><call pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:21">skip_bits</name><argument_list pos:start="83:22" pos:end="83:28">(<argument pos:start="83:23" pos:end="83:24"><expr pos:start="83:23" pos:end="83:24"><name pos:start="83:23" pos:end="83:24">gb</name></expr></argument>, <argument pos:start="83:27" pos:end="83:27"><expr pos:start="83:27" pos:end="83:27"><literal type="number" pos:start="83:27" pos:end="83:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <switch pos:start="85:9" pos:end="105:9">switch <condition pos:start="85:16" pos:end="85:26">(<expr pos:start="85:17" pos:end="85:25"><name pos:start="85:17" pos:end="85:25">elem_type</name></expr>)</condition> <block pos:start="85:28" pos:end="105:9">{<block_content pos:start="87:9" pos:end="103:18">

        <case pos:start="87:9" pos:end="87:22">case <expr pos:start="87:14" pos:end="87:21"><name pos:start="87:14" pos:end="87:21">TYPE_SCE</name></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:56"><expr pos:start="89:13" pos:end="89:55"><name pos:start="89:13" pos:end="89:15">err</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <call pos:start="89:19" pos:end="89:55"><name pos:start="89:19" pos:end="89:28">decode_ics</name><argument_list pos:start="89:29" pos:end="89:55">(<argument pos:start="89:30" pos:end="89:31"><expr pos:start="89:30" pos:end="89:31"><name pos:start="89:30" pos:end="89:31">ac</name></expr></argument>, <argument pos:start="89:34" pos:end="89:44"><expr pos:start="89:34" pos:end="89:44"><operator pos:start="89:34" pos:end="89:34">&amp;</operator><name pos:start="89:35" pos:end="89:44"><name pos:start="89:35" pos:end="89:37">che</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:41">ch</name><index pos:start="89:42" pos:end="89:44">[<expr pos:start="89:43" pos:end="89:43"><literal type="number" pos:start="89:43" pos:end="89:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="89:47" pos:end="89:48"><expr pos:start="89:47" pos:end="89:48"><name pos:start="89:47" pos:end="89:48">gb</name></expr></argument>, <argument pos:start="89:51" pos:end="89:51"><expr pos:start="89:51" pos:end="89:51"><literal type="number" pos:start="89:51" pos:end="89:51">0</literal></expr></argument>, <argument pos:start="89:54" pos:end="89:54"><expr pos:start="89:54" pos:end="89:54"><literal type="number" pos:start="89:54" pos:end="89:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="93:22">case <expr pos:start="93:14" pos:end="93:21"><name pos:start="93:14" pos:end="93:21">TYPE_CPE</name></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:42"><expr pos:start="95:13" pos:end="95:41"><name pos:start="95:13" pos:end="95:15">err</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:41"><name pos:start="95:19" pos:end="95:28">decode_cpe</name><argument_list pos:start="95:29" pos:end="95:41">(<argument pos:start="95:30" pos:end="95:31"><expr pos:start="95:30" pos:end="95:31"><name pos:start="95:30" pos:end="95:31">ac</name></expr></argument>, <argument pos:start="95:34" pos:end="95:35"><expr pos:start="95:34" pos:end="95:35"><name pos:start="95:34" pos:end="95:35">gb</name></expr></argument>, <argument pos:start="95:38" pos:end="95:40"><expr pos:start="95:38" pos:end="95:40"><name pos:start="95:38" pos:end="95:40">che</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <case pos:start="99:9" pos:end="99:22">case <expr pos:start="99:14" pos:end="99:21"><name pos:start="99:14" pos:end="99:21">TYPE_LFE</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:56"><expr pos:start="101:13" pos:end="101:55"><name pos:start="101:13" pos:end="101:15">err</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:55"><name pos:start="101:19" pos:end="101:28">decode_ics</name><argument_list pos:start="101:29" pos:end="101:55">(<argument pos:start="101:30" pos:end="101:31"><expr pos:start="101:30" pos:end="101:31"><name pos:start="101:30" pos:end="101:31">ac</name></expr></argument>, <argument pos:start="101:34" pos:end="101:44"><expr pos:start="101:34" pos:end="101:44"><operator pos:start="101:34" pos:end="101:34">&amp;</operator><name pos:start="101:35" pos:end="101:44"><name pos:start="101:35" pos:end="101:37">che</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:41">ch</name><index pos:start="101:42" pos:end="101:44">[<expr pos:start="101:43" pos:end="101:43"><literal type="number" pos:start="101:43" pos:end="101:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="101:47" pos:end="101:48"><expr pos:start="101:47" pos:end="101:48"><name pos:start="101:47" pos:end="101:48">gb</name></expr></argument>, <argument pos:start="101:51" pos:end="101:51"><expr pos:start="101:51" pos:end="101:51"><literal type="number" pos:start="101:51" pos:end="101:51">0</literal></expr></argument>, <argument pos:start="101:54" pos:end="101:54"><expr pos:start="101:54" pos:end="101:54"><literal type="number" pos:start="101:54" pos:end="101:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="107:9" pos:end="109:23"><if pos:start="107:9" pos:end="109:23">if <condition pos:start="107:12" pos:end="107:20">(<expr pos:start="107:13" pos:end="107:19"><name pos:start="107:13" pos:end="107:15">err</name> <operator pos:start="107:17" pos:end="107:17">&lt;</operator> <literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:23"><block_content pos:start="109:13" pos:end="109:23">

            <return pos:start="109:13" pos:end="109:23">return <expr pos:start="109:20" pos:end="109:22"><name pos:start="109:20" pos:end="109:22">err</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="115:5" pos:end="115:27"><expr pos:start="115:5" pos:end="115:26"><call pos:start="115:5" pos:end="115:26"><name pos:start="115:5" pos:end="115:22">spectral_to_sample</name><argument_list pos:start="115:23" pos:end="115:26">(<argument pos:start="115:24" pos:end="115:25"><expr pos:start="115:24" pos:end="115:25"><name pos:start="115:24" pos:end="115:25">ac</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:36"><expr pos:start="119:5" pos:end="119:35"><name pos:start="119:5" pos:end="119:25"><name pos:start="119:5" pos:end="119:6">ac</name><operator pos:start="119:7" pos:end="119:8">-&gt;</operator><name pos:start="119:9" pos:end="119:13">frame</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:25">nb_samples</name></name> <operator pos:start="119:27" pos:end="119:27">=</operator> <name pos:start="119:29" pos:end="119:35">samples</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:48"><expr pos:start="121:5" pos:end="121:47"><name pos:start="121:5" pos:end="121:26"><name pos:start="121:5" pos:end="121:6">ac</name><operator pos:start="121:7" pos:end="121:8">-&gt;</operator><name pos:start="121:9" pos:end="121:13">frame</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:26">sample_rate</name></name> <operator pos:start="121:28" pos:end="121:28">=</operator> <name pos:start="121:30" pos:end="121:47"><name pos:start="121:30" pos:end="121:34">avctx</name><operator pos:start="121:35" pos:end="121:36">-&gt;</operator><name pos:start="121:37" pos:end="121:47">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:23"><expr pos:start="123:5" pos:end="123:22"><operator pos:start="123:5" pos:end="123:5">*</operator><name pos:start="123:6" pos:end="123:18">got_frame_ptr</name> <operator pos:start="123:20" pos:end="123:20">=</operator> <literal type="number" pos:start="123:22" pos:end="123:22">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:42"><expr pos:start="127:5" pos:end="127:41"><call pos:start="127:5" pos:end="127:41"><name pos:start="127:5" pos:end="127:18">skip_bits_long</name><argument_list pos:start="127:19" pos:end="127:41">(<argument pos:start="127:20" pos:end="127:21"><expr pos:start="127:20" pos:end="127:21"><name pos:start="127:20" pos:end="127:21">gb</name></expr></argument>, <argument pos:start="127:24" pos:end="127:40"><expr pos:start="127:24" pos:end="127:40"><call pos:start="127:24" pos:end="127:40"><name pos:start="127:24" pos:end="127:36">get_bits_left</name><argument_list pos:start="127:37" pos:end="127:40">(<argument pos:start="127:38" pos:end="127:39"><expr pos:start="127:38" pos:end="127:39"><name pos:start="127:38" pos:end="127:39">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
