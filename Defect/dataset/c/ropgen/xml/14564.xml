<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14564.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">dec_sru</name><parameter_list pos:start="1:20" pos:end="1:37">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:32">DisasContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:5">

    <if_stmt pos:start="5:5" pos:end="13:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:32">(<expr pos:start="5:9" pos:end="5:31"><name pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:10">dc</name><operator pos:start="5:11" pos:end="5:12">-&gt;</operator><name pos:start="5:13" pos:end="5:18">format</name></name> <operator pos:start="5:20" pos:end="5:21">==</operator> <name pos:start="5:23" pos:end="5:31">OP_FMT_RI</name></expr>)</condition> <block pos:start="5:34" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:65">

        <expr_stmt pos:start="7:9" pos:end="7:65"><expr pos:start="7:9" pos:end="7:64"><call pos:start="7:9" pos:end="7:64"><name pos:start="7:9" pos:end="7:15">LOG_DIS</name><argument_list pos:start="7:16" pos:end="7:64">(<argument pos:start="7:17" pos:end="7:37"><expr pos:start="7:17" pos:end="7:37"><literal type="string" pos:start="7:17" pos:end="7:37">"srui r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="7:40" pos:end="7:45"><expr pos:start="7:40" pos:end="7:45"><name pos:start="7:40" pos:end="7:45"><name pos:start="7:40" pos:end="7:41">dc</name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:45">r1</name></name></expr></argument>, <argument pos:start="7:48" pos:end="7:53"><expr pos:start="7:48" pos:end="7:53"><name pos:start="7:48" pos:end="7:53"><name pos:start="7:48" pos:end="7:49">dc</name><operator pos:start="7:50" pos:end="7:51">-&gt;</operator><name pos:start="7:52" pos:end="7:53">r0</name></name></expr></argument>, <argument pos:start="7:56" pos:end="7:63"><expr pos:start="7:56" pos:end="7:63"><name pos:start="7:56" pos:end="7:63"><name pos:start="7:56" pos:end="7:57">dc</name><operator pos:start="7:58" pos:end="7:59">-&gt;</operator><name pos:start="7:60" pos:end="7:63">imm5</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="9:7" pos:end="13:5">else <block pos:start="9:12" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:63">

        <expr_stmt pos:start="11:9" pos:end="11:63"><expr pos:start="11:9" pos:end="11:62"><call pos:start="11:9" pos:end="11:62"><name pos:start="11:9" pos:end="11:15">LOG_DIS</name><argument_list pos:start="11:16" pos:end="11:62">(<argument pos:start="11:17" pos:end="11:37"><expr pos:start="11:17" pos:end="11:37"><literal type="string" pos:start="11:17" pos:end="11:37">"sru r%d, r%d, r%d\n"</literal></expr></argument>, <argument pos:start="11:40" pos:end="11:45"><expr pos:start="11:40" pos:end="11:45"><name pos:start="11:40" pos:end="11:45"><name pos:start="11:40" pos:end="11:41">dc</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:45">r2</name></name></expr></argument>, <argument pos:start="11:48" pos:end="11:53"><expr pos:start="11:48" pos:end="11:53"><name pos:start="11:48" pos:end="11:53"><name pos:start="11:48" pos:end="11:49">dc</name><operator pos:start="11:50" pos:end="11:51">-&gt;</operator><name pos:start="11:52" pos:end="11:53">r0</name></name></expr></argument>, <argument pos:start="11:56" pos:end="11:61"><expr pos:start="11:56" pos:end="11:61"><name pos:start="11:56" pos:end="11:61"><name pos:start="11:56" pos:end="11:57">dc</name><operator pos:start="11:58" pos:end="11:59">-&gt;</operator><name pos:start="11:60" pos:end="11:61">r1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="17:5" pos:end="67:5"><if pos:start="17:5" pos:end="33:5">if <condition pos:start="17:8" pos:end="17:32">(<expr pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:10">dc</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:18">format</name></name> <operator pos:start="17:20" pos:end="17:21">==</operator> <name pos:start="17:23" pos:end="17:31">OP_FMT_RI</name></expr>)</condition> <block pos:start="17:34" pos:end="33:5">{<block_content pos:start="19:9" pos:end="31:64">

        <if_stmt pos:start="19:9" pos:end="29:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:68">(<expr pos:start="19:13" pos:end="19:67"><operator pos:start="19:13" pos:end="19:13">!</operator><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:26"><name pos:start="19:15" pos:end="19:16">dc</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:26">features</name></name> <operator pos:start="19:28" pos:end="19:28">&amp;</operator> <name pos:start="19:30" pos:end="19:47">LM32_FEATURE_SHIFT</name><operator pos:start="19:48" pos:end="19:48">)</operator> <operator pos:start="19:50" pos:end="19:51">&amp;&amp;</operator> <operator pos:start="19:53" pos:end="19:53">(</operator><name pos:start="19:54" pos:end="19:61"><name pos:start="19:54" pos:end="19:55">dc</name><operator pos:start="19:56" pos:end="19:57">-&gt;</operator><name pos:start="19:58" pos:end="19:61">imm5</name></name> <operator pos:start="19:63" pos:end="19:64">!=</operator> <literal type="number" pos:start="19:66" pos:end="19:66">1</literal><operator pos:start="19:67" pos:end="19:67">)</operator></expr>)</condition> <block pos:start="19:70" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:19">

            <expr_stmt pos:start="21:13" pos:end="23:59"><expr pos:start="21:13" pos:end="23:58"><call pos:start="21:13" pos:end="23:58"><name pos:start="21:13" pos:end="21:25">qemu_log_mask</name><argument_list pos:start="21:26" pos:end="23:58">(<argument pos:start="21:27" pos:end="21:41"><expr pos:start="21:27" pos:end="21:41"><name pos:start="21:27" pos:end="21:41">LOG_GUEST_ERROR</name></expr></argument>,

                    <argument pos:start="23:21" pos:end="23:57"><expr pos:start="23:21" pos:end="23:57"><literal type="string" pos:start="23:21" pos:end="23:57">"hardware shifter is not available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:35"><expr pos:start="25:13" pos:end="25:34"><call pos:start="25:13" pos:end="25:34"><name pos:start="25:13" pos:end="25:30">t_gen_illegal_insn</name><argument_list pos:start="25:31" pos:end="25:34">(<argument pos:start="25:32" pos:end="25:33"><expr pos:start="25:32" pos:end="25:33"><name pos:start="25:32" pos:end="25:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:64"><expr pos:start="31:9" pos:end="31:63"><call pos:start="31:9" pos:end="31:63"><name pos:start="31:9" pos:end="31:23">tcg_gen_shri_tl</name><argument_list pos:start="31:24" pos:end="31:63">(<argument pos:start="31:25" pos:end="31:37"><expr pos:start="31:25" pos:end="31:37"><name pos:start="31:25" pos:end="31:37"><name pos:start="31:25" pos:end="31:29">cpu_R</name><index pos:start="31:30" pos:end="31:37">[<expr pos:start="31:31" pos:end="31:36"><name pos:start="31:31" pos:end="31:36"><name pos:start="31:31" pos:end="31:32">dc</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:36">r1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="31:40" pos:end="31:52"><expr pos:start="31:40" pos:end="31:52"><name pos:start="31:40" pos:end="31:52"><name pos:start="31:40" pos:end="31:44">cpu_R</name><index pos:start="31:45" pos:end="31:52">[<expr pos:start="31:46" pos:end="31:51"><name pos:start="31:46" pos:end="31:51"><name pos:start="31:46" pos:end="31:47">dc</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:51">r0</name></name></expr>]</index></name></expr></argument>, <argument pos:start="31:55" pos:end="31:62"><expr pos:start="31:55" pos:end="31:62"><name pos:start="31:55" pos:end="31:62"><name pos:start="31:55" pos:end="31:56">dc</name><operator pos:start="31:57" pos:end="31:58">-&gt;</operator><name pos:start="31:59" pos:end="31:62">imm5</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="67:5">else <block pos:start="33:12" pos:end="67:5">{<block_content pos:start="35:9" pos:end="65:26">

        <decl_stmt pos:start="35:9" pos:end="35:33"><decl pos:start="35:9" pos:end="35:32"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:14">l1</name> <init pos:start="35:16" pos:end="35:32">= <expr pos:start="35:18" pos:end="35:32"><call pos:start="35:18" pos:end="35:32"><name pos:start="35:18" pos:end="35:30">gen_new_label</name><argument_list pos:start="35:31" pos:end="35:32">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:33"><decl pos:start="37:9" pos:end="37:32"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:14">l2</name> <init pos:start="37:16" pos:end="37:32">= <expr pos:start="37:18" pos:end="37:32"><call pos:start="37:18" pos:end="37:32"><name pos:start="37:18" pos:end="37:30">gen_new_label</name><argument_list pos:start="37:31" pos:end="37:32">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:39"><decl pos:start="39:9" pos:end="39:38"><type pos:start="39:9" pos:end="39:12"><name pos:start="39:9" pos:end="39:12">TCGv</name></type> <name pos:start="39:14" pos:end="39:15">t0</name> <init pos:start="39:17" pos:end="39:38">= <expr pos:start="39:19" pos:end="39:38"><call pos:start="39:19" pos:end="39:38"><name pos:start="39:19" pos:end="39:36">tcg_temp_local_new</name><argument_list pos:start="39:37" pos:end="39:38">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:23">tcg_gen_andi_tl</name><argument_list pos:start="41:24" pos:end="41:48">(<argument pos:start="41:25" pos:end="41:26"><expr pos:start="41:25" pos:end="41:26"><name pos:start="41:25" pos:end="41:26">t0</name></expr></argument>, <argument pos:start="41:29" pos:end="41:41"><expr pos:start="41:29" pos:end="41:41"><name pos:start="41:29" pos:end="41:41"><name pos:start="41:29" pos:end="41:33">cpu_R</name><index pos:start="41:34" pos:end="41:41">[<expr pos:start="41:35" pos:end="41:40"><name pos:start="41:35" pos:end="41:40"><name pos:start="41:35" pos:end="41:36">dc</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:40">r1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="41:44" pos:end="41:47"><expr pos:start="41:44" pos:end="41:47"><literal type="number" pos:start="41:44" pos:end="41:47">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="53:9"><if pos:start="45:9" pos:end="53:9">if <condition pos:start="45:12" pos:end="45:49">(<expr pos:start="45:13" pos:end="45:48"><operator pos:start="45:13" pos:end="45:13">!</operator><operator pos:start="45:14" pos:end="45:14">(</operator><name pos:start="45:15" pos:end="45:26"><name pos:start="45:15" pos:end="45:16">dc</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:26">features</name></name> <operator pos:start="45:28" pos:end="45:28">&amp;</operator> <name pos:start="45:30" pos:end="45:47">LM32_FEATURE_SHIFT</name><operator pos:start="45:48" pos:end="45:48">)</operator></expr>)</condition> <block pos:start="45:51" pos:end="53:9">{<block_content pos:start="47:13" pos:end="51:27">

            <expr_stmt pos:start="47:13" pos:end="47:55"><expr pos:start="47:13" pos:end="47:54"><call pos:start="47:13" pos:end="47:54"><name pos:start="47:13" pos:end="47:30">tcg_gen_brcondi_tl</name><argument_list pos:start="47:31" pos:end="47:54">(<argument pos:start="47:32" pos:end="47:42"><expr pos:start="47:32" pos:end="47:42"><name pos:start="47:32" pos:end="47:42">TCG_COND_EQ</name></expr></argument>, <argument pos:start="47:45" pos:end="47:46"><expr pos:start="47:45" pos:end="47:46"><name pos:start="47:45" pos:end="47:46">t0</name></expr></argument>, <argument pos:start="47:49" pos:end="47:49"><expr pos:start="47:49" pos:end="47:49"><literal type="number" pos:start="47:49" pos:end="47:49">1</literal></expr></argument>, <argument pos:start="47:52" pos:end="47:53"><expr pos:start="47:52" pos:end="47:53"><name pos:start="47:52" pos:end="47:53">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:35"><expr pos:start="49:13" pos:end="49:34"><call pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:30">t_gen_illegal_insn</name><argument_list pos:start="49:31" pos:end="49:34">(<argument pos:start="49:32" pos:end="49:33"><expr pos:start="49:32" pos:end="49:33"><name pos:start="49:32" pos:end="49:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:27"><expr pos:start="51:13" pos:end="51:26"><call pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:22">tcg_gen_br</name><argument_list pos:start="51:23" pos:end="51:26">(<argument pos:start="51:24" pos:end="51:25"><expr pos:start="51:24" pos:end="51:25"><name pos:start="51:24" pos:end="51:25">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:26"><expr pos:start="57:9" pos:end="57:25"><call pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:21">gen_set_label</name><argument_list pos:start="57:22" pos:end="57:25">(<argument pos:start="57:23" pos:end="57:24"><expr pos:start="57:23" pos:end="57:24"><name pos:start="57:23" pos:end="57:24">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:57"><expr pos:start="59:9" pos:end="59:56"><call pos:start="59:9" pos:end="59:56"><name pos:start="59:9" pos:end="59:22">tcg_gen_shr_tl</name><argument_list pos:start="59:23" pos:end="59:56">(<argument pos:start="59:24" pos:end="59:36"><expr pos:start="59:24" pos:end="59:36"><name pos:start="59:24" pos:end="59:36"><name pos:start="59:24" pos:end="59:28">cpu_R</name><index pos:start="59:29" pos:end="59:36">[<expr pos:start="59:30" pos:end="59:35"><name pos:start="59:30" pos:end="59:35"><name pos:start="59:30" pos:end="59:31">dc</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:35">r2</name></name></expr>]</index></name></expr></argument>, <argument pos:start="59:39" pos:end="59:51"><expr pos:start="59:39" pos:end="59:51"><name pos:start="59:39" pos:end="59:51"><name pos:start="59:39" pos:end="59:43">cpu_R</name><index pos:start="59:44" pos:end="59:51">[<expr pos:start="59:45" pos:end="59:50"><name pos:start="59:45" pos:end="59:50"><name pos:start="59:45" pos:end="59:46">dc</name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator><name pos:start="59:49" pos:end="59:50">r0</name></name></expr>]</index></name></expr></argument>, <argument pos:start="59:54" pos:end="59:55"><expr pos:start="59:54" pos:end="59:55"><name pos:start="59:54" pos:end="59:55">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><call pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:21">gen_set_label</name><argument_list pos:start="61:22" pos:end="61:25">(<argument pos:start="61:23" pos:end="61:24"><expr pos:start="61:23" pos:end="61:24"><name pos:start="61:23" pos:end="61:24">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><call pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:21">tcg_temp_free</name><argument_list pos:start="65:22" pos:end="65:25">(<argument pos:start="65:23" pos:end="65:24"><expr pos:start="65:23" pos:end="65:24"><name pos:start="65:23" pos:end="65:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
