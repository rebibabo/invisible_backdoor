<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19600.c" pos:tabs="8"><function pos:start="1:1" pos:end="411:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">hls_transform_unit</name><parameter_list pos:start="1:30" pos:end="9:69">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:41">HEVCContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:52"><decl pos:start="1:47" pos:end="1:52"><type pos:start="1:47" pos:end="1:52"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:52">x0</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:60"><decl pos:start="1:55" pos:end="1:60"><type pos:start="1:55" pos:end="1:60"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:60">y0</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:39"><decl pos:start="3:31" pos:end="3:39"><type pos:start="3:31" pos:end="3:39"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:39">xBase</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:50"><decl pos:start="3:42" pos:end="3:50"><type pos:start="3:42" pos:end="3:50"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:50">yBase</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">cb_xBase</name></decl></parameter>, <parameter pos:start="3:67" pos:end="3:78"><decl pos:start="3:67" pos:end="3:78"><type pos:start="3:67" pos:end="3:78"><name pos:start="3:67" pos:end="3:69">int</name></type> <name pos:start="3:71" pos:end="3:78">cb_yBase</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:46"><decl pos:start="5:31" pos:end="5:46"><type pos:start="5:31" pos:end="5:46"><name pos:start="5:31" pos:end="5:33">int</name></type> <name pos:start="5:35" pos:end="5:46">log2_cb_size</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:67"><decl pos:start="5:49" pos:end="5:67"><type pos:start="5:49" pos:end="5:67"><name pos:start="5:49" pos:end="5:51">int</name></type> <name pos:start="5:53" pos:end="5:67">log2_trafo_size</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:45"><decl pos:start="7:31" pos:end="7:45"><type pos:start="7:31" pos:end="7:45"><name pos:start="7:31" pos:end="7:33">int</name></type> <name pos:start="7:35" pos:end="7:45">trafo_depth</name></decl></parameter>, <parameter pos:start="7:48" pos:end="7:58"><decl pos:start="7:48" pos:end="7:58"><type pos:start="7:48" pos:end="7:58"><name pos:start="7:48" pos:end="7:50">int</name></type> <name pos:start="7:52" pos:end="7:58">blk_idx</name></decl></parameter>,

                              <parameter pos:start="9:31" pos:end="9:42"><decl pos:start="9:31" pos:end="9:42"><type pos:start="9:31" pos:end="9:42"><name pos:start="9:31" pos:end="9:33">int</name></type> <name pos:start="9:35" pos:end="9:42">cbf_luma</name></decl></parameter>, <parameter pos:start="9:45" pos:end="9:55"><decl pos:start="9:45" pos:end="9:55"><type pos:start="9:45" pos:end="9:55"><name pos:start="9:45" pos:end="9:47">int</name> <modifier pos:start="9:49" pos:end="9:49">*</modifier></type><name pos:start="9:50" pos:end="9:55">cbf_cb</name></decl></parameter>, <parameter pos:start="9:58" pos:end="9:68"><decl pos:start="9:58" pos:end="9:68"><type pos:start="9:58" pos:end="9:68"><name pos:start="9:58" pos:end="9:60">int</name> <modifier pos:start="9:62" pos:end="9:62">*</modifier></type><name pos:start="9:63" pos:end="9:68">cbf_cr</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="411:1">{<block_content pos:start="13:5" pos:end="409:13">

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">HEVCLocalContext</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:24">lc</name> <init pos:start="13:26" pos:end="13:36">= <expr pos:start="13:28" pos:end="13:36"><name pos:start="13:28" pos:end="13:36"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:70"><decl pos:start="15:5" pos:end="15:69"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:31">log2_trafo_size_c</name> <init pos:start="15:33" pos:end="15:69">= <expr pos:start="15:35" pos:end="15:69"><name pos:start="15:35" pos:end="15:49">log2_trafo_size</name> <operator pos:start="15:51" pos:end="15:51">-</operator> <name pos:start="15:53" pos:end="15:69"><name pos:start="15:53" pos:end="15:53">s</name><operator pos:start="15:54" pos:end="15:55">-&gt;</operator><name pos:start="15:56" pos:end="15:58">sps</name><operator pos:start="15:59" pos:end="15:60">-&gt;</operator><name pos:start="15:61" pos:end="15:66">hshift</name><index pos:start="15:67" pos:end="15:69">[<expr pos:start="15:68" pos:end="15:68"><literal type="number" pos:start="15:68" pos:end="15:68">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:39">(<expr pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:10">lc</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:14">cu</name><operator pos:start="21:15" pos:end="21:15">.</operator><name pos:start="21:16" pos:end="21:24">pred_mode</name></name> <operator pos:start="21:26" pos:end="21:27">==</operator> <name pos:start="21:29" pos:end="21:38">MODE_INTRA</name></expr>)</condition> <block pos:start="21:41" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:61">

        <decl_stmt pos:start="23:9" pos:end="23:46"><decl pos:start="23:9" pos:end="23:45"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:22">trafo_size</name> <init pos:start="23:24" pos:end="23:45">= <expr pos:start="23:26" pos:end="23:45"><literal type="number" pos:start="23:26" pos:end="23:26">1</literal> <operator pos:start="23:28" pos:end="23:29">&lt;&lt;</operator> <name pos:start="23:31" pos:end="23:45">log2_trafo_size</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:75"><expr pos:start="25:9" pos:end="25:74"><call pos:start="25:9" pos:end="25:74"><name pos:start="25:9" pos:end="25:39">ff_hevc_set_neighbour_available</name><argument_list pos:start="25:40" pos:end="25:74">(<argument pos:start="25:41" pos:end="25:41"><expr pos:start="25:41" pos:end="25:41"><name pos:start="25:41" pos:end="25:41">s</name></expr></argument>, <argument pos:start="25:44" pos:end="25:45"><expr pos:start="25:44" pos:end="25:45"><name pos:start="25:44" pos:end="25:45">x0</name></expr></argument>, <argument pos:start="25:48" pos:end="25:49"><expr pos:start="25:48" pos:end="25:49"><name pos:start="25:48" pos:end="25:49">y0</name></expr></argument>, <argument pos:start="25:52" pos:end="25:61"><expr pos:start="25:52" pos:end="25:61"><name pos:start="25:52" pos:end="25:61">trafo_size</name></expr></argument>, <argument pos:start="25:64" pos:end="25:73"><expr pos:start="25:64" pos:end="25:73"><name pos:start="25:64" pos:end="25:73">trafo_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:61"><expr pos:start="29:9" pos:end="29:60"><name pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:14">hpc</name><operator pos:start="29:15" pos:end="29:15">.</operator><name pos:start="29:16" pos:end="29:25">intra_pred</name><index pos:start="29:26" pos:end="29:46">[<expr pos:start="29:27" pos:end="29:45"><name pos:start="29:27" pos:end="29:41">log2_trafo_size</name> <operator pos:start="29:43" pos:end="29:43">-</operator> <literal type="number" pos:start="29:45" pos:end="29:45">2</literal></expr>]</index></name><operator pos:start="29:47" pos:end="29:47">(</operator><name pos:start="29:48" pos:end="29:48">s</name><operator pos:start="29:49" pos:end="29:49">,</operator> <name pos:start="29:51" pos:end="29:52">x0</name><operator pos:start="29:53" pos:end="29:53">,</operator> <name pos:start="29:55" pos:end="29:56">y0</name><operator pos:start="29:57" pos:end="29:57">,</operator> <literal type="number" pos:start="29:59" pos:end="29:59">0</literal><operator pos:start="29:60" pos:end="29:60">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="405:5"><if pos:start="35:5" pos:end="351:5">if <condition pos:start="35:8" pos:end="37:69">(<expr pos:start="35:9" pos:end="37:68"><name pos:start="35:9" pos:end="35:16">cbf_luma</name> <operator pos:start="35:18" pos:end="35:19">||</operator> <name pos:start="35:21" pos:end="35:29"><name pos:start="35:21" pos:end="35:26">cbf_cb</name><index pos:start="35:27" pos:end="35:29">[<expr pos:start="35:28" pos:end="35:28"><literal type="number" pos:start="35:28" pos:end="35:28">0</literal></expr>]</index></name> <operator pos:start="35:31" pos:end="35:32">||</operator> <name pos:start="35:34" pos:end="35:42"><name pos:start="35:34" pos:end="35:39">cbf_cr</name><index pos:start="35:40" pos:end="35:42">[<expr pos:start="35:41" pos:end="35:41"><literal type="number" pos:start="35:41" pos:end="35:41">0</literal></expr>]</index></name> <operator pos:start="35:44" pos:end="35:45">||</operator>

        <operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:34"><name pos:start="37:10" pos:end="37:10">s</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:15">sps</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:34">chroma_format_idc</name></name> <operator pos:start="37:36" pos:end="37:37">==</operator> <literal type="number" pos:start="37:39" pos:end="37:39">2</literal> <operator pos:start="37:41" pos:end="37:42">&amp;&amp;</operator> <operator pos:start="37:44" pos:end="37:44">(</operator><name pos:start="37:45" pos:end="37:53"><name pos:start="37:45" pos:end="37:50">cbf_cb</name><index pos:start="37:51" pos:end="37:53">[<expr pos:start="37:52" pos:end="37:52"><literal type="number" pos:start="37:52" pos:end="37:52">1</literal></expr>]</index></name> <operator pos:start="37:55" pos:end="37:56">||</operator> <name pos:start="37:58" pos:end="37:66"><name pos:start="37:58" pos:end="37:63">cbf_cr</name><index pos:start="37:64" pos:end="37:66">[<expr pos:start="37:65" pos:end="37:65"><literal type="number" pos:start="37:65" pos:end="37:65">1</literal></expr>]</index></name><operator pos:start="37:67" pos:end="37:67">)</operator><operator pos:start="37:68" pos:end="37:68">)</operator></expr>)</condition> <block pos:start="37:71" pos:end="351:5">{<block_content pos:start="39:9" pos:end="349:9">

        <decl_stmt pos:start="39:9" pos:end="39:35"><decl pos:start="39:9" pos:end="39:34"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:20">scan_idx</name>   <init pos:start="39:24" pos:end="39:34">= <expr pos:start="39:26" pos:end="39:34"><name pos:start="39:26" pos:end="39:34">SCAN_DIAG</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:35"><decl pos:start="41:9" pos:end="41:34"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:22">scan_idx_c</name> <init pos:start="41:24" pos:end="41:34">= <expr pos:start="41:26" pos:end="41:34"><name pos:start="41:26" pos:end="41:34">SCAN_DIAG</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="47:51"><decl pos:start="43:9" pos:end="47:50"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:22">cbf_chroma</name> <init pos:start="43:24" pos:end="47:50">= <expr pos:start="43:26" pos:end="47:50"><name pos:start="43:26" pos:end="43:34"><name pos:start="43:26" pos:end="43:31">cbf_cb</name><index pos:start="43:32" pos:end="43:34">[<expr pos:start="43:33" pos:end="43:33"><literal type="number" pos:start="43:33" pos:end="43:33">0</literal></expr>]</index></name> <operator pos:start="43:36" pos:end="43:37">||</operator> <name pos:start="43:39" pos:end="43:47"><name pos:start="43:39" pos:end="43:44">cbf_cr</name><index pos:start="43:45" pos:end="43:47">[<expr pos:start="43:46" pos:end="43:46"><literal type="number" pos:start="43:46" pos:end="43:46">0</literal></expr>]</index></name> <operator pos:start="43:49" pos:end="43:50">||</operator>

                         <operator pos:start="45:26" pos:end="45:26">(</operator><name pos:start="45:27" pos:end="45:51"><name pos:start="45:27" pos:end="45:27">s</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:32">sps</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:51">chroma_format_idc</name></name> <operator pos:start="45:53" pos:end="45:54">==</operator> <literal type="number" pos:start="45:56" pos:end="45:56">2</literal> <operator pos:start="45:58" pos:end="45:59">&amp;&amp;</operator>

                         <operator pos:start="47:26" pos:end="47:26">(</operator><name pos:start="47:27" pos:end="47:35"><name pos:start="47:27" pos:end="47:32">cbf_cb</name><index pos:start="47:33" pos:end="47:35">[<expr pos:start="47:34" pos:end="47:34"><literal type="number" pos:start="47:34" pos:end="47:34">1</literal></expr>]</index></name> <operator pos:start="47:37" pos:end="47:38">||</operator> <name pos:start="47:40" pos:end="47:48"><name pos:start="47:40" pos:end="47:45">cbf_cr</name><index pos:start="47:46" pos:end="47:48">[<expr pos:start="47:47" pos:end="47:47"><literal type="number" pos:start="47:47" pos:end="47:47">1</literal></expr>]</index></name><operator pos:start="47:49" pos:end="47:49">)</operator><operator pos:start="47:50" pos:end="47:50">)</operator></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="51:9" pos:end="89:9"><if pos:start="51:9" pos:end="89:9">if <condition pos:start="51:12" pos:end="51:77">(<expr pos:start="51:13" pos:end="51:76"><name pos:start="51:13" pos:end="51:44"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:18">pps</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:44">cu_qp_delta_enabled_flag</name></name> <operator pos:start="51:46" pos:end="51:47">&amp;&amp;</operator> <operator pos:start="51:49" pos:end="51:49">!</operator><name pos:start="51:50" pos:end="51:76"><name pos:start="51:50" pos:end="51:51">lc</name><operator pos:start="51:52" pos:end="51:53">-&gt;</operator><name pos:start="51:54" pos:end="51:55">tu</name><operator pos:start="51:56" pos:end="51:56">.</operator><name pos:start="51:57" pos:end="51:76">is_cu_qp_delta_coded</name></name></expr>)</condition> <block pos:start="51:79" pos:end="89:9">{<block_content pos:start="53:13" pos:end="87:65">

            <expr_stmt pos:start="53:13" pos:end="53:60"><expr pos:start="53:13" pos:end="53:59"><name pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:14">lc</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:18">tu</name><operator pos:start="53:19" pos:end="53:19">.</operator><name pos:start="53:20" pos:end="53:30">cu_qp_delta</name></name> <operator pos:start="53:32" pos:end="53:32">=</operator> <call pos:start="53:34" pos:end="53:59"><name pos:start="53:34" pos:end="53:56">ff_hevc_cu_qp_delta_abs</name><argument_list pos:start="53:57" pos:end="53:59">(<argument pos:start="53:58" pos:end="53:58"><expr pos:start="53:58" pos:end="53:58"><name pos:start="53:58" pos:end="53:58">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="59:61"><if pos:start="55:13" pos:end="59:61">if <condition pos:start="55:16" pos:end="55:40">(<expr pos:start="55:17" pos:end="55:39"><name pos:start="55:17" pos:end="55:34"><name pos:start="55:17" pos:end="55:18">lc</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:22">tu</name><operator pos:start="55:23" pos:end="55:23">.</operator><name pos:start="55:24" pos:end="55:34">cu_qp_delta</name></name> <operator pos:start="55:36" pos:end="55:37">!=</operator> <literal type="number" pos:start="55:39" pos:end="55:39">0</literal></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="59:61"><block_content pos:start="57:17" pos:end="59:61">

                <if_stmt pos:start="57:17" pos:end="59:61"><if pos:start="57:17" pos:end="59:61">if <condition pos:start="57:20" pos:end="57:58">(<expr pos:start="57:21" pos:end="57:57"><call pos:start="57:21" pos:end="57:52"><name pos:start="57:21" pos:end="57:49">ff_hevc_cu_qp_delta_sign_flag</name><argument_list pos:start="57:50" pos:end="57:52">(<argument pos:start="57:51" pos:end="57:51"><expr pos:start="57:51" pos:end="57:51"><name pos:start="57:51" pos:end="57:51">s</name></expr></argument>)</argument_list></call> <operator pos:start="57:54" pos:end="57:55">==</operator> <literal type="number" pos:start="57:57" pos:end="57:57">1</literal></expr>)</condition><block type="pseudo" pos:start="59:21" pos:end="59:61"><block_content pos:start="59:21" pos:end="59:61">

                    <expr_stmt pos:start="59:21" pos:end="59:61"><expr pos:start="59:21" pos:end="59:60"><name pos:start="59:21" pos:end="59:38"><name pos:start="59:21" pos:end="59:22">lc</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:26">tu</name><operator pos:start="59:27" pos:end="59:27">.</operator><name pos:start="59:28" pos:end="59:38">cu_qp_delta</name></name> <operator pos:start="59:40" pos:end="59:40">=</operator> <operator pos:start="59:42" pos:end="59:42">-</operator><name pos:start="59:43" pos:end="59:60"><name pos:start="59:43" pos:end="59:44">lc</name><operator pos:start="59:45" pos:end="59:46">-&gt;</operator><name pos:start="59:47" pos:end="59:48">tu</name><operator pos:start="59:49" pos:end="59:49">.</operator><name pos:start="59:50" pos:end="59:60">cu_qp_delta</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:44"><expr pos:start="61:13" pos:end="61:43"><name pos:start="61:13" pos:end="61:39"><name pos:start="61:13" pos:end="61:14">lc</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:18">tu</name><operator pos:start="61:19" pos:end="61:19">.</operator><name pos:start="61:20" pos:end="61:39">is_cu_qp_delta_coded</name></name> <operator pos:start="61:41" pos:end="61:41">=</operator> <literal type="number" pos:start="61:43" pos:end="61:43">1</literal></expr>;</expr_stmt>



            <if_stmt pos:start="65:13" pos:end="83:13"><if pos:start="65:13" pos:end="83:13">if <condition pos:start="65:16" pos:end="67:70">(<expr pos:start="65:17" pos:end="67:69"><name pos:start="65:17" pos:end="65:34"><name pos:start="65:17" pos:end="65:18">lc</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:22">tu</name><operator pos:start="65:23" pos:end="65:23">.</operator><name pos:start="65:24" pos:end="65:34">cu_qp_delta</name></name> <operator pos:start="65:36" pos:end="65:36">&lt;</operator> <operator pos:start="65:38" pos:end="65:38">-</operator><operator pos:start="65:39" pos:end="65:39">(</operator><literal type="number" pos:start="65:40" pos:end="65:43">26</literal> <operator pos:start="65:43" pos:end="65:43">+</operator> <name pos:start="65:45" pos:end="65:64"><name pos:start="65:45" pos:end="65:45">s</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:50">sps</name><operator pos:start="65:51" pos:end="65:52">-&gt;</operator><name pos:start="65:53" pos:end="65:64">qp_bd_offset</name></name> <operator pos:start="65:66" pos:end="65:66">/</operator> <literal type="number" pos:start="65:68" pos:end="65:68">2</literal><operator pos:start="65:69" pos:end="65:69">)</operator> <operator pos:start="65:71" pos:end="65:72">||</operator>

                <name pos:start="67:17" pos:end="67:34"><name pos:start="67:17" pos:end="67:18">lc</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:22">tu</name><operator pos:start="67:23" pos:end="67:23">.</operator><name pos:start="67:24" pos:end="67:34">cu_qp_delta</name></name> <operator pos:start="67:36" pos:end="67:36">&gt;</operator>  <operator pos:start="67:39" pos:end="67:39">(</operator><literal type="number" pos:start="67:40" pos:end="67:43">25</literal> <operator pos:start="67:43" pos:end="67:43">+</operator> <name pos:start="67:45" pos:end="67:64"><name pos:start="67:45" pos:end="67:45">s</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:50">sps</name><operator pos:start="67:51" pos:end="67:52">-&gt;</operator><name pos:start="67:53" pos:end="67:64">qp_bd_offset</name></name> <operator pos:start="67:66" pos:end="67:66">/</operator> <literal type="number" pos:start="67:68" pos:end="67:68">2</literal><operator pos:start="67:69" pos:end="67:69">)</operator></expr>)</condition> <block pos:start="67:72" pos:end="83:13">{<block_content pos:start="69:17" pos:end="81:43">

                <expr_stmt pos:start="69:17" pos:end="79:57"><expr pos:start="69:17" pos:end="79:56"><call pos:start="69:17" pos:end="79:56"><name pos:start="69:17" pos:end="69:22">av_log</name><argument_list pos:start="69:23" pos:end="79:56">(<argument pos:start="69:24" pos:end="69:31"><expr pos:start="69:24" pos:end="69:31"><name pos:start="69:24" pos:end="69:31"><name pos:start="69:24" pos:end="69:24">s</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:31">avctx</name></name></expr></argument>, <argument pos:start="69:34" pos:end="69:45"><expr pos:start="69:34" pos:end="69:45"><name pos:start="69:34" pos:end="69:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="71:24" pos:end="73:36"><expr pos:start="71:24" pos:end="73:36"><literal type="string" pos:start="71:24" pos:end="71:71">"The cu_qp_delta %d is outside the valid range "</literal>

                       <literal type="string" pos:start="73:24" pos:end="73:36">"[%d, %d].\n"</literal></expr></argument>,

                       <argument pos:start="75:24" pos:end="75:41"><expr pos:start="75:24" pos:end="75:41"><name pos:start="75:24" pos:end="75:41"><name pos:start="75:24" pos:end="75:25">lc</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:29">tu</name><operator pos:start="75:30" pos:end="75:30">.</operator><name pos:start="75:31" pos:end="75:41">cu_qp_delta</name></name></expr></argument>,

                       <argument pos:start="77:24" pos:end="77:55"><expr pos:start="77:24" pos:end="77:55"><operator pos:start="77:24" pos:end="77:24">-</operator><operator pos:start="77:25" pos:end="77:25">(</operator><literal type="number" pos:start="77:26" pos:end="77:29">26</literal> <operator pos:start="77:29" pos:end="77:29">+</operator> <name pos:start="77:31" pos:end="77:50"><name pos:start="77:31" pos:end="77:31">s</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:36">sps</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:50">qp_bd_offset</name></name> <operator pos:start="77:52" pos:end="77:52">/</operator> <literal type="number" pos:start="77:54" pos:end="77:54">2</literal><operator pos:start="77:55" pos:end="77:55">)</operator></expr></argument>,

                        <argument pos:start="79:25" pos:end="79:55"><expr pos:start="79:25" pos:end="79:55"><operator pos:start="79:25" pos:end="79:25">(</operator><literal type="number" pos:start="79:26" pos:end="79:29">25</literal> <operator pos:start="79:29" pos:end="79:29">+</operator> <name pos:start="79:31" pos:end="79:50"><name pos:start="79:31" pos:end="79:31">s</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:36">sps</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:50">qp_bd_offset</name></name> <operator pos:start="79:52" pos:end="79:52">/</operator> <literal type="number" pos:start="79:54" pos:end="79:54">2</literal><operator pos:start="79:55" pos:end="79:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="81:17" pos:end="81:43">return <expr pos:start="81:24" pos:end="81:42"><name pos:start="81:24" pos:end="81:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="87:13" pos:end="87:65"><expr pos:start="87:13" pos:end="87:64"><call pos:start="87:13" pos:end="87:64"><name pos:start="87:13" pos:end="87:27">ff_hevc_set_qPy</name><argument_list pos:start="87:28" pos:end="87:64">(<argument pos:start="87:29" pos:end="87:29"><expr pos:start="87:29" pos:end="87:29"><name pos:start="87:29" pos:end="87:29">s</name></expr></argument>, <argument pos:start="87:32" pos:end="87:39"><expr pos:start="87:32" pos:end="87:39"><name pos:start="87:32" pos:end="87:39">cb_xBase</name></expr></argument>, <argument pos:start="87:42" pos:end="87:49"><expr pos:start="87:42" pos:end="87:49"><name pos:start="87:42" pos:end="87:49">cb_yBase</name></expr></argument>, <argument pos:start="87:52" pos:end="87:63"><expr pos:start="87:52" pos:end="87:63"><name pos:start="87:52" pos:end="87:63">log2_cb_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="93:9" pos:end="127:9"><if pos:start="93:9" pos:end="127:9">if <condition pos:start="93:12" pos:end="95:88">(<expr pos:start="93:13" pos:end="95:87"><name pos:start="93:13" pos:end="93:50"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:17">sh</name><operator pos:start="93:18" pos:end="93:18">.</operator><name pos:start="93:19" pos:end="93:50">cu_chroma_qp_offset_enabled_flag</name></name> <operator pos:start="93:52" pos:end="93:53">&amp;&amp;</operator> <name pos:start="93:55" pos:end="93:64">cbf_chroma</name> <operator pos:start="93:66" pos:end="93:67">&amp;&amp;</operator>

            <operator pos:start="95:13" pos:end="95:13">!</operator><name pos:start="95:14" pos:end="95:45"><name pos:start="95:14" pos:end="95:15">lc</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:19">cu</name><operator pos:start="95:20" pos:end="95:20">.</operator><name pos:start="95:21" pos:end="95:45">cu_transquant_bypass_flag</name></name>  <operator pos:start="95:48" pos:end="95:49">&amp;&amp;</operator>  <operator pos:start="95:52" pos:end="95:52">!</operator><name pos:start="95:53" pos:end="95:87"><name pos:start="95:53" pos:end="95:54">lc</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:58">tu</name><operator pos:start="95:59" pos:end="95:59">.</operator><name pos:start="95:60" pos:end="95:87">is_cu_chroma_qp_offset_coded</name></name></expr>)</condition> <block pos:start="95:90" pos:end="127:9">{<block_content pos:start="97:13" pos:end="125:52">

            <decl_stmt pos:start="97:13" pos:end="97:79"><decl pos:start="97:13" pos:end="97:78"><type pos:start="97:13" pos:end="97:15"><name pos:start="97:13" pos:end="97:15">int</name></type> <name pos:start="97:17" pos:end="97:40">cu_chroma_qp_offset_flag</name> <init pos:start="97:42" pos:end="97:78">= <expr pos:start="97:44" pos:end="97:78"><call pos:start="97:44" pos:end="97:78"><name pos:start="97:44" pos:end="97:75">ff_hevc_cu_chroma_qp_offset_flag</name><argument_list pos:start="97:76" pos:end="97:78">(<argument pos:start="97:77" pos:end="97:77"><expr pos:start="97:77" pos:end="97:77"><name pos:start="97:77" pos:end="97:77">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="99:13" pos:end="123:13"><if pos:start="99:13" pos:end="117:13">if <condition pos:start="99:16" pos:end="99:41">(<expr pos:start="99:17" pos:end="99:40"><name pos:start="99:17" pos:end="99:40">cu_chroma_qp_offset_flag</name></expr>)</condition> <block pos:start="99:43" pos:end="117:13">{<block_content pos:start="101:17" pos:end="115:92">

                <decl_stmt pos:start="101:17" pos:end="101:49"><decl pos:start="101:17" pos:end="101:48"><type pos:start="101:17" pos:end="101:19"><name pos:start="101:17" pos:end="101:19">int</name></type> <name pos:start="101:21" pos:end="101:43">cu_chroma_qp_offset_idx</name>  <init pos:start="101:46" pos:end="101:48">= <expr pos:start="101:48" pos:end="101:48"><literal type="number" pos:start="101:48" pos:end="101:48">0</literal></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="103:17" pos:end="111:17"><if pos:start="103:17" pos:end="111:17">if <condition pos:start="103:20" pos:end="103:65">(<expr pos:start="103:21" pos:end="103:64"><name pos:start="103:21" pos:end="103:60"><name pos:start="103:21" pos:end="103:21">s</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:26">pps</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:60">chroma_qp_offset_list_len_minus1</name></name> <operator pos:start="103:62" pos:end="103:62">&gt;</operator> <literal type="number" pos:start="103:64" pos:end="103:64">0</literal></expr>)</condition> <block pos:start="103:67" pos:end="111:17">{<block_content pos:start="105:21" pos:end="109:69">

                    <expr_stmt pos:start="105:21" pos:end="105:81"><expr pos:start="105:21" pos:end="105:80"><name pos:start="105:21" pos:end="105:43">cu_chroma_qp_offset_idx</name> <operator pos:start="105:45" pos:end="105:45">=</operator> <call pos:start="105:47" pos:end="105:80"><name pos:start="105:47" pos:end="105:77">ff_hevc_cu_chroma_qp_offset_idx</name><argument_list pos:start="105:78" pos:end="105:80">(<argument pos:start="105:79" pos:end="105:79"><expr pos:start="105:79" pos:end="105:79"><name pos:start="105:79" pos:end="105:79">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="107:21" pos:end="109:69"><expr pos:start="107:21" pos:end="109:68"><call pos:start="107:21" pos:end="109:68"><name pos:start="107:21" pos:end="107:26">av_log</name><argument_list pos:start="107:27" pos:end="109:68">(<argument pos:start="107:28" pos:end="107:35"><expr pos:start="107:28" pos:end="107:35"><name pos:start="107:28" pos:end="107:35"><name pos:start="107:28" pos:end="107:28">s</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:35">avctx</name></name></expr></argument>, <argument pos:start="107:38" pos:end="107:49"><expr pos:start="107:38" pos:end="107:49"><name pos:start="107:38" pos:end="107:49">AV_LOG_ERROR</name></expr></argument>,

                        <argument pos:start="109:25" pos:end="109:67"><expr pos:start="109:25" pos:end="109:67"><literal type="string" pos:start="109:25" pos:end="109:67">"cu_chroma_qp_offset_idx not yet tested.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:92"><expr pos:start="113:17" pos:end="113:91"><name pos:start="113:17" pos:end="113:38"><name pos:start="113:17" pos:end="113:18">lc</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:22">tu</name><operator pos:start="113:23" pos:end="113:23">.</operator><name pos:start="113:24" pos:end="113:38">cu_qp_offset_cb</name></name> <operator pos:start="113:40" pos:end="113:40">=</operator> <name pos:start="113:42" pos:end="113:91"><name pos:start="113:42" pos:end="113:42">s</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:47">pps</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:66">cb_qp_offset_list</name><index pos:start="113:67" pos:end="113:91">[<expr pos:start="113:68" pos:end="113:90"><name pos:start="113:68" pos:end="113:90">cu_chroma_qp_offset_idx</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:92"><expr pos:start="115:17" pos:end="115:91"><name pos:start="115:17" pos:end="115:38"><name pos:start="115:17" pos:end="115:18">lc</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:22">tu</name><operator pos:start="115:23" pos:end="115:23">.</operator><name pos:start="115:24" pos:end="115:38">cu_qp_offset_cr</name></name> <operator pos:start="115:40" pos:end="115:40">=</operator> <name pos:start="115:42" pos:end="115:91"><name pos:start="115:42" pos:end="115:42">s</name><operator pos:start="115:43" pos:end="115:44">-&gt;</operator><name pos:start="115:45" pos:end="115:47">pps</name><operator pos:start="115:48" pos:end="115:49">-&gt;</operator><name pos:start="115:50" pos:end="115:66">cr_qp_offset_list</name><index pos:start="115:67" pos:end="115:91">[<expr pos:start="115:68" pos:end="115:90"><name pos:start="115:68" pos:end="115:90">cu_chroma_qp_offset_idx</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="117:15" pos:end="123:13">else <block pos:start="117:20" pos:end="123:13">{<block_content pos:start="119:17" pos:end="121:43">

                <expr_stmt pos:start="119:17" pos:end="119:43"><expr pos:start="119:17" pos:end="119:42"><name pos:start="119:17" pos:end="119:38"><name pos:start="119:17" pos:end="119:18">lc</name><operator pos:start="119:19" pos:end="119:20">-&gt;</operator><name pos:start="119:21" pos:end="119:22">tu</name><operator pos:start="119:23" pos:end="119:23">.</operator><name pos:start="119:24" pos:end="119:38">cu_qp_offset_cb</name></name> <operator pos:start="119:40" pos:end="119:40">=</operator> <literal type="number" pos:start="119:42" pos:end="119:42">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:43"><expr pos:start="121:17" pos:end="121:42"><name pos:start="121:17" pos:end="121:38"><name pos:start="121:17" pos:end="121:18">lc</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:22">tu</name><operator pos:start="121:23" pos:end="121:23">.</operator><name pos:start="121:24" pos:end="121:38">cu_qp_offset_cr</name></name> <operator pos:start="121:40" pos:end="121:40">=</operator> <literal type="number" pos:start="121:42" pos:end="121:42">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:52"><expr pos:start="125:13" pos:end="125:51"><name pos:start="125:13" pos:end="125:47"><name pos:start="125:13" pos:end="125:14">lc</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:18">tu</name><operator pos:start="125:19" pos:end="125:19">.</operator><name pos:start="125:20" pos:end="125:47">is_cu_chroma_qp_offset_coded</name></name> <operator pos:start="125:49" pos:end="125:49">=</operator> <literal type="number" pos:start="125:51" pos:end="125:51">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="131:9" pos:end="163:9"><if pos:start="131:9" pos:end="163:9">if <condition pos:start="131:12" pos:end="131:66">(<expr pos:start="131:13" pos:end="131:65"><name pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:14">lc</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:18">cu</name><operator pos:start="131:19" pos:end="131:19">.</operator><name pos:start="131:20" pos:end="131:28">pred_mode</name></name> <operator pos:start="131:30" pos:end="131:31">==</operator> <name pos:start="131:33" pos:end="131:42">MODE_INTRA</name> <operator pos:start="131:44" pos:end="131:45">&amp;&amp;</operator> <name pos:start="131:47" pos:end="131:61">log2_trafo_size</name> <operator pos:start="131:63" pos:end="131:63">&lt;</operator> <literal type="number" pos:start="131:65" pos:end="131:65">4</literal></expr>)</condition> <block pos:start="131:68" pos:end="163:9">{<block_content pos:start="133:13" pos:end="161:13">

            <if_stmt pos:start="133:13" pos:end="145:13"><if pos:start="133:13" pos:end="139:13">if <condition pos:start="133:16" pos:end="135:45">(<expr pos:start="133:17" pos:end="135:44"><name pos:start="133:17" pos:end="133:38"><name pos:start="133:17" pos:end="133:18">lc</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:22">tu</name><operator pos:start="133:23" pos:end="133:23">.</operator><name pos:start="133:24" pos:end="133:38">intra_pred_mode</name></name> <operator pos:start="133:40" pos:end="133:41">&gt;=</operator> <literal type="number" pos:start="133:43" pos:end="133:43">6</literal> <operator pos:start="133:45" pos:end="133:46">&amp;&amp;</operator>

                <name pos:start="135:17" pos:end="135:38"><name pos:start="135:17" pos:end="135:18">lc</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:22">tu</name><operator pos:start="135:23" pos:end="135:23">.</operator><name pos:start="135:24" pos:end="135:38">intra_pred_mode</name></name> <operator pos:start="135:40" pos:end="135:41">&lt;=</operator> <literal type="number" pos:start="135:43" pos:end="135:44">14</literal></expr>)</condition> <block pos:start="135:47" pos:end="139:13">{<block_content pos:start="137:17" pos:end="137:37">

                <expr_stmt pos:start="137:17" pos:end="137:37"><expr pos:start="137:17" pos:end="137:36"><name pos:start="137:17" pos:end="137:24">scan_idx</name> <operator pos:start="137:26" pos:end="137:26">=</operator> <name pos:start="137:28" pos:end="137:36">SCAN_VERT</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="139:15" pos:end="145:13">else if <condition pos:start="139:23" pos:end="141:52">(<expr pos:start="139:24" pos:end="141:51"><name pos:start="139:24" pos:end="139:45"><name pos:start="139:24" pos:end="139:25">lc</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:29">tu</name><operator pos:start="139:30" pos:end="139:30">.</operator><name pos:start="139:31" pos:end="139:45">intra_pred_mode</name></name> <operator pos:start="139:47" pos:end="139:48">&gt;=</operator> <literal type="number" pos:start="139:50" pos:end="139:51">22</literal> <operator pos:start="139:53" pos:end="139:54">&amp;&amp;</operator>

                       <name pos:start="141:24" pos:end="141:45"><name pos:start="141:24" pos:end="141:25">lc</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:29">tu</name><operator pos:start="141:30" pos:end="141:30">.</operator><name pos:start="141:31" pos:end="141:45">intra_pred_mode</name></name> <operator pos:start="141:47" pos:end="141:48">&lt;=</operator> <literal type="number" pos:start="141:50" pos:end="141:51">30</literal></expr>)</condition> <block pos:start="141:54" pos:end="145:13">{<block_content pos:start="143:17" pos:end="143:38">

                <expr_stmt pos:start="143:17" pos:end="143:38"><expr pos:start="143:17" pos:end="143:37"><name pos:start="143:17" pos:end="143:24">scan_idx</name> <operator pos:start="143:26" pos:end="143:26">=</operator> <name pos:start="143:28" pos:end="143:37">SCAN_HORIZ</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="149:13" pos:end="161:13"><if pos:start="149:13" pos:end="155:13">if <condition pos:start="149:16" pos:end="151:47">(<expr pos:start="149:17" pos:end="151:46"><name pos:start="149:17" pos:end="149:40"><name pos:start="149:17" pos:end="149:18">lc</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:22">tu</name><operator pos:start="149:23" pos:end="149:23">.</operator><name pos:start="149:24" pos:end="149:40">intra_pred_mode_c</name></name> <operator pos:start="149:42" pos:end="149:43">&gt;=</operator>  <literal type="number" pos:start="149:46" pos:end="149:46">6</literal> <operator pos:start="149:48" pos:end="149:49">&amp;&amp;</operator>

                <name pos:start="151:17" pos:end="151:40"><name pos:start="151:17" pos:end="151:18">lc</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:22">tu</name><operator pos:start="151:23" pos:end="151:23">.</operator><name pos:start="151:24" pos:end="151:40">intra_pred_mode_c</name></name> <operator pos:start="151:42" pos:end="151:43">&lt;=</operator> <literal type="number" pos:start="151:45" pos:end="151:46">14</literal></expr>)</condition> <block pos:start="151:49" pos:end="155:13">{<block_content pos:start="153:17" pos:end="153:39">

                <expr_stmt pos:start="153:17" pos:end="153:39"><expr pos:start="153:17" pos:end="153:38"><name pos:start="153:17" pos:end="153:26">scan_idx_c</name> <operator pos:start="153:28" pos:end="153:28">=</operator> <name pos:start="153:30" pos:end="153:38">SCAN_VERT</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="155:15" pos:end="161:13">else if <condition pos:start="155:23" pos:end="157:54">(<expr pos:start="155:24" pos:end="157:53"><name pos:start="155:24" pos:end="155:47"><name pos:start="155:24" pos:end="155:25">lc</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:29">tu</name><operator pos:start="155:30" pos:end="155:30">.</operator><name pos:start="155:31" pos:end="155:47">intra_pred_mode_c</name></name> <operator pos:start="155:49" pos:end="155:50">&gt;=</operator> <literal type="number" pos:start="155:52" pos:end="155:53">22</literal> <operator pos:start="155:55" pos:end="155:56">&amp;&amp;</operator>

                       <name pos:start="157:24" pos:end="157:47"><name pos:start="157:24" pos:end="157:25">lc</name><operator pos:start="157:26" pos:end="157:27">-&gt;</operator><name pos:start="157:28" pos:end="157:29">tu</name><operator pos:start="157:30" pos:end="157:30">.</operator><name pos:start="157:31" pos:end="157:47">intra_pred_mode_c</name></name> <operator pos:start="157:49" pos:end="157:50">&lt;=</operator> <literal type="number" pos:start="157:52" pos:end="157:53">30</literal></expr>)</condition> <block pos:start="157:56" pos:end="161:13">{<block_content pos:start="159:17" pos:end="159:40">

                <expr_stmt pos:start="159:17" pos:end="159:40"><expr pos:start="159:17" pos:end="159:39"><name pos:start="159:17" pos:end="159:26">scan_idx_c</name> <operator pos:start="159:28" pos:end="159:28">=</operator> <name pos:start="159:30" pos:end="159:39">SCAN_HORIZ</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:28"><expr pos:start="167:9" pos:end="167:27"><name pos:start="167:9" pos:end="167:23"><name pos:start="167:9" pos:end="167:10">lc</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:14">tu</name><operator pos:start="167:15" pos:end="167:15">.</operator><name pos:start="167:16" pos:end="167:23">cross_pf</name></name> <operator pos:start="167:25" pos:end="167:25">=</operator> <literal type="number" pos:start="167:27" pos:end="167:27">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="171:9" pos:end="173:81"><if pos:start="171:9" pos:end="173:81">if <condition pos:start="171:12" pos:end="171:21">(<expr pos:start="171:13" pos:end="171:20"><name pos:start="171:13" pos:end="171:20">cbf_luma</name></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:81"><block_content pos:start="173:13" pos:end="173:81">

            <expr_stmt pos:start="173:13" pos:end="173:81"><expr pos:start="173:13" pos:end="173:80"><call pos:start="173:13" pos:end="173:80"><name pos:start="173:13" pos:end="173:39">ff_hevc_hls_residual_coding</name><argument_list pos:start="173:40" pos:end="173:80">(<argument pos:start="173:41" pos:end="173:41"><expr pos:start="173:41" pos:end="173:41"><name pos:start="173:41" pos:end="173:41">s</name></expr></argument>, <argument pos:start="173:44" pos:end="173:45"><expr pos:start="173:44" pos:end="173:45"><name pos:start="173:44" pos:end="173:45">x0</name></expr></argument>, <argument pos:start="173:48" pos:end="173:49"><expr pos:start="173:48" pos:end="173:49"><name pos:start="173:48" pos:end="173:49">y0</name></expr></argument>, <argument pos:start="173:52" pos:end="173:66"><expr pos:start="173:52" pos:end="173:66"><name pos:start="173:52" pos:end="173:66">log2_trafo_size</name></expr></argument>, <argument pos:start="173:69" pos:end="173:76"><expr pos:start="173:69" pos:end="173:76"><name pos:start="173:69" pos:end="173:76">scan_idx</name></expr></argument>, <argument pos:start="173:79" pos:end="173:79"><expr pos:start="173:79" pos:end="173:79"><literal type="number" pos:start="173:79" pos:end="173:79">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="175:9" pos:end="349:9"><if pos:start="175:9" pos:end="303:9">if <condition pos:start="175:12" pos:end="175:66">(<expr pos:start="175:13" pos:end="175:65"><name pos:start="175:13" pos:end="175:27">log2_trafo_size</name> <operator pos:start="175:29" pos:end="175:29">&gt;</operator> <literal type="number" pos:start="175:31" pos:end="175:31">2</literal> <operator pos:start="175:33" pos:end="175:34">||</operator> <name pos:start="175:36" pos:end="175:60"><name pos:start="175:36" pos:end="175:36">s</name><operator pos:start="175:37" pos:end="175:38">-&gt;</operator><name pos:start="175:39" pos:end="175:41">sps</name><operator pos:start="175:42" pos:end="175:43">-&gt;</operator><name pos:start="175:44" pos:end="175:60">chroma_format_idc</name></name> <operator pos:start="175:62" pos:end="175:63">==</operator> <literal type="number" pos:start="175:65" pos:end="175:65">3</literal></expr>)</condition> <block pos:start="175:68" pos:end="303:9">{<block_content pos:start="177:13" pos:end="301:13">

            <decl_stmt pos:start="177:13" pos:end="177:76"><decl pos:start="177:13" pos:end="177:75"><type pos:start="177:13" pos:end="177:15"><name pos:start="177:13" pos:end="177:15">int</name></type> <name pos:start="177:17" pos:end="177:28">trafo_size_h</name> <init pos:start="177:30" pos:end="177:75">= <expr pos:start="177:32" pos:end="177:75"><literal type="number" pos:start="177:32" pos:end="177:32">1</literal> <operator pos:start="177:34" pos:end="177:35">&lt;&lt;</operator> <operator pos:start="177:37" pos:end="177:37">(</operator><name pos:start="177:38" pos:end="177:54">log2_trafo_size_c</name> <operator pos:start="177:56" pos:end="177:56">+</operator> <name pos:start="177:58" pos:end="177:74"><name pos:start="177:58" pos:end="177:58">s</name><operator pos:start="177:59" pos:end="177:60">-&gt;</operator><name pos:start="177:61" pos:end="177:63">sps</name><operator pos:start="177:64" pos:end="177:65">-&gt;</operator><name pos:start="177:66" pos:end="177:71">hshift</name><index pos:start="177:72" pos:end="177:74">[<expr pos:start="177:73" pos:end="177:73"><literal type="number" pos:start="177:73" pos:end="177:73">1</literal></expr>]</index></name><operator pos:start="177:75" pos:end="177:75">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="179:13" pos:end="179:76"><decl pos:start="179:13" pos:end="179:75"><type pos:start="179:13" pos:end="179:15"><name pos:start="179:13" pos:end="179:15">int</name></type> <name pos:start="179:17" pos:end="179:28">trafo_size_v</name> <init pos:start="179:30" pos:end="179:75">= <expr pos:start="179:32" pos:end="179:75"><literal type="number" pos:start="179:32" pos:end="179:32">1</literal> <operator pos:start="179:34" pos:end="179:35">&lt;&lt;</operator> <operator pos:start="179:37" pos:end="179:37">(</operator><name pos:start="179:38" pos:end="179:54">log2_trafo_size_c</name> <operator pos:start="179:56" pos:end="179:56">+</operator> <name pos:start="179:58" pos:end="179:74"><name pos:start="179:58" pos:end="179:58">s</name><operator pos:start="179:59" pos:end="179:60">-&gt;</operator><name pos:start="179:61" pos:end="179:63">sps</name><operator pos:start="179:64" pos:end="179:65">-&gt;</operator><name pos:start="179:66" pos:end="179:71">vshift</name><index pos:start="179:72" pos:end="179:74">[<expr pos:start="179:73" pos:end="179:73"><literal type="number" pos:start="179:73" pos:end="179:73">1</literal></expr>]</index></name><operator pos:start="179:75" pos:end="179:75">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="181:13" pos:end="185:64"><expr pos:start="181:13" pos:end="185:63"><name pos:start="181:13" pos:end="181:27"><name pos:start="181:13" pos:end="181:14">lc</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:18">tu</name><operator pos:start="181:19" pos:end="181:19">.</operator><name pos:start="181:20" pos:end="181:27">cross_pf</name></name>  <operator pos:start="181:30" pos:end="181:30">=</operator> <operator pos:start="181:32" pos:end="181:32">(</operator><name pos:start="181:33" pos:end="181:79"><name pos:start="181:33" pos:end="181:33">s</name><operator pos:start="181:34" pos:end="181:35">-&gt;</operator><name pos:start="181:36" pos:end="181:38">pps</name><operator pos:start="181:39" pos:end="181:40">-&gt;</operator><name pos:start="181:41" pos:end="181:79">cross_component_prediction_enabled_flag</name></name> <operator pos:start="181:81" pos:end="181:82">&amp;&amp;</operator> <name pos:start="181:84" pos:end="181:91">cbf_luma</name> <operator pos:start="181:93" pos:end="181:94">&amp;&amp;</operator>

                                <operator pos:start="183:33" pos:end="183:33">(</operator><name pos:start="183:34" pos:end="183:49"><name pos:start="183:34" pos:end="183:35">lc</name><operator pos:start="183:36" pos:end="183:37">-&gt;</operator><name pos:start="183:38" pos:end="183:39">cu</name><operator pos:start="183:40" pos:end="183:40">.</operator><name pos:start="183:41" pos:end="183:49">pred_mode</name></name> <operator pos:start="183:51" pos:end="183:52">==</operator> <name pos:start="183:54" pos:end="183:63">MODE_INTER</name> <operator pos:start="183:65" pos:end="183:66">||</operator>

                                 <operator pos:start="185:34" pos:end="185:34">(</operator><name pos:start="185:35" pos:end="185:54"><name pos:start="185:35" pos:end="185:36">lc</name><operator pos:start="185:37" pos:end="185:38">-&gt;</operator><name pos:start="185:39" pos:end="185:40">tu</name><operator pos:start="185:41" pos:end="185:41">.</operator><name pos:start="185:42" pos:end="185:54">chroma_mode_c</name></name> <operator pos:start="185:56" pos:end="185:57">==</operator>  <literal type="number" pos:start="185:60" pos:end="185:60">4</literal><operator pos:start="185:61" pos:end="185:61">)</operator><operator pos:start="185:62" pos:end="185:62">)</operator><operator pos:start="185:63" pos:end="185:63">)</operator></expr>;</expr_stmt>



            <if_stmt pos:start="189:13" pos:end="193:13"><if pos:start="189:13" pos:end="193:13">if <condition pos:start="189:16" pos:end="189:32">(<expr pos:start="189:17" pos:end="189:31"><name pos:start="189:17" pos:end="189:31"><name pos:start="189:17" pos:end="189:18">lc</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:22">tu</name><operator pos:start="189:23" pos:end="189:23">.</operator><name pos:start="189:24" pos:end="189:31">cross_pf</name></name></expr>)</condition> <block pos:start="189:34" pos:end="193:13">{<block_content pos:start="191:17" pos:end="191:47">

                <expr_stmt pos:start="191:17" pos:end="191:47"><expr pos:start="191:17" pos:end="191:46"><call pos:start="191:17" pos:end="191:46"><name pos:start="191:17" pos:end="191:40">hls_cross_component_pred</name><argument_list pos:start="191:41" pos:end="191:46">(<argument pos:start="191:42" pos:end="191:42"><expr pos:start="191:42" pos:end="191:42"><name pos:start="191:42" pos:end="191:42">s</name></expr></argument>, <argument pos:start="191:45" pos:end="191:45"><expr pos:start="191:45" pos:end="191:45"><literal type="number" pos:start="191:45" pos:end="191:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <for pos:start="195:13" pos:end="243:13">for <control pos:start="195:17" pos:end="195:74">(<init pos:start="195:18" pos:end="195:23"><expr pos:start="195:18" pos:end="195:22"><name pos:start="195:18" pos:end="195:18">i</name> <operator pos:start="195:20" pos:end="195:20">=</operator> <literal type="number" pos:start="195:22" pos:end="195:22">0</literal></expr>;</init> <condition pos:start="195:25" pos:end="195:69"><expr pos:start="195:25" pos:end="195:68"><name pos:start="195:25" pos:end="195:25">i</name> <operator pos:start="195:27" pos:end="195:27">&lt;</operator> <operator pos:start="195:29" pos:end="195:29">(</operator><ternary pos:start="195:30" pos:end="195:67"><condition pos:start="195:30" pos:end="195:61"><expr pos:start="195:30" pos:end="195:59"><name pos:start="195:30" pos:end="195:54"><name pos:start="195:30" pos:end="195:30">s</name><operator pos:start="195:31" pos:end="195:32">-&gt;</operator><name pos:start="195:33" pos:end="195:35">sps</name><operator pos:start="195:36" pos:end="195:37">-&gt;</operator><name pos:start="195:38" pos:end="195:54">chroma_format_idc</name></name> <operator pos:start="195:56" pos:end="195:57">==</operator> <literal type="number" pos:start="195:59" pos:end="195:59">2</literal></expr> ?</condition><then pos:start="195:63" pos:end="195:63"> <expr pos:start="195:63" pos:end="195:63"><literal type="number" pos:start="195:63" pos:end="195:63">2</literal></expr> </then><else pos:start="195:65" pos:end="195:67">: <expr pos:start="195:67" pos:end="195:67"><literal type="number" pos:start="195:67" pos:end="195:67">1</literal></expr></else></ternary><operator pos:start="195:68" pos:end="195:68">)</operator></expr>;</condition> <incr pos:start="195:71" pos:end="195:73"><expr pos:start="195:71" pos:end="195:73"><name pos:start="195:71" pos:end="195:71">i</name><operator pos:start="195:72" pos:end="195:73">++</operator></expr></incr>)</control> <block pos:start="195:76" pos:end="243:13">{<block_content pos:start="197:17" pos:end="241:21">

                <if_stmt pos:start="197:17" pos:end="203:17"><if pos:start="197:17" pos:end="203:17">if <condition pos:start="197:20" pos:end="197:51">(<expr pos:start="197:21" pos:end="197:50"><name pos:start="197:21" pos:end="197:36"><name pos:start="197:21" pos:end="197:22">lc</name><operator pos:start="197:23" pos:end="197:24">-&gt;</operator><name pos:start="197:25" pos:end="197:26">cu</name><operator pos:start="197:27" pos:end="197:27">.</operator><name pos:start="197:28" pos:end="197:36">pred_mode</name></name> <operator pos:start="197:38" pos:end="197:39">==</operator> <name pos:start="197:41" pos:end="197:50">MODE_INTRA</name></expr>)</condition> <block pos:start="197:53" pos:end="203:17">{<block_content pos:start="199:21" pos:end="201:102">

                    <expr_stmt pos:start="199:21" pos:end="199:118"><expr pos:start="199:21" pos:end="199:117"><call pos:start="199:21" pos:end="199:117"><name pos:start="199:21" pos:end="199:51">ff_hevc_set_neighbour_available</name><argument_list pos:start="199:52" pos:end="199:117">(<argument pos:start="199:53" pos:end="199:53"><expr pos:start="199:53" pos:end="199:53"><name pos:start="199:53" pos:end="199:53">s</name></expr></argument>, <argument pos:start="199:56" pos:end="199:57"><expr pos:start="199:56" pos:end="199:57"><name pos:start="199:56" pos:end="199:57">x0</name></expr></argument>, <argument pos:start="199:60" pos:end="199:88"><expr pos:start="199:60" pos:end="199:88"><name pos:start="199:60" pos:end="199:61">y0</name> <operator pos:start="199:63" pos:end="199:63">+</operator> <operator pos:start="199:65" pos:end="199:65">(</operator><name pos:start="199:66" pos:end="199:66">i</name> <operator pos:start="199:68" pos:end="199:69">&lt;&lt;</operator> <name pos:start="199:71" pos:end="199:87">log2_trafo_size_c</name><operator pos:start="199:88" pos:end="199:88">)</operator></expr></argument>, <argument pos:start="199:91" pos:end="199:102"><expr pos:start="199:91" pos:end="199:102"><name pos:start="199:91" pos:end="199:102">trafo_size_h</name></expr></argument>, <argument pos:start="199:105" pos:end="199:116"><expr pos:start="199:105" pos:end="199:116"><name pos:start="199:105" pos:end="199:116">trafo_size_v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="201:21" pos:end="201:102"><expr pos:start="201:21" pos:end="201:101"><name pos:start="201:21" pos:end="201:60"><name pos:start="201:21" pos:end="201:21">s</name><operator pos:start="201:22" pos:end="201:23">-&gt;</operator><name pos:start="201:24" pos:end="201:26">hpc</name><operator pos:start="201:27" pos:end="201:27">.</operator><name pos:start="201:28" pos:end="201:37">intra_pred</name><index pos:start="201:38" pos:end="201:60">[<expr pos:start="201:39" pos:end="201:59"><name pos:start="201:39" pos:end="201:55">log2_trafo_size_c</name> <operator pos:start="201:57" pos:end="201:57">-</operator> <literal type="number" pos:start="201:59" pos:end="201:59">2</literal></expr>]</index></name><operator pos:start="201:61" pos:end="201:61">(</operator><name pos:start="201:62" pos:end="201:62">s</name><operator pos:start="201:63" pos:end="201:63">,</operator> <name pos:start="201:65" pos:end="201:66">x0</name><operator pos:start="201:67" pos:end="201:67">,</operator> <name pos:start="201:69" pos:end="201:70">y0</name> <operator pos:start="201:72" pos:end="201:72">+</operator> <operator pos:start="201:74" pos:end="201:74">(</operator><name pos:start="201:75" pos:end="201:75">i</name> <operator pos:start="201:77" pos:end="201:78">&lt;&lt;</operator> <name pos:start="201:80" pos:end="201:96">log2_trafo_size_c</name><operator pos:start="201:97" pos:end="201:97">)</operator><operator pos:start="201:98" pos:end="201:98">,</operator> <literal type="number" pos:start="201:100" pos:end="201:100">1</literal><operator pos:start="201:101" pos:end="201:101">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="205:17" pos:end="241:21"><if pos:start="205:17" pos:end="209:82">if <condition pos:start="205:20" pos:end="205:30">(<expr pos:start="205:21" pos:end="205:29"><name pos:start="205:21" pos:end="205:29"><name pos:start="205:21" pos:end="205:26">cbf_cb</name><index pos:start="205:27" pos:end="205:29">[<expr pos:start="205:28" pos:end="205:28"><name pos:start="205:28" pos:end="205:28">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="207:21" pos:end="209:82"><block_content pos:start="207:21" pos:end="209:82">

                    <expr_stmt pos:start="207:21" pos:end="209:82"><expr pos:start="207:21" pos:end="209:81"><call pos:start="207:21" pos:end="209:81"><name pos:start="207:21" pos:end="207:47">ff_hevc_hls_residual_coding</name><argument_list pos:start="207:48" pos:end="209:81">(<argument pos:start="207:49" pos:end="207:49"><expr pos:start="207:49" pos:end="207:49"><name pos:start="207:49" pos:end="207:49">s</name></expr></argument>, <argument pos:start="207:52" pos:end="207:53"><expr pos:start="207:52" pos:end="207:53"><name pos:start="207:52" pos:end="207:53">x0</name></expr></argument>, <argument pos:start="207:56" pos:end="207:84"><expr pos:start="207:56" pos:end="207:84"><name pos:start="207:56" pos:end="207:57">y0</name> <operator pos:start="207:59" pos:end="207:59">+</operator> <operator pos:start="207:61" pos:end="207:61">(</operator><name pos:start="207:62" pos:end="207:62">i</name> <operator pos:start="207:64" pos:end="207:65">&lt;&lt;</operator> <name pos:start="207:67" pos:end="207:83">log2_trafo_size_c</name><operator pos:start="207:84" pos:end="207:84">)</operator></expr></argument>,

                                                <argument pos:start="209:49" pos:end="209:65"><expr pos:start="209:49" pos:end="209:65"><name pos:start="209:49" pos:end="209:65">log2_trafo_size_c</name></expr></argument>, <argument pos:start="209:68" pos:end="209:77"><expr pos:start="209:68" pos:end="209:77"><name pos:start="209:68" pos:end="209:77">scan_idx_c</name></expr></argument>, <argument pos:start="209:80" pos:end="209:80"><expr pos:start="209:80" pos:end="209:80"><literal type="number" pos:start="209:80" pos:end="209:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="211:17" pos:end="241:21">else

                    if <condition pos:start="213:24" pos:end="213:40">(<expr pos:start="213:25" pos:end="213:39"><name pos:start="213:25" pos:end="213:39"><name pos:start="213:25" pos:end="213:26">lc</name><operator pos:start="213:27" pos:end="213:28">-&gt;</operator><name pos:start="213:29" pos:end="213:30">tu</name><operator pos:start="213:31" pos:end="213:31">.</operator><name pos:start="213:32" pos:end="213:39">cross_pf</name></name></expr>)</condition> <block pos:start="213:42" pos:end="241:21">{<block_content pos:start="215:25" pos:end="239:89">

                        <decl_stmt pos:start="215:25" pos:end="215:65"><decl pos:start="215:25" pos:end="215:64"><type pos:start="215:25" pos:end="215:33"><name pos:start="215:25" pos:end="215:33">ptrdiff_t</name></type> <name pos:start="215:35" pos:end="215:40">stride</name> <init pos:start="215:42" pos:end="215:64">= <expr pos:start="215:44" pos:end="215:64"><name pos:start="215:44" pos:end="215:64"><name pos:start="215:44" pos:end="215:44">s</name><operator pos:start="215:45" pos:end="215:46">-&gt;</operator><name pos:start="215:47" pos:end="215:51">frame</name><operator pos:start="215:52" pos:end="215:53">-&gt;</operator><name pos:start="215:54" pos:end="215:61">linesize</name><index pos:start="215:62" pos:end="215:64">[<expr pos:start="215:63" pos:end="215:63"><literal type="number" pos:start="215:63" pos:end="215:63">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="217:25" pos:end="217:55"><decl pos:start="217:25" pos:end="217:54"><type pos:start="217:25" pos:end="217:27"><name pos:start="217:25" pos:end="217:27">int</name></type> <name pos:start="217:29" pos:end="217:34">hshift</name> <init pos:start="217:36" pos:end="217:54">= <expr pos:start="217:38" pos:end="217:54"><name pos:start="217:38" pos:end="217:54"><name pos:start="217:38" pos:end="217:38">s</name><operator pos:start="217:39" pos:end="217:40">-&gt;</operator><name pos:start="217:41" pos:end="217:43">sps</name><operator pos:start="217:44" pos:end="217:45">-&gt;</operator><name pos:start="217:46" pos:end="217:51">hshift</name><index pos:start="217:52" pos:end="217:54">[<expr pos:start="217:53" pos:end="217:53"><literal type="number" pos:start="217:53" pos:end="217:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="219:25" pos:end="219:55"><decl pos:start="219:25" pos:end="219:54"><type pos:start="219:25" pos:end="219:27"><name pos:start="219:25" pos:end="219:27">int</name></type> <name pos:start="219:29" pos:end="219:34">vshift</name> <init pos:start="219:36" pos:end="219:54">= <expr pos:start="219:38" pos:end="219:54"><name pos:start="219:38" pos:end="219:54"><name pos:start="219:38" pos:end="219:38">s</name><operator pos:start="219:39" pos:end="219:40">-&gt;</operator><name pos:start="219:41" pos:end="219:43">sps</name><operator pos:start="219:44" pos:end="219:45">-&gt;</operator><name pos:start="219:46" pos:end="219:51">vshift</name><index pos:start="219:52" pos:end="219:54">[<expr pos:start="219:53" pos:end="219:53"><literal type="number" pos:start="219:53" pos:end="219:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="221:25" pos:end="221:61"><decl pos:start="221:25" pos:end="221:60"><type pos:start="221:25" pos:end="221:33"><name pos:start="221:25" pos:end="221:31">int16_t</name> <modifier pos:start="221:33" pos:end="221:33">*</modifier></type><name pos:start="221:34" pos:end="221:41">coeffs_y</name> <init pos:start="221:43" pos:end="221:60">= <expr pos:start="221:45" pos:end="221:60"><name pos:start="221:45" pos:end="221:60"><name pos:start="221:45" pos:end="221:46">lc</name><operator pos:start="221:47" pos:end="221:48">-&gt;</operator><name pos:start="221:49" pos:end="221:50">tu</name><operator pos:start="221:51" pos:end="221:51">.</operator><name pos:start="221:52" pos:end="221:57">coeffs</name><index pos:start="221:58" pos:end="221:60">[<expr pos:start="221:59" pos:end="221:59"><literal type="number" pos:start="221:59" pos:end="221:59">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="223:25" pos:end="223:61"><decl pos:start="223:25" pos:end="223:60"><type pos:start="223:25" pos:end="223:33"><name pos:start="223:25" pos:end="223:31">int16_t</name> <modifier pos:start="223:33" pos:end="223:33">*</modifier></type><name pos:start="223:34" pos:end="223:39">coeffs</name> <init pos:start="223:41" pos:end="223:60">=   <expr pos:start="223:45" pos:end="223:60"><name pos:start="223:45" pos:end="223:60"><name pos:start="223:45" pos:end="223:46">lc</name><operator pos:start="223:47" pos:end="223:48">-&gt;</operator><name pos:start="223:49" pos:end="223:50">tu</name><operator pos:start="223:51" pos:end="223:51">.</operator><name pos:start="223:52" pos:end="223:57">coeffs</name><index pos:start="223:58" pos:end="223:60">[<expr pos:start="223:59" pos:end="223:59"><literal type="number" pos:start="223:59" pos:end="223:59">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="225:25" pos:end="225:58"><decl pos:start="225:25" pos:end="225:57"><type pos:start="225:25" pos:end="225:27"><name pos:start="225:25" pos:end="225:27">int</name></type> <name pos:start="225:29" pos:end="225:32">size</name> <init pos:start="225:34" pos:end="225:57">= <expr pos:start="225:36" pos:end="225:57"><literal type="number" pos:start="225:36" pos:end="225:36">1</literal> <operator pos:start="225:38" pos:end="225:39">&lt;&lt;</operator> <name pos:start="225:41" pos:end="225:57">log2_trafo_size_c</name></expr></init></decl>;</decl_stmt>



                        <decl_stmt pos:start="229:25" pos:end="231:103"><decl pos:start="229:25" pos:end="231:102"><type pos:start="229:25" pos:end="229:33"><name pos:start="229:25" pos:end="229:31">uint8_t</name> <modifier pos:start="229:33" pos:end="229:33">*</modifier></type><name pos:start="229:34" pos:end="229:36">dst</name> <init pos:start="229:38" pos:end="231:102">= <expr pos:start="229:40" pos:end="231:102"><operator pos:start="229:40" pos:end="229:40">&amp;</operator><name pos:start="229:41" pos:end="231:102"><name pos:start="229:41" pos:end="229:41">s</name><operator pos:start="229:42" pos:end="229:43">-&gt;</operator><name pos:start="229:44" pos:end="229:48">frame</name><operator pos:start="229:49" pos:end="229:50">-&gt;</operator><name pos:start="229:51" pos:end="229:54">data</name><index pos:start="229:55" pos:end="229:57">[<expr pos:start="229:56" pos:end="229:56"><literal type="number" pos:start="229:56" pos:end="229:56">1</literal></expr>]</index><index pos:start="229:58" pos:end="231:102">[<expr pos:start="229:59" pos:end="231:101"><operator pos:start="229:59" pos:end="229:59">(</operator><name pos:start="229:60" pos:end="229:61">y0</name> <operator pos:start="229:63" pos:end="229:64">&gt;&gt;</operator> <name pos:start="229:66" pos:end="229:71">vshift</name><operator pos:start="229:72" pos:end="229:72">)</operator> <operator pos:start="229:74" pos:end="229:74">*</operator> <name pos:start="229:76" pos:end="229:81">stride</name> <operator pos:start="229:83" pos:end="229:83">+</operator>

                                                              <operator pos:start="231:63" pos:end="231:63">(</operator><operator pos:start="231:64" pos:end="231:64">(</operator><name pos:start="231:65" pos:end="231:66">x0</name> <operator pos:start="231:68" pos:end="231:69">&gt;&gt;</operator> <name pos:start="231:71" pos:end="231:76">hshift</name><operator pos:start="231:77" pos:end="231:77">)</operator> <operator pos:start="231:79" pos:end="231:80">&lt;&lt;</operator> <name pos:start="231:82" pos:end="231:100"><name pos:start="231:82" pos:end="231:82">s</name><operator pos:start="231:83" pos:end="231:84">-&gt;</operator><name pos:start="231:85" pos:end="231:87">sps</name><operator pos:start="231:88" pos:end="231:89">-&gt;</operator><name pos:start="231:90" pos:end="231:100">pixel_shift</name></name><operator pos:start="231:101" pos:end="231:101">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <for pos:start="233:25" pos:end="237:25">for <control pos:start="233:29" pos:end="233:59">(<init pos:start="233:30" pos:end="233:35"><expr pos:start="233:30" pos:end="233:34"><name pos:start="233:30" pos:end="233:30">i</name> <operator pos:start="233:32" pos:end="233:32">=</operator> <literal type="number" pos:start="233:34" pos:end="233:34">0</literal></expr>;</init> <condition pos:start="233:37" pos:end="233:54"><expr pos:start="233:37" pos:end="233:53"><name pos:start="233:37" pos:end="233:37">i</name> <operator pos:start="233:39" pos:end="233:39">&lt;</operator> <operator pos:start="233:41" pos:end="233:41">(</operator><name pos:start="233:42" pos:end="233:45">size</name> <operator pos:start="233:47" pos:end="233:47">*</operator> <name pos:start="233:49" pos:end="233:52">size</name><operator pos:start="233:53" pos:end="233:53">)</operator></expr>;</condition> <incr pos:start="233:56" pos:end="233:58"><expr pos:start="233:56" pos:end="233:58"><name pos:start="233:56" pos:end="233:56">i</name><operator pos:start="233:57" pos:end="233:58">++</operator></expr></incr>)</control> <block pos:start="233:61" pos:end="237:25">{<block_content pos:start="235:29" pos:end="235:84">

                            <expr_stmt pos:start="235:29" pos:end="235:84"><expr pos:start="235:29" pos:end="235:83"><name pos:start="235:29" pos:end="235:37"><name pos:start="235:29" pos:end="235:34">coeffs</name><index pos:start="235:35" pos:end="235:37">[<expr pos:start="235:36" pos:end="235:36"><name pos:start="235:36" pos:end="235:36">i</name></expr>]</index></name> <operator pos:start="235:39" pos:end="235:39">=</operator> <operator pos:start="235:41" pos:end="235:41">(</operator><operator pos:start="235:42" pos:end="235:42">(</operator><name pos:start="235:43" pos:end="235:62"><name pos:start="235:43" pos:end="235:44">lc</name><operator pos:start="235:45" pos:end="235:46">-&gt;</operator><name pos:start="235:47" pos:end="235:48">tu</name><operator pos:start="235:49" pos:end="235:49">.</operator><name pos:start="235:50" pos:end="235:62">res_scale_val</name></name> <operator pos:start="235:64" pos:end="235:64">*</operator> <name pos:start="235:66" pos:end="235:76"><name pos:start="235:66" pos:end="235:73">coeffs_y</name><index pos:start="235:74" pos:end="235:76">[<expr pos:start="235:75" pos:end="235:75"><name pos:start="235:75" pos:end="235:75">i</name></expr>]</index></name><operator pos:start="235:77" pos:end="235:77">)</operator> <operator pos:start="235:79" pos:end="235:80">&gt;&gt;</operator> <literal type="number" pos:start="235:82" pos:end="235:82">3</literal><operator pos:start="235:83" pos:end="235:83">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="239:25" pos:end="239:89"><expr pos:start="239:25" pos:end="239:88"><name pos:start="239:25" pos:end="239:67"><name pos:start="239:25" pos:end="239:25">s</name><operator pos:start="239:26" pos:end="239:27">-&gt;</operator><name pos:start="239:28" pos:end="239:34">hevcdsp</name><operator pos:start="239:35" pos:end="239:35">.</operator><name pos:start="239:36" pos:end="239:48">transform_add</name><index pos:start="239:49" pos:end="239:67">[<expr pos:start="239:50" pos:end="239:66"><name pos:start="239:50" pos:end="239:64">log2_trafo_size</name><operator pos:start="239:65" pos:end="239:65">-</operator><literal type="number" pos:start="239:66" pos:end="239:66">2</literal></expr>]</index></name><operator pos:start="239:68" pos:end="239:68">(</operator><name pos:start="239:69" pos:end="239:71">dst</name><operator pos:start="239:72" pos:end="239:72">,</operator> <name pos:start="239:74" pos:end="239:79">coeffs</name><operator pos:start="239:80" pos:end="239:80">,</operator> <name pos:start="239:82" pos:end="239:87">stride</name><operator pos:start="239:88" pos:end="239:88">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <if_stmt pos:start="247:13" pos:end="251:13"><if pos:start="247:13" pos:end="251:13">if <condition pos:start="247:16" pos:end="247:32">(<expr pos:start="247:17" pos:end="247:31"><name pos:start="247:17" pos:end="247:31"><name pos:start="247:17" pos:end="247:18">lc</name><operator pos:start="247:19" pos:end="247:20">-&gt;</operator><name pos:start="247:21" pos:end="247:22">tu</name><operator pos:start="247:23" pos:end="247:23">.</operator><name pos:start="247:24" pos:end="247:31">cross_pf</name></name></expr>)</condition> <block pos:start="247:34" pos:end="251:13">{<block_content pos:start="249:17" pos:end="249:47">

                <expr_stmt pos:start="249:17" pos:end="249:47"><expr pos:start="249:17" pos:end="249:46"><call pos:start="249:17" pos:end="249:46"><name pos:start="249:17" pos:end="249:40">hls_cross_component_pred</name><argument_list pos:start="249:41" pos:end="249:46">(<argument pos:start="249:42" pos:end="249:42"><expr pos:start="249:42" pos:end="249:42"><name pos:start="249:42" pos:end="249:42">s</name></expr></argument>, <argument pos:start="249:45" pos:end="249:45"><expr pos:start="249:45" pos:end="249:45"><literal type="number" pos:start="249:45" pos:end="249:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <for pos:start="253:13" pos:end="301:13">for <control pos:start="253:17" pos:end="253:74">(<init pos:start="253:18" pos:end="253:23"><expr pos:start="253:18" pos:end="253:22"><name pos:start="253:18" pos:end="253:18">i</name> <operator pos:start="253:20" pos:end="253:20">=</operator> <literal type="number" pos:start="253:22" pos:end="253:22">0</literal></expr>;</init> <condition pos:start="253:25" pos:end="253:69"><expr pos:start="253:25" pos:end="253:68"><name pos:start="253:25" pos:end="253:25">i</name> <operator pos:start="253:27" pos:end="253:27">&lt;</operator> <operator pos:start="253:29" pos:end="253:29">(</operator><ternary pos:start="253:30" pos:end="253:67"><condition pos:start="253:30" pos:end="253:61"><expr pos:start="253:30" pos:end="253:59"><name pos:start="253:30" pos:end="253:54"><name pos:start="253:30" pos:end="253:30">s</name><operator pos:start="253:31" pos:end="253:32">-&gt;</operator><name pos:start="253:33" pos:end="253:35">sps</name><operator pos:start="253:36" pos:end="253:37">-&gt;</operator><name pos:start="253:38" pos:end="253:54">chroma_format_idc</name></name> <operator pos:start="253:56" pos:end="253:57">==</operator> <literal type="number" pos:start="253:59" pos:end="253:59">2</literal></expr> ?</condition><then pos:start="253:63" pos:end="253:63"> <expr pos:start="253:63" pos:end="253:63"><literal type="number" pos:start="253:63" pos:end="253:63">2</literal></expr> </then><else pos:start="253:65" pos:end="253:67">: <expr pos:start="253:67" pos:end="253:67"><literal type="number" pos:start="253:67" pos:end="253:67">1</literal></expr></else></ternary><operator pos:start="253:68" pos:end="253:68">)</operator></expr>;</condition> <incr pos:start="253:71" pos:end="253:73"><expr pos:start="253:71" pos:end="253:73"><name pos:start="253:71" pos:end="253:71">i</name><operator pos:start="253:72" pos:end="253:73">++</operator></expr></incr>)</control> <block pos:start="253:76" pos:end="301:13">{<block_content pos:start="255:17" pos:end="299:21">

                <if_stmt pos:start="255:17" pos:end="261:17"><if pos:start="255:17" pos:end="261:17">if <condition pos:start="255:20" pos:end="255:51">(<expr pos:start="255:21" pos:end="255:50"><name pos:start="255:21" pos:end="255:36"><name pos:start="255:21" pos:end="255:22">lc</name><operator pos:start="255:23" pos:end="255:24">-&gt;</operator><name pos:start="255:25" pos:end="255:26">cu</name><operator pos:start="255:27" pos:end="255:27">.</operator><name pos:start="255:28" pos:end="255:36">pred_mode</name></name> <operator pos:start="255:38" pos:end="255:39">==</operator> <name pos:start="255:41" pos:end="255:50">MODE_INTRA</name></expr>)</condition> <block pos:start="255:53" pos:end="261:17">{<block_content pos:start="257:21" pos:end="259:102">

                    <expr_stmt pos:start="257:21" pos:end="257:118"><expr pos:start="257:21" pos:end="257:117"><call pos:start="257:21" pos:end="257:117"><name pos:start="257:21" pos:end="257:51">ff_hevc_set_neighbour_available</name><argument_list pos:start="257:52" pos:end="257:117">(<argument pos:start="257:53" pos:end="257:53"><expr pos:start="257:53" pos:end="257:53"><name pos:start="257:53" pos:end="257:53">s</name></expr></argument>, <argument pos:start="257:56" pos:end="257:57"><expr pos:start="257:56" pos:end="257:57"><name pos:start="257:56" pos:end="257:57">x0</name></expr></argument>, <argument pos:start="257:60" pos:end="257:88"><expr pos:start="257:60" pos:end="257:88"><name pos:start="257:60" pos:end="257:61">y0</name> <operator pos:start="257:63" pos:end="257:63">+</operator> <operator pos:start="257:65" pos:end="257:65">(</operator><name pos:start="257:66" pos:end="257:66">i</name> <operator pos:start="257:68" pos:end="257:69">&lt;&lt;</operator> <name pos:start="257:71" pos:end="257:87">log2_trafo_size_c</name><operator pos:start="257:88" pos:end="257:88">)</operator></expr></argument>, <argument pos:start="257:91" pos:end="257:102"><expr pos:start="257:91" pos:end="257:102"><name pos:start="257:91" pos:end="257:102">trafo_size_h</name></expr></argument>, <argument pos:start="257:105" pos:end="257:116"><expr pos:start="257:105" pos:end="257:116"><name pos:start="257:105" pos:end="257:116">trafo_size_v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:102"><expr pos:start="259:21" pos:end="259:101"><name pos:start="259:21" pos:end="259:60"><name pos:start="259:21" pos:end="259:21">s</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:26">hpc</name><operator pos:start="259:27" pos:end="259:27">.</operator><name pos:start="259:28" pos:end="259:37">intra_pred</name><index pos:start="259:38" pos:end="259:60">[<expr pos:start="259:39" pos:end="259:59"><name pos:start="259:39" pos:end="259:55">log2_trafo_size_c</name> <operator pos:start="259:57" pos:end="259:57">-</operator> <literal type="number" pos:start="259:59" pos:end="259:59">2</literal></expr>]</index></name><operator pos:start="259:61" pos:end="259:61">(</operator><name pos:start="259:62" pos:end="259:62">s</name><operator pos:start="259:63" pos:end="259:63">,</operator> <name pos:start="259:65" pos:end="259:66">x0</name><operator pos:start="259:67" pos:end="259:67">,</operator> <name pos:start="259:69" pos:end="259:70">y0</name> <operator pos:start="259:72" pos:end="259:72">+</operator> <operator pos:start="259:74" pos:end="259:74">(</operator><name pos:start="259:75" pos:end="259:75">i</name> <operator pos:start="259:77" pos:end="259:78">&lt;&lt;</operator> <name pos:start="259:80" pos:end="259:96">log2_trafo_size_c</name><operator pos:start="259:97" pos:end="259:97">)</operator><operator pos:start="259:98" pos:end="259:98">,</operator> <literal type="number" pos:start="259:100" pos:end="259:100">2</literal><operator pos:start="259:101" pos:end="259:101">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="263:17" pos:end="299:21"><if pos:start="263:17" pos:end="267:82">if <condition pos:start="263:20" pos:end="263:30">(<expr pos:start="263:21" pos:end="263:29"><name pos:start="263:21" pos:end="263:29"><name pos:start="263:21" pos:end="263:26">cbf_cr</name><index pos:start="263:27" pos:end="263:29">[<expr pos:start="263:28" pos:end="263:28"><name pos:start="263:28" pos:end="263:28">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="265:21" pos:end="267:82"><block_content pos:start="265:21" pos:end="267:82">

                    <expr_stmt pos:start="265:21" pos:end="267:82"><expr pos:start="265:21" pos:end="267:81"><call pos:start="265:21" pos:end="267:81"><name pos:start="265:21" pos:end="265:47">ff_hevc_hls_residual_coding</name><argument_list pos:start="265:48" pos:end="267:81">(<argument pos:start="265:49" pos:end="265:49"><expr pos:start="265:49" pos:end="265:49"><name pos:start="265:49" pos:end="265:49">s</name></expr></argument>, <argument pos:start="265:52" pos:end="265:53"><expr pos:start="265:52" pos:end="265:53"><name pos:start="265:52" pos:end="265:53">x0</name></expr></argument>, <argument pos:start="265:56" pos:end="265:84"><expr pos:start="265:56" pos:end="265:84"><name pos:start="265:56" pos:end="265:57">y0</name> <operator pos:start="265:59" pos:end="265:59">+</operator> <operator pos:start="265:61" pos:end="265:61">(</operator><name pos:start="265:62" pos:end="265:62">i</name> <operator pos:start="265:64" pos:end="265:65">&lt;&lt;</operator> <name pos:start="265:67" pos:end="265:83">log2_trafo_size_c</name><operator pos:start="265:84" pos:end="265:84">)</operator></expr></argument>,

                                                <argument pos:start="267:49" pos:end="267:65"><expr pos:start="267:49" pos:end="267:65"><name pos:start="267:49" pos:end="267:65">log2_trafo_size_c</name></expr></argument>, <argument pos:start="267:68" pos:end="267:77"><expr pos:start="267:68" pos:end="267:77"><name pos:start="267:68" pos:end="267:77">scan_idx_c</name></expr></argument>, <argument pos:start="267:80" pos:end="267:80"><expr pos:start="267:80" pos:end="267:80"><literal type="number" pos:start="267:80" pos:end="267:80">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="269:17" pos:end="299:21">else

                    if <condition pos:start="271:24" pos:end="271:40">(<expr pos:start="271:25" pos:end="271:39"><name pos:start="271:25" pos:end="271:39"><name pos:start="271:25" pos:end="271:26">lc</name><operator pos:start="271:27" pos:end="271:28">-&gt;</operator><name pos:start="271:29" pos:end="271:30">tu</name><operator pos:start="271:31" pos:end="271:31">.</operator><name pos:start="271:32" pos:end="271:39">cross_pf</name></name></expr>)</condition> <block pos:start="271:42" pos:end="299:21">{<block_content pos:start="273:25" pos:end="297:89">

                        <decl_stmt pos:start="273:25" pos:end="273:65"><decl pos:start="273:25" pos:end="273:64"><type pos:start="273:25" pos:end="273:33"><name pos:start="273:25" pos:end="273:33">ptrdiff_t</name></type> <name pos:start="273:35" pos:end="273:40">stride</name> <init pos:start="273:42" pos:end="273:64">= <expr pos:start="273:44" pos:end="273:64"><name pos:start="273:44" pos:end="273:64"><name pos:start="273:44" pos:end="273:44">s</name><operator pos:start="273:45" pos:end="273:46">-&gt;</operator><name pos:start="273:47" pos:end="273:51">frame</name><operator pos:start="273:52" pos:end="273:53">-&gt;</operator><name pos:start="273:54" pos:end="273:61">linesize</name><index pos:start="273:62" pos:end="273:64">[<expr pos:start="273:63" pos:end="273:63"><literal type="number" pos:start="273:63" pos:end="273:63">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="275:25" pos:end="275:55"><decl pos:start="275:25" pos:end="275:54"><type pos:start="275:25" pos:end="275:27"><name pos:start="275:25" pos:end="275:27">int</name></type> <name pos:start="275:29" pos:end="275:34">hshift</name> <init pos:start="275:36" pos:end="275:54">= <expr pos:start="275:38" pos:end="275:54"><name pos:start="275:38" pos:end="275:54"><name pos:start="275:38" pos:end="275:38">s</name><operator pos:start="275:39" pos:end="275:40">-&gt;</operator><name pos:start="275:41" pos:end="275:43">sps</name><operator pos:start="275:44" pos:end="275:45">-&gt;</operator><name pos:start="275:46" pos:end="275:51">hshift</name><index pos:start="275:52" pos:end="275:54">[<expr pos:start="275:53" pos:end="275:53"><literal type="number" pos:start="275:53" pos:end="275:53">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="277:25" pos:end="277:55"><decl pos:start="277:25" pos:end="277:54"><type pos:start="277:25" pos:end="277:27"><name pos:start="277:25" pos:end="277:27">int</name></type> <name pos:start="277:29" pos:end="277:34">vshift</name> <init pos:start="277:36" pos:end="277:54">= <expr pos:start="277:38" pos:end="277:54"><name pos:start="277:38" pos:end="277:54"><name pos:start="277:38" pos:end="277:38">s</name><operator pos:start="277:39" pos:end="277:40">-&gt;</operator><name pos:start="277:41" pos:end="277:43">sps</name><operator pos:start="277:44" pos:end="277:45">-&gt;</operator><name pos:start="277:46" pos:end="277:51">vshift</name><index pos:start="277:52" pos:end="277:54">[<expr pos:start="277:53" pos:end="277:53"><literal type="number" pos:start="277:53" pos:end="277:53">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="279:25" pos:end="279:61"><decl pos:start="279:25" pos:end="279:60"><type pos:start="279:25" pos:end="279:33"><name pos:start="279:25" pos:end="279:31">int16_t</name> <modifier pos:start="279:33" pos:end="279:33">*</modifier></type><name pos:start="279:34" pos:end="279:41">coeffs_y</name> <init pos:start="279:43" pos:end="279:60">= <expr pos:start="279:45" pos:end="279:60"><name pos:start="279:45" pos:end="279:60"><name pos:start="279:45" pos:end="279:46">lc</name><operator pos:start="279:47" pos:end="279:48">-&gt;</operator><name pos:start="279:49" pos:end="279:50">tu</name><operator pos:start="279:51" pos:end="279:51">.</operator><name pos:start="279:52" pos:end="279:57">coeffs</name><index pos:start="279:58" pos:end="279:60">[<expr pos:start="279:59" pos:end="279:59"><literal type="number" pos:start="279:59" pos:end="279:59">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="281:25" pos:end="281:61"><decl pos:start="281:25" pos:end="281:60"><type pos:start="281:25" pos:end="281:33"><name pos:start="281:25" pos:end="281:31">int16_t</name> <modifier pos:start="281:33" pos:end="281:33">*</modifier></type><name pos:start="281:34" pos:end="281:39">coeffs</name> <init pos:start="281:41" pos:end="281:60">=   <expr pos:start="281:45" pos:end="281:60"><name pos:start="281:45" pos:end="281:60"><name pos:start="281:45" pos:end="281:46">lc</name><operator pos:start="281:47" pos:end="281:48">-&gt;</operator><name pos:start="281:49" pos:end="281:50">tu</name><operator pos:start="281:51" pos:end="281:51">.</operator><name pos:start="281:52" pos:end="281:57">coeffs</name><index pos:start="281:58" pos:end="281:60">[<expr pos:start="281:59" pos:end="281:59"><literal type="number" pos:start="281:59" pos:end="281:59">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="283:25" pos:end="283:58"><decl pos:start="283:25" pos:end="283:57"><type pos:start="283:25" pos:end="283:27"><name pos:start="283:25" pos:end="283:27">int</name></type> <name pos:start="283:29" pos:end="283:32">size</name> <init pos:start="283:34" pos:end="283:57">= <expr pos:start="283:36" pos:end="283:57"><literal type="number" pos:start="283:36" pos:end="283:36">1</literal> <operator pos:start="283:38" pos:end="283:39">&lt;&lt;</operator> <name pos:start="283:41" pos:end="283:57">log2_trafo_size_c</name></expr></init></decl>;</decl_stmt>



                        <decl_stmt pos:start="287:25" pos:end="289:99"><decl pos:start="287:25" pos:end="289:98"><type pos:start="287:25" pos:end="287:33"><name pos:start="287:25" pos:end="287:31">uint8_t</name> <modifier pos:start="287:33" pos:end="287:33">*</modifier></type><name pos:start="287:34" pos:end="287:36">dst</name> <init pos:start="287:38" pos:end="289:98">= <expr pos:start="287:40" pos:end="289:98"><operator pos:start="287:40" pos:end="287:40">&amp;</operator><name pos:start="287:41" pos:end="289:98"><name pos:start="287:41" pos:end="287:41">s</name><operator pos:start="287:42" pos:end="287:43">-&gt;</operator><name pos:start="287:44" pos:end="287:48">frame</name><operator pos:start="287:49" pos:end="287:50">-&gt;</operator><name pos:start="287:51" pos:end="287:54">data</name><index pos:start="287:55" pos:end="287:57">[<expr pos:start="287:56" pos:end="287:56"><literal type="number" pos:start="287:56" pos:end="287:56">2</literal></expr>]</index><index pos:start="287:58" pos:end="289:98">[<expr pos:start="287:59" pos:end="289:97"><operator pos:start="287:59" pos:end="287:59">(</operator><name pos:start="287:60" pos:end="287:61">y0</name> <operator pos:start="287:63" pos:end="287:64">&gt;&gt;</operator> <name pos:start="287:66" pos:end="287:71">vshift</name><operator pos:start="287:72" pos:end="287:72">)</operator> <operator pos:start="287:74" pos:end="287:74">*</operator> <name pos:start="287:76" pos:end="287:81">stride</name> <operator pos:start="287:83" pos:end="287:83">+</operator>

                                                          <operator pos:start="289:59" pos:end="289:59">(</operator><operator pos:start="289:60" pos:end="289:60">(</operator><name pos:start="289:61" pos:end="289:62">x0</name> <operator pos:start="289:64" pos:end="289:65">&gt;&gt;</operator> <name pos:start="289:67" pos:end="289:72">hshift</name><operator pos:start="289:73" pos:end="289:73">)</operator> <operator pos:start="289:75" pos:end="289:76">&lt;&lt;</operator> <name pos:start="289:78" pos:end="289:96"><name pos:start="289:78" pos:end="289:78">s</name><operator pos:start="289:79" pos:end="289:80">-&gt;</operator><name pos:start="289:81" pos:end="289:83">sps</name><operator pos:start="289:84" pos:end="289:85">-&gt;</operator><name pos:start="289:86" pos:end="289:96">pixel_shift</name></name><operator pos:start="289:97" pos:end="289:97">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <for pos:start="291:25" pos:end="295:25">for <control pos:start="291:29" pos:end="291:59">(<init pos:start="291:30" pos:end="291:35"><expr pos:start="291:30" pos:end="291:34"><name pos:start="291:30" pos:end="291:30">i</name> <operator pos:start="291:32" pos:end="291:32">=</operator> <literal type="number" pos:start="291:34" pos:end="291:34">0</literal></expr>;</init> <condition pos:start="291:37" pos:end="291:54"><expr pos:start="291:37" pos:end="291:53"><name pos:start="291:37" pos:end="291:37">i</name> <operator pos:start="291:39" pos:end="291:39">&lt;</operator> <operator pos:start="291:41" pos:end="291:41">(</operator><name pos:start="291:42" pos:end="291:45">size</name> <operator pos:start="291:47" pos:end="291:47">*</operator> <name pos:start="291:49" pos:end="291:52">size</name><operator pos:start="291:53" pos:end="291:53">)</operator></expr>;</condition> <incr pos:start="291:56" pos:end="291:58"><expr pos:start="291:56" pos:end="291:58"><name pos:start="291:56" pos:end="291:56">i</name><operator pos:start="291:57" pos:end="291:58">++</operator></expr></incr>)</control> <block pos:start="291:61" pos:end="295:25">{<block_content pos:start="293:29" pos:end="293:84">

                            <expr_stmt pos:start="293:29" pos:end="293:84"><expr pos:start="293:29" pos:end="293:83"><name pos:start="293:29" pos:end="293:37"><name pos:start="293:29" pos:end="293:34">coeffs</name><index pos:start="293:35" pos:end="293:37">[<expr pos:start="293:36" pos:end="293:36"><name pos:start="293:36" pos:end="293:36">i</name></expr>]</index></name> <operator pos:start="293:39" pos:end="293:39">=</operator> <operator pos:start="293:41" pos:end="293:41">(</operator><operator pos:start="293:42" pos:end="293:42">(</operator><name pos:start="293:43" pos:end="293:62"><name pos:start="293:43" pos:end="293:44">lc</name><operator pos:start="293:45" pos:end="293:46">-&gt;</operator><name pos:start="293:47" pos:end="293:48">tu</name><operator pos:start="293:49" pos:end="293:49">.</operator><name pos:start="293:50" pos:end="293:62">res_scale_val</name></name> <operator pos:start="293:64" pos:end="293:64">*</operator> <name pos:start="293:66" pos:end="293:76"><name pos:start="293:66" pos:end="293:73">coeffs_y</name><index pos:start="293:74" pos:end="293:76">[<expr pos:start="293:75" pos:end="293:75"><name pos:start="293:75" pos:end="293:75">i</name></expr>]</index></name><operator pos:start="293:77" pos:end="293:77">)</operator> <operator pos:start="293:79" pos:end="293:80">&gt;&gt;</operator> <literal type="number" pos:start="293:82" pos:end="293:82">3</literal><operator pos:start="293:83" pos:end="293:83">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="297:25" pos:end="297:89"><expr pos:start="297:25" pos:end="297:88"><name pos:start="297:25" pos:end="297:67"><name pos:start="297:25" pos:end="297:25">s</name><operator pos:start="297:26" pos:end="297:27">-&gt;</operator><name pos:start="297:28" pos:end="297:34">hevcdsp</name><operator pos:start="297:35" pos:end="297:35">.</operator><name pos:start="297:36" pos:end="297:48">transform_add</name><index pos:start="297:49" pos:end="297:67">[<expr pos:start="297:50" pos:end="297:66"><name pos:start="297:50" pos:end="297:64">log2_trafo_size</name><operator pos:start="297:65" pos:end="297:65">-</operator><literal type="number" pos:start="297:66" pos:end="297:66">2</literal></expr>]</index></name><operator pos:start="297:68" pos:end="297:68">(</operator><name pos:start="297:69" pos:end="297:71">dst</name><operator pos:start="297:72" pos:end="297:72">,</operator> <name pos:start="297:74" pos:end="297:79">coeffs</name><operator pos:start="297:80" pos:end="297:80">,</operator> <name pos:start="297:82" pos:end="297:87">stride</name><operator pos:start="297:88" pos:end="297:88">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="303:11" pos:end="349:9">else if <condition pos:start="303:19" pos:end="303:32">(<expr pos:start="303:20" pos:end="303:31"><name pos:start="303:20" pos:end="303:26">blk_idx</name> <operator pos:start="303:28" pos:end="303:29">==</operator> <literal type="number" pos:start="303:31" pos:end="303:31">3</literal></expr>)</condition> <block pos:start="303:34" pos:end="349:9">{<block_content pos:start="305:13" pos:end="347:13">

            <decl_stmt pos:start="305:13" pos:end="305:58"><decl pos:start="305:13" pos:end="305:57"><type pos:start="305:13" pos:end="305:15"><name pos:start="305:13" pos:end="305:15">int</name></type> <name pos:start="305:17" pos:end="305:28">trafo_size_h</name> <init pos:start="305:30" pos:end="305:57">= <expr pos:start="305:32" pos:end="305:57"><literal type="number" pos:start="305:32" pos:end="305:32">1</literal> <operator pos:start="305:34" pos:end="305:35">&lt;&lt;</operator> <operator pos:start="305:37" pos:end="305:37">(</operator><name pos:start="305:38" pos:end="305:52">log2_trafo_size</name> <operator pos:start="305:54" pos:end="305:54">+</operator> <literal type="number" pos:start="305:56" pos:end="305:56">1</literal><operator pos:start="305:57" pos:end="305:57">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="307:13" pos:end="307:74"><decl pos:start="307:13" pos:end="307:73"><type pos:start="307:13" pos:end="307:15"><name pos:start="307:13" pos:end="307:15">int</name></type> <name pos:start="307:17" pos:end="307:28">trafo_size_v</name> <init pos:start="307:30" pos:end="307:73">= <expr pos:start="307:32" pos:end="307:73"><literal type="number" pos:start="307:32" pos:end="307:32">1</literal> <operator pos:start="307:34" pos:end="307:35">&lt;&lt;</operator> <operator pos:start="307:37" pos:end="307:37">(</operator><name pos:start="307:38" pos:end="307:52">log2_trafo_size</name> <operator pos:start="307:54" pos:end="307:54">+</operator> <name pos:start="307:56" pos:end="307:72"><name pos:start="307:56" pos:end="307:56">s</name><operator pos:start="307:57" pos:end="307:58">-&gt;</operator><name pos:start="307:59" pos:end="307:61">sps</name><operator pos:start="307:62" pos:end="307:63">-&gt;</operator><name pos:start="307:64" pos:end="307:69">vshift</name><index pos:start="307:70" pos:end="307:72">[<expr pos:start="307:71" pos:end="307:71"><literal type="number" pos:start="307:71" pos:end="307:71">1</literal></expr>]</index></name><operator pos:start="307:73" pos:end="307:73">)</operator></expr></init></decl>;</decl_stmt>

            <for pos:start="309:13" pos:end="327:13">for <control pos:start="309:17" pos:end="309:74">(<init pos:start="309:18" pos:end="309:23"><expr pos:start="309:18" pos:end="309:22"><name pos:start="309:18" pos:end="309:18">i</name> <operator pos:start="309:20" pos:end="309:20">=</operator> <literal type="number" pos:start="309:22" pos:end="309:22">0</literal></expr>;</init> <condition pos:start="309:25" pos:end="309:69"><expr pos:start="309:25" pos:end="309:68"><name pos:start="309:25" pos:end="309:25">i</name> <operator pos:start="309:27" pos:end="309:27">&lt;</operator> <operator pos:start="309:29" pos:end="309:29">(</operator><ternary pos:start="309:30" pos:end="309:67"><condition pos:start="309:30" pos:end="309:61"><expr pos:start="309:30" pos:end="309:59"><name pos:start="309:30" pos:end="309:54"><name pos:start="309:30" pos:end="309:30">s</name><operator pos:start="309:31" pos:end="309:32">-&gt;</operator><name pos:start="309:33" pos:end="309:35">sps</name><operator pos:start="309:36" pos:end="309:37">-&gt;</operator><name pos:start="309:38" pos:end="309:54">chroma_format_idc</name></name> <operator pos:start="309:56" pos:end="309:57">==</operator> <literal type="number" pos:start="309:59" pos:end="309:59">2</literal></expr> ?</condition><then pos:start="309:63" pos:end="309:63"> <expr pos:start="309:63" pos:end="309:63"><literal type="number" pos:start="309:63" pos:end="309:63">2</literal></expr> </then><else pos:start="309:65" pos:end="309:67">: <expr pos:start="309:67" pos:end="309:67"><literal type="number" pos:start="309:67" pos:end="309:67">1</literal></expr></else></ternary><operator pos:start="309:68" pos:end="309:68">)</operator></expr>;</condition> <incr pos:start="309:71" pos:end="309:73"><expr pos:start="309:71" pos:end="309:73"><name pos:start="309:71" pos:end="309:71">i</name><operator pos:start="309:72" pos:end="309:73">++</operator></expr></incr>)</control> <block pos:start="309:76" pos:end="327:13">{<block_content pos:start="311:17" pos:end="325:80">

                <if_stmt pos:start="311:17" pos:end="319:17"><if pos:start="311:17" pos:end="319:17">if <condition pos:start="311:20" pos:end="311:51">(<expr pos:start="311:21" pos:end="311:50"><name pos:start="311:21" pos:end="311:36"><name pos:start="311:21" pos:end="311:22">lc</name><operator pos:start="311:23" pos:end="311:24">-&gt;</operator><name pos:start="311:25" pos:end="311:26">cu</name><operator pos:start="311:27" pos:end="311:27">.</operator><name pos:start="311:28" pos:end="311:36">pred_mode</name></name> <operator pos:start="311:38" pos:end="311:39">==</operator> <name pos:start="311:41" pos:end="311:50">MODE_INTRA</name></expr>)</condition> <block pos:start="311:53" pos:end="319:17">{<block_content pos:start="313:21" pos:end="317:104">

                    <expr_stmt pos:start="313:21" pos:end="315:80"><expr pos:start="313:21" pos:end="315:79"><call pos:start="313:21" pos:end="315:79"><name pos:start="313:21" pos:end="313:51">ff_hevc_set_neighbour_available</name><argument_list pos:start="313:52" pos:end="315:79">(<argument pos:start="313:53" pos:end="313:53"><expr pos:start="313:53" pos:end="313:53"><name pos:start="313:53" pos:end="313:53">s</name></expr></argument>, <argument pos:start="313:56" pos:end="313:60"><expr pos:start="313:56" pos:end="313:60"><name pos:start="313:56" pos:end="313:60">xBase</name></expr></argument>, <argument pos:start="313:63" pos:end="313:92"><expr pos:start="313:63" pos:end="313:92"><name pos:start="313:63" pos:end="313:67">yBase</name> <operator pos:start="313:69" pos:end="313:69">+</operator> <operator pos:start="313:71" pos:end="313:71">(</operator><name pos:start="313:72" pos:end="313:72">i</name> <operator pos:start="313:74" pos:end="313:75">&lt;&lt;</operator> <name pos:start="313:77" pos:end="313:91">log2_trafo_size</name><operator pos:start="313:92" pos:end="313:92">)</operator></expr></argument>,

                                                    <argument pos:start="315:53" pos:end="315:64"><expr pos:start="315:53" pos:end="315:64"><name pos:start="315:53" pos:end="315:64">trafo_size_h</name></expr></argument>, <argument pos:start="315:67" pos:end="315:78"><expr pos:start="315:67" pos:end="315:78"><name pos:start="315:67" pos:end="315:78">trafo_size_v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="317:21" pos:end="317:104"><expr pos:start="317:21" pos:end="317:103"><name pos:start="317:21" pos:end="317:58"><name pos:start="317:21" pos:end="317:21">s</name><operator pos:start="317:22" pos:end="317:23">-&gt;</operator><name pos:start="317:24" pos:end="317:26">hpc</name><operator pos:start="317:27" pos:end="317:27">.</operator><name pos:start="317:28" pos:end="317:37">intra_pred</name><index pos:start="317:38" pos:end="317:58">[<expr pos:start="317:39" pos:end="317:57"><name pos:start="317:39" pos:end="317:53">log2_trafo_size</name> <operator pos:start="317:55" pos:end="317:55">-</operator> <literal type="number" pos:start="317:57" pos:end="317:57">2</literal></expr>]</index></name><operator pos:start="317:59" pos:end="317:59">(</operator><name pos:start="317:60" pos:end="317:60">s</name><operator pos:start="317:61" pos:end="317:61">,</operator> <name pos:start="317:63" pos:end="317:67">xBase</name><operator pos:start="317:68" pos:end="317:68">,</operator> <name pos:start="317:70" pos:end="317:74">yBase</name> <operator pos:start="317:76" pos:end="317:76">+</operator> <operator pos:start="317:78" pos:end="317:78">(</operator><name pos:start="317:79" pos:end="317:79">i</name> <operator pos:start="317:81" pos:end="317:82">&lt;&lt;</operator> <name pos:start="317:84" pos:end="317:98">log2_trafo_size</name><operator pos:start="317:99" pos:end="317:99">)</operator><operator pos:start="317:100" pos:end="317:100">,</operator> <literal type="number" pos:start="317:102" pos:end="317:102">1</literal><operator pos:start="317:103" pos:end="317:103">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="321:17" pos:end="325:80"><if pos:start="321:17" pos:end="325:80">if <condition pos:start="321:20" pos:end="321:30">(<expr pos:start="321:21" pos:end="321:29"><name pos:start="321:21" pos:end="321:29"><name pos:start="321:21" pos:end="321:26">cbf_cb</name><index pos:start="321:27" pos:end="321:29">[<expr pos:start="321:28" pos:end="321:28"><name pos:start="321:28" pos:end="321:28">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="323:21" pos:end="325:80"><block_content pos:start="323:21" pos:end="325:80">

                    <expr_stmt pos:start="323:21" pos:end="325:80"><expr pos:start="323:21" pos:end="325:79"><call pos:start="323:21" pos:end="325:79"><name pos:start="323:21" pos:end="323:47">ff_hevc_hls_residual_coding</name><argument_list pos:start="323:48" pos:end="325:79">(<argument pos:start="323:49" pos:end="323:49"><expr pos:start="323:49" pos:end="323:49"><name pos:start="323:49" pos:end="323:49">s</name></expr></argument>, <argument pos:start="323:52" pos:end="323:56"><expr pos:start="323:52" pos:end="323:56"><name pos:start="323:52" pos:end="323:56">xBase</name></expr></argument>, <argument pos:start="323:59" pos:end="323:88"><expr pos:start="323:59" pos:end="323:88"><name pos:start="323:59" pos:end="323:63">yBase</name> <operator pos:start="323:65" pos:end="323:65">+</operator> <operator pos:start="323:67" pos:end="323:67">(</operator><name pos:start="323:68" pos:end="323:68">i</name> <operator pos:start="323:70" pos:end="323:71">&lt;&lt;</operator> <name pos:start="323:73" pos:end="323:87">log2_trafo_size</name><operator pos:start="323:88" pos:end="323:88">)</operator></expr></argument>,

                                                <argument pos:start="325:49" pos:end="325:63"><expr pos:start="325:49" pos:end="325:63"><name pos:start="325:49" pos:end="325:63">log2_trafo_size</name></expr></argument>, <argument pos:start="325:66" pos:end="325:75"><expr pos:start="325:66" pos:end="325:75"><name pos:start="325:66" pos:end="325:75">scan_idx_c</name></expr></argument>, <argument pos:start="325:78" pos:end="325:78"><expr pos:start="325:78" pos:end="325:78"><literal type="number" pos:start="325:78" pos:end="325:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <for pos:start="329:13" pos:end="347:13">for <control pos:start="329:17" pos:end="329:74">(<init pos:start="329:18" pos:end="329:23"><expr pos:start="329:18" pos:end="329:22"><name pos:start="329:18" pos:end="329:18">i</name> <operator pos:start="329:20" pos:end="329:20">=</operator> <literal type="number" pos:start="329:22" pos:end="329:22">0</literal></expr>;</init> <condition pos:start="329:25" pos:end="329:69"><expr pos:start="329:25" pos:end="329:68"><name pos:start="329:25" pos:end="329:25">i</name> <operator pos:start="329:27" pos:end="329:27">&lt;</operator> <operator pos:start="329:29" pos:end="329:29">(</operator><ternary pos:start="329:30" pos:end="329:67"><condition pos:start="329:30" pos:end="329:61"><expr pos:start="329:30" pos:end="329:59"><name pos:start="329:30" pos:end="329:54"><name pos:start="329:30" pos:end="329:30">s</name><operator pos:start="329:31" pos:end="329:32">-&gt;</operator><name pos:start="329:33" pos:end="329:35">sps</name><operator pos:start="329:36" pos:end="329:37">-&gt;</operator><name pos:start="329:38" pos:end="329:54">chroma_format_idc</name></name> <operator pos:start="329:56" pos:end="329:57">==</operator> <literal type="number" pos:start="329:59" pos:end="329:59">2</literal></expr> ?</condition><then pos:start="329:63" pos:end="329:63"> <expr pos:start="329:63" pos:end="329:63"><literal type="number" pos:start="329:63" pos:end="329:63">2</literal></expr> </then><else pos:start="329:65" pos:end="329:67">: <expr pos:start="329:67" pos:end="329:67"><literal type="number" pos:start="329:67" pos:end="329:67">1</literal></expr></else></ternary><operator pos:start="329:68" pos:end="329:68">)</operator></expr>;</condition> <incr pos:start="329:71" pos:end="329:73"><expr pos:start="329:71" pos:end="329:73"><name pos:start="329:71" pos:end="329:71">i</name><operator pos:start="329:72" pos:end="329:73">++</operator></expr></incr>)</control> <block pos:start="329:76" pos:end="347:13">{<block_content pos:start="331:17" pos:end="345:80">

                <if_stmt pos:start="331:17" pos:end="339:17"><if pos:start="331:17" pos:end="339:17">if <condition pos:start="331:20" pos:end="331:51">(<expr pos:start="331:21" pos:end="331:50"><name pos:start="331:21" pos:end="331:36"><name pos:start="331:21" pos:end="331:22">lc</name><operator pos:start="331:23" pos:end="331:24">-&gt;</operator><name pos:start="331:25" pos:end="331:26">cu</name><operator pos:start="331:27" pos:end="331:27">.</operator><name pos:start="331:28" pos:end="331:36">pred_mode</name></name> <operator pos:start="331:38" pos:end="331:39">==</operator> <name pos:start="331:41" pos:end="331:50">MODE_INTRA</name></expr>)</condition> <block pos:start="331:53" pos:end="339:17">{<block_content pos:start="333:21" pos:end="337:104">

                    <expr_stmt pos:start="333:21" pos:end="335:76"><expr pos:start="333:21" pos:end="335:75"><call pos:start="333:21" pos:end="335:75"><name pos:start="333:21" pos:end="333:51">ff_hevc_set_neighbour_available</name><argument_list pos:start="333:52" pos:end="335:75">(<argument pos:start="333:53" pos:end="333:53"><expr pos:start="333:53" pos:end="333:53"><name pos:start="333:53" pos:end="333:53">s</name></expr></argument>, <argument pos:start="333:56" pos:end="333:60"><expr pos:start="333:56" pos:end="333:60"><name pos:start="333:56" pos:end="333:60">xBase</name></expr></argument>, <argument pos:start="333:63" pos:end="333:92"><expr pos:start="333:63" pos:end="333:92"><name pos:start="333:63" pos:end="333:67">yBase</name> <operator pos:start="333:69" pos:end="333:69">+</operator> <operator pos:start="333:71" pos:end="333:71">(</operator><name pos:start="333:72" pos:end="333:72">i</name> <operator pos:start="333:74" pos:end="333:75">&lt;&lt;</operator> <name pos:start="333:77" pos:end="333:91">log2_trafo_size</name><operator pos:start="333:92" pos:end="333:92">)</operator></expr></argument>,

                                                <argument pos:start="335:49" pos:end="335:60"><expr pos:start="335:49" pos:end="335:60"><name pos:start="335:49" pos:end="335:60">trafo_size_h</name></expr></argument>, <argument pos:start="335:63" pos:end="335:74"><expr pos:start="335:63" pos:end="335:74"><name pos:start="335:63" pos:end="335:74">trafo_size_v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="337:21" pos:end="337:104"><expr pos:start="337:21" pos:end="337:103"><name pos:start="337:21" pos:end="337:58"><name pos:start="337:21" pos:end="337:21">s</name><operator pos:start="337:22" pos:end="337:23">-&gt;</operator><name pos:start="337:24" pos:end="337:26">hpc</name><operator pos:start="337:27" pos:end="337:27">.</operator><name pos:start="337:28" pos:end="337:37">intra_pred</name><index pos:start="337:38" pos:end="337:58">[<expr pos:start="337:39" pos:end="337:57"><name pos:start="337:39" pos:end="337:53">log2_trafo_size</name> <operator pos:start="337:55" pos:end="337:55">-</operator> <literal type="number" pos:start="337:57" pos:end="337:57">2</literal></expr>]</index></name><operator pos:start="337:59" pos:end="337:59">(</operator><name pos:start="337:60" pos:end="337:60">s</name><operator pos:start="337:61" pos:end="337:61">,</operator> <name pos:start="337:63" pos:end="337:67">xBase</name><operator pos:start="337:68" pos:end="337:68">,</operator> <name pos:start="337:70" pos:end="337:74">yBase</name> <operator pos:start="337:76" pos:end="337:76">+</operator> <operator pos:start="337:78" pos:end="337:78">(</operator><name pos:start="337:79" pos:end="337:79">i</name> <operator pos:start="337:81" pos:end="337:82">&lt;&lt;</operator> <name pos:start="337:84" pos:end="337:98">log2_trafo_size</name><operator pos:start="337:99" pos:end="337:99">)</operator><operator pos:start="337:100" pos:end="337:100">,</operator> <literal type="number" pos:start="337:102" pos:end="337:102">2</literal><operator pos:start="337:103" pos:end="337:103">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="341:17" pos:end="345:80"><if pos:start="341:17" pos:end="345:80">if <condition pos:start="341:20" pos:end="341:30">(<expr pos:start="341:21" pos:end="341:29"><name pos:start="341:21" pos:end="341:29"><name pos:start="341:21" pos:end="341:26">cbf_cr</name><index pos:start="341:27" pos:end="341:29">[<expr pos:start="341:28" pos:end="341:28"><name pos:start="341:28" pos:end="341:28">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="343:21" pos:end="345:80"><block_content pos:start="343:21" pos:end="345:80">

                    <expr_stmt pos:start="343:21" pos:end="345:80"><expr pos:start="343:21" pos:end="345:79"><call pos:start="343:21" pos:end="345:79"><name pos:start="343:21" pos:end="343:47">ff_hevc_hls_residual_coding</name><argument_list pos:start="343:48" pos:end="345:79">(<argument pos:start="343:49" pos:end="343:49"><expr pos:start="343:49" pos:end="343:49"><name pos:start="343:49" pos:end="343:49">s</name></expr></argument>, <argument pos:start="343:52" pos:end="343:56"><expr pos:start="343:52" pos:end="343:56"><name pos:start="343:52" pos:end="343:56">xBase</name></expr></argument>, <argument pos:start="343:59" pos:end="343:88"><expr pos:start="343:59" pos:end="343:88"><name pos:start="343:59" pos:end="343:63">yBase</name> <operator pos:start="343:65" pos:end="343:65">+</operator> <operator pos:start="343:67" pos:end="343:67">(</operator><name pos:start="343:68" pos:end="343:68">i</name> <operator pos:start="343:70" pos:end="343:71">&lt;&lt;</operator> <name pos:start="343:73" pos:end="343:87">log2_trafo_size</name><operator pos:start="343:88" pos:end="343:88">)</operator></expr></argument>,

                                                <argument pos:start="345:49" pos:end="345:63"><expr pos:start="345:49" pos:end="345:63"><name pos:start="345:49" pos:end="345:63">log2_trafo_size</name></expr></argument>, <argument pos:start="345:66" pos:end="345:75"><expr pos:start="345:66" pos:end="345:75"><name pos:start="345:66" pos:end="345:75">scan_idx_c</name></expr></argument>, <argument pos:start="345:78" pos:end="345:78"><expr pos:start="345:78" pos:end="345:78"><literal type="number" pos:start="345:78" pos:end="345:78">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="351:7" pos:end="405:5">else if <condition pos:start="351:15" pos:end="351:46">(<expr pos:start="351:16" pos:end="351:45"><name pos:start="351:16" pos:end="351:31"><name pos:start="351:16" pos:end="351:17">lc</name><operator pos:start="351:18" pos:end="351:19">-&gt;</operator><name pos:start="351:20" pos:end="351:21">cu</name><operator pos:start="351:22" pos:end="351:22">.</operator><name pos:start="351:23" pos:end="351:31">pred_mode</name></name> <operator pos:start="351:33" pos:end="351:34">==</operator> <name pos:start="351:36" pos:end="351:45">MODE_INTRA</name></expr>)</condition> <block pos:start="351:48" pos:end="405:5">{<block_content pos:start="353:9" pos:end="403:9">

        <if_stmt pos:start="353:9" pos:end="403:9"><if pos:start="353:9" pos:end="377:9">if <condition pos:start="353:12" pos:end="353:66">(<expr pos:start="353:13" pos:end="353:65"><name pos:start="353:13" pos:end="353:27">log2_trafo_size</name> <operator pos:start="353:29" pos:end="353:29">&gt;</operator> <literal type="number" pos:start="353:31" pos:end="353:31">2</literal> <operator pos:start="353:33" pos:end="353:34">||</operator> <name pos:start="353:36" pos:end="353:60"><name pos:start="353:36" pos:end="353:36">s</name><operator pos:start="353:37" pos:end="353:38">-&gt;</operator><name pos:start="353:39" pos:end="353:41">sps</name><operator pos:start="353:42" pos:end="353:43">-&gt;</operator><name pos:start="353:44" pos:end="353:60">chroma_format_idc</name></name> <operator pos:start="353:62" pos:end="353:63">==</operator> <literal type="number" pos:start="353:65" pos:end="353:65">3</literal></expr>)</condition> <block pos:start="353:68" pos:end="377:9">{<block_content pos:start="355:13" pos:end="375:13">

            <decl_stmt pos:start="355:13" pos:end="355:76"><decl pos:start="355:13" pos:end="355:75"><type pos:start="355:13" pos:end="355:15"><name pos:start="355:13" pos:end="355:15">int</name></type> <name pos:start="355:17" pos:end="355:28">trafo_size_h</name> <init pos:start="355:30" pos:end="355:75">= <expr pos:start="355:32" pos:end="355:75"><literal type="number" pos:start="355:32" pos:end="355:32">1</literal> <operator pos:start="355:34" pos:end="355:35">&lt;&lt;</operator> <operator pos:start="355:37" pos:end="355:37">(</operator><name pos:start="355:38" pos:end="355:54">log2_trafo_size_c</name> <operator pos:start="355:56" pos:end="355:56">+</operator> <name pos:start="355:58" pos:end="355:74"><name pos:start="355:58" pos:end="355:58">s</name><operator pos:start="355:59" pos:end="355:60">-&gt;</operator><name pos:start="355:61" pos:end="355:63">sps</name><operator pos:start="355:64" pos:end="355:65">-&gt;</operator><name pos:start="355:66" pos:end="355:71">hshift</name><index pos:start="355:72" pos:end="355:74">[<expr pos:start="355:73" pos:end="355:73"><literal type="number" pos:start="355:73" pos:end="355:73">1</literal></expr>]</index></name><operator pos:start="355:75" pos:end="355:75">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="357:13" pos:end="357:76"><decl pos:start="357:13" pos:end="357:75"><type pos:start="357:13" pos:end="357:15"><name pos:start="357:13" pos:end="357:15">int</name></type> <name pos:start="357:17" pos:end="357:28">trafo_size_v</name> <init pos:start="357:30" pos:end="357:75">= <expr pos:start="357:32" pos:end="357:75"><literal type="number" pos:start="357:32" pos:end="357:32">1</literal> <operator pos:start="357:34" pos:end="357:35">&lt;&lt;</operator> <operator pos:start="357:37" pos:end="357:37">(</operator><name pos:start="357:38" pos:end="357:54">log2_trafo_size_c</name> <operator pos:start="357:56" pos:end="357:56">+</operator> <name pos:start="357:58" pos:end="357:74"><name pos:start="357:58" pos:end="357:58">s</name><operator pos:start="357:59" pos:end="357:60">-&gt;</operator><name pos:start="357:61" pos:end="357:63">sps</name><operator pos:start="357:64" pos:end="357:65">-&gt;</operator><name pos:start="357:66" pos:end="357:71">vshift</name><index pos:start="357:72" pos:end="357:74">[<expr pos:start="357:73" pos:end="357:73"><literal type="number" pos:start="357:73" pos:end="357:73">1</literal></expr>]</index></name><operator pos:start="357:75" pos:end="357:75">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:83"><expr pos:start="359:13" pos:end="359:82"><call pos:start="359:13" pos:end="359:82"><name pos:start="359:13" pos:end="359:43">ff_hevc_set_neighbour_available</name><argument_list pos:start="359:44" pos:end="359:82">(<argument pos:start="359:45" pos:end="359:45"><expr pos:start="359:45" pos:end="359:45"><name pos:start="359:45" pos:end="359:45">s</name></expr></argument>, <argument pos:start="359:48" pos:end="359:49"><expr pos:start="359:48" pos:end="359:49"><name pos:start="359:48" pos:end="359:49">x0</name></expr></argument>, <argument pos:start="359:52" pos:end="359:53"><expr pos:start="359:52" pos:end="359:53"><name pos:start="359:52" pos:end="359:53">y0</name></expr></argument>, <argument pos:start="359:56" pos:end="359:67"><expr pos:start="359:56" pos:end="359:67"><name pos:start="359:56" pos:end="359:67">trafo_size_h</name></expr></argument>, <argument pos:start="359:70" pos:end="359:81"><expr pos:start="359:70" pos:end="359:81"><name pos:start="359:70" pos:end="359:81">trafo_size_v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:67"><expr pos:start="361:13" pos:end="361:66"><name pos:start="361:13" pos:end="361:52"><name pos:start="361:13" pos:end="361:13">s</name><operator pos:start="361:14" pos:end="361:15">-&gt;</operator><name pos:start="361:16" pos:end="361:18">hpc</name><operator pos:start="361:19" pos:end="361:19">.</operator><name pos:start="361:20" pos:end="361:29">intra_pred</name><index pos:start="361:30" pos:end="361:52">[<expr pos:start="361:31" pos:end="361:51"><name pos:start="361:31" pos:end="361:47">log2_trafo_size_c</name> <operator pos:start="361:49" pos:end="361:49">-</operator> <literal type="number" pos:start="361:51" pos:end="361:51">2</literal></expr>]</index></name><operator pos:start="361:53" pos:end="361:53">(</operator><name pos:start="361:54" pos:end="361:54">s</name><operator pos:start="361:55" pos:end="361:55">,</operator> <name pos:start="361:57" pos:end="361:58">x0</name><operator pos:start="361:59" pos:end="361:59">,</operator> <name pos:start="361:61" pos:end="361:62">y0</name><operator pos:start="361:63" pos:end="361:63">,</operator> <literal type="number" pos:start="361:65" pos:end="361:65">1</literal><operator pos:start="361:66" pos:end="361:66">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:67"><expr pos:start="363:13" pos:end="363:66"><name pos:start="363:13" pos:end="363:52"><name pos:start="363:13" pos:end="363:13">s</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:18">hpc</name><operator pos:start="363:19" pos:end="363:19">.</operator><name pos:start="363:20" pos:end="363:29">intra_pred</name><index pos:start="363:30" pos:end="363:52">[<expr pos:start="363:31" pos:end="363:51"><name pos:start="363:31" pos:end="363:47">log2_trafo_size_c</name> <operator pos:start="363:49" pos:end="363:49">-</operator> <literal type="number" pos:start="363:51" pos:end="363:51">2</literal></expr>]</index></name><operator pos:start="363:53" pos:end="363:53">(</operator><name pos:start="363:54" pos:end="363:54">s</name><operator pos:start="363:55" pos:end="363:55">,</operator> <name pos:start="363:57" pos:end="363:58">x0</name><operator pos:start="363:59" pos:end="363:59">,</operator> <name pos:start="363:61" pos:end="363:62">y0</name><operator pos:start="363:63" pos:end="363:63">,</operator> <literal type="number" pos:start="363:65" pos:end="363:65">2</literal><operator pos:start="363:66" pos:end="363:66">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="365:13" pos:end="375:13"><if pos:start="365:13" pos:end="375:13">if <condition pos:start="365:16" pos:end="365:47">(<expr pos:start="365:17" pos:end="365:46"><name pos:start="365:17" pos:end="365:41"><name pos:start="365:17" pos:end="365:17">s</name><operator pos:start="365:18" pos:end="365:19">-&gt;</operator><name pos:start="365:20" pos:end="365:22">sps</name><operator pos:start="365:23" pos:end="365:24">-&gt;</operator><name pos:start="365:25" pos:end="365:41">chroma_format_idc</name></name> <operator pos:start="365:43" pos:end="365:44">==</operator> <literal type="number" pos:start="365:46" pos:end="365:46">2</literal></expr>)</condition> <block pos:start="365:49" pos:end="375:13">{<block_content pos:start="367:17" pos:end="373:98">

                <expr_stmt pos:start="367:17" pos:end="369:76"><expr pos:start="367:17" pos:end="369:75"><call pos:start="367:17" pos:end="369:75"><name pos:start="367:17" pos:end="367:47">ff_hevc_set_neighbour_available</name><argument_list pos:start="367:48" pos:end="369:75">(<argument pos:start="367:49" pos:end="367:49"><expr pos:start="367:49" pos:end="367:49"><name pos:start="367:49" pos:end="367:49">s</name></expr></argument>, <argument pos:start="367:52" pos:end="367:53"><expr pos:start="367:52" pos:end="367:53"><name pos:start="367:52" pos:end="367:53">x0</name></expr></argument>, <argument pos:start="367:56" pos:end="367:84"><expr pos:start="367:56" pos:end="367:84"><name pos:start="367:56" pos:end="367:57">y0</name> <operator pos:start="367:59" pos:end="367:59">+</operator> <operator pos:start="367:61" pos:end="367:61">(</operator><literal type="number" pos:start="367:62" pos:end="367:62">1</literal> <operator pos:start="367:64" pos:end="367:65">&lt;&lt;</operator> <name pos:start="367:67" pos:end="367:83">log2_trafo_size_c</name><operator pos:start="367:84" pos:end="367:84">)</operator></expr></argument>,

                                                <argument pos:start="369:49" pos:end="369:60"><expr pos:start="369:49" pos:end="369:60"><name pos:start="369:49" pos:end="369:60">trafo_size_h</name></expr></argument>, <argument pos:start="369:63" pos:end="369:74"><expr pos:start="369:63" pos:end="369:74"><name pos:start="369:63" pos:end="369:74">trafo_size_v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="371:17" pos:end="371:98"><expr pos:start="371:17" pos:end="371:97"><name pos:start="371:17" pos:end="371:56"><name pos:start="371:17" pos:end="371:17">s</name><operator pos:start="371:18" pos:end="371:19">-&gt;</operator><name pos:start="371:20" pos:end="371:22">hpc</name><operator pos:start="371:23" pos:end="371:23">.</operator><name pos:start="371:24" pos:end="371:33">intra_pred</name><index pos:start="371:34" pos:end="371:56">[<expr pos:start="371:35" pos:end="371:55"><name pos:start="371:35" pos:end="371:51">log2_trafo_size_c</name> <operator pos:start="371:53" pos:end="371:53">-</operator> <literal type="number" pos:start="371:55" pos:end="371:55">2</literal></expr>]</index></name><operator pos:start="371:57" pos:end="371:57">(</operator><name pos:start="371:58" pos:end="371:58">s</name><operator pos:start="371:59" pos:end="371:59">,</operator> <name pos:start="371:61" pos:end="371:62">x0</name><operator pos:start="371:63" pos:end="371:63">,</operator> <name pos:start="371:65" pos:end="371:66">y0</name> <operator pos:start="371:68" pos:end="371:68">+</operator> <operator pos:start="371:70" pos:end="371:70">(</operator><literal type="number" pos:start="371:71" pos:end="371:71">1</literal> <operator pos:start="371:73" pos:end="371:74">&lt;&lt;</operator> <name pos:start="371:76" pos:end="371:92">log2_trafo_size_c</name><operator pos:start="371:93" pos:end="371:93">)</operator><operator pos:start="371:94" pos:end="371:94">,</operator> <literal type="number" pos:start="371:96" pos:end="371:96">1</literal><operator pos:start="371:97" pos:end="371:97">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="373:17" pos:end="373:98"><expr pos:start="373:17" pos:end="373:97"><name pos:start="373:17" pos:end="373:56"><name pos:start="373:17" pos:end="373:17">s</name><operator pos:start="373:18" pos:end="373:19">-&gt;</operator><name pos:start="373:20" pos:end="373:22">hpc</name><operator pos:start="373:23" pos:end="373:23">.</operator><name pos:start="373:24" pos:end="373:33">intra_pred</name><index pos:start="373:34" pos:end="373:56">[<expr pos:start="373:35" pos:end="373:55"><name pos:start="373:35" pos:end="373:51">log2_trafo_size_c</name> <operator pos:start="373:53" pos:end="373:53">-</operator> <literal type="number" pos:start="373:55" pos:end="373:55">2</literal></expr>]</index></name><operator pos:start="373:57" pos:end="373:57">(</operator><name pos:start="373:58" pos:end="373:58">s</name><operator pos:start="373:59" pos:end="373:59">,</operator> <name pos:start="373:61" pos:end="373:62">x0</name><operator pos:start="373:63" pos:end="373:63">,</operator> <name pos:start="373:65" pos:end="373:66">y0</name> <operator pos:start="373:68" pos:end="373:68">+</operator> <operator pos:start="373:70" pos:end="373:70">(</operator><literal type="number" pos:start="373:71" pos:end="373:71">1</literal> <operator pos:start="373:73" pos:end="373:74">&lt;&lt;</operator> <name pos:start="373:76" pos:end="373:92">log2_trafo_size_c</name><operator pos:start="373:93" pos:end="373:93">)</operator><operator pos:start="373:94" pos:end="373:94">,</operator> <literal type="number" pos:start="373:96" pos:end="373:96">2</literal><operator pos:start="373:97" pos:end="373:97">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="377:11" pos:end="403:9">else if <condition pos:start="377:19" pos:end="377:32">(<expr pos:start="377:20" pos:end="377:31"><name pos:start="377:20" pos:end="377:26">blk_idx</name> <operator pos:start="377:28" pos:end="377:29">==</operator> <literal type="number" pos:start="377:31" pos:end="377:31">3</literal></expr>)</condition> <block pos:start="377:34" pos:end="403:9">{<block_content pos:start="379:13" pos:end="401:13">

            <decl_stmt pos:start="379:13" pos:end="379:58"><decl pos:start="379:13" pos:end="379:57"><type pos:start="379:13" pos:end="379:15"><name pos:start="379:13" pos:end="379:15">int</name></type> <name pos:start="379:17" pos:end="379:28">trafo_size_h</name> <init pos:start="379:30" pos:end="379:57">= <expr pos:start="379:32" pos:end="379:57"><literal type="number" pos:start="379:32" pos:end="379:32">1</literal> <operator pos:start="379:34" pos:end="379:35">&lt;&lt;</operator> <operator pos:start="379:37" pos:end="379:37">(</operator><name pos:start="379:38" pos:end="379:52">log2_trafo_size</name> <operator pos:start="379:54" pos:end="379:54">+</operator> <literal type="number" pos:start="379:56" pos:end="379:56">1</literal><operator pos:start="379:57" pos:end="379:57">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="381:13" pos:end="381:74"><decl pos:start="381:13" pos:end="381:73"><type pos:start="381:13" pos:end="381:15"><name pos:start="381:13" pos:end="381:15">int</name></type> <name pos:start="381:17" pos:end="381:28">trafo_size_v</name> <init pos:start="381:30" pos:end="381:73">= <expr pos:start="381:32" pos:end="381:73"><literal type="number" pos:start="381:32" pos:end="381:32">1</literal> <operator pos:start="381:34" pos:end="381:35">&lt;&lt;</operator> <operator pos:start="381:37" pos:end="381:37">(</operator><name pos:start="381:38" pos:end="381:52">log2_trafo_size</name> <operator pos:start="381:54" pos:end="381:54">+</operator> <name pos:start="381:56" pos:end="381:72"><name pos:start="381:56" pos:end="381:56">s</name><operator pos:start="381:57" pos:end="381:58">-&gt;</operator><name pos:start="381:59" pos:end="381:61">sps</name><operator pos:start="381:62" pos:end="381:63">-&gt;</operator><name pos:start="381:64" pos:end="381:69">vshift</name><index pos:start="381:70" pos:end="381:72">[<expr pos:start="381:71" pos:end="381:71"><literal type="number" pos:start="381:71" pos:end="381:71">1</literal></expr>]</index></name><operator pos:start="381:73" pos:end="381:73">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="383:13" pos:end="385:72"><expr pos:start="383:13" pos:end="385:71"><call pos:start="383:13" pos:end="385:71"><name pos:start="383:13" pos:end="383:43">ff_hevc_set_neighbour_available</name><argument_list pos:start="383:44" pos:end="385:71">(<argument pos:start="383:45" pos:end="383:45"><expr pos:start="383:45" pos:end="383:45"><name pos:start="383:45" pos:end="383:45">s</name></expr></argument>, <argument pos:start="383:48" pos:end="383:52"><expr pos:start="383:48" pos:end="383:52"><name pos:start="383:48" pos:end="383:52">xBase</name></expr></argument>, <argument pos:start="383:55" pos:end="383:59"><expr pos:start="383:55" pos:end="383:59"><name pos:start="383:55" pos:end="383:59">yBase</name></expr></argument>,

                                            <argument pos:start="385:45" pos:end="385:56"><expr pos:start="385:45" pos:end="385:56"><name pos:start="385:45" pos:end="385:56">trafo_size_h</name></expr></argument>, <argument pos:start="385:59" pos:end="385:70"><expr pos:start="385:59" pos:end="385:70"><name pos:start="385:59" pos:end="385:70">trafo_size_v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="387:13" pos:end="387:71"><expr pos:start="387:13" pos:end="387:70"><name pos:start="387:13" pos:end="387:50"><name pos:start="387:13" pos:end="387:13">s</name><operator pos:start="387:14" pos:end="387:15">-&gt;</operator><name pos:start="387:16" pos:end="387:18">hpc</name><operator pos:start="387:19" pos:end="387:19">.</operator><name pos:start="387:20" pos:end="387:29">intra_pred</name><index pos:start="387:30" pos:end="387:50">[<expr pos:start="387:31" pos:end="387:49"><name pos:start="387:31" pos:end="387:45">log2_trafo_size</name> <operator pos:start="387:47" pos:end="387:47">-</operator> <literal type="number" pos:start="387:49" pos:end="387:49">2</literal></expr>]</index></name><operator pos:start="387:51" pos:end="387:51">(</operator><name pos:start="387:52" pos:end="387:52">s</name><operator pos:start="387:53" pos:end="387:53">,</operator> <name pos:start="387:55" pos:end="387:59">xBase</name><operator pos:start="387:60" pos:end="387:60">,</operator> <name pos:start="387:62" pos:end="387:66">yBase</name><operator pos:start="387:67" pos:end="387:67">,</operator> <literal type="number" pos:start="387:69" pos:end="387:69">1</literal><operator pos:start="387:70" pos:end="387:70">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="389:13" pos:end="389:71"><expr pos:start="389:13" pos:end="389:70"><name pos:start="389:13" pos:end="389:50"><name pos:start="389:13" pos:end="389:13">s</name><operator pos:start="389:14" pos:end="389:15">-&gt;</operator><name pos:start="389:16" pos:end="389:18">hpc</name><operator pos:start="389:19" pos:end="389:19">.</operator><name pos:start="389:20" pos:end="389:29">intra_pred</name><index pos:start="389:30" pos:end="389:50">[<expr pos:start="389:31" pos:end="389:49"><name pos:start="389:31" pos:end="389:45">log2_trafo_size</name> <operator pos:start="389:47" pos:end="389:47">-</operator> <literal type="number" pos:start="389:49" pos:end="389:49">2</literal></expr>]</index></name><operator pos:start="389:51" pos:end="389:51">(</operator><name pos:start="389:52" pos:end="389:52">s</name><operator pos:start="389:53" pos:end="389:53">,</operator> <name pos:start="389:55" pos:end="389:59">xBase</name><operator pos:start="389:60" pos:end="389:60">,</operator> <name pos:start="389:62" pos:end="389:66">yBase</name><operator pos:start="389:67" pos:end="389:67">,</operator> <literal type="number" pos:start="389:69" pos:end="389:69">2</literal><operator pos:start="389:70" pos:end="389:70">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="391:13" pos:end="401:13"><if pos:start="391:13" pos:end="401:13">if <condition pos:start="391:16" pos:end="391:47">(<expr pos:start="391:17" pos:end="391:46"><name pos:start="391:17" pos:end="391:41"><name pos:start="391:17" pos:end="391:17">s</name><operator pos:start="391:18" pos:end="391:19">-&gt;</operator><name pos:start="391:20" pos:end="391:22">sps</name><operator pos:start="391:23" pos:end="391:24">-&gt;</operator><name pos:start="391:25" pos:end="391:41">chroma_format_idc</name></name> <operator pos:start="391:43" pos:end="391:44">==</operator> <literal type="number" pos:start="391:46" pos:end="391:46">2</literal></expr>)</condition> <block pos:start="391:49" pos:end="401:13">{<block_content pos:start="393:17" pos:end="399:102">

                <expr_stmt pos:start="393:17" pos:end="395:76"><expr pos:start="393:17" pos:end="395:75"><call pos:start="393:17" pos:end="395:75"><name pos:start="393:17" pos:end="393:47">ff_hevc_set_neighbour_available</name><argument_list pos:start="393:48" pos:end="395:75">(<argument pos:start="393:49" pos:end="393:49"><expr pos:start="393:49" pos:end="393:49"><name pos:start="393:49" pos:end="393:49">s</name></expr></argument>, <argument pos:start="393:52" pos:end="393:56"><expr pos:start="393:52" pos:end="393:56"><name pos:start="393:52" pos:end="393:56">xBase</name></expr></argument>, <argument pos:start="393:59" pos:end="393:90"><expr pos:start="393:59" pos:end="393:90"><name pos:start="393:59" pos:end="393:63">yBase</name> <operator pos:start="393:65" pos:end="393:65">+</operator> <operator pos:start="393:67" pos:end="393:67">(</operator><literal type="number" pos:start="393:68" pos:end="393:68">1</literal> <operator pos:start="393:70" pos:end="393:71">&lt;&lt;</operator> <operator pos:start="393:73" pos:end="393:73">(</operator><name pos:start="393:74" pos:end="393:88">log2_trafo_size</name><operator pos:start="393:89" pos:end="393:89">)</operator><operator pos:start="393:90" pos:end="393:90">)</operator></expr></argument>,

                                                <argument pos:start="395:49" pos:end="395:60"><expr pos:start="395:49" pos:end="395:60"><name pos:start="395:49" pos:end="395:60">trafo_size_h</name></expr></argument>, <argument pos:start="395:63" pos:end="395:74"><expr pos:start="395:63" pos:end="395:74"><name pos:start="395:63" pos:end="395:74">trafo_size_v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="397:17" pos:end="397:102"><expr pos:start="397:17" pos:end="397:101"><name pos:start="397:17" pos:end="397:54"><name pos:start="397:17" pos:end="397:17">s</name><operator pos:start="397:18" pos:end="397:19">-&gt;</operator><name pos:start="397:20" pos:end="397:22">hpc</name><operator pos:start="397:23" pos:end="397:23">.</operator><name pos:start="397:24" pos:end="397:33">intra_pred</name><index pos:start="397:34" pos:end="397:54">[<expr pos:start="397:35" pos:end="397:53"><name pos:start="397:35" pos:end="397:49">log2_trafo_size</name> <operator pos:start="397:51" pos:end="397:51">-</operator> <literal type="number" pos:start="397:53" pos:end="397:53">2</literal></expr>]</index></name><operator pos:start="397:55" pos:end="397:55">(</operator><name pos:start="397:56" pos:end="397:56">s</name><operator pos:start="397:57" pos:end="397:57">,</operator> <name pos:start="397:59" pos:end="397:63">xBase</name><operator pos:start="397:64" pos:end="397:64">,</operator> <name pos:start="397:66" pos:end="397:70">yBase</name> <operator pos:start="397:72" pos:end="397:72">+</operator> <operator pos:start="397:74" pos:end="397:74">(</operator><literal type="number" pos:start="397:75" pos:end="397:75">1</literal> <operator pos:start="397:77" pos:end="397:78">&lt;&lt;</operator> <operator pos:start="397:80" pos:end="397:80">(</operator><name pos:start="397:81" pos:end="397:95">log2_trafo_size</name><operator pos:start="397:96" pos:end="397:96">)</operator><operator pos:start="397:97" pos:end="397:97">)</operator><operator pos:start="397:98" pos:end="397:98">,</operator> <literal type="number" pos:start="397:100" pos:end="397:100">1</literal><operator pos:start="397:101" pos:end="397:101">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="399:17" pos:end="399:102"><expr pos:start="399:17" pos:end="399:101"><name pos:start="399:17" pos:end="399:54"><name pos:start="399:17" pos:end="399:17">s</name><operator pos:start="399:18" pos:end="399:19">-&gt;</operator><name pos:start="399:20" pos:end="399:22">hpc</name><operator pos:start="399:23" pos:end="399:23">.</operator><name pos:start="399:24" pos:end="399:33">intra_pred</name><index pos:start="399:34" pos:end="399:54">[<expr pos:start="399:35" pos:end="399:53"><name pos:start="399:35" pos:end="399:49">log2_trafo_size</name> <operator pos:start="399:51" pos:end="399:51">-</operator> <literal type="number" pos:start="399:53" pos:end="399:53">2</literal></expr>]</index></name><operator pos:start="399:55" pos:end="399:55">(</operator><name pos:start="399:56" pos:end="399:56">s</name><operator pos:start="399:57" pos:end="399:57">,</operator> <name pos:start="399:59" pos:end="399:63">xBase</name><operator pos:start="399:64" pos:end="399:64">,</operator> <name pos:start="399:66" pos:end="399:70">yBase</name> <operator pos:start="399:72" pos:end="399:72">+</operator> <operator pos:start="399:74" pos:end="399:74">(</operator><literal type="number" pos:start="399:75" pos:end="399:75">1</literal> <operator pos:start="399:77" pos:end="399:78">&lt;&lt;</operator> <operator pos:start="399:80" pos:end="399:80">(</operator><name pos:start="399:81" pos:end="399:95">log2_trafo_size</name><operator pos:start="399:96" pos:end="399:96">)</operator><operator pos:start="399:97" pos:end="399:97">)</operator><operator pos:start="399:98" pos:end="399:98">,</operator> <literal type="number" pos:start="399:100" pos:end="399:100">2</literal><operator pos:start="399:101" pos:end="399:101">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="409:5" pos:end="409:13">return <expr pos:start="409:12" pos:end="409:12"><literal type="number" pos:start="409:12" pos:end="409:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
