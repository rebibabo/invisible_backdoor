<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6119.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">ff_subblock_synthesis</name><parameter_list pos:start="1:27" pos:end="5:46">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:39">RA144Context</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">ractx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:72"><decl pos:start="1:49" pos:end="1:72"><type pos:start="1:49" pos:end="1:72"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:61">int16_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:72">lpc_coefs</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:38"><decl pos:start="3:28" pos:end="3:38"><type pos:start="3:28" pos:end="3:38"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:38">cba_idx</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:51"><decl pos:start="3:41" pos:end="3:51"><type pos:start="3:41" pos:end="3:51"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:51">cb1_idx</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:64"><decl pos:start="3:54" pos:end="3:64"><type pos:start="3:54" pos:end="3:64"><name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:64">cb2_idx</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:35"><decl pos:start="5:28" pos:end="5:35"><type pos:start="5:28" pos:end="5:35"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:35">gval</name></decl></parameter>, <parameter pos:start="5:38" pos:end="5:45"><decl pos:start="5:38" pos:end="5:45"><type pos:start="5:38" pos:end="5:45"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:45">gain</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="61:1">{<block_content pos:start="9:5" pos:end="59:89">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int16_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:18">block</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:9">m</name><index pos:start="11:10" pos:end="11:12">[<expr pos:start="11:11" pos:end="11:11"><literal type="number" pos:start="11:11" pos:end="11:11">3</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="27:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:15">cba_idx</name></expr>)</condition> <block pos:start="15:18" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:69">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:15">cba_idx</name> <operator pos:start="17:17" pos:end="17:18">+=</operator> <name pos:start="17:20" pos:end="17:28">BLOCKSIZE</name><operator pos:start="17:29" pos:end="17:29">/</operator><literal type="number" pos:start="17:30" pos:end="17:32">2</literal> <operator pos:start="17:32" pos:end="17:32">-</operator> <literal type="number" pos:start="17:34" pos:end="17:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:67"><expr pos:start="19:9" pos:end="19:66"><call pos:start="19:9" pos:end="19:66"><name pos:start="19:9" pos:end="19:23">ff_copy_and_dup</name><argument_list pos:start="19:24" pos:end="19:66">(<argument pos:start="19:25" pos:end="19:39"><expr pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:29">ractx</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:39">buffer_a</name></name></expr></argument>, <argument pos:start="19:42" pos:end="19:56"><expr pos:start="19:42" pos:end="19:56"><name pos:start="19:42" pos:end="19:56"><name pos:start="19:42" pos:end="19:46">ractx</name><operator pos:start="19:47" pos:end="19:48">-&gt;</operator><name pos:start="19:49" pos:end="19:56">adapt_cb</name></name></expr></argument>, <argument pos:start="19:59" pos:end="19:65"><expr pos:start="19:59" pos:end="19:65"><name pos:start="19:59" pos:end="19:65">cba_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:69"><expr pos:start="21:9" pos:end="21:68"><name pos:start="21:9" pos:end="21:12"><name pos:start="21:9" pos:end="21:9">m</name><index pos:start="21:10" pos:end="21:12">[<expr pos:start="21:11" pos:end="21:11"><literal type="number" pos:start="21:11" pos:end="21:11">0</literal></expr>]</index></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><call pos:start="21:17" pos:end="21:54"><name pos:start="21:17" pos:end="21:23">ff_irms</name><argument_list pos:start="21:24" pos:end="21:54">(<argument pos:start="21:25" pos:end="21:36"><expr pos:start="21:25" pos:end="21:36"><operator pos:start="21:25" pos:end="21:25">&amp;</operator><name pos:start="21:26" pos:end="21:36"><name pos:start="21:26" pos:end="21:30">ractx</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:36">adsp</name></name></expr></argument>, <argument pos:start="21:39" pos:end="21:53"><expr pos:start="21:39" pos:end="21:53"><name pos:start="21:39" pos:end="21:53"><name pos:start="21:39" pos:end="21:43">ractx</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:53">buffer_a</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:56" pos:end="21:56">*</operator> <name pos:start="21:58" pos:end="21:61">gval</name><operator pos:start="21:62" pos:end="21:62">)</operator> <operator pos:start="21:64" pos:end="21:65">&gt;&gt;</operator> <literal type="number" pos:start="21:67" pos:end="21:68">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="27:5">else <block pos:start="23:12" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:17">

        <expr_stmt pos:start="25:9" pos:end="25:17"><expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:12"><name pos:start="25:9" pos:end="25:9">m</name><index pos:start="25:10" pos:end="25:12">[<expr pos:start="25:11" pos:end="25:11"><literal type="number" pos:start="25:11" pos:end="25:11">0</literal></expr>]</index></name> <operator pos:start="25:14" pos:end="25:14">=</operator> <literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:8"><name pos:start="29:5" pos:end="29:5">m</name><index pos:start="29:6" pos:end="29:8">[<expr pos:start="29:7" pos:end="29:7"><literal type="number" pos:start="29:7" pos:end="29:7">1</literal></expr>]</index></name> <operator pos:start="29:10" pos:end="29:10">=</operator> <operator pos:start="29:12" pos:end="29:12">(</operator><name pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:23">ff_cb1_base</name><index pos:start="29:24" pos:end="29:32">[<expr pos:start="29:25" pos:end="29:31"><name pos:start="29:25" pos:end="29:31">cb1_idx</name></expr>]</index></name> <operator pos:start="29:34" pos:end="29:34">*</operator> <name pos:start="29:36" pos:end="29:39">gval</name><operator pos:start="29:40" pos:end="29:40">)</operator> <operator pos:start="29:42" pos:end="29:43">&gt;&gt;</operator> <literal type="number" pos:start="29:45" pos:end="29:45">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:8"><name pos:start="31:5" pos:end="31:5">m</name><index pos:start="31:6" pos:end="31:8">[<expr pos:start="31:7" pos:end="31:7"><literal type="number" pos:start="31:7" pos:end="31:7">2</literal></expr>]</index></name> <operator pos:start="31:10" pos:end="31:10">=</operator> <operator pos:start="31:12" pos:end="31:12">(</operator><name pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:23">ff_cb2_base</name><index pos:start="31:24" pos:end="31:32">[<expr pos:start="31:25" pos:end="31:31"><name pos:start="31:25" pos:end="31:31">cb2_idx</name></expr>]</index></name> <operator pos:start="31:34" pos:end="31:34">*</operator> <name pos:start="31:36" pos:end="31:39">gval</name><operator pos:start="31:40" pos:end="31:40">)</operator> <operator pos:start="31:42" pos:end="31:43">&gt;&gt;</operator> <literal type="number" pos:start="31:45" pos:end="31:45">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:65"><expr pos:start="33:5" pos:end="35:64"><call pos:start="33:5" pos:end="35:64"><name pos:start="33:5" pos:end="33:11">memmove</name><argument_list pos:start="33:12" pos:end="35:64">(<argument pos:start="33:13" pos:end="33:27"><expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:17">ractx</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:27">adapt_cb</name></name></expr></argument>, <argument pos:start="33:30" pos:end="33:56"><expr pos:start="33:30" pos:end="33:56"><name pos:start="33:30" pos:end="33:44"><name pos:start="33:30" pos:end="33:34">ractx</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:44">adapt_cb</name></name> <operator pos:start="33:46" pos:end="33:46">+</operator> <name pos:start="33:48" pos:end="33:56">BLOCKSIZE</name></expr></argument>,

            <argument pos:start="35:13" pos:end="35:63"><expr pos:start="35:13" pos:end="35:63"><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:23">BUFFERSIZE</name> <operator pos:start="35:25" pos:end="35:25">-</operator> <name pos:start="35:27" pos:end="35:35">BLOCKSIZE</name><operator pos:start="35:36" pos:end="35:36">)</operator> <operator pos:start="35:38" pos:end="35:38">*</operator> <sizeof pos:start="35:40" pos:end="35:63">sizeof<argument_list pos:start="35:46" pos:end="35:63">(<argument pos:start="35:47" pos:end="35:62"><expr pos:start="35:47" pos:end="35:62"><operator pos:start="35:47" pos:end="35:47">*</operator><name pos:start="35:48" pos:end="35:62"><name pos:start="35:48" pos:end="35:52">ractx</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:62">adapt_cb</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:53"><expr pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:9">block</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <name pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:17">ractx</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:27">adapt_cb</name></name> <operator pos:start="39:29" pos:end="39:29">+</operator> <name pos:start="39:31" pos:end="39:40">BUFFERSIZE</name> <operator pos:start="39:42" pos:end="39:42">-</operator> <name pos:start="39:44" pos:end="39:52">BLOCKSIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="45:58"><expr pos:start="43:5" pos:end="45:57"><call pos:start="43:5" pos:end="45:57"><name pos:start="43:5" pos:end="43:11">add_wav</name><argument_list pos:start="43:12" pos:end="45:57">(<argument pos:start="43:13" pos:end="43:17"><expr pos:start="43:13" pos:end="43:17"><name pos:start="43:13" pos:end="43:17">block</name></expr></argument>, <argument pos:start="43:20" pos:end="43:23"><expr pos:start="43:20" pos:end="43:23"><name pos:start="43:20" pos:end="43:23">gain</name></expr></argument>, <argument pos:start="43:26" pos:end="43:32"><expr pos:start="43:26" pos:end="43:32"><name pos:start="43:26" pos:end="43:32">cba_idx</name></expr></argument>, <argument pos:start="43:35" pos:end="43:35"><expr pos:start="43:35" pos:end="43:35"><name pos:start="43:35" pos:end="43:35">m</name></expr></argument>, <argument pos:start="43:38" pos:end="43:67"><expr pos:start="43:38" pos:end="43:67"><ternary pos:start="43:38" pos:end="43:67"><condition pos:start="43:38" pos:end="43:45"><expr pos:start="43:38" pos:end="43:44"><name pos:start="43:38" pos:end="43:44">cba_idx</name></expr>?</condition><then pos:start="43:47" pos:end="43:61"> <expr pos:start="43:47" pos:end="43:61"><name pos:start="43:47" pos:end="43:61"><name pos:start="43:47" pos:end="43:51">ractx</name><operator pos:start="43:52" pos:end="43:53">-&gt;</operator><name pos:start="43:54" pos:end="43:61">buffer_a</name></name></expr></then><else pos:start="43:62" pos:end="43:67">: <expr pos:start="43:64" pos:end="43:67"><name pos:start="43:64" pos:end="43:67">NULL</name></expr></else></ternary></expr></argument>,

            <argument pos:start="45:13" pos:end="45:33"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:24">ff_cb1_vects</name><index pos:start="45:25" pos:end="45:33">[<expr pos:start="45:26" pos:end="45:32"><name pos:start="45:26" pos:end="45:32">cb1_idx</name></expr>]</index></name></expr></argument>, <argument pos:start="45:36" pos:end="45:56"><expr pos:start="45:36" pos:end="45:56"><name pos:start="45:36" pos:end="45:56"><name pos:start="45:36" pos:end="45:47">ff_cb2_vects</name><index pos:start="45:48" pos:end="45:56">[<expr pos:start="45:49" pos:end="45:55"><name pos:start="45:49" pos:end="45:55">cb2_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="51:50"><expr pos:start="49:5" pos:end="51:49"><call pos:start="49:5" pos:end="51:49"><name pos:start="49:5" pos:end="49:10">memcpy</name><argument_list pos:start="49:11" pos:end="51:49">(<argument pos:start="49:12" pos:end="49:29"><expr pos:start="49:12" pos:end="49:29"><name pos:start="49:12" pos:end="49:29"><name pos:start="49:12" pos:end="49:16">ractx</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:29">curr_sblock</name></name></expr></argument>, <argument pos:start="49:32" pos:end="49:61"><expr pos:start="49:32" pos:end="49:61"><name pos:start="49:32" pos:end="49:49"><name pos:start="49:32" pos:end="49:36">ractx</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:49">curr_sblock</name></name> <operator pos:start="49:51" pos:end="49:51">+</operator> <name pos:start="49:53" pos:end="49:61">BLOCKSIZE</name></expr></argument>,

           <argument pos:start="51:12" pos:end="51:48"><expr pos:start="51:12" pos:end="51:48"><name pos:start="51:12" pos:end="51:20">LPC_ORDER</name><operator pos:start="51:21" pos:end="51:21">*</operator><sizeof pos:start="51:22" pos:end="51:48">sizeof<argument_list pos:start="51:28" pos:end="51:48">(<argument pos:start="51:29" pos:end="51:47"><expr pos:start="51:29" pos:end="51:47"><operator pos:start="51:29" pos:end="51:29">*</operator><name pos:start="51:30" pos:end="51:47"><name pos:start="51:30" pos:end="51:34">ractx</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:47">curr_sblock</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="59:89"><if pos:start="55:5" pos:end="59:89">if <condition pos:start="55:8" pos:end="57:78">(<expr pos:start="55:9" pos:end="57:77"><call pos:start="55:9" pos:end="57:77"><name pos:start="55:9" pos:end="55:35">ff_celp_lp_synthesis_filter</name><argument_list pos:start="55:36" pos:end="57:77">(<argument pos:start="55:37" pos:end="55:66"><expr pos:start="55:37" pos:end="55:66"><name pos:start="55:37" pos:end="55:54"><name pos:start="55:37" pos:end="55:41">ractx</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:54">curr_sblock</name></name> <operator pos:start="55:56" pos:end="55:56">+</operator> <name pos:start="55:58" pos:end="55:66">LPC_ORDER</name></expr></argument>, <argument pos:start="55:69" pos:end="55:77"><expr pos:start="55:69" pos:end="55:77"><name pos:start="55:69" pos:end="55:77">lpc_coefs</name></expr></argument>,

                                    <argument pos:start="57:37" pos:end="57:41"><expr pos:start="57:37" pos:end="57:41"><name pos:start="57:37" pos:end="57:41">block</name></expr></argument>, <argument pos:start="57:44" pos:end="57:52"><expr pos:start="57:44" pos:end="57:52"><name pos:start="57:44" pos:end="57:52">BLOCKSIZE</name></expr></argument>, <argument pos:start="57:55" pos:end="57:63"><expr pos:start="57:55" pos:end="57:63"><name pos:start="57:55" pos:end="57:63">LPC_ORDER</name></expr></argument>, <argument pos:start="57:66" pos:end="57:66"><expr pos:start="57:66" pos:end="57:66"><literal type="number" pos:start="57:66" pos:end="57:66">1</literal></expr></argument>, <argument pos:start="57:69" pos:end="57:69"><expr pos:start="57:69" pos:end="57:69"><literal type="number" pos:start="57:69" pos:end="57:69">0</literal></expr></argument>, <argument pos:start="57:72" pos:end="57:76"><expr pos:start="57:72" pos:end="57:76"><literal type="number" pos:start="57:72" pos:end="57:76">0xfff</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:89"><block_content pos:start="59:9" pos:end="59:89">

        <expr_stmt pos:start="59:9" pos:end="59:89"><expr pos:start="59:9" pos:end="59:88"><call pos:start="59:9" pos:end="59:88"><name pos:start="59:9" pos:end="59:14">memset</name><argument_list pos:start="59:15" pos:end="59:88">(<argument pos:start="59:16" pos:end="59:33"><expr pos:start="59:16" pos:end="59:33"><name pos:start="59:16" pos:end="59:33"><name pos:start="59:16" pos:end="59:20">ractx</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:33">curr_sblock</name></name></expr></argument>, <argument pos:start="59:36" pos:end="59:36"><expr pos:start="59:36" pos:end="59:36"><literal type="number" pos:start="59:36" pos:end="59:36">0</literal></expr></argument>, <argument pos:start="59:39" pos:end="59:87"><expr pos:start="59:39" pos:end="59:87"><operator pos:start="59:39" pos:end="59:39">(</operator><name pos:start="59:40" pos:end="59:48">LPC_ORDER</name><operator pos:start="59:49" pos:end="59:49">+</operator><name pos:start="59:50" pos:end="59:58">BLOCKSIZE</name><operator pos:start="59:59" pos:end="59:59">)</operator><operator pos:start="59:60" pos:end="59:60">*</operator><sizeof pos:start="59:61" pos:end="59:87">sizeof<argument_list pos:start="59:67" pos:end="59:87">(<argument pos:start="59:68" pos:end="59:86"><expr pos:start="59:68" pos:end="59:86"><operator pos:start="59:68" pos:end="59:68">*</operator><name pos:start="59:69" pos:end="59:86"><name pos:start="59:69" pos:end="59:73">ractx</name><operator pos:start="59:74" pos:end="59:75">-&gt;</operator><name pos:start="59:76" pos:end="59:86">curr_sblock</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
