<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25796.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">read_channel_data</name><parameter_list pos:start="1:29" pos:end="1:75">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:42">ALSDecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:67"><decl pos:start="1:50" pos:end="1:67"><type pos:start="1:50" pos:end="1:67"><name pos:start="1:50" pos:end="1:63">ALSChannelData</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:67">cd</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:74"><decl pos:start="1:70" pos:end="1:74"><type pos:start="1:70" pos:end="1:74"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:74">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name>       <init pos:start="5:29" pos:end="5:38">= <expr pos:start="5:31" pos:end="5:38"><operator pos:start="5:31" pos:end="5:31">&amp;</operator><name pos:start="5:32" pos:end="5:38"><name pos:start="5:32" pos:end="5:34">ctx</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:38">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">ALSChannelData</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:27">current</name> <init pos:start="7:29" pos:end="7:32">= <expr pos:start="7:31" pos:end="7:32"><name pos:start="7:31" pos:end="7:32">cd</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:25">channels</name>   <init pos:start="9:29" pos:end="9:50">= <expr pos:start="9:31" pos:end="9:50"><name pos:start="9:31" pos:end="9:50"><name pos:start="9:31" pos:end="9:33">ctx</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:40">avctx</name><operator pos:start="9:41" pos:end="9:42">-&gt;</operator><name pos:start="9:43" pos:end="9:50">channels</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">entries</name>             <init pos:start="11:29" pos:end="11:31">= <expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="67:5">while <condition pos:start="15:11" pos:end="15:71">(<expr pos:start="15:12" pos:end="15:70"><name pos:start="15:12" pos:end="15:18">entries</name> <operator pos:start="15:20" pos:end="15:20">&lt;</operator> <name pos:start="15:22" pos:end="15:29">channels</name> <operator pos:start="15:31" pos:end="15:32">&amp;&amp;</operator> <operator pos:start="15:34" pos:end="15:34">!</operator><operator pos:start="15:35" pos:end="15:35">(</operator><name pos:start="15:36" pos:end="15:53"><name pos:start="15:36" pos:end="15:42">current</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:53">stop_flag</name></name> <operator pos:start="15:55" pos:end="15:55">=</operator> <call pos:start="15:57" pos:end="15:69"><name pos:start="15:57" pos:end="15:65">get_bits1</name><argument_list pos:start="15:66" pos:end="15:69">(<argument pos:start="15:67" pos:end="15:68"><expr pos:start="15:67" pos:end="15:68"><name pos:start="15:67" pos:end="15:68">gb</name></expr></argument>)</argument_list></call><operator pos:start="15:70" pos:end="15:70">)</operator></expr>)</condition> <block pos:start="15:73" pos:end="67:5">{<block_content pos:start="17:9" pos:end="65:18">

        <expr_stmt pos:start="17:9" pos:end="17:76"><expr pos:start="17:9" pos:end="17:75"><name pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:15">current</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:31">master_channel</name></name> <operator pos:start="17:33" pos:end="17:33">=</operator> <call pos:start="17:35" pos:end="17:75"><name pos:start="17:35" pos:end="17:47">get_bits_long</name><argument_list pos:start="17:48" pos:end="17:75">(<argument pos:start="17:49" pos:end="17:50"><expr pos:start="17:49" pos:end="17:50"><name pos:start="17:49" pos:end="17:50">gb</name></expr></argument>, <argument pos:start="17:53" pos:end="17:74"><expr pos:start="17:53" pos:end="17:74"><call pos:start="17:53" pos:end="17:74"><name pos:start="17:53" pos:end="17:64">av_ceil_log2</name><argument_list pos:start="17:65" pos:end="17:74">(<argument pos:start="17:66" pos:end="17:73"><expr pos:start="17:66" pos:end="17:73"><name pos:start="17:66" pos:end="17:73">channels</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:48">(<expr pos:start="21:13" pos:end="21:47"><name pos:start="21:13" pos:end="21:35"><name pos:start="21:13" pos:end="21:19">current</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:35">master_channel</name></name> <operator pos:start="21:37" pos:end="21:38">&gt;=</operator> <name pos:start="21:40" pos:end="21:47">channels</name></expr>)</condition> <block pos:start="21:50" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:22">

            <expr_stmt pos:start="23:13" pos:end="23:74"><expr pos:start="23:13" pos:end="23:73"><call pos:start="23:13" pos:end="23:73"><name pos:start="23:13" pos:end="23:18">av_log</name><argument_list pos:start="23:19" pos:end="23:73">(<argument pos:start="23:20" pos:end="23:29"><expr pos:start="23:20" pos:end="23:29"><name pos:start="23:20" pos:end="23:29"><name pos:start="23:20" pos:end="23:22">ctx</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:29">avctx</name></name></expr></argument>, <argument pos:start="23:32" pos:end="23:43"><expr pos:start="23:32" pos:end="23:43"><name pos:start="23:32" pos:end="23:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:46" pos:end="23:72"><expr pos:start="23:46" pos:end="23:72"><literal type="string" pos:start="23:46" pos:end="23:72">"Invalid master channel!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:22">return <expr pos:start="25:20" pos:end="25:21"><operator pos:start="25:20" pos:end="25:20">-</operator><literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="31:9" pos:end="59:9"><if pos:start="31:9" pos:end="59:9">if <condition pos:start="31:12" pos:end="31:41">(<expr pos:start="31:13" pos:end="31:40"><name pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:19">current</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:35">master_channel</name></name> <operator pos:start="31:37" pos:end="31:38">!=</operator> <name pos:start="31:40" pos:end="31:40">c</name></expr>)</condition> <block pos:start="31:43" pos:end="59:9">{<block_content pos:start="33:13" pos:end="57:13">

            <expr_stmt pos:start="33:13" pos:end="33:52"><expr pos:start="33:13" pos:end="33:51"><name pos:start="33:13" pos:end="33:35"><name pos:start="33:13" pos:end="33:19">current</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:35">time_diff_flag</name></name> <operator pos:start="33:37" pos:end="33:37">=</operator> <call pos:start="33:39" pos:end="33:51"><name pos:start="33:39" pos:end="33:47">get_bits1</name><argument_list pos:start="33:48" pos:end="33:51">(<argument pos:start="33:49" pos:end="33:50"><expr pos:start="33:49" pos:end="33:50"><name pos:start="33:49" pos:end="33:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:63"><expr pos:start="35:13" pos:end="35:62"><name pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:19">current</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:30">weighting</name><index pos:start="35:31" pos:end="35:33">[<expr pos:start="35:32" pos:end="35:32"><literal type="number" pos:start="35:32" pos:end="35:32">0</literal></expr>]</index></name>   <operator pos:start="35:37" pos:end="35:37">=</operator> <call pos:start="35:39" pos:end="35:62"><name pos:start="35:39" pos:end="35:51">als_weighting</name><argument_list pos:start="35:52" pos:end="35:62">(<argument pos:start="35:53" pos:end="35:54"><expr pos:start="35:53" pos:end="35:54"><name pos:start="35:53" pos:end="35:54">gb</name></expr></argument>, <argument pos:start="35:57" pos:end="35:57"><expr pos:start="35:57" pos:end="35:57"><literal type="number" pos:start="35:57" pos:end="35:57">1</literal></expr></argument>, <argument pos:start="35:60" pos:end="35:61"><expr pos:start="35:60" pos:end="35:61"><literal type="number" pos:start="35:60" pos:end="35:61">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:63"><expr pos:start="37:13" pos:end="37:62"><name pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:19">current</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:30">weighting</name><index pos:start="37:31" pos:end="37:33">[<expr pos:start="37:32" pos:end="37:32"><literal type="number" pos:start="37:32" pos:end="37:32">1</literal></expr>]</index></name>   <operator pos:start="37:37" pos:end="37:37">=</operator> <call pos:start="37:39" pos:end="37:62"><name pos:start="37:39" pos:end="37:51">als_weighting</name><argument_list pos:start="37:52" pos:end="37:62">(<argument pos:start="37:53" pos:end="37:54"><expr pos:start="37:53" pos:end="37:54"><name pos:start="37:53" pos:end="37:54">gb</name></expr></argument>, <argument pos:start="37:57" pos:end="37:57"><expr pos:start="37:57" pos:end="37:57"><literal type="number" pos:start="37:57" pos:end="37:57">2</literal></expr></argument>, <argument pos:start="37:60" pos:end="37:61"><expr pos:start="37:60" pos:end="37:61"><literal type="number" pos:start="37:60" pos:end="37:61">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:63"><expr pos:start="39:13" pos:end="39:62"><name pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:19">current</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:30">weighting</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><literal type="number" pos:start="39:32" pos:end="39:32">2</literal></expr>]</index></name>   <operator pos:start="39:37" pos:end="39:37">=</operator> <call pos:start="39:39" pos:end="39:62"><name pos:start="39:39" pos:end="39:51">als_weighting</name><argument_list pos:start="39:52" pos:end="39:62">(<argument pos:start="39:53" pos:end="39:54"><expr pos:start="39:53" pos:end="39:54"><name pos:start="39:53" pos:end="39:54">gb</name></expr></argument>, <argument pos:start="39:57" pos:end="39:57"><expr pos:start="39:57" pos:end="39:57"><literal type="number" pos:start="39:57" pos:end="39:57">1</literal></expr></argument>, <argument pos:start="39:60" pos:end="39:61"><expr pos:start="39:60" pos:end="39:61"><literal type="number" pos:start="39:60" pos:end="39:61">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="43:13" pos:end="57:13"><if pos:start="43:13" pos:end="57:13">if <condition pos:start="43:16" pos:end="43:40">(<expr pos:start="43:17" pos:end="43:39"><name pos:start="43:17" pos:end="43:39"><name pos:start="43:17" pos:end="43:23">current</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:39">time_diff_flag</name></name></expr>)</condition> <block pos:start="43:42" pos:end="57:13">{<block_content pos:start="45:17" pos:end="55:85">

                <expr_stmt pos:start="45:17" pos:end="45:65"><expr pos:start="45:17" pos:end="45:64"><name pos:start="45:17" pos:end="45:37"><name pos:start="45:17" pos:end="45:23">current</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:34">weighting</name><index pos:start="45:35" pos:end="45:37">[<expr pos:start="45:36" pos:end="45:36"><literal type="number" pos:start="45:36" pos:end="45:36">3</literal></expr>]</index></name> <operator pos:start="45:39" pos:end="45:39">=</operator> <call pos:start="45:41" pos:end="45:64"><name pos:start="45:41" pos:end="45:53">als_weighting</name><argument_list pos:start="45:54" pos:end="45:64">(<argument pos:start="45:55" pos:end="45:56"><expr pos:start="45:55" pos:end="45:56"><name pos:start="45:55" pos:end="45:56">gb</name></expr></argument>, <argument pos:start="45:59" pos:end="45:59"><expr pos:start="45:59" pos:end="45:59"><literal type="number" pos:start="45:59" pos:end="45:59">1</literal></expr></argument>, <argument pos:start="45:62" pos:end="45:63"><expr pos:start="45:62" pos:end="45:63"><literal type="number" pos:start="45:62" pos:end="45:63">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:65"><expr pos:start="47:17" pos:end="47:64"><name pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:23">current</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:34">weighting</name><index pos:start="47:35" pos:end="47:37">[<expr pos:start="47:36" pos:end="47:36"><literal type="number" pos:start="47:36" pos:end="47:36">4</literal></expr>]</index></name> <operator pos:start="47:39" pos:end="47:39">=</operator> <call pos:start="47:41" pos:end="47:64"><name pos:start="47:41" pos:end="47:53">als_weighting</name><argument_list pos:start="47:54" pos:end="47:64">(<argument pos:start="47:55" pos:end="47:56"><expr pos:start="47:55" pos:end="47:56"><name pos:start="47:55" pos:end="47:56">gb</name></expr></argument>, <argument pos:start="47:59" pos:end="47:59"><expr pos:start="47:59" pos:end="47:59"><literal type="number" pos:start="47:59" pos:end="47:59">1</literal></expr></argument>, <argument pos:start="47:62" pos:end="47:63"><expr pos:start="47:62" pos:end="47:63"><literal type="number" pos:start="47:62" pos:end="47:63">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:65"><expr pos:start="49:17" pos:end="49:64"><name pos:start="49:17" pos:end="49:37"><name pos:start="49:17" pos:end="49:23">current</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:34">weighting</name><index pos:start="49:35" pos:end="49:37">[<expr pos:start="49:36" pos:end="49:36"><literal type="number" pos:start="49:36" pos:end="49:36">5</literal></expr>]</index></name> <operator pos:start="49:39" pos:end="49:39">=</operator> <call pos:start="49:41" pos:end="49:64"><name pos:start="49:41" pos:end="49:53">als_weighting</name><argument_list pos:start="49:54" pos:end="49:64">(<argument pos:start="49:55" pos:end="49:56"><expr pos:start="49:55" pos:end="49:56"><name pos:start="49:55" pos:end="49:56">gb</name></expr></argument>, <argument pos:start="49:59" pos:end="49:59"><expr pos:start="49:59" pos:end="49:59"><literal type="number" pos:start="49:59" pos:end="49:59">1</literal></expr></argument>, <argument pos:start="49:62" pos:end="49:63"><expr pos:start="49:62" pos:end="49:63"><literal type="number" pos:start="49:62" pos:end="49:63">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="53:17" pos:end="53:57"><expr pos:start="53:17" pos:end="53:56"><name pos:start="53:17" pos:end="53:39"><name pos:start="53:17" pos:end="53:23">current</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:39">time_diff_sign</name></name>  <operator pos:start="53:42" pos:end="53:42">=</operator> <call pos:start="53:44" pos:end="53:56"><name pos:start="53:44" pos:end="53:52">get_bits1</name><argument_list pos:start="53:53" pos:end="53:56">(<argument pos:start="53:54" pos:end="53:55"><expr pos:start="53:54" pos:end="53:55"><name pos:start="53:54" pos:end="53:55">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:85"><expr pos:start="55:17" pos:end="55:84"><name pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:23">current</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:40">time_diff_index</name></name> <operator pos:start="55:42" pos:end="55:42">=</operator> <call pos:start="55:44" pos:end="55:80"><name pos:start="55:44" pos:end="55:51">get_bits</name><argument_list pos:start="55:52" pos:end="55:80">(<argument pos:start="55:53" pos:end="55:54"><expr pos:start="55:53" pos:end="55:54"><name pos:start="55:53" pos:end="55:54">gb</name></expr></argument>, <argument pos:start="55:57" pos:end="55:79"><expr pos:start="55:57" pos:end="55:79"><name pos:start="55:57" pos:end="55:75"><name pos:start="55:57" pos:end="55:59">ctx</name><operator pos:start="55:60" pos:end="55:61">-&gt;</operator><name pos:start="55:62" pos:end="55:75">ltp_lag_length</name></name> <operator pos:start="55:77" pos:end="55:77">-</operator> <literal type="number" pos:start="55:79" pos:end="55:79">3</literal></expr></argument>)</argument_list></call> <operator pos:start="55:82" pos:end="55:82">+</operator> <literal type="number" pos:start="55:84" pos:end="55:84">3</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:18"><expr pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:15">current</name><operator pos:start="63:16" pos:end="63:17">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:18"><expr pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:15">entries</name><operator pos:start="65:16" pos:end="65:17">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:28">(<expr pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:15">entries</name> <operator pos:start="71:17" pos:end="71:18">==</operator> <name pos:start="71:20" pos:end="71:27">channels</name></expr>)</condition> <block pos:start="71:30" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:18">

        <expr_stmt pos:start="73:9" pos:end="73:68"><expr pos:start="73:9" pos:end="73:67"><call pos:start="73:9" pos:end="73:67"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:67">(<argument pos:start="73:16" pos:end="73:25"><expr pos:start="73:16" pos:end="73:25"><name pos:start="73:16" pos:end="73:25"><name pos:start="73:16" pos:end="73:18">ctx</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:25">avctx</name></name></expr></argument>, <argument pos:start="73:28" pos:end="73:39"><expr pos:start="73:28" pos:end="73:39"><name pos:start="73:28" pos:end="73:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:42" pos:end="73:66"><expr pos:start="73:42" pos:end="73:66"><literal type="string" pos:start="73:42" pos:end="73:66">"Damaged channel data!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:18">return <expr pos:start="75:16" pos:end="75:17"><operator pos:start="75:16" pos:end="75:16">-</operator><literal type="number" pos:start="75:17" pos:end="75:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:23"><expr pos:start="81:5" pos:end="81:22"><call pos:start="81:5" pos:end="81:22"><name pos:start="81:5" pos:end="81:18">align_get_bits</name><argument_list pos:start="81:19" pos:end="81:22">(<argument pos:start="81:20" pos:end="81:21"><expr pos:start="81:20" pos:end="81:21"><name pos:start="81:20" pos:end="81:21">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
