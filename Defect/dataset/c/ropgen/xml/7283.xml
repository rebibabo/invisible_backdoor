<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7283.c" pos:tabs="8"><function pos:start="1:1" pos:end="269:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">rm_read_audio_stream_info</name><parameter_list pos:start="1:38" pos:end="3:51">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:53">AVFormatContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:66">AVStream</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:70">st</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:50"><decl pos:start="3:39" pos:end="3:50"><type pos:start="3:39" pos:end="3:50"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:50">read_all</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="269:1">{<block_content pos:start="7:5" pos:end="267:5">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">RMContext</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">rm</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:30">= <expr pos:start="9:25" pos:end="9:30"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:12">buf</name><index pos:start="11:13" pos:end="11:17">[<expr pos:start="11:14" pos:end="11:16"><literal type="number" pos:start="11:14" pos:end="11:16">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:20">version</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:24">/* ra type header */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:11">version</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:26"><name pos:start="21:15" pos:end="21:22">get_be32</name><argument_list pos:start="21:23" pos:end="21:26">(<argument pos:start="21:24" pos:end="21:25"><expr pos:start="21:24" pos:end="21:25"><name pos:start="21:24" pos:end="21:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="21:29" pos:end="21:41">/* version */</comment>

    <if_stmt pos:start="23:5" pos:end="267:5"><if pos:start="23:5" pos:end="65:5">if <condition pos:start="23:8" pos:end="23:38">(<expr pos:start="23:9" pos:end="23:37"><operator pos:start="23:9" pos:end="23:9">(</operator><operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:17">version</name> <operator pos:start="23:19" pos:end="23:20">&gt;&gt;</operator> <literal type="number" pos:start="23:22" pos:end="23:23">16</literal><operator pos:start="23:24" pos:end="23:24">)</operator> <operator pos:start="23:26" pos:end="23:26">&amp;</operator> <literal type="number" pos:start="23:28" pos:end="23:31">0xff</literal><operator pos:start="23:32" pos:end="23:32">)</operator> <operator pos:start="23:34" pos:end="23:35">==</operator> <literal type="number" pos:start="23:37" pos:end="23:37">3</literal></expr>)</condition> <block pos:start="23:40" pos:end="65:5">{<block_content pos:start="25:9" pos:end="63:46">

        <decl_stmt pos:start="25:9" pos:end="25:41"><decl pos:start="25:9" pos:end="25:40"><type pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:15">int64_t</name></type> <name pos:start="25:17" pos:end="25:24">startpos</name> <init pos:start="25:26" pos:end="25:40">= <expr pos:start="25:28" pos:end="25:40"><call pos:start="25:28" pos:end="25:40"><name pos:start="25:28" pos:end="25:36">url_ftell</name><argument_list pos:start="25:37" pos:end="25:40">(<argument pos:start="25:38" pos:end="25:39"><expr pos:start="25:38" pos:end="25:39"><name pos:start="25:38" pos:end="25:39">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="27:9" pos:end="27:30">/* very old version */</comment>

        <for pos:start="29:9" pos:end="31:25">for<control pos:start="29:12" pos:end="29:31">(<init pos:start="29:13" pos:end="29:18"><expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:13">i</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</init> <condition pos:start="29:20" pos:end="29:26"><expr pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:20">i</name> <operator pos:start="29:22" pos:end="29:22">&lt;</operator> <literal type="number" pos:start="29:24" pos:end="29:25">14</literal></expr>;</condition> <incr pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:28">i</name><operator pos:start="29:29" pos:end="29:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:13" pos:end="31:25"><block_content pos:start="31:13" pos:end="31:25">

            <expr_stmt pos:start="31:13" pos:end="31:25"><expr pos:start="31:13" pos:end="31:24"><call pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:20">get_byte</name><argument_list pos:start="31:21" pos:end="31:24">(<argument pos:start="31:22" pos:end="31:23"><expr pos:start="31:22" pos:end="31:23"><name pos:start="31:22" pos:end="31:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="33:9" pos:end="33:49"><expr pos:start="33:9" pos:end="33:48"><call pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:16">get_str8</name><argument_list pos:start="33:17" pos:end="33:48">(<argument pos:start="33:18" pos:end="33:19"><expr pos:start="33:18" pos:end="33:19"><name pos:start="33:18" pos:end="33:19">pb</name></expr></argument>, <argument pos:start="33:22" pos:end="33:29"><expr pos:start="33:22" pos:end="33:29"><name pos:start="33:22" pos:end="33:29"><name pos:start="33:22" pos:end="33:22">s</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:29">title</name></name></expr></argument>, <argument pos:start="33:32" pos:end="33:47"><expr pos:start="33:32" pos:end="33:47"><sizeof pos:start="33:32" pos:end="33:47">sizeof<argument_list pos:start="33:38" pos:end="33:47">(<argument pos:start="33:39" pos:end="33:46"><expr pos:start="33:39" pos:end="33:46"><name pos:start="33:39" pos:end="33:46"><name pos:start="33:39" pos:end="33:39">s</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:46">title</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:51"><expr pos:start="35:9" pos:end="35:50"><call pos:start="35:9" pos:end="35:50"><name pos:start="35:9" pos:end="35:16">get_str8</name><argument_list pos:start="35:17" pos:end="35:50">(<argument pos:start="35:18" pos:end="35:19"><expr pos:start="35:18" pos:end="35:19"><name pos:start="35:18" pos:end="35:19">pb</name></expr></argument>, <argument pos:start="35:22" pos:end="35:30"><expr pos:start="35:22" pos:end="35:30"><name pos:start="35:22" pos:end="35:30"><name pos:start="35:22" pos:end="35:22">s</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:30">author</name></name></expr></argument>, <argument pos:start="35:33" pos:end="35:49"><expr pos:start="35:33" pos:end="35:49"><sizeof pos:start="35:33" pos:end="35:49">sizeof<argument_list pos:start="35:39" pos:end="35:49">(<argument pos:start="35:40" pos:end="35:48"><expr pos:start="35:40" pos:end="35:48"><name pos:start="35:40" pos:end="35:48"><name pos:start="35:40" pos:end="35:40">s</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:48">author</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:57"><expr pos:start="37:9" pos:end="37:56"><call pos:start="37:9" pos:end="37:56"><name pos:start="37:9" pos:end="37:16">get_str8</name><argument_list pos:start="37:17" pos:end="37:56">(<argument pos:start="37:18" pos:end="37:19"><expr pos:start="37:18" pos:end="37:19"><name pos:start="37:18" pos:end="37:19">pb</name></expr></argument>, <argument pos:start="37:22" pos:end="37:33"><expr pos:start="37:22" pos:end="37:33"><name pos:start="37:22" pos:end="37:33"><name pos:start="37:22" pos:end="37:22">s</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:33">copyright</name></name></expr></argument>, <argument pos:start="37:36" pos:end="37:55"><expr pos:start="37:36" pos:end="37:55"><sizeof pos:start="37:36" pos:end="37:55">sizeof<argument_list pos:start="37:42" pos:end="37:55">(<argument pos:start="37:43" pos:end="37:54"><expr pos:start="37:43" pos:end="37:54"><name pos:start="37:43" pos:end="37:54"><name pos:start="37:43" pos:end="37:43">s</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:54">copyright</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:53"><expr pos:start="39:9" pos:end="39:52"><call pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:16">get_str8</name><argument_list pos:start="39:17" pos:end="39:52">(<argument pos:start="39:18" pos:end="39:19"><expr pos:start="39:18" pos:end="39:19"><name pos:start="39:18" pos:end="39:19">pb</name></expr></argument>, <argument pos:start="39:22" pos:end="39:31"><expr pos:start="39:22" pos:end="39:31"><name pos:start="39:22" pos:end="39:31"><name pos:start="39:22" pos:end="39:22">s</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:31">comment</name></name></expr></argument>, <argument pos:start="39:34" pos:end="39:51"><expr pos:start="39:34" pos:end="39:51"><sizeof pos:start="39:34" pos:end="39:51">sizeof<argument_list pos:start="39:40" pos:end="39:51">(<argument pos:start="39:41" pos:end="39:50"><expr pos:start="39:41" pos:end="39:50"><name pos:start="39:41" pos:end="39:50"><name pos:start="39:41" pos:end="39:41">s</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:50">comment</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:65">(<expr pos:start="41:13" pos:end="41:64"><operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:21">startpos</name> <operator pos:start="41:23" pos:end="41:23">+</operator> <operator pos:start="41:25" pos:end="41:25">(</operator><name pos:start="41:26" pos:end="41:32">version</name> <operator pos:start="41:34" pos:end="41:34">&amp;</operator> <literal type="number" pos:start="41:36" pos:end="41:41">0xffff</literal><operator pos:start="41:42" pos:end="41:42">)</operator><operator pos:start="41:43" pos:end="41:43">)</operator> <operator pos:start="41:45" pos:end="41:46">&gt;=</operator> <call pos:start="41:48" pos:end="41:60"><name pos:start="41:48" pos:end="41:56">url_ftell</name><argument_list pos:start="41:57" pos:end="41:60">(<argument pos:start="41:58" pos:end="41:59"><expr pos:start="41:58" pos:end="41:59"><name pos:start="41:58" pos:end="41:59">pb</name></expr></argument>)</argument_list></call> <operator pos:start="41:62" pos:end="41:62">+</operator> <literal type="number" pos:start="41:64" pos:end="41:64">2</literal></expr>)</condition> <block pos:start="41:67" pos:end="49:9">{<block_content pos:start="45:9" pos:end="47:39">

        <comment type="line" pos:start="43:9" pos:end="43:43">// fourcc (should always be "lpcJ")</comment>

        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><call pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:16">get_byte</name><argument_list pos:start="45:17" pos:end="45:20">(<argument pos:start="45:18" pos:end="45:19"><expr pos:start="45:18" pos:end="45:19"><name pos:start="45:18" pos:end="45:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:39"><expr pos:start="47:9" pos:end="47:38"><call pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:16">get_str8</name><argument_list pos:start="47:17" pos:end="47:38">(<argument pos:start="47:18" pos:end="47:19"><expr pos:start="47:18" pos:end="47:19"><name pos:start="47:18" pos:end="47:19">pb</name></expr></argument>, <argument pos:start="47:22" pos:end="47:24"><expr pos:start="47:22" pos:end="47:24"><name pos:start="47:22" pos:end="47:24">buf</name></expr></argument>, <argument pos:start="47:27" pos:end="47:37"><expr pos:start="47:27" pos:end="47:37"><sizeof pos:start="47:27" pos:end="47:37">sizeof<argument_list pos:start="47:33" pos:end="47:37">(<argument pos:start="47:34" pos:end="47:36"><expr pos:start="47:34" pos:end="47:36"><name pos:start="47:34" pos:end="47:36">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="line" pos:start="51:9" pos:end="51:60">// Skip extra header crap (this should never happen)</comment>

        <if_stmt pos:start="53:9" pos:end="55:73"><if pos:start="53:9" pos:end="55:73">if <condition pos:start="53:12" pos:end="53:60">(<expr pos:start="53:13" pos:end="53:59"><operator pos:start="53:13" pos:end="53:13">(</operator><name pos:start="53:14" pos:end="53:21">startpos</name> <operator pos:start="53:23" pos:end="53:23">+</operator> <operator pos:start="53:25" pos:end="53:25">(</operator><name pos:start="53:26" pos:end="53:32">version</name> <operator pos:start="53:34" pos:end="53:34">&amp;</operator> <literal type="number" pos:start="53:36" pos:end="53:41">0xffff</literal><operator pos:start="53:42" pos:end="53:42">)</operator><operator pos:start="53:43" pos:end="53:43">)</operator> <operator pos:start="53:45" pos:end="53:45">&gt;</operator> <call pos:start="53:47" pos:end="53:59"><name pos:start="53:47" pos:end="53:55">url_ftell</name><argument_list pos:start="53:56" pos:end="53:59">(<argument pos:start="53:57" pos:end="53:58"><expr pos:start="53:57" pos:end="53:58"><name pos:start="53:57" pos:end="53:58">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:73"><block_content pos:start="55:13" pos:end="55:73">

            <expr_stmt pos:start="55:13" pos:end="55:73"><expr pos:start="55:13" pos:end="55:72"><call pos:start="55:13" pos:end="55:72"><name pos:start="55:13" pos:end="55:21">url_fskip</name><argument_list pos:start="55:22" pos:end="55:72">(<argument pos:start="55:23" pos:end="55:24"><expr pos:start="55:23" pos:end="55:24"><name pos:start="55:23" pos:end="55:24">pb</name></expr></argument>, <argument pos:start="55:27" pos:end="55:71"><expr pos:start="55:27" pos:end="55:71"><operator pos:start="55:27" pos:end="55:27">(</operator><name pos:start="55:28" pos:end="55:34">version</name> <operator pos:start="55:36" pos:end="55:36">&amp;</operator> <literal type="number" pos:start="55:38" pos:end="55:43">0xffff</literal><operator pos:start="55:44" pos:end="55:44">)</operator> <operator pos:start="55:46" pos:end="55:46">+</operator> <name pos:start="55:48" pos:end="55:55">startpos</name> <operator pos:start="55:57" pos:end="55:57">-</operator> <call pos:start="55:59" pos:end="55:71"><name pos:start="55:59" pos:end="55:67">url_ftell</name><argument_list pos:start="55:68" pos:end="55:71">(<argument pos:start="55:69" pos:end="55:70"><expr pos:start="55:69" pos:end="55:70"><name pos:start="55:69" pos:end="55:70">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:38"><expr pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:10">st</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:17">codec</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:30">sample_rate</name></name> <operator pos:start="57:32" pos:end="57:32">=</operator> <literal type="number" pos:start="57:34" pos:end="57:37">8000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:32"><expr pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:10">st</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:17">codec</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:27">channels</name></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <literal type="number" pos:start="59:31" pos:end="59:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:49"><expr pos:start="61:9" pos:end="61:48"><name pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:10">st</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:17">codec</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:29">codec_type</name></name> <operator pos:start="61:31" pos:end="61:31">=</operator> <name pos:start="61:33" pos:end="61:48">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:46"><expr pos:start="63:9" pos:end="63:45"><name pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:10">st</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:17">codec</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:27">codec_id</name></name> <operator pos:start="63:29" pos:end="63:29">=</operator> <name pos:start="63:31" pos:end="63:45">CODEC_ID_RA_144</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="267:5">else <block pos:start="65:12" pos:end="267:5">{<block_content pos:start="67:9" pos:end="265:9">

        <decl_stmt pos:start="67:9" pos:end="67:67"><decl pos:start="67:9" pos:end="67:18"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:18">flavor</name></decl>, <decl pos:start="67:21" pos:end="67:32"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:21" pos:end="67:32">sub_packet_h</name></decl>, <decl pos:start="67:35" pos:end="67:49"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:35" pos:end="67:49">coded_framesize</name></decl>, <decl pos:start="67:52" pos:end="67:66"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:52" pos:end="67:66">sub_packet_size</name></decl>;</decl_stmt>

        <comment type="block" pos:start="69:9" pos:end="69:29">/* old version (4) */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:21"><expr pos:start="71:9" pos:end="71:20"><call pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:16">get_be32</name><argument_list pos:start="71:17" pos:end="71:20">(<argument pos:start="71:18" pos:end="71:19"><expr pos:start="71:18" pos:end="71:19"><name pos:start="71:18" pos:end="71:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:23" pos:end="71:32">/* .ra4 */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:21"><expr pos:start="73:9" pos:end="73:20"><call pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:16">get_be32</name><argument_list pos:start="73:17" pos:end="73:20">(<argument pos:start="73:18" pos:end="73:19"><expr pos:start="73:18" pos:end="73:19"><name pos:start="73:18" pos:end="73:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="73:23" pos:end="73:37">/* data size */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:21"><expr pos:start="75:9" pos:end="75:20"><call pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:16">get_be16</name><argument_list pos:start="75:17" pos:end="75:20">(<argument pos:start="75:18" pos:end="75:19"><expr pos:start="75:18" pos:end="75:19"><name pos:start="75:18" pos:end="75:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="75:23" pos:end="75:36">/* version2 */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:21"><expr pos:start="77:9" pos:end="77:20"><call pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:16">get_be32</name><argument_list pos:start="77:17" pos:end="77:20">(<argument pos:start="77:18" pos:end="77:19"><expr pos:start="77:18" pos:end="77:19"><name pos:start="77:18" pos:end="77:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="77:23" pos:end="77:39">/* header size */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:29"><expr pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:14">flavor</name><operator pos:start="79:15" pos:end="79:15">=</operator> <call pos:start="79:17" pos:end="79:28"><name pos:start="79:17" pos:end="79:24">get_be16</name><argument_list pos:start="79:25" pos:end="79:28">(<argument pos:start="79:26" pos:end="79:27"><expr pos:start="79:26" pos:end="79:27"><name pos:start="79:26" pos:end="79:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="79:31" pos:end="79:59">/* add codec info / flavor */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:61"><expr pos:start="81:9" pos:end="81:60"><name pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:10">rm</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:27">coded_framesize</name></name> <operator pos:start="81:29" pos:end="81:29">=</operator> <name pos:start="81:31" pos:end="81:45">coded_framesize</name> <operator pos:start="81:47" pos:end="81:47">=</operator> <call pos:start="81:49" pos:end="81:60"><name pos:start="81:49" pos:end="81:56">get_be32</name><argument_list pos:start="81:57" pos:end="81:60">(<argument pos:start="81:58" pos:end="81:59"><expr pos:start="81:58" pos:end="81:59"><name pos:start="81:58" pos:end="81:59">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="81:63" pos:end="81:84">/* coded frame size */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:21"><expr pos:start="83:9" pos:end="83:20"><call pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:16">get_be32</name><argument_list pos:start="83:17" pos:end="83:20">(<argument pos:start="83:18" pos:end="83:19"><expr pos:start="83:18" pos:end="83:19"><name pos:start="83:18" pos:end="83:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="83:23" pos:end="83:31">/* ??? */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:21"><expr pos:start="85:9" pos:end="85:20"><call pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:16">get_be32</name><argument_list pos:start="85:17" pos:end="85:20">(<argument pos:start="85:18" pos:end="85:19"><expr pos:start="85:18" pos:end="85:19"><name pos:start="85:18" pos:end="85:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="85:23" pos:end="85:31">/* ??? */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:21"><expr pos:start="87:9" pos:end="87:20"><call pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:16">get_be32</name><argument_list pos:start="87:17" pos:end="87:20">(<argument pos:start="87:18" pos:end="87:19"><expr pos:start="87:18" pos:end="87:19"><name pos:start="87:18" pos:end="87:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="87:23" pos:end="87:31">/* ??? */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:55"><expr pos:start="89:9" pos:end="89:54"><name pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:10">rm</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:24">sub_packet_h</name></name> <operator pos:start="89:26" pos:end="89:26">=</operator> <name pos:start="89:28" pos:end="89:39">sub_packet_h</name> <operator pos:start="89:41" pos:end="89:41">=</operator> <call pos:start="89:43" pos:end="89:54"><name pos:start="89:43" pos:end="89:50">get_be16</name><argument_list pos:start="89:51" pos:end="89:54">(<argument pos:start="89:52" pos:end="89:53"><expr pos:start="89:52" pos:end="89:53"><name pos:start="89:52" pos:end="89:53">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="89:57" pos:end="89:63">/* 1 */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:45"><expr pos:start="91:9" pos:end="91:44"><name pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:10">st</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:17">codec</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:30">block_align</name></name><operator pos:start="91:31" pos:end="91:31">=</operator> <call pos:start="91:33" pos:end="91:44"><name pos:start="91:33" pos:end="91:40">get_be16</name><argument_list pos:start="91:41" pos:end="91:44">(<argument pos:start="91:42" pos:end="91:43"><expr pos:start="91:42" pos:end="91:43"><name pos:start="91:42" pos:end="91:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="91:47" pos:end="91:62">/* frame size */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:61"><expr pos:start="93:9" pos:end="93:60"><name pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:10">rm</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:27">sub_packet_size</name></name> <operator pos:start="93:29" pos:end="93:29">=</operator> <name pos:start="93:31" pos:end="93:45">sub_packet_size</name> <operator pos:start="93:47" pos:end="93:47">=</operator> <call pos:start="93:49" pos:end="93:60"><name pos:start="93:49" pos:end="93:56">get_be16</name><argument_list pos:start="93:57" pos:end="93:60">(<argument pos:start="93:58" pos:end="93:59"><expr pos:start="93:58" pos:end="93:59"><name pos:start="93:58" pos:end="93:59">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:63" pos:end="93:83">/* sub packet size */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:21"><expr pos:start="95:9" pos:end="95:20"><call pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:16">get_be16</name><argument_list pos:start="95:17" pos:end="95:20">(<argument pos:start="95:18" pos:end="95:19"><expr pos:start="95:18" pos:end="95:19"><name pos:start="95:18" pos:end="95:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="95:23" pos:end="95:31">/* ??? */</comment>

        <if_stmt pos:start="97:9" pos:end="99:55"><if pos:start="97:9" pos:end="99:55">if <condition pos:start="97:12" pos:end="97:42">(<expr pos:start="97:13" pos:end="97:41"><operator pos:start="97:13" pos:end="97:13">(</operator><operator pos:start="97:14" pos:end="97:14">(</operator><name pos:start="97:15" pos:end="97:21">version</name> <operator pos:start="97:23" pos:end="97:24">&gt;&gt;</operator> <literal type="number" pos:start="97:26" pos:end="97:27">16</literal><operator pos:start="97:28" pos:end="97:28">)</operator> <operator pos:start="97:30" pos:end="97:30">&amp;</operator> <literal type="number" pos:start="97:32" pos:end="97:35">0xff</literal><operator pos:start="97:36" pos:end="97:36">)</operator> <operator pos:start="97:38" pos:end="97:39">==</operator> <literal type="number" pos:start="97:41" pos:end="97:41">5</literal></expr>)</condition> <block pos:start="97:44" pos:end="99:55">{<block_content pos:start="99:13" pos:end="99:53">

            <expr_stmt pos:start="99:13" pos:end="99:25"><expr pos:start="99:13" pos:end="99:24"><call pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:20">get_be16</name><argument_list pos:start="99:21" pos:end="99:24">(<argument pos:start="99:22" pos:end="99:23"><expr pos:start="99:22" pos:end="99:23"><name pos:start="99:22" pos:end="99:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="99:27" pos:end="99:39"><expr pos:start="99:27" pos:end="99:38"><call pos:start="99:27" pos:end="99:38"><name pos:start="99:27" pos:end="99:34">get_be16</name><argument_list pos:start="99:35" pos:end="99:38">(<argument pos:start="99:36" pos:end="99:37"><expr pos:start="99:36" pos:end="99:37"><name pos:start="99:36" pos:end="99:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="99:41" pos:end="99:53"><expr pos:start="99:41" pos:end="99:52"><call pos:start="99:41" pos:end="99:52"><name pos:start="99:41" pos:end="99:48">get_be16</name><argument_list pos:start="99:49" pos:end="99:52">(<argument pos:start="99:50" pos:end="99:51"><expr pos:start="99:50" pos:end="99:51"><name pos:start="99:50" pos:end="99:51">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:46"><expr pos:start="101:9" pos:end="101:45"><name pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:10">st</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:17">codec</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:30">sample_rate</name></name> <operator pos:start="101:32" pos:end="101:32">=</operator> <call pos:start="101:34" pos:end="101:45"><name pos:start="101:34" pos:end="101:41">get_be16</name><argument_list pos:start="101:42" pos:end="101:45">(<argument pos:start="101:43" pos:end="101:44"><expr pos:start="101:43" pos:end="101:44"><name pos:start="101:43" pos:end="101:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:21"><expr pos:start="103:9" pos:end="103:20"><call pos:start="103:9" pos:end="103:20"><name pos:start="103:9" pos:end="103:16">get_be32</name><argument_list pos:start="103:17" pos:end="103:20">(<argument pos:start="103:18" pos:end="103:19"><expr pos:start="103:18" pos:end="103:19"><name pos:start="103:18" pos:end="103:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:43"><expr pos:start="105:9" pos:end="105:42"><name pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:10">st</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:17">codec</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:27">channels</name></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <call pos:start="105:31" pos:end="105:42"><name pos:start="105:31" pos:end="105:38">get_be16</name><argument_list pos:start="105:39" pos:end="105:42">(<argument pos:start="105:40" pos:end="105:41"><expr pos:start="105:40" pos:end="105:41"><name pos:start="105:40" pos:end="105:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="127:9"><if pos:start="107:9" pos:end="121:9">if <condition pos:start="107:12" pos:end="107:42">(<expr pos:start="107:13" pos:end="107:41"><operator pos:start="107:13" pos:end="107:13">(</operator><operator pos:start="107:14" pos:end="107:14">(</operator><name pos:start="107:15" pos:end="107:21">version</name> <operator pos:start="107:23" pos:end="107:24">&gt;&gt;</operator> <literal type="number" pos:start="107:26" pos:end="107:27">16</literal><operator pos:start="107:28" pos:end="107:28">)</operator> <operator pos:start="107:30" pos:end="107:30">&amp;</operator> <literal type="number" pos:start="107:32" pos:end="107:35">0xff</literal><operator pos:start="107:36" pos:end="107:36">)</operator> <operator pos:start="107:38" pos:end="107:39">==</operator> <literal type="number" pos:start="107:41" pos:end="107:41">5</literal></expr>)</condition> <block pos:start="107:44" pos:end="121:9">{<block_content pos:start="109:13" pos:end="119:23">

            <expr_stmt pos:start="109:13" pos:end="109:25"><expr pos:start="109:13" pos:end="109:24"><call pos:start="109:13" pos:end="109:24"><name pos:start="109:13" pos:end="109:20">get_be32</name><argument_list pos:start="109:21" pos:end="109:24">(<argument pos:start="109:22" pos:end="109:23"><expr pos:start="109:22" pos:end="109:23"><name pos:start="109:22" pos:end="109:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:34"><expr pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:18"><name pos:start="111:13" pos:end="111:15">buf</name><index pos:start="111:16" pos:end="111:18">[<expr pos:start="111:17" pos:end="111:17"><literal type="number" pos:start="111:17" pos:end="111:17">0</literal></expr>]</index></name> <operator pos:start="111:20" pos:end="111:20">=</operator> <call pos:start="111:22" pos:end="111:33"><name pos:start="111:22" pos:end="111:29">get_byte</name><argument_list pos:start="111:30" pos:end="111:33">(<argument pos:start="111:31" pos:end="111:32"><expr pos:start="111:31" pos:end="111:32"><name pos:start="111:31" pos:end="111:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:34"><expr pos:start="113:13" pos:end="113:33"><name pos:start="113:13" pos:end="113:18"><name pos:start="113:13" pos:end="113:15">buf</name><index pos:start="113:16" pos:end="113:18">[<expr pos:start="113:17" pos:end="113:17"><literal type="number" pos:start="113:17" pos:end="113:17">1</literal></expr>]</index></name> <operator pos:start="113:20" pos:end="113:20">=</operator> <call pos:start="113:22" pos:end="113:33"><name pos:start="113:22" pos:end="113:29">get_byte</name><argument_list pos:start="113:30" pos:end="113:33">(<argument pos:start="113:31" pos:end="113:32"><expr pos:start="113:31" pos:end="113:32"><name pos:start="113:31" pos:end="113:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:34"><expr pos:start="115:13" pos:end="115:33"><name pos:start="115:13" pos:end="115:18"><name pos:start="115:13" pos:end="115:15">buf</name><index pos:start="115:16" pos:end="115:18">[<expr pos:start="115:17" pos:end="115:17"><literal type="number" pos:start="115:17" pos:end="115:17">2</literal></expr>]</index></name> <operator pos:start="115:20" pos:end="115:20">=</operator> <call pos:start="115:22" pos:end="115:33"><name pos:start="115:22" pos:end="115:29">get_byte</name><argument_list pos:start="115:30" pos:end="115:33">(<argument pos:start="115:31" pos:end="115:32"><expr pos:start="115:31" pos:end="115:32"><name pos:start="115:31" pos:end="115:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:34"><expr pos:start="117:13" pos:end="117:33"><name pos:start="117:13" pos:end="117:18"><name pos:start="117:13" pos:end="117:15">buf</name><index pos:start="117:16" pos:end="117:18">[<expr pos:start="117:17" pos:end="117:17"><literal type="number" pos:start="117:17" pos:end="117:17">3</literal></expr>]</index></name> <operator pos:start="117:20" pos:end="117:20">=</operator> <call pos:start="117:22" pos:end="117:33"><name pos:start="117:22" pos:end="117:29">get_byte</name><argument_list pos:start="117:30" pos:end="117:33">(<argument pos:start="117:31" pos:end="117:32"><expr pos:start="117:31" pos:end="117:32"><name pos:start="117:31" pos:end="117:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:23"><expr pos:start="119:13" pos:end="119:22"><name pos:start="119:13" pos:end="119:18"><name pos:start="119:13" pos:end="119:15">buf</name><index pos:start="119:16" pos:end="119:18">[<expr pos:start="119:17" pos:end="119:17"><literal type="number" pos:start="119:17" pos:end="119:17">4</literal></expr>]</index></name> <operator pos:start="119:20" pos:end="119:20">=</operator> <literal type="number" pos:start="119:22" pos:end="119:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="127:9">else <block pos:start="121:16" pos:end="127:9">{<block_content pos:start="123:9" pos:end="125:39">

        <expr_stmt pos:start="123:9" pos:end="123:39"><expr pos:start="123:9" pos:end="123:38"><call pos:start="123:9" pos:end="123:38"><name pos:start="123:9" pos:end="123:16">get_str8</name><argument_list pos:start="123:17" pos:end="123:38">(<argument pos:start="123:18" pos:end="123:19"><expr pos:start="123:18" pos:end="123:19"><name pos:start="123:18" pos:end="123:19">pb</name></expr></argument>, <argument pos:start="123:22" pos:end="123:24"><expr pos:start="123:22" pos:end="123:24"><name pos:start="123:22" pos:end="123:24">buf</name></expr></argument>, <argument pos:start="123:27" pos:end="123:37"><expr pos:start="123:27" pos:end="123:37"><sizeof pos:start="123:27" pos:end="123:37">sizeof<argument_list pos:start="123:33" pos:end="123:37">(<argument pos:start="123:34" pos:end="123:36"><expr pos:start="123:34" pos:end="123:36"><name pos:start="123:34" pos:end="123:36">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="123:41" pos:end="123:50">/* desc */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:39"><expr pos:start="125:9" pos:end="125:38"><call pos:start="125:9" pos:end="125:38"><name pos:start="125:9" pos:end="125:16">get_str8</name><argument_list pos:start="125:17" pos:end="125:38">(<argument pos:start="125:18" pos:end="125:19"><expr pos:start="125:18" pos:end="125:19"><name pos:start="125:18" pos:end="125:19">pb</name></expr></argument>, <argument pos:start="125:22" pos:end="125:24"><expr pos:start="125:22" pos:end="125:24"><name pos:start="125:22" pos:end="125:24">buf</name></expr></argument>, <argument pos:start="125:27" pos:end="125:37"><expr pos:start="125:27" pos:end="125:37"><sizeof pos:start="125:27" pos:end="125:37">sizeof<argument_list pos:start="125:33" pos:end="125:37">(<argument pos:start="125:34" pos:end="125:36"><expr pos:start="125:34" pos:end="125:36"><name pos:start="125:34" pos:end="125:36">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="125:41" pos:end="125:50">/* desc */</comment>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:49"><expr pos:start="129:9" pos:end="129:48"><name pos:start="129:9" pos:end="129:29"><name pos:start="129:9" pos:end="129:10">st</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:17">codec</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:29">codec_type</name></name> <operator pos:start="129:31" pos:end="129:31">=</operator> <name pos:start="129:33" pos:end="129:48">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="245:9"><if pos:start="131:9" pos:end="135:9">if <condition pos:start="131:12" pos:end="131:33">(<expr pos:start="131:13" pos:end="131:32"><operator pos:start="131:13" pos:end="131:13">!</operator><call pos:start="131:14" pos:end="131:32"><name pos:start="131:14" pos:end="131:19">strcmp</name><argument_list pos:start="131:20" pos:end="131:32">(<argument pos:start="131:21" pos:end="131:23"><expr pos:start="131:21" pos:end="131:23"><name pos:start="131:21" pos:end="131:23">buf</name></expr></argument>, <argument pos:start="131:26" pos:end="131:31"><expr pos:start="131:26" pos:end="131:31"><literal type="string" pos:start="131:26" pos:end="131:31">"dnet"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="131:35" pos:end="135:9">{<block_content pos:start="133:13" pos:end="133:47">

            <expr_stmt pos:start="133:13" pos:end="133:47"><expr pos:start="133:13" pos:end="133:46"><name pos:start="133:13" pos:end="133:31"><name pos:start="133:13" pos:end="133:14">st</name><operator pos:start="133:15" pos:end="133:16">-&gt;</operator><name pos:start="133:17" pos:end="133:21">codec</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:31">codec_id</name></name> <operator pos:start="133:33" pos:end="133:33">=</operator> <name pos:start="133:35" pos:end="133:46">CODEC_ID_AC3</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="135:11" pos:end="159:9">else if <condition pos:start="135:19" pos:end="135:40">(<expr pos:start="135:20" pos:end="135:39"><operator pos:start="135:20" pos:end="135:20">!</operator><call pos:start="135:21" pos:end="135:39"><name pos:start="135:21" pos:end="135:26">strcmp</name><argument_list pos:start="135:27" pos:end="135:39">(<argument pos:start="135:28" pos:end="135:30"><expr pos:start="135:28" pos:end="135:30"><name pos:start="135:28" pos:end="135:30">buf</name></expr></argument>, <argument pos:start="135:33" pos:end="135:38"><expr pos:start="135:33" pos:end="135:38"><literal type="string" pos:start="135:33" pos:end="135:38">"28_8"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:42" pos:end="159:9">{<block_content pos:start="137:13" pos:end="157:73">

            <expr_stmt pos:start="137:13" pos:end="137:50"><expr pos:start="137:13" pos:end="137:49"><name pos:start="137:13" pos:end="137:31"><name pos:start="137:13" pos:end="137:14">st</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:21">codec</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:31">codec_id</name></name> <operator pos:start="137:33" pos:end="137:33">=</operator> <name pos:start="137:35" pos:end="137:49">CODEC_ID_RA_288</name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:41"><expr pos:start="139:13" pos:end="139:40"><name pos:start="139:13" pos:end="139:37"><name pos:start="139:13" pos:end="139:14">st</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:21">codec</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:37">extradata_size</name></name><operator pos:start="139:38" pos:end="139:38">=</operator> <literal type="number" pos:start="139:40" pos:end="139:40">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:57"><expr pos:start="141:13" pos:end="141:56"><name pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:14">rm</name><operator pos:start="141:15" pos:end="141:16">-&gt;</operator><name pos:start="141:17" pos:end="141:31">audio_framesize</name></name> <operator pos:start="141:33" pos:end="141:33">=</operator> <name pos:start="141:35" pos:end="141:56"><name pos:start="141:35" pos:end="141:36">st</name><operator pos:start="141:37" pos:end="141:38">-&gt;</operator><name pos:start="141:39" pos:end="141:43">codec</name><operator pos:start="141:44" pos:end="141:45">-&gt;</operator><name pos:start="141:46" pos:end="141:56">block_align</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:53"><expr pos:start="143:13" pos:end="143:52"><name pos:start="143:13" pos:end="143:34"><name pos:start="143:13" pos:end="143:14">st</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:21">codec</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:34">block_align</name></name> <operator pos:start="143:36" pos:end="143:36">=</operator> <name pos:start="143:38" pos:end="143:52">coded_framesize</name></expr>;</expr_stmt>



            <if_stmt pos:start="147:13" pos:end="153:13"><if pos:start="147:13" pos:end="153:13">if<condition pos:start="147:15" pos:end="147:62">(<expr pos:start="147:16" pos:end="147:61"><name pos:start="147:16" pos:end="147:34"><name pos:start="147:16" pos:end="147:17">rm</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:34">audio_framesize</name></name> <operator pos:start="147:36" pos:end="147:37">&gt;=</operator> <name pos:start="147:39" pos:end="147:46">UINT_MAX</name> <operator pos:start="147:48" pos:end="147:48">/</operator> <name pos:start="147:50" pos:end="147:61">sub_packet_h</name></expr>)</condition><block pos:start="147:63" pos:end="153:13">{<block_content pos:start="149:17" pos:end="151:26">

                <expr_stmt pos:start="149:17" pos:end="149:90"><expr pos:start="149:17" pos:end="149:89"><call pos:start="149:17" pos:end="149:89"><name pos:start="149:17" pos:end="149:22">av_log</name><argument_list pos:start="149:23" pos:end="149:89">(<argument pos:start="149:24" pos:end="149:24"><expr pos:start="149:24" pos:end="149:24"><name pos:start="149:24" pos:end="149:24">s</name></expr></argument>, <argument pos:start="149:27" pos:end="149:38"><expr pos:start="149:27" pos:end="149:38"><name pos:start="149:27" pos:end="149:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="149:41" pos:end="149:88"><expr pos:start="149:41" pos:end="149:88"><literal type="string" pos:start="149:41" pos:end="149:88">"rm-&gt;audio_framesize * sub_packet_h too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="151:17" pos:end="151:26">return <expr pos:start="151:24" pos:end="151:25"><operator pos:start="151:24" pos:end="151:24">-</operator><literal type="number" pos:start="151:25" pos:end="151:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="157:13" pos:end="157:73"><expr pos:start="157:13" pos:end="157:72"><name pos:start="157:13" pos:end="157:24"><name pos:start="157:13" pos:end="157:14">rm</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:24">audiobuf</name></name> <operator pos:start="157:26" pos:end="157:26">=</operator> <call pos:start="157:28" pos:end="157:72"><name pos:start="157:28" pos:end="157:36">av_malloc</name><argument_list pos:start="157:37" pos:end="157:72">(<argument pos:start="157:38" pos:end="157:71"><expr pos:start="157:38" pos:end="157:71"><name pos:start="157:38" pos:end="157:56"><name pos:start="157:38" pos:end="157:39">rm</name><operator pos:start="157:40" pos:end="157:41">-&gt;</operator><name pos:start="157:42" pos:end="157:56">audio_framesize</name></name> <operator pos:start="157:58" pos:end="157:58">*</operator> <name pos:start="157:60" pos:end="157:71">sub_packet_h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="159:11" pos:end="209:9">else if <condition pos:start="159:19" pos:end="159:40">(<expr pos:start="159:20" pos:end="159:39"><operator pos:start="159:20" pos:end="159:20">!</operator><call pos:start="159:21" pos:end="159:39"><name pos:start="159:21" pos:end="159:26">strcmp</name><argument_list pos:start="159:27" pos:end="159:39">(<argument pos:start="159:28" pos:end="159:30"><expr pos:start="159:28" pos:end="159:30"><name pos:start="159:28" pos:end="159:30">buf</name></expr></argument>, <argument pos:start="159:33" pos:end="159:38"><expr pos:start="159:33" pos:end="159:38"><literal type="string" pos:start="159:33" pos:end="159:38">"cook"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:42" pos:end="209:9">{<block_content pos:start="161:13" pos:end="207:73">

            <decl_stmt pos:start="161:13" pos:end="161:36"><decl pos:start="161:13" pos:end="161:32"><type pos:start="161:13" pos:end="161:15"><name pos:start="161:13" pos:end="161:15">int</name></type> <name pos:start="161:17" pos:end="161:32">codecdata_length</name></decl>, <decl pos:start="161:35" pos:end="161:35"><type ref="prev" pos:start="161:13" pos:end="161:15"/><name pos:start="161:35" pos:end="161:35">i</name></decl>;</decl_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:25"><expr pos:start="163:13" pos:end="163:24"><call pos:start="163:13" pos:end="163:24"><name pos:start="163:13" pos:end="163:20">get_be16</name><argument_list pos:start="163:21" pos:end="163:24">(<argument pos:start="163:22" pos:end="163:23"><expr pos:start="163:22" pos:end="163:23"><name pos:start="163:22" pos:end="163:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="163:27" pos:end="163:39"><expr pos:start="163:27" pos:end="163:38"><call pos:start="163:27" pos:end="163:38"><name pos:start="163:27" pos:end="163:34">get_byte</name><argument_list pos:start="163:35" pos:end="163:38">(<argument pos:start="163:36" pos:end="163:37"><expr pos:start="163:36" pos:end="163:37"><name pos:start="163:36" pos:end="163:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="165:13" pos:end="167:29"><if pos:start="165:13" pos:end="167:29">if <condition pos:start="165:16" pos:end="165:46">(<expr pos:start="165:17" pos:end="165:45"><operator pos:start="165:17" pos:end="165:17">(</operator><operator pos:start="165:18" pos:end="165:18">(</operator><name pos:start="165:19" pos:end="165:25">version</name> <operator pos:start="165:27" pos:end="165:28">&gt;&gt;</operator> <literal type="number" pos:start="165:30" pos:end="165:31">16</literal><operator pos:start="165:32" pos:end="165:32">)</operator> <operator pos:start="165:34" pos:end="165:34">&amp;</operator> <literal type="number" pos:start="165:36" pos:end="165:39">0xff</literal><operator pos:start="165:40" pos:end="165:40">)</operator> <operator pos:start="165:42" pos:end="165:43">==</operator> <literal type="number" pos:start="165:45" pos:end="165:45">5</literal></expr>)</condition><block type="pseudo" pos:start="167:17" pos:end="167:29"><block_content pos:start="167:17" pos:end="167:29">

                <expr_stmt pos:start="167:17" pos:end="167:29"><expr pos:start="167:17" pos:end="167:28"><call pos:start="167:17" pos:end="167:28"><name pos:start="167:17" pos:end="167:24">get_byte</name><argument_list pos:start="167:25" pos:end="167:28">(<argument pos:start="167:26" pos:end="167:27"><expr pos:start="167:26" pos:end="167:27"><name pos:start="167:26" pos:end="167:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:44"><expr pos:start="169:13" pos:end="169:43"><name pos:start="169:13" pos:end="169:28">codecdata_length</name> <operator pos:start="169:30" pos:end="169:30">=</operator> <call pos:start="169:32" pos:end="169:43"><name pos:start="169:32" pos:end="169:39">get_be32</name><argument_list pos:start="169:40" pos:end="169:43">(<argument pos:start="169:41" pos:end="169:42"><expr pos:start="169:41" pos:end="169:42"><name pos:start="169:41" pos:end="169:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="177:13"><if pos:start="171:13" pos:end="177:13">if<condition pos:start="171:15" pos:end="171:93">(<expr pos:start="171:16" pos:end="171:92"><name pos:start="171:16" pos:end="171:31">codecdata_length</name> <operator pos:start="171:33" pos:end="171:33">+</operator> <name pos:start="171:35" pos:end="171:62">FF_INPUT_BUFFER_PADDING_SIZE</name> <operator pos:start="171:64" pos:end="171:65">&lt;=</operator> <operator pos:start="171:67" pos:end="171:67">(</operator><name pos:start="171:68" pos:end="171:75">unsigned</name><operator pos:start="171:76" pos:end="171:76">)</operator><name pos:start="171:77" pos:end="171:92">codecdata_length</name></expr>)</condition><block pos:start="171:94" pos:end="177:13">{<block_content pos:start="173:17" pos:end="175:26">

                <expr_stmt pos:start="173:17" pos:end="173:72"><expr pos:start="173:17" pos:end="173:71"><call pos:start="173:17" pos:end="173:71"><name pos:start="173:17" pos:end="173:22">av_log</name><argument_list pos:start="173:23" pos:end="173:71">(<argument pos:start="173:24" pos:end="173:24"><expr pos:start="173:24" pos:end="173:24"><name pos:start="173:24" pos:end="173:24">s</name></expr></argument>, <argument pos:start="173:27" pos:end="173:38"><expr pos:start="173:27" pos:end="173:38"><name pos:start="173:27" pos:end="173:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="173:41" pos:end="173:70"><expr pos:start="173:41" pos:end="173:70"><literal type="string" pos:start="173:41" pos:end="173:70">"codecdata_length too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="175:17" pos:end="175:26">return <expr pos:start="175:24" pos:end="175:25"><operator pos:start="175:24" pos:end="175:24">-</operator><literal type="number" pos:start="175:25" pos:end="175:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="181:13" pos:end="181:48"><expr pos:start="181:13" pos:end="181:47"><name pos:start="181:13" pos:end="181:31"><name pos:start="181:13" pos:end="181:14">st</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:21">codec</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:31">codec_id</name></name> <operator pos:start="181:33" pos:end="181:33">=</operator> <name pos:start="181:35" pos:end="181:47">CODEC_ID_COOK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:56"><expr pos:start="183:13" pos:end="183:55"><name pos:start="183:13" pos:end="183:37"><name pos:start="183:13" pos:end="183:14">st</name><operator pos:start="183:15" pos:end="183:16">-&gt;</operator><name pos:start="183:17" pos:end="183:21">codec</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:37">extradata_size</name></name><operator pos:start="183:38" pos:end="183:38">=</operator> <name pos:start="183:40" pos:end="183:55">codecdata_length</name></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:103"><expr pos:start="185:13" pos:end="185:102"><name pos:start="185:13" pos:end="185:32"><name pos:start="185:13" pos:end="185:14">st</name><operator pos:start="185:15" pos:end="185:16">-&gt;</operator><name pos:start="185:17" pos:end="185:21">codec</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:32">extradata</name></name><operator pos:start="185:33" pos:end="185:33">=</operator> <call pos:start="185:35" pos:end="185:102"><name pos:start="185:35" pos:end="185:44">av_mallocz</name><argument_list pos:start="185:45" pos:end="185:102">(<argument pos:start="185:46" pos:end="185:101"><expr pos:start="185:46" pos:end="185:101"><name pos:start="185:46" pos:end="185:70"><name pos:start="185:46" pos:end="185:47">st</name><operator pos:start="185:48" pos:end="185:49">-&gt;</operator><name pos:start="185:50" pos:end="185:54">codec</name><operator pos:start="185:55" pos:end="185:56">-&gt;</operator><name pos:start="185:57" pos:end="185:70">extradata_size</name></name> <operator pos:start="185:72" pos:end="185:72">+</operator> <name pos:start="185:74" pos:end="185:101">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="187:13" pos:end="189:67">for<control pos:start="187:16" pos:end="187:49">(<init pos:start="187:17" pos:end="187:22"><expr pos:start="187:17" pos:end="187:21"><name pos:start="187:17" pos:end="187:17">i</name> <operator pos:start="187:19" pos:end="187:19">=</operator> <literal type="number" pos:start="187:21" pos:end="187:21">0</literal></expr>;</init> <condition pos:start="187:24" pos:end="187:44"><expr pos:start="187:24" pos:end="187:43"><name pos:start="187:24" pos:end="187:24">i</name> <operator pos:start="187:26" pos:end="187:26">&lt;</operator> <name pos:start="187:28" pos:end="187:43">codecdata_length</name></expr>;</condition> <incr pos:start="187:46" pos:end="187:48"><expr pos:start="187:46" pos:end="187:48"><name pos:start="187:46" pos:end="187:46">i</name><operator pos:start="187:47" pos:end="187:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="189:17" pos:end="189:67"><block_content pos:start="189:17" pos:end="189:67">

                <expr_stmt pos:start="189:17" pos:end="189:67"><expr pos:start="189:17" pos:end="189:66"><operator pos:start="189:17" pos:end="189:17">(</operator><operator pos:start="189:18" pos:end="189:18">(</operator><name pos:start="189:19" pos:end="189:25">uint8_t</name><operator pos:start="189:26" pos:end="189:26">*</operator><operator pos:start="189:27" pos:end="189:27">)</operator><name pos:start="189:28" pos:end="189:47"><name pos:start="189:28" pos:end="189:29">st</name><operator pos:start="189:30" pos:end="189:31">-&gt;</operator><name pos:start="189:32" pos:end="189:36">codec</name><operator pos:start="189:37" pos:end="189:38">-&gt;</operator><name pos:start="189:39" pos:end="189:47">extradata</name></name><operator pos:start="189:48" pos:end="189:48">)</operator><index pos:start="189:49" pos:end="189:51">[<expr pos:start="189:50" pos:end="189:50"><name pos:start="189:50" pos:end="189:50">i</name></expr>]</index> <operator pos:start="189:53" pos:end="189:53">=</operator> <call pos:start="189:55" pos:end="189:66"><name pos:start="189:55" pos:end="189:62">get_byte</name><argument_list pos:start="189:63" pos:end="189:66">(<argument pos:start="189:64" pos:end="189:65"><expr pos:start="189:64" pos:end="189:65"><name pos:start="189:64" pos:end="189:65">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="191:13" pos:end="191:57"><expr pos:start="191:13" pos:end="191:56"><name pos:start="191:13" pos:end="191:31"><name pos:start="191:13" pos:end="191:14">rm</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:31">audio_framesize</name></name> <operator pos:start="191:33" pos:end="191:33">=</operator> <name pos:start="191:35" pos:end="191:56"><name pos:start="191:35" pos:end="191:36">st</name><operator pos:start="191:37" pos:end="191:38">-&gt;</operator><name pos:start="191:39" pos:end="191:43">codec</name><operator pos:start="191:44" pos:end="191:45">-&gt;</operator><name pos:start="191:46" pos:end="191:56">block_align</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:57"><expr pos:start="193:13" pos:end="193:56"><name pos:start="193:13" pos:end="193:34"><name pos:start="193:13" pos:end="193:14">st</name><operator pos:start="193:15" pos:end="193:16">-&gt;</operator><name pos:start="193:17" pos:end="193:21">codec</name><operator pos:start="193:22" pos:end="193:23">-&gt;</operator><name pos:start="193:24" pos:end="193:34">block_align</name></name> <operator pos:start="193:36" pos:end="193:36">=</operator> <name pos:start="193:38" pos:end="193:56"><name pos:start="193:38" pos:end="193:39">rm</name><operator pos:start="193:40" pos:end="193:41">-&gt;</operator><name pos:start="193:42" pos:end="193:56">sub_packet_size</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="197:13" pos:end="203:13"><if pos:start="197:13" pos:end="203:13">if<condition pos:start="197:15" pos:end="197:62">(<expr pos:start="197:16" pos:end="197:61"><name pos:start="197:16" pos:end="197:34"><name pos:start="197:16" pos:end="197:17">rm</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:34">audio_framesize</name></name> <operator pos:start="197:36" pos:end="197:37">&gt;=</operator> <name pos:start="197:39" pos:end="197:46">UINT_MAX</name> <operator pos:start="197:48" pos:end="197:48">/</operator> <name pos:start="197:50" pos:end="197:61">sub_packet_h</name></expr>)</condition><block pos:start="197:63" pos:end="203:13">{<block_content pos:start="199:17" pos:end="201:26">

                <expr_stmt pos:start="199:17" pos:end="199:90"><expr pos:start="199:17" pos:end="199:89"><call pos:start="199:17" pos:end="199:89"><name pos:start="199:17" pos:end="199:22">av_log</name><argument_list pos:start="199:23" pos:end="199:89">(<argument pos:start="199:24" pos:end="199:24"><expr pos:start="199:24" pos:end="199:24"><name pos:start="199:24" pos:end="199:24">s</name></expr></argument>, <argument pos:start="199:27" pos:end="199:38"><expr pos:start="199:27" pos:end="199:38"><name pos:start="199:27" pos:end="199:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="199:41" pos:end="199:88"><expr pos:start="199:41" pos:end="199:88"><literal type="string" pos:start="199:41" pos:end="199:88">"rm-&gt;audio_framesize * sub_packet_h too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="201:17" pos:end="201:26">return <expr pos:start="201:24" pos:end="201:25"><operator pos:start="201:24" pos:end="201:24">-</operator><literal type="number" pos:start="201:25" pos:end="201:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="207:13" pos:end="207:73"><expr pos:start="207:13" pos:end="207:72"><name pos:start="207:13" pos:end="207:24"><name pos:start="207:13" pos:end="207:14">rm</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:24">audiobuf</name></name> <operator pos:start="207:26" pos:end="207:26">=</operator> <call pos:start="207:28" pos:end="207:72"><name pos:start="207:28" pos:end="207:36">av_malloc</name><argument_list pos:start="207:37" pos:end="207:72">(<argument pos:start="207:38" pos:end="207:71"><expr pos:start="207:38" pos:end="207:71"><name pos:start="207:38" pos:end="207:56"><name pos:start="207:38" pos:end="207:39">rm</name><operator pos:start="207:40" pos:end="207:41">-&gt;</operator><name pos:start="207:42" pos:end="207:56">audio_framesize</name></name> <operator pos:start="207:58" pos:end="207:58">*</operator> <name pos:start="207:60" pos:end="207:71">sub_packet_h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="209:11" pos:end="237:9">else if <condition pos:start="209:19" pos:end="209:64">(<expr pos:start="209:20" pos:end="209:63"><operator pos:start="209:20" pos:end="209:20">!</operator><call pos:start="209:21" pos:end="209:39"><name pos:start="209:21" pos:end="209:26">strcmp</name><argument_list pos:start="209:27" pos:end="209:39">(<argument pos:start="209:28" pos:end="209:30"><expr pos:start="209:28" pos:end="209:30"><name pos:start="209:28" pos:end="209:30">buf</name></expr></argument>, <argument pos:start="209:33" pos:end="209:38"><expr pos:start="209:33" pos:end="209:38"><literal type="string" pos:start="209:33" pos:end="209:38">"raac"</literal></expr></argument>)</argument_list></call> <operator pos:start="209:41" pos:end="209:42">||</operator> <operator pos:start="209:44" pos:end="209:44">!</operator><call pos:start="209:45" pos:end="209:63"><name pos:start="209:45" pos:end="209:50">strcmp</name><argument_list pos:start="209:51" pos:end="209:63">(<argument pos:start="209:52" pos:end="209:54"><expr pos:start="209:52" pos:end="209:54"><name pos:start="209:52" pos:end="209:54">buf</name></expr></argument>, <argument pos:start="209:57" pos:end="209:62"><expr pos:start="209:57" pos:end="209:62"><literal type="string" pos:start="209:57" pos:end="209:62">"racp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="209:66" pos:end="237:9">{<block_content pos:start="211:13" pos:end="235:13">

            <decl_stmt pos:start="211:13" pos:end="211:36"><decl pos:start="211:13" pos:end="211:32"><type pos:start="211:13" pos:end="211:15"><name pos:start="211:13" pos:end="211:15">int</name></type> <name pos:start="211:17" pos:end="211:32">codecdata_length</name></decl>, <decl pos:start="211:35" pos:end="211:35"><type ref="prev" pos:start="211:13" pos:end="211:15"/><name pos:start="211:35" pos:end="211:35">i</name></decl>;</decl_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:25"><expr pos:start="213:13" pos:end="213:24"><call pos:start="213:13" pos:end="213:24"><name pos:start="213:13" pos:end="213:20">get_be16</name><argument_list pos:start="213:21" pos:end="213:24">(<argument pos:start="213:22" pos:end="213:23"><expr pos:start="213:22" pos:end="213:23"><name pos:start="213:22" pos:end="213:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="213:27" pos:end="213:39"><expr pos:start="213:27" pos:end="213:38"><call pos:start="213:27" pos:end="213:38"><name pos:start="213:27" pos:end="213:34">get_byte</name><argument_list pos:start="213:35" pos:end="213:38">(<argument pos:start="213:36" pos:end="213:37"><expr pos:start="213:36" pos:end="213:37"><name pos:start="213:36" pos:end="213:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="215:13" pos:end="217:29"><if pos:start="215:13" pos:end="217:29">if <condition pos:start="215:16" pos:end="215:46">(<expr pos:start="215:17" pos:end="215:45"><operator pos:start="215:17" pos:end="215:17">(</operator><operator pos:start="215:18" pos:end="215:18">(</operator><name pos:start="215:19" pos:end="215:25">version</name> <operator pos:start="215:27" pos:end="215:28">&gt;&gt;</operator> <literal type="number" pos:start="215:30" pos:end="215:31">16</literal><operator pos:start="215:32" pos:end="215:32">)</operator> <operator pos:start="215:34" pos:end="215:34">&amp;</operator> <literal type="number" pos:start="215:36" pos:end="215:39">0xff</literal><operator pos:start="215:40" pos:end="215:40">)</operator> <operator pos:start="215:42" pos:end="215:43">==</operator> <literal type="number" pos:start="215:45" pos:end="215:45">5</literal></expr>)</condition><block type="pseudo" pos:start="217:17" pos:end="217:29"><block_content pos:start="217:17" pos:end="217:29">

                <expr_stmt pos:start="217:17" pos:end="217:29"><expr pos:start="217:17" pos:end="217:28"><call pos:start="217:17" pos:end="217:28"><name pos:start="217:17" pos:end="217:24">get_byte</name><argument_list pos:start="217:25" pos:end="217:28">(<argument pos:start="217:26" pos:end="217:27"><expr pos:start="217:26" pos:end="217:27"><name pos:start="217:26" pos:end="217:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:47"><expr pos:start="219:13" pos:end="219:46"><name pos:start="219:13" pos:end="219:31"><name pos:start="219:13" pos:end="219:14">st</name><operator pos:start="219:15" pos:end="219:16">-&gt;</operator><name pos:start="219:17" pos:end="219:21">codec</name><operator pos:start="219:22" pos:end="219:23">-&gt;</operator><name pos:start="219:24" pos:end="219:31">codec_id</name></name> <operator pos:start="219:33" pos:end="219:33">=</operator> <name pos:start="219:35" pos:end="219:46">CODEC_ID_AAC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:44"><expr pos:start="221:13" pos:end="221:43"><name pos:start="221:13" pos:end="221:28">codecdata_length</name> <operator pos:start="221:30" pos:end="221:30">=</operator> <call pos:start="221:32" pos:end="221:43"><name pos:start="221:32" pos:end="221:39">get_be32</name><argument_list pos:start="221:40" pos:end="221:43">(<argument pos:start="221:41" pos:end="221:42"><expr pos:start="221:41" pos:end="221:42"><name pos:start="221:41" pos:end="221:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="223:13" pos:end="235:13"><if pos:start="223:13" pos:end="235:13">if <condition pos:start="223:16" pos:end="223:38">(<expr pos:start="223:17" pos:end="223:37"><name pos:start="223:17" pos:end="223:32">codecdata_length</name> <operator pos:start="223:34" pos:end="223:35">&gt;=</operator> <literal type="number" pos:start="223:37" pos:end="223:37">1</literal></expr>)</condition> <block pos:start="223:40" pos:end="235:13">{<block_content pos:start="225:17" pos:end="233:71">

                <expr_stmt pos:start="225:17" pos:end="225:65"><expr pos:start="225:17" pos:end="225:64"><name pos:start="225:17" pos:end="225:41"><name pos:start="225:17" pos:end="225:18">st</name><operator pos:start="225:19" pos:end="225:20">-&gt;</operator><name pos:start="225:21" pos:end="225:25">codec</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:41">extradata_size</name></name> <operator pos:start="225:43" pos:end="225:43">=</operator> <name pos:start="225:45" pos:end="225:60">codecdata_length</name> <operator pos:start="225:62" pos:end="225:62">-</operator> <literal type="number" pos:start="225:64" pos:end="225:64">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:108"><expr pos:start="227:17" pos:end="227:107"><name pos:start="227:17" pos:end="227:36"><name pos:start="227:17" pos:end="227:18">st</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:25">codec</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:36">extradata</name></name> <operator pos:start="227:38" pos:end="227:38">=</operator> <call pos:start="227:40" pos:end="227:107"><name pos:start="227:40" pos:end="227:49">av_mallocz</name><argument_list pos:start="227:50" pos:end="227:107">(<argument pos:start="227:51" pos:end="227:106"><expr pos:start="227:51" pos:end="227:106"><name pos:start="227:51" pos:end="227:75"><name pos:start="227:51" pos:end="227:52">st</name><operator pos:start="227:53" pos:end="227:54">-&gt;</operator><name pos:start="227:55" pos:end="227:59">codec</name><operator pos:start="227:60" pos:end="227:61">-&gt;</operator><name pos:start="227:62" pos:end="227:75">extradata_size</name></name> <operator pos:start="227:77" pos:end="227:77">+</operator> <name pos:start="227:79" pos:end="227:106">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="229:29"><expr pos:start="229:17" pos:end="229:28"><call pos:start="229:17" pos:end="229:28"><name pos:start="229:17" pos:end="229:24">get_byte</name><argument_list pos:start="229:25" pos:end="229:28">(<argument pos:start="229:26" pos:end="229:27"><expr pos:start="229:26" pos:end="229:27"><name pos:start="229:26" pos:end="229:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="231:17" pos:end="233:71">for<control pos:start="231:20" pos:end="231:62">(<init pos:start="231:21" pos:end="231:26"><expr pos:start="231:21" pos:end="231:25"><name pos:start="231:21" pos:end="231:21">i</name> <operator pos:start="231:23" pos:end="231:23">=</operator> <literal type="number" pos:start="231:25" pos:end="231:25">0</literal></expr>;</init> <condition pos:start="231:28" pos:end="231:57"><expr pos:start="231:28" pos:end="231:56"><name pos:start="231:28" pos:end="231:28">i</name> <operator pos:start="231:30" pos:end="231:30">&lt;</operator> <name pos:start="231:32" pos:end="231:56"><name pos:start="231:32" pos:end="231:33">st</name><operator pos:start="231:34" pos:end="231:35">-&gt;</operator><name pos:start="231:36" pos:end="231:40">codec</name><operator pos:start="231:41" pos:end="231:42">-&gt;</operator><name pos:start="231:43" pos:end="231:56">extradata_size</name></name></expr>;</condition> <incr pos:start="231:59" pos:end="231:61"><expr pos:start="231:59" pos:end="231:61"><name pos:start="231:59" pos:end="231:59">i</name><operator pos:start="231:60" pos:end="231:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="233:21" pos:end="233:71"><block_content pos:start="233:21" pos:end="233:71">

                    <expr_stmt pos:start="233:21" pos:end="233:71"><expr pos:start="233:21" pos:end="233:70"><operator pos:start="233:21" pos:end="233:21">(</operator><operator pos:start="233:22" pos:end="233:22">(</operator><name pos:start="233:23" pos:end="233:29">uint8_t</name><operator pos:start="233:30" pos:end="233:30">*</operator><operator pos:start="233:31" pos:end="233:31">)</operator><name pos:start="233:32" pos:end="233:51"><name pos:start="233:32" pos:end="233:33">st</name><operator pos:start="233:34" pos:end="233:35">-&gt;</operator><name pos:start="233:36" pos:end="233:40">codec</name><operator pos:start="233:41" pos:end="233:42">-&gt;</operator><name pos:start="233:43" pos:end="233:51">extradata</name></name><operator pos:start="233:52" pos:end="233:52">)</operator><index pos:start="233:53" pos:end="233:55">[<expr pos:start="233:54" pos:end="233:54"><name pos:start="233:54" pos:end="233:54">i</name></expr>]</index> <operator pos:start="233:57" pos:end="233:57">=</operator> <call pos:start="233:59" pos:end="233:70"><name pos:start="233:59" pos:end="233:66">get_byte</name><argument_list pos:start="233:67" pos:end="233:70">(<argument pos:start="233:68" pos:end="233:69"><expr pos:start="233:68" pos:end="233:69"><name pos:start="233:68" pos:end="233:69">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="237:11" pos:end="245:9">else <block pos:start="237:16" pos:end="245:9">{<block_content pos:start="239:13" pos:end="243:25">

            <expr_stmt pos:start="239:13" pos:end="239:48"><expr pos:start="239:13" pos:end="239:47"><name pos:start="239:13" pos:end="239:31"><name pos:start="239:13" pos:end="239:14">st</name><operator pos:start="239:15" pos:end="239:16">-&gt;</operator><name pos:start="239:17" pos:end="239:21">codec</name><operator pos:start="239:22" pos:end="239:23">-&gt;</operator><name pos:start="239:24" pos:end="239:31">codec_id</name></name> <operator pos:start="239:33" pos:end="239:33">=</operator> <name pos:start="239:35" pos:end="239:47">CODEC_ID_NONE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="243:25"><expr pos:start="241:13" pos:end="243:24"><call pos:start="241:13" pos:end="243:24"><name pos:start="241:13" pos:end="241:19">pstrcpy</name><argument_list pos:start="241:20" pos:end="243:24">(<argument pos:start="241:21" pos:end="241:41"><expr pos:start="241:21" pos:end="241:41"><name pos:start="241:21" pos:end="241:41"><name pos:start="241:21" pos:end="241:22">st</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:29">codec</name><operator pos:start="241:30" pos:end="241:31">-&gt;</operator><name pos:start="241:32" pos:end="241:41">codec_name</name></name></expr></argument>, <argument pos:start="241:44" pos:end="241:72"><expr pos:start="241:44" pos:end="241:72"><sizeof pos:start="241:44" pos:end="241:72">sizeof<argument_list pos:start="241:50" pos:end="241:72">(<argument pos:start="241:51" pos:end="241:71"><expr pos:start="241:51" pos:end="241:71"><name pos:start="241:51" pos:end="241:71"><name pos:start="241:51" pos:end="241:52">st</name><operator pos:start="241:53" pos:end="241:54">-&gt;</operator><name pos:start="241:55" pos:end="241:59">codec</name><operator pos:start="241:60" pos:end="241:61">-&gt;</operator><name pos:start="241:62" pos:end="241:71">codec_name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="243:21" pos:end="243:23"><expr pos:start="243:21" pos:end="243:23"><name pos:start="243:21" pos:end="243:23">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="247:9" pos:end="265:9"><if pos:start="247:9" pos:end="265:9">if <condition pos:start="247:12" pos:end="247:21">(<expr pos:start="247:13" pos:end="247:20"><name pos:start="247:13" pos:end="247:20">read_all</name></expr>)</condition> <block pos:start="247:23" pos:end="265:9">{<block_content pos:start="249:13" pos:end="263:57">

            <expr_stmt pos:start="249:13" pos:end="249:25"><expr pos:start="249:13" pos:end="249:24"><call pos:start="249:13" pos:end="249:24"><name pos:start="249:13" pos:end="249:20">get_byte</name><argument_list pos:start="249:21" pos:end="249:24">(<argument pos:start="249:22" pos:end="249:23"><expr pos:start="249:22" pos:end="249:23"><name pos:start="249:22" pos:end="249:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:25"><expr pos:start="251:13" pos:end="251:24"><call pos:start="251:13" pos:end="251:24"><name pos:start="251:13" pos:end="251:20">get_byte</name><argument_list pos:start="251:21" pos:end="251:24">(<argument pos:start="251:22" pos:end="251:23"><expr pos:start="251:22" pos:end="251:23"><name pos:start="251:22" pos:end="251:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:25"><expr pos:start="253:13" pos:end="253:24"><call pos:start="253:13" pos:end="253:24"><name pos:start="253:13" pos:end="253:20">get_byte</name><argument_list pos:start="253:21" pos:end="253:24">(<argument pos:start="253:22" pos:end="253:23"><expr pos:start="253:22" pos:end="253:23"><name pos:start="253:22" pos:end="253:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="257:13" pos:end="257:53"><expr pos:start="257:13" pos:end="257:52"><call pos:start="257:13" pos:end="257:52"><name pos:start="257:13" pos:end="257:20">get_str8</name><argument_list pos:start="257:21" pos:end="257:52">(<argument pos:start="257:22" pos:end="257:23"><expr pos:start="257:22" pos:end="257:23"><name pos:start="257:22" pos:end="257:23">pb</name></expr></argument>, <argument pos:start="257:26" pos:end="257:33"><expr pos:start="257:26" pos:end="257:33"><name pos:start="257:26" pos:end="257:33"><name pos:start="257:26" pos:end="257:26">s</name><operator pos:start="257:27" pos:end="257:28">-&gt;</operator><name pos:start="257:29" pos:end="257:33">title</name></name></expr></argument>, <argument pos:start="257:36" pos:end="257:51"><expr pos:start="257:36" pos:end="257:51"><sizeof pos:start="257:36" pos:end="257:51">sizeof<argument_list pos:start="257:42" pos:end="257:51">(<argument pos:start="257:43" pos:end="257:50"><expr pos:start="257:43" pos:end="257:50"><name pos:start="257:43" pos:end="257:50"><name pos:start="257:43" pos:end="257:43">s</name><operator pos:start="257:44" pos:end="257:45">-&gt;</operator><name pos:start="257:46" pos:end="257:50">title</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:55"><expr pos:start="259:13" pos:end="259:54"><call pos:start="259:13" pos:end="259:54"><name pos:start="259:13" pos:end="259:20">get_str8</name><argument_list pos:start="259:21" pos:end="259:54">(<argument pos:start="259:22" pos:end="259:23"><expr pos:start="259:22" pos:end="259:23"><name pos:start="259:22" pos:end="259:23">pb</name></expr></argument>, <argument pos:start="259:26" pos:end="259:34"><expr pos:start="259:26" pos:end="259:34"><name pos:start="259:26" pos:end="259:34"><name pos:start="259:26" pos:end="259:26">s</name><operator pos:start="259:27" pos:end="259:28">-&gt;</operator><name pos:start="259:29" pos:end="259:34">author</name></name></expr></argument>, <argument pos:start="259:37" pos:end="259:53"><expr pos:start="259:37" pos:end="259:53"><sizeof pos:start="259:37" pos:end="259:53">sizeof<argument_list pos:start="259:43" pos:end="259:53">(<argument pos:start="259:44" pos:end="259:52"><expr pos:start="259:44" pos:end="259:52"><name pos:start="259:44" pos:end="259:52"><name pos:start="259:44" pos:end="259:44">s</name><operator pos:start="259:45" pos:end="259:46">-&gt;</operator><name pos:start="259:47" pos:end="259:52">author</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:61"><expr pos:start="261:13" pos:end="261:60"><call pos:start="261:13" pos:end="261:60"><name pos:start="261:13" pos:end="261:20">get_str8</name><argument_list pos:start="261:21" pos:end="261:60">(<argument pos:start="261:22" pos:end="261:23"><expr pos:start="261:22" pos:end="261:23"><name pos:start="261:22" pos:end="261:23">pb</name></expr></argument>, <argument pos:start="261:26" pos:end="261:37"><expr pos:start="261:26" pos:end="261:37"><name pos:start="261:26" pos:end="261:37"><name pos:start="261:26" pos:end="261:26">s</name><operator pos:start="261:27" pos:end="261:28">-&gt;</operator><name pos:start="261:29" pos:end="261:37">copyright</name></name></expr></argument>, <argument pos:start="261:40" pos:end="261:59"><expr pos:start="261:40" pos:end="261:59"><sizeof pos:start="261:40" pos:end="261:59">sizeof<argument_list pos:start="261:46" pos:end="261:59">(<argument pos:start="261:47" pos:end="261:58"><expr pos:start="261:47" pos:end="261:58"><name pos:start="261:47" pos:end="261:58"><name pos:start="261:47" pos:end="261:47">s</name><operator pos:start="261:48" pos:end="261:49">-&gt;</operator><name pos:start="261:50" pos:end="261:58">copyright</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:57"><expr pos:start="263:13" pos:end="263:56"><call pos:start="263:13" pos:end="263:56"><name pos:start="263:13" pos:end="263:20">get_str8</name><argument_list pos:start="263:21" pos:end="263:56">(<argument pos:start="263:22" pos:end="263:23"><expr pos:start="263:22" pos:end="263:23"><name pos:start="263:22" pos:end="263:23">pb</name></expr></argument>, <argument pos:start="263:26" pos:end="263:35"><expr pos:start="263:26" pos:end="263:35"><name pos:start="263:26" pos:end="263:35"><name pos:start="263:26" pos:end="263:26">s</name><operator pos:start="263:27" pos:end="263:28">-&gt;</operator><name pos:start="263:29" pos:end="263:35">comment</name></name></expr></argument>, <argument pos:start="263:38" pos:end="263:55"><expr pos:start="263:38" pos:end="263:55"><sizeof pos:start="263:38" pos:end="263:55">sizeof<argument_list pos:start="263:44" pos:end="263:55">(<argument pos:start="263:45" pos:end="263:54"><expr pos:start="263:45" pos:end="263:54"><name pos:start="263:45" pos:end="263:54"><name pos:start="263:45" pos:end="263:45">s</name><operator pos:start="263:46" pos:end="263:47">-&gt;</operator><name pos:start="263:48" pos:end="263:54">comment</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
