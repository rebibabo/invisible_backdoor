<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/254.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:44">h264_loop_filter_chroma_c</name><parameter_list pos:start="1:45" pos:end="1:118">(<parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pix</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:70"><decl pos:start="1:60" pos:end="1:70"><type pos:start="1:60" pos:end="1:70"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:70">xstride</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:83"><decl pos:start="1:73" pos:end="1:83"><type pos:start="1:73" pos:end="1:83"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:83">ystride</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:94"><decl pos:start="1:86" pos:end="1:94"><type pos:start="1:86" pos:end="1:94"><name pos:start="1:86" pos:end="1:88">int</name></type> <name pos:start="1:90" pos:end="1:94">alpha</name></decl></parameter>, <parameter pos:start="1:97" pos:end="1:104"><decl pos:start="1:97" pos:end="1:104"><type pos:start="1:97" pos:end="1:104"><name pos:start="1:97" pos:end="1:99">int</name></type> <name pos:start="1:101" pos:end="1:104">beta</name></decl></parameter>, <parameter pos:start="1:107" pos:end="1:117"><decl pos:start="1:107" pos:end="1:117"><type pos:start="1:107" pos:end="1:117"><name pos:start="1:107" pos:end="1:112">int8_t</name> <modifier pos:start="1:114" pos:end="1:114">*</modifier></type><name pos:start="1:115" pos:end="1:117">tc0</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">d</name></decl>;</decl_stmt>

    <for pos:start="7:5" pos:end="53:5">for<control pos:start="7:8" pos:end="7:28">( <init pos:start="7:10" pos:end="7:15"><expr pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:10">i</name> <operator pos:start="7:12" pos:end="7:12">=</operator> <literal type="number" pos:start="7:14" pos:end="7:14">0</literal></expr>;</init> <condition pos:start="7:17" pos:end="7:22"><expr pos:start="7:17" pos:end="7:21"><name pos:start="7:17" pos:end="7:17">i</name> <operator pos:start="7:19" pos:end="7:19">&lt;</operator> <literal type="number" pos:start="7:21" pos:end="7:21">4</literal></expr>;</condition> <incr pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:24">i</name><operator pos:start="7:25" pos:end="7:26">++</operator></expr></incr> )</control> <block pos:start="7:30" pos:end="53:5">{<block_content pos:start="9:9" pos:end="51:9">

        <decl_stmt pos:start="9:9" pos:end="9:30"><decl pos:start="9:9" pos:end="9:29"><type pos:start="9:9" pos:end="9:17"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:17">int</name></type> <name pos:start="9:19" pos:end="9:20">tc</name> <init pos:start="9:22" pos:end="9:29">= <expr pos:start="9:24" pos:end="9:29"><name pos:start="9:24" pos:end="9:29"><name pos:start="9:24" pos:end="9:26">tc0</name><index pos:start="9:27" pos:end="9:29">[<expr pos:start="9:28" pos:end="9:28"><name pos:start="9:28" pos:end="9:28">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="11:9" pos:end="17:9"><if pos:start="11:9" pos:end="17:9">if<condition pos:start="11:11" pos:end="11:21">( <expr pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:14">tc</name> <operator pos:start="11:16" pos:end="11:17">&lt;=</operator> <literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr> )</condition> <block pos:start="11:23" pos:end="17:9">{<block_content pos:start="13:13" pos:end="15:21">

            <expr_stmt pos:start="13:13" pos:end="13:29"><expr pos:start="13:13" pos:end="13:28"><name pos:start="13:13" pos:end="13:15">pix</name> <operator pos:start="13:17" pos:end="13:18">+=</operator> <literal type="number" pos:start="13:20" pos:end="13:20">2</literal><operator pos:start="13:21" pos:end="13:21">*</operator><name pos:start="13:22" pos:end="13:28">ystride</name></expr>;</expr_stmt>

            <continue pos:start="15:13" pos:end="15:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <for pos:start="19:9" pos:end="51:9">for<control pos:start="19:12" pos:end="19:32">( <init pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">d</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:26"><expr pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">d</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <literal type="number" pos:start="19:25" pos:end="19:25">2</literal></expr>;</condition> <incr pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:28">d</name><operator pos:start="19:29" pos:end="19:30">++</operator></expr></incr> )</control> <block pos:start="19:34" pos:end="51:9">{<block_content pos:start="21:13" pos:end="49:27">

            <decl_stmt pos:start="21:13" pos:end="21:43"><decl pos:start="21:13" pos:end="21:42"><type pos:start="21:13" pos:end="21:21"><specifier pos:start="21:13" pos:end="21:17">const</specifier> <name pos:start="21:19" pos:end="21:21">int</name></type> <name pos:start="21:23" pos:end="21:24">p0</name> <init pos:start="21:26" pos:end="21:42">= <expr pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:30">pix</name><index pos:start="21:31" pos:end="21:42">[<expr pos:start="21:32" pos:end="21:41"><operator pos:start="21:32" pos:end="21:32">-</operator><literal type="number" pos:start="21:33" pos:end="21:33">1</literal><operator pos:start="21:34" pos:end="21:34">*</operator><name pos:start="21:35" pos:end="21:41">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:43"><decl pos:start="23:13" pos:end="23:42"><type pos:start="23:13" pos:end="23:21"><specifier pos:start="23:13" pos:end="23:17">const</specifier> <name pos:start="23:19" pos:end="23:21">int</name></type> <name pos:start="23:23" pos:end="23:24">p1</name> <init pos:start="23:26" pos:end="23:42">= <expr pos:start="23:28" pos:end="23:42"><name pos:start="23:28" pos:end="23:42"><name pos:start="23:28" pos:end="23:30">pix</name><index pos:start="23:31" pos:end="23:42">[<expr pos:start="23:32" pos:end="23:41"><operator pos:start="23:32" pos:end="23:32">-</operator><literal type="number" pos:start="23:33" pos:end="23:33">2</literal><operator pos:start="23:34" pos:end="23:34">*</operator><name pos:start="23:35" pos:end="23:41">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:34"><decl pos:start="25:13" pos:end="25:33"><type pos:start="25:13" pos:end="25:21"><specifier pos:start="25:13" pos:end="25:17">const</specifier> <name pos:start="25:19" pos:end="25:21">int</name></type> <name pos:start="25:23" pos:end="25:24">q0</name> <init pos:start="25:26" pos:end="25:33">= <expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:30">pix</name><index pos:start="25:31" pos:end="25:33">[<expr pos:start="25:32" pos:end="25:32"><literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="27:13" pos:end="27:42"><decl pos:start="27:13" pos:end="27:41"><type pos:start="27:13" pos:end="27:21"><specifier pos:start="27:13" pos:end="27:17">const</specifier> <name pos:start="27:19" pos:end="27:21">int</name></type> <name pos:start="27:23" pos:end="27:24">q1</name> <init pos:start="27:26" pos:end="27:41">= <expr pos:start="27:28" pos:end="27:41"><name pos:start="27:28" pos:end="27:41"><name pos:start="27:28" pos:end="27:30">pix</name><index pos:start="27:31" pos:end="27:41">[<expr pos:start="27:32" pos:end="27:40"><literal type="number" pos:start="27:32" pos:end="27:32">1</literal><operator pos:start="27:33" pos:end="27:33">*</operator><name pos:start="27:34" pos:end="27:40">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="31:13" pos:end="47:13"><if pos:start="31:13" pos:end="47:13">if<condition pos:start="31:15" pos:end="35:41">( <expr pos:start="31:17" pos:end="35:39"><call pos:start="31:17" pos:end="31:32"><name pos:start="31:17" pos:end="31:21">FFABS</name><argument_list pos:start="31:22" pos:end="31:32">( <argument pos:start="31:24" pos:end="31:30"><expr pos:start="31:24" pos:end="31:30"><name pos:start="31:24" pos:end="31:25">p0</name> <operator pos:start="31:27" pos:end="31:27">-</operator> <name pos:start="31:29" pos:end="31:30">q0</name></expr></argument> )</argument_list></call> <operator pos:start="31:34" pos:end="31:34">&lt;</operator> <name pos:start="31:36" pos:end="31:40">alpha</name> <operator pos:start="31:42" pos:end="31:43">&amp;&amp;</operator>

                <call pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:21">FFABS</name><argument_list pos:start="33:22" pos:end="33:32">( <argument pos:start="33:24" pos:end="33:30"><expr pos:start="33:24" pos:end="33:30"><name pos:start="33:24" pos:end="33:25">p1</name> <operator pos:start="33:27" pos:end="33:27">-</operator> <name pos:start="33:29" pos:end="33:30">p0</name></expr></argument> )</argument_list></call> <operator pos:start="33:34" pos:end="33:34">&lt;</operator> <name pos:start="33:36" pos:end="33:39">beta</name> <operator pos:start="33:41" pos:end="33:42">&amp;&amp;</operator>

                <call pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:21">FFABS</name><argument_list pos:start="35:22" pos:end="35:32">( <argument pos:start="35:24" pos:end="35:30"><expr pos:start="35:24" pos:end="35:30"><name pos:start="35:24" pos:end="35:25">q1</name> <operator pos:start="35:27" pos:end="35:27">-</operator> <name pos:start="35:29" pos:end="35:30">q0</name></expr></argument> )</argument_list></call> <operator pos:start="35:34" pos:end="35:34">&lt;</operator> <name pos:start="35:36" pos:end="35:39">beta</name></expr> )</condition> <block pos:start="35:43" pos:end="47:13">{<block_content pos:start="39:17" pos:end="45:60">



                <decl_stmt pos:start="39:17" pos:end="39:89"><decl pos:start="39:17" pos:end="39:88"><type pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">int</name></type> <name pos:start="39:21" pos:end="39:25">delta</name> <init pos:start="39:27" pos:end="39:88">= <expr pos:start="39:29" pos:end="39:88"><call pos:start="39:29" pos:end="39:88"><name pos:start="39:29" pos:end="39:35">av_clip</name><argument_list pos:start="39:36" pos:end="39:88">( <argument pos:start="39:38" pos:end="39:77"><expr pos:start="39:38" pos:end="39:77"><operator pos:start="39:38" pos:end="39:38">(</operator><operator pos:start="39:39" pos:end="39:39">(</operator><operator pos:start="39:40" pos:end="39:40">(</operator><name pos:start="39:41" pos:end="39:42">q0</name> <operator pos:start="39:44" pos:end="39:44">-</operator> <name pos:start="39:46" pos:end="39:47">p0</name> <operator pos:start="39:49" pos:end="39:49">)</operator> <operator pos:start="39:51" pos:end="39:52">&lt;&lt;</operator> <literal type="number" pos:start="39:54" pos:end="39:54">2</literal><operator pos:start="39:55" pos:end="39:55">)</operator> <operator pos:start="39:57" pos:end="39:57">+</operator> <operator pos:start="39:59" pos:end="39:59">(</operator><name pos:start="39:60" pos:end="39:61">p1</name> <operator pos:start="39:63" pos:end="39:63">-</operator> <name pos:start="39:65" pos:end="39:66">q1</name><operator pos:start="39:67" pos:end="39:67">)</operator> <operator pos:start="39:69" pos:end="39:69">+</operator> <literal type="number" pos:start="39:71" pos:end="39:71">4</literal><operator pos:start="39:72" pos:end="39:72">)</operator> <operator pos:start="39:74" pos:end="39:75">&gt;&gt;</operator> <literal type="number" pos:start="39:77" pos:end="39:77">3</literal></expr></argument>, <argument pos:start="39:80" pos:end="39:82"><expr pos:start="39:80" pos:end="39:82"><operator pos:start="39:80" pos:end="39:80">-</operator><name pos:start="39:81" pos:end="39:82">tc</name></expr></argument>, <argument pos:start="39:85" pos:end="39:86"><expr pos:start="39:85" pos:end="39:86"><name pos:start="39:85" pos:end="39:86">tc</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="43:17" pos:end="43:60"><expr pos:start="43:17" pos:end="43:59"><name pos:start="43:17" pos:end="43:29"><name pos:start="43:17" pos:end="43:19">pix</name><index pos:start="43:20" pos:end="43:29">[<expr pos:start="43:21" pos:end="43:28"><operator pos:start="43:21" pos:end="43:21">-</operator><name pos:start="43:22" pos:end="43:28">xstride</name></expr>]</index></name> <operator pos:start="43:31" pos:end="43:31">=</operator> <call pos:start="43:33" pos:end="43:59"><name pos:start="43:33" pos:end="43:45">av_clip_uint8</name><argument_list pos:start="43:46" pos:end="43:59">( <argument pos:start="43:48" pos:end="43:57"><expr pos:start="43:48" pos:end="43:57"><name pos:start="43:48" pos:end="43:49">p0</name> <operator pos:start="43:51" pos:end="43:51">+</operator> <name pos:start="43:53" pos:end="43:57">delta</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="43:65" pos:end="43:73">/* p0' */</comment>

                <expr_stmt pos:start="45:17" pos:end="45:60"><expr pos:start="45:17" pos:end="45:59"><name pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:19">pix</name><index pos:start="45:20" pos:end="45:22">[<expr pos:start="45:21" pos:end="45:21"><literal type="number" pos:start="45:21" pos:end="45:21">0</literal></expr>]</index></name>        <operator pos:start="45:31" pos:end="45:31">=</operator> <call pos:start="45:33" pos:end="45:59"><name pos:start="45:33" pos:end="45:45">av_clip_uint8</name><argument_list pos:start="45:46" pos:end="45:59">( <argument pos:start="45:48" pos:end="45:57"><expr pos:start="45:48" pos:end="45:57"><name pos:start="45:48" pos:end="45:49">q0</name> <operator pos:start="45:51" pos:end="45:51">-</operator> <name pos:start="45:53" pos:end="45:57">delta</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="45:65" pos:end="45:73">/* q0' */</comment>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:27"><expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:15">pix</name> <operator pos:start="49:17" pos:end="49:18">+=</operator> <name pos:start="49:20" pos:end="49:26">ystride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
