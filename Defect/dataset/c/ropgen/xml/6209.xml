<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6209.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:9">ds1225y_t</name> <modifier pos:start="1:11" pos:end="1:11">*</modifier></type><name pos:start="1:12" pos:end="1:23">ds1225y_init</name><parameter_list pos:start="1:24" pos:end="1:74">(<parameter pos:start="1:25" pos:end="1:51"><decl pos:start="1:25" pos:end="1:51"><type pos:start="1:25" pos:end="1:51"><name pos:start="1:25" pos:end="1:42">target_phys_addr_t</name></type> <name pos:start="1:44" pos:end="1:51">mem_base</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:63">char</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:73">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">ds1225y_t</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">mem_index1</name></decl>, <decl pos:start="7:21" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:30">mem_index2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:40"><expr pos:start="11:5" pos:end="11:39"><name pos:start="11:5" pos:end="11:5">s</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <call pos:start="11:9" pos:end="11:39"><name pos:start="11:9" pos:end="11:20">qemu_mallocz</name><argument_list pos:start="11:21" pos:end="11:39">(<argument pos:start="11:22" pos:end="11:38"><expr pos:start="11:22" pos:end="11:38"><sizeof pos:start="11:22" pos:end="11:38">sizeof<argument_list pos:start="11:28" pos:end="11:38">(<argument pos:start="11:29" pos:end="11:37"><expr pos:start="11:29" pos:end="11:37"><name pos:start="11:29" pos:end="11:37">ds1225y_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:11">(<expr pos:start="13:9" pos:end="13:10"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:10">s</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:15">mem_base</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:26">mem_base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:15">capacity</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <literal type="number" pos:start="19:19" pos:end="19:24">0x2000</literal></expr>;</expr_stmt> <comment type="block" pos:start="19:27" pos:end="19:58">/* Fixed for ds1225y chip: 8K */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:15">filename</name></name> <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:26">filename</name></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:27">/* Read/write memory */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:71"><expr pos:start="27:5" pos:end="27:70"><name pos:start="27:5" pos:end="27:14">mem_index1</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:70"><name pos:start="27:18" pos:end="27:39">cpu_register_io_memory</name><argument_list pos:start="27:40" pos:end="27:70">(<argument pos:start="27:41" pos:end="27:41"><expr pos:start="27:41" pos:end="27:41"><literal type="number" pos:start="27:41" pos:end="27:41">0</literal></expr></argument>, <argument pos:start="27:44" pos:end="27:53"><expr pos:start="27:44" pos:end="27:53"><name pos:start="27:44" pos:end="27:53">nvram_read</name></expr></argument>, <argument pos:start="27:56" pos:end="27:66"><expr pos:start="27:56" pos:end="27:66"><name pos:start="27:56" pos:end="27:66">nvram_write</name></expr></argument>, <argument pos:start="27:69" pos:end="27:69"><expr pos:start="27:69" pos:end="27:69"><name pos:start="27:69" pos:end="27:69">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:68"><expr pos:start="29:5" pos:end="29:67"><call pos:start="29:5" pos:end="29:67"><name pos:start="29:5" pos:end="29:32">cpu_register_physical_memory</name><argument_list pos:start="29:33" pos:end="29:67">(<argument pos:start="29:34" pos:end="29:41"><expr pos:start="29:34" pos:end="29:41"><name pos:start="29:34" pos:end="29:41">mem_base</name></expr></argument>, <argument pos:start="29:44" pos:end="29:54"><expr pos:start="29:44" pos:end="29:54"><name pos:start="29:44" pos:end="29:54"><name pos:start="29:44" pos:end="29:44">s</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:54">capacity</name></name></expr></argument>, <argument pos:start="29:57" pos:end="29:66"><expr pos:start="29:57" pos:end="29:66"><name pos:start="29:57" pos:end="29:66">mem_index1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="31:5" pos:end="31:26">/* Read-only memory */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:70"><expr pos:start="33:5" pos:end="33:69"><name pos:start="33:5" pos:end="33:14">mem_index2</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:69"><name pos:start="33:18" pos:end="33:39">cpu_register_io_memory</name><argument_list pos:start="33:40" pos:end="33:69">(<argument pos:start="33:41" pos:end="33:41"><expr pos:start="33:41" pos:end="33:41"><literal type="number" pos:start="33:41" pos:end="33:41">0</literal></expr></argument>, <argument pos:start="33:44" pos:end="33:53"><expr pos:start="33:44" pos:end="33:53"><name pos:start="33:44" pos:end="33:53">nvram_read</name></expr></argument>, <argument pos:start="33:56" pos:end="33:65"><expr pos:start="33:56" pos:end="33:65"><name pos:start="33:56" pos:end="33:65">nvram_none</name></expr></argument>, <argument pos:start="33:68" pos:end="33:68"><expr pos:start="33:68" pos:end="33:68"><name pos:start="33:68" pos:end="33:68">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:82"><expr pos:start="35:5" pos:end="35:81"><call pos:start="35:5" pos:end="35:81"><name pos:start="35:5" pos:end="35:32">cpu_register_physical_memory</name><argument_list pos:start="35:33" pos:end="35:81">(<argument pos:start="35:34" pos:end="35:55"><expr pos:start="35:34" pos:end="35:55"><name pos:start="35:34" pos:end="35:41">mem_base</name> <operator pos:start="35:43" pos:end="35:43">+</operator> <name pos:start="35:45" pos:end="35:55"><name pos:start="35:45" pos:end="35:45">s</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:55">capacity</name></name></expr></argument>, <argument pos:start="35:58" pos:end="35:68"><expr pos:start="35:58" pos:end="35:68"><name pos:start="35:58" pos:end="35:68"><name pos:start="35:58" pos:end="35:58">s</name><operator pos:start="35:59" pos:end="35:60">-&gt;</operator><name pos:start="35:61" pos:end="35:68">capacity</name></name></expr></argument>, <argument pos:start="35:71" pos:end="35:80"><expr pos:start="35:71" pos:end="35:80"><name pos:start="35:71" pos:end="35:80">mem_index2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><name pos:start="37:12" pos:end="37:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
