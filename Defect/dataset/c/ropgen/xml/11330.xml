<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11330.c" pos:tabs="8"><function pos:start="1:1" pos:end="389:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">vp8_handle_packet</name><parameter_list pos:start="1:29" pos:end="7:39">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:70"><decl pos:start="1:52" pos:end="1:70"><type pos:start="1:52" pos:end="1:70"><name pos:start="1:52" pos:end="1:65">PayloadContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">vp8</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:37">AVStream</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:41">st</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:56"><decl pos:start="3:44" pos:end="3:56"><type pos:start="3:44" pos:end="3:56"><name pos:start="3:44" pos:end="3:51">AVPacket</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:56">pkt</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:77"><decl pos:start="3:59" pos:end="3:77"><type pos:start="3:59" pos:end="3:77"><name pos:start="3:59" pos:end="3:66">uint32_t</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:77">timestamp</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:47"><decl pos:start="5:30" pos:end="5:47"><type pos:start="5:30" pos:end="5:47"><specifier pos:start="5:30" pos:end="5:34">const</specifier> <name pos:start="5:36" pos:end="5:42">uint8_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">buf</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:56"><decl pos:start="5:50" pos:end="5:56"><type pos:start="5:50" pos:end="5:56"><name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:56">len</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:70"><decl pos:start="5:59" pos:end="5:70"><type pos:start="5:59" pos:end="5:70"><name pos:start="5:59" pos:end="5:66">uint16_t</name></type> <name pos:start="5:68" pos:end="5:70">seq</name></decl></parameter>,

                             <parameter pos:start="7:30" pos:end="7:38"><decl pos:start="7:30" pos:end="7:38"><type pos:start="7:30" pos:end="7:38"><name pos:start="7:30" pos:end="7:32">int</name></type> <name pos:start="7:34" pos:end="7:38">flags</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="389:1">{<block_content pos:start="11:5" pos:end="387:27">

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:23">start_partition</name></decl>, <decl pos:start="11:26" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:26" pos:end="11:35">end_packet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:21">extended_bits</name></decl>, <decl pos:start="13:24" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:30">part_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="17:27"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:25">pictureid_present</name> <init pos:start="15:27" pos:end="15:29">= <expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr></init></decl>, <decl pos:start="15:32" pos:end="15:52"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:32" pos:end="15:48">tl0picidx_present</name> <init pos:start="15:50" pos:end="15:52">= <expr pos:start="15:52" pos:end="15:52"><literal type="number" pos:start="15:52" pos:end="15:52">0</literal></expr></init></decl>, <decl pos:start="15:55" pos:end="15:69"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:55" pos:end="15:65">tid_present</name> <init pos:start="15:67" pos:end="15:69">= <expr pos:start="15:69" pos:end="15:69"><literal type="number" pos:start="15:69" pos:end="15:69">0</literal></expr></init></decl>,

        <decl pos:start="17:9" pos:end="17:26"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="17:9" pos:end="17:22">keyidx_present</name> <init pos:start="17:24" pos:end="17:26">= <expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:43"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">pictureid</name> <init pos:start="19:19" pos:end="19:22">= <expr pos:start="19:21" pos:end="19:22"><operator pos:start="19:21" pos:end="19:21">-</operator><literal type="number" pos:start="19:22" pos:end="19:22">1</literal></expr></init></decl>, <decl pos:start="19:25" pos:end="19:42"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:25" pos:end="19:38">pictureid_mask</name> <init pos:start="19:40" pos:end="19:42">= <expr pos:start="19:42" pos:end="19:42"><literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:31"><decl pos:start="21:5" pos:end="21:30"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:26">returned_old_frame</name> <init pos:start="21:28" pos:end="21:30">= <expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:27"><decl pos:start="23:5" pos:end="23:26"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint32_t</name></type> <name pos:start="23:14" pos:end="23:26">old_timestamp</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="49:5"><if pos:start="27:5" pos:end="49:5">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:12">buf</name></expr>)</condition> <block pos:start="27:15" pos:end="49:5">{<block_content pos:start="29:9" pos:end="47:31">

        <if_stmt pos:start="29:9" pos:end="45:9"><if pos:start="29:9" pos:end="45:9">if <condition pos:start="29:12" pos:end="29:22">(<expr pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:15">vp8</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:21">data</name></name></expr>)</condition> <block pos:start="29:24" pos:end="45:9">{<block_content pos:start="31:13" pos:end="43:21">

            <decl_stmt pos:start="31:13" pos:end="31:73"><decl pos:start="31:13" pos:end="31:72"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:19">ret</name> <init pos:start="31:21" pos:end="31:72">= <expr pos:start="31:23" pos:end="31:72"><call pos:start="31:23" pos:end="31:72"><name pos:start="31:23" pos:end="31:44">ff_rtp_finalize_packet</name><argument_list pos:start="31:45" pos:end="31:72">(<argument pos:start="31:46" pos:end="31:48"><expr pos:start="31:46" pos:end="31:48"><name pos:start="31:46" pos:end="31:48">pkt</name></expr></argument>, <argument pos:start="31:51" pos:end="31:60"><expr pos:start="31:51" pos:end="31:60"><operator pos:start="31:51" pos:end="31:51">&amp;</operator><name pos:start="31:52" pos:end="31:60"><name pos:start="31:52" pos:end="31:54">vp8</name><operator pos:start="31:55" pos:end="31:56">-&gt;</operator><name pos:start="31:57" pos:end="31:60">data</name></name></expr></argument>, <argument pos:start="31:63" pos:end="31:71"><expr pos:start="31:63" pos:end="31:71"><name pos:start="31:63" pos:end="31:71"><name pos:start="31:63" pos:end="31:64">st</name><operator pos:start="31:65" pos:end="31:66">-&gt;</operator><name pos:start="31:67" pos:end="31:71">index</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="33:13" pos:end="35:27"><if pos:start="33:13" pos:end="35:27">if <condition pos:start="33:16" pos:end="33:24">(<expr pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:19">ret</name> <operator pos:start="33:21" pos:end="33:21">&lt;</operator> <literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:27"><block_content pos:start="35:17" pos:end="35:27">

                <return pos:start="35:17" pos:end="35:27">return <expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:40"><expr pos:start="37:13" pos:end="37:39"><operator pos:start="37:13" pos:end="37:13">*</operator><name pos:start="37:14" pos:end="37:22">timestamp</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:39"><name pos:start="37:26" pos:end="37:28">vp8</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:39">timestamp</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="41:50"><if pos:start="39:13" pos:end="41:50">if <condition pos:start="39:16" pos:end="39:36">(<expr pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:19">vp8</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:35">sequence_dirty</name></name></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:50"><block_content pos:start="41:17" pos:end="41:50">

                <expr_stmt pos:start="41:17" pos:end="41:50"><expr pos:start="41:17" pos:end="41:49"><name pos:start="41:17" pos:end="41:26"><name pos:start="41:17" pos:end="41:19">pkt</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:26">flags</name></name> <operator pos:start="41:28" pos:end="41:29">|=</operator> <name pos:start="41:31" pos:end="41:49">AV_PKT_FLAG_CORRUPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="43:13" pos:end="43:21">return <expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="47:9" pos:end="47:31">return <expr pos:start="47:16" pos:end="47:30"><call pos:start="47:16" pos:end="47:30"><name pos:start="47:16" pos:end="47:22">AVERROR</name><argument_list pos:start="47:23" pos:end="47:30">(<argument pos:start="47:24" pos:end="47:29"><expr pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="55:35"><if pos:start="53:5" pos:end="55:35">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:11">len</name> <operator pos:start="53:13" pos:end="53:13">&lt;</operator> <literal type="number" pos:start="53:15" pos:end="53:15">1</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:35"><block_content pos:start="55:9" pos:end="55:35">

        <return pos:start="55:9" pos:end="55:35">return <expr pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:17">extended_bits</name>   <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:28"><name pos:start="59:23" pos:end="59:25">buf</name><index pos:start="59:26" pos:end="59:28">[<expr pos:start="59:27" pos:end="59:27"><literal type="number" pos:start="59:27" pos:end="59:27">0</literal></expr>]</index></name> <operator pos:start="59:30" pos:end="59:30">&amp;</operator> <literal type="number" pos:start="59:32" pos:end="59:35">0x80</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:19">start_partition</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:28"><name pos:start="61:23" pos:end="61:25">buf</name><index pos:start="61:26" pos:end="61:28">[<expr pos:start="61:27" pos:end="61:27"><literal type="number" pos:start="61:27" pos:end="61:27">0</literal></expr>]</index></name> <operator pos:start="61:30" pos:end="61:30">&amp;</operator> <literal type="number" pos:start="61:32" pos:end="61:35">0x10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:11">part_id</name>         <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:28"><name pos:start="63:23" pos:end="63:25">buf</name><index pos:start="63:26" pos:end="63:28">[<expr pos:start="63:27" pos:end="63:27"><literal type="number" pos:start="63:27" pos:end="63:27">0</literal></expr>]</index></name> <operator pos:start="63:30" pos:end="63:30">&amp;</operator> <literal type="number" pos:start="63:32" pos:end="63:35">0x0f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:46"><expr pos:start="65:5" pos:end="65:45"><name pos:start="65:5" pos:end="65:14">end_packet</name>      <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:27">flags</name> <operator pos:start="65:29" pos:end="65:29">&amp;</operator> <name pos:start="65:31" pos:end="65:45">RTP_FLAG_MARKER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:10"><expr pos:start="67:5" pos:end="67:9"><name pos:start="67:5" pos:end="67:7">buf</name><operator pos:start="67:8" pos:end="67:9">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:10"><expr pos:start="69:5" pos:end="69:9"><name pos:start="69:5" pos:end="69:7">len</name><operator pos:start="69:8" pos:end="69:9">--</operator></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="89:5"><if pos:start="71:5" pos:end="89:5">if <condition pos:start="71:8" pos:end="71:22">(<expr pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:21">extended_bits</name></expr>)</condition> <block pos:start="71:24" pos:end="89:5">{<block_content pos:start="73:9" pos:end="87:14">

        <if_stmt pos:start="73:9" pos:end="75:39"><if pos:start="73:9" pos:end="75:39">if <condition pos:start="73:12" pos:end="73:20">(<expr pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:15">len</name> <operator pos:start="73:17" pos:end="73:17">&lt;</operator> <literal type="number" pos:start="73:19" pos:end="73:19">1</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:39"><block_content pos:start="75:13" pos:end="75:39">

            <return pos:start="75:13" pos:end="75:39">return <expr pos:start="75:20" pos:end="75:38"><name pos:start="75:20" pos:end="75:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:42"><expr pos:start="77:9" pos:end="77:41"><name pos:start="77:9" pos:end="77:25">pictureid_present</name> <operator pos:start="77:27" pos:end="77:27">=</operator> <name pos:start="77:29" pos:end="77:34"><name pos:start="77:29" pos:end="77:31">buf</name><index pos:start="77:32" pos:end="77:34">[<expr pos:start="77:33" pos:end="77:33"><literal type="number" pos:start="77:33" pos:end="77:33">0</literal></expr>]</index></name> <operator pos:start="77:36" pos:end="77:36">&amp;</operator> <literal type="number" pos:start="77:38" pos:end="77:41">0x80</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:42"><expr pos:start="79:9" pos:end="79:41"><name pos:start="79:9" pos:end="79:25">tl0picidx_present</name> <operator pos:start="79:27" pos:end="79:27">=</operator> <name pos:start="79:29" pos:end="79:34"><name pos:start="79:29" pos:end="79:31">buf</name><index pos:start="79:32" pos:end="79:34">[<expr pos:start="79:33" pos:end="79:33"><literal type="number" pos:start="79:33" pos:end="79:33">0</literal></expr>]</index></name> <operator pos:start="79:36" pos:end="79:36">&amp;</operator> <literal type="number" pos:start="79:38" pos:end="79:41">0x40</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:19">tid_present</name>       <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:34"><name pos:start="81:29" pos:end="81:31">buf</name><index pos:start="81:32" pos:end="81:34">[<expr pos:start="81:33" pos:end="81:33"><literal type="number" pos:start="81:33" pos:end="81:33">0</literal></expr>]</index></name> <operator pos:start="81:36" pos:end="81:36">&amp;</operator> <literal type="number" pos:start="81:38" pos:end="81:41">0x20</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:42"><expr pos:start="83:9" pos:end="83:41"><name pos:start="83:9" pos:end="83:22">keyidx_present</name>    <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:34"><name pos:start="83:29" pos:end="83:31">buf</name><index pos:start="83:32" pos:end="83:34">[<expr pos:start="83:33" pos:end="83:33"><literal type="number" pos:start="83:33" pos:end="83:33">0</literal></expr>]</index></name> <operator pos:start="83:36" pos:end="83:36">&amp;</operator> <literal type="number" pos:start="83:38" pos:end="83:41">0x10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:14"><expr pos:start="85:9" pos:end="85:13"><name pos:start="85:9" pos:end="85:11">buf</name><operator pos:start="85:12" pos:end="85:13">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:14"><expr pos:start="87:9" pos:end="87:13"><name pos:start="87:9" pos:end="87:11">len</name><operator pos:start="87:12" pos:end="87:13">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="123:5"><if pos:start="91:5" pos:end="123:5">if <condition pos:start="91:8" pos:end="91:26">(<expr pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:25">pictureid_present</name></expr>)</condition> <block pos:start="91:28" pos:end="123:5">{<block_content pos:start="93:9" pos:end="121:9">

        <if_stmt pos:start="93:9" pos:end="95:39"><if pos:start="93:9" pos:end="95:39">if <condition pos:start="93:12" pos:end="93:20">(<expr pos:start="93:13" pos:end="93:19"><name pos:start="93:13" pos:end="93:15">len</name> <operator pos:start="93:17" pos:end="93:17">&lt;</operator> <literal type="number" pos:start="93:19" pos:end="93:19">1</literal></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:39"><block_content pos:start="95:13" pos:end="95:39">

            <return pos:start="95:13" pos:end="95:39">return <expr pos:start="95:20" pos:end="95:38"><name pos:start="95:20" pos:end="95:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="97:9" pos:end="121:9"><if pos:start="97:9" pos:end="111:9">if <condition pos:start="97:12" pos:end="97:26">(<expr pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:18"><name pos:start="97:13" pos:end="97:15">buf</name><index pos:start="97:16" pos:end="97:18">[<expr pos:start="97:17" pos:end="97:17"><literal type="number" pos:start="97:17" pos:end="97:17">0</literal></expr>]</index></name> <operator pos:start="97:20" pos:end="97:20">&amp;</operator> <literal type="number" pos:start="97:22" pos:end="97:25">0x80</literal></expr>)</condition> <block pos:start="97:28" pos:end="111:9">{<block_content pos:start="99:13" pos:end="109:21">

            <if_stmt pos:start="99:13" pos:end="101:43"><if pos:start="99:13" pos:end="101:43">if <condition pos:start="99:16" pos:end="99:24">(<expr pos:start="99:17" pos:end="99:23"><name pos:start="99:17" pos:end="99:19">len</name> <operator pos:start="99:21" pos:end="99:21">&lt;</operator> <literal type="number" pos:start="99:23" pos:end="99:23">2</literal></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:43"><block_content pos:start="101:17" pos:end="101:43">

                <return pos:start="101:17" pos:end="101:43">return <expr pos:start="101:24" pos:end="101:42"><name pos:start="101:24" pos:end="101:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:46"><expr pos:start="103:13" pos:end="103:45"><name pos:start="103:13" pos:end="103:21">pictureid</name> <operator pos:start="103:23" pos:end="103:23">=</operator> <call pos:start="103:25" pos:end="103:36"><name pos:start="103:25" pos:end="103:31">AV_RB16</name><argument_list pos:start="103:32" pos:end="103:36">(<argument pos:start="103:33" pos:end="103:35"><expr pos:start="103:33" pos:end="103:35"><name pos:start="103:33" pos:end="103:35">buf</name></expr></argument>)</argument_list></call> <operator pos:start="103:38" pos:end="103:38">&amp;</operator> <literal type="number" pos:start="103:40" pos:end="103:45">0x7fff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:36"><expr pos:start="105:13" pos:end="105:35"><name pos:start="105:13" pos:end="105:26">pictureid_mask</name> <operator pos:start="105:28" pos:end="105:28">=</operator> <literal type="number" pos:start="105:30" pos:end="105:35">0x7fff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:21"><expr pos:start="107:13" pos:end="107:20"><name pos:start="107:13" pos:end="107:15">buf</name> <operator pos:start="107:17" pos:end="107:18">+=</operator> <literal type="number" pos:start="107:20" pos:end="107:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:21"><expr pos:start="109:13" pos:end="109:20"><name pos:start="109:13" pos:end="109:15">len</name> <operator pos:start="109:17" pos:end="109:18">-=</operator> <literal type="number" pos:start="109:20" pos:end="109:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="111:11" pos:end="121:9">else <block pos:start="111:16" pos:end="121:9">{<block_content pos:start="113:13" pos:end="119:18">

            <expr_stmt pos:start="113:13" pos:end="113:38"><expr pos:start="113:13" pos:end="113:37"><name pos:start="113:13" pos:end="113:21">pictureid</name> <operator pos:start="113:23" pos:end="113:23">=</operator> <name pos:start="113:25" pos:end="113:30"><name pos:start="113:25" pos:end="113:27">buf</name><index pos:start="113:28" pos:end="113:30">[<expr pos:start="113:29" pos:end="113:29"><literal type="number" pos:start="113:29" pos:end="113:29">0</literal></expr>]</index></name> <operator pos:start="113:32" pos:end="113:32">&amp;</operator> <literal type="number" pos:start="113:34" pos:end="113:37">0x7f</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:34"><expr pos:start="115:13" pos:end="115:33"><name pos:start="115:13" pos:end="115:26">pictureid_mask</name> <operator pos:start="115:28" pos:end="115:28">=</operator> <literal type="number" pos:start="115:30" pos:end="115:33">0x7f</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:18"><expr pos:start="117:13" pos:end="117:17"><name pos:start="117:13" pos:end="117:15">buf</name><operator pos:start="117:16" pos:end="117:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:18"><expr pos:start="119:13" pos:end="119:17"><name pos:start="119:13" pos:end="119:15">len</name><operator pos:start="119:16" pos:end="119:17">--</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="125:5" pos:end="133:5"><if pos:start="125:5" pos:end="133:5">if <condition pos:start="125:8" pos:end="125:26">(<expr pos:start="125:9" pos:end="125:25"><name pos:start="125:9" pos:end="125:25">tl0picidx_present</name></expr>)</condition> <block pos:start="125:28" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:14">

        <comment type="line" pos:start="127:9" pos:end="127:45">// Ignoring temporal level zero index</comment>

        <expr_stmt pos:start="129:9" pos:end="129:14"><expr pos:start="129:9" pos:end="129:13"><name pos:start="129:9" pos:end="129:11">buf</name><operator pos:start="129:12" pos:end="129:13">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:14"><expr pos:start="131:9" pos:end="131:13"><name pos:start="131:9" pos:end="131:11">len</name><operator pos:start="131:12" pos:end="131:13">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="135:5" pos:end="143:5"><if pos:start="135:5" pos:end="143:5">if <condition pos:start="135:8" pos:end="135:38">(<expr pos:start="135:9" pos:end="135:37"><name pos:start="135:9" pos:end="135:19">tid_present</name> <operator pos:start="135:21" pos:end="135:22">||</operator> <name pos:start="135:24" pos:end="135:37">keyidx_present</name></expr>)</condition> <block pos:start="135:40" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:14">

        <comment type="line" pos:start="137:9" pos:end="137:75">// Ignoring temporal layer index, layer sync bit and keyframe index</comment>

        <expr_stmt pos:start="139:9" pos:end="139:14"><expr pos:start="139:9" pos:end="139:13"><name pos:start="139:9" pos:end="139:11">buf</name><operator pos:start="139:12" pos:end="139:13">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:14"><expr pos:start="141:9" pos:end="141:13"><name pos:start="141:9" pos:end="141:11">len</name><operator pos:start="141:12" pos:end="141:13">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="145:5" pos:end="147:35"><if pos:start="145:5" pos:end="147:35">if <condition pos:start="145:8" pos:end="145:16">(<expr pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:11">len</name> <operator pos:start="145:13" pos:end="145:13">&lt;</operator> <literal type="number" pos:start="145:15" pos:end="145:15">1</literal></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:35"><block_content pos:start="147:9" pos:end="147:35">

        <return pos:start="147:9" pos:end="147:35">return <expr pos:start="147:16" pos:end="147:34"><name pos:start="147:16" pos:end="147:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="151:5" pos:end="339:5"><if pos:start="151:5" pos:end="291:5">if <condition pos:start="151:8" pos:end="151:52">(<expr pos:start="151:9" pos:end="151:51"><name pos:start="151:9" pos:end="151:23">start_partition</name> <operator pos:start="151:25" pos:end="151:26">&amp;&amp;</operator> <name pos:start="151:28" pos:end="151:34">part_id</name> <operator pos:start="151:36" pos:end="151:37">==</operator> <literal type="number" pos:start="151:39" pos:end="151:39">0</literal> <operator pos:start="151:41" pos:end="151:42">&amp;&amp;</operator> <name pos:start="151:44" pos:end="151:46">len</name> <operator pos:start="151:48" pos:end="151:49">&gt;=</operator> <literal type="number" pos:start="151:51" pos:end="151:51">3</literal></expr>)</condition> <block pos:start="151:54" pos:end="291:5">{<block_content pos:start="153:9" pos:end="289:36">

        <decl_stmt pos:start="153:9" pos:end="153:16"><decl pos:start="153:9" pos:end="153:15"><type pos:start="153:9" pos:end="153:11"><name pos:start="153:9" pos:end="153:11">int</name></type> <name pos:start="153:13" pos:end="153:15">res</name></decl>;</decl_stmt>

        <decl_stmt pos:start="155:9" pos:end="155:36"><decl pos:start="155:9" pos:end="155:35"><type pos:start="155:9" pos:end="155:11"><name pos:start="155:9" pos:end="155:11">int</name></type> <name pos:start="155:13" pos:end="155:19">non_key</name> <init pos:start="155:21" pos:end="155:35">= <expr pos:start="155:23" pos:end="155:35"><name pos:start="155:23" pos:end="155:28"><name pos:start="155:23" pos:end="155:25">buf</name><index pos:start="155:26" pos:end="155:28">[<expr pos:start="155:27" pos:end="155:27"><literal type="number" pos:start="155:27" pos:end="155:27">0</literal></expr>]</index></name> <operator pos:start="155:30" pos:end="155:30">&amp;</operator> <literal type="number" pos:start="155:32" pos:end="155:35">0x01</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="157:9" pos:end="275:9"><if pos:start="157:9" pos:end="169:9">if <condition pos:start="157:12" pos:end="157:21">(<expr pos:start="157:13" pos:end="157:20"><operator pos:start="157:13" pos:end="157:13">!</operator><name pos:start="157:14" pos:end="157:20">non_key</name></expr>)</condition> <block pos:start="157:23" pos:end="169:9">{<block_content pos:start="159:13" pos:end="167:34">

            <expr_stmt pos:start="159:13" pos:end="159:33"><expr pos:start="159:13" pos:end="159:32"><call pos:start="159:13" pos:end="159:32"><name pos:start="159:13" pos:end="159:27">vp8_free_buffer</name><argument_list pos:start="159:28" pos:end="159:32">(<argument pos:start="159:29" pos:end="159:31"><expr pos:start="159:29" pos:end="159:31"><name pos:start="159:29" pos:end="159:31">vp8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="161:13" pos:end="161:42">// Keyframe, decoding ok again</comment>

            <expr_stmt pos:start="163:13" pos:end="163:33"><expr pos:start="163:13" pos:end="163:32"><name pos:start="163:13" pos:end="163:28"><name pos:start="163:13" pos:end="163:15">vp8</name><operator pos:start="163:16" pos:end="163:17">-&gt;</operator><name pos:start="163:18" pos:end="163:28">sequence_ok</name></name> <operator pos:start="163:30" pos:end="163:30">=</operator> <literal type="number" pos:start="163:32" pos:end="163:32">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:36"><expr pos:start="165:13" pos:end="165:35"><name pos:start="165:13" pos:end="165:31"><name pos:start="165:13" pos:end="165:15">vp8</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:31">sequence_dirty</name></name> <operator pos:start="165:33" pos:end="165:33">=</operator> <literal type="number" pos:start="165:35" pos:end="165:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:34"><expr pos:start="167:13" pos:end="167:33"><name pos:start="167:13" pos:end="167:29"><name pos:start="167:13" pos:end="167:15">vp8</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:29">got_keyframe</name></name> <operator pos:start="167:31" pos:end="167:31">=</operator> <literal type="number" pos:start="167:33" pos:end="167:33">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="169:11" pos:end="275:9">else <block pos:start="169:16" pos:end="275:9">{<block_content pos:start="171:13" pos:end="273:13">

            <decl_stmt pos:start="171:13" pos:end="173:76"><decl pos:start="171:13" pos:end="173:75"><type pos:start="171:13" pos:end="171:15"><name pos:start="171:13" pos:end="171:15">int</name></type> <name pos:start="171:17" pos:end="171:28">can_continue</name> <init pos:start="171:30" pos:end="173:75">= <expr pos:start="171:32" pos:end="173:75"><name pos:start="171:32" pos:end="171:40"><name pos:start="171:32" pos:end="171:34">vp8</name><operator pos:start="171:35" pos:end="171:36">-&gt;</operator><name pos:start="171:37" pos:end="171:40">data</name></name> <operator pos:start="171:42" pos:end="171:43">&amp;&amp;</operator> <operator pos:start="171:45" pos:end="171:45">!</operator><name pos:start="171:46" pos:end="171:61"><name pos:start="171:46" pos:end="171:48">vp8</name><operator pos:start="171:49" pos:end="171:50">-&gt;</operator><name pos:start="171:51" pos:end="171:61">is_keyframe</name></name> <operator pos:start="171:63" pos:end="171:64">&amp;&amp;</operator>

                               <call pos:start="173:32" pos:end="173:51"><name pos:start="173:32" pos:end="173:40">avio_tell</name><argument_list pos:start="173:41" pos:end="173:51">(<argument pos:start="173:42" pos:end="173:50"><expr pos:start="173:42" pos:end="173:50"><name pos:start="173:42" pos:end="173:50"><name pos:start="173:42" pos:end="173:44">vp8</name><operator pos:start="173:45" pos:end="173:46">-&gt;</operator><name pos:start="173:47" pos:end="173:50">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="173:53" pos:end="173:54">&gt;=</operator> <name pos:start="173:56" pos:end="173:75"><name pos:start="173:56" pos:end="173:58">vp8</name><operator pos:start="173:59" pos:end="173:60">-&gt;</operator><name pos:start="173:61" pos:end="173:75">first_part_size</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="175:13" pos:end="177:39"><if pos:start="175:13" pos:end="177:39">if <condition pos:start="175:16" pos:end="175:34">(<expr pos:start="175:17" pos:end="175:33"><operator pos:start="175:17" pos:end="175:17">!</operator><name pos:start="175:18" pos:end="175:33"><name pos:start="175:18" pos:end="175:20">vp8</name><operator pos:start="175:21" pos:end="175:22">-&gt;</operator><name pos:start="175:23" pos:end="175:33">sequence_ok</name></name></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:39"><block_content pos:start="177:17" pos:end="177:39">

                <return pos:start="177:17" pos:end="177:39">return <expr pos:start="177:24" pos:end="177:38"><call pos:start="177:24" pos:end="177:38"><name pos:start="177:24" pos:end="177:30">AVERROR</name><argument_list pos:start="177:31" pos:end="177:38">(<argument pos:start="177:32" pos:end="177:37"><expr pos:start="177:32" pos:end="177:37"><name pos:start="177:32" pos:end="177:37">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="179:13" pos:end="181:75"><if pos:start="179:13" pos:end="181:75">if <condition pos:start="179:16" pos:end="179:35">(<expr pos:start="179:17" pos:end="179:34"><operator pos:start="179:17" pos:end="179:17">!</operator><name pos:start="179:18" pos:end="179:34"><name pos:start="179:18" pos:end="179:20">vp8</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:34">got_keyframe</name></name></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:75"><block_content pos:start="181:17" pos:end="181:75">

                <return pos:start="181:17" pos:end="181:75">return <expr pos:start="181:24" pos:end="181:74"><call pos:start="181:24" pos:end="181:74"><name pos:start="181:24" pos:end="181:42">vp8_broken_sequence</name><argument_list pos:start="181:43" pos:end="181:74">(<argument pos:start="181:44" pos:end="181:46"><expr pos:start="181:44" pos:end="181:46"><name pos:start="181:44" pos:end="181:46">ctx</name></expr></argument>, <argument pos:start="181:49" pos:end="181:51"><expr pos:start="181:49" pos:end="181:51"><name pos:start="181:49" pos:end="181:51">vp8</name></expr></argument>, <argument pos:start="181:54" pos:end="181:73"><expr pos:start="181:54" pos:end="181:73"><literal type="string" pos:start="181:54" pos:end="181:73">"Keyframe missing\n"</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="183:13" pos:end="245:13"><if pos:start="183:13" pos:end="201:13">if <condition pos:start="183:16" pos:end="183:31">(<expr pos:start="183:17" pos:end="183:30"><name pos:start="183:17" pos:end="183:25">pictureid</name> <operator pos:start="183:27" pos:end="183:28">&gt;=</operator> <literal type="number" pos:start="183:30" pos:end="183:30">0</literal></expr>)</condition> <block pos:start="183:33" pos:end="201:13">{<block_content pos:start="185:17" pos:end="199:17">

                <if_stmt pos:start="185:17" pos:end="199:17"><if pos:start="185:17" pos:end="191:17">if <condition pos:start="185:20" pos:end="185:78">(<expr pos:start="185:21" pos:end="185:77"><name pos:start="185:21" pos:end="185:29">pictureid</name> <operator pos:start="185:31" pos:end="185:32">!=</operator> <operator pos:start="185:34" pos:end="185:34">(</operator><operator pos:start="185:35" pos:end="185:35">(</operator><name pos:start="185:36" pos:end="185:54"><name pos:start="185:36" pos:end="185:38">vp8</name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:54">prev_pictureid</name></name> <operator pos:start="185:56" pos:end="185:56">+</operator> <literal type="number" pos:start="185:58" pos:end="185:58">1</literal><operator pos:start="185:59" pos:end="185:59">)</operator> <operator pos:start="185:61" pos:end="185:61">&amp;</operator> <name pos:start="185:63" pos:end="185:76">pictureid_mask</name><operator pos:start="185:77" pos:end="185:77">)</operator></expr>)</condition> <block pos:start="185:80" pos:end="191:17">{<block_content pos:start="187:21" pos:end="189:86">

                    <return pos:start="187:21" pos:end="189:86">return <expr pos:start="187:28" pos:end="189:85"><call pos:start="187:28" pos:end="189:85"><name pos:start="187:28" pos:end="187:46">vp8_broken_sequence</name><argument_list pos:start="187:47" pos:end="189:85">(<argument pos:start="187:48" pos:end="187:50"><expr pos:start="187:48" pos:end="187:50"><name pos:start="187:48" pos:end="187:50">ctx</name></expr></argument>, <argument pos:start="187:53" pos:end="187:55"><expr pos:start="187:53" pos:end="187:55"><name pos:start="187:53" pos:end="187:55">vp8</name></expr></argument>,

                                               <argument pos:start="189:48" pos:end="189:84"><expr pos:start="189:48" pos:end="189:84"><literal type="string" pos:start="189:48" pos:end="189:84">"Missed a picture, sequence broken\n"</literal></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if> <else pos:start="191:19" pos:end="199:17">else <block pos:start="191:24" pos:end="199:17">{<block_content pos:start="193:21" pos:end="197:90">

                    <if_stmt pos:start="193:21" pos:end="197:90"><if pos:start="193:21" pos:end="197:90">if <condition pos:start="193:24" pos:end="193:51">(<expr pos:start="193:25" pos:end="193:50"><name pos:start="193:25" pos:end="193:33"><name pos:start="193:25" pos:end="193:27">vp8</name><operator pos:start="193:28" pos:end="193:29">-&gt;</operator><name pos:start="193:30" pos:end="193:33">data</name></name> <operator pos:start="193:35" pos:end="193:36">&amp;&amp;</operator> <operator pos:start="193:38" pos:end="193:38">!</operator><name pos:start="193:39" pos:end="193:50">can_continue</name></expr>)</condition><block type="pseudo" pos:start="195:25" pos:end="197:90"><block_content pos:start="195:25" pos:end="197:90">

                        <return pos:start="195:25" pos:end="197:90">return <expr pos:start="195:32" pos:end="197:89"><call pos:start="195:32" pos:end="197:89"><name pos:start="195:32" pos:end="195:50">vp8_broken_sequence</name><argument_list pos:start="195:51" pos:end="197:89">(<argument pos:start="195:52" pos:end="195:54"><expr pos:start="195:52" pos:end="195:54"><name pos:start="195:52" pos:end="195:54">ctx</name></expr></argument>, <argument pos:start="195:57" pos:end="195:59"><expr pos:start="195:57" pos:end="195:59"><name pos:start="195:57" pos:end="195:59">vp8</name></expr></argument>,

                                                   <argument pos:start="197:52" pos:end="197:88"><expr pos:start="197:52" pos:end="197:88"><literal type="string" pos:start="197:52" pos:end="197:88">"Missed a picture, sequence broken\n"</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="201:15" pos:end="245:13">else <block pos:start="201:20" pos:end="245:13">{<block_content pos:start="203:17" pos:end="243:17">

                <decl_stmt pos:start="203:17" pos:end="203:58"><decl pos:start="203:17" pos:end="203:57"><type pos:start="203:17" pos:end="203:24"><name pos:start="203:17" pos:end="203:24">uint16_t</name></type> <name pos:start="203:26" pos:end="203:37">expected_seq</name> <init pos:start="203:39" pos:end="203:57">= <expr pos:start="203:41" pos:end="203:57"><name pos:start="203:41" pos:end="203:53"><name pos:start="203:41" pos:end="203:43">vp8</name><operator pos:start="203:44" pos:end="203:45">-&gt;</operator><name pos:start="203:46" pos:end="203:53">prev_seq</name></name> <operator pos:start="203:55" pos:end="203:55">+</operator> <literal type="number" pos:start="203:57" pos:end="203:57">1</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="205:17" pos:end="205:50"><decl pos:start="205:17" pos:end="205:49"><type pos:start="205:17" pos:end="205:23"><name pos:start="205:17" pos:end="205:23">int16_t</name></type> <name pos:start="205:25" pos:end="205:28">diff</name> <init pos:start="205:30" pos:end="205:49">= <expr pos:start="205:32" pos:end="205:49"><name pos:start="205:32" pos:end="205:34">seq</name> <operator pos:start="205:36" pos:end="205:36">-</operator> <name pos:start="205:38" pos:end="205:49">expected_seq</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="207:17" pos:end="243:17"><if pos:start="207:17" pos:end="235:17">if <condition pos:start="207:20" pos:end="207:30">(<expr pos:start="207:21" pos:end="207:29"><name pos:start="207:21" pos:end="207:29"><name pos:start="207:21" pos:end="207:23">vp8</name><operator pos:start="207:24" pos:end="207:25">-&gt;</operator><name pos:start="207:26" pos:end="207:29">data</name></name></expr>)</condition> <block pos:start="207:32" pos:end="235:17">{<block_content pos:start="223:21" pos:end="233:21">

                    <comment type="line" pos:start="209:21" pos:end="209:72">// No picture id, so we can't know if missed packets</comment>

                    <comment type="line" pos:start="211:21" pos:end="211:73">// contained any new frames. If diff == 0, we did get</comment>

                    <comment type="line" pos:start="213:21" pos:end="213:78">// later packets from the same frame (matching timestamp),</comment>

                    <comment type="line" pos:start="215:21" pos:end="215:76">// so we know we didn't miss any frame. If diff == 1 and</comment>

                    <comment type="line" pos:start="217:21" pos:end="217:74">// we still have data (not flushed by the end of frame</comment>

                    <comment type="line" pos:start="219:21" pos:end="219:76">// marker), the single missed packet must have been part</comment>

                    <comment type="line" pos:start="221:21" pos:end="221:41">// of the same frame.</comment>

                    <if_stmt pos:start="223:21" pos:end="233:21"><if pos:start="223:21" pos:end="227:21">if <condition pos:start="223:24" pos:end="223:65">(<expr pos:start="223:25" pos:end="223:64"><operator pos:start="223:25" pos:end="223:25">(</operator><name pos:start="223:26" pos:end="223:29">diff</name> <operator pos:start="223:31" pos:end="223:32">==</operator> <literal type="number" pos:start="223:34" pos:end="223:34">0</literal> <operator pos:start="223:36" pos:end="223:37">||</operator> <name pos:start="223:39" pos:end="223:42">diff</name> <operator pos:start="223:44" pos:end="223:45">==</operator> <literal type="number" pos:start="223:47" pos:end="223:47">1</literal><operator pos:start="223:48" pos:end="223:48">)</operator> <operator pos:start="223:50" pos:end="223:51">&amp;&amp;</operator> <name pos:start="223:53" pos:end="223:64">can_continue</name></expr>)</condition> <block pos:start="223:67" pos:end="227:21">{<block_content>

                        <comment type="line" pos:start="225:25" pos:end="225:52">// Proceed with what we have</comment>

                    </block_content>}</block></if> <else pos:start="227:23" pos:end="233:21">else <block pos:start="227:28" pos:end="233:21">{<block_content pos:start="229:25" pos:end="231:89">

                        <return pos:start="229:25" pos:end="231:89">return <expr pos:start="229:32" pos:end="231:88"><call pos:start="229:32" pos:end="231:88"><name pos:start="229:32" pos:end="229:50">vp8_broken_sequence</name><argument_list pos:start="229:51" pos:end="231:88">(<argument pos:start="229:52" pos:end="229:54"><expr pos:start="229:52" pos:end="229:54"><name pos:start="229:52" pos:end="229:54">ctx</name></expr></argument>, <argument pos:start="229:57" pos:end="229:59"><expr pos:start="229:57" pos:end="229:59"><name pos:start="229:57" pos:end="229:59">vp8</name></expr></argument>,

                                                   <argument pos:start="231:52" pos:end="231:87"><expr pos:start="231:52" pos:end="231:87"><literal type="string" pos:start="231:52" pos:end="231:87">"Missed too much, sequence broken\n"</literal></expr></argument>)</argument_list></call></expr>;</return>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="235:19" pos:end="243:17">else <block pos:start="235:24" pos:end="243:17">{<block_content pos:start="237:21" pos:end="241:93">

                    <if_stmt pos:start="237:21" pos:end="241:93"><if pos:start="237:21" pos:end="241:93">if <condition pos:start="237:24" pos:end="237:34">(<expr pos:start="237:25" pos:end="237:33"><name pos:start="237:25" pos:end="237:28">diff</name> <operator pos:start="237:30" pos:end="237:31">!=</operator> <literal type="number" pos:start="237:33" pos:end="237:33">0</literal></expr>)</condition><block type="pseudo" pos:start="239:25" pos:end="241:93"><block_content pos:start="239:25" pos:end="241:93">

                        <return pos:start="239:25" pos:end="241:93">return <expr pos:start="239:32" pos:end="241:92"><call pos:start="239:32" pos:end="241:92"><name pos:start="239:32" pos:end="239:50">vp8_broken_sequence</name><argument_list pos:start="239:51" pos:end="241:92">(<argument pos:start="239:52" pos:end="239:54"><expr pos:start="239:52" pos:end="239:54"><name pos:start="239:52" pos:end="239:54">ctx</name></expr></argument>, <argument pos:start="239:57" pos:end="239:59"><expr pos:start="239:57" pos:end="239:59"><name pos:start="239:57" pos:end="239:59">vp8</name></expr></argument>,

                                                   <argument pos:start="241:52" pos:end="241:91"><expr pos:start="241:52" pos:end="241:91"><literal type="string" pos:start="241:52" pos:end="241:91">"Missed unknown data, sequence broken\n"</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="247:13" pos:end="273:13"><if pos:start="247:13" pos:end="273:13">if <condition pos:start="247:16" pos:end="247:26">(<expr pos:start="247:17" pos:end="247:25"><name pos:start="247:17" pos:end="247:25"><name pos:start="247:17" pos:end="247:19">vp8</name><operator pos:start="247:20" pos:end="247:21">-&gt;</operator><name pos:start="247:22" pos:end="247:25">data</name></name></expr>)</condition> <block pos:start="247:28" pos:end="273:13">{<block_content pos:start="249:17" pos:end="271:17">

                <expr_stmt pos:start="249:17" pos:end="249:40"><expr pos:start="249:17" pos:end="249:39"><name pos:start="249:17" pos:end="249:35"><name pos:start="249:17" pos:end="249:19">vp8</name><operator pos:start="249:20" pos:end="249:21">-&gt;</operator><name pos:start="249:22" pos:end="249:35">sequence_dirty</name></name> <operator pos:start="249:37" pos:end="249:37">=</operator> <literal type="number" pos:start="249:39" pos:end="249:39">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="251:17" pos:end="271:17"><if pos:start="251:17" pos:end="265:17">if <condition pos:start="251:20" pos:end="251:65">(<expr pos:start="251:21" pos:end="251:64"><call pos:start="251:21" pos:end="251:40"><name pos:start="251:21" pos:end="251:29">avio_tell</name><argument_list pos:start="251:30" pos:end="251:40">(<argument pos:start="251:31" pos:end="251:39"><expr pos:start="251:31" pos:end="251:39"><name pos:start="251:31" pos:end="251:39"><name pos:start="251:31" pos:end="251:33">vp8</name><operator pos:start="251:34" pos:end="251:35">-&gt;</operator><name pos:start="251:36" pos:end="251:39">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="251:42" pos:end="251:43">&gt;=</operator> <name pos:start="251:45" pos:end="251:64"><name pos:start="251:45" pos:end="251:47">vp8</name><operator pos:start="251:48" pos:end="251:49">-&gt;</operator><name pos:start="251:50" pos:end="251:64">first_part_size</name></name></expr>)</condition> <block pos:start="251:67" pos:end="265:17">{<block_content pos:start="253:21" pos:end="263:51">

                    <decl_stmt pos:start="253:21" pos:end="253:81"><decl pos:start="253:21" pos:end="253:80"><type pos:start="253:21" pos:end="253:23"><name pos:start="253:21" pos:end="253:23">int</name></type> <name pos:start="253:25" pos:end="253:27">ret</name> <init pos:start="253:29" pos:end="253:80">= <expr pos:start="253:31" pos:end="253:80"><call pos:start="253:31" pos:end="253:80"><name pos:start="253:31" pos:end="253:52">ff_rtp_finalize_packet</name><argument_list pos:start="253:53" pos:end="253:80">(<argument pos:start="253:54" pos:end="253:56"><expr pos:start="253:54" pos:end="253:56"><name pos:start="253:54" pos:end="253:56">pkt</name></expr></argument>, <argument pos:start="253:59" pos:end="253:68"><expr pos:start="253:59" pos:end="253:68"><operator pos:start="253:59" pos:end="253:59">&amp;</operator><name pos:start="253:60" pos:end="253:68"><name pos:start="253:60" pos:end="253:62">vp8</name><operator pos:start="253:63" pos:end="253:64">-&gt;</operator><name pos:start="253:65" pos:end="253:68">data</name></name></expr></argument>, <argument pos:start="253:71" pos:end="253:79"><expr pos:start="253:71" pos:end="253:79"><name pos:start="253:71" pos:end="253:79"><name pos:start="253:71" pos:end="253:72">st</name><operator pos:start="253:73" pos:end="253:74">-&gt;</operator><name pos:start="253:75" pos:end="253:79">index</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="255:21" pos:end="257:35"><if pos:start="255:21" pos:end="257:35">if <condition pos:start="255:24" pos:end="255:32">(<expr pos:start="255:25" pos:end="255:31"><name pos:start="255:25" pos:end="255:27">ret</name> <operator pos:start="255:29" pos:end="255:29">&lt;</operator> <literal type="number" pos:start="255:31" pos:end="255:31">0</literal></expr>)</condition><block type="pseudo" pos:start="257:25" pos:end="257:35"><block_content pos:start="257:25" pos:end="257:35">

                        <return pos:start="257:25" pos:end="257:35">return <expr pos:start="257:32" pos:end="257:34"><name pos:start="257:32" pos:end="257:34">ret</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:54"><expr pos:start="259:21" pos:end="259:53"><name pos:start="259:21" pos:end="259:30"><name pos:start="259:21" pos:end="259:23">pkt</name><operator pos:start="259:24" pos:end="259:25">-&gt;</operator><name pos:start="259:26" pos:end="259:30">flags</name></name> <operator pos:start="259:32" pos:end="259:33">|=</operator> <name pos:start="259:35" pos:end="259:53">AV_PKT_FLAG_CORRUPT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:43"><expr pos:start="261:21" pos:end="261:42"><name pos:start="261:21" pos:end="261:38">returned_old_frame</name> <operator pos:start="261:40" pos:end="261:40">=</operator> <literal type="number" pos:start="261:42" pos:end="261:42">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="263:21" pos:end="263:51"><expr pos:start="263:21" pos:end="263:50"><name pos:start="263:21" pos:end="263:33">old_timestamp</name> <operator pos:start="263:35" pos:end="263:35">=</operator> <name pos:start="263:37" pos:end="263:50"><name pos:start="263:37" pos:end="263:39">vp8</name><operator pos:start="263:40" pos:end="263:41">-&gt;</operator><name pos:start="263:42" pos:end="263:50">timestamp</name></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="265:19" pos:end="271:17">else <block pos:start="265:24" pos:end="271:17">{<block_content pos:start="269:21" pos:end="269:41">

                    <comment type="line" pos:start="267:21" pos:end="267:39">// Shouldn't happen</comment>

                    <expr_stmt pos:start="269:21" pos:end="269:41"><expr pos:start="269:21" pos:end="269:40"><call pos:start="269:21" pos:end="269:40"><name pos:start="269:21" pos:end="269:35">vp8_free_buffer</name><argument_list pos:start="269:36" pos:end="269:40">(<argument pos:start="269:37" pos:end="269:39"><expr pos:start="269:37" pos:end="269:39"><name pos:start="269:37" pos:end="269:39">vp8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:73"><expr pos:start="277:9" pos:end="277:72"><name pos:start="277:9" pos:end="277:28"><name pos:start="277:9" pos:end="277:11">vp8</name><operator pos:start="277:12" pos:end="277:13">-&gt;</operator><name pos:start="277:14" pos:end="277:28">first_part_size</name></name> <operator pos:start="277:30" pos:end="277:30">=</operator> <operator pos:start="277:32" pos:end="277:32">(</operator><call pos:start="277:33" pos:end="277:48"><name pos:start="277:33" pos:end="277:39">AV_RL16</name><argument_list pos:start="277:40" pos:end="277:48">(<argument pos:start="277:41" pos:end="277:47"><expr pos:start="277:41" pos:end="277:47"><operator pos:start="277:41" pos:end="277:41">&amp;</operator><name pos:start="277:42" pos:end="277:47"><name pos:start="277:42" pos:end="277:44">buf</name><index pos:start="277:45" pos:end="277:47">[<expr pos:start="277:46" pos:end="277:46"><literal type="number" pos:start="277:46" pos:end="277:46">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="277:50" pos:end="277:51">&lt;&lt;</operator> <literal type="number" pos:start="277:53" pos:end="277:53">3</literal> <operator pos:start="277:55" pos:end="277:55">|</operator> <name pos:start="277:57" pos:end="277:62"><name pos:start="277:57" pos:end="277:59">buf</name><index pos:start="277:60" pos:end="277:62">[<expr pos:start="277:61" pos:end="277:61"><literal type="number" pos:start="277:61" pos:end="277:61">0</literal></expr>]</index></name> <operator pos:start="277:64" pos:end="277:65">&gt;&gt;</operator> <literal type="number" pos:start="277:67" pos:end="277:67">5</literal><operator pos:start="277:68" pos:end="277:68">)</operator> <operator pos:start="277:70" pos:end="277:70">+</operator> <literal type="number" pos:start="277:72" pos:end="277:72">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="279:9" pos:end="281:23"><if pos:start="279:9" pos:end="281:23">if <condition pos:start="279:12" pos:end="279:54">(<expr pos:start="279:13" pos:end="279:53"><operator pos:start="279:13" pos:end="279:13">(</operator><name pos:start="279:14" pos:end="279:16">res</name> <operator pos:start="279:18" pos:end="279:18">=</operator> <call pos:start="279:20" pos:end="279:48"><name pos:start="279:20" pos:end="279:36">avio_open_dyn_buf</name><argument_list pos:start="279:37" pos:end="279:48">(<argument pos:start="279:38" pos:end="279:47"><expr pos:start="279:38" pos:end="279:47"><operator pos:start="279:38" pos:end="279:38">&amp;</operator><name pos:start="279:39" pos:end="279:47"><name pos:start="279:39" pos:end="279:41">vp8</name><operator pos:start="279:42" pos:end="279:43">-&gt;</operator><name pos:start="279:44" pos:end="279:47">data</name></name></expr></argument>)</argument_list></call><operator pos:start="279:49" pos:end="279:49">)</operator> <operator pos:start="279:51" pos:end="279:51">&lt;</operator> <literal type="number" pos:start="279:53" pos:end="279:53">0</literal></expr>)</condition><block type="pseudo" pos:start="281:13" pos:end="281:23"><block_content pos:start="281:13" pos:end="281:23">

            <return pos:start="281:13" pos:end="281:23">return <expr pos:start="281:20" pos:end="281:22"><name pos:start="281:20" pos:end="281:22">res</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:36"><expr pos:start="283:9" pos:end="283:35"><name pos:start="283:9" pos:end="283:22"><name pos:start="283:9" pos:end="283:11">vp8</name><operator pos:start="283:12" pos:end="283:13">-&gt;</operator><name pos:start="283:14" pos:end="283:22">timestamp</name></name> <operator pos:start="283:24" pos:end="283:24">=</operator> <operator pos:start="283:26" pos:end="283:26">*</operator><name pos:start="283:27" pos:end="283:35">timestamp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:30"><expr pos:start="285:9" pos:end="285:29"><name pos:start="285:9" pos:end="285:25"><name pos:start="285:9" pos:end="285:11">vp8</name><operator pos:start="285:12" pos:end="285:13">-&gt;</operator><name pos:start="285:14" pos:end="285:25">broken_frame</name></name> <operator pos:start="285:27" pos:end="285:27">=</operator> <literal type="number" pos:start="285:29" pos:end="285:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:40"><expr pos:start="287:9" pos:end="287:39"><name pos:start="287:9" pos:end="287:27"><name pos:start="287:9" pos:end="287:11">vp8</name><operator pos:start="287:12" pos:end="287:13">-&gt;</operator><name pos:start="287:14" pos:end="287:27">prev_pictureid</name></name> <operator pos:start="287:29" pos:end="287:29">=</operator> <name pos:start="287:31" pos:end="287:39">pictureid</name></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:36"><expr pos:start="289:9" pos:end="289:35"><name pos:start="289:9" pos:end="289:24"><name pos:start="289:9" pos:end="289:11">vp8</name><operator pos:start="289:12" pos:end="289:13">-&gt;</operator><name pos:start="289:14" pos:end="289:24">is_keyframe</name></name> <operator pos:start="289:26" pos:end="289:26">=</operator> <operator pos:start="289:28" pos:end="289:28">!</operator><name pos:start="289:29" pos:end="289:35">non_key</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="291:7" pos:end="339:5">else <block pos:start="291:12" pos:end="339:5">{<block_content pos:start="293:9" pos:end="337:9">

        <decl_stmt pos:start="293:9" pos:end="293:50"><decl pos:start="293:9" pos:end="293:49"><type pos:start="293:9" pos:end="293:16"><name pos:start="293:9" pos:end="293:16">uint16_t</name></type> <name pos:start="293:18" pos:end="293:29">expected_seq</name> <init pos:start="293:31" pos:end="293:49">= <expr pos:start="293:33" pos:end="293:49"><name pos:start="293:33" pos:end="293:45"><name pos:start="293:33" pos:end="293:35">vp8</name><operator pos:start="293:36" pos:end="293:37">-&gt;</operator><name pos:start="293:38" pos:end="293:45">prev_seq</name></name> <operator pos:start="293:47" pos:end="293:47">+</operator> <literal type="number" pos:start="293:49" pos:end="293:49">1</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="297:9" pos:end="299:35"><if pos:start="297:9" pos:end="299:35">if <condition pos:start="297:12" pos:end="297:30">(<expr pos:start="297:13" pos:end="297:29"><operator pos:start="297:13" pos:end="297:13">!</operator><name pos:start="297:14" pos:end="297:29"><name pos:start="297:14" pos:end="297:16">vp8</name><operator pos:start="297:17" pos:end="297:18">-&gt;</operator><name pos:start="297:19" pos:end="297:29">sequence_ok</name></name></expr>)</condition><block type="pseudo" pos:start="299:13" pos:end="299:35"><block_content pos:start="299:13" pos:end="299:35">

            <return pos:start="299:13" pos:end="299:35">return <expr pos:start="299:20" pos:end="299:34"><call pos:start="299:20" pos:end="299:34"><name pos:start="299:20" pos:end="299:26">AVERROR</name><argument_list pos:start="299:27" pos:end="299:34">(<argument pos:start="299:28" pos:end="299:33"><expr pos:start="299:28" pos:end="299:33"><name pos:start="299:28" pos:end="299:33">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="303:9" pos:end="311:9"><if pos:start="303:9" pos:end="311:9">if <condition pos:start="303:12" pos:end="303:41">(<expr pos:start="303:13" pos:end="303:40"><name pos:start="303:13" pos:end="303:26"><name pos:start="303:13" pos:end="303:15">vp8</name><operator pos:start="303:16" pos:end="303:17">-&gt;</operator><name pos:start="303:18" pos:end="303:26">timestamp</name></name> <operator pos:start="303:28" pos:end="303:29">!=</operator> <operator pos:start="303:31" pos:end="303:31">*</operator><name pos:start="303:32" pos:end="303:40">timestamp</name></expr>)</condition> <block pos:start="303:43" pos:end="311:9">{<block_content pos:start="307:13" pos:end="309:85">

            <comment type="line" pos:start="305:13" pos:end="305:65">// Missed the start of the new frame, sequence broken</comment>

            <return pos:start="307:13" pos:end="309:85">return <expr pos:start="307:20" pos:end="309:84"><call pos:start="307:20" pos:end="309:84"><name pos:start="307:20" pos:end="307:38">vp8_broken_sequence</name><argument_list pos:start="307:39" pos:end="309:84">(<argument pos:start="307:40" pos:end="307:42"><expr pos:start="307:40" pos:end="307:42"><name pos:start="307:40" pos:end="307:42">ctx</name></expr></argument>, <argument pos:start="307:45" pos:end="307:47"><expr pos:start="307:45" pos:end="307:47"><name pos:start="307:45" pos:end="307:47">vp8</name></expr></argument>,

                                       <argument pos:start="309:40" pos:end="309:83"><expr pos:start="309:40" pos:end="309:83"><literal type="string" pos:start="309:40" pos:end="309:83">"Received no start marker; dropping frame\n"</literal></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="315:9" pos:end="337:9"><if pos:start="315:9" pos:end="337:9">if <condition pos:start="315:12" pos:end="315:32">(<expr pos:start="315:13" pos:end="315:31"><name pos:start="315:13" pos:end="315:15">seq</name> <operator pos:start="315:17" pos:end="315:18">!=</operator> <name pos:start="315:20" pos:end="315:31">expected_seq</name></expr>)</condition> <block pos:start="315:34" pos:end="337:9">{<block_content pos:start="317:13" pos:end="335:13">

            <if_stmt pos:start="317:13" pos:end="335:13"><if pos:start="317:13" pos:end="323:13">if <condition pos:start="317:16" pos:end="317:33">(<expr pos:start="317:17" pos:end="317:32"><name pos:start="317:17" pos:end="317:32"><name pos:start="317:17" pos:end="317:19">vp8</name><operator pos:start="317:20" pos:end="317:21">-&gt;</operator><name pos:start="317:22" pos:end="317:32">is_keyframe</name></name></expr>)</condition> <block pos:start="317:35" pos:end="323:13">{<block_content pos:start="319:17" pos:end="321:91">

                <return pos:start="319:17" pos:end="321:91">return <expr pos:start="319:24" pos:end="321:90"><call pos:start="319:24" pos:end="321:90"><name pos:start="319:24" pos:end="319:42">vp8_broken_sequence</name><argument_list pos:start="319:43" pos:end="321:90">(<argument pos:start="319:44" pos:end="319:46"><expr pos:start="319:44" pos:end="319:46"><name pos:start="319:44" pos:end="319:46">ctx</name></expr></argument>, <argument pos:start="319:49" pos:end="319:51"><expr pos:start="319:49" pos:end="319:51"><name pos:start="319:49" pos:end="319:51">vp8</name></expr></argument>,

                                           <argument pos:start="321:44" pos:end="321:89"><expr pos:start="321:44" pos:end="321:89"><literal type="string" pos:start="321:44" pos:end="321:89">"Missed part of a keyframe, sequence broken\n"</literal></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if> <if type="elseif" pos:start="323:15" pos:end="329:13">else if <condition pos:start="323:23" pos:end="323:81">(<expr pos:start="323:24" pos:end="323:80"><name pos:start="323:24" pos:end="323:32"><name pos:start="323:24" pos:end="323:26">vp8</name><operator pos:start="323:27" pos:end="323:28">-&gt;</operator><name pos:start="323:29" pos:end="323:32">data</name></name> <operator pos:start="323:34" pos:end="323:35">&amp;&amp;</operator> <call pos:start="323:37" pos:end="323:56"><name pos:start="323:37" pos:end="323:45">avio_tell</name><argument_list pos:start="323:46" pos:end="323:56">(<argument pos:start="323:47" pos:end="323:55"><expr pos:start="323:47" pos:end="323:55"><name pos:start="323:47" pos:end="323:55"><name pos:start="323:47" pos:end="323:49">vp8</name><operator pos:start="323:50" pos:end="323:51">-&gt;</operator><name pos:start="323:52" pos:end="323:55">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="323:58" pos:end="323:59">&gt;=</operator> <name pos:start="323:61" pos:end="323:80"><name pos:start="323:61" pos:end="323:63">vp8</name><operator pos:start="323:64" pos:end="323:65">-&gt;</operator><name pos:start="323:66" pos:end="323:80">first_part_size</name></name></expr>)</condition> <block pos:start="323:83" pos:end="329:13">{<block_content pos:start="325:17" pos:end="327:40">

                <expr_stmt pos:start="325:17" pos:end="325:38"><expr pos:start="325:17" pos:end="325:37"><name pos:start="325:17" pos:end="325:33"><name pos:start="325:17" pos:end="325:19">vp8</name><operator pos:start="325:20" pos:end="325:21">-&gt;</operator><name pos:start="325:22" pos:end="325:33">broken_frame</name></name> <operator pos:start="325:35" pos:end="325:35">=</operator> <literal type="number" pos:start="325:37" pos:end="325:37">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="327:17" pos:end="327:40"><expr pos:start="327:17" pos:end="327:39"><name pos:start="327:17" pos:end="327:35"><name pos:start="327:17" pos:end="327:19">vp8</name><operator pos:start="327:20" pos:end="327:21">-&gt;</operator><name pos:start="327:22" pos:end="327:35">sequence_dirty</name></name> <operator pos:start="327:37" pos:end="327:37">=</operator> <literal type="number" pos:start="327:39" pos:end="327:39">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="329:15" pos:end="335:13">else <block pos:start="329:20" pos:end="335:13">{<block_content pos:start="331:17" pos:end="333:100">

                <return pos:start="331:17" pos:end="333:100">return <expr pos:start="331:24" pos:end="333:99"><call pos:start="331:24" pos:end="333:99"><name pos:start="331:24" pos:end="331:42">vp8_broken_sequence</name><argument_list pos:start="331:43" pos:end="333:99">(<argument pos:start="331:44" pos:end="331:46"><expr pos:start="331:44" pos:end="331:46"><name pos:start="331:44" pos:end="331:46">ctx</name></expr></argument>, <argument pos:start="331:49" pos:end="331:51"><expr pos:start="331:49" pos:end="331:51"><name pos:start="331:49" pos:end="331:51">vp8</name></expr></argument>,

                                           <argument pos:start="333:44" pos:end="333:98"><expr pos:start="333:44" pos:end="333:98"><literal type="string" pos:start="333:44" pos:end="333:98">"Missed part of the first partition, sequence broken\n"</literal></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="343:5" pos:end="345:75"><if pos:start="343:5" pos:end="345:75">if <condition pos:start="343:8" pos:end="343:19">(<expr pos:start="343:9" pos:end="343:18"><operator pos:start="343:9" pos:end="343:9">!</operator><name pos:start="343:10" pos:end="343:18"><name pos:start="343:10" pos:end="343:12">vp8</name><operator pos:start="343:13" pos:end="343:14">-&gt;</operator><name pos:start="343:15" pos:end="343:18">data</name></name></expr>)</condition><block type="pseudo" pos:start="345:9" pos:end="345:75"><block_content pos:start="345:9" pos:end="345:75">

        <return pos:start="345:9" pos:end="345:75">return <expr pos:start="345:16" pos:end="345:74"><call pos:start="345:16" pos:end="345:74"><name pos:start="345:16" pos:end="345:34">vp8_broken_sequence</name><argument_list pos:start="345:35" pos:end="345:74">(<argument pos:start="345:36" pos:end="345:38"><expr pos:start="345:36" pos:end="345:38"><name pos:start="345:36" pos:end="345:38">ctx</name></expr></argument>, <argument pos:start="345:41" pos:end="345:43"><expr pos:start="345:41" pos:end="345:43"><name pos:start="345:41" pos:end="345:43">vp8</name></expr></argument>, <argument pos:start="345:46" pos:end="345:73"><expr pos:start="345:46" pos:end="345:73"><literal type="string" pos:start="345:46" pos:end="345:73">"Received no start marker\n"</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="349:5" pos:end="349:24"><expr pos:start="349:5" pos:end="349:23"><name pos:start="349:5" pos:end="349:17"><name pos:start="349:5" pos:end="349:7">vp8</name><operator pos:start="349:8" pos:end="349:9">-&gt;</operator><name pos:start="349:10" pos:end="349:17">prev_seq</name></name> <operator pos:start="349:19" pos:end="349:19">=</operator> <name pos:start="349:21" pos:end="349:23">seq</name></expr>;</expr_stmt>

    <if_stmt pos:start="351:5" pos:end="353:40"><if pos:start="351:5" pos:end="353:40">if <condition pos:start="351:8" pos:end="351:27">(<expr pos:start="351:9" pos:end="351:26"><operator pos:start="351:9" pos:end="351:9">!</operator><name pos:start="351:10" pos:end="351:26"><name pos:start="351:10" pos:end="351:12">vp8</name><operator pos:start="351:13" pos:end="351:14">-&gt;</operator><name pos:start="351:15" pos:end="351:26">broken_frame</name></name></expr>)</condition><block type="pseudo" pos:start="353:9" pos:end="353:40"><block_content pos:start="353:9" pos:end="353:40">

        <expr_stmt pos:start="353:9" pos:end="353:40"><expr pos:start="353:9" pos:end="353:39"><call pos:start="353:9" pos:end="353:39"><name pos:start="353:9" pos:end="353:18">avio_write</name><argument_list pos:start="353:19" pos:end="353:39">(<argument pos:start="353:20" pos:end="353:28"><expr pos:start="353:20" pos:end="353:28"><name pos:start="353:20" pos:end="353:28"><name pos:start="353:20" pos:end="353:22">vp8</name><operator pos:start="353:23" pos:end="353:24">-&gt;</operator><name pos:start="353:25" pos:end="353:28">data</name></name></expr></argument>, <argument pos:start="353:31" pos:end="353:33"><expr pos:start="353:31" pos:end="353:33"><name pos:start="353:31" pos:end="353:33">buf</name></expr></argument>, <argument pos:start="353:36" pos:end="353:38"><expr pos:start="353:36" pos:end="353:38"><name pos:start="353:36" pos:end="353:38">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="357:5" pos:end="363:5"><if pos:start="357:5" pos:end="363:5">if <condition pos:start="357:8" pos:end="357:27">(<expr pos:start="357:9" pos:end="357:26"><name pos:start="357:9" pos:end="357:26">returned_old_frame</name></expr>)</condition> <block pos:start="357:29" pos:end="363:5">{<block_content pos:start="359:9" pos:end="361:34">

        <expr_stmt pos:start="359:9" pos:end="359:35"><expr pos:start="359:9" pos:end="359:34"><operator pos:start="359:9" pos:end="359:9">*</operator><name pos:start="359:10" pos:end="359:18">timestamp</name> <operator pos:start="359:20" pos:end="359:20">=</operator> <name pos:start="359:22" pos:end="359:34">old_timestamp</name></expr>;</expr_stmt>

        <return pos:start="361:9" pos:end="361:34">return <expr pos:start="361:16" pos:end="361:33"><ternary pos:start="361:16" pos:end="361:33"><condition pos:start="361:16" pos:end="361:27"><expr pos:start="361:16" pos:end="361:25"><name pos:start="361:16" pos:end="361:25">end_packet</name></expr> ?</condition><then pos:start="361:29" pos:end="361:29"> <expr pos:start="361:29" pos:end="361:29"><literal type="number" pos:start="361:29" pos:end="361:29">1</literal></expr> </then><else pos:start="361:31" pos:end="361:33">: <expr pos:start="361:33" pos:end="361:33"><literal type="number" pos:start="361:33" pos:end="361:33">0</literal></expr></else></ternary></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="367:5" pos:end="383:5"><if pos:start="367:5" pos:end="383:5">if <condition pos:start="367:8" pos:end="367:19">(<expr pos:start="367:9" pos:end="367:18"><name pos:start="367:9" pos:end="367:18">end_packet</name></expr>)</condition> <block pos:start="367:21" pos:end="383:5">{<block_content pos:start="369:9" pos:end="381:17">

        <decl_stmt pos:start="369:9" pos:end="369:16"><decl pos:start="369:9" pos:end="369:15"><type pos:start="369:9" pos:end="369:11"><name pos:start="369:9" pos:end="369:11">int</name></type> <name pos:start="369:13" pos:end="369:15">ret</name></decl>;</decl_stmt>

        <expr_stmt pos:start="371:9" pos:end="371:65"><expr pos:start="371:9" pos:end="371:64"><name pos:start="371:9" pos:end="371:11">ret</name> <operator pos:start="371:13" pos:end="371:13">=</operator> <call pos:start="371:15" pos:end="371:64"><name pos:start="371:15" pos:end="371:36">ff_rtp_finalize_packet</name><argument_list pos:start="371:37" pos:end="371:64">(<argument pos:start="371:38" pos:end="371:40"><expr pos:start="371:38" pos:end="371:40"><name pos:start="371:38" pos:end="371:40">pkt</name></expr></argument>, <argument pos:start="371:43" pos:end="371:52"><expr pos:start="371:43" pos:end="371:52"><operator pos:start="371:43" pos:end="371:43">&amp;</operator><name pos:start="371:44" pos:end="371:52"><name pos:start="371:44" pos:end="371:46">vp8</name><operator pos:start="371:47" pos:end="371:48">-&gt;</operator><name pos:start="371:49" pos:end="371:52">data</name></name></expr></argument>, <argument pos:start="371:55" pos:end="371:63"><expr pos:start="371:55" pos:end="371:63"><name pos:start="371:55" pos:end="371:63"><name pos:start="371:55" pos:end="371:56">st</name><operator pos:start="371:57" pos:end="371:58">-&gt;</operator><name pos:start="371:59" pos:end="371:63">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="373:9" pos:end="375:23"><if pos:start="373:9" pos:end="375:23">if <condition pos:start="373:12" pos:end="373:20">(<expr pos:start="373:13" pos:end="373:19"><name pos:start="373:13" pos:end="373:15">ret</name> <operator pos:start="373:17" pos:end="373:17">&lt;</operator> <literal type="number" pos:start="373:19" pos:end="373:19">0</literal></expr>)</condition><block type="pseudo" pos:start="375:13" pos:end="375:23"><block_content pos:start="375:13" pos:end="375:23">

            <return pos:start="375:13" pos:end="375:23">return <expr pos:start="375:20" pos:end="375:22"><name pos:start="375:20" pos:end="375:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="377:9" pos:end="379:46"><if pos:start="377:9" pos:end="379:46">if <condition pos:start="377:12" pos:end="377:32">(<expr pos:start="377:13" pos:end="377:31"><name pos:start="377:13" pos:end="377:31"><name pos:start="377:13" pos:end="377:15">vp8</name><operator pos:start="377:16" pos:end="377:17">-&gt;</operator><name pos:start="377:18" pos:end="377:31">sequence_dirty</name></name></expr>)</condition><block type="pseudo" pos:start="379:13" pos:end="379:46"><block_content pos:start="379:13" pos:end="379:46">

            <expr_stmt pos:start="379:13" pos:end="379:46"><expr pos:start="379:13" pos:end="379:45"><name pos:start="379:13" pos:end="379:22"><name pos:start="379:13" pos:end="379:15">pkt</name><operator pos:start="379:16" pos:end="379:17">-&gt;</operator><name pos:start="379:18" pos:end="379:22">flags</name></name> <operator pos:start="379:24" pos:end="379:25">|=</operator> <name pos:start="379:27" pos:end="379:45">AV_PKT_FLAG_CORRUPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="381:9" pos:end="381:17">return <expr pos:start="381:16" pos:end="381:16"><literal type="number" pos:start="381:16" pos:end="381:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="387:5" pos:end="387:27">return <expr pos:start="387:12" pos:end="387:26"><call pos:start="387:12" pos:end="387:26"><name pos:start="387:12" pos:end="387:18">AVERROR</name><argument_list pos:start="387:19" pos:end="387:26">(<argument pos:start="387:20" pos:end="387:25"><expr pos:start="387:20" pos:end="387:25"><name pos:start="387:20" pos:end="387:25">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
