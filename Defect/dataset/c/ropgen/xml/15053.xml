<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15053.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:16">coroutine_fn</name></type> <name pos:start="1:18" pos:end="1:31">bdrv_co_preadv</name><parameter_list pos:start="1:32" pos:end="5:27">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:41">BdrvChild</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">child</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:18"><type pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:11">int64_t</name></type> <name pos:start="3:13" pos:end="3:18">offset</name></decl></parameter>, <parameter pos:start="3:21" pos:end="3:38"><decl pos:start="3:21" pos:end="3:38"><type pos:start="3:21" pos:end="3:38"><name pos:start="3:21" pos:end="3:28">unsigned</name> <name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:38">bytes</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:58"><decl pos:start="3:41" pos:end="3:58"><type pos:start="3:41" pos:end="3:58"><name pos:start="3:41" pos:end="3:52">QEMUIOVector</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">qiov</name></decl></parameter>,

    <parameter pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:20">BdrvRequestFlags</name></type> <name pos:start="5:22" pos:end="5:26">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="141:1">{<block_content pos:start="9:5" pos:end="139:15">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">BlockDriverState</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">bs</name> <init pos:start="9:26" pos:end="9:36">= <expr pos:start="9:28" pos:end="9:36"><name pos:start="9:28" pos:end="9:36"><name pos:start="9:28" pos:end="9:32">child</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:36">bs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">BlockDriver</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">drv</name> <init pos:start="11:22" pos:end="11:30">= <expr pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:25">bs</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:30">drv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:22">BdrvTrackedRequest</name></type> <name pos:start="13:24" pos:end="13:26">req</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:46"><decl pos:start="17:5" pos:end="17:45"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:18">align</name> <init pos:start="17:20" pos:end="17:45">= <expr pos:start="17:22" pos:end="17:45"><name pos:start="17:22" pos:end="17:45"><name pos:start="17:22" pos:end="17:23">bs</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:27">bl</name><operator pos:start="17:28" pos:end="17:28">.</operator><name pos:start="17:29" pos:end="17:45">request_alignment</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:21">head_buf</name> <init pos:start="19:23" pos:end="19:28">= <expr pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:21">tail_buf</name> <init pos:start="21:23" pos:end="21:28">= <expr pos:start="21:25" pos:end="21:28"><name pos:start="21:25" pos:end="21:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:16">QEMUIOVector</name></type> <name pos:start="23:18" pos:end="23:27">local_qiov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:32"><decl pos:start="25:5" pos:end="25:31"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">bool</name></type> <name pos:start="25:10" pos:end="25:23">use_local_qiov</name> <init pos:start="25:25" pos:end="25:31">= <expr pos:start="25:27" pos:end="25:31"><name pos:start="25:27" pos:end="25:31">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:13">(<expr pos:start="31:9" pos:end="31:12"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:12">drv</name></expr>)</condition> <block pos:start="31:15" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:26">

        <return pos:start="33:9" pos:end="33:26">return <expr pos:start="33:16" pos:end="33:25"><operator pos:start="33:16" pos:end="33:16">-</operator><name pos:start="33:17" pos:end="33:25">ENOMEDIUM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:53"><expr pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:52"><name pos:start="39:11" pos:end="39:33">bdrv_check_byte_request</name><argument_list pos:start="39:34" pos:end="39:52">(<argument pos:start="39:35" pos:end="39:36"><expr pos:start="39:35" pos:end="39:36"><name pos:start="39:35" pos:end="39:36">bs</name></expr></argument>, <argument pos:start="39:39" pos:end="39:44"><expr pos:start="39:39" pos:end="39:44"><name pos:start="39:39" pos:end="39:44">offset</name></expr></argument>, <argument pos:start="39:47" pos:end="39:51"><expr pos:start="39:47" pos:end="39:51"><name pos:start="39:47" pos:end="39:51">bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">&lt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition> <block pos:start="41:18" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:27"><expr pos:start="49:5" pos:end="49:26"><call pos:start="49:5" pos:end="49:26"><name pos:start="49:5" pos:end="49:22">bdrv_inc_in_flight</name><argument_list pos:start="49:23" pos:end="49:26">(<argument pos:start="49:24" pos:end="49:25"><expr pos:start="49:24" pos:end="49:25"><name pos:start="49:24" pos:end="49:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:70">/* Don't do copy-on-read if we read data before write operation */</comment>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:63">(<expr pos:start="55:9" pos:end="55:62"><name pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:10">bs</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:24">copy_on_read</name></name> <operator pos:start="55:26" pos:end="55:27">&amp;&amp;</operator> <operator pos:start="55:29" pos:end="55:29">!</operator><operator pos:start="55:30" pos:end="55:30">(</operator><name pos:start="55:31" pos:end="55:35">flags</name> <operator pos:start="55:37" pos:end="55:37">&amp;</operator> <name pos:start="55:39" pos:end="55:61">BDRV_REQ_NO_SERIALISING</name><operator pos:start="55:62" pos:end="55:62">)</operator></expr>)</condition> <block pos:start="55:65" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:39">

        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:13">flags</name> <operator pos:start="57:15" pos:end="57:16">|=</operator> <name pos:start="57:18" pos:end="57:38">BDRV_REQ_COPY_ON_READ</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:49">/* Align read if necessary by padding qiov */</comment>

    <if_stmt pos:start="65:5" pos:end="83:5"><if pos:start="65:5" pos:end="83:5">if <condition pos:start="65:8" pos:end="65:29">(<expr pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:14">offset</name> <operator pos:start="65:16" pos:end="65:16">&amp;</operator> <operator pos:start="65:18" pos:end="65:18">(</operator><name pos:start="65:19" pos:end="65:23">align</name> <operator pos:start="65:25" pos:end="65:25">-</operator> <literal type="number" pos:start="65:27" pos:end="65:27">1</literal><operator pos:start="65:28" pos:end="65:28">)</operator></expr>)</condition> <block pos:start="65:31" pos:end="83:5">{<block_content pos:start="67:9" pos:end="81:39">

        <expr_stmt pos:start="67:9" pos:end="67:46"><expr pos:start="67:9" pos:end="67:45"><name pos:start="67:9" pos:end="67:16">head_buf</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="67:45"><name pos:start="67:20" pos:end="67:34">qemu_blockalign</name><argument_list pos:start="67:35" pos:end="67:45">(<argument pos:start="67:36" pos:end="67:37"><expr pos:start="67:36" pos:end="67:37"><name pos:start="67:36" pos:end="67:37">bs</name></expr></argument>, <argument pos:start="67:40" pos:end="67:44"><expr pos:start="67:40" pos:end="67:44"><name pos:start="67:40" pos:end="67:44">align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:53"><expr pos:start="69:9" pos:end="69:52"><call pos:start="69:9" pos:end="69:52"><name pos:start="69:9" pos:end="69:23">qemu_iovec_init</name><argument_list pos:start="69:24" pos:end="69:52">(<argument pos:start="69:25" pos:end="69:35"><expr pos:start="69:25" pos:end="69:35"><operator pos:start="69:25" pos:end="69:25">&amp;</operator><name pos:start="69:26" pos:end="69:35">local_qiov</name></expr></argument>, <argument pos:start="69:38" pos:end="69:51"><expr pos:start="69:38" pos:end="69:51"><name pos:start="69:38" pos:end="69:47"><name pos:start="69:38" pos:end="69:41">qiov</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:47">niov</name></name> <operator pos:start="69:49" pos:end="69:49">+</operator> <literal type="number" pos:start="69:51" pos:end="69:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:68"><expr pos:start="71:9" pos:end="71:67"><call pos:start="71:9" pos:end="71:67"><name pos:start="71:9" pos:end="71:22">qemu_iovec_add</name><argument_list pos:start="71:23" pos:end="71:67">(<argument pos:start="71:24" pos:end="71:34"><expr pos:start="71:24" pos:end="71:34"><operator pos:start="71:24" pos:end="71:24">&amp;</operator><name pos:start="71:25" pos:end="71:34">local_qiov</name></expr></argument>, <argument pos:start="71:37" pos:end="71:44"><expr pos:start="71:37" pos:end="71:44"><name pos:start="71:37" pos:end="71:44">head_buf</name></expr></argument>, <argument pos:start="71:47" pos:end="71:66"><expr pos:start="71:47" pos:end="71:66"><name pos:start="71:47" pos:end="71:52">offset</name> <operator pos:start="71:54" pos:end="71:54">&amp;</operator> <operator pos:start="71:56" pos:end="71:56">(</operator><name pos:start="71:57" pos:end="71:61">align</name> <operator pos:start="71:63" pos:end="71:63">-</operator> <literal type="number" pos:start="71:65" pos:end="71:65">1</literal><operator pos:start="71:66" pos:end="71:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:60"><expr pos:start="73:9" pos:end="73:59"><call pos:start="73:9" pos:end="73:59"><name pos:start="73:9" pos:end="73:25">qemu_iovec_concat</name><argument_list pos:start="73:26" pos:end="73:59">(<argument pos:start="73:27" pos:end="73:37"><expr pos:start="73:27" pos:end="73:37"><operator pos:start="73:27" pos:end="73:27">&amp;</operator><name pos:start="73:28" pos:end="73:37">local_qiov</name></expr></argument>, <argument pos:start="73:40" pos:end="73:43"><expr pos:start="73:40" pos:end="73:43"><name pos:start="73:40" pos:end="73:43">qiov</name></expr></argument>, <argument pos:start="73:46" pos:end="73:46"><expr pos:start="73:46" pos:end="73:46"><literal type="number" pos:start="73:46" pos:end="73:46">0</literal></expr></argument>, <argument pos:start="73:49" pos:end="73:58"><expr pos:start="73:49" pos:end="73:58"><name pos:start="73:49" pos:end="73:58"><name pos:start="73:49" pos:end="73:52">qiov</name><operator pos:start="73:53" pos:end="73:54">-&gt;</operator><name pos:start="73:55" pos:end="73:58">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:22">use_local_qiov</name> <operator pos:start="75:24" pos:end="75:24">=</operator> <name pos:start="75:26" pos:end="75:29">true</name></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:38"><expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:13">bytes</name> <operator pos:start="79:15" pos:end="79:16">+=</operator> <name pos:start="79:18" pos:end="79:23">offset</name> <operator pos:start="79:25" pos:end="79:25">&amp;</operator> <operator pos:start="79:27" pos:end="79:27">(</operator><name pos:start="79:28" pos:end="79:32">align</name> <operator pos:start="79:34" pos:end="79:34">-</operator> <literal type="number" pos:start="79:36" pos:end="79:36">1</literal><operator pos:start="79:37" pos:end="79:37">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:39"><expr pos:start="81:9" pos:end="81:38"><name pos:start="81:9" pos:end="81:14">offset</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:23">offset</name> <operator pos:start="81:25" pos:end="81:25">&amp;</operator> <operator pos:start="81:27" pos:end="81:27">~</operator><operator pos:start="81:28" pos:end="81:28">(</operator><name pos:start="81:29" pos:end="81:33">align</name> <operator pos:start="81:35" pos:end="81:35">-</operator> <literal type="number" pos:start="81:37" pos:end="81:37">1</literal><operator pos:start="81:38" pos:end="81:38">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="109:5"><if pos:start="87:5" pos:end="109:5">if <condition pos:start="87:8" pos:end="87:39">(<expr pos:start="87:9" pos:end="87:38"><operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:15">offset</name> <operator pos:start="87:17" pos:end="87:17">+</operator> <name pos:start="87:19" pos:end="87:23">bytes</name><operator pos:start="87:24" pos:end="87:24">)</operator> <operator pos:start="87:26" pos:end="87:26">&amp;</operator> <operator pos:start="87:28" pos:end="87:28">(</operator><name pos:start="87:29" pos:end="87:33">align</name> <operator pos:start="87:35" pos:end="87:35">-</operator> <literal type="number" pos:start="87:37" pos:end="87:37">1</literal><operator pos:start="87:38" pos:end="87:38">)</operator></expr>)</condition> <block pos:start="87:41" pos:end="109:5">{<block_content pos:start="89:9" pos:end="107:39">

        <if_stmt pos:start="89:9" pos:end="97:9"><if pos:start="89:9" pos:end="97:9">if <condition pos:start="89:12" pos:end="89:28">(<expr pos:start="89:13" pos:end="89:27"><operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:27">use_local_qiov</name></expr>)</condition> <block pos:start="89:30" pos:end="97:9">{<block_content pos:start="91:13" pos:end="95:34">

            <expr_stmt pos:start="91:13" pos:end="91:57"><expr pos:start="91:13" pos:end="91:56"><call pos:start="91:13" pos:end="91:56"><name pos:start="91:13" pos:end="91:27">qemu_iovec_init</name><argument_list pos:start="91:28" pos:end="91:56">(<argument pos:start="91:29" pos:end="91:39"><expr pos:start="91:29" pos:end="91:39"><operator pos:start="91:29" pos:end="91:29">&amp;</operator><name pos:start="91:30" pos:end="91:39">local_qiov</name></expr></argument>, <argument pos:start="91:42" pos:end="91:55"><expr pos:start="91:42" pos:end="91:55"><name pos:start="91:42" pos:end="91:51"><name pos:start="91:42" pos:end="91:45">qiov</name><operator pos:start="91:46" pos:end="91:47">-&gt;</operator><name pos:start="91:48" pos:end="91:51">niov</name></name> <operator pos:start="91:53" pos:end="91:53">+</operator> <literal type="number" pos:start="91:55" pos:end="91:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:64"><expr pos:start="93:13" pos:end="93:63"><call pos:start="93:13" pos:end="93:63"><name pos:start="93:13" pos:end="93:29">qemu_iovec_concat</name><argument_list pos:start="93:30" pos:end="93:63">(<argument pos:start="93:31" pos:end="93:41"><expr pos:start="93:31" pos:end="93:41"><operator pos:start="93:31" pos:end="93:31">&amp;</operator><name pos:start="93:32" pos:end="93:41">local_qiov</name></expr></argument>, <argument pos:start="93:44" pos:end="93:47"><expr pos:start="93:44" pos:end="93:47"><name pos:start="93:44" pos:end="93:47">qiov</name></expr></argument>, <argument pos:start="93:50" pos:end="93:50"><expr pos:start="93:50" pos:end="93:50"><literal type="number" pos:start="93:50" pos:end="93:50">0</literal></expr></argument>, <argument pos:start="93:53" pos:end="93:62"><expr pos:start="93:53" pos:end="93:62"><name pos:start="93:53" pos:end="93:62"><name pos:start="93:53" pos:end="93:56">qiov</name><operator pos:start="93:57" pos:end="93:58">-&gt;</operator><name pos:start="93:59" pos:end="93:62">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:34"><expr pos:start="95:13" pos:end="95:33"><name pos:start="95:13" pos:end="95:26">use_local_qiov</name> <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:33">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:46"><expr pos:start="99:9" pos:end="99:45"><name pos:start="99:9" pos:end="99:16">tail_buf</name> <operator pos:start="99:18" pos:end="99:18">=</operator> <call pos:start="99:20" pos:end="99:45"><name pos:start="99:20" pos:end="99:34">qemu_blockalign</name><argument_list pos:start="99:35" pos:end="99:45">(<argument pos:start="99:36" pos:end="99:37"><expr pos:start="99:36" pos:end="99:37"><name pos:start="99:36" pos:end="99:37">bs</name></expr></argument>, <argument pos:start="99:40" pos:end="99:44"><expr pos:start="99:40" pos:end="99:44"><name pos:start="99:40" pos:end="99:44">align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="103:65"><expr pos:start="101:9" pos:end="103:64"><call pos:start="101:9" pos:end="103:64"><name pos:start="101:9" pos:end="101:22">qemu_iovec_add</name><argument_list pos:start="101:23" pos:end="103:64">(<argument pos:start="101:24" pos:end="101:34"><expr pos:start="101:24" pos:end="101:34"><operator pos:start="101:24" pos:end="101:24">&amp;</operator><name pos:start="101:25" pos:end="101:34">local_qiov</name></expr></argument>, <argument pos:start="101:37" pos:end="101:44"><expr pos:start="101:37" pos:end="101:44"><name pos:start="101:37" pos:end="101:44">tail_buf</name></expr></argument>,

                       <argument pos:start="103:24" pos:end="103:63"><expr pos:start="103:24" pos:end="103:63"><name pos:start="103:24" pos:end="103:28">align</name> <operator pos:start="103:30" pos:end="103:30">-</operator> <operator pos:start="103:32" pos:end="103:32">(</operator><operator pos:start="103:33" pos:end="103:33">(</operator><name pos:start="103:34" pos:end="103:39">offset</name> <operator pos:start="103:41" pos:end="103:41">+</operator> <name pos:start="103:43" pos:end="103:47">bytes</name><operator pos:start="103:48" pos:end="103:48">)</operator> <operator pos:start="103:50" pos:end="103:50">&amp;</operator> <operator pos:start="103:52" pos:end="103:52">(</operator><name pos:start="103:53" pos:end="103:57">align</name> <operator pos:start="103:59" pos:end="103:59">-</operator> <literal type="number" pos:start="103:61" pos:end="103:61">1</literal><operator pos:start="103:62" pos:end="103:62">)</operator><operator pos:start="103:63" pos:end="103:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:39"><expr pos:start="107:9" pos:end="107:38"><name pos:start="107:9" pos:end="107:13">bytes</name> <operator pos:start="107:15" pos:end="107:15">=</operator> <call pos:start="107:17" pos:end="107:38"><name pos:start="107:17" pos:end="107:24">ROUND_UP</name><argument_list pos:start="107:25" pos:end="107:38">(<argument pos:start="107:26" pos:end="107:30"><expr pos:start="107:26" pos:end="107:30"><name pos:start="107:26" pos:end="107:30">bytes</name></expr></argument>, <argument pos:start="107:33" pos:end="107:37"><expr pos:start="107:33" pos:end="107:37"><name pos:start="107:33" pos:end="107:37">align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:70"><expr pos:start="113:5" pos:end="113:69"><call pos:start="113:5" pos:end="113:69"><name pos:start="113:5" pos:end="113:25">tracked_request_begin</name><argument_list pos:start="113:26" pos:end="113:69">(<argument pos:start="113:27" pos:end="113:30"><expr pos:start="113:27" pos:end="113:30"><operator pos:start="113:27" pos:end="113:27">&amp;</operator><name pos:start="113:28" pos:end="113:30">req</name></expr></argument>, <argument pos:start="113:33" pos:end="113:34"><expr pos:start="113:33" pos:end="113:34"><name pos:start="113:33" pos:end="113:34">bs</name></expr></argument>, <argument pos:start="113:37" pos:end="113:42"><expr pos:start="113:37" pos:end="113:42"><name pos:start="113:37" pos:end="113:42">offset</name></expr></argument>, <argument pos:start="113:45" pos:end="113:49"><expr pos:start="113:45" pos:end="113:49"><name pos:start="113:45" pos:end="113:49">bytes</name></expr></argument>, <argument pos:start="113:52" pos:end="113:68"><expr pos:start="113:52" pos:end="113:68"><name pos:start="113:52" pos:end="113:68">BDRV_TRACKED_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="119:37"><expr pos:start="115:5" pos:end="119:36"><name pos:start="115:5" pos:end="115:7">ret</name> <operator pos:start="115:9" pos:end="115:9">=</operator> <call pos:start="115:11" pos:end="119:36"><name pos:start="115:11" pos:end="115:29">bdrv_aligned_preadv</name><argument_list pos:start="115:30" pos:end="119:36">(<argument pos:start="115:31" pos:end="115:32"><expr pos:start="115:31" pos:end="115:32"><name pos:start="115:31" pos:end="115:32">bs</name></expr></argument>, <argument pos:start="115:35" pos:end="115:38"><expr pos:start="115:35" pos:end="115:38"><operator pos:start="115:35" pos:end="115:35">&amp;</operator><name pos:start="115:36" pos:end="115:38">req</name></expr></argument>, <argument pos:start="115:41" pos:end="115:46"><expr pos:start="115:41" pos:end="115:46"><name pos:start="115:41" pos:end="115:46">offset</name></expr></argument>, <argument pos:start="115:49" pos:end="115:53"><expr pos:start="115:49" pos:end="115:53"><name pos:start="115:49" pos:end="115:53">bytes</name></expr></argument>, <argument pos:start="115:56" pos:end="115:60"><expr pos:start="115:56" pos:end="115:60"><name pos:start="115:56" pos:end="115:60">align</name></expr></argument>,

                              <argument pos:start="117:31" pos:end="117:65"><expr pos:start="117:31" pos:end="117:65"><ternary pos:start="117:31" pos:end="117:65"><condition pos:start="117:31" pos:end="117:46"><expr pos:start="117:31" pos:end="117:44"><name pos:start="117:31" pos:end="117:44">use_local_qiov</name></expr> ?</condition><then pos:start="117:48" pos:end="117:58"> <expr pos:start="117:48" pos:end="117:58"><operator pos:start="117:48" pos:end="117:48">&amp;</operator><name pos:start="117:49" pos:end="117:58">local_qiov</name></expr> </then><else pos:start="117:60" pos:end="117:65">: <expr pos:start="117:62" pos:end="117:65"><name pos:start="117:62" pos:end="117:65">qiov</name></expr></else></ternary></expr></argument>,

                              <argument pos:start="119:31" pos:end="119:35"><expr pos:start="119:31" pos:end="119:35"><name pos:start="119:31" pos:end="119:35">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:30"><expr pos:start="121:5" pos:end="121:29"><call pos:start="121:5" pos:end="121:29"><name pos:start="121:5" pos:end="121:23">tracked_request_end</name><argument_list pos:start="121:24" pos:end="121:29">(<argument pos:start="121:25" pos:end="121:28"><expr pos:start="121:25" pos:end="121:28"><operator pos:start="121:25" pos:end="121:25">&amp;</operator><name pos:start="121:26" pos:end="121:28">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:27"><expr pos:start="123:5" pos:end="123:26"><call pos:start="123:5" pos:end="123:26"><name pos:start="123:5" pos:end="123:22">bdrv_dec_in_flight</name><argument_list pos:start="123:23" pos:end="123:26">(<argument pos:start="123:24" pos:end="123:25"><expr pos:start="123:24" pos:end="123:25"><name pos:start="123:24" pos:end="123:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="135:5"><if pos:start="127:5" pos:end="135:5">if <condition pos:start="127:8" pos:end="127:23">(<expr pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:22">use_local_qiov</name></expr>)</condition> <block pos:start="127:25" pos:end="135:5">{<block_content pos:start="129:9" pos:end="133:29">

        <expr_stmt pos:start="129:9" pos:end="129:40"><expr pos:start="129:9" pos:end="129:39"><call pos:start="129:9" pos:end="129:39"><name pos:start="129:9" pos:end="129:26">qemu_iovec_destroy</name><argument_list pos:start="129:27" pos:end="129:39">(<argument pos:start="129:28" pos:end="129:38"><expr pos:start="129:28" pos:end="129:38"><operator pos:start="129:28" pos:end="129:28">&amp;</operator><name pos:start="129:29" pos:end="129:38">local_qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:29"><expr pos:start="131:9" pos:end="131:28"><call pos:start="131:9" pos:end="131:28"><name pos:start="131:9" pos:end="131:18">qemu_vfree</name><argument_list pos:start="131:19" pos:end="131:28">(<argument pos:start="131:20" pos:end="131:27"><expr pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:27">head_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:29"><expr pos:start="133:9" pos:end="133:28"><call pos:start="133:9" pos:end="133:28"><name pos:start="133:9" pos:end="133:18">qemu_vfree</name><argument_list pos:start="133:19" pos:end="133:28">(<argument pos:start="133:20" pos:end="133:27"><expr pos:start="133:20" pos:end="133:27"><name pos:start="133:20" pos:end="133:27">tail_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="139:5" pos:end="139:15">return <expr pos:start="139:12" pos:end="139:14"><name pos:start="139:12" pos:end="139:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
