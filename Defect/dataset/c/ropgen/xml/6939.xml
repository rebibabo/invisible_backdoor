<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6939.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">USBDevice</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:30">usb_msd_init</name><parameter_list pos:start="1:31" pos:end="1:52">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:43"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:51">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:15">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:17">nr</name><init pos:start="5:18" pos:end="5:19">=<expr pos:start="5:19" pos:end="5:19"><literal type="number" pos:start="5:19" pos:end="5:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:11">id</name><index pos:start="7:12" pos:end="7:14">[<expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QemuOpts</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">DriveInfo</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">USBDevice</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">fatal_error</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:18">p1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">char</name></type> <name pos:start="19:10" pos:end="19:16"><name pos:start="19:10" pos:end="19:12">fmt</name><index pos:start="19:13" pos:end="19:16">[<expr pos:start="19:14" pos:end="19:15"><literal type="number" pos:start="19:14" pos:end="19:15">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:55">/* parse -usbdevice disk: syntax into drive opts */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:44"><expr pos:start="25:5" pos:end="25:43"><call pos:start="25:5" pos:end="25:43"><name pos:start="25:5" pos:end="25:12">snprintf</name><argument_list pos:start="25:13" pos:end="25:43">(<argument pos:start="25:14" pos:end="25:15"><expr pos:start="25:14" pos:end="25:15"><name pos:start="25:14" pos:end="25:15">id</name></expr></argument>, <argument pos:start="25:18" pos:end="25:27"><expr pos:start="25:18" pos:end="25:27"><sizeof pos:start="25:18" pos:end="25:27">sizeof<argument_list pos:start="25:24" pos:end="25:27">(<argument pos:start="25:25" pos:end="25:26"><expr pos:start="25:25" pos:end="25:26"><name pos:start="25:25" pos:end="25:26">id</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:30" pos:end="25:36"><expr pos:start="25:30" pos:end="25:36"><literal type="string" pos:start="25:30" pos:end="25:36">"usb%d"</literal></expr></argument>, <argument pos:start="25:39" pos:end="25:42"><expr pos:start="25:39" pos:end="25:42"><name pos:start="25:39" pos:end="25:40">nr</name><operator pos:start="25:41" pos:end="25:42">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:8">opts</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:52"><name pos:start="27:12" pos:end="27:27">qemu_opts_create</name><argument_list pos:start="27:28" pos:end="27:52">(<argument pos:start="27:29" pos:end="27:44"><expr pos:start="27:29" pos:end="27:44"><operator pos:start="27:29" pos:end="27:29">&amp;</operator><name pos:start="27:30" pos:end="27:44">qemu_drive_opts</name></expr></argument>, <argument pos:start="27:47" pos:end="27:48"><expr pos:start="27:47" pos:end="27:48"><name pos:start="27:47" pos:end="27:48">id</name></expr></argument>, <argument pos:start="27:51" pos:end="27:51"><expr pos:start="27:51" pos:end="27:51"><literal type="number" pos:start="27:51" pos:end="27:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:6">p1</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:30"><name pos:start="31:10" pos:end="31:15">strchr</name><argument_list pos:start="31:16" pos:end="31:30">(<argument pos:start="31:17" pos:end="31:24"><expr pos:start="31:17" pos:end="31:24"><name pos:start="31:17" pos:end="31:24">filename</name></expr></argument>, <argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><literal type="char" pos:start="31:27" pos:end="31:29">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="57:5"><if pos:start="33:5" pos:end="57:5">if <condition pos:start="33:8" pos:end="33:13">(<expr pos:start="33:9" pos:end="33:12"><name pos:start="33:9" pos:end="33:10">p1</name><operator pos:start="33:11" pos:end="33:12">++</operator></expr>)</condition> <block pos:start="33:15" pos:end="57:5">{<block_content pos:start="35:9" pos:end="55:22">

        <decl_stmt pos:start="35:9" pos:end="35:23"><decl pos:start="35:9" pos:end="35:22"><type pos:start="35:9" pos:end="35:20"><specifier pos:start="35:9" pos:end="35:13">const</specifier> <name pos:start="35:15" pos:end="35:18">char</name> <modifier pos:start="35:20" pos:end="35:20">*</modifier></type><name pos:start="35:21" pos:end="35:22">p2</name></decl>;</decl_stmt>



        <if_stmt pos:start="39:9" pos:end="53:9"><if pos:start="39:9" pos:end="47:9">if <condition pos:start="39:12" pos:end="39:47">(<expr pos:start="39:13" pos:end="39:46"><call pos:start="39:13" pos:end="39:46"><name pos:start="39:13" pos:end="39:20">strstart</name><argument_list pos:start="39:21" pos:end="39:46">(<argument pos:start="39:22" pos:end="39:29"><expr pos:start="39:22" pos:end="39:29"><name pos:start="39:22" pos:end="39:29">filename</name></expr></argument>, <argument pos:start="39:32" pos:end="39:40"><expr pos:start="39:32" pos:end="39:40"><literal type="string" pos:start="39:32" pos:end="39:40">"format="</literal></expr></argument>, <argument pos:start="39:43" pos:end="39:45"><expr pos:start="39:43" pos:end="39:45"><operator pos:start="39:43" pos:end="39:43">&amp;</operator><name pos:start="39:44" pos:end="39:45">p2</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:49" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:46">

            <decl_stmt pos:start="41:13" pos:end="41:48"><decl pos:start="41:13" pos:end="41:47"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:19">len</name> <init pos:start="41:21" pos:end="41:47">= <expr pos:start="41:23" pos:end="41:47"><call pos:start="41:23" pos:end="41:47"><name pos:start="41:23" pos:end="41:25">MIN</name><argument_list pos:start="41:26" pos:end="41:47">(<argument pos:start="41:27" pos:end="41:33"><expr pos:start="41:27" pos:end="41:33"><name pos:start="41:27" pos:end="41:28">p1</name> <operator pos:start="41:30" pos:end="41:30">-</operator> <name pos:start="41:32" pos:end="41:33">p2</name></expr></argument>, <argument pos:start="41:36" pos:end="41:46"><expr pos:start="41:36" pos:end="41:46"><sizeof pos:start="41:36" pos:end="41:46">sizeof<argument_list pos:start="41:42" pos:end="41:46">(<argument pos:start="41:43" pos:end="41:45"><expr pos:start="41:43" pos:end="41:45"><name pos:start="41:43" pos:end="41:45">fmt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:34"><expr pos:start="43:13" pos:end="43:33"><call pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:19">pstrcpy</name><argument_list pos:start="43:20" pos:end="43:33">(<argument pos:start="43:21" pos:end="43:23"><expr pos:start="43:21" pos:end="43:23"><name pos:start="43:21" pos:end="43:23">fmt</name></expr></argument>, <argument pos:start="43:26" pos:end="43:28"><expr pos:start="43:26" pos:end="43:28"><name pos:start="43:26" pos:end="43:28">len</name></expr></argument>, <argument pos:start="43:31" pos:end="43:32"><expr pos:start="43:31" pos:end="43:32"><name pos:start="43:31" pos:end="43:32">p2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:46"><expr pos:start="45:13" pos:end="45:45"><call pos:start="45:13" pos:end="45:45"><name pos:start="45:13" pos:end="45:24">qemu_opt_set</name><argument_list pos:start="45:25" pos:end="45:45">(<argument pos:start="45:26" pos:end="45:29"><expr pos:start="45:26" pos:end="45:29"><name pos:start="45:26" pos:end="45:29">opts</name></expr></argument>, <argument pos:start="45:32" pos:end="45:39"><expr pos:start="45:32" pos:end="45:39"><literal type="string" pos:start="45:32" pos:end="45:39">"format"</literal></expr></argument>, <argument pos:start="45:42" pos:end="45:44"><expr pos:start="45:42" pos:end="45:44"><name pos:start="45:42" pos:end="45:44">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="53:9">else if <condition pos:start="47:19" pos:end="47:36">(<expr pos:start="47:20" pos:end="47:35"><operator pos:start="47:20" pos:end="47:20">*</operator><name pos:start="47:21" pos:end="47:28">filename</name> <operator pos:start="47:30" pos:end="47:31">!=</operator> <literal type="char" pos:start="47:33" pos:end="47:35">':'</literal></expr>)</condition> <block pos:start="47:38" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:24">

            <expr_stmt pos:start="49:13" pos:end="49:74"><expr pos:start="49:13" pos:end="49:73"><call pos:start="49:13" pos:end="49:73"><name pos:start="49:13" pos:end="49:18">printf</name><argument_list pos:start="49:19" pos:end="49:73">(<argument pos:start="49:20" pos:end="49:62"><expr pos:start="49:20" pos:end="49:62"><literal type="string" pos:start="49:20" pos:end="49:62">"unrecognized USB mass-storage option %s\n"</literal></expr></argument>, <argument pos:start="49:65" pos:end="49:72"><expr pos:start="49:65" pos:end="49:72"><name pos:start="49:65" pos:end="49:72">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="51:13" pos:end="51:24">return <expr pos:start="51:20" pos:end="51:23"><name pos:start="51:20" pos:end="51:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:16">filename</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <name pos:start="55:20" pos:end="55:21">p1</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:19">(<expr pos:start="59:9" pos:end="59:18"><operator pos:start="59:9" pos:end="59:9">!</operator><operator pos:start="59:10" pos:end="59:10">*</operator><name pos:start="59:11" pos:end="59:18">filename</name></expr>)</condition> <block pos:start="59:21" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:20">

        <expr_stmt pos:start="61:9" pos:end="61:54"><expr pos:start="61:9" pos:end="61:53"><call pos:start="61:9" pos:end="61:53"><name pos:start="61:9" pos:end="61:14">printf</name><argument_list pos:start="61:15" pos:end="61:53">(<argument pos:start="61:16" pos:end="61:52"><expr pos:start="61:16" pos:end="61:52"><literal type="string" pos:start="61:16" pos:end="61:52">"block device specification needed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:20">return <expr pos:start="63:16" pos:end="63:19"><name pos:start="63:16" pos:end="63:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:41"><expr pos:start="67:5" pos:end="67:40"><call pos:start="67:5" pos:end="67:40"><name pos:start="67:5" pos:end="67:16">qemu_opt_set</name><argument_list pos:start="67:17" pos:end="67:40">(<argument pos:start="67:18" pos:end="67:21"><expr pos:start="67:18" pos:end="67:21"><name pos:start="67:18" pos:end="67:21">opts</name></expr></argument>, <argument pos:start="67:24" pos:end="67:29"><expr pos:start="67:24" pos:end="67:29"><literal type="string" pos:start="67:24" pos:end="67:29">"file"</literal></expr></argument>, <argument pos:start="67:32" pos:end="67:39"><expr pos:start="67:32" pos:end="67:39"><name pos:start="67:32" pos:end="67:39">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:37"><expr pos:start="69:5" pos:end="69:36"><call pos:start="69:5" pos:end="69:36"><name pos:start="69:5" pos:end="69:16">qemu_opt_set</name><argument_list pos:start="69:17" pos:end="69:36">(<argument pos:start="69:18" pos:end="69:21"><expr pos:start="69:18" pos:end="69:21"><name pos:start="69:18" pos:end="69:21">opts</name></expr></argument>, <argument pos:start="69:24" pos:end="69:27"><expr pos:start="69:24" pos:end="69:27"><literal type="string" pos:start="69:24" pos:end="69:27">"if"</literal></expr></argument>, <argument pos:start="69:30" pos:end="69:35"><expr pos:start="69:30" pos:end="69:35"><literal type="string" pos:start="69:30" pos:end="69:35">"none"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:27">/* create host drive */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:46"><expr pos:start="75:5" pos:end="75:45"><name pos:start="75:5" pos:end="75:9">dinfo</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <call pos:start="75:13" pos:end="75:45"><name pos:start="75:13" pos:end="75:22">drive_init</name><argument_list pos:start="75:23" pos:end="75:45">(<argument pos:start="75:24" pos:end="75:27"><expr pos:start="75:24" pos:end="75:27"><name pos:start="75:24" pos:end="75:27">opts</name></expr></argument>, <argument pos:start="75:30" pos:end="75:30"><expr pos:start="75:30" pos:end="75:30"><literal type="number" pos:start="75:30" pos:end="75:30">0</literal></expr></argument>, <argument pos:start="75:33" pos:end="75:44"><expr pos:start="75:33" pos:end="75:44"><operator pos:start="75:33" pos:end="75:33">&amp;</operator><name pos:start="75:34" pos:end="75:44">fatal_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:15">(<expr pos:start="77:9" pos:end="77:14"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:14">dinfo</name></expr>)</condition> <block pos:start="77:17" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:20">

        <expr_stmt pos:start="79:9" pos:end="79:28"><expr pos:start="79:9" pos:end="79:27"><call pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:21">qemu_opts_del</name><argument_list pos:start="79:22" pos:end="79:27">(<argument pos:start="79:23" pos:end="79:26"><expr pos:start="79:23" pos:end="79:26"><name pos:start="79:23" pos:end="79:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:20">return <expr pos:start="81:16" pos:end="81:19"><name pos:start="81:16" pos:end="81:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:29">/* create guest device */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:54"><expr pos:start="89:5" pos:end="89:53"><name pos:start="89:5" pos:end="89:7">dev</name> <operator pos:start="89:9" pos:end="89:9">=</operator> <call pos:start="89:11" pos:end="89:53"><name pos:start="89:11" pos:end="89:20">usb_create</name><argument_list pos:start="89:21" pos:end="89:53">(<argument pos:start="89:22" pos:end="89:25"><expr pos:start="89:22" pos:end="89:25"><name pos:start="89:22" pos:end="89:25">NULL</name></expr></argument> <comment type="block" pos:start="89:27" pos:end="89:37">/* FIXME */</comment>, <argument pos:start="89:40" pos:end="89:52"><expr pos:start="89:40" pos:end="89:52"><literal type="string" pos:start="89:40" pos:end="89:52">"usb-storage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="95:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:13">(<expr pos:start="91:9" pos:end="91:12"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:12">dev</name></expr>)</condition> <block pos:start="91:15" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:20">

        <return pos:start="93:9" pos:end="93:20">return <expr pos:start="93:16" pos:end="93:19"><name pos:start="93:16" pos:end="93:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:52"><expr pos:start="97:5" pos:end="97:51"><call pos:start="97:5" pos:end="97:51"><name pos:start="97:5" pos:end="97:23">qdev_prop_set_drive</name><argument_list pos:start="97:24" pos:end="97:51">(<argument pos:start="97:25" pos:end="97:34"><expr pos:start="97:25" pos:end="97:34"><operator pos:start="97:25" pos:end="97:25">&amp;</operator><name pos:start="97:26" pos:end="97:34"><name pos:start="97:26" pos:end="97:28">dev</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:34">qdev</name></name></expr></argument>, <argument pos:start="97:37" pos:end="97:43"><expr pos:start="97:37" pos:end="97:43"><literal type="string" pos:start="97:37" pos:end="97:43">"drive"</literal></expr></argument>, <argument pos:start="97:46" pos:end="97:50"><expr pos:start="97:46" pos:end="97:50"><name pos:start="97:46" pos:end="97:50">dinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="101:20"><if pos:start="99:5" pos:end="101:20">if <condition pos:start="99:8" pos:end="99:34">(<expr pos:start="99:9" pos:end="99:33"><call pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:17">qdev_init</name><argument_list pos:start="99:18" pos:end="99:29">(<argument pos:start="99:19" pos:end="99:28"><expr pos:start="99:19" pos:end="99:28"><operator pos:start="99:19" pos:end="99:19">&amp;</operator><name pos:start="99:20" pos:end="99:28"><name pos:start="99:20" pos:end="99:22">dev</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:28">qdev</name></name></expr></argument>)</argument_list></call> <operator pos:start="99:31" pos:end="99:31">&lt;</operator> <literal type="number" pos:start="99:33" pos:end="99:33">0</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:20"><block_content pos:start="101:9" pos:end="101:20">

        <return pos:start="101:9" pos:end="101:20">return <expr pos:start="101:16" pos:end="101:19"><name pos:start="101:16" pos:end="101:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="105:5" pos:end="105:15">return <expr pos:start="105:12" pos:end="105:14"><name pos:start="105:12" pos:end="105:14">dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
