<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18764.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">latm_write_frame_header</name><parameter_list pos:start="1:36" pos:end="1:74">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:51">AVFormatContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:73"><decl pos:start="1:57" pos:end="1:73"><type pos:start="1:57" pos:end="1:73"><name pos:start="1:57" pos:end="1:69">PutBitContext</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:73">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:29">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">LATMContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">ctx</name> <init pos:start="5:22" pos:end="5:35">= <expr pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:35">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">avctx</name> <init pos:start="7:27" pos:end="7:48">= <expr pos:start="7:29" pos:end="7:48"><name pos:start="7:29" pos:end="7:41"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:38">streams</name><index pos:start="7:39" pos:end="7:41">[<expr pos:start="7:40" pos:end="7:40"><literal type="number" pos:start="7:40" pos:end="7:40">0</literal></expr>]</index></name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:48">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type> <name pos:start="9:19" pos:end="9:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">header_size</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:25">/* AudioMuxElement */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:12">put_bits</name><argument_list pos:start="17:13" pos:end="17:35">(<argument pos:start="17:14" pos:end="17:15"><expr pos:start="17:14" pos:end="17:15"><name pos:start="17:14" pos:end="17:15">bs</name></expr></argument>, <argument pos:start="17:18" pos:end="17:18"><expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">1</literal></expr></argument>, <argument pos:start="17:21" pos:end="17:34"><expr pos:start="17:21" pos:end="17:34"><operator pos:start="17:21" pos:end="17:21">!</operator><operator pos:start="17:22" pos:end="17:22">!</operator><name pos:start="17:23" pos:end="17:34"><name pos:start="17:23" pos:end="17:25">ctx</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:34">counter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="75:5"><if pos:start="21:5" pos:end="75:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:21"><name pos:start="21:10" pos:end="21:12">ctx</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:21">counter</name></name></expr>)</condition> <block pos:start="21:24" pos:end="75:5">{<block_content pos:start="23:9" pos:end="73:27">

        <expr_stmt pos:start="23:9" pos:end="23:72"><expr pos:start="23:9" pos:end="23:71"><call pos:start="23:9" pos:end="23:71"><name pos:start="23:9" pos:end="23:21">init_get_bits</name><argument_list pos:start="23:22" pos:end="23:71">(<argument pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:25">gb</name></expr></argument>, <argument pos:start="23:28" pos:end="23:43"><expr pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:32">avctx</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:43">extradata</name></name></expr></argument>, <argument pos:start="23:46" pos:end="23:70"><expr pos:start="23:46" pos:end="23:70"><name pos:start="23:46" pos:end="23:66"><name pos:start="23:46" pos:end="23:50">avctx</name><operator pos:start="23:51" pos:end="23:52">-&gt;</operator><name pos:start="23:53" pos:end="23:66">extradata_size</name></name> <operator pos:start="23:68" pos:end="23:68">*</operator> <literal type="number" pos:start="23:70" pos:end="23:70">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="27:9" pos:end="27:29">/* StreamMuxConfig */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><call pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:16">put_bits</name><argument_list pos:start="29:17" pos:end="29:26">(<argument pos:start="29:18" pos:end="29:19"><expr pos:start="29:18" pos:end="29:19"><name pos:start="29:18" pos:end="29:19">bs</name></expr></argument>, <argument pos:start="29:22" pos:end="29:22"><expr pos:start="29:22" pos:end="29:22"><literal type="number" pos:start="29:22" pos:end="29:22">1</literal></expr></argument>, <argument pos:start="29:25" pos:end="29:25"><expr pos:start="29:25" pos:end="29:25"><literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:29" pos:end="29:49">/* audioMuxVersion */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:27"><expr pos:start="31:9" pos:end="31:26"><call pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:16">put_bits</name><argument_list pos:start="31:17" pos:end="31:26">(<argument pos:start="31:18" pos:end="31:19"><expr pos:start="31:18" pos:end="31:19"><name pos:start="31:18" pos:end="31:19">bs</name></expr></argument>, <argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">1</literal></expr></argument>, <argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:29" pos:end="31:59">/* allStreamsSameTimeFraming */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><call pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:16">put_bits</name><argument_list pos:start="33:17" pos:end="33:26">(<argument pos:start="33:18" pos:end="33:19"><expr pos:start="33:18" pos:end="33:19"><name pos:start="33:18" pos:end="33:19">bs</name></expr></argument>, <argument pos:start="33:22" pos:end="33:22"><expr pos:start="33:22" pos:end="33:22"><literal type="number" pos:start="33:22" pos:end="33:22">6</literal></expr></argument>, <argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:29" pos:end="33:46">/* numSubFrames */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:27"><expr pos:start="35:9" pos:end="35:26"><call pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:16">put_bits</name><argument_list pos:start="35:17" pos:end="35:26">(<argument pos:start="35:18" pos:end="35:19"><expr pos:start="35:18" pos:end="35:19"><name pos:start="35:18" pos:end="35:19">bs</name></expr></argument>, <argument pos:start="35:22" pos:end="35:22"><expr pos:start="35:22" pos:end="35:22"><literal type="number" pos:start="35:22" pos:end="35:22">4</literal></expr></argument>, <argument pos:start="35:25" pos:end="35:25"><expr pos:start="35:25" pos:end="35:25"><literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="35:29" pos:end="35:44">/* numProgram */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><call pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:16">put_bits</name><argument_list pos:start="37:17" pos:end="37:26">(<argument pos:start="37:18" pos:end="37:19"><expr pos:start="37:18" pos:end="37:19"><name pos:start="37:18" pos:end="37:19">bs</name></expr></argument>, <argument pos:start="37:22" pos:end="37:22"><expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">3</literal></expr></argument>, <argument pos:start="37:25" pos:end="37:25"><expr pos:start="37:25" pos:end="37:25"><literal type="number" pos:start="37:25" pos:end="37:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="37:29" pos:end="37:42">/* numLayer */</comment>



        <comment type="block" pos:start="41:9" pos:end="41:33">/* AudioSpecificConfig */</comment>

        <if_stmt pos:start="43:9" pos:end="61:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:40">(<expr pos:start="43:13" pos:end="43:39"><name pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:15">ctx</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:28">object_type</name></name> <operator pos:start="43:30" pos:end="43:31">==</operator> <name pos:start="43:33" pos:end="43:39">AOT_ALS</name></expr>)</condition> <block pos:start="43:42" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:75">

            <expr_stmt pos:start="45:13" pos:end="45:68"><expr pos:start="45:13" pos:end="45:67"><name pos:start="45:13" pos:end="45:23">header_size</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:47"><name pos:start="45:27" pos:end="45:31">avctx</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:47">extradata_size</name></name><operator pos:start="45:48" pos:end="45:48">-</operator><operator pos:start="45:49" pos:end="45:49">(</operator><name pos:start="45:50" pos:end="45:57"><name pos:start="45:50" pos:end="45:52">ctx</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:57">off</name></name> <operator pos:start="45:59" pos:end="45:59">+</operator> <literal type="number" pos:start="45:61" pos:end="45:61">7</literal><operator pos:start="45:62" pos:end="45:62">)</operator> <operator pos:start="45:64" pos:end="45:65">&gt;&gt;</operator> <literal type="number" pos:start="45:67" pos:end="45:67">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:75"><expr pos:start="47:13" pos:end="47:74"><call pos:start="47:13" pos:end="47:74"><name pos:start="47:13" pos:end="47:28">avpriv_copy_bits</name><argument_list pos:start="47:29" pos:end="47:74">(<argument pos:start="47:30" pos:end="47:31"><expr pos:start="47:30" pos:end="47:31"><name pos:start="47:30" pos:end="47:31">bs</name></expr></argument>, <argument pos:start="47:34" pos:end="47:60"><expr pos:start="47:34" pos:end="47:60"><operator pos:start="47:34" pos:end="47:34">&amp;</operator><name pos:start="47:35" pos:end="47:60"><name pos:start="47:35" pos:end="47:39">avctx</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:50">extradata</name><index pos:start="47:51" pos:end="47:60">[<expr pos:start="47:52" pos:end="47:59"><name pos:start="47:52" pos:end="47:59"><name pos:start="47:52" pos:end="47:54">ctx</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:59">off</name></name></expr>]</index></name></expr></argument>, <argument pos:start="47:63" pos:end="47:73"><expr pos:start="47:63" pos:end="47:73"><name pos:start="47:63" pos:end="47:73">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="61:9">else <block pos:start="49:16" pos:end="61:9">{<block_content pos:start="51:13" pos:end="59:13">

            <expr_stmt pos:start="51:13" pos:end="51:65"><expr pos:start="51:13" pos:end="51:64"><call pos:start="51:13" pos:end="51:64"><name pos:start="51:13" pos:end="51:28">avpriv_copy_bits</name><argument_list pos:start="51:29" pos:end="51:64">(<argument pos:start="51:30" pos:end="51:31"><expr pos:start="51:30" pos:end="51:31"><name pos:start="51:30" pos:end="51:31">bs</name></expr></argument>, <argument pos:start="51:34" pos:end="51:49"><expr pos:start="51:34" pos:end="51:49"><name pos:start="51:34" pos:end="51:49"><name pos:start="51:34" pos:end="51:38">avctx</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:49">extradata</name></name></expr></argument>, <argument pos:start="51:52" pos:end="51:63"><expr pos:start="51:52" pos:end="51:63"><name pos:start="51:52" pos:end="51:59"><name pos:start="51:52" pos:end="51:54">ctx</name><operator pos:start="51:55" pos:end="51:56">-&gt;</operator><name pos:start="51:57" pos:end="51:59">off</name></name> <operator pos:start="51:61" pos:end="51:61">+</operator> <literal type="number" pos:start="51:63" pos:end="51:63">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="55:13" pos:end="59:13"><if pos:start="55:13" pos:end="59:13">if <condition pos:start="55:16" pos:end="55:35">(<expr pos:start="55:17" pos:end="55:34"><operator pos:start="55:17" pos:end="55:17">!</operator><name pos:start="55:18" pos:end="55:34"><name pos:start="55:18" pos:end="55:20">ctx</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:34">channel_conf</name></name></expr>)</condition> <block pos:start="55:37" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:46">

                <expr_stmt pos:start="57:17" pos:end="57:46"><expr pos:start="57:17" pos:end="57:45"><call pos:start="57:17" pos:end="57:45"><name pos:start="57:17" pos:end="57:36">avpriv_copy_pce_data</name><argument_list pos:start="57:37" pos:end="57:45">(<argument pos:start="57:38" pos:end="57:39"><expr pos:start="57:38" pos:end="57:39"><name pos:start="57:38" pos:end="57:39">bs</name></expr></argument>, <argument pos:start="57:42" pos:end="57:44"><expr pos:start="57:42" pos:end="57:44"><operator pos:start="57:42" pos:end="57:42">&amp;</operator><name pos:start="57:43" pos:end="57:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:27"><expr pos:start="65:9" pos:end="65:26"><call pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:16">put_bits</name><argument_list pos:start="65:17" pos:end="65:26">(<argument pos:start="65:18" pos:end="65:19"><expr pos:start="65:18" pos:end="65:19"><name pos:start="65:18" pos:end="65:19">bs</name></expr></argument>, <argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><literal type="number" pos:start="65:22" pos:end="65:22">3</literal></expr></argument>, <argument pos:start="65:25" pos:end="65:25"><expr pos:start="65:25" pos:end="65:25"><literal type="number" pos:start="65:25" pos:end="65:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:29" pos:end="65:49">/* frameLengthType */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:30"><expr pos:start="67:9" pos:end="67:29"><call pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:16">put_bits</name><argument_list pos:start="67:17" pos:end="67:29">(<argument pos:start="67:18" pos:end="67:19"><expr pos:start="67:18" pos:end="67:19"><name pos:start="67:18" pos:end="67:19">bs</name></expr></argument>, <argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><literal type="number" pos:start="67:22" pos:end="67:22">8</literal></expr></argument>, <argument pos:start="67:25" pos:end="67:28"><expr pos:start="67:25" pos:end="67:28"><literal type="number" pos:start="67:25" pos:end="67:28">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:32" pos:end="67:55">/* latmBufferFullness */</comment>



        <expr_stmt pos:start="71:9" pos:end="71:27"><expr pos:start="71:9" pos:end="71:26"><call pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:16">put_bits</name><argument_list pos:start="71:17" pos:end="71:26">(<argument pos:start="71:18" pos:end="71:19"><expr pos:start="71:18" pos:end="71:19"><name pos:start="71:18" pos:end="71:19">bs</name></expr></argument>, <argument pos:start="71:22" pos:end="71:22"><expr pos:start="71:22" pos:end="71:22"><literal type="number" pos:start="71:22" pos:end="71:22">1</literal></expr></argument>, <argument pos:start="71:25" pos:end="71:25"><expr pos:start="71:25" pos:end="71:25"><literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:29" pos:end="71:50">/* otherDataPresent */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:27"><expr pos:start="73:9" pos:end="73:26"><call pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:16">put_bits</name><argument_list pos:start="73:17" pos:end="73:26">(<argument pos:start="73:18" pos:end="73:19"><expr pos:start="73:18" pos:end="73:19"><name pos:start="73:18" pos:end="73:19">bs</name></expr></argument>, <argument pos:start="73:22" pos:end="73:22"><expr pos:start="73:22" pos:end="73:22"><literal type="number" pos:start="73:22" pos:end="73:22">1</literal></expr></argument>, <argument pos:start="73:25" pos:end="73:25"><expr pos:start="73:25" pos:end="73:25"><literal type="number" pos:start="73:25" pos:end="73:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="73:29" pos:end="73:49">/* crcCheckPresent */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:19"><expr pos:start="79:5" pos:end="79:18"><name pos:start="79:5" pos:end="79:16"><name pos:start="79:5" pos:end="79:7">ctx</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:16">counter</name></name><operator pos:start="79:17" pos:end="79:18">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:16"><name pos:start="81:5" pos:end="81:7">ctx</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:16">counter</name></name> <operator pos:start="81:18" pos:end="81:19">%=</operator> <name pos:start="81:21" pos:end="81:28"><name pos:start="81:21" pos:end="81:23">ctx</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:28">mod</name></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
