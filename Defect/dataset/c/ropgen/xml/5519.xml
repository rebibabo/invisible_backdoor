<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5519.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">write_packet</name><parameter_list pos:start="1:25" pos:end="1:74">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:35">OutputFile</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">of</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:49">AVPacket</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">pkt</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:73"><decl pos:start="1:57" pos:end="1:73"><type pos:start="1:57" pos:end="1:73"><name pos:start="1:57" pos:end="1:68">OutputStream</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">ost</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="253:1">{<block_content pos:start="5:5" pos:end="251:25">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:32">= <expr pos:start="5:26" pos:end="5:32"><name pos:start="5:26" pos:end="5:32"><name pos:start="5:26" pos:end="5:27">of</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:26">= <expr pos:start="7:20" pos:end="7:26"><name pos:start="7:20" pos:end="7:26"><name pos:start="7:20" pos:end="7:22">ost</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:26">st</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="51:5"><if pos:start="13:5" pos:end="51:5">if <condition pos:start="13:8" pos:end="13:28">(<expr pos:start="13:9" pos:end="13:27"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:27"><name pos:start="13:10" pos:end="13:11">of</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:27">header_written</name></name></expr>)</condition> <block pos:start="13:30" pos:end="51:5">{<block_content pos:start="15:9" pos:end="49:15">

        <decl_stmt pos:start="15:9" pos:end="15:25"><decl pos:start="15:9" pos:end="15:24"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">AVPacket</name></type> <name pos:start="15:18" pos:end="15:24">tmp_pkt</name></decl>;</decl_stmt>

        <comment type="block" pos:start="17:9" pos:end="17:65">/* the muxer is not initialized yet, buffer the packet */</comment>

        <if_stmt pos:start="19:9" pos:end="43:9"><if pos:start="19:9" pos:end="43:9">if <condition pos:start="19:12" pos:end="19:46">(<expr pos:start="19:13" pos:end="19:45"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:45"><name pos:start="19:14" pos:end="19:26">av_fifo_space</name><argument_list pos:start="19:27" pos:end="19:45">(<argument pos:start="19:28" pos:end="19:44"><expr pos:start="19:28" pos:end="19:44"><name pos:start="19:28" pos:end="19:44"><name pos:start="19:28" pos:end="19:30">ost</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:44">muxing_queue</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:48" pos:end="43:9">{<block_content pos:start="21:13" pos:end="41:32">

            <decl_stmt pos:start="21:13" pos:end="23:61"><decl pos:start="21:13" pos:end="23:60"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:24">new_size</name> <init pos:start="21:26" pos:end="23:60">= <expr pos:start="21:28" pos:end="23:60"><call pos:start="21:28" pos:end="23:60"><name pos:start="21:28" pos:end="21:32">FFMIN</name><argument_list pos:start="21:33" pos:end="23:60">(<argument pos:start="21:34" pos:end="21:68"><expr pos:start="21:34" pos:end="21:68"><literal type="number" pos:start="21:34" pos:end="21:34">2</literal> <operator pos:start="21:36" pos:end="21:36">*</operator> <call pos:start="21:38" pos:end="21:68"><name pos:start="21:38" pos:end="21:49">av_fifo_size</name><argument_list pos:start="21:50" pos:end="21:68">(<argument pos:start="21:51" pos:end="21:67"><expr pos:start="21:51" pos:end="21:67"><name pos:start="21:51" pos:end="21:67"><name pos:start="21:51" pos:end="21:53">ost</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:67">muxing_queue</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="23:34" pos:end="23:59"><expr pos:start="23:34" pos:end="23:59"><name pos:start="23:34" pos:end="23:59"><name pos:start="23:34" pos:end="23:36">ost</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:59">max_muxing_queue_size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="25:13" pos:end="35:13"><if pos:start="25:13" pos:end="35:13">if <condition pos:start="25:16" pos:end="25:60">(<expr pos:start="25:17" pos:end="25:59"><name pos:start="25:17" pos:end="25:24">new_size</name> <operator pos:start="25:26" pos:end="25:27">&lt;=</operator> <call pos:start="25:29" pos:end="25:59"><name pos:start="25:29" pos:end="25:40">av_fifo_size</name><argument_list pos:start="25:41" pos:end="25:59">(<argument pos:start="25:42" pos:end="25:58"><expr pos:start="25:42" pos:end="25:58"><name pos:start="25:42" pos:end="25:58"><name pos:start="25:42" pos:end="25:44">ost</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:58">muxing_queue</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:62" pos:end="35:13">{<block_content pos:start="27:17" pos:end="33:32">

                <expr_stmt pos:start="27:17" pos:end="31:56"><expr pos:start="27:17" pos:end="31:55"><call pos:start="27:17" pos:end="31:55"><name pos:start="27:17" pos:end="27:22">av_log</name><argument_list pos:start="27:23" pos:end="31:55">(<argument pos:start="27:24" pos:end="27:27"><expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">NULL</name></expr></argument>, <argument pos:start="27:30" pos:end="27:41"><expr pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:41">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="29:24" pos:end="29:77"><expr pos:start="29:24" pos:end="29:77"><literal type="string" pos:start="29:24" pos:end="29:77">"Too many packets buffered for output stream %d:%d.\n"</literal></expr></argument>,

                       <argument pos:start="31:24" pos:end="31:38"><expr pos:start="31:24" pos:end="31:38"><name pos:start="31:24" pos:end="31:38"><name pos:start="31:24" pos:end="31:26">ost</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:38">file_index</name></name></expr></argument>, <argument pos:start="31:41" pos:end="31:54"><expr pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:43">ost</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:47">st</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:54">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:32"><expr pos:start="33:17" pos:end="33:31"><call pos:start="33:17" pos:end="33:31"><name pos:start="33:17" pos:end="33:28">exit_program</name><argument_list pos:start="33:29" pos:end="33:31">(<argument pos:start="33:30" pos:end="33:30"><expr pos:start="33:30" pos:end="33:30"><literal type="number" pos:start="33:30" pos:end="33:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:64"><expr pos:start="37:13" pos:end="37:63"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:63"><name pos:start="37:19" pos:end="37:34">av_fifo_realloc2</name><argument_list pos:start="37:35" pos:end="37:63">(<argument pos:start="37:36" pos:end="37:52"><expr pos:start="37:36" pos:end="37:52"><name pos:start="37:36" pos:end="37:52"><name pos:start="37:36" pos:end="37:38">ost</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:52">muxing_queue</name></name></expr></argument>, <argument pos:start="37:55" pos:end="37:62"><expr pos:start="37:55" pos:end="37:62"><name pos:start="37:55" pos:end="37:62">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="41:32"><if pos:start="39:13" pos:end="41:32">if <condition pos:start="39:16" pos:end="39:24">(<expr pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:19">ret</name> <operator pos:start="39:21" pos:end="39:21">&lt;</operator> <literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:32"><block_content pos:start="41:17" pos:end="41:32">

                <expr_stmt pos:start="41:17" pos:end="41:32"><expr pos:start="41:17" pos:end="41:31"><call pos:start="41:17" pos:end="41:31"><name pos:start="41:17" pos:end="41:28">exit_program</name><argument_list pos:start="41:29" pos:end="41:31">(<argument pos:start="41:30" pos:end="41:30"><expr pos:start="41:30" pos:end="41:30"><literal type="number" pos:start="41:30" pos:end="41:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:42"><expr pos:start="45:9" pos:end="45:41"><call pos:start="45:9" pos:end="45:41"><name pos:start="45:9" pos:end="45:26">av_packet_move_ref</name><argument_list pos:start="45:27" pos:end="45:41">(<argument pos:start="45:28" pos:end="45:35"><expr pos:start="45:28" pos:end="45:35"><operator pos:start="45:28" pos:end="45:28">&amp;</operator><name pos:start="45:29" pos:end="45:35">tmp_pkt</name></expr></argument>, <argument pos:start="45:38" pos:end="45:40"><expr pos:start="45:38" pos:end="45:40"><name pos:start="45:38" pos:end="45:40">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:82"><expr pos:start="47:9" pos:end="47:81"><call pos:start="47:9" pos:end="47:81"><name pos:start="47:9" pos:end="47:29">av_fifo_generic_write</name><argument_list pos:start="47:30" pos:end="47:81">(<argument pos:start="47:31" pos:end="47:47"><expr pos:start="47:31" pos:end="47:47"><name pos:start="47:31" pos:end="47:47"><name pos:start="47:31" pos:end="47:33">ost</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:47">muxing_queue</name></name></expr></argument>, <argument pos:start="47:50" pos:end="47:57"><expr pos:start="47:50" pos:end="47:57"><operator pos:start="47:50" pos:end="47:50">&amp;</operator><name pos:start="47:51" pos:end="47:57">tmp_pkt</name></expr></argument>, <argument pos:start="47:60" pos:end="47:74"><expr pos:start="47:60" pos:end="47:74"><sizeof pos:start="47:60" pos:end="47:74">sizeof<argument_list pos:start="47:66" pos:end="47:74">(<argument pos:start="47:67" pos:end="47:73"><expr pos:start="47:67" pos:end="47:73"><name pos:start="47:67" pos:end="47:73">tmp_pkt</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="47:77" pos:end="47:80"><expr pos:start="47:77" pos:end="47:80"><name pos:start="47:77" pos:end="47:80">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="59:45"><if pos:start="55:5" pos:end="59:45">if <condition pos:start="55:8" pos:end="57:82">(<expr pos:start="55:9" pos:end="57:81"><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:33"><name pos:start="55:10" pos:end="55:11">st</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:21">codecpar</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:33">codec_type</name></name> <operator pos:start="55:35" pos:end="55:36">==</operator> <name pos:start="55:38" pos:end="55:55">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="55:57" pos:end="55:58">&amp;&amp;</operator> <name pos:start="55:60" pos:end="55:76">video_sync_method</name> <operator pos:start="55:78" pos:end="55:79">==</operator> <name pos:start="55:81" pos:end="55:90">VSYNC_DROP</name><operator pos:start="55:91" pos:end="55:91">)</operator> <operator pos:start="55:93" pos:end="55:94">||</operator>

        <operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:33"><name pos:start="57:10" pos:end="57:11">st</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:21">codecpar</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:33">codec_type</name></name> <operator pos:start="57:35" pos:end="57:36">==</operator> <name pos:start="57:38" pos:end="57:55">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="57:57" pos:end="57:58">&amp;&amp;</operator> <name pos:start="57:60" pos:end="57:76">audio_sync_method</name> <operator pos:start="57:78" pos:end="57:78">&lt;</operator> <literal type="number" pos:start="57:80" pos:end="57:80">0</literal><operator pos:start="57:81" pos:end="57:81">)</operator></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:45"><block_content pos:start="59:9" pos:end="59:45">

        <expr_stmt pos:start="59:9" pos:end="59:45"><expr pos:start="59:9" pos:end="59:44"><name pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:11">pkt</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:16">pts</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:27"><name pos:start="59:20" pos:end="59:22">pkt</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:27">dts</name></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="75:7">/*

     * Audio encoders may split the packets --  #frames in != #packets out.

     * But there is no reordering, so we can limit the number of output packets

     * by simply dropping them here.

     * Counting encoded video frames needs to be done separately because of

     * reordering, see do_video_out()

     */</comment>

    <if_stmt pos:start="77:5" pos:end="89:5"><if pos:start="77:5" pos:end="89:5">if <condition pos:start="77:8" pos:end="77:82">(<expr pos:start="77:9" pos:end="77:81"><operator pos:start="77:9" pos:end="77:9">!</operator><operator pos:start="77:10" pos:end="77:10">(</operator><name pos:start="77:11" pos:end="77:34"><name pos:start="77:11" pos:end="77:12">st</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:22">codecpar</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:34">codec_type</name></name> <operator pos:start="77:36" pos:end="77:37">==</operator> <name pos:start="77:39" pos:end="77:56">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="77:58" pos:end="77:59">&amp;&amp;</operator> <name pos:start="77:61" pos:end="77:80"><name pos:start="77:61" pos:end="77:63">ost</name><operator pos:start="77:64" pos:end="77:65">-&gt;</operator><name pos:start="77:66" pos:end="77:80">encoding_needed</name></name><operator pos:start="77:81" pos:end="77:81">)</operator></expr>)</condition> <block pos:start="77:84" pos:end="89:5">{<block_content pos:start="79:9" pos:end="87:28">

        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:49">(<expr pos:start="79:13" pos:end="79:48"><name pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:15">ost</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:29">frame_number</name></name> <operator pos:start="79:31" pos:end="79:32">&gt;=</operator> <name pos:start="79:34" pos:end="79:48"><name pos:start="79:34" pos:end="79:36">ost</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:48">max_frames</name></name></expr>)</condition> <block pos:start="79:51" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:19">

            <expr_stmt pos:start="81:13" pos:end="81:33"><expr pos:start="81:13" pos:end="81:32"><call pos:start="81:13" pos:end="81:32"><name pos:start="81:13" pos:end="81:27">av_packet_unref</name><argument_list pos:start="81:28" pos:end="81:32">(<argument pos:start="81:29" pos:end="81:31"><expr pos:start="81:29" pos:end="81:31"><name pos:start="81:29" pos:end="81:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="83:13" pos:end="83:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:28"><expr pos:start="87:9" pos:end="87:27"><name pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:11">ost</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:25">frame_number</name></name><operator pos:start="87:26" pos:end="87:27">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="131:5"><if pos:start="91:5" pos:end="131:5">if <condition pos:start="91:8" pos:end="91:55">(<expr pos:start="91:9" pos:end="91:54"><name pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:10">st</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:20">codecpar</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:32">codec_type</name></name> <operator pos:start="91:34" pos:end="91:35">==</operator> <name pos:start="91:37" pos:end="91:54">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="91:57" pos:end="131:5">{<block_content pos:start="93:9" pos:end="129:9">

        <decl_stmt pos:start="93:9" pos:end="93:14"><decl pos:start="93:9" pos:end="93:13"><type pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:11">int</name></type> <name pos:start="93:13" pos:end="93:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="97:52"><decl pos:start="95:9" pos:end="97:51"><type pos:start="95:9" pos:end="95:17"><name pos:start="95:9" pos:end="95:15">uint8_t</name> <modifier pos:start="95:17" pos:end="95:17">*</modifier></type><name pos:start="95:18" pos:end="95:19">sd</name> <init pos:start="95:21" pos:end="97:51">= <expr pos:start="95:23" pos:end="97:51"><call pos:start="95:23" pos:end="97:51"><name pos:start="95:23" pos:end="95:45">av_packet_get_side_data</name><argument_list pos:start="95:46" pos:end="97:51">(<argument pos:start="95:47" pos:end="95:49"><expr pos:start="95:47" pos:end="95:49"><name pos:start="95:47" pos:end="95:49">pkt</name></expr></argument>, <argument pos:start="95:52" pos:end="95:76"><expr pos:start="95:52" pos:end="95:76"><name pos:start="95:52" pos:end="95:76">AV_PKT_DATA_QUALITY_STATS</name></expr></argument>,

                                              <argument pos:start="97:47" pos:end="97:50"><expr pos:start="97:47" pos:end="97:50"><name pos:start="97:47" pos:end="97:50">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:45"><expr pos:start="99:9" pos:end="99:44"><name pos:start="99:9" pos:end="99:20"><name pos:start="99:9" pos:end="99:11">ost</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:20">quality</name></name> <operator pos:start="99:22" pos:end="99:22">=</operator> <ternary pos:start="99:24" pos:end="99:44"><condition pos:start="99:24" pos:end="99:27"><expr pos:start="99:24" pos:end="99:25"><name pos:start="99:24" pos:end="99:25">sd</name></expr> ?</condition><then pos:start="99:29" pos:end="99:39"> <expr pos:start="99:29" pos:end="99:39"><call pos:start="99:29" pos:end="99:39"><name pos:start="99:29" pos:end="99:35">AV_RL32</name><argument_list pos:start="99:36" pos:end="99:39">(<argument pos:start="99:37" pos:end="99:38"><expr pos:start="99:37" pos:end="99:38"><name pos:start="99:37" pos:end="99:38">sd</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="99:41" pos:end="99:44">: <expr pos:start="99:43" pos:end="99:44"><operator pos:start="99:43" pos:end="99:43">-</operator><literal type="number" pos:start="99:44" pos:end="99:44">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:59"><expr pos:start="101:9" pos:end="101:58"><name pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:11">ost</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:22">pict_type</name></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <ternary pos:start="101:26" pos:end="101:58"><condition pos:start="101:26" pos:end="101:29"><expr pos:start="101:26" pos:end="101:27"><name pos:start="101:26" pos:end="101:27">sd</name></expr> ?</condition><then pos:start="101:31" pos:end="101:35"> <expr pos:start="101:31" pos:end="101:35"><name pos:start="101:31" pos:end="101:35"><name pos:start="101:31" pos:end="101:32">sd</name><index pos:start="101:33" pos:end="101:35">[<expr pos:start="101:34" pos:end="101:34"><literal type="number" pos:start="101:34" pos:end="101:34">4</literal></expr>]</index></name></expr> </then><else pos:start="101:37" pos:end="101:58">: <expr pos:start="101:39" pos:end="101:58"><name pos:start="101:39" pos:end="101:58">AV_PICTURE_TYPE_NONE</name></expr></else></ternary></expr>;</expr_stmt>



        <for pos:start="105:9" pos:end="115:9">for <control pos:start="105:13" pos:end="105:54">(<init pos:start="105:14" pos:end="105:19"><expr pos:start="105:14" pos:end="105:18"><name pos:start="105:14" pos:end="105:14">i</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <literal type="number" pos:start="105:18" pos:end="105:18">0</literal></expr>;</init> <condition pos:start="105:21" pos:end="105:49"><expr pos:start="105:21" pos:end="105:48"><name pos:start="105:21" pos:end="105:21">i</name><operator pos:start="105:22" pos:end="105:22">&lt;</operator><call pos:start="105:23" pos:end="105:48"><name pos:start="105:23" pos:end="105:36">FF_ARRAY_ELEMS</name><argument_list pos:start="105:37" pos:end="105:48">(<argument pos:start="105:38" pos:end="105:47"><expr pos:start="105:38" pos:end="105:47"><name pos:start="105:38" pos:end="105:47"><name pos:start="105:38" pos:end="105:40">ost</name><operator pos:start="105:41" pos:end="105:42">-&gt;</operator><name pos:start="105:43" pos:end="105:47">error</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="105:51" pos:end="105:53"><expr pos:start="105:51" pos:end="105:53"><name pos:start="105:51" pos:end="105:51">i</name><operator pos:start="105:52" pos:end="105:53">++</operator></expr></incr>)</control> <block pos:start="105:56" pos:end="115:9">{<block_content pos:start="107:13" pos:end="113:35">

            <if_stmt pos:start="107:13" pos:end="113:35"><if pos:start="107:13" pos:end="109:54">if <condition pos:start="107:16" pos:end="107:32">(<expr pos:start="107:17" pos:end="107:31"><name pos:start="107:17" pos:end="107:18">sd</name> <operator pos:start="107:20" pos:end="107:21">&amp;&amp;</operator> <name pos:start="107:23" pos:end="107:23">i</name> <operator pos:start="107:25" pos:end="107:25">&lt;</operator> <name pos:start="107:27" pos:end="107:31"><name pos:start="107:27" pos:end="107:28">sd</name><index pos:start="107:29" pos:end="107:31">[<expr pos:start="107:30" pos:end="107:30"><literal type="number" pos:start="107:30" pos:end="107:30">5</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:54"><block_content pos:start="109:17" pos:end="109:54">

                <expr_stmt pos:start="109:17" pos:end="109:54"><expr pos:start="109:17" pos:end="109:53"><name pos:start="109:17" pos:end="109:29"><name pos:start="109:17" pos:end="109:19">ost</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:26">error</name><index pos:start="109:27" pos:end="109:29">[<expr pos:start="109:28" pos:end="109:28"><name pos:start="109:28" pos:end="109:28">i</name></expr>]</index></name> <operator pos:start="109:31" pos:end="109:31">=</operator> <call pos:start="109:33" pos:end="109:53"><name pos:start="109:33" pos:end="109:39">AV_RL64</name><argument_list pos:start="109:40" pos:end="109:53">(<argument pos:start="109:41" pos:end="109:52"><expr pos:start="109:41" pos:end="109:52"><name pos:start="109:41" pos:end="109:42">sd</name> <operator pos:start="109:44" pos:end="109:44">+</operator> <literal type="number" pos:start="109:46" pos:end="109:48">8</literal> <operator pos:start="109:48" pos:end="109:48">+</operator> <literal type="number" pos:start="109:50" pos:end="109:50">8</literal><operator pos:start="109:51" pos:end="109:51">*</operator><name pos:start="109:52" pos:end="109:52">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="111:13" pos:end="113:35">else<block type="pseudo" pos:start="113:17" pos:end="113:35"><block_content pos:start="113:17" pos:end="113:35">

                <expr_stmt pos:start="113:17" pos:end="113:35"><expr pos:start="113:17" pos:end="113:34"><name pos:start="113:17" pos:end="113:29"><name pos:start="113:17" pos:end="113:19">ost</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:26">error</name><index pos:start="113:27" pos:end="113:29">[<expr pos:start="113:28" pos:end="113:28"><name pos:start="113:28" pos:end="113:28">i</name></expr>]</index></name> <operator pos:start="113:31" pos:end="113:31">=</operator> <operator pos:start="113:33" pos:end="113:33">-</operator><literal type="number" pos:start="113:34" pos:end="113:34">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="119:9" pos:end="129:9"><if pos:start="119:9" pos:end="129:9">if <condition pos:start="119:12" pos:end="119:47">(<expr pos:start="119:13" pos:end="119:46"><name pos:start="119:13" pos:end="119:31"><name pos:start="119:13" pos:end="119:15">ost</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:27">frame_rate</name><operator pos:start="119:28" pos:end="119:28">.</operator><name pos:start="119:29" pos:end="119:31">num</name></name> <operator pos:start="119:33" pos:end="119:34">&amp;&amp;</operator> <name pos:start="119:36" pos:end="119:46"><name pos:start="119:36" pos:end="119:38">ost</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:46">is_cfr</name></name></expr>)</condition> <block pos:start="119:49" pos:end="129:9">{<block_content pos:start="121:13" pos:end="127:61">

            <if_stmt pos:start="121:13" pos:end="123:115"><if pos:start="121:13" pos:end="123:115">if <condition pos:start="121:16" pos:end="121:34">(<expr pos:start="121:17" pos:end="121:33"><name pos:start="121:17" pos:end="121:29"><name pos:start="121:17" pos:end="121:19">pkt</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:29">duration</name></name> <operator pos:start="121:31" pos:end="121:31">&gt;</operator> <literal type="number" pos:start="121:33" pos:end="121:33">0</literal></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:115"><block_content pos:start="123:17" pos:end="123:115">

                <expr_stmt pos:start="123:17" pos:end="123:115"><expr pos:start="123:17" pos:end="123:114"><call pos:start="123:17" pos:end="123:114"><name pos:start="123:17" pos:end="123:22">av_log</name><argument_list pos:start="123:23" pos:end="123:114">(<argument pos:start="123:24" pos:end="123:27"><expr pos:start="123:24" pos:end="123:27"><name pos:start="123:24" pos:end="123:27">NULL</name></expr></argument>, <argument pos:start="123:30" pos:end="123:43"><expr pos:start="123:30" pos:end="123:43"><name pos:start="123:30" pos:end="123:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="123:46" pos:end="123:113"><expr pos:start="123:46" pos:end="123:113"><literal type="string" pos:start="123:46" pos:end="123:113">"Overriding packet duration by frame rate, this should not happen\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="125:13" pos:end="127:61"><expr pos:start="125:13" pos:end="127:60"><name pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:15">pkt</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:25">duration</name></name> <operator pos:start="125:27" pos:end="125:27">=</operator> <call pos:start="125:29" pos:end="127:60"><name pos:start="125:29" pos:end="125:40">av_rescale_q</name><argument_list pos:start="125:41" pos:end="127:60">(<argument pos:start="125:42" pos:end="125:42"><expr pos:start="125:42" pos:end="125:42"><literal type="number" pos:start="125:42" pos:end="125:42">1</literal></expr></argument>, <argument pos:start="125:45" pos:end="125:69"><expr pos:start="125:45" pos:end="125:69"><call pos:start="125:45" pos:end="125:69"><name pos:start="125:45" pos:end="125:52">av_inv_q</name><argument_list pos:start="125:53" pos:end="125:69">(<argument pos:start="125:54" pos:end="125:68"><expr pos:start="125:54" pos:end="125:68"><name pos:start="125:54" pos:end="125:68"><name pos:start="125:54" pos:end="125:56">ost</name><operator pos:start="125:57" pos:end="125:58">-&gt;</operator><name pos:start="125:59" pos:end="125:68">frame_rate</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                         <argument pos:start="127:42" pos:end="127:59"><expr pos:start="127:42" pos:end="127:59"><name pos:start="127:42" pos:end="127:59"><name pos:start="127:42" pos:end="127:44">ost</name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:48">st</name><operator pos:start="127:49" pos:end="127:50">-&gt;</operator><name pos:start="127:51" pos:end="127:59">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="135:5" pos:end="203:5"><if pos:start="135:5" pos:end="203:5">if <condition pos:start="135:8" pos:end="135:50">(<expr pos:start="135:9" pos:end="135:49"><operator pos:start="135:9" pos:end="135:9">!</operator><operator pos:start="135:10" pos:end="135:10">(</operator><name pos:start="135:11" pos:end="135:27"><name pos:start="135:11" pos:end="135:11">s</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:20">oformat</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:27">flags</name></name> <operator pos:start="135:29" pos:end="135:29">&amp;</operator> <name pos:start="135:31" pos:end="135:48">AVFMT_NOTIMESTAMPS</name><operator pos:start="135:49" pos:end="135:49">)</operator></expr>)</condition> <block pos:start="135:52" pos:end="203:5">{<block_content pos:start="137:9" pos:end="201:9">

        <if_stmt pos:start="137:9" pos:end="157:9"><if pos:start="137:9" pos:end="157:9">if <condition pos:start="137:12" pos:end="141:32">(<expr pos:start="137:13" pos:end="141:31"><name pos:start="137:13" pos:end="137:20"><name pos:start="137:13" pos:end="137:15">pkt</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:20">dts</name></name> <operator pos:start="137:22" pos:end="137:23">!=</operator> <name pos:start="137:25" pos:end="137:38">AV_NOPTS_VALUE</name> <operator pos:start="137:40" pos:end="137:41">&amp;&amp;</operator>

            <name pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:15">pkt</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:20">pts</name></name> <operator pos:start="139:22" pos:end="139:23">!=</operator> <name pos:start="139:25" pos:end="139:38">AV_NOPTS_VALUE</name> <operator pos:start="139:40" pos:end="139:41">&amp;&amp;</operator>

            <name pos:start="141:13" pos:end="141:20"><name pos:start="141:13" pos:end="141:15">pkt</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:20">dts</name></name> <operator pos:start="141:22" pos:end="141:22">&gt;</operator> <name pos:start="141:24" pos:end="141:31"><name pos:start="141:24" pos:end="141:26">pkt</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:31">pts</name></name></expr>)</condition> <block pos:start="141:34" pos:end="157:9">{<block_content pos:start="143:13" pos:end="155:73">

            <expr_stmt pos:start="143:13" pos:end="147:52"><expr pos:start="143:13" pos:end="147:51"><call pos:start="143:13" pos:end="147:51"><name pos:start="143:13" pos:end="143:18">av_log</name><argument_list pos:start="143:19" pos:end="147:51">(<argument pos:start="143:20" pos:end="143:20"><expr pos:start="143:20" pos:end="143:20"><name pos:start="143:20" pos:end="143:20">s</name></expr></argument>, <argument pos:start="143:23" pos:end="143:36"><expr pos:start="143:23" pos:end="143:36"><name pos:start="143:23" pos:end="143:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="143:39" pos:end="143:122"><expr pos:start="143:39" pos:end="143:122"><literal type="string" pos:start="143:39" pos:end="143:54">"Invalid DTS: %"</literal><name pos:start="143:55" pos:end="143:60">PRId64</name><literal type="string" pos:start="143:61" pos:end="143:69">" PTS: %"</literal><name pos:start="143:70" pos:end="143:75">PRId64</name><literal type="string" pos:start="143:76" pos:end="143:122">" in output stream %d:%d, replacing by guess\n"</literal></expr></argument>,

                   <argument pos:start="145:20" pos:end="145:27"><expr pos:start="145:20" pos:end="145:27"><name pos:start="145:20" pos:end="145:27"><name pos:start="145:20" pos:end="145:22">pkt</name><operator pos:start="145:23" pos:end="145:24">-&gt;</operator><name pos:start="145:25" pos:end="145:27">dts</name></name></expr></argument>, <argument pos:start="145:30" pos:end="145:37"><expr pos:start="145:30" pos:end="145:37"><name pos:start="145:30" pos:end="145:37"><name pos:start="145:30" pos:end="145:32">pkt</name><operator pos:start="145:33" pos:end="145:34">-&gt;</operator><name pos:start="145:35" pos:end="145:37">pts</name></name></expr></argument>,

                   <argument pos:start="147:20" pos:end="147:34"><expr pos:start="147:20" pos:end="147:34"><name pos:start="147:20" pos:end="147:34"><name pos:start="147:20" pos:end="147:22">ost</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:34">file_index</name></name></expr></argument>, <argument pos:start="147:37" pos:end="147:50"><expr pos:start="147:37" pos:end="147:50"><name pos:start="147:37" pos:end="147:50"><name pos:start="147:37" pos:end="147:39">ost</name><operator pos:start="147:40" pos:end="147:41">-&gt;</operator><name pos:start="147:42" pos:end="147:43">st</name><operator pos:start="147:44" pos:end="147:45">-&gt;</operator><name pos:start="147:46" pos:end="147:50">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="155:73"><expr pos:start="149:13" pos:end="155:72"><name pos:start="149:13" pos:end="149:20"><name pos:start="149:13" pos:end="149:15">pkt</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:20">pts</name></name> <operator pos:start="149:22" pos:end="149:22">=</operator>

            <name pos:start="151:13" pos:end="151:20"><name pos:start="151:13" pos:end="151:15">pkt</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:20">dts</name></name> <operator pos:start="151:22" pos:end="151:22">=</operator> <name pos:start="151:24" pos:end="151:31"><name pos:start="151:24" pos:end="151:26">pkt</name><operator pos:start="151:27" pos:end="151:28">-&gt;</operator><name pos:start="151:29" pos:end="151:31">pts</name></name> <operator pos:start="151:33" pos:end="151:33">+</operator> <name pos:start="151:35" pos:end="151:42"><name pos:start="151:35" pos:end="151:37">pkt</name><operator pos:start="151:38" pos:end="151:39">-&gt;</operator><name pos:start="151:40" pos:end="151:42">dts</name></name> <operator pos:start="151:44" pos:end="151:44">+</operator> <name pos:start="151:46" pos:end="151:62"><name pos:start="151:46" pos:end="151:48">ost</name><operator pos:start="151:49" pos:end="151:50">-&gt;</operator><name pos:start="151:51" pos:end="151:62">last_mux_dts</name></name> <operator pos:start="151:64" pos:end="151:64">+</operator> <literal type="number" pos:start="151:66" pos:end="153:22">1</literal>

                     <operator pos:start="153:22" pos:end="153:22">-</operator> <call pos:start="153:24" pos:end="153:72"><name pos:start="153:24" pos:end="153:29">FFMIN3</name><argument_list pos:start="153:30" pos:end="153:72">(<argument pos:start="153:31" pos:end="153:38"><expr pos:start="153:31" pos:end="153:38"><name pos:start="153:31" pos:end="153:38"><name pos:start="153:31" pos:end="153:33">pkt</name><operator pos:start="153:34" pos:end="153:35">-&gt;</operator><name pos:start="153:36" pos:end="153:38">pts</name></name></expr></argument>, <argument pos:start="153:41" pos:end="153:48"><expr pos:start="153:41" pos:end="153:48"><name pos:start="153:41" pos:end="153:48"><name pos:start="153:41" pos:end="153:43">pkt</name><operator pos:start="153:44" pos:end="153:45">-&gt;</operator><name pos:start="153:46" pos:end="153:48">dts</name></name></expr></argument>, <argument pos:start="153:51" pos:end="153:71"><expr pos:start="153:51" pos:end="153:71"><name pos:start="153:51" pos:end="153:67"><name pos:start="153:51" pos:end="153:53">ost</name><operator pos:start="153:54" pos:end="153:55">-&gt;</operator><name pos:start="153:56" pos:end="153:67">last_mux_dts</name></name> <operator pos:start="153:69" pos:end="153:69">+</operator> <literal type="number" pos:start="153:71" pos:end="153:71">1</literal></expr></argument>)</argument_list></call>

                     <operator pos:start="155:22" pos:end="155:22">-</operator> <call pos:start="155:24" pos:end="155:72"><name pos:start="155:24" pos:end="155:29">FFMAX3</name><argument_list pos:start="155:30" pos:end="155:72">(<argument pos:start="155:31" pos:end="155:38"><expr pos:start="155:31" pos:end="155:38"><name pos:start="155:31" pos:end="155:38"><name pos:start="155:31" pos:end="155:33">pkt</name><operator pos:start="155:34" pos:end="155:35">-&gt;</operator><name pos:start="155:36" pos:end="155:38">pts</name></name></expr></argument>, <argument pos:start="155:41" pos:end="155:48"><expr pos:start="155:41" pos:end="155:48"><name pos:start="155:41" pos:end="155:48"><name pos:start="155:41" pos:end="155:43">pkt</name><operator pos:start="155:44" pos:end="155:45">-&gt;</operator><name pos:start="155:46" pos:end="155:48">dts</name></name></expr></argument>, <argument pos:start="155:51" pos:end="155:71"><expr pos:start="155:51" pos:end="155:71"><name pos:start="155:51" pos:end="155:67"><name pos:start="155:51" pos:end="155:53">ost</name><operator pos:start="155:54" pos:end="155:55">-&gt;</operator><name pos:start="155:56" pos:end="155:67">last_mux_dts</name></name> <operator pos:start="155:69" pos:end="155:69">+</operator> <literal type="number" pos:start="155:71" pos:end="155:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="159:9" pos:end="201:9"><if pos:start="159:9" pos:end="201:9">if <condition pos:start="159:12" pos:end="165:48">(<expr pos:start="159:13" pos:end="165:47"><operator pos:start="159:13" pos:end="159:13">(</operator><name pos:start="159:14" pos:end="159:37"><name pos:start="159:14" pos:end="159:15">st</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:25">codecpar</name><operator pos:start="159:26" pos:end="159:27">-&gt;</operator><name pos:start="159:28" pos:end="159:37">codec_type</name></name> <operator pos:start="159:39" pos:end="159:40">==</operator> <name pos:start="159:42" pos:end="159:59">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="159:61" pos:end="159:62">||</operator> <name pos:start="159:64" pos:end="159:87"><name pos:start="159:64" pos:end="159:65">st</name><operator pos:start="159:66" pos:end="159:67">-&gt;</operator><name pos:start="159:68" pos:end="159:75">codecpar</name><operator pos:start="159:76" pos:end="159:77">-&gt;</operator><name pos:start="159:78" pos:end="159:87">codec_type</name></name> <operator pos:start="159:89" pos:end="159:90">==</operator> <name pos:start="159:92" pos:end="159:109">AVMEDIA_TYPE_VIDEO</name><operator pos:start="159:110" pos:end="159:110">)</operator> <operator pos:start="159:112" pos:end="159:113">&amp;&amp;</operator>

            <name pos:start="161:13" pos:end="161:20"><name pos:start="161:13" pos:end="161:15">pkt</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:20">dts</name></name> <operator pos:start="161:22" pos:end="161:23">!=</operator> <name pos:start="161:25" pos:end="161:38">AV_NOPTS_VALUE</name> <operator pos:start="161:40" pos:end="161:41">&amp;&amp;</operator>

            <operator pos:start="163:13" pos:end="163:13">!</operator><operator pos:start="163:14" pos:end="163:14">(</operator><name pos:start="163:15" pos:end="163:36"><name pos:start="163:15" pos:end="163:16">st</name><operator pos:start="163:17" pos:end="163:18">-&gt;</operator><name pos:start="163:19" pos:end="163:26">codecpar</name><operator pos:start="163:27" pos:end="163:28">-&gt;</operator><name pos:start="163:29" pos:end="163:36">codec_id</name></name> <operator pos:start="163:38" pos:end="163:39">==</operator> <name pos:start="163:41" pos:end="163:55">AV_CODEC_ID_VP9</name> <operator pos:start="163:57" pos:end="163:58">&amp;&amp;</operator> <name pos:start="163:60" pos:end="163:75"><name pos:start="163:60" pos:end="163:62">ost</name><operator pos:start="163:63" pos:end="163:64">-&gt;</operator><name pos:start="163:65" pos:end="163:75">stream_copy</name></name><operator pos:start="163:76" pos:end="163:76">)</operator> <operator pos:start="163:78" pos:end="163:79">&amp;&amp;</operator>

            <name pos:start="165:13" pos:end="165:29"><name pos:start="165:13" pos:end="165:15">ost</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:29">last_mux_dts</name></name> <operator pos:start="165:31" pos:end="165:32">!=</operator> <name pos:start="165:34" pos:end="165:47">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="165:50" pos:end="201:9">{<block_content pos:start="167:13" pos:end="199:13">

            <decl_stmt pos:start="167:13" pos:end="167:88"><decl pos:start="167:13" pos:end="167:87"><type pos:start="167:13" pos:end="167:19"><name pos:start="167:13" pos:end="167:19">int64_t</name></type> <name pos:start="167:21" pos:end="167:23">max</name> <init pos:start="167:25" pos:end="167:87">= <expr pos:start="167:27" pos:end="167:87"><name pos:start="167:27" pos:end="167:43"><name pos:start="167:27" pos:end="167:29">ost</name><operator pos:start="167:30" pos:end="167:31">-&gt;</operator><name pos:start="167:32" pos:end="167:43">last_mux_dts</name></name> <operator pos:start="167:45" pos:end="167:45">+</operator> <operator pos:start="167:47" pos:end="167:47">!</operator><operator pos:start="167:48" pos:end="167:48">(</operator><name pos:start="167:49" pos:end="167:65"><name pos:start="167:49" pos:end="167:49">s</name><operator pos:start="167:50" pos:end="167:51">-&gt;</operator><name pos:start="167:52" pos:end="167:58">oformat</name><operator pos:start="167:59" pos:end="167:60">-&gt;</operator><name pos:start="167:61" pos:end="167:65">flags</name></name> <operator pos:start="167:67" pos:end="167:67">&amp;</operator> <name pos:start="167:69" pos:end="167:86">AVFMT_TS_NONSTRICT</name><operator pos:start="167:87" pos:end="167:87">)</operator></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="169:13" pos:end="199:13"><if pos:start="169:13" pos:end="199:13">if <condition pos:start="169:16" pos:end="169:31">(<expr pos:start="169:17" pos:end="169:30"><name pos:start="169:17" pos:end="169:24"><name pos:start="169:17" pos:end="169:19">pkt</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:24">dts</name></name> <operator pos:start="169:26" pos:end="169:26">&lt;</operator> <name pos:start="169:28" pos:end="169:30">max</name></expr>)</condition> <block pos:start="169:33" pos:end="199:13">{<block_content pos:start="171:17" pos:end="197:31">

                <decl_stmt pos:start="171:17" pos:end="171:132"><decl pos:start="171:17" pos:end="171:131"><type pos:start="171:17" pos:end="171:19"><name pos:start="171:17" pos:end="171:19">int</name></type> <name pos:start="171:21" pos:end="171:28">loglevel</name> <init pos:start="171:30" pos:end="171:131">= <expr pos:start="171:32" pos:end="171:131"><ternary pos:start="171:32" pos:end="171:131"><condition pos:start="171:32" pos:end="171:101"><expr pos:start="171:32" pos:end="171:99"><name pos:start="171:32" pos:end="171:34">max</name> <operator pos:start="171:36" pos:end="171:36">-</operator> <name pos:start="171:38" pos:end="171:45"><name pos:start="171:38" pos:end="171:40">pkt</name><operator pos:start="171:41" pos:end="171:42">-&gt;</operator><name pos:start="171:43" pos:end="171:45">dts</name></name> <operator pos:start="171:47" pos:end="171:47">&gt;</operator> <literal type="number" pos:start="171:49" pos:end="171:49">2</literal> <operator pos:start="171:51" pos:end="171:52">||</operator> <name pos:start="171:54" pos:end="171:77"><name pos:start="171:54" pos:end="171:55">st</name><operator pos:start="171:56" pos:end="171:57">-&gt;</operator><name pos:start="171:58" pos:end="171:65">codecpar</name><operator pos:start="171:66" pos:end="171:67">-&gt;</operator><name pos:start="171:68" pos:end="171:77">codec_type</name></name> <operator pos:start="171:79" pos:end="171:80">==</operator> <name pos:start="171:82" pos:end="171:99">AVMEDIA_TYPE_VIDEO</name></expr> ?</condition><then pos:start="171:103" pos:end="171:116"> <expr pos:start="171:103" pos:end="171:116"><name pos:start="171:103" pos:end="171:116">AV_LOG_WARNING</name></expr> </then><else pos:start="171:118" pos:end="171:131">: <expr pos:start="171:120" pos:end="171:131"><name pos:start="171:120" pos:end="171:131">AV_LOG_DEBUG</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="173:17" pos:end="177:85"><expr pos:start="173:17" pos:end="177:84"><call pos:start="173:17" pos:end="177:84"><name pos:start="173:17" pos:end="173:22">av_log</name><argument_list pos:start="173:23" pos:end="177:84">(<argument pos:start="173:24" pos:end="173:24"><expr pos:start="173:24" pos:end="173:24"><name pos:start="173:24" pos:end="173:24">s</name></expr></argument>, <argument pos:start="173:27" pos:end="173:34"><expr pos:start="173:27" pos:end="173:34"><name pos:start="173:27" pos:end="173:34">loglevel</name></expr></argument>, <argument pos:start="173:37" pos:end="175:73"><expr pos:start="173:37" pos:end="175:73"><literal type="string" pos:start="173:37" pos:end="173:74">"Non-monotonous DTS in output stream "</literal>

                       <literal type="string" pos:start="175:24" pos:end="175:43">"%d:%d; previous: %"</literal><name pos:start="175:44" pos:end="175:49">PRId64</name><literal type="string" pos:start="175:50" pos:end="175:63">", current: %"</literal><name pos:start="175:64" pos:end="175:69">PRId64</name><literal type="string" pos:start="175:70" pos:end="175:73">"; "</literal></expr></argument>,

                       <argument pos:start="177:24" pos:end="177:38"><expr pos:start="177:24" pos:end="177:38"><name pos:start="177:24" pos:end="177:38"><name pos:start="177:24" pos:end="177:26">ost</name><operator pos:start="177:27" pos:end="177:28">-&gt;</operator><name pos:start="177:29" pos:end="177:38">file_index</name></name></expr></argument>, <argument pos:start="177:41" pos:end="177:54"><expr pos:start="177:41" pos:end="177:54"><name pos:start="177:41" pos:end="177:54"><name pos:start="177:41" pos:end="177:43">ost</name><operator pos:start="177:44" pos:end="177:45">-&gt;</operator><name pos:start="177:46" pos:end="177:47">st</name><operator pos:start="177:48" pos:end="177:49">-&gt;</operator><name pos:start="177:50" pos:end="177:54">index</name></name></expr></argument>, <argument pos:start="177:57" pos:end="177:73"><expr pos:start="177:57" pos:end="177:73"><name pos:start="177:57" pos:end="177:73"><name pos:start="177:57" pos:end="177:59">ost</name><operator pos:start="177:60" pos:end="177:61">-&gt;</operator><name pos:start="177:62" pos:end="177:73">last_mux_dts</name></name></expr></argument>, <argument pos:start="177:76" pos:end="177:83"><expr pos:start="177:76" pos:end="177:83"><name pos:start="177:76" pos:end="177:83"><name pos:start="177:76" pos:end="177:78">pkt</name><operator pos:start="177:79" pos:end="177:80">-&gt;</operator><name pos:start="177:81" pos:end="177:83">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="179:17" pos:end="185:17"><if pos:start="179:17" pos:end="185:17">if <condition pos:start="179:20" pos:end="179:34">(<expr pos:start="179:21" pos:end="179:33"><name pos:start="179:21" pos:end="179:33">exit_on_error</name></expr>)</condition> <block pos:start="179:36" pos:end="185:17">{<block_content pos:start="181:21" pos:end="183:36">

                    <expr_stmt pos:start="181:21" pos:end="181:62"><expr pos:start="181:21" pos:end="181:61"><call pos:start="181:21" pos:end="181:61"><name pos:start="181:21" pos:end="181:26">av_log</name><argument_list pos:start="181:27" pos:end="181:61">(<argument pos:start="181:28" pos:end="181:31"><expr pos:start="181:28" pos:end="181:31"><name pos:start="181:28" pos:end="181:31">NULL</name></expr></argument>, <argument pos:start="181:34" pos:end="181:45"><expr pos:start="181:34" pos:end="181:45"><name pos:start="181:34" pos:end="181:45">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="181:48" pos:end="181:60"><expr pos:start="181:48" pos:end="181:60"><literal type="string" pos:start="181:48" pos:end="181:60">"aborting.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="183:21" pos:end="183:36"><expr pos:start="183:21" pos:end="183:35"><call pos:start="183:21" pos:end="183:35"><name pos:start="183:21" pos:end="183:32">exit_program</name><argument_list pos:start="183:33" pos:end="183:35">(<argument pos:start="183:34" pos:end="183:34"><expr pos:start="183:34" pos:end="183:34"><literal type="number" pos:start="183:34" pos:end="183:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="187:17" pos:end="191:28"><expr pos:start="187:17" pos:end="191:27"><call pos:start="187:17" pos:end="191:27"><name pos:start="187:17" pos:end="187:22">av_log</name><argument_list pos:start="187:23" pos:end="191:27">(<argument pos:start="187:24" pos:end="187:24"><expr pos:start="187:24" pos:end="187:24"><name pos:start="187:24" pos:end="187:24">s</name></expr></argument>, <argument pos:start="187:27" pos:end="187:34"><expr pos:start="187:27" pos:end="187:34"><name pos:start="187:27" pos:end="187:34">loglevel</name></expr></argument>, <argument pos:start="187:37" pos:end="189:70"><expr pos:start="187:37" pos:end="189:70"><literal type="string" pos:start="187:37" pos:end="187:51">"changing to %"</literal><name pos:start="187:52" pos:end="187:57">PRId64</name><literal type="string" pos:start="187:58" pos:end="187:77">". This may result "</literal>

                       <literal type="string" pos:start="189:24" pos:end="189:70">"in incorrect timestamps in the output file.\n"</literal></expr></argument>,

                       <argument pos:start="191:24" pos:end="191:26"><expr pos:start="191:24" pos:end="191:26"><name pos:start="191:24" pos:end="191:26">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="193:17" pos:end="195:52"><if pos:start="193:17" pos:end="195:52">if <condition pos:start="193:20" pos:end="193:41">(<expr pos:start="193:21" pos:end="193:40"><name pos:start="193:21" pos:end="193:28"><name pos:start="193:21" pos:end="193:23">pkt</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:28">pts</name></name> <operator pos:start="193:30" pos:end="193:31">&gt;=</operator> <name pos:start="193:33" pos:end="193:40"><name pos:start="193:33" pos:end="193:35">pkt</name><operator pos:start="193:36" pos:end="193:37">-&gt;</operator><name pos:start="193:38" pos:end="193:40">dts</name></name></expr>)</condition><block type="pseudo" pos:start="195:21" pos:end="195:52"><block_content pos:start="195:21" pos:end="195:52">

                    <expr_stmt pos:start="195:21" pos:end="195:52"><expr pos:start="195:21" pos:end="195:51"><name pos:start="195:21" pos:end="195:28"><name pos:start="195:21" pos:end="195:23">pkt</name><operator pos:start="195:24" pos:end="195:25">-&gt;</operator><name pos:start="195:26" pos:end="195:28">pts</name></name> <operator pos:start="195:30" pos:end="195:30">=</operator> <call pos:start="195:32" pos:end="195:51"><name pos:start="195:32" pos:end="195:36">FFMAX</name><argument_list pos:start="195:37" pos:end="195:51">(<argument pos:start="195:38" pos:end="195:45"><expr pos:start="195:38" pos:end="195:45"><name pos:start="195:38" pos:end="195:45"><name pos:start="195:38" pos:end="195:40">pkt</name><operator pos:start="195:41" pos:end="195:42">-&gt;</operator><name pos:start="195:43" pos:end="195:45">pts</name></name></expr></argument>, <argument pos:start="195:48" pos:end="195:50"><expr pos:start="195:48" pos:end="195:50"><name pos:start="195:48" pos:end="195:50">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:31"><expr pos:start="197:17" pos:end="197:30"><name pos:start="197:17" pos:end="197:24"><name pos:start="197:17" pos:end="197:19">pkt</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:24">dts</name></name> <operator pos:start="197:26" pos:end="197:26">=</operator> <name pos:start="197:28" pos:end="197:30">max</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:33"><expr pos:start="205:5" pos:end="205:32"><name pos:start="205:5" pos:end="205:21"><name pos:start="205:5" pos:end="205:7">ost</name><operator pos:start="205:8" pos:end="205:9">-&gt;</operator><name pos:start="205:10" pos:end="205:21">last_mux_dts</name></name> <operator pos:start="205:23" pos:end="205:23">=</operator> <name pos:start="205:25" pos:end="205:32"><name pos:start="205:25" pos:end="205:27">pkt</name><operator pos:start="205:28" pos:end="205:29">-&gt;</operator><name pos:start="205:30" pos:end="205:32">dts</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:32"><expr pos:start="209:5" pos:end="209:31"><name pos:start="209:5" pos:end="209:18"><name pos:start="209:5" pos:end="209:7">ost</name><operator pos:start="209:8" pos:end="209:9">-&gt;</operator><name pos:start="209:10" pos:end="209:18">data_size</name></name> <operator pos:start="209:20" pos:end="209:21">+=</operator> <name pos:start="209:23" pos:end="209:31"><name pos:start="209:23" pos:end="209:25">pkt</name><operator pos:start="209:26" pos:end="209:27">-&gt;</operator><name pos:start="209:28" pos:end="209:31">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:27"><expr pos:start="211:5" pos:end="211:26"><name pos:start="211:5" pos:end="211:24"><name pos:start="211:5" pos:end="211:7">ost</name><operator pos:start="211:8" pos:end="211:9">-&gt;</operator><name pos:start="211:10" pos:end="211:24">packets_written</name></name><operator pos:start="211:25" pos:end="211:26">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:35"><expr pos:start="215:5" pos:end="215:34"><name pos:start="215:5" pos:end="215:21"><name pos:start="215:5" pos:end="215:7">pkt</name><operator pos:start="215:8" pos:end="215:9">-&gt;</operator><name pos:start="215:10" pos:end="215:21">stream_index</name></name> <operator pos:start="215:23" pos:end="215:23">=</operator> <name pos:start="215:25" pos:end="215:34"><name pos:start="215:25" pos:end="215:27">ost</name><operator pos:start="215:28" pos:end="215:29">-&gt;</operator><name pos:start="215:30" pos:end="215:34">index</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="219:5" pos:end="235:5"><if pos:start="219:5" pos:end="235:5">if <condition pos:start="219:8" pos:end="219:17">(<expr pos:start="219:9" pos:end="219:16"><name pos:start="219:9" pos:end="219:16">debug_ts</name></expr>)</condition> <block pos:start="219:19" pos:end="235:5">{<block_content pos:start="221:9" pos:end="233:16">

        <expr_stmt pos:start="221:9" pos:end="233:16"><expr pos:start="221:9" pos:end="233:15"><call pos:start="221:9" pos:end="233:15"><name pos:start="221:9" pos:end="221:14">av_log</name><argument_list pos:start="221:15" pos:end="233:15">(<argument pos:start="221:16" pos:end="221:19"><expr pos:start="221:16" pos:end="221:19"><name pos:start="221:16" pos:end="221:19">NULL</name></expr></argument>, <argument pos:start="221:22" pos:end="221:32"><expr pos:start="221:22" pos:end="221:32"><name pos:start="221:22" pos:end="221:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="221:35" pos:end="223:81"><expr pos:start="221:35" pos:end="223:81"><literal type="string" pos:start="221:35" pos:end="221:53">"muxer &lt;- type:%s "</literal>

                <literal type="string" pos:start="223:17" pos:end="223:81">"pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s size:%d\n"</literal></expr></argument>,

                <argument pos:start="225:17" pos:end="225:66"><expr pos:start="225:17" pos:end="225:66"><call pos:start="225:17" pos:end="225:66"><name pos:start="225:17" pos:end="225:40">av_get_media_type_string</name><argument_list pos:start="225:41" pos:end="225:66">(<argument pos:start="225:42" pos:end="225:65"><expr pos:start="225:42" pos:end="225:65"><name pos:start="225:42" pos:end="225:65"><name pos:start="225:42" pos:end="225:44">ost</name><operator pos:start="225:45" pos:end="225:46">-&gt;</operator><name pos:start="225:47" pos:end="225:53">enc_ctx</name><operator pos:start="225:54" pos:end="225:55">-&gt;</operator><name pos:start="225:56" pos:end="225:65">codec_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="227:17" pos:end="227:35"><expr pos:start="227:17" pos:end="227:35"><call pos:start="227:17" pos:end="227:35"><name pos:start="227:17" pos:end="227:25">av_ts2str</name><argument_list pos:start="227:26" pos:end="227:35">(<argument pos:start="227:27" pos:end="227:34"><expr pos:start="227:27" pos:end="227:34"><name pos:start="227:27" pos:end="227:34"><name pos:start="227:27" pos:end="227:29">pkt</name><operator pos:start="227:30" pos:end="227:31">-&gt;</operator><name pos:start="227:32" pos:end="227:34">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="227:38" pos:end="227:81"><expr pos:start="227:38" pos:end="227:81"><call pos:start="227:38" pos:end="227:81"><name pos:start="227:38" pos:end="227:50">av_ts2timestr</name><argument_list pos:start="227:51" pos:end="227:81">(<argument pos:start="227:52" pos:end="227:59"><expr pos:start="227:52" pos:end="227:59"><name pos:start="227:52" pos:end="227:59"><name pos:start="227:52" pos:end="227:54">pkt</name><operator pos:start="227:55" pos:end="227:56">-&gt;</operator><name pos:start="227:57" pos:end="227:59">pts</name></name></expr></argument>, <argument pos:start="227:62" pos:end="227:80"><expr pos:start="227:62" pos:end="227:80"><operator pos:start="227:62" pos:end="227:62">&amp;</operator><name pos:start="227:63" pos:end="227:80"><name pos:start="227:63" pos:end="227:65">ost</name><operator pos:start="227:66" pos:end="227:67">-&gt;</operator><name pos:start="227:68" pos:end="227:69">st</name><operator pos:start="227:70" pos:end="227:71">-&gt;</operator><name pos:start="227:72" pos:end="227:80">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="229:17" pos:end="229:35"><expr pos:start="229:17" pos:end="229:35"><call pos:start="229:17" pos:end="229:35"><name pos:start="229:17" pos:end="229:25">av_ts2str</name><argument_list pos:start="229:26" pos:end="229:35">(<argument pos:start="229:27" pos:end="229:34"><expr pos:start="229:27" pos:end="229:34"><name pos:start="229:27" pos:end="229:34"><name pos:start="229:27" pos:end="229:29">pkt</name><operator pos:start="229:30" pos:end="229:31">-&gt;</operator><name pos:start="229:32" pos:end="229:34">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="229:38" pos:end="229:81"><expr pos:start="229:38" pos:end="229:81"><call pos:start="229:38" pos:end="229:81"><name pos:start="229:38" pos:end="229:50">av_ts2timestr</name><argument_list pos:start="229:51" pos:end="229:81">(<argument pos:start="229:52" pos:end="229:59"><expr pos:start="229:52" pos:end="229:59"><name pos:start="229:52" pos:end="229:59"><name pos:start="229:52" pos:end="229:54">pkt</name><operator pos:start="229:55" pos:end="229:56">-&gt;</operator><name pos:start="229:57" pos:end="229:59">dts</name></name></expr></argument>, <argument pos:start="229:62" pos:end="229:80"><expr pos:start="229:62" pos:end="229:80"><operator pos:start="229:62" pos:end="229:62">&amp;</operator><name pos:start="229:63" pos:end="229:80"><name pos:start="229:63" pos:end="229:65">ost</name><operator pos:start="229:66" pos:end="229:67">-&gt;</operator><name pos:start="229:68" pos:end="229:69">st</name><operator pos:start="229:70" pos:end="229:71">-&gt;</operator><name pos:start="229:72" pos:end="229:80">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="231:17" pos:end="231:25"><expr pos:start="231:17" pos:end="231:25"><name pos:start="231:17" pos:end="231:25"><name pos:start="231:17" pos:end="231:19">pkt</name><operator pos:start="231:20" pos:end="231:21">-&gt;</operator><name pos:start="231:22" pos:end="231:25">size</name></name></expr></argument>

              )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="239:5" pos:end="239:45"><expr pos:start="239:5" pos:end="239:44"><name pos:start="239:5" pos:end="239:7">ret</name> <operator pos:start="239:9" pos:end="239:9">=</operator> <call pos:start="239:11" pos:end="239:44"><name pos:start="239:11" pos:end="239:36">av_interleaved_write_frame</name><argument_list pos:start="239:37" pos:end="239:44">(<argument pos:start="239:38" pos:end="239:38"><expr pos:start="239:38" pos:end="239:38"><name pos:start="239:38" pos:end="239:38">s</name></expr></argument>, <argument pos:start="239:41" pos:end="239:43"><expr pos:start="239:41" pos:end="239:43"><name pos:start="239:41" pos:end="239:43">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="241:5" pos:end="249:5"><if pos:start="241:5" pos:end="249:5">if <condition pos:start="241:8" pos:end="241:16">(<expr pos:start="241:9" pos:end="241:15"><name pos:start="241:9" pos:end="241:11">ret</name> <operator pos:start="241:13" pos:end="241:13">&lt;</operator> <literal type="number" pos:start="241:15" pos:end="241:15">0</literal></expr>)</condition> <block pos:start="241:18" pos:end="249:5">{<block_content pos:start="243:9" pos:end="247:91">

        <expr_stmt pos:start="243:9" pos:end="243:57"><expr pos:start="243:9" pos:end="243:56"><call pos:start="243:9" pos:end="243:56"><name pos:start="243:9" pos:end="243:19">print_error</name><argument_list pos:start="243:20" pos:end="243:56">(<argument pos:start="243:21" pos:end="243:50"><expr pos:start="243:21" pos:end="243:50"><literal type="string" pos:start="243:21" pos:end="243:50">"av_interleaved_write_frame()"</literal></expr></argument>, <argument pos:start="243:53" pos:end="243:55"><expr pos:start="243:53" pos:end="243:55"><name pos:start="243:53" pos:end="243:55">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:29"><expr pos:start="245:9" pos:end="245:28"><name pos:start="245:9" pos:end="245:24">main_return_code</name> <operator pos:start="245:26" pos:end="245:26">=</operator> <literal type="number" pos:start="245:28" pos:end="245:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:91"><expr pos:start="247:9" pos:end="247:90"><call pos:start="247:9" pos:end="247:90"><name pos:start="247:9" pos:end="247:32">close_all_output_streams</name><argument_list pos:start="247:33" pos:end="247:90">(<argument pos:start="247:34" pos:end="247:36"><expr pos:start="247:34" pos:end="247:36"><name pos:start="247:34" pos:end="247:36">ost</name></expr></argument>, <argument pos:start="247:39" pos:end="247:71"><expr pos:start="247:39" pos:end="247:71"><name pos:start="247:39" pos:end="247:52">MUXER_FINISHED</name> <operator pos:start="247:54" pos:end="247:54">|</operator> <name pos:start="247:56" pos:end="247:71">ENCODER_FINISHED</name></expr></argument>, <argument pos:start="247:74" pos:end="247:89"><expr pos:start="247:74" pos:end="247:89"><name pos:start="247:74" pos:end="247:89">ENCODER_FINISHED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:25"><expr pos:start="251:5" pos:end="251:24"><call pos:start="251:5" pos:end="251:24"><name pos:start="251:5" pos:end="251:19">av_packet_unref</name><argument_list pos:start="251:20" pos:end="251:24">(<argument pos:start="251:21" pos:end="251:23"><expr pos:start="251:21" pos:end="251:23"><name pos:start="251:21" pos:end="251:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
