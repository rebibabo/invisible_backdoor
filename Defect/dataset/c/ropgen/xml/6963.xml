<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6963.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">reap_filters</name><parameter_list pos:start="1:24" pos:end="1:34">(<parameter pos:start="1:25" pos:end="1:33"><decl pos:start="1:25" pos:end="1:33"><type pos:start="1:25" pos:end="1:27"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:33">flush</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="209:1">{<block_content pos:start="5:5" pos:end="207:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:27">filtered_frame</name> <init pos:start="5:29" pos:end="5:34">= <expr pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:54">/* Reap all buffers present in the buffer sinks */</comment>

    <for pos:start="13:5" pos:end="203:5">for <control pos:start="13:9" pos:end="13:43">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:38"><expr pos:start="13:17" pos:end="13:37"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:37">nb_output_streams</name></expr>;</condition> <incr pos:start="13:40" pos:end="13:42"><expr pos:start="13:40" pos:end="13:42"><name pos:start="13:40" pos:end="13:40">i</name><operator pos:start="13:41" pos:end="13:42">++</operator></expr></incr>)</control> <block pos:start="13:45" pos:end="203:5">{<block_content pos:start="15:9" pos:end="201:9">

        <decl_stmt pos:start="15:9" pos:end="15:46"><decl pos:start="15:9" pos:end="15:45"><type pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:20">OutputStream</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:25">ost</name> <init pos:start="15:27" pos:end="15:45">= <expr pos:start="15:29" pos:end="15:45"><name pos:start="15:29" pos:end="15:45"><name pos:start="15:29" pos:end="15:42">output_streams</name><index pos:start="15:43" pos:end="15:45">[<expr pos:start="15:44" pos:end="15:44"><name pos:start="15:44" pos:end="15:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:58"><decl pos:start="17:9" pos:end="17:57"><type pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:18">OutputFile</name>    <modifier pos:start="17:23" pos:end="17:23">*</modifier></type><name pos:start="17:24" pos:end="17:25">of</name> <init pos:start="17:27" pos:end="17:57">= <expr pos:start="17:29" pos:end="17:57"><name pos:start="17:29" pos:end="17:57"><name pos:start="17:29" pos:end="17:40">output_files</name><index pos:start="17:41" pos:end="17:57">[<expr pos:start="17:42" pos:end="17:56"><name pos:start="17:42" pos:end="17:56"><name pos:start="17:42" pos:end="17:44">ost</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:56">file_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:32"><decl pos:start="19:9" pos:end="19:31"><type pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:23">AVFilterContext</name> <modifier pos:start="19:25" pos:end="19:25">*</modifier></type><name pos:start="19:26" pos:end="19:31">filter</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:43"><decl pos:start="21:9" pos:end="21:42"><type pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:22">AVCodecContext</name> <modifier pos:start="21:24" pos:end="21:24">*</modifier></type><name pos:start="21:25" pos:end="21:27">enc</name> <init pos:start="21:29" pos:end="21:42">= <expr pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:33">ost</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:42">enc_ctx</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:20"><decl pos:start="23:9" pos:end="23:19"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:15">ret</name> <init pos:start="23:17" pos:end="23:19">= <expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:55">(<expr pos:start="27:13" pos:end="27:54"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:24"><name pos:start="27:14" pos:end="27:16">ost</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:24">filter</name></name> <operator pos:start="27:26" pos:end="27:27">||</operator> <operator pos:start="27:29" pos:end="27:29">!</operator><name pos:start="27:30" pos:end="27:54"><name pos:start="27:30" pos:end="27:32">ost</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:40">filter</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:47">graph</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:54">graph</name></name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:14">filter</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:36"><name pos:start="31:18" pos:end="31:20">ost</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:28">filter</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:36">filter</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="35:9" pos:end="51:9"><if pos:start="35:9" pos:end="51:9">if <condition pos:start="35:12" pos:end="35:30">(<expr pos:start="35:13" pos:end="35:29"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:29"><name pos:start="35:14" pos:end="35:16">ost</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:29">initialized</name></name></expr>)</condition> <block pos:start="35:32" pos:end="51:9">{<block_content pos:start="37:13" pos:end="49:13">

            <decl_stmt pos:start="37:13" pos:end="37:29"><decl pos:start="37:13" pos:end="37:28"><type pos:start="37:13" pos:end="37:16"><name pos:start="37:13" pos:end="37:16">char</name></type> <name pos:start="37:18" pos:end="37:28"><name pos:start="37:18" pos:end="37:22">error</name><index pos:start="37:23" pos:end="37:28">[<expr pos:start="37:24" pos:end="37:27"><literal type="number" pos:start="37:24" pos:end="37:27">1024</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:64"><expr pos:start="39:13" pos:end="39:63"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:63"><name pos:start="39:19" pos:end="39:36">init_output_stream</name><argument_list pos:start="39:37" pos:end="39:63">(<argument pos:start="39:38" pos:end="39:40"><expr pos:start="39:38" pos:end="39:40"><name pos:start="39:38" pos:end="39:40">ost</name></expr></argument>, <argument pos:start="39:43" pos:end="39:47"><expr pos:start="39:43" pos:end="39:47"><name pos:start="39:43" pos:end="39:47">error</name></expr></argument>, <argument pos:start="39:50" pos:end="39:62"><expr pos:start="39:50" pos:end="39:62"><sizeof pos:start="39:50" pos:end="39:62">sizeof<argument_list pos:start="39:56" pos:end="39:62">(<argument pos:start="39:57" pos:end="39:61"><expr pos:start="39:57" pos:end="39:61"><name pos:start="39:57" pos:end="39:61">error</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="49:13"><if pos:start="41:13" pos:end="49:13">if <condition pos:start="41:16" pos:end="41:24">(<expr pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:19">ret</name> <operator pos:start="41:21" pos:end="41:21">&lt;</operator> <literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>)</condition> <block pos:start="41:26" pos:end="49:13">{<block_content pos:start="43:17" pos:end="47:32">

                <expr_stmt pos:start="43:17" pos:end="45:59"><expr pos:start="43:17" pos:end="45:58"><call pos:start="43:17" pos:end="45:58"><name pos:start="43:17" pos:end="43:22">av_log</name><argument_list pos:start="43:23" pos:end="45:58">(<argument pos:start="43:24" pos:end="43:27"><expr pos:start="43:24" pos:end="43:27"><name pos:start="43:24" pos:end="43:27">NULL</name></expr></argument>, <argument pos:start="43:30" pos:end="43:41"><expr pos:start="43:30" pos:end="43:41"><name pos:start="43:30" pos:end="43:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:44" pos:end="43:91"><expr pos:start="43:44" pos:end="43:91"><literal type="string" pos:start="43:44" pos:end="43:91">"Error initializing output stream %d:%d -- %s\n"</literal></expr></argument>,

                       <argument pos:start="45:24" pos:end="45:38"><expr pos:start="45:24" pos:end="45:38"><name pos:start="45:24" pos:end="45:38"><name pos:start="45:24" pos:end="45:26">ost</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:38">file_index</name></name></expr></argument>, <argument pos:start="45:41" pos:end="45:50"><expr pos:start="45:41" pos:end="45:50"><name pos:start="45:41" pos:end="45:50"><name pos:start="45:41" pos:end="45:43">ost</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:50">index</name></name></expr></argument>, <argument pos:start="45:53" pos:end="45:57"><expr pos:start="45:53" pos:end="45:57"><name pos:start="45:53" pos:end="45:57">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:32"><expr pos:start="47:17" pos:end="47:31"><call pos:start="47:17" pos:end="47:31"><name pos:start="47:17" pos:end="47:28">exit_program</name><argument_list pos:start="47:29" pos:end="47:31">(<argument pos:start="47:30" pos:end="47:30"><expr pos:start="47:30" pos:end="47:30"><literal type="number" pos:start="47:30" pos:end="47:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:78">(<expr pos:start="55:13" pos:end="55:77"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:32"><name pos:start="55:14" pos:end="55:16">ost</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:32">filtered_frame</name></name> <operator pos:start="55:34" pos:end="55:35">&amp;&amp;</operator> <operator pos:start="55:37" pos:end="55:37">!</operator><operator pos:start="55:38" pos:end="55:38">(</operator><name pos:start="55:39" pos:end="55:57"><name pos:start="55:39" pos:end="55:41">ost</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:57">filtered_frame</name></name> <operator pos:start="55:59" pos:end="55:59">=</operator> <call pos:start="55:61" pos:end="55:76"><name pos:start="55:61" pos:end="55:74">av_frame_alloc</name><argument_list pos:start="55:75" pos:end="55:76">()</argument_list></call><operator pos:start="55:77" pos:end="55:77">)</operator></expr>)</condition> <block pos:start="55:80" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:35">

            <return pos:start="57:13" pos:end="57:35">return <expr pos:start="57:20" pos:end="57:34"><call pos:start="57:20" pos:end="57:34"><name pos:start="57:20" pos:end="57:26">AVERROR</name><argument_list pos:start="57:27" pos:end="57:34">(<argument pos:start="57:28" pos:end="57:33"><expr pos:start="57:28" pos:end="57:33"><name pos:start="57:28" pos:end="57:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:45"><expr pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:22">filtered_frame</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:44"><name pos:start="61:26" pos:end="61:28">ost</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:44">filtered_frame</name></name></expr>;</expr_stmt>



        <while pos:start="65:9" pos:end="201:9">while <condition pos:start="65:15" pos:end="65:17">(<expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">1</literal></expr>)</condition> <block pos:start="65:19" pos:end="201:9">{<block_content pos:start="67:13" pos:end="199:43">

            <decl_stmt pos:start="67:13" pos:end="67:46"><decl pos:start="67:13" pos:end="67:45"><type pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:18">double</name></type> <name pos:start="67:20" pos:end="67:28">float_pts</name> <init pos:start="67:30" pos:end="67:45">= <expr pos:start="67:32" pos:end="67:45"><name pos:start="67:32" pos:end="67:45">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="67:48" pos:end="67:115">// this is identical to filtered_frame.pts but with higher precision</comment>

            <expr_stmt pos:start="69:13" pos:end="71:78"><expr pos:start="69:13" pos:end="71:77"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="71:77"><name pos:start="69:19" pos:end="69:47">av_buffersink_get_frame_flags</name><argument_list pos:start="69:48" pos:end="71:77">(<argument pos:start="69:49" pos:end="69:54"><expr pos:start="69:49" pos:end="69:54"><name pos:start="69:49" pos:end="69:54">filter</name></expr></argument>, <argument pos:start="69:57" pos:end="69:70"><expr pos:start="69:57" pos:end="69:70"><name pos:start="69:57" pos:end="69:70">filtered_frame</name></expr></argument>,

                                               <argument pos:start="71:48" pos:end="71:76"><expr pos:start="71:48" pos:end="71:76"><name pos:start="71:48" pos:end="71:76">AV_BUFFERSINK_FLAG_NO_REQUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="91:13"><if pos:start="73:13" pos:end="91:13">if <condition pos:start="73:16" pos:end="73:24">(<expr pos:start="73:17" pos:end="73:23"><name pos:start="73:17" pos:end="73:19">ret</name> <operator pos:start="73:21" pos:end="73:21">&lt;</operator> <literal type="number" pos:start="73:23" pos:end="73:23">0</literal></expr>)</condition> <block pos:start="73:26" pos:end="91:13">{<block_content pos:start="75:17" pos:end="89:22">

                <if_stmt pos:start="75:17" pos:end="87:17"><if pos:start="75:17" pos:end="81:17">if <condition pos:start="75:20" pos:end="75:65">(<expr pos:start="75:21" pos:end="75:64"><name pos:start="75:21" pos:end="75:23">ret</name> <operator pos:start="75:25" pos:end="75:26">!=</operator> <call pos:start="75:28" pos:end="75:42"><name pos:start="75:28" pos:end="75:34">AVERROR</name><argument_list pos:start="75:35" pos:end="75:42">(<argument pos:start="75:36" pos:end="75:41"><expr pos:start="75:36" pos:end="75:41"><name pos:start="75:36" pos:end="75:41">EAGAIN</name></expr></argument>)</argument_list></call> <operator pos:start="75:44" pos:end="75:45">&amp;&amp;</operator> <name pos:start="75:47" pos:end="75:49">ret</name> <operator pos:start="75:51" pos:end="75:52">!=</operator> <name pos:start="75:54" pos:end="75:64">AVERROR_EOF</name></expr>)</condition> <block pos:start="75:67" pos:end="81:17">{<block_content pos:start="77:21" pos:end="79:94">

                    <expr_stmt pos:start="77:21" pos:end="79:94"><expr pos:start="77:21" pos:end="79:93"><call pos:start="77:21" pos:end="79:93"><name pos:start="77:21" pos:end="77:26">av_log</name><argument_list pos:start="77:27" pos:end="79:93">(<argument pos:start="77:28" pos:end="77:31"><expr pos:start="77:28" pos:end="77:31"><name pos:start="77:28" pos:end="77:31">NULL</name></expr></argument>, <argument pos:start="77:34" pos:end="77:47"><expr pos:start="77:34" pos:end="77:47"><name pos:start="77:34" pos:end="77:47">AV_LOG_WARNING</name></expr></argument>,

                           <argument pos:start="79:28" pos:end="79:75"><expr pos:start="79:28" pos:end="79:75"><literal type="string" pos:start="79:28" pos:end="79:75">"Error in av_buffersink_get_frame_flags(): %s\n"</literal></expr></argument>, <argument pos:start="79:78" pos:end="79:92"><expr pos:start="79:78" pos:end="79:92"><call pos:start="79:78" pos:end="79:92"><name pos:start="79:78" pos:end="79:87">av_err2str</name><argument_list pos:start="79:88" pos:end="79:92">(<argument pos:start="79:89" pos:end="79:91"><expr pos:start="79:89" pos:end="79:91"><name pos:start="79:89" pos:end="79:91">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="81:19" pos:end="87:17">else if <condition pos:start="81:27" pos:end="81:55">(<expr pos:start="81:28" pos:end="81:54"><name pos:start="81:28" pos:end="81:32">flush</name> <operator pos:start="81:34" pos:end="81:35">&amp;&amp;</operator> <name pos:start="81:37" pos:end="81:39">ret</name> <operator pos:start="81:41" pos:end="81:42">==</operator> <name pos:start="81:44" pos:end="81:54">AVERROR_EOF</name></expr>)</condition> <block pos:start="81:57" pos:end="87:17">{<block_content pos:start="83:21" pos:end="85:68">

                    <if_stmt pos:start="83:21" pos:end="85:68"><if pos:start="83:21" pos:end="85:68">if <condition pos:start="83:24" pos:end="83:77">(<expr pos:start="83:25" pos:end="83:76"><call pos:start="83:25" pos:end="83:54"><name pos:start="83:25" pos:end="83:46">av_buffersink_get_type</name><argument_list pos:start="83:47" pos:end="83:54">(<argument pos:start="83:48" pos:end="83:53"><expr pos:start="83:48" pos:end="83:53"><name pos:start="83:48" pos:end="83:53">filter</name></expr></argument>)</argument_list></call> <operator pos:start="83:56" pos:end="83:57">==</operator> <name pos:start="83:59" pos:end="83:76">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="85:25" pos:end="85:68"><block_content pos:start="85:25" pos:end="85:68">

                        <expr_stmt pos:start="85:25" pos:end="85:68"><expr pos:start="85:25" pos:end="85:67"><call pos:start="85:25" pos:end="85:67"><name pos:start="85:25" pos:end="85:36">do_video_out</name><argument_list pos:start="85:37" pos:end="85:67">(<argument pos:start="85:38" pos:end="85:39"><expr pos:start="85:38" pos:end="85:39"><name pos:start="85:38" pos:end="85:39">of</name></expr></argument>, <argument pos:start="85:42" pos:end="85:44"><expr pos:start="85:42" pos:end="85:44"><name pos:start="85:42" pos:end="85:44">ost</name></expr></argument>, <argument pos:start="85:47" pos:end="85:50"><expr pos:start="85:47" pos:end="85:50"><name pos:start="85:47" pos:end="85:50">NULL</name></expr></argument>, <argument pos:start="85:53" pos:end="85:66"><expr pos:start="85:53" pos:end="85:66"><name pos:start="85:53" pos:end="85:66">AV_NOPTS_VALUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="89:17" pos:end="89:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="93:13" pos:end="99:13"><if pos:start="93:13" pos:end="99:13">if <condition pos:start="93:16" pos:end="93:30">(<expr pos:start="93:17" pos:end="93:29"><name pos:start="93:17" pos:end="93:29"><name pos:start="93:17" pos:end="93:19">ost</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:29">finished</name></name></expr>)</condition> <block pos:start="93:32" pos:end="99:13">{<block_content pos:start="95:17" pos:end="97:25">

                <expr_stmt pos:start="95:17" pos:end="95:47"><expr pos:start="95:17" pos:end="95:46"><call pos:start="95:17" pos:end="95:46"><name pos:start="95:17" pos:end="95:30">av_frame_unref</name><argument_list pos:start="95:31" pos:end="95:46">(<argument pos:start="95:32" pos:end="95:45"><expr pos:start="95:32" pos:end="95:45"><name pos:start="95:32" pos:end="95:45">filtered_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="97:17" pos:end="97:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="101:13" pos:end="135:13"><if pos:start="101:13" pos:end="135:13">if <condition pos:start="101:16" pos:end="101:54">(<expr pos:start="101:17" pos:end="101:53"><name pos:start="101:17" pos:end="101:35"><name pos:start="101:17" pos:end="101:30">filtered_frame</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:35">pts</name></name> <operator pos:start="101:37" pos:end="101:38">!=</operator> <name pos:start="101:40" pos:end="101:53">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="101:56" pos:end="135:13">{<block_content pos:start="103:17" pos:end="133:77">

                <decl_stmt pos:start="103:17" pos:end="103:93"><decl pos:start="103:17" pos:end="103:92"><type pos:start="103:17" pos:end="103:23"><name pos:start="103:17" pos:end="103:23">int64_t</name></type> <name pos:start="103:25" pos:end="103:34">start_time</name> <init pos:start="103:36" pos:end="103:92">= <expr pos:start="103:38" pos:end="103:92"><ternary pos:start="103:38" pos:end="103:92"><condition pos:start="103:38" pos:end="103:73"><expr pos:start="103:38" pos:end="103:71"><operator pos:start="103:38" pos:end="103:38">(</operator><name pos:start="103:39" pos:end="103:52"><name pos:start="103:39" pos:end="103:40">of</name><operator pos:start="103:41" pos:end="103:42">-&gt;</operator><name pos:start="103:43" pos:end="103:52">start_time</name></name> <operator pos:start="103:54" pos:end="103:55">==</operator> <name pos:start="103:57" pos:end="103:70">AV_NOPTS_VALUE</name><operator pos:start="103:71" pos:end="103:71">)</operator></expr> ?</condition><then pos:start="103:75" pos:end="103:75"> <expr pos:start="103:75" pos:end="103:75"><literal type="number" pos:start="103:75" pos:end="103:75">0</literal></expr> </then><else pos:start="103:77" pos:end="103:92">: <expr pos:start="103:79" pos:end="103:92"><name pos:start="103:79" pos:end="103:92"><name pos:start="103:79" pos:end="103:80">of</name><operator pos:start="103:81" pos:end="103:82">-&gt;</operator><name pos:start="103:83" pos:end="103:92">start_time</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="105:17" pos:end="105:75"><decl pos:start="105:17" pos:end="105:74"><type pos:start="105:17" pos:end="105:26"><name pos:start="105:17" pos:end="105:26">AVRational</name></type> <name pos:start="105:28" pos:end="105:36">filter_tb</name> <init pos:start="105:38" pos:end="105:74">= <expr pos:start="105:40" pos:end="105:74"><call pos:start="105:40" pos:end="105:74"><name pos:start="105:40" pos:end="105:66">av_buffersink_get_time_base</name><argument_list pos:start="105:67" pos:end="105:74">(<argument pos:start="105:68" pos:end="105:73"><expr pos:start="105:68" pos:end="105:73"><name pos:start="105:68" pos:end="105:73">filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="107:17" pos:end="107:47"><decl pos:start="107:17" pos:end="107:46"><type pos:start="107:17" pos:end="107:26"><name pos:start="107:17" pos:end="107:26">AVRational</name></type> <name pos:start="107:28" pos:end="107:29">tb</name> <init pos:start="107:31" pos:end="107:46">= <expr pos:start="107:33" pos:end="107:46"><name pos:start="107:33" pos:end="107:46"><name pos:start="107:33" pos:end="107:35">enc</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:46">time_base</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="109:17" pos:end="109:70"><decl pos:start="109:17" pos:end="109:69"><type pos:start="109:17" pos:end="109:19"><name pos:start="109:17" pos:end="109:19">int</name></type> <name pos:start="109:21" pos:end="109:30">extra_bits</name> <init pos:start="109:32" pos:end="109:69">= <expr pos:start="109:34" pos:end="109:69"><call pos:start="109:34" pos:end="109:69"><name pos:start="109:34" pos:end="109:40">av_clip</name><argument_list pos:start="109:41" pos:end="109:69">(<argument pos:start="109:42" pos:end="109:61"><expr pos:start="109:42" pos:end="109:61"><literal type="number" pos:start="109:42" pos:end="109:45">29</literal> <operator pos:start="109:45" pos:end="109:45">-</operator> <call pos:start="109:47" pos:end="109:61"><name pos:start="109:47" pos:end="109:53">av_log2</name><argument_list pos:start="109:54" pos:end="109:61">(<argument pos:start="109:55" pos:end="109:60"><expr pos:start="109:55" pos:end="109:60"><name pos:start="109:55" pos:end="109:60"><name pos:start="109:55" pos:end="109:56">tb</name><operator pos:start="109:57" pos:end="109:57">.</operator><name pos:start="109:58" pos:end="109:60">den</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:64" pos:end="109:64"><expr pos:start="109:64" pos:end="109:64"><literal type="number" pos:start="109:64" pos:end="109:64">0</literal></expr></argument>, <argument pos:start="109:67" pos:end="109:68"><expr pos:start="109:67" pos:end="109:68"><literal type="number" pos:start="109:67" pos:end="109:68">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="113:17" pos:end="113:38"><expr pos:start="113:17" pos:end="113:37"><name pos:start="113:17" pos:end="113:22"><name pos:start="113:17" pos:end="113:18">tb</name><operator pos:start="113:19" pos:end="113:19">.</operator><name pos:start="113:20" pos:end="113:22">den</name></name> <operator pos:start="113:24" pos:end="113:26">&lt;&lt;=</operator> <name pos:start="113:28" pos:end="113:37">extra_bits</name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="119:65"><expr pos:start="115:17" pos:end="119:64"><name pos:start="115:17" pos:end="115:25">float_pts</name> <operator pos:start="115:27" pos:end="115:27">=</operator>

                    <call pos:start="117:21" pos:end="117:68"><name pos:start="117:21" pos:end="117:32">av_rescale_q</name><argument_list pos:start="117:33" pos:end="117:68">(<argument pos:start="117:34" pos:end="117:52"><expr pos:start="117:34" pos:end="117:52"><name pos:start="117:34" pos:end="117:52"><name pos:start="117:34" pos:end="117:47">filtered_frame</name><operator pos:start="117:48" pos:end="117:49">-&gt;</operator><name pos:start="117:50" pos:end="117:52">pts</name></name></expr></argument>, <argument pos:start="117:55" pos:end="117:63"><expr pos:start="117:55" pos:end="117:63"><name pos:start="117:55" pos:end="117:63">filter_tb</name></expr></argument>, <argument pos:start="117:66" pos:end="117:67"><expr pos:start="117:66" pos:end="117:67"><name pos:start="117:66" pos:end="117:67">tb</name></expr></argument>)</argument_list></call> <operator pos:start="117:70" pos:end="117:70">-</operator>

                    <call pos:start="119:21" pos:end="119:64"><name pos:start="119:21" pos:end="119:32">av_rescale_q</name><argument_list pos:start="119:33" pos:end="119:64">(<argument pos:start="119:34" pos:end="119:43"><expr pos:start="119:34" pos:end="119:43"><name pos:start="119:34" pos:end="119:43">start_time</name></expr></argument>, <argument pos:start="119:46" pos:end="119:59"><expr pos:start="119:46" pos:end="119:59"><name pos:start="119:46" pos:end="119:59">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="119:62" pos:end="119:63"><expr pos:start="119:62" pos:end="119:63"><name pos:start="119:62" pos:end="119:63">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:45"><expr pos:start="121:17" pos:end="121:44"><name pos:start="121:17" pos:end="121:25">float_pts</name> <operator pos:start="121:27" pos:end="121:28">/=</operator> <literal type="number" pos:start="121:30" pos:end="121:30">1</literal> <operator pos:start="121:32" pos:end="121:33">&lt;&lt;</operator> <name pos:start="121:35" pos:end="121:44">extra_bits</name></expr>;</expr_stmt>

                <comment type="line" pos:start="123:17" pos:end="123:159">// avoid exact midoints to reduce the chance of rounding differences, this can be removed in case the fps code is changed to work with integers</comment>

                <expr_stmt pos:start="125:17" pos:end="125:63"><expr pos:start="125:17" pos:end="125:62"><name pos:start="125:17" pos:end="125:25">float_pts</name> <operator pos:start="125:27" pos:end="125:28">+=</operator> <call pos:start="125:30" pos:end="125:46"><name pos:start="125:30" pos:end="125:35">FFSIGN</name><argument_list pos:start="125:36" pos:end="125:46">(<argument pos:start="125:37" pos:end="125:45"><expr pos:start="125:37" pos:end="125:45"><name pos:start="125:37" pos:end="125:45">float_pts</name></expr></argument>)</argument_list></call> <operator pos:start="125:48" pos:end="125:48">*</operator> <literal type="number" pos:start="125:50" pos:end="125:52">1.0</literal> <operator pos:start="125:54" pos:end="125:54">/</operator> <operator pos:start="125:56" pos:end="125:56">(</operator><literal type="number" pos:start="125:57" pos:end="125:57">1</literal><operator pos:start="125:58" pos:end="125:59">&lt;&lt;</operator><literal type="number" pos:start="125:60" pos:end="125:61">17</literal><operator pos:start="125:62" pos:end="125:62">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="129:17" pos:end="133:77"><expr pos:start="129:17" pos:end="133:76"><name pos:start="129:17" pos:end="129:35"><name pos:start="129:17" pos:end="129:30">filtered_frame</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:35">pts</name></name> <operator pos:start="129:37" pos:end="129:37">=</operator>

                    <call pos:start="131:21" pos:end="131:80"><name pos:start="131:21" pos:end="131:32">av_rescale_q</name><argument_list pos:start="131:33" pos:end="131:80">(<argument pos:start="131:34" pos:end="131:52"><expr pos:start="131:34" pos:end="131:52"><name pos:start="131:34" pos:end="131:52"><name pos:start="131:34" pos:end="131:47">filtered_frame</name><operator pos:start="131:48" pos:end="131:49">-&gt;</operator><name pos:start="131:50" pos:end="131:52">pts</name></name></expr></argument>, <argument pos:start="131:55" pos:end="131:63"><expr pos:start="131:55" pos:end="131:63"><name pos:start="131:55" pos:end="131:63">filter_tb</name></expr></argument>, <argument pos:start="131:66" pos:end="131:79"><expr pos:start="131:66" pos:end="131:79"><name pos:start="131:66" pos:end="131:79"><name pos:start="131:66" pos:end="131:68">enc</name><operator pos:start="131:69" pos:end="131:70">-&gt;</operator><name pos:start="131:71" pos:end="131:79">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="131:82" pos:end="131:82">-</operator>

                    <call pos:start="133:21" pos:end="133:76"><name pos:start="133:21" pos:end="133:32">av_rescale_q</name><argument_list pos:start="133:33" pos:end="133:76">(<argument pos:start="133:34" pos:end="133:43"><expr pos:start="133:34" pos:end="133:43"><name pos:start="133:34" pos:end="133:43">start_time</name></expr></argument>, <argument pos:start="133:46" pos:end="133:59"><expr pos:start="133:46" pos:end="133:59"><name pos:start="133:46" pos:end="133:59">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="133:62" pos:end="133:75"><expr pos:start="133:62" pos:end="133:75"><name pos:start="133:62" pos:end="133:75"><name pos:start="133:62" pos:end="133:64">enc</name><operator pos:start="133:65" pos:end="133:66">-&gt;</operator><name pos:start="133:67" pos:end="133:75">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="137:13" pos:end="137:41">//if (ost-&gt;source_index &gt;= 0)</comment>

            <comment type="line" pos:start="139:13" pos:end="139:103">//    *filtered_frame= *input_streams[ost-&gt;source_index]-&gt;decoded_frame; //for me_threshold</comment>



            <switch pos:start="143:13" pos:end="195:13">switch <condition pos:start="143:20" pos:end="143:51">(<expr pos:start="143:21" pos:end="143:50"><call pos:start="143:21" pos:end="143:50"><name pos:start="143:21" pos:end="143:42">av_buffersink_get_type</name><argument_list pos:start="143:43" pos:end="143:50">(<argument pos:start="143:44" pos:end="143:49"><expr pos:start="143:44" pos:end="143:49"><name pos:start="143:44" pos:end="143:49">filter</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:53" pos:end="195:13">{<block_content pos:start="145:13" pos:end="193:30">

            <case pos:start="145:13" pos:end="145:36">case <expr pos:start="145:18" pos:end="145:35"><name pos:start="145:18" pos:end="145:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <if_stmt pos:start="147:17" pos:end="149:83"><if pos:start="147:17" pos:end="149:83">if <condition pos:start="147:20" pos:end="147:49">(<expr pos:start="147:21" pos:end="147:48"><operator pos:start="147:21" pos:end="147:21">!</operator><name pos:start="147:22" pos:end="147:48"><name pos:start="147:22" pos:end="147:24">ost</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:44">frame_aspect_ratio</name><operator pos:start="147:45" pos:end="147:45">.</operator><name pos:start="147:46" pos:end="147:48">num</name></name></expr>)</condition><block type="pseudo" pos:start="149:21" pos:end="149:83"><block_content pos:start="149:21" pos:end="149:83">

                    <expr_stmt pos:start="149:21" pos:end="149:83"><expr pos:start="149:21" pos:end="149:82"><name pos:start="149:21" pos:end="149:44"><name pos:start="149:21" pos:end="149:23">enc</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:44">sample_aspect_ratio</name></name> <operator pos:start="149:46" pos:end="149:46">=</operator> <name pos:start="149:48" pos:end="149:82"><name pos:start="149:48" pos:end="149:61">filtered_frame</name><operator pos:start="149:62" pos:end="149:63">-&gt;</operator><name pos:start="149:64" pos:end="149:82">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="153:17" pos:end="163:17"><if pos:start="153:17" pos:end="163:17">if <condition pos:start="153:20" pos:end="153:29">(<expr pos:start="153:21" pos:end="153:28"><name pos:start="153:21" pos:end="153:28">debug_ts</name></expr>)</condition> <block pos:start="153:31" pos:end="163:17">{<block_content pos:start="155:21" pos:end="161:68">

                    <expr_stmt pos:start="155:21" pos:end="161:68"><expr pos:start="155:21" pos:end="161:67"><call pos:start="155:21" pos:end="161:67"><name pos:start="155:21" pos:end="155:26">av_log</name><argument_list pos:start="155:27" pos:end="161:67">(<argument pos:start="155:28" pos:end="155:31"><expr pos:start="155:28" pos:end="155:31"><name pos:start="155:28" pos:end="155:31">NULL</name></expr></argument>, <argument pos:start="155:34" pos:end="155:44"><expr pos:start="155:34" pos:end="155:44"><name pos:start="155:34" pos:end="155:44">AV_LOG_INFO</name></expr></argument>, <argument pos:start="155:47" pos:end="155:103"><expr pos:start="155:47" pos:end="155:103"><literal type="string" pos:start="155:47" pos:end="155:103">"filter -&gt; pts:%s pts_time:%s exact:%f time_base:%d/%d\n"</literal></expr></argument>,

                            <argument pos:start="157:29" pos:end="157:58"><expr pos:start="157:29" pos:end="157:58"><call pos:start="157:29" pos:end="157:58"><name pos:start="157:29" pos:end="157:37">av_ts2str</name><argument_list pos:start="157:38" pos:end="157:58">(<argument pos:start="157:39" pos:end="157:57"><expr pos:start="157:39" pos:end="157:57"><name pos:start="157:39" pos:end="157:57"><name pos:start="157:39" pos:end="157:52">filtered_frame</name><operator pos:start="157:53" pos:end="157:54">-&gt;</operator><name pos:start="157:55" pos:end="157:57">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="157:61" pos:end="157:111"><expr pos:start="157:61" pos:end="157:111"><call pos:start="157:61" pos:end="157:111"><name pos:start="157:61" pos:end="157:73">av_ts2timestr</name><argument_list pos:start="157:74" pos:end="157:111">(<argument pos:start="157:75" pos:end="157:93"><expr pos:start="157:75" pos:end="157:93"><name pos:start="157:75" pos:end="157:93"><name pos:start="157:75" pos:end="157:88">filtered_frame</name><operator pos:start="157:89" pos:end="157:90">-&gt;</operator><name pos:start="157:91" pos:end="157:93">pts</name></name></expr></argument>, <argument pos:start="157:96" pos:end="157:110"><expr pos:start="157:96" pos:end="157:110"><operator pos:start="157:96" pos:end="157:96">&amp;</operator><name pos:start="157:97" pos:end="157:110"><name pos:start="157:97" pos:end="157:99">enc</name><operator pos:start="157:100" pos:end="157:101">-&gt;</operator><name pos:start="157:102" pos:end="157:110">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="159:29" pos:end="159:37"><expr pos:start="159:29" pos:end="159:37"><name pos:start="159:29" pos:end="159:37">float_pts</name></expr></argument>,

                            <argument pos:start="161:29" pos:end="161:46"><expr pos:start="161:29" pos:end="161:46"><name pos:start="161:29" pos:end="161:46"><name pos:start="161:29" pos:end="161:31">enc</name><operator pos:start="161:32" pos:end="161:33">-&gt;</operator><name pos:start="161:34" pos:end="161:42">time_base</name><operator pos:start="161:43" pos:end="161:43">.</operator><name pos:start="161:44" pos:end="161:46">num</name></name></expr></argument>, <argument pos:start="161:49" pos:end="161:66"><expr pos:start="161:49" pos:end="161:66"><name pos:start="161:49" pos:end="161:66"><name pos:start="161:49" pos:end="161:51">enc</name><operator pos:start="161:52" pos:end="161:53">-&gt;</operator><name pos:start="161:54" pos:end="161:62">time_base</name><operator pos:start="161:63" pos:end="161:63">.</operator><name pos:start="161:64" pos:end="161:66">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="167:17" pos:end="167:65"><expr pos:start="167:17" pos:end="167:64"><call pos:start="167:17" pos:end="167:64"><name pos:start="167:17" pos:end="167:28">do_video_out</name><argument_list pos:start="167:29" pos:end="167:64">(<argument pos:start="167:30" pos:end="167:31"><expr pos:start="167:30" pos:end="167:31"><name pos:start="167:30" pos:end="167:31">of</name></expr></argument>, <argument pos:start="167:34" pos:end="167:36"><expr pos:start="167:34" pos:end="167:36"><name pos:start="167:34" pos:end="167:36">ost</name></expr></argument>, <argument pos:start="167:39" pos:end="167:52"><expr pos:start="167:39" pos:end="167:52"><name pos:start="167:39" pos:end="167:52">filtered_frame</name></expr></argument>, <argument pos:start="167:55" pos:end="167:63"><expr pos:start="167:55" pos:end="167:63"><name pos:start="167:55" pos:end="167:63">float_pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="169:17" pos:end="169:22">break;</break>

            <case pos:start="171:13" pos:end="171:36">case <expr pos:start="171:18" pos:end="171:35"><name pos:start="171:18" pos:end="171:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <if_stmt pos:start="173:17" pos:end="183:17"><if pos:start="173:17" pos:end="183:17">if <condition pos:start="173:20" pos:end="175:75">(<expr pos:start="173:21" pos:end="175:74"><operator pos:start="173:21" pos:end="173:21">!</operator><operator pos:start="173:22" pos:end="173:22">(</operator><name pos:start="173:23" pos:end="173:46"><name pos:start="173:23" pos:end="173:25">enc</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:32">codec</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:46">capabilities</name></name> <operator pos:start="173:48" pos:end="173:48">&amp;</operator> <name pos:start="173:50" pos:end="173:74">AV_CODEC_CAP_PARAM_CHANGE</name><operator pos:start="173:75" pos:end="173:75">)</operator> <operator pos:start="173:77" pos:end="173:78">&amp;&amp;</operator>

                    <name pos:start="175:21" pos:end="175:33"><name pos:start="175:21" pos:end="175:23">enc</name><operator pos:start="175:24" pos:end="175:25">-&gt;</operator><name pos:start="175:26" pos:end="175:33">channels</name></name> <operator pos:start="175:35" pos:end="175:36">!=</operator> <call pos:start="175:38" pos:end="175:74"><name pos:start="175:38" pos:end="175:58">av_frame_get_channels</name><argument_list pos:start="175:59" pos:end="175:74">(<argument pos:start="175:60" pos:end="175:73"><expr pos:start="175:60" pos:end="175:73"><name pos:start="175:60" pos:end="175:73">filtered_frame</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="175:77" pos:end="183:17">{<block_content pos:start="177:21" pos:end="181:26">

                    <expr_stmt pos:start="177:21" pos:end="179:123"><expr pos:start="177:21" pos:end="179:122"><call pos:start="177:21" pos:end="179:122"><name pos:start="177:21" pos:end="177:26">av_log</name><argument_list pos:start="177:27" pos:end="179:122">(<argument pos:start="177:28" pos:end="177:31"><expr pos:start="177:28" pos:end="177:31"><name pos:start="177:28" pos:end="177:31">NULL</name></expr></argument>, <argument pos:start="177:34" pos:end="177:45"><expr pos:start="177:34" pos:end="177:45"><name pos:start="177:34" pos:end="177:45">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="179:28" pos:end="179:121"><expr pos:start="179:28" pos:end="179:121"><literal type="string" pos:start="179:28" pos:end="179:121">"Audio filter graph output is not normalized and encoder does not support parameter changes\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="181:21" pos:end="181:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:54"><expr pos:start="185:17" pos:end="185:53"><call pos:start="185:17" pos:end="185:53"><name pos:start="185:17" pos:end="185:28">do_audio_out</name><argument_list pos:start="185:29" pos:end="185:53">(<argument pos:start="185:30" pos:end="185:31"><expr pos:start="185:30" pos:end="185:31"><name pos:start="185:30" pos:end="185:31">of</name></expr></argument>, <argument pos:start="185:34" pos:end="185:36"><expr pos:start="185:34" pos:end="185:36"><name pos:start="185:34" pos:end="185:36">ost</name></expr></argument>, <argument pos:start="185:39" pos:end="185:52"><expr pos:start="185:39" pos:end="185:52"><name pos:start="185:39" pos:end="185:52">filtered_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="187:17" pos:end="187:22">break;</break>

            <default pos:start="189:13" pos:end="189:20">default:</default>

                <comment type="line" pos:start="191:17" pos:end="191:48">// TODO support subtitle filters</comment>

                <expr_stmt pos:start="193:17" pos:end="193:30"><expr pos:start="193:17" pos:end="193:29"><call pos:start="193:17" pos:end="193:29"><name pos:start="193:17" pos:end="193:26">av_assert0</name><argument_list pos:start="193:27" pos:end="193:29">(<argument pos:start="193:28" pos:end="193:28"><expr pos:start="193:28" pos:end="193:28"><literal type="number" pos:start="193:28" pos:end="193:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>



            <expr_stmt pos:start="199:13" pos:end="199:43"><expr pos:start="199:13" pos:end="199:42"><call pos:start="199:13" pos:end="199:42"><name pos:start="199:13" pos:end="199:26">av_frame_unref</name><argument_list pos:start="199:27" pos:end="199:42">(<argument pos:start="199:28" pos:end="199:41"><expr pos:start="199:28" pos:end="199:41"><name pos:start="199:28" pos:end="199:41">filtered_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></for>



    <return pos:start="207:5" pos:end="207:13">return <expr pos:start="207:12" pos:end="207:12"><literal type="number" pos:start="207:12" pos:end="207:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
