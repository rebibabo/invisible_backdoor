<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9004.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint16_t</name></type> <name pos:start="1:17" pos:end="1:38">handle_write_event_buf</name><parameter_list pos:start="1:39" pos:end="3:80">(<parameter pos:start="1:40" pos:end="1:60"><decl pos:start="1:40" pos:end="1:60"><type pos:start="1:40" pos:end="1:60"><name pos:start="1:40" pos:end="1:56">SCLPEventFacility</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">ef</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:67"><decl pos:start="3:40" pos:end="3:67"><type pos:start="3:40" pos:end="3:67"><name pos:start="3:40" pos:end="3:56">EventBufferHeader</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:67">event_buf</name></decl></parameter>, <parameter pos:start="3:70" pos:end="3:79"><decl pos:start="3:70" pos:end="3:79"><type pos:start="3:70" pos:end="3:79"><name pos:start="3:70" pos:end="3:73">SCCB</name> <modifier pos:start="3:75" pos:end="3:75">*</modifier></type><name pos:start="3:76" pos:end="3:79">sccb</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:14">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:15">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">BusChild</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">kid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">SCLPEvent</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:20">event</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">SCLPEventClass</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:22">ec</name></decl>;</decl_stmt>



    <macro pos:start="17:5" pos:end="17:57"><name pos:start="17:5" pos:end="17:18">QTAILQ_FOREACH</name><argument_list pos:start="17:19" pos:end="17:57">(<argument pos:start="17:20" pos:end="17:22">kid</argument>, <argument pos:start="17:25" pos:end="17:47">&amp;ef-&gt;sbus.qbus.children</argument>, <argument pos:start="17:50" pos:end="17:56">sibling</argument>)</argument_list></macro> <block pos:start="17:59" pos:end="39:5">{<block_content pos:start="19:9" pos:end="37:9">

        <decl_stmt pos:start="19:9" pos:end="19:39"><decl pos:start="19:9" pos:end="19:38"><type pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:19">DeviceState</name> <modifier pos:start="19:21" pos:end="19:21">*</modifier></type><name pos:start="19:22" pos:end="19:25">qdev</name> <init pos:start="19:27" pos:end="19:38">= <expr pos:start="19:29" pos:end="19:38"><name pos:start="19:29" pos:end="19:38"><name pos:start="19:29" pos:end="19:31">kid</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:38">child</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:13">event</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <operator pos:start="21:17" pos:end="21:17">(</operator><name pos:start="21:18" pos:end="21:26">SCLPEvent</name> <operator pos:start="21:28" pos:end="21:28">*</operator><operator pos:start="21:29" pos:end="21:29">)</operator> <name pos:start="21:31" pos:end="21:34">qdev</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:41"><expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:10">ec</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:40"><name pos:start="23:14" pos:end="23:33">SCLP_EVENT_GET_CLASS</name><argument_list pos:start="23:34" pos:end="23:40">(<argument pos:start="23:35" pos:end="23:39"><expr pos:start="23:35" pos:end="23:39"><name pos:start="23:35" pos:end="23:39">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:10">rc</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:37">SCLP_RC_INVALID_FUNCTION</name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="31:48">(<expr pos:start="29:13" pos:end="31:47"><name pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:14">ec</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:32">write_event_data</name></name> <operator pos:start="29:34" pos:end="29:35">&amp;&amp;</operator>

            <call pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:14">ec</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:26">event_type</name></name><argument_list pos:start="31:27" pos:end="31:28">()</argument_list></call> <operator pos:start="31:30" pos:end="31:31">==</operator> <name pos:start="31:33" pos:end="31:47"><name pos:start="31:33" pos:end="31:41">event_buf</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:47">type</name></name></expr>)</condition> <block pos:start="31:50" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:18">

            <expr_stmt pos:start="33:13" pos:end="33:56"><expr pos:start="33:13" pos:end="33:55"><name pos:start="33:13" pos:end="33:14">rc</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:55"><name pos:start="33:18" pos:end="33:37"><name pos:start="33:18" pos:end="33:19">ec</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:37">write_event_data</name></name><argument_list pos:start="33:38" pos:end="33:55">(<argument pos:start="33:39" pos:end="33:43"><expr pos:start="33:39" pos:end="33:43"><name pos:start="33:39" pos:end="33:43">event</name></expr></argument>, <argument pos:start="33:46" pos:end="33:54"><expr pos:start="33:46" pos:end="33:54"><name pos:start="33:46" pos:end="33:54">event_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <return pos:start="41:5" pos:end="41:14">return <expr pos:start="41:12" pos:end="41:13"><name pos:start="41:12" pos:end="41:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
