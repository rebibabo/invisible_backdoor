<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23717.c" pos:tabs="8"><function pos:start="1:1" pos:end="453:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">encode_q_branch</name><parameter_list pos:start="1:27" pos:end="1:67">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">SnowContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:52"><decl pos:start="1:44" pos:end="1:52"><type pos:start="1:44" pos:end="1:52"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:52">level</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:59"><decl pos:start="1:55" pos:end="1:59"><type pos:start="1:55" pos:end="1:59"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:59">x</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:66"><decl pos:start="1:62" pos:end="1:66"><type pos:start="1:62" pos:end="1:66"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:66">y</name></decl></parameter>)</parameter_list><block pos:start="1:68" pos:end="453:1">{<block_content pos:start="3:5" pos:end="451:5">

    <decl_stmt pos:start="3:5" pos:end="3:27"><decl pos:start="3:5" pos:end="3:26"><type pos:start="3:5" pos:end="3:11"><name pos:start="3:5" pos:end="3:11">uint8_t</name></type> <name pos:start="3:13" pos:end="3:26"><name pos:start="3:13" pos:end="3:20">p_buffer</name><index pos:start="3:21" pos:end="3:26">[<expr pos:start="3:22" pos:end="3:25"><literal type="number" pos:start="3:22" pos:end="3:25">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:26"><name pos:start="5:13" pos:end="5:20">i_buffer</name><index pos:start="5:21" pos:end="5:26">[<expr pos:start="5:22" pos:end="5:25"><literal type="number" pos:start="5:22" pos:end="5:25">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:43"><name pos:start="7:13" pos:end="7:19">p_state</name><index pos:start="7:20" pos:end="7:43">[<expr pos:start="7:21" pos:end="7:42"><sizeof pos:start="7:21" pos:end="7:42">sizeof<argument_list pos:start="7:27" pos:end="7:42">(<argument pos:start="7:28" pos:end="7:41"><expr pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:41">block_state</name></name></expr></argument>)</argument_list></sizeof></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:43"><name pos:start="9:13" pos:end="9:19">i_state</name><index pos:start="9:20" pos:end="9:43">[<expr pos:start="9:21" pos:end="9:42"><sizeof pos:start="9:21" pos:end="9:42">sizeof<argument_list pos:start="9:27" pos:end="9:42">(<argument pos:start="9:28" pos:end="9:41"><expr pos:start="9:28" pos:end="9:41"><name pos:start="9:28" pos:end="9:41"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:41">block_state</name></name></expr></argument>)</argument_list></sizeof></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">RangeCoder</name></type> <name pos:start="11:16" pos:end="11:17">pc</name></decl>, <decl pos:start="11:20" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:14"/><name pos:start="11:20" pos:end="11:21">ic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:18">pbbak</name><init pos:start="13:19" pos:end="13:35">= <expr pos:start="13:21" pos:end="13:35"><name pos:start="13:21" pos:end="13:35"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:24">c</name><operator pos:start="13:25" pos:end="13:25">.</operator><name pos:start="13:26" pos:end="13:35">bytestream</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:48"><decl pos:start="15:5" pos:end="15:47"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:24">pbbak_start</name><init pos:start="15:25" pos:end="15:47">= <expr pos:start="15:27" pos:end="15:47"><name pos:start="15:27" pos:end="15:47"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:30">c</name><operator pos:start="15:31" pos:end="15:31">.</operator><name pos:start="15:32" pos:end="15:47">bytestream_start</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:69"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">score</name></decl>, <decl pos:start="17:16" pos:end="17:21"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:16" pos:end="17:21">score2</name></decl>, <decl pos:start="17:24" pos:end="17:29"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:24" pos:end="17:29">iscore</name></decl>, <decl pos:start="17:32" pos:end="17:36"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:32" pos:end="17:36">i_len</name></decl>, <decl pos:start="17:39" pos:end="17:43"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:39" pos:end="17:43">p_len</name></decl>, <decl pos:start="17:46" pos:end="17:52"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:46" pos:end="17:52">block_s</name></decl>, <decl pos:start="17:55" pos:end="17:57"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:55" pos:end="17:57">sum</name></decl>, <decl pos:start="17:60" pos:end="17:68"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:60" pos:end="17:68">base_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:51"><decl pos:start="19:5" pos:end="19:50"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:15">w</name><init pos:start="19:16" pos:end="19:50">= <expr pos:start="19:18" pos:end="19:50"><name pos:start="19:18" pos:end="19:27"><name pos:start="19:18" pos:end="19:18">s</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:27">b_width</name></name>  <operator pos:start="19:30" pos:end="19:31">&lt;&lt;</operator> <name pos:start="19:33" pos:end="19:50"><name pos:start="19:33" pos:end="19:33">s</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:50">block_max_depth</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:51"><decl pos:start="21:5" pos:end="21:50"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:15">h</name><init pos:start="21:16" pos:end="21:50">= <expr pos:start="21:18" pos:end="21:50"><name pos:start="21:18" pos:end="21:28"><name pos:start="21:18" pos:end="21:18">s</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:28">b_height</name></name> <operator pos:start="21:30" pos:end="21:31">&lt;&lt;</operator> <name pos:start="21:33" pos:end="21:50"><name pos:start="21:33" pos:end="21:33">s</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:50">block_max_depth</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:52"><decl pos:start="23:5" pos:end="23:51"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:23">rem_depth</name><init pos:start="23:24" pos:end="23:51">= <expr pos:start="23:26" pos:end="23:51"><name pos:start="23:26" pos:end="23:43"><name pos:start="23:26" pos:end="23:26">s</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:43">block_max_depth</name></name> <operator pos:start="23:45" pos:end="23:45">-</operator> <name pos:start="23:47" pos:end="23:51">level</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:44"><decl pos:start="25:5" pos:end="25:43"><type pos:start="25:5" pos:end="25:13"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:13">int</name></type> <name pos:start="25:15" pos:end="25:19">index</name><init pos:start="25:20" pos:end="25:43">= <expr pos:start="25:22" pos:end="25:43"><operator pos:start="25:22" pos:end="25:22">(</operator><name pos:start="25:23" pos:end="25:23">x</name> <operator pos:start="25:25" pos:end="25:25">+</operator> <name pos:start="25:27" pos:end="25:27">y</name><operator pos:start="25:28" pos:end="25:28">*</operator><name pos:start="25:29" pos:end="25:29">w</name><operator pos:start="25:30" pos:end="25:30">)</operator> <operator pos:start="25:32" pos:end="25:33">&lt;&lt;</operator> <name pos:start="25:35" pos:end="25:43">rem_depth</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:49"><decl pos:start="27:5" pos:end="27:48"><type pos:start="27:5" pos:end="27:13"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:13">int</name></type> <name pos:start="27:15" pos:end="27:21">block_w</name><init pos:start="27:22" pos:end="27:48">= <expr pos:start="27:24" pos:end="27:48"><literal type="number" pos:start="27:24" pos:end="27:24">1</literal><operator pos:start="27:25" pos:end="27:26">&lt;&lt;</operator><operator pos:start="27:27" pos:end="27:27">(</operator><name pos:start="27:28" pos:end="27:39">LOG2_MB_SIZE</name> <operator pos:start="27:41" pos:end="27:41">-</operator> <name pos:start="27:43" pos:end="27:47">level</name><operator pos:start="27:48" pos:end="27:48">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:30"><decl pos:start="29:5" pos:end="29:29"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:11">trx</name><init pos:start="29:12" pos:end="29:29">= <expr pos:start="29:14" pos:end="29:29"><operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:15">x</name><operator pos:start="29:16" pos:end="29:16">+</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal><operator pos:start="29:18" pos:end="29:18">)</operator><operator pos:start="29:19" pos:end="29:20">&lt;&lt;</operator><name pos:start="29:21" pos:end="29:29">rem_depth</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:30"><decl pos:start="31:5" pos:end="31:29"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:11">try</name><init pos:start="31:12" pos:end="31:29">= <expr pos:start="31:14" pos:end="31:29"><operator pos:start="31:14" pos:end="31:14">(</operator><name pos:start="31:15" pos:end="31:15">y</name><operator pos:start="31:16" pos:end="31:16">+</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal><operator pos:start="31:18" pos:end="31:18">)</operator><operator pos:start="31:19" pos:end="31:20">&lt;&lt;</operator><name pos:start="31:21" pos:end="31:29">rem_depth</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:66"><decl pos:start="33:5" pos:end="33:65"><type pos:start="33:5" pos:end="33:21"><specifier pos:start="33:5" pos:end="33:9">const</specifier> <name pos:start="33:11" pos:end="33:19">BlockNode</name> <modifier pos:start="33:21" pos:end="33:21">*</modifier></type><name pos:start="33:22" pos:end="33:25">left</name>  <init pos:start="33:28" pos:end="33:65">= <expr pos:start="33:30" pos:end="33:65"><ternary pos:start="33:30" pos:end="33:65"><condition pos:start="33:30" pos:end="33:32"><expr pos:start="33:30" pos:end="33:30"><name pos:start="33:30" pos:end="33:30">x</name></expr> ?</condition><then pos:start="33:34" pos:end="33:51"> <expr pos:start="33:34" pos:end="33:51"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:51"><name pos:start="33:35" pos:end="33:35">s</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:42">block</name><index pos:start="33:43" pos:end="33:51">[<expr pos:start="33:44" pos:end="33:50"><name pos:start="33:44" pos:end="33:48">index</name><operator pos:start="33:49" pos:end="33:49">-</operator><literal type="number" pos:start="33:50" pos:end="33:50">1</literal></expr>]</index></name></expr> </then><else pos:start="33:53" pos:end="33:65">: <expr pos:start="33:55" pos:end="33:65"><operator pos:start="33:55" pos:end="33:55">&amp;</operator><name pos:start="33:56" pos:end="33:65">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:66"><decl pos:start="35:5" pos:end="35:65"><type pos:start="35:5" pos:end="35:21"><specifier pos:start="35:5" pos:end="35:9">const</specifier> <name pos:start="35:11" pos:end="35:19">BlockNode</name> <modifier pos:start="35:21" pos:end="35:21">*</modifier></type><name pos:start="35:22" pos:end="35:24">top</name>   <init pos:start="35:28" pos:end="35:65">= <expr pos:start="35:30" pos:end="35:65"><ternary pos:start="35:30" pos:end="35:65"><condition pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:30"><name pos:start="35:30" pos:end="35:30">y</name></expr> ?</condition><then pos:start="35:34" pos:end="35:51"> <expr pos:start="35:34" pos:end="35:51"><operator pos:start="35:34" pos:end="35:34">&amp;</operator><name pos:start="35:35" pos:end="35:51"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:42">block</name><index pos:start="35:43" pos:end="35:51">[<expr pos:start="35:44" pos:end="35:50"><name pos:start="35:44" pos:end="35:48">index</name><operator pos:start="35:49" pos:end="35:49">-</operator><name pos:start="35:50" pos:end="35:50">w</name></expr>]</index></name></expr> </then><else pos:start="35:53" pos:end="35:65">: <expr pos:start="35:55" pos:end="35:65"><operator pos:start="35:55" pos:end="35:55">&amp;</operator><name pos:start="35:56" pos:end="35:65">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:70"><decl pos:start="37:5" pos:end="37:69"><type pos:start="37:5" pos:end="37:21"><specifier pos:start="37:5" pos:end="37:9">const</specifier> <name pos:start="37:11" pos:end="37:19">BlockNode</name> <modifier pos:start="37:21" pos:end="37:21">*</modifier></type><name pos:start="37:22" pos:end="37:26">right</name> <init pos:start="37:28" pos:end="37:69">= <expr pos:start="37:30" pos:end="37:69"><ternary pos:start="37:30" pos:end="37:69"><condition pos:start="37:30" pos:end="37:36"><expr pos:start="37:30" pos:end="37:34"><name pos:start="37:30" pos:end="37:32">trx</name><operator pos:start="37:33" pos:end="37:33">&lt;</operator><name pos:start="37:34" pos:end="37:34">w</name></expr> ?</condition><then pos:start="37:38" pos:end="37:55"> <expr pos:start="37:38" pos:end="37:55"><operator pos:start="37:38" pos:end="37:38">&amp;</operator><name pos:start="37:39" pos:end="37:55"><name pos:start="37:39" pos:end="37:39">s</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:46">block</name><index pos:start="37:47" pos:end="37:55">[<expr pos:start="37:48" pos:end="37:54"><name pos:start="37:48" pos:end="37:52">index</name><operator pos:start="37:53" pos:end="37:53">+</operator><literal type="number" pos:start="37:54" pos:end="37:54">1</literal></expr>]</index></name></expr> </then><else pos:start="37:57" pos:end="37:69">: <expr pos:start="37:59" pos:end="37:69"><operator pos:start="37:59" pos:end="37:59">&amp;</operator><name pos:start="37:60" pos:end="37:69">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:70"><decl pos:start="39:5" pos:end="39:69"><type pos:start="39:5" pos:end="39:21"><specifier pos:start="39:5" pos:end="39:9">const</specifier> <name pos:start="39:11" pos:end="39:19">BlockNode</name> <modifier pos:start="39:21" pos:end="39:21">*</modifier></type><name pos:start="39:22" pos:end="39:27">bottom</name><init pos:start="39:28" pos:end="39:69">= <expr pos:start="39:30" pos:end="39:69"><ternary pos:start="39:30" pos:end="39:69"><condition pos:start="39:30" pos:end="39:36"><expr pos:start="39:30" pos:end="39:34"><name pos:start="39:30" pos:end="39:32">try</name><operator pos:start="39:33" pos:end="39:33">&lt;</operator><name pos:start="39:34" pos:end="39:34">h</name></expr> ?</condition><then pos:start="39:38" pos:end="39:55"> <expr pos:start="39:38" pos:end="39:55"><operator pos:start="39:38" pos:end="39:38">&amp;</operator><name pos:start="39:39" pos:end="39:55"><name pos:start="39:39" pos:end="39:39">s</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:46">block</name><index pos:start="39:47" pos:end="39:55">[<expr pos:start="39:48" pos:end="39:54"><name pos:start="39:48" pos:end="39:52">index</name><operator pos:start="39:53" pos:end="39:53">+</operator><name pos:start="39:54" pos:end="39:54">w</name></expr>]</index></name></expr> </then><else pos:start="39:57" pos:end="39:69">: <expr pos:start="39:59" pos:end="39:69"><operator pos:start="39:59" pos:end="39:59">&amp;</operator><name pos:start="39:60" pos:end="39:69">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:66"><decl pos:start="41:5" pos:end="41:65"><type pos:start="41:5" pos:end="41:21"><specifier pos:start="41:5" pos:end="41:9">const</specifier> <name pos:start="41:11" pos:end="41:19">BlockNode</name> <modifier pos:start="41:21" pos:end="41:21">*</modifier></type><name pos:start="41:22" pos:end="41:23">tl</name>    <init pos:start="41:28" pos:end="41:65">= <expr pos:start="41:30" pos:end="41:65"><ternary pos:start="41:30" pos:end="41:65"><condition pos:start="41:30" pos:end="41:37"><expr pos:start="41:30" pos:end="41:35"><name pos:start="41:30" pos:end="41:30">y</name> <operator pos:start="41:32" pos:end="41:33">&amp;&amp;</operator> <name pos:start="41:35" pos:end="41:35">x</name></expr> ?</condition><then pos:start="41:39" pos:end="41:58"> <expr pos:start="41:39" pos:end="41:58"><operator pos:start="41:39" pos:end="41:39">&amp;</operator><name pos:start="41:40" pos:end="41:58"><name pos:start="41:40" pos:end="41:40">s</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:47">block</name><index pos:start="41:48" pos:end="41:58">[<expr pos:start="41:49" pos:end="41:57"><name pos:start="41:49" pos:end="41:53">index</name><operator pos:start="41:54" pos:end="41:54">-</operator><name pos:start="41:55" pos:end="41:55">w</name><operator pos:start="41:56" pos:end="41:56">-</operator><literal type="number" pos:start="41:57" pos:end="41:57">1</literal></expr>]</index></name></expr> </then><else pos:start="41:60" pos:end="41:65">: <expr pos:start="41:62" pos:end="41:65"><name pos:start="41:62" pos:end="41:65">left</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:107"><decl pos:start="43:5" pos:end="43:106"><type pos:start="43:5" pos:end="43:21"><specifier pos:start="43:5" pos:end="43:9">const</specifier> <name pos:start="43:11" pos:end="43:19">BlockNode</name> <modifier pos:start="43:21" pos:end="43:21">*</modifier></type><name pos:start="43:22" pos:end="43:23">tr</name>    <init pos:start="43:28" pos:end="43:106">= <expr pos:start="43:30" pos:end="43:106"><ternary pos:start="43:30" pos:end="43:106"><condition pos:start="43:30" pos:end="43:67"><expr pos:start="43:30" pos:end="43:65"><name pos:start="43:30" pos:end="43:30">y</name> <operator pos:start="43:32" pos:end="43:33">&amp;&amp;</operator> <name pos:start="43:35" pos:end="43:37">trx</name><operator pos:start="43:38" pos:end="43:38">&lt;</operator><name pos:start="43:39" pos:end="43:39">w</name> <operator pos:start="43:41" pos:end="43:42">&amp;&amp;</operator> <operator pos:start="43:44" pos:end="43:44">(</operator><operator pos:start="43:45" pos:end="43:45">(</operator><name pos:start="43:46" pos:end="43:46">x</name><operator pos:start="43:47" pos:end="43:47">&amp;</operator><literal type="number" pos:start="43:48" pos:end="43:48">1</literal><operator pos:start="43:49" pos:end="43:49">)</operator><operator pos:start="43:50" pos:end="43:51">==</operator><literal type="number" pos:start="43:52" pos:end="43:52">0</literal> <operator pos:start="43:54" pos:end="43:55">||</operator> <name pos:start="43:57" pos:end="43:61">level</name><operator pos:start="43:62" pos:end="43:63">==</operator><literal type="number" pos:start="43:64" pos:end="43:64">0</literal><operator pos:start="43:65" pos:end="43:65">)</operator></expr> ?</condition><then pos:start="43:69" pos:end="43:101"> <expr pos:start="43:69" pos:end="43:101"><operator pos:start="43:69" pos:end="43:69">&amp;</operator><name pos:start="43:70" pos:end="43:101"><name pos:start="43:70" pos:end="43:70">s</name><operator pos:start="43:71" pos:end="43:72">-&gt;</operator><name pos:start="43:73" pos:end="43:77">block</name><index pos:start="43:78" pos:end="43:101">[<expr pos:start="43:79" pos:end="43:100"><name pos:start="43:79" pos:end="43:83">index</name><operator pos:start="43:84" pos:end="43:84">-</operator><name pos:start="43:85" pos:end="43:85">w</name><operator pos:start="43:86" pos:end="43:86">+</operator><operator pos:start="43:87" pos:end="43:87">(</operator><literal type="number" pos:start="43:88" pos:end="43:88">1</literal><operator pos:start="43:89" pos:end="43:90">&lt;&lt;</operator><name pos:start="43:91" pos:end="43:99">rem_depth</name><operator pos:start="43:100" pos:end="43:100">)</operator></expr>]</index></name></expr> </then><else pos:start="43:103" pos:end="43:106">: <expr pos:start="43:105" pos:end="43:106"><name pos:start="43:105" pos:end="43:106">tl</name></expr></else></ternary></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="43:109" pos:end="43:122">//FIXME use lt</comment>

    <decl_stmt pos:start="45:5" pos:end="45:28"><decl pos:start="45:5" pos:end="45:27"><type pos:start="45:5" pos:end="45:7"><name pos:start="45:5" pos:end="45:7">int</name></type> <name pos:start="45:9" pos:end="45:10">pl</name> <init pos:start="45:12" pos:end="45:27">= <expr pos:start="45:14" pos:end="45:27"><name pos:start="45:14" pos:end="45:27"><name pos:start="45:14" pos:end="45:17">left</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:24">color</name><index pos:start="45:25" pos:end="45:27">[<expr pos:start="45:26" pos:end="45:26"><literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:28"><decl pos:start="47:5" pos:end="47:27"><type pos:start="47:5" pos:end="47:7"><name pos:start="47:5" pos:end="47:7">int</name></type> <name pos:start="47:9" pos:end="47:11">pcb</name><init pos:start="47:12" pos:end="47:27">= <expr pos:start="47:14" pos:end="47:27"><name pos:start="47:14" pos:end="47:27"><name pos:start="47:14" pos:end="47:17">left</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:24">color</name><index pos:start="47:25" pos:end="47:27">[<expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:28"><decl pos:start="49:5" pos:end="49:27"><type pos:start="49:5" pos:end="49:7"><name pos:start="49:5" pos:end="49:7">int</name></type> <name pos:start="49:9" pos:end="49:11">pcr</name><init pos:start="49:12" pos:end="49:27">= <expr pos:start="49:14" pos:end="49:27"><name pos:start="49:14" pos:end="49:27"><name pos:start="49:14" pos:end="49:17">left</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:24">color</name><index pos:start="49:25" pos:end="49:27">[<expr pos:start="49:26" pos:end="49:26"><literal type="number" pos:start="49:26" pos:end="49:26">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:17"><decl pos:start="51:5" pos:end="51:11"><type pos:start="51:5" pos:end="51:7"><name pos:start="51:5" pos:end="51:7">int</name></type> <name pos:start="51:9" pos:end="51:11">pmx</name></decl>, <decl pos:start="51:14" pos:end="51:16"><type ref="prev" pos:start="51:5" pos:end="51:7"/><name pos:start="51:14" pos:end="51:16">pmy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="53:19"><decl pos:start="53:5" pos:end="53:12"><type pos:start="53:5" pos:end="53:7"><name pos:start="53:5" pos:end="53:7">int</name></type> <name pos:start="53:9" pos:end="53:10">mx</name><init pos:start="53:11" pos:end="53:12">=<expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr></init></decl>, <decl pos:start="53:15" pos:end="53:18"><type ref="prev" pos:start="53:5" pos:end="53:7"/><name pos:start="53:15" pos:end="53:16">my</name><init pos:start="53:17" pos:end="53:18">=<expr pos:start="53:18" pos:end="53:18"><literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="55:5" pos:end="55:16"><decl pos:start="55:5" pos:end="55:9"><type pos:start="55:5" pos:end="55:7"><name pos:start="55:5" pos:end="55:7">int</name></type> <name pos:start="55:9" pos:end="55:9">l</name></decl>,<decl pos:start="55:11" pos:end="55:12"><type ref="prev" pos:start="55:5" pos:end="55:7"/><name pos:start="55:11" pos:end="55:12">cr</name></decl>,<decl pos:start="55:14" pos:end="55:15"><type ref="prev" pos:start="55:5" pos:end="55:7"/><name pos:start="55:14" pos:end="55:15">cb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="57:54"><decl pos:start="57:5" pos:end="57:53"><type pos:start="57:5" pos:end="57:13"><specifier pos:start="57:5" pos:end="57:9">const</specifier> <name pos:start="57:11" pos:end="57:13">int</name></type> <name pos:start="57:15" pos:end="57:20">stride</name><init pos:start="57:21" pos:end="57:53">= <expr pos:start="57:23" pos:end="57:53"><name pos:start="57:23" pos:end="57:53"><name pos:start="57:23" pos:end="57:23">s</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:40">current_picture</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:50">linesize</name><index pos:start="57:51" pos:end="57:53">[<expr pos:start="57:52" pos:end="57:52"><literal type="number" pos:start="57:52" pos:end="57:52">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="59:5" pos:end="59:56"><decl pos:start="59:5" pos:end="59:55"><type pos:start="59:5" pos:end="59:13"><specifier pos:start="59:5" pos:end="59:9">const</specifier> <name pos:start="59:11" pos:end="59:13">int</name></type> <name pos:start="59:15" pos:end="59:22">uvstride</name><init pos:start="59:23" pos:end="59:55">= <expr pos:start="59:25" pos:end="59:55"><name pos:start="59:25" pos:end="59:55"><name pos:start="59:25" pos:end="59:25">s</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:42">current_picture</name><operator pos:start="59:43" pos:end="59:44">-&gt;</operator><name pos:start="59:45" pos:end="59:52">linesize</name><index pos:start="59:53" pos:end="59:55">[<expr pos:start="59:54" pos:end="59:54"><literal type="number" pos:start="59:54" pos:end="59:54">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="61:5" pos:end="65:138"><decl pos:start="61:5" pos:end="65:137"><type pos:start="61:5" pos:end="61:13"><name pos:start="61:5" pos:end="61:11">uint8_t</name> <modifier pos:start="61:13" pos:end="61:13">*</modifier></type><name pos:start="61:14" pos:end="61:28"><name pos:start="61:14" pos:end="61:25">current_data</name><index pos:start="61:26" pos:end="61:28">[<expr pos:start="61:27" pos:end="61:27"><literal type="number" pos:start="61:27" pos:end="61:27">3</literal></expr>]</index></name><init pos:start="61:29" pos:end="65:137">= <expr pos:start="61:31" pos:end="65:137"><block pos:start="61:31" pos:end="65:137">{ <expr pos:start="61:33" pos:end="61:84"><name pos:start="61:33" pos:end="61:57"><name pos:start="61:33" pos:end="61:33">s</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:48">input_picture</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:54">data</name><index pos:start="61:55" pos:end="61:57">[<expr pos:start="61:56" pos:end="61:56"><literal type="number" pos:start="61:56" pos:end="61:56">0</literal></expr>]</index></name> <operator pos:start="61:59" pos:end="61:59">+</operator> <operator pos:start="61:61" pos:end="61:61">(</operator><name pos:start="61:62" pos:end="61:62">x</name> <operator pos:start="61:64" pos:end="61:64">+</operator> <name pos:start="61:66" pos:end="61:66">y</name><operator pos:start="61:67" pos:end="61:67">*</operator>  <name pos:start="61:70" pos:end="61:75">stride</name><operator pos:start="61:76" pos:end="61:76">)</operator><operator pos:start="61:77" pos:end="61:77">*</operator><name pos:start="61:78" pos:end="61:84">block_w</name></expr>,

                                <expr pos:start="63:33" pos:end="63:136"><name pos:start="63:33" pos:end="63:57"><name pos:start="63:33" pos:end="63:33">s</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:48">input_picture</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:54">data</name><index pos:start="63:55" pos:end="63:57">[<expr pos:start="63:56" pos:end="63:56"><literal type="number" pos:start="63:56" pos:end="63:56">1</literal></expr>]</index></name> <operator pos:start="63:59" pos:end="63:59">+</operator> <operator pos:start="63:61" pos:end="63:61">(</operator><operator pos:start="63:62" pos:end="63:62">(</operator><name pos:start="63:63" pos:end="63:63">x</name><operator pos:start="63:64" pos:end="63:64">*</operator><name pos:start="63:65" pos:end="63:71">block_w</name><operator pos:start="63:72" pos:end="63:72">)</operator><operator pos:start="63:73" pos:end="63:74">&gt;&gt;</operator><name pos:start="63:75" pos:end="63:91"><name pos:start="63:75" pos:end="63:75">s</name><operator pos:start="63:76" pos:end="63:77">-&gt;</operator><name pos:start="63:78" pos:end="63:91">chroma_h_shift</name></name><operator pos:start="63:92" pos:end="63:92">)</operator> <operator pos:start="63:94" pos:end="63:94">+</operator> <operator pos:start="63:96" pos:end="63:96">(</operator><operator pos:start="63:97" pos:end="63:97">(</operator><name pos:start="63:98" pos:end="63:98">y</name><operator pos:start="63:99" pos:end="63:99">*</operator><name pos:start="63:100" pos:end="63:107">uvstride</name><operator pos:start="63:108" pos:end="63:108">*</operator><name pos:start="63:109" pos:end="63:115">block_w</name><operator pos:start="63:116" pos:end="63:116">)</operator><operator pos:start="63:117" pos:end="63:118">&gt;&gt;</operator><name pos:start="63:119" pos:end="63:135"><name pos:start="63:119" pos:end="63:119">s</name><operator pos:start="63:120" pos:end="63:121">-&gt;</operator><name pos:start="63:122" pos:end="63:135">chroma_v_shift</name></name><operator pos:start="63:136" pos:end="63:136">)</operator></expr>,

                                <expr pos:start="65:33" pos:end="65:136"><name pos:start="65:33" pos:end="65:57"><name pos:start="65:33" pos:end="65:33">s</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:48">input_picture</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:54">data</name><index pos:start="65:55" pos:end="65:57">[<expr pos:start="65:56" pos:end="65:56"><literal type="number" pos:start="65:56" pos:end="65:56">2</literal></expr>]</index></name> <operator pos:start="65:59" pos:end="65:59">+</operator> <operator pos:start="65:61" pos:end="65:61">(</operator><operator pos:start="65:62" pos:end="65:62">(</operator><name pos:start="65:63" pos:end="65:63">x</name><operator pos:start="65:64" pos:end="65:64">*</operator><name pos:start="65:65" pos:end="65:71">block_w</name><operator pos:start="65:72" pos:end="65:72">)</operator><operator pos:start="65:73" pos:end="65:74">&gt;&gt;</operator><name pos:start="65:75" pos:end="65:91"><name pos:start="65:75" pos:end="65:75">s</name><operator pos:start="65:76" pos:end="65:77">-&gt;</operator><name pos:start="65:78" pos:end="65:91">chroma_h_shift</name></name><operator pos:start="65:92" pos:end="65:92">)</operator> <operator pos:start="65:94" pos:end="65:94">+</operator> <operator pos:start="65:96" pos:end="65:96">(</operator><operator pos:start="65:97" pos:end="65:97">(</operator><name pos:start="65:98" pos:end="65:98">y</name><operator pos:start="65:99" pos:end="65:99">*</operator><name pos:start="65:100" pos:end="65:107">uvstride</name><operator pos:start="65:108" pos:end="65:108">*</operator><name pos:start="65:109" pos:end="65:115">block_w</name><operator pos:start="65:116" pos:end="65:116">)</operator><operator pos:start="65:117" pos:end="65:118">&gt;&gt;</operator><name pos:start="65:119" pos:end="65:135"><name pos:start="65:119" pos:end="65:119">s</name><operator pos:start="65:120" pos:end="65:121">-&gt;</operator><name pos:start="65:122" pos:end="65:135">chroma_v_shift</name></name><operator pos:start="65:136" pos:end="65:136">)</operator></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="67:5" pos:end="67:17"><decl pos:start="67:5" pos:end="67:16"><type pos:start="67:5" pos:end="67:7"><name pos:start="67:5" pos:end="67:7">int</name></type> <name pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:9">P</name><index pos:start="67:10" pos:end="67:13">[<expr pos:start="67:11" pos:end="67:12"><literal type="number" pos:start="67:11" pos:end="67:12">10</literal></expr>]</index><index pos:start="67:14" pos:end="67:16">[<expr pos:start="67:15" pos:end="67:15"><literal type="number" pos:start="67:15" pos:end="67:15">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="69:5" pos:end="69:26"><decl pos:start="69:5" pos:end="69:25"><type pos:start="69:5" pos:end="69:11"><name pos:start="69:5" pos:end="69:11">int16_t</name></type> <name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:19">last_mv</name><index pos:start="69:20" pos:end="69:22">[<expr pos:start="69:21" pos:end="69:21"><literal type="number" pos:start="69:21" pos:end="69:21">3</literal></expr>]</index><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><literal type="number" pos:start="69:24" pos:end="69:24">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="71:5" pos:end="71:55"><decl pos:start="71:5" pos:end="71:54"><type pos:start="71:5" pos:end="71:7"><name pos:start="71:5" pos:end="71:7">int</name></type> <name pos:start="71:9" pos:end="71:12">qpel</name><init pos:start="71:13" pos:end="71:54">= <expr pos:start="71:15" pos:end="71:54"><operator pos:start="71:15" pos:end="71:15">!</operator><operator pos:start="71:16" pos:end="71:16">!</operator><operator pos:start="71:17" pos:end="71:17">(</operator><name pos:start="71:18" pos:end="71:32"><name pos:start="71:18" pos:end="71:18">s</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:25">avctx</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:32">flags</name></name> <operator pos:start="71:34" pos:end="71:34">&amp;</operator> <name pos:start="71:36" pos:end="71:53">AV_CODEC_FLAG_QPEL</name><operator pos:start="71:54" pos:end="71:54">)</operator></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="71:57" pos:end="71:64">//unused</comment>

    <decl_stmt pos:start="73:5" pos:end="73:28"><decl pos:start="73:5" pos:end="73:27"><type pos:start="73:5" pos:end="73:13"><specifier pos:start="73:5" pos:end="73:9">const</specifier> <name pos:start="73:11" pos:end="73:13">int</name></type> <name pos:start="73:15" pos:end="73:19">shift</name><init pos:start="73:20" pos:end="73:27">= <expr pos:start="73:22" pos:end="73:27"><literal type="number" pos:start="73:22" pos:end="73:23">1</literal><operator pos:start="73:23" pos:end="73:23">+</operator><name pos:start="73:24" pos:end="73:27">qpel</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="75:5" pos:end="75:34"><decl pos:start="75:5" pos:end="75:33"><type pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:20">MotionEstContext</name> <modifier pos:start="75:22" pos:end="75:22">*</modifier></type><name pos:start="75:23" pos:end="75:23">c</name><init pos:start="75:24" pos:end="75:33">= <expr pos:start="75:26" pos:end="75:33"><operator pos:start="75:26" pos:end="75:26">&amp;</operator><name pos:start="75:27" pos:end="75:33"><name pos:start="75:27" pos:end="75:27">s</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:30">m</name><operator pos:start="75:31" pos:end="75:31">.</operator><name pos:start="75:32" pos:end="75:33">me</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="77:5" pos:end="77:64"><decl pos:start="77:5" pos:end="77:63"><type pos:start="77:5" pos:end="77:7"><name pos:start="77:5" pos:end="77:7">int</name></type> <name pos:start="77:9" pos:end="77:19">ref_context</name><init pos:start="77:20" pos:end="77:63">= <expr pos:start="77:22" pos:end="77:63"><call pos:start="77:22" pos:end="77:41"><name pos:start="77:22" pos:end="77:28">av_log2</name><argument_list pos:start="77:29" pos:end="77:41">(<argument pos:start="77:30" pos:end="77:40"><expr pos:start="77:30" pos:end="77:40"><literal type="number" pos:start="77:30" pos:end="77:30">2</literal><operator pos:start="77:31" pos:end="77:31">*</operator><name pos:start="77:32" pos:end="77:40"><name pos:start="77:32" pos:end="77:35">left</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:40">ref</name></name></expr></argument>)</argument_list></call> <operator pos:start="77:43" pos:end="77:43">+</operator> <call pos:start="77:45" pos:end="77:63"><name pos:start="77:45" pos:end="77:51">av_log2</name><argument_list pos:start="77:52" pos:end="77:63">(<argument pos:start="77:53" pos:end="77:62"><expr pos:start="77:53" pos:end="77:62"><literal type="number" pos:start="77:53" pos:end="77:53">2</literal><operator pos:start="77:54" pos:end="77:54">*</operator><name pos:start="77:55" pos:end="77:62"><name pos:start="77:55" pos:end="77:57">top</name><operator pos:start="77:58" pos:end="77:59">-&gt;</operator><name pos:start="77:60" pos:end="77:62">ref</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="79:5" pos:end="79:57"><decl pos:start="79:5" pos:end="79:56"><type pos:start="79:5" pos:end="79:7"><name pos:start="79:5" pos:end="79:7">int</name></type> <name pos:start="79:9" pos:end="79:18">mx_context</name><init pos:start="79:19" pos:end="79:56">= <expr pos:start="79:21" pos:end="79:56"><call pos:start="79:21" pos:end="79:56"><name pos:start="79:21" pos:end="79:27">av_log2</name><argument_list pos:start="79:28" pos:end="79:56">(<argument pos:start="79:29" pos:end="79:55"><expr pos:start="79:29" pos:end="79:55"><literal type="number" pos:start="79:29" pos:end="79:29">2</literal><operator pos:start="79:30" pos:end="79:30">*</operator><call pos:start="79:31" pos:end="79:55"><name pos:start="79:31" pos:end="79:35">FFABS</name><argument_list pos:start="79:36" pos:end="79:55">(<argument pos:start="79:37" pos:end="79:54"><expr pos:start="79:37" pos:end="79:54"><name pos:start="79:37" pos:end="79:44"><name pos:start="79:37" pos:end="79:40">left</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:44">mx</name></name> <operator pos:start="79:46" pos:end="79:46">-</operator> <name pos:start="79:48" pos:end="79:54"><name pos:start="79:48" pos:end="79:50">top</name><operator pos:start="79:51" pos:end="79:52">-&gt;</operator><name pos:start="79:53" pos:end="79:54">mx</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="81:5" pos:end="81:57"><decl pos:start="81:5" pos:end="81:56"><type pos:start="81:5" pos:end="81:7"><name pos:start="81:5" pos:end="81:7">int</name></type> <name pos:start="81:9" pos:end="81:18">my_context</name><init pos:start="81:19" pos:end="81:56">= <expr pos:start="81:21" pos:end="81:56"><call pos:start="81:21" pos:end="81:56"><name pos:start="81:21" pos:end="81:27">av_log2</name><argument_list pos:start="81:28" pos:end="81:56">(<argument pos:start="81:29" pos:end="81:55"><expr pos:start="81:29" pos:end="81:55"><literal type="number" pos:start="81:29" pos:end="81:29">2</literal><operator pos:start="81:30" pos:end="81:30">*</operator><call pos:start="81:31" pos:end="81:55"><name pos:start="81:31" pos:end="81:35">FFABS</name><argument_list pos:start="81:36" pos:end="81:55">(<argument pos:start="81:37" pos:end="81:54"><expr pos:start="81:37" pos:end="81:54"><name pos:start="81:37" pos:end="81:44"><name pos:start="81:37" pos:end="81:40">left</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:44">my</name></name> <operator pos:start="81:46" pos:end="81:46">-</operator> <name pos:start="81:48" pos:end="81:54"><name pos:start="81:48" pos:end="81:50">top</name><operator pos:start="81:51" pos:end="81:52">-&gt;</operator><name pos:start="81:53" pos:end="81:54">my</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="83:5" pos:end="83:72"><decl pos:start="83:5" pos:end="83:71"><type pos:start="83:5" pos:end="83:7"><name pos:start="83:5" pos:end="83:7">int</name></type> <name pos:start="83:9" pos:end="83:17">s_context</name><init pos:start="83:18" pos:end="83:71">= <expr pos:start="83:20" pos:end="83:71"><literal type="number" pos:start="83:20" pos:end="83:20">2</literal><operator pos:start="83:21" pos:end="83:21">*</operator><name pos:start="83:22" pos:end="83:32"><name pos:start="83:22" pos:end="83:25">left</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:32">level</name></name> <operator pos:start="83:34" pos:end="83:34">+</operator> <literal type="number" pos:start="83:36" pos:end="83:36">2</literal><operator pos:start="83:37" pos:end="83:37">*</operator><name pos:start="83:38" pos:end="83:47"><name pos:start="83:38" pos:end="83:40">top</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:47">level</name></name> <operator pos:start="83:49" pos:end="83:49">+</operator> <name pos:start="83:51" pos:end="83:59"><name pos:start="83:51" pos:end="83:52">tl</name><operator pos:start="83:53" pos:end="83:54">-&gt;</operator><name pos:start="83:55" pos:end="83:59">level</name></name> <operator pos:start="83:61" pos:end="83:61">+</operator> <name pos:start="83:63" pos:end="83:71"><name pos:start="83:63" pos:end="83:64">tr</name><operator pos:start="83:65" pos:end="83:66">-&gt;</operator><name pos:start="83:67" pos:end="83:71">level</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="85:5" pos:end="85:49"><decl pos:start="85:5" pos:end="85:11"><type pos:start="85:5" pos:end="85:7"><name pos:start="85:5" pos:end="85:7">int</name></type> <name pos:start="85:9" pos:end="85:11">ref</name></decl>, <decl pos:start="85:14" pos:end="85:21"><type ref="prev" pos:start="85:5" pos:end="85:7"/><name pos:start="85:14" pos:end="85:21">best_ref</name></decl>, <decl pos:start="85:24" pos:end="85:32"><type ref="prev" pos:start="85:5" pos:end="85:7"/><name pos:start="85:24" pos:end="85:32">ref_score</name></decl>, <decl pos:start="85:35" pos:end="85:40"><type ref="prev" pos:start="85:5" pos:end="85:7"/><name pos:start="85:35" pos:end="85:40">ref_mx</name></decl>, <decl pos:start="85:43" pos:end="85:48"><type ref="prev" pos:start="85:5" pos:end="85:7"/><name pos:start="85:43" pos:end="85:48">ref_my</name></decl>;</decl_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:46"><expr pos:start="89:5" pos:end="89:45"><call pos:start="89:5" pos:end="89:45"><name pos:start="89:5" pos:end="89:14">av_assert0</name><argument_list pos:start="89:15" pos:end="89:45">(<argument pos:start="89:16" pos:end="89:44"><expr pos:start="89:16" pos:end="89:44"><sizeof pos:start="89:16" pos:end="89:37">sizeof<argument_list pos:start="89:22" pos:end="89:37">(<argument pos:start="89:23" pos:end="89:36"><expr pos:start="89:23" pos:end="89:36"><name pos:start="89:23" pos:end="89:36"><name pos:start="89:23" pos:end="89:23">s</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:36">block_state</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="89:39" pos:end="89:40">&gt;=</operator> <literal type="number" pos:start="89:42" pos:end="89:44">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if<condition pos:start="91:7" pos:end="91:19">(<expr pos:start="91:8" pos:end="91:18"><name pos:start="91:8" pos:end="91:18"><name pos:start="91:8" pos:end="91:8">s</name><operator pos:start="91:9" pos:end="91:10">-&gt;</operator><name pos:start="91:11" pos:end="91:18">keyframe</name></name></expr>)</condition><block pos:start="91:20" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:17">

        <expr_stmt pos:start="93:9" pos:end="93:71"><expr pos:start="93:9" pos:end="93:70"><call pos:start="93:9" pos:end="93:70"><name pos:start="93:9" pos:end="93:18">set_blocks</name><argument_list pos:start="93:19" pos:end="93:70">(<argument pos:start="93:20" pos:end="93:20"><expr pos:start="93:20" pos:end="93:20"><name pos:start="93:20" pos:end="93:20">s</name></expr></argument>, <argument pos:start="93:23" pos:end="93:27"><expr pos:start="93:23" pos:end="93:27"><name pos:start="93:23" pos:end="93:27">level</name></expr></argument>, <argument pos:start="93:30" pos:end="93:30"><expr pos:start="93:30" pos:end="93:30"><name pos:start="93:30" pos:end="93:30">x</name></expr></argument>, <argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><name pos:start="93:33" pos:end="93:33">y</name></expr></argument>, <argument pos:start="93:36" pos:end="93:37"><expr pos:start="93:36" pos:end="93:37"><name pos:start="93:36" pos:end="93:37">pl</name></expr></argument>, <argument pos:start="93:40" pos:end="93:42"><expr pos:start="93:40" pos:end="93:42"><name pos:start="93:40" pos:end="93:42">pcb</name></expr></argument>, <argument pos:start="93:45" pos:end="93:47"><expr pos:start="93:45" pos:end="93:47"><name pos:start="93:45" pos:end="93:47">pcr</name></expr></argument>, <argument pos:start="93:50" pos:end="93:50"><expr pos:start="93:50" pos:end="93:50"><literal type="number" pos:start="93:50" pos:end="93:50">0</literal></expr></argument>, <argument pos:start="93:53" pos:end="93:53"><expr pos:start="93:53" pos:end="93:53"><literal type="number" pos:start="93:53" pos:end="93:53">0</literal></expr></argument>, <argument pos:start="93:56" pos:end="93:56"><expr pos:start="93:56" pos:end="93:56"><literal type="number" pos:start="93:56" pos:end="93:56">0</literal></expr></argument>, <argument pos:start="93:59" pos:end="93:69"><expr pos:start="93:59" pos:end="93:69"><name pos:start="93:59" pos:end="93:69">BLOCK_INTRA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:17">return <expr pos:start="95:16" pos:end="95:16"><literal type="number" pos:start="95:16" pos:end="95:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="101:1" pos:end="101:30">//    clip predictors / edge ?</comment>



    <expr_stmt pos:start="105:5" pos:end="105:24"><expr pos:start="105:5" pos:end="105:23"><name pos:start="105:5" pos:end="105:13"><name pos:start="105:5" pos:end="105:10">P_LEFT</name><index pos:start="105:11" pos:end="105:13">[<expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>]</index></name><operator pos:start="105:14" pos:end="105:14">=</operator> <name pos:start="105:16" pos:end="105:23"><name pos:start="105:16" pos:end="105:19">left</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:23">mx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:24"><expr pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:13"><name pos:start="107:5" pos:end="107:10">P_LEFT</name><index pos:start="107:11" pos:end="107:13">[<expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">1</literal></expr>]</index></name><operator pos:start="107:14" pos:end="107:14">=</operator> <name pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:19">left</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:23">my</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:23"><expr pos:start="109:5" pos:end="109:22"><name pos:start="109:5" pos:end="109:13"><name pos:start="109:5" pos:end="109:9">P_TOP</name> <index pos:start="109:11" pos:end="109:13">[<expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>]</index></name><operator pos:start="109:14" pos:end="109:14">=</operator> <name pos:start="109:16" pos:end="109:22"><name pos:start="109:16" pos:end="109:18">top</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:22">mx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:23"><expr pos:start="111:5" pos:end="111:22"><name pos:start="111:5" pos:end="111:13"><name pos:start="111:5" pos:end="111:9">P_TOP</name> <index pos:start="111:11" pos:end="111:13">[<expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">1</literal></expr>]</index></name><operator pos:start="111:14" pos:end="111:14">=</operator> <name pos:start="111:16" pos:end="111:22"><name pos:start="111:16" pos:end="111:18">top</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:22">my</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:26"><expr pos:start="113:5" pos:end="113:25"><name pos:start="113:5" pos:end="113:17"><name pos:start="113:5" pos:end="113:14">P_TOPRIGHT</name><index pos:start="113:15" pos:end="113:17">[<expr pos:start="113:16" pos:end="113:16"><literal type="number" pos:start="113:16" pos:end="113:16">0</literal></expr>]</index></name><operator pos:start="113:18" pos:end="113:18">=</operator> <name pos:start="113:20" pos:end="113:25"><name pos:start="113:20" pos:end="113:21">tr</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:25">mx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:26"><expr pos:start="115:5" pos:end="115:25"><name pos:start="115:5" pos:end="115:17"><name pos:start="115:5" pos:end="115:14">P_TOPRIGHT</name><index pos:start="115:15" pos:end="115:17">[<expr pos:start="115:16" pos:end="115:16"><literal type="number" pos:start="115:16" pos:end="115:16">1</literal></expr>]</index></name><operator pos:start="115:18" pos:end="115:18">=</operator> <name pos:start="115:20" pos:end="115:25"><name pos:start="115:20" pos:end="115:21">tr</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:25">my</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:38"><expr pos:start="119:5" pos:end="119:37"><name pos:start="119:5" pos:end="119:17"><name pos:start="119:5" pos:end="119:11">last_mv</name><index pos:start="119:12" pos:end="119:14">[<expr pos:start="119:13" pos:end="119:13"><literal type="number" pos:start="119:13" pos:end="119:13">0</literal></expr>]</index><index pos:start="119:15" pos:end="119:17">[<expr pos:start="119:16" pos:end="119:16"><literal type="number" pos:start="119:16" pos:end="119:16">0</literal></expr>]</index></name><operator pos:start="119:18" pos:end="119:18">=</operator> <name pos:start="119:20" pos:end="119:34"><name pos:start="119:20" pos:end="119:20">s</name><operator pos:start="119:21" pos:end="119:22">-&gt;</operator><name pos:start="119:23" pos:end="119:27">block</name><index pos:start="119:28" pos:end="119:34">[<expr pos:start="119:29" pos:end="119:33"><name pos:start="119:29" pos:end="119:33">index</name></expr>]</index></name><operator pos:start="119:35" pos:end="119:35">.</operator><name pos:start="119:36" pos:end="119:37">mx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:38"><expr pos:start="121:5" pos:end="121:37"><name pos:start="121:5" pos:end="121:17"><name pos:start="121:5" pos:end="121:11">last_mv</name><index pos:start="121:12" pos:end="121:14">[<expr pos:start="121:13" pos:end="121:13"><literal type="number" pos:start="121:13" pos:end="121:13">0</literal></expr>]</index><index pos:start="121:15" pos:end="121:17">[<expr pos:start="121:16" pos:end="121:16"><literal type="number" pos:start="121:16" pos:end="121:16">1</literal></expr>]</index></name><operator pos:start="121:18" pos:end="121:18">=</operator> <name pos:start="121:20" pos:end="121:34"><name pos:start="121:20" pos:end="121:20">s</name><operator pos:start="121:21" pos:end="121:22">-&gt;</operator><name pos:start="121:23" pos:end="121:27">block</name><index pos:start="121:28" pos:end="121:34">[<expr pos:start="121:29" pos:end="121:33"><name pos:start="121:29" pos:end="121:33">index</name></expr>]</index></name><operator pos:start="121:35" pos:end="121:35">.</operator><name pos:start="121:36" pos:end="121:37">my</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:29"><expr pos:start="123:5" pos:end="123:28"><name pos:start="123:5" pos:end="123:17"><name pos:start="123:5" pos:end="123:11">last_mv</name><index pos:start="123:12" pos:end="123:14">[<expr pos:start="123:13" pos:end="123:13"><literal type="number" pos:start="123:13" pos:end="123:13">1</literal></expr>]</index><index pos:start="123:15" pos:end="123:17">[<expr pos:start="123:16" pos:end="123:16"><literal type="number" pos:start="123:16" pos:end="123:16">0</literal></expr>]</index></name><operator pos:start="123:18" pos:end="123:18">=</operator> <name pos:start="123:20" pos:end="123:28"><name pos:start="123:20" pos:end="123:24">right</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:28">mx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:29"><expr pos:start="125:5" pos:end="125:28"><name pos:start="125:5" pos:end="125:17"><name pos:start="125:5" pos:end="125:11">last_mv</name><index pos:start="125:12" pos:end="125:14">[<expr pos:start="125:13" pos:end="125:13"><literal type="number" pos:start="125:13" pos:end="125:13">1</literal></expr>]</index><index pos:start="125:15" pos:end="125:17">[<expr pos:start="125:16" pos:end="125:16"><literal type="number" pos:start="125:16" pos:end="125:16">1</literal></expr>]</index></name><operator pos:start="125:18" pos:end="125:18">=</operator> <name pos:start="125:20" pos:end="125:28"><name pos:start="125:20" pos:end="125:24">right</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:28">my</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:30"><expr pos:start="127:5" pos:end="127:29"><name pos:start="127:5" pos:end="127:17"><name pos:start="127:5" pos:end="127:11">last_mv</name><index pos:start="127:12" pos:end="127:14">[<expr pos:start="127:13" pos:end="127:13"><literal type="number" pos:start="127:13" pos:end="127:13">2</literal></expr>]</index><index pos:start="127:15" pos:end="127:17">[<expr pos:start="127:16" pos:end="127:16"><literal type="number" pos:start="127:16" pos:end="127:16">0</literal></expr>]</index></name><operator pos:start="127:18" pos:end="127:18">=</operator> <name pos:start="127:20" pos:end="127:29"><name pos:start="127:20" pos:end="127:25">bottom</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:29">mx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:30"><expr pos:start="129:5" pos:end="129:29"><name pos:start="129:5" pos:end="129:17"><name pos:start="129:5" pos:end="129:11">last_mv</name><index pos:start="129:12" pos:end="129:14">[<expr pos:start="129:13" pos:end="129:13"><literal type="number" pos:start="129:13" pos:end="129:13">2</literal></expr>]</index><index pos:start="129:15" pos:end="129:17">[<expr pos:start="129:16" pos:end="129:16"><literal type="number" pos:start="129:16" pos:end="129:16">1</literal></expr>]</index></name><operator pos:start="129:18" pos:end="129:18">=</operator> <name pos:start="129:20" pos:end="129:29"><name pos:start="129:20" pos:end="129:25">bottom</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:29">my</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:21"><expr pos:start="133:5" pos:end="133:20"><name pos:start="133:5" pos:end="133:18"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:8">m</name><operator pos:start="133:9" pos:end="133:9">.</operator><name pos:start="133:10" pos:end="133:18">mb_stride</name></name><operator pos:start="133:19" pos:end="133:19">=</operator><literal type="number" pos:start="133:20" pos:end="133:20">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="137:17"><expr pos:start="135:5" pos:end="137:16"><name pos:start="135:5" pos:end="135:13"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:8">m</name><operator pos:start="135:9" pos:end="135:9">.</operator><name pos:start="135:10" pos:end="135:13">mb_x</name></name><operator pos:start="135:14" pos:end="135:14">=</operator>

    <name pos:start="137:5" pos:end="137:13"><name pos:start="137:5" pos:end="137:5">s</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:8">m</name><operator pos:start="137:9" pos:end="137:9">.</operator><name pos:start="137:10" pos:end="137:13">mb_y</name></name><operator pos:start="137:14" pos:end="137:14">=</operator> <literal type="number" pos:start="137:16" pos:end="137:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:15"><expr pos:start="139:5" pos:end="139:14"><name pos:start="139:5" pos:end="139:11"><name pos:start="139:5" pos:end="139:5">c</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:11">skip</name></name><operator pos:start="139:12" pos:end="139:12">=</operator> <literal type="number" pos:start="139:14" pos:end="139:14">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:40"><expr pos:start="143:5" pos:end="143:39"><call pos:start="143:5" pos:end="143:39"><name pos:start="143:5" pos:end="143:14">av_assert1</name><argument_list pos:start="143:15" pos:end="143:39">(<argument pos:start="143:16" pos:end="143:38"><expr pos:start="143:16" pos:end="143:38"><name pos:start="143:16" pos:end="143:26"><name pos:start="143:16" pos:end="143:16">c</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator>  <name pos:start="143:21" pos:end="143:26">stride</name></name> <operator pos:start="143:28" pos:end="143:29">==</operator>   <name pos:start="143:33" pos:end="143:38">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:40"><expr pos:start="145:5" pos:end="145:39"><call pos:start="145:5" pos:end="145:39"><name pos:start="145:5" pos:end="145:14">av_assert1</name><argument_list pos:start="145:15" pos:end="145:39">(<argument pos:start="145:16" pos:end="145:38"><expr pos:start="145:16" pos:end="145:38"><name pos:start="145:16" pos:end="145:26"><name pos:start="145:16" pos:end="145:16">c</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:26">uvstride</name></name> <operator pos:start="145:28" pos:end="145:29">==</operator> <name pos:start="145:31" pos:end="145:38">uvstride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:87"><expr pos:start="149:5" pos:end="149:86"><name pos:start="149:5" pos:end="149:21"><name pos:start="149:5" pos:end="149:5">c</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:21">penalty_factor</name></name>    <operator pos:start="149:26" pos:end="149:26">=</operator> <call pos:start="149:28" pos:end="149:86"><name pos:start="149:28" pos:end="149:45">get_penalty_factor</name><argument_list pos:start="149:46" pos:end="149:86">(<argument pos:start="149:47" pos:end="149:55"><expr pos:start="149:47" pos:end="149:55"><name pos:start="149:47" pos:end="149:55"><name pos:start="149:47" pos:end="149:47">s</name><operator pos:start="149:48" pos:end="149:49">-&gt;</operator><name pos:start="149:50" pos:end="149:55">lambda</name></name></expr></argument>, <argument pos:start="149:58" pos:end="149:67"><expr pos:start="149:58" pos:end="149:67"><name pos:start="149:58" pos:end="149:67"><name pos:start="149:58" pos:end="149:58">s</name><operator pos:start="149:59" pos:end="149:60">-&gt;</operator><name pos:start="149:61" pos:end="149:67">lambda2</name></name></expr></argument>, <argument pos:start="149:70" pos:end="149:85"><expr pos:start="149:70" pos:end="149:85"><name pos:start="149:70" pos:end="149:85"><name pos:start="149:70" pos:end="149:70">c</name><operator pos:start="149:71" pos:end="149:72">-&gt;</operator><name pos:start="149:73" pos:end="149:77">avctx</name><operator pos:start="149:78" pos:end="149:79">-&gt;</operator><name pos:start="149:80" pos:end="149:85">me_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:91"><expr pos:start="151:5" pos:end="151:90"><name pos:start="151:5" pos:end="151:25"><name pos:start="151:5" pos:end="151:5">c</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:25">sub_penalty_factor</name></name><operator pos:start="151:26" pos:end="151:26">=</operator> <call pos:start="151:28" pos:end="151:90"><name pos:start="151:28" pos:end="151:45">get_penalty_factor</name><argument_list pos:start="151:46" pos:end="151:90">(<argument pos:start="151:47" pos:end="151:55"><expr pos:start="151:47" pos:end="151:55"><name pos:start="151:47" pos:end="151:55"><name pos:start="151:47" pos:end="151:47">s</name><operator pos:start="151:48" pos:end="151:49">-&gt;</operator><name pos:start="151:50" pos:end="151:55">lambda</name></name></expr></argument>, <argument pos:start="151:58" pos:end="151:67"><expr pos:start="151:58" pos:end="151:67"><name pos:start="151:58" pos:end="151:67"><name pos:start="151:58" pos:end="151:58">s</name><operator pos:start="151:59" pos:end="151:60">-&gt;</operator><name pos:start="151:61" pos:end="151:67">lambda2</name></name></expr></argument>, <argument pos:start="151:70" pos:end="151:89"><expr pos:start="151:70" pos:end="151:89"><name pos:start="151:70" pos:end="151:89"><name pos:start="151:70" pos:end="151:70">c</name><operator pos:start="151:71" pos:end="151:72">-&gt;</operator><name pos:start="151:73" pos:end="151:77">avctx</name><operator pos:start="151:78" pos:end="151:79">-&gt;</operator><name pos:start="151:80" pos:end="151:89">me_sub_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:87"><expr pos:start="153:5" pos:end="153:86"><name pos:start="153:5" pos:end="153:24"><name pos:start="153:5" pos:end="153:5">c</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:24">mb_penalty_factor</name></name> <operator pos:start="153:26" pos:end="153:26">=</operator> <call pos:start="153:28" pos:end="153:86"><name pos:start="153:28" pos:end="153:45">get_penalty_factor</name><argument_list pos:start="153:46" pos:end="153:86">(<argument pos:start="153:47" pos:end="153:55"><expr pos:start="153:47" pos:end="153:55"><name pos:start="153:47" pos:end="153:55"><name pos:start="153:47" pos:end="153:47">s</name><operator pos:start="153:48" pos:end="153:49">-&gt;</operator><name pos:start="153:50" pos:end="153:55">lambda</name></name></expr></argument>, <argument pos:start="153:58" pos:end="153:67"><expr pos:start="153:58" pos:end="153:67"><name pos:start="153:58" pos:end="153:67"><name pos:start="153:58" pos:end="153:58">s</name><operator pos:start="153:59" pos:end="153:60">-&gt;</operator><name pos:start="153:61" pos:end="153:67">lambda2</name></name></expr></argument>, <argument pos:start="153:70" pos:end="153:85"><expr pos:start="153:70" pos:end="153:85"><name pos:start="153:70" pos:end="153:85"><name pos:start="153:70" pos:end="153:70">c</name><operator pos:start="153:71" pos:end="153:72">-&gt;</operator><name pos:start="153:73" pos:end="153:77">avctx</name><operator pos:start="153:78" pos:end="153:79">-&gt;</operator><name pos:start="153:80" pos:end="153:85">mb_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:65"><expr pos:start="155:5" pos:end="155:64"><name pos:start="155:5" pos:end="155:25"><name pos:start="155:5" pos:end="155:5">c</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:25">current_mv_penalty</name></name><operator pos:start="155:26" pos:end="155:26">=</operator> <name pos:start="155:28" pos:end="155:55"><name pos:start="155:28" pos:end="155:28">c</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:40">mv_penalty</name><index pos:start="155:41" pos:end="155:55">[<expr pos:start="155:42" pos:end="155:54"><name pos:start="155:42" pos:end="155:52"><name pos:start="155:42" pos:end="155:42">s</name><operator pos:start="155:43" pos:end="155:44">-&gt;</operator><name pos:start="155:45" pos:end="155:45">m</name><operator pos:start="155:46" pos:end="155:46">.</operator><name pos:start="155:47" pos:end="155:52">f_code</name></name><operator pos:start="155:53" pos:end="155:53">=</operator><literal type="number" pos:start="155:54" pos:end="155:54">1</literal></expr>]</index></name> <operator pos:start="155:57" pos:end="155:57">+</operator> <name pos:start="155:59" pos:end="155:64">MAX_MV</name></expr>;</expr_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:33"><expr pos:start="159:5" pos:end="159:32"><name pos:start="159:5" pos:end="159:11"><name pos:start="159:5" pos:end="159:5">c</name><operator pos:start="159:6" pos:end="159:7">-&gt;</operator><name pos:start="159:8" pos:end="159:11">xmin</name></name> <operator pos:start="159:13" pos:end="159:13">=</operator> <operator pos:start="159:15" pos:end="159:15">-</operator> <name pos:start="159:17" pos:end="159:17">x</name><operator pos:start="159:18" pos:end="159:18">*</operator><name pos:start="159:19" pos:end="159:25">block_w</name> <operator pos:start="159:27" pos:end="159:27">-</operator> <literal type="number" pos:start="159:29" pos:end="159:31">16</literal><operator pos:start="159:31" pos:end="159:31">+</operator><literal type="number" pos:start="159:32" pos:end="159:32">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:33"><expr pos:start="161:5" pos:end="161:32"><name pos:start="161:5" pos:end="161:11"><name pos:start="161:5" pos:end="161:5">c</name><operator pos:start="161:6" pos:end="161:7">-&gt;</operator><name pos:start="161:8" pos:end="161:11">ymin</name></name> <operator pos:start="161:13" pos:end="161:13">=</operator> <operator pos:start="161:15" pos:end="161:15">-</operator> <name pos:start="161:17" pos:end="161:17">y</name><operator pos:start="161:18" pos:end="161:18">*</operator><name pos:start="161:19" pos:end="161:25">block_w</name> <operator pos:start="161:27" pos:end="161:27">-</operator> <literal type="number" pos:start="161:29" pos:end="161:31">16</literal><operator pos:start="161:31" pos:end="161:31">+</operator><literal type="number" pos:start="161:32" pos:end="161:32">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:80"><expr pos:start="163:5" pos:end="163:79"><name pos:start="163:5" pos:end="163:11"><name pos:start="163:5" pos:end="163:5">c</name><operator pos:start="163:6" pos:end="163:7">-&gt;</operator><name pos:start="163:8" pos:end="163:11">xmax</name></name> <operator pos:start="163:13" pos:end="163:13">=</operator> <operator pos:start="163:15" pos:end="163:15">-</operator> <operator pos:start="163:17" pos:end="163:17">(</operator><name pos:start="163:18" pos:end="163:18">x</name><operator pos:start="163:19" pos:end="163:19">+</operator><literal type="number" pos:start="163:20" pos:end="163:20">1</literal><operator pos:start="163:21" pos:end="163:21">)</operator><operator pos:start="163:22" pos:end="163:22">*</operator><name pos:start="163:23" pos:end="163:29">block_w</name> <operator pos:start="163:31" pos:end="163:31">+</operator> <operator pos:start="163:33" pos:end="163:33">(</operator><name pos:start="163:34" pos:end="163:34">w</name><operator pos:start="163:35" pos:end="163:36">&lt;&lt;</operator><operator pos:start="163:37" pos:end="163:37">(</operator><name pos:start="163:38" pos:end="163:49">LOG2_MB_SIZE</name> <operator pos:start="163:51" pos:end="163:51">-</operator> <name pos:start="163:53" pos:end="163:70"><name pos:start="163:53" pos:end="163:53">s</name><operator pos:start="163:54" pos:end="163:55">-&gt;</operator><name pos:start="163:56" pos:end="163:70">block_max_depth</name></name><operator pos:start="163:71" pos:end="163:71">)</operator><operator pos:start="163:72" pos:end="163:72">)</operator> <operator pos:start="163:74" pos:end="163:74">+</operator> <literal type="number" pos:start="163:76" pos:end="163:78">16</literal><operator pos:start="163:78" pos:end="163:78">-</operator><literal type="number" pos:start="163:79" pos:end="163:79">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:80"><expr pos:start="165:5" pos:end="165:79"><name pos:start="165:5" pos:end="165:11"><name pos:start="165:5" pos:end="165:5">c</name><operator pos:start="165:6" pos:end="165:7">-&gt;</operator><name pos:start="165:8" pos:end="165:11">ymax</name></name> <operator pos:start="165:13" pos:end="165:13">=</operator> <operator pos:start="165:15" pos:end="165:15">-</operator> <operator pos:start="165:17" pos:end="165:17">(</operator><name pos:start="165:18" pos:end="165:18">y</name><operator pos:start="165:19" pos:end="165:19">+</operator><literal type="number" pos:start="165:20" pos:end="165:20">1</literal><operator pos:start="165:21" pos:end="165:21">)</operator><operator pos:start="165:22" pos:end="165:22">*</operator><name pos:start="165:23" pos:end="165:29">block_w</name> <operator pos:start="165:31" pos:end="165:31">+</operator> <operator pos:start="165:33" pos:end="165:33">(</operator><name pos:start="165:34" pos:end="165:34">h</name><operator pos:start="165:35" pos:end="165:36">&lt;&lt;</operator><operator pos:start="165:37" pos:end="165:37">(</operator><name pos:start="165:38" pos:end="165:49">LOG2_MB_SIZE</name> <operator pos:start="165:51" pos:end="165:51">-</operator> <name pos:start="165:53" pos:end="165:70"><name pos:start="165:53" pos:end="165:53">s</name><operator pos:start="165:54" pos:end="165:55">-&gt;</operator><name pos:start="165:56" pos:end="165:70">block_max_depth</name></name><operator pos:start="165:71" pos:end="165:71">)</operator><operator pos:start="165:72" pos:end="165:72">)</operator> <operator pos:start="165:74" pos:end="165:74">+</operator> <literal type="number" pos:start="165:76" pos:end="165:78">16</literal><operator pos:start="165:78" pos:end="165:78">-</operator><literal type="number" pos:start="165:79" pos:end="165:79">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="169:5" pos:end="169:73"><if pos:start="169:5" pos:end="169:73">if<condition pos:start="169:7" pos:end="169:40">(<expr pos:start="169:8" pos:end="169:39"><name pos:start="169:8" pos:end="169:16"><name pos:start="169:8" pos:end="169:13">P_LEFT</name><index pos:start="169:14" pos:end="169:16">[<expr pos:start="169:15" pos:end="169:15"><literal type="number" pos:start="169:15" pos:end="169:15">0</literal></expr>]</index></name>     <operator pos:start="169:22" pos:end="169:22">&gt;</operator> <operator pos:start="169:24" pos:end="169:24">(</operator><name pos:start="169:25" pos:end="169:31"><name pos:start="169:25" pos:end="169:25">c</name><operator pos:start="169:26" pos:end="169:27">-&gt;</operator><name pos:start="169:28" pos:end="169:31">xmax</name></name><operator pos:start="169:32" pos:end="169:33">&lt;&lt;</operator><name pos:start="169:34" pos:end="169:38">shift</name><operator pos:start="169:39" pos:end="169:39">)</operator></expr>)</condition><block type="pseudo" pos:start="169:42" pos:end="169:73"><block_content pos:start="169:42" pos:end="169:73"> <expr_stmt pos:start="169:42" pos:end="169:73"><expr pos:start="169:42" pos:end="169:72"><name pos:start="169:42" pos:end="169:50"><name pos:start="169:42" pos:end="169:47">P_LEFT</name><index pos:start="169:48" pos:end="169:50">[<expr pos:start="169:49" pos:end="169:49"><literal type="number" pos:start="169:49" pos:end="169:49">0</literal></expr>]</index></name>    <operator pos:start="169:55" pos:end="169:55">=</operator> <operator pos:start="169:57" pos:end="169:57">(</operator><name pos:start="169:58" pos:end="169:64"><name pos:start="169:58" pos:end="169:58">c</name><operator pos:start="169:59" pos:end="169:60">-&gt;</operator><name pos:start="169:61" pos:end="169:64">xmax</name></name><operator pos:start="169:65" pos:end="169:66">&lt;&lt;</operator><name pos:start="169:67" pos:end="169:71">shift</name><operator pos:start="169:72" pos:end="169:72">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="171:5" pos:end="171:73"><if pos:start="171:5" pos:end="171:73">if<condition pos:start="171:7" pos:end="171:40">(<expr pos:start="171:8" pos:end="171:39"><name pos:start="171:8" pos:end="171:16"><name pos:start="171:8" pos:end="171:13">P_LEFT</name><index pos:start="171:14" pos:end="171:16">[<expr pos:start="171:15" pos:end="171:15"><literal type="number" pos:start="171:15" pos:end="171:15">1</literal></expr>]</index></name>     <operator pos:start="171:22" pos:end="171:22">&gt;</operator> <operator pos:start="171:24" pos:end="171:24">(</operator><name pos:start="171:25" pos:end="171:31"><name pos:start="171:25" pos:end="171:25">c</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:31">ymax</name></name><operator pos:start="171:32" pos:end="171:33">&lt;&lt;</operator><name pos:start="171:34" pos:end="171:38">shift</name><operator pos:start="171:39" pos:end="171:39">)</operator></expr>)</condition><block type="pseudo" pos:start="171:42" pos:end="171:73"><block_content pos:start="171:42" pos:end="171:73"> <expr_stmt pos:start="171:42" pos:end="171:73"><expr pos:start="171:42" pos:end="171:72"><name pos:start="171:42" pos:end="171:50"><name pos:start="171:42" pos:end="171:47">P_LEFT</name><index pos:start="171:48" pos:end="171:50">[<expr pos:start="171:49" pos:end="171:49"><literal type="number" pos:start="171:49" pos:end="171:49">1</literal></expr>]</index></name>    <operator pos:start="171:55" pos:end="171:55">=</operator> <operator pos:start="171:57" pos:end="171:57">(</operator><name pos:start="171:58" pos:end="171:64"><name pos:start="171:58" pos:end="171:58">c</name><operator pos:start="171:59" pos:end="171:60">-&gt;</operator><name pos:start="171:61" pos:end="171:64">ymax</name></name><operator pos:start="171:65" pos:end="171:66">&lt;&lt;</operator><name pos:start="171:67" pos:end="171:71">shift</name><operator pos:start="171:72" pos:end="171:72">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="173:5" pos:end="173:73"><if pos:start="173:5" pos:end="173:73">if<condition pos:start="173:7" pos:end="173:40">(<expr pos:start="173:8" pos:end="173:39"><name pos:start="173:8" pos:end="173:15"><name pos:start="173:8" pos:end="173:12">P_TOP</name><index pos:start="173:13" pos:end="173:15">[<expr pos:start="173:14" pos:end="173:14"><literal type="number" pos:start="173:14" pos:end="173:14">0</literal></expr>]</index></name>      <operator pos:start="173:22" pos:end="173:22">&gt;</operator> <operator pos:start="173:24" pos:end="173:24">(</operator><name pos:start="173:25" pos:end="173:31"><name pos:start="173:25" pos:end="173:25">c</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:31">xmax</name></name><operator pos:start="173:32" pos:end="173:33">&lt;&lt;</operator><name pos:start="173:34" pos:end="173:38">shift</name><operator pos:start="173:39" pos:end="173:39">)</operator></expr>)</condition><block type="pseudo" pos:start="173:42" pos:end="173:73"><block_content pos:start="173:42" pos:end="173:73"> <expr_stmt pos:start="173:42" pos:end="173:73"><expr pos:start="173:42" pos:end="173:72"><name pos:start="173:42" pos:end="173:49"><name pos:start="173:42" pos:end="173:46">P_TOP</name><index pos:start="173:47" pos:end="173:49">[<expr pos:start="173:48" pos:end="173:48"><literal type="number" pos:start="173:48" pos:end="173:48">0</literal></expr>]</index></name>     <operator pos:start="173:55" pos:end="173:55">=</operator> <operator pos:start="173:57" pos:end="173:57">(</operator><name pos:start="173:58" pos:end="173:64"><name pos:start="173:58" pos:end="173:58">c</name><operator pos:start="173:59" pos:end="173:60">-&gt;</operator><name pos:start="173:61" pos:end="173:64">xmax</name></name><operator pos:start="173:65" pos:end="173:66">&lt;&lt;</operator><name pos:start="173:67" pos:end="173:71">shift</name><operator pos:start="173:72" pos:end="173:72">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="175:5" pos:end="175:73"><if pos:start="175:5" pos:end="175:73">if<condition pos:start="175:7" pos:end="175:40">(<expr pos:start="175:8" pos:end="175:39"><name pos:start="175:8" pos:end="175:15"><name pos:start="175:8" pos:end="175:12">P_TOP</name><index pos:start="175:13" pos:end="175:15">[<expr pos:start="175:14" pos:end="175:14"><literal type="number" pos:start="175:14" pos:end="175:14">1</literal></expr>]</index></name>      <operator pos:start="175:22" pos:end="175:22">&gt;</operator> <operator pos:start="175:24" pos:end="175:24">(</operator><name pos:start="175:25" pos:end="175:31"><name pos:start="175:25" pos:end="175:25">c</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:31">ymax</name></name><operator pos:start="175:32" pos:end="175:33">&lt;&lt;</operator><name pos:start="175:34" pos:end="175:38">shift</name><operator pos:start="175:39" pos:end="175:39">)</operator></expr>)</condition><block type="pseudo" pos:start="175:42" pos:end="175:73"><block_content pos:start="175:42" pos:end="175:73"> <expr_stmt pos:start="175:42" pos:end="175:73"><expr pos:start="175:42" pos:end="175:72"><name pos:start="175:42" pos:end="175:49"><name pos:start="175:42" pos:end="175:46">P_TOP</name><index pos:start="175:47" pos:end="175:49">[<expr pos:start="175:48" pos:end="175:48"><literal type="number" pos:start="175:48" pos:end="175:48">1</literal></expr>]</index></name>     <operator pos:start="175:55" pos:end="175:55">=</operator> <operator pos:start="175:57" pos:end="175:57">(</operator><name pos:start="175:58" pos:end="175:64"><name pos:start="175:58" pos:end="175:58">c</name><operator pos:start="175:59" pos:end="175:60">-&gt;</operator><name pos:start="175:61" pos:end="175:64">ymax</name></name><operator pos:start="175:65" pos:end="175:66">&lt;&lt;</operator><name pos:start="175:67" pos:end="175:71">shift</name><operator pos:start="175:72" pos:end="175:72">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="177:5" pos:end="177:73"><if pos:start="177:5" pos:end="177:73">if<condition pos:start="177:7" pos:end="177:40">(<expr pos:start="177:8" pos:end="177:39"><name pos:start="177:8" pos:end="177:20"><name pos:start="177:8" pos:end="177:17">P_TOPRIGHT</name><index pos:start="177:18" pos:end="177:20">[<expr pos:start="177:19" pos:end="177:19"><literal type="number" pos:start="177:19" pos:end="177:19">0</literal></expr>]</index></name> <operator pos:start="177:22" pos:end="177:22">&lt;</operator> <operator pos:start="177:24" pos:end="177:24">(</operator><name pos:start="177:25" pos:end="177:31"><name pos:start="177:25" pos:end="177:25">c</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:31">xmin</name></name><operator pos:start="177:32" pos:end="177:33">&lt;&lt;</operator><name pos:start="177:34" pos:end="177:38">shift</name><operator pos:start="177:39" pos:end="177:39">)</operator></expr>)</condition><block type="pseudo" pos:start="177:42" pos:end="177:73"><block_content pos:start="177:42" pos:end="177:73"> <expr_stmt pos:start="177:42" pos:end="177:73"><expr pos:start="177:42" pos:end="177:72"><name pos:start="177:42" pos:end="177:54"><name pos:start="177:42" pos:end="177:51">P_TOPRIGHT</name><index pos:start="177:52" pos:end="177:54">[<expr pos:start="177:53" pos:end="177:53"><literal type="number" pos:start="177:53" pos:end="177:53">0</literal></expr>]</index></name><operator pos:start="177:55" pos:end="177:55">=</operator> <operator pos:start="177:57" pos:end="177:57">(</operator><name pos:start="177:58" pos:end="177:64"><name pos:start="177:58" pos:end="177:58">c</name><operator pos:start="177:59" pos:end="177:60">-&gt;</operator><name pos:start="177:61" pos:end="177:64">xmin</name></name><operator pos:start="177:65" pos:end="177:66">&lt;&lt;</operator><name pos:start="177:67" pos:end="177:71">shift</name><operator pos:start="177:72" pos:end="177:72">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="179:5" pos:end="179:73"><if pos:start="179:5" pos:end="179:73">if<condition pos:start="179:7" pos:end="179:40">(<expr pos:start="179:8" pos:end="179:39"><name pos:start="179:8" pos:end="179:20"><name pos:start="179:8" pos:end="179:17">P_TOPRIGHT</name><index pos:start="179:18" pos:end="179:20">[<expr pos:start="179:19" pos:end="179:19"><literal type="number" pos:start="179:19" pos:end="179:19">0</literal></expr>]</index></name> <operator pos:start="179:22" pos:end="179:22">&gt;</operator> <operator pos:start="179:24" pos:end="179:24">(</operator><name pos:start="179:25" pos:end="179:31"><name pos:start="179:25" pos:end="179:25">c</name><operator pos:start="179:26" pos:end="179:27">-&gt;</operator><name pos:start="179:28" pos:end="179:31">xmax</name></name><operator pos:start="179:32" pos:end="179:33">&lt;&lt;</operator><name pos:start="179:34" pos:end="179:38">shift</name><operator pos:start="179:39" pos:end="179:39">)</operator></expr>)</condition><block type="pseudo" pos:start="179:42" pos:end="179:73"><block_content pos:start="179:42" pos:end="179:73"> <expr_stmt pos:start="179:42" pos:end="179:73"><expr pos:start="179:42" pos:end="179:72"><name pos:start="179:42" pos:end="179:54"><name pos:start="179:42" pos:end="179:51">P_TOPRIGHT</name><index pos:start="179:52" pos:end="179:54">[<expr pos:start="179:53" pos:end="179:53"><literal type="number" pos:start="179:53" pos:end="179:53">0</literal></expr>]</index></name><operator pos:start="179:55" pos:end="179:55">=</operator> <operator pos:start="179:57" pos:end="179:57">(</operator><name pos:start="179:58" pos:end="179:64"><name pos:start="179:58" pos:end="179:58">c</name><operator pos:start="179:59" pos:end="179:60">-&gt;</operator><name pos:start="179:61" pos:end="179:64">xmax</name></name><operator pos:start="179:65" pos:end="179:66">&lt;&lt;</operator><name pos:start="179:67" pos:end="179:71">shift</name><operator pos:start="179:72" pos:end="179:72">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="179:75" pos:end="179:94">//due to pmx no clip</comment>

    <if_stmt pos:start="181:5" pos:end="181:73"><if pos:start="181:5" pos:end="181:73">if<condition pos:start="181:7" pos:end="181:40">(<expr pos:start="181:8" pos:end="181:39"><name pos:start="181:8" pos:end="181:20"><name pos:start="181:8" pos:end="181:17">P_TOPRIGHT</name><index pos:start="181:18" pos:end="181:20">[<expr pos:start="181:19" pos:end="181:19"><literal type="number" pos:start="181:19" pos:end="181:19">1</literal></expr>]</index></name> <operator pos:start="181:22" pos:end="181:22">&gt;</operator> <operator pos:start="181:24" pos:end="181:24">(</operator><name pos:start="181:25" pos:end="181:31"><name pos:start="181:25" pos:end="181:25">c</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:31">ymax</name></name><operator pos:start="181:32" pos:end="181:33">&lt;&lt;</operator><name pos:start="181:34" pos:end="181:38">shift</name><operator pos:start="181:39" pos:end="181:39">)</operator></expr>)</condition><block type="pseudo" pos:start="181:42" pos:end="181:73"><block_content pos:start="181:42" pos:end="181:73"> <expr_stmt pos:start="181:42" pos:end="181:73"><expr pos:start="181:42" pos:end="181:72"><name pos:start="181:42" pos:end="181:54"><name pos:start="181:42" pos:end="181:51">P_TOPRIGHT</name><index pos:start="181:52" pos:end="181:54">[<expr pos:start="181:53" pos:end="181:53"><literal type="number" pos:start="181:53" pos:end="181:53">1</literal></expr>]</index></name><operator pos:start="181:55" pos:end="181:55">=</operator> <operator pos:start="181:57" pos:end="181:57">(</operator><name pos:start="181:58" pos:end="181:64"><name pos:start="181:58" pos:end="181:58">c</name><operator pos:start="181:59" pos:end="181:60">-&gt;</operator><name pos:start="181:61" pos:end="181:64">ymax</name></name><operator pos:start="181:65" pos:end="181:66">&lt;&lt;</operator><name pos:start="181:67" pos:end="181:71">shift</name><operator pos:start="181:72" pos:end="181:72">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:62"><expr pos:start="185:5" pos:end="185:61"><name pos:start="185:5" pos:end="185:15"><name pos:start="185:5" pos:end="185:12">P_MEDIAN</name><index pos:start="185:13" pos:end="185:15">[<expr pos:start="185:14" pos:end="185:14"><literal type="number" pos:start="185:14" pos:end="185:14">0</literal></expr>]</index></name><operator pos:start="185:16" pos:end="185:16">=</operator> <call pos:start="185:18" pos:end="185:61"><name pos:start="185:18" pos:end="185:25">mid_pred</name><argument_list pos:start="185:26" pos:end="185:61">(<argument pos:start="185:27" pos:end="185:35"><expr pos:start="185:27" pos:end="185:35"><name pos:start="185:27" pos:end="185:35"><name pos:start="185:27" pos:end="185:32">P_LEFT</name><index pos:start="185:33" pos:end="185:35">[<expr pos:start="185:34" pos:end="185:34"><literal type="number" pos:start="185:34" pos:end="185:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="185:38" pos:end="185:45"><expr pos:start="185:38" pos:end="185:45"><name pos:start="185:38" pos:end="185:45"><name pos:start="185:38" pos:end="185:42">P_TOP</name><index pos:start="185:43" pos:end="185:45">[<expr pos:start="185:44" pos:end="185:44"><literal type="number" pos:start="185:44" pos:end="185:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="185:48" pos:end="185:60"><expr pos:start="185:48" pos:end="185:60"><name pos:start="185:48" pos:end="185:60"><name pos:start="185:48" pos:end="185:57">P_TOPRIGHT</name><index pos:start="185:58" pos:end="185:60">[<expr pos:start="185:59" pos:end="185:59"><literal type="number" pos:start="185:59" pos:end="185:59">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:62"><expr pos:start="187:5" pos:end="187:61"><name pos:start="187:5" pos:end="187:15"><name pos:start="187:5" pos:end="187:12">P_MEDIAN</name><index pos:start="187:13" pos:end="187:15">[<expr pos:start="187:14" pos:end="187:14"><literal type="number" pos:start="187:14" pos:end="187:14">1</literal></expr>]</index></name><operator pos:start="187:16" pos:end="187:16">=</operator> <call pos:start="187:18" pos:end="187:61"><name pos:start="187:18" pos:end="187:25">mid_pred</name><argument_list pos:start="187:26" pos:end="187:61">(<argument pos:start="187:27" pos:end="187:35"><expr pos:start="187:27" pos:end="187:35"><name pos:start="187:27" pos:end="187:35"><name pos:start="187:27" pos:end="187:32">P_LEFT</name><index pos:start="187:33" pos:end="187:35">[<expr pos:start="187:34" pos:end="187:34"><literal type="number" pos:start="187:34" pos:end="187:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="187:38" pos:end="187:45"><expr pos:start="187:38" pos:end="187:45"><name pos:start="187:38" pos:end="187:45"><name pos:start="187:38" pos:end="187:42">P_TOP</name><index pos:start="187:43" pos:end="187:45">[<expr pos:start="187:44" pos:end="187:44"><literal type="number" pos:start="187:44" pos:end="187:44">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="187:48" pos:end="187:60"><expr pos:start="187:48" pos:end="187:60"><name pos:start="187:48" pos:end="187:60"><name pos:start="187:48" pos:end="187:57">P_TOPRIGHT</name><index pos:start="187:58" pos:end="187:60">[<expr pos:start="187:59" pos:end="187:59"><literal type="number" pos:start="187:59" pos:end="187:59">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="191:5" pos:end="203:5"><if pos:start="191:5" pos:end="197:5">if <condition pos:start="191:8" pos:end="191:11">(<expr pos:start="191:9" pos:end="191:10"><operator pos:start="191:9" pos:end="191:9">!</operator><name pos:start="191:10" pos:end="191:10">y</name></expr>)</condition> <block pos:start="191:13" pos:end="197:5">{<block_content pos:start="193:9" pos:end="195:29">

        <expr_stmt pos:start="193:9" pos:end="193:29"><expr pos:start="193:9" pos:end="193:28"><name pos:start="193:9" pos:end="193:17"><name pos:start="193:9" pos:end="193:9">c</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:17">pred_x</name></name><operator pos:start="193:18" pos:end="193:18">=</operator> <name pos:start="193:20" pos:end="193:28"><name pos:start="193:20" pos:end="193:25">P_LEFT</name><index pos:start="193:26" pos:end="193:28">[<expr pos:start="193:27" pos:end="193:27"><literal type="number" pos:start="193:27" pos:end="193:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:29"><expr pos:start="195:9" pos:end="195:28"><name pos:start="195:9" pos:end="195:17"><name pos:start="195:9" pos:end="195:9">c</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:17">pred_y</name></name><operator pos:start="195:18" pos:end="195:18">=</operator> <name pos:start="195:20" pos:end="195:28"><name pos:start="195:20" pos:end="195:25">P_LEFT</name><index pos:start="195:26" pos:end="195:28">[<expr pos:start="195:27" pos:end="195:27"><literal type="number" pos:start="195:27" pos:end="195:27">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="197:7" pos:end="203:5">else <block pos:start="197:12" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:32">

        <expr_stmt pos:start="199:9" pos:end="199:32"><expr pos:start="199:9" pos:end="199:31"><name pos:start="199:9" pos:end="199:17"><name pos:start="199:9" pos:end="199:9">c</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:17">pred_x</name></name> <operator pos:start="199:19" pos:end="199:19">=</operator> <name pos:start="199:21" pos:end="199:31"><name pos:start="199:21" pos:end="199:28">P_MEDIAN</name><index pos:start="199:29" pos:end="199:31">[<expr pos:start="199:30" pos:end="199:30"><literal type="number" pos:start="199:30" pos:end="199:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:32"><expr pos:start="201:9" pos:end="201:31"><name pos:start="201:9" pos:end="201:17"><name pos:start="201:9" pos:end="201:9">c</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:17">pred_y</name></name> <operator pos:start="201:19" pos:end="201:19">=</operator> <name pos:start="201:21" pos:end="201:31"><name pos:start="201:21" pos:end="201:28">P_MEDIAN</name><index pos:start="201:29" pos:end="201:31">[<expr pos:start="201:30" pos:end="201:30"><literal type="number" pos:start="201:30" pos:end="201:30">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:19"><expr pos:start="207:5" pos:end="207:18"><name pos:start="207:5" pos:end="207:9">score</name><operator pos:start="207:10" pos:end="207:10">=</operator> <name pos:start="207:12" pos:end="207:18">INT_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:16"><expr pos:start="209:5" pos:end="209:15"><name pos:start="209:5" pos:end="209:12">best_ref</name><operator pos:start="209:13" pos:end="209:13">=</operator> <literal type="number" pos:start="209:15" pos:end="209:15">0</literal></expr>;</expr_stmt>

    <for pos:start="211:5" pos:end="261:5">for<control pos:start="211:8" pos:end="211:40">(<init pos:start="211:9" pos:end="211:14"><expr pos:start="211:9" pos:end="211:13"><name pos:start="211:9" pos:end="211:11">ref</name><operator pos:start="211:12" pos:end="211:12">=</operator><literal type="number" pos:start="211:13" pos:end="211:13">0</literal></expr>;</init> <condition pos:start="211:16" pos:end="211:33"><expr pos:start="211:16" pos:end="211:32"><name pos:start="211:16" pos:end="211:18">ref</name><operator pos:start="211:19" pos:end="211:19">&lt;</operator><name pos:start="211:20" pos:end="211:32"><name pos:start="211:20" pos:end="211:20">s</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:32">ref_frames</name></name></expr>;</condition> <incr pos:start="211:35" pos:end="211:39"><expr pos:start="211:35" pos:end="211:39"><name pos:start="211:35" pos:end="211:37">ref</name><operator pos:start="211:38" pos:end="211:39">++</operator></expr></incr>)</control><block pos:start="211:41" pos:end="261:5">{<block_content pos:start="213:9" pos:end="259:9">

        <expr_stmt pos:start="213:9" pos:end="213:93"><expr pos:start="213:9" pos:end="213:92"><call pos:start="213:9" pos:end="213:92"><name pos:start="213:9" pos:end="213:16">init_ref</name><argument_list pos:start="213:17" pos:end="213:92">(<argument pos:start="213:18" pos:end="213:18"><expr pos:start="213:18" pos:end="213:18"><name pos:start="213:18" pos:end="213:18">c</name></expr></argument>, <argument pos:start="213:21" pos:end="213:32"><expr pos:start="213:21" pos:end="213:32"><name pos:start="213:21" pos:end="213:32">current_data</name></expr></argument>, <argument pos:start="213:35" pos:end="213:60"><expr pos:start="213:35" pos:end="213:60"><name pos:start="213:35" pos:end="213:54"><name pos:start="213:35" pos:end="213:35">s</name><operator pos:start="213:36" pos:end="213:37">-&gt;</operator><name pos:start="213:38" pos:end="213:49">last_picture</name><index pos:start="213:50" pos:end="213:54">[<expr pos:start="213:51" pos:end="213:53"><name pos:start="213:51" pos:end="213:53">ref</name></expr>]</index></name><operator pos:start="213:55" pos:end="213:56">-&gt;</operator><name pos:start="213:57" pos:end="213:60">data</name></expr></argument>, <argument pos:start="213:63" pos:end="213:66"><expr pos:start="213:63" pos:end="213:66"><name pos:start="213:63" pos:end="213:66">NULL</name></expr></argument>, <argument pos:start="213:69" pos:end="213:77"><expr pos:start="213:69" pos:end="213:77"><name pos:start="213:69" pos:end="213:75">block_w</name><operator pos:start="213:76" pos:end="213:76">*</operator><name pos:start="213:77" pos:end="213:77">x</name></expr></argument>, <argument pos:start="213:80" pos:end="213:88"><expr pos:start="213:80" pos:end="213:88"><name pos:start="213:80" pos:end="213:86">block_w</name><operator pos:start="213:87" pos:end="213:87">*</operator><name pos:start="213:88" pos:end="213:88">y</name></expr></argument>, <argument pos:start="213:91" pos:end="213:91"><expr pos:start="213:91" pos:end="213:91"><literal type="number" pos:start="213:91" pos:end="213:91">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="217:9" pos:end="219:88"><expr pos:start="217:9" pos:end="219:87"><name pos:start="217:9" pos:end="217:17">ref_score</name><operator pos:start="217:18" pos:end="217:18">=</operator> <call pos:start="217:20" pos:end="219:87"><name pos:start="217:20" pos:end="217:40">ff_epzs_motion_search</name><argument_list pos:start="217:41" pos:end="219:87">(<argument pos:start="217:42" pos:end="217:46"><expr pos:start="217:42" pos:end="217:46"><operator pos:start="217:42" pos:end="217:42">&amp;</operator><name pos:start="217:43" pos:end="217:46"><name pos:start="217:43" pos:end="217:43">s</name><operator pos:start="217:44" pos:end="217:45">-&gt;</operator><name pos:start="217:46" pos:end="217:46">m</name></name></expr></argument>, <argument pos:start="217:49" pos:end="217:55"><expr pos:start="217:49" pos:end="217:55"><operator pos:start="217:49" pos:end="217:49">&amp;</operator><name pos:start="217:50" pos:end="217:55">ref_mx</name></expr></argument>, <argument pos:start="217:58" pos:end="217:64"><expr pos:start="217:58" pos:end="217:64"><operator pos:start="217:58" pos:end="217:58">&amp;</operator><name pos:start="217:59" pos:end="217:64">ref_my</name></expr></argument>, <argument pos:start="217:67" pos:end="217:67"><expr pos:start="217:67" pos:end="217:67"><name pos:start="217:67" pos:end="217:67">P</name></expr></argument>, <argument pos:start="217:70" pos:end="217:70"><expr pos:start="217:70" pos:end="217:70"><literal type="number" pos:start="217:70" pos:end="217:70">0</literal></expr></argument>, <comment type="block" pos:start="217:73" pos:end="217:85">/*ref_index*/</comment> <argument pos:start="217:87" pos:end="217:87"><expr pos:start="217:87" pos:end="217:87"><literal type="number" pos:start="217:87" pos:end="217:87">0</literal></expr></argument>, <argument pos:start="217:90" pos:end="217:96"><expr pos:start="217:90" pos:end="217:96"><name pos:start="217:90" pos:end="217:96">last_mv</name></expr></argument>,

                                         <argument pos:start="219:42" pos:end="219:55"><expr pos:start="219:42" pos:end="219:55"><operator pos:start="219:42" pos:end="219:42">(</operator><literal type="number" pos:start="219:43" pos:end="219:43">1</literal><operator pos:start="219:44" pos:end="219:45">&lt;&lt;</operator><literal type="number" pos:start="219:46" pos:end="219:47">16</literal><operator pos:start="219:48" pos:end="219:48">)</operator><operator pos:start="219:49" pos:end="219:50">&gt;&gt;</operator><name pos:start="219:51" pos:end="219:55">shift</name></expr></argument>, <argument pos:start="219:58" pos:end="219:77"><expr pos:start="219:58" pos:end="219:77"><name pos:start="219:58" pos:end="219:62">level</name><operator pos:start="219:63" pos:end="219:63">-</operator><name pos:start="219:64" pos:end="219:75">LOG2_MB_SIZE</name><operator pos:start="219:76" pos:end="219:76">+</operator><literal type="number" pos:start="219:77" pos:end="219:77">4</literal></expr></argument>, <argument pos:start="219:80" pos:end="219:86"><expr pos:start="219:80" pos:end="219:86"><name pos:start="219:80" pos:end="219:86">block_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="223:9" pos:end="223:38"><expr pos:start="223:9" pos:end="223:37"><call pos:start="223:9" pos:end="223:37"><name pos:start="223:9" pos:end="223:18">av_assert2</name><argument_list pos:start="223:19" pos:end="223:37">(<argument pos:start="223:20" pos:end="223:36"><expr pos:start="223:20" pos:end="223:36"><name pos:start="223:20" pos:end="223:25">ref_mx</name> <operator pos:start="223:27" pos:end="223:28">&gt;=</operator> <name pos:start="223:30" pos:end="223:36"><name pos:start="223:30" pos:end="223:30">c</name><operator pos:start="223:31" pos:end="223:32">-&gt;</operator><name pos:start="223:33" pos:end="223:36">xmin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:38"><expr pos:start="225:9" pos:end="225:37"><call pos:start="225:9" pos:end="225:37"><name pos:start="225:9" pos:end="225:18">av_assert2</name><argument_list pos:start="225:19" pos:end="225:37">(<argument pos:start="225:20" pos:end="225:36"><expr pos:start="225:20" pos:end="225:36"><name pos:start="225:20" pos:end="225:25">ref_mx</name> <operator pos:start="225:27" pos:end="225:28">&lt;=</operator> <name pos:start="225:30" pos:end="225:36"><name pos:start="225:30" pos:end="225:30">c</name><operator pos:start="225:31" pos:end="225:32">-&gt;</operator><name pos:start="225:33" pos:end="225:36">xmax</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:38"><expr pos:start="227:9" pos:end="227:37"><call pos:start="227:9" pos:end="227:37"><name pos:start="227:9" pos:end="227:18">av_assert2</name><argument_list pos:start="227:19" pos:end="227:37">(<argument pos:start="227:20" pos:end="227:36"><expr pos:start="227:20" pos:end="227:36"><name pos:start="227:20" pos:end="227:25">ref_my</name> <operator pos:start="227:27" pos:end="227:28">&gt;=</operator> <name pos:start="227:30" pos:end="227:36"><name pos:start="227:30" pos:end="227:30">c</name><operator pos:start="227:31" pos:end="227:32">-&gt;</operator><name pos:start="227:33" pos:end="227:36">ymin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:38"><expr pos:start="229:9" pos:end="229:37"><call pos:start="229:9" pos:end="229:37"><name pos:start="229:9" pos:end="229:18">av_assert2</name><argument_list pos:start="229:19" pos:end="229:37">(<argument pos:start="229:20" pos:end="229:36"><expr pos:start="229:20" pos:end="229:36"><name pos:start="229:20" pos:end="229:25">ref_my</name> <operator pos:start="229:27" pos:end="229:28">&lt;=</operator> <name pos:start="229:30" pos:end="229:36"><name pos:start="229:30" pos:end="229:30">c</name><operator pos:start="229:31" pos:end="229:32">-&gt;</operator><name pos:start="229:33" pos:end="229:36">ymax</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="233:9" pos:end="233:113"><expr pos:start="233:9" pos:end="233:112"><name pos:start="233:9" pos:end="233:17">ref_score</name><operator pos:start="233:18" pos:end="233:18">=</operator> <call pos:start="233:20" pos:end="233:112"><name pos:start="233:20" pos:end="233:39"><name pos:start="233:20" pos:end="233:20">c</name><operator pos:start="233:21" pos:end="233:22">-&gt;</operator><name pos:start="233:23" pos:end="233:39">sub_motion_search</name></name><argument_list pos:start="233:40" pos:end="233:112">(<argument pos:start="233:41" pos:end="233:45"><expr pos:start="233:41" pos:end="233:45"><operator pos:start="233:41" pos:end="233:41">&amp;</operator><name pos:start="233:42" pos:end="233:45"><name pos:start="233:42" pos:end="233:42">s</name><operator pos:start="233:43" pos:end="233:44">-&gt;</operator><name pos:start="233:45" pos:end="233:45">m</name></name></expr></argument>, <argument pos:start="233:48" pos:end="233:54"><expr pos:start="233:48" pos:end="233:54"><operator pos:start="233:48" pos:end="233:48">&amp;</operator><name pos:start="233:49" pos:end="233:54">ref_mx</name></expr></argument>, <argument pos:start="233:57" pos:end="233:63"><expr pos:start="233:57" pos:end="233:63"><operator pos:start="233:57" pos:end="233:57">&amp;</operator><name pos:start="233:58" pos:end="233:63">ref_my</name></expr></argument>, <argument pos:start="233:66" pos:end="233:74"><expr pos:start="233:66" pos:end="233:74"><name pos:start="233:66" pos:end="233:74">ref_score</name></expr></argument>, <argument pos:start="233:77" pos:end="233:77"><expr pos:start="233:77" pos:end="233:77"><literal type="number" pos:start="233:77" pos:end="233:77">0</literal></expr></argument>, <argument pos:start="233:80" pos:end="233:80"><expr pos:start="233:80" pos:end="233:80"><literal type="number" pos:start="233:80" pos:end="233:80">0</literal></expr></argument>, <argument pos:start="233:83" pos:end="233:102"><expr pos:start="233:83" pos:end="233:102"><name pos:start="233:83" pos:end="233:87">level</name><operator pos:start="233:88" pos:end="233:88">-</operator><name pos:start="233:89" pos:end="233:100">LOG2_MB_SIZE</name><operator pos:start="233:101" pos:end="233:101">+</operator><literal type="number" pos:start="233:102" pos:end="233:102">4</literal></expr></argument>, <argument pos:start="233:105" pos:end="233:111"><expr pos:start="233:105" pos:end="233:111"><name pos:start="233:105" pos:end="233:111">block_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:98"><expr pos:start="235:9" pos:end="235:97"><name pos:start="235:9" pos:end="235:17">ref_score</name><operator pos:start="235:18" pos:end="235:18">=</operator> <call pos:start="235:20" pos:end="235:97"><name pos:start="235:20" pos:end="235:34">ff_get_mb_score</name><argument_list pos:start="235:35" pos:end="235:97">(<argument pos:start="235:36" pos:end="235:40"><expr pos:start="235:36" pos:end="235:40"><operator pos:start="235:36" pos:end="235:36">&amp;</operator><name pos:start="235:37" pos:end="235:40"><name pos:start="235:37" pos:end="235:37">s</name><operator pos:start="235:38" pos:end="235:39">-&gt;</operator><name pos:start="235:40" pos:end="235:40">m</name></name></expr></argument>, <argument pos:start="235:43" pos:end="235:48"><expr pos:start="235:43" pos:end="235:48"><name pos:start="235:43" pos:end="235:48">ref_mx</name></expr></argument>, <argument pos:start="235:51" pos:end="235:56"><expr pos:start="235:51" pos:end="235:56"><name pos:start="235:51" pos:end="235:56">ref_my</name></expr></argument>, <argument pos:start="235:59" pos:end="235:59"><expr pos:start="235:59" pos:end="235:59"><literal type="number" pos:start="235:59" pos:end="235:59">0</literal></expr></argument>, <argument pos:start="235:62" pos:end="235:62"><expr pos:start="235:62" pos:end="235:62"><literal type="number" pos:start="235:62" pos:end="235:62">0</literal></expr></argument>, <argument pos:start="235:65" pos:end="235:84"><expr pos:start="235:65" pos:end="235:84"><name pos:start="235:65" pos:end="235:69">level</name><operator pos:start="235:70" pos:end="235:70">-</operator><name pos:start="235:71" pos:end="235:82">LOG2_MB_SIZE</name><operator pos:start="235:83" pos:end="235:83">+</operator><literal type="number" pos:start="235:84" pos:end="235:84">4</literal></expr></argument>, <argument pos:start="235:87" pos:end="235:93"><expr pos:start="235:87" pos:end="235:93"><name pos:start="235:87" pos:end="235:93">block_w</name></expr></argument>, <argument pos:start="235:96" pos:end="235:96"><expr pos:start="235:96" pos:end="235:96"><literal type="number" pos:start="235:96" pos:end="235:96">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:55"><expr pos:start="237:9" pos:end="237:54"><name pos:start="237:9" pos:end="237:17">ref_score</name><operator pos:start="237:18" pos:end="237:19">+=</operator> <literal type="number" pos:start="237:21" pos:end="237:21">2</literal><operator pos:start="237:22" pos:end="237:22">*</operator><call pos:start="237:23" pos:end="237:36"><name pos:start="237:23" pos:end="237:29">av_log2</name><argument_list pos:start="237:30" pos:end="237:36">(<argument pos:start="237:31" pos:end="237:35"><expr pos:start="237:31" pos:end="237:35"><literal type="number" pos:start="237:31" pos:end="237:31">2</literal><operator pos:start="237:32" pos:end="237:32">*</operator><name pos:start="237:33" pos:end="237:35">ref</name></expr></argument>)</argument_list></call><operator pos:start="237:37" pos:end="237:37">*</operator><name pos:start="237:38" pos:end="237:54"><name pos:start="237:38" pos:end="237:38">c</name><operator pos:start="237:39" pos:end="237:40">-&gt;</operator><name pos:start="237:41" pos:end="237:54">penalty_factor</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="239:9" pos:end="247:9"><if pos:start="239:9" pos:end="247:9">if<condition pos:start="239:11" pos:end="239:27">(<expr pos:start="239:12" pos:end="239:26"><name pos:start="239:12" pos:end="239:26"><name pos:start="239:12" pos:end="239:12">s</name><operator pos:start="239:13" pos:end="239:14">-&gt;</operator><name pos:start="239:15" pos:end="239:21">ref_mvs</name><index pos:start="239:22" pos:end="239:26">[<expr pos:start="239:23" pos:end="239:25"><name pos:start="239:23" pos:end="239:25">ref</name></expr>]</index></name></expr>)</condition><block pos:start="239:28" pos:end="247:9">{<block_content pos:start="241:13" pos:end="245:49">

            <expr_stmt pos:start="241:13" pos:end="241:46"><expr pos:start="241:13" pos:end="241:45"><name pos:start="241:13" pos:end="241:37"><name pos:start="241:13" pos:end="241:13">s</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:22">ref_mvs</name><index pos:start="241:23" pos:end="241:27">[<expr pos:start="241:24" pos:end="241:26"><name pos:start="241:24" pos:end="241:26">ref</name></expr>]</index><index pos:start="241:28" pos:end="241:34">[<expr pos:start="241:29" pos:end="241:33"><name pos:start="241:29" pos:end="241:33">index</name></expr>]</index><index pos:start="241:35" pos:end="241:37">[<expr pos:start="241:36" pos:end="241:36"><literal type="number" pos:start="241:36" pos:end="241:36">0</literal></expr>]</index></name><operator pos:start="241:38" pos:end="241:38">=</operator> <name pos:start="241:40" pos:end="241:45">ref_mx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:46"><expr pos:start="243:13" pos:end="243:45"><name pos:start="243:13" pos:end="243:37"><name pos:start="243:13" pos:end="243:13">s</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:22">ref_mvs</name><index pos:start="243:23" pos:end="243:27">[<expr pos:start="243:24" pos:end="243:26"><name pos:start="243:24" pos:end="243:26">ref</name></expr>]</index><index pos:start="243:28" pos:end="243:34">[<expr pos:start="243:29" pos:end="243:33"><name pos:start="243:29" pos:end="243:33">index</name></expr>]</index><index pos:start="243:35" pos:end="243:37">[<expr pos:start="243:36" pos:end="243:36"><literal type="number" pos:start="243:36" pos:end="243:36">1</literal></expr>]</index></name><operator pos:start="243:38" pos:end="243:38">=</operator> <name pos:start="243:40" pos:end="243:45">ref_my</name></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:49"><expr pos:start="245:13" pos:end="245:48"><name pos:start="245:13" pos:end="245:37"><name pos:start="245:13" pos:end="245:13">s</name><operator pos:start="245:14" pos:end="245:15">-&gt;</operator><name pos:start="245:16" pos:end="245:25">ref_scores</name><index pos:start="245:26" pos:end="245:30">[<expr pos:start="245:27" pos:end="245:29"><name pos:start="245:27" pos:end="245:29">ref</name></expr>]</index><index pos:start="245:31" pos:end="245:37">[<expr pos:start="245:32" pos:end="245:36"><name pos:start="245:32" pos:end="245:36">index</name></expr>]</index></name><operator pos:start="245:38" pos:end="245:38">=</operator> <name pos:start="245:40" pos:end="245:48">ref_score</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="249:9" pos:end="259:9"><if pos:start="249:9" pos:end="259:9">if<condition pos:start="249:11" pos:end="249:29">(<expr pos:start="249:12" pos:end="249:28"><name pos:start="249:12" pos:end="249:16">score</name> <operator pos:start="249:18" pos:end="249:18">&gt;</operator> <name pos:start="249:20" pos:end="249:28">ref_score</name></expr>)</condition><block pos:start="249:30" pos:end="259:9">{<block_content pos:start="251:13" pos:end="257:23">

            <expr_stmt pos:start="251:13" pos:end="251:29"><expr pos:start="251:13" pos:end="251:28"><name pos:start="251:13" pos:end="251:17">score</name><operator pos:start="251:18" pos:end="251:18">=</operator> <name pos:start="251:20" pos:end="251:28">ref_score</name></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:26"><expr pos:start="253:13" pos:end="253:25"><name pos:start="253:13" pos:end="253:20">best_ref</name><operator pos:start="253:21" pos:end="253:21">=</operator> <name pos:start="253:23" pos:end="253:25">ref</name></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:23"><expr pos:start="255:13" pos:end="255:22"><name pos:start="255:13" pos:end="255:14">mx</name><operator pos:start="255:15" pos:end="255:15">=</operator> <name pos:start="255:17" pos:end="255:22">ref_mx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:23"><expr pos:start="257:13" pos:end="257:22"><name pos:start="257:13" pos:end="257:14">my</name><operator pos:start="257:15" pos:end="257:15">=</operator> <name pos:start="257:17" pos:end="257:22">ref_my</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="line" pos:start="263:5" pos:end="263:95">//FIXME if mb_cmp != SSE then intra cannot be compared currently and mb_penalty vs. lambda2</comment>



  <comment type="line" pos:start="267:3" pos:end="267:19">//  subpel search</comment>

    <expr_stmt pos:start="269:5" pos:end="269:82"><expr pos:start="269:5" pos:end="269:81"><name pos:start="269:5" pos:end="269:13">base_bits</name><operator pos:start="269:14" pos:end="269:14">=</operator> <call pos:start="269:16" pos:end="269:35"><name pos:start="269:16" pos:end="269:28">get_rac_count</name><argument_list pos:start="269:29" pos:end="269:35">(<argument pos:start="269:30" pos:end="269:34"><expr pos:start="269:30" pos:end="269:34"><operator pos:start="269:30" pos:end="269:30">&amp;</operator><name pos:start="269:31" pos:end="269:34"><name pos:start="269:31" pos:end="269:31">s</name><operator pos:start="269:32" pos:end="269:33">-&gt;</operator><name pos:start="269:34" pos:end="269:34">c</name></name></expr></argument>)</argument_list></call> <operator pos:start="269:37" pos:end="269:37">-</operator> <literal type="number" pos:start="269:39" pos:end="269:39">8</literal><operator pos:start="269:40" pos:end="269:40">*</operator><operator pos:start="269:41" pos:end="269:41">(</operator><name pos:start="269:42" pos:end="269:56"><name pos:start="269:42" pos:end="269:42">s</name><operator pos:start="269:43" pos:end="269:44">-&gt;</operator><name pos:start="269:45" pos:end="269:45">c</name><operator pos:start="269:46" pos:end="269:46">.</operator><name pos:start="269:47" pos:end="269:56">bytestream</name></name> <operator pos:start="269:58" pos:end="269:58">-</operator> <name pos:start="269:60" pos:end="269:80"><name pos:start="269:60" pos:end="269:60">s</name><operator pos:start="269:61" pos:end="269:62">-&gt;</operator><name pos:start="269:63" pos:end="269:63">c</name><operator pos:start="269:64" pos:end="269:64">.</operator><name pos:start="269:65" pos:end="269:80">bytestream_start</name></name><operator pos:start="269:81" pos:end="269:81">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="271:5" pos:end="271:13"><expr pos:start="271:5" pos:end="271:12"><name pos:start="271:5" pos:end="271:6">pc</name><operator pos:start="271:7" pos:end="271:7">=</operator> <name pos:start="271:9" pos:end="271:12"><name pos:start="271:9" pos:end="271:9">s</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:12">c</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="273:5" pos:end="275:28"><expr pos:start="273:5" pos:end="275:27"><name pos:start="273:5" pos:end="273:23"><name pos:start="273:5" pos:end="273:6">pc</name><operator pos:start="273:7" pos:end="273:7">.</operator><name pos:start="273:8" pos:end="273:23">bytestream_start</name></name><operator pos:start="273:24" pos:end="273:24">=</operator>

    <name pos:start="275:5" pos:end="275:17"><name pos:start="275:5" pos:end="275:6">pc</name><operator pos:start="275:7" pos:end="275:7">.</operator><name pos:start="275:8" pos:end="275:17">bytestream</name></name><operator pos:start="275:18" pos:end="275:18">=</operator> <name pos:start="275:20" pos:end="275:27">p_buffer</name></expr>;</expr_stmt> <comment type="line" pos:start="275:30" pos:end="275:69">//FIXME end/start? and at the other stoo</comment>

    <expr_stmt pos:start="277:5" pos:end="277:60"><expr pos:start="277:5" pos:end="277:59"><call pos:start="277:5" pos:end="277:59"><name pos:start="277:5" pos:end="277:10">memcpy</name><argument_list pos:start="277:11" pos:end="277:59">(<argument pos:start="277:12" pos:end="277:18"><expr pos:start="277:12" pos:end="277:18"><name pos:start="277:12" pos:end="277:18">p_state</name></expr></argument>, <argument pos:start="277:21" pos:end="277:34"><expr pos:start="277:21" pos:end="277:34"><name pos:start="277:21" pos:end="277:34"><name pos:start="277:21" pos:end="277:21">s</name><operator pos:start="277:22" pos:end="277:23">-&gt;</operator><name pos:start="277:24" pos:end="277:34">block_state</name></name></expr></argument>, <argument pos:start="277:37" pos:end="277:58"><expr pos:start="277:37" pos:end="277:58"><sizeof pos:start="277:37" pos:end="277:58">sizeof<argument_list pos:start="277:43" pos:end="277:58">(<argument pos:start="277:44" pos:end="277:57"><expr pos:start="277:44" pos:end="277:57"><name pos:start="277:44" pos:end="277:57"><name pos:start="277:44" pos:end="277:44">s</name><operator pos:start="277:45" pos:end="277:46">-&gt;</operator><name pos:start="277:47" pos:end="277:57">block_state</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="281:5" pos:end="283:49"><if pos:start="281:5" pos:end="283:49">if<condition pos:start="281:7" pos:end="281:33">(<expr pos:start="281:8" pos:end="281:32"><name pos:start="281:8" pos:end="281:12">level</name><operator pos:start="281:13" pos:end="281:14">!=</operator><name pos:start="281:15" pos:end="281:32"><name pos:start="281:15" pos:end="281:15">s</name><operator pos:start="281:16" pos:end="281:17">-&gt;</operator><name pos:start="281:18" pos:end="281:32">block_max_depth</name></name></expr>)</condition><block type="pseudo" pos:start="283:9" pos:end="283:49"><block_content pos:start="283:9" pos:end="283:49">

        <expr_stmt pos:start="283:9" pos:end="283:49"><expr pos:start="283:9" pos:end="283:48"><call pos:start="283:9" pos:end="283:48"><name pos:start="283:9" pos:end="283:15">put_rac</name><argument_list pos:start="283:16" pos:end="283:48">(<argument pos:start="283:17" pos:end="283:19"><expr pos:start="283:17" pos:end="283:19"><operator pos:start="283:17" pos:end="283:17">&amp;</operator><name pos:start="283:18" pos:end="283:19">pc</name></expr></argument>, <argument pos:start="283:22" pos:end="283:44"><expr pos:start="283:22" pos:end="283:44"><operator pos:start="283:22" pos:end="283:22">&amp;</operator><name pos:start="283:23" pos:end="283:44"><name pos:start="283:23" pos:end="283:29">p_state</name><index pos:start="283:30" pos:end="283:44">[<expr pos:start="283:31" pos:end="283:43"><literal type="number" pos:start="283:31" pos:end="283:33">4</literal> <operator pos:start="283:33" pos:end="283:33">+</operator> <name pos:start="283:35" pos:end="283:43">s_context</name></expr>]</index></name></expr></argument>, <argument pos:start="283:47" pos:end="283:47"><expr pos:start="283:47" pos:end="283:47"><literal type="number" pos:start="283:47" pos:end="283:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:58"><expr pos:start="285:5" pos:end="285:57"><call pos:start="285:5" pos:end="285:57"><name pos:start="285:5" pos:end="285:11">put_rac</name><argument_list pos:start="285:12" pos:end="285:57">(<argument pos:start="285:13" pos:end="285:15"><expr pos:start="285:13" pos:end="285:15"><operator pos:start="285:13" pos:end="285:13">&amp;</operator><name pos:start="285:14" pos:end="285:15">pc</name></expr></argument>, <argument pos:start="285:18" pos:end="285:53"><expr pos:start="285:18" pos:end="285:53"><operator pos:start="285:18" pos:end="285:18">&amp;</operator><name pos:start="285:19" pos:end="285:53"><name pos:start="285:19" pos:end="285:25">p_state</name><index pos:start="285:26" pos:end="285:53">[<expr pos:start="285:27" pos:end="285:52"><literal type="number" pos:start="285:27" pos:end="285:29">1</literal> <operator pos:start="285:29" pos:end="285:29">+</operator> <name pos:start="285:31" pos:end="285:40"><name pos:start="285:31" pos:end="285:34">left</name><operator pos:start="285:35" pos:end="285:36">-&gt;</operator><name pos:start="285:37" pos:end="285:40">type</name></name> <operator pos:start="285:42" pos:end="285:42">+</operator> <name pos:start="285:44" pos:end="285:52"><name pos:start="285:44" pos:end="285:46">top</name><operator pos:start="285:47" pos:end="285:48">-&gt;</operator><name pos:start="285:49" pos:end="285:52">type</name></name></expr>]</index></name></expr></argument>, <argument pos:start="285:56" pos:end="285:56"><expr pos:start="285:56" pos:end="285:56"><literal type="number" pos:start="285:56" pos:end="285:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="287:5" pos:end="289:76"><if pos:start="287:5" pos:end="289:76">if<condition pos:start="287:7" pos:end="287:25">(<expr pos:start="287:8" pos:end="287:24"><name pos:start="287:8" pos:end="287:20"><name pos:start="287:8" pos:end="287:8">s</name><operator pos:start="287:9" pos:end="287:10">-&gt;</operator><name pos:start="287:11" pos:end="287:20">ref_frames</name></name> <operator pos:start="287:22" pos:end="287:22">&gt;</operator> <literal type="number" pos:start="287:24" pos:end="287:24">1</literal></expr>)</condition><block type="pseudo" pos:start="289:9" pos:end="289:76"><block_content pos:start="289:9" pos:end="289:76">

        <expr_stmt pos:start="289:9" pos:end="289:76"><expr pos:start="289:9" pos:end="289:75"><call pos:start="289:9" pos:end="289:75"><name pos:start="289:9" pos:end="289:18">put_symbol</name><argument_list pos:start="289:19" pos:end="289:75">(<argument pos:start="289:20" pos:end="289:22"><expr pos:start="289:20" pos:end="289:22"><operator pos:start="289:20" pos:end="289:20">&amp;</operator><name pos:start="289:21" pos:end="289:22">pc</name></expr></argument>, <argument pos:start="289:25" pos:end="289:61"><expr pos:start="289:25" pos:end="289:61"><operator pos:start="289:25" pos:end="289:25">&amp;</operator><name pos:start="289:26" pos:end="289:61"><name pos:start="289:26" pos:end="289:32">p_state</name><index pos:start="289:33" pos:end="289:61">[<expr pos:start="289:34" pos:end="289:60"><literal type="number" pos:start="289:34" pos:end="289:38">128</literal> <operator pos:start="289:38" pos:end="289:38">+</operator> <literal type="number" pos:start="289:40" pos:end="289:45">1024</literal> <operator pos:start="289:45" pos:end="289:45">+</operator> <literal type="number" pos:start="289:47" pos:end="289:48">32</literal><operator pos:start="289:49" pos:end="289:49">*</operator><name pos:start="289:50" pos:end="289:60">ref_context</name></expr>]</index></name></expr></argument>, <argument pos:start="289:64" pos:end="289:71"><expr pos:start="289:64" pos:end="289:71"><name pos:start="289:64" pos:end="289:71">best_ref</name></expr></argument>, <argument pos:start="289:74" pos:end="289:74"><expr pos:start="289:74" pos:end="289:74"><literal type="number" pos:start="289:74" pos:end="289:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="291:5" pos:end="291:52"><expr pos:start="291:5" pos:end="291:51"><call pos:start="291:5" pos:end="291:51"><name pos:start="291:5" pos:end="291:11">pred_mv</name><argument_list pos:start="291:12" pos:end="291:51">(<argument pos:start="291:13" pos:end="291:13"><expr pos:start="291:13" pos:end="291:13"><name pos:start="291:13" pos:end="291:13">s</name></expr></argument>, <argument pos:start="291:16" pos:end="291:19"><expr pos:start="291:16" pos:end="291:19"><operator pos:start="291:16" pos:end="291:16">&amp;</operator><name pos:start="291:17" pos:end="291:19">pmx</name></expr></argument>, <argument pos:start="291:22" pos:end="291:25"><expr pos:start="291:22" pos:end="291:25"><operator pos:start="291:22" pos:end="291:22">&amp;</operator><name pos:start="291:23" pos:end="291:25">pmy</name></expr></argument>, <argument pos:start="291:28" pos:end="291:35"><expr pos:start="291:28" pos:end="291:35"><name pos:start="291:28" pos:end="291:35">best_ref</name></expr></argument>, <argument pos:start="291:38" pos:end="291:41"><expr pos:start="291:38" pos:end="291:41"><name pos:start="291:38" pos:end="291:41">left</name></expr></argument>, <argument pos:start="291:44" pos:end="291:46"><expr pos:start="291:44" pos:end="291:46"><name pos:start="291:44" pos:end="291:46">top</name></expr></argument>, <argument pos:start="291:49" pos:end="291:50"><expr pos:start="291:49" pos:end="291:50"><name pos:start="291:49" pos:end="291:50">tr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:82"><expr pos:start="293:5" pos:end="293:81"><call pos:start="293:5" pos:end="293:81"><name pos:start="293:5" pos:end="293:14">put_symbol</name><argument_list pos:start="293:15" pos:end="293:81">(<argument pos:start="293:16" pos:end="293:18"><expr pos:start="293:16" pos:end="293:18"><operator pos:start="293:16" pos:end="293:16">&amp;</operator><name pos:start="293:17" pos:end="293:18">pc</name></expr></argument>, <argument pos:start="293:21" pos:end="293:67"><expr pos:start="293:21" pos:end="293:67"><operator pos:start="293:21" pos:end="293:21">&amp;</operator><name pos:start="293:22" pos:end="293:67"><name pos:start="293:22" pos:end="293:28">p_state</name><index pos:start="293:29" pos:end="293:67">[<expr pos:start="293:30" pos:end="293:66"><literal type="number" pos:start="293:30" pos:end="293:34">128</literal> <operator pos:start="293:34" pos:end="293:34">+</operator> <literal type="number" pos:start="293:36" pos:end="293:37">32</literal><operator pos:start="293:38" pos:end="293:38">*</operator><operator pos:start="293:39" pos:end="293:39">(</operator><name pos:start="293:40" pos:end="293:49">mx_context</name> <operator pos:start="293:51" pos:end="293:51">+</operator> <literal type="number" pos:start="293:53" pos:end="293:54">16</literal><operator pos:start="293:55" pos:end="293:55">*</operator><operator pos:start="293:56" pos:end="293:56">!</operator><operator pos:start="293:57" pos:end="293:57">!</operator><name pos:start="293:58" pos:end="293:65">best_ref</name><operator pos:start="293:66" pos:end="293:66">)</operator></expr>]</index></name></expr></argument>, <argument pos:start="293:70" pos:end="293:77"><expr pos:start="293:70" pos:end="293:77"><name pos:start="293:70" pos:end="293:71">mx</name> <operator pos:start="293:73" pos:end="293:73">-</operator> <name pos:start="293:75" pos:end="293:77">pmx</name></expr></argument>, <argument pos:start="293:80" pos:end="293:80"><expr pos:start="293:80" pos:end="293:80"><literal type="number" pos:start="293:80" pos:end="293:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="295:5" pos:end="295:82"><expr pos:start="295:5" pos:end="295:81"><call pos:start="295:5" pos:end="295:81"><name pos:start="295:5" pos:end="295:14">put_symbol</name><argument_list pos:start="295:15" pos:end="295:81">(<argument pos:start="295:16" pos:end="295:18"><expr pos:start="295:16" pos:end="295:18"><operator pos:start="295:16" pos:end="295:16">&amp;</operator><name pos:start="295:17" pos:end="295:18">pc</name></expr></argument>, <argument pos:start="295:21" pos:end="295:67"><expr pos:start="295:21" pos:end="295:67"><operator pos:start="295:21" pos:end="295:21">&amp;</operator><name pos:start="295:22" pos:end="295:67"><name pos:start="295:22" pos:end="295:28">p_state</name><index pos:start="295:29" pos:end="295:67">[<expr pos:start="295:30" pos:end="295:66"><literal type="number" pos:start="295:30" pos:end="295:34">128</literal> <operator pos:start="295:34" pos:end="295:34">+</operator> <literal type="number" pos:start="295:36" pos:end="295:37">32</literal><operator pos:start="295:38" pos:end="295:38">*</operator><operator pos:start="295:39" pos:end="295:39">(</operator><name pos:start="295:40" pos:end="295:49">my_context</name> <operator pos:start="295:51" pos:end="295:51">+</operator> <literal type="number" pos:start="295:53" pos:end="295:54">16</literal><operator pos:start="295:55" pos:end="295:55">*</operator><operator pos:start="295:56" pos:end="295:56">!</operator><operator pos:start="295:57" pos:end="295:57">!</operator><name pos:start="295:58" pos:end="295:65">best_ref</name><operator pos:start="295:66" pos:end="295:66">)</operator></expr>]</index></name></expr></argument>, <argument pos:start="295:70" pos:end="295:77"><expr pos:start="295:70" pos:end="295:77"><name pos:start="295:70" pos:end="295:71">my</name> <operator pos:start="295:73" pos:end="295:73">-</operator> <name pos:start="295:75" pos:end="295:77">pmy</name></expr></argument>, <argument pos:start="295:80" pos:end="295:80"><expr pos:start="295:80" pos:end="295:80"><literal type="number" pos:start="295:80" pos:end="295:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:47"><expr pos:start="297:5" pos:end="297:46"><name pos:start="297:5" pos:end="297:9">p_len</name><operator pos:start="297:10" pos:end="297:10">=</operator> <name pos:start="297:12" pos:end="297:24"><name pos:start="297:12" pos:end="297:13">pc</name><operator pos:start="297:14" pos:end="297:14">.</operator><name pos:start="297:15" pos:end="297:24">bytestream</name></name> <operator pos:start="297:26" pos:end="297:26">-</operator> <name pos:start="297:28" pos:end="297:46"><name pos:start="297:28" pos:end="297:29">pc</name><operator pos:start="297:30" pos:end="297:30">.</operator><name pos:start="297:31" pos:end="297:46">bytestream_start</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:74"><expr pos:start="299:5" pos:end="299:73"><name pos:start="299:5" pos:end="299:9">score</name> <operator pos:start="299:11" pos:end="299:12">+=</operator> <operator pos:start="299:14" pos:end="299:14">(</operator><name pos:start="299:15" pos:end="299:24"><name pos:start="299:15" pos:end="299:15">s</name><operator pos:start="299:16" pos:end="299:17">-&gt;</operator><name pos:start="299:18" pos:end="299:24">lambda2</name></name><operator pos:start="299:25" pos:end="299:25">*</operator><operator pos:start="299:26" pos:end="299:26">(</operator><call pos:start="299:27" pos:end="299:44"><name pos:start="299:27" pos:end="299:39">get_rac_count</name><argument_list pos:start="299:40" pos:end="299:44">(<argument pos:start="299:41" pos:end="299:43"><expr pos:start="299:41" pos:end="299:43"><operator pos:start="299:41" pos:end="299:41">&amp;</operator><name pos:start="299:42" pos:end="299:43">pc</name></expr></argument>)</argument_list></call><operator pos:start="299:45" pos:end="299:45">-</operator><name pos:start="299:46" pos:end="299:54">base_bits</name><operator pos:start="299:55" pos:end="299:55">)</operator><operator pos:start="299:56" pos:end="299:56">)</operator><operator pos:start="299:57" pos:end="299:58">&gt;&gt;</operator><name pos:start="299:59" pos:end="299:73">FF_LAMBDA_SHIFT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="303:5" pos:end="303:29"><expr pos:start="303:5" pos:end="303:28"><name pos:start="303:5" pos:end="303:11">block_s</name><operator pos:start="303:12" pos:end="303:12">=</operator> <name pos:start="303:14" pos:end="303:20">block_w</name><operator pos:start="303:21" pos:end="303:21">*</operator><name pos:start="303:22" pos:end="303:28">block_w</name></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:61"><expr pos:start="305:5" pos:end="305:60"><name pos:start="305:5" pos:end="305:7">sum</name> <operator pos:start="305:9" pos:end="305:9">=</operator> <call pos:start="305:11" pos:end="305:60"><name pos:start="305:11" pos:end="305:17">pix_sum</name><argument_list pos:start="305:18" pos:end="305:60">(<argument pos:start="305:19" pos:end="305:33"><expr pos:start="305:19" pos:end="305:33"><name pos:start="305:19" pos:end="305:33"><name pos:start="305:19" pos:end="305:30">current_data</name><index pos:start="305:31" pos:end="305:33">[<expr pos:start="305:32" pos:end="305:32"><literal type="number" pos:start="305:32" pos:end="305:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="305:36" pos:end="305:41"><expr pos:start="305:36" pos:end="305:41"><name pos:start="305:36" pos:end="305:41">stride</name></expr></argument>, <argument pos:start="305:44" pos:end="305:50"><expr pos:start="305:44" pos:end="305:50"><name pos:start="305:44" pos:end="305:50">block_w</name></expr></argument>, <argument pos:start="305:53" pos:end="305:59"><expr pos:start="305:53" pos:end="305:59"><name pos:start="305:53" pos:end="305:59">block_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:33"><expr pos:start="307:5" pos:end="307:32"><name pos:start="307:5" pos:end="307:5">l</name><operator pos:start="307:6" pos:end="307:6">=</operator> <operator pos:start="307:8" pos:end="307:8">(</operator><name pos:start="307:9" pos:end="307:11">sum</name> <operator pos:start="307:13" pos:end="307:13">+</operator> <name pos:start="307:15" pos:end="307:21">block_s</name><operator pos:start="307:22" pos:end="307:22">/</operator><literal type="number" pos:start="307:23" pos:end="307:23">2</literal><operator pos:start="307:24" pos:end="307:24">)</operator><operator pos:start="307:25" pos:end="307:25">/</operator><name pos:start="307:26" pos:end="307:32">block_s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:81"><expr pos:start="309:5" pos:end="309:80"><name pos:start="309:5" pos:end="309:10">iscore</name> <operator pos:start="309:12" pos:end="309:12">=</operator> <call pos:start="309:14" pos:end="309:56"><name pos:start="309:14" pos:end="309:22">pix_norm1</name><argument_list pos:start="309:23" pos:end="309:56">(<argument pos:start="309:24" pos:end="309:38"><expr pos:start="309:24" pos:end="309:38"><name pos:start="309:24" pos:end="309:38"><name pos:start="309:24" pos:end="309:35">current_data</name><index pos:start="309:36" pos:end="309:38">[<expr pos:start="309:37" pos:end="309:37"><literal type="number" pos:start="309:37" pos:end="309:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="309:41" pos:end="309:46"><expr pos:start="309:41" pos:end="309:46"><name pos:start="309:41" pos:end="309:46">stride</name></expr></argument>, <argument pos:start="309:49" pos:end="309:55"><expr pos:start="309:49" pos:end="309:55"><name pos:start="309:49" pos:end="309:55">block_w</name></expr></argument>)</argument_list></call> <operator pos:start="309:58" pos:end="309:58">-</operator> <literal type="number" pos:start="309:60" pos:end="309:60">2</literal><operator pos:start="309:61" pos:end="309:61">*</operator><name pos:start="309:62" pos:end="309:62">l</name><operator pos:start="309:63" pos:end="309:63">*</operator><name pos:start="309:64" pos:end="309:66">sum</name> <operator pos:start="309:68" pos:end="309:68">+</operator> <name pos:start="309:70" pos:end="309:70">l</name><operator pos:start="309:71" pos:end="309:71">*</operator><name pos:start="309:72" pos:end="309:72">l</name><operator pos:start="309:73" pos:end="309:73">*</operator><name pos:start="309:74" pos:end="309:80">block_s</name></expr>;</expr_stmt>



    <if_stmt pos:start="313:5" pos:end="331:20"><if pos:start="313:5" pos:end="329:5">if <condition pos:start="313:8" pos:end="313:25">(<expr pos:start="313:9" pos:end="313:24"><name pos:start="313:9" pos:end="313:20"><name pos:start="313:9" pos:end="313:9">s</name><operator pos:start="313:10" pos:end="313:11">-&gt;</operator><name pos:start="313:12" pos:end="313:20">nb_planes</name></name> <operator pos:start="313:22" pos:end="313:22">&gt;</operator> <literal type="number" pos:start="313:24" pos:end="313:24">2</literal></expr>)</condition> <block pos:start="313:27" pos:end="329:5">{<block_content pos:start="315:9" pos:end="325:38">

        <expr_stmt pos:start="315:9" pos:end="315:74"><expr pos:start="315:9" pos:end="315:73"><name pos:start="315:9" pos:end="315:15">block_s</name><operator pos:start="315:16" pos:end="315:16">=</operator> <name pos:start="315:18" pos:end="315:24">block_w</name><operator pos:start="315:25" pos:end="315:25">*</operator><name pos:start="315:26" pos:end="315:32">block_w</name><operator pos:start="315:33" pos:end="315:34">&gt;&gt;</operator><operator pos:start="315:35" pos:end="315:35">(</operator><name pos:start="315:36" pos:end="315:52"><name pos:start="315:36" pos:end="315:36">s</name><operator pos:start="315:37" pos:end="315:38">-&gt;</operator><name pos:start="315:39" pos:end="315:52">chroma_h_shift</name></name> <operator pos:start="315:54" pos:end="315:54">+</operator> <name pos:start="315:56" pos:end="315:72"><name pos:start="315:56" pos:end="315:56">s</name><operator pos:start="315:57" pos:end="315:58">-&gt;</operator><name pos:start="315:59" pos:end="315:72">chroma_v_shift</name></name><operator pos:start="315:73" pos:end="315:73">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:105"><expr pos:start="317:9" pos:end="317:104"><name pos:start="317:9" pos:end="317:11">sum</name> <operator pos:start="317:13" pos:end="317:13">=</operator> <call pos:start="317:15" pos:end="317:104"><name pos:start="317:15" pos:end="317:21">pix_sum</name><argument_list pos:start="317:22" pos:end="317:104">(<argument pos:start="317:23" pos:end="317:37"><expr pos:start="317:23" pos:end="317:37"><name pos:start="317:23" pos:end="317:37"><name pos:start="317:23" pos:end="317:34">current_data</name><index pos:start="317:35" pos:end="317:37">[<expr pos:start="317:36" pos:end="317:36"><literal type="number" pos:start="317:36" pos:end="317:36">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="317:40" pos:end="317:47"><expr pos:start="317:40" pos:end="317:47"><name pos:start="317:40" pos:end="317:47">uvstride</name></expr></argument>, <argument pos:start="317:50" pos:end="317:75"><expr pos:start="317:50" pos:end="317:75"><name pos:start="317:50" pos:end="317:56">block_w</name><operator pos:start="317:57" pos:end="317:58">&gt;&gt;</operator><name pos:start="317:59" pos:end="317:75"><name pos:start="317:59" pos:end="317:59">s</name><operator pos:start="317:60" pos:end="317:61">-&gt;</operator><name pos:start="317:62" pos:end="317:75">chroma_h_shift</name></name></expr></argument>, <argument pos:start="317:78" pos:end="317:103"><expr pos:start="317:78" pos:end="317:103"><name pos:start="317:78" pos:end="317:84">block_w</name><operator pos:start="317:85" pos:end="317:86">&gt;&gt;</operator><name pos:start="317:87" pos:end="317:103"><name pos:start="317:87" pos:end="317:87">s</name><operator pos:start="317:88" pos:end="317:89">-&gt;</operator><name pos:start="317:90" pos:end="317:103">chroma_v_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:38"><expr pos:start="319:9" pos:end="319:37"><name pos:start="319:9" pos:end="319:10">cb</name><operator pos:start="319:11" pos:end="319:11">=</operator> <operator pos:start="319:13" pos:end="319:13">(</operator><name pos:start="319:14" pos:end="319:16">sum</name> <operator pos:start="319:18" pos:end="319:18">+</operator> <name pos:start="319:20" pos:end="319:26">block_s</name><operator pos:start="319:27" pos:end="319:27">/</operator><literal type="number" pos:start="319:28" pos:end="319:28">2</literal><operator pos:start="319:29" pos:end="319:29">)</operator><operator pos:start="319:30" pos:end="319:30">/</operator><name pos:start="319:31" pos:end="319:37">block_s</name></expr>;</expr_stmt>

    <comment type="line" pos:start="321:5" pos:end="321:98">//    iscore += pix_norm1(&amp;current_mb[1][0], uvstride, block_w&gt;&gt;1) - 2*cb*sum + cb*cb*block_s;</comment>

        <expr_stmt pos:start="323:9" pos:end="323:105"><expr pos:start="323:9" pos:end="323:104"><name pos:start="323:9" pos:end="323:11">sum</name> <operator pos:start="323:13" pos:end="323:13">=</operator> <call pos:start="323:15" pos:end="323:104"><name pos:start="323:15" pos:end="323:21">pix_sum</name><argument_list pos:start="323:22" pos:end="323:104">(<argument pos:start="323:23" pos:end="323:37"><expr pos:start="323:23" pos:end="323:37"><name pos:start="323:23" pos:end="323:37"><name pos:start="323:23" pos:end="323:34">current_data</name><index pos:start="323:35" pos:end="323:37">[<expr pos:start="323:36" pos:end="323:36"><literal type="number" pos:start="323:36" pos:end="323:36">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="323:40" pos:end="323:47"><expr pos:start="323:40" pos:end="323:47"><name pos:start="323:40" pos:end="323:47">uvstride</name></expr></argument>, <argument pos:start="323:50" pos:end="323:75"><expr pos:start="323:50" pos:end="323:75"><name pos:start="323:50" pos:end="323:56">block_w</name><operator pos:start="323:57" pos:end="323:58">&gt;&gt;</operator><name pos:start="323:59" pos:end="323:75"><name pos:start="323:59" pos:end="323:59">s</name><operator pos:start="323:60" pos:end="323:61">-&gt;</operator><name pos:start="323:62" pos:end="323:75">chroma_h_shift</name></name></expr></argument>, <argument pos:start="323:78" pos:end="323:103"><expr pos:start="323:78" pos:end="323:103"><name pos:start="323:78" pos:end="323:84">block_w</name><operator pos:start="323:85" pos:end="323:86">&gt;&gt;</operator><name pos:start="323:87" pos:end="323:103"><name pos:start="323:87" pos:end="323:87">s</name><operator pos:start="323:88" pos:end="323:89">-&gt;</operator><name pos:start="323:90" pos:end="323:103">chroma_v_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:38"><expr pos:start="325:9" pos:end="325:37"><name pos:start="325:9" pos:end="325:10">cr</name><operator pos:start="325:11" pos:end="325:11">=</operator> <operator pos:start="325:13" pos:end="325:13">(</operator><name pos:start="325:14" pos:end="325:16">sum</name> <operator pos:start="325:18" pos:end="325:18">+</operator> <name pos:start="325:20" pos:end="325:26">block_s</name><operator pos:start="325:27" pos:end="325:27">/</operator><literal type="number" pos:start="325:28" pos:end="325:28">2</literal><operator pos:start="325:29" pos:end="325:29">)</operator><operator pos:start="325:30" pos:end="325:30">/</operator><name pos:start="325:31" pos:end="325:37">block_s</name></expr>;</expr_stmt>

    <comment type="line" pos:start="327:5" pos:end="327:98">//    iscore += pix_norm1(&amp;current_mb[2][0], uvstride, block_w&gt;&gt;1) - 2*cr*sum + cr*cr*block_s;</comment>

    </block_content>}</block></if><else pos:start="329:6" pos:end="331:20">else<block type="pseudo" pos:start="331:9" pos:end="331:20"><block_content pos:start="331:9" pos:end="331:20">

        <expr_stmt pos:start="331:9" pos:end="331:20"><expr pos:start="331:9" pos:end="331:19"><name pos:start="331:9" pos:end="331:10">cb</name> <operator pos:start="331:12" pos:end="331:12">=</operator> <name pos:start="331:14" pos:end="331:15">cr</name> <operator pos:start="331:17" pos:end="331:17">=</operator> <literal type="number" pos:start="331:19" pos:end="331:19">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="335:5" pos:end="335:13"><expr pos:start="335:5" pos:end="335:12"><name pos:start="335:5" pos:end="335:6">ic</name><operator pos:start="335:7" pos:end="335:7">=</operator> <name pos:start="335:9" pos:end="335:12"><name pos:start="335:9" pos:end="335:9">s</name><operator pos:start="335:10" pos:end="335:11">-&gt;</operator><name pos:start="335:12" pos:end="335:12">c</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="339:28"><expr pos:start="337:5" pos:end="339:27"><name pos:start="337:5" pos:end="337:23"><name pos:start="337:5" pos:end="337:6">ic</name><operator pos:start="337:7" pos:end="337:7">.</operator><name pos:start="337:8" pos:end="337:23">bytestream_start</name></name><operator pos:start="337:24" pos:end="337:24">=</operator>

    <name pos:start="339:5" pos:end="339:17"><name pos:start="339:5" pos:end="339:6">ic</name><operator pos:start="339:7" pos:end="339:7">.</operator><name pos:start="339:8" pos:end="339:17">bytestream</name></name><operator pos:start="339:18" pos:end="339:18">=</operator> <name pos:start="339:20" pos:end="339:27">i_buffer</name></expr>;</expr_stmt> <comment type="line" pos:start="339:30" pos:end="339:69">//FIXME end/start? and at the other stoo</comment>

    <expr_stmt pos:start="341:5" pos:end="341:60"><expr pos:start="341:5" pos:end="341:59"><call pos:start="341:5" pos:end="341:59"><name pos:start="341:5" pos:end="341:10">memcpy</name><argument_list pos:start="341:11" pos:end="341:59">(<argument pos:start="341:12" pos:end="341:18"><expr pos:start="341:12" pos:end="341:18"><name pos:start="341:12" pos:end="341:18">i_state</name></expr></argument>, <argument pos:start="341:21" pos:end="341:34"><expr pos:start="341:21" pos:end="341:34"><name pos:start="341:21" pos:end="341:34"><name pos:start="341:21" pos:end="341:21">s</name><operator pos:start="341:22" pos:end="341:23">-&gt;</operator><name pos:start="341:24" pos:end="341:34">block_state</name></name></expr></argument>, <argument pos:start="341:37" pos:end="341:58"><expr pos:start="341:37" pos:end="341:58"><sizeof pos:start="341:37" pos:end="341:58">sizeof<argument_list pos:start="341:43" pos:end="341:58">(<argument pos:start="341:44" pos:end="341:57"><expr pos:start="341:44" pos:end="341:57"><name pos:start="341:44" pos:end="341:57"><name pos:start="341:44" pos:end="341:44">s</name><operator pos:start="341:45" pos:end="341:46">-&gt;</operator><name pos:start="341:47" pos:end="341:57">block_state</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="343:5" pos:end="345:49"><if pos:start="343:5" pos:end="345:49">if<condition pos:start="343:7" pos:end="343:33">(<expr pos:start="343:8" pos:end="343:32"><name pos:start="343:8" pos:end="343:12">level</name><operator pos:start="343:13" pos:end="343:14">!=</operator><name pos:start="343:15" pos:end="343:32"><name pos:start="343:15" pos:end="343:15">s</name><operator pos:start="343:16" pos:end="343:17">-&gt;</operator><name pos:start="343:18" pos:end="343:32">block_max_depth</name></name></expr>)</condition><block type="pseudo" pos:start="345:9" pos:end="345:49"><block_content pos:start="345:9" pos:end="345:49">

        <expr_stmt pos:start="345:9" pos:end="345:49"><expr pos:start="345:9" pos:end="345:48"><call pos:start="345:9" pos:end="345:48"><name pos:start="345:9" pos:end="345:15">put_rac</name><argument_list pos:start="345:16" pos:end="345:48">(<argument pos:start="345:17" pos:end="345:19"><expr pos:start="345:17" pos:end="345:19"><operator pos:start="345:17" pos:end="345:17">&amp;</operator><name pos:start="345:18" pos:end="345:19">ic</name></expr></argument>, <argument pos:start="345:22" pos:end="345:44"><expr pos:start="345:22" pos:end="345:44"><operator pos:start="345:22" pos:end="345:22">&amp;</operator><name pos:start="345:23" pos:end="345:44"><name pos:start="345:23" pos:end="345:29">i_state</name><index pos:start="345:30" pos:end="345:44">[<expr pos:start="345:31" pos:end="345:43"><literal type="number" pos:start="345:31" pos:end="345:33">4</literal> <operator pos:start="345:33" pos:end="345:33">+</operator> <name pos:start="345:35" pos:end="345:43">s_context</name></expr>]</index></name></expr></argument>, <argument pos:start="345:47" pos:end="345:47"><expr pos:start="345:47" pos:end="345:47"><literal type="number" pos:start="345:47" pos:end="345:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="347:5" pos:end="347:58"><expr pos:start="347:5" pos:end="347:57"><call pos:start="347:5" pos:end="347:57"><name pos:start="347:5" pos:end="347:11">put_rac</name><argument_list pos:start="347:12" pos:end="347:57">(<argument pos:start="347:13" pos:end="347:15"><expr pos:start="347:13" pos:end="347:15"><operator pos:start="347:13" pos:end="347:13">&amp;</operator><name pos:start="347:14" pos:end="347:15">ic</name></expr></argument>, <argument pos:start="347:18" pos:end="347:53"><expr pos:start="347:18" pos:end="347:53"><operator pos:start="347:18" pos:end="347:18">&amp;</operator><name pos:start="347:19" pos:end="347:53"><name pos:start="347:19" pos:end="347:25">i_state</name><index pos:start="347:26" pos:end="347:53">[<expr pos:start="347:27" pos:end="347:52"><literal type="number" pos:start="347:27" pos:end="347:29">1</literal> <operator pos:start="347:29" pos:end="347:29">+</operator> <name pos:start="347:31" pos:end="347:40"><name pos:start="347:31" pos:end="347:34">left</name><operator pos:start="347:35" pos:end="347:36">-&gt;</operator><name pos:start="347:37" pos:end="347:40">type</name></name> <operator pos:start="347:42" pos:end="347:42">+</operator> <name pos:start="347:44" pos:end="347:52"><name pos:start="347:44" pos:end="347:46">top</name><operator pos:start="347:47" pos:end="347:48">-&gt;</operator><name pos:start="347:49" pos:end="347:52">type</name></name></expr>]</index></name></expr></argument>, <argument pos:start="347:56" pos:end="347:56"><expr pos:start="347:56" pos:end="347:56"><literal type="number" pos:start="347:56" pos:end="347:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="349:5" pos:end="349:45"><expr pos:start="349:5" pos:end="349:44"><call pos:start="349:5" pos:end="349:44"><name pos:start="349:5" pos:end="349:14">put_symbol</name><argument_list pos:start="349:15" pos:end="349:44">(<argument pos:start="349:16" pos:end="349:18"><expr pos:start="349:16" pos:end="349:18"><operator pos:start="349:16" pos:end="349:16">&amp;</operator><name pos:start="349:17" pos:end="349:18">ic</name></expr></argument>, <argument pos:start="349:21" pos:end="349:32"><expr pos:start="349:21" pos:end="349:32"><operator pos:start="349:21" pos:end="349:21">&amp;</operator><name pos:start="349:22" pos:end="349:32"><name pos:start="349:22" pos:end="349:28">i_state</name><index pos:start="349:29" pos:end="349:32">[<expr pos:start="349:30" pos:end="349:31"><literal type="number" pos:start="349:30" pos:end="349:31">32</literal></expr>]</index></name></expr></argument>,  <argument pos:start="349:36" pos:end="349:39"><expr pos:start="349:36" pos:end="349:39"><name pos:start="349:36" pos:end="349:36">l</name><operator pos:start="349:37" pos:end="349:37">-</operator><name pos:start="349:38" pos:end="349:39">pl</name></expr></argument> , <argument pos:start="349:43" pos:end="349:43"><expr pos:start="349:43" pos:end="349:43"><literal type="number" pos:start="349:43" pos:end="349:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="351:5" pos:end="357:5"><if pos:start="351:5" pos:end="357:5">if <condition pos:start="351:8" pos:end="351:25">(<expr pos:start="351:9" pos:end="351:24"><name pos:start="351:9" pos:end="351:20"><name pos:start="351:9" pos:end="351:9">s</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:20">nb_planes</name></name> <operator pos:start="351:22" pos:end="351:22">&gt;</operator> <literal type="number" pos:start="351:24" pos:end="351:24">2</literal></expr>)</condition> <block pos:start="351:27" pos:end="357:5">{<block_content pos:start="353:9" pos:end="355:49">

        <expr_stmt pos:start="353:9" pos:end="353:49"><expr pos:start="353:9" pos:end="353:48"><call pos:start="353:9" pos:end="353:48"><name pos:start="353:9" pos:end="353:18">put_symbol</name><argument_list pos:start="353:19" pos:end="353:48">(<argument pos:start="353:20" pos:end="353:22"><expr pos:start="353:20" pos:end="353:22"><operator pos:start="353:20" pos:end="353:20">&amp;</operator><name pos:start="353:21" pos:end="353:22">ic</name></expr></argument>, <argument pos:start="353:25" pos:end="353:36"><expr pos:start="353:25" pos:end="353:36"><operator pos:start="353:25" pos:end="353:25">&amp;</operator><name pos:start="353:26" pos:end="353:36"><name pos:start="353:26" pos:end="353:32">i_state</name><index pos:start="353:33" pos:end="353:36">[<expr pos:start="353:34" pos:end="353:35"><literal type="number" pos:start="353:34" pos:end="353:35">64</literal></expr>]</index></name></expr></argument>, <argument pos:start="353:39" pos:end="353:44"><expr pos:start="353:39" pos:end="353:44"><name pos:start="353:39" pos:end="353:40">cb</name><operator pos:start="353:41" pos:end="353:41">-</operator><name pos:start="353:42" pos:end="353:44">pcb</name></expr></argument>, <argument pos:start="353:47" pos:end="353:47"><expr pos:start="353:47" pos:end="353:47"><literal type="number" pos:start="353:47" pos:end="353:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:49"><expr pos:start="355:9" pos:end="355:48"><call pos:start="355:9" pos:end="355:48"><name pos:start="355:9" pos:end="355:18">put_symbol</name><argument_list pos:start="355:19" pos:end="355:48">(<argument pos:start="355:20" pos:end="355:22"><expr pos:start="355:20" pos:end="355:22"><operator pos:start="355:20" pos:end="355:20">&amp;</operator><name pos:start="355:21" pos:end="355:22">ic</name></expr></argument>, <argument pos:start="355:25" pos:end="355:36"><expr pos:start="355:25" pos:end="355:36"><operator pos:start="355:25" pos:end="355:25">&amp;</operator><name pos:start="355:26" pos:end="355:36"><name pos:start="355:26" pos:end="355:32">i_state</name><index pos:start="355:33" pos:end="355:36">[<expr pos:start="355:34" pos:end="355:35"><literal type="number" pos:start="355:34" pos:end="355:35">96</literal></expr>]</index></name></expr></argument>, <argument pos:start="355:39" pos:end="355:44"><expr pos:start="355:39" pos:end="355:44"><name pos:start="355:39" pos:end="355:40">cr</name><operator pos:start="355:41" pos:end="355:41">-</operator><name pos:start="355:42" pos:end="355:44">pcr</name></expr></argument>, <argument pos:start="355:47" pos:end="355:47"><expr pos:start="355:47" pos:end="355:47"><literal type="number" pos:start="355:47" pos:end="355:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="359:5" pos:end="359:47"><expr pos:start="359:5" pos:end="359:46"><name pos:start="359:5" pos:end="359:9">i_len</name><operator pos:start="359:10" pos:end="359:10">=</operator> <name pos:start="359:12" pos:end="359:24"><name pos:start="359:12" pos:end="359:13">ic</name><operator pos:start="359:14" pos:end="359:14">.</operator><name pos:start="359:15" pos:end="359:24">bytestream</name></name> <operator pos:start="359:26" pos:end="359:26">-</operator> <name pos:start="359:28" pos:end="359:46"><name pos:start="359:28" pos:end="359:29">ic</name><operator pos:start="359:30" pos:end="359:30">.</operator><name pos:start="359:31" pos:end="359:46">bytestream_start</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="361:5" pos:end="361:75"><expr pos:start="361:5" pos:end="361:74"><name pos:start="361:5" pos:end="361:10">iscore</name> <operator pos:start="361:12" pos:end="361:13">+=</operator> <operator pos:start="361:15" pos:end="361:15">(</operator><name pos:start="361:16" pos:end="361:25"><name pos:start="361:16" pos:end="361:16">s</name><operator pos:start="361:17" pos:end="361:18">-&gt;</operator><name pos:start="361:19" pos:end="361:25">lambda2</name></name><operator pos:start="361:26" pos:end="361:26">*</operator><operator pos:start="361:27" pos:end="361:27">(</operator><call pos:start="361:28" pos:end="361:45"><name pos:start="361:28" pos:end="361:40">get_rac_count</name><argument_list pos:start="361:41" pos:end="361:45">(<argument pos:start="361:42" pos:end="361:44"><expr pos:start="361:42" pos:end="361:44"><operator pos:start="361:42" pos:end="361:42">&amp;</operator><name pos:start="361:43" pos:end="361:44">ic</name></expr></argument>)</argument_list></call><operator pos:start="361:46" pos:end="361:46">-</operator><name pos:start="361:47" pos:end="361:55">base_bits</name><operator pos:start="361:56" pos:end="361:56">)</operator><operator pos:start="361:57" pos:end="361:57">)</operator><operator pos:start="361:58" pos:end="361:59">&gt;&gt;</operator><name pos:start="361:60" pos:end="361:74">FF_LAMBDA_SHIFT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="365:5" pos:end="365:53"><expr pos:start="365:5" pos:end="365:52"><call pos:start="365:5" pos:end="365:52"><name pos:start="365:5" pos:end="365:14">av_assert1</name><argument_list pos:start="365:15" pos:end="365:52">(<argument pos:start="365:16" pos:end="365:51"><expr pos:start="365:16" pos:end="365:51"><name pos:start="365:16" pos:end="365:21">iscore</name> <operator pos:start="365:23" pos:end="365:23">&lt;</operator> <literal type="number" pos:start="365:25" pos:end="365:27">255</literal><operator pos:start="365:28" pos:end="365:28">*</operator><literal type="number" pos:start="365:29" pos:end="365:31">255</literal><operator pos:start="365:32" pos:end="365:32">*</operator><literal type="number" pos:start="365:33" pos:end="365:37">256</literal> <operator pos:start="365:37" pos:end="365:37">+</operator> <name pos:start="365:39" pos:end="365:48"><name pos:start="365:39" pos:end="365:39">s</name><operator pos:start="365:40" pos:end="365:41">-&gt;</operator><name pos:start="365:42" pos:end="365:48">lambda2</name></name><operator pos:start="365:49" pos:end="365:49">*</operator><literal type="number" pos:start="365:50" pos:end="365:51">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="367:5" pos:end="367:28"><expr pos:start="367:5" pos:end="367:27"><call pos:start="367:5" pos:end="367:27"><name pos:start="367:5" pos:end="367:14">av_assert1</name><argument_list pos:start="367:15" pos:end="367:27">(<argument pos:start="367:16" pos:end="367:26"><expr pos:start="367:16" pos:end="367:26"><name pos:start="367:16" pos:end="367:21">iscore</name> <operator pos:start="367:23" pos:end="367:24">&gt;=</operator> <literal type="number" pos:start="367:26" pos:end="367:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="369:5" pos:end="369:31"><expr pos:start="369:5" pos:end="369:30"><call pos:start="369:5" pos:end="369:30"><name pos:start="369:5" pos:end="369:14">av_assert1</name><argument_list pos:start="369:15" pos:end="369:30">(<argument pos:start="369:16" pos:end="369:29"><expr pos:start="369:16" pos:end="369:29"><name pos:start="369:16" pos:end="369:16">l</name><operator pos:start="369:17" pos:end="369:18">&gt;=</operator><literal type="number" pos:start="369:19" pos:end="369:19">0</literal> <operator pos:start="369:21" pos:end="369:22">&amp;&amp;</operator> <name pos:start="369:24" pos:end="369:24">l</name><operator pos:start="369:25" pos:end="369:26">&lt;=</operator><literal type="number" pos:start="369:27" pos:end="369:29">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="371:5" pos:end="371:33"><expr pos:start="371:5" pos:end="371:32"><call pos:start="371:5" pos:end="371:32"><name pos:start="371:5" pos:end="371:14">av_assert1</name><argument_list pos:start="371:15" pos:end="371:32">(<argument pos:start="371:16" pos:end="371:31"><expr pos:start="371:16" pos:end="371:31"><name pos:start="371:16" pos:end="371:17">pl</name><operator pos:start="371:18" pos:end="371:19">&gt;=</operator><literal type="number" pos:start="371:20" pos:end="371:20">0</literal> <operator pos:start="371:22" pos:end="371:23">&amp;&amp;</operator> <name pos:start="371:25" pos:end="371:26">pl</name><operator pos:start="371:27" pos:end="371:28">&lt;=</operator><literal type="number" pos:start="371:29" pos:end="371:31">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="375:5" pos:end="389:5"><if pos:start="375:5" pos:end="389:5">if<condition pos:start="375:7" pos:end="375:16">(<expr pos:start="375:8" pos:end="375:15"><name pos:start="375:8" pos:end="375:12">level</name><operator pos:start="375:13" pos:end="375:14">==</operator><literal type="number" pos:start="375:15" pos:end="375:15">0</literal></expr>)</condition><block pos:start="375:17" pos:end="389:5">{<block_content pos:start="377:9" pos:end="387:48">

        <decl_stmt pos:start="377:9" pos:end="377:30"><decl pos:start="377:9" pos:end="377:29"><type pos:start="377:9" pos:end="377:11"><name pos:start="377:9" pos:end="377:11">int</name></type> <name pos:start="377:13" pos:end="377:16">varc</name><init pos:start="377:17" pos:end="377:29">= <expr pos:start="377:19" pos:end="377:29"><name pos:start="377:19" pos:end="377:24">iscore</name> <operator pos:start="377:26" pos:end="377:27">&gt;&gt;</operator> <literal type="number" pos:start="377:29" pos:end="377:29">8</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="379:9" pos:end="379:29"><decl pos:start="379:9" pos:end="379:28"><type pos:start="379:9" pos:end="379:11"><name pos:start="379:9" pos:end="379:11">int</name></type> <name pos:start="379:13" pos:end="379:16">vard</name><init pos:start="379:17" pos:end="379:28">= <expr pos:start="379:19" pos:end="379:28"><name pos:start="379:19" pos:end="379:23">score</name> <operator pos:start="379:25" pos:end="379:26">&gt;&gt;</operator> <literal type="number" pos:start="379:28" pos:end="379:28">8</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="381:9" pos:end="387:48"><if pos:start="381:9" pos:end="383:66">if <condition pos:start="381:12" pos:end="381:38">(<expr pos:start="381:13" pos:end="381:37"><name pos:start="381:13" pos:end="381:16">vard</name> <operator pos:start="381:18" pos:end="381:19">&lt;=</operator> <literal type="number" pos:start="381:21" pos:end="381:22">64</literal> <operator pos:start="381:24" pos:end="381:25">||</operator> <name pos:start="381:27" pos:end="381:30">vard</name> <operator pos:start="381:32" pos:end="381:32">&lt;</operator> <name pos:start="381:34" pos:end="381:37">varc</name></expr>)</condition><block type="pseudo" pos:start="383:13" pos:end="383:66"><block_content pos:start="383:13" pos:end="383:66">

            <expr_stmt pos:start="383:13" pos:end="383:66"><expr pos:start="383:13" pos:end="383:65"><name pos:start="383:13" pos:end="383:33"><name pos:start="383:13" pos:end="383:13">c</name><operator pos:start="383:14" pos:end="383:15">-&gt;</operator><name pos:start="383:16" pos:end="383:33">scene_change_score</name></name><operator pos:start="383:34" pos:end="383:35">+=</operator> <call pos:start="383:37" pos:end="383:49"><name pos:start="383:37" pos:end="383:43">ff_sqrt</name><argument_list pos:start="383:44" pos:end="383:49">(<argument pos:start="383:45" pos:end="383:48"><expr pos:start="383:45" pos:end="383:48"><name pos:start="383:45" pos:end="383:48">vard</name></expr></argument>)</argument_list></call> <operator pos:start="383:51" pos:end="383:51">-</operator> <call pos:start="383:53" pos:end="383:65"><name pos:start="383:53" pos:end="383:59">ff_sqrt</name><argument_list pos:start="383:60" pos:end="383:65">(<argument pos:start="383:61" pos:end="383:64"><expr pos:start="383:61" pos:end="383:64"><name pos:start="383:61" pos:end="383:64">varc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="385:9" pos:end="387:48">else<block type="pseudo" pos:start="387:13" pos:end="387:48"><block_content pos:start="387:13" pos:end="387:48">

            <expr_stmt pos:start="387:13" pos:end="387:48"><expr pos:start="387:13" pos:end="387:47"><name pos:start="387:13" pos:end="387:33"><name pos:start="387:13" pos:end="387:13">c</name><operator pos:start="387:14" pos:end="387:15">-&gt;</operator><name pos:start="387:16" pos:end="387:33">scene_change_score</name></name><operator pos:start="387:34" pos:end="387:35">+=</operator> <name pos:start="387:37" pos:end="387:47"><name pos:start="387:37" pos:end="387:37">s</name><operator pos:start="387:38" pos:end="387:39">-&gt;</operator><name pos:start="387:40" pos:end="387:40">m</name><operator pos:start="387:41" pos:end="387:41">.</operator><name pos:start="387:42" pos:end="387:47">qscale</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="393:5" pos:end="413:5"><if pos:start="393:5" pos:end="413:5">if<condition pos:start="393:7" pos:end="393:33">(<expr pos:start="393:8" pos:end="393:32"><name pos:start="393:8" pos:end="393:12">level</name><operator pos:start="393:13" pos:end="393:14">!=</operator><name pos:start="393:15" pos:end="393:32"><name pos:start="393:15" pos:end="393:15">s</name><operator pos:start="393:16" pos:end="393:17">-&gt;</operator><name pos:start="393:18" pos:end="393:32">block_max_depth</name></name></expr>)</condition><block pos:start="393:34" pos:end="413:5">{<block_content pos:start="395:9" pos:end="411:26">

        <expr_stmt pos:start="395:9" pos:end="395:58"><expr pos:start="395:9" pos:end="395:57"><call pos:start="395:9" pos:end="395:57"><name pos:start="395:9" pos:end="395:15">put_rac</name><argument_list pos:start="395:16" pos:end="395:57">(<argument pos:start="395:17" pos:end="395:21"><expr pos:start="395:17" pos:end="395:21"><operator pos:start="395:17" pos:end="395:17">&amp;</operator><name pos:start="395:18" pos:end="395:21"><name pos:start="395:18" pos:end="395:18">s</name><operator pos:start="395:19" pos:end="395:20">-&gt;</operator><name pos:start="395:21" pos:end="395:21">c</name></name></expr></argument>, <argument pos:start="395:24" pos:end="395:53"><expr pos:start="395:24" pos:end="395:53"><operator pos:start="395:24" pos:end="395:24">&amp;</operator><name pos:start="395:25" pos:end="395:53"><name pos:start="395:25" pos:end="395:25">s</name><operator pos:start="395:26" pos:end="395:27">-&gt;</operator><name pos:start="395:28" pos:end="395:38">block_state</name><index pos:start="395:39" pos:end="395:53">[<expr pos:start="395:40" pos:end="395:52"><literal type="number" pos:start="395:40" pos:end="395:42">4</literal> <operator pos:start="395:42" pos:end="395:42">+</operator> <name pos:start="395:44" pos:end="395:52">s_context</name></expr>]</index></name></expr></argument>, <argument pos:start="395:56" pos:end="395:56"><expr pos:start="395:56" pos:end="395:56"><literal type="number" pos:start="395:56" pos:end="395:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="397:9" pos:end="397:59"><expr pos:start="397:9" pos:end="397:58"><name pos:start="397:9" pos:end="397:14">score2</name> <operator pos:start="397:16" pos:end="397:16">=</operator> <call pos:start="397:18" pos:end="397:58"><name pos:start="397:18" pos:end="397:32">encode_q_branch</name><argument_list pos:start="397:33" pos:end="397:58">(<argument pos:start="397:34" pos:end="397:34"><expr pos:start="397:34" pos:end="397:34"><name pos:start="397:34" pos:end="397:34">s</name></expr></argument>, <argument pos:start="397:37" pos:end="397:43"><expr pos:start="397:37" pos:end="397:43"><name pos:start="397:37" pos:end="397:41">level</name><operator pos:start="397:42" pos:end="397:42">+</operator><literal type="number" pos:start="397:43" pos:end="397:43">1</literal></expr></argument>, <argument pos:start="397:46" pos:end="397:50"><expr pos:start="397:46" pos:end="397:50"><literal type="number" pos:start="397:46" pos:end="397:46">2</literal><operator pos:start="397:47" pos:end="397:47">*</operator><name pos:start="397:48" pos:end="397:48">x</name><operator pos:start="397:49" pos:end="397:49">+</operator><literal type="number" pos:start="397:50" pos:end="397:50">0</literal></expr></argument>, <argument pos:start="397:53" pos:end="397:57"><expr pos:start="397:53" pos:end="397:57"><literal type="number" pos:start="397:53" pos:end="397:53">2</literal><operator pos:start="397:54" pos:end="397:54">*</operator><name pos:start="397:55" pos:end="397:55">y</name><operator pos:start="397:56" pos:end="397:56">+</operator><literal type="number" pos:start="397:57" pos:end="397:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="399:9" pos:end="399:59"><expr pos:start="399:9" pos:end="399:58"><name pos:start="399:9" pos:end="399:14">score2</name><operator pos:start="399:15" pos:end="399:16">+=</operator> <call pos:start="399:18" pos:end="399:58"><name pos:start="399:18" pos:end="399:32">encode_q_branch</name><argument_list pos:start="399:33" pos:end="399:58">(<argument pos:start="399:34" pos:end="399:34"><expr pos:start="399:34" pos:end="399:34"><name pos:start="399:34" pos:end="399:34">s</name></expr></argument>, <argument pos:start="399:37" pos:end="399:43"><expr pos:start="399:37" pos:end="399:43"><name pos:start="399:37" pos:end="399:41">level</name><operator pos:start="399:42" pos:end="399:42">+</operator><literal type="number" pos:start="399:43" pos:end="399:43">1</literal></expr></argument>, <argument pos:start="399:46" pos:end="399:50"><expr pos:start="399:46" pos:end="399:50"><literal type="number" pos:start="399:46" pos:end="399:46">2</literal><operator pos:start="399:47" pos:end="399:47">*</operator><name pos:start="399:48" pos:end="399:48">x</name><operator pos:start="399:49" pos:end="399:49">+</operator><literal type="number" pos:start="399:50" pos:end="399:50">1</literal></expr></argument>, <argument pos:start="399:53" pos:end="399:57"><expr pos:start="399:53" pos:end="399:57"><literal type="number" pos:start="399:53" pos:end="399:53">2</literal><operator pos:start="399:54" pos:end="399:54">*</operator><name pos:start="399:55" pos:end="399:55">y</name><operator pos:start="399:56" pos:end="399:56">+</operator><literal type="number" pos:start="399:57" pos:end="399:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="401:9" pos:end="401:59"><expr pos:start="401:9" pos:end="401:58"><name pos:start="401:9" pos:end="401:14">score2</name><operator pos:start="401:15" pos:end="401:16">+=</operator> <call pos:start="401:18" pos:end="401:58"><name pos:start="401:18" pos:end="401:32">encode_q_branch</name><argument_list pos:start="401:33" pos:end="401:58">(<argument pos:start="401:34" pos:end="401:34"><expr pos:start="401:34" pos:end="401:34"><name pos:start="401:34" pos:end="401:34">s</name></expr></argument>, <argument pos:start="401:37" pos:end="401:43"><expr pos:start="401:37" pos:end="401:43"><name pos:start="401:37" pos:end="401:41">level</name><operator pos:start="401:42" pos:end="401:42">+</operator><literal type="number" pos:start="401:43" pos:end="401:43">1</literal></expr></argument>, <argument pos:start="401:46" pos:end="401:50"><expr pos:start="401:46" pos:end="401:50"><literal type="number" pos:start="401:46" pos:end="401:46">2</literal><operator pos:start="401:47" pos:end="401:47">*</operator><name pos:start="401:48" pos:end="401:48">x</name><operator pos:start="401:49" pos:end="401:49">+</operator><literal type="number" pos:start="401:50" pos:end="401:50">0</literal></expr></argument>, <argument pos:start="401:53" pos:end="401:57"><expr pos:start="401:53" pos:end="401:57"><literal type="number" pos:start="401:53" pos:end="401:53">2</literal><operator pos:start="401:54" pos:end="401:54">*</operator><name pos:start="401:55" pos:end="401:55">y</name><operator pos:start="401:56" pos:end="401:56">+</operator><literal type="number" pos:start="401:57" pos:end="401:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="403:9" pos:end="403:59"><expr pos:start="403:9" pos:end="403:58"><name pos:start="403:9" pos:end="403:14">score2</name><operator pos:start="403:15" pos:end="403:16">+=</operator> <call pos:start="403:18" pos:end="403:58"><name pos:start="403:18" pos:end="403:32">encode_q_branch</name><argument_list pos:start="403:33" pos:end="403:58">(<argument pos:start="403:34" pos:end="403:34"><expr pos:start="403:34" pos:end="403:34"><name pos:start="403:34" pos:end="403:34">s</name></expr></argument>, <argument pos:start="403:37" pos:end="403:43"><expr pos:start="403:37" pos:end="403:43"><name pos:start="403:37" pos:end="403:41">level</name><operator pos:start="403:42" pos:end="403:42">+</operator><literal type="number" pos:start="403:43" pos:end="403:43">1</literal></expr></argument>, <argument pos:start="403:46" pos:end="403:50"><expr pos:start="403:46" pos:end="403:50"><literal type="number" pos:start="403:46" pos:end="403:46">2</literal><operator pos:start="403:47" pos:end="403:47">*</operator><name pos:start="403:48" pos:end="403:48">x</name><operator pos:start="403:49" pos:end="403:49">+</operator><literal type="number" pos:start="403:50" pos:end="403:50">1</literal></expr></argument>, <argument pos:start="403:53" pos:end="403:57"><expr pos:start="403:53" pos:end="403:57"><literal type="number" pos:start="403:53" pos:end="403:53">2</literal><operator pos:start="403:54" pos:end="403:54">*</operator><name pos:start="403:55" pos:end="403:55">y</name><operator pos:start="403:56" pos:end="403:56">+</operator><literal type="number" pos:start="403:57" pos:end="403:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:45"><expr pos:start="405:9" pos:end="405:44"><name pos:start="405:9" pos:end="405:14">score2</name><operator pos:start="405:15" pos:end="405:16">+=</operator> <name pos:start="405:18" pos:end="405:27"><name pos:start="405:18" pos:end="405:18">s</name><operator pos:start="405:19" pos:end="405:20">-&gt;</operator><name pos:start="405:21" pos:end="405:27">lambda2</name></name><operator pos:start="405:28" pos:end="405:29">&gt;&gt;</operator><name pos:start="405:30" pos:end="405:44">FF_LAMBDA_SHIFT</name></expr>;</expr_stmt> <comment type="line" pos:start="405:47" pos:end="405:74">//FIXME exact split overhead</comment>



        <if_stmt pos:start="409:9" pos:end="411:26"><if pos:start="409:9" pos:end="411:26">if<condition pos:start="409:11" pos:end="409:45">(<expr pos:start="409:12" pos:end="409:44"><name pos:start="409:12" pos:end="409:17">score2</name> <operator pos:start="409:19" pos:end="409:19">&lt;</operator> <name pos:start="409:21" pos:end="409:25">score</name> <operator pos:start="409:27" pos:end="409:28">&amp;&amp;</operator> <name pos:start="409:30" pos:end="409:35">score2</name> <operator pos:start="409:37" pos:end="409:37">&lt;</operator> <name pos:start="409:39" pos:end="409:44">iscore</name></expr>)</condition><block type="pseudo" pos:start="411:13" pos:end="411:26"><block_content pos:start="411:13" pos:end="411:26">

            <return pos:start="411:13" pos:end="411:26">return <expr pos:start="411:20" pos:end="411:25"><name pos:start="411:20" pos:end="411:25">score2</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="417:5" pos:end="451:5"><if pos:start="417:5" pos:end="435:5">if<condition pos:start="417:7" pos:end="417:22">(<expr pos:start="417:8" pos:end="417:21"><name pos:start="417:8" pos:end="417:13">iscore</name> <operator pos:start="417:15" pos:end="417:15">&lt;</operator> <name pos:start="417:17" pos:end="417:21">score</name></expr>)</condition><block pos:start="417:23" pos:end="435:5">{<block_content pos:start="419:9" pos:end="433:22">

        <expr_stmt pos:start="419:9" pos:end="419:49"><expr pos:start="419:9" pos:end="419:48"><call pos:start="419:9" pos:end="419:48"><name pos:start="419:9" pos:end="419:15">pred_mv</name><argument_list pos:start="419:16" pos:end="419:48">(<argument pos:start="419:17" pos:end="419:17"><expr pos:start="419:17" pos:end="419:17"><name pos:start="419:17" pos:end="419:17">s</name></expr></argument>, <argument pos:start="419:20" pos:end="419:23"><expr pos:start="419:20" pos:end="419:23"><operator pos:start="419:20" pos:end="419:20">&amp;</operator><name pos:start="419:21" pos:end="419:23">pmx</name></expr></argument>, <argument pos:start="419:26" pos:end="419:29"><expr pos:start="419:26" pos:end="419:29"><operator pos:start="419:26" pos:end="419:26">&amp;</operator><name pos:start="419:27" pos:end="419:29">pmy</name></expr></argument>, <argument pos:start="419:32" pos:end="419:32"><expr pos:start="419:32" pos:end="419:32"><literal type="number" pos:start="419:32" pos:end="419:32">0</literal></expr></argument>, <argument pos:start="419:35" pos:end="419:38"><expr pos:start="419:35" pos:end="419:38"><name pos:start="419:35" pos:end="419:38">left</name></expr></argument>, <argument pos:start="419:41" pos:end="419:43"><expr pos:start="419:41" pos:end="419:43"><name pos:start="419:41" pos:end="419:43">top</name></expr></argument>, <argument pos:start="419:46" pos:end="419:47"><expr pos:start="419:46" pos:end="419:47"><name pos:start="419:46" pos:end="419:47">tr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="421:9" pos:end="421:39"><expr pos:start="421:9" pos:end="421:38"><call pos:start="421:9" pos:end="421:38"><name pos:start="421:9" pos:end="421:14">memcpy</name><argument_list pos:start="421:15" pos:end="421:38">(<argument pos:start="421:16" pos:end="421:20"><expr pos:start="421:16" pos:end="421:20"><name pos:start="421:16" pos:end="421:20">pbbak</name></expr></argument>, <argument pos:start="421:23" pos:end="421:30"><expr pos:start="421:23" pos:end="421:30"><name pos:start="421:23" pos:end="421:30">i_buffer</name></expr></argument>, <argument pos:start="421:33" pos:end="421:37"><expr pos:start="421:33" pos:end="421:37"><name pos:start="421:33" pos:end="421:37">i_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:17"><expr pos:start="423:9" pos:end="423:16"><name pos:start="423:9" pos:end="423:12"><name pos:start="423:9" pos:end="423:9">s</name><operator pos:start="423:10" pos:end="423:11">-&gt;</operator><name pos:start="423:12" pos:end="423:12">c</name></name><operator pos:start="423:13" pos:end="423:13">=</operator> <name pos:start="423:15" pos:end="423:16">ic</name></expr>;</expr_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:43"><expr pos:start="425:9" pos:end="425:42"><name pos:start="425:9" pos:end="425:29"><name pos:start="425:9" pos:end="425:9">s</name><operator pos:start="425:10" pos:end="425:11">-&gt;</operator><name pos:start="425:12" pos:end="425:12">c</name><operator pos:start="425:13" pos:end="425:13">.</operator><name pos:start="425:14" pos:end="425:29">bytestream_start</name></name><operator pos:start="425:30" pos:end="425:30">=</operator> <name pos:start="425:32" pos:end="425:42">pbbak_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="427:9" pos:end="427:39"><expr pos:start="427:9" pos:end="427:38"><name pos:start="427:9" pos:end="427:23"><name pos:start="427:9" pos:end="427:9">s</name><operator pos:start="427:10" pos:end="427:11">-&gt;</operator><name pos:start="427:12" pos:end="427:12">c</name><operator pos:start="427:13" pos:end="427:13">.</operator><name pos:start="427:14" pos:end="427:23">bytestream</name></name><operator pos:start="427:24" pos:end="427:24">=</operator> <name pos:start="427:26" pos:end="427:30">pbbak</name> <operator pos:start="427:32" pos:end="427:32">+</operator> <name pos:start="427:34" pos:end="427:38">i_len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="429:9" pos:end="429:72"><expr pos:start="429:9" pos:end="429:71"><call pos:start="429:9" pos:end="429:71"><name pos:start="429:9" pos:end="429:18">set_blocks</name><argument_list pos:start="429:19" pos:end="429:71">(<argument pos:start="429:20" pos:end="429:20"><expr pos:start="429:20" pos:end="429:20"><name pos:start="429:20" pos:end="429:20">s</name></expr></argument>, <argument pos:start="429:23" pos:end="429:27"><expr pos:start="429:23" pos:end="429:27"><name pos:start="429:23" pos:end="429:27">level</name></expr></argument>, <argument pos:start="429:30" pos:end="429:30"><expr pos:start="429:30" pos:end="429:30"><name pos:start="429:30" pos:end="429:30">x</name></expr></argument>, <argument pos:start="429:33" pos:end="429:33"><expr pos:start="429:33" pos:end="429:33"><name pos:start="429:33" pos:end="429:33">y</name></expr></argument>, <argument pos:start="429:36" pos:end="429:36"><expr pos:start="429:36" pos:end="429:36"><name pos:start="429:36" pos:end="429:36">l</name></expr></argument>, <argument pos:start="429:39" pos:end="429:40"><expr pos:start="429:39" pos:end="429:40"><name pos:start="429:39" pos:end="429:40">cb</name></expr></argument>, <argument pos:start="429:43" pos:end="429:44"><expr pos:start="429:43" pos:end="429:44"><name pos:start="429:43" pos:end="429:44">cr</name></expr></argument>, <argument pos:start="429:47" pos:end="429:49"><expr pos:start="429:47" pos:end="429:49"><name pos:start="429:47" pos:end="429:49">pmx</name></expr></argument>, <argument pos:start="429:52" pos:end="429:54"><expr pos:start="429:52" pos:end="429:54"><name pos:start="429:52" pos:end="429:54">pmy</name></expr></argument>, <argument pos:start="429:57" pos:end="429:57"><expr pos:start="429:57" pos:end="429:57"><literal type="number" pos:start="429:57" pos:end="429:57">0</literal></expr></argument>, <argument pos:start="429:60" pos:end="429:70"><expr pos:start="429:60" pos:end="429:70"><name pos:start="429:60" pos:end="429:70">BLOCK_INTRA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="431:9" pos:end="431:64"><expr pos:start="431:9" pos:end="431:63"><call pos:start="431:9" pos:end="431:63"><name pos:start="431:9" pos:end="431:14">memcpy</name><argument_list pos:start="431:15" pos:end="431:63">(<argument pos:start="431:16" pos:end="431:29"><expr pos:start="431:16" pos:end="431:29"><name pos:start="431:16" pos:end="431:29"><name pos:start="431:16" pos:end="431:16">s</name><operator pos:start="431:17" pos:end="431:18">-&gt;</operator><name pos:start="431:19" pos:end="431:29">block_state</name></name></expr></argument>, <argument pos:start="431:32" pos:end="431:38"><expr pos:start="431:32" pos:end="431:38"><name pos:start="431:32" pos:end="431:38">i_state</name></expr></argument>, <argument pos:start="431:41" pos:end="431:62"><expr pos:start="431:41" pos:end="431:62"><sizeof pos:start="431:41" pos:end="431:62">sizeof<argument_list pos:start="431:47" pos:end="431:62">(<argument pos:start="431:48" pos:end="431:61"><expr pos:start="431:48" pos:end="431:61"><name pos:start="431:48" pos:end="431:61"><name pos:start="431:48" pos:end="431:48">s</name><operator pos:start="431:49" pos:end="431:50">-&gt;</operator><name pos:start="431:51" pos:end="431:61">block_state</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="433:9" pos:end="433:22">return <expr pos:start="433:16" pos:end="433:21"><name pos:start="433:16" pos:end="433:21">iscore</name></expr>;</return>

    </block_content>}</block></if><else pos:start="435:6" pos:end="451:5">else<block pos:start="435:10" pos:end="451:5">{<block_content pos:start="437:9" pos:end="449:21">

        <expr_stmt pos:start="437:9" pos:end="437:39"><expr pos:start="437:9" pos:end="437:38"><call pos:start="437:9" pos:end="437:38"><name pos:start="437:9" pos:end="437:14">memcpy</name><argument_list pos:start="437:15" pos:end="437:38">(<argument pos:start="437:16" pos:end="437:20"><expr pos:start="437:16" pos:end="437:20"><name pos:start="437:16" pos:end="437:20">pbbak</name></expr></argument>, <argument pos:start="437:23" pos:end="437:30"><expr pos:start="437:23" pos:end="437:30"><name pos:start="437:23" pos:end="437:30">p_buffer</name></expr></argument>, <argument pos:start="437:33" pos:end="437:37"><expr pos:start="437:33" pos:end="437:37"><name pos:start="437:33" pos:end="437:37">p_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:17"><expr pos:start="439:9" pos:end="439:16"><name pos:start="439:9" pos:end="439:12"><name pos:start="439:9" pos:end="439:9">s</name><operator pos:start="439:10" pos:end="439:11">-&gt;</operator><name pos:start="439:12" pos:end="439:12">c</name></name><operator pos:start="439:13" pos:end="439:13">=</operator> <name pos:start="439:15" pos:end="439:16">pc</name></expr>;</expr_stmt>

        <expr_stmt pos:start="441:9" pos:end="441:43"><expr pos:start="441:9" pos:end="441:42"><name pos:start="441:9" pos:end="441:29"><name pos:start="441:9" pos:end="441:9">s</name><operator pos:start="441:10" pos:end="441:11">-&gt;</operator><name pos:start="441:12" pos:end="441:12">c</name><operator pos:start="441:13" pos:end="441:13">.</operator><name pos:start="441:14" pos:end="441:29">bytestream_start</name></name><operator pos:start="441:30" pos:end="441:30">=</operator> <name pos:start="441:32" pos:end="441:42">pbbak_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="443:9" pos:end="443:39"><expr pos:start="443:9" pos:end="443:38"><name pos:start="443:9" pos:end="443:23"><name pos:start="443:9" pos:end="443:9">s</name><operator pos:start="443:10" pos:end="443:11">-&gt;</operator><name pos:start="443:12" pos:end="443:12">c</name><operator pos:start="443:13" pos:end="443:13">.</operator><name pos:start="443:14" pos:end="443:23">bytestream</name></name><operator pos:start="443:24" pos:end="443:24">=</operator> <name pos:start="443:26" pos:end="443:30">pbbak</name> <operator pos:start="443:32" pos:end="443:32">+</operator> <name pos:start="443:34" pos:end="443:38">p_len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="445:9" pos:end="445:70"><expr pos:start="445:9" pos:end="445:69"><call pos:start="445:9" pos:end="445:69"><name pos:start="445:9" pos:end="445:18">set_blocks</name><argument_list pos:start="445:19" pos:end="445:69">(<argument pos:start="445:20" pos:end="445:20"><expr pos:start="445:20" pos:end="445:20"><name pos:start="445:20" pos:end="445:20">s</name></expr></argument>, <argument pos:start="445:23" pos:end="445:27"><expr pos:start="445:23" pos:end="445:27"><name pos:start="445:23" pos:end="445:27">level</name></expr></argument>, <argument pos:start="445:30" pos:end="445:30"><expr pos:start="445:30" pos:end="445:30"><name pos:start="445:30" pos:end="445:30">x</name></expr></argument>, <argument pos:start="445:33" pos:end="445:33"><expr pos:start="445:33" pos:end="445:33"><name pos:start="445:33" pos:end="445:33">y</name></expr></argument>, <argument pos:start="445:36" pos:end="445:37"><expr pos:start="445:36" pos:end="445:37"><name pos:start="445:36" pos:end="445:37">pl</name></expr></argument>, <argument pos:start="445:40" pos:end="445:42"><expr pos:start="445:40" pos:end="445:42"><name pos:start="445:40" pos:end="445:42">pcb</name></expr></argument>, <argument pos:start="445:45" pos:end="445:47"><expr pos:start="445:45" pos:end="445:47"><name pos:start="445:45" pos:end="445:47">pcr</name></expr></argument>, <argument pos:start="445:50" pos:end="445:51"><expr pos:start="445:50" pos:end="445:51"><name pos:start="445:50" pos:end="445:51">mx</name></expr></argument>, <argument pos:start="445:54" pos:end="445:55"><expr pos:start="445:54" pos:end="445:55"><name pos:start="445:54" pos:end="445:55">my</name></expr></argument>, <argument pos:start="445:58" pos:end="445:65"><expr pos:start="445:58" pos:end="445:65"><name pos:start="445:58" pos:end="445:65">best_ref</name></expr></argument>, <argument pos:start="445:68" pos:end="445:68"><expr pos:start="445:68" pos:end="445:68"><literal type="number" pos:start="445:68" pos:end="445:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="447:9" pos:end="447:64"><expr pos:start="447:9" pos:end="447:63"><call pos:start="447:9" pos:end="447:63"><name pos:start="447:9" pos:end="447:14">memcpy</name><argument_list pos:start="447:15" pos:end="447:63">(<argument pos:start="447:16" pos:end="447:29"><expr pos:start="447:16" pos:end="447:29"><name pos:start="447:16" pos:end="447:29"><name pos:start="447:16" pos:end="447:16">s</name><operator pos:start="447:17" pos:end="447:18">-&gt;</operator><name pos:start="447:19" pos:end="447:29">block_state</name></name></expr></argument>, <argument pos:start="447:32" pos:end="447:38"><expr pos:start="447:32" pos:end="447:38"><name pos:start="447:32" pos:end="447:38">p_state</name></expr></argument>, <argument pos:start="447:41" pos:end="447:62"><expr pos:start="447:41" pos:end="447:62"><sizeof pos:start="447:41" pos:end="447:62">sizeof<argument_list pos:start="447:47" pos:end="447:62">(<argument pos:start="447:48" pos:end="447:61"><expr pos:start="447:48" pos:end="447:61"><name pos:start="447:48" pos:end="447:61"><name pos:start="447:48" pos:end="447:48">s</name><operator pos:start="447:49" pos:end="447:50">-&gt;</operator><name pos:start="447:51" pos:end="447:61">block_state</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="449:9" pos:end="449:21">return <expr pos:start="449:16" pos:end="449:20"><name pos:start="449:16" pos:end="449:20">score</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
