<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14128.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">sd_close</name><parameter_list pos:start="1:21" pos:end="1:42">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:39"><name pos:start="1:22" pos:end="1:37">BlockDriverState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:43">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:20">local_err</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">BDRVSheepdogState</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:37">= <expr pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:29">bs</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:37">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:18">SheepdogVdiReq</name></type> <name pos:start="9:20" pos:end="9:22">hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">SheepdogVdiRsp</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">rsp</name> <init pos:start="11:25" pos:end="11:48">= <expr pos:start="11:27" pos:end="11:48"><operator pos:start="11:27" pos:end="11:27">(</operator><name pos:start="11:28" pos:end="11:41">SheepdogVdiRsp</name> <operator pos:start="11:43" pos:end="11:43">*</operator><operator pos:start="11:44" pos:end="11:44">)</operator><operator pos:start="11:45" pos:end="11:45">&amp;</operator><name pos:start="11:46" pos:end="11:48">hdr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:21">wlen</name></decl>, <decl pos:start="13:24" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:24" pos:end="13:27">rlen</name> <init pos:start="13:29" pos:end="13:31">= <expr pos:start="13:31" pos:end="13:31"><literal type="number" pos:start="13:31" pos:end="13:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">fd</name></decl>, <decl pos:start="15:13" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:13" pos:end="15:15">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><call pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:11">DPRINTF</name><argument_list pos:start="19:12" pos:end="19:28">(<argument pos:start="19:13" pos:end="19:18"><expr pos:start="19:13" pos:end="19:18"><literal type="string" pos:start="19:13" pos:end="19:18">"%s\n"</literal></expr></argument>, <argument pos:start="19:21" pos:end="19:27"><expr pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:27">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:6">fd</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:39"><name pos:start="23:10" pos:end="23:24">connect_to_sdog</name><argument_list pos:start="23:25" pos:end="23:39">(<argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><name pos:start="23:26" pos:end="23:26">s</name></expr></argument>, <argument pos:start="23:29" pos:end="23:38"><expr pos:start="23:29" pos:end="23:38"><operator pos:start="23:29" pos:end="23:29">&amp;</operator><name pos:start="23:30" pos:end="23:38">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:15">(<expr pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:10">fd</name> <operator pos:start="25:12" pos:end="25:12">&lt;</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>)</condition> <block pos:start="25:17" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:15">

        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><call pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:24">error_report_err</name><argument_list pos:start="27:25" pos:end="27:35">(<argument pos:start="27:26" pos:end="27:34"><expr pos:start="27:26" pos:end="27:34"><name pos:start="27:26" pos:end="27:34">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><call pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:10">memset</name><argument_list pos:start="35:11" pos:end="35:32">(<argument pos:start="35:12" pos:end="35:15"><expr pos:start="35:12" pos:end="35:15"><operator pos:start="35:12" pos:end="35:12">&amp;</operator><name pos:start="35:13" pos:end="35:15">hdr</name></expr></argument>, <argument pos:start="35:18" pos:end="35:18"><expr pos:start="35:18" pos:end="35:18"><literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr></argument>, <argument pos:start="35:21" pos:end="35:31"><expr pos:start="35:21" pos:end="35:31"><sizeof pos:start="35:21" pos:end="35:31">sizeof<argument_list pos:start="35:27" pos:end="35:31">(<argument pos:start="35:28" pos:end="35:30"><expr pos:start="35:28" pos:end="35:30"><name pos:start="35:28" pos:end="35:30">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:7">hdr</name><operator pos:start="39:8" pos:end="39:8">.</operator><name pos:start="39:9" pos:end="39:14">opcode</name></name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:34">SD_OP_RELEASE_VDI</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:7">hdr</name><operator pos:start="41:8" pos:end="41:8">.</operator><name pos:start="41:9" pos:end="41:12">type</name></name> <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:31">LOCK_TYPE_NORMAL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:38"><expr pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:7">hdr</name><operator pos:start="43:8" pos:end="43:8">.</operator><name pos:start="43:9" pos:end="43:19">base_vdi_id</name></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:37"><name pos:start="43:23" pos:end="43:23">s</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:30">inode</name><operator pos:start="43:31" pos:end="43:31">.</operator><name pos:start="43:32" pos:end="43:37">vdi_id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:31"><expr pos:start="45:5" pos:end="45:30"><name pos:start="45:5" pos:end="45:8">wlen</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:26"><name pos:start="45:12" pos:end="45:17">strlen</name><argument_list pos:start="45:18" pos:end="45:26">(<argument pos:start="45:19" pos:end="45:25"><expr pos:start="45:19" pos:end="45:25"><name pos:start="45:19" pos:end="45:25"><name pos:start="45:19" pos:end="45:19">s</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:25">name</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:28" pos:end="45:28">+</operator> <literal type="number" pos:start="45:30" pos:end="45:30">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:7">hdr</name><operator pos:start="47:8" pos:end="47:8">.</operator><name pos:start="47:9" pos:end="47:19">data_length</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:26">wlen</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:34"><expr pos:start="49:5" pos:end="49:33"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:7">hdr</name><operator pos:start="49:8" pos:end="49:8">.</operator><name pos:start="49:9" pos:end="49:13">flags</name></name> <operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:33">SD_FLAG_CMD_WRITE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="55:40"><expr pos:start="53:5" pos:end="55:39"><name pos:start="53:5" pos:end="53:7">ret</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="55:39"><name pos:start="53:11" pos:end="53:16">do_req</name><argument_list pos:start="53:17" pos:end="55:39">(<argument pos:start="53:18" pos:end="53:19"><expr pos:start="53:18" pos:end="53:19"><name pos:start="53:18" pos:end="53:19">fd</name></expr></argument>, <argument pos:start="53:22" pos:end="53:26"><expr pos:start="53:22" pos:end="53:26"><name pos:start="53:22" pos:end="53:26"><name pos:start="53:22" pos:end="53:22">s</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:26">bs</name></name></expr></argument>, <argument pos:start="53:29" pos:end="53:47"><expr pos:start="53:29" pos:end="53:47"><operator pos:start="53:29" pos:end="53:29">(</operator><name pos:start="53:30" pos:end="53:40">SheepdogReq</name> <operator pos:start="53:42" pos:end="53:42">*</operator><operator pos:start="53:43" pos:end="53:43">)</operator><operator pos:start="53:44" pos:end="53:44">&amp;</operator><name pos:start="53:45" pos:end="53:47">hdr</name></expr></argument>,

                 <argument pos:start="55:18" pos:end="55:24"><expr pos:start="55:18" pos:end="55:24"><name pos:start="55:18" pos:end="55:24"><name pos:start="55:18" pos:end="55:18">s</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:24">name</name></name></expr></argument>, <argument pos:start="55:27" pos:end="55:31"><expr pos:start="55:27" pos:end="55:31"><operator pos:start="55:27" pos:end="55:27">&amp;</operator><name pos:start="55:28" pos:end="55:31">wlen</name></expr></argument>, <argument pos:start="55:34" pos:end="55:38"><expr pos:start="55:34" pos:end="55:38"><operator pos:start="55:34" pos:end="55:34">&amp;</operator><name pos:start="55:35" pos:end="55:38">rlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:20"><expr pos:start="59:5" pos:end="59:19"><call pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:15">closesocket</name><argument_list pos:start="59:16" pos:end="59:19">(<argument pos:start="59:17" pos:end="59:18"><expr pos:start="59:17" pos:end="59:18"><name pos:start="59:17" pos:end="59:18">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="65:45">(<expr pos:start="63:9" pos:end="65:44"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:12">ret</name> <operator pos:start="63:14" pos:end="63:15">&amp;&amp;</operator> <name pos:start="63:17" pos:end="63:27"><name pos:start="63:17" pos:end="63:19">rsp</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:27">result</name></name> <operator pos:start="63:29" pos:end="63:30">!=</operator> <name pos:start="63:32" pos:end="63:45">SD_RES_SUCCESS</name> <operator pos:start="63:47" pos:end="63:48">&amp;&amp;</operator>

        <name pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:11">rsp</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:19">result</name></name> <operator pos:start="65:21" pos:end="65:22">!=</operator> <name pos:start="65:24" pos:end="65:44">SD_RES_VDI_NOT_LOCKED</name></expr>)</condition> <block pos:start="65:47" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:66">

        <expr_stmt pos:start="67:9" pos:end="67:66"><expr pos:start="67:9" pos:end="67:65"><call pos:start="67:9" pos:end="67:65"><name pos:start="67:9" pos:end="67:20">error_report</name><argument_list pos:start="67:21" pos:end="67:65">(<argument pos:start="67:22" pos:end="67:29"><expr pos:start="67:22" pos:end="67:29"><literal type="string" pos:start="67:22" pos:end="67:29">"%s, %s"</literal></expr></argument>, <argument pos:start="67:32" pos:end="67:55"><expr pos:start="67:32" pos:end="67:55"><call pos:start="67:32" pos:end="67:55"><name pos:start="67:32" pos:end="67:42">sd_strerror</name><argument_list pos:start="67:43" pos:end="67:55">(<argument pos:start="67:44" pos:end="67:54"><expr pos:start="67:44" pos:end="67:54"><name pos:start="67:44" pos:end="67:54"><name pos:start="67:44" pos:end="67:46">rsp</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:54">result</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="67:58" pos:end="67:64"><expr pos:start="67:58" pos:end="67:64"><name pos:start="67:58" pos:end="67:64"><name pos:start="67:58" pos:end="67:58">s</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:64">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="75:54"><expr pos:start="73:5" pos:end="75:53"><call pos:start="73:5" pos:end="75:53"><name pos:start="73:5" pos:end="73:22">aio_set_fd_handler</name><argument_list pos:start="73:23" pos:end="75:53">(<argument pos:start="73:24" pos:end="73:47"><expr pos:start="73:24" pos:end="73:47"><call pos:start="73:24" pos:end="73:47"><name pos:start="73:24" pos:end="73:43">bdrv_get_aio_context</name><argument_list pos:start="73:44" pos:end="73:47">(<argument pos:start="73:45" pos:end="73:46"><expr pos:start="73:45" pos:end="73:46"><name pos:start="73:45" pos:end="73:46">bs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:50" pos:end="73:54"><expr pos:start="73:50" pos:end="73:54"><name pos:start="73:50" pos:end="73:54"><name pos:start="73:50" pos:end="73:50">s</name><operator pos:start="73:51" pos:end="73:52">-&gt;</operator><name pos:start="73:53" pos:end="73:54">fd</name></name></expr></argument>,

                       <argument pos:start="75:24" pos:end="75:28"><expr pos:start="75:24" pos:end="75:28"><name pos:start="75:24" pos:end="75:28">false</name></expr></argument>, <argument pos:start="75:31" pos:end="75:34"><expr pos:start="75:31" pos:end="75:34"><name pos:start="75:31" pos:end="75:34">NULL</name></expr></argument>, <argument pos:start="75:37" pos:end="75:40"><expr pos:start="75:37" pos:end="75:40"><name pos:start="75:37" pos:end="75:40">NULL</name></expr></argument>, <argument pos:start="75:43" pos:end="75:46"><expr pos:start="75:43" pos:end="75:46"><name pos:start="75:43" pos:end="75:46">NULL</name></expr></argument>, <argument pos:start="75:49" pos:end="75:52"><expr pos:start="75:49" pos:end="75:52"><name pos:start="75:49" pos:end="75:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:23"><expr pos:start="77:5" pos:end="77:22"><call pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:15">closesocket</name><argument_list pos:start="77:16" pos:end="77:22">(<argument pos:start="77:17" pos:end="77:21"><expr pos:start="77:17" pos:end="77:21"><name pos:start="77:17" pos:end="77:21"><name pos:start="77:17" pos:end="77:17">s</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:21">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:43"><expr pos:start="79:5" pos:end="79:42"><call pos:start="79:5" pos:end="79:42"><name pos:start="79:5" pos:end="79:33">qapi_free_SocketAddressLegacy</name><argument_list pos:start="79:34" pos:end="79:42">(<argument pos:start="79:35" pos:end="79:41"><expr pos:start="79:35" pos:end="79:41"><name pos:start="79:35" pos:end="79:41"><name pos:start="79:35" pos:end="79:35">s</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:41">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
