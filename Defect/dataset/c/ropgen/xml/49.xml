<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/49.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">copy_moof</name><parameter_list pos:start="1:21" pos:end="1:95">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:39"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name><modifier pos:start="1:52" pos:end="1:52">*</modifier></type> <name pos:start="1:54" pos:end="1:59">infile</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:80"><decl pos:start="1:62" pos:end="1:80"><type pos:start="1:62" pos:end="1:80"><specifier pos:start="1:62" pos:end="1:66">const</specifier> <name pos:start="1:68" pos:end="1:71">char</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:80">outfile</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:94"><decl pos:start="1:83" pos:end="1:94"><type pos:start="1:83" pos:end="1:94"><name pos:start="1:83" pos:end="1:89">int64_t</name></type> <name pos:start="1:91" pos:end="1:94">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:15">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">in</name></decl>, <decl pos:start="5:22" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:17"><modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="11:19"><if pos:start="9:5" pos:end="11:19">if <condition pos:start="9:8" pos:end="9:90">(<expr pos:start="9:9" pos:end="9:89"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:12">ret</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <call pos:start="9:16" pos:end="9:84"><name pos:start="9:16" pos:end="9:25">avio_open2</name><argument_list pos:start="9:26" pos:end="9:84">(<argument pos:start="9:27" pos:end="9:29"><expr pos:start="9:27" pos:end="9:29"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:29">in</name></expr></argument>, <argument pos:start="9:32" pos:end="9:37"><expr pos:start="9:32" pos:end="9:37"><name pos:start="9:32" pos:end="9:37">infile</name></expr></argument>, <argument pos:start="9:40" pos:end="9:53"><expr pos:start="9:40" pos:end="9:53"><name pos:start="9:40" pos:end="9:53">AVIO_FLAG_READ</name></expr></argument>, <argument pos:start="9:56" pos:end="9:77"><expr pos:start="9:56" pos:end="9:77"><operator pos:start="9:56" pos:end="9:56">&amp;</operator><name pos:start="9:57" pos:end="9:77"><name pos:start="9:57" pos:end="9:57">s</name><operator pos:start="9:58" pos:end="9:59">-&gt;</operator><name pos:start="9:60" pos:end="9:77">interrupt_callback</name></name></expr></argument>, <argument pos:start="9:80" pos:end="9:83"><expr pos:start="9:80" pos:end="9:83"><name pos:start="9:80" pos:end="9:83">NULL</name></expr></argument>)</argument_list></call><operator pos:start="9:85" pos:end="9:85">)</operator> <operator pos:start="9:87" pos:end="9:87">&lt;</operator> <literal type="number" pos:start="9:89" pos:end="9:89">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:19"><block_content pos:start="11:9" pos:end="11:19">

        <return pos:start="11:9" pos:end="11:19">return <expr pos:start="11:16" pos:end="11:18"><name pos:start="11:16" pos:end="11:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:93">(<expr pos:start="13:9" pos:end="13:92"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:12">ret</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="13:87"><name pos:start="13:16" pos:end="13:25">avio_open2</name><argument_list pos:start="13:26" pos:end="13:87">(<argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:30">out</name></expr></argument>, <argument pos:start="13:33" pos:end="13:39"><expr pos:start="13:33" pos:end="13:39"><name pos:start="13:33" pos:end="13:39">outfile</name></expr></argument>, <argument pos:start="13:42" pos:end="13:56"><expr pos:start="13:42" pos:end="13:56"><name pos:start="13:42" pos:end="13:56">AVIO_FLAG_WRITE</name></expr></argument>, <argument pos:start="13:59" pos:end="13:80"><expr pos:start="13:59" pos:end="13:80"><operator pos:start="13:59" pos:end="13:59">&amp;</operator><name pos:start="13:60" pos:end="13:80"><name pos:start="13:60" pos:end="13:60">s</name><operator pos:start="13:61" pos:end="13:62">-&gt;</operator><name pos:start="13:63" pos:end="13:80">interrupt_callback</name></name></expr></argument>, <argument pos:start="13:83" pos:end="13:86"><expr pos:start="13:83" pos:end="13:86"><name pos:start="13:83" pos:end="13:86">NULL</name></expr></argument>)</argument_list></call><operator pos:start="13:88" pos:end="13:88">)</operator> <operator pos:start="13:90" pos:end="13:90">&lt;</operator> <literal type="number" pos:start="13:92" pos:end="13:92">0</literal></expr>)</condition> <block pos:start="13:95" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:19">

        <expr_stmt pos:start="15:9" pos:end="15:23"><expr pos:start="15:9" pos:end="15:22"><call pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:18">avio_close</name><argument_list pos:start="15:19" pos:end="15:22">(<argument pos:start="15:20" pos:end="15:21"><expr pos:start="15:20" pos:end="15:21"><name pos:start="15:20" pos:end="15:21">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <while pos:start="21:5" pos:end="41:5">while <condition pos:start="21:11" pos:end="21:20">(<expr pos:start="21:12" pos:end="21:19"><name pos:start="21:12" pos:end="21:15">size</name> <operator pos:start="21:17" pos:end="21:17">&gt;</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>)</condition> <block pos:start="21:22" pos:end="41:5">{<block_content pos:start="23:9" pos:end="39:18">

        <decl_stmt pos:start="23:9" pos:end="23:26"><decl pos:start="23:9" pos:end="23:25"><type pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:15">uint8_t</name></type> <name pos:start="23:17" pos:end="23:25"><name pos:start="23:17" pos:end="23:19">buf</name><index pos:start="23:20" pos:end="23:25">[<expr pos:start="23:21" pos:end="23:24"><literal type="number" pos:start="23:21" pos:end="23:24">8192</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:41"><decl pos:start="25:9" pos:end="25:40"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">n</name> <init pos:start="25:15" pos:end="25:40">= <expr pos:start="25:17" pos:end="25:40"><call pos:start="25:17" pos:end="25:40"><name pos:start="25:17" pos:end="25:21">FFMIN</name><argument_list pos:start="25:22" pos:end="25:40">(<argument pos:start="25:23" pos:end="25:26"><expr pos:start="25:23" pos:end="25:26"><name pos:start="25:23" pos:end="25:26">size</name></expr></argument>, <argument pos:start="25:29" pos:end="25:39"><expr pos:start="25:29" pos:end="25:39"><sizeof pos:start="25:29" pos:end="25:39">sizeof<argument_list pos:start="25:35" pos:end="25:39">(<argument pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:38">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:9">n</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:21">avio_read</name><argument_list pos:start="27:22" pos:end="27:33">(<argument pos:start="27:23" pos:end="27:24"><expr pos:start="27:23" pos:end="27:24"><name pos:start="27:23" pos:end="27:24">in</name></expr></argument>, <argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">buf</name></expr></argument>, <argument pos:start="27:32" pos:end="27:32"><expr pos:start="27:32" pos:end="27:32"><name pos:start="27:32" pos:end="27:32">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:19">(<expr pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:13">n</name> <operator pos:start="29:15" pos:end="29:16">&lt;=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>)</condition> <block pos:start="29:21" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:18">

            <expr_stmt pos:start="31:13" pos:end="31:31"><expr pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:25">AVERROR</name><argument_list pos:start="31:26" pos:end="31:30">(<argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><call pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:18">avio_write</name><argument_list pos:start="37:19" pos:end="37:31">(<argument pos:start="37:20" pos:end="37:22"><expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">out</name></expr></argument>, <argument pos:start="37:25" pos:end="37:27"><expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:27">buf</name></expr></argument>, <argument pos:start="37:30" pos:end="37:30"><expr pos:start="37:30" pos:end="37:30"><name pos:start="37:30" pos:end="37:30">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:18"><expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:12">size</name> <operator pos:start="39:14" pos:end="39:15">-=</operator> <name pos:start="39:17" pos:end="39:17">n</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="43:5" pos:end="43:20"><expr pos:start="43:5" pos:end="43:19"><call pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:14">avio_flush</name><argument_list pos:start="43:15" pos:end="43:19">(<argument pos:start="43:16" pos:end="43:18"><expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><call pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:14">avio_close</name><argument_list pos:start="45:15" pos:end="45:19">(<argument pos:start="45:16" pos:end="45:18"><expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:19"><expr pos:start="47:5" pos:end="47:18"><call pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:14">avio_close</name><argument_list pos:start="47:15" pos:end="47:18">(<argument pos:start="47:16" pos:end="47:17"><expr pos:start="47:16" pos:end="47:17"><name pos:start="47:16" pos:end="47:17">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
