<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18180.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">xen_read_physmap</name><parameter_list pos:start="1:29" pos:end="1:47">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:39">XenIOState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">state</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:18">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">XenPhysmap</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:23">physmap</name> <init pos:start="5:25" pos:end="5:30">= <expr pos:start="5:27" pos:end="5:30"><name pos:start="5:27" pos:end="5:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:20">len</name></decl>, <decl pos:start="7:23" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:23" pos:end="7:25">num</name></decl>, <decl pos:start="7:28" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:28" pos:end="7:28">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:17"><name pos:start="9:10" pos:end="9:13">path</name><index pos:start="9:14" pos:end="9:17">[<expr pos:start="9:15" pos:end="9:16"><literal type="number" pos:start="9:15" pos:end="9:16">80</literal></expr>]</index></name></decl>, <decl pos:start="9:20" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:8"><modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">value</name> <init pos:start="9:27" pos:end="9:32">= <expr pos:start="9:29" pos:end="9:32"><name pos:start="9:29" pos:end="9:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier><modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:18">entries</name> <init pos:start="11:20" pos:end="11:25">= <expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:66"><expr pos:start="15:5" pos:end="17:65"><call pos:start="15:5" pos:end="17:65"><name pos:start="15:5" pos:end="15:12">snprintf</name><argument_list pos:start="15:13" pos:end="17:65">(<argument pos:start="15:14" pos:end="15:17"><expr pos:start="15:14" pos:end="15:17"><name pos:start="15:14" pos:end="15:17">path</name></expr></argument>, <argument pos:start="15:20" pos:end="15:31"><expr pos:start="15:20" pos:end="15:31"><sizeof pos:start="15:20" pos:end="15:31">sizeof<argument_list pos:start="15:26" pos:end="15:31">(<argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">path</name></expr></argument>)</argument_list></sizeof></expr></argument>,

            <argument pos:start="17:13" pos:end="17:53"><expr pos:start="17:13" pos:end="17:53"><literal type="string" pos:start="17:13" pos:end="17:53">"/local/domain/0/device-model/%d/physmap"</literal></expr></argument>, <argument pos:start="17:56" pos:end="17:64"><expr pos:start="17:56" pos:end="17:64"><name pos:start="17:56" pos:end="17:64">xen_domid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:59"><expr pos:start="19:5" pos:end="19:58"><name pos:start="19:5" pos:end="19:11">entries</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:58"><name pos:start="19:15" pos:end="19:26">xs_directory</name><argument_list pos:start="19:27" pos:end="19:58">(<argument pos:start="19:28" pos:end="19:42"><expr pos:start="19:28" pos:end="19:42"><name pos:start="19:28" pos:end="19:42"><name pos:start="19:28" pos:end="19:32">state</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:42">xenstore</name></name></expr></argument>, <argument pos:start="19:45" pos:end="19:45"><expr pos:start="19:45" pos:end="19:45"><literal type="number" pos:start="19:45" pos:end="19:45">0</literal></expr></argument>, <argument pos:start="19:48" pos:end="19:51"><expr pos:start="19:48" pos:end="19:51"><name pos:start="19:48" pos:end="19:51">path</name></expr></argument>, <argument pos:start="19:54" pos:end="19:57"><expr pos:start="19:54" pos:end="19:57"><operator pos:start="19:54" pos:end="19:54">&amp;</operator><name pos:start="19:55" pos:end="19:57">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:15"><if pos:start="21:5" pos:end="23:15">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:15">entries</name> <operator pos:start="21:17" pos:end="21:18">==</operator> <name pos:start="21:20" pos:end="21:23">NULL</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:15"><block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return></block_content></block></if></if_stmt>



    <for pos:start="27:5" pos:end="89:5">for <control pos:start="27:9" pos:end="27:29">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:24"><expr pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:23">num</name></expr>;</condition> <incr pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:26">i</name><operator pos:start="27:27" pos:end="27:28">++</operator></expr></incr>)</control> <block pos:start="27:31" pos:end="89:5">{<block_content pos:start="29:9" pos:end="87:58">

        <expr_stmt pos:start="29:9" pos:end="29:48"><expr pos:start="29:9" pos:end="29:47"><name pos:start="29:9" pos:end="29:15">physmap</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:47"><name pos:start="29:19" pos:end="29:26">g_malloc</name><argument_list pos:start="29:27" pos:end="29:47">(<argument pos:start="29:28" pos:end="29:46"><expr pos:start="29:28" pos:end="29:46"><sizeof pos:start="29:28" pos:end="29:46">sizeof <argument_list pos:start="29:35" pos:end="29:46">(<argument pos:start="29:36" pos:end="29:45"><expr pos:start="29:36" pos:end="29:45"><name pos:start="29:36" pos:end="29:45">XenPhysmap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:62"><expr pos:start="31:9" pos:end="31:61"><name pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:15">physmap</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:28">phys_offset</name></name> <operator pos:start="31:30" pos:end="31:30">=</operator> <call pos:start="31:32" pos:end="31:61"><name pos:start="31:32" pos:end="31:39">strtoull</name><argument_list pos:start="31:40" pos:end="31:61">(<argument pos:start="31:41" pos:end="31:50"><expr pos:start="31:41" pos:end="31:50"><name pos:start="31:41" pos:end="31:50"><name pos:start="31:41" pos:end="31:47">entries</name><index pos:start="31:48" pos:end="31:50">[<expr pos:start="31:49" pos:end="31:49"><name pos:start="31:49" pos:end="31:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:53" pos:end="31:56"><expr pos:start="31:53" pos:end="31:56"><name pos:start="31:53" pos:end="31:56">NULL</name></expr></argument>, <argument pos:start="31:59" pos:end="31:60"><expr pos:start="31:59" pos:end="31:60"><literal type="number" pos:start="31:59" pos:end="31:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="37:39"><expr pos:start="33:9" pos:end="37:38"><call pos:start="33:9" pos:end="37:38"><name pos:start="33:9" pos:end="33:16">snprintf</name><argument_list pos:start="33:17" pos:end="37:38">(<argument pos:start="33:18" pos:end="33:21"><expr pos:start="33:18" pos:end="33:21"><name pos:start="33:18" pos:end="33:21">path</name></expr></argument>, <argument pos:start="33:24" pos:end="33:35"><expr pos:start="33:24" pos:end="33:35"><sizeof pos:start="33:24" pos:end="33:35">sizeof<argument_list pos:start="33:30" pos:end="33:35">(<argument pos:start="33:31" pos:end="33:34"><expr pos:start="33:31" pos:end="33:34"><name pos:start="33:31" pos:end="33:34">path</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                <argument pos:start="35:17" pos:end="35:71"><expr pos:start="35:17" pos:end="35:71"><literal type="string" pos:start="35:17" pos:end="35:71">"/local/domain/0/device-model/%d/physmap/%s/start_addr"</literal></expr></argument>,

                <argument pos:start="37:17" pos:end="37:25"><expr pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:25">xen_domid</name></expr></argument>, <argument pos:start="37:28" pos:end="37:37"><expr pos:start="37:28" pos:end="37:37"><name pos:start="37:28" pos:end="37:37"><name pos:start="37:28" pos:end="37:34">entries</name><index pos:start="37:35" pos:end="37:37">[<expr pos:start="37:36" pos:end="37:36"><name pos:start="37:36" pos:end="37:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:56"><expr pos:start="39:9" pos:end="39:55"><name pos:start="39:9" pos:end="39:13">value</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:55"><name pos:start="39:17" pos:end="39:23">xs_read</name><argument_list pos:start="39:24" pos:end="39:55">(<argument pos:start="39:25" pos:end="39:39"><expr pos:start="39:25" pos:end="39:39"><name pos:start="39:25" pos:end="39:39"><name pos:start="39:25" pos:end="39:29">state</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:39">xenstore</name></name></expr></argument>, <argument pos:start="39:42" pos:end="39:42"><expr pos:start="39:42" pos:end="39:42"><literal type="number" pos:start="39:42" pos:end="39:42">0</literal></expr></argument>, <argument pos:start="39:45" pos:end="39:48"><expr pos:start="39:45" pos:end="39:48"><name pos:start="39:45" pos:end="39:48">path</name></expr></argument>, <argument pos:start="39:51" pos:end="39:54"><expr pos:start="39:51" pos:end="39:54"><operator pos:start="39:51" pos:end="39:51">&amp;</operator><name pos:start="39:52" pos:end="39:54">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:26">(<expr pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:17">value</name> <operator pos:start="41:19" pos:end="41:20">==</operator> <name pos:start="41:22" pos:end="41:25">NULL</name></expr>)</condition> <block pos:start="41:28" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:21">

            <expr_stmt pos:start="43:13" pos:end="43:26"><expr pos:start="43:13" pos:end="43:25"><call pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:16">free</name><argument_list pos:start="43:17" pos:end="43:25">(<argument pos:start="43:18" pos:end="43:24"><expr pos:start="43:18" pos:end="43:24"><name pos:start="43:18" pos:end="43:24">physmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="45:13" pos:end="45:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:56"><expr pos:start="49:9" pos:end="49:55"><name pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:15">physmap</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:27">start_addr</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <call pos:start="49:31" pos:end="49:55"><name pos:start="49:31" pos:end="49:38">strtoull</name><argument_list pos:start="49:39" pos:end="49:55">(<argument pos:start="49:40" pos:end="49:44"><expr pos:start="49:40" pos:end="49:44"><name pos:start="49:40" pos:end="49:44">value</name></expr></argument>, <argument pos:start="49:47" pos:end="49:50"><expr pos:start="49:47" pos:end="49:50"><name pos:start="49:47" pos:end="49:50">NULL</name></expr></argument>, <argument pos:start="49:53" pos:end="49:54"><expr pos:start="49:53" pos:end="49:54"><literal type="number" pos:start="49:53" pos:end="49:54">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:20"><expr pos:start="51:9" pos:end="51:19"><call pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:12">free</name><argument_list pos:start="51:13" pos:end="51:19">(<argument pos:start="51:14" pos:end="51:18"><expr pos:start="51:14" pos:end="51:18"><name pos:start="51:14" pos:end="51:18">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="59:39"><expr pos:start="55:9" pos:end="59:38"><call pos:start="55:9" pos:end="59:38"><name pos:start="55:9" pos:end="55:16">snprintf</name><argument_list pos:start="55:17" pos:end="59:38">(<argument pos:start="55:18" pos:end="55:21"><expr pos:start="55:18" pos:end="55:21"><name pos:start="55:18" pos:end="55:21">path</name></expr></argument>, <argument pos:start="55:24" pos:end="55:35"><expr pos:start="55:24" pos:end="55:35"><sizeof pos:start="55:24" pos:end="55:35">sizeof<argument_list pos:start="55:30" pos:end="55:35">(<argument pos:start="55:31" pos:end="55:34"><expr pos:start="55:31" pos:end="55:34"><name pos:start="55:31" pos:end="55:34">path</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                <argument pos:start="57:17" pos:end="57:65"><expr pos:start="57:17" pos:end="57:65"><literal type="string" pos:start="57:17" pos:end="57:65">"/local/domain/0/device-model/%d/physmap/%s/size"</literal></expr></argument>,

                <argument pos:start="59:17" pos:end="59:25"><expr pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:25">xen_domid</name></expr></argument>, <argument pos:start="59:28" pos:end="59:37"><expr pos:start="59:28" pos:end="59:37"><name pos:start="59:28" pos:end="59:37"><name pos:start="59:28" pos:end="59:34">entries</name><index pos:start="59:35" pos:end="59:37">[<expr pos:start="59:36" pos:end="59:36"><name pos:start="59:36" pos:end="59:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:56"><expr pos:start="61:9" pos:end="61:55"><name pos:start="61:9" pos:end="61:13">value</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <call pos:start="61:17" pos:end="61:55"><name pos:start="61:17" pos:end="61:23">xs_read</name><argument_list pos:start="61:24" pos:end="61:55">(<argument pos:start="61:25" pos:end="61:39"><expr pos:start="61:25" pos:end="61:39"><name pos:start="61:25" pos:end="61:39"><name pos:start="61:25" pos:end="61:29">state</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:39">xenstore</name></name></expr></argument>, <argument pos:start="61:42" pos:end="61:42"><expr pos:start="61:42" pos:end="61:42"><literal type="number" pos:start="61:42" pos:end="61:42">0</literal></expr></argument>, <argument pos:start="61:45" pos:end="61:48"><expr pos:start="61:45" pos:end="61:48"><name pos:start="61:45" pos:end="61:48">path</name></expr></argument>, <argument pos:start="61:51" pos:end="61:54"><expr pos:start="61:51" pos:end="61:54"><operator pos:start="61:51" pos:end="61:51">&amp;</operator><name pos:start="61:52" pos:end="61:54">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:26">(<expr pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:17">value</name> <operator pos:start="63:19" pos:end="63:20">==</operator> <name pos:start="63:22" pos:end="63:25">NULL</name></expr>)</condition> <block pos:start="63:28" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:21">

            <expr_stmt pos:start="65:13" pos:end="65:26"><expr pos:start="65:13" pos:end="65:25"><call pos:start="65:13" pos:end="65:25"><name pos:start="65:13" pos:end="65:16">free</name><argument_list pos:start="65:17" pos:end="65:25">(<argument pos:start="65:18" pos:end="65:24"><expr pos:start="65:18" pos:end="65:24"><name pos:start="65:18" pos:end="65:24">physmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="67:13" pos:end="67:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:50"><expr pos:start="71:9" pos:end="71:49"><name pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:15">physmap</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:21">size</name></name> <operator pos:start="71:23" pos:end="71:23">=</operator> <call pos:start="71:25" pos:end="71:49"><name pos:start="71:25" pos:end="71:32">strtoull</name><argument_list pos:start="71:33" pos:end="71:49">(<argument pos:start="71:34" pos:end="71:38"><expr pos:start="71:34" pos:end="71:38"><name pos:start="71:34" pos:end="71:38">value</name></expr></argument>, <argument pos:start="71:41" pos:end="71:44"><expr pos:start="71:41" pos:end="71:44"><name pos:start="71:41" pos:end="71:44">NULL</name></expr></argument>, <argument pos:start="71:47" pos:end="71:48"><expr pos:start="71:47" pos:end="71:48"><literal type="number" pos:start="71:47" pos:end="71:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:20"><expr pos:start="73:9" pos:end="73:19"><call pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:12">free</name><argument_list pos:start="73:13" pos:end="73:19">(<argument pos:start="73:14" pos:end="73:18"><expr pos:start="73:14" pos:end="73:18"><name pos:start="73:14" pos:end="73:18">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="81:39"><expr pos:start="77:9" pos:end="81:38"><call pos:start="77:9" pos:end="81:38"><name pos:start="77:9" pos:end="77:16">snprintf</name><argument_list pos:start="77:17" pos:end="81:38">(<argument pos:start="77:18" pos:end="77:21"><expr pos:start="77:18" pos:end="77:21"><name pos:start="77:18" pos:end="77:21">path</name></expr></argument>, <argument pos:start="77:24" pos:end="77:35"><expr pos:start="77:24" pos:end="77:35"><sizeof pos:start="77:24" pos:end="77:35">sizeof<argument_list pos:start="77:30" pos:end="77:35">(<argument pos:start="77:31" pos:end="77:34"><expr pos:start="77:31" pos:end="77:34"><name pos:start="77:31" pos:end="77:34">path</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                <argument pos:start="79:17" pos:end="79:65"><expr pos:start="79:17" pos:end="79:65"><literal type="string" pos:start="79:17" pos:end="79:65">"/local/domain/0/device-model/%d/physmap/%s/name"</literal></expr></argument>,

                <argument pos:start="81:17" pos:end="81:25"><expr pos:start="81:17" pos:end="81:25"><name pos:start="81:17" pos:end="81:25">xen_domid</name></expr></argument>, <argument pos:start="81:28" pos:end="81:37"><expr pos:start="81:28" pos:end="81:37"><name pos:start="81:28" pos:end="81:37"><name pos:start="81:28" pos:end="81:34">entries</name><index pos:start="81:35" pos:end="81:37">[<expr pos:start="81:36" pos:end="81:36"><name pos:start="81:36" pos:end="81:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:64"><expr pos:start="83:9" pos:end="83:63"><name pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:15">physmap</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:21">name</name></name> <operator pos:start="83:23" pos:end="83:23">=</operator> <call pos:start="83:25" pos:end="83:63"><name pos:start="83:25" pos:end="83:31">xs_read</name><argument_list pos:start="83:32" pos:end="83:63">(<argument pos:start="83:33" pos:end="83:47"><expr pos:start="83:33" pos:end="83:47"><name pos:start="83:33" pos:end="83:47"><name pos:start="83:33" pos:end="83:37">state</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:47">xenstore</name></name></expr></argument>, <argument pos:start="83:50" pos:end="83:50"><expr pos:start="83:50" pos:end="83:50"><literal type="number" pos:start="83:50" pos:end="83:50">0</literal></expr></argument>, <argument pos:start="83:53" pos:end="83:56"><expr pos:start="83:53" pos:end="83:56"><name pos:start="83:53" pos:end="83:56">path</name></expr></argument>, <argument pos:start="83:59" pos:end="83:62"><expr pos:start="83:59" pos:end="83:62"><operator pos:start="83:59" pos:end="83:59">&amp;</operator><name pos:start="83:60" pos:end="83:62">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:58"><expr pos:start="87:9" pos:end="87:57"><call pos:start="87:9" pos:end="87:57"><name pos:start="87:9" pos:end="87:25">QLIST_INSERT_HEAD</name><argument_list pos:start="87:26" pos:end="87:57">(<argument pos:start="87:27" pos:end="87:41"><expr pos:start="87:27" pos:end="87:41"><operator pos:start="87:27" pos:end="87:27">&amp;</operator><name pos:start="87:28" pos:end="87:41"><name pos:start="87:28" pos:end="87:32">state</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:41">physmap</name></name></expr></argument>, <argument pos:start="87:44" pos:end="87:50"><expr pos:start="87:44" pos:end="87:50"><name pos:start="87:44" pos:end="87:50">physmap</name></expr></argument>, <argument pos:start="87:53" pos:end="87:56"><expr pos:start="87:53" pos:end="87:56"><name pos:start="87:53" pos:end="87:56">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="91:5" pos:end="91:18"><expr pos:start="91:5" pos:end="91:17"><call pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:8">free</name><argument_list pos:start="91:9" pos:end="91:17">(<argument pos:start="91:10" pos:end="91:16"><expr pos:start="91:10" pos:end="91:16"><name pos:start="91:10" pos:end="91:16">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
