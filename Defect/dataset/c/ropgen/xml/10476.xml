<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10476.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">vfio_add_kvm_msi_virq</name><parameter_list pos:start="1:34" pos:end="3:44">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:47">VFIOMSIVector</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:55">vector</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:72"><decl pos:start="1:58" pos:end="1:72"><type pos:start="1:58" pos:end="1:72"><name pos:start="1:58" pos:end="1:67">MSIMessage</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">msg</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:43"><decl pos:start="3:35" pos:end="3:43"><type pos:start="3:35" pos:end="3:43"><name pos:start="3:35" pos:end="3:38">bool</name></type> <name pos:start="3:40" pos:end="3:43">msix</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:24">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">virq</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="13:47">(<expr pos:start="11:9" pos:end="13:46"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:13">msix</name> <operator pos:start="11:15" pos:end="11:16">&amp;&amp;</operator> <operator pos:start="11:18" pos:end="11:18">!</operator><name pos:start="11:19" pos:end="11:37">VFIO_ALLOW_KVM_MSIX</name><operator pos:start="11:38" pos:end="11:38">)</operator> <operator pos:start="11:40" pos:end="11:41">||</operator>

        <operator pos:start="13:9" pos:end="13:9">(</operator><operator pos:start="13:10" pos:end="13:10">!</operator><name pos:start="13:11" pos:end="13:14">msix</name> <operator pos:start="13:16" pos:end="13:17">&amp;&amp;</operator> <operator pos:start="13:19" pos:end="13:19">!</operator><name pos:start="13:20" pos:end="13:37">VFIO_ALLOW_KVM_MSI</name><operator pos:start="13:38" pos:end="13:38">)</operator> <operator pos:start="13:40" pos:end="13:41">||</operator> <operator pos:start="13:43" pos:end="13:43">!</operator><name pos:start="13:44" pos:end="13:46">msg</name></expr>)</condition> <block pos:start="13:49" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:55">(<expr pos:start="21:9" pos:end="21:54"><call pos:start="21:9" pos:end="21:54"><name pos:start="21:9" pos:end="21:27">event_notifier_init</name><argument_list pos:start="21:28" pos:end="21:54">(<argument pos:start="21:29" pos:end="21:50"><expr pos:start="21:29" pos:end="21:50"><operator pos:start="21:29" pos:end="21:29">&amp;</operator><name pos:start="21:30" pos:end="21:50"><name pos:start="21:30" pos:end="21:35">vector</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:50">kvm_interrupt</name></name></expr></argument>, <argument pos:start="21:53" pos:end="21:53"><expr pos:start="21:53" pos:end="21:53"><literal type="number" pos:start="21:53" pos:end="21:53">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:57" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:54"><expr pos:start="29:5" pos:end="29:53"><name pos:start="29:5" pos:end="29:8">virq</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:53"><name pos:start="29:12" pos:end="29:36">kvm_irqchip_add_msi_route</name><argument_list pos:start="29:37" pos:end="29:53">(<argument pos:start="29:38" pos:end="29:46"><expr pos:start="29:38" pos:end="29:46"><name pos:start="29:38" pos:end="29:46">kvm_state</name></expr></argument>, <argument pos:start="29:49" pos:end="29:52"><expr pos:start="29:49" pos:end="29:52"><operator pos:start="29:49" pos:end="29:49">*</operator><name pos:start="29:50" pos:end="29:52">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:12">virq</name> <operator pos:start="31:14" pos:end="31:14">&lt;</operator> <literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>)</condition> <block pos:start="31:19" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:15">

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><call pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:30">event_notifier_cleanup</name><argument_list pos:start="33:31" pos:end="33:54">(<argument pos:start="33:32" pos:end="33:53"><expr pos:start="33:32" pos:end="33:53"><operator pos:start="33:32" pos:end="33:32">&amp;</operator><name pos:start="33:33" pos:end="33:53"><name pos:start="33:33" pos:end="33:38">vector</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:53">kvm_interrupt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="51:5">if <condition pos:start="41:8" pos:end="43:55">(<expr pos:start="41:9" pos:end="43:54"><call pos:start="41:9" pos:end="43:50"><name pos:start="41:9" pos:end="41:42">kvm_irqchip_add_irqfd_notifier_gsi</name><argument_list pos:start="41:43" pos:end="43:50">(<argument pos:start="41:44" pos:end="41:52"><expr pos:start="41:44" pos:end="41:52"><name pos:start="41:44" pos:end="41:52">kvm_state</name></expr></argument>, <argument pos:start="41:55" pos:end="41:76"><expr pos:start="41:55" pos:end="41:76"><operator pos:start="41:55" pos:end="41:55">&amp;</operator><name pos:start="41:56" pos:end="41:76"><name pos:start="41:56" pos:end="41:61">vector</name><operator pos:start="41:62" pos:end="41:63">-&gt;</operator><name pos:start="41:64" pos:end="41:76">kvm_interrupt</name></name></expr></argument>,

                                       <argument pos:start="43:40" pos:end="43:43"><expr pos:start="43:40" pos:end="43:43"><name pos:start="43:40" pos:end="43:43">NULL</name></expr></argument>, <argument pos:start="43:46" pos:end="43:49"><expr pos:start="43:46" pos:end="43:49"><name pos:start="43:46" pos:end="43:49">virq</name></expr></argument>)</argument_list></call> <operator pos:start="43:52" pos:end="43:52">&lt;</operator> <literal type="number" pos:start="43:54" pos:end="43:54">0</literal></expr>)</condition> <block pos:start="43:57" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:15">

        <expr_stmt pos:start="45:9" pos:end="45:50"><expr pos:start="45:9" pos:end="45:49"><call pos:start="45:9" pos:end="45:49"><name pos:start="45:9" pos:end="45:32">kvm_irqchip_release_virq</name><argument_list pos:start="45:33" pos:end="45:49">(<argument pos:start="45:34" pos:end="45:42"><expr pos:start="45:34" pos:end="45:42"><name pos:start="45:34" pos:end="45:42">kvm_state</name></expr></argument>, <argument pos:start="45:45" pos:end="45:48"><expr pos:start="45:45" pos:end="45:48"><name pos:start="45:45" pos:end="45:48">virq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:55"><expr pos:start="47:9" pos:end="47:54"><call pos:start="47:9" pos:end="47:54"><name pos:start="47:9" pos:end="47:30">event_notifier_cleanup</name><argument_list pos:start="47:31" pos:end="47:54">(<argument pos:start="47:32" pos:end="47:53"><expr pos:start="47:32" pos:end="47:53"><operator pos:start="47:32" pos:end="47:32">&amp;</operator><name pos:start="47:33" pos:end="47:53"><name pos:start="47:33" pos:end="47:38">vector</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:53">kvm_interrupt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:24"><expr pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:10">vector</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:16">virq</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <name pos:start="55:20" pos:end="55:23">virq</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
