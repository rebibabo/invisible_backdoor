<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23000.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vt82c686b_initfn</name><parameter_list pos:start="1:28" pos:end="1:41">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:37">PCIDevice</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:21">pci_conf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">wmask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><call pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:15">isa_bus_new</name><argument_list pos:start="13:16" pos:end="13:25">(<argument pos:start="13:17" pos:end="13:24"><expr pos:start="13:17" pos:end="13:24"><operator pos:start="13:17" pos:end="13:17">&amp;</operator><name pos:start="13:18" pos:end="13:24"><name pos:start="13:18" pos:end="13:18">d</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:24">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:12">pci_conf</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:24"><name pos:start="17:16" pos:end="17:16">d</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:24">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:58"><expr pos:start="19:5" pos:end="19:57"><call pos:start="19:5" pos:end="19:57"><name pos:start="19:5" pos:end="19:28">pci_config_set_vendor_id</name><argument_list pos:start="19:29" pos:end="19:57">(<argument pos:start="19:30" pos:end="19:37"><expr pos:start="19:30" pos:end="19:37"><name pos:start="19:30" pos:end="19:37">pci_conf</name></expr></argument>, <argument pos:start="19:40" pos:end="19:56"><expr pos:start="19:40" pos:end="19:56"><name pos:start="19:40" pos:end="19:56">PCI_VENDOR_ID_VIA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:69"><expr pos:start="21:5" pos:end="21:68"><call pos:start="21:5" pos:end="21:68"><name pos:start="21:5" pos:end="21:28">pci_config_set_device_id</name><argument_list pos:start="21:29" pos:end="21:68">(<argument pos:start="21:30" pos:end="21:37"><expr pos:start="21:30" pos:end="21:37"><name pos:start="21:30" pos:end="21:37">pci_conf</name></expr></argument>, <argument pos:start="21:40" pos:end="21:67"><expr pos:start="21:40" pos:end="21:67"><name pos:start="21:40" pos:end="21:67">PCI_DEVICE_ID_VIA_ISA_BRIDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:57"><expr pos:start="23:5" pos:end="23:56"><call pos:start="23:5" pos:end="23:56"><name pos:start="23:5" pos:end="23:24">pci_config_set_class</name><argument_list pos:start="23:25" pos:end="23:56">(<argument pos:start="23:26" pos:end="23:33"><expr pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:33">pci_conf</name></expr></argument>, <argument pos:start="23:36" pos:end="23:55"><expr pos:start="23:36" pos:end="23:55"><name pos:start="23:36" pos:end="23:55">PCI_CLASS_BRIDGE_ISA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:49"><expr pos:start="25:5" pos:end="25:48"><call pos:start="25:5" pos:end="25:48"><name pos:start="25:5" pos:end="25:33">pci_config_set_prog_interface</name><argument_list pos:start="25:34" pos:end="25:48">(<argument pos:start="25:35" pos:end="25:42"><expr pos:start="25:35" pos:end="25:42"><name pos:start="25:35" pos:end="25:42">pci_conf</name></expr></argument>, <argument pos:start="25:45" pos:end="25:47"><expr pos:start="25:45" pos:end="25:47"><literal type="number" pos:start="25:45" pos:end="25:47">0x0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><call pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:27">pci_config_set_revision</name><argument_list pos:start="27:28" pos:end="27:42">(<argument pos:start="27:29" pos:end="27:36"><expr pos:start="27:29" pos:end="27:36"><name pos:start="27:29" pos:end="27:36">pci_conf</name></expr></argument>,<argument pos:start="27:38" pos:end="27:41"><expr pos:start="27:38" pos:end="27:41"><literal type="number" pos:start="27:38" pos:end="27:41">0x40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:45" pos:end="27:62">/* Revision 4.0 */</comment>



    <expr_stmt pos:start="31:5" pos:end="31:21"><expr pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:9">wmask</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:13">d</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:20">wmask</name></name></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="41:5">for <control pos:start="33:9" pos:end="33:33">(<init pos:start="33:10" pos:end="33:18"><expr pos:start="33:10" pos:end="33:17"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:17">0x00</literal></expr>;</init> <condition pos:start="33:20" pos:end="33:28"><expr pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:20">i</name> <operator pos:start="33:22" pos:end="33:22">&lt;</operator> <literal type="number" pos:start="33:24" pos:end="33:27">0xff</literal></expr>;</condition> <incr pos:start="33:30" pos:end="33:32"><expr pos:start="33:30" pos:end="33:32"><name pos:start="33:30" pos:end="33:30">i</name><operator pos:start="33:31" pos:end="33:32">++</operator></expr></incr>)</control> <block pos:start="33:35" pos:end="41:5">{<block_content pos:start="35:8" pos:end="39:8">

       <if_stmt pos:start="35:8" pos:end="39:8"><if pos:start="35:8" pos:end="39:8">if <condition pos:start="35:11" pos:end="35:43">(<expr pos:start="35:12" pos:end="35:42"><name pos:start="35:12" pos:end="35:12">i</name><operator pos:start="35:13" pos:end="35:14">&lt;=</operator><literal type="number" pos:start="35:15" pos:end="35:18">0x03</literal> <operator pos:start="35:20" pos:end="35:21">||</operator> <operator pos:start="35:23" pos:end="35:23">(</operator><name pos:start="35:24" pos:end="35:24">i</name><operator pos:start="35:25" pos:end="35:26">&gt;=</operator><literal type="number" pos:start="35:27" pos:end="35:30">0x08</literal> <operator pos:start="35:32" pos:end="35:33">&amp;&amp;</operator> <name pos:start="35:35" pos:end="35:35">i</name><operator pos:start="35:36" pos:end="35:37">&lt;=</operator><literal type="number" pos:start="35:38" pos:end="35:41">0x3f</literal><operator pos:start="35:42" pos:end="35:42">)</operator></expr>)</condition> <block pos:start="35:45" pos:end="39:8">{<block_content pos:start="37:12" pos:end="37:27">

           <expr_stmt pos:start="37:12" pos:end="37:27"><expr pos:start="37:12" pos:end="37:26"><name pos:start="37:12" pos:end="37:19"><name pos:start="37:12" pos:end="37:16">wmask</name><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><name pos:start="37:18" pos:end="37:18">i</name></expr>]</index></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <literal type="number" pos:start="37:23" pos:end="37:26">0x00</literal></expr>;</expr_stmt>

       </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="45:5" pos:end="45:44"><expr pos:start="45:5" pos:end="45:43"><call pos:start="45:5" pos:end="45:43"><name pos:start="45:5" pos:end="45:23">qemu_register_reset</name><argument_list pos:start="45:24" pos:end="45:43">(<argument pos:start="45:25" pos:end="45:39"><expr pos:start="45:25" pos:end="45:39"><name pos:start="45:25" pos:end="45:39">vt82c686b_reset</name></expr></argument>, <argument pos:start="45:42" pos:end="45:42"><expr pos:start="45:42" pos:end="45:42"><name pos:start="45:42" pos:end="45:42">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
