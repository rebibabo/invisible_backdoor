<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18822.c" pos:tabs="8"><macro pos:start="1:1" pos:end="7:57"><name pos:start="1:1" pos:end="1:19">altivec_yuv2packedX</name> <argument_list pos:start="1:21" pos:end="7:57">(<argument pos:start="1:22" pos:end="1:34">SwsContext *c</argument>,

		       <argument pos:start="3:24" pos:end="3:41">int16_t *lumFilter</argument>, <argument pos:start="3:44" pos:end="3:59">int16_t **lumSrc</argument>, <argument pos:start="3:62" pos:end="3:78">int lumFilterSize</argument>,

		       <argument pos:start="5:24" pos:end="5:41">int16_t *chrFilter</argument>, <argument pos:start="5:44" pos:end="5:59">int16_t **chrSrc</argument>, <argument pos:start="5:62" pos:end="5:78">int chrFilterSize</argument>,

		       <argument pos:start="7:24" pos:end="7:36">uint8_t *dest</argument>, <argument pos:start="7:39" pos:end="7:46">int dstW</argument>, <argument pos:start="7:49" pos:end="7:56">int dstY</argument>)</argument_list></macro>

<block pos:start="9:1" pos:end="347:1">{<block_content pos:start="11:3" pos:end="343:3">

  <decl_stmt pos:start="11:3" pos:end="11:10"><decl pos:start="11:3" pos:end="11:7"><type pos:start="11:3" pos:end="11:5"><name pos:start="11:3" pos:end="11:5">int</name></type> <name pos:start="11:7" pos:end="11:7">i</name></decl>,<decl pos:start="11:9" pos:end="11:9"><type ref="prev" pos:start="11:3" pos:end="11:5"/><name pos:start="11:9" pos:end="11:9">j</name></decl>;</decl_stmt>

  <decl_stmt pos:start="13:3" pos:end="13:52"><decl pos:start="13:3" pos:end="13:23"><type pos:start="13:3" pos:end="13:21"><name pos:start="13:3" pos:end="13:8">vector</name> <name pos:start="13:10" pos:end="13:15">signed</name> <name pos:start="13:17" pos:end="13:21">short</name></type> <name pos:start="13:23" pos:end="13:23">X</name></decl>,<decl pos:start="13:25" pos:end="13:26"><type ref="prev" pos:start="13:3" pos:end="13:21"/><name pos:start="13:25" pos:end="13:26">X0</name></decl>,<decl pos:start="13:28" pos:end="13:29"><type ref="prev" pos:start="13:3" pos:end="13:21"/><name pos:start="13:28" pos:end="13:29">X1</name></decl>,<decl pos:start="13:31" pos:end="13:32"><type ref="prev" pos:start="13:3" pos:end="13:21"/><name pos:start="13:31" pos:end="13:32">Y0</name></decl>,<decl pos:start="13:34" pos:end="13:35"><type ref="prev" pos:start="13:3" pos:end="13:21"/><name pos:start="13:34" pos:end="13:35">U0</name></decl>,<decl pos:start="13:37" pos:end="13:38"><type ref="prev" pos:start="13:3" pos:end="13:21"/><name pos:start="13:37" pos:end="13:38">V0</name></decl>,<decl pos:start="13:40" pos:end="13:41"><type ref="prev" pos:start="13:3" pos:end="13:21"/><name pos:start="13:40" pos:end="13:41">Y1</name></decl>,<decl pos:start="13:43" pos:end="13:44"><type ref="prev" pos:start="13:3" pos:end="13:21"/><name pos:start="13:43" pos:end="13:44">U1</name></decl>,<decl pos:start="13:46" pos:end="13:47"><type ref="prev" pos:start="13:3" pos:end="13:21"/><name pos:start="13:46" pos:end="13:47">V1</name></decl>,<decl pos:start="13:49" pos:end="13:49"><type ref="prev" pos:start="13:3" pos:end="13:21"/><name pos:start="13:49" pos:end="13:49">U</name></decl>,<decl pos:start="13:51" pos:end="13:51"><type ref="prev" pos:start="13:3" pos:end="13:21"/><name pos:start="13:51" pos:end="13:51">V</name></decl>;</decl_stmt>

  <decl_stmt pos:start="15:3" pos:end="15:40"><decl pos:start="15:3" pos:end="15:24"><type pos:start="15:3" pos:end="15:21"><name pos:start="15:3" pos:end="15:8">vector</name> <name pos:start="15:10" pos:end="15:15">signed</name> <name pos:start="15:17" pos:end="15:21">short</name></type> <name pos:start="15:23" pos:end="15:24">R0</name></decl>,<decl pos:start="15:26" pos:end="15:27"><type ref="prev" pos:start="15:3" pos:end="15:21"/><name pos:start="15:26" pos:end="15:27">G0</name></decl>,<decl pos:start="15:29" pos:end="15:30"><type ref="prev" pos:start="15:3" pos:end="15:21"/><name pos:start="15:29" pos:end="15:30">B0</name></decl>,<decl pos:start="15:32" pos:end="15:33"><type ref="prev" pos:start="15:3" pos:end="15:21"/><name pos:start="15:32" pos:end="15:33">R1</name></decl>,<decl pos:start="15:35" pos:end="15:36"><type ref="prev" pos:start="15:3" pos:end="15:21"/><name pos:start="15:35" pos:end="15:36">G1</name></decl>,<decl pos:start="15:38" pos:end="15:39"><type ref="prev" pos:start="15:3" pos:end="15:21"/><name pos:start="15:38" pos:end="15:39">B1</name></decl>;</decl_stmt>



  <decl_stmt pos:start="19:3" pos:end="19:29"><decl pos:start="19:3" pos:end="19:24"><type pos:start="19:3" pos:end="19:22"><name pos:start="19:3" pos:end="19:8">vector</name> <name pos:start="19:10" pos:end="19:17">unsigned</name> <name pos:start="19:19" pos:end="19:22">char</name></type> <name pos:start="19:24" pos:end="19:24">R</name></decl>,<decl pos:start="19:26" pos:end="19:26"><type ref="prev" pos:start="19:3" pos:end="19:22"/><name pos:start="19:26" pos:end="19:26">G</name></decl>,<decl pos:start="19:28" pos:end="19:28"><type ref="prev" pos:start="19:3" pos:end="19:22"/><name pos:start="19:28" pos:end="19:28">B</name></decl>;</decl_stmt>

  <decl_stmt pos:start="21:3" pos:end="21:34"><decl pos:start="21:3" pos:end="21:27"><type pos:start="21:3" pos:end="21:24"><name pos:start="21:3" pos:end="21:8">vector</name> <name pos:start="21:10" pos:end="21:17">unsigned</name> <name pos:start="21:19" pos:end="21:22">char</name> <modifier pos:start="21:24" pos:end="21:24">*</modifier></type><name pos:start="21:25" pos:end="21:27">out</name></decl>,<decl pos:start="21:29" pos:end="21:33"><type ref="prev" pos:start="21:3" pos:end="21:24"><modifier pos:start="21:29" pos:end="21:29">*</modifier></type><name pos:start="21:30" pos:end="21:33">nout</name></decl>;</decl_stmt>



  <decl_stmt pos:start="25:3" pos:end="25:50"><decl pos:start="25:3" pos:end="25:49"><type pos:start="25:3" pos:end="25:21"><name pos:start="25:3" pos:end="25:8">vector</name> <name pos:start="25:10" pos:end="25:15">signed</name> <name pos:start="25:17" pos:end="25:21">short</name></type>   <name pos:start="25:25" pos:end="25:27">RND</name> <init pos:start="25:29" pos:end="25:49">= <expr pos:start="25:31" pos:end="25:49"><call pos:start="25:31" pos:end="25:49"><name pos:start="25:31" pos:end="25:43">vec_splat_s16</name><argument_list pos:start="25:44" pos:end="25:49">(<argument pos:start="25:45" pos:end="25:48"><expr pos:start="25:45" pos:end="25:48"><literal type="number" pos:start="25:45" pos:end="25:45">1</literal><operator pos:start="25:46" pos:end="25:47">&lt;&lt;</operator><literal type="number" pos:start="25:48" pos:end="25:48">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="27:3" pos:end="27:47"><decl pos:start="27:3" pos:end="27:46"><type pos:start="27:3" pos:end="27:23"><name pos:start="27:3" pos:end="27:8">vector</name> <name pos:start="27:10" pos:end="27:17">unsigned</name> <name pos:start="27:19" pos:end="27:23">short</name></type> <name pos:start="27:25" pos:end="27:27">SCL</name> <init pos:start="27:29" pos:end="27:46">= <expr pos:start="27:31" pos:end="27:46"><call pos:start="27:31" pos:end="27:46"><name pos:start="27:31" pos:end="27:43">vec_splat_u16</name><argument_list pos:start="27:44" pos:end="27:46">(<argument pos:start="27:45" pos:end="27:45"><expr pos:start="27:45" pos:end="27:45"><literal type="number" pos:start="27:45" pos:end="27:45">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="29:3" pos:end="29:59"><decl pos:start="29:3" pos:end="29:58"><type pos:start="29:3" pos:end="29:27"><name pos:start="29:3" pos:end="29:10">unsigned</name> <name pos:start="29:12" pos:end="29:15">long</name> <name pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:23">scratch</name><index pos:start="29:24" pos:end="29:27">[<expr pos:start="29:25" pos:end="29:26"><literal type="number" pos:start="29:25" pos:end="29:26">16</literal></expr>]</index></name></type> <name pos:start="29:29" pos:end="29:41">__attribute__</name> <argument_list pos:start="29:43" pos:end="29:58">(<argument pos:start="29:44" pos:end="29:57"><expr pos:start="29:44" pos:end="29:57"><operator pos:start="29:44" pos:end="29:44">(</operator><call pos:start="29:45" pos:end="29:56"><name pos:start="29:45" pos:end="29:51">aligned</name> <argument_list pos:start="29:53" pos:end="29:56">(<argument pos:start="29:54" pos:end="29:55"><expr pos:start="29:54" pos:end="29:55"><literal type="number" pos:start="29:54" pos:end="29:55">16</literal></expr></argument>)</argument_list></call><operator pos:start="29:57" pos:end="29:57">)</operator></expr></argument>)</argument_list></decl>;</decl_stmt>



  <decl_stmt pos:start="33:3" pos:end="33:41"><decl pos:start="33:3" pos:end="33:30"><type pos:start="33:3" pos:end="33:23"><name pos:start="33:3" pos:end="33:8">vector</name> <name pos:start="33:10" pos:end="33:15">signed</name> <name pos:start="33:17" pos:end="33:21">short</name> <modifier pos:start="33:23" pos:end="33:23">*</modifier></type><name pos:start="33:24" pos:end="33:30">YCoeffs</name></decl>, <decl pos:start="33:33" pos:end="33:40"><type ref="prev" pos:start="33:3" pos:end="33:23"><modifier pos:start="33:33" pos:end="33:33">*</modifier></type><name pos:start="33:34" pos:end="33:40">CCoeffs</name></decl>;</decl_stmt>



  <expr_stmt pos:start="37:3" pos:end="37:47"><expr pos:start="37:3" pos:end="37:46"><name pos:start="37:3" pos:end="37:9">YCoeffs</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <name pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:13">c</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:27">vYCoeffsBank</name></name><operator pos:start="37:28" pos:end="37:28">+</operator><name pos:start="37:29" pos:end="37:32">dstY</name><operator pos:start="37:33" pos:end="37:33">*</operator><name pos:start="37:34" pos:end="37:46">lumFilterSize</name></expr>;</expr_stmt>

  <expr_stmt pos:start="39:3" pos:end="39:47"><expr pos:start="39:3" pos:end="39:46"><name pos:start="39:3" pos:end="39:9">CCoeffs</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <name pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:13">c</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:27">vCCoeffsBank</name></name><operator pos:start="39:28" pos:end="39:28">+</operator><name pos:start="39:29" pos:end="39:32">dstY</name><operator pos:start="39:33" pos:end="39:33">*</operator><name pos:start="39:34" pos:end="39:46">chrFilterSize</name></expr>;</expr_stmt>



  <expr_stmt pos:start="43:3" pos:end="43:37"><expr pos:start="43:3" pos:end="43:36"><name pos:start="43:3" pos:end="43:5">out</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:15">vector</name> <name pos:start="43:17" pos:end="43:24">unsigned</name> <name pos:start="43:26" pos:end="43:29">char</name> <operator pos:start="43:31" pos:end="43:31">*</operator><operator pos:start="43:32" pos:end="43:32">)</operator><name pos:start="43:33" pos:end="43:36">dest</name></expr>;</expr_stmt>



  <for pos:start="47:3" pos:end="195:3">for<control pos:start="47:6" pos:end="47:25">(<init pos:start="47:7" pos:end="47:10"><expr pos:start="47:7" pos:end="47:9"><name pos:start="47:7" pos:end="47:7">i</name><operator pos:start="47:8" pos:end="47:8">=</operator><literal type="number" pos:start="47:9" pos:end="47:9">0</literal></expr>;</init> <condition pos:start="47:12" pos:end="47:18"><expr pos:start="47:12" pos:end="47:17"><name pos:start="47:12" pos:end="47:12">i</name><operator pos:start="47:13" pos:end="47:13">&lt;</operator><name pos:start="47:14" pos:end="47:17">dstW</name></expr>;</condition> <incr pos:start="47:20" pos:end="47:24"><expr pos:start="47:20" pos:end="47:24"><name pos:start="47:20" pos:end="47:20">i</name><operator pos:start="47:21" pos:end="47:22">+=</operator><literal type="number" pos:start="47:23" pos:end="47:24">16</literal></expr></incr>)</control><block pos:start="47:26" pos:end="195:3">{<block_content pos:start="49:5" pos:end="193:5">

    <expr_stmt pos:start="49:5" pos:end="49:13"><expr pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:6">Y0</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <name pos:start="49:10" pos:end="49:12">RND</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:13"><expr pos:start="51:5" pos:end="51:12"><name pos:start="51:5" pos:end="51:6">Y1</name> <operator pos:start="51:8" pos:end="51:8">=</operator> <name pos:start="51:10" pos:end="51:12">RND</name></expr>;</expr_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:39">/* extract 16 coeffs from lumSrc */</comment>

    <for pos:start="55:5" pos:end="65:5">for<control pos:start="55:8" pos:end="55:34">(<init pos:start="55:9" pos:end="55:12"><expr pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:9">j</name><operator pos:start="55:10" pos:end="55:10">=</operator><literal type="number" pos:start="55:11" pos:end="55:11">0</literal></expr>;</init> <condition pos:start="55:14" pos:end="55:29"><expr pos:start="55:14" pos:end="55:28"><name pos:start="55:14" pos:end="55:14">j</name><operator pos:start="55:15" pos:end="55:15">&lt;</operator><name pos:start="55:16" pos:end="55:28">lumFilterSize</name></expr>;</condition> <incr pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><name pos:start="55:31" pos:end="55:31">j</name><operator pos:start="55:32" pos:end="55:33">++</operator></expr></incr>)</control> <block pos:start="55:36" pos:end="65:5">{<block_content pos:start="57:7" pos:end="63:43">

      <expr_stmt pos:start="57:7" pos:end="57:38"><expr pos:start="57:7" pos:end="57:37"><name pos:start="57:7" pos:end="57:8">X0</name> <operator pos:start="57:10" pos:end="57:10">=</operator> <call pos:start="57:12" pos:end="57:37"><name pos:start="57:12" pos:end="57:17">vec_ld</name> <argument_list pos:start="57:19" pos:end="57:37">(<argument pos:start="57:20" pos:end="57:20"><expr pos:start="57:20" pos:end="57:20"><literal type="number" pos:start="57:20" pos:end="57:20">0</literal></expr></argument>,  <argument pos:start="57:24" pos:end="57:36"><expr pos:start="57:24" pos:end="57:36"><operator pos:start="57:24" pos:end="57:24">&amp;</operator><name pos:start="57:25" pos:end="57:36"><name pos:start="57:25" pos:end="57:30">lumSrc</name><index pos:start="57:31" pos:end="57:33">[<expr pos:start="57:32" pos:end="57:32"><name pos:start="57:32" pos:end="57:32">j</name></expr>]</index><index pos:start="57:34" pos:end="57:36">[<expr pos:start="57:35" pos:end="57:35"><name pos:start="57:35" pos:end="57:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="59:7" pos:end="59:38"><expr pos:start="59:7" pos:end="59:37"><name pos:start="59:7" pos:end="59:8">X1</name> <operator pos:start="59:10" pos:end="59:10">=</operator> <call pos:start="59:12" pos:end="59:37"><name pos:start="59:12" pos:end="59:17">vec_ld</name> <argument_list pos:start="59:19" pos:end="59:37">(<argument pos:start="59:20" pos:end="59:21"><expr pos:start="59:20" pos:end="59:21"><literal type="number" pos:start="59:20" pos:end="59:21">16</literal></expr></argument>, <argument pos:start="59:24" pos:end="59:36"><expr pos:start="59:24" pos:end="59:36"><operator pos:start="59:24" pos:end="59:24">&amp;</operator><name pos:start="59:25" pos:end="59:36"><name pos:start="59:25" pos:end="59:30">lumSrc</name><index pos:start="59:31" pos:end="59:33">[<expr pos:start="59:32" pos:end="59:32"><name pos:start="59:32" pos:end="59:32">j</name></expr>]</index><index pos:start="59:34" pos:end="59:36">[<expr pos:start="59:35" pos:end="59:35"><name pos:start="59:35" pos:end="59:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="61:7" pos:end="61:43"><expr pos:start="61:7" pos:end="61:42"><name pos:start="61:7" pos:end="61:8">Y0</name> <operator pos:start="61:10" pos:end="61:10">=</operator> <call pos:start="61:12" pos:end="61:42"><name pos:start="61:12" pos:end="61:21">vec_mradds</name> <argument_list pos:start="61:23" pos:end="61:42">(<argument pos:start="61:24" pos:end="61:25"><expr pos:start="61:24" pos:end="61:25"><name pos:start="61:24" pos:end="61:25">X0</name></expr></argument>, <argument pos:start="61:28" pos:end="61:37"><expr pos:start="61:28" pos:end="61:37"><name pos:start="61:28" pos:end="61:37"><name pos:start="61:28" pos:end="61:34">YCoeffs</name><index pos:start="61:35" pos:end="61:37">[<expr pos:start="61:36" pos:end="61:36"><name pos:start="61:36" pos:end="61:36">j</name></expr>]</index></name></expr></argument>, <argument pos:start="61:40" pos:end="61:41"><expr pos:start="61:40" pos:end="61:41"><name pos:start="61:40" pos:end="61:41">Y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="63:7" pos:end="63:43"><expr pos:start="63:7" pos:end="63:42"><name pos:start="63:7" pos:end="63:8">Y1</name> <operator pos:start="63:10" pos:end="63:10">=</operator> <call pos:start="63:12" pos:end="63:42"><name pos:start="63:12" pos:end="63:21">vec_mradds</name> <argument_list pos:start="63:23" pos:end="63:42">(<argument pos:start="63:24" pos:end="63:25"><expr pos:start="63:24" pos:end="63:25"><name pos:start="63:24" pos:end="63:25">X1</name></expr></argument>, <argument pos:start="63:28" pos:end="63:37"><expr pos:start="63:28" pos:end="63:37"><name pos:start="63:28" pos:end="63:37"><name pos:start="63:28" pos:end="63:34">YCoeffs</name><index pos:start="63:35" pos:end="63:37">[<expr pos:start="63:36" pos:end="63:36"><name pos:start="63:36" pos:end="63:36">j</name></expr>]</index></name></expr></argument>, <argument pos:start="63:40" pos:end="63:41"><expr pos:start="63:40" pos:end="63:41"><name pos:start="63:40" pos:end="63:41">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="69:5" pos:end="69:12"><expr pos:start="69:5" pos:end="69:11"><name pos:start="69:5" pos:end="69:5">U</name> <operator pos:start="69:7" pos:end="69:7">=</operator> <name pos:start="69:9" pos:end="69:11">RND</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:12"><expr pos:start="71:5" pos:end="71:11"><name pos:start="71:5" pos:end="71:5">V</name> <operator pos:start="71:7" pos:end="71:7">=</operator> <name pos:start="71:9" pos:end="71:11">RND</name></expr>;</expr_stmt>

    <comment type="block" pos:start="73:5" pos:end="73:35">/* extract 8 coeffs from U,V */</comment>

    <for pos:start="75:5" pos:end="85:5">for<control pos:start="75:8" pos:end="75:34">(<init pos:start="75:9" pos:end="75:12"><expr pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:9">j</name><operator pos:start="75:10" pos:end="75:10">=</operator><literal type="number" pos:start="75:11" pos:end="75:11">0</literal></expr>;</init> <condition pos:start="75:14" pos:end="75:29"><expr pos:start="75:14" pos:end="75:28"><name pos:start="75:14" pos:end="75:14">j</name><operator pos:start="75:15" pos:end="75:15">&lt;</operator><name pos:start="75:16" pos:end="75:28">chrFilterSize</name></expr>;</condition> <incr pos:start="75:31" pos:end="75:33"><expr pos:start="75:31" pos:end="75:33"><name pos:start="75:31" pos:end="75:31">j</name><operator pos:start="75:32" pos:end="75:33">++</operator></expr></incr>)</control> <block pos:start="75:36" pos:end="85:5">{<block_content pos:start="77:7" pos:end="83:41">

      <expr_stmt pos:start="77:7" pos:end="77:39"><expr pos:start="77:7" pos:end="77:38"><name pos:start="77:7" pos:end="77:7">X</name>  <operator pos:start="77:10" pos:end="77:10">=</operator> <call pos:start="77:12" pos:end="77:38"><name pos:start="77:12" pos:end="77:17">vec_ld</name> <argument_list pos:start="77:19" pos:end="77:38">(<argument pos:start="77:20" pos:end="77:20"><expr pos:start="77:20" pos:end="77:20"><literal type="number" pos:start="77:20" pos:end="77:20">0</literal></expr></argument>, <argument pos:start="77:23" pos:end="77:37"><expr pos:start="77:23" pos:end="77:37"><operator pos:start="77:23" pos:end="77:23">&amp;</operator><name pos:start="77:24" pos:end="77:37"><name pos:start="77:24" pos:end="77:29">chrSrc</name><index pos:start="77:30" pos:end="77:32">[<expr pos:start="77:31" pos:end="77:31"><name pos:start="77:31" pos:end="77:31">j</name></expr>]</index><index pos:start="77:33" pos:end="77:37">[<expr pos:start="77:34" pos:end="77:36"><name pos:start="77:34" pos:end="77:34">i</name><operator pos:start="77:35" pos:end="77:35">/</operator><literal type="number" pos:start="77:36" pos:end="77:36">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="79:7" pos:end="79:41"><expr pos:start="79:7" pos:end="79:40"><name pos:start="79:7" pos:end="79:7">U</name>  <operator pos:start="79:10" pos:end="79:10">=</operator> <call pos:start="79:12" pos:end="79:40"><name pos:start="79:12" pos:end="79:21">vec_mradds</name> <argument_list pos:start="79:23" pos:end="79:40">(<argument pos:start="79:24" pos:end="79:24"><expr pos:start="79:24" pos:end="79:24"><name pos:start="79:24" pos:end="79:24">X</name></expr></argument>, <argument pos:start="79:27" pos:end="79:36"><expr pos:start="79:27" pos:end="79:36"><name pos:start="79:27" pos:end="79:36"><name pos:start="79:27" pos:end="79:33">CCoeffs</name><index pos:start="79:34" pos:end="79:36">[<expr pos:start="79:35" pos:end="79:35"><name pos:start="79:35" pos:end="79:35">j</name></expr>]</index></name></expr></argument>, <argument pos:start="79:39" pos:end="79:39"><expr pos:start="79:39" pos:end="79:39"><name pos:start="79:39" pos:end="79:39">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="81:7" pos:end="81:44"><expr pos:start="81:7" pos:end="81:43"><name pos:start="81:7" pos:end="81:7">X</name>  <operator pos:start="81:10" pos:end="81:10">=</operator> <call pos:start="81:12" pos:end="81:43"><name pos:start="81:12" pos:end="81:17">vec_ld</name> <argument_list pos:start="81:19" pos:end="81:43">(<argument pos:start="81:20" pos:end="81:20"><expr pos:start="81:20" pos:end="81:20"><literal type="number" pos:start="81:20" pos:end="81:20">0</literal></expr></argument>, <argument pos:start="81:23" pos:end="81:42"><expr pos:start="81:23" pos:end="81:42"><operator pos:start="81:23" pos:end="81:23">&amp;</operator><name pos:start="81:24" pos:end="81:42"><name pos:start="81:24" pos:end="81:29">chrSrc</name><index pos:start="81:30" pos:end="81:32">[<expr pos:start="81:31" pos:end="81:31"><name pos:start="81:31" pos:end="81:31">j</name></expr>]</index><index pos:start="81:33" pos:end="81:42">[<expr pos:start="81:34" pos:end="81:41"><name pos:start="81:34" pos:end="81:34">i</name><operator pos:start="81:35" pos:end="81:35">/</operator><literal type="number" pos:start="81:36" pos:end="81:37">2</literal><operator pos:start="81:37" pos:end="81:37">+</operator><literal type="number" pos:start="81:38" pos:end="81:41">2048</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="83:7" pos:end="83:41"><expr pos:start="83:7" pos:end="83:40"><name pos:start="83:7" pos:end="83:7">V</name>  <operator pos:start="83:10" pos:end="83:10">=</operator> <call pos:start="83:12" pos:end="83:40"><name pos:start="83:12" pos:end="83:21">vec_mradds</name> <argument_list pos:start="83:23" pos:end="83:40">(<argument pos:start="83:24" pos:end="83:24"><expr pos:start="83:24" pos:end="83:24"><name pos:start="83:24" pos:end="83:24">X</name></expr></argument>, <argument pos:start="83:27" pos:end="83:36"><expr pos:start="83:27" pos:end="83:36"><name pos:start="83:27" pos:end="83:36"><name pos:start="83:27" pos:end="83:33">CCoeffs</name><index pos:start="83:34" pos:end="83:36">[<expr pos:start="83:35" pos:end="83:35"><name pos:start="83:35" pos:end="83:35">j</name></expr>]</index></name></expr></argument>, <argument pos:start="83:39" pos:end="83:39"><expr pos:start="83:39" pos:end="83:39"><name pos:start="83:39" pos:end="83:39">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="89:5" pos:end="89:32">/* scale and clip signals */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:27"><expr pos:start="91:5" pos:end="91:26"><name pos:start="91:5" pos:end="91:6">Y0</name> <operator pos:start="91:8" pos:end="91:8">=</operator> <call pos:start="91:10" pos:end="91:26"><name pos:start="91:10" pos:end="91:16">vec_sra</name> <argument_list pos:start="91:18" pos:end="91:26">(<argument pos:start="91:19" pos:end="91:20"><expr pos:start="91:19" pos:end="91:20"><name pos:start="91:19" pos:end="91:20">Y0</name></expr></argument>, <argument pos:start="91:23" pos:end="91:25"><expr pos:start="91:23" pos:end="91:25"><name pos:start="91:23" pos:end="91:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:27"><expr pos:start="93:5" pos:end="93:26"><name pos:start="93:5" pos:end="93:6">Y1</name> <operator pos:start="93:8" pos:end="93:8">=</operator> <call pos:start="93:10" pos:end="93:26"><name pos:start="93:10" pos:end="93:16">vec_sra</name> <argument_list pos:start="93:18" pos:end="93:26">(<argument pos:start="93:19" pos:end="93:20"><expr pos:start="93:19" pos:end="93:20"><name pos:start="93:19" pos:end="93:20">Y1</name></expr></argument>, <argument pos:start="93:23" pos:end="93:25"><expr pos:start="93:23" pos:end="93:25"><name pos:start="93:23" pos:end="93:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:27"><expr pos:start="95:5" pos:end="95:26"><name pos:start="95:5" pos:end="95:5">U</name>  <operator pos:start="95:8" pos:end="95:8">=</operator> <call pos:start="95:10" pos:end="95:26"><name pos:start="95:10" pos:end="95:16">vec_sra</name> <argument_list pos:start="95:18" pos:end="95:26">(<argument pos:start="95:19" pos:end="95:19"><expr pos:start="95:19" pos:end="95:19"><name pos:start="95:19" pos:end="95:19">U</name></expr></argument>,  <argument pos:start="95:23" pos:end="95:25"><expr pos:start="95:23" pos:end="95:25"><name pos:start="95:23" pos:end="95:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:27"><expr pos:start="97:5" pos:end="97:26"><name pos:start="97:5" pos:end="97:5">V</name>  <operator pos:start="97:8" pos:end="97:8">=</operator> <call pos:start="97:10" pos:end="97:26"><name pos:start="97:10" pos:end="97:16">vec_sra</name> <argument_list pos:start="97:18" pos:end="97:26">(<argument pos:start="97:19" pos:end="97:19"><expr pos:start="97:19" pos:end="97:19"><name pos:start="97:19" pos:end="97:19">V</name></expr></argument>,  <argument pos:start="97:23" pos:end="97:25"><expr pos:start="97:23" pos:end="97:25"><name pos:start="97:23" pos:end="97:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:6">Y0</name> <operator pos:start="101:8" pos:end="101:8">=</operator> <call pos:start="101:10" pos:end="101:26"><name pos:start="101:10" pos:end="101:21">vec_clip_s16</name> <argument_list pos:start="101:23" pos:end="101:26">(<argument pos:start="101:24" pos:end="101:25"><expr pos:start="101:24" pos:end="101:25"><name pos:start="101:24" pos:end="101:25">Y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:27"><expr pos:start="103:5" pos:end="103:26"><name pos:start="103:5" pos:end="103:6">Y1</name> <operator pos:start="103:8" pos:end="103:8">=</operator> <call pos:start="103:10" pos:end="103:26"><name pos:start="103:10" pos:end="103:21">vec_clip_s16</name> <argument_list pos:start="103:23" pos:end="103:26">(<argument pos:start="103:24" pos:end="103:25"><expr pos:start="103:24" pos:end="103:25"><name pos:start="103:24" pos:end="103:25">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:26"><expr pos:start="105:5" pos:end="105:25"><name pos:start="105:5" pos:end="105:5">U</name>  <operator pos:start="105:8" pos:end="105:8">=</operator> <call pos:start="105:10" pos:end="105:25"><name pos:start="105:10" pos:end="105:21">vec_clip_s16</name> <argument_list pos:start="105:23" pos:end="105:25">(<argument pos:start="105:24" pos:end="105:24"><expr pos:start="105:24" pos:end="105:24"><name pos:start="105:24" pos:end="105:24">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:26"><expr pos:start="107:5" pos:end="107:25"><name pos:start="107:5" pos:end="107:5">V</name>  <operator pos:start="107:8" pos:end="107:8">=</operator> <call pos:start="107:10" pos:end="107:25"><name pos:start="107:10" pos:end="107:21">vec_clip_s16</name> <argument_list pos:start="107:23" pos:end="107:25">(<argument pos:start="107:24" pos:end="107:24"><expr pos:start="107:24" pos:end="107:24"><name pos:start="107:24" pos:end="107:24">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="111:5" pos:end="125:6">/* now we have

      Y0= y0 y1 y2 y3 y4 y5 y6 y7     Y1= y8 y9 y10 y11 y12 y13 y14 y15

      U= u0 u1 u2 u3 u4 u5 u6 u7      V= v0 v1 v2 v3 v4 v5 v6 v7



      Y0= y0 y1 y2 y3 y4 y5 y6 y7    Y1= y8 y9 y10 y11 y12 y13 y14 y15

      U0= u0 u0 u1 u1 u2 u2 u3 u3    U1= u4 u4 u5 u5 u6 u6 u7 u7

      V0= v0 v0 v1 v1 v2 v2 v3 v3    V1= v4 v4 v5 v5 v6 v6 v7 v7

    */</comment>



    <expr_stmt pos:start="129:5" pos:end="129:26"><expr pos:start="129:5" pos:end="129:25"><name pos:start="129:5" pos:end="129:6">U0</name> <operator pos:start="129:8" pos:end="129:8">=</operator> <call pos:start="129:10" pos:end="129:25"><name pos:start="129:10" pos:end="129:19">vec_mergeh</name> <argument_list pos:start="129:21" pos:end="129:25">(<argument pos:start="129:22" pos:end="129:22"><expr pos:start="129:22" pos:end="129:22"><name pos:start="129:22" pos:end="129:22">U</name></expr></argument>,<argument pos:start="129:24" pos:end="129:24"><expr pos:start="129:24" pos:end="129:24"><name pos:start="129:24" pos:end="129:24">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:26"><expr pos:start="131:5" pos:end="131:25"><name pos:start="131:5" pos:end="131:6">V0</name> <operator pos:start="131:8" pos:end="131:8">=</operator> <call pos:start="131:10" pos:end="131:25"><name pos:start="131:10" pos:end="131:19">vec_mergeh</name> <argument_list pos:start="131:21" pos:end="131:25">(<argument pos:start="131:22" pos:end="131:22"><expr pos:start="131:22" pos:end="131:22"><name pos:start="131:22" pos:end="131:22">V</name></expr></argument>,<argument pos:start="131:24" pos:end="131:24"><expr pos:start="131:24" pos:end="131:24"><name pos:start="131:24" pos:end="131:24">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:26"><expr pos:start="135:5" pos:end="135:25"><name pos:start="135:5" pos:end="135:6">U1</name> <operator pos:start="135:8" pos:end="135:8">=</operator> <call pos:start="135:10" pos:end="135:25"><name pos:start="135:10" pos:end="135:19">vec_mergel</name> <argument_list pos:start="135:21" pos:end="135:25">(<argument pos:start="135:22" pos:end="135:22"><expr pos:start="135:22" pos:end="135:22"><name pos:start="135:22" pos:end="135:22">U</name></expr></argument>,<argument pos:start="135:24" pos:end="135:24"><expr pos:start="135:24" pos:end="135:24"><name pos:start="135:24" pos:end="135:24">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:26"><expr pos:start="137:5" pos:end="137:25"><name pos:start="137:5" pos:end="137:6">V1</name> <operator pos:start="137:8" pos:end="137:8">=</operator> <call pos:start="137:10" pos:end="137:25"><name pos:start="137:10" pos:end="137:19">vec_mergel</name> <argument_list pos:start="137:21" pos:end="137:25">(<argument pos:start="137:22" pos:end="137:22"><expr pos:start="137:22" pos:end="137:22"><name pos:start="137:22" pos:end="137:22">V</name></expr></argument>,<argument pos:start="137:24" pos:end="137:24"><expr pos:start="137:24" pos:end="137:24"><name pos:start="137:24" pos:end="137:24">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:42"><expr pos:start="141:5" pos:end="141:41"><call pos:start="141:5" pos:end="141:41"><name pos:start="141:5" pos:end="141:15">cvtyuvtoRGB</name> <argument_list pos:start="141:17" pos:end="141:41">(<argument pos:start="141:18" pos:end="141:18"><expr pos:start="141:18" pos:end="141:18"><name pos:start="141:18" pos:end="141:18">c</name></expr></argument>, <argument pos:start="141:21" pos:end="141:22"><expr pos:start="141:21" pos:end="141:22"><name pos:start="141:21" pos:end="141:22">Y0</name></expr></argument>,<argument pos:start="141:24" pos:end="141:25"><expr pos:start="141:24" pos:end="141:25"><name pos:start="141:24" pos:end="141:25">U0</name></expr></argument>,<argument pos:start="141:27" pos:end="141:28"><expr pos:start="141:27" pos:end="141:28"><name pos:start="141:27" pos:end="141:28">V0</name></expr></argument>,<argument pos:start="141:30" pos:end="141:32"><expr pos:start="141:30" pos:end="141:32"><operator pos:start="141:30" pos:end="141:30">&amp;</operator><name pos:start="141:31" pos:end="141:32">R0</name></expr></argument>,<argument pos:start="141:34" pos:end="141:36"><expr pos:start="141:34" pos:end="141:36"><operator pos:start="141:34" pos:end="141:34">&amp;</operator><name pos:start="141:35" pos:end="141:36">G0</name></expr></argument>,<argument pos:start="141:38" pos:end="141:40"><expr pos:start="141:38" pos:end="141:40"><operator pos:start="141:38" pos:end="141:38">&amp;</operator><name pos:start="141:39" pos:end="141:40">B0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:42"><expr pos:start="143:5" pos:end="143:41"><call pos:start="143:5" pos:end="143:41"><name pos:start="143:5" pos:end="143:15">cvtyuvtoRGB</name> <argument_list pos:start="143:17" pos:end="143:41">(<argument pos:start="143:18" pos:end="143:18"><expr pos:start="143:18" pos:end="143:18"><name pos:start="143:18" pos:end="143:18">c</name></expr></argument>, <argument pos:start="143:21" pos:end="143:22"><expr pos:start="143:21" pos:end="143:22"><name pos:start="143:21" pos:end="143:22">Y1</name></expr></argument>,<argument pos:start="143:24" pos:end="143:25"><expr pos:start="143:24" pos:end="143:25"><name pos:start="143:24" pos:end="143:25">U1</name></expr></argument>,<argument pos:start="143:27" pos:end="143:28"><expr pos:start="143:27" pos:end="143:28"><name pos:start="143:27" pos:end="143:28">V1</name></expr></argument>,<argument pos:start="143:30" pos:end="143:32"><expr pos:start="143:30" pos:end="143:32"><operator pos:start="143:30" pos:end="143:30">&amp;</operator><name pos:start="143:31" pos:end="143:32">R1</name></expr></argument>,<argument pos:start="143:34" pos:end="143:36"><expr pos:start="143:34" pos:end="143:36"><operator pos:start="143:34" pos:end="143:34">&amp;</operator><name pos:start="143:35" pos:end="143:36">G1</name></expr></argument>,<argument pos:start="143:38" pos:end="143:40"><expr pos:start="143:38" pos:end="143:40"><operator pos:start="143:38" pos:end="143:38">&amp;</operator><name pos:start="143:39" pos:end="143:40">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:29"><expr pos:start="147:5" pos:end="147:28"><name pos:start="147:5" pos:end="147:5">R</name>  <operator pos:start="147:8" pos:end="147:8">=</operator> <call pos:start="147:10" pos:end="147:28"><name pos:start="147:10" pos:end="147:20">vec_packclp</name> <argument_list pos:start="147:22" pos:end="147:28">(<argument pos:start="147:23" pos:end="147:24"><expr pos:start="147:23" pos:end="147:24"><name pos:start="147:23" pos:end="147:24">R0</name></expr></argument>,<argument pos:start="147:26" pos:end="147:27"><expr pos:start="147:26" pos:end="147:27"><name pos:start="147:26" pos:end="147:27">R1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:29"><expr pos:start="149:5" pos:end="149:28"><name pos:start="149:5" pos:end="149:5">G</name>  <operator pos:start="149:8" pos:end="149:8">=</operator> <call pos:start="149:10" pos:end="149:28"><name pos:start="149:10" pos:end="149:20">vec_packclp</name> <argument_list pos:start="149:22" pos:end="149:28">(<argument pos:start="149:23" pos:end="149:24"><expr pos:start="149:23" pos:end="149:24"><name pos:start="149:23" pos:end="149:24">G0</name></expr></argument>,<argument pos:start="149:26" pos:end="149:27"><expr pos:start="149:26" pos:end="149:27"><name pos:start="149:26" pos:end="149:27">G1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:29"><expr pos:start="151:5" pos:end="151:28"><name pos:start="151:5" pos:end="151:5">B</name>  <operator pos:start="151:8" pos:end="151:8">=</operator> <call pos:start="151:10" pos:end="151:28"><name pos:start="151:10" pos:end="151:20">vec_packclp</name> <argument_list pos:start="151:22" pos:end="151:28">(<argument pos:start="151:23" pos:end="151:24"><expr pos:start="151:23" pos:end="151:24"><name pos:start="151:23" pos:end="151:24">B0</name></expr></argument>,<argument pos:start="151:26" pos:end="151:27"><expr pos:start="151:26" pos:end="151:27"><name pos:start="151:26" pos:end="151:27">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="155:5" pos:end="193:5">switch<condition pos:start="155:11" pos:end="155:24">(<expr pos:start="155:12" pos:end="155:23"><name pos:start="155:12" pos:end="155:23"><name pos:start="155:12" pos:end="155:12">c</name><operator pos:start="155:13" pos:end="155:14">-&gt;</operator><name pos:start="155:15" pos:end="155:23">dstFormat</name></name></expr>)</condition> <block pos:start="155:26" pos:end="193:5">{<block_content pos:start="157:7" pos:end="191:9">

      <case pos:start="157:7" pos:end="157:24">case <expr pos:start="157:12" pos:end="157:23"><name pos:start="157:12" pos:end="157:23">PIX_FMT_ABGR</name></expr>:</case> <expr_stmt pos:start="157:26" pos:end="157:46"><expr pos:start="157:26" pos:end="157:45"><call pos:start="157:26" pos:end="157:45"><name pos:start="157:26" pos:end="157:33">out_abgr</name> <argument_list pos:start="157:35" pos:end="157:45">(<argument pos:start="157:36" pos:end="157:36"><expr pos:start="157:36" pos:end="157:36"><name pos:start="157:36" pos:end="157:36">R</name></expr></argument>,<argument pos:start="157:38" pos:end="157:38"><expr pos:start="157:38" pos:end="157:38"><name pos:start="157:38" pos:end="157:38">G</name></expr></argument>,<argument pos:start="157:40" pos:end="157:40"><expr pos:start="157:40" pos:end="157:40"><name pos:start="157:40" pos:end="157:40">B</name></expr></argument>,<argument pos:start="157:42" pos:end="157:44"><expr pos:start="157:42" pos:end="157:44"><name pos:start="157:42" pos:end="157:44">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="157:48" pos:end="157:53">break;</break>

      <case pos:start="159:7" pos:end="159:24">case <expr pos:start="159:12" pos:end="159:23"><name pos:start="159:12" pos:end="159:23">PIX_FMT_BGRA</name></expr>:</case> <expr_stmt pos:start="159:26" pos:end="159:46"><expr pos:start="159:26" pos:end="159:45"><call pos:start="159:26" pos:end="159:45"><name pos:start="159:26" pos:end="159:33">out_bgra</name> <argument_list pos:start="159:35" pos:end="159:45">(<argument pos:start="159:36" pos:end="159:36"><expr pos:start="159:36" pos:end="159:36"><name pos:start="159:36" pos:end="159:36">R</name></expr></argument>,<argument pos:start="159:38" pos:end="159:38"><expr pos:start="159:38" pos:end="159:38"><name pos:start="159:38" pos:end="159:38">G</name></expr></argument>,<argument pos:start="159:40" pos:end="159:40"><expr pos:start="159:40" pos:end="159:40"><name pos:start="159:40" pos:end="159:40">B</name></expr></argument>,<argument pos:start="159:42" pos:end="159:44"><expr pos:start="159:42" pos:end="159:44"><name pos:start="159:42" pos:end="159:44">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="159:48" pos:end="159:53">break;</break>

      <case pos:start="161:7" pos:end="161:24">case <expr pos:start="161:12" pos:end="161:23"><name pos:start="161:12" pos:end="161:23">PIX_FMT_RGBA</name></expr>:</case> <expr_stmt pos:start="161:26" pos:end="161:46"><expr pos:start="161:26" pos:end="161:45"><call pos:start="161:26" pos:end="161:45"><name pos:start="161:26" pos:end="161:33">out_rgba</name> <argument_list pos:start="161:35" pos:end="161:45">(<argument pos:start="161:36" pos:end="161:36"><expr pos:start="161:36" pos:end="161:36"><name pos:start="161:36" pos:end="161:36">R</name></expr></argument>,<argument pos:start="161:38" pos:end="161:38"><expr pos:start="161:38" pos:end="161:38"><name pos:start="161:38" pos:end="161:38">G</name></expr></argument>,<argument pos:start="161:40" pos:end="161:40"><expr pos:start="161:40" pos:end="161:40"><name pos:start="161:40" pos:end="161:40">B</name></expr></argument>,<argument pos:start="161:42" pos:end="161:44"><expr pos:start="161:42" pos:end="161:44"><name pos:start="161:42" pos:end="161:44">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="161:48" pos:end="161:53">break;</break>

      <case pos:start="163:7" pos:end="163:24">case <expr pos:start="163:12" pos:end="163:23"><name pos:start="163:12" pos:end="163:23">PIX_FMT_ARGB</name></expr>:</case> <expr_stmt pos:start="163:26" pos:end="163:46"><expr pos:start="163:26" pos:end="163:45"><call pos:start="163:26" pos:end="163:45"><name pos:start="163:26" pos:end="163:33">out_argb</name> <argument_list pos:start="163:35" pos:end="163:45">(<argument pos:start="163:36" pos:end="163:36"><expr pos:start="163:36" pos:end="163:36"><name pos:start="163:36" pos:end="163:36">R</name></expr></argument>,<argument pos:start="163:38" pos:end="163:38"><expr pos:start="163:38" pos:end="163:38"><name pos:start="163:38" pos:end="163:38">G</name></expr></argument>,<argument pos:start="163:40" pos:end="163:40"><expr pos:start="163:40" pos:end="163:40"><name pos:start="163:40" pos:end="163:40">B</name></expr></argument>,<argument pos:start="163:42" pos:end="163:44"><expr pos:start="163:42" pos:end="163:44"><name pos:start="163:42" pos:end="163:44">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="163:48" pos:end="163:53">break;</break>

      <case pos:start="165:7" pos:end="165:25">case <expr pos:start="165:12" pos:end="165:24"><name pos:start="165:12" pos:end="165:24">PIX_FMT_RGB24</name></expr>:</case> <expr_stmt pos:start="165:27" pos:end="165:48"><expr pos:start="165:27" pos:end="165:47"><call pos:start="165:27" pos:end="165:47"><name pos:start="165:27" pos:end="165:35">out_rgb24</name> <argument_list pos:start="165:37" pos:end="165:47">(<argument pos:start="165:38" pos:end="165:38"><expr pos:start="165:38" pos:end="165:38"><name pos:start="165:38" pos:end="165:38">R</name></expr></argument>,<argument pos:start="165:40" pos:end="165:40"><expr pos:start="165:40" pos:end="165:40"><name pos:start="165:40" pos:end="165:40">G</name></expr></argument>,<argument pos:start="165:42" pos:end="165:42"><expr pos:start="165:42" pos:end="165:42"><name pos:start="165:42" pos:end="165:42">B</name></expr></argument>,<argument pos:start="165:44" pos:end="165:46"><expr pos:start="165:44" pos:end="165:46"><name pos:start="165:44" pos:end="165:46">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="165:50" pos:end="165:55">break;</break>

      <case pos:start="167:7" pos:end="167:25">case <expr pos:start="167:12" pos:end="167:24"><name pos:start="167:12" pos:end="167:24">PIX_FMT_BGR24</name></expr>:</case> <expr_stmt pos:start="167:27" pos:end="167:48"><expr pos:start="167:27" pos:end="167:47"><call pos:start="167:27" pos:end="167:47"><name pos:start="167:27" pos:end="167:35">out_bgr24</name> <argument_list pos:start="167:37" pos:end="167:47">(<argument pos:start="167:38" pos:end="167:38"><expr pos:start="167:38" pos:end="167:38"><name pos:start="167:38" pos:end="167:38">R</name></expr></argument>,<argument pos:start="167:40" pos:end="167:40"><expr pos:start="167:40" pos:end="167:40"><name pos:start="167:40" pos:end="167:40">G</name></expr></argument>,<argument pos:start="167:42" pos:end="167:42"><expr pos:start="167:42" pos:end="167:42"><name pos:start="167:42" pos:end="167:42">B</name></expr></argument>,<argument pos:start="167:44" pos:end="167:46"><expr pos:start="167:44" pos:end="167:46"><name pos:start="167:44" pos:end="167:46">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="167:50" pos:end="167:55">break;</break>

      <default pos:start="169:7" pos:end="169:14">default:</default>

        <block pos:start="171:9" pos:end="191:9">{<block_content pos:start="177:11" pos:end="189:17">

          <comment type="block" pos:start="173:11" pos:end="175:24">/* If this is reached, the caller should have called yuv2packedXinC

             instead. */</comment>

          <decl_stmt pos:start="177:11" pos:end="177:43"><decl pos:start="177:11" pos:end="177:42"><type pos:start="177:11" pos:end="177:20"><specifier pos:start="177:11" pos:end="177:16">static</specifier> <name pos:start="177:18" pos:end="177:20">int</name></type> <name pos:start="177:22" pos:end="177:42">printed_error_message</name></decl>;</decl_stmt>

          <if_stmt pos:start="179:11" pos:end="187:11"><if pos:start="179:11" pos:end="187:11">if<condition pos:start="179:13" pos:end="179:36">(<expr pos:start="179:14" pos:end="179:35"><operator pos:start="179:14" pos:end="179:14">!</operator><name pos:start="179:15" pos:end="179:35">printed_error_message</name></expr>)</condition> <block pos:start="179:38" pos:end="187:11">{<block_content pos:start="181:13" pos:end="185:36">

            <expr_stmt pos:start="181:13" pos:end="183:51"><expr pos:start="181:13" pos:end="183:50"><call pos:start="181:13" pos:end="183:50"><name pos:start="181:13" pos:end="181:18">av_log</name><argument_list pos:start="181:19" pos:end="183:50">(<argument pos:start="181:20" pos:end="181:20"><expr pos:start="181:20" pos:end="181:20"><name pos:start="181:20" pos:end="181:20">c</name></expr></argument>, <argument pos:start="181:23" pos:end="181:34"><expr pos:start="181:23" pos:end="181:34"><name pos:start="181:23" pos:end="181:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:37" pos:end="181:85"><expr pos:start="181:37" pos:end="181:85"><literal type="string" pos:start="181:37" pos:end="181:85">"altivec_yuv2packedX doesn't support %s output\n"</literal></expr></argument>,

                    <argument pos:start="183:21" pos:end="183:49"><expr pos:start="183:21" pos:end="183:49"><call pos:start="183:21" pos:end="183:49"><name pos:start="183:21" pos:end="183:35">sws_format_name</name><argument_list pos:start="183:36" pos:end="183:49">(<argument pos:start="183:37" pos:end="183:48"><expr pos:start="183:37" pos:end="183:48"><name pos:start="183:37" pos:end="183:48"><name pos:start="183:37" pos:end="183:37">c</name><operator pos:start="183:38" pos:end="183:39">-&gt;</operator><name pos:start="183:40" pos:end="183:48">dstFormat</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:36"><expr pos:start="185:13" pos:end="185:35"><name pos:start="185:13" pos:end="185:33">printed_error_message</name><operator pos:start="185:34" pos:end="185:34">=</operator><literal type="number" pos:start="185:35" pos:end="185:35">1</literal></expr>;</expr_stmt>

          </block_content>}</block></if></if_stmt>

          <return pos:start="189:11" pos:end="189:17">return;</return>

        </block_content>}</block>

    </block_content>}</block></switch>

  </block_content>}</block></for>



  <if_stmt pos:start="199:3" pos:end="343:3"><if pos:start="199:3" pos:end="343:3">if <condition pos:start="199:6" pos:end="199:15">(<expr pos:start="199:7" pos:end="199:14"><name pos:start="199:7" pos:end="199:7">i</name> <operator pos:start="199:9" pos:end="199:9">&lt;</operator> <name pos:start="199:11" pos:end="199:14">dstW</name></expr>)</condition> <block pos:start="199:17" pos:end="343:3">{<block_content pos:start="201:5" pos:end="341:56">

    <expr_stmt pos:start="201:5" pos:end="201:12"><expr pos:start="201:5" pos:end="201:11"><name pos:start="201:5" pos:end="201:5">i</name> <operator pos:start="201:7" pos:end="201:8">-=</operator> <literal type="number" pos:start="201:10" pos:end="201:11">16</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:13"><expr pos:start="205:5" pos:end="205:12"><name pos:start="205:5" pos:end="205:6">Y0</name> <operator pos:start="205:8" pos:end="205:8">=</operator> <name pos:start="205:10" pos:end="205:12">RND</name></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:13"><expr pos:start="207:5" pos:end="207:12"><name pos:start="207:5" pos:end="207:6">Y1</name> <operator pos:start="207:8" pos:end="207:8">=</operator> <name pos:start="207:10" pos:end="207:12">RND</name></expr>;</expr_stmt>

    <comment type="block" pos:start="209:5" pos:end="209:39">/* extract 16 coeffs from lumSrc */</comment>

    <for pos:start="211:5" pos:end="221:5">for<control pos:start="211:8" pos:end="211:34">(<init pos:start="211:9" pos:end="211:12"><expr pos:start="211:9" pos:end="211:11"><name pos:start="211:9" pos:end="211:9">j</name><operator pos:start="211:10" pos:end="211:10">=</operator><literal type="number" pos:start="211:11" pos:end="211:11">0</literal></expr>;</init> <condition pos:start="211:14" pos:end="211:29"><expr pos:start="211:14" pos:end="211:28"><name pos:start="211:14" pos:end="211:14">j</name><operator pos:start="211:15" pos:end="211:15">&lt;</operator><name pos:start="211:16" pos:end="211:28">lumFilterSize</name></expr>;</condition> <incr pos:start="211:31" pos:end="211:33"><expr pos:start="211:31" pos:end="211:33"><name pos:start="211:31" pos:end="211:31">j</name><operator pos:start="211:32" pos:end="211:33">++</operator></expr></incr>)</control> <block pos:start="211:36" pos:end="221:5">{<block_content pos:start="213:7" pos:end="219:43">

      <expr_stmt pos:start="213:7" pos:end="213:38"><expr pos:start="213:7" pos:end="213:37"><name pos:start="213:7" pos:end="213:8">X0</name> <operator pos:start="213:10" pos:end="213:10">=</operator> <call pos:start="213:12" pos:end="213:37"><name pos:start="213:12" pos:end="213:17">vec_ld</name> <argument_list pos:start="213:19" pos:end="213:37">(<argument pos:start="213:20" pos:end="213:20"><expr pos:start="213:20" pos:end="213:20"><literal type="number" pos:start="213:20" pos:end="213:20">0</literal></expr></argument>,  <argument pos:start="213:24" pos:end="213:36"><expr pos:start="213:24" pos:end="213:36"><operator pos:start="213:24" pos:end="213:24">&amp;</operator><name pos:start="213:25" pos:end="213:36"><name pos:start="213:25" pos:end="213:30">lumSrc</name><index pos:start="213:31" pos:end="213:33">[<expr pos:start="213:32" pos:end="213:32"><name pos:start="213:32" pos:end="213:32">j</name></expr>]</index><index pos:start="213:34" pos:end="213:36">[<expr pos:start="213:35" pos:end="213:35"><name pos:start="213:35" pos:end="213:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="215:7" pos:end="215:38"><expr pos:start="215:7" pos:end="215:37"><name pos:start="215:7" pos:end="215:8">X1</name> <operator pos:start="215:10" pos:end="215:10">=</operator> <call pos:start="215:12" pos:end="215:37"><name pos:start="215:12" pos:end="215:17">vec_ld</name> <argument_list pos:start="215:19" pos:end="215:37">(<argument pos:start="215:20" pos:end="215:21"><expr pos:start="215:20" pos:end="215:21"><literal type="number" pos:start="215:20" pos:end="215:21">16</literal></expr></argument>, <argument pos:start="215:24" pos:end="215:36"><expr pos:start="215:24" pos:end="215:36"><operator pos:start="215:24" pos:end="215:24">&amp;</operator><name pos:start="215:25" pos:end="215:36"><name pos:start="215:25" pos:end="215:30">lumSrc</name><index pos:start="215:31" pos:end="215:33">[<expr pos:start="215:32" pos:end="215:32"><name pos:start="215:32" pos:end="215:32">j</name></expr>]</index><index pos:start="215:34" pos:end="215:36">[<expr pos:start="215:35" pos:end="215:35"><name pos:start="215:35" pos:end="215:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="217:7" pos:end="217:43"><expr pos:start="217:7" pos:end="217:42"><name pos:start="217:7" pos:end="217:8">Y0</name> <operator pos:start="217:10" pos:end="217:10">=</operator> <call pos:start="217:12" pos:end="217:42"><name pos:start="217:12" pos:end="217:21">vec_mradds</name> <argument_list pos:start="217:23" pos:end="217:42">(<argument pos:start="217:24" pos:end="217:25"><expr pos:start="217:24" pos:end="217:25"><name pos:start="217:24" pos:end="217:25">X0</name></expr></argument>, <argument pos:start="217:28" pos:end="217:37"><expr pos:start="217:28" pos:end="217:37"><name pos:start="217:28" pos:end="217:37"><name pos:start="217:28" pos:end="217:34">YCoeffs</name><index pos:start="217:35" pos:end="217:37">[<expr pos:start="217:36" pos:end="217:36"><name pos:start="217:36" pos:end="217:36">j</name></expr>]</index></name></expr></argument>, <argument pos:start="217:40" pos:end="217:41"><expr pos:start="217:40" pos:end="217:41"><name pos:start="217:40" pos:end="217:41">Y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="219:7" pos:end="219:43"><expr pos:start="219:7" pos:end="219:42"><name pos:start="219:7" pos:end="219:8">Y1</name> <operator pos:start="219:10" pos:end="219:10">=</operator> <call pos:start="219:12" pos:end="219:42"><name pos:start="219:12" pos:end="219:21">vec_mradds</name> <argument_list pos:start="219:23" pos:end="219:42">(<argument pos:start="219:24" pos:end="219:25"><expr pos:start="219:24" pos:end="219:25"><name pos:start="219:24" pos:end="219:25">X1</name></expr></argument>, <argument pos:start="219:28" pos:end="219:37"><expr pos:start="219:28" pos:end="219:37"><name pos:start="219:28" pos:end="219:37"><name pos:start="219:28" pos:end="219:34">YCoeffs</name><index pos:start="219:35" pos:end="219:37">[<expr pos:start="219:36" pos:end="219:36"><name pos:start="219:36" pos:end="219:36">j</name></expr>]</index></name></expr></argument>, <argument pos:start="219:40" pos:end="219:41"><expr pos:start="219:40" pos:end="219:41"><name pos:start="219:40" pos:end="219:41">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="225:5" pos:end="225:12"><expr pos:start="225:5" pos:end="225:11"><name pos:start="225:5" pos:end="225:5">U</name> <operator pos:start="225:7" pos:end="225:7">=</operator> <name pos:start="225:9" pos:end="225:11">RND</name></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:12"><expr pos:start="227:5" pos:end="227:11"><name pos:start="227:5" pos:end="227:5">V</name> <operator pos:start="227:7" pos:end="227:7">=</operator> <name pos:start="227:9" pos:end="227:11">RND</name></expr>;</expr_stmt>

    <comment type="block" pos:start="229:5" pos:end="229:35">/* extract 8 coeffs from U,V */</comment>

    <for pos:start="231:5" pos:end="241:5">for<control pos:start="231:8" pos:end="231:34">(<init pos:start="231:9" pos:end="231:12"><expr pos:start="231:9" pos:end="231:11"><name pos:start="231:9" pos:end="231:9">j</name><operator pos:start="231:10" pos:end="231:10">=</operator><literal type="number" pos:start="231:11" pos:end="231:11">0</literal></expr>;</init> <condition pos:start="231:14" pos:end="231:29"><expr pos:start="231:14" pos:end="231:28"><name pos:start="231:14" pos:end="231:14">j</name><operator pos:start="231:15" pos:end="231:15">&lt;</operator><name pos:start="231:16" pos:end="231:28">chrFilterSize</name></expr>;</condition> <incr pos:start="231:31" pos:end="231:33"><expr pos:start="231:31" pos:end="231:33"><name pos:start="231:31" pos:end="231:31">j</name><operator pos:start="231:32" pos:end="231:33">++</operator></expr></incr>)</control> <block pos:start="231:36" pos:end="241:5">{<block_content pos:start="233:7" pos:end="239:41">

      <expr_stmt pos:start="233:7" pos:end="233:39"><expr pos:start="233:7" pos:end="233:38"><name pos:start="233:7" pos:end="233:7">X</name>  <operator pos:start="233:10" pos:end="233:10">=</operator> <call pos:start="233:12" pos:end="233:38"><name pos:start="233:12" pos:end="233:17">vec_ld</name> <argument_list pos:start="233:19" pos:end="233:38">(<argument pos:start="233:20" pos:end="233:20"><expr pos:start="233:20" pos:end="233:20"><literal type="number" pos:start="233:20" pos:end="233:20">0</literal></expr></argument>, <argument pos:start="233:23" pos:end="233:37"><expr pos:start="233:23" pos:end="233:37"><operator pos:start="233:23" pos:end="233:23">&amp;</operator><name pos:start="233:24" pos:end="233:37"><name pos:start="233:24" pos:end="233:29">chrSrc</name><index pos:start="233:30" pos:end="233:32">[<expr pos:start="233:31" pos:end="233:31"><name pos:start="233:31" pos:end="233:31">j</name></expr>]</index><index pos:start="233:33" pos:end="233:37">[<expr pos:start="233:34" pos:end="233:36"><name pos:start="233:34" pos:end="233:34">i</name><operator pos:start="233:35" pos:end="233:35">/</operator><literal type="number" pos:start="233:36" pos:end="233:36">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="235:7" pos:end="235:41"><expr pos:start="235:7" pos:end="235:40"><name pos:start="235:7" pos:end="235:7">U</name>  <operator pos:start="235:10" pos:end="235:10">=</operator> <call pos:start="235:12" pos:end="235:40"><name pos:start="235:12" pos:end="235:21">vec_mradds</name> <argument_list pos:start="235:23" pos:end="235:40">(<argument pos:start="235:24" pos:end="235:24"><expr pos:start="235:24" pos:end="235:24"><name pos:start="235:24" pos:end="235:24">X</name></expr></argument>, <argument pos:start="235:27" pos:end="235:36"><expr pos:start="235:27" pos:end="235:36"><name pos:start="235:27" pos:end="235:36"><name pos:start="235:27" pos:end="235:33">CCoeffs</name><index pos:start="235:34" pos:end="235:36">[<expr pos:start="235:35" pos:end="235:35"><name pos:start="235:35" pos:end="235:35">j</name></expr>]</index></name></expr></argument>, <argument pos:start="235:39" pos:end="235:39"><expr pos:start="235:39" pos:end="235:39"><name pos:start="235:39" pos:end="235:39">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="237:7" pos:end="237:44"><expr pos:start="237:7" pos:end="237:43"><name pos:start="237:7" pos:end="237:7">X</name>  <operator pos:start="237:10" pos:end="237:10">=</operator> <call pos:start="237:12" pos:end="237:43"><name pos:start="237:12" pos:end="237:17">vec_ld</name> <argument_list pos:start="237:19" pos:end="237:43">(<argument pos:start="237:20" pos:end="237:20"><expr pos:start="237:20" pos:end="237:20"><literal type="number" pos:start="237:20" pos:end="237:20">0</literal></expr></argument>, <argument pos:start="237:23" pos:end="237:42"><expr pos:start="237:23" pos:end="237:42"><operator pos:start="237:23" pos:end="237:23">&amp;</operator><name pos:start="237:24" pos:end="237:42"><name pos:start="237:24" pos:end="237:29">chrSrc</name><index pos:start="237:30" pos:end="237:32">[<expr pos:start="237:31" pos:end="237:31"><name pos:start="237:31" pos:end="237:31">j</name></expr>]</index><index pos:start="237:33" pos:end="237:42">[<expr pos:start="237:34" pos:end="237:41"><name pos:start="237:34" pos:end="237:34">i</name><operator pos:start="237:35" pos:end="237:35">/</operator><literal type="number" pos:start="237:36" pos:end="237:37">2</literal><operator pos:start="237:37" pos:end="237:37">+</operator><literal type="number" pos:start="237:38" pos:end="237:41">2048</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="239:7" pos:end="239:41"><expr pos:start="239:7" pos:end="239:40"><name pos:start="239:7" pos:end="239:7">V</name>  <operator pos:start="239:10" pos:end="239:10">=</operator> <call pos:start="239:12" pos:end="239:40"><name pos:start="239:12" pos:end="239:21">vec_mradds</name> <argument_list pos:start="239:23" pos:end="239:40">(<argument pos:start="239:24" pos:end="239:24"><expr pos:start="239:24" pos:end="239:24"><name pos:start="239:24" pos:end="239:24">X</name></expr></argument>, <argument pos:start="239:27" pos:end="239:36"><expr pos:start="239:27" pos:end="239:36"><name pos:start="239:27" pos:end="239:36"><name pos:start="239:27" pos:end="239:33">CCoeffs</name><index pos:start="239:34" pos:end="239:36">[<expr pos:start="239:35" pos:end="239:35"><name pos:start="239:35" pos:end="239:35">j</name></expr>]</index></name></expr></argument>, <argument pos:start="239:39" pos:end="239:39"><expr pos:start="239:39" pos:end="239:39"><name pos:start="239:39" pos:end="239:39">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="245:5" pos:end="245:32">/* scale and clip signals */</comment>

    <expr_stmt pos:start="247:5" pos:end="247:27"><expr pos:start="247:5" pos:end="247:26"><name pos:start="247:5" pos:end="247:6">Y0</name> <operator pos:start="247:8" pos:end="247:8">=</operator> <call pos:start="247:10" pos:end="247:26"><name pos:start="247:10" pos:end="247:16">vec_sra</name> <argument_list pos:start="247:18" pos:end="247:26">(<argument pos:start="247:19" pos:end="247:20"><expr pos:start="247:19" pos:end="247:20"><name pos:start="247:19" pos:end="247:20">Y0</name></expr></argument>, <argument pos:start="247:23" pos:end="247:25"><expr pos:start="247:23" pos:end="247:25"><name pos:start="247:23" pos:end="247:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:27"><expr pos:start="249:5" pos:end="249:26"><name pos:start="249:5" pos:end="249:6">Y1</name> <operator pos:start="249:8" pos:end="249:8">=</operator> <call pos:start="249:10" pos:end="249:26"><name pos:start="249:10" pos:end="249:16">vec_sra</name> <argument_list pos:start="249:18" pos:end="249:26">(<argument pos:start="249:19" pos:end="249:20"><expr pos:start="249:19" pos:end="249:20"><name pos:start="249:19" pos:end="249:20">Y1</name></expr></argument>, <argument pos:start="249:23" pos:end="249:25"><expr pos:start="249:23" pos:end="249:25"><name pos:start="249:23" pos:end="249:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:27"><expr pos:start="251:5" pos:end="251:26"><name pos:start="251:5" pos:end="251:5">U</name>  <operator pos:start="251:8" pos:end="251:8">=</operator> <call pos:start="251:10" pos:end="251:26"><name pos:start="251:10" pos:end="251:16">vec_sra</name> <argument_list pos:start="251:18" pos:end="251:26">(<argument pos:start="251:19" pos:end="251:19"><expr pos:start="251:19" pos:end="251:19"><name pos:start="251:19" pos:end="251:19">U</name></expr></argument>,  <argument pos:start="251:23" pos:end="251:25"><expr pos:start="251:23" pos:end="251:25"><name pos:start="251:23" pos:end="251:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:27"><expr pos:start="253:5" pos:end="253:26"><name pos:start="253:5" pos:end="253:5">V</name>  <operator pos:start="253:8" pos:end="253:8">=</operator> <call pos:start="253:10" pos:end="253:26"><name pos:start="253:10" pos:end="253:16">vec_sra</name> <argument_list pos:start="253:18" pos:end="253:26">(<argument pos:start="253:19" pos:end="253:19"><expr pos:start="253:19" pos:end="253:19"><name pos:start="253:19" pos:end="253:19">V</name></expr></argument>,  <argument pos:start="253:23" pos:end="253:25"><expr pos:start="253:23" pos:end="253:25"><name pos:start="253:23" pos:end="253:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="257:5" pos:end="257:27"><expr pos:start="257:5" pos:end="257:26"><name pos:start="257:5" pos:end="257:6">Y0</name> <operator pos:start="257:8" pos:end="257:8">=</operator> <call pos:start="257:10" pos:end="257:26"><name pos:start="257:10" pos:end="257:21">vec_clip_s16</name> <argument_list pos:start="257:23" pos:end="257:26">(<argument pos:start="257:24" pos:end="257:25"><expr pos:start="257:24" pos:end="257:25"><name pos:start="257:24" pos:end="257:25">Y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:27"><expr pos:start="259:5" pos:end="259:26"><name pos:start="259:5" pos:end="259:6">Y1</name> <operator pos:start="259:8" pos:end="259:8">=</operator> <call pos:start="259:10" pos:end="259:26"><name pos:start="259:10" pos:end="259:21">vec_clip_s16</name> <argument_list pos:start="259:23" pos:end="259:26">(<argument pos:start="259:24" pos:end="259:25"><expr pos:start="259:24" pos:end="259:25"><name pos:start="259:24" pos:end="259:25">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:26"><expr pos:start="261:5" pos:end="261:25"><name pos:start="261:5" pos:end="261:5">U</name>  <operator pos:start="261:8" pos:end="261:8">=</operator> <call pos:start="261:10" pos:end="261:25"><name pos:start="261:10" pos:end="261:21">vec_clip_s16</name> <argument_list pos:start="261:23" pos:end="261:25">(<argument pos:start="261:24" pos:end="261:24"><expr pos:start="261:24" pos:end="261:24"><name pos:start="261:24" pos:end="261:24">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:26"><expr pos:start="263:5" pos:end="263:25"><name pos:start="263:5" pos:end="263:5">V</name>  <operator pos:start="263:8" pos:end="263:8">=</operator> <call pos:start="263:10" pos:end="263:25"><name pos:start="263:10" pos:end="263:21">vec_clip_s16</name> <argument_list pos:start="263:23" pos:end="263:25">(<argument pos:start="263:24" pos:end="263:24"><expr pos:start="263:24" pos:end="263:24"><name pos:start="263:24" pos:end="263:24">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="267:5" pos:end="281:6">/* now we have

       Y0= y0 y1 y2 y3 y4 y5 y6 y7     Y1= y8 y9 y10 y11 y12 y13 y14 y15

       U= u0 u1 u2 u3 u4 u5 u6 u7      V= v0 v1 v2 v3 v4 v5 v6 v7



       Y0= y0 y1 y2 y3 y4 y5 y6 y7    Y1= y8 y9 y10 y11 y12 y13 y14 y15

       U0= u0 u0 u1 u1 u2 u2 u3 u3    U1= u4 u4 u5 u5 u6 u6 u7 u7

       V0= v0 v0 v1 v1 v2 v2 v3 v3    V1= v4 v4 v5 v5 v6 v6 v7 v7

    */</comment>



    <expr_stmt pos:start="285:5" pos:end="285:26"><expr pos:start="285:5" pos:end="285:25"><name pos:start="285:5" pos:end="285:6">U0</name> <operator pos:start="285:8" pos:end="285:8">=</operator> <call pos:start="285:10" pos:end="285:25"><name pos:start="285:10" pos:end="285:19">vec_mergeh</name> <argument_list pos:start="285:21" pos:end="285:25">(<argument pos:start="285:22" pos:end="285:22"><expr pos:start="285:22" pos:end="285:22"><name pos:start="285:22" pos:end="285:22">U</name></expr></argument>,<argument pos:start="285:24" pos:end="285:24"><expr pos:start="285:24" pos:end="285:24"><name pos:start="285:24" pos:end="285:24">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:26"><expr pos:start="287:5" pos:end="287:25"><name pos:start="287:5" pos:end="287:6">V0</name> <operator pos:start="287:8" pos:end="287:8">=</operator> <call pos:start="287:10" pos:end="287:25"><name pos:start="287:10" pos:end="287:19">vec_mergeh</name> <argument_list pos:start="287:21" pos:end="287:25">(<argument pos:start="287:22" pos:end="287:22"><expr pos:start="287:22" pos:end="287:22"><name pos:start="287:22" pos:end="287:22">V</name></expr></argument>,<argument pos:start="287:24" pos:end="287:24"><expr pos:start="287:24" pos:end="287:24"><name pos:start="287:24" pos:end="287:24">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="291:5" pos:end="291:26"><expr pos:start="291:5" pos:end="291:25"><name pos:start="291:5" pos:end="291:6">U1</name> <operator pos:start="291:8" pos:end="291:8">=</operator> <call pos:start="291:10" pos:end="291:25"><name pos:start="291:10" pos:end="291:19">vec_mergel</name> <argument_list pos:start="291:21" pos:end="291:25">(<argument pos:start="291:22" pos:end="291:22"><expr pos:start="291:22" pos:end="291:22"><name pos:start="291:22" pos:end="291:22">U</name></expr></argument>,<argument pos:start="291:24" pos:end="291:24"><expr pos:start="291:24" pos:end="291:24"><name pos:start="291:24" pos:end="291:24">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:26"><expr pos:start="293:5" pos:end="293:25"><name pos:start="293:5" pos:end="293:6">V1</name> <operator pos:start="293:8" pos:end="293:8">=</operator> <call pos:start="293:10" pos:end="293:25"><name pos:start="293:10" pos:end="293:19">vec_mergel</name> <argument_list pos:start="293:21" pos:end="293:25">(<argument pos:start="293:22" pos:end="293:22"><expr pos:start="293:22" pos:end="293:22"><name pos:start="293:22" pos:end="293:22">V</name></expr></argument>,<argument pos:start="293:24" pos:end="293:24"><expr pos:start="293:24" pos:end="293:24"><name pos:start="293:24" pos:end="293:24">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="297:5" pos:end="297:42"><expr pos:start="297:5" pos:end="297:41"><call pos:start="297:5" pos:end="297:41"><name pos:start="297:5" pos:end="297:15">cvtyuvtoRGB</name> <argument_list pos:start="297:17" pos:end="297:41">(<argument pos:start="297:18" pos:end="297:18"><expr pos:start="297:18" pos:end="297:18"><name pos:start="297:18" pos:end="297:18">c</name></expr></argument>, <argument pos:start="297:21" pos:end="297:22"><expr pos:start="297:21" pos:end="297:22"><name pos:start="297:21" pos:end="297:22">Y0</name></expr></argument>,<argument pos:start="297:24" pos:end="297:25"><expr pos:start="297:24" pos:end="297:25"><name pos:start="297:24" pos:end="297:25">U0</name></expr></argument>,<argument pos:start="297:27" pos:end="297:28"><expr pos:start="297:27" pos:end="297:28"><name pos:start="297:27" pos:end="297:28">V0</name></expr></argument>,<argument pos:start="297:30" pos:end="297:32"><expr pos:start="297:30" pos:end="297:32"><operator pos:start="297:30" pos:end="297:30">&amp;</operator><name pos:start="297:31" pos:end="297:32">R0</name></expr></argument>,<argument pos:start="297:34" pos:end="297:36"><expr pos:start="297:34" pos:end="297:36"><operator pos:start="297:34" pos:end="297:34">&amp;</operator><name pos:start="297:35" pos:end="297:36">G0</name></expr></argument>,<argument pos:start="297:38" pos:end="297:40"><expr pos:start="297:38" pos:end="297:40"><operator pos:start="297:38" pos:end="297:38">&amp;</operator><name pos:start="297:39" pos:end="297:40">B0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:42"><expr pos:start="299:5" pos:end="299:41"><call pos:start="299:5" pos:end="299:41"><name pos:start="299:5" pos:end="299:15">cvtyuvtoRGB</name> <argument_list pos:start="299:17" pos:end="299:41">(<argument pos:start="299:18" pos:end="299:18"><expr pos:start="299:18" pos:end="299:18"><name pos:start="299:18" pos:end="299:18">c</name></expr></argument>, <argument pos:start="299:21" pos:end="299:22"><expr pos:start="299:21" pos:end="299:22"><name pos:start="299:21" pos:end="299:22">Y1</name></expr></argument>,<argument pos:start="299:24" pos:end="299:25"><expr pos:start="299:24" pos:end="299:25"><name pos:start="299:24" pos:end="299:25">U1</name></expr></argument>,<argument pos:start="299:27" pos:end="299:28"><expr pos:start="299:27" pos:end="299:28"><name pos:start="299:27" pos:end="299:28">V1</name></expr></argument>,<argument pos:start="299:30" pos:end="299:32"><expr pos:start="299:30" pos:end="299:32"><operator pos:start="299:30" pos:end="299:30">&amp;</operator><name pos:start="299:31" pos:end="299:32">R1</name></expr></argument>,<argument pos:start="299:34" pos:end="299:36"><expr pos:start="299:34" pos:end="299:36"><operator pos:start="299:34" pos:end="299:34">&amp;</operator><name pos:start="299:35" pos:end="299:36">G1</name></expr></argument>,<argument pos:start="299:38" pos:end="299:40"><expr pos:start="299:38" pos:end="299:40"><operator pos:start="299:38" pos:end="299:38">&amp;</operator><name pos:start="299:39" pos:end="299:40">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="303:5" pos:end="303:29"><expr pos:start="303:5" pos:end="303:28"><name pos:start="303:5" pos:end="303:5">R</name>  <operator pos:start="303:8" pos:end="303:8">=</operator> <call pos:start="303:10" pos:end="303:28"><name pos:start="303:10" pos:end="303:20">vec_packclp</name> <argument_list pos:start="303:22" pos:end="303:28">(<argument pos:start="303:23" pos:end="303:24"><expr pos:start="303:23" pos:end="303:24"><name pos:start="303:23" pos:end="303:24">R0</name></expr></argument>,<argument pos:start="303:26" pos:end="303:27"><expr pos:start="303:26" pos:end="303:27"><name pos:start="303:26" pos:end="303:27">R1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:29"><expr pos:start="305:5" pos:end="305:28"><name pos:start="305:5" pos:end="305:5">G</name>  <operator pos:start="305:8" pos:end="305:8">=</operator> <call pos:start="305:10" pos:end="305:28"><name pos:start="305:10" pos:end="305:20">vec_packclp</name> <argument_list pos:start="305:22" pos:end="305:28">(<argument pos:start="305:23" pos:end="305:24"><expr pos:start="305:23" pos:end="305:24"><name pos:start="305:23" pos:end="305:24">G0</name></expr></argument>,<argument pos:start="305:26" pos:end="305:27"><expr pos:start="305:26" pos:end="305:27"><name pos:start="305:26" pos:end="305:27">G1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:29"><expr pos:start="307:5" pos:end="307:28"><name pos:start="307:5" pos:end="307:5">B</name>  <operator pos:start="307:8" pos:end="307:8">=</operator> <call pos:start="307:10" pos:end="307:28"><name pos:start="307:10" pos:end="307:20">vec_packclp</name> <argument_list pos:start="307:22" pos:end="307:28">(<argument pos:start="307:23" pos:end="307:24"><expr pos:start="307:23" pos:end="307:24"><name pos:start="307:23" pos:end="307:24">B0</name></expr></argument>,<argument pos:start="307:26" pos:end="307:27"><expr pos:start="307:26" pos:end="307:27"><name pos:start="307:26" pos:end="307:27">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="311:5" pos:end="311:43"><expr pos:start="311:5" pos:end="311:42"><name pos:start="311:5" pos:end="311:8">nout</name> <operator pos:start="311:10" pos:end="311:10">=</operator> <operator pos:start="311:12" pos:end="311:12">(</operator><name pos:start="311:13" pos:end="311:18">vector</name> <name pos:start="311:20" pos:end="311:27">unsigned</name> <name pos:start="311:29" pos:end="311:32">char</name> <operator pos:start="311:34" pos:end="311:34">*</operator><operator pos:start="311:35" pos:end="311:35">)</operator><name pos:start="311:36" pos:end="311:42">scratch</name></expr>;</expr_stmt>

    <switch pos:start="313:5" pos:end="337:5">switch<condition pos:start="313:11" pos:end="313:24">(<expr pos:start="313:12" pos:end="313:23"><name pos:start="313:12" pos:end="313:23"><name pos:start="313:12" pos:end="313:12">c</name><operator pos:start="313:13" pos:end="313:14">-&gt;</operator><name pos:start="313:15" pos:end="313:23">dstFormat</name></name></expr>)</condition> <block pos:start="313:26" pos:end="337:5">{<block_content pos:start="315:7" pos:end="335:15">

      <case pos:start="315:7" pos:end="315:24">case <expr pos:start="315:12" pos:end="315:23"><name pos:start="315:12" pos:end="315:23">PIX_FMT_ABGR</name></expr>:</case> <expr_stmt pos:start="315:26" pos:end="315:47"><expr pos:start="315:26" pos:end="315:46"><call pos:start="315:26" pos:end="315:46"><name pos:start="315:26" pos:end="315:33">out_abgr</name> <argument_list pos:start="315:35" pos:end="315:46">(<argument pos:start="315:36" pos:end="315:36"><expr pos:start="315:36" pos:end="315:36"><name pos:start="315:36" pos:end="315:36">R</name></expr></argument>,<argument pos:start="315:38" pos:end="315:38"><expr pos:start="315:38" pos:end="315:38"><name pos:start="315:38" pos:end="315:38">G</name></expr></argument>,<argument pos:start="315:40" pos:end="315:40"><expr pos:start="315:40" pos:end="315:40"><name pos:start="315:40" pos:end="315:40">B</name></expr></argument>,<argument pos:start="315:42" pos:end="315:45"><expr pos:start="315:42" pos:end="315:45"><name pos:start="315:42" pos:end="315:45">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="315:49" pos:end="315:54">break;</break>

      <case pos:start="317:7" pos:end="317:24">case <expr pos:start="317:12" pos:end="317:23"><name pos:start="317:12" pos:end="317:23">PIX_FMT_BGRA</name></expr>:</case> <expr_stmt pos:start="317:26" pos:end="317:47"><expr pos:start="317:26" pos:end="317:46"><call pos:start="317:26" pos:end="317:46"><name pos:start="317:26" pos:end="317:33">out_bgra</name> <argument_list pos:start="317:35" pos:end="317:46">(<argument pos:start="317:36" pos:end="317:36"><expr pos:start="317:36" pos:end="317:36"><name pos:start="317:36" pos:end="317:36">R</name></expr></argument>,<argument pos:start="317:38" pos:end="317:38"><expr pos:start="317:38" pos:end="317:38"><name pos:start="317:38" pos:end="317:38">G</name></expr></argument>,<argument pos:start="317:40" pos:end="317:40"><expr pos:start="317:40" pos:end="317:40"><name pos:start="317:40" pos:end="317:40">B</name></expr></argument>,<argument pos:start="317:42" pos:end="317:45"><expr pos:start="317:42" pos:end="317:45"><name pos:start="317:42" pos:end="317:45">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="317:49" pos:end="317:54">break;</break>

      <case pos:start="319:7" pos:end="319:24">case <expr pos:start="319:12" pos:end="319:23"><name pos:start="319:12" pos:end="319:23">PIX_FMT_RGBA</name></expr>:</case> <expr_stmt pos:start="319:26" pos:end="319:47"><expr pos:start="319:26" pos:end="319:46"><call pos:start="319:26" pos:end="319:46"><name pos:start="319:26" pos:end="319:33">out_rgba</name> <argument_list pos:start="319:35" pos:end="319:46">(<argument pos:start="319:36" pos:end="319:36"><expr pos:start="319:36" pos:end="319:36"><name pos:start="319:36" pos:end="319:36">R</name></expr></argument>,<argument pos:start="319:38" pos:end="319:38"><expr pos:start="319:38" pos:end="319:38"><name pos:start="319:38" pos:end="319:38">G</name></expr></argument>,<argument pos:start="319:40" pos:end="319:40"><expr pos:start="319:40" pos:end="319:40"><name pos:start="319:40" pos:end="319:40">B</name></expr></argument>,<argument pos:start="319:42" pos:end="319:45"><expr pos:start="319:42" pos:end="319:45"><name pos:start="319:42" pos:end="319:45">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="319:49" pos:end="319:54">break;</break>

      <case pos:start="321:7" pos:end="321:24">case <expr pos:start="321:12" pos:end="321:23"><name pos:start="321:12" pos:end="321:23">PIX_FMT_ARGB</name></expr>:</case> <expr_stmt pos:start="321:26" pos:end="321:47"><expr pos:start="321:26" pos:end="321:46"><call pos:start="321:26" pos:end="321:46"><name pos:start="321:26" pos:end="321:33">out_argb</name> <argument_list pos:start="321:35" pos:end="321:46">(<argument pos:start="321:36" pos:end="321:36"><expr pos:start="321:36" pos:end="321:36"><name pos:start="321:36" pos:end="321:36">R</name></expr></argument>,<argument pos:start="321:38" pos:end="321:38"><expr pos:start="321:38" pos:end="321:38"><name pos:start="321:38" pos:end="321:38">G</name></expr></argument>,<argument pos:start="321:40" pos:end="321:40"><expr pos:start="321:40" pos:end="321:40"><name pos:start="321:40" pos:end="321:40">B</name></expr></argument>,<argument pos:start="321:42" pos:end="321:45"><expr pos:start="321:42" pos:end="321:45"><name pos:start="321:42" pos:end="321:45">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="321:49" pos:end="321:54">break;</break>

      <case pos:start="323:7" pos:end="323:25">case <expr pos:start="323:12" pos:end="323:24"><name pos:start="323:12" pos:end="323:24">PIX_FMT_RGB24</name></expr>:</case> <expr_stmt pos:start="323:27" pos:end="323:49"><expr pos:start="323:27" pos:end="323:48"><call pos:start="323:27" pos:end="323:48"><name pos:start="323:27" pos:end="323:35">out_rgb24</name> <argument_list pos:start="323:37" pos:end="323:48">(<argument pos:start="323:38" pos:end="323:38"><expr pos:start="323:38" pos:end="323:38"><name pos:start="323:38" pos:end="323:38">R</name></expr></argument>,<argument pos:start="323:40" pos:end="323:40"><expr pos:start="323:40" pos:end="323:40"><name pos:start="323:40" pos:end="323:40">G</name></expr></argument>,<argument pos:start="323:42" pos:end="323:42"><expr pos:start="323:42" pos:end="323:42"><name pos:start="323:42" pos:end="323:42">B</name></expr></argument>,<argument pos:start="323:44" pos:end="323:47"><expr pos:start="323:44" pos:end="323:47"><name pos:start="323:44" pos:end="323:47">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="323:51" pos:end="323:56">break;</break>

      <case pos:start="325:7" pos:end="325:25">case <expr pos:start="325:12" pos:end="325:24"><name pos:start="325:12" pos:end="325:24">PIX_FMT_BGR24</name></expr>:</case> <expr_stmt pos:start="325:27" pos:end="325:49"><expr pos:start="325:27" pos:end="325:48"><call pos:start="325:27" pos:end="325:48"><name pos:start="325:27" pos:end="325:35">out_bgr24</name> <argument_list pos:start="325:37" pos:end="325:48">(<argument pos:start="325:38" pos:end="325:38"><expr pos:start="325:38" pos:end="325:38"><name pos:start="325:38" pos:end="325:38">R</name></expr></argument>,<argument pos:start="325:40" pos:end="325:40"><expr pos:start="325:40" pos:end="325:40"><name pos:start="325:40" pos:end="325:40">G</name></expr></argument>,<argument pos:start="325:42" pos:end="325:42"><expr pos:start="325:42" pos:end="325:42"><name pos:start="325:42" pos:end="325:42">B</name></expr></argument>,<argument pos:start="325:44" pos:end="325:47"><expr pos:start="325:44" pos:end="325:47"><name pos:start="325:44" pos:end="325:47">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="325:51" pos:end="325:56">break;</break>

      <default pos:start="327:7" pos:end="327:14">default:</default>

        <comment type="block" pos:start="329:9" pos:end="329:35">/* Unreachable, I think. */</comment>

        <expr_stmt pos:start="331:9" pos:end="333:47"><expr pos:start="331:9" pos:end="333:46"><call pos:start="331:9" pos:end="333:46"><name pos:start="331:9" pos:end="331:14">av_log</name><argument_list pos:start="331:15" pos:end="333:46">(<argument pos:start="331:16" pos:end="331:16"><expr pos:start="331:16" pos:end="331:16"><name pos:start="331:16" pos:end="331:16">c</name></expr></argument>, <argument pos:start="331:19" pos:end="331:30"><expr pos:start="331:19" pos:end="331:30"><name pos:start="331:19" pos:end="331:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="331:33" pos:end="331:81"><expr pos:start="331:33" pos:end="331:81"><literal type="string" pos:start="331:33" pos:end="331:81">"altivec_yuv2packedX doesn't support %s output\n"</literal></expr></argument>,

                <argument pos:start="333:17" pos:end="333:45"><expr pos:start="333:17" pos:end="333:45"><call pos:start="333:17" pos:end="333:45"><name pos:start="333:17" pos:end="333:31">sws_format_name</name><argument_list pos:start="333:32" pos:end="333:45">(<argument pos:start="333:33" pos:end="333:44"><expr pos:start="333:33" pos:end="333:44"><name pos:start="333:33" pos:end="333:44"><name pos:start="333:33" pos:end="333:33">c</name><operator pos:start="333:34" pos:end="333:35">-&gt;</operator><name pos:start="333:36" pos:end="333:44">dstFormat</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="335:9" pos:end="335:15">return;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="341:5" pos:end="341:56"><expr pos:start="341:5" pos:end="341:55"><call pos:start="341:5" pos:end="341:55"><name pos:start="341:5" pos:end="341:10">memcpy</name> <argument_list pos:start="341:12" pos:end="341:55">(<argument pos:start="341:13" pos:end="341:33"><expr pos:start="341:13" pos:end="341:33"><operator pos:start="341:13" pos:end="341:13">&amp;</operator><operator pos:start="341:14" pos:end="341:14">(</operator><operator pos:start="341:15" pos:end="341:15">(</operator><name pos:start="341:16" pos:end="341:23">uint32_t</name><operator pos:start="341:24" pos:end="341:24">*</operator><operator pos:start="341:25" pos:end="341:25">)</operator><name pos:start="341:26" pos:end="341:29">dest</name><operator pos:start="341:30" pos:end="341:30">)</operator><index pos:start="341:31" pos:end="341:33">[<expr pos:start="341:32" pos:end="341:32"><name pos:start="341:32" pos:end="341:32">i</name></expr>]</index></expr></argument>, <argument pos:start="341:36" pos:end="341:42"><expr pos:start="341:36" pos:end="341:42"><name pos:start="341:36" pos:end="341:42">scratch</name></expr></argument>, <argument pos:start="341:45" pos:end="341:54"><expr pos:start="341:45" pos:end="341:54"><operator pos:start="341:45" pos:end="341:45">(</operator><name pos:start="341:46" pos:end="341:49">dstW</name><operator pos:start="341:50" pos:end="341:50">-</operator><name pos:start="341:51" pos:end="341:51">i</name><operator pos:start="341:52" pos:end="341:52">)</operator><operator pos:start="341:53" pos:end="341:53">/</operator><literal type="number" pos:start="341:54" pos:end="341:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></if></if_stmt>



</block_content>}</block>
</unit>
