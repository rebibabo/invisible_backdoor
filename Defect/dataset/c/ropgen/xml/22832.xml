<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22832.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">object_set_link_property</name><parameter_list pos:start="1:37" pos:end="3:68">(<parameter pos:start="1:38" pos:end="1:48"><decl pos:start="1:38" pos:end="1:48"><type pos:start="1:38" pos:end="1:48"><name pos:start="1:38" pos:end="1:43">Object</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">obj</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:57">Visitor</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">v</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:66">void</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:74">opaque</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:53"><decl pos:start="3:38" pos:end="3:53"><type pos:start="3:38" pos:end="3:53"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:47">char</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">name</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:67"><decl pos:start="3:56" pos:end="3:67"><type pos:start="3:56" pos:end="3:67"><name pos:start="3:56" pos:end="3:60">Error</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier><modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:67">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:17">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:10">Object</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier><modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">child</name> <init pos:start="7:20" pos:end="7:27">= <expr pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:18">ambiguous</name> <init pos:start="9:20" pos:end="9:26">= <expr pos:start="9:22" pos:end="9:26"><name pos:start="9:22" pos:end="9:26">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:14">path</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:8">type</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:52"><name pos:start="17:12" pos:end="17:35">object_property_get_type</name><argument_list pos:start="17:36" pos:end="17:52">(<argument pos:start="17:37" pos:end="17:39"><expr pos:start="17:37" pos:end="17:39"><name pos:start="17:37" pos:end="17:39">obj</name></expr></argument>, <argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">name</name></expr></argument>, <argument pos:start="17:48" pos:end="17:51"><expr pos:start="17:48" pos:end="17:51"><name pos:start="17:48" pos:end="17:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><call pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:18">visit_type_str</name><argument_list pos:start="21:19" pos:end="21:40">(<argument pos:start="21:20" pos:end="21:20"><expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">v</name></expr></argument>, <argument pos:start="21:23" pos:end="21:27"><expr pos:start="21:23" pos:end="21:27"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:27">path</name></expr></argument>, <argument pos:start="21:30" pos:end="21:33"><expr pos:start="21:30" pos:end="21:33"><name pos:start="21:30" pos:end="21:33">name</name></expr></argument>, <argument pos:start="21:36" pos:end="21:39"><expr pos:start="21:36" pos:end="21:39"><name pos:start="21:36" pos:end="21:39">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:15">(<expr pos:start="25:9" pos:end="25:14"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:14">child</name></expr>)</condition> <block pos:start="25:17" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:29">

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><call pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:20">object_unref</name><argument_list pos:start="27:21" pos:end="27:28">(<argument pos:start="27:22" pos:end="27:27"><expr pos:start="27:22" pos:end="27:27"><operator pos:start="27:22" pos:end="27:22">*</operator><name pos:start="27:23" pos:end="27:27">child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="79:5"><if pos:start="33:5" pos:end="75:5">if <condition pos:start="33:8" pos:end="33:30">(<expr pos:start="33:9" pos:end="33:29"><call pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:14">strcmp</name><argument_list pos:start="33:15" pos:end="33:24">(<argument pos:start="33:16" pos:end="33:19"><expr pos:start="33:16" pos:end="33:19"><name pos:start="33:16" pos:end="33:19">path</name></expr></argument>, <argument pos:start="33:22" pos:end="33:23"><expr pos:start="33:22" pos:end="33:23"><literal type="string" pos:start="33:22" pos:end="33:23">""</literal></expr></argument>)</argument_list></call> <operator pos:start="33:26" pos:end="33:27">!=</operator> <literal type="number" pos:start="33:29" pos:end="33:29">0</literal></expr>)</condition> <block pos:start="33:32" pos:end="75:5">{<block_content pos:start="35:9" pos:end="73:9">

        <decl_stmt pos:start="35:9" pos:end="35:23"><decl pos:start="35:9" pos:end="35:22"><type pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:14">Object</name> <modifier pos:start="35:16" pos:end="35:16">*</modifier></type><name pos:start="35:17" pos:end="35:22">target</name></decl>;</decl_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:55"><expr pos:start="39:9" pos:end="39:54"><name pos:start="39:9" pos:end="39:14">target</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <call pos:start="39:18" pos:end="39:54"><name pos:start="39:18" pos:end="39:36">object_resolve_path</name><argument_list pos:start="39:37" pos:end="39:54">(<argument pos:start="39:38" pos:end="39:41"><expr pos:start="39:38" pos:end="39:41"><name pos:start="39:38" pos:end="39:41">path</name></expr></argument>, <argument pos:start="39:44" pos:end="39:53"><expr pos:start="39:44" pos:end="39:53"><operator pos:start="39:44" pos:end="39:44">&amp;</operator><name pos:start="39:45" pos:end="39:53">ambiguous</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="73:9"><if pos:start="41:9" pos:end="69:9">if <condition pos:start="41:12" pos:end="41:19">(<expr pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:18">target</name></expr>)</condition> <block pos:start="41:21" pos:end="69:9">{<block_content pos:start="43:13" pos:end="67:32">

            <decl_stmt pos:start="43:13" pos:end="43:31"><decl pos:start="43:13" pos:end="43:30"><type pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:17">gchar</name> <modifier pos:start="43:19" pos:end="43:19">*</modifier></type><name pos:start="43:20" pos:end="43:30">target_type</name></decl>;</decl_stmt>



            <expr_stmt pos:start="47:13" pos:end="47:45"><expr pos:start="47:13" pos:end="47:44"><name pos:start="47:13" pos:end="47:23">target_type</name> <operator pos:start="47:25" pos:end="47:25">=</operator> <call pos:start="47:27" pos:end="47:44"><name pos:start="47:27" pos:end="47:34">g_strdup</name><argument_list pos:start="47:35" pos:end="47:44">(<argument pos:start="47:36" pos:end="47:43"><expr pos:start="47:36" pos:end="47:43"><operator pos:start="47:36" pos:end="47:36">&amp;</operator><name pos:start="47:37" pos:end="47:43"><name pos:start="47:37" pos:end="47:40">type</name><index pos:start="47:41" pos:end="47:43">[<expr pos:start="47:42" pos:end="47:42"><literal type="number" pos:start="47:42" pos:end="47:42">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:53"><expr pos:start="49:13" pos:end="49:52"><name pos:start="49:13" pos:end="49:48"><name pos:start="49:13" pos:end="49:23">target_type</name><index pos:start="49:24" pos:end="49:48">[<expr pos:start="49:25" pos:end="49:47"><call pos:start="49:25" pos:end="49:43"><name pos:start="49:25" pos:end="49:30">strlen</name><argument_list pos:start="49:31" pos:end="49:43">(<argument pos:start="49:32" pos:end="49:42"><expr pos:start="49:32" pos:end="49:42"><name pos:start="49:32" pos:end="49:42">target_type</name></expr></argument>)</argument_list></call> <operator pos:start="49:45" pos:end="49:45">-</operator> <literal type="number" pos:start="49:47" pos:end="49:47">2</literal></expr>]</index></name> <operator pos:start="49:50" pos:end="49:50">=</operator> <literal type="number" pos:start="49:52" pos:end="49:52">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="53:13" pos:end="63:13"><if pos:start="53:13" pos:end="59:13">if <condition pos:start="53:16" pos:end="53:57">(<expr pos:start="53:17" pos:end="53:56"><call pos:start="53:17" pos:end="53:56"><name pos:start="53:17" pos:end="53:35">object_dynamic_cast</name><argument_list pos:start="53:36" pos:end="53:56">(<argument pos:start="53:37" pos:end="53:42"><expr pos:start="53:37" pos:end="53:42"><name pos:start="53:37" pos:end="53:42">target</name></expr></argument>, <argument pos:start="53:45" pos:end="53:55"><expr pos:start="53:45" pos:end="53:55"><name pos:start="53:45" pos:end="53:55">target_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:59" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:32">

                <expr_stmt pos:start="55:17" pos:end="55:35"><expr pos:start="55:17" pos:end="55:34"><call pos:start="55:17" pos:end="55:34"><name pos:start="55:17" pos:end="55:26">object_ref</name><argument_list pos:start="55:27" pos:end="55:34">(<argument pos:start="55:28" pos:end="55:33"><expr pos:start="55:28" pos:end="55:33"><name pos:start="55:28" pos:end="55:33">target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:32"><expr pos:start="57:17" pos:end="57:31"><operator pos:start="57:17" pos:end="57:17">*</operator><name pos:start="57:18" pos:end="57:22">child</name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:31">target</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="59:15" pos:end="63:13">else <block pos:start="59:20" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:73">

                <expr_stmt pos:start="61:17" pos:end="61:73"><expr pos:start="61:17" pos:end="61:72"><call pos:start="61:17" pos:end="61:72"><name pos:start="61:17" pos:end="61:25">error_set</name><argument_list pos:start="61:26" pos:end="61:72">(<argument pos:start="61:27" pos:end="61:30"><expr pos:start="61:27" pos:end="61:30"><name pos:start="61:27" pos:end="61:30">errp</name></expr></argument>, <argument pos:start="61:33" pos:end="61:59"><expr pos:start="61:33" pos:end="61:59"><name pos:start="61:33" pos:end="61:59">QERR_INVALID_PARAMETER_TYPE</name></expr></argument>, <argument pos:start="61:62" pos:end="61:65"><expr pos:start="61:62" pos:end="61:65"><name pos:start="61:62" pos:end="61:65">name</name></expr></argument>, <argument pos:start="61:68" pos:end="61:71"><expr pos:start="61:68" pos:end="61:71"><name pos:start="61:68" pos:end="61:71">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="67:13" pos:end="67:32"><expr pos:start="67:13" pos:end="67:31"><call pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:18">g_free</name><argument_list pos:start="67:19" pos:end="67:31">(<argument pos:start="67:20" pos:end="67:30"><expr pos:start="67:20" pos:end="67:30"><name pos:start="67:20" pos:end="67:30">target_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="73:9">else <block pos:start="69:16" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:57">

            <expr_stmt pos:start="71:13" pos:end="71:57"><expr pos:start="71:13" pos:end="71:56"><call pos:start="71:13" pos:end="71:56"><name pos:start="71:13" pos:end="71:21">error_set</name><argument_list pos:start="71:22" pos:end="71:56">(<argument pos:start="71:23" pos:end="71:26"><expr pos:start="71:23" pos:end="71:26"><name pos:start="71:23" pos:end="71:26">errp</name></expr></argument>, <argument pos:start="71:29" pos:end="71:49"><expr pos:start="71:29" pos:end="71:49"><name pos:start="71:29" pos:end="71:49">QERR_DEVICE_NOT_FOUND</name></expr></argument>, <argument pos:start="71:52" pos:end="71:55"><expr pos:start="71:52" pos:end="71:55"><name pos:start="71:52" pos:end="71:55">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="79:5">else <block pos:start="75:12" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:22">

        <expr_stmt pos:start="77:9" pos:end="77:22"><expr pos:start="77:9" pos:end="77:21"><operator pos:start="77:9" pos:end="77:9">*</operator><name pos:start="77:10" pos:end="77:14">child</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <name pos:start="77:18" pos:end="77:21">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:17"><expr pos:start="83:5" pos:end="83:16"><call pos:start="83:5" pos:end="83:16"><name pos:start="83:5" pos:end="83:10">g_free</name><argument_list pos:start="83:11" pos:end="83:16">(<argument pos:start="83:12" pos:end="83:15"><expr pos:start="83:12" pos:end="83:15"><name pos:start="83:12" pos:end="83:15">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
