<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23168.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:19">helper_fre</name> <parameter_list pos:start="1:21" pos:end="1:34">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:29"><name pos:start="1:22" pos:end="1:29">uint64_t</name></type> <name pos:start="1:31" pos:end="1:33">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:18">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:15">CPU_DoubleU</name></type> <name pos:start="5:17" pos:end="5:20">fone</name></decl>, <decl pos:start="5:23" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:15"/><name pos:start="5:23" pos:end="5:26">farg</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:36"><expr pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:8">fone</name><operator pos:start="7:9" pos:end="7:9">.</operator><name pos:start="7:10" pos:end="7:11">ll</name></name> <operator pos:start="7:13" pos:end="7:13">=</operator> <literal type="number" pos:start="7:15" pos:end="7:35">0x3FF0000000000000ULL</literal></expr>;</expr_stmt> <comment type="block" pos:start="7:38" pos:end="7:46">/* 1.0 */</comment>

    <expr_stmt pos:start="9:5" pos:end="9:18"><expr pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:8">farg</name><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:11">ll</name></name> <operator pos:start="9:13" pos:end="9:13">=</operator> <name pos:start="9:15" pos:end="9:17">arg</name></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="53:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:51">(<expr pos:start="13:9" pos:end="13:50"><call pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:16">unlikely</name><argument_list pos:start="13:17" pos:end="13:50">(<argument pos:start="13:18" pos:end="13:49"><expr pos:start="13:18" pos:end="13:49"><call pos:start="13:18" pos:end="13:49"><name pos:start="13:18" pos:end="13:41">float64_is_signaling_nan</name><argument_list pos:start="13:42" pos:end="13:49">(<argument pos:start="13:43" pos:end="13:48"><expr pos:start="13:43" pos:end="13:48"><name pos:start="13:43" pos:end="13:48"><name pos:start="13:43" pos:end="13:46">farg</name><operator pos:start="13:47" pos:end="13:47">.</operator><name pos:start="13:48" pos:end="13:48">d</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:53" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:64">

        <comment type="block" pos:start="15:9" pos:end="15:29">/* sNaN reciprocal */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:64"><expr pos:start="17:9" pos:end="17:63"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:12">farg</name><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:15">ll</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:63"><name pos:start="17:19" pos:end="17:39">fload_invalid_op_excp</name><argument_list pos:start="17:40" pos:end="17:63">(<argument pos:start="17:41" pos:end="17:62"><expr pos:start="17:41" pos:end="17:62"><name pos:start="17:41" pos:end="17:62">POWERPC_EXCP_FP_VXSNAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="25:5">else if <condition pos:start="19:15" pos:end="19:49">(<expr pos:start="19:16" pos:end="19:48"><call pos:start="19:16" pos:end="19:48"><name pos:start="19:16" pos:end="19:23">unlikely</name><argument_list pos:start="19:24" pos:end="19:48">(<argument pos:start="19:25" pos:end="19:47"><expr pos:start="19:25" pos:end="19:47"><call pos:start="19:25" pos:end="19:47"><name pos:start="19:25" pos:end="19:39">float64_is_zero</name><argument_list pos:start="19:40" pos:end="19:47">(<argument pos:start="19:41" pos:end="19:46"><expr pos:start="19:41" pos:end="19:46"><name pos:start="19:41" pos:end="19:46"><name pos:start="19:41" pos:end="19:44">farg</name><operator pos:start="19:45" pos:end="19:45">.</operator><name pos:start="19:46" pos:end="19:46">d</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:51" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:57">

        <comment type="block" pos:start="21:9" pos:end="21:29">/* Zero reciprocal */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:57"><expr pos:start="23:9" pos:end="23:56"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:12">farg</name><operator pos:start="23:13" pos:end="23:13">.</operator><name pos:start="23:14" pos:end="23:15">ll</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:56"><name pos:start="23:19" pos:end="23:40">float_zero_divide_excp</name><argument_list pos:start="23:41" pos:end="23:56">(<argument pos:start="23:42" pos:end="23:47"><expr pos:start="23:42" pos:end="23:47"><name pos:start="23:42" pos:end="23:47"><name pos:start="23:42" pos:end="23:45">fone</name><operator pos:start="23:46" pos:end="23:46">.</operator><name pos:start="23:47" pos:end="23:47">d</name></name></expr></argument>, <argument pos:start="23:50" pos:end="23:55"><expr pos:start="23:50" pos:end="23:55"><name pos:start="23:50" pos:end="23:55"><name pos:start="23:50" pos:end="23:53">farg</name><operator pos:start="23:54" pos:end="23:54">.</operator><name pos:start="23:55" pos:end="23:55">d</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="29:5">else if <condition pos:start="25:15" pos:end="25:40">(<expr pos:start="25:16" pos:end="25:39"><call pos:start="25:16" pos:end="25:39"><name pos:start="25:16" pos:end="25:21">likely</name><argument_list pos:start="25:22" pos:end="25:39">(<argument pos:start="25:23" pos:end="25:38"><expr pos:start="25:23" pos:end="25:38"><call pos:start="25:23" pos:end="25:38"><name pos:start="25:23" pos:end="25:30">isnormal</name><argument_list pos:start="25:31" pos:end="25:38">(<argument pos:start="25:32" pos:end="25:37"><expr pos:start="25:32" pos:end="25:37"><name pos:start="25:32" pos:end="25:37"><name pos:start="25:32" pos:end="25:35">farg</name><operator pos:start="25:36" pos:end="25:36">.</operator><name pos:start="25:37" pos:end="25:37">d</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:42" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:62">

        <expr_stmt pos:start="27:9" pos:end="27:62"><expr pos:start="27:9" pos:end="27:61"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:12">farg</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:14">d</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:61"><name pos:start="27:18" pos:end="27:28">float64_div</name><argument_list pos:start="27:29" pos:end="27:61">(<argument pos:start="27:30" pos:end="27:35"><expr pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:33">fone</name><operator pos:start="27:34" pos:end="27:34">.</operator><name pos:start="27:35" pos:end="27:35">d</name></name></expr></argument>, <argument pos:start="27:38" pos:end="27:43"><expr pos:start="27:38" pos:end="27:43"><name pos:start="27:38" pos:end="27:43"><name pos:start="27:38" pos:end="27:41">farg</name><operator pos:start="27:42" pos:end="27:42">.</operator><name pos:start="27:43" pos:end="27:43">d</name></name></expr></argument>, <argument pos:start="27:46" pos:end="27:60"><expr pos:start="27:46" pos:end="27:60"><operator pos:start="27:46" pos:end="27:46">&amp;</operator><name pos:start="27:47" pos:end="27:60"><name pos:start="27:47" pos:end="27:49">env</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:60">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="53:5">else <block pos:start="29:12" pos:end="53:5">{<block_content pos:start="31:9" pos:end="51:9">

        <if_stmt pos:start="31:9" pos:end="51:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:45">(<expr pos:start="31:13" pos:end="31:44"><name pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:16">farg</name><operator pos:start="31:17" pos:end="31:17">.</operator><name pos:start="31:18" pos:end="31:19">ll</name></name> <operator pos:start="31:21" pos:end="31:22">==</operator> <literal type="number" pos:start="31:24" pos:end="31:44">0x8000000000000000ULL</literal></expr>)</condition> <block pos:start="31:47" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:44">

            <expr_stmt pos:start="33:13" pos:end="33:44"><expr pos:start="33:13" pos:end="33:43"><name pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:16">farg</name><operator pos:start="33:17" pos:end="33:17">.</operator><name pos:start="33:18" pos:end="33:19">ll</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <literal type="number" pos:start="33:23" pos:end="33:43">0xFFF0000000000000ULL</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="39:9">else if <condition pos:start="35:19" pos:end="35:52">(<expr pos:start="35:20" pos:end="35:51"><name pos:start="35:20" pos:end="35:26"><name pos:start="35:20" pos:end="35:23">farg</name><operator pos:start="35:24" pos:end="35:24">.</operator><name pos:start="35:25" pos:end="35:26">ll</name></name> <operator pos:start="35:28" pos:end="35:29">==</operator> <literal type="number" pos:start="35:31" pos:end="35:51">0x0000000000000000ULL</literal></expr>)</condition> <block pos:start="35:54" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:44">

            <expr_stmt pos:start="37:13" pos:end="37:44"><expr pos:start="37:13" pos:end="37:43"><name pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:16">farg</name><operator pos:start="37:17" pos:end="37:17">.</operator><name pos:start="37:18" pos:end="37:19">ll</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <literal type="number" pos:start="37:23" pos:end="37:43">0x7FF0000000000000ULL</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="43:9">else if <condition pos:start="39:19" pos:end="39:42">(<expr pos:start="39:20" pos:end="39:41"><call pos:start="39:20" pos:end="39:41"><name pos:start="39:20" pos:end="39:33">float64_is_nan</name><argument_list pos:start="39:34" pos:end="39:41">(<argument pos:start="39:35" pos:end="39:40"><expr pos:start="39:35" pos:end="39:40"><name pos:start="39:35" pos:end="39:40"><name pos:start="39:35" pos:end="39:38">farg</name><operator pos:start="39:39" pos:end="39:39">.</operator><name pos:start="39:40" pos:end="39:40">d</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:44" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:44">

            <expr_stmt pos:start="41:13" pos:end="41:44"><expr pos:start="41:13" pos:end="41:43"><name pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:16">farg</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:19">ll</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:43">0x7FF8000000000000ULL</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="43:11" pos:end="47:9">else if <condition pos:start="43:19" pos:end="43:42">(<expr pos:start="43:20" pos:end="43:41"><call pos:start="43:20" pos:end="43:41"><name pos:start="43:20" pos:end="43:33">float64_is_neg</name><argument_list pos:start="43:34" pos:end="43:41">(<argument pos:start="43:35" pos:end="43:40"><expr pos:start="43:35" pos:end="43:40"><name pos:start="43:35" pos:end="43:40"><name pos:start="43:35" pos:end="43:38">farg</name><operator pos:start="43:39" pos:end="43:39">.</operator><name pos:start="43:40" pos:end="43:40">d</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:44" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:44">

            <expr_stmt pos:start="45:13" pos:end="45:44"><expr pos:start="45:13" pos:end="45:43"><name pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:16">farg</name><operator pos:start="45:17" pos:end="45:17">.</operator><name pos:start="45:18" pos:end="45:19">ll</name></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <literal type="number" pos:start="45:23" pos:end="45:43">0x8000000000000000ULL</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="51:9">else <block pos:start="47:16" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:44">

            <expr_stmt pos:start="49:13" pos:end="49:44"><expr pos:start="49:13" pos:end="49:43"><name pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:16">farg</name><operator pos:start="49:17" pos:end="49:17">.</operator><name pos:start="49:18" pos:end="49:19">ll</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <literal type="number" pos:start="49:23" pos:end="49:43">0x0000000000000000ULL</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="55:5" pos:end="55:18">return <expr pos:start="55:12" pos:end="55:17"><name pos:start="55:12" pos:end="55:17"><name pos:start="55:12" pos:end="55:15">farg</name><operator pos:start="55:16" pos:end="55:16">.</operator><name pos:start="55:17" pos:end="55:17">d</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
