<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8464.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:13"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:14">do_migrate</name><parameter_list pos:start="1:15" pos:end="1:68">(<parameter pos:start="1:16" pos:end="1:27"><decl pos:start="1:16" pos:end="1:27"><type pos:start="1:16" pos:end="1:27"><name pos:start="1:16" pos:end="1:22">Monitor</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:27">mon</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:40">QDict</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">qdict</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:67"><decl pos:start="1:50" pos:end="1:67"><type pos:start="1:50" pos:end="1:67"><name pos:start="1:50" pos:end="1:56">QObject</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier><modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:67">ret_data</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="33:13">{<block_content pos:start="3:5" pos:end="33:13">
    <decl_stmt pos:start="3:5" pos:end="3:29"><decl pos:start="3:5" pos:end="3:28"><type pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:18">MigrationState</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:21">s</name> <init pos:start="3:23" pos:end="3:28">= <expr pos:start="3:25" pos:end="3:28"><name pos:start="3:25" pos:end="3:28">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:18"><decl pos:start="4:5" pos:end="4:17"><type pos:start="4:5" pos:end="4:16"><specifier pos:start="4:5" pos:end="4:9">const</specifier> <name pos:start="4:11" pos:end="4:14">char</name> <modifier pos:start="4:16" pos:end="4:16">*</modifier></type><name pos:start="4:17" pos:end="4:17">p</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">detach</name> <init pos:start="5:16" pos:end="5:55">= <expr pos:start="5:18" pos:end="5:55"><call pos:start="5:18" pos:end="5:55"><name pos:start="5:18" pos:end="5:35">qdict_get_try_bool</name><argument_list pos:start="5:36" pos:end="5:55">(<argument pos:start="5:37" pos:end="5:41"><expr pos:start="5:37" pos:end="5:41"><name pos:start="5:37" pos:end="5:41">qdict</name></expr></argument>, <argument pos:start="5:44" pos:end="5:51"><expr pos:start="5:44" pos:end="5:51"><literal type="string" pos:start="5:44" pos:end="5:51">"detach"</literal></expr></argument>, <argument pos:start="5:54" pos:end="5:54"><expr pos:start="5:54" pos:end="5:54"><literal type="number" pos:start="5:54" pos:end="5:54">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:50"><decl pos:start="6:5" pos:end="6:49"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">blk</name> <init pos:start="6:13" pos:end="6:49">= <expr pos:start="6:15" pos:end="6:49"><call pos:start="6:15" pos:end="6:49"><name pos:start="6:15" pos:end="6:32">qdict_get_try_bool</name><argument_list pos:start="6:33" pos:end="6:49">(<argument pos:start="6:34" pos:end="6:38"><expr pos:start="6:34" pos:end="6:38"><name pos:start="6:34" pos:end="6:38">qdict</name></expr></argument>, <argument pos:start="6:41" pos:end="6:45"><expr pos:start="6:41" pos:end="6:45"><literal type="string" pos:start="6:41" pos:end="6:45">"blk"</literal></expr></argument>, <argument pos:start="6:48" pos:end="6:48"><expr pos:start="6:48" pos:end="6:48"><literal type="number" pos:start="6:48" pos:end="6:48">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">inc</name> <init pos:start="7:13" pos:end="7:49">= <expr pos:start="7:15" pos:end="7:49"><call pos:start="7:15" pos:end="7:49"><name pos:start="7:15" pos:end="7:32">qdict_get_try_bool</name><argument_list pos:start="7:33" pos:end="7:49">(<argument pos:start="7:34" pos:end="7:38"><expr pos:start="7:34" pos:end="7:38"><name pos:start="7:34" pos:end="7:38">qdict</name></expr></argument>, <argument pos:start="7:41" pos:end="7:45"><expr pos:start="7:41" pos:end="7:45"><literal type="string" pos:start="7:41" pos:end="7:45">"inc"</literal></expr></argument>, <argument pos:start="7:48" pos:end="7:48"><expr pos:start="7:48" pos:end="7:48"><literal type="number" pos:start="7:48" pos:end="7:48">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:50"><decl pos:start="8:5" pos:end="8:49"><type pos:start="8:5" pos:end="8:16"><specifier pos:start="8:5" pos:end="8:9">const</specifier> <name pos:start="8:11" pos:end="8:14">char</name> <modifier pos:start="8:16" pos:end="8:16">*</modifier></type><name pos:start="8:17" pos:end="8:19">uri</name> <init pos:start="8:21" pos:end="8:49">= <expr pos:start="8:23" pos:end="8:49"><call pos:start="8:23" pos:end="8:49"><name pos:start="8:23" pos:end="8:35">qdict_get_str</name><argument_list pos:start="8:36" pos:end="8:49">(<argument pos:start="8:37" pos:end="8:41"><expr pos:start="8:37" pos:end="8:41"><name pos:start="8:37" pos:end="8:41">qdict</name></expr></argument>, <argument pos:start="8:44" pos:end="8:48"><expr pos:start="8:44" pos:end="8:48"><literal type="string" pos:start="8:44" pos:end="8:48">"uri"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="9:5" pos:end="33:13"><if pos:start="9:5" pos:end="33:13">if <condition pos:start="9:8" pos:end="10:77">(<expr pos:start="9:9" pos:end="10:76"><name pos:start="9:9" pos:end="9:25">current_migration</name> <operator pos:start="9:27" pos:end="9:28">&amp;&amp;</operator>
        <call pos:start="10:9" pos:end="10:56"><name pos:start="10:9" pos:end="10:37"><name pos:start="10:9" pos:end="10:25">current_migration</name><operator pos:start="10:26" pos:end="10:27">-&gt;</operator><name pos:start="10:28" pos:end="10:37">get_status</name></name><argument_list pos:start="10:38" pos:end="10:56">(<argument pos:start="10:39" pos:end="10:55"><expr pos:start="10:39" pos:end="10:55"><name pos:start="10:39" pos:end="10:55">current_migration</name></expr></argument>)</argument_list></call> <operator pos:start="10:58" pos:end="10:59">==</operator> <name pos:start="10:61" pos:end="10:76">MIG_STATE_ACTIVE</name></expr>)</condition> <block pos:start="10:79" pos:end="33:13">{<block_content pos:start="11:9" pos:end="33:13">
        <expr_stmt pos:start="11:9" pos:end="11:63"><expr pos:start="11:9" pos:end="11:62"><call pos:start="11:9" pos:end="11:62"><name pos:start="11:9" pos:end="11:22">monitor_printf</name><argument_list pos:start="11:23" pos:end="11:62">(<argument pos:start="11:24" pos:end="11:26"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:26">mon</name></expr></argument>, <argument pos:start="11:29" pos:end="11:61"><expr pos:start="11:29" pos:end="11:61"><literal type="string" pos:start="11:29" pos:end="11:61">"migration already in progress\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="33:13"><if pos:start="12:5" pos:end="16:5">if <condition pos:start="12:8" pos:end="12:34">(<expr pos:start="12:9" pos:end="12:33"><call pos:start="12:9" pos:end="12:33"><name pos:start="12:9" pos:end="12:16">strstart</name><argument_list pos:start="12:17" pos:end="12:33">(<argument pos:start="12:18" pos:end="12:20"><expr pos:start="12:18" pos:end="12:20"><name pos:start="12:18" pos:end="12:20">uri</name></expr></argument>, <argument pos:start="12:23" pos:end="12:28"><expr pos:start="12:23" pos:end="12:28"><literal type="string" pos:start="12:23" pos:end="12:28">"tcp:"</literal></expr></argument>, <argument pos:start="12:31" pos:end="12:32"><expr pos:start="12:31" pos:end="12:32"><operator pos:start="12:31" pos:end="12:31">&amp;</operator><name pos:start="12:32" pos:end="12:32">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="12:36" pos:end="16:5">{<block_content pos:start="13:9" pos:end="16:0">
        <expr_stmt pos:start="13:9" pos:end="16:0"><expr pos:start="13:9" pos:end="14:50"><name pos:start="13:9" pos:end="13:9">s</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="14:50"><name pos:start="13:13" pos:end="13:40">tcp_start_outgoing_migration</name><argument_list pos:start="13:41" pos:end="14:50">(<argument pos:start="13:42" pos:end="13:44"><expr pos:start="13:42" pos:end="13:44"><name pos:start="13:42" pos:end="13:44">mon</name></expr></argument>, <argument pos:start="13:47" pos:end="13:47"><expr pos:start="13:47" pos:end="13:47"><name pos:start="13:47" pos:end="13:47">p</name></expr></argument>, <argument pos:start="13:50" pos:end="13:61"><expr pos:start="13:50" pos:end="13:61"><name pos:start="13:50" pos:end="13:61">max_throttle</name></expr></argument>, <argument pos:start="13:64" pos:end="13:69"><expr pos:start="13:64" pos:end="13:69"><name pos:start="13:64" pos:end="13:69">detach</name></expr></argument>,
                                         <argument pos:start="14:42" pos:end="14:44"><expr pos:start="14:42" pos:end="14:44"><name pos:start="14:42" pos:end="14:44">blk</name></expr></argument>, <argument pos:start="14:47" pos:end="14:49"><expr pos:start="14:47" pos:end="14:49"><name pos:start="14:47" pos:end="14:49">inc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if pos:start="15:1" pos:end="15:19">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:19"><operator pos:start="15:5" pos:end="15:5">!</operator><call pos:start="15:6" pos:end="15:19"><name pos:start="15:6" pos:end="15:12">defined</name><argument_list pos:start="15:13" pos:end="15:19">(<argument pos:start="15:14" pos:end="15:18"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:18">WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
    </block_content>}</block></if> <if type="elseif" pos:start="16:7" pos:end="19:5">else if <condition pos:start="16:15" pos:end="16:42">(<expr pos:start="16:16" pos:end="16:41"><call pos:start="16:16" pos:end="16:41"><name pos:start="16:16" pos:end="16:23">strstart</name><argument_list pos:start="16:24" pos:end="16:41">(<argument pos:start="16:25" pos:end="16:27"><expr pos:start="16:25" pos:end="16:27"><name pos:start="16:25" pos:end="16:27">uri</name></expr></argument>, <argument pos:start="16:30" pos:end="16:36"><expr pos:start="16:30" pos:end="16:36"><literal type="string" pos:start="16:30" pos:end="16:36">"exec:"</literal></expr></argument>, <argument pos:start="16:39" pos:end="16:40"><expr pos:start="16:39" pos:end="16:40"><operator pos:start="16:39" pos:end="16:39">&amp;</operator><name pos:start="16:40" pos:end="16:40">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="16:44" pos:end="19:5">{<block_content pos:start="17:9" pos:end="18:52">
        <expr_stmt pos:start="17:9" pos:end="18:52"><expr pos:start="17:9" pos:end="18:51"><name pos:start="17:9" pos:end="17:9">s</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="18:51"><name pos:start="17:13" pos:end="17:41">exec_start_outgoing_migration</name><argument_list pos:start="17:42" pos:end="18:51">(<argument pos:start="17:43" pos:end="17:45"><expr pos:start="17:43" pos:end="17:45"><name pos:start="17:43" pos:end="17:45">mon</name></expr></argument>, <argument pos:start="17:48" pos:end="17:48"><expr pos:start="17:48" pos:end="17:48"><name pos:start="17:48" pos:end="17:48">p</name></expr></argument>, <argument pos:start="17:51" pos:end="17:62"><expr pos:start="17:51" pos:end="17:62"><name pos:start="17:51" pos:end="17:62">max_throttle</name></expr></argument>, <argument pos:start="17:65" pos:end="17:70"><expr pos:start="17:65" pos:end="17:70"><name pos:start="17:65" pos:end="17:70">detach</name></expr></argument>,
                                          <argument pos:start="18:43" pos:end="18:45"><expr pos:start="18:43" pos:end="18:45"><name pos:start="18:43" pos:end="18:45">blk</name></expr></argument>, <argument pos:start="18:48" pos:end="18:50"><expr pos:start="18:48" pos:end="18:50"><name pos:start="18:48" pos:end="18:50">inc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="22:5">else if <condition pos:start="19:15" pos:end="19:42">(<expr pos:start="19:16" pos:end="19:41"><call pos:start="19:16" pos:end="19:41"><name pos:start="19:16" pos:end="19:23">strstart</name><argument_list pos:start="19:24" pos:end="19:41">(<argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:27">uri</name></expr></argument>, <argument pos:start="19:30" pos:end="19:36"><expr pos:start="19:30" pos:end="19:36"><literal type="string" pos:start="19:30" pos:end="19:36">"unix:"</literal></expr></argument>, <argument pos:start="19:39" pos:end="19:40"><expr pos:start="19:39" pos:end="19:40"><operator pos:start="19:39" pos:end="19:39">&amp;</operator><name pos:start="19:40" pos:end="19:40">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:44" pos:end="22:5">{<block_content pos:start="20:9" pos:end="21:52">
        <expr_stmt pos:start="20:9" pos:end="21:52"><expr pos:start="20:9" pos:end="21:51"><name pos:start="20:9" pos:end="20:9">s</name> <operator pos:start="20:11" pos:end="20:11">=</operator> <call pos:start="20:13" pos:end="21:51"><name pos:start="20:13" pos:end="20:41">unix_start_outgoing_migration</name><argument_list pos:start="20:42" pos:end="21:51">(<argument pos:start="20:43" pos:end="20:45"><expr pos:start="20:43" pos:end="20:45"><name pos:start="20:43" pos:end="20:45">mon</name></expr></argument>, <argument pos:start="20:48" pos:end="20:48"><expr pos:start="20:48" pos:end="20:48"><name pos:start="20:48" pos:end="20:48">p</name></expr></argument>, <argument pos:start="20:51" pos:end="20:62"><expr pos:start="20:51" pos:end="20:62"><name pos:start="20:51" pos:end="20:62">max_throttle</name></expr></argument>, <argument pos:start="20:65" pos:end="20:70"><expr pos:start="20:65" pos:end="20:70"><name pos:start="20:65" pos:end="20:70">detach</name></expr></argument>,
                                          <argument pos:start="21:43" pos:end="21:45"><expr pos:start="21:43" pos:end="21:45"><name pos:start="21:43" pos:end="21:45">blk</name></expr></argument>, <argument pos:start="21:48" pos:end="21:50"><expr pos:start="21:48" pos:end="21:50"><name pos:start="21:48" pos:end="21:50">inc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="22:7" pos:end="26:5">else if <condition pos:start="22:15" pos:end="22:40">(<expr pos:start="22:16" pos:end="22:39"><call pos:start="22:16" pos:end="22:39"><name pos:start="22:16" pos:end="22:23">strstart</name><argument_list pos:start="22:24" pos:end="22:39">(<argument pos:start="22:25" pos:end="22:27"><expr pos:start="22:25" pos:end="22:27"><name pos:start="22:25" pos:end="22:27">uri</name></expr></argument>, <argument pos:start="22:30" pos:end="22:34"><expr pos:start="22:30" pos:end="22:34"><literal type="string" pos:start="22:30" pos:end="22:34">"fd:"</literal></expr></argument>, <argument pos:start="22:37" pos:end="22:38"><expr pos:start="22:37" pos:end="22:38"><operator pos:start="22:37" pos:end="22:37">&amp;</operator><name pos:start="22:38" pos:end="22:38">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="22:42" pos:end="26:5">{<block_content pos:start="23:9" pos:end="26:0">
        <expr_stmt pos:start="23:9" pos:end="26:0"><expr pos:start="23:9" pos:end="24:49"><name pos:start="23:9" pos:end="23:9">s</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="24:49"><name pos:start="23:13" pos:end="23:39">fd_start_outgoing_migration</name><argument_list pos:start="23:40" pos:end="24:49">(<argument pos:start="23:41" pos:end="23:43"><expr pos:start="23:41" pos:end="23:43"><name pos:start="23:41" pos:end="23:43">mon</name></expr></argument>, <argument pos:start="23:46" pos:end="23:46"><expr pos:start="23:46" pos:end="23:46"><name pos:start="23:46" pos:end="23:46">p</name></expr></argument>, <argument pos:start="23:49" pos:end="23:60"><expr pos:start="23:49" pos:end="23:60"><name pos:start="23:49" pos:end="23:60">max_throttle</name></expr></argument>, <argument pos:start="23:63" pos:end="23:68"><expr pos:start="23:63" pos:end="23:68"><name pos:start="23:63" pos:end="23:68">detach</name></expr></argument>, 
                                        <argument pos:start="24:41" pos:end="24:43"><expr pos:start="24:41" pos:end="24:43"><name pos:start="24:41" pos:end="24:43">blk</name></expr></argument>, <argument pos:start="24:46" pos:end="24:48"><expr pos:start="24:46" pos:end="24:48"><name pos:start="24:46" pos:end="24:48">inc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>
    </block_content>}</block></if> <else pos:start="26:7" pos:end="33:13">else <block pos:start="26:12" pos:end="33:13">{<block_content pos:start="27:9" pos:end="33:13">
        <expr_stmt pos:start="27:9" pos:end="27:69"><expr pos:start="27:9" pos:end="27:68"><call pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:22">monitor_printf</name><argument_list pos:start="27:23" pos:end="27:68">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">mon</name></expr></argument>, <argument pos:start="27:29" pos:end="27:62"><expr pos:start="27:29" pos:end="27:62"><literal type="string" pos:start="27:29" pos:end="27:62">"unknown migration protocol: %s\n"</literal></expr></argument>, <argument pos:start="27:65" pos:end="27:67"><expr pos:start="27:65" pos:end="27:67"><name pos:start="27:65" pos:end="27:67">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="28:5" pos:end="33:13"><if pos:start="28:5" pos:end="33:13">if <condition pos:start="28:8" pos:end="28:18">(<expr pos:start="28:9" pos:end="28:17"><name pos:start="28:9" pos:end="28:9">s</name> <operator pos:start="28:11" pos:end="28:12">==</operator> <name pos:start="28:14" pos:end="28:17">NULL</name></expr>)</condition> <block pos:start="28:20" pos:end="33:13">{<block_content pos:start="29:9" pos:end="33:13">
        <expr_stmt pos:start="29:9" pos:end="29:50"><expr pos:start="29:9" pos:end="29:49"><call pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:22">monitor_printf</name><argument_list pos:start="29:23" pos:end="29:49">(<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">mon</name></expr></argument>, <argument pos:start="29:29" pos:end="29:48"><expr pos:start="29:29" pos:end="29:48"><literal type="string" pos:start="29:29" pos:end="29:48">"migration failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="30:5" pos:end="33:13"><if pos:start="30:5" pos:end="33:13">if <condition pos:start="30:8" pos:end="30:26">(<expr pos:start="30:9" pos:end="30:25"><name pos:start="30:9" pos:end="30:25">current_migration</name></expr>)</condition> <block pos:start="30:28" pos:end="33:13">{<block_content pos:start="31:9" pos:end="33:13">
        <expr_stmt pos:start="31:9" pos:end="31:54"><expr pos:start="31:9" pos:end="31:53"><call pos:start="31:9" pos:end="31:53"><name pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:25">current_migration</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:34">release</name></name><argument_list pos:start="31:35" pos:end="31:53">(<argument pos:start="31:36" pos:end="31:52"><expr pos:start="31:36" pos:end="31:52"><name pos:start="31:36" pos:end="31:52">current_migration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:26"><expr pos:start="32:5" pos:end="32:25"><name pos:start="32:5" pos:end="32:21">current_migration</name> <operator pos:start="32:23" pos:end="32:23">=</operator> <name pos:start="32:25" pos:end="32:25">s</name></expr>;</expr_stmt>
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
