<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5773.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">v410_encode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:13">

    <if_stmt pos:start="5:5" pos:end="11:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:25">(<expr pos:start="5:9" pos:end="5:24"><name pos:start="5:9" pos:end="5:20"><name pos:start="5:9" pos:end="5:13">avctx</name><operator pos:start="5:14" pos:end="5:15">-&gt;</operator><name pos:start="5:16" pos:end="5:20">width</name></name> <operator pos:start="5:22" pos:end="5:22">&amp;</operator> <literal type="number" pos:start="5:24" pos:end="5:24">1</literal></expr>)</condition> <block pos:start="5:27" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:35">

        <expr_stmt pos:start="7:9" pos:end="7:67"><expr pos:start="7:9" pos:end="7:66"><call pos:start="7:9" pos:end="7:66"><name pos:start="7:9" pos:end="7:14">av_log</name><argument_list pos:start="7:15" pos:end="7:66">(<argument pos:start="7:16" pos:end="7:20"><expr pos:start="7:16" pos:end="7:20"><name pos:start="7:16" pos:end="7:20">avctx</name></expr></argument>, <argument pos:start="7:23" pos:end="7:34"><expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="7:37" pos:end="7:65"><expr pos:start="7:37" pos:end="7:65"><literal type="string" pos:start="7:37" pos:end="7:65">"v410 requires even width.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="9:9" pos:end="9:35">return <expr pos:start="9:16" pos:end="9:34"><name pos:start="9:16" pos:end="9:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:9">avctx</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:22">coded_frame</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <call pos:start="15:26" pos:end="15:41"><name pos:start="15:26" pos:end="15:39">av_frame_alloc</name><argument_list pos:start="15:40" pos:end="15:41">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:28">(<expr pos:start="19:9" pos:end="19:27"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:27"><name pos:start="19:10" pos:end="19:14">avctx</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:27">coded_frame</name></name></expr>)</condition> <block pos:start="19:30" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:31">

        <expr_stmt pos:start="21:9" pos:end="21:67"><expr pos:start="21:9" pos:end="21:66"><call pos:start="21:9" pos:end="21:66"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:66">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:65"><expr pos:start="21:37" pos:end="21:65"><literal type="string" pos:start="21:37" pos:end="21:65">"Could not allocate frame.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
