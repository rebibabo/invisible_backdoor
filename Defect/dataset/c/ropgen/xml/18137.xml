<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18137.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">net_tx_pkt_reset</name><parameter_list pos:start="1:22" pos:end="1:43">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:28">struct</name> <name pos:start="1:30" pos:end="1:37">NetTxPkt</name></name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:21">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:62">/* no assert, as reset can be called before tx_pkt_init */</comment>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:12">pkt</name></expr>)</condition> <block pos:start="11:15" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:53"><expr pos:start="19:5" pos:end="19:52"><call pos:start="19:5" pos:end="19:52"><name pos:start="19:5" pos:end="19:10">memset</name><argument_list pos:start="19:11" pos:end="19:52">(<argument pos:start="19:12" pos:end="19:25"><expr pos:start="19:12" pos:end="19:25"><operator pos:start="19:12" pos:end="19:12">&amp;</operator><name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:15">pkt</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:25">virt_hdr</name></name></expr></argument>, <argument pos:start="19:28" pos:end="19:28"><expr pos:start="19:28" pos:end="19:28"><literal type="number" pos:start="19:28" pos:end="19:28">0</literal></expr></argument>, <argument pos:start="19:31" pos:end="19:51"><expr pos:start="19:31" pos:end="19:51"><sizeof pos:start="19:31" pos:end="19:51">sizeof<argument_list pos:start="19:37" pos:end="19:51">(<argument pos:start="19:38" pos:end="19:50"><expr pos:start="19:38" pos:end="19:50"><name pos:start="19:38" pos:end="19:50"><name pos:start="19:38" pos:end="19:40">pkt</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:50">virt_hdr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><call pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:10">g_free</name><argument_list pos:start="23:11" pos:end="23:52">(<argument pos:start="23:12" pos:end="23:51"><expr pos:start="23:12" pos:end="23:51"><name pos:start="23:12" pos:end="23:42"><name pos:start="23:12" pos:end="23:14">pkt</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:19">vec</name><index pos:start="23:20" pos:end="23:42">[<expr pos:start="23:21" pos:end="23:41"><name pos:start="23:21" pos:end="23:41">NET_TX_PKT_L3HDR_FRAG</name></expr>]</index></name><operator pos:start="23:43" pos:end="23:43">.</operator><name pos:start="23:44" pos:end="23:51">iov_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:52"><expr pos:start="25:5" pos:end="25:51"><name pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:7">pkt</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:12">vec</name><index pos:start="25:13" pos:end="25:35">[<expr pos:start="25:14" pos:end="25:34"><name pos:start="25:14" pos:end="25:34">NET_TX_PKT_L3HDR_FRAG</name></expr>]</index></name><operator pos:start="25:36" pos:end="25:36">.</operator><name pos:start="25:37" pos:end="25:44">iov_base</name> <operator pos:start="25:46" pos:end="25:46">=</operator> <name pos:start="25:48" pos:end="25:51">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><call pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:10">assert</name><argument_list pos:start="29:11" pos:end="29:20">(<argument pos:start="29:12" pos:end="29:19"><expr pos:start="29:12" pos:end="29:19"><name pos:start="29:12" pos:end="29:19"><name pos:start="29:12" pos:end="29:14">pkt</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:19">vec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="31:5" pos:end="37:5">for <control pos:start="31:9" pos:end="33:64">(<init pos:start="31:10" pos:end="31:35"><expr pos:start="31:10" pos:end="31:34"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <name pos:start="31:14" pos:end="31:34">NET_TX_PKT_L2HDR_FRAG</name></expr>;</init>

         <condition pos:start="33:10" pos:end="33:59"><expr pos:start="33:10" pos:end="33:58"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">&lt;</operator> <name pos:start="33:14" pos:end="33:31"><name pos:start="33:14" pos:end="33:16">pkt</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:31">payload_frags</name></name> <operator pos:start="33:33" pos:end="33:33">+</operator> <name pos:start="33:35" pos:end="33:58">NET_TX_PKT_PL_START_FRAG</name></expr>;</condition> <incr pos:start="33:61" pos:end="33:63"><expr pos:start="33:61" pos:end="33:63"><name pos:start="33:61" pos:end="33:61">i</name><operator pos:start="33:62" pos:end="33:63">++</operator></expr></incr>)</control> <block pos:start="33:66" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:32">

        <expr_stmt pos:start="35:9" pos:end="35:32"><expr pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:11">pkt</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:16">vec</name><index pos:start="35:17" pos:end="35:19">[<expr pos:start="35:18" pos:end="35:18"><name pos:start="35:18" pos:end="35:18">i</name></expr>]</index></name><operator pos:start="35:20" pos:end="35:20">.</operator><name pos:start="35:21" pos:end="35:27">iov_len</name> <operator pos:start="35:29" pos:end="35:29">=</operator> <literal type="number" pos:start="35:31" pos:end="35:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:7">pkt</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:20">payload_len</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <literal type="number" pos:start="39:24" pos:end="39:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:7">pkt</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:22">payload_frags</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:21"><expr pos:start="45:5" pos:end="45:20"><call pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:10">assert</name><argument_list pos:start="45:11" pos:end="45:20">(<argument pos:start="45:12" pos:end="45:19"><expr pos:start="45:12" pos:end="45:19"><name pos:start="45:12" pos:end="45:19"><name pos:start="45:12" pos:end="45:14">pkt</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:19">raw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="47:5" pos:end="57:5">for <control pos:start="47:9" pos:end="47:40">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:35"><expr pos:start="47:17" pos:end="47:34"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:34"><name pos:start="47:21" pos:end="47:23">pkt</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:34">raw_frags</name></name></expr>;</condition> <incr pos:start="47:37" pos:end="47:39"><expr pos:start="47:37" pos:end="47:39"><name pos:start="47:37" pos:end="47:37">i</name><operator pos:start="47:38" pos:end="47:39">++</operator></expr></incr>)</control> <block pos:start="47:42" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:32">

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><call pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:14">assert</name><argument_list pos:start="49:15" pos:end="49:36">(<argument pos:start="49:16" pos:end="49:35"><expr pos:start="49:16" pos:end="49:35"><name pos:start="49:16" pos:end="49:26"><name pos:start="49:16" pos:end="49:18">pkt</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:23">raw</name><index pos:start="49:24" pos:end="49:26">[<expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">i</name></expr>]</index></name><operator pos:start="49:27" pos:end="49:27">.</operator><name pos:start="49:28" pos:end="49:35">iov_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="53:62"><expr pos:start="51:9" pos:end="53:61"><call pos:start="51:9" pos:end="53:61"><name pos:start="51:9" pos:end="51:33">cpu_physical_memory_unmap</name><argument_list pos:start="51:34" pos:end="53:61">(<argument pos:start="51:35" pos:end="51:54"><expr pos:start="51:35" pos:end="51:54"><name pos:start="51:35" pos:end="51:45"><name pos:start="51:35" pos:end="51:37">pkt</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:42">raw</name><index pos:start="51:43" pos:end="51:45">[<expr pos:start="51:44" pos:end="51:44"><name pos:start="51:44" pos:end="51:44">i</name></expr>]</index></name><operator pos:start="51:46" pos:end="51:46">.</operator><name pos:start="51:47" pos:end="51:54">iov_base</name></expr></argument>, <argument pos:start="51:57" pos:end="51:75"><expr pos:start="51:57" pos:end="51:75"><name pos:start="51:57" pos:end="51:67"><name pos:start="51:57" pos:end="51:59">pkt</name><operator pos:start="51:60" pos:end="51:61">-&gt;</operator><name pos:start="51:62" pos:end="51:64">raw</name><index pos:start="51:65" pos:end="51:67">[<expr pos:start="51:66" pos:end="51:66"><name pos:start="51:66" pos:end="51:66">i</name></expr>]</index></name><operator pos:start="51:68" pos:end="51:68">.</operator><name pos:start="51:69" pos:end="51:75">iov_len</name></expr></argument>,

                                  <argument pos:start="53:35" pos:end="53:39"><expr pos:start="53:35" pos:end="53:39"><name pos:start="53:35" pos:end="53:39">false</name></expr></argument>, <argument pos:start="53:42" pos:end="53:60"><expr pos:start="53:42" pos:end="53:60"><name pos:start="53:42" pos:end="53:52"><name pos:start="53:42" pos:end="53:44">pkt</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:49">raw</name><index pos:start="53:50" pos:end="53:52">[<expr pos:start="53:51" pos:end="53:51"><name pos:start="53:51" pos:end="53:51">i</name></expr>]</index></name><operator pos:start="53:53" pos:end="53:53">.</operator><name pos:start="53:54" pos:end="53:60">iov_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:11">pkt</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:16">raw</name><index pos:start="55:17" pos:end="55:19">[<expr pos:start="55:18" pos:end="55:18"><name pos:start="55:18" pos:end="55:18">i</name></expr>]</index></name><operator pos:start="55:20" pos:end="55:20">.</operator><name pos:start="55:21" pos:end="55:27">iov_len</name> <operator pos:start="55:29" pos:end="55:29">=</operator> <literal type="number" pos:start="55:31" pos:end="55:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:7">pkt</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:18">raw_frags</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:7">pkt</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:16">hdr_len</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <literal type="number" pos:start="63:20" pos:end="63:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:25"><expr pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:7">pkt</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:20">packet_type</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:21"><expr pos:start="67:5" pos:end="67:20"><name pos:start="67:5" pos:end="67:16"><name pos:start="67:5" pos:end="67:7">pkt</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:16">l4proto</name></name> <operator pos:start="67:18" pos:end="67:18">=</operator> <literal type="number" pos:start="67:20" pos:end="67:20">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
