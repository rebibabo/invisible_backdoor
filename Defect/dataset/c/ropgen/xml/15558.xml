<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15558.c" pos:tabs="8"><function pos:start="1:1" pos:end="257:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">decode_rr_divide</name><parameter_list pos:start="1:29" pos:end="1:69">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:44">CPUTriCoreState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">env</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:68"><decl pos:start="1:52" pos:end="1:68"><type pos:start="1:52" pos:end="1:68"><name pos:start="1:52" pos:end="1:63">DisasContext</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="257:1">{<block_content pos:start="5:5" pos:end="255:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">op2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">r1</name></decl>, <decl pos:start="7:13" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:14">r2</name></decl>, <decl pos:start="7:17" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:18">r3</name></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">TCGv</name></type> <name pos:start="11:10" pos:end="11:13">temp</name></decl>, <decl pos:start="11:16" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:8"/><name pos:start="11:16" pos:end="11:20">temp2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:7">op2</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:37"><name pos:start="15:11" pos:end="15:24">MASK_OP_RR_OP2</name><argument_list pos:start="15:25" pos:end="15:37">(<argument pos:start="15:26" pos:end="15:36"><expr pos:start="15:26" pos:end="15:36"><name pos:start="15:26" pos:end="15:36"><name pos:start="15:26" pos:end="15:28">ctx</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:36">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:6">r3</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:34"><name pos:start="17:10" pos:end="17:21">MASK_OP_RR_D</name><argument_list pos:start="17:22" pos:end="17:34">(<argument pos:start="17:23" pos:end="17:33"><expr pos:start="17:23" pos:end="17:33"><name pos:start="17:23" pos:end="17:33"><name pos:start="17:23" pos:end="17:25">ctx</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:33">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:6">r2</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:35"><name pos:start="19:10" pos:end="19:22">MASK_OP_RR_S2</name><argument_list pos:start="19:23" pos:end="19:35">(<argument pos:start="19:24" pos:end="19:34"><expr pos:start="19:24" pos:end="19:34"><name pos:start="19:24" pos:end="19:34"><name pos:start="19:24" pos:end="19:26">ctx</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:34">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:6">r1</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:35"><name pos:start="21:10" pos:end="21:22">MASK_OP_RR_S1</name><argument_list pos:start="21:23" pos:end="21:35">(<argument pos:start="21:24" pos:end="21:34"><expr pos:start="21:24" pos:end="21:34"><name pos:start="21:24" pos:end="21:34"><name pos:start="21:24" pos:end="21:26">ctx</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:34">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="25:5" pos:end="255:5">switch <condition pos:start="25:12" pos:end="25:16">(<expr pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">op2</name></expr>)</condition> <block pos:start="25:18" pos:end="255:5">{<block_content pos:start="27:5" pos:end="253:14">

    <case pos:start="27:5" pos:end="27:27">case <expr pos:start="27:10" pos:end="27:26"><name pos:start="27:10" pos:end="27:26">OPC2_32_RR_BMERGE</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:71"><expr pos:start="29:9" pos:end="29:70"><call pos:start="29:9" pos:end="29:70"><name pos:start="29:9" pos:end="29:25">gen_helper_bmerge</name><argument_list pos:start="29:26" pos:end="29:70">(<argument pos:start="29:27" pos:end="29:39"><expr pos:start="29:27" pos:end="29:39"><name pos:start="29:27" pos:end="29:39"><name pos:start="29:27" pos:end="29:35">cpu_gpr_d</name><index pos:start="29:36" pos:end="29:39">[<expr pos:start="29:37" pos:end="29:38"><name pos:start="29:37" pos:end="29:38">r3</name></expr>]</index></name></expr></argument>, <argument pos:start="29:42" pos:end="29:54"><expr pos:start="29:42" pos:end="29:54"><name pos:start="29:42" pos:end="29:54"><name pos:start="29:42" pos:end="29:50">cpu_gpr_d</name><index pos:start="29:51" pos:end="29:54">[<expr pos:start="29:52" pos:end="29:53"><name pos:start="29:52" pos:end="29:53">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="29:57" pos:end="29:69"><expr pos:start="29:57" pos:end="29:69"><name pos:start="29:57" pos:end="29:69"><name pos:start="29:57" pos:end="29:65">cpu_gpr_d</name><index pos:start="29:66" pos:end="29:69">[<expr pos:start="29:67" pos:end="29:68"><name pos:start="29:67" pos:end="29:68">r2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:27">case <expr pos:start="33:10" pos:end="33:26"><name pos:start="33:10" pos:end="33:26">OPC2_32_RR_BSPLIT</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:66"><expr pos:start="35:9" pos:end="35:65"><call pos:start="35:9" pos:end="35:65"><name pos:start="35:9" pos:end="35:18">gen_bsplit</name><argument_list pos:start="35:19" pos:end="35:65">(<argument pos:start="35:20" pos:end="35:32"><expr pos:start="35:20" pos:end="35:32"><name pos:start="35:20" pos:end="35:32"><name pos:start="35:20" pos:end="35:28">cpu_gpr_d</name><index pos:start="35:29" pos:end="35:32">[<expr pos:start="35:30" pos:end="35:31"><name pos:start="35:30" pos:end="35:31">r3</name></expr>]</index></name></expr></argument>, <argument pos:start="35:35" pos:end="35:49"><expr pos:start="35:35" pos:end="35:49"><name pos:start="35:35" pos:end="35:49"><name pos:start="35:35" pos:end="35:43">cpu_gpr_d</name><index pos:start="35:44" pos:end="35:49">[<expr pos:start="35:45" pos:end="35:48"><name pos:start="35:45" pos:end="35:46">r3</name><operator pos:start="35:47" pos:end="35:47">+</operator><literal type="number" pos:start="35:48" pos:end="35:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="35:52" pos:end="35:64"><expr pos:start="35:52" pos:end="35:64"><name pos:start="35:52" pos:end="35:64"><name pos:start="35:52" pos:end="35:60">cpu_gpr_d</name><index pos:start="35:61" pos:end="35:64">[<expr pos:start="35:62" pos:end="35:63"><name pos:start="35:62" pos:end="35:63">r1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:29">case <expr pos:start="39:10" pos:end="39:28"><name pos:start="39:10" pos:end="39:28">OPC2_32_RR_DVINIT_B</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="43:36"><expr pos:start="41:9" pos:end="43:35"><call pos:start="41:9" pos:end="43:35"><name pos:start="41:9" pos:end="41:20">gen_dvinit_b</name><argument_list pos:start="41:21" pos:end="43:35">(<argument pos:start="41:22" pos:end="41:24"><expr pos:start="41:22" pos:end="41:24"><name pos:start="41:22" pos:end="41:24">env</name></expr></argument>, <argument pos:start="41:27" pos:end="41:39"><expr pos:start="41:27" pos:end="41:39"><name pos:start="41:27" pos:end="41:39"><name pos:start="41:27" pos:end="41:35">cpu_gpr_d</name><index pos:start="41:36" pos:end="41:39">[<expr pos:start="41:37" pos:end="41:38"><name pos:start="41:37" pos:end="41:38">r3</name></expr>]</index></name></expr></argument>, <argument pos:start="41:42" pos:end="41:56"><expr pos:start="41:42" pos:end="41:56"><name pos:start="41:42" pos:end="41:56"><name pos:start="41:42" pos:end="41:50">cpu_gpr_d</name><index pos:start="41:51" pos:end="41:56">[<expr pos:start="41:52" pos:end="41:55"><name pos:start="41:52" pos:end="41:53">r3</name><operator pos:start="41:54" pos:end="41:54">+</operator><literal type="number" pos:start="41:55" pos:end="41:55">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:59" pos:end="41:71"><expr pos:start="41:59" pos:end="41:71"><name pos:start="41:59" pos:end="41:71"><name pos:start="41:59" pos:end="41:67">cpu_gpr_d</name><index pos:start="41:68" pos:end="41:71">[<expr pos:start="41:69" pos:end="41:70"><name pos:start="41:69" pos:end="41:70">r1</name></expr>]</index></name></expr></argument>,

                     <argument pos:start="43:22" pos:end="43:34"><expr pos:start="43:22" pos:end="43:34"><name pos:start="43:22" pos:end="43:34"><name pos:start="43:22" pos:end="43:30">cpu_gpr_d</name><index pos:start="43:31" pos:end="43:34">[<expr pos:start="43:32" pos:end="43:33"><name pos:start="43:32" pos:end="43:33">r2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:30">case <expr pos:start="47:10" pos:end="47:29"><name pos:start="47:10" pos:end="47:29">OPC2_32_RR_DVINIT_BU</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:30"><expr pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:12">temp</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:29"><name pos:start="49:16" pos:end="49:27">tcg_temp_new</name><argument_list pos:start="49:28" pos:end="49:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:13">temp2</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="51:30"><name pos:start="51:17" pos:end="51:28">tcg_temp_new</name><argument_list pos:start="51:29" pos:end="51:30">()</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="53:9" pos:end="53:22">/* reset av */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><call pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:23">tcg_gen_movi_tl</name><argument_list pos:start="55:24" pos:end="55:38">(<argument pos:start="55:25" pos:end="55:34"><expr pos:start="55:25" pos:end="55:34"><name pos:start="55:25" pos:end="55:34">cpu_PSW_AV</name></expr></argument>, <argument pos:start="55:37" pos:end="55:37"><expr pos:start="55:37" pos:end="55:37"><literal type="number" pos:start="55:37" pos:end="55:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="83:9"><if pos:start="57:9" pos:end="77:9">if <condition pos:start="57:12" pos:end="57:55">(<expr pos:start="57:13" pos:end="57:54"><operator pos:start="57:13" pos:end="57:13">!</operator><call pos:start="57:14" pos:end="57:54"><name pos:start="57:14" pos:end="57:28">tricore_feature</name><argument_list pos:start="57:29" pos:end="57:54">(<argument pos:start="57:30" pos:end="57:32"><expr pos:start="57:30" pos:end="57:32"><name pos:start="57:30" pos:end="57:32">env</name></expr></argument>, <argument pos:start="57:35" pos:end="57:53"><expr pos:start="57:35" pos:end="57:53"><name pos:start="57:35" pos:end="57:53">TRICORE_FEATURE_131</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:57" pos:end="77:9">{<block_content pos:start="61:13" pos:end="75:68">

            <comment type="block" pos:start="59:13" pos:end="59:57">/* overflow = (abs(D[r3+1]) &gt;= abs(D[r2])) */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:50"><expr pos:start="61:13" pos:end="61:49"><call pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:26">tcg_gen_neg_tl</name><argument_list pos:start="61:27" pos:end="61:49">(<argument pos:start="61:28" pos:end="61:31"><expr pos:start="61:28" pos:end="61:31"><name pos:start="61:28" pos:end="61:31">temp</name></expr></argument>, <argument pos:start="61:34" pos:end="61:48"><expr pos:start="61:34" pos:end="61:48"><name pos:start="61:34" pos:end="61:48"><name pos:start="61:34" pos:end="61:42">cpu_gpr_d</name><index pos:start="61:43" pos:end="61:48">[<expr pos:start="61:44" pos:end="61:47"><name pos:start="61:44" pos:end="61:45">r3</name><operator pos:start="61:46" pos:end="61:46">+</operator><literal type="number" pos:start="61:47" pos:end="61:47">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="63:13" pos:end="63:53">/* use cpu_PSW_AV to compare against 0 */</comment>

            <expr_stmt pos:start="65:13" pos:end="67:54"><expr pos:start="65:13" pos:end="67:53"><call pos:start="65:13" pos:end="67:53"><name pos:start="65:13" pos:end="65:30">tcg_gen_movcond_tl</name><argument_list pos:start="65:31" pos:end="67:53">(<argument pos:start="65:32" pos:end="65:42"><expr pos:start="65:32" pos:end="65:42"><name pos:start="65:32" pos:end="65:42">TCG_COND_LT</name></expr></argument>, <argument pos:start="65:45" pos:end="65:48"><expr pos:start="65:45" pos:end="65:48"><name pos:start="65:45" pos:end="65:48">temp</name></expr></argument>, <argument pos:start="65:51" pos:end="65:65"><expr pos:start="65:51" pos:end="65:65"><name pos:start="65:51" pos:end="65:65"><name pos:start="65:51" pos:end="65:59">cpu_gpr_d</name><index pos:start="65:60" pos:end="65:65">[<expr pos:start="65:61" pos:end="65:64"><name pos:start="65:61" pos:end="65:62">r3</name><operator pos:start="65:63" pos:end="65:63">+</operator><literal type="number" pos:start="65:64" pos:end="65:64">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:68" pos:end="65:77"><expr pos:start="65:68" pos:end="65:77"><name pos:start="65:68" pos:end="65:77">cpu_PSW_AV</name></expr></argument>,

                               <argument pos:start="67:32" pos:end="67:35"><expr pos:start="67:32" pos:end="67:35"><name pos:start="67:32" pos:end="67:35">temp</name></expr></argument>, <argument pos:start="67:38" pos:end="67:52"><expr pos:start="67:38" pos:end="67:52"><name pos:start="67:38" pos:end="67:52"><name pos:start="67:38" pos:end="67:46">cpu_gpr_d</name><index pos:start="67:47" pos:end="67:52">[<expr pos:start="67:48" pos:end="67:51"><name pos:start="67:48" pos:end="67:49">r3</name><operator pos:start="67:50" pos:end="67:50">+</operator><literal type="number" pos:start="67:51" pos:end="67:51">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:49"><expr pos:start="69:13" pos:end="69:48"><call pos:start="69:13" pos:end="69:48"><name pos:start="69:13" pos:end="69:26">tcg_gen_neg_tl</name><argument_list pos:start="69:27" pos:end="69:48">(<argument pos:start="69:28" pos:end="69:32"><expr pos:start="69:28" pos:end="69:32"><name pos:start="69:28" pos:end="69:32">temp2</name></expr></argument>, <argument pos:start="69:35" pos:end="69:47"><expr pos:start="69:35" pos:end="69:47"><name pos:start="69:35" pos:end="69:47"><name pos:start="69:35" pos:end="69:43">cpu_gpr_d</name><index pos:start="69:44" pos:end="69:47">[<expr pos:start="69:45" pos:end="69:46"><name pos:start="69:45" pos:end="69:46">r2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="73:53"><expr pos:start="71:13" pos:end="73:52"><call pos:start="71:13" pos:end="73:52"><name pos:start="71:13" pos:end="71:30">tcg_gen_movcond_tl</name><argument_list pos:start="71:31" pos:end="73:52">(<argument pos:start="71:32" pos:end="71:42"><expr pos:start="71:32" pos:end="71:42"><name pos:start="71:32" pos:end="71:42">TCG_COND_LT</name></expr></argument>, <argument pos:start="71:45" pos:end="71:49"><expr pos:start="71:45" pos:end="71:49"><name pos:start="71:45" pos:end="71:49">temp2</name></expr></argument>, <argument pos:start="71:52" pos:end="71:64"><expr pos:start="71:52" pos:end="71:64"><name pos:start="71:52" pos:end="71:64"><name pos:start="71:52" pos:end="71:60">cpu_gpr_d</name><index pos:start="71:61" pos:end="71:64">[<expr pos:start="71:62" pos:end="71:63"><name pos:start="71:62" pos:end="71:63">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="71:67" pos:end="71:76"><expr pos:start="71:67" pos:end="71:76"><name pos:start="71:67" pos:end="71:76">cpu_PSW_AV</name></expr></argument>,

                               <argument pos:start="73:32" pos:end="73:36"><expr pos:start="73:32" pos:end="73:36"><name pos:start="73:32" pos:end="73:36">temp2</name></expr></argument>, <argument pos:start="73:39" pos:end="73:51"><expr pos:start="73:39" pos:end="73:51"><name pos:start="73:39" pos:end="73:51"><name pos:start="73:39" pos:end="73:47">cpu_gpr_d</name><index pos:start="73:48" pos:end="73:51">[<expr pos:start="73:49" pos:end="73:50"><name pos:start="73:49" pos:end="73:50">r2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:68"><expr pos:start="75:13" pos:end="75:67"><call pos:start="75:13" pos:end="75:67"><name pos:start="75:13" pos:end="75:30">tcg_gen_setcond_tl</name><argument_list pos:start="75:31" pos:end="75:67">(<argument pos:start="75:32" pos:end="75:42"><expr pos:start="75:32" pos:end="75:42"><name pos:start="75:32" pos:end="75:42">TCG_COND_GE</name></expr></argument>, <argument pos:start="75:45" pos:end="75:53"><expr pos:start="75:45" pos:end="75:53"><name pos:start="75:45" pos:end="75:53">cpu_PSW_V</name></expr></argument>, <argument pos:start="75:56" pos:end="75:59"><expr pos:start="75:56" pos:end="75:59"><name pos:start="75:56" pos:end="75:59">temp</name></expr></argument>, <argument pos:start="75:62" pos:end="75:66"><expr pos:start="75:62" pos:end="75:66"><name pos:start="75:62" pos:end="75:66">temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="83:9">else <block pos:start="77:16" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:74">

            <comment type="block" pos:start="79:13" pos:end="79:40">/* overflow = (D[b] == 0) */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:74"><expr pos:start="81:13" pos:end="81:73"><call pos:start="81:13" pos:end="81:73"><name pos:start="81:13" pos:end="81:31">tcg_gen_setcondi_tl</name><argument_list pos:start="81:32" pos:end="81:73">(<argument pos:start="81:33" pos:end="81:43"><expr pos:start="81:33" pos:end="81:43"><name pos:start="81:33" pos:end="81:43">TCG_COND_EQ</name></expr></argument>, <argument pos:start="81:46" pos:end="81:54"><expr pos:start="81:46" pos:end="81:54"><name pos:start="81:46" pos:end="81:54">cpu_PSW_V</name></expr></argument>, <argument pos:start="81:57" pos:end="81:69"><expr pos:start="81:57" pos:end="81:69"><name pos:start="81:57" pos:end="81:69"><name pos:start="81:57" pos:end="81:65">cpu_gpr_d</name><index pos:start="81:66" pos:end="81:69">[<expr pos:start="81:67" pos:end="81:68"><name pos:start="81:67" pos:end="81:68">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="81:72" pos:end="81:72"><expr pos:start="81:72" pos:end="81:72"><literal type="number" pos:start="81:72" pos:end="81:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:50"><expr pos:start="85:9" pos:end="85:49"><call pos:start="85:9" pos:end="85:49"><name pos:start="85:9" pos:end="85:23">tcg_gen_shli_tl</name><argument_list pos:start="85:24" pos:end="85:49">(<argument pos:start="85:25" pos:end="85:33"><expr pos:start="85:25" pos:end="85:33"><name pos:start="85:25" pos:end="85:33">cpu_PSW_V</name></expr></argument>, <argument pos:start="85:36" pos:end="85:44"><expr pos:start="85:36" pos:end="85:44"><name pos:start="85:36" pos:end="85:44">cpu_PSW_V</name></expr></argument>, <argument pos:start="85:47" pos:end="85:48"><expr pos:start="85:47" pos:end="85:48"><literal type="number" pos:start="85:47" pos:end="85:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="87:9" pos:end="87:16">/* sv */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:57"><expr pos:start="89:9" pos:end="89:56"><call pos:start="89:9" pos:end="89:56"><name pos:start="89:9" pos:end="89:21">tcg_gen_or_tl</name><argument_list pos:start="89:22" pos:end="89:56">(<argument pos:start="89:23" pos:end="89:32"><expr pos:start="89:23" pos:end="89:32"><name pos:start="89:23" pos:end="89:32">cpu_PSW_SV</name></expr></argument>, <argument pos:start="89:35" pos:end="89:44"><expr pos:start="89:35" pos:end="89:44"><name pos:start="89:35" pos:end="89:44">cpu_PSW_SV</name></expr></argument>, <argument pos:start="89:47" pos:end="89:55"><expr pos:start="89:47" pos:end="89:55"><name pos:start="89:47" pos:end="89:55">cpu_PSW_V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="91:9" pos:end="91:26">/* write result */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:48"><expr pos:start="93:9" pos:end="93:47"><call pos:start="93:9" pos:end="93:47"><name pos:start="93:9" pos:end="93:23">tcg_gen_shri_tl</name><argument_list pos:start="93:24" pos:end="93:47">(<argument pos:start="93:25" pos:end="93:28"><expr pos:start="93:25" pos:end="93:28"><name pos:start="93:25" pos:end="93:28">temp</name></expr></argument>, <argument pos:start="93:31" pos:end="93:43"><expr pos:start="93:31" pos:end="93:43"><name pos:start="93:31" pos:end="93:43"><name pos:start="93:31" pos:end="93:39">cpu_gpr_d</name><index pos:start="93:40" pos:end="93:43">[<expr pos:start="93:41" pos:end="93:42"><name pos:start="93:41" pos:end="93:42">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="93:46" pos:end="93:46"><expr pos:start="93:46" pos:end="93:46"><literal type="number" pos:start="93:46" pos:end="93:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:58"><expr pos:start="95:9" pos:end="95:57"><call pos:start="95:9" pos:end="95:57"><name pos:start="95:9" pos:end="95:23">tcg_gen_shli_tl</name><argument_list pos:start="95:24" pos:end="95:57">(<argument pos:start="95:25" pos:end="95:37"><expr pos:start="95:25" pos:end="95:37"><name pos:start="95:25" pos:end="95:37"><name pos:start="95:25" pos:end="95:33">cpu_gpr_d</name><index pos:start="95:34" pos:end="95:37">[<expr pos:start="95:35" pos:end="95:36"><name pos:start="95:35" pos:end="95:36">r3</name></expr>]</index></name></expr></argument>, <argument pos:start="95:40" pos:end="95:52"><expr pos:start="95:40" pos:end="95:52"><name pos:start="95:40" pos:end="95:52"><name pos:start="95:40" pos:end="95:48">cpu_gpr_d</name><index pos:start="95:49" pos:end="95:52">[<expr pos:start="95:50" pos:end="95:51"><name pos:start="95:50" pos:end="95:51">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="95:55" pos:end="95:56"><expr pos:start="95:55" pos:end="95:56"><literal type="number" pos:start="95:55" pos:end="95:56">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:46"><expr pos:start="97:9" pos:end="97:45"><call pos:start="97:9" pos:end="97:45"><name pos:start="97:9" pos:end="97:22">tcg_gen_mov_tl</name><argument_list pos:start="97:23" pos:end="97:45">(<argument pos:start="97:24" pos:end="97:38"><expr pos:start="97:24" pos:end="97:38"><name pos:start="97:24" pos:end="97:38"><name pos:start="97:24" pos:end="97:32">cpu_gpr_d</name><index pos:start="97:33" pos:end="97:38">[<expr pos:start="97:34" pos:end="97:37"><name pos:start="97:34" pos:end="97:35">r3</name><operator pos:start="97:36" pos:end="97:36">+</operator><literal type="number" pos:start="97:37" pos:end="97:37">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="97:41" pos:end="97:44"><expr pos:start="97:41" pos:end="97:44"><name pos:start="97:41" pos:end="97:44">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:28"><expr pos:start="101:9" pos:end="101:27"><call pos:start="101:9" pos:end="101:27"><name pos:start="101:9" pos:end="101:21">tcg_temp_free</name><argument_list pos:start="101:22" pos:end="101:27">(<argument pos:start="101:23" pos:end="101:26"><expr pos:start="101:23" pos:end="101:26"><name pos:start="101:23" pos:end="101:26">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:29"><expr pos:start="103:9" pos:end="103:28"><call pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:21">tcg_temp_free</name><argument_list pos:start="103:22" pos:end="103:28">(<argument pos:start="103:23" pos:end="103:27"><expr pos:start="103:23" pos:end="103:27"><name pos:start="103:23" pos:end="103:27">temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:29">case <expr pos:start="107:10" pos:end="107:28"><name pos:start="107:10" pos:end="107:28">OPC2_32_RR_DVINIT_H</name></expr>:</case>

        <expr_stmt pos:start="109:9" pos:end="111:36"><expr pos:start="109:9" pos:end="111:35"><call pos:start="109:9" pos:end="111:35"><name pos:start="109:9" pos:end="109:20">gen_dvinit_h</name><argument_list pos:start="109:21" pos:end="111:35">(<argument pos:start="109:22" pos:end="109:24"><expr pos:start="109:22" pos:end="109:24"><name pos:start="109:22" pos:end="109:24">env</name></expr></argument>, <argument pos:start="109:27" pos:end="109:39"><expr pos:start="109:27" pos:end="109:39"><name pos:start="109:27" pos:end="109:39"><name pos:start="109:27" pos:end="109:35">cpu_gpr_d</name><index pos:start="109:36" pos:end="109:39">[<expr pos:start="109:37" pos:end="109:38"><name pos:start="109:37" pos:end="109:38">r3</name></expr>]</index></name></expr></argument>, <argument pos:start="109:42" pos:end="109:56"><expr pos:start="109:42" pos:end="109:56"><name pos:start="109:42" pos:end="109:56"><name pos:start="109:42" pos:end="109:50">cpu_gpr_d</name><index pos:start="109:51" pos:end="109:56">[<expr pos:start="109:52" pos:end="109:55"><name pos:start="109:52" pos:end="109:53">r3</name><operator pos:start="109:54" pos:end="109:54">+</operator><literal type="number" pos:start="109:55" pos:end="109:55">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="109:59" pos:end="109:71"><expr pos:start="109:59" pos:end="109:71"><name pos:start="109:59" pos:end="109:71"><name pos:start="109:59" pos:end="109:67">cpu_gpr_d</name><index pos:start="109:68" pos:end="109:71">[<expr pos:start="109:69" pos:end="109:70"><name pos:start="109:69" pos:end="109:70">r1</name></expr>]</index></name></expr></argument>,

                     <argument pos:start="111:22" pos:end="111:34"><expr pos:start="111:22" pos:end="111:34"><name pos:start="111:22" pos:end="111:34"><name pos:start="111:22" pos:end="111:30">cpu_gpr_d</name><index pos:start="111:31" pos:end="111:34">[<expr pos:start="111:32" pos:end="111:33"><name pos:start="111:32" pos:end="111:33">r2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:30">case <expr pos:start="115:10" pos:end="115:29"><name pos:start="115:10" pos:end="115:29">OPC2_32_RR_DVINIT_HU</name></expr>:</case>

        <expr_stmt pos:start="117:9" pos:end="117:30"><expr pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:12">temp</name> <operator pos:start="117:14" pos:end="117:14">=</operator> <call pos:start="117:16" pos:end="117:29"><name pos:start="117:16" pos:end="117:27">tcg_temp_new</name><argument_list pos:start="117:28" pos:end="117:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:31"><expr pos:start="119:9" pos:end="119:30"><name pos:start="119:9" pos:end="119:13">temp2</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <call pos:start="119:17" pos:end="119:30"><name pos:start="119:17" pos:end="119:28">tcg_temp_new</name><argument_list pos:start="119:29" pos:end="119:30">()</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="121:9" pos:end="121:22">/* reset av */</comment>

        <expr_stmt pos:start="123:9" pos:end="123:39"><expr pos:start="123:9" pos:end="123:38"><call pos:start="123:9" pos:end="123:38"><name pos:start="123:9" pos:end="123:23">tcg_gen_movi_tl</name><argument_list pos:start="123:24" pos:end="123:38">(<argument pos:start="123:25" pos:end="123:34"><expr pos:start="123:25" pos:end="123:34"><name pos:start="123:25" pos:end="123:34">cpu_PSW_AV</name></expr></argument>, <argument pos:start="123:37" pos:end="123:37"><expr pos:start="123:37" pos:end="123:37"><literal type="number" pos:start="123:37" pos:end="123:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="151:9"><if pos:start="125:9" pos:end="145:9">if <condition pos:start="125:12" pos:end="125:55">(<expr pos:start="125:13" pos:end="125:54"><operator pos:start="125:13" pos:end="125:13">!</operator><call pos:start="125:14" pos:end="125:54"><name pos:start="125:14" pos:end="125:28">tricore_feature</name><argument_list pos:start="125:29" pos:end="125:54">(<argument pos:start="125:30" pos:end="125:32"><expr pos:start="125:30" pos:end="125:32"><name pos:start="125:30" pos:end="125:32">env</name></expr></argument>, <argument pos:start="125:35" pos:end="125:53"><expr pos:start="125:35" pos:end="125:53"><name pos:start="125:35" pos:end="125:53">TRICORE_FEATURE_131</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:57" pos:end="145:9">{<block_content pos:start="129:13" pos:end="143:68">

            <comment type="block" pos:start="127:13" pos:end="127:57">/* overflow = (abs(D[r3+1]) &gt;= abs(D[r2])) */</comment>

            <expr_stmt pos:start="129:13" pos:end="129:50"><expr pos:start="129:13" pos:end="129:49"><call pos:start="129:13" pos:end="129:49"><name pos:start="129:13" pos:end="129:26">tcg_gen_neg_tl</name><argument_list pos:start="129:27" pos:end="129:49">(<argument pos:start="129:28" pos:end="129:31"><expr pos:start="129:28" pos:end="129:31"><name pos:start="129:28" pos:end="129:31">temp</name></expr></argument>, <argument pos:start="129:34" pos:end="129:48"><expr pos:start="129:34" pos:end="129:48"><name pos:start="129:34" pos:end="129:48"><name pos:start="129:34" pos:end="129:42">cpu_gpr_d</name><index pos:start="129:43" pos:end="129:48">[<expr pos:start="129:44" pos:end="129:47"><name pos:start="129:44" pos:end="129:45">r3</name><operator pos:start="129:46" pos:end="129:46">+</operator><literal type="number" pos:start="129:47" pos:end="129:47">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="131:13" pos:end="131:53">/* use cpu_PSW_AV to compare against 0 */</comment>

            <expr_stmt pos:start="133:13" pos:end="135:54"><expr pos:start="133:13" pos:end="135:53"><call pos:start="133:13" pos:end="135:53"><name pos:start="133:13" pos:end="133:30">tcg_gen_movcond_tl</name><argument_list pos:start="133:31" pos:end="135:53">(<argument pos:start="133:32" pos:end="133:42"><expr pos:start="133:32" pos:end="133:42"><name pos:start="133:32" pos:end="133:42">TCG_COND_LT</name></expr></argument>, <argument pos:start="133:45" pos:end="133:48"><expr pos:start="133:45" pos:end="133:48"><name pos:start="133:45" pos:end="133:48">temp</name></expr></argument>, <argument pos:start="133:51" pos:end="133:65"><expr pos:start="133:51" pos:end="133:65"><name pos:start="133:51" pos:end="133:65"><name pos:start="133:51" pos:end="133:59">cpu_gpr_d</name><index pos:start="133:60" pos:end="133:65">[<expr pos:start="133:61" pos:end="133:64"><name pos:start="133:61" pos:end="133:62">r3</name><operator pos:start="133:63" pos:end="133:63">+</operator><literal type="number" pos:start="133:64" pos:end="133:64">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="133:68" pos:end="133:77"><expr pos:start="133:68" pos:end="133:77"><name pos:start="133:68" pos:end="133:77">cpu_PSW_AV</name></expr></argument>,

                               <argument pos:start="135:32" pos:end="135:35"><expr pos:start="135:32" pos:end="135:35"><name pos:start="135:32" pos:end="135:35">temp</name></expr></argument>, <argument pos:start="135:38" pos:end="135:52"><expr pos:start="135:38" pos:end="135:52"><name pos:start="135:38" pos:end="135:52"><name pos:start="135:38" pos:end="135:46">cpu_gpr_d</name><index pos:start="135:47" pos:end="135:52">[<expr pos:start="135:48" pos:end="135:51"><name pos:start="135:48" pos:end="135:49">r3</name><operator pos:start="135:50" pos:end="135:50">+</operator><literal type="number" pos:start="135:51" pos:end="135:51">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:49"><expr pos:start="137:13" pos:end="137:48"><call pos:start="137:13" pos:end="137:48"><name pos:start="137:13" pos:end="137:26">tcg_gen_neg_tl</name><argument_list pos:start="137:27" pos:end="137:48">(<argument pos:start="137:28" pos:end="137:32"><expr pos:start="137:28" pos:end="137:32"><name pos:start="137:28" pos:end="137:32">temp2</name></expr></argument>, <argument pos:start="137:35" pos:end="137:47"><expr pos:start="137:35" pos:end="137:47"><name pos:start="137:35" pos:end="137:47"><name pos:start="137:35" pos:end="137:43">cpu_gpr_d</name><index pos:start="137:44" pos:end="137:47">[<expr pos:start="137:45" pos:end="137:46"><name pos:start="137:45" pos:end="137:46">r2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="141:53"><expr pos:start="139:13" pos:end="141:52"><call pos:start="139:13" pos:end="141:52"><name pos:start="139:13" pos:end="139:30">tcg_gen_movcond_tl</name><argument_list pos:start="139:31" pos:end="141:52">(<argument pos:start="139:32" pos:end="139:42"><expr pos:start="139:32" pos:end="139:42"><name pos:start="139:32" pos:end="139:42">TCG_COND_LT</name></expr></argument>, <argument pos:start="139:45" pos:end="139:49"><expr pos:start="139:45" pos:end="139:49"><name pos:start="139:45" pos:end="139:49">temp2</name></expr></argument>, <argument pos:start="139:52" pos:end="139:64"><expr pos:start="139:52" pos:end="139:64"><name pos:start="139:52" pos:end="139:64"><name pos:start="139:52" pos:end="139:60">cpu_gpr_d</name><index pos:start="139:61" pos:end="139:64">[<expr pos:start="139:62" pos:end="139:63"><name pos:start="139:62" pos:end="139:63">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="139:67" pos:end="139:76"><expr pos:start="139:67" pos:end="139:76"><name pos:start="139:67" pos:end="139:76">cpu_PSW_AV</name></expr></argument>,

                               <argument pos:start="141:32" pos:end="141:36"><expr pos:start="141:32" pos:end="141:36"><name pos:start="141:32" pos:end="141:36">temp2</name></expr></argument>, <argument pos:start="141:39" pos:end="141:51"><expr pos:start="141:39" pos:end="141:51"><name pos:start="141:39" pos:end="141:51"><name pos:start="141:39" pos:end="141:47">cpu_gpr_d</name><index pos:start="141:48" pos:end="141:51">[<expr pos:start="141:49" pos:end="141:50"><name pos:start="141:49" pos:end="141:50">r2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:68"><expr pos:start="143:13" pos:end="143:67"><call pos:start="143:13" pos:end="143:67"><name pos:start="143:13" pos:end="143:30">tcg_gen_setcond_tl</name><argument_list pos:start="143:31" pos:end="143:67">(<argument pos:start="143:32" pos:end="143:42"><expr pos:start="143:32" pos:end="143:42"><name pos:start="143:32" pos:end="143:42">TCG_COND_GE</name></expr></argument>, <argument pos:start="143:45" pos:end="143:53"><expr pos:start="143:45" pos:end="143:53"><name pos:start="143:45" pos:end="143:53">cpu_PSW_V</name></expr></argument>, <argument pos:start="143:56" pos:end="143:59"><expr pos:start="143:56" pos:end="143:59"><name pos:start="143:56" pos:end="143:59">temp</name></expr></argument>, <argument pos:start="143:62" pos:end="143:66"><expr pos:start="143:62" pos:end="143:66"><name pos:start="143:62" pos:end="143:66">temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="145:11" pos:end="151:9">else <block pos:start="145:16" pos:end="151:9">{<block_content pos:start="149:13" pos:end="149:74">

            <comment type="block" pos:start="147:13" pos:end="147:40">/* overflow = (D[b] == 0) */</comment>

            <expr_stmt pos:start="149:13" pos:end="149:74"><expr pos:start="149:13" pos:end="149:73"><call pos:start="149:13" pos:end="149:73"><name pos:start="149:13" pos:end="149:31">tcg_gen_setcondi_tl</name><argument_list pos:start="149:32" pos:end="149:73">(<argument pos:start="149:33" pos:end="149:43"><expr pos:start="149:33" pos:end="149:43"><name pos:start="149:33" pos:end="149:43">TCG_COND_EQ</name></expr></argument>, <argument pos:start="149:46" pos:end="149:54"><expr pos:start="149:46" pos:end="149:54"><name pos:start="149:46" pos:end="149:54">cpu_PSW_V</name></expr></argument>, <argument pos:start="149:57" pos:end="149:69"><expr pos:start="149:57" pos:end="149:69"><name pos:start="149:57" pos:end="149:69"><name pos:start="149:57" pos:end="149:65">cpu_gpr_d</name><index pos:start="149:66" pos:end="149:69">[<expr pos:start="149:67" pos:end="149:68"><name pos:start="149:67" pos:end="149:68">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="149:72" pos:end="149:72"><expr pos:start="149:72" pos:end="149:72"><literal type="number" pos:start="149:72" pos:end="149:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:50"><expr pos:start="153:9" pos:end="153:49"><call pos:start="153:9" pos:end="153:49"><name pos:start="153:9" pos:end="153:23">tcg_gen_shli_tl</name><argument_list pos:start="153:24" pos:end="153:49">(<argument pos:start="153:25" pos:end="153:33"><expr pos:start="153:25" pos:end="153:33"><name pos:start="153:25" pos:end="153:33">cpu_PSW_V</name></expr></argument>, <argument pos:start="153:36" pos:end="153:44"><expr pos:start="153:36" pos:end="153:44"><name pos:start="153:36" pos:end="153:44">cpu_PSW_V</name></expr></argument>, <argument pos:start="153:47" pos:end="153:48"><expr pos:start="153:47" pos:end="153:48"><literal type="number" pos:start="153:47" pos:end="153:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="155:9" pos:end="155:16">/* sv */</comment>

        <expr_stmt pos:start="157:9" pos:end="157:57"><expr pos:start="157:9" pos:end="157:56"><call pos:start="157:9" pos:end="157:56"><name pos:start="157:9" pos:end="157:21">tcg_gen_or_tl</name><argument_list pos:start="157:22" pos:end="157:56">(<argument pos:start="157:23" pos:end="157:32"><expr pos:start="157:23" pos:end="157:32"><name pos:start="157:23" pos:end="157:32">cpu_PSW_SV</name></expr></argument>, <argument pos:start="157:35" pos:end="157:44"><expr pos:start="157:35" pos:end="157:44"><name pos:start="157:35" pos:end="157:44">cpu_PSW_SV</name></expr></argument>, <argument pos:start="157:47" pos:end="157:55"><expr pos:start="157:47" pos:end="157:55"><name pos:start="157:47" pos:end="157:55">cpu_PSW_V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="159:9" pos:end="159:26">/* write result */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:44"><expr pos:start="161:9" pos:end="161:43"><call pos:start="161:9" pos:end="161:43"><name pos:start="161:9" pos:end="161:22">tcg_gen_mov_tl</name><argument_list pos:start="161:23" pos:end="161:43">(<argument pos:start="161:24" pos:end="161:27"><expr pos:start="161:24" pos:end="161:27"><name pos:start="161:24" pos:end="161:27">temp</name></expr></argument>, <argument pos:start="161:30" pos:end="161:42"><expr pos:start="161:30" pos:end="161:42"><name pos:start="161:30" pos:end="161:42"><name pos:start="161:30" pos:end="161:38">cpu_gpr_d</name><index pos:start="161:39" pos:end="161:42">[<expr pos:start="161:40" pos:end="161:41"><name pos:start="161:40" pos:end="161:41">r1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:51"><expr pos:start="163:9" pos:end="163:50"><call pos:start="163:9" pos:end="163:50"><name pos:start="163:9" pos:end="163:23">tcg_gen_shri_tl</name><argument_list pos:start="163:24" pos:end="163:50">(<argument pos:start="163:25" pos:end="163:39"><expr pos:start="163:25" pos:end="163:39"><name pos:start="163:25" pos:end="163:39"><name pos:start="163:25" pos:end="163:33">cpu_gpr_d</name><index pos:start="163:34" pos:end="163:39">[<expr pos:start="163:35" pos:end="163:38"><name pos:start="163:35" pos:end="163:36">r3</name><operator pos:start="163:37" pos:end="163:37">+</operator><literal type="number" pos:start="163:38" pos:end="163:38">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="163:42" pos:end="163:45"><expr pos:start="163:42" pos:end="163:45"><name pos:start="163:42" pos:end="163:45">temp</name></expr></argument>, <argument pos:start="163:48" pos:end="163:49"><expr pos:start="163:48" pos:end="163:49"><literal type="number" pos:start="163:48" pos:end="163:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:49"><expr pos:start="165:9" pos:end="165:48"><call pos:start="165:9" pos:end="165:48"><name pos:start="165:9" pos:end="165:23">tcg_gen_shli_tl</name><argument_list pos:start="165:24" pos:end="165:48">(<argument pos:start="165:25" pos:end="165:37"><expr pos:start="165:25" pos:end="165:37"><name pos:start="165:25" pos:end="165:37"><name pos:start="165:25" pos:end="165:33">cpu_gpr_d</name><index pos:start="165:34" pos:end="165:37">[<expr pos:start="165:35" pos:end="165:36"><name pos:start="165:35" pos:end="165:36">r3</name></expr>]</index></name></expr></argument>, <argument pos:start="165:40" pos:end="165:43"><expr pos:start="165:40" pos:end="165:43"><name pos:start="165:40" pos:end="165:43">temp</name></expr></argument>, <argument pos:start="165:46" pos:end="165:47"><expr pos:start="165:46" pos:end="165:47"><literal type="number" pos:start="165:46" pos:end="165:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:28"><expr pos:start="167:9" pos:end="167:27"><call pos:start="167:9" pos:end="167:27"><name pos:start="167:9" pos:end="167:21">tcg_temp_free</name><argument_list pos:start="167:22" pos:end="167:27">(<argument pos:start="167:23" pos:end="167:26"><expr pos:start="167:23" pos:end="167:26"><name pos:start="167:23" pos:end="167:26">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:29"><expr pos:start="169:9" pos:end="169:28"><call pos:start="169:9" pos:end="169:28"><name pos:start="169:9" pos:end="169:21">tcg_temp_free</name><argument_list pos:start="169:22" pos:end="169:28">(<argument pos:start="169:23" pos:end="169:27"><expr pos:start="169:23" pos:end="169:27"><name pos:start="169:23" pos:end="169:27">temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="171:9" pos:end="171:14">break;</break>

    <case pos:start="173:5" pos:end="173:27">case <expr pos:start="173:10" pos:end="173:26"><name pos:start="173:10" pos:end="173:26">OPC2_32_RR_DVINIT</name></expr>:</case>

        <expr_stmt pos:start="175:9" pos:end="175:30"><expr pos:start="175:9" pos:end="175:29"><name pos:start="175:9" pos:end="175:12">temp</name> <operator pos:start="175:14" pos:end="175:14">=</operator> <call pos:start="175:16" pos:end="175:29"><name pos:start="175:16" pos:end="175:27">tcg_temp_new</name><argument_list pos:start="175:28" pos:end="175:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:31"><expr pos:start="177:9" pos:end="177:30"><name pos:start="177:9" pos:end="177:13">temp2</name> <operator pos:start="177:15" pos:end="177:15">=</operator> <call pos:start="177:17" pos:end="177:30"><name pos:start="177:17" pos:end="177:28">tcg_temp_new</name><argument_list pos:start="177:29" pos:end="177:30">()</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="179:9" pos:end="181:72">/* overflow = ((D[b] == 0) ||

                      ((D[b] == 0xFFFFFFFF) &amp;&amp; (D[a] == 0x80000000))) */</comment>

        <expr_stmt pos:start="183:9" pos:end="183:74"><expr pos:start="183:9" pos:end="183:73"><call pos:start="183:9" pos:end="183:73"><name pos:start="183:9" pos:end="183:27">tcg_gen_setcondi_tl</name><argument_list pos:start="183:28" pos:end="183:73">(<argument pos:start="183:29" pos:end="183:39"><expr pos:start="183:29" pos:end="183:39"><name pos:start="183:29" pos:end="183:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="183:42" pos:end="183:45"><expr pos:start="183:42" pos:end="183:45"><name pos:start="183:42" pos:end="183:45">temp</name></expr></argument>, <argument pos:start="183:48" pos:end="183:60"><expr pos:start="183:48" pos:end="183:60"><name pos:start="183:48" pos:end="183:60"><name pos:start="183:48" pos:end="183:56">cpu_gpr_d</name><index pos:start="183:57" pos:end="183:60">[<expr pos:start="183:58" pos:end="183:59"><name pos:start="183:58" pos:end="183:59">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="183:63" pos:end="183:72"><expr pos:start="183:63" pos:end="183:72"><literal type="number" pos:start="183:63" pos:end="183:72">0xffffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:75"><expr pos:start="185:9" pos:end="185:74"><call pos:start="185:9" pos:end="185:74"><name pos:start="185:9" pos:end="185:27">tcg_gen_setcondi_tl</name><argument_list pos:start="185:28" pos:end="185:74">(<argument pos:start="185:29" pos:end="185:39"><expr pos:start="185:29" pos:end="185:39"><name pos:start="185:29" pos:end="185:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="185:42" pos:end="185:46"><expr pos:start="185:42" pos:end="185:46"><name pos:start="185:42" pos:end="185:46">temp2</name></expr></argument>, <argument pos:start="185:49" pos:end="185:61"><expr pos:start="185:49" pos:end="185:61"><name pos:start="185:49" pos:end="185:61"><name pos:start="185:49" pos:end="185:57">cpu_gpr_d</name><index pos:start="185:58" pos:end="185:61">[<expr pos:start="185:59" pos:end="185:60"><name pos:start="185:59" pos:end="185:60">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="185:64" pos:end="185:73"><expr pos:start="185:64" pos:end="185:73"><literal type="number" pos:start="185:64" pos:end="185:73">0x80000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:42"><expr pos:start="187:9" pos:end="187:41"><call pos:start="187:9" pos:end="187:41"><name pos:start="187:9" pos:end="187:22">tcg_gen_and_tl</name><argument_list pos:start="187:23" pos:end="187:41">(<argument pos:start="187:24" pos:end="187:27"><expr pos:start="187:24" pos:end="187:27"><name pos:start="187:24" pos:end="187:27">temp</name></expr></argument>, <argument pos:start="187:30" pos:end="187:33"><expr pos:start="187:30" pos:end="187:33"><name pos:start="187:30" pos:end="187:33">temp</name></expr></argument>, <argument pos:start="187:36" pos:end="187:40"><expr pos:start="187:36" pos:end="187:40"><name pos:start="187:36" pos:end="187:40">temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:66"><expr pos:start="189:9" pos:end="189:65"><call pos:start="189:9" pos:end="189:65"><name pos:start="189:9" pos:end="189:27">tcg_gen_setcondi_tl</name><argument_list pos:start="189:28" pos:end="189:65">(<argument pos:start="189:29" pos:end="189:39"><expr pos:start="189:29" pos:end="189:39"><name pos:start="189:29" pos:end="189:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="189:42" pos:end="189:46"><expr pos:start="189:42" pos:end="189:46"><name pos:start="189:42" pos:end="189:46">temp2</name></expr></argument>, <argument pos:start="189:49" pos:end="189:61"><expr pos:start="189:49" pos:end="189:61"><name pos:start="189:49" pos:end="189:61"><name pos:start="189:49" pos:end="189:57">cpu_gpr_d</name><index pos:start="189:58" pos:end="189:61">[<expr pos:start="189:59" pos:end="189:60"><name pos:start="189:59" pos:end="189:60">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="189:64" pos:end="189:64"><expr pos:start="189:64" pos:end="189:64"><literal type="number" pos:start="189:64" pos:end="189:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:46"><expr pos:start="191:9" pos:end="191:45"><call pos:start="191:9" pos:end="191:45"><name pos:start="191:9" pos:end="191:21">tcg_gen_or_tl</name><argument_list pos:start="191:22" pos:end="191:45">(<argument pos:start="191:23" pos:end="191:31"><expr pos:start="191:23" pos:end="191:31"><name pos:start="191:23" pos:end="191:31">cpu_PSW_V</name></expr></argument>, <argument pos:start="191:34" pos:end="191:37"><expr pos:start="191:34" pos:end="191:37"><name pos:start="191:34" pos:end="191:37">temp</name></expr></argument>, <argument pos:start="191:40" pos:end="191:44"><expr pos:start="191:40" pos:end="191:44"><name pos:start="191:40" pos:end="191:44">temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:50"><expr pos:start="193:9" pos:end="193:49"><call pos:start="193:9" pos:end="193:49"><name pos:start="193:9" pos:end="193:23">tcg_gen_shli_tl</name><argument_list pos:start="193:24" pos:end="193:49">(<argument pos:start="193:25" pos:end="193:33"><expr pos:start="193:25" pos:end="193:33"><name pos:start="193:25" pos:end="193:33">cpu_PSW_V</name></expr></argument>, <argument pos:start="193:36" pos:end="193:44"><expr pos:start="193:36" pos:end="193:44"><name pos:start="193:36" pos:end="193:44">cpu_PSW_V</name></expr></argument>, <argument pos:start="193:47" pos:end="193:48"><expr pos:start="193:47" pos:end="193:48"><literal type="number" pos:start="193:47" pos:end="193:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="195:9" pos:end="195:16">/* sv */</comment>

        <expr_stmt pos:start="197:9" pos:end="197:57"><expr pos:start="197:9" pos:end="197:56"><call pos:start="197:9" pos:end="197:56"><name pos:start="197:9" pos:end="197:21">tcg_gen_or_tl</name><argument_list pos:start="197:22" pos:end="197:56">(<argument pos:start="197:23" pos:end="197:32"><expr pos:start="197:23" pos:end="197:32"><name pos:start="197:23" pos:end="197:32">cpu_PSW_SV</name></expr></argument>, <argument pos:start="197:35" pos:end="197:44"><expr pos:start="197:35" pos:end="197:44"><name pos:start="197:35" pos:end="197:44">cpu_PSW_SV</name></expr></argument>, <argument pos:start="197:47" pos:end="197:55"><expr pos:start="197:47" pos:end="197:55"><name pos:start="197:47" pos:end="197:55">cpu_PSW_V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="199:9" pos:end="199:22">/* reset av */</comment>

       <expr_stmt pos:start="201:8" pos:end="201:38"><expr pos:start="201:8" pos:end="201:37"><call pos:start="201:8" pos:end="201:37"><name pos:start="201:8" pos:end="201:22">tcg_gen_movi_tl</name><argument_list pos:start="201:23" pos:end="201:37">(<argument pos:start="201:24" pos:end="201:33"><expr pos:start="201:24" pos:end="201:33"><name pos:start="201:24" pos:end="201:33">cpu_PSW_AV</name></expr></argument>, <argument pos:start="201:36" pos:end="201:36"><expr pos:start="201:36" pos:end="201:36"><literal type="number" pos:start="201:36" pos:end="201:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="203:9" pos:end="203:26">/* write result */</comment>

        <expr_stmt pos:start="205:9" pos:end="205:53"><expr pos:start="205:9" pos:end="205:52"><call pos:start="205:9" pos:end="205:52"><name pos:start="205:9" pos:end="205:22">tcg_gen_mov_tl</name><argument_list pos:start="205:23" pos:end="205:52">(<argument pos:start="205:24" pos:end="205:36"><expr pos:start="205:24" pos:end="205:36"><name pos:start="205:24" pos:end="205:36"><name pos:start="205:24" pos:end="205:32">cpu_gpr_d</name><index pos:start="205:33" pos:end="205:36">[<expr pos:start="205:34" pos:end="205:35"><name pos:start="205:34" pos:end="205:35">r3</name></expr>]</index></name></expr></argument>, <argument pos:start="205:39" pos:end="205:51"><expr pos:start="205:39" pos:end="205:51"><name pos:start="205:39" pos:end="205:51"><name pos:start="205:39" pos:end="205:47">cpu_gpr_d</name><index pos:start="205:48" pos:end="205:51">[<expr pos:start="205:49" pos:end="205:50"><name pos:start="205:49" pos:end="205:50">r1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="207:9" pos:end="207:37">/* sign extend to high reg */</comment>

        <expr_stmt pos:start="209:9" pos:end="209:60"><expr pos:start="209:9" pos:end="209:59"><call pos:start="209:9" pos:end="209:59"><name pos:start="209:9" pos:end="209:23">tcg_gen_sari_tl</name><argument_list pos:start="209:24" pos:end="209:59">(<argument pos:start="209:25" pos:end="209:39"><expr pos:start="209:25" pos:end="209:39"><name pos:start="209:25" pos:end="209:39"><name pos:start="209:25" pos:end="209:33">cpu_gpr_d</name><index pos:start="209:34" pos:end="209:39">[<expr pos:start="209:35" pos:end="209:38"><name pos:start="209:35" pos:end="209:36">r3</name><operator pos:start="209:37" pos:end="209:37">+</operator><literal type="number" pos:start="209:38" pos:end="209:38">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="209:42" pos:end="209:54"><expr pos:start="209:42" pos:end="209:54"><name pos:start="209:42" pos:end="209:54"><name pos:start="209:42" pos:end="209:50">cpu_gpr_d</name><index pos:start="209:51" pos:end="209:54">[<expr pos:start="209:52" pos:end="209:53"><name pos:start="209:52" pos:end="209:53">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="209:57" pos:end="209:58"><expr pos:start="209:57" pos:end="209:58"><literal type="number" pos:start="209:57" pos:end="209:58">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:28"><expr pos:start="211:9" pos:end="211:27"><call pos:start="211:9" pos:end="211:27"><name pos:start="211:9" pos:end="211:21">tcg_temp_free</name><argument_list pos:start="211:22" pos:end="211:27">(<argument pos:start="211:23" pos:end="211:26"><expr pos:start="211:23" pos:end="211:26"><name pos:start="211:23" pos:end="211:26">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:29"><expr pos:start="213:9" pos:end="213:28"><call pos:start="213:9" pos:end="213:28"><name pos:start="213:9" pos:end="213:21">tcg_temp_free</name><argument_list pos:start="213:22" pos:end="213:28">(<argument pos:start="213:23" pos:end="213:27"><expr pos:start="213:23" pos:end="213:27"><name pos:start="213:23" pos:end="213:27">temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <case pos:start="217:5" pos:end="217:29">case <expr pos:start="217:10" pos:end="217:28"><name pos:start="217:10" pos:end="217:28">OPC2_32_RR_DVINIT_U</name></expr>:</case>

        <comment type="block" pos:start="219:9" pos:end="219:36">/* overflow = (D[b] == 0) */</comment>

        <expr_stmt pos:start="221:9" pos:end="221:70"><expr pos:start="221:9" pos:end="221:69"><call pos:start="221:9" pos:end="221:69"><name pos:start="221:9" pos:end="221:27">tcg_gen_setcondi_tl</name><argument_list pos:start="221:28" pos:end="221:69">(<argument pos:start="221:29" pos:end="221:39"><expr pos:start="221:29" pos:end="221:39"><name pos:start="221:29" pos:end="221:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="221:42" pos:end="221:50"><expr pos:start="221:42" pos:end="221:50"><name pos:start="221:42" pos:end="221:50">cpu_PSW_V</name></expr></argument>, <argument pos:start="221:53" pos:end="221:65"><expr pos:start="221:53" pos:end="221:65"><name pos:start="221:53" pos:end="221:65"><name pos:start="221:53" pos:end="221:61">cpu_gpr_d</name><index pos:start="221:62" pos:end="221:65">[<expr pos:start="221:63" pos:end="221:64"><name pos:start="221:63" pos:end="221:64">r2</name></expr>]</index></name></expr></argument>, <argument pos:start="221:68" pos:end="221:68"><expr pos:start="221:68" pos:end="221:68"><literal type="number" pos:start="221:68" pos:end="221:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:50"><expr pos:start="223:9" pos:end="223:49"><call pos:start="223:9" pos:end="223:49"><name pos:start="223:9" pos:end="223:23">tcg_gen_shli_tl</name><argument_list pos:start="223:24" pos:end="223:49">(<argument pos:start="223:25" pos:end="223:33"><expr pos:start="223:25" pos:end="223:33"><name pos:start="223:25" pos:end="223:33">cpu_PSW_V</name></expr></argument>, <argument pos:start="223:36" pos:end="223:44"><expr pos:start="223:36" pos:end="223:44"><name pos:start="223:36" pos:end="223:44">cpu_PSW_V</name></expr></argument>, <argument pos:start="223:47" pos:end="223:48"><expr pos:start="223:47" pos:end="223:48"><literal type="number" pos:start="223:47" pos:end="223:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="225:9" pos:end="225:16">/* sv */</comment>

        <expr_stmt pos:start="227:9" pos:end="227:57"><expr pos:start="227:9" pos:end="227:56"><call pos:start="227:9" pos:end="227:56"><name pos:start="227:9" pos:end="227:21">tcg_gen_or_tl</name><argument_list pos:start="227:22" pos:end="227:56">(<argument pos:start="227:23" pos:end="227:32"><expr pos:start="227:23" pos:end="227:32"><name pos:start="227:23" pos:end="227:32">cpu_PSW_SV</name></expr></argument>, <argument pos:start="227:35" pos:end="227:44"><expr pos:start="227:35" pos:end="227:44"><name pos:start="227:35" pos:end="227:44">cpu_PSW_SV</name></expr></argument>, <argument pos:start="227:47" pos:end="227:55"><expr pos:start="227:47" pos:end="227:55"><name pos:start="227:47" pos:end="227:55">cpu_PSW_V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="229:9" pos:end="229:22">/* reset av */</comment>

        <expr_stmt pos:start="231:9" pos:end="231:39"><expr pos:start="231:9" pos:end="231:38"><call pos:start="231:9" pos:end="231:38"><name pos:start="231:9" pos:end="231:23">tcg_gen_movi_tl</name><argument_list pos:start="231:24" pos:end="231:38">(<argument pos:start="231:25" pos:end="231:34"><expr pos:start="231:25" pos:end="231:34"><name pos:start="231:25" pos:end="231:34">cpu_PSW_AV</name></expr></argument>, <argument pos:start="231:37" pos:end="231:37"><expr pos:start="231:37" pos:end="231:37"><literal type="number" pos:start="231:37" pos:end="231:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="233:9" pos:end="233:26">/* write result */</comment>

        <expr_stmt pos:start="235:9" pos:end="235:53"><expr pos:start="235:9" pos:end="235:52"><call pos:start="235:9" pos:end="235:52"><name pos:start="235:9" pos:end="235:22">tcg_gen_mov_tl</name><argument_list pos:start="235:23" pos:end="235:52">(<argument pos:start="235:24" pos:end="235:36"><expr pos:start="235:24" pos:end="235:36"><name pos:start="235:24" pos:end="235:36"><name pos:start="235:24" pos:end="235:32">cpu_gpr_d</name><index pos:start="235:33" pos:end="235:36">[<expr pos:start="235:34" pos:end="235:35"><name pos:start="235:34" pos:end="235:35">r3</name></expr>]</index></name></expr></argument>, <argument pos:start="235:39" pos:end="235:51"><expr pos:start="235:39" pos:end="235:51"><name pos:start="235:39" pos:end="235:51"><name pos:start="235:39" pos:end="235:47">cpu_gpr_d</name><index pos:start="235:48" pos:end="235:51">[<expr pos:start="235:49" pos:end="235:50"><name pos:start="235:49" pos:end="235:50">r1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="237:9" pos:end="237:36">/* zero extend to high reg*/</comment>

        <expr_stmt pos:start="239:9" pos:end="239:44"><expr pos:start="239:9" pos:end="239:43"><call pos:start="239:9" pos:end="239:43"><name pos:start="239:9" pos:end="239:23">tcg_gen_movi_tl</name><argument_list pos:start="239:24" pos:end="239:43">(<argument pos:start="239:25" pos:end="239:39"><expr pos:start="239:25" pos:end="239:39"><name pos:start="239:25" pos:end="239:39"><name pos:start="239:25" pos:end="239:33">cpu_gpr_d</name><index pos:start="239:34" pos:end="239:39">[<expr pos:start="239:35" pos:end="239:38"><name pos:start="239:35" pos:end="239:36">r3</name><operator pos:start="239:37" pos:end="239:37">+</operator><literal type="number" pos:start="239:38" pos:end="239:38">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="239:42" pos:end="239:42"><expr pos:start="239:42" pos:end="239:42"><literal type="number" pos:start="239:42" pos:end="239:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="241:9" pos:end="241:14">break;</break>

    <case pos:start="243:5" pos:end="243:27">case <expr pos:start="243:10" pos:end="243:26"><name pos:start="243:10" pos:end="243:26">OPC2_32_RR_PARITY</name></expr>:</case>

        <expr_stmt pos:start="245:9" pos:end="245:56"><expr pos:start="245:9" pos:end="245:55"><call pos:start="245:9" pos:end="245:55"><name pos:start="245:9" pos:end="245:25">gen_helper_parity</name><argument_list pos:start="245:26" pos:end="245:55">(<argument pos:start="245:27" pos:end="245:39"><expr pos:start="245:27" pos:end="245:39"><name pos:start="245:27" pos:end="245:39"><name pos:start="245:27" pos:end="245:35">cpu_gpr_d</name><index pos:start="245:36" pos:end="245:39">[<expr pos:start="245:37" pos:end="245:38"><name pos:start="245:37" pos:end="245:38">r3</name></expr>]</index></name></expr></argument>, <argument pos:start="245:42" pos:end="245:54"><expr pos:start="245:42" pos:end="245:54"><name pos:start="245:42" pos:end="245:54"><name pos:start="245:42" pos:end="245:50">cpu_gpr_d</name><index pos:start="245:51" pos:end="245:54">[<expr pos:start="245:52" pos:end="245:53"><name pos:start="245:52" pos:end="245:53">r1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="247:9" pos:end="247:14">break;</break>

    <case pos:start="249:5" pos:end="249:27">case <expr pos:start="249:10" pos:end="249:26"><name pos:start="249:10" pos:end="249:26">OPC2_32_RR_UNPACK</name></expr>:</case>

        <expr_stmt pos:start="251:9" pos:end="251:66"><expr pos:start="251:9" pos:end="251:65"><call pos:start="251:9" pos:end="251:65"><name pos:start="251:9" pos:end="251:18">gen_unpack</name><argument_list pos:start="251:19" pos:end="251:65">(<argument pos:start="251:20" pos:end="251:32"><expr pos:start="251:20" pos:end="251:32"><name pos:start="251:20" pos:end="251:32"><name pos:start="251:20" pos:end="251:28">cpu_gpr_d</name><index pos:start="251:29" pos:end="251:32">[<expr pos:start="251:30" pos:end="251:31"><name pos:start="251:30" pos:end="251:31">r3</name></expr>]</index></name></expr></argument>, <argument pos:start="251:35" pos:end="251:49"><expr pos:start="251:35" pos:end="251:49"><name pos:start="251:35" pos:end="251:49"><name pos:start="251:35" pos:end="251:43">cpu_gpr_d</name><index pos:start="251:44" pos:end="251:49">[<expr pos:start="251:45" pos:end="251:48"><name pos:start="251:45" pos:end="251:46">r3</name><operator pos:start="251:47" pos:end="251:47">+</operator><literal type="number" pos:start="251:48" pos:end="251:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="251:52" pos:end="251:64"><expr pos:start="251:52" pos:end="251:64"><name pos:start="251:52" pos:end="251:64"><name pos:start="251:52" pos:end="251:60">cpu_gpr_d</name><index pos:start="251:61" pos:end="251:64">[<expr pos:start="251:62" pos:end="251:63"><name pos:start="251:62" pos:end="251:63">r1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="253:9" pos:end="253:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
