<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5352.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">alloc_tables</name><parameter_list pos:start="1:24" pos:end="1:39">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:35">H264Context</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">h</name></decl></parameter>)</parameter_list><block pos:start="1:40" pos:end="83:1">{<block_content pos:start="3:5" pos:end="81:14">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:24">big_mb_num</name><init pos:start="5:25" pos:end="5:57">= <expr pos:start="5:27" pos:end="5:57"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">mb_stride</name></name> <operator pos:start="5:40" pos:end="5:40">*</operator> <operator pos:start="5:42" pos:end="5:42">(</operator><name pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:43">s</name><operator pos:start="5:44" pos:end="5:45">-&gt;</operator><name pos:start="5:46" pos:end="5:54">mb_height</name></name><operator pos:start="5:55" pos:end="5:55">+</operator><literal type="number" pos:start="5:56" pos:end="5:56">1</literal><operator pos:start="5:57" pos:end="5:57">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>,<decl pos:start="7:11" pos:end="7:11"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">y</name></decl>;</decl_stmt>



    <macro pos:start="11:5" pos:end="11:76"><name pos:start="11:5" pos:end="11:18">CHECKED_ALLOCZ</name><argument_list pos:start="11:19" pos:end="11:76">(<argument pos:start="11:20" pos:end="11:40">h-&gt;intra4x4_pred_mode</argument>, <argument pos:start="11:43" pos:end="11:75">big_mb_num * <literal type="number" pos:start="11:56" pos:end="11:56">8</literal>  * sizeof(uint8_t)</argument>)</argument_list></macro>



    <macro pos:start="15:5" pos:end="15:76"><name pos:start="15:5" pos:end="15:18">CHECKED_ALLOCZ</name><argument_list pos:start="15:19" pos:end="15:76">(<argument pos:start="15:20" pos:end="15:36">h-&gt;non_zero_count</argument>    , <argument pos:start="15:43" pos:end="15:75">big_mb_num * <literal type="number" pos:start="15:56" pos:end="15:57">16</literal> * sizeof(uint8_t)</argument>)</argument_list></macro>

    <macro pos:start="17:5" pos:end="17:99"><name pos:start="17:5" pos:end="17:18">CHECKED_ALLOCZ</name><argument_list pos:start="17:19" pos:end="17:99">(<argument pos:start="17:20" pos:end="17:38">h-&gt;slice_table_base</argument>  , <argument pos:start="17:43" pos:end="17:98">(big_mb_num+s-&gt;mb_stride) * sizeof(*h-&gt;slice_table_base)</argument>)</argument_list></macro>

    <macro pos:start="19:5" pos:end="19:63"><name pos:start="19:5" pos:end="19:18">CHECKED_ALLOCZ</name><argument_list pos:start="19:19" pos:end="19:63">(<argument pos:start="19:20" pos:end="19:31">h-&gt;cbp_table</argument>, <argument pos:start="19:34" pos:end="19:62">big_mb_num * sizeof(uint16_t)</argument>)</argument_list></macro>



    <macro pos:start="23:5" pos:end="23:75"><name pos:start="23:5" pos:end="23:18">CHECKED_ALLOCZ</name><argument_list pos:start="23:19" pos:end="23:75">(<argument pos:start="23:20" pos:end="23:44">h-&gt;chroma_pred_mode_table</argument>, <argument pos:start="23:47" pos:end="23:74">big_mb_num * sizeof(uint8_t)</argument>)</argument_list></macro>

    <expr_stmt pos:start="25:5" pos:end="25:70"><expr pos:start="25:5" pos:end="25:69"><call pos:start="25:5" pos:end="25:69"><name pos:start="25:5" pos:end="25:18">CHECKED_ALLOCZ</name><argument_list pos:start="25:19" pos:end="25:69">(<argument pos:start="25:20" pos:end="25:34"><expr pos:start="25:20" pos:end="25:34"><name pos:start="25:20" pos:end="25:34"><name pos:start="25:20" pos:end="25:20">h</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:31">mvd_table</name><index pos:start="25:32" pos:end="25:34">[<expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:37" pos:end="25:68"><expr pos:start="25:37" pos:end="25:68"><literal type="number" pos:start="25:37" pos:end="25:38">32</literal><operator pos:start="25:39" pos:end="25:39">*</operator><name pos:start="25:40" pos:end="25:49">big_mb_num</name> <operator pos:start="25:51" pos:end="25:51">*</operator> <sizeof pos:start="25:53" pos:end="25:68">sizeof<argument_list pos:start="25:59" pos:end="25:68">(<argument pos:start="25:60" pos:end="25:67"><expr pos:start="25:60" pos:end="25:67"><name pos:start="25:60" pos:end="25:67">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:70"><expr pos:start="27:5" pos:end="27:69"><call pos:start="27:5" pos:end="27:69"><name pos:start="27:5" pos:end="27:18">CHECKED_ALLOCZ</name><argument_list pos:start="27:19" pos:end="27:69">(<argument pos:start="27:20" pos:end="27:34"><expr pos:start="27:20" pos:end="27:34"><name pos:start="27:20" pos:end="27:34"><name pos:start="27:20" pos:end="27:20">h</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:31">mvd_table</name><index pos:start="27:32" pos:end="27:34">[<expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:37" pos:end="27:68"><expr pos:start="27:37" pos:end="27:68"><literal type="number" pos:start="27:37" pos:end="27:38">32</literal><operator pos:start="27:39" pos:end="27:39">*</operator><name pos:start="27:40" pos:end="27:49">big_mb_num</name> <operator pos:start="27:51" pos:end="27:51">*</operator> <sizeof pos:start="27:53" pos:end="27:68">sizeof<argument_list pos:start="27:59" pos:end="27:68">(<argument pos:start="27:60" pos:end="27:67"><expr pos:start="27:60" pos:end="27:67"><name pos:start="27:60" pos:end="27:67">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:69"><expr pos:start="29:5" pos:end="29:68"><call pos:start="29:5" pos:end="29:68"><name pos:start="29:5" pos:end="29:18">CHECKED_ALLOCZ</name><argument_list pos:start="29:19" pos:end="29:68">(<argument pos:start="29:20" pos:end="29:34"><expr pos:start="29:20" pos:end="29:34"><name pos:start="29:20" pos:end="29:34"><name pos:start="29:20" pos:end="29:20">h</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:34">direct_table</name></name></expr></argument>, <argument pos:start="29:37" pos:end="29:67"><expr pos:start="29:37" pos:end="29:67"><literal type="number" pos:start="29:37" pos:end="29:38">32</literal><operator pos:start="29:39" pos:end="29:39">*</operator><name pos:start="29:40" pos:end="29:49">big_mb_num</name> <operator pos:start="29:51" pos:end="29:51">*</operator> <sizeof pos:start="29:53" pos:end="29:67">sizeof<argument_list pos:start="29:59" pos:end="29:67">(<argument pos:start="29:60" pos:end="29:66"><expr pos:start="29:60" pos:end="29:66"><name pos:start="29:60" pos:end="29:66">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:95"><expr pos:start="33:5" pos:end="33:94"><call pos:start="33:5" pos:end="33:94"><name pos:start="33:5" pos:end="33:10">memset</name><argument_list pos:start="33:11" pos:end="33:94">(<argument pos:start="33:12" pos:end="33:30"><expr pos:start="33:12" pos:end="33:30"><name pos:start="33:12" pos:end="33:30"><name pos:start="33:12" pos:end="33:12">h</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:30">slice_table_base</name></name></expr></argument>, <argument pos:start="33:33" pos:end="33:34"><expr pos:start="33:33" pos:end="33:34"><operator pos:start="33:33" pos:end="33:33">-</operator><literal type="number" pos:start="33:34" pos:end="33:34">1</literal></expr></argument>, <argument pos:start="33:37" pos:end="33:93"><expr pos:start="33:37" pos:end="33:93"><operator pos:start="33:37" pos:end="33:37">(</operator><name pos:start="33:38" pos:end="33:47">big_mb_num</name><operator pos:start="33:48" pos:end="33:48">+</operator><name pos:start="33:49" pos:end="33:60"><name pos:start="33:49" pos:end="33:49">s</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:60">mb_stride</name></name><operator pos:start="33:61" pos:end="33:61">)</operator>  <operator pos:start="33:64" pos:end="33:64">*</operator> <sizeof pos:start="33:66" pos:end="33:93">sizeof<argument_list pos:start="33:72" pos:end="33:93">(<argument pos:start="33:73" pos:end="33:92"><expr pos:start="33:73" pos:end="33:92"><operator pos:start="33:73" pos:end="33:73">*</operator><name pos:start="33:74" pos:end="33:92"><name pos:start="33:74" pos:end="33:74">h</name><operator pos:start="33:75" pos:end="33:76">-&gt;</operator><name pos:start="33:77" pos:end="33:92">slice_table_base</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:61"><expr pos:start="35:5" pos:end="35:60"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:5">h</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:18">slice_table</name></name><operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:39"><name pos:start="35:21" pos:end="35:21">h</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:39">slice_table_base</name></name> <operator pos:start="35:41" pos:end="35:41">+</operator> <name pos:start="35:43" pos:end="35:54"><name pos:start="35:43" pos:end="35:43">s</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:54">mb_stride</name></name><operator pos:start="35:55" pos:end="35:55">*</operator><literal type="number" pos:start="35:56" pos:end="35:58">2</literal> <operator pos:start="35:58" pos:end="35:58">+</operator> <literal type="number" pos:start="35:60" pos:end="35:60">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:64"><expr pos:start="39:5" pos:end="39:63"><call pos:start="39:5" pos:end="39:63"><name pos:start="39:5" pos:end="39:18">CHECKED_ALLOCZ</name><argument_list pos:start="39:19" pos:end="39:63">(<argument pos:start="39:20" pos:end="39:29"><expr pos:start="39:20" pos:end="39:29"><name pos:start="39:20" pos:end="39:29"><name pos:start="39:20" pos:end="39:20">h</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:29">mb2b_xy</name></name></expr></argument>  , <argument pos:start="39:34" pos:end="39:62"><expr pos:start="39:34" pos:end="39:62"><name pos:start="39:34" pos:end="39:43">big_mb_num</name> <operator pos:start="39:45" pos:end="39:45">*</operator> <sizeof pos:start="39:47" pos:end="39:62">sizeof<argument_list pos:start="39:53" pos:end="39:62">(<argument pos:start="39:54" pos:end="39:61"><expr pos:start="39:54" pos:end="39:61"><name pos:start="39:54" pos:end="39:61">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:64"><expr pos:start="41:5" pos:end="41:63"><call pos:start="41:5" pos:end="41:63"><name pos:start="41:5" pos:end="41:18">CHECKED_ALLOCZ</name><argument_list pos:start="41:19" pos:end="41:63">(<argument pos:start="41:20" pos:end="41:30"><expr pos:start="41:20" pos:end="41:30"><name pos:start="41:20" pos:end="41:30"><name pos:start="41:20" pos:end="41:20">h</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:30">mb2b8_xy</name></name></expr></argument> , <argument pos:start="41:34" pos:end="41:62"><expr pos:start="41:34" pos:end="41:62"><name pos:start="41:34" pos:end="41:43">big_mb_num</name> <operator pos:start="41:45" pos:end="41:45">*</operator> <sizeof pos:start="41:47" pos:end="41:62">sizeof<argument_list pos:start="41:53" pos:end="41:62">(<argument pos:start="41:54" pos:end="41:61"><expr pos:start="41:54" pos:end="41:61"><name pos:start="41:54" pos:end="41:61">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="43:5" pos:end="61:5">for<control pos:start="43:8" pos:end="43:33">(<init pos:start="43:9" pos:end="43:12"><expr pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:9">y</name><operator pos:start="43:10" pos:end="43:10">=</operator><literal type="number" pos:start="43:11" pos:end="43:11">0</literal></expr>;</init> <condition pos:start="43:14" pos:end="43:28"><expr pos:start="43:14" pos:end="43:27"><name pos:start="43:14" pos:end="43:14">y</name><operator pos:start="43:15" pos:end="43:15">&lt;</operator><name pos:start="43:16" pos:end="43:27"><name pos:start="43:16" pos:end="43:16">s</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:27">mb_height</name></name></expr>;</condition> <incr pos:start="43:30" pos:end="43:32"><expr pos:start="43:30" pos:end="43:32"><name pos:start="43:30" pos:end="43:30">y</name><operator pos:start="43:31" pos:end="43:32">++</operator></expr></incr>)</control><block pos:start="43:34" pos:end="61:5">{<block_content pos:start="45:9" pos:end="59:9">

        <for pos:start="45:9" pos:end="59:9">for<control pos:start="45:12" pos:end="45:36">(<init pos:start="45:13" pos:end="45:16"><expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:13">x</name><operator pos:start="45:14" pos:end="45:14">=</operator><literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>;</init> <condition pos:start="45:18" pos:end="45:31"><expr pos:start="45:18" pos:end="45:30"><name pos:start="45:18" pos:end="45:18">x</name><operator pos:start="45:19" pos:end="45:19">&lt;</operator><name pos:start="45:20" pos:end="45:30"><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:30">mb_width</name></name></expr>;</condition> <incr pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><name pos:start="45:33" pos:end="45:33">x</name><operator pos:start="45:34" pos:end="45:35">++</operator></expr></incr>)</control><block pos:start="45:37" pos:end="59:9">{<block_content pos:start="47:13" pos:end="57:38">

            <decl_stmt pos:start="47:13" pos:end="47:48"><decl pos:start="47:13" pos:end="47:47"><type pos:start="47:13" pos:end="47:21"><specifier pos:start="47:13" pos:end="47:17">const</specifier> <name pos:start="47:19" pos:end="47:21">int</name></type> <name pos:start="47:23" pos:end="47:27">mb_xy</name><init pos:start="47:28" pos:end="47:47">= <expr pos:start="47:30" pos:end="47:47"><name pos:start="47:30" pos:end="47:30">x</name> <operator pos:start="47:32" pos:end="47:32">+</operator> <name pos:start="47:34" pos:end="47:34">y</name><operator pos:start="47:35" pos:end="47:35">*</operator><name pos:start="47:36" pos:end="47:47"><name pos:start="47:36" pos:end="47:36">s</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:47">mb_stride</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:51"><decl pos:start="49:13" pos:end="49:50"><type pos:start="49:13" pos:end="49:21"><specifier pos:start="49:13" pos:end="49:17">const</specifier> <name pos:start="49:19" pos:end="49:21">int</name></type> <name pos:start="49:23" pos:end="49:26">b_xy</name> <init pos:start="49:28" pos:end="49:50">= <expr pos:start="49:30" pos:end="49:50"><literal type="number" pos:start="49:30" pos:end="49:30">4</literal><operator pos:start="49:31" pos:end="49:31">*</operator><name pos:start="49:32" pos:end="49:32">x</name> <operator pos:start="49:34" pos:end="49:34">+</operator> <literal type="number" pos:start="49:36" pos:end="49:36">4</literal><operator pos:start="49:37" pos:end="49:37">*</operator><name pos:start="49:38" pos:end="49:38">y</name><operator pos:start="49:39" pos:end="49:39">*</operator><name pos:start="49:40" pos:end="49:50"><name pos:start="49:40" pos:end="49:40">h</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:50">b_stride</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:52"><decl pos:start="51:13" pos:end="51:51"><type pos:start="51:13" pos:end="51:21"><specifier pos:start="51:13" pos:end="51:17">const</specifier> <name pos:start="51:19" pos:end="51:21">int</name></type> <name pos:start="51:23" pos:end="51:27">b8_xy</name><init pos:start="51:28" pos:end="51:51">= <expr pos:start="51:30" pos:end="51:51"><literal type="number" pos:start="51:30" pos:end="51:30">2</literal><operator pos:start="51:31" pos:end="51:31">*</operator><name pos:start="51:32" pos:end="51:32">x</name> <operator pos:start="51:34" pos:end="51:34">+</operator> <literal type="number" pos:start="51:36" pos:end="51:36">2</literal><operator pos:start="51:37" pos:end="51:37">*</operator><name pos:start="51:38" pos:end="51:38">y</name><operator pos:start="51:39" pos:end="51:39">*</operator><name pos:start="51:40" pos:end="51:51"><name pos:start="51:40" pos:end="51:40">h</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:51">b8_stride</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:37"><expr pos:start="55:13" pos:end="55:36"><name pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:13">h</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:22">mb2b_xy</name> <index pos:start="55:24" pos:end="55:30">[<expr pos:start="55:25" pos:end="55:29"><name pos:start="55:25" pos:end="55:29">mb_xy</name></expr>]</index></name><operator pos:start="55:31" pos:end="55:31">=</operator> <name pos:start="55:33" pos:end="55:36">b_xy</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:38"><expr pos:start="57:13" pos:end="57:37"><name pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:13">h</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:23">mb2b8_xy</name><index pos:start="57:24" pos:end="57:30">[<expr pos:start="57:25" pos:end="57:29"><name pos:start="57:25" pos:end="57:29">mb_xy</name></expr>]</index></name><operator pos:start="57:31" pos:end="57:31">=</operator> <name pos:start="57:33" pos:end="57:37">b8_xy</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="65:5" pos:end="65:30"><expr pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:22">obmc_scratchpad</name></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:29">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="71:31"><if pos:start="69:5" pos:end="71:31">if<condition pos:start="69:7" pos:end="69:29">(<expr pos:start="69:8" pos:end="69:28"><operator pos:start="69:8" pos:end="69:8">!</operator><name pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:9">h</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:25">dequant4_coeff</name><index pos:start="69:26" pos:end="69:28">[<expr pos:start="69:27" pos:end="69:27"><literal type="number" pos:start="69:27" pos:end="69:27">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:31"><block_content pos:start="71:9" pos:end="71:31">

        <expr_stmt pos:start="71:9" pos:end="71:31"><expr pos:start="71:9" pos:end="71:30"><call pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:27">init_dequant_tables</name><argument_list pos:start="71:28" pos:end="71:30">(<argument pos:start="71:29" pos:end="71:29"><expr pos:start="71:29" pos:end="71:29"><name pos:start="71:29" pos:end="71:29">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</return>

<label pos:start="77:1" pos:end="77:5"><name pos:start="77:1" pos:end="77:4">fail</name>:</label>

    <expr_stmt pos:start="79:5" pos:end="79:19"><expr pos:start="79:5" pos:end="79:18"><call pos:start="79:5" pos:end="79:18"><name pos:start="79:5" pos:end="79:15">free_tables</name><argument_list pos:start="79:16" pos:end="79:18">(<argument pos:start="79:17" pos:end="79:17"><expr pos:start="79:17" pos:end="79:17"><name pos:start="79:17" pos:end="79:17">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:14">return <expr pos:start="81:12" pos:end="81:13"><operator pos:start="81:12" pos:end="81:12">-</operator><literal type="number" pos:start="81:13" pos:end="81:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
