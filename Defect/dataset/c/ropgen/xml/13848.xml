<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13848.c" pos:tabs="8"><function pos:start="1:1" pos:end="247:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">gen_ld</name> <parameter_list pos:start="1:20" pos:end="3:53">(<parameter pos:start="1:21" pos:end="1:37"><decl pos:start="1:21" pos:end="1:37"><type pos:start="1:21" pos:end="1:37"><name pos:start="1:21" pos:end="1:32">CPUMIPSState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:51">DisasContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">ctx</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:66">uint32_t</name></type> <name pos:start="1:68" pos:end="1:70">opc</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:26"><decl pos:start="3:21" pos:end="3:26"><type pos:start="3:21" pos:end="3:26"><name pos:start="3:21" pos:end="3:23">int</name></type> <name pos:start="3:25" pos:end="3:26">rt</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:36"><decl pos:start="3:29" pos:end="3:36"><type pos:start="3:29" pos:end="3:36"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:36">base</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:52"><decl pos:start="3:39" pos:end="3:52"><type pos:start="3:39" pos:end="3:52"><name pos:start="3:39" pos:end="3:45">int16_t</name></type> <name pos:start="3:47" pos:end="3:52">offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="247:1">{<block_content pos:start="7:5" pos:end="245:22">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">opn</name> <init pos:start="7:21" pos:end="7:26">= <expr pos:start="7:23" pos:end="7:26"><literal type="string" pos:start="7:23" pos:end="7:26">"ld"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:11">t0</name></decl>, <decl pos:start="9:14" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:8"/><name pos:start="9:14" pos:end="9:15">t1</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:73">(<expr pos:start="13:9" pos:end="13:72"><name pos:start="13:9" pos:end="13:10">rt</name> <operator pos:start="13:12" pos:end="13:13">==</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal> <operator pos:start="13:17" pos:end="13:18">&amp;&amp;</operator> <name pos:start="13:20" pos:end="13:34"><name pos:start="13:20" pos:end="13:22">env</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:34">insn_flags</name></name> <operator pos:start="13:36" pos:end="13:36">&amp;</operator> <operator pos:start="13:38" pos:end="13:38">(</operator><name pos:start="13:39" pos:end="13:53">INSN_LOONGSON2E</name> <operator pos:start="13:55" pos:end="13:55">|</operator> <name pos:start="13:57" pos:end="13:71">INSN_LOONGSON2F</name><operator pos:start="13:72" pos:end="13:72">)</operator></expr>)</condition> <block pos:start="13:75" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <comment type="block" pos:start="15:9" pos:end="19:35">/* Loongson CPU uses a load to zero register for prefetch.

           We emulate it as a NOP. On other CPU we must perform the

           actual memory access. */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><call pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:18">MIPS_DEBUG</name><argument_list pos:start="21:19" pos:end="21:25">(<argument pos:start="21:20" pos:end="21:24"><expr pos:start="21:20" pos:end="21:24"><literal type="string" pos:start="21:20" pos:end="21:24">"NOP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:6">t0</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:23"><name pos:start="29:10" pos:end="29:21">tcg_temp_new</name><argument_list pos:start="29:22" pos:end="29:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><call pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:24">gen_base_offset_addr</name><argument_list pos:start="31:25" pos:end="31:47">(<argument pos:start="31:26" pos:end="31:28"><expr pos:start="31:26" pos:end="31:28"><name pos:start="31:26" pos:end="31:28">ctx</name></expr></argument>, <argument pos:start="31:31" pos:end="31:32"><expr pos:start="31:31" pos:end="31:32"><name pos:start="31:31" pos:end="31:32">t0</name></expr></argument>, <argument pos:start="31:35" pos:end="31:38"><expr pos:start="31:35" pos:end="31:38"><name pos:start="31:35" pos:end="31:38">base</name></expr></argument>, <argument pos:start="31:41" pos:end="31:46"><expr pos:start="31:41" pos:end="31:46"><name pos:start="31:41" pos:end="31:46">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="35:5" pos:end="239:5">switch <condition pos:start="35:12" pos:end="35:16">(<expr pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">opc</name></expr>)</condition> <block pos:start="35:18" pos:end="239:5">{<block_content pos:start="39:5" pos:end="237:14">

<cpp:if pos:start="37:1" pos:end="37:26">#<cpp:directive pos:start="37:2" pos:end="37:3">if</cpp:directive> <expr pos:start="37:5" pos:end="37:26"><call pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:11">defined</name><argument_list pos:start="37:12" pos:end="37:26">(<argument pos:start="37:13" pos:end="37:25"><expr pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="39:5" pos:end="39:17">case <expr pos:start="39:10" pos:end="39:16"><name pos:start="39:10" pos:end="39:16">OPC_LWU</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:26">tcg_gen_qemu_ld32u</name><argument_list pos:start="41:27" pos:end="41:48">(<argument pos:start="41:28" pos:end="41:29"><expr pos:start="41:28" pos:end="41:29"><name pos:start="41:28" pos:end="41:29">t0</name></expr></argument>, <argument pos:start="41:32" pos:end="41:33"><expr pos:start="41:32" pos:end="41:33"><name pos:start="41:32" pos:end="41:33">t0</name></expr></argument>, <argument pos:start="41:36" pos:end="41:47"><expr pos:start="41:36" pos:end="41:47"><name pos:start="41:36" pos:end="41:47"><name pos:start="41:36" pos:end="41:38">ctx</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:47">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><call pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:21">gen_store_gpr</name><argument_list pos:start="43:22" pos:end="43:29">(<argument pos:start="43:23" pos:end="43:24"><expr pos:start="43:23" pos:end="43:24"><name pos:start="43:23" pos:end="43:24">t0</name></expr></argument>, <argument pos:start="43:27" pos:end="43:28"><expr pos:start="43:27" pos:end="43:28"><name pos:start="43:27" pos:end="43:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:20"><expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:11">opn</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <literal type="string" pos:start="45:15" pos:end="45:19">"lwu"</literal></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:16">case <expr pos:start="49:10" pos:end="49:15"><name pos:start="49:10" pos:end="49:15">OPC_LD</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:48"><expr pos:start="51:9" pos:end="51:47"><call pos:start="51:9" pos:end="51:47"><name pos:start="51:9" pos:end="51:25">tcg_gen_qemu_ld64</name><argument_list pos:start="51:26" pos:end="51:47">(<argument pos:start="51:27" pos:end="51:28"><expr pos:start="51:27" pos:end="51:28"><name pos:start="51:27" pos:end="51:28">t0</name></expr></argument>, <argument pos:start="51:31" pos:end="51:32"><expr pos:start="51:31" pos:end="51:32"><name pos:start="51:31" pos:end="51:32">t0</name></expr></argument>, <argument pos:start="51:35" pos:end="51:46"><expr pos:start="51:35" pos:end="51:46"><name pos:start="51:35" pos:end="51:46"><name pos:start="51:35" pos:end="51:37">ctx</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:46">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><call pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:21">gen_store_gpr</name><argument_list pos:start="53:22" pos:end="53:29">(<argument pos:start="53:23" pos:end="53:24"><expr pos:start="53:23" pos:end="53:24"><name pos:start="53:23" pos:end="53:24">t0</name></expr></argument>, <argument pos:start="53:27" pos:end="53:28"><expr pos:start="53:27" pos:end="53:28"><name pos:start="53:27" pos:end="53:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:19"><expr pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">opn</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <literal type="string" pos:start="55:15" pos:end="55:18">"ld"</literal></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:17">case <expr pos:start="59:10" pos:end="59:16"><name pos:start="59:10" pos:end="59:16">OPC_LLD</name></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><call pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:22">save_cpu_state</name><argument_list pos:start="61:23" pos:end="61:30">(<argument pos:start="61:24" pos:end="61:26"><expr pos:start="61:24" pos:end="61:26"><name pos:start="61:24" pos:end="61:26">ctx</name></expr></argument>, <argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><literal type="number" pos:start="61:29" pos:end="61:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><call pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:17">op_ld_lld</name><argument_list pos:start="63:18" pos:end="63:30">(<argument pos:start="63:19" pos:end="63:20"><expr pos:start="63:19" pos:end="63:20"><name pos:start="63:19" pos:end="63:20">t0</name></expr></argument>, <argument pos:start="63:23" pos:end="63:24"><expr pos:start="63:23" pos:end="63:24"><name pos:start="63:23" pos:end="63:24">t0</name></expr></argument>, <argument pos:start="63:27" pos:end="63:29"><expr pos:start="63:27" pos:end="63:29"><name pos:start="63:27" pos:end="63:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><call pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:21">gen_store_gpr</name><argument_list pos:start="65:22" pos:end="65:29">(<argument pos:start="65:23" pos:end="65:24"><expr pos:start="65:23" pos:end="65:24"><name pos:start="65:23" pos:end="65:24">t0</name></expr></argument>, <argument pos:start="65:27" pos:end="65:28"><expr pos:start="65:27" pos:end="65:28"><name pos:start="65:27" pos:end="65:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:20"><expr pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:11">opn</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <literal type="string" pos:start="67:15" pos:end="67:19">"lld"</literal></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:17">case <expr pos:start="71:10" pos:end="71:16"><name pos:start="71:10" pos:end="71:16">OPC_LDL</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:31"><expr pos:start="73:9" pos:end="73:30"><call pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:22">save_cpu_state</name><argument_list pos:start="73:23" pos:end="73:30">(<argument pos:start="73:24" pos:end="73:26"><expr pos:start="73:24" pos:end="73:26"><name pos:start="73:24" pos:end="73:26">ctx</name></expr></argument>, <argument pos:start="73:29" pos:end="73:29"><expr pos:start="73:29" pos:end="73:29"><literal type="number" pos:start="73:29" pos:end="73:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:28"><expr pos:start="75:9" pos:end="75:27"><name pos:start="75:9" pos:end="75:10">t1</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <call pos:start="75:14" pos:end="75:27"><name pos:start="75:14" pos:end="75:25">tcg_temp_new</name><argument_list pos:start="75:26" pos:end="75:27">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:29"><expr pos:start="77:9" pos:end="77:28"><call pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:20">gen_load_gpr</name><argument_list pos:start="77:21" pos:end="77:28">(<argument pos:start="77:22" pos:end="77:23"><expr pos:start="77:22" pos:end="77:23"><name pos:start="77:22" pos:end="77:23">t1</name></expr></argument>, <argument pos:start="77:26" pos:end="77:27"><expr pos:start="77:26" pos:end="77:27"><name pos:start="77:26" pos:end="77:27">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:55"><expr pos:start="79:9" pos:end="79:54"><call pos:start="79:9" pos:end="79:54"><name pos:start="79:9" pos:end="79:23">gen_helper_1e2i</name><argument_list pos:start="79:24" pos:end="79:54">(<argument pos:start="79:25" pos:end="79:27"><expr pos:start="79:25" pos:end="79:27"><name pos:start="79:25" pos:end="79:27">ldl</name></expr></argument>, <argument pos:start="79:30" pos:end="79:31"><expr pos:start="79:30" pos:end="79:31"><name pos:start="79:30" pos:end="79:31">t1</name></expr></argument>, <argument pos:start="79:34" pos:end="79:35"><expr pos:start="79:34" pos:end="79:35"><name pos:start="79:34" pos:end="79:35">t1</name></expr></argument>, <argument pos:start="79:38" pos:end="79:39"><expr pos:start="79:38" pos:end="79:39"><name pos:start="79:38" pos:end="79:39">t0</name></expr></argument>, <argument pos:start="79:42" pos:end="79:53"><expr pos:start="79:42" pos:end="79:53"><name pos:start="79:42" pos:end="79:53"><name pos:start="79:42" pos:end="79:44">ctx</name><operator pos:start="79:45" pos:end="79:46">-&gt;</operator><name pos:start="79:47" pos:end="79:53">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><call pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:21">gen_store_gpr</name><argument_list pos:start="81:22" pos:end="81:29">(<argument pos:start="81:23" pos:end="81:24"><expr pos:start="81:23" pos:end="81:24"><name pos:start="81:23" pos:end="81:24">t1</name></expr></argument>, <argument pos:start="81:27" pos:end="81:28"><expr pos:start="81:27" pos:end="81:28"><name pos:start="81:27" pos:end="81:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:26"><expr pos:start="83:9" pos:end="83:25"><call pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:21">tcg_temp_free</name><argument_list pos:start="83:22" pos:end="83:25">(<argument pos:start="83:23" pos:end="83:24"><expr pos:start="83:23" pos:end="83:24"><name pos:start="83:23" pos:end="83:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:20"><expr pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:11">opn</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <literal type="string" pos:start="85:15" pos:end="85:19">"ldl"</literal></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:17">case <expr pos:start="89:10" pos:end="89:16"><name pos:start="89:10" pos:end="89:16">OPC_LDR</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:31"><expr pos:start="91:9" pos:end="91:30"><call pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:22">save_cpu_state</name><argument_list pos:start="91:23" pos:end="91:30">(<argument pos:start="91:24" pos:end="91:26"><expr pos:start="91:24" pos:end="91:26"><name pos:start="91:24" pos:end="91:26">ctx</name></expr></argument>, <argument pos:start="91:29" pos:end="91:29"><expr pos:start="91:29" pos:end="91:29"><literal type="number" pos:start="91:29" pos:end="91:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:28"><expr pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:10">t1</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <call pos:start="93:14" pos:end="93:27"><name pos:start="93:14" pos:end="93:25">tcg_temp_new</name><argument_list pos:start="93:26" pos:end="93:27">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><call pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:20">gen_load_gpr</name><argument_list pos:start="95:21" pos:end="95:28">(<argument pos:start="95:22" pos:end="95:23"><expr pos:start="95:22" pos:end="95:23"><name pos:start="95:22" pos:end="95:23">t1</name></expr></argument>, <argument pos:start="95:26" pos:end="95:27"><expr pos:start="95:26" pos:end="95:27"><name pos:start="95:26" pos:end="95:27">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:55"><expr pos:start="97:9" pos:end="97:54"><call pos:start="97:9" pos:end="97:54"><name pos:start="97:9" pos:end="97:23">gen_helper_1e2i</name><argument_list pos:start="97:24" pos:end="97:54">(<argument pos:start="97:25" pos:end="97:27"><expr pos:start="97:25" pos:end="97:27"><name pos:start="97:25" pos:end="97:27">ldr</name></expr></argument>, <argument pos:start="97:30" pos:end="97:31"><expr pos:start="97:30" pos:end="97:31"><name pos:start="97:30" pos:end="97:31">t1</name></expr></argument>, <argument pos:start="97:34" pos:end="97:35"><expr pos:start="97:34" pos:end="97:35"><name pos:start="97:34" pos:end="97:35">t1</name></expr></argument>, <argument pos:start="97:38" pos:end="97:39"><expr pos:start="97:38" pos:end="97:39"><name pos:start="97:38" pos:end="97:39">t0</name></expr></argument>, <argument pos:start="97:42" pos:end="97:53"><expr pos:start="97:42" pos:end="97:53"><name pos:start="97:42" pos:end="97:53"><name pos:start="97:42" pos:end="97:44">ctx</name><operator pos:start="97:45" pos:end="97:46">-&gt;</operator><name pos:start="97:47" pos:end="97:53">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:30"><expr pos:start="99:9" pos:end="99:29"><call pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:21">gen_store_gpr</name><argument_list pos:start="99:22" pos:end="99:29">(<argument pos:start="99:23" pos:end="99:24"><expr pos:start="99:23" pos:end="99:24"><name pos:start="99:23" pos:end="99:24">t1</name></expr></argument>, <argument pos:start="99:27" pos:end="99:28"><expr pos:start="99:27" pos:end="99:28"><name pos:start="99:27" pos:end="99:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:26"><expr pos:start="101:9" pos:end="101:25"><call pos:start="101:9" pos:end="101:25"><name pos:start="101:9" pos:end="101:21">tcg_temp_free</name><argument_list pos:start="101:22" pos:end="101:25">(<argument pos:start="101:23" pos:end="101:24"><expr pos:start="101:23" pos:end="101:24"><name pos:start="101:23" pos:end="101:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:20"><expr pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:11">opn</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <literal type="string" pos:start="103:15" pos:end="103:19">"ldr"</literal></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:18">case <expr pos:start="107:10" pos:end="107:17"><name pos:start="107:10" pos:end="107:17">OPC_LDPC</name></expr>:</case>

        <expr_stmt pos:start="109:9" pos:end="109:47"><expr pos:start="109:9" pos:end="109:46"><name pos:start="109:9" pos:end="109:10">t1</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <call pos:start="109:14" pos:end="109:46"><name pos:start="109:14" pos:end="109:25">tcg_const_tl</name><argument_list pos:start="109:26" pos:end="109:46">(<argument pos:start="109:27" pos:end="109:45"><expr pos:start="109:27" pos:end="109:45"><call pos:start="109:27" pos:end="109:45"><name pos:start="109:27" pos:end="109:40">pc_relative_pc</name><argument_list pos:start="109:41" pos:end="109:45">(<argument pos:start="109:42" pos:end="109:44"><expr pos:start="109:42" pos:end="109:44"><name pos:start="109:42" pos:end="109:44">ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:41"><expr pos:start="111:9" pos:end="111:40"><call pos:start="111:9" pos:end="111:40"><name pos:start="111:9" pos:end="111:23">gen_op_addr_add</name><argument_list pos:start="111:24" pos:end="111:40">(<argument pos:start="111:25" pos:end="111:27"><expr pos:start="111:25" pos:end="111:27"><name pos:start="111:25" pos:end="111:27">ctx</name></expr></argument>, <argument pos:start="111:30" pos:end="111:31"><expr pos:start="111:30" pos:end="111:31"><name pos:start="111:30" pos:end="111:31">t0</name></expr></argument>, <argument pos:start="111:34" pos:end="111:35"><expr pos:start="111:34" pos:end="111:35"><name pos:start="111:34" pos:end="111:35">t0</name></expr></argument>, <argument pos:start="111:38" pos:end="111:39"><expr pos:start="111:38" pos:end="111:39"><name pos:start="111:38" pos:end="111:39">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:26"><expr pos:start="113:9" pos:end="113:25"><call pos:start="113:9" pos:end="113:25"><name pos:start="113:9" pos:end="113:21">tcg_temp_free</name><argument_list pos:start="113:22" pos:end="113:25">(<argument pos:start="113:23" pos:end="113:24"><expr pos:start="113:23" pos:end="113:24"><name pos:start="113:23" pos:end="113:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:48"><expr pos:start="115:9" pos:end="115:47"><call pos:start="115:9" pos:end="115:47"><name pos:start="115:9" pos:end="115:25">tcg_gen_qemu_ld64</name><argument_list pos:start="115:26" pos:end="115:47">(<argument pos:start="115:27" pos:end="115:28"><expr pos:start="115:27" pos:end="115:28"><name pos:start="115:27" pos:end="115:28">t0</name></expr></argument>, <argument pos:start="115:31" pos:end="115:32"><expr pos:start="115:31" pos:end="115:32"><name pos:start="115:31" pos:end="115:32">t0</name></expr></argument>, <argument pos:start="115:35" pos:end="115:46"><expr pos:start="115:35" pos:end="115:46"><name pos:start="115:35" pos:end="115:46"><name pos:start="115:35" pos:end="115:37">ctx</name><operator pos:start="115:38" pos:end="115:39">-&gt;</operator><name pos:start="115:40" pos:end="115:46">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:30"><expr pos:start="117:9" pos:end="117:29"><call pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:21">gen_store_gpr</name><argument_list pos:start="117:22" pos:end="117:29">(<argument pos:start="117:23" pos:end="117:24"><expr pos:start="117:23" pos:end="117:24"><name pos:start="117:23" pos:end="117:24">t0</name></expr></argument>, <argument pos:start="117:27" pos:end="117:28"><expr pos:start="117:27" pos:end="117:28"><name pos:start="117:27" pos:end="117:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:21"><expr pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:11">opn</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <literal type="string" pos:start="119:15" pos:end="119:20">"ldpc"</literal></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="124:0">break;</break>

<cpp:endif pos:start="123:1" pos:end="123:6">#<cpp:directive pos:start="123:2" pos:end="123:6">endif</cpp:directive></cpp:endif>

    <case pos:start="125:5" pos:end="125:18">case <expr pos:start="125:10" pos:end="125:17"><name pos:start="125:10" pos:end="125:17">OPC_LWPC</name></expr>:</case>

        <expr_stmt pos:start="127:9" pos:end="127:47"><expr pos:start="127:9" pos:end="127:46"><name pos:start="127:9" pos:end="127:10">t1</name> <operator pos:start="127:12" pos:end="127:12">=</operator> <call pos:start="127:14" pos:end="127:46"><name pos:start="127:14" pos:end="127:25">tcg_const_tl</name><argument_list pos:start="127:26" pos:end="127:46">(<argument pos:start="127:27" pos:end="127:45"><expr pos:start="127:27" pos:end="127:45"><call pos:start="127:27" pos:end="127:45"><name pos:start="127:27" pos:end="127:40">pc_relative_pc</name><argument_list pos:start="127:41" pos:end="127:45">(<argument pos:start="127:42" pos:end="127:44"><expr pos:start="127:42" pos:end="127:44"><name pos:start="127:42" pos:end="127:44">ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:41"><expr pos:start="129:9" pos:end="129:40"><call pos:start="129:9" pos:end="129:40"><name pos:start="129:9" pos:end="129:23">gen_op_addr_add</name><argument_list pos:start="129:24" pos:end="129:40">(<argument pos:start="129:25" pos:end="129:27"><expr pos:start="129:25" pos:end="129:27"><name pos:start="129:25" pos:end="129:27">ctx</name></expr></argument>, <argument pos:start="129:30" pos:end="129:31"><expr pos:start="129:30" pos:end="129:31"><name pos:start="129:30" pos:end="129:31">t0</name></expr></argument>, <argument pos:start="129:34" pos:end="129:35"><expr pos:start="129:34" pos:end="129:35"><name pos:start="129:34" pos:end="129:35">t0</name></expr></argument>, <argument pos:start="129:38" pos:end="129:39"><expr pos:start="129:38" pos:end="129:39"><name pos:start="129:38" pos:end="129:39">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:26"><expr pos:start="131:9" pos:end="131:25"><call pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:21">tcg_temp_free</name><argument_list pos:start="131:22" pos:end="131:25">(<argument pos:start="131:23" pos:end="131:24"><expr pos:start="131:23" pos:end="131:24"><name pos:start="131:23" pos:end="131:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:49"><expr pos:start="133:9" pos:end="133:48"><call pos:start="133:9" pos:end="133:48"><name pos:start="133:9" pos:end="133:26">tcg_gen_qemu_ld32s</name><argument_list pos:start="133:27" pos:end="133:48">(<argument pos:start="133:28" pos:end="133:29"><expr pos:start="133:28" pos:end="133:29"><name pos:start="133:28" pos:end="133:29">t0</name></expr></argument>, <argument pos:start="133:32" pos:end="133:33"><expr pos:start="133:32" pos:end="133:33"><name pos:start="133:32" pos:end="133:33">t0</name></expr></argument>, <argument pos:start="133:36" pos:end="133:47"><expr pos:start="133:36" pos:end="133:47"><name pos:start="133:36" pos:end="133:47"><name pos:start="133:36" pos:end="133:38">ctx</name><operator pos:start="133:39" pos:end="133:40">-&gt;</operator><name pos:start="133:41" pos:end="133:47">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:30"><expr pos:start="135:9" pos:end="135:29"><call pos:start="135:9" pos:end="135:29"><name pos:start="135:9" pos:end="135:21">gen_store_gpr</name><argument_list pos:start="135:22" pos:end="135:29">(<argument pos:start="135:23" pos:end="135:24"><expr pos:start="135:23" pos:end="135:24"><name pos:start="135:23" pos:end="135:24">t0</name></expr></argument>, <argument pos:start="135:27" pos:end="135:28"><expr pos:start="135:27" pos:end="135:28"><name pos:start="135:27" pos:end="135:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:21"><expr pos:start="137:9" pos:end="137:20"><name pos:start="137:9" pos:end="137:11">opn</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <literal type="string" pos:start="137:15" pos:end="137:20">"lwpc"</literal></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <case pos:start="141:5" pos:end="141:16">case <expr pos:start="141:10" pos:end="141:15"><name pos:start="141:10" pos:end="141:15">OPC_LW</name></expr>:</case>

        <expr_stmt pos:start="143:9" pos:end="143:49"><expr pos:start="143:9" pos:end="143:48"><call pos:start="143:9" pos:end="143:48"><name pos:start="143:9" pos:end="143:26">tcg_gen_qemu_ld32s</name><argument_list pos:start="143:27" pos:end="143:48">(<argument pos:start="143:28" pos:end="143:29"><expr pos:start="143:28" pos:end="143:29"><name pos:start="143:28" pos:end="143:29">t0</name></expr></argument>, <argument pos:start="143:32" pos:end="143:33"><expr pos:start="143:32" pos:end="143:33"><name pos:start="143:32" pos:end="143:33">t0</name></expr></argument>, <argument pos:start="143:36" pos:end="143:47"><expr pos:start="143:36" pos:end="143:47"><name pos:start="143:36" pos:end="143:47"><name pos:start="143:36" pos:end="143:38">ctx</name><operator pos:start="143:39" pos:end="143:40">-&gt;</operator><name pos:start="143:41" pos:end="143:47">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:30"><expr pos:start="145:9" pos:end="145:29"><call pos:start="145:9" pos:end="145:29"><name pos:start="145:9" pos:end="145:21">gen_store_gpr</name><argument_list pos:start="145:22" pos:end="145:29">(<argument pos:start="145:23" pos:end="145:24"><expr pos:start="145:23" pos:end="145:24"><name pos:start="145:23" pos:end="145:24">t0</name></expr></argument>, <argument pos:start="145:27" pos:end="145:28"><expr pos:start="145:27" pos:end="145:28"><name pos:start="145:27" pos:end="145:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:19"><expr pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:11">opn</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <literal type="string" pos:start="147:15" pos:end="147:18">"lw"</literal></expr>;</expr_stmt>

        <break pos:start="149:9" pos:end="149:14">break;</break>

    <case pos:start="151:5" pos:end="151:16">case <expr pos:start="151:10" pos:end="151:15"><name pos:start="151:10" pos:end="151:15">OPC_LH</name></expr>:</case>

        <expr_stmt pos:start="153:9" pos:end="153:49"><expr pos:start="153:9" pos:end="153:48"><call pos:start="153:9" pos:end="153:48"><name pos:start="153:9" pos:end="153:26">tcg_gen_qemu_ld16s</name><argument_list pos:start="153:27" pos:end="153:48">(<argument pos:start="153:28" pos:end="153:29"><expr pos:start="153:28" pos:end="153:29"><name pos:start="153:28" pos:end="153:29">t0</name></expr></argument>, <argument pos:start="153:32" pos:end="153:33"><expr pos:start="153:32" pos:end="153:33"><name pos:start="153:32" pos:end="153:33">t0</name></expr></argument>, <argument pos:start="153:36" pos:end="153:47"><expr pos:start="153:36" pos:end="153:47"><name pos:start="153:36" pos:end="153:47"><name pos:start="153:36" pos:end="153:38">ctx</name><operator pos:start="153:39" pos:end="153:40">-&gt;</operator><name pos:start="153:41" pos:end="153:47">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:30"><expr pos:start="155:9" pos:end="155:29"><call pos:start="155:9" pos:end="155:29"><name pos:start="155:9" pos:end="155:21">gen_store_gpr</name><argument_list pos:start="155:22" pos:end="155:29">(<argument pos:start="155:23" pos:end="155:24"><expr pos:start="155:23" pos:end="155:24"><name pos:start="155:23" pos:end="155:24">t0</name></expr></argument>, <argument pos:start="155:27" pos:end="155:28"><expr pos:start="155:27" pos:end="155:28"><name pos:start="155:27" pos:end="155:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:19"><expr pos:start="157:9" pos:end="157:18"><name pos:start="157:9" pos:end="157:11">opn</name> <operator pos:start="157:13" pos:end="157:13">=</operator> <literal type="string" pos:start="157:15" pos:end="157:18">"lh"</literal></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <case pos:start="161:5" pos:end="161:17">case <expr pos:start="161:10" pos:end="161:16"><name pos:start="161:10" pos:end="161:16">OPC_LHU</name></expr>:</case>

        <expr_stmt pos:start="163:9" pos:end="163:49"><expr pos:start="163:9" pos:end="163:48"><call pos:start="163:9" pos:end="163:48"><name pos:start="163:9" pos:end="163:26">tcg_gen_qemu_ld16u</name><argument_list pos:start="163:27" pos:end="163:48">(<argument pos:start="163:28" pos:end="163:29"><expr pos:start="163:28" pos:end="163:29"><name pos:start="163:28" pos:end="163:29">t0</name></expr></argument>, <argument pos:start="163:32" pos:end="163:33"><expr pos:start="163:32" pos:end="163:33"><name pos:start="163:32" pos:end="163:33">t0</name></expr></argument>, <argument pos:start="163:36" pos:end="163:47"><expr pos:start="163:36" pos:end="163:47"><name pos:start="163:36" pos:end="163:47"><name pos:start="163:36" pos:end="163:38">ctx</name><operator pos:start="163:39" pos:end="163:40">-&gt;</operator><name pos:start="163:41" pos:end="163:47">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:30"><expr pos:start="165:9" pos:end="165:29"><call pos:start="165:9" pos:end="165:29"><name pos:start="165:9" pos:end="165:21">gen_store_gpr</name><argument_list pos:start="165:22" pos:end="165:29">(<argument pos:start="165:23" pos:end="165:24"><expr pos:start="165:23" pos:end="165:24"><name pos:start="165:23" pos:end="165:24">t0</name></expr></argument>, <argument pos:start="165:27" pos:end="165:28"><expr pos:start="165:27" pos:end="165:28"><name pos:start="165:27" pos:end="165:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:20"><expr pos:start="167:9" pos:end="167:19"><name pos:start="167:9" pos:end="167:11">opn</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <literal type="string" pos:start="167:15" pos:end="167:19">"lhu"</literal></expr>;</expr_stmt>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    <case pos:start="171:5" pos:end="171:16">case <expr pos:start="171:10" pos:end="171:15"><name pos:start="171:10" pos:end="171:15">OPC_LB</name></expr>:</case>

        <expr_stmt pos:start="173:9" pos:end="173:48"><expr pos:start="173:9" pos:end="173:47"><call pos:start="173:9" pos:end="173:47"><name pos:start="173:9" pos:end="173:25">tcg_gen_qemu_ld8s</name><argument_list pos:start="173:26" pos:end="173:47">(<argument pos:start="173:27" pos:end="173:28"><expr pos:start="173:27" pos:end="173:28"><name pos:start="173:27" pos:end="173:28">t0</name></expr></argument>, <argument pos:start="173:31" pos:end="173:32"><expr pos:start="173:31" pos:end="173:32"><name pos:start="173:31" pos:end="173:32">t0</name></expr></argument>, <argument pos:start="173:35" pos:end="173:46"><expr pos:start="173:35" pos:end="173:46"><name pos:start="173:35" pos:end="173:46"><name pos:start="173:35" pos:end="173:37">ctx</name><operator pos:start="173:38" pos:end="173:39">-&gt;</operator><name pos:start="173:40" pos:end="173:46">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:30"><expr pos:start="175:9" pos:end="175:29"><call pos:start="175:9" pos:end="175:29"><name pos:start="175:9" pos:end="175:21">gen_store_gpr</name><argument_list pos:start="175:22" pos:end="175:29">(<argument pos:start="175:23" pos:end="175:24"><expr pos:start="175:23" pos:end="175:24"><name pos:start="175:23" pos:end="175:24">t0</name></expr></argument>, <argument pos:start="175:27" pos:end="175:28"><expr pos:start="175:27" pos:end="175:28"><name pos:start="175:27" pos:end="175:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:19"><expr pos:start="177:9" pos:end="177:18"><name pos:start="177:9" pos:end="177:11">opn</name> <operator pos:start="177:13" pos:end="177:13">=</operator> <literal type="string" pos:start="177:15" pos:end="177:18">"lb"</literal></expr>;</expr_stmt>

        <break pos:start="179:9" pos:end="179:14">break;</break>

    <case pos:start="181:5" pos:end="181:17">case <expr pos:start="181:10" pos:end="181:16"><name pos:start="181:10" pos:end="181:16">OPC_LBU</name></expr>:</case>

        <expr_stmt pos:start="183:9" pos:end="183:48"><expr pos:start="183:9" pos:end="183:47"><call pos:start="183:9" pos:end="183:47"><name pos:start="183:9" pos:end="183:25">tcg_gen_qemu_ld8u</name><argument_list pos:start="183:26" pos:end="183:47">(<argument pos:start="183:27" pos:end="183:28"><expr pos:start="183:27" pos:end="183:28"><name pos:start="183:27" pos:end="183:28">t0</name></expr></argument>, <argument pos:start="183:31" pos:end="183:32"><expr pos:start="183:31" pos:end="183:32"><name pos:start="183:31" pos:end="183:32">t0</name></expr></argument>, <argument pos:start="183:35" pos:end="183:46"><expr pos:start="183:35" pos:end="183:46"><name pos:start="183:35" pos:end="183:46"><name pos:start="183:35" pos:end="183:37">ctx</name><operator pos:start="183:38" pos:end="183:39">-&gt;</operator><name pos:start="183:40" pos:end="183:46">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:30"><expr pos:start="185:9" pos:end="185:29"><call pos:start="185:9" pos:end="185:29"><name pos:start="185:9" pos:end="185:21">gen_store_gpr</name><argument_list pos:start="185:22" pos:end="185:29">(<argument pos:start="185:23" pos:end="185:24"><expr pos:start="185:23" pos:end="185:24"><name pos:start="185:23" pos:end="185:24">t0</name></expr></argument>, <argument pos:start="185:27" pos:end="185:28"><expr pos:start="185:27" pos:end="185:28"><name pos:start="185:27" pos:end="185:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:20"><expr pos:start="187:9" pos:end="187:19"><name pos:start="187:9" pos:end="187:11">opn</name> <operator pos:start="187:13" pos:end="187:13">=</operator> <literal type="string" pos:start="187:15" pos:end="187:19">"lbu"</literal></expr>;</expr_stmt>

        <break pos:start="189:9" pos:end="189:14">break;</break>

    <case pos:start="191:5" pos:end="191:17">case <expr pos:start="191:10" pos:end="191:16"><name pos:start="191:10" pos:end="191:16">OPC_LWL</name></expr>:</case>

        <expr_stmt pos:start="193:9" pos:end="193:31"><expr pos:start="193:9" pos:end="193:30"><call pos:start="193:9" pos:end="193:30"><name pos:start="193:9" pos:end="193:22">save_cpu_state</name><argument_list pos:start="193:23" pos:end="193:30">(<argument pos:start="193:24" pos:end="193:26"><expr pos:start="193:24" pos:end="193:26"><name pos:start="193:24" pos:end="193:26">ctx</name></expr></argument>, <argument pos:start="193:29" pos:end="193:29"><expr pos:start="193:29" pos:end="193:29"><literal type="number" pos:start="193:29" pos:end="193:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:28"><expr pos:start="195:9" pos:end="195:27"><name pos:start="195:9" pos:end="195:10">t1</name> <operator pos:start="195:12" pos:end="195:12">=</operator> <call pos:start="195:14" pos:end="195:27"><name pos:start="195:14" pos:end="195:25">tcg_temp_new</name><argument_list pos:start="195:26" pos:end="195:27">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:29"><expr pos:start="197:9" pos:end="197:28"><call pos:start="197:9" pos:end="197:28"><name pos:start="197:9" pos:end="197:20">gen_load_gpr</name><argument_list pos:start="197:21" pos:end="197:28">(<argument pos:start="197:22" pos:end="197:23"><expr pos:start="197:22" pos:end="197:23"><name pos:start="197:22" pos:end="197:23">t1</name></expr></argument>, <argument pos:start="197:26" pos:end="197:27"><expr pos:start="197:26" pos:end="197:27"><name pos:start="197:26" pos:end="197:27">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:55"><expr pos:start="199:9" pos:end="199:54"><call pos:start="199:9" pos:end="199:54"><name pos:start="199:9" pos:end="199:23">gen_helper_1e2i</name><argument_list pos:start="199:24" pos:end="199:54">(<argument pos:start="199:25" pos:end="199:27"><expr pos:start="199:25" pos:end="199:27"><name pos:start="199:25" pos:end="199:27">lwl</name></expr></argument>, <argument pos:start="199:30" pos:end="199:31"><expr pos:start="199:30" pos:end="199:31"><name pos:start="199:30" pos:end="199:31">t1</name></expr></argument>, <argument pos:start="199:34" pos:end="199:35"><expr pos:start="199:34" pos:end="199:35"><name pos:start="199:34" pos:end="199:35">t1</name></expr></argument>, <argument pos:start="199:38" pos:end="199:39"><expr pos:start="199:38" pos:end="199:39"><name pos:start="199:38" pos:end="199:39">t0</name></expr></argument>, <argument pos:start="199:42" pos:end="199:53"><expr pos:start="199:42" pos:end="199:53"><name pos:start="199:42" pos:end="199:53"><name pos:start="199:42" pos:end="199:44">ctx</name><operator pos:start="199:45" pos:end="199:46">-&gt;</operator><name pos:start="199:47" pos:end="199:53">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:30"><expr pos:start="201:9" pos:end="201:29"><call pos:start="201:9" pos:end="201:29"><name pos:start="201:9" pos:end="201:21">gen_store_gpr</name><argument_list pos:start="201:22" pos:end="201:29">(<argument pos:start="201:23" pos:end="201:24"><expr pos:start="201:23" pos:end="201:24"><name pos:start="201:23" pos:end="201:24">t1</name></expr></argument>, <argument pos:start="201:27" pos:end="201:28"><expr pos:start="201:27" pos:end="201:28"><name pos:start="201:27" pos:end="201:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:26"><expr pos:start="203:9" pos:end="203:25"><call pos:start="203:9" pos:end="203:25"><name pos:start="203:9" pos:end="203:21">tcg_temp_free</name><argument_list pos:start="203:22" pos:end="203:25">(<argument pos:start="203:23" pos:end="203:24"><expr pos:start="203:23" pos:end="203:24"><name pos:start="203:23" pos:end="203:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:20"><expr pos:start="205:9" pos:end="205:19"><name pos:start="205:9" pos:end="205:11">opn</name> <operator pos:start="205:13" pos:end="205:13">=</operator> <literal type="string" pos:start="205:15" pos:end="205:19">"lwl"</literal></expr>;</expr_stmt>

        <break pos:start="207:9" pos:end="207:14">break;</break>

    <case pos:start="209:5" pos:end="209:17">case <expr pos:start="209:10" pos:end="209:16"><name pos:start="209:10" pos:end="209:16">OPC_LWR</name></expr>:</case>

        <expr_stmt pos:start="211:9" pos:end="211:31"><expr pos:start="211:9" pos:end="211:30"><call pos:start="211:9" pos:end="211:30"><name pos:start="211:9" pos:end="211:22">save_cpu_state</name><argument_list pos:start="211:23" pos:end="211:30">(<argument pos:start="211:24" pos:end="211:26"><expr pos:start="211:24" pos:end="211:26"><name pos:start="211:24" pos:end="211:26">ctx</name></expr></argument>, <argument pos:start="211:29" pos:end="211:29"><expr pos:start="211:29" pos:end="211:29"><literal type="number" pos:start="211:29" pos:end="211:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:28"><expr pos:start="213:9" pos:end="213:27"><name pos:start="213:9" pos:end="213:10">t1</name> <operator pos:start="213:12" pos:end="213:12">=</operator> <call pos:start="213:14" pos:end="213:27"><name pos:start="213:14" pos:end="213:25">tcg_temp_new</name><argument_list pos:start="213:26" pos:end="213:27">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:29"><expr pos:start="215:9" pos:end="215:28"><call pos:start="215:9" pos:end="215:28"><name pos:start="215:9" pos:end="215:20">gen_load_gpr</name><argument_list pos:start="215:21" pos:end="215:28">(<argument pos:start="215:22" pos:end="215:23"><expr pos:start="215:22" pos:end="215:23"><name pos:start="215:22" pos:end="215:23">t1</name></expr></argument>, <argument pos:start="215:26" pos:end="215:27"><expr pos:start="215:26" pos:end="215:27"><name pos:start="215:26" pos:end="215:27">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:55"><expr pos:start="217:9" pos:end="217:54"><call pos:start="217:9" pos:end="217:54"><name pos:start="217:9" pos:end="217:23">gen_helper_1e2i</name><argument_list pos:start="217:24" pos:end="217:54">(<argument pos:start="217:25" pos:end="217:27"><expr pos:start="217:25" pos:end="217:27"><name pos:start="217:25" pos:end="217:27">lwr</name></expr></argument>, <argument pos:start="217:30" pos:end="217:31"><expr pos:start="217:30" pos:end="217:31"><name pos:start="217:30" pos:end="217:31">t1</name></expr></argument>, <argument pos:start="217:34" pos:end="217:35"><expr pos:start="217:34" pos:end="217:35"><name pos:start="217:34" pos:end="217:35">t1</name></expr></argument>, <argument pos:start="217:38" pos:end="217:39"><expr pos:start="217:38" pos:end="217:39"><name pos:start="217:38" pos:end="217:39">t0</name></expr></argument>, <argument pos:start="217:42" pos:end="217:53"><expr pos:start="217:42" pos:end="217:53"><name pos:start="217:42" pos:end="217:53"><name pos:start="217:42" pos:end="217:44">ctx</name><operator pos:start="217:45" pos:end="217:46">-&gt;</operator><name pos:start="217:47" pos:end="217:53">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:30"><expr pos:start="219:9" pos:end="219:29"><call pos:start="219:9" pos:end="219:29"><name pos:start="219:9" pos:end="219:21">gen_store_gpr</name><argument_list pos:start="219:22" pos:end="219:29">(<argument pos:start="219:23" pos:end="219:24"><expr pos:start="219:23" pos:end="219:24"><name pos:start="219:23" pos:end="219:24">t1</name></expr></argument>, <argument pos:start="219:27" pos:end="219:28"><expr pos:start="219:27" pos:end="219:28"><name pos:start="219:27" pos:end="219:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:26"><expr pos:start="221:9" pos:end="221:25"><call pos:start="221:9" pos:end="221:25"><name pos:start="221:9" pos:end="221:21">tcg_temp_free</name><argument_list pos:start="221:22" pos:end="221:25">(<argument pos:start="221:23" pos:end="221:24"><expr pos:start="221:23" pos:end="221:24"><name pos:start="221:23" pos:end="221:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:20"><expr pos:start="223:9" pos:end="223:19"><name pos:start="223:9" pos:end="223:11">opn</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <literal type="string" pos:start="223:15" pos:end="223:19">"lwr"</literal></expr>;</expr_stmt>

        <break pos:start="225:9" pos:end="225:14">break;</break>

    <case pos:start="227:5" pos:end="227:16">case <expr pos:start="227:10" pos:end="227:15"><name pos:start="227:10" pos:end="227:15">OPC_LL</name></expr>:</case>

        <expr_stmt pos:start="229:9" pos:end="229:31"><expr pos:start="229:9" pos:end="229:30"><call pos:start="229:9" pos:end="229:30"><name pos:start="229:9" pos:end="229:22">save_cpu_state</name><argument_list pos:start="229:23" pos:end="229:30">(<argument pos:start="229:24" pos:end="229:26"><expr pos:start="229:24" pos:end="229:26"><name pos:start="229:24" pos:end="229:26">ctx</name></expr></argument>, <argument pos:start="229:29" pos:end="229:29"><expr pos:start="229:29" pos:end="229:29"><literal type="number" pos:start="229:29" pos:end="229:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:30"><expr pos:start="231:9" pos:end="231:29"><call pos:start="231:9" pos:end="231:29"><name pos:start="231:9" pos:end="231:16">op_ld_ll</name><argument_list pos:start="231:17" pos:end="231:29">(<argument pos:start="231:18" pos:end="231:19"><expr pos:start="231:18" pos:end="231:19"><name pos:start="231:18" pos:end="231:19">t0</name></expr></argument>, <argument pos:start="231:22" pos:end="231:23"><expr pos:start="231:22" pos:end="231:23"><name pos:start="231:22" pos:end="231:23">t0</name></expr></argument>, <argument pos:start="231:26" pos:end="231:28"><expr pos:start="231:26" pos:end="231:28"><name pos:start="231:26" pos:end="231:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:30"><expr pos:start="233:9" pos:end="233:29"><call pos:start="233:9" pos:end="233:29"><name pos:start="233:9" pos:end="233:21">gen_store_gpr</name><argument_list pos:start="233:22" pos:end="233:29">(<argument pos:start="233:23" pos:end="233:24"><expr pos:start="233:23" pos:end="233:24"><name pos:start="233:23" pos:end="233:24">t0</name></expr></argument>, <argument pos:start="233:27" pos:end="233:28"><expr pos:start="233:27" pos:end="233:28"><name pos:start="233:27" pos:end="233:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:19"><expr pos:start="235:9" pos:end="235:18"><name pos:start="235:9" pos:end="235:11">opn</name> <operator pos:start="235:13" pos:end="235:13">=</operator> <literal type="string" pos:start="235:15" pos:end="235:18">"ll"</literal></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="241:5" pos:end="241:14"><expr pos:start="241:5" pos:end="241:13"><operator pos:start="241:5" pos:end="241:5">(</operator><name pos:start="241:6" pos:end="241:9">void</name><operator pos:start="241:10" pos:end="241:10">)</operator><name pos:start="241:11" pos:end="241:13">opn</name></expr>;</expr_stmt> <comment type="block" pos:start="241:16" pos:end="241:45">/* avoid a compiler warning */</comment>

    <expr_stmt pos:start="243:5" pos:end="243:75"><expr pos:start="243:5" pos:end="243:74"><call pos:start="243:5" pos:end="243:74"><name pos:start="243:5" pos:end="243:14">MIPS_DEBUG</name><argument_list pos:start="243:15" pos:end="243:74">(<argument pos:start="243:16" pos:end="243:30"><expr pos:start="243:16" pos:end="243:30"><literal type="string" pos:start="243:16" pos:end="243:30">"%s %s, %d(%s)"</literal></expr></argument>, <argument pos:start="243:33" pos:end="243:35"><expr pos:start="243:33" pos:end="243:35"><name pos:start="243:33" pos:end="243:35">opn</name></expr></argument>, <argument pos:start="243:38" pos:end="243:49"><expr pos:start="243:38" pos:end="243:49"><name pos:start="243:38" pos:end="243:49"><name pos:start="243:38" pos:end="243:45">regnames</name><index pos:start="243:46" pos:end="243:49">[<expr pos:start="243:47" pos:end="243:48"><name pos:start="243:47" pos:end="243:48">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="243:52" pos:end="243:57"><expr pos:start="243:52" pos:end="243:57"><name pos:start="243:52" pos:end="243:57">offset</name></expr></argument>, <argument pos:start="243:60" pos:end="243:73"><expr pos:start="243:60" pos:end="243:73"><name pos:start="243:60" pos:end="243:73"><name pos:start="243:60" pos:end="243:67">regnames</name><index pos:start="243:68" pos:end="243:73">[<expr pos:start="243:69" pos:end="243:72"><name pos:start="243:69" pos:end="243:72">base</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:22"><expr pos:start="245:5" pos:end="245:21"><call pos:start="245:5" pos:end="245:21"><name pos:start="245:5" pos:end="245:17">tcg_temp_free</name><argument_list pos:start="245:18" pos:end="245:21">(<argument pos:start="245:19" pos:end="245:20"><expr pos:start="245:19" pos:end="245:20"><name pos:start="245:19" pos:end="245:20">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
