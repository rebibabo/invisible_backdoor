<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10759.c" pos:tabs="8"><function pos:start="1:1" pos:end="313:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vmd_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="313:1">{<block_content pos:start="5:5" pos:end="311:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">VmdDemuxContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">vmd</name> <init pos:start="5:26" pos:end="5:39">= <expr pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:28">s</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:23">= <expr pos:start="9:20" pos:end="9:23"><name pos:start="9:20" pos:end="9:23">NULL</name></expr></init></decl>, <decl pos:start="9:26" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:29">vst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:27">toc_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:34">raw_frame_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:28">raw_frame_table_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:26">current_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:13"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:12"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:30"><decl pos:start="21:5" pos:end="21:29"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:16">int</name></type> <name pos:start="21:18" pos:end="21:29">total_frames</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:34"><decl pos:start="23:5" pos:end="23:33"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int64_t</name></type> <name pos:start="23:13" pos:end="23:29">current_audio_pts</name> <init pos:start="23:31" pos:end="23:33">= <expr pos:start="23:33" pos:end="23:33"><literal type="number" pos:start="23:33" pos:end="23:33">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:48"><decl pos:start="25:5" pos:end="25:47"><type pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:12">unsigned</name> <name pos:start="25:14" pos:end="25:17">char</name></type> <name pos:start="25:19" pos:end="25:47"><name pos:start="25:19" pos:end="25:23">chunk</name><index pos:start="25:24" pos:end="25:47">[<expr pos:start="25:25" pos:end="25:46"><name pos:start="25:25" pos:end="25:46">BYTES_PER_FRAME_RECORD</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">num</name></decl>, <decl pos:start="27:14" pos:end="27:16"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:14" pos:end="27:16">den</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:22"><decl pos:start="29:5" pos:end="29:21"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:21">sound_buffers</name></decl>;</decl_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:68">/* fetch the main header, including the 2 header length bytes */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><call pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:13">avio_seek</name><argument_list pos:start="35:14" pos:end="35:30">(<argument pos:start="35:15" pos:end="35:16"><expr pos:start="35:15" pos:end="35:16"><name pos:start="35:15" pos:end="35:16">pb</name></expr></argument>, <argument pos:start="35:19" pos:end="35:19"><expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr></argument>, <argument pos:start="35:22" pos:end="35:29"><expr pos:start="35:22" pos:end="35:29"><name pos:start="35:22" pos:end="35:29">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:28"><if pos:start="37:5" pos:end="39:28">if <condition pos:start="37:8" pos:end="37:75">(<expr pos:start="37:9" pos:end="37:74"><call pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:17">avio_read</name><argument_list pos:start="37:18" pos:end="37:55">(<argument pos:start="37:19" pos:end="37:20"><expr pos:start="37:19" pos:end="37:20"><name pos:start="37:19" pos:end="37:20">pb</name></expr></argument>, <argument pos:start="37:23" pos:end="37:37"><expr pos:start="37:23" pos:end="37:37"><name pos:start="37:23" pos:end="37:37"><name pos:start="37:23" pos:end="37:25">vmd</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:37">vmd_header</name></name></expr></argument>, <argument pos:start="37:40" pos:end="37:54"><expr pos:start="37:40" pos:end="37:54"><name pos:start="37:40" pos:end="37:54">VMD_HEADER_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="37:57" pos:end="37:58">!=</operator> <name pos:start="37:60" pos:end="37:74">VMD_HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:28"><block_content pos:start="39:9" pos:end="39:28">

        <return pos:start="39:9" pos:end="39:28">return <expr pos:start="39:16" pos:end="39:27"><call pos:start="39:16" pos:end="39:27"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:27">(<argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="49:27"><if pos:start="43:5" pos:end="45:27">if<condition pos:start="43:7" pos:end="43:94">(<expr pos:start="43:8" pos:end="43:93"><name pos:start="43:8" pos:end="43:26"><name pos:start="43:8" pos:end="43:10">vmd</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:22">vmd_header</name><index pos:start="43:23" pos:end="43:26">[<expr pos:start="43:24" pos:end="43:25"><literal type="number" pos:start="43:24" pos:end="43:25">24</literal></expr>]</index></name> <operator pos:start="43:28" pos:end="43:29">==</operator> <literal type="char" pos:start="43:31" pos:end="43:33">'i'</literal> <operator pos:start="43:35" pos:end="43:36">&amp;&amp;</operator> <name pos:start="43:38" pos:end="43:56"><name pos:start="43:38" pos:end="43:40">vmd</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:52">vmd_header</name><index pos:start="43:53" pos:end="43:56">[<expr pos:start="43:54" pos:end="43:55"><literal type="number" pos:start="43:54" pos:end="43:55">25</literal></expr>]</index></name> <operator pos:start="43:58" pos:end="43:59">==</operator> <literal type="char" pos:start="43:61" pos:end="43:63">'v'</literal> <operator pos:start="43:65" pos:end="43:66">&amp;&amp;</operator> <name pos:start="43:68" pos:end="43:86"><name pos:start="43:68" pos:end="43:70">vmd</name><operator pos:start="43:71" pos:end="43:72">-&gt;</operator><name pos:start="43:73" pos:end="43:82">vmd_header</name><index pos:start="43:83" pos:end="43:86">[<expr pos:start="43:84" pos:end="43:85"><literal type="number" pos:start="43:84" pos:end="43:85">26</literal></expr>]</index></name> <operator pos:start="43:88" pos:end="43:89">==</operator> <literal type="char" pos:start="43:91" pos:end="43:93">'3'</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:27"><block_content pos:start="45:9" pos:end="45:27">

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:11">vmd</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:22">is_indeo3</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:26">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="47:5" pos:end="49:27">else<block type="pseudo" pos:start="49:9" pos:end="49:27"><block_content pos:start="49:9" pos:end="49:27">

        <expr_stmt pos:start="49:9" pos:end="49:27"><expr pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:11">vmd</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:22">is_indeo3</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <literal type="number" pos:start="49:26" pos:end="49:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <comment type="block" pos:start="51:5" pos:end="51:31">/* start up the decoders */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:7">vst</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:38"><name pos:start="53:11" pos:end="53:29">avformat_new_stream</name><argument_list pos:start="53:30" pos:end="53:38">(<argument pos:start="53:31" pos:end="53:31"><expr pos:start="53:31" pos:end="53:31"><name pos:start="53:31" pos:end="53:31">s</name></expr></argument>, <argument pos:start="53:34" pos:end="53:37"><expr pos:start="53:34" pos:end="53:37"><name pos:start="53:34" pos:end="53:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:31"><if pos:start="55:5" pos:end="57:31">if <condition pos:start="55:8" pos:end="55:13">(<expr pos:start="55:9" pos:end="55:12"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:12">vst</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:31"><block_content pos:start="57:9" pos:end="57:31">

        <return pos:start="57:9" pos:end="57:31">return <expr pos:start="57:16" pos:end="57:30"><call pos:start="57:16" pos:end="57:30"><name pos:start="57:16" pos:end="57:22">AVERROR</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:40"><expr pos:start="59:5" pos:end="59:39"><call pos:start="59:5" pos:end="59:39"><name pos:start="59:5" pos:end="59:23">avpriv_set_pts_info</name><argument_list pos:start="59:24" pos:end="59:39">(<argument pos:start="59:25" pos:end="59:27"><expr pos:start="59:25" pos:end="59:27"><name pos:start="59:25" pos:end="59:27">vst</name></expr></argument>, <argument pos:start="59:30" pos:end="59:31"><expr pos:start="59:30" pos:end="59:31"><literal type="number" pos:start="59:30" pos:end="59:31">33</literal></expr></argument>, <argument pos:start="59:34" pos:end="59:34"><expr pos:start="59:34" pos:end="59:34"><literal type="number" pos:start="59:34" pos:end="59:34">1</literal></expr></argument>, <argument pos:start="59:37" pos:end="59:38"><expr pos:start="59:37" pos:end="59:38"><literal type="number" pos:start="59:37" pos:end="59:38">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:41"><expr pos:start="61:5" pos:end="61:40"><name pos:start="61:5" pos:end="61:27"><name pos:start="61:5" pos:end="61:7">vmd</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:27">video_stream_index</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <name pos:start="61:31" pos:end="61:40"><name pos:start="61:31" pos:end="61:33">vst</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:40">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:48"><expr pos:start="63:5" pos:end="63:47"><name pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:7">vst</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:14">codec</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:26">codec_type</name></name> <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:47">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:86"><expr pos:start="65:5" pos:end="65:85"><name pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:7">vst</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:14">codec</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:24">codec_id</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <ternary pos:start="65:28" pos:end="65:85"><condition pos:start="65:28" pos:end="65:43"><expr pos:start="65:28" pos:end="65:41"><name pos:start="65:28" pos:end="65:41"><name pos:start="65:28" pos:end="65:30">vmd</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:41">is_indeo3</name></name></expr> ?</condition><then pos:start="65:45" pos:end="65:62"> <expr pos:start="65:45" pos:end="65:62"><name pos:start="65:45" pos:end="65:62">AV_CODEC_ID_INDEO3</name></expr> </then><else pos:start="65:64" pos:end="65:85">: <expr pos:start="65:66" pos:end="65:85"><name pos:start="65:66" pos:end="65:85">AV_CODEC_ID_VMDVIDEO</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:7">vst</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:14">codec</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:25">codec_tag</name></name> <operator pos:start="67:27" pos:end="67:27">=</operator> <literal type="number" pos:start="67:29" pos:end="67:29">0</literal></expr>;</expr_stmt>  <comment type="block" pos:start="67:33" pos:end="67:47">/* no fourcc */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:54"><expr pos:start="69:5" pos:end="69:53"><name pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:7">vst</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:14">codec</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:21">width</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <call pos:start="69:25" pos:end="69:53"><name pos:start="69:25" pos:end="69:31">AV_RL16</name><argument_list pos:start="69:32" pos:end="69:53">(<argument pos:start="69:33" pos:end="69:52"><expr pos:start="69:33" pos:end="69:52"><operator pos:start="69:33" pos:end="69:33">&amp;</operator><name pos:start="69:34" pos:end="69:52"><name pos:start="69:34" pos:end="69:36">vmd</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:48">vmd_header</name><index pos:start="69:49" pos:end="69:52">[<expr pos:start="69:50" pos:end="69:51"><literal type="number" pos:start="69:50" pos:end="69:51">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:55"><expr pos:start="71:5" pos:end="71:54"><name pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:7">vst</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:14">codec</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:22">height</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <call pos:start="71:26" pos:end="71:54"><name pos:start="71:26" pos:end="71:32">AV_RL16</name><argument_list pos:start="71:33" pos:end="71:54">(<argument pos:start="71:34" pos:end="71:53"><expr pos:start="71:34" pos:end="71:53"><operator pos:start="71:34" pos:end="71:34">&amp;</operator><name pos:start="71:35" pos:end="71:53"><name pos:start="71:35" pos:end="71:37">vmd</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:49">vmd_header</name><index pos:start="71:50" pos:end="71:53">[<expr pos:start="71:51" pos:end="71:52"><literal type="number" pos:start="71:51" pos:end="71:52">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if<condition pos:start="73:7" pos:end="73:49">(<expr pos:start="73:8" pos:end="73:48"><name pos:start="73:8" pos:end="73:21"><name pos:start="73:8" pos:end="73:10">vmd</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:21">is_indeo3</name></name> <operator pos:start="73:23" pos:end="73:24">&amp;&amp;</operator> <name pos:start="73:26" pos:end="73:42"><name pos:start="73:26" pos:end="73:28">vst</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:35">codec</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:42">width</name></name> <operator pos:start="73:44" pos:end="73:44">&gt;</operator> <literal type="number" pos:start="73:46" pos:end="73:48">320</literal></expr>)</condition><block pos:start="73:50" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:33">

        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:11">vst</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:18">codec</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:25">width</name></name> <operator pos:start="75:27" pos:end="75:29">&gt;&gt;=</operator> <literal type="number" pos:start="75:31" pos:end="75:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:33"><expr pos:start="77:9" pos:end="77:32"><name pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:11">vst</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:18">codec</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:26">height</name></name> <operator pos:start="77:28" pos:end="77:30">&gt;&gt;=</operator> <literal type="number" pos:start="77:32" pos:end="77:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:49"><expr pos:start="81:5" pos:end="81:48"><name pos:start="81:5" pos:end="81:30"><name pos:start="81:5" pos:end="81:7">vst</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:14">codec</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:30">extradata_size</name></name> <operator pos:start="81:32" pos:end="81:32">=</operator> <name pos:start="81:34" pos:end="81:48">VMD_HEADER_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:87"><expr pos:start="83:5" pos:end="83:86"><name pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:7">vst</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:14">codec</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:25">extradata</name></name> <operator pos:start="83:27" pos:end="83:27">=</operator> <call pos:start="83:29" pos:end="83:86"><name pos:start="83:29" pos:end="83:38">av_mallocz</name><argument_list pos:start="83:39" pos:end="83:86">(<argument pos:start="83:40" pos:end="83:85"><expr pos:start="83:40" pos:end="83:85"><name pos:start="83:40" pos:end="83:54">VMD_HEADER_SIZE</name> <operator pos:start="83:56" pos:end="83:56">+</operator> <name pos:start="83:58" pos:end="83:85">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:68"><expr pos:start="85:5" pos:end="85:67"><call pos:start="85:5" pos:end="85:67"><name pos:start="85:5" pos:end="85:10">memcpy</name><argument_list pos:start="85:11" pos:end="85:67">(<argument pos:start="85:12" pos:end="85:32"><expr pos:start="85:12" pos:end="85:32"><name pos:start="85:12" pos:end="85:32"><name pos:start="85:12" pos:end="85:14">vst</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:21">codec</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:32">extradata</name></name></expr></argument>, <argument pos:start="85:35" pos:end="85:49"><expr pos:start="85:35" pos:end="85:49"><name pos:start="85:35" pos:end="85:49"><name pos:start="85:35" pos:end="85:37">vmd</name><operator pos:start="85:38" pos:end="85:39">-&gt;</operator><name pos:start="85:40" pos:end="85:49">vmd_header</name></name></expr></argument>, <argument pos:start="85:52" pos:end="85:66"><expr pos:start="85:52" pos:end="85:66"><name pos:start="85:52" pos:end="85:66">VMD_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:46">/* if sample rate is 0, assume no audio */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:54"><expr pos:start="91:5" pos:end="91:53"><name pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:7">vmd</name><operator pos:start="91:8" pos:end="91:9">-&gt;</operator><name pos:start="91:10" pos:end="91:20">sample_rate</name></name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:53"><name pos:start="91:24" pos:end="91:30">AV_RL16</name><argument_list pos:start="91:31" pos:end="91:53">(<argument pos:start="91:32" pos:end="91:52"><expr pos:start="91:32" pos:end="91:52"><operator pos:start="91:32" pos:end="91:32">&amp;</operator><name pos:start="91:33" pos:end="91:52"><name pos:start="91:33" pos:end="91:35">vmd</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:47">vmd_header</name><index pos:start="91:48" pos:end="91:52">[<expr pos:start="91:49" pos:end="91:51"><literal type="number" pos:start="91:49" pos:end="91:51">804</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="157:5"><if pos:start="93:5" pos:end="157:5">if <condition pos:start="93:8" pos:end="93:25">(<expr pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:11">vmd</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:24">sample_rate</name></name></expr>)</condition> <block pos:start="93:27" pos:end="157:5">{<block_content pos:start="95:9" pos:end="155:46">

        <expr_stmt pos:start="95:9" pos:end="95:42"><expr pos:start="95:9" pos:end="95:41"><name pos:start="95:9" pos:end="95:10">st</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <call pos:start="95:14" pos:end="95:41"><name pos:start="95:14" pos:end="95:32">avformat_new_stream</name><argument_list pos:start="95:33" pos:end="95:41">(<argument pos:start="95:34" pos:end="95:34"><expr pos:start="95:34" pos:end="95:34"><name pos:start="95:34" pos:end="95:34">s</name></expr></argument>, <argument pos:start="95:37" pos:end="95:40"><expr pos:start="95:37" pos:end="95:40"><name pos:start="95:37" pos:end="95:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="99:35"><if pos:start="97:9" pos:end="99:35">if <condition pos:start="97:12" pos:end="97:16">(<expr pos:start="97:13" pos:end="97:15"><operator pos:start="97:13" pos:end="97:13">!</operator><name pos:start="97:14" pos:end="97:15">st</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:35"><block_content pos:start="99:13" pos:end="99:35">

            <return pos:start="99:13" pos:end="99:35">return <expr pos:start="99:20" pos:end="99:34"><call pos:start="99:20" pos:end="99:34"><name pos:start="99:20" pos:end="99:26">AVERROR</name><argument_list pos:start="99:27" pos:end="99:34">(<argument pos:start="99:28" pos:end="99:33"><expr pos:start="99:28" pos:end="99:33"><name pos:start="99:28" pos:end="99:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:44"><expr pos:start="101:9" pos:end="101:43"><name pos:start="101:9" pos:end="101:31"><name pos:start="101:9" pos:end="101:11">vmd</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:31">audio_stream_index</name></name> <operator pos:start="101:33" pos:end="101:33">=</operator> <name pos:start="101:35" pos:end="101:43"><name pos:start="101:35" pos:end="101:36">st</name><operator pos:start="101:37" pos:end="101:38">-&gt;</operator><name pos:start="101:39" pos:end="101:43">index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:51"><expr pos:start="103:9" pos:end="103:50"><name pos:start="103:9" pos:end="103:29"><name pos:start="103:9" pos:end="103:10">st</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:17">codec</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:29">codec_type</name></name> <operator pos:start="103:31" pos:end="103:31">=</operator> <name pos:start="103:33" pos:end="103:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:51"><expr pos:start="105:9" pos:end="105:50"><name pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:10">st</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:17">codec</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:27">codec_id</name></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <name pos:start="105:31" pos:end="105:50">AV_CODEC_ID_VMDAUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:33"><expr pos:start="107:9" pos:end="107:32"><name pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:10">st</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:17">codec</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:28">codec_tag</name></name> <operator pos:start="107:30" pos:end="107:30">=</operator> <literal type="number" pos:start="107:32" pos:end="107:32">0</literal></expr>;</expr_stmt>  <comment type="block" pos:start="107:36" pos:end="107:50">/* no fourcc */</comment>

        <if_stmt pos:start="109:9" pos:end="121:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:40">(<expr pos:start="109:13" pos:end="109:39"><name pos:start="109:13" pos:end="109:32"><name pos:start="109:13" pos:end="109:15">vmd</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:27">vmd_header</name><index pos:start="109:28" pos:end="109:32">[<expr pos:start="109:29" pos:end="109:31"><literal type="number" pos:start="109:29" pos:end="109:31">811</literal></expr>]</index></name> <operator pos:start="109:34" pos:end="109:34">&amp;</operator> <literal type="number" pos:start="109:36" pos:end="109:39">0x80</literal></expr>)</condition> <block pos:start="109:42" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:60">

            <expr_stmt pos:start="111:13" pos:end="111:42"><expr pos:start="111:13" pos:end="111:41"><name pos:start="111:13" pos:end="111:31"><name pos:start="111:13" pos:end="111:14">st</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:21">codec</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:31">channels</name></name>       <operator pos:start="111:39" pos:end="111:39">=</operator> <literal type="number" pos:start="111:41" pos:end="111:41">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:60"><expr pos:start="113:13" pos:end="113:59"><name pos:start="113:13" pos:end="113:37"><name pos:start="113:13" pos:end="113:14">st</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:21">codec</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:37">channel_layout</name></name> <operator pos:start="113:39" pos:end="113:39">=</operator> <name pos:start="113:41" pos:end="113:59">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="115:11" pos:end="121:9">else <block pos:start="115:16" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:58">

            <expr_stmt pos:start="117:13" pos:end="117:42"><expr pos:start="117:13" pos:end="117:41"><name pos:start="117:13" pos:end="117:31"><name pos:start="117:13" pos:end="117:14">st</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:21">codec</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:31">channels</name></name>       <operator pos:start="117:39" pos:end="117:39">=</operator> <literal type="number" pos:start="117:41" pos:end="117:41">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:58"><expr pos:start="119:13" pos:end="119:57"><name pos:start="119:13" pos:end="119:37"><name pos:start="119:13" pos:end="119:14">st</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:21">codec</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:37">channel_layout</name></name> <operator pos:start="119:39" pos:end="119:39">=</operator> <name pos:start="119:41" pos:end="119:57">AV_CH_LAYOUT_MONO</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:50"><expr pos:start="123:9" pos:end="123:49"><name pos:start="123:9" pos:end="123:30"><name pos:start="123:9" pos:end="123:10">st</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:17">codec</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:30">sample_rate</name></name> <operator pos:start="123:32" pos:end="123:32">=</operator> <name pos:start="123:34" pos:end="123:49"><name pos:start="123:34" pos:end="123:36">vmd</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:49">sample_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:64"><expr pos:start="125:9" pos:end="125:63"><name pos:start="125:9" pos:end="125:30"><name pos:start="125:9" pos:end="125:10">st</name><operator pos:start="125:11" pos:end="125:12">-&gt;</operator><name pos:start="125:13" pos:end="125:17">codec</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:30">block_align</name></name> <operator pos:start="125:32" pos:end="125:32">=</operator> <call pos:start="125:34" pos:end="125:63"><name pos:start="125:34" pos:end="125:40">AV_RL16</name><argument_list pos:start="125:41" pos:end="125:63">(<argument pos:start="125:42" pos:end="125:62"><expr pos:start="125:42" pos:end="125:62"><operator pos:start="125:42" pos:end="125:42">&amp;</operator><name pos:start="125:43" pos:end="125:62"><name pos:start="125:43" pos:end="125:45">vmd</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:57">vmd_header</name><index pos:start="125:58" pos:end="125:62">[<expr pos:start="125:59" pos:end="125:61"><literal type="number" pos:start="125:59" pos:end="125:61">806</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="137:9"><if pos:start="127:9" pos:end="133:9">if <condition pos:start="127:12" pos:end="127:44">(<expr pos:start="127:13" pos:end="127:43"><name pos:start="127:13" pos:end="127:34"><name pos:start="127:13" pos:end="127:14">st</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:21">codec</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:34">block_align</name></name> <operator pos:start="127:36" pos:end="127:36">&amp;</operator> <literal type="number" pos:start="127:38" pos:end="127:43">0x8000</literal></expr>)</condition> <block pos:start="127:46" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:73">

            <expr_stmt pos:start="129:13" pos:end="129:50"><expr pos:start="129:13" pos:end="129:49"><name pos:start="129:13" pos:end="129:44"><name pos:start="129:13" pos:end="129:14">st</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:21">codec</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:44">bits_per_coded_sample</name></name> <operator pos:start="129:46" pos:end="129:46">=</operator> <literal type="number" pos:start="129:48" pos:end="129:49">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:73"><expr pos:start="131:13" pos:end="131:72"><name pos:start="131:13" pos:end="131:34"><name pos:start="131:13" pos:end="131:14">st</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:21">codec</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:34">block_align</name></name> <operator pos:start="131:36" pos:end="131:36">=</operator> <operator pos:start="131:38" pos:end="131:38">-</operator><operator pos:start="131:39" pos:end="131:39">(</operator><name pos:start="131:40" pos:end="131:61"><name pos:start="131:40" pos:end="131:41">st</name><operator pos:start="131:42" pos:end="131:43">-&gt;</operator><name pos:start="131:44" pos:end="131:48">codec</name><operator pos:start="131:49" pos:end="131:50">-&gt;</operator><name pos:start="131:51" pos:end="131:61">block_align</name></name> <operator pos:start="131:63" pos:end="131:63">-</operator> <literal type="number" pos:start="131:65" pos:end="131:71">0x10000</literal><operator pos:start="131:72" pos:end="131:72">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="133:11" pos:end="137:9">else <block pos:start="133:16" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:49">

            <expr_stmt pos:start="135:13" pos:end="135:49"><expr pos:start="135:13" pos:end="135:48"><name pos:start="135:13" pos:end="135:44"><name pos:start="135:13" pos:end="135:14">st</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:21">codec</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:44">bits_per_coded_sample</name></name> <operator pos:start="135:46" pos:end="135:46">=</operator> <literal type="number" pos:start="135:48" pos:end="135:48">8</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="139:9" pos:end="141:67"><expr pos:start="139:9" pos:end="141:66"><name pos:start="139:9" pos:end="139:27"><name pos:start="139:9" pos:end="139:10">st</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:17">codec</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:27">bit_rate</name></name> <operator pos:start="139:29" pos:end="139:29">=</operator> <name pos:start="139:31" pos:end="139:52"><name pos:start="139:31" pos:end="139:32">st</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:39">codec</name><operator pos:start="139:40" pos:end="139:41">-&gt;</operator><name pos:start="139:42" pos:end="139:52">sample_rate</name></name> <operator pos:start="139:54" pos:end="139:54">*</operator>

            <name pos:start="141:13" pos:end="141:44"><name pos:start="141:13" pos:end="141:14">st</name><operator pos:start="141:15" pos:end="141:16">-&gt;</operator><name pos:start="141:17" pos:end="141:21">codec</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:44">bits_per_coded_sample</name></name> <operator pos:start="141:46" pos:end="141:46">*</operator> <name pos:start="141:48" pos:end="141:66"><name pos:start="141:48" pos:end="141:49">st</name><operator pos:start="141:50" pos:end="141:51">-&gt;</operator><name pos:start="141:52" pos:end="141:56">codec</name><operator pos:start="141:57" pos:end="141:58">-&gt;</operator><name pos:start="141:59" pos:end="141:66">channels</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="145:9" pos:end="145:27">/* calculate pts */</comment>

        <expr_stmt pos:start="147:9" pos:end="147:37"><expr pos:start="147:9" pos:end="147:36"><name pos:start="147:9" pos:end="147:11">num</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <name pos:start="147:15" pos:end="147:36"><name pos:start="147:15" pos:end="147:16">st</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:23">codec</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:36">block_align</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:59"><expr pos:start="149:9" pos:end="149:58"><name pos:start="149:9" pos:end="149:11">den</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <name pos:start="149:15" pos:end="149:36"><name pos:start="149:15" pos:end="149:16">st</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:23">codec</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:36">sample_rate</name></name> <operator pos:start="149:38" pos:end="149:38">*</operator> <name pos:start="149:40" pos:end="149:58"><name pos:start="149:40" pos:end="149:41">st</name><operator pos:start="149:42" pos:end="149:43">-&gt;</operator><name pos:start="149:44" pos:end="149:48">codec</name><operator pos:start="149:49" pos:end="149:50">-&gt;</operator><name pos:start="149:51" pos:end="149:58">channels</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:53"><expr pos:start="151:9" pos:end="151:52"><call pos:start="151:9" pos:end="151:52"><name pos:start="151:9" pos:end="151:17">av_reduce</name><argument_list pos:start="151:18" pos:end="151:52">(<argument pos:start="151:19" pos:end="151:22"><expr pos:start="151:19" pos:end="151:22"><operator pos:start="151:19" pos:end="151:19">&amp;</operator><name pos:start="151:20" pos:end="151:22">den</name></expr></argument>, <argument pos:start="151:25" pos:end="151:28"><expr pos:start="151:25" pos:end="151:28"><operator pos:start="151:25" pos:end="151:25">&amp;</operator><name pos:start="151:26" pos:end="151:28">num</name></expr></argument>, <argument pos:start="151:31" pos:end="151:33"><expr pos:start="151:31" pos:end="151:33"><name pos:start="151:31" pos:end="151:33">den</name></expr></argument>, <argument pos:start="151:36" pos:end="151:38"><expr pos:start="151:36" pos:end="151:38"><name pos:start="151:36" pos:end="151:38">num</name></expr></argument>, <argument pos:start="151:41" pos:end="151:51"><expr pos:start="151:41" pos:end="151:51"><operator pos:start="151:41" pos:end="151:41">(</operator><literal type="number" pos:start="151:42" pos:end="151:44">1UL</literal><operator pos:start="151:45" pos:end="151:46">&lt;&lt;</operator><literal type="number" pos:start="151:47" pos:end="151:48">31</literal><operator pos:start="151:49" pos:end="151:49">)</operator><operator pos:start="151:50" pos:end="151:50">-</operator><literal type="number" pos:start="151:51" pos:end="151:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:47"><expr pos:start="153:9" pos:end="153:46"><call pos:start="153:9" pos:end="153:46"><name pos:start="153:9" pos:end="153:27">avpriv_set_pts_info</name><argument_list pos:start="153:28" pos:end="153:46">(<argument pos:start="153:29" pos:end="153:31"><expr pos:start="153:29" pos:end="153:31"><name pos:start="153:29" pos:end="153:31">vst</name></expr></argument>, <argument pos:start="153:34" pos:end="153:35"><expr pos:start="153:34" pos:end="153:35"><literal type="number" pos:start="153:34" pos:end="153:35">33</literal></expr></argument>, <argument pos:start="153:38" pos:end="153:40"><expr pos:start="153:38" pos:end="153:40"><name pos:start="153:38" pos:end="153:40">num</name></expr></argument>, <argument pos:start="153:43" pos:end="153:45"><expr pos:start="153:43" pos:end="153:45"><name pos:start="153:43" pos:end="153:45">den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:46"><expr pos:start="155:9" pos:end="155:45"><call pos:start="155:9" pos:end="155:45"><name pos:start="155:9" pos:end="155:27">avpriv_set_pts_info</name><argument_list pos:start="155:28" pos:end="155:45">(<argument pos:start="155:29" pos:end="155:30"><expr pos:start="155:29" pos:end="155:30"><name pos:start="155:29" pos:end="155:30">st</name></expr></argument>, <argument pos:start="155:33" pos:end="155:34"><expr pos:start="155:33" pos:end="155:34"><literal type="number" pos:start="155:33" pos:end="155:34">33</literal></expr></argument>, <argument pos:start="155:37" pos:end="155:39"><expr pos:start="155:37" pos:end="155:39"><name pos:start="155:37" pos:end="155:39">num</name></expr></argument>, <argument pos:start="155:42" pos:end="155:44"><expr pos:start="155:42" pos:end="155:44"><name pos:start="155:42" pos:end="155:44">den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:48"><expr pos:start="161:5" pos:end="161:47"><name pos:start="161:5" pos:end="161:14">toc_offset</name> <operator pos:start="161:16" pos:end="161:16">=</operator> <call pos:start="161:18" pos:end="161:47"><name pos:start="161:18" pos:end="161:24">AV_RL32</name><argument_list pos:start="161:25" pos:end="161:47">(<argument pos:start="161:26" pos:end="161:46"><expr pos:start="161:26" pos:end="161:46"><operator pos:start="161:26" pos:end="161:26">&amp;</operator><name pos:start="161:27" pos:end="161:46"><name pos:start="161:27" pos:end="161:29">vmd</name><operator pos:start="161:30" pos:end="161:31">-&gt;</operator><name pos:start="161:32" pos:end="161:41">vmd_header</name><index pos:start="161:42" pos:end="161:46">[<expr pos:start="161:43" pos:end="161:45"><literal type="number" pos:start="161:43" pos:end="161:45">812</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:52"><expr pos:start="163:5" pos:end="163:51"><name pos:start="163:5" pos:end="163:20"><name pos:start="163:5" pos:end="163:7">vmd</name><operator pos:start="163:8" pos:end="163:9">-&gt;</operator><name pos:start="163:10" pos:end="163:20">frame_count</name></name> <operator pos:start="163:22" pos:end="163:22">=</operator> <call pos:start="163:24" pos:end="163:51"><name pos:start="163:24" pos:end="163:30">AV_RL16</name><argument_list pos:start="163:31" pos:end="163:51">(<argument pos:start="163:32" pos:end="163:50"><expr pos:start="163:32" pos:end="163:50"><operator pos:start="163:32" pos:end="163:32">&amp;</operator><name pos:start="163:33" pos:end="163:50"><name pos:start="163:33" pos:end="163:35">vmd</name><operator pos:start="163:36" pos:end="163:37">-&gt;</operator><name pos:start="163:38" pos:end="163:47">vmd_header</name><index pos:start="163:48" pos:end="163:50">[<expr pos:start="163:49" pos:end="163:49"><literal type="number" pos:start="163:49" pos:end="163:49">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:58"><expr pos:start="165:5" pos:end="165:57"><name pos:start="165:5" pos:end="165:25"><name pos:start="165:5" pos:end="165:7">vmd</name><operator pos:start="165:8" pos:end="165:9">-&gt;</operator><name pos:start="165:10" pos:end="165:25">frames_per_block</name></name> <operator pos:start="165:27" pos:end="165:27">=</operator> <call pos:start="165:29" pos:end="165:57"><name pos:start="165:29" pos:end="165:35">AV_RL16</name><argument_list pos:start="165:36" pos:end="165:57">(<argument pos:start="165:37" pos:end="165:56"><expr pos:start="165:37" pos:end="165:56"><operator pos:start="165:37" pos:end="165:37">&amp;</operator><name pos:start="165:38" pos:end="165:56"><name pos:start="165:38" pos:end="165:40">vmd</name><operator pos:start="165:41" pos:end="165:42">-&gt;</operator><name pos:start="165:43" pos:end="165:52">vmd_header</name><index pos:start="165:53" pos:end="165:56">[<expr pos:start="165:54" pos:end="165:55"><literal type="number" pos:start="165:54" pos:end="165:55">18</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:40"><expr pos:start="167:5" pos:end="167:39"><call pos:start="167:5" pos:end="167:39"><name pos:start="167:5" pos:end="167:13">avio_seek</name><argument_list pos:start="167:14" pos:end="167:39">(<argument pos:start="167:15" pos:end="167:16"><expr pos:start="167:15" pos:end="167:16"><name pos:start="167:15" pos:end="167:16">pb</name></expr></argument>, <argument pos:start="167:19" pos:end="167:28"><expr pos:start="167:19" pos:end="167:28"><name pos:start="167:19" pos:end="167:28">toc_offset</name></expr></argument>, <argument pos:start="167:31" pos:end="167:38"><expr pos:start="167:31" pos:end="167:38"><name pos:start="167:31" pos:end="167:38">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="171:5" pos:end="171:27"><expr pos:start="171:5" pos:end="171:26"><name pos:start="171:5" pos:end="171:19">raw_frame_table</name> <operator pos:start="171:21" pos:end="171:21">=</operator> <name pos:start="171:23" pos:end="171:26">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:28"><expr pos:start="173:5" pos:end="173:27"><name pos:start="173:5" pos:end="173:20"><name pos:start="173:5" pos:end="173:7">vmd</name><operator pos:start="173:8" pos:end="173:9">-&gt;</operator><name pos:start="173:10" pos:end="173:20">frame_table</name></name> <operator pos:start="173:22" pos:end="173:22">=</operator> <name pos:start="173:24" pos:end="173:27">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:51"><expr pos:start="175:5" pos:end="175:50"><name pos:start="175:5" pos:end="175:17">sound_buffers</name> <operator pos:start="175:19" pos:end="175:19">=</operator> <call pos:start="175:21" pos:end="175:50"><name pos:start="175:21" pos:end="175:27">AV_RL16</name><argument_list pos:start="175:28" pos:end="175:50">(<argument pos:start="175:29" pos:end="175:49"><expr pos:start="175:29" pos:end="175:49"><operator pos:start="175:29" pos:end="175:29">&amp;</operator><name pos:start="175:30" pos:end="175:49"><name pos:start="175:30" pos:end="175:32">vmd</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:44">vmd_header</name><index pos:start="175:45" pos:end="175:49">[<expr pos:start="175:46" pos:end="175:48"><literal type="number" pos:start="175:46" pos:end="175:48">808</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:48"><expr pos:start="177:5" pos:end="177:47"><name pos:start="177:5" pos:end="177:24">raw_frame_table_size</name> <operator pos:start="177:26" pos:end="177:26">=</operator> <name pos:start="177:28" pos:end="177:43"><name pos:start="177:28" pos:end="177:30">vmd</name><operator pos:start="177:31" pos:end="177:32">-&gt;</operator><name pos:start="177:33" pos:end="177:43">frame_count</name></name> <operator pos:start="177:45" pos:end="177:45">*</operator> <literal type="number" pos:start="177:47" pos:end="177:47">6</literal></expr>;</expr_stmt>

    <if_stmt pos:start="179:5" pos:end="185:5"><if pos:start="179:5" pos:end="185:5">if<condition pos:start="179:7" pos:end="179:96">(<expr pos:start="179:8" pos:end="179:95"><name pos:start="179:8" pos:end="179:23"><name pos:start="179:8" pos:end="179:10">vmd</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:23">frame_count</name></name> <operator pos:start="179:25" pos:end="179:25">*</operator> <name pos:start="179:27" pos:end="179:47"><name pos:start="179:27" pos:end="179:29">vmd</name><operator pos:start="179:30" pos:end="179:31">-&gt;</operator><name pos:start="179:32" pos:end="179:47">frames_per_block</name></name> <operator pos:start="179:49" pos:end="179:50">&gt;=</operator> <name pos:start="179:52" pos:end="179:59">UINT_MAX</name> <operator pos:start="179:61" pos:end="179:61">/</operator> <sizeof pos:start="179:63" pos:end="179:79">sizeof<argument_list pos:start="179:69" pos:end="179:79">(<argument pos:start="179:70" pos:end="179:78"><expr pos:start="179:70" pos:end="179:78"><name pos:start="179:70" pos:end="179:78">vmd_frame</name></expr></argument>)</argument_list></sizeof> <operator pos:start="179:81" pos:end="179:81">-</operator> <name pos:start="179:83" pos:end="179:95">sound_buffers</name></expr>)</condition><block pos:start="179:97" pos:end="185:5">{<block_content pos:start="181:9" pos:end="183:18">

        <expr_stmt pos:start="181:9" pos:end="181:88"><expr pos:start="181:9" pos:end="181:87"><call pos:start="181:9" pos:end="181:87"><name pos:start="181:9" pos:end="181:14">av_log</name><argument_list pos:start="181:15" pos:end="181:87">(<argument pos:start="181:16" pos:end="181:16"><expr pos:start="181:16" pos:end="181:16"><name pos:start="181:16" pos:end="181:16">s</name></expr></argument>, <argument pos:start="181:19" pos:end="181:30"><expr pos:start="181:19" pos:end="181:30"><name pos:start="181:19" pos:end="181:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:33" pos:end="181:86"><expr pos:start="181:33" pos:end="181:86"><literal type="string" pos:start="181:33" pos:end="181:86">"vmd-&gt;frame_count * vmd-&gt;frames_per_block too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="183:9" pos:end="183:18">return <expr pos:start="183:16" pos:end="183:17"><operator pos:start="183:16" pos:end="183:16">-</operator><literal type="number" pos:start="183:17" pos:end="183:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:54"><expr pos:start="187:5" pos:end="187:53"><name pos:start="187:5" pos:end="187:19">raw_frame_table</name> <operator pos:start="187:21" pos:end="187:21">=</operator> <call pos:start="187:23" pos:end="187:53"><name pos:start="187:23" pos:end="187:31">av_malloc</name><argument_list pos:start="187:32" pos:end="187:53">(<argument pos:start="187:33" pos:end="187:52"><expr pos:start="187:33" pos:end="187:52"><name pos:start="187:33" pos:end="187:52">raw_frame_table_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:113"><expr pos:start="189:5" pos:end="189:112"><name pos:start="189:5" pos:end="189:20"><name pos:start="189:5" pos:end="189:7">vmd</name><operator pos:start="189:8" pos:end="189:9">-&gt;</operator><name pos:start="189:10" pos:end="189:20">frame_table</name></name> <operator pos:start="189:22" pos:end="189:22">=</operator> <call pos:start="189:24" pos:end="189:112"><name pos:start="189:24" pos:end="189:32">av_malloc</name><argument_list pos:start="189:33" pos:end="189:112">(<argument pos:start="189:34" pos:end="189:111"><expr pos:start="189:34" pos:end="189:111"><operator pos:start="189:34" pos:end="189:34">(</operator><name pos:start="189:35" pos:end="189:50"><name pos:start="189:35" pos:end="189:37">vmd</name><operator pos:start="189:38" pos:end="189:39">-&gt;</operator><name pos:start="189:40" pos:end="189:50">frame_count</name></name> <operator pos:start="189:52" pos:end="189:52">*</operator> <name pos:start="189:54" pos:end="189:74"><name pos:start="189:54" pos:end="189:56">vmd</name><operator pos:start="189:57" pos:end="189:58">-&gt;</operator><name pos:start="189:59" pos:end="189:74">frames_per_block</name></name> <operator pos:start="189:76" pos:end="189:76">+</operator> <name pos:start="189:78" pos:end="189:90">sound_buffers</name><operator pos:start="189:91" pos:end="189:91">)</operator> <operator pos:start="189:93" pos:end="189:93">*</operator> <sizeof pos:start="189:95" pos:end="189:111">sizeof<argument_list pos:start="189:101" pos:end="189:111">(<argument pos:start="189:102" pos:end="189:110"><expr pos:start="189:102" pos:end="189:110"><name pos:start="189:102" pos:end="189:110">vmd_frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="191:5" pos:end="199:5"><if pos:start="191:5" pos:end="199:5">if <condition pos:start="191:8" pos:end="191:46">(<expr pos:start="191:9" pos:end="191:45"><operator pos:start="191:9" pos:end="191:9">!</operator><name pos:start="191:10" pos:end="191:24">raw_frame_table</name> <operator pos:start="191:26" pos:end="191:27">||</operator> <operator pos:start="191:29" pos:end="191:29">!</operator><name pos:start="191:30" pos:end="191:45"><name pos:start="191:30" pos:end="191:32">vmd</name><operator pos:start="191:33" pos:end="191:34">-&gt;</operator><name pos:start="191:35" pos:end="191:45">frame_table</name></name></expr>)</condition> <block pos:start="191:48" pos:end="199:5">{<block_content pos:start="193:9" pos:end="197:31">

        <expr_stmt pos:start="193:9" pos:end="193:33"><expr pos:start="193:9" pos:end="193:32"><call pos:start="193:9" pos:end="193:32"><name pos:start="193:9" pos:end="193:15">av_free</name><argument_list pos:start="193:16" pos:end="193:32">(<argument pos:start="193:17" pos:end="193:31"><expr pos:start="193:17" pos:end="193:31"><name pos:start="193:17" pos:end="193:31">raw_frame_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:34"><expr pos:start="195:9" pos:end="195:33"><call pos:start="195:9" pos:end="195:33"><name pos:start="195:9" pos:end="195:15">av_free</name><argument_list pos:start="195:16" pos:end="195:33">(<argument pos:start="195:17" pos:end="195:32"><expr pos:start="195:17" pos:end="195:32"><name pos:start="195:17" pos:end="195:32"><name pos:start="195:17" pos:end="195:19">vmd</name><operator pos:start="195:20" pos:end="195:21">-&gt;</operator><name pos:start="195:22" pos:end="195:32">frame_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="197:9" pos:end="197:31">return <expr pos:start="197:16" pos:end="197:30"><call pos:start="197:16" pos:end="197:30"><name pos:start="197:16" pos:end="197:22">AVERROR</name><argument_list pos:start="197:23" pos:end="197:30">(<argument pos:start="197:24" pos:end="197:29"><expr pos:start="197:24" pos:end="197:29"><name pos:start="197:24" pos:end="197:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="201:5" pos:end="211:5"><if pos:start="201:5" pos:end="211:5">if <condition pos:start="201:8" pos:end="203:29">(<expr pos:start="201:9" pos:end="203:28"><call pos:start="201:9" pos:end="201:60"><name pos:start="201:9" pos:end="201:17">avio_read</name><argument_list pos:start="201:18" pos:end="201:60">(<argument pos:start="201:19" pos:end="201:20"><expr pos:start="201:19" pos:end="201:20"><name pos:start="201:19" pos:end="201:20">pb</name></expr></argument>, <argument pos:start="201:23" pos:end="201:37"><expr pos:start="201:23" pos:end="201:37"><name pos:start="201:23" pos:end="201:37">raw_frame_table</name></expr></argument>, <argument pos:start="201:40" pos:end="201:59"><expr pos:start="201:40" pos:end="201:59"><name pos:start="201:40" pos:end="201:59">raw_frame_table_size</name></expr></argument>)</argument_list></call> <operator pos:start="201:62" pos:end="201:63">!=</operator>

        <name pos:start="203:9" pos:end="203:28">raw_frame_table_size</name></expr>)</condition> <block pos:start="203:31" pos:end="211:5">{<block_content pos:start="205:9" pos:end="209:28">

        <expr_stmt pos:start="205:9" pos:end="205:33"><expr pos:start="205:9" pos:end="205:32"><call pos:start="205:9" pos:end="205:32"><name pos:start="205:9" pos:end="205:15">av_free</name><argument_list pos:start="205:16" pos:end="205:32">(<argument pos:start="205:17" pos:end="205:31"><expr pos:start="205:17" pos:end="205:31"><name pos:start="205:17" pos:end="205:31">raw_frame_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:34"><expr pos:start="207:9" pos:end="207:33"><call pos:start="207:9" pos:end="207:33"><name pos:start="207:9" pos:end="207:15">av_free</name><argument_list pos:start="207:16" pos:end="207:33">(<argument pos:start="207:17" pos:end="207:32"><expr pos:start="207:17" pos:end="207:32"><name pos:start="207:17" pos:end="207:32"><name pos:start="207:17" pos:end="207:19">vmd</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:32">frame_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="209:9" pos:end="209:28">return <expr pos:start="209:16" pos:end="209:27"><call pos:start="209:16" pos:end="209:27"><name pos:start="209:16" pos:end="209:22">AVERROR</name><argument_list pos:start="209:23" pos:end="209:27">(<argument pos:start="209:24" pos:end="209:26"><expr pos:start="209:24" pos:end="209:26"><name pos:start="209:24" pos:end="209:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:21"><expr pos:start="215:5" pos:end="215:20"><name pos:start="215:5" pos:end="215:16">total_frames</name> <operator pos:start="215:18" pos:end="215:18">=</operator> <literal type="number" pos:start="215:20" pos:end="215:20">0</literal></expr>;</expr_stmt>

    <for pos:start="217:5" pos:end="297:5">for <control pos:start="217:9" pos:end="217:42">(<init pos:start="217:10" pos:end="217:15"><expr pos:start="217:10" pos:end="217:14"><name pos:start="217:10" pos:end="217:10">i</name> <operator pos:start="217:12" pos:end="217:12">=</operator> <literal type="number" pos:start="217:14" pos:end="217:14">0</literal></expr>;</init> <condition pos:start="217:17" pos:end="217:37"><expr pos:start="217:17" pos:end="217:36"><name pos:start="217:17" pos:end="217:17">i</name> <operator pos:start="217:19" pos:end="217:19">&lt;</operator> <name pos:start="217:21" pos:end="217:36"><name pos:start="217:21" pos:end="217:23">vmd</name><operator pos:start="217:24" pos:end="217:25">-&gt;</operator><name pos:start="217:26" pos:end="217:36">frame_count</name></name></expr>;</condition> <incr pos:start="217:39" pos:end="217:41"><expr pos:start="217:39" pos:end="217:41"><name pos:start="217:39" pos:end="217:39">i</name><operator pos:start="217:40" pos:end="217:41">++</operator></expr></incr>)</control> <block pos:start="217:44" pos:end="297:5">{<block_content pos:start="221:9" pos:end="295:9">



        <expr_stmt pos:start="221:9" pos:end="221:62"><expr pos:start="221:9" pos:end="221:61"><name pos:start="221:9" pos:end="221:22">current_offset</name> <operator pos:start="221:24" pos:end="221:24">=</operator> <call pos:start="221:26" pos:end="221:61"><name pos:start="221:26" pos:end="221:32">AV_RL32</name><argument_list pos:start="221:33" pos:end="221:61">(<argument pos:start="221:34" pos:end="221:60"><expr pos:start="221:34" pos:end="221:60"><operator pos:start="221:34" pos:end="221:34">&amp;</operator><name pos:start="221:35" pos:end="221:60"><name pos:start="221:35" pos:end="221:49">raw_frame_table</name><index pos:start="221:50" pos:end="221:60">[<expr pos:start="221:51" pos:end="221:59"><literal type="number" pos:start="221:51" pos:end="221:51">6</literal> <operator pos:start="221:53" pos:end="221:53">*</operator> <name pos:start="221:55" pos:end="221:55">i</name> <operator pos:start="221:57" pos:end="221:57">+</operator> <literal type="number" pos:start="221:59" pos:end="221:59">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="225:9" pos:end="225:46">/* handle each entry in index block */</comment>

        <for pos:start="227:9" pos:end="295:9">for <control pos:start="227:13" pos:end="227:51">(<init pos:start="227:14" pos:end="227:19"><expr pos:start="227:14" pos:end="227:18"><name pos:start="227:14" pos:end="227:14">j</name> <operator pos:start="227:16" pos:end="227:16">=</operator> <literal type="number" pos:start="227:18" pos:end="227:18">0</literal></expr>;</init> <condition pos:start="227:21" pos:end="227:46"><expr pos:start="227:21" pos:end="227:45"><name pos:start="227:21" pos:end="227:21">j</name> <operator pos:start="227:23" pos:end="227:23">&lt;</operator> <name pos:start="227:25" pos:end="227:45"><name pos:start="227:25" pos:end="227:27">vmd</name><operator pos:start="227:28" pos:end="227:29">-&gt;</operator><name pos:start="227:30" pos:end="227:45">frames_per_block</name></name></expr>;</condition> <incr pos:start="227:48" pos:end="227:50"><expr pos:start="227:48" pos:end="227:50"><name pos:start="227:48" pos:end="227:48">j</name><operator pos:start="227:49" pos:end="227:50">++</operator></expr></incr>)</control> <block pos:start="227:53" pos:end="295:9">{<block_content pos:start="229:13" pos:end="293:35">

            <decl_stmt pos:start="229:13" pos:end="229:21"><decl pos:start="229:13" pos:end="229:20"><type pos:start="229:13" pos:end="229:15"><name pos:start="229:13" pos:end="229:15">int</name></type> <name pos:start="229:17" pos:end="229:20">type</name></decl>;</decl_stmt>

            <decl_stmt pos:start="231:13" pos:end="231:26"><decl pos:start="231:13" pos:end="231:25"><type pos:start="231:13" pos:end="231:20"><name pos:start="231:13" pos:end="231:20">uint32_t</name></type> <name pos:start="231:22" pos:end="231:25">size</name></decl>;</decl_stmt>



            <expr_stmt pos:start="235:13" pos:end="235:57"><expr pos:start="235:13" pos:end="235:56"><call pos:start="235:13" pos:end="235:56"><name pos:start="235:13" pos:end="235:21">avio_read</name><argument_list pos:start="235:22" pos:end="235:56">(<argument pos:start="235:23" pos:end="235:24"><expr pos:start="235:23" pos:end="235:24"><name pos:start="235:23" pos:end="235:24">pb</name></expr></argument>, <argument pos:start="235:27" pos:end="235:31"><expr pos:start="235:27" pos:end="235:31"><name pos:start="235:27" pos:end="235:31">chunk</name></expr></argument>, <argument pos:start="235:34" pos:end="235:55"><expr pos:start="235:34" pos:end="235:55"><name pos:start="235:34" pos:end="235:55">BYTES_PER_FRAME_RECORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:28"><expr pos:start="237:13" pos:end="237:27"><name pos:start="237:13" pos:end="237:16">type</name> <operator pos:start="237:18" pos:end="237:18">=</operator> <name pos:start="237:20" pos:end="237:27"><name pos:start="237:20" pos:end="237:24">chunk</name><index pos:start="237:25" pos:end="237:27">[<expr pos:start="237:26" pos:end="237:26"><literal type="number" pos:start="237:26" pos:end="237:26">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:38"><expr pos:start="239:13" pos:end="239:37"><name pos:start="239:13" pos:end="239:16">size</name> <operator pos:start="239:18" pos:end="239:18">=</operator> <call pos:start="239:20" pos:end="239:37"><name pos:start="239:20" pos:end="239:26">AV_RL32</name><argument_list pos:start="239:27" pos:end="239:37">(<argument pos:start="239:28" pos:end="239:36"><expr pos:start="239:28" pos:end="239:36"><operator pos:start="239:28" pos:end="239:28">&amp;</operator><name pos:start="239:29" pos:end="239:36"><name pos:start="239:29" pos:end="239:33">chunk</name><index pos:start="239:34" pos:end="239:36">[<expr pos:start="239:35" pos:end="239:35"><literal type="number" pos:start="239:35" pos:end="239:35">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="241:13" pos:end="243:25"><if pos:start="241:13" pos:end="243:25">if<condition pos:start="241:15" pos:end="241:34">(<expr pos:start="241:16" pos:end="241:33"><operator pos:start="241:16" pos:end="241:16">!</operator><name pos:start="241:17" pos:end="241:20">size</name> <operator pos:start="241:22" pos:end="241:23">&amp;&amp;</operator> <name pos:start="241:25" pos:end="241:28">type</name> <operator pos:start="241:30" pos:end="241:31">!=</operator> <literal type="number" pos:start="241:33" pos:end="241:33">1</literal></expr>)</condition><block type="pseudo" pos:start="243:17" pos:end="243:25"><block_content pos:start="243:17" pos:end="243:25">

                <continue pos:start="243:17" pos:end="243:25">continue;</continue></block_content></block></if></if_stmt>

            <switch pos:start="245:13" pos:end="291:13">switch<condition pos:start="245:19" pos:end="245:24">(<expr pos:start="245:20" pos:end="245:23"><name pos:start="245:20" pos:end="245:23">type</name></expr>)</condition> <block pos:start="245:26" pos:end="291:13">{<block_content pos:start="247:13" pos:end="289:22">

            <case pos:start="247:13" pos:end="247:19">case <expr pos:start="247:18" pos:end="247:18"><literal type="number" pos:start="247:18" pos:end="247:18">1</literal></expr>:</case> <comment type="block" pos:start="247:21" pos:end="247:37">/* Audio Chunk */</comment>

                <if_stmt pos:start="249:17" pos:end="249:31"><if pos:start="249:17" pos:end="249:31">if <condition pos:start="249:20" pos:end="249:24">(<expr pos:start="249:21" pos:end="249:23"><operator pos:start="249:21" pos:end="249:21">!</operator><name pos:start="249:22" pos:end="249:23">st</name></expr>)</condition><block type="pseudo" pos:start="249:26" pos:end="249:31"><block_content pos:start="249:26" pos:end="249:31"> <break pos:start="249:26" pos:end="249:31">break;</break></block_content></block></if></if_stmt>

                <comment type="block" pos:start="251:17" pos:end="251:70">/* first audio chunk contains several audio buffers */</comment>

                <expr_stmt pos:start="253:17" pos:end="253:77"><expr pos:start="253:17" pos:end="253:76"><name pos:start="253:17" pos:end="253:46"><name pos:start="253:17" pos:end="253:19">vmd</name><operator pos:start="253:20" pos:end="253:21">-&gt;</operator><name pos:start="253:22" pos:end="253:32">frame_table</name><index pos:start="253:33" pos:end="253:46">[<expr pos:start="253:34" pos:end="253:45"><name pos:start="253:34" pos:end="253:45">total_frames</name></expr>]</index></name><operator pos:start="253:47" pos:end="253:47">.</operator><name pos:start="253:48" pos:end="253:59">frame_offset</name> <operator pos:start="253:61" pos:end="253:61">=</operator> <name pos:start="253:63" pos:end="253:76">current_offset</name></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:86"><expr pos:start="255:17" pos:end="255:85"><name pos:start="255:17" pos:end="255:46"><name pos:start="255:17" pos:end="255:19">vmd</name><operator pos:start="255:20" pos:end="255:21">-&gt;</operator><name pos:start="255:22" pos:end="255:32">frame_table</name><index pos:start="255:33" pos:end="255:46">[<expr pos:start="255:34" pos:end="255:45"><name pos:start="255:34" pos:end="255:45">total_frames</name></expr>]</index></name><operator pos:start="255:47" pos:end="255:47">.</operator><name pos:start="255:48" pos:end="255:59">stream_index</name> <operator pos:start="255:61" pos:end="255:61">=</operator> <name pos:start="255:63" pos:end="255:85"><name pos:start="255:63" pos:end="255:65">vmd</name><operator pos:start="255:66" pos:end="255:67">-&gt;</operator><name pos:start="255:68" pos:end="255:85">audio_stream_index</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="257:17" pos:end="257:65"><expr pos:start="257:17" pos:end="257:64"><name pos:start="257:17" pos:end="257:46"><name pos:start="257:17" pos:end="257:19">vmd</name><operator pos:start="257:20" pos:end="257:21">-&gt;</operator><name pos:start="257:22" pos:end="257:32">frame_table</name><index pos:start="257:33" pos:end="257:46">[<expr pos:start="257:34" pos:end="257:45"><name pos:start="257:34" pos:end="257:45">total_frames</name></expr>]</index></name><operator pos:start="257:47" pos:end="257:47">.</operator><name pos:start="257:48" pos:end="257:57">frame_size</name> <operator pos:start="257:59" pos:end="257:59">=</operator> <name pos:start="257:61" pos:end="257:64">size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="259:17" pos:end="259:99"><expr pos:start="259:17" pos:end="259:98"><call pos:start="259:17" pos:end="259:98"><name pos:start="259:17" pos:end="259:22">memcpy</name><argument_list pos:start="259:23" pos:end="259:98">(<argument pos:start="259:24" pos:end="259:66"><expr pos:start="259:24" pos:end="259:66"><name pos:start="259:24" pos:end="259:53"><name pos:start="259:24" pos:end="259:26">vmd</name><operator pos:start="259:27" pos:end="259:28">-&gt;</operator><name pos:start="259:29" pos:end="259:39">frame_table</name><index pos:start="259:40" pos:end="259:53">[<expr pos:start="259:41" pos:end="259:52"><name pos:start="259:41" pos:end="259:52">total_frames</name></expr>]</index></name><operator pos:start="259:54" pos:end="259:54">.</operator><name pos:start="259:55" pos:end="259:66">frame_record</name></expr></argument>, <argument pos:start="259:69" pos:end="259:73"><expr pos:start="259:69" pos:end="259:73"><name pos:start="259:69" pos:end="259:73">chunk</name></expr></argument>, <argument pos:start="259:76" pos:end="259:97"><expr pos:start="259:76" pos:end="259:97"><name pos:start="259:76" pos:end="259:97">BYTES_PER_FRAME_RECORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="261:17" pos:end="261:71"><expr pos:start="261:17" pos:end="261:70"><name pos:start="261:17" pos:end="261:46"><name pos:start="261:17" pos:end="261:19">vmd</name><operator pos:start="261:20" pos:end="261:21">-&gt;</operator><name pos:start="261:22" pos:end="261:32">frame_table</name><index pos:start="261:33" pos:end="261:46">[<expr pos:start="261:34" pos:end="261:45"><name pos:start="261:34" pos:end="261:45">total_frames</name></expr>]</index></name><operator pos:start="261:47" pos:end="261:47">.</operator><name pos:start="261:48" pos:end="261:50">pts</name> <operator pos:start="261:52" pos:end="261:52">=</operator> <name pos:start="261:54" pos:end="261:70">current_audio_pts</name></expr>;</expr_stmt>

                <expr_stmt pos:start="263:17" pos:end="263:31"><expr pos:start="263:17" pos:end="263:30"><name pos:start="263:17" pos:end="263:28">total_frames</name><operator pos:start="263:29" pos:end="263:30">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="265:17" pos:end="271:40"><if pos:start="265:17" pos:end="267:59">if<condition pos:start="265:19" pos:end="265:38">(<expr pos:start="265:20" pos:end="265:37"><operator pos:start="265:20" pos:end="265:20">!</operator><name pos:start="265:21" pos:end="265:37">current_audio_pts</name></expr>)</condition><block type="pseudo" pos:start="267:21" pos:end="267:59"><block_content pos:start="267:21" pos:end="267:59">

                    <expr_stmt pos:start="267:21" pos:end="267:59"><expr pos:start="267:21" pos:end="267:58"><name pos:start="267:21" pos:end="267:37">current_audio_pts</name> <operator pos:start="267:39" pos:end="267:40">+=</operator> <name pos:start="267:42" pos:end="267:54">sound_buffers</name> <operator pos:start="267:56" pos:end="267:56">-</operator> <literal type="number" pos:start="267:58" pos:end="267:58">1</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="269:17" pos:end="271:40">else<block type="pseudo" pos:start="271:21" pos:end="271:40"><block_content pos:start="271:21" pos:end="271:40">

                    <expr_stmt pos:start="271:21" pos:end="271:40"><expr pos:start="271:21" pos:end="271:39"><name pos:start="271:21" pos:end="271:37">current_audio_pts</name><operator pos:start="271:38" pos:end="271:39">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="273:17" pos:end="273:22">break;</break>

            <case pos:start="275:13" pos:end="275:19">case <expr pos:start="275:18" pos:end="275:18"><literal type="number" pos:start="275:18" pos:end="275:18">2</literal></expr>:</case> <comment type="block" pos:start="275:21" pos:end="275:37">/* Video Chunk */</comment>

                <expr_stmt pos:start="277:17" pos:end="277:77"><expr pos:start="277:17" pos:end="277:76"><name pos:start="277:17" pos:end="277:46"><name pos:start="277:17" pos:end="277:19">vmd</name><operator pos:start="277:20" pos:end="277:21">-&gt;</operator><name pos:start="277:22" pos:end="277:32">frame_table</name><index pos:start="277:33" pos:end="277:46">[<expr pos:start="277:34" pos:end="277:45"><name pos:start="277:34" pos:end="277:45">total_frames</name></expr>]</index></name><operator pos:start="277:47" pos:end="277:47">.</operator><name pos:start="277:48" pos:end="277:59">frame_offset</name> <operator pos:start="277:61" pos:end="277:61">=</operator> <name pos:start="277:63" pos:end="277:76">current_offset</name></expr>;</expr_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:86"><expr pos:start="279:17" pos:end="279:85"><name pos:start="279:17" pos:end="279:46"><name pos:start="279:17" pos:end="279:19">vmd</name><operator pos:start="279:20" pos:end="279:21">-&gt;</operator><name pos:start="279:22" pos:end="279:32">frame_table</name><index pos:start="279:33" pos:end="279:46">[<expr pos:start="279:34" pos:end="279:45"><name pos:start="279:34" pos:end="279:45">total_frames</name></expr>]</index></name><operator pos:start="279:47" pos:end="279:47">.</operator><name pos:start="279:48" pos:end="279:59">stream_index</name> <operator pos:start="279:61" pos:end="279:61">=</operator> <name pos:start="279:63" pos:end="279:85"><name pos:start="279:63" pos:end="279:65">vmd</name><operator pos:start="279:66" pos:end="279:67">-&gt;</operator><name pos:start="279:68" pos:end="279:85">video_stream_index</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="281:17" pos:end="281:65"><expr pos:start="281:17" pos:end="281:64"><name pos:start="281:17" pos:end="281:46"><name pos:start="281:17" pos:end="281:19">vmd</name><operator pos:start="281:20" pos:end="281:21">-&gt;</operator><name pos:start="281:22" pos:end="281:32">frame_table</name><index pos:start="281:33" pos:end="281:46">[<expr pos:start="281:34" pos:end="281:45"><name pos:start="281:34" pos:end="281:45">total_frames</name></expr>]</index></name><operator pos:start="281:47" pos:end="281:47">.</operator><name pos:start="281:48" pos:end="281:57">frame_size</name> <operator pos:start="281:59" pos:end="281:59">=</operator> <name pos:start="281:61" pos:end="281:64">size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="283:17" pos:end="283:99"><expr pos:start="283:17" pos:end="283:98"><call pos:start="283:17" pos:end="283:98"><name pos:start="283:17" pos:end="283:22">memcpy</name><argument_list pos:start="283:23" pos:end="283:98">(<argument pos:start="283:24" pos:end="283:66"><expr pos:start="283:24" pos:end="283:66"><name pos:start="283:24" pos:end="283:53"><name pos:start="283:24" pos:end="283:26">vmd</name><operator pos:start="283:27" pos:end="283:28">-&gt;</operator><name pos:start="283:29" pos:end="283:39">frame_table</name><index pos:start="283:40" pos:end="283:53">[<expr pos:start="283:41" pos:end="283:52"><name pos:start="283:41" pos:end="283:52">total_frames</name></expr>]</index></name><operator pos:start="283:54" pos:end="283:54">.</operator><name pos:start="283:55" pos:end="283:66">frame_record</name></expr></argument>, <argument pos:start="283:69" pos:end="283:73"><expr pos:start="283:69" pos:end="283:73"><name pos:start="283:69" pos:end="283:73">chunk</name></expr></argument>, <argument pos:start="283:76" pos:end="283:97"><expr pos:start="283:76" pos:end="283:97"><name pos:start="283:76" pos:end="283:97">BYTES_PER_FRAME_RECORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="285:17" pos:end="285:55"><expr pos:start="285:17" pos:end="285:54"><name pos:start="285:17" pos:end="285:46"><name pos:start="285:17" pos:end="285:19">vmd</name><operator pos:start="285:20" pos:end="285:21">-&gt;</operator><name pos:start="285:22" pos:end="285:32">frame_table</name><index pos:start="285:33" pos:end="285:46">[<expr pos:start="285:34" pos:end="285:45"><name pos:start="285:34" pos:end="285:45">total_frames</name></expr>]</index></name><operator pos:start="285:47" pos:end="285:47">.</operator><name pos:start="285:48" pos:end="285:50">pts</name> <operator pos:start="285:52" pos:end="285:52">=</operator> <name pos:start="285:54" pos:end="285:54">i</name></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:31"><expr pos:start="287:17" pos:end="287:30"><name pos:start="287:17" pos:end="287:28">total_frames</name><operator pos:start="287:29" pos:end="287:30">++</operator></expr>;</expr_stmt>

                <break pos:start="289:17" pos:end="289:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="293:13" pos:end="293:35"><expr pos:start="293:13" pos:end="293:34"><name pos:start="293:13" pos:end="293:26">current_offset</name> <operator pos:start="293:28" pos:end="293:29">+=</operator> <name pos:start="293:31" pos:end="293:34">size</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="301:5" pos:end="301:29"><expr pos:start="301:5" pos:end="301:28"><call pos:start="301:5" pos:end="301:28"><name pos:start="301:5" pos:end="301:11">av_free</name><argument_list pos:start="301:12" pos:end="301:28">(<argument pos:start="301:13" pos:end="301:27"><expr pos:start="301:13" pos:end="301:27"><name pos:start="301:13" pos:end="301:27">raw_frame_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="305:5" pos:end="305:27"><expr pos:start="305:5" pos:end="305:26"><name pos:start="305:5" pos:end="305:22"><name pos:start="305:5" pos:end="305:7">vmd</name><operator pos:start="305:8" pos:end="305:9">-&gt;</operator><name pos:start="305:10" pos:end="305:22">current_frame</name></name> <operator pos:start="305:24" pos:end="305:24">=</operator> <literal type="number" pos:start="305:26" pos:end="305:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:36"><expr pos:start="307:5" pos:end="307:35"><name pos:start="307:5" pos:end="307:20"><name pos:start="307:5" pos:end="307:7">vmd</name><operator pos:start="307:8" pos:end="307:9">-&gt;</operator><name pos:start="307:10" pos:end="307:20">frame_count</name></name> <operator pos:start="307:22" pos:end="307:22">=</operator> <name pos:start="307:24" pos:end="307:35">total_frames</name></expr>;</expr_stmt>



    <return pos:start="311:5" pos:end="311:13">return <expr pos:start="311:12" pos:end="311:12"><literal type="number" pos:start="311:12" pos:end="311:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
