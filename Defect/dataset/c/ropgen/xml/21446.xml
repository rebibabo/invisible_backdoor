<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21446.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:59"><name pos:start="1:1" pos:end="1:14">print_insn_ppi</name> <argument_list pos:start="1:16" pos:end="1:59">(<argument pos:start="1:17" pos:end="1:27">int field_b</argument>, <argument pos:start="1:30" pos:end="1:58">struct disassemble_info *info</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="281:1">{<block_content pos:start="5:3" pos:end="279:45">

  <decl_stmt pos:start="5:3" pos:end="5:59"><decl pos:start="5:3" pos:end="5:58"><type pos:start="5:3" pos:end="5:21"><specifier pos:start="5:3" pos:end="5:8">static</specifier> <specifier pos:start="5:10" pos:end="5:14">const</specifier> <name pos:start="5:16" pos:end="5:19">char</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:29"><name pos:start="5:22" pos:end="5:27">sx_tab</name><index pos:start="5:28" pos:end="5:29">[]</index></name> <init pos:start="5:31" pos:end="5:58">= <expr pos:start="5:33" pos:end="5:58"><block pos:start="5:33" pos:end="5:58">{ <expr pos:start="5:35" pos:end="5:38"><literal type="string" pos:start="5:35" pos:end="5:38">"x0"</literal></expr>, <expr pos:start="5:41" pos:end="5:44"><literal type="string" pos:start="5:41" pos:end="5:44">"x1"</literal></expr>, <expr pos:start="5:47" pos:end="5:50"><literal type="string" pos:start="5:47" pos:end="5:50">"a0"</literal></expr>, <expr pos:start="5:53" pos:end="5:56"><literal type="string" pos:start="5:53" pos:end="5:56">"a1"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="7:3" pos:end="7:59"><decl pos:start="7:3" pos:end="7:58"><type pos:start="7:3" pos:end="7:21"><specifier pos:start="7:3" pos:end="7:8">static</specifier> <specifier pos:start="7:10" pos:end="7:14">const</specifier> <name pos:start="7:16" pos:end="7:19">char</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:29"><name pos:start="7:22" pos:end="7:27">sy_tab</name><index pos:start="7:28" pos:end="7:29">[]</index></name> <init pos:start="7:31" pos:end="7:58">= <expr pos:start="7:33" pos:end="7:58"><block pos:start="7:33" pos:end="7:58">{ <expr pos:start="7:35" pos:end="7:38"><literal type="string" pos:start="7:35" pos:end="7:38">"y0"</literal></expr>, <expr pos:start="7:41" pos:end="7:44"><literal type="string" pos:start="7:41" pos:end="7:44">"y1"</literal></expr>, <expr pos:start="7:47" pos:end="7:50"><literal type="string" pos:start="7:47" pos:end="7:50">"m0"</literal></expr>, <expr pos:start="7:53" pos:end="7:56"><literal type="string" pos:start="7:53" pos:end="7:56">"m1"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="9:3" pos:end="9:48"><decl pos:start="9:3" pos:end="9:47"><type pos:start="9:3" pos:end="9:15"><name pos:start="9:3" pos:end="9:15">fprintf_ftype</name></type> <name pos:start="9:17" pos:end="9:26">fprintf_fn</name> <init pos:start="9:28" pos:end="9:47">= <expr pos:start="9:30" pos:end="9:47"><name pos:start="9:30" pos:end="9:47"><name pos:start="9:30" pos:end="9:33">info</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:47">fprintf_func</name></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="11:3" pos:end="11:30"><decl pos:start="11:3" pos:end="11:29"><type pos:start="11:3" pos:end="11:8"><name pos:start="11:3" pos:end="11:6">void</name> <modifier pos:start="11:8" pos:end="11:8">*</modifier></type><name pos:start="11:9" pos:end="11:14">stream</name> <init pos:start="11:16" pos:end="11:29">= <expr pos:start="11:18" pos:end="11:29"><name pos:start="11:18" pos:end="11:29"><name pos:start="11:18" pos:end="11:21">info</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:29">stream</name></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="13:3" pos:end="13:32"><decl pos:start="13:3" pos:end="13:19"><type pos:start="13:3" pos:end="13:14"><name pos:start="13:3" pos:end="13:10">unsigned</name> <name pos:start="13:12" pos:end="13:14">int</name></type> <name pos:start="13:16" pos:end="13:19">nib1</name></decl>, <decl pos:start="13:22" pos:end="13:25"><type ref="prev" pos:start="13:3" pos:end="13:14"/><name pos:start="13:22" pos:end="13:25">nib2</name></decl>, <decl pos:start="13:28" pos:end="13:31"><type ref="prev" pos:start="13:3" pos:end="13:14"/><name pos:start="13:28" pos:end="13:31">nib3</name></decl>;</decl_stmt>

  <decl_stmt pos:start="15:3" pos:end="15:29"><decl pos:start="15:3" pos:end="15:22"><type pos:start="15:3" pos:end="15:14"><name pos:start="15:3" pos:end="15:10">unsigned</name> <name pos:start="15:12" pos:end="15:14">int</name></type> <name pos:start="15:16" pos:end="15:22">altnib1</name></decl>, <decl pos:start="15:25" pos:end="15:28"><type ref="prev" pos:start="15:3" pos:end="15:14"/><name pos:start="15:25" pos:end="15:28">nib4</name></decl>;</decl_stmt>

  <decl_stmt pos:start="17:3" pos:end="17:24"><decl pos:start="17:3" pos:end="17:23"><type pos:start="17:3" pos:end="17:14"><specifier pos:start="17:3" pos:end="17:7">const</specifier> <name pos:start="17:9" pos:end="17:12">char</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:16">dc</name> <init pos:start="17:18" pos:end="17:23">= <expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">NULL</name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="19:3" pos:end="19:27"><decl pos:start="19:3" pos:end="19:26"><type pos:start="19:3" pos:end="19:24"><specifier pos:start="19:3" pos:end="19:7">const</specifier> <name pos:start="19:9" pos:end="19:22">sh_opcode_info</name> <modifier pos:start="19:24" pos:end="19:24">*</modifier></type><name pos:start="19:25" pos:end="19:26">op</name></decl>;</decl_stmt>



  <if_stmt pos:start="23:3" pos:end="37:5"><if pos:start="23:3" pos:end="37:5">if <condition pos:start="23:6" pos:end="23:30">(<expr pos:start="23:7" pos:end="23:29"><operator pos:start="23:7" pos:end="23:7">(</operator><name pos:start="23:8" pos:end="23:14">field_b</name> <operator pos:start="23:16" pos:end="23:16">&amp;</operator> <literal type="number" pos:start="23:18" pos:end="23:23">0xe800</literal><operator pos:start="23:24" pos:end="23:24">)</operator> <operator pos:start="23:26" pos:end="23:27">==</operator> <literal type="number" pos:start="23:29" pos:end="23:29">0</literal></expr>)</condition>

    <block pos:start="25:5" pos:end="37:5">{<block_content pos:start="27:7" pos:end="35:13">

      <expr_stmt pos:start="27:7" pos:end="31:40"><expr pos:start="27:7" pos:end="31:39"><call pos:start="27:7" pos:end="31:39"><name pos:start="27:7" pos:end="27:16">fprintf_fn</name> <argument_list pos:start="27:18" pos:end="31:39">(<argument pos:start="27:19" pos:end="27:24"><expr pos:start="27:19" pos:end="27:24"><name pos:start="27:19" pos:end="27:24">stream</name></expr></argument>, <argument pos:start="27:27" pos:end="27:39"><expr pos:start="27:27" pos:end="27:39"><literal type="string" pos:start="27:27" pos:end="27:39">"psh%c\t#%d,"</literal></expr></argument>,

		  <argument pos:start="29:19" pos:end="29:46"><expr pos:start="29:19" pos:end="29:46"><ternary pos:start="29:19" pos:end="29:46"><condition pos:start="29:19" pos:end="29:36"><expr pos:start="29:19" pos:end="29:34"><name pos:start="29:19" pos:end="29:25">field_b</name> <operator pos:start="29:27" pos:end="29:27">&amp;</operator> <literal type="number" pos:start="29:29" pos:end="29:34">0x1000</literal></expr> ?</condition><then pos:start="29:38" pos:end="29:40"> <expr pos:start="29:38" pos:end="29:40"><literal type="char" pos:start="29:38" pos:end="29:40">'a'</literal></expr> </then><else pos:start="29:42" pos:end="29:46">: <expr pos:start="29:44" pos:end="29:46"><literal type="char" pos:start="29:44" pos:end="29:46">'l'</literal></expr></else></ternary></expr></argument>,

		  <argument pos:start="31:19" pos:end="31:38"><expr pos:start="31:19" pos:end="31:38"><operator pos:start="31:19" pos:end="31:19">(</operator><name pos:start="31:20" pos:end="31:26">field_b</name> <operator pos:start="31:28" pos:end="31:29">&gt;&gt;</operator> <literal type="number" pos:start="31:31" pos:end="31:31">4</literal><operator pos:start="31:32" pos:end="31:32">)</operator> <operator pos:start="31:34" pos:end="31:34">&amp;</operator> <literal type="number" pos:start="31:36" pos:end="31:38">127</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="33:7" pos:end="33:56"><expr pos:start="33:7" pos:end="33:55"><call pos:start="33:7" pos:end="33:55"><name pos:start="33:7" pos:end="33:19">print_dsp_reg</name> <argument_list pos:start="33:21" pos:end="33:55">(<argument pos:start="33:22" pos:end="33:34"><expr pos:start="33:22" pos:end="33:34"><name pos:start="33:22" pos:end="33:28">field_b</name> <operator pos:start="33:30" pos:end="33:30">&amp;</operator> <literal type="number" pos:start="33:32" pos:end="33:34">0xf</literal></expr></argument>, <argument pos:start="33:37" pos:end="33:46"><expr pos:start="33:37" pos:end="33:46"><name pos:start="33:37" pos:end="33:46">fprintf_fn</name></expr></argument>, <argument pos:start="33:49" pos:end="33:54"><expr pos:start="33:49" pos:end="33:54"><name pos:start="33:49" pos:end="33:54">stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="35:7" pos:end="35:13">return;</return>

    </block_content>}</block></if></if_stmt>

  <if_stmt pos:start="39:3" pos:end="101:5"><if pos:start="39:3" pos:end="101:5">if <condition pos:start="39:6" pos:end="39:67">(<expr pos:start="39:7" pos:end="39:66"><operator pos:start="39:7" pos:end="39:7">(</operator><name pos:start="39:8" pos:end="39:14">field_b</name> <operator pos:start="39:16" pos:end="39:16">&amp;</operator> <literal type="number" pos:start="39:18" pos:end="39:23">0xc000</literal><operator pos:start="39:24" pos:end="39:24">)</operator> <operator pos:start="39:26" pos:end="39:27">==</operator> <literal type="number" pos:start="39:29" pos:end="39:34">0x4000</literal> <operator pos:start="39:36" pos:end="39:37">&amp;&amp;</operator> <operator pos:start="39:39" pos:end="39:39">(</operator><name pos:start="39:40" pos:end="39:46">field_b</name> <operator pos:start="39:48" pos:end="39:48">&amp;</operator> <literal type="number" pos:start="39:50" pos:end="39:55">0x3000</literal><operator pos:start="39:56" pos:end="39:56">)</operator> <operator pos:start="39:58" pos:end="39:59">!=</operator> <literal type="number" pos:start="39:61" pos:end="39:66">0x1000</literal></expr>)</condition>

    <block pos:start="41:5" pos:end="101:5">{<block_content pos:start="43:7" pos:end="99:13">

      <decl_stmt pos:start="43:7" pos:end="43:63"><decl pos:start="43:7" pos:end="43:62"><type pos:start="43:7" pos:end="43:25"><specifier pos:start="43:7" pos:end="43:12">static</specifier> <specifier pos:start="43:14" pos:end="43:18">const</specifier> <name pos:start="43:20" pos:end="43:23">char</name> <modifier pos:start="43:25" pos:end="43:25">*</modifier></type><name pos:start="43:26" pos:end="43:33"><name pos:start="43:26" pos:end="43:31">du_tab</name><index pos:start="43:32" pos:end="43:33">[]</index></name> <init pos:start="43:35" pos:end="43:62">= <expr pos:start="43:37" pos:end="43:62"><block pos:start="43:37" pos:end="43:62">{ <expr pos:start="43:39" pos:end="43:42"><literal type="string" pos:start="43:39" pos:end="43:42">"x0"</literal></expr>, <expr pos:start="43:45" pos:end="43:48"><literal type="string" pos:start="43:45" pos:end="43:48">"y0"</literal></expr>, <expr pos:start="43:51" pos:end="43:54"><literal type="string" pos:start="43:51" pos:end="43:54">"a0"</literal></expr>, <expr pos:start="43:57" pos:end="43:60"><literal type="string" pos:start="43:57" pos:end="43:60">"a1"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

      <decl_stmt pos:start="45:7" pos:end="45:63"><decl pos:start="45:7" pos:end="45:62"><type pos:start="45:7" pos:end="45:25"><specifier pos:start="45:7" pos:end="45:12">static</specifier> <specifier pos:start="45:14" pos:end="45:18">const</specifier> <name pos:start="45:20" pos:end="45:23">char</name> <modifier pos:start="45:25" pos:end="45:25">*</modifier></type><name pos:start="45:26" pos:end="45:33"><name pos:start="45:26" pos:end="45:31">se_tab</name><index pos:start="45:32" pos:end="45:33">[]</index></name> <init pos:start="45:35" pos:end="45:62">= <expr pos:start="45:37" pos:end="45:62"><block pos:start="45:37" pos:end="45:62">{ <expr pos:start="45:39" pos:end="45:42"><literal type="string" pos:start="45:39" pos:end="45:42">"x0"</literal></expr>, <expr pos:start="45:45" pos:end="45:48"><literal type="string" pos:start="45:45" pos:end="45:48">"x1"</literal></expr>, <expr pos:start="45:51" pos:end="45:54"><literal type="string" pos:start="45:51" pos:end="45:54">"y0"</literal></expr>, <expr pos:start="45:57" pos:end="45:60"><literal type="string" pos:start="45:57" pos:end="45:60">"a1"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

      <decl_stmt pos:start="47:7" pos:end="47:63"><decl pos:start="47:7" pos:end="47:62"><type pos:start="47:7" pos:end="47:25"><specifier pos:start="47:7" pos:end="47:12">static</specifier> <specifier pos:start="47:14" pos:end="47:18">const</specifier> <name pos:start="47:20" pos:end="47:23">char</name> <modifier pos:start="47:25" pos:end="47:25">*</modifier></type><name pos:start="47:26" pos:end="47:33"><name pos:start="47:26" pos:end="47:31">sf_tab</name><index pos:start="47:32" pos:end="47:33">[]</index></name> <init pos:start="47:35" pos:end="47:62">= <expr pos:start="47:37" pos:end="47:62"><block pos:start="47:37" pos:end="47:62">{ <expr pos:start="47:39" pos:end="47:42"><literal type="string" pos:start="47:39" pos:end="47:42">"y0"</literal></expr>, <expr pos:start="47:45" pos:end="47:48"><literal type="string" pos:start="47:45" pos:end="47:48">"y1"</literal></expr>, <expr pos:start="47:51" pos:end="47:54"><literal type="string" pos:start="47:51" pos:end="47:54">"x0"</literal></expr>, <expr pos:start="47:57" pos:end="47:60"><literal type="string" pos:start="47:57" pos:end="47:60">"a1"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

      <decl_stmt pos:start="49:7" pos:end="49:63"><decl pos:start="49:7" pos:end="49:62"><type pos:start="49:7" pos:end="49:25"><specifier pos:start="49:7" pos:end="49:12">static</specifier> <specifier pos:start="49:14" pos:end="49:18">const</specifier> <name pos:start="49:20" pos:end="49:23">char</name> <modifier pos:start="49:25" pos:end="49:25">*</modifier></type><name pos:start="49:26" pos:end="49:33"><name pos:start="49:26" pos:end="49:31">sg_tab</name><index pos:start="49:32" pos:end="49:33">[]</index></name> <init pos:start="49:35" pos:end="49:62">= <expr pos:start="49:37" pos:end="49:62"><block pos:start="49:37" pos:end="49:62">{ <expr pos:start="49:39" pos:end="49:42"><literal type="string" pos:start="49:39" pos:end="49:42">"m0"</literal></expr>, <expr pos:start="49:45" pos:end="49:48"><literal type="string" pos:start="49:45" pos:end="49:48">"m1"</literal></expr>, <expr pos:start="49:51" pos:end="49:54"><literal type="string" pos:start="49:51" pos:end="49:54">"a0"</literal></expr>, <expr pos:start="49:57" pos:end="49:60"><literal type="string" pos:start="49:57" pos:end="49:60">"a1"</literal></expr> }</block></expr></init></decl>;</decl_stmt>



      <if_stmt pos:start="53:7" pos:end="87:9"><if pos:start="53:7" pos:end="67:9">if <condition pos:start="53:10" pos:end="53:27">(<expr pos:start="53:11" pos:end="53:26"><name pos:start="53:11" pos:end="53:17">field_b</name> <operator pos:start="53:19" pos:end="53:19">&amp;</operator> <literal type="number" pos:start="53:21" pos:end="53:26">0x2000</literal></expr>)</condition>

	<block pos:start="55:9" pos:end="67:9">{<block_content pos:start="57:11" pos:end="65:50">

	  <expr_stmt pos:start="57:11" pos:end="65:50"><expr pos:start="57:11" pos:end="65:49"><call pos:start="57:11" pos:end="65:49"><name pos:start="57:11" pos:end="57:20">fprintf_fn</name> <argument_list pos:start="57:22" pos:end="65:49">(<argument pos:start="57:23" pos:end="57:28"><expr pos:start="57:23" pos:end="57:28"><name pos:start="57:23" pos:end="57:28">stream</name></expr></argument>, <argument pos:start="57:31" pos:end="57:46"><expr pos:start="57:31" pos:end="57:46"><literal type="string" pos:start="57:31" pos:end="57:46">"p%s %s,%s,%s\t"</literal></expr></argument>,

		      <argument pos:start="59:23" pos:end="59:56"><expr pos:start="59:23" pos:end="59:56"><ternary pos:start="59:23" pos:end="59:56"><condition pos:start="59:23" pos:end="59:42"><expr pos:start="59:23" pos:end="59:40"><operator pos:start="59:23" pos:end="59:23">(</operator><name pos:start="59:24" pos:end="59:30">field_b</name> <operator pos:start="59:32" pos:end="59:32">&amp;</operator> <literal type="number" pos:start="59:34" pos:end="59:39">0x1000</literal><operator pos:start="59:40" pos:end="59:40">)</operator></expr> ?</condition><then pos:start="59:44" pos:end="59:48"> <expr pos:start="59:44" pos:end="59:48"><literal type="string" pos:start="59:44" pos:end="59:48">"add"</literal></expr> </then><else pos:start="59:50" pos:end="59:56">: <expr pos:start="59:52" pos:end="59:56"><literal type="string" pos:start="59:52" pos:end="59:56">"sub"</literal></expr></else></ternary></expr></argument>,

		      <argument pos:start="61:23" pos:end="61:48"><expr pos:start="61:23" pos:end="61:48"><name pos:start="61:23" pos:end="61:48"><name pos:start="61:23" pos:end="61:28">sx_tab</name><index pos:start="61:29" pos:end="61:48">[<expr pos:start="61:30" pos:end="61:47"><operator pos:start="61:30" pos:end="61:30">(</operator><name pos:start="61:31" pos:end="61:37">field_b</name> <operator pos:start="61:39" pos:end="61:40">&gt;&gt;</operator> <literal type="number" pos:start="61:42" pos:end="61:42">6</literal><operator pos:start="61:43" pos:end="61:43">)</operator> <operator pos:start="61:45" pos:end="61:45">&amp;</operator> <literal type="number" pos:start="61:47" pos:end="61:47">3</literal></expr>]</index></name></expr></argument>,

		      <argument pos:start="63:23" pos:end="63:48"><expr pos:start="63:23" pos:end="63:48"><name pos:start="63:23" pos:end="63:48"><name pos:start="63:23" pos:end="63:28">sy_tab</name><index pos:start="63:29" pos:end="63:48">[<expr pos:start="63:30" pos:end="63:47"><operator pos:start="63:30" pos:end="63:30">(</operator><name pos:start="63:31" pos:end="63:37">field_b</name> <operator pos:start="63:39" pos:end="63:40">&gt;&gt;</operator> <literal type="number" pos:start="63:42" pos:end="63:42">4</literal><operator pos:start="63:43" pos:end="63:43">)</operator> <operator pos:start="63:45" pos:end="63:45">&amp;</operator> <literal type="number" pos:start="63:47" pos:end="63:47">3</literal></expr>]</index></name></expr></argument>,

		      <argument pos:start="65:23" pos:end="65:48"><expr pos:start="65:23" pos:end="65:48"><name pos:start="65:23" pos:end="65:48"><name pos:start="65:23" pos:end="65:28">du_tab</name><index pos:start="65:29" pos:end="65:48">[<expr pos:start="65:30" pos:end="65:47"><operator pos:start="65:30" pos:end="65:30">(</operator><name pos:start="65:31" pos:end="65:37">field_b</name> <operator pos:start="65:39" pos:end="65:40">&gt;&gt;</operator> <literal type="number" pos:start="65:42" pos:end="65:42">0</literal><operator pos:start="65:43" pos:end="65:43">)</operator> <operator pos:start="65:45" pos:end="65:45">&amp;</operator> <literal type="number" pos:start="65:47" pos:end="65:47">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if>

      <if type="elseif" pos:start="69:7" pos:end="79:9">else if <condition pos:start="69:15" pos:end="73:49">(<expr pos:start="69:16" pos:end="73:48"><operator pos:start="69:16" pos:end="69:16">(</operator><name pos:start="69:17" pos:end="69:23">field_b</name> <operator pos:start="69:25" pos:end="69:25">&amp;</operator> <literal type="number" pos:start="69:27" pos:end="69:30">0xf0</literal><operator pos:start="69:31" pos:end="69:31">)</operator> <operator pos:start="69:33" pos:end="69:34">==</operator> <literal type="number" pos:start="69:36" pos:end="69:39">0x10</literal>

	       <operator pos:start="71:16" pos:end="71:17">&amp;&amp;</operator> <name pos:start="71:19" pos:end="71:28"><name pos:start="71:19" pos:end="71:22">info</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:28">mach</name></name> <operator pos:start="71:30" pos:end="71:31">!=</operator> <name pos:start="71:33" pos:end="71:47">bfd_mach_sh_dsp</name>

	       <operator pos:start="73:16" pos:end="73:17">&amp;&amp;</operator> <name pos:start="73:19" pos:end="73:28"><name pos:start="73:19" pos:end="73:22">info</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:28">mach</name></name> <operator pos:start="73:30" pos:end="73:31">!=</operator> <name pos:start="73:33" pos:end="73:48">bfd_mach_sh3_dsp</name></expr>)</condition>

	<block pos:start="75:9" pos:end="79:9">{<block_content pos:start="77:11" pos:end="77:72">

	  <expr_stmt pos:start="77:11" pos:end="77:72"><expr pos:start="77:11" pos:end="77:71"><call pos:start="77:11" pos:end="77:71"><name pos:start="77:11" pos:end="77:20">fprintf_fn</name> <argument_list pos:start="77:22" pos:end="77:71">(<argument pos:start="77:23" pos:end="77:28"><expr pos:start="77:23" pos:end="77:28"><name pos:start="77:23" pos:end="77:28">stream</name></expr></argument>, <argument pos:start="77:31" pos:end="77:42"><expr pos:start="77:31" pos:end="77:42"><literal type="string" pos:start="77:31" pos:end="77:42">"pclr %s \t"</literal></expr></argument>, <argument pos:start="77:45" pos:end="77:70"><expr pos:start="77:45" pos:end="77:70"><name pos:start="77:45" pos:end="77:70"><name pos:start="77:45" pos:end="77:50">du_tab</name><index pos:start="77:51" pos:end="77:70">[<expr pos:start="77:52" pos:end="77:69"><operator pos:start="77:52" pos:end="77:52">(</operator><name pos:start="77:53" pos:end="77:59">field_b</name> <operator pos:start="77:61" pos:end="77:62">&gt;&gt;</operator> <literal type="number" pos:start="77:64" pos:end="77:64">0</literal><operator pos:start="77:65" pos:end="77:65">)</operator> <operator pos:start="77:67" pos:end="77:67">&amp;</operator> <literal type="number" pos:start="77:69" pos:end="77:69">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if>

      <if type="elseif" pos:start="81:7" pos:end="87:9">else if <condition pos:start="81:15" pos:end="81:37">(<expr pos:start="81:16" pos:end="81:36"><operator pos:start="81:16" pos:end="81:16">(</operator><name pos:start="81:17" pos:end="81:23">field_b</name> <operator pos:start="81:25" pos:end="81:25">&amp;</operator> <literal type="number" pos:start="81:27" pos:end="81:30">0xf3</literal><operator pos:start="81:31" pos:end="81:31">)</operator> <operator pos:start="81:33" pos:end="81:34">!=</operator> <literal type="number" pos:start="81:36" pos:end="81:36">0</literal></expr>)</condition>

	<block pos:start="83:9" pos:end="87:9">{<block_content pos:start="85:11" pos:end="85:55">

	  <expr_stmt pos:start="85:11" pos:end="85:55"><expr pos:start="85:11" pos:end="85:54"><call pos:start="85:11" pos:end="85:54"><name pos:start="85:11" pos:end="85:20">fprintf_fn</name> <argument_list pos:start="85:22" pos:end="85:54">(<argument pos:start="85:23" pos:end="85:28"><expr pos:start="85:23" pos:end="85:28"><name pos:start="85:23" pos:end="85:28">stream</name></expr></argument>, <argument pos:start="85:31" pos:end="85:44"><expr pos:start="85:31" pos:end="85:44"><literal type="string" pos:start="85:31" pos:end="85:44">".word 0x%x\t"</literal></expr></argument>, <argument pos:start="85:47" pos:end="85:53"><expr pos:start="85:47" pos:end="85:53"><name pos:start="85:47" pos:end="85:53">field_b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

      <expr_stmt pos:start="89:7" pos:end="97:47"><expr pos:start="89:7" pos:end="97:46"><call pos:start="89:7" pos:end="97:46"><name pos:start="89:7" pos:end="89:16">fprintf_fn</name> <argument_list pos:start="89:18" pos:end="97:46">(<argument pos:start="89:19" pos:end="89:24"><expr pos:start="89:19" pos:end="89:24"><name pos:start="89:19" pos:end="89:24">stream</name></expr></argument>, <argument pos:start="89:27" pos:end="89:43"><expr pos:start="89:27" pos:end="89:43"><literal type="string" pos:start="89:27" pos:end="89:43">"pmuls%c%s,%s,%s"</literal></expr></argument>,

		  <argument pos:start="91:19" pos:end="91:47"><expr pos:start="91:19" pos:end="91:47"><ternary pos:start="91:19" pos:end="91:47"><condition pos:start="91:19" pos:end="91:36"><expr pos:start="91:19" pos:end="91:34"><name pos:start="91:19" pos:end="91:25">field_b</name> <operator pos:start="91:27" pos:end="91:27">&amp;</operator> <literal type="number" pos:start="91:29" pos:end="91:34">0x2000</literal></expr> ?</condition><then pos:start="91:38" pos:end="91:40"> <expr pos:start="91:38" pos:end="91:40"><literal type="char" pos:start="91:38" pos:end="91:40">' '</literal></expr> </then><else pos:start="91:42" pos:end="91:47">: <expr pos:start="91:44" pos:end="91:47"><literal type="char" pos:start="91:44" pos:end="91:47">'\t'</literal></expr></else></ternary></expr></argument>,

		  <argument pos:start="93:19" pos:end="93:45"><expr pos:start="93:19" pos:end="93:45"><name pos:start="93:19" pos:end="93:45"><name pos:start="93:19" pos:end="93:24">se_tab</name><index pos:start="93:25" pos:end="93:45">[<expr pos:start="93:26" pos:end="93:44"><operator pos:start="93:26" pos:end="93:26">(</operator><name pos:start="93:27" pos:end="93:33">field_b</name> <operator pos:start="93:35" pos:end="93:36">&gt;&gt;</operator> <literal type="number" pos:start="93:38" pos:end="93:39">10</literal><operator pos:start="93:40" pos:end="93:40">)</operator> <operator pos:start="93:42" pos:end="93:42">&amp;</operator> <literal type="number" pos:start="93:44" pos:end="93:44">3</literal></expr>]</index></name></expr></argument>,

		  <argument pos:start="95:19" pos:end="95:45"><expr pos:start="95:19" pos:end="95:45"><name pos:start="95:19" pos:end="95:45"><name pos:start="95:19" pos:end="95:24">sf_tab</name><index pos:start="95:25" pos:end="95:45">[<expr pos:start="95:26" pos:end="95:44"><operator pos:start="95:26" pos:end="95:26">(</operator><name pos:start="95:27" pos:end="95:33">field_b</name> <operator pos:start="95:35" pos:end="95:36">&gt;&gt;</operator>  <literal type="number" pos:start="95:39" pos:end="95:39">8</literal><operator pos:start="95:40" pos:end="95:40">)</operator> <operator pos:start="95:42" pos:end="95:42">&amp;</operator> <literal type="number" pos:start="95:44" pos:end="95:44">3</literal></expr>]</index></name></expr></argument>,

		  <argument pos:start="97:19" pos:end="97:45"><expr pos:start="97:19" pos:end="97:45"><name pos:start="97:19" pos:end="97:45"><name pos:start="97:19" pos:end="97:24">sg_tab</name><index pos:start="97:25" pos:end="97:45">[<expr pos:start="97:26" pos:end="97:44"><operator pos:start="97:26" pos:end="97:26">(</operator><name pos:start="97:27" pos:end="97:33">field_b</name> <operator pos:start="97:35" pos:end="97:36">&gt;&gt;</operator>  <literal type="number" pos:start="97:39" pos:end="97:39">2</literal><operator pos:start="97:40" pos:end="97:40">)</operator> <operator pos:start="97:42" pos:end="97:42">&amp;</operator> <literal type="number" pos:start="97:44" pos:end="97:44">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="99:7" pos:end="99:13">return;</return>

    </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="105:3" pos:end="105:14"><expr pos:start="105:3" pos:end="105:13"><name pos:start="105:3" pos:end="105:6">nib1</name> <operator pos:start="105:8" pos:end="105:8">=</operator> <name pos:start="105:10" pos:end="105:13">PPIC</name></expr>;</expr_stmt>

  <expr_stmt pos:start="107:3" pos:end="107:29"><expr pos:start="107:3" pos:end="107:28"><name pos:start="107:3" pos:end="107:6">nib2</name> <operator pos:start="107:8" pos:end="107:8">=</operator> <name pos:start="107:10" pos:end="107:16">field_b</name> <operator pos:start="107:18" pos:end="107:19">&gt;&gt;</operator> <literal type="number" pos:start="107:21" pos:end="107:22">12</literal> <operator pos:start="107:24" pos:end="107:24">&amp;</operator> <literal type="number" pos:start="107:26" pos:end="107:28">0xf</literal></expr>;</expr_stmt>

  <expr_stmt pos:start="109:3" pos:end="109:28"><expr pos:start="109:3" pos:end="109:27"><name pos:start="109:3" pos:end="109:6">nib3</name> <operator pos:start="109:8" pos:end="109:8">=</operator> <name pos:start="109:10" pos:end="109:16">field_b</name> <operator pos:start="109:18" pos:end="109:19">&gt;&gt;</operator> <literal type="number" pos:start="109:21" pos:end="109:21">8</literal> <operator pos:start="109:23" pos:end="109:23">&amp;</operator> <literal type="number" pos:start="109:25" pos:end="109:27">0xf</literal></expr>;</expr_stmt>

  <expr_stmt pos:start="111:3" pos:end="111:28"><expr pos:start="111:3" pos:end="111:27"><name pos:start="111:3" pos:end="111:6">nib4</name> <operator pos:start="111:8" pos:end="111:8">=</operator> <name pos:start="111:10" pos:end="111:16">field_b</name> <operator pos:start="111:18" pos:end="111:19">&gt;&gt;</operator> <literal type="number" pos:start="111:21" pos:end="111:21">4</literal> <operator pos:start="111:23" pos:end="111:23">&amp;</operator> <literal type="number" pos:start="111:25" pos:end="111:27">0xf</literal></expr>;</expr_stmt>

  <switch pos:start="113:3" pos:end="147:5">switch <condition pos:start="113:10" pos:end="113:21">(<expr pos:start="113:11" pos:end="113:20"><name pos:start="113:11" pos:end="113:14">nib3</name> <operator pos:start="113:16" pos:end="113:16">&amp;</operator> <literal type="number" pos:start="113:18" pos:end="113:20">0x3</literal></expr>)</condition>

    <block pos:start="115:5" pos:end="147:5">{<block_content pos:start="117:5" pos:end="145:12">

    <case pos:start="117:5" pos:end="117:11">case <expr pos:start="117:10" pos:end="117:10"><literal type="number" pos:start="117:10" pos:end="117:10">0</literal></expr>:</case>

      <expr_stmt pos:start="119:7" pos:end="119:14"><expr pos:start="119:7" pos:end="119:13"><name pos:start="119:7" pos:end="119:8">dc</name> <operator pos:start="119:10" pos:end="119:10">=</operator> <literal type="string" pos:start="119:12" pos:end="119:13">""</literal></expr>;</expr_stmt>

      <expr_stmt pos:start="121:7" pos:end="121:18"><expr pos:start="121:7" pos:end="121:17"><name pos:start="121:7" pos:end="121:10">nib1</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <name pos:start="121:14" pos:end="121:17">PPI3</name></expr>;</expr_stmt>

      <break pos:start="123:7" pos:end="123:12">break;</break>

    <case pos:start="125:5" pos:end="125:11">case <expr pos:start="125:10" pos:end="125:10"><literal type="number" pos:start="125:10" pos:end="125:10">1</literal></expr>:</case>

      <expr_stmt pos:start="127:7" pos:end="127:14"><expr pos:start="127:7" pos:end="127:13"><name pos:start="127:7" pos:end="127:8">dc</name> <operator pos:start="127:10" pos:end="127:10">=</operator> <literal type="string" pos:start="127:12" pos:end="127:13">""</literal></expr>;</expr_stmt>

      <break pos:start="129:7" pos:end="129:12">break;</break>

    <case pos:start="131:5" pos:end="131:11">case <expr pos:start="131:10" pos:end="131:10"><literal type="number" pos:start="131:10" pos:end="131:10">2</literal></expr>:</case>

      <expr_stmt pos:start="133:7" pos:end="133:18"><expr pos:start="133:7" pos:end="133:17"><name pos:start="133:7" pos:end="133:8">dc</name> <operator pos:start="133:10" pos:end="133:10">=</operator> <literal type="string" pos:start="133:12" pos:end="133:17">"dct "</literal></expr>;</expr_stmt>

      <expr_stmt pos:start="135:7" pos:end="135:16"><expr pos:start="135:7" pos:end="135:15"><name pos:start="135:7" pos:end="135:10">nib3</name> <operator pos:start="135:12" pos:end="135:13">-=</operator> <literal type="number" pos:start="135:15" pos:end="135:15">1</literal></expr>;</expr_stmt>

      <break pos:start="137:7" pos:end="137:12">break;</break>

    <case pos:start="139:5" pos:end="139:11">case <expr pos:start="139:10" pos:end="139:10"><literal type="number" pos:start="139:10" pos:end="139:10">3</literal></expr>:</case>

      <expr_stmt pos:start="141:7" pos:end="141:18"><expr pos:start="141:7" pos:end="141:17"><name pos:start="141:7" pos:end="141:8">dc</name> <operator pos:start="141:10" pos:end="141:10">=</operator> <literal type="string" pos:start="141:12" pos:end="141:17">"dcf "</literal></expr>;</expr_stmt>

      <expr_stmt pos:start="143:7" pos:end="143:16"><expr pos:start="143:7" pos:end="143:15"><name pos:start="143:7" pos:end="143:10">nib3</name> <operator pos:start="143:12" pos:end="143:13">-=</operator> <literal type="number" pos:start="143:15" pos:end="143:15">2</literal></expr>;</expr_stmt>

      <break pos:start="145:7" pos:end="145:12">break;</break>

    </block_content>}</block></switch>

  <if_stmt pos:start="149:3" pos:end="155:19"><if pos:start="149:3" pos:end="151:21">if <condition pos:start="149:6" pos:end="149:19">(<expr pos:start="149:7" pos:end="149:18"><name pos:start="149:7" pos:end="149:10">nib1</name> <operator pos:start="149:12" pos:end="149:13">==</operator> <name pos:start="149:15" pos:end="149:18">PPI3</name></expr>)</condition><block type="pseudo" pos:start="151:5" pos:end="151:21"><block_content pos:start="151:5" pos:end="151:21">

    <expr_stmt pos:start="151:5" pos:end="151:21"><expr pos:start="151:5" pos:end="151:20"><name pos:start="151:5" pos:end="151:11">altnib1</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <name pos:start="151:15" pos:end="151:20">PPI3NC</name></expr>;</expr_stmt></block_content></block></if>

  <else pos:start="153:3" pos:end="155:19">else<block type="pseudo" pos:start="155:5" pos:end="155:19"><block_content pos:start="155:5" pos:end="155:19">

    <expr_stmt pos:start="155:5" pos:end="155:19"><expr pos:start="155:5" pos:end="155:18"><name pos:start="155:5" pos:end="155:11">altnib1</name> <operator pos:start="155:13" pos:end="155:13">=</operator> <name pos:start="155:15" pos:end="155:18">nib1</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

  <for pos:start="157:3" pos:end="275:5">for <control pos:start="157:7" pos:end="157:37">(<init pos:start="157:8" pos:end="157:21"><expr pos:start="157:8" pos:end="157:20"><name pos:start="157:8" pos:end="157:9">op</name> <operator pos:start="157:11" pos:end="157:11">=</operator> <name pos:start="157:13" pos:end="157:20">sh_table</name></expr>;</init> <condition pos:start="157:23" pos:end="157:31"><expr pos:start="157:23" pos:end="157:30"><name pos:start="157:23" pos:end="157:30"><name pos:start="157:23" pos:end="157:24">op</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:30">name</name></name></expr>;</condition> <incr pos:start="157:33" pos:end="157:36"><expr pos:start="157:33" pos:end="157:36"><name pos:start="157:33" pos:end="157:34">op</name><operator pos:start="157:35" pos:end="157:36">++</operator></expr></incr>)</control>

    <block pos:start="159:5" pos:end="275:5">{<block_content pos:start="161:7" pos:end="273:9">

      <if_stmt pos:start="161:7" pos:end="273:9"><if pos:start="161:7" pos:end="273:9">if <condition pos:start="161:10" pos:end="165:36">(<expr pos:start="161:11" pos:end="165:35"><operator pos:start="161:11" pos:end="161:11">(</operator><name pos:start="161:12" pos:end="161:25"><name pos:start="161:12" pos:end="161:13">op</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:22">nibbles</name><index pos:start="161:23" pos:end="161:25">[<expr pos:start="161:24" pos:end="161:24"><literal type="number" pos:start="161:24" pos:end="161:24">1</literal></expr>]</index></name> <operator pos:start="161:27" pos:end="161:28">==</operator> <name pos:start="161:30" pos:end="161:33">nib1</name> <operator pos:start="161:35" pos:end="161:36">||</operator> <name pos:start="161:38" pos:end="161:51"><name pos:start="161:38" pos:end="161:39">op</name><operator pos:start="161:40" pos:end="161:41">-&gt;</operator><name pos:start="161:42" pos:end="161:48">nibbles</name><index pos:start="161:49" pos:end="161:51">[<expr pos:start="161:50" pos:end="161:50"><literal type="number" pos:start="161:50" pos:end="161:50">1</literal></expr>]</index></name> <operator pos:start="161:53" pos:end="161:54">==</operator> <name pos:start="161:56" pos:end="161:62">altnib1</name><operator pos:start="161:63" pos:end="161:63">)</operator>

	  <operator pos:start="163:11" pos:end="163:12">&amp;&amp;</operator> <name pos:start="163:14" pos:end="163:27"><name pos:start="163:14" pos:end="163:15">op</name><operator pos:start="163:16" pos:end="163:17">-&gt;</operator><name pos:start="163:18" pos:end="163:24">nibbles</name><index pos:start="163:25" pos:end="163:27">[<expr pos:start="163:26" pos:end="163:26"><literal type="number" pos:start="163:26" pos:end="163:26">2</literal></expr>]</index></name> <operator pos:start="163:29" pos:end="163:30">==</operator> <name pos:start="163:32" pos:end="163:35">nib2</name>

	  <operator pos:start="165:11" pos:end="165:12">&amp;&amp;</operator> <name pos:start="165:14" pos:end="165:27"><name pos:start="165:14" pos:end="165:15">op</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:24">nibbles</name><index pos:start="165:25" pos:end="165:27">[<expr pos:start="165:26" pos:end="165:26"><literal type="number" pos:start="165:26" pos:end="165:26">3</literal></expr>]</index></name> <operator pos:start="165:29" pos:end="165:30">==</operator> <name pos:start="165:32" pos:end="165:35">nib3</name></expr>)</condition>

	<block pos:start="167:9" pos:end="273:9">{<block_content pos:start="169:11" pos:end="271:17">

	  <decl_stmt pos:start="169:11" pos:end="169:16"><decl pos:start="169:11" pos:end="169:15"><type pos:start="169:11" pos:end="169:13"><name pos:start="169:11" pos:end="169:13">int</name></type> <name pos:start="169:15" pos:end="169:15">n</name></decl>;</decl_stmt>



	  <switch pos:start="173:11" pos:end="217:13">switch <condition pos:start="173:18" pos:end="173:33">(<expr pos:start="173:19" pos:end="173:32"><name pos:start="173:19" pos:end="173:32"><name pos:start="173:19" pos:end="173:20">op</name><operator pos:start="173:21" pos:end="173:22">-&gt;</operator><name pos:start="173:23" pos:end="173:29">nibbles</name><index pos:start="173:30" pos:end="173:32">[<expr pos:start="173:31" pos:end="173:31"><literal type="number" pos:start="173:31" pos:end="173:31">4</literal></expr>]</index></name></expr>)</condition>

	    <block pos:start="175:13" pos:end="217:13">{<block_content pos:start="177:13" pos:end="215:23">

	    <case pos:start="177:13" pos:end="177:23">case <expr pos:start="177:18" pos:end="177:22"><name pos:start="177:18" pos:end="177:22">HEX_0</name></expr>:</case>

	      <break pos:start="179:15" pos:end="179:20">break;</break>

	    <case pos:start="181:13" pos:end="181:26">case <expr pos:start="181:18" pos:end="181:25"><name pos:start="181:18" pos:end="181:25">HEX_XX00</name></expr>:</case>

	      <if_stmt pos:start="183:15" pos:end="185:25"><if pos:start="183:15" pos:end="185:25">if <condition pos:start="183:18" pos:end="183:34">(<expr pos:start="183:19" pos:end="183:33"><operator pos:start="183:19" pos:end="183:19">(</operator><name pos:start="183:20" pos:end="183:23">nib4</name> <operator pos:start="183:25" pos:end="183:25">&amp;</operator> <literal type="number" pos:start="183:27" pos:end="183:27">3</literal><operator pos:start="183:28" pos:end="183:28">)</operator> <operator pos:start="183:30" pos:end="183:31">!=</operator> <literal type="number" pos:start="183:33" pos:end="183:33">0</literal></expr>)</condition><block type="pseudo" pos:start="185:17" pos:end="185:25"><block_content pos:start="185:17" pos:end="185:25">

		<continue pos:start="185:17" pos:end="185:25">continue;</continue></block_content></block></if></if_stmt>

	      <break pos:start="187:15" pos:end="187:20">break;</break>

	    <case pos:start="189:13" pos:end="189:23">case <expr pos:start="189:18" pos:end="189:22"><name pos:start="189:18" pos:end="189:22">HEX_1</name></expr>:</case>

	      <if_stmt pos:start="191:15" pos:end="193:25"><if pos:start="191:15" pos:end="193:25">if <condition pos:start="191:18" pos:end="191:34">(<expr pos:start="191:19" pos:end="191:33"><operator pos:start="191:19" pos:end="191:19">(</operator><name pos:start="191:20" pos:end="191:23">nib4</name> <operator pos:start="191:25" pos:end="191:25">&amp;</operator> <literal type="number" pos:start="191:27" pos:end="191:27">3</literal><operator pos:start="191:28" pos:end="191:28">)</operator> <operator pos:start="191:30" pos:end="191:31">!=</operator> <literal type="number" pos:start="191:33" pos:end="191:33">1</literal></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:25"><block_content pos:start="193:17" pos:end="193:25">

		<continue pos:start="193:17" pos:end="193:25">continue;</continue></block_content></block></if></if_stmt>

	      <break pos:start="195:15" pos:end="195:20">break;</break>

	    <case pos:start="197:13" pos:end="197:26">case <expr pos:start="197:18" pos:end="197:25"><name pos:start="197:18" pos:end="197:25">HEX_00YY</name></expr>:</case>

	      <if_stmt pos:start="199:15" pos:end="201:25"><if pos:start="199:15" pos:end="201:25">if <condition pos:start="199:18" pos:end="199:36">(<expr pos:start="199:19" pos:end="199:35"><operator pos:start="199:19" pos:end="199:19">(</operator><name pos:start="199:20" pos:end="199:23">nib4</name> <operator pos:start="199:25" pos:end="199:25">&amp;</operator> <literal type="number" pos:start="199:27" pos:end="199:29">0xc</literal><operator pos:start="199:30" pos:end="199:30">)</operator> <operator pos:start="199:32" pos:end="199:33">!=</operator> <literal type="number" pos:start="199:35" pos:end="199:35">0</literal></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="201:25"><block_content pos:start="201:17" pos:end="201:25">

		<continue pos:start="201:17" pos:end="201:25">continue;</continue></block_content></block></if></if_stmt>

	      <break pos:start="203:15" pos:end="203:20">break;</break>

	    <case pos:start="205:13" pos:end="205:23">case <expr pos:start="205:18" pos:end="205:22"><name pos:start="205:18" pos:end="205:22">HEX_4</name></expr>:</case>

	      <if_stmt pos:start="207:15" pos:end="209:25"><if pos:start="207:15" pos:end="209:25">if <condition pos:start="207:18" pos:end="207:36">(<expr pos:start="207:19" pos:end="207:35"><operator pos:start="207:19" pos:end="207:19">(</operator><name pos:start="207:20" pos:end="207:23">nib4</name> <operator pos:start="207:25" pos:end="207:25">&amp;</operator> <literal type="number" pos:start="207:27" pos:end="207:29">0xc</literal><operator pos:start="207:30" pos:end="207:30">)</operator> <operator pos:start="207:32" pos:end="207:33">!=</operator> <literal type="number" pos:start="207:35" pos:end="207:35">4</literal></expr>)</condition><block type="pseudo" pos:start="209:17" pos:end="209:25"><block_content pos:start="209:17" pos:end="209:25">

		<continue pos:start="209:17" pos:end="209:25">continue;</continue></block_content></block></if></if_stmt>

	      <break pos:start="211:15" pos:end="211:20">break;</break>

	    <default pos:start="213:13" pos:end="213:20">default:</default>

	      <expr_stmt pos:start="215:15" pos:end="215:23"><expr pos:start="215:15" pos:end="215:22"><call pos:start="215:15" pos:end="215:22"><name pos:start="215:15" pos:end="215:19">abort</name> <argument_list pos:start="215:21" pos:end="215:22">()</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></switch>

	  <expr_stmt pos:start="219:11" pos:end="219:54"><expr pos:start="219:11" pos:end="219:53"><call pos:start="219:11" pos:end="219:53"><name pos:start="219:11" pos:end="219:20">fprintf_fn</name> <argument_list pos:start="219:22" pos:end="219:53">(<argument pos:start="219:23" pos:end="219:28"><expr pos:start="219:23" pos:end="219:28"><name pos:start="219:23" pos:end="219:28">stream</name></expr></argument>, <argument pos:start="219:31" pos:end="219:38"><expr pos:start="219:31" pos:end="219:38"><literal type="string" pos:start="219:31" pos:end="219:38">"%s%s\t"</literal></expr></argument>, <argument pos:start="219:41" pos:end="219:42"><expr pos:start="219:41" pos:end="219:42"><name pos:start="219:41" pos:end="219:42">dc</name></expr></argument>, <argument pos:start="219:45" pos:end="219:52"><expr pos:start="219:45" pos:end="219:52"><name pos:start="219:45" pos:end="219:52"><name pos:start="219:45" pos:end="219:46">op</name><operator pos:start="219:47" pos:end="219:48">-&gt;</operator><name pos:start="219:49" pos:end="219:52">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	  <for pos:start="221:11" pos:end="269:13">for <control pos:start="221:15" pos:end="221:56">(<init pos:start="221:16" pos:end="221:21"><expr pos:start="221:16" pos:end="221:20"><name pos:start="221:16" pos:end="221:16">n</name> <operator pos:start="221:18" pos:end="221:18">=</operator> <literal type="number" pos:start="221:20" pos:end="221:20">0</literal></expr>;</init> <condition pos:start="221:23" pos:end="221:51"><expr pos:start="221:23" pos:end="221:50"><name pos:start="221:23" pos:end="221:23">n</name> <operator pos:start="221:25" pos:end="221:25">&lt;</operator> <literal type="number" pos:start="221:27" pos:end="221:27">3</literal> <operator pos:start="221:29" pos:end="221:30">&amp;&amp;</operator> <name pos:start="221:32" pos:end="221:41"><name pos:start="221:32" pos:end="221:33">op</name><operator pos:start="221:34" pos:end="221:35">-&gt;</operator><name pos:start="221:36" pos:end="221:38">arg</name><index pos:start="221:39" pos:end="221:41">[<expr pos:start="221:40" pos:end="221:40"><name pos:start="221:40" pos:end="221:40">n</name></expr>]</index></name> <operator pos:start="221:43" pos:end="221:44">!=</operator> <name pos:start="221:46" pos:end="221:50">A_END</name></expr>;</condition> <incr pos:start="221:53" pos:end="221:55"><expr pos:start="221:53" pos:end="221:55"><name pos:start="221:53" pos:end="221:53">n</name><operator pos:start="221:54" pos:end="221:55">++</operator></expr></incr>)</control>

	    <block pos:start="223:13" pos:end="269:13">{<block_content pos:start="225:15" pos:end="267:17">

	      <if_stmt pos:start="225:15" pos:end="227:41"><if pos:start="225:15" pos:end="227:41">if <condition pos:start="225:18" pos:end="225:43">(<expr pos:start="225:19" pos:end="225:42"><name pos:start="225:19" pos:end="225:19">n</name> <operator pos:start="225:21" pos:end="225:22">&amp;&amp;</operator> <name pos:start="225:24" pos:end="225:33"><name pos:start="225:24" pos:end="225:25">op</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:30">arg</name><index pos:start="225:31" pos:end="225:33">[<expr pos:start="225:32" pos:end="225:32"><literal type="number" pos:start="225:32" pos:end="225:32">1</literal></expr>]</index></name> <operator pos:start="225:35" pos:end="225:36">!=</operator> <name pos:start="225:38" pos:end="225:42">A_END</name></expr>)</condition><block type="pseudo" pos:start="227:17" pos:end="227:41"><block_content pos:start="227:17" pos:end="227:41">

		<expr_stmt pos:start="227:17" pos:end="227:41"><expr pos:start="227:17" pos:end="227:40"><call pos:start="227:17" pos:end="227:40"><name pos:start="227:17" pos:end="227:26">fprintf_fn</name> <argument_list pos:start="227:28" pos:end="227:40">(<argument pos:start="227:29" pos:end="227:34"><expr pos:start="227:29" pos:end="227:34"><name pos:start="227:29" pos:end="227:34">stream</name></expr></argument>, <argument pos:start="227:37" pos:end="227:39"><expr pos:start="227:37" pos:end="227:39"><literal type="string" pos:start="227:37" pos:end="227:39">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	      <switch pos:start="229:15" pos:end="267:17">switch <condition pos:start="229:22" pos:end="229:33">(<expr pos:start="229:23" pos:end="229:32"><name pos:start="229:23" pos:end="229:32"><name pos:start="229:23" pos:end="229:24">op</name><operator pos:start="229:25" pos:end="229:26">-&gt;</operator><name pos:start="229:27" pos:end="229:29">arg</name><index pos:start="229:30" pos:end="229:32">[<expr pos:start="229:31" pos:end="229:31"><name pos:start="229:31" pos:end="229:31">n</name></expr>]</index></name></expr>)</condition>

		<block pos:start="231:17" pos:end="267:17">{<block_content pos:start="233:17" pos:end="265:27">

		<case pos:start="233:17" pos:end="233:31">case <expr pos:start="233:22" pos:end="233:30"><name pos:start="233:22" pos:end="233:30">DSP_REG_N</name></expr>:</case>

		  <expr_stmt pos:start="235:19" pos:end="235:68"><expr pos:start="235:19" pos:end="235:67"><call pos:start="235:19" pos:end="235:67"><name pos:start="235:19" pos:end="235:31">print_dsp_reg</name> <argument_list pos:start="235:33" pos:end="235:67">(<argument pos:start="235:34" pos:end="235:46"><expr pos:start="235:34" pos:end="235:46"><name pos:start="235:34" pos:end="235:40">field_b</name> <operator pos:start="235:42" pos:end="235:42">&amp;</operator> <literal type="number" pos:start="235:44" pos:end="235:46">0xf</literal></expr></argument>, <argument pos:start="235:49" pos:end="235:58"><expr pos:start="235:49" pos:end="235:58"><name pos:start="235:49" pos:end="235:58">fprintf_fn</name></expr></argument>, <argument pos:start="235:61" pos:end="235:66"><expr pos:start="235:61" pos:end="235:66"><name pos:start="235:61" pos:end="235:66">stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		  <break pos:start="237:19" pos:end="237:24">break;</break>

		<case pos:start="239:17" pos:end="239:31">case <expr pos:start="239:22" pos:end="239:30"><name pos:start="239:22" pos:end="239:30">DSP_REG_X</name></expr>:</case>

		  <expr_stmt pos:start="241:19" pos:end="241:66"><expr pos:start="241:19" pos:end="241:65"><call pos:start="241:19" pos:end="241:65"><name pos:start="241:19" pos:end="241:28">fprintf_fn</name> <argument_list pos:start="241:30" pos:end="241:65">(<argument pos:start="241:31" pos:end="241:36"><expr pos:start="241:31" pos:end="241:36"><name pos:start="241:31" pos:end="241:36">stream</name></expr></argument>, <argument pos:start="241:39" pos:end="241:64"><expr pos:start="241:39" pos:end="241:64"><name pos:start="241:39" pos:end="241:64"><name pos:start="241:39" pos:end="241:44">sx_tab</name><index pos:start="241:45" pos:end="241:64">[<expr pos:start="241:46" pos:end="241:63"><operator pos:start="241:46" pos:end="241:46">(</operator><name pos:start="241:47" pos:end="241:53">field_b</name> <operator pos:start="241:55" pos:end="241:56">&gt;&gt;</operator> <literal type="number" pos:start="241:58" pos:end="241:58">6</literal><operator pos:start="241:59" pos:end="241:59">)</operator> <operator pos:start="241:61" pos:end="241:61">&amp;</operator> <literal type="number" pos:start="241:63" pos:end="241:63">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		  <break pos:start="243:19" pos:end="243:24">break;</break>

		<case pos:start="245:17" pos:end="245:31">case <expr pos:start="245:22" pos:end="245:30"><name pos:start="245:22" pos:end="245:30">DSP_REG_Y</name></expr>:</case>

		  <expr_stmt pos:start="247:19" pos:end="247:66"><expr pos:start="247:19" pos:end="247:65"><call pos:start="247:19" pos:end="247:65"><name pos:start="247:19" pos:end="247:28">fprintf_fn</name> <argument_list pos:start="247:30" pos:end="247:65">(<argument pos:start="247:31" pos:end="247:36"><expr pos:start="247:31" pos:end="247:36"><name pos:start="247:31" pos:end="247:36">stream</name></expr></argument>, <argument pos:start="247:39" pos:end="247:64"><expr pos:start="247:39" pos:end="247:64"><name pos:start="247:39" pos:end="247:64"><name pos:start="247:39" pos:end="247:44">sy_tab</name><index pos:start="247:45" pos:end="247:64">[<expr pos:start="247:46" pos:end="247:63"><operator pos:start="247:46" pos:end="247:46">(</operator><name pos:start="247:47" pos:end="247:53">field_b</name> <operator pos:start="247:55" pos:end="247:56">&gt;&gt;</operator> <literal type="number" pos:start="247:58" pos:end="247:58">4</literal><operator pos:start="247:59" pos:end="247:59">)</operator> <operator pos:start="247:61" pos:end="247:61">&amp;</operator> <literal type="number" pos:start="247:63" pos:end="247:63">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		  <break pos:start="249:19" pos:end="249:24">break;</break>

		<case pos:start="251:17" pos:end="251:28">case <expr pos:start="251:22" pos:end="251:27"><name pos:start="251:22" pos:end="251:27">A_MACH</name></expr>:</case>

		  <expr_stmt pos:start="253:19" pos:end="253:46"><expr pos:start="253:19" pos:end="253:45"><call pos:start="253:19" pos:end="253:45"><name pos:start="253:19" pos:end="253:28">fprintf_fn</name> <argument_list pos:start="253:30" pos:end="253:45">(<argument pos:start="253:31" pos:end="253:36"><expr pos:start="253:31" pos:end="253:36"><name pos:start="253:31" pos:end="253:36">stream</name></expr></argument>, <argument pos:start="253:39" pos:end="253:44"><expr pos:start="253:39" pos:end="253:44"><literal type="string" pos:start="253:39" pos:end="253:44">"mach"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		  <break pos:start="255:19" pos:end="255:24">break;</break>

		<case pos:start="257:17" pos:end="257:28">case <expr pos:start="257:22" pos:end="257:27"><name pos:start="257:22" pos:end="257:27">A_MACL</name></expr>:</case>

		  <expr_stmt pos:start="259:19" pos:end="259:46"><expr pos:start="259:19" pos:end="259:45"><call pos:start="259:19" pos:end="259:45"><name pos:start="259:19" pos:end="259:28">fprintf_fn</name> <argument_list pos:start="259:30" pos:end="259:45">(<argument pos:start="259:31" pos:end="259:36"><expr pos:start="259:31" pos:end="259:36"><name pos:start="259:31" pos:end="259:36">stream</name></expr></argument>, <argument pos:start="259:39" pos:end="259:44"><expr pos:start="259:39" pos:end="259:44"><literal type="string" pos:start="259:39" pos:end="259:44">"macl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		  <break pos:start="261:19" pos:end="261:24">break;</break>

		<default pos:start="263:17" pos:end="263:24">default:</default>

		  <expr_stmt pos:start="265:19" pos:end="265:27"><expr pos:start="265:19" pos:end="265:26"><call pos:start="265:19" pos:end="265:26"><name pos:start="265:19" pos:end="265:23">abort</name> <argument_list pos:start="265:25" pos:end="265:26">()</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></switch>

	    </block_content>}</block></for>

	  <return pos:start="271:11" pos:end="271:17">return;</return>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

  <comment type="block" pos:start="277:3" pos:end="277:19">/* Not found.  */</comment>

  <expr_stmt pos:start="279:3" pos:end="279:45"><expr pos:start="279:3" pos:end="279:44"><call pos:start="279:3" pos:end="279:44"><name pos:start="279:3" pos:end="279:12">fprintf_fn</name> <argument_list pos:start="279:14" pos:end="279:44">(<argument pos:start="279:15" pos:end="279:20"><expr pos:start="279:15" pos:end="279:20"><name pos:start="279:15" pos:end="279:20">stream</name></expr></argument>, <argument pos:start="279:23" pos:end="279:34"><expr pos:start="279:23" pos:end="279:34"><literal type="string" pos:start="279:23" pos:end="279:34">".word 0x%x"</literal></expr></argument>, <argument pos:start="279:37" pos:end="279:43"><expr pos:start="279:37" pos:end="279:43"><name pos:start="279:37" pos:end="279:43">field_b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
