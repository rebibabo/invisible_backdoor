<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11531.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:30">nc_sendv_compat</name><parameter_list pos:start="1:31" pos:end="3:58">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:45">NetClientState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">nc</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:74"><decl pos:start="1:52" pos:end="1:74"><type pos:start="1:52" pos:end="1:74"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:63">struct</name> <name pos:start="1:65" pos:end="1:69">iovec</name></name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">iov</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:41"><decl pos:start="3:32" pos:end="3:41"><type pos:start="3:32" pos:end="3:41"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:41">iovcnt</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:51">unsigned</name></type> <name pos:start="3:53" pos:end="3:57">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:15">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">buf</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:19">buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:17">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">ssize_t</name></type> <name pos:start="13:13" pos:end="13:15">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="31:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:14">iovcnt</name> <operator pos:start="17:16" pos:end="17:17">==</operator> <literal type="number" pos:start="17:19" pos:end="17:19">1</literal></expr>)</condition> <block pos:start="17:22" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:32">

        <expr_stmt pos:start="19:9" pos:end="19:33"><expr pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:14">buffer</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:23"><name pos:start="19:18" pos:end="19:20">iov</name><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>]</index></name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:32">iov_base</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:14">offset</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:23"><name pos:start="21:18" pos:end="21:20">iov</name><index pos:start="21:21" pos:end="21:23">[<expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">0</literal></expr>]</index></name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:31">iov_len</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="31:5">else <block pos:start="23:12" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:62">

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:11">buf</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:41"><name pos:start="25:15" pos:end="25:19">g_new</name><argument_list pos:start="25:20" pos:end="25:41">(<argument pos:start="25:21" pos:end="25:27"><expr pos:start="25:21" pos:end="25:27"><name pos:start="25:21" pos:end="25:27">uint8_t</name></expr></argument>, <argument pos:start="25:30" pos:end="25:40"><expr pos:start="25:30" pos:end="25:40"><name pos:start="25:30" pos:end="25:40">NET_BUFSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:21"><expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:14">buffer</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:20">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:62"><expr pos:start="29:9" pos:end="29:61"><name pos:start="29:9" pos:end="29:14">offset</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:61"><name pos:start="29:18" pos:end="29:27">iov_to_buf</name><argument_list pos:start="29:28" pos:end="29:61">(<argument pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:31">iov</name></expr></argument>, <argument pos:start="29:34" pos:end="29:39"><expr pos:start="29:34" pos:end="29:39"><name pos:start="29:34" pos:end="29:39">iovcnt</name></expr></argument>, <argument pos:start="29:42" pos:end="29:42"><expr pos:start="29:42" pos:end="29:42"><literal type="number" pos:start="29:42" pos:end="29:42">0</literal></expr></argument>, <argument pos:start="29:45" pos:end="29:47"><expr pos:start="29:45" pos:end="29:47"><name pos:start="29:45" pos:end="29:47">buf</name></expr></argument>, <argument pos:start="29:50" pos:end="29:60"><expr pos:start="29:50" pos:end="29:60"><name pos:start="29:50" pos:end="29:60">NET_BUFSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:66">(<expr pos:start="35:9" pos:end="35:65"><name pos:start="35:9" pos:end="35:13">flags</name> <operator pos:start="35:15" pos:end="35:15">&amp;</operator> <name pos:start="35:17" pos:end="35:40">QEMU_NET_PACKET_FLAG_RAW</name> <operator pos:start="35:42" pos:end="35:43">&amp;&amp;</operator> <name pos:start="35:45" pos:end="35:65"><name pos:start="35:45" pos:end="35:46">nc</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:52">info</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:65">receive_raw</name></name></expr>)</condition> <block pos:start="35:68" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:56">

        <expr_stmt pos:start="37:9" pos:end="37:56"><expr pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:55"><name pos:start="37:15" pos:end="37:35"><name pos:start="37:15" pos:end="37:16">nc</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:22">info</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:35">receive_raw</name></name><argument_list pos:start="37:36" pos:end="37:55">(<argument pos:start="37:37" pos:end="37:38"><expr pos:start="37:37" pos:end="37:38"><name pos:start="37:37" pos:end="37:38">nc</name></expr></argument>, <argument pos:start="37:41" pos:end="37:46"><expr pos:start="37:41" pos:end="37:46"><name pos:start="37:41" pos:end="37:46">buffer</name></expr></argument>, <argument pos:start="37:49" pos:end="37:54"><expr pos:start="37:49" pos:end="37:54"><name pos:start="37:49" pos:end="37:54">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="43:5">else <block pos:start="39:12" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:52">

        <expr_stmt pos:start="41:9" pos:end="41:52"><expr pos:start="41:9" pos:end="41:51"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:51"><name pos:start="41:15" pos:end="41:31"><name pos:start="41:15" pos:end="41:16">nc</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:22">info</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:31">receive</name></name><argument_list pos:start="41:32" pos:end="41:51">(<argument pos:start="41:33" pos:end="41:34"><expr pos:start="41:33" pos:end="41:34"><name pos:start="41:33" pos:end="41:34">nc</name></expr></argument>, <argument pos:start="41:37" pos:end="41:42"><expr pos:start="41:37" pos:end="41:42"><name pos:start="41:37" pos:end="41:42">buffer</name></expr></argument>, <argument pos:start="41:45" pos:end="41:50"><expr pos:start="41:45" pos:end="41:50"><name pos:start="41:45" pos:end="41:50">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:16"><expr pos:start="47:5" pos:end="47:15"><call pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:10">g_free</name><argument_list pos:start="47:11" pos:end="47:15">(<argument pos:start="47:12" pos:end="47:14"><expr pos:start="47:12" pos:end="47:14"><name pos:start="47:12" pos:end="47:14">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
