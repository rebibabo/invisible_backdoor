<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12040.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">rtsp_send_cmd</name><parameter_list pos:start="1:26" pos:end="5:54">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, 

                          <parameter pos:start="3:27" pos:end="3:41"><decl pos:start="3:27" pos:end="3:41"><type pos:start="3:27" pos:end="3:41"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:36">char</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">cmd</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:60"><decl pos:start="3:44" pos:end="3:60"><type pos:start="3:44" pos:end="3:60"><name pos:start="3:44" pos:end="3:53">RTSPHeader</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">reply</name></decl></parameter>, 

                          <parameter pos:start="5:27" pos:end="5:53"><decl pos:start="5:27" pos:end="5:53"><type pos:start="5:27" pos:end="5:53"><name pos:start="5:27" pos:end="5:34">unsigned</name> <name pos:start="5:36" pos:end="5:39">char</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier><modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:53">content_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="151:1">{<block_content pos:start="9:5" pos:end="149:31">

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">RTSPState</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:17">rt</name> <init pos:start="9:19" pos:end="9:32">= <expr pos:start="9:21" pos:end="9:32"><name pos:start="9:21" pos:end="9:32"><name pos:start="9:21" pos:end="9:21">s</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:18"><name pos:start="11:10" pos:end="11:12">buf</name><index pos:start="11:13" pos:end="11:18">[<expr pos:start="11:14" pos:end="11:17"><literal type="number" pos:start="11:14" pos:end="11:17">4096</literal></expr>]</index></name></decl>, <decl pos:start="11:21" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:8"/><name pos:start="11:21" pos:end="11:30"><name pos:start="11:21" pos:end="11:24">buf1</name><index pos:start="11:25" pos:end="11:30">[<expr pos:start="11:26" pos:end="11:29"><literal type="number" pos:start="11:26" pos:end="11:29">1024</literal></expr>]</index></name></decl>, <decl pos:start="11:33" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:8"><modifier pos:start="11:33" pos:end="11:33">*</modifier></type><name pos:start="11:34" pos:end="11:34">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name></type> <name pos:start="13:19" pos:end="13:20">ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:22">content_length</name></decl>, <decl pos:start="17:25" pos:end="17:34"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:25" pos:end="17:34">line_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:34"><decl pos:start="19:5" pos:end="19:33"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">char</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:26">content</name> <init pos:start="19:28" pos:end="19:33">= <expr pos:start="19:30" pos:end="19:33"><name pos:start="19:30" pos:end="19:33">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><call pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:10">memset</name><argument_list pos:start="23:11" pos:end="23:40">(<argument pos:start="23:12" pos:end="23:16"><expr pos:start="23:12" pos:end="23:16"><name pos:start="23:12" pos:end="23:16">reply</name></expr></argument>, <argument pos:start="23:19" pos:end="23:19"><expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr></argument>, <argument pos:start="23:22" pos:end="23:39"><expr pos:start="23:22" pos:end="23:39"><sizeof pos:start="23:22" pos:end="23:39">sizeof<argument_list pos:start="23:28" pos:end="23:39">(<argument pos:start="23:29" pos:end="23:38"><expr pos:start="23:29" pos:end="23:38"><name pos:start="23:29" pos:end="23:38">RTSPHeader</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:14"><expr pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:6">rt</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:11">seq</name></name><operator pos:start="27:12" pos:end="27:13">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><call pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:11">pstrcpy</name><argument_list pos:start="29:12" pos:end="29:34">(<argument pos:start="29:13" pos:end="29:15"><expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">buf</name></expr></argument>, <argument pos:start="29:18" pos:end="29:28"><expr pos:start="29:18" pos:end="29:28"><sizeof pos:start="29:18" pos:end="29:28">sizeof<argument_list pos:start="29:24" pos:end="29:28">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:33">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><call pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:12">snprintf</name><argument_list pos:start="31:13" pos:end="31:57">(<argument pos:start="31:14" pos:end="31:17"><expr pos:start="31:14" pos:end="31:17"><name pos:start="31:14" pos:end="31:17">buf1</name></expr></argument>, <argument pos:start="31:20" pos:end="31:31"><expr pos:start="31:20" pos:end="31:31"><sizeof pos:start="31:20" pos:end="31:31">sizeof<argument_list pos:start="31:26" pos:end="31:31">(<argument pos:start="31:27" pos:end="31:30"><expr pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:30">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:34" pos:end="31:47"><expr pos:start="31:34" pos:end="31:47"><literal type="string" pos:start="31:34" pos:end="31:47">"CSeq: %d\r\n"</literal></expr></argument>, <argument pos:start="31:50" pos:end="31:56"><expr pos:start="31:50" pos:end="31:56"><name pos:start="31:50" pos:end="31:56"><name pos:start="31:50" pos:end="31:51">rt</name><operator pos:start="31:52" pos:end="31:53">-&gt;</operator><name pos:start="31:54" pos:end="31:56">seq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><call pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:11">pstrcat</name><argument_list pos:start="33:12" pos:end="33:35">(<argument pos:start="33:13" pos:end="33:15"><expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">buf</name></expr></argument>, <argument pos:start="33:18" pos:end="33:28"><expr pos:start="33:18" pos:end="33:28"><sizeof pos:start="33:18" pos:end="33:28">sizeof<argument_list pos:start="33:24" pos:end="33:28">(<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:31" pos:end="33:34"><expr pos:start="33:31" pos:end="33:34"><name pos:start="33:31" pos:end="33:34">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:65">(<expr pos:start="35:9" pos:end="35:64"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:10">rt</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:22">session_id</name><index pos:start="35:23" pos:end="35:25">[<expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr>]</index></name> <operator pos:start="35:27" pos:end="35:28">!=</operator> <literal type="char" pos:start="35:30" pos:end="35:33">'\0'</literal> <operator pos:start="35:35" pos:end="35:36">&amp;&amp;</operator> <operator pos:start="35:38" pos:end="35:38">!</operator><call pos:start="35:39" pos:end="35:64"><name pos:start="35:39" pos:end="35:44">strstr</name><argument_list pos:start="35:45" pos:end="35:64">(<argument pos:start="35:46" pos:end="35:48"><expr pos:start="35:46" pos:end="35:48"><name pos:start="35:46" pos:end="35:48">cmd</name></expr></argument>, <argument pos:start="35:51" pos:end="35:63"><expr pos:start="35:51" pos:end="35:63"><literal type="string" pos:start="35:51" pos:end="35:63">"\nIf-Match:"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:67" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:40">

        <expr_stmt pos:start="37:9" pos:end="37:72"><expr pos:start="37:9" pos:end="37:71"><call pos:start="37:9" pos:end="37:71"><name pos:start="37:9" pos:end="37:16">snprintf</name><argument_list pos:start="37:17" pos:end="37:71">(<argument pos:start="37:18" pos:end="37:21"><expr pos:start="37:18" pos:end="37:21"><name pos:start="37:18" pos:end="37:21">buf1</name></expr></argument>, <argument pos:start="37:24" pos:end="37:35"><expr pos:start="37:24" pos:end="37:35"><sizeof pos:start="37:24" pos:end="37:35">sizeof<argument_list pos:start="37:30" pos:end="37:35">(<argument pos:start="37:31" pos:end="37:34"><expr pos:start="37:31" pos:end="37:34"><name pos:start="37:31" pos:end="37:34">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="37:38" pos:end="37:54"><expr pos:start="37:38" pos:end="37:54"><literal type="string" pos:start="37:38" pos:end="37:54">"Session: %s\r\n"</literal></expr></argument>, <argument pos:start="37:57" pos:end="37:70"><expr pos:start="37:57" pos:end="37:70"><name pos:start="37:57" pos:end="37:70"><name pos:start="37:57" pos:end="37:58">rt</name><operator pos:start="37:59" pos:end="37:60">-&gt;</operator><name pos:start="37:61" pos:end="37:70">session_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><call pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:15">pstrcat</name><argument_list pos:start="39:16" pos:end="39:39">(<argument pos:start="39:17" pos:end="39:19"><expr pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">buf</name></expr></argument>, <argument pos:start="39:22" pos:end="39:32"><expr pos:start="39:22" pos:end="39:32"><sizeof pos:start="39:22" pos:end="39:32">sizeof<argument_list pos:start="39:28" pos:end="39:32">(<argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:38">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:37"><call pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:11">pstrcat</name><argument_list pos:start="43:12" pos:end="43:37">(<argument pos:start="43:13" pos:end="43:15"><expr pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">buf</name></expr></argument>, <argument pos:start="43:18" pos:end="43:28"><expr pos:start="43:18" pos:end="43:28"><sizeof pos:start="43:18" pos:end="43:28">sizeof<argument_list pos:start="43:24" pos:end="43:28">(<argument pos:start="43:25" pos:end="43:27"><expr pos:start="43:25" pos:end="43:27"><name pos:start="43:25" pos:end="43:27">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="43:31" pos:end="43:36"><expr pos:start="43:31" pos:end="43:36"><literal type="string" pos:start="43:31" pos:end="43:36">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="45:1" pos:end="45:12">#<cpp:directive pos:start="45:2" pos:end="45:6">ifdef</cpp:directive> <name pos:start="45:8" pos:end="45:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="47:5" pos:end="50:0"><expr pos:start="47:5" pos:end="47:35"><call pos:start="47:5" pos:end="47:35"><name pos:start="47:5" pos:end="47:10">printf</name><argument_list pos:start="47:11" pos:end="47:35">(<argument pos:start="47:12" pos:end="47:29"><expr pos:start="47:12" pos:end="47:29"><literal type="string" pos:start="47:12" pos:end="47:29">"Sending:\n%s--\n"</literal></expr></argument>, <argument pos:start="47:32" pos:end="47:34"><expr pos:start="47:32" pos:end="47:34"><name pos:start="47:32" pos:end="47:34">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="51:5" pos:end="51:45"><expr pos:start="51:5" pos:end="51:44"><call pos:start="51:5" pos:end="51:44"><name pos:start="51:5" pos:end="51:13">url_write</name><argument_list pos:start="51:14" pos:end="51:44">(<argument pos:start="51:15" pos:end="51:25"><expr pos:start="51:15" pos:end="51:25"><name pos:start="51:15" pos:end="51:25"><name pos:start="51:15" pos:end="51:16">rt</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:25">rtsp_hd</name></name></expr></argument>, <argument pos:start="51:28" pos:end="51:30"><expr pos:start="51:28" pos:end="51:30"><name pos:start="51:28" pos:end="51:30">buf</name></expr></argument>, <argument pos:start="51:33" pos:end="51:43"><expr pos:start="51:33" pos:end="51:43"><call pos:start="51:33" pos:end="51:43"><name pos:start="51:33" pos:end="51:38">strlen</name><argument_list pos:start="51:39" pos:end="51:43">(<argument pos:start="51:40" pos:end="51:42"><expr pos:start="51:40" pos:end="51:42"><name pos:start="51:40" pos:end="51:42">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:40">/* parse reply (XXX: use buffers) */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:19"><expr pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:14">line_count</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:29"><expr pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:6">rt</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:18">last_reply</name><index pos:start="59:19" pos:end="59:21">[<expr pos:start="59:20" pos:end="59:20"><literal type="number" pos:start="59:20" pos:end="59:20">0</literal></expr>]</index></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <literal type="char" pos:start="59:25" pos:end="59:28">'\0'</literal></expr>;</expr_stmt>

    <for pos:start="61:5" pos:end="123:5">for<control pos:start="61:8" pos:end="61:11">(<init pos:start="61:9" pos:end="61:9">;</init><condition pos:start="61:10" pos:end="61:10">;</condition><incr/>)</control> <block pos:start="61:13" pos:end="123:5">{<block_content pos:start="63:9" pos:end="121:21">

        <expr_stmt pos:start="63:9" pos:end="63:16"><expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:9">q</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <name pos:start="63:13" pos:end="63:15">buf</name></expr>;</expr_stmt>

        <for pos:start="65:9" pos:end="83:9">for<control pos:start="65:12" pos:end="65:15">(<init pos:start="65:13" pos:end="65:13">;</init><condition pos:start="65:14" pos:end="65:14">;</condition><incr/>)</control> <block pos:start="65:17" pos:end="83:9">{<block_content pos:start="67:13" pos:end="81:13">

            <if_stmt pos:start="67:13" pos:end="69:22"><if pos:start="67:13" pos:end="69:22">if <condition pos:start="67:16" pos:end="67:51">(<expr pos:start="67:17" pos:end="67:50"><call pos:start="67:17" pos:end="67:45"><name pos:start="67:17" pos:end="67:24">url_read</name><argument_list pos:start="67:25" pos:end="67:45">(<argument pos:start="67:26" pos:end="67:36"><expr pos:start="67:26" pos:end="67:36"><name pos:start="67:26" pos:end="67:36"><name pos:start="67:26" pos:end="67:27">rt</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:36">rtsp_hd</name></name></expr></argument>, <argument pos:start="67:39" pos:end="67:41"><expr pos:start="67:39" pos:end="67:41"><operator pos:start="67:39" pos:end="67:39">&amp;</operator><name pos:start="67:40" pos:end="67:41">ch</name></expr></argument>, <argument pos:start="67:44" pos:end="67:44"><expr pos:start="67:44" pos:end="67:44"><literal type="number" pos:start="67:44" pos:end="67:44">1</literal></expr></argument>)</argument_list></call> <operator pos:start="67:47" pos:end="67:48">==</operator> <literal type="number" pos:start="67:50" pos:end="67:50">0</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:22"><block_content pos:start="69:17" pos:end="69:22">

                <break pos:start="69:17" pos:end="69:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="71:13" pos:end="73:22"><if pos:start="71:13" pos:end="73:22">if <condition pos:start="71:16" pos:end="71:27">(<expr pos:start="71:17" pos:end="71:26"><name pos:start="71:17" pos:end="71:18">ch</name> <operator pos:start="71:20" pos:end="71:21">==</operator> <literal type="char" pos:start="71:23" pos:end="71:26">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:22"><block_content pos:start="73:17" pos:end="73:22">

                <break pos:start="73:17" pos:end="73:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="75:13" pos:end="81:13"><if pos:start="75:13" pos:end="81:13">if <condition pos:start="75:16" pos:end="75:27">(<expr pos:start="75:17" pos:end="75:26"><name pos:start="75:17" pos:end="75:18">ch</name> <operator pos:start="75:20" pos:end="75:21">!=</operator> <literal type="char" pos:start="75:23" pos:end="75:26">'\r'</literal></expr>)</condition> <block pos:start="75:29" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:30">

                <if_stmt pos:start="77:17" pos:end="79:30"><if pos:start="77:17" pos:end="79:30">if <condition pos:start="77:20" pos:end="77:48">(<expr pos:start="77:21" pos:end="77:47"><operator pos:start="77:21" pos:end="77:21">(</operator><name pos:start="77:22" pos:end="77:22">q</name> <operator pos:start="77:24" pos:end="77:24">-</operator> <name pos:start="77:26" pos:end="77:28">buf</name><operator pos:start="77:29" pos:end="77:29">)</operator> <operator pos:start="77:31" pos:end="77:31">&lt;</operator> <sizeof pos:start="77:33" pos:end="77:43">sizeof<argument_list pos:start="77:39" pos:end="77:43">(<argument pos:start="77:40" pos:end="77:42"><expr pos:start="77:40" pos:end="77:42"><name pos:start="77:40" pos:end="77:42">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="77:45" pos:end="77:45">-</operator> <literal type="number" pos:start="77:47" pos:end="77:47">1</literal></expr>)</condition><block type="pseudo" pos:start="79:21" pos:end="79:30"><block_content pos:start="79:21" pos:end="79:30">

                    <expr_stmt pos:start="79:21" pos:end="79:30"><expr pos:start="79:21" pos:end="79:29"><operator pos:start="79:21" pos:end="79:21">*</operator><name pos:start="79:22" pos:end="79:22">q</name><operator pos:start="79:23" pos:end="79:24">++</operator> <operator pos:start="79:26" pos:end="79:26">=</operator> <name pos:start="79:28" pos:end="79:29">ch</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="85:9" pos:end="88:0"><expr pos:start="85:9" pos:end="85:17"><operator pos:start="85:9" pos:end="85:9">*</operator><name pos:start="85:10" pos:end="85:10">q</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <literal type="char" pos:start="85:14" pos:end="85:17">'\0'</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="87:1" pos:end="87:12">#<cpp:directive pos:start="87:2" pos:end="87:6">ifdef</cpp:directive> <name pos:start="87:8" pos:end="87:12">DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="89:9" pos:end="92:0"><expr pos:start="89:9" pos:end="89:34"><call pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:14">printf</name><argument_list pos:start="89:15" pos:end="89:34">(<argument pos:start="89:16" pos:end="89:28"><expr pos:start="89:16" pos:end="89:28"><literal type="string" pos:start="89:16" pos:end="89:28">"line='%s'\n"</literal></expr></argument>, <argument pos:start="89:31" pos:end="89:33"><expr pos:start="89:31" pos:end="89:33"><name pos:start="89:31" pos:end="89:33">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="91:1" pos:end="91:6">#<cpp:directive pos:start="91:2" pos:end="91:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="93:9" pos:end="93:31">/* test if last line */</comment>

        <if_stmt pos:start="95:9" pos:end="97:18"><if pos:start="95:9" pos:end="97:18">if <condition pos:start="95:12" pos:end="95:27">(<expr pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:18"><name pos:start="95:13" pos:end="95:15">buf</name><index pos:start="95:16" pos:end="95:18">[<expr pos:start="95:17" pos:end="95:17"><literal type="number" pos:start="95:17" pos:end="95:17">0</literal></expr>]</index></name> <operator pos:start="95:20" pos:end="95:21">==</operator> <literal type="char" pos:start="95:23" pos:end="95:26">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:18"><block_content pos:start="97:13" pos:end="97:18">

            <break pos:start="97:13" pos:end="97:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:16"><expr pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:9">p</name> <operator pos:start="99:11" pos:end="99:11">=</operator> <name pos:start="99:13" pos:end="99:15">buf</name></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="119:9"><if pos:start="101:9" pos:end="111:9">if <condition pos:start="101:12" pos:end="101:28">(<expr pos:start="101:13" pos:end="101:27"><name pos:start="101:13" pos:end="101:22">line_count</name> <operator pos:start="101:24" pos:end="101:25">==</operator> <literal type="number" pos:start="101:27" pos:end="101:27">0</literal></expr>)</condition> <block pos:start="101:30" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:44">

            <comment type="block" pos:start="103:13" pos:end="103:32">/* get reply code */</comment>

            <expr_stmt pos:start="105:13" pos:end="105:45"><expr pos:start="105:13" pos:end="105:44"><call pos:start="105:13" pos:end="105:44"><name pos:start="105:13" pos:end="105:20">get_word</name><argument_list pos:start="105:21" pos:end="105:44">(<argument pos:start="105:22" pos:end="105:25"><expr pos:start="105:22" pos:end="105:25"><name pos:start="105:22" pos:end="105:25">buf1</name></expr></argument>, <argument pos:start="105:28" pos:end="105:39"><expr pos:start="105:28" pos:end="105:39"><sizeof pos:start="105:28" pos:end="105:39">sizeof<argument_list pos:start="105:34" pos:end="105:39">(<argument pos:start="105:35" pos:end="105:38"><expr pos:start="105:35" pos:end="105:38"><name pos:start="105:35" pos:end="105:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="105:42" pos:end="105:43"><expr pos:start="105:42" pos:end="105:43"><operator pos:start="105:42" pos:end="105:42">&amp;</operator><name pos:start="105:43" pos:end="105:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:45"><expr pos:start="107:13" pos:end="107:44"><call pos:start="107:13" pos:end="107:44"><name pos:start="107:13" pos:end="107:20">get_word</name><argument_list pos:start="107:21" pos:end="107:44">(<argument pos:start="107:22" pos:end="107:25"><expr pos:start="107:22" pos:end="107:25"><name pos:start="107:22" pos:end="107:25">buf1</name></expr></argument>, <argument pos:start="107:28" pos:end="107:39"><expr pos:start="107:28" pos:end="107:39"><sizeof pos:start="107:28" pos:end="107:39">sizeof<argument_list pos:start="107:34" pos:end="107:39">(<argument pos:start="107:35" pos:end="107:38"><expr pos:start="107:35" pos:end="107:38"><name pos:start="107:35" pos:end="107:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="107:42" pos:end="107:43"><expr pos:start="107:42" pos:end="107:43"><operator pos:start="107:42" pos:end="107:42">&amp;</operator><name pos:start="107:43" pos:end="107:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:44"><expr pos:start="109:13" pos:end="109:43"><name pos:start="109:13" pos:end="109:30"><name pos:start="109:13" pos:end="109:17">reply</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:30">status_code</name></name> <operator pos:start="109:32" pos:end="109:32">=</operator> <call pos:start="109:34" pos:end="109:43"><name pos:start="109:34" pos:end="109:37">atoi</name><argument_list pos:start="109:38" pos:end="109:43">(<argument pos:start="109:39" pos:end="109:42"><expr pos:start="109:39" pos:end="109:42"><name pos:start="109:39" pos:end="109:42">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="111:11" pos:end="119:9">else <block pos:start="111:16" pos:end="119:9">{<block_content pos:start="113:13" pos:end="117:66">

            <expr_stmt pos:start="113:13" pos:end="113:38"><expr pos:start="113:13" pos:end="113:37"><call pos:start="113:13" pos:end="113:37"><name pos:start="113:13" pos:end="113:27">rtsp_parse_line</name><argument_list pos:start="113:28" pos:end="113:37">(<argument pos:start="113:29" pos:end="113:33"><expr pos:start="113:29" pos:end="113:33"><name pos:start="113:29" pos:end="113:33">reply</name></expr></argument>, <argument pos:start="113:36" pos:end="113:36"><expr pos:start="113:36" pos:end="113:36"><name pos:start="113:36" pos:end="113:36">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:63"><expr pos:start="115:13" pos:end="115:62"><call pos:start="115:13" pos:end="115:62"><name pos:start="115:13" pos:end="115:19">pstrcat</name><argument_list pos:start="115:20" pos:end="115:62">(<argument pos:start="115:21" pos:end="115:34"><expr pos:start="115:21" pos:end="115:34"><name pos:start="115:21" pos:end="115:34"><name pos:start="115:21" pos:end="115:22">rt</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:34">last_reply</name></name></expr></argument>, <argument pos:start="115:37" pos:end="115:58"><expr pos:start="115:37" pos:end="115:58"><sizeof pos:start="115:37" pos:end="115:58">sizeof<argument_list pos:start="115:43" pos:end="115:58">(<argument pos:start="115:44" pos:end="115:57"><expr pos:start="115:44" pos:end="115:57"><name pos:start="115:44" pos:end="115:57"><name pos:start="115:44" pos:end="115:45">rt</name><operator pos:start="115:46" pos:end="115:47">-&gt;</operator><name pos:start="115:48" pos:end="115:57">last_reply</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="115:61" pos:end="115:61"><expr pos:start="115:61" pos:end="115:61"><name pos:start="115:61" pos:end="115:61">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:66"><expr pos:start="117:13" pos:end="117:65"><call pos:start="117:13" pos:end="117:65"><name pos:start="117:13" pos:end="117:19">pstrcat</name><argument_list pos:start="117:20" pos:end="117:65">(<argument pos:start="117:21" pos:end="117:34"><expr pos:start="117:21" pos:end="117:34"><name pos:start="117:21" pos:end="117:34"><name pos:start="117:21" pos:end="117:22">rt</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:34">last_reply</name></name></expr></argument>, <argument pos:start="117:37" pos:end="117:58"><expr pos:start="117:37" pos:end="117:58"><sizeof pos:start="117:37" pos:end="117:58">sizeof<argument_list pos:start="117:43" pos:end="117:58">(<argument pos:start="117:44" pos:end="117:57"><expr pos:start="117:44" pos:end="117:57"><name pos:start="117:44" pos:end="117:57"><name pos:start="117:44" pos:end="117:45">rt</name><operator pos:start="117:46" pos:end="117:47">-&gt;</operator><name pos:start="117:48" pos:end="117:57">last_reply</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="117:61" pos:end="117:64"><expr pos:start="117:61" pos:end="117:64"><literal type="string" pos:start="117:61" pos:end="117:64">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:21"><expr pos:start="121:9" pos:end="121:20"><name pos:start="121:9" pos:end="121:18">line_count</name><operator pos:start="121:19" pos:end="121:20">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    

    <if_stmt pos:start="127:5" pos:end="129:75"><if pos:start="127:5" pos:end="129:75">if <condition pos:start="127:8" pos:end="127:66">(<expr pos:start="127:9" pos:end="127:65"><name pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:10">rt</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:22">session_id</name><index pos:start="127:23" pos:end="127:25">[<expr pos:start="127:24" pos:end="127:24"><literal type="number" pos:start="127:24" pos:end="127:24">0</literal></expr>]</index></name> <operator pos:start="127:27" pos:end="127:28">==</operator> <literal type="char" pos:start="127:30" pos:end="127:33">'\0'</literal> <operator pos:start="127:35" pos:end="127:36">&amp;&amp;</operator> <name pos:start="127:38" pos:end="127:57"><name pos:start="127:38" pos:end="127:42">reply</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:54">session_id</name><index pos:start="127:55" pos:end="127:57">[<expr pos:start="127:56" pos:end="127:56"><literal type="number" pos:start="127:56" pos:end="127:56">0</literal></expr>]</index></name> <operator pos:start="127:59" pos:end="127:60">!=</operator> <literal type="char" pos:start="127:62" pos:end="127:65">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:75"><block_content pos:start="129:9" pos:end="129:75">

        <expr_stmt pos:start="129:9" pos:end="129:75"><expr pos:start="129:9" pos:end="129:74"><call pos:start="129:9" pos:end="129:74"><name pos:start="129:9" pos:end="129:15">pstrcpy</name><argument_list pos:start="129:16" pos:end="129:74">(<argument pos:start="129:17" pos:end="129:30"><expr pos:start="129:17" pos:end="129:30"><name pos:start="129:17" pos:end="129:30"><name pos:start="129:17" pos:end="129:18">rt</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:30">session_id</name></name></expr></argument>, <argument pos:start="129:33" pos:end="129:54"><expr pos:start="129:33" pos:end="129:54"><sizeof pos:start="129:33" pos:end="129:54">sizeof<argument_list pos:start="129:39" pos:end="129:54">(<argument pos:start="129:40" pos:end="129:53"><expr pos:start="129:40" pos:end="129:53"><name pos:start="129:40" pos:end="129:53"><name pos:start="129:40" pos:end="129:41">rt</name><operator pos:start="129:42" pos:end="129:43">-&gt;</operator><name pos:start="129:44" pos:end="129:53">session_id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="129:57" pos:end="129:73"><expr pos:start="129:57" pos:end="129:73"><name pos:start="129:57" pos:end="129:73"><name pos:start="129:57" pos:end="129:61">reply</name><operator pos:start="129:62" pos:end="129:63">-&gt;</operator><name pos:start="129:64" pos:end="129:73">session_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    

    <expr_stmt pos:start="133:5" pos:end="133:43"><expr pos:start="133:5" pos:end="133:42"><name pos:start="133:5" pos:end="133:18">content_length</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <name pos:start="133:22" pos:end="133:42"><name pos:start="133:22" pos:end="133:26">reply</name><operator pos:start="133:27" pos:end="133:28">-&gt;</operator><name pos:start="133:29" pos:end="133:42">content_length</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="145:5"><if pos:start="135:5" pos:end="145:5">if <condition pos:start="135:8" pos:end="135:27">(<expr pos:start="135:9" pos:end="135:26"><name pos:start="135:9" pos:end="135:22">content_length</name> <operator pos:start="135:24" pos:end="135:24">&gt;</operator> <literal type="number" pos:start="135:26" pos:end="135:26">0</literal></expr>)</condition> <block pos:start="135:29" pos:end="145:5">{<block_content pos:start="139:9" pos:end="143:39">

        <comment type="block" pos:start="137:9" pos:end="137:77">/* leave some room for a trailing '\0' (useful for simple parsing) */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:48"><expr pos:start="139:9" pos:end="139:47"><name pos:start="139:9" pos:end="139:15">content</name> <operator pos:start="139:17" pos:end="139:17">=</operator> <call pos:start="139:19" pos:end="139:47"><name pos:start="139:19" pos:end="139:27">av_malloc</name><argument_list pos:start="139:28" pos:end="139:47">(<argument pos:start="139:29" pos:end="139:46"><expr pos:start="139:29" pos:end="139:46"><name pos:start="139:29" pos:end="139:42">content_length</name> <operator pos:start="139:44" pos:end="139:44">+</operator> <literal type="number" pos:start="139:46" pos:end="139:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:55"><expr pos:start="141:9" pos:end="141:54"><call pos:start="141:9" pos:end="141:54"><name pos:start="141:9" pos:end="141:16">url_read</name><argument_list pos:start="141:17" pos:end="141:54">(<argument pos:start="141:18" pos:end="141:28"><expr pos:start="141:18" pos:end="141:28"><name pos:start="141:18" pos:end="141:28"><name pos:start="141:18" pos:end="141:19">rt</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:28">rtsp_hd</name></name></expr></argument>, <argument pos:start="141:31" pos:end="141:37"><expr pos:start="141:31" pos:end="141:37"><name pos:start="141:31" pos:end="141:37">content</name></expr></argument>, <argument pos:start="141:40" pos:end="141:53"><expr pos:start="141:40" pos:end="141:53"><name pos:start="141:40" pos:end="141:53">content_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:39"><expr pos:start="143:9" pos:end="143:38"><name pos:start="143:9" pos:end="143:31"><name pos:start="143:9" pos:end="143:15">content</name><index pos:start="143:16" pos:end="143:31">[<expr pos:start="143:17" pos:end="143:30"><name pos:start="143:17" pos:end="143:30">content_length</name></expr>]</index></name> <operator pos:start="143:33" pos:end="143:33">=</operator> <literal type="char" pos:start="143:35" pos:end="143:38">'\0'</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="147:5" pos:end="149:31"><if pos:start="147:5" pos:end="149:31">if <condition pos:start="147:8" pos:end="147:20">(<expr pos:start="147:9" pos:end="147:19"><name pos:start="147:9" pos:end="147:19">content_ptr</name></expr>)</condition><block type="pseudo" pos:start="149:9" pos:end="149:31"><block_content pos:start="149:9" pos:end="149:31">

        <expr_stmt pos:start="149:9" pos:end="149:31"><expr pos:start="149:9" pos:end="149:30"><operator pos:start="149:9" pos:end="149:9">*</operator><name pos:start="149:10" pos:end="149:20">content_ptr</name> <operator pos:start="149:22" pos:end="149:22">=</operator> <name pos:start="149:24" pos:end="149:30">content</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
