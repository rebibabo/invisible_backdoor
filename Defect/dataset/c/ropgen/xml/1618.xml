<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1618.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">read_vec_element</name><parameter_list pos:start="1:29" pos:end="3:57">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:41">DisasContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><name pos:start="1:47" pos:end="1:54">TCGv_i64</name></type> <name pos:start="1:56" pos:end="1:63">tcg_dest</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:75"><decl pos:start="1:66" pos:end="1:75"><type pos:start="1:66" pos:end="1:75"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:75">srcidx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:40"><decl pos:start="3:30" pos:end="3:40"><type pos:start="3:30" pos:end="3:40"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:40">element</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:50">TCGMemOp</name></type> <name pos:start="3:52" pos:end="3:56">memop</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:5">

    <decl_stmt pos:start="7:5" pos:end="7:68"><decl pos:start="7:5" pos:end="7:67"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">vect_off</name> <init pos:start="7:18" pos:end="7:67">= <expr pos:start="7:20" pos:end="7:67"><call pos:start="7:20" pos:end="7:67"><name pos:start="7:20" pos:end="7:33">vec_reg_offset</name><argument_list pos:start="7:34" pos:end="7:67">(<argument pos:start="7:35" pos:end="7:40"><expr pos:start="7:35" pos:end="7:40"><name pos:start="7:35" pos:end="7:40">srcidx</name></expr></argument>, <argument pos:start="7:43" pos:end="7:49"><expr pos:start="7:43" pos:end="7:49"><name pos:start="7:43" pos:end="7:49">element</name></expr></argument>, <argument pos:start="7:52" pos:end="7:66"><expr pos:start="7:52" pos:end="7:66"><name pos:start="7:52" pos:end="7:56">memop</name> <operator pos:start="7:58" pos:end="7:58">&amp;</operator> <name pos:start="7:60" pos:end="7:66">MO_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <switch pos:start="9:5" pos:end="59:5">switch <condition pos:start="9:12" pos:end="9:18">(<expr pos:start="9:13" pos:end="9:17"><name pos:start="9:13" pos:end="9:17">memop</name></expr>)</condition> <block pos:start="9:20" pos:end="59:5">{<block_content pos:start="11:5" pos:end="57:31">

    <case pos:start="11:5" pos:end="11:14">case <expr pos:start="11:10" pos:end="11:13"><name pos:start="11:10" pos:end="11:13">MO_8</name></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="13:54"><expr pos:start="13:9" pos:end="13:53"><call pos:start="13:9" pos:end="13:53"><name pos:start="13:9" pos:end="13:24">tcg_gen_ld8u_i64</name><argument_list pos:start="13:25" pos:end="13:53">(<argument pos:start="13:26" pos:end="13:33"><expr pos:start="13:26" pos:end="13:33"><name pos:start="13:26" pos:end="13:33">tcg_dest</name></expr></argument>, <argument pos:start="13:36" pos:end="13:42"><expr pos:start="13:36" pos:end="13:42"><name pos:start="13:36" pos:end="13:42">cpu_env</name></expr></argument>, <argument pos:start="13:45" pos:end="13:52"><expr pos:start="13:45" pos:end="13:52"><name pos:start="13:45" pos:end="13:52">vect_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="15:9" pos:end="15:14">break;</break>

    <case pos:start="17:5" pos:end="17:15">case <expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:14">MO_16</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><call pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:25">tcg_gen_ld16u_i64</name><argument_list pos:start="19:26" pos:end="19:54">(<argument pos:start="19:27" pos:end="19:34"><expr pos:start="19:27" pos:end="19:34"><name pos:start="19:27" pos:end="19:34">tcg_dest</name></expr></argument>, <argument pos:start="19:37" pos:end="19:43"><expr pos:start="19:37" pos:end="19:43"><name pos:start="19:37" pos:end="19:43">cpu_env</name></expr></argument>, <argument pos:start="19:46" pos:end="19:53"><expr pos:start="19:46" pos:end="19:53"><name pos:start="19:46" pos:end="19:53">vect_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:15">case <expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:14">MO_32</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:55"><expr pos:start="25:9" pos:end="25:54"><call pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:25">tcg_gen_ld32u_i64</name><argument_list pos:start="25:26" pos:end="25:54">(<argument pos:start="25:27" pos:end="25:34"><expr pos:start="25:27" pos:end="25:34"><name pos:start="25:27" pos:end="25:34">tcg_dest</name></expr></argument>, <argument pos:start="25:37" pos:end="25:43"><expr pos:start="25:37" pos:end="25:43"><name pos:start="25:37" pos:end="25:43">cpu_env</name></expr></argument>, <argument pos:start="25:46" pos:end="25:53"><expr pos:start="25:46" pos:end="25:53"><name pos:start="25:46" pos:end="25:53">vect_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:22">case <expr pos:start="29:10" pos:end="29:21"><name pos:start="29:10" pos:end="29:13">MO_8</name><operator pos:start="29:14" pos:end="29:14">|</operator><name pos:start="29:15" pos:end="29:21">MO_SIGN</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:54"><expr pos:start="31:9" pos:end="31:53"><call pos:start="31:9" pos:end="31:53"><name pos:start="31:9" pos:end="31:24">tcg_gen_ld8s_i64</name><argument_list pos:start="31:25" pos:end="31:53">(<argument pos:start="31:26" pos:end="31:33"><expr pos:start="31:26" pos:end="31:33"><name pos:start="31:26" pos:end="31:33">tcg_dest</name></expr></argument>, <argument pos:start="31:36" pos:end="31:42"><expr pos:start="31:36" pos:end="31:42"><name pos:start="31:36" pos:end="31:42">cpu_env</name></expr></argument>, <argument pos:start="31:45" pos:end="31:52"><expr pos:start="31:45" pos:end="31:52"><name pos:start="31:45" pos:end="31:52">vect_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:23">case <expr pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:14">MO_16</name><operator pos:start="35:15" pos:end="35:15">|</operator><name pos:start="35:16" pos:end="35:22">MO_SIGN</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:55"><expr pos:start="37:9" pos:end="37:54"><call pos:start="37:9" pos:end="37:54"><name pos:start="37:9" pos:end="37:25">tcg_gen_ld16s_i64</name><argument_list pos:start="37:26" pos:end="37:54">(<argument pos:start="37:27" pos:end="37:34"><expr pos:start="37:27" pos:end="37:34"><name pos:start="37:27" pos:end="37:34">tcg_dest</name></expr></argument>, <argument pos:start="37:37" pos:end="37:43"><expr pos:start="37:37" pos:end="37:43"><name pos:start="37:37" pos:end="37:43">cpu_env</name></expr></argument>, <argument pos:start="37:46" pos:end="37:53"><expr pos:start="37:46" pos:end="37:53"><name pos:start="37:46" pos:end="37:53">vect_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:23">case <expr pos:start="41:10" pos:end="41:22"><name pos:start="41:10" pos:end="41:14">MO_32</name><operator pos:start="41:15" pos:end="41:15">|</operator><name pos:start="41:16" pos:end="41:22">MO_SIGN</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:55"><expr pos:start="43:9" pos:end="43:54"><call pos:start="43:9" pos:end="43:54"><name pos:start="43:9" pos:end="43:25">tcg_gen_ld32s_i64</name><argument_list pos:start="43:26" pos:end="43:54">(<argument pos:start="43:27" pos:end="43:34"><expr pos:start="43:27" pos:end="43:34"><name pos:start="43:27" pos:end="43:34">tcg_dest</name></expr></argument>, <argument pos:start="43:37" pos:end="43:43"><expr pos:start="43:37" pos:end="43:43"><name pos:start="43:37" pos:end="43:43">cpu_env</name></expr></argument>, <argument pos:start="43:46" pos:end="43:53"><expr pos:start="43:46" pos:end="43:53"><name pos:start="43:46" pos:end="43:53">vect_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:15">case <expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:14">MO_64</name></expr>:</case>

    <case pos:start="49:5" pos:end="49:23">case <expr pos:start="49:10" pos:end="49:22"><name pos:start="49:10" pos:end="49:14">MO_64</name><operator pos:start="49:15" pos:end="49:15">|</operator><name pos:start="49:16" pos:end="49:22">MO_SIGN</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:52"><expr pos:start="51:9" pos:end="51:51"><call pos:start="51:9" pos:end="51:51"><name pos:start="51:9" pos:end="51:22">tcg_gen_ld_i64</name><argument_list pos:start="51:23" pos:end="51:51">(<argument pos:start="51:24" pos:end="51:31"><expr pos:start="51:24" pos:end="51:31"><name pos:start="51:24" pos:end="51:31">tcg_dest</name></expr></argument>, <argument pos:start="51:34" pos:end="51:40"><expr pos:start="51:34" pos:end="51:40"><name pos:start="51:34" pos:end="51:40">cpu_env</name></expr></argument>, <argument pos:start="51:43" pos:end="51:50"><expr pos:start="51:43" pos:end="51:50"><name pos:start="51:43" pos:end="51:50">vect_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <default pos:start="55:5" pos:end="55:12">default:</default>

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><call pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:28">g_assert_not_reached</name><argument_list pos:start="57:29" pos:end="57:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
