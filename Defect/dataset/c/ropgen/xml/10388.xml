<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10388.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22"><name pos:start="1:8" pos:end="1:13">struct</name> <name pos:start="1:15" pos:end="1:22">addrinfo</name></name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:47">inet_parse_connect_opts</name><parameter_list pos:start="1:48" pos:end="1:77">(<parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:56">QemuOpts</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">opts</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:69">Error</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier><modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:76">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:15">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">addrinfo</name></name></type> <name pos:start="5:21" pos:end="5:22">ai</name></decl>, <decl pos:start="5:25" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:28">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:20">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">port</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><call pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:30">(<argument pos:start="15:12" pos:end="15:14"><expr pos:start="15:12" pos:end="15:14"><operator pos:start="15:12" pos:end="15:12">&amp;</operator><name pos:start="15:13" pos:end="15:14">ai</name></expr></argument>, <argument pos:start="15:17" pos:end="15:17"><expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></argument>, <argument pos:start="15:20" pos:end="15:29"><expr pos:start="15:20" pos:end="15:29"><sizeof pos:start="15:20" pos:end="15:29">sizeof<argument_list pos:start="15:26" pos:end="15:29">(<argument pos:start="15:27" pos:end="15:28"><expr pos:start="15:27" pos:end="15:28"><name pos:start="15:27" pos:end="15:28">ai</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:47"><expr pos:start="19:5" pos:end="19:46"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:6">ai</name><operator pos:start="19:7" pos:end="19:7">.</operator><name pos:start="19:8" pos:end="19:15">ai_flags</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:30">AI_CANONNAME</name> <operator pos:start="19:32" pos:end="19:32">|</operator> <name pos:start="19:34" pos:end="19:46">AI_ADDRCONFIG</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:6">ai</name><operator pos:start="21:7" pos:end="21:7">.</operator><name pos:start="21:8" pos:end="21:16">ai_family</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:28">PF_UNSPEC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:6">ai</name><operator pos:start="23:7" pos:end="23:7">.</operator><name pos:start="23:8" pos:end="23:18">ai_socktype</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:32">SOCK_STREAM</name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:8">addr</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:37"><name pos:start="27:12" pos:end="27:23">qemu_opt_get</name><argument_list pos:start="27:24" pos:end="27:37">(<argument pos:start="27:25" pos:end="27:28"><expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">opts</name></expr></argument>, <argument pos:start="27:31" pos:end="27:36"><expr pos:start="27:31" pos:end="27:36"><literal type="string" pos:start="27:31" pos:end="27:36">"host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:8">port</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:37"><name pos:start="29:12" pos:end="29:23">qemu_opt_get</name><argument_list pos:start="29:24" pos:end="29:37">(<argument pos:start="29:25" pos:end="29:28"><expr pos:start="29:25" pos:end="29:28"><name pos:start="29:25" pos:end="29:28">opts</name></expr></argument>, <argument pos:start="29:31" pos:end="29:36"><expr pos:start="29:31" pos:end="29:36"><literal type="string" pos:start="29:31" pos:end="29:36">"port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:37">(<expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:12">addr</name> <operator pos:start="31:14" pos:end="31:15">==</operator> <name pos:start="31:17" pos:end="31:20">NULL</name> <operator pos:start="31:22" pos:end="31:23">||</operator> <name pos:start="31:25" pos:end="31:28">port</name> <operator pos:start="31:30" pos:end="31:31">==</operator> <name pos:start="31:33" pos:end="31:36">NULL</name></expr>)</condition> <block pos:start="31:39" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:20">

        <expr_stmt pos:start="33:9" pos:end="33:59"><expr pos:start="33:9" pos:end="33:58"><call pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:18">error_setg</name><argument_list pos:start="33:19" pos:end="33:58">(<argument pos:start="33:20" pos:end="33:23"><expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">errp</name></expr></argument>, <argument pos:start="33:26" pos:end="33:57"><expr pos:start="33:26" pos:end="33:57"><literal type="string" pos:start="33:26" pos:end="33:57">"host and/or port not specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:20">return <expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:43">(<expr pos:start="41:9" pos:end="41:42"><call pos:start="41:9" pos:end="41:42"><name pos:start="41:9" pos:end="41:25">qemu_opt_get_bool</name><argument_list pos:start="41:26" pos:end="41:42">(<argument pos:start="41:27" pos:end="41:30"><expr pos:start="41:27" pos:end="41:30"><name pos:start="41:27" pos:end="41:30">opts</name></expr></argument>, <argument pos:start="41:33" pos:end="41:38"><expr pos:start="41:33" pos:end="41:38"><literal type="string" pos:start="41:33" pos:end="41:38">"ipv4"</literal></expr></argument>, <argument pos:start="41:41" pos:end="41:41"><expr pos:start="41:41" pos:end="41:41"><literal type="number" pos:start="41:41" pos:end="41:41">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:45" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:31">

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:10">ai</name><operator pos:start="43:11" pos:end="43:11">.</operator><name pos:start="43:12" pos:end="43:20">ai_family</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:30">PF_INET</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:43">(<expr pos:start="47:9" pos:end="47:42"><call pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:25">qemu_opt_get_bool</name><argument_list pos:start="47:26" pos:end="47:42">(<argument pos:start="47:27" pos:end="47:30"><expr pos:start="47:27" pos:end="47:30"><name pos:start="47:27" pos:end="47:30">opts</name></expr></argument>, <argument pos:start="47:33" pos:end="47:38"><expr pos:start="47:33" pos:end="47:38"><literal type="string" pos:start="47:33" pos:end="47:38">"ipv6"</literal></expr></argument>, <argument pos:start="47:41" pos:end="47:41"><expr pos:start="47:41" pos:end="47:41"><literal type="number" pos:start="47:41" pos:end="47:41">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:45" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:32">

        <expr_stmt pos:start="49:9" pos:end="49:32"><expr pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:10">ai</name><operator pos:start="49:11" pos:end="49:11">.</operator><name pos:start="49:12" pos:end="49:20">ai_family</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:31">PF_INET6</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:16">/* lookup */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:44"><expr pos:start="57:5" pos:end="57:43"><name pos:start="57:5" pos:end="57:6">rc</name> <operator pos:start="57:8" pos:end="57:8">=</operator> <call pos:start="57:10" pos:end="57:43"><name pos:start="57:10" pos:end="57:20">getaddrinfo</name><argument_list pos:start="57:21" pos:end="57:43">(<argument pos:start="57:22" pos:end="57:25"><expr pos:start="57:22" pos:end="57:25"><name pos:start="57:22" pos:end="57:25">addr</name></expr></argument>, <argument pos:start="57:28" pos:end="57:31"><expr pos:start="57:28" pos:end="57:31"><name pos:start="57:28" pos:end="57:31">port</name></expr></argument>, <argument pos:start="57:34" pos:end="57:36"><expr pos:start="57:34" pos:end="57:36"><operator pos:start="57:34" pos:end="57:34">&amp;</operator><name pos:start="57:35" pos:end="57:36">ai</name></expr></argument>, <argument pos:start="57:39" pos:end="57:42"><expr pos:start="57:39" pos:end="57:42"><operator pos:start="57:39" pos:end="57:39">&amp;</operator><name pos:start="57:40" pos:end="57:42">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:10">rc</name> <operator pos:start="59:12" pos:end="59:13">!=</operator> <literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>)</condition> <block pos:start="59:18" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:20">

        <expr_stmt pos:start="61:9" pos:end="63:37"><expr pos:start="61:9" pos:end="63:36"><call pos:start="61:9" pos:end="63:36"><name pos:start="61:9" pos:end="61:18">error_setg</name><argument_list pos:start="61:19" pos:end="63:36">(<argument pos:start="61:20" pos:end="61:23"><expr pos:start="61:20" pos:end="61:23"><name pos:start="61:20" pos:end="61:23">errp</name></expr></argument>, <argument pos:start="61:26" pos:end="61:66"><expr pos:start="61:26" pos:end="61:66"><literal type="string" pos:start="61:26" pos:end="61:66">"address resolution failed for %s:%s: %s"</literal></expr></argument>, <argument pos:start="61:69" pos:end="61:72"><expr pos:start="61:69" pos:end="61:72"><name pos:start="61:69" pos:end="61:72">addr</name></expr></argument>, <argument pos:start="61:75" pos:end="61:78"><expr pos:start="61:75" pos:end="61:78"><name pos:start="61:75" pos:end="61:78">port</name></expr></argument>,

                   <argument pos:start="63:20" pos:end="63:35"><expr pos:start="63:20" pos:end="63:35"><call pos:start="63:20" pos:end="63:35"><name pos:start="63:20" pos:end="63:31">gai_strerror</name><argument_list pos:start="63:32" pos:end="63:35">(<argument pos:start="63:33" pos:end="63:34"><expr pos:start="63:33" pos:end="63:34"><name pos:start="63:33" pos:end="63:34">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:20">return <expr pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="69:5" pos:end="69:15">return <expr pos:start="69:12" pos:end="69:14"><name pos:start="69:12" pos:end="69:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
