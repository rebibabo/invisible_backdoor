<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15744.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:75"><name pos:start="1:1" pos:end="1:16">rdt_parse_packet</name> <argument_list pos:start="1:18" pos:end="5:75">(<argument pos:start="1:19" pos:end="1:38">AVFormatContext *ctx</argument>, <argument pos:start="1:41" pos:end="1:59">PayloadContext *rdt</argument>, <argument pos:start="1:62" pos:end="1:73">AVStream *st</argument>,

                  <argument pos:start="3:19" pos:end="3:31">AVPacket *pkt</argument>, <argument pos:start="3:34" pos:end="3:52">uint32_t *timestamp</argument>,

                  <argument pos:start="5:19" pos:end="5:36">const uint8_t *buf</argument>, <argument pos:start="5:39" pos:end="5:45">int len</argument>, <argument pos:start="5:48" pos:end="5:63">uint16_t rtp_seq</argument>, <argument pos:start="5:66" pos:end="5:74">int flags</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="83:1">{<block_content pos:start="9:5" pos:end="81:34">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">seq</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">1</literal></expr></init></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:20">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">AVIOContext</name></type> <name pos:start="11:17" pos:end="11:18">pb</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:19"><name pos:start="15:10" pos:end="15:12">rdt</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:19">rmctx</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="73:5"><if pos:start="21:5" pos:end="57:5">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:11">rdt</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:26">audio_pkt_cnt</name></name> <operator pos:start="21:28" pos:end="21:29">==</operator> <literal type="number" pos:start="21:31" pos:end="21:31">0</literal></expr>)</condition> <block pos:start="21:34" pos:end="57:5">{<block_content pos:start="23:9" pos:end="55:9">

        <decl_stmt pos:start="23:9" pos:end="23:16"><decl pos:start="23:9" pos:end="23:15"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:15">pos</name></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:68"><expr pos:start="27:9" pos:end="27:67"><call pos:start="27:9" pos:end="27:67"><name pos:start="27:9" pos:end="27:25">ffio_init_context</name><argument_list pos:start="27:26" pos:end="27:67">(<argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:29">pb</name></expr></argument>, <argument pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:34">buf</name></expr></argument>, <argument pos:start="27:37" pos:end="27:39"><expr pos:start="27:37" pos:end="27:39"><name pos:start="27:37" pos:end="27:39">len</name></expr></argument>, <argument pos:start="27:42" pos:end="27:42"><expr pos:start="27:42" pos:end="27:42"><literal type="number" pos:start="27:42" pos:end="27:42">0</literal></expr></argument>, <argument pos:start="27:45" pos:end="27:48"><expr pos:start="27:45" pos:end="27:48"><name pos:start="27:45" pos:end="27:48">NULL</name></expr></argument>, <argument pos:start="27:51" pos:end="27:54"><expr pos:start="27:51" pos:end="27:54"><name pos:start="27:51" pos:end="27:54">NULL</name></expr></argument>, <argument pos:start="27:57" pos:end="27:60"><expr pos:start="27:57" pos:end="27:60"><name pos:start="27:57" pos:end="27:60">NULL</name></expr></argument>, <argument pos:start="27:63" pos:end="27:66"><expr pos:start="27:63" pos:end="27:66"><name pos:start="27:63" pos:end="27:66">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:13">flags</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <ternary pos:start="29:17" pos:end="29:46"><condition pos:start="29:17" pos:end="29:40"><expr pos:start="29:17" pos:end="29:38"><operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:22">flags</name> <operator pos:start="29:24" pos:end="29:24">&amp;</operator> <name pos:start="29:26" pos:end="29:37">RTP_FLAG_KEY</name><operator pos:start="29:38" pos:end="29:38">)</operator></expr> ?</condition><then pos:start="29:42" pos:end="29:42"> <expr pos:start="29:42" pos:end="29:42"><literal type="number" pos:start="29:42" pos:end="29:42">2</literal></expr> </then><else pos:start="29:44" pos:end="29:46">: <expr pos:start="29:46" pos:end="29:46"><literal type="number" pos:start="29:46" pos:end="29:46">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="33:59"><expr pos:start="31:9" pos:end="33:58"><name pos:start="31:9" pos:end="31:11">res</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="33:58"><name pos:start="31:15" pos:end="31:32">ff_rm_parse_packet</name> <argument_list pos:start="31:34" pos:end="33:58">(<argument pos:start="31:35" pos:end="31:44"><expr pos:start="31:35" pos:end="31:44"><name pos:start="31:35" pos:end="31:44"><name pos:start="31:35" pos:end="31:37">rdt</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:44">rmctx</name></name></expr></argument>, <argument pos:start="31:47" pos:end="31:49"><expr pos:start="31:47" pos:end="31:49"><operator pos:start="31:47" pos:end="31:47">&amp;</operator><name pos:start="31:48" pos:end="31:49">pb</name></expr></argument>, <argument pos:start="31:52" pos:end="31:53"><expr pos:start="31:52" pos:end="31:53"><name pos:start="31:52" pos:end="31:53">st</name></expr></argument>, <argument pos:start="31:56" pos:end="31:75"><expr pos:start="31:56" pos:end="31:75"><name pos:start="31:56" pos:end="31:75"><name pos:start="31:56" pos:end="31:58">rdt</name><operator pos:start="31:59" pos:end="31:60">-&gt;</operator><name pos:start="31:61" pos:end="31:64">rmst</name><index pos:start="31:65" pos:end="31:75">[<expr pos:start="31:66" pos:end="31:74"><name pos:start="31:66" pos:end="31:74"><name pos:start="31:66" pos:end="31:67">st</name><operator pos:start="31:68" pos:end="31:69">-&gt;</operator><name pos:start="31:70" pos:end="31:74">index</name></name></expr>]</index></name></expr></argument>, <argument pos:start="31:78" pos:end="31:80"><expr pos:start="31:78" pos:end="31:80"><name pos:start="31:78" pos:end="31:80">len</name></expr></argument>, <argument pos:start="31:83" pos:end="31:85"><expr pos:start="31:83" pos:end="31:85"><name pos:start="31:83" pos:end="31:85">pkt</name></expr></argument>,

                                  <argument pos:start="33:35" pos:end="33:38"><expr pos:start="33:35" pos:end="33:38"><operator pos:start="33:35" pos:end="33:35">&amp;</operator><name pos:start="33:36" pos:end="33:38">seq</name></expr></argument>, <argument pos:start="33:41" pos:end="33:45"><expr pos:start="33:41" pos:end="33:45"><name pos:start="33:41" pos:end="33:45">flags</name></expr></argument>, <argument pos:start="33:48" pos:end="33:57"><expr pos:start="33:48" pos:end="33:57"><operator pos:start="33:48" pos:end="33:48">*</operator><name pos:start="33:49" pos:end="33:57">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:11">pos</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:28"><name pos:start="35:15" pos:end="35:23">avio_tell</name><argument_list pos:start="35:24" pos:end="35:28">(<argument pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><operator pos:start="35:25" pos:end="35:25">&amp;</operator><name pos:start="35:26" pos:end="35:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="39:23"><if pos:start="37:9" pos:end="39:23">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">res</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:23"><block_content pos:start="39:13" pos:end="39:23">

            <return pos:start="39:13" pos:end="39:23">return <expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">res</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="55:9"><if pos:start="41:9" pos:end="55:9">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">res</name> <operator pos:start="41:17" pos:end="41:17">&gt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition> <block pos:start="41:22" pos:end="55:9">{<block_content pos:start="43:13" pos:end="53:27">

            <if_stmt pos:start="43:13" pos:end="51:13"><if pos:start="43:13" pos:end="51:13">if <condition pos:start="43:16" pos:end="43:55">(<expr pos:start="43:17" pos:end="43:54"><name pos:start="43:17" pos:end="43:35"><name pos:start="43:17" pos:end="43:18">st</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:25">codec</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:35">codec_id</name></name> <operator pos:start="43:37" pos:end="43:38">==</operator> <name pos:start="43:40" pos:end="43:54">AV_CODEC_ID_AAC</name></expr>)</condition> <block pos:start="43:57" pos:end="51:13">{<block_content pos:start="45:17" pos:end="49:76">

                <expr_stmt pos:start="45:17" pos:end="45:59"><expr pos:start="45:17" pos:end="45:58"><call pos:start="45:17" pos:end="45:58"><name pos:start="45:17" pos:end="45:22">memcpy</name> <argument_list pos:start="45:24" pos:end="45:58">(<argument pos:start="45:25" pos:end="45:35"><expr pos:start="45:25" pos:end="45:35"><name pos:start="45:25" pos:end="45:35"><name pos:start="45:25" pos:end="45:27">rdt</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:35">buffer</name></name></expr></argument>, <argument pos:start="45:38" pos:end="45:46"><expr pos:start="45:38" pos:end="45:46"><name pos:start="45:38" pos:end="45:40">buf</name> <operator pos:start="45:42" pos:end="45:42">+</operator> <name pos:start="45:44" pos:end="45:46">pos</name></expr></argument>, <argument pos:start="45:49" pos:end="45:57"><expr pos:start="45:49" pos:end="45:57"><name pos:start="45:49" pos:end="45:51">len</name> <operator pos:start="45:53" pos:end="45:53">-</operator> <name pos:start="45:55" pos:end="45:57">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="49:76"><expr pos:start="47:17" pos:end="49:75"><name pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:19">rdt</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:26">rmctx</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:30">pb</name></name> <operator pos:start="47:32" pos:end="47:32">=</operator> <call pos:start="47:34" pos:end="49:75"><name pos:start="47:34" pos:end="47:51">avio_alloc_context</name> <argument_list pos:start="47:53" pos:end="49:75">(<argument pos:start="47:54" pos:end="47:64"><expr pos:start="47:54" pos:end="47:64"><name pos:start="47:54" pos:end="47:64"><name pos:start="47:54" pos:end="47:56">rdt</name><operator pos:start="47:57" pos:end="47:58">-&gt;</operator><name pos:start="47:59" pos:end="47:64">buffer</name></name></expr></argument>, <argument pos:start="47:67" pos:end="47:75"><expr pos:start="47:67" pos:end="47:75"><name pos:start="47:67" pos:end="47:69">len</name> <operator pos:start="47:71" pos:end="47:71">-</operator> <name pos:start="47:73" pos:end="47:75">pos</name></expr></argument>, <argument pos:start="47:78" pos:end="47:78"><expr pos:start="47:78" pos:end="47:78"><literal type="number" pos:start="47:78" pos:end="47:78">0</literal></expr></argument>,

                                                    <argument pos:start="49:53" pos:end="49:56"><expr pos:start="49:53" pos:end="49:56"><name pos:start="49:53" pos:end="49:56">NULL</name></expr></argument>, <argument pos:start="49:59" pos:end="49:62"><expr pos:start="49:59" pos:end="49:62"><name pos:start="49:59" pos:end="49:62">NULL</name></expr></argument>, <argument pos:start="49:65" pos:end="49:68"><expr pos:start="49:65" pos:end="49:68"><name pos:start="49:65" pos:end="49:68">NULL</name></expr></argument>, <argument pos:start="49:71" pos:end="49:74"><expr pos:start="49:71" pos:end="49:74"><name pos:start="49:71" pos:end="49:74">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="53:13" pos:end="53:27">goto <name pos:start="53:18" pos:end="53:26">get_cache</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="73:5">else <block pos:start="57:12" pos:end="73:5">{<block_content pos:start="59:1" pos:end="71:38">

<label pos:start="59:1" pos:end="59:10"><name pos:start="59:1" pos:end="59:9">get_cache</name>:</label>

        <expr_stmt pos:start="61:9" pos:end="65:65"><expr pos:start="61:9" pos:end="65:64"><name pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:11">rdt</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:26">audio_pkt_cnt</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator>

            <call pos:start="63:13" pos:end="65:64"><name pos:start="63:13" pos:end="63:32">ff_rm_retrieve_cache</name> <argument_list pos:start="63:34" pos:end="65:64">(<argument pos:start="63:35" pos:end="63:44"><expr pos:start="63:35" pos:end="63:44"><name pos:start="63:35" pos:end="63:44"><name pos:start="63:35" pos:end="63:37">rdt</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:44">rmctx</name></name></expr></argument>, <argument pos:start="63:47" pos:end="63:60"><expr pos:start="63:47" pos:end="63:60"><name pos:start="63:47" pos:end="63:60"><name pos:start="63:47" pos:end="63:49">rdt</name><operator pos:start="63:50" pos:end="63:51">-&gt;</operator><name pos:start="63:52" pos:end="63:56">rmctx</name><operator pos:start="63:57" pos:end="63:58">-&gt;</operator><name pos:start="63:59" pos:end="63:60">pb</name></name></expr></argument>,

                                  <argument pos:start="65:35" pos:end="65:36"><expr pos:start="65:35" pos:end="65:36"><name pos:start="65:35" pos:end="65:36">st</name></expr></argument>, <argument pos:start="65:39" pos:end="65:58"><expr pos:start="65:39" pos:end="65:58"><name pos:start="65:39" pos:end="65:58"><name pos:start="65:39" pos:end="65:41">rdt</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:47">rmst</name><index pos:start="65:48" pos:end="65:58">[<expr pos:start="65:49" pos:end="65:57"><name pos:start="65:49" pos:end="65:57"><name pos:start="65:49" pos:end="65:50">st</name><operator pos:start="65:51" pos:end="65:52">-&gt;</operator><name pos:start="65:53" pos:end="65:57">index</name></name></expr>]</index></name></expr></argument>, <argument pos:start="65:61" pos:end="65:63"><expr pos:start="65:61" pos:end="65:63"><name pos:start="65:61" pos:end="65:63">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="71:38"><if pos:start="67:9" pos:end="71:38">if <condition pos:start="67:12" pos:end="69:51">(<expr pos:start="67:13" pos:end="69:50"><name pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:15">rdt</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:30">audio_pkt_cnt</name></name> <operator pos:start="67:32" pos:end="67:33">==</operator> <literal type="number" pos:start="67:35" pos:end="67:35">0</literal> <operator pos:start="67:37" pos:end="67:38">&amp;&amp;</operator>

            <name pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:14">st</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:21">codec</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:31">codec_id</name></name> <operator pos:start="69:33" pos:end="69:34">==</operator> <name pos:start="69:36" pos:end="69:50">AV_CODEC_ID_AAC</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:38"><block_content pos:start="71:13" pos:end="71:38">

            <expr_stmt pos:start="71:13" pos:end="71:38"><expr pos:start="71:13" pos:end="71:37"><call pos:start="71:13" pos:end="71:37"><name pos:start="71:13" pos:end="71:20">av_freep</name><argument_list pos:start="71:21" pos:end="71:37">(<argument pos:start="71:22" pos:end="71:36"><expr pos:start="71:22" pos:end="71:36"><operator pos:start="71:22" pos:end="71:22">&amp;</operator><name pos:start="71:23" pos:end="71:36"><name pos:start="71:23" pos:end="71:25">rdt</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:32">rmctx</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:36">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:34"><expr pos:start="75:5" pos:end="75:33"><name pos:start="75:5" pos:end="75:21"><name pos:start="75:5" pos:end="75:7">pkt</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:21">stream_index</name></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:33"><name pos:start="75:25" pos:end="75:26">st</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:33">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:26"><expr pos:start="77:5" pos:end="77:25"><name pos:start="77:5" pos:end="77:12"><name pos:start="77:5" pos:end="77:7">pkt</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:12">pts</name></name> <operator pos:start="77:14" pos:end="77:14">=</operator> <operator pos:start="77:16" pos:end="77:16">*</operator><name pos:start="77:17" pos:end="77:25">timestamp</name></expr>;</expr_stmt>



    <return pos:start="81:5" pos:end="81:34">return <expr pos:start="81:12" pos:end="81:33"><name pos:start="81:12" pos:end="81:29"><name pos:start="81:12" pos:end="81:14">rdt</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:29">audio_pkt_cnt</name></name> <operator pos:start="81:31" pos:end="81:31">&gt;</operator> <literal type="number" pos:start="81:33" pos:end="81:33">0</literal></expr>;</return>

</block_content>}</block>
</unit>
