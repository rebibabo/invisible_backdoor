<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13264.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">ff_mov_read_chan</name><parameter_list pos:start="1:21" pos:end="1:68">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:39"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:49">AVStream</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">st</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:62">int64_t</name></type> <name pos:start="1:64" pos:end="1:67">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:23">layout_tag</name></decl>, <decl pos:start="7:26" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:26" pos:end="7:31">bitmap</name></decl>, <decl pos:start="7:34" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:34" pos:end="7:42">num_descr</name></decl>, <decl pos:start="7:45" pos:end="7:54"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:45" pos:end="7:54">label_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:35"><if pos:start="13:5" pos:end="15:35">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:12">size</name> <operator pos:start="13:14" pos:end="13:14">&lt;</operator> <literal type="number" pos:start="13:16" pos:end="13:17">12</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:35"><block_content pos:start="15:9" pos:end="15:35">

        <return pos:start="15:9" pos:end="15:35">return <expr pos:start="15:16" pos:end="15:34"><name pos:start="15:16" pos:end="15:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:14">layout_tag</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:30"><name pos:start="19:18" pos:end="19:26">avio_rb32</name><argument_list pos:start="19:27" pos:end="19:30">(<argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><name pos:start="19:28" pos:end="19:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:10">bitmap</name>     <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:30"><name pos:start="21:18" pos:end="21:26">avio_rb32</name><argument_list pos:start="21:27" pos:end="21:30">(<argument pos:start="21:28" pos:end="21:29"><expr pos:start="21:28" pos:end="21:29"><name pos:start="21:28" pos:end="21:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:13">num_descr</name>  <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:30"><name pos:start="23:18" pos:end="23:26">avio_rb32</name><argument_list pos:start="23:27" pos:end="23:30">(<argument pos:start="23:28" pos:end="23:29"><expr pos:start="23:28" pos:end="23:29"><name pos:start="23:28" pos:end="23:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:43"><expr pos:start="27:5" pos:end="29:42"><call pos:start="27:5" pos:end="29:42"><name pos:start="27:5" pos:end="27:11">av_dlog</name><argument_list pos:start="27:12" pos:end="29:42">(<argument pos:start="27:13" pos:end="27:13"><expr pos:start="27:13" pos:end="27:13"><name pos:start="27:13" pos:end="27:13">s</name></expr></argument>, <argument pos:start="27:16" pos:end="27:57"><expr pos:start="27:16" pos:end="27:57"><literal type="string" pos:start="27:16" pos:end="27:57">"chan: layout=%u bitmap=%u num_descr=%u\n"</literal></expr></argument>,

            <argument pos:start="29:13" pos:end="29:22"><expr pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:22">layout_tag</name></expr></argument>, <argument pos:start="29:25" pos:end="29:30"><expr pos:start="29:25" pos:end="29:30"><name pos:start="29:25" pos:end="29:30">bitmap</name></expr></argument>, <argument pos:start="29:33" pos:end="29:41"><expr pos:start="29:33" pos:end="29:41"><name pos:start="29:33" pos:end="29:41">num_descr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="35:17"><if pos:start="33:5" pos:end="35:17">if <condition pos:start="33:8" pos:end="33:41">(<expr pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:12">size</name> <operator pos:start="33:14" pos:end="33:14">&lt;</operator> <literal type="number" pos:start="33:16" pos:end="33:22">12ULL</literal> <operator pos:start="33:22" pos:end="33:22">+</operator> <name pos:start="33:24" pos:end="33:32">num_descr</name> <operator pos:start="33:34" pos:end="33:34">*</operator> <literal type="number" pos:start="33:36" pos:end="33:40">20ULL</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:17"><block_content pos:start="35:9" pos:end="35:17">

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:14">label_mask</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</expr_stmt>

    <for pos:start="41:5" pos:end="71:5">for <control pos:start="41:9" pos:end="41:35">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:30"><expr pos:start="41:17" pos:end="41:29"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:29">num_descr</name></expr>;</condition> <incr pos:start="41:32" pos:end="41:34"><expr pos:start="41:32" pos:end="41:34"><name pos:start="41:32" pos:end="41:32">i</name><operator pos:start="41:33" pos:end="41:34">++</operator></expr></incr>)</control> <block pos:start="41:37" pos:end="71:5">{<block_content pos:start="43:9" pos:end="69:9">

        <decl_stmt pos:start="43:9" pos:end="43:23"><decl pos:start="43:9" pos:end="43:22"><type pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:16">uint32_t</name></type> <name pos:start="43:18" pos:end="43:22">label</name></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:13">label</name>     <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:33"><name pos:start="45:21" pos:end="45:29">avio_rb32</name><argument_list pos:start="45:30" pos:end="45:33">(<argument pos:start="45:31" pos:end="45:32"><expr pos:start="45:31" pos:end="45:32"><name pos:start="45:31" pos:end="45:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="line" pos:start="45:45" pos:end="45:60">// mChannelLabel</comment>

        <expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><call pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:17">avio_rb32</name><argument_list pos:start="47:18" pos:end="47:21">(<argument pos:start="47:19" pos:end="47:20"><expr pos:start="47:19" pos:end="47:20"><name pos:start="47:19" pos:end="47:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                      <comment type="line" pos:start="47:45" pos:end="47:60">// mChannelFlags</comment>

        <expr_stmt pos:start="49:9" pos:end="49:22"><expr pos:start="49:9" pos:end="49:21"><call pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:17">avio_rl32</name><argument_list pos:start="49:18" pos:end="49:21">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                      <comment type="line" pos:start="49:45" pos:end="49:62">// mCoordinates[0]</comment>

        <expr_stmt pos:start="51:9" pos:end="51:22"><expr pos:start="51:9" pos:end="51:21"><call pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:17">avio_rl32</name><argument_list pos:start="51:18" pos:end="51:21">(<argument pos:start="51:19" pos:end="51:20"><expr pos:start="51:19" pos:end="51:20"><name pos:start="51:19" pos:end="51:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                      <comment type="line" pos:start="51:45" pos:end="51:62">// mCoordinates[1]</comment>

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><call pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:17">avio_rl32</name><argument_list pos:start="53:18" pos:end="53:21">(<argument pos:start="53:19" pos:end="53:20"><expr pos:start="53:19" pos:end="53:20"><name pos:start="53:19" pos:end="53:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                      <comment type="line" pos:start="53:45" pos:end="53:62">// mCoordinates[2]</comment>

        <if_stmt pos:start="55:9" pos:end="69:9"><if pos:start="55:9" pos:end="69:9">if <condition pos:start="55:12" pos:end="55:28">(<expr pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:22">layout_tag</name> <operator pos:start="55:24" pos:end="55:25">==</operator> <literal type="number" pos:start="55:27" pos:end="55:27">0</literal></expr>)</condition> <block pos:start="55:30" pos:end="69:9">{<block_content pos:start="57:13" pos:end="67:36">

            <decl_stmt pos:start="57:13" pos:end="57:62"><decl pos:start="57:13" pos:end="57:61"><type pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:20">uint32_t</name></type> <name pos:start="57:22" pos:end="57:30">mask_incr</name> <init pos:start="57:32" pos:end="57:61">= <expr pos:start="57:34" pos:end="57:61"><call pos:start="57:34" pos:end="57:61"><name pos:start="57:34" pos:end="57:54">mov_get_channel_label</name><argument_list pos:start="57:55" pos:end="57:61">(<argument pos:start="57:56" pos:end="57:60"><expr pos:start="57:56" pos:end="57:60"><name pos:start="57:56" pos:end="57:60">label</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="59:13" pos:end="65:13"><if pos:start="59:13" pos:end="65:13">if <condition pos:start="59:16" pos:end="59:31">(<expr pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:25">mask_incr</name> <operator pos:start="59:27" pos:end="59:28">==</operator> <literal type="number" pos:start="59:30" pos:end="59:30">0</literal></expr>)</condition> <block pos:start="59:33" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:22">

                <expr_stmt pos:start="61:17" pos:end="61:31"><expr pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:26">label_mask</name> <operator pos:start="61:28" pos:end="61:28">=</operator> <literal type="number" pos:start="61:30" pos:end="61:30">0</literal></expr>;</expr_stmt>

                <break pos:start="63:17" pos:end="63:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:36"><expr pos:start="67:13" pos:end="67:35"><name pos:start="67:13" pos:end="67:22">label_mask</name> <operator pos:start="67:24" pos:end="67:25">|=</operator> <name pos:start="67:27" pos:end="67:35">mask_incr</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="73:5" pos:end="79:82"><if pos:start="73:5" pos:end="75:51">if <condition pos:start="73:8" pos:end="73:24">(<expr pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:18">layout_tag</name> <operator pos:start="73:20" pos:end="73:21">==</operator> <literal type="number" pos:start="73:23" pos:end="73:23">0</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:51"><block_content pos:start="75:13" pos:end="75:51">

            <expr_stmt pos:start="75:13" pos:end="75:51"><expr pos:start="75:13" pos:end="75:50"><name pos:start="75:13" pos:end="75:37"><name pos:start="75:13" pos:end="75:14">st</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:21">codec</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:37">channel_layout</name></name> <operator pos:start="75:39" pos:end="75:39">=</operator> <name pos:start="75:41" pos:end="75:50">label_mask</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="77:5" pos:end="79:82">else<block type="pseudo" pos:start="79:9" pos:end="79:82"><block_content pos:start="79:9" pos:end="79:82">

        <expr_stmt pos:start="79:9" pos:end="79:82"><expr pos:start="79:9" pos:end="79:81"><name pos:start="79:9" pos:end="79:33"><name pos:start="79:9" pos:end="79:10">st</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:17">codec</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:33">channel_layout</name></name> <operator pos:start="79:35" pos:end="79:35">=</operator> <call pos:start="79:37" pos:end="79:81"><name pos:start="79:37" pos:end="79:61">ff_mov_get_channel_layout</name><argument_list pos:start="79:62" pos:end="79:81">(<argument pos:start="79:63" pos:end="79:72"><expr pos:start="79:63" pos:end="79:72"><name pos:start="79:63" pos:end="79:72">layout_tag</name></expr></argument>, <argument pos:start="79:75" pos:end="79:80"><expr pos:start="79:75" pos:end="79:80"><name pos:start="79:75" pos:end="79:80">bitmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
