<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24146.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:34">find_any_startcode</name><parameter_list pos:start="1:35" pos:end="1:66">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:48">ByteIOContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">bc</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:65"><decl pos:start="1:55" pos:end="1:65"><type pos:start="1:55" pos:end="1:65"><name pos:start="1:55" pos:end="1:61">int64_t</name></type> <name pos:start="1:63" pos:end="1:65">pos</name></decl></parameter>)</parameter_list><block pos:start="1:67" pos:end="41:1">{<block_content pos:start="3:5" pos:end="39:13">

    <decl_stmt pos:start="3:5" pos:end="3:21"><decl pos:start="3:5" pos:end="3:20"><type pos:start="3:5" pos:end="3:12"><name pos:start="3:5" pos:end="3:12">uint64_t</name></type> <name pos:start="3:14" pos:end="3:18">state</name><init pos:start="3:19" pos:end="3:20">=<expr pos:start="3:20" pos:end="3:20"><literal type="number" pos:start="3:20" pos:end="3:20">0</literal></expr></init></decl>;</decl_stmt>

    

    <if_stmt pos:start="7:5" pos:end="9:37"><if pos:start="7:5" pos:end="9:37">if<condition pos:start="7:7" pos:end="7:16">(<expr pos:start="7:8" pos:end="7:15"><name pos:start="7:8" pos:end="7:10">pos</name> <operator pos:start="7:12" pos:end="7:13">&gt;=</operator> <literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:37"><block_content pos:start="9:9" pos:end="9:37">

        <expr_stmt pos:start="9:9" pos:end="9:37"><expr pos:start="9:9" pos:end="9:36"><call pos:start="9:9" pos:end="9:36"><name pos:start="9:9" pos:end="9:17">url_fseek</name><argument_list pos:start="9:18" pos:end="9:36">(<argument pos:start="9:19" pos:end="9:20"><expr pos:start="9:19" pos:end="9:20"><name pos:start="9:19" pos:end="9:20">bc</name></expr></argument>, <argument pos:start="9:23" pos:end="9:25"><expr pos:start="9:23" pos:end="9:25"><name pos:start="9:23" pos:end="9:25">pos</name></expr></argument>, <argument pos:start="9:28" pos:end="9:35"><expr pos:start="9:28" pos:end="9:35"><name pos:start="9:28" pos:end="9:35">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="9:39" pos:end="9:169">//note, this may fail if the stream isnt seekable, but that shouldnt matter, as in this case we simply start where we are currently</comment>



    <while pos:start="13:5" pos:end="37:5">while<condition pos:start="13:10" pos:end="13:25">(<expr pos:start="13:11" pos:end="13:24"><call pos:start="13:11" pos:end="13:24"><name pos:start="13:11" pos:end="13:20">bytes_left</name><argument_list pos:start="13:21" pos:end="13:24">(<argument pos:start="13:22" pos:end="13:23"><expr pos:start="13:22" pos:end="13:23"><name pos:start="13:22" pos:end="13:23">bc</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="13:26" pos:end="37:5">{<block_content pos:start="15:9" pos:end="35:9">

        <expr_stmt pos:start="15:9" pos:end="15:41"><expr pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:13">state</name><operator pos:start="15:14" pos:end="15:14">=</operator> <operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:21">state</name><operator pos:start="15:22" pos:end="15:23">&lt;&lt;</operator><literal type="number" pos:start="15:24" pos:end="15:24">8</literal><operator pos:start="15:25" pos:end="15:25">)</operator> <operator pos:start="15:27" pos:end="15:27">|</operator> <call pos:start="15:29" pos:end="15:40"><name pos:start="15:29" pos:end="15:36">get_byte</name><argument_list pos:start="15:37" pos:end="15:40">(<argument pos:start="15:38" pos:end="15:39"><expr pos:start="15:38" pos:end="15:39"><name pos:start="15:38" pos:end="15:39">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:21"><if pos:start="17:9" pos:end="19:21">if<condition pos:start="17:11" pos:end="17:30">(<expr pos:start="17:12" pos:end="17:29"><operator pos:start="17:12" pos:end="17:12">(</operator><name pos:start="17:13" pos:end="17:17">state</name><operator pos:start="17:18" pos:end="17:19">&gt;&gt;</operator><literal type="number" pos:start="17:20" pos:end="17:21">56</literal><operator pos:start="17:22" pos:end="17:22">)</operator> <operator pos:start="17:24" pos:end="17:25">!=</operator> <literal type="char" pos:start="17:27" pos:end="17:29">'N'</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:21"><block_content pos:start="19:13" pos:end="19:21">

            <continue pos:start="19:13" pos:end="19:21">continue;</continue></block_content></block></if></if_stmt>

        <switch pos:start="21:9" pos:end="35:9">switch<condition pos:start="21:15" pos:end="21:21">(<expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">state</name></expr>)</condition><block pos:start="21:22" pos:end="35:9">{<block_content pos:start="23:9" pos:end="33:25">

        <case pos:start="23:9" pos:end="23:28">case <expr pos:start="23:14" pos:end="23:27"><name pos:start="23:14" pos:end="23:27">MAIN_STARTCODE</name></expr>:</case>

        <case pos:start="25:9" pos:end="25:30">case <expr pos:start="25:14" pos:end="25:29"><name pos:start="25:14" pos:end="25:29">STREAM_STARTCODE</name></expr>:</case>

        <case pos:start="27:9" pos:end="27:32">case <expr pos:start="27:14" pos:end="27:31"><name pos:start="27:14" pos:end="27:31">KEYFRAME_STARTCODE</name></expr>:</case>

        <case pos:start="29:9" pos:end="29:28">case <expr pos:start="29:14" pos:end="29:27"><name pos:start="29:14" pos:end="29:27">INFO_STARTCODE</name></expr>:</case>

        <case pos:start="31:9" pos:end="31:29">case <expr pos:start="31:14" pos:end="31:28"><name pos:start="31:14" pos:end="31:28">INDEX_STARTCODE</name></expr>:</case>

            <return pos:start="33:13" pos:end="33:25">return <expr pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:24">state</name></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></while>

    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
