<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23065.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">io_channel_send_full</name><parameter_list pos:start="1:32" pos:end="5:54">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:42">QIOChannel</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ioc</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:47"><decl pos:start="3:33" pos:end="3:47"><type pos:start="3:33" pos:end="3:47"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:42">void</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">buf</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:59"><decl pos:start="3:50" pos:end="3:59"><type pos:start="3:50" pos:end="3:59"><name pos:start="3:50" pos:end="3:55">size_t</name></type> <name pos:start="3:57" pos:end="3:59">len</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:40"><decl pos:start="5:33" pos:end="5:40"><type pos:start="5:33" pos:end="5:40"><name pos:start="5:33" pos:end="5:35">int</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">fds</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:53"><decl pos:start="5:43" pos:end="5:53"><type pos:start="5:43" pos:end="5:53"><name pos:start="5:43" pos:end="5:48">size_t</name></type> <name pos:start="5:50" pos:end="5:53">nfds</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="61:1">{<block_content pos:start="9:5" pos:end="59:18">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:17">offset</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="55:5">while <condition pos:start="13:11" pos:end="13:24">(<expr pos:start="13:12" pos:end="13:23"><name pos:start="13:12" pos:end="13:17">offset</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:23">len</name></expr>)</condition> <block pos:start="13:26" pos:end="55:5">{<block_content pos:start="15:9" pos:end="53:22">

        <decl_stmt pos:start="15:9" pos:end="15:24"><decl pos:start="15:9" pos:end="15:23"><type pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:15">ssize_t</name></type> <name pos:start="15:17" pos:end="15:19">ret</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="19:55"><decl pos:start="17:9" pos:end="19:54"><type pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:14">struct</name> <name pos:start="17:16" pos:end="17:20">iovec</name></name></type> <name pos:start="17:22" pos:end="17:24">iov</name> <init pos:start="17:26" pos:end="19:54">= <expr pos:start="17:28" pos:end="19:54"><block pos:start="17:28" pos:end="19:54">{ <expr pos:start="17:30" pos:end="17:61"><operator pos:start="17:30" pos:end="17:30">.</operator><name pos:start="17:31" pos:end="17:38">iov_base</name> <operator pos:start="17:40" pos:end="17:40">=</operator> <operator pos:start="17:42" pos:end="17:42">(</operator><name pos:start="17:43" pos:end="17:46">char</name> <operator pos:start="17:48" pos:end="17:48">*</operator><operator pos:start="17:49" pos:end="17:49">)</operator><name pos:start="17:50" pos:end="17:52">buf</name> <operator pos:start="17:54" pos:end="17:54">+</operator> <name pos:start="17:56" pos:end="17:61">offset</name></expr>,

                             <expr pos:start="19:30" pos:end="19:52"><operator pos:start="19:30" pos:end="19:30">.</operator><name pos:start="19:31" pos:end="19:37">iov_len</name> <operator pos:start="19:39" pos:end="19:39">=</operator> <name pos:start="19:41" pos:end="19:43">len</name> <operator pos:start="19:45" pos:end="19:45">-</operator> <name pos:start="19:47" pos:end="19:52">offset</name></expr> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="23:9" pos:end="27:29"><expr pos:start="23:9" pos:end="27:28"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="27:28"><name pos:start="23:15" pos:end="23:37">qio_channel_writev_full</name><argument_list pos:start="23:38" pos:end="27:28">(

            <argument pos:start="25:13" pos:end="25:15"><expr pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">ioc</name></expr></argument>, <argument pos:start="25:18" pos:end="25:21"><expr pos:start="25:18" pos:end="25:21"><operator pos:start="25:18" pos:end="25:18">&amp;</operator><name pos:start="25:19" pos:end="25:21">iov</name></expr></argument>, <argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">1</literal></expr></argument>,

            <argument pos:start="27:13" pos:end="27:15"><expr pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">fds</name></expr></argument>, <argument pos:start="27:18" pos:end="27:21"><expr pos:start="27:18" pos:end="27:21"><name pos:start="27:18" pos:end="27:21">nfds</name></expr></argument>, <argument pos:start="27:24" pos:end="27:27"><expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="49:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:41">(<expr pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:18">==</operator> <name pos:start="29:20" pos:end="29:40">QIO_CHANNEL_ERR_BLOCK</name></expr>)</condition> <block pos:start="29:43" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:22">

            <expr_stmt pos:start="31:13" pos:end="31:27"><expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:17">errno</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:26">EAGAIN</name></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="49:9">else if <condition pos:start="35:19" pos:end="35:27">(<expr pos:start="35:20" pos:end="35:26"><name pos:start="35:20" pos:end="35:22">ret</name> <operator pos:start="35:24" pos:end="35:24">&lt;</operator> <literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>)</condition> <block pos:start="35:29" pos:end="49:9">{<block_content pos:start="37:13" pos:end="47:22">

            <if_stmt pos:start="37:13" pos:end="41:13"><if pos:start="37:13" pos:end="41:13">if <condition pos:start="37:16" pos:end="37:23">(<expr pos:start="37:17" pos:end="37:22"><name pos:start="37:17" pos:end="37:22">offset</name></expr>)</condition> <block pos:start="37:25" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:30">

                <return pos:start="39:17" pos:end="39:30">return <expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">offset</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:27"><expr pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:17">errno</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:26">EINVAL</name></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:22">return <expr pos:start="47:20" pos:end="47:21"><operator pos:start="47:20" pos:end="47:20">-</operator><literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:14">offset</name> <operator pos:start="53:16" pos:end="53:17">+=</operator> <name pos:start="53:19" pos:end="53:21">ret</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="59:5" pos:end="59:18">return <expr pos:start="59:12" pos:end="59:17"><name pos:start="59:12" pos:end="59:17">offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
