<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7909.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">hnm_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:15">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">Hnm4DemuxContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">hnm</name> <init pos:start="5:27" pos:end="5:40">= <expr pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:28">superchunk_size</name></decl>, <decl pos:start="13:31" pos:end="13:40"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:31" pos:end="13:40">chunk_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint16_t</name></type> <name pos:start="15:14" pos:end="15:21">chunk_id</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:27"><if pos:start="19:5" pos:end="21:27">if <condition pos:start="19:8" pos:end="19:60">(<expr pos:start="19:9" pos:end="19:59"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:11">hnm</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:25">currentframe</name></name> <operator pos:start="19:27" pos:end="19:28">==</operator> <name pos:start="19:30" pos:end="19:40"><name pos:start="19:30" pos:end="19:32">hnm</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:40">frames</name></name> <operator pos:start="19:42" pos:end="19:43">||</operator> <name pos:start="19:45" pos:end="19:59"><name pos:start="19:45" pos:end="19:46">pb</name><operator pos:start="19:47" pos:end="19:48">-&gt;</operator><name pos:start="19:49" pos:end="19:59">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:27"><block_content pos:start="21:9" pos:end="21:27">

        <return pos:start="21:9" pos:end="21:27">return <expr pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:39">(<expr pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:11">hnm</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:33">superchunk_remaining</name></name> <operator pos:start="25:35" pos:end="25:36">==</operator> <literal type="number" pos:start="25:38" pos:end="25:38">0</literal></expr>)</condition> <block pos:start="25:41" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:56">

        <comment type="block" pos:start="27:9" pos:end="27:35">/* parse next superchunk */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:23">superchunk_size</name> <operator pos:start="29:25" pos:end="29:25">=</operator> <call pos:start="29:27" pos:end="29:39"><name pos:start="29:27" pos:end="29:35">avio_rl24</name><argument_list pos:start="29:36" pos:end="29:39">(<argument pos:start="29:37" pos:end="29:38"><expr pos:start="29:37" pos:end="29:38"><name pos:start="29:37" pos:end="29:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><call pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:17">avio_skip</name><argument_list pos:start="31:18" pos:end="31:24">(<argument pos:start="31:19" pos:end="31:20"><expr pos:start="31:19" pos:end="31:20"><name pos:start="31:19" pos:end="31:20">pb</name></expr></argument>, <argument pos:start="31:23" pos:end="31:23"><expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:56"><expr pos:start="35:9" pos:end="35:55"><name pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:11">hnm</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:33">superchunk_remaining</name></name> <operator pos:start="35:35" pos:end="35:35">=</operator> <name pos:start="35:37" pos:end="35:51">superchunk_size</name> <operator pos:start="35:53" pos:end="35:53">-</operator> <literal type="number" pos:start="35:55" pos:end="35:55">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:14">chunk_size</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <call pos:start="41:18" pos:end="41:30"><name pos:start="41:18" pos:end="41:26">avio_rl24</name><argument_list pos:start="41:27" pos:end="41:30">(<argument pos:start="41:28" pos:end="41:29"><expr pos:start="41:28" pos:end="41:29"><name pos:start="41:28" pos:end="41:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><call pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:13">avio_skip</name><argument_list pos:start="43:14" pos:end="43:20">(<argument pos:start="43:15" pos:end="43:16"><expr pos:start="43:15" pos:end="43:16"><name pos:start="43:15" pos:end="43:16">pb</name></expr></argument>, <argument pos:start="43:19" pos:end="43:19"><expr pos:start="43:19" pos:end="43:19"><literal type="number" pos:start="43:19" pos:end="43:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:12">chunk_id</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:28"><name pos:start="45:16" pos:end="45:24">avio_rl16</name><argument_list pos:start="45:25" pos:end="45:28">(<argument pos:start="45:26" pos:end="45:27"><expr pos:start="45:26" pos:end="45:27"><name pos:start="45:26" pos:end="45:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:21"><expr pos:start="47:5" pos:end="47:20"><call pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:13">avio_skip</name><argument_list pos:start="47:14" pos:end="47:20">(<argument pos:start="47:15" pos:end="47:16"><expr pos:start="47:15" pos:end="47:16"><name pos:start="47:15" pos:end="47:16">pb</name></expr></argument>, <argument pos:start="47:19" pos:end="47:19"><expr pos:start="47:19" pos:end="47:19"><literal type="number" pos:start="47:19" pos:end="47:19">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="61:5"><if pos:start="51:5" pos:end="61:5">if <condition pos:start="51:8" pos:end="51:47">(<expr pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:18">chunk_size</name> <operator pos:start="51:20" pos:end="51:20">&gt;</operator> <name pos:start="51:22" pos:end="51:46"><name pos:start="51:22" pos:end="51:24">hnm</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:46">superchunk_remaining</name></name></expr>)</condition> <block pos:start="51:49" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:38">

        <expr_stmt pos:start="53:9" pos:end="55:48"><expr pos:start="53:9" pos:end="55:47"><call pos:start="53:9" pos:end="55:47"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="55:47">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">s</name></expr></argument>, <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:33" pos:end="53:70"><expr pos:start="53:33" pos:end="53:70"><literal type="string" pos:start="53:33" pos:end="53:70">"invalid chunk size: %u, offset: %u\n"</literal></expr></argument>,

               <argument pos:start="55:16" pos:end="55:25"><expr pos:start="55:16" pos:end="55:25"><name pos:start="55:16" pos:end="55:25">chunk_size</name></expr></argument>, <argument pos:start="55:28" pos:end="55:46"><expr pos:start="55:28" pos:end="55:46"><operator pos:start="55:28" pos:end="55:28">(</operator><name pos:start="55:29" pos:end="55:31">int</name><operator pos:start="55:32" pos:end="55:32">)</operator> <call pos:start="55:34" pos:end="55:46"><name pos:start="55:34" pos:end="55:42">avio_tell</name><argument_list pos:start="55:43" pos:end="55:46">(<argument pos:start="55:44" pos:end="55:45"><expr pos:start="55:44" pos:end="55:45"><name pos:start="55:44" pos:end="55:45">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:53"><expr pos:start="57:9" pos:end="57:52"><call pos:start="57:9" pos:end="57:52"><name pos:start="57:9" pos:end="57:17">avio_skip</name><argument_list pos:start="57:18" pos:end="57:52">(<argument pos:start="57:19" pos:end="57:20"><expr pos:start="57:19" pos:end="57:20"><name pos:start="57:19" pos:end="57:20">pb</name></expr></argument>, <argument pos:start="57:23" pos:end="57:51"><expr pos:start="57:23" pos:end="57:51"><name pos:start="57:23" pos:end="57:47"><name pos:start="57:23" pos:end="57:25">hnm</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:47">superchunk_remaining</name></name> <operator pos:start="57:49" pos:end="57:49">-</operator> <literal type="number" pos:start="57:51" pos:end="57:51">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:11">hnm</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:33">superchunk_remaining</name></name> <operator pos:start="59:35" pos:end="59:35">=</operator> <literal type="number" pos:start="59:37" pos:end="59:37">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="65:5" pos:end="109:5">switch <condition pos:start="65:12" pos:end="65:21">(<expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:20">chunk_id</name></expr>)</condition> <block pos:start="65:23" pos:end="109:5">{<block_content pos:start="67:5" pos:end="107:14">

    <case pos:start="67:5" pos:end="67:26">case <expr pos:start="67:10" pos:end="67:25"><name pos:start="67:10" pos:end="67:25">HNM4_CHUNK_ID_PL</name></expr>:</case>

    <case pos:start="69:5" pos:end="69:26">case <expr pos:start="69:10" pos:end="69:25"><name pos:start="69:10" pos:end="69:25">HNM4_CHUNK_ID_IZ</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:26">case <expr pos:start="71:10" pos:end="71:25"><name pos:start="71:10" pos:end="71:25">HNM4_CHUNK_ID_IU</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:36"><expr pos:start="73:9" pos:end="73:35"><call pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:17">avio_seek</name><argument_list pos:start="73:18" pos:end="73:35">(<argument pos:start="73:19" pos:end="73:20"><expr pos:start="73:19" pos:end="73:20"><name pos:start="73:19" pos:end="73:20">pb</name></expr></argument>, <argument pos:start="73:23" pos:end="73:24"><expr pos:start="73:23" pos:end="73:24"><operator pos:start="73:23" pos:end="73:23">-</operator><literal type="number" pos:start="73:24" pos:end="73:24">8</literal></expr></argument>, <argument pos:start="73:27" pos:end="73:34"><expr pos:start="73:27" pos:end="73:34"><name pos:start="73:27" pos:end="73:34">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:50"><expr pos:start="75:9" pos:end="75:49"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:14">+=</operator> <call pos:start="75:16" pos:end="75:49"><name pos:start="75:16" pos:end="75:28">av_get_packet</name><argument_list pos:start="75:29" pos:end="75:49">(<argument pos:start="75:30" pos:end="75:31"><expr pos:start="75:30" pos:end="75:31"><name pos:start="75:30" pos:end="75:31">pb</name></expr></argument>, <argument pos:start="75:34" pos:end="75:36"><expr pos:start="75:34" pos:end="75:36"><name pos:start="75:34" pos:end="75:36">pkt</name></expr></argument>, <argument pos:start="75:39" pos:end="75:48"><expr pos:start="75:39" pos:end="75:48"><name pos:start="75:39" pos:end="75:48">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:48"><expr pos:start="77:9" pos:end="77:47"><name pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:11">hnm</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:33">superchunk_remaining</name></name> <operator pos:start="77:35" pos:end="77:36">-=</operator> <name pos:start="77:38" pos:end="77:47">chunk_size</name></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="81:32"><if pos:start="79:9" pos:end="81:32">if <condition pos:start="79:12" pos:end="79:73">(<expr pos:start="79:13" pos:end="79:72"><name pos:start="79:13" pos:end="79:20">chunk_id</name> <operator pos:start="79:22" pos:end="79:23">==</operator> <name pos:start="79:25" pos:end="79:40">HNM4_CHUNK_ID_IZ</name> <operator pos:start="79:42" pos:end="79:43">||</operator> <name pos:start="79:45" pos:end="79:52">chunk_id</name> <operator pos:start="79:54" pos:end="79:55">==</operator> <name pos:start="79:57" pos:end="79:72">HNM4_CHUNK_ID_IU</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:32"><block_content pos:start="81:13" pos:end="81:32">

            <expr_stmt pos:start="81:13" pos:end="81:32"><expr pos:start="81:13" pos:end="81:31"><name pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:15">hnm</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:29">currentframe</name></name><operator pos:start="81:30" pos:end="81:31">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>



    <case pos:start="87:5" pos:end="87:26">case <expr pos:start="87:10" pos:end="87:25"><name pos:start="87:10" pos:end="87:25">HNM4_CHUNK_ID_SD</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:38"><expr pos:start="89:9" pos:end="89:37"><call pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:17">avio_skip</name><argument_list pos:start="89:18" pos:end="89:37">(<argument pos:start="89:19" pos:end="89:20"><expr pos:start="89:19" pos:end="89:20"><name pos:start="89:19" pos:end="89:20">pb</name></expr></argument>, <argument pos:start="89:23" pos:end="89:36"><expr pos:start="89:23" pos:end="89:36"><name pos:start="89:23" pos:end="89:32">chunk_size</name> <operator pos:start="89:34" pos:end="89:34">-</operator> <literal type="number" pos:start="89:36" pos:end="89:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:48"><expr pos:start="91:9" pos:end="91:47"><name pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:11">hnm</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:33">superchunk_remaining</name></name> <operator pos:start="91:35" pos:end="91:36">-=</operator> <name pos:start="91:38" pos:end="91:47">chunk_size</name></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>



    <default pos:start="97:5" pos:end="97:12">default:</default>

        <expr_stmt pos:start="99:9" pos:end="101:46"><expr pos:start="99:9" pos:end="101:45"><call pos:start="99:9" pos:end="101:45"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="101:45">(<argument pos:start="99:16" pos:end="99:16"><expr pos:start="99:16" pos:end="99:16"><name pos:start="99:16" pos:end="99:16">s</name></expr></argument>, <argument pos:start="99:19" pos:end="99:32"><expr pos:start="99:19" pos:end="99:32"><name pos:start="99:19" pos:end="99:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="99:35" pos:end="99:73"><expr pos:start="99:35" pos:end="99:73"><literal type="string" pos:start="99:35" pos:end="99:73">"unknown chunk found: %d, offset: %d\n"</literal></expr></argument>,

               <argument pos:start="101:16" pos:end="101:23"><expr pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:23">chunk_id</name></expr></argument>, <argument pos:start="101:26" pos:end="101:44"><expr pos:start="101:26" pos:end="101:44"><operator pos:start="101:26" pos:end="101:26">(</operator><name pos:start="101:27" pos:end="101:29">int</name><operator pos:start="101:30" pos:end="101:30">)</operator> <call pos:start="101:32" pos:end="101:44"><name pos:start="101:32" pos:end="101:40">avio_tell</name><argument_list pos:start="101:41" pos:end="101:44">(<argument pos:start="101:42" pos:end="101:43"><expr pos:start="101:42" pos:end="101:43"><name pos:start="101:42" pos:end="101:43">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:38"><expr pos:start="103:9" pos:end="103:37"><call pos:start="103:9" pos:end="103:37"><name pos:start="103:9" pos:end="103:17">avio_skip</name><argument_list pos:start="103:18" pos:end="103:37">(<argument pos:start="103:19" pos:end="103:20"><expr pos:start="103:19" pos:end="103:20"><name pos:start="103:19" pos:end="103:20">pb</name></expr></argument>, <argument pos:start="103:23" pos:end="103:36"><expr pos:start="103:23" pos:end="103:36"><name pos:start="103:23" pos:end="103:32">chunk_size</name> <operator pos:start="103:34" pos:end="103:34">-</operator> <literal type="number" pos:start="103:36" pos:end="103:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:48"><expr pos:start="105:9" pos:end="105:47"><name pos:start="105:9" pos:end="105:33"><name pos:start="105:9" pos:end="105:11">hnm</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:33">superchunk_remaining</name></name> <operator pos:start="105:35" pos:end="105:36">-=</operator> <name pos:start="105:38" pos:end="105:47">chunk_size</name></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="113:5" pos:end="113:15">return <expr pos:start="113:12" pos:end="113:14"><name pos:start="113:12" pos:end="113:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
