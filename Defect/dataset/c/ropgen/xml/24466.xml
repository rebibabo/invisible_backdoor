<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24466.c" pos:tabs="8"><function pos:start="1:1" pos:end="331:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">FFPsyWindowInfo</name></type> <name pos:start="1:24" pos:end="1:38">psy_lame_window</name><parameter_list pos:start="1:39" pos:end="3:83">(<parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:51">FFPsyContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">ctx</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:76"><decl pos:start="1:59" pos:end="1:76"><type pos:start="1:59" pos:end="1:76"><specifier pos:start="1:59" pos:end="1:63">const</specifier> <name pos:start="1:65" pos:end="1:69">float</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:76">audio</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:54"><decl pos:start="3:40" pos:end="3:54"><type pos:start="3:40" pos:end="3:54"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:50">float</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:54">la</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:67"><decl pos:start="3:57" pos:end="3:67"><type pos:start="3:57" pos:end="3:67"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:67">channel</name></decl></parameter>, <parameter pos:start="3:70" pos:end="3:82"><decl pos:start="3:70" pos:end="3:82"><type pos:start="3:70" pos:end="3:82"><name pos:start="3:70" pos:end="3:72">int</name></type> <name pos:start="3:74" pos:end="3:82">prev_type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="331:1">{<block_content pos:start="7:5" pos:end="329:14">

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:63"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AacPsyContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:23">pctx</name> <init pos:start="7:25" pos:end="7:63">= <expr pos:start="7:27" pos:end="7:63"><operator pos:start="7:27" pos:end="7:27">(</operator><name pos:start="7:28" pos:end="7:40">AacPsyContext</name><operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator> <name pos:start="7:44" pos:end="7:63"><name pos:start="7:44" pos:end="7:46">ctx</name><operator pos:start="7:47" pos:end="7:48">-&gt;</operator><name pos:start="7:49" pos:end="7:63">model_priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">AacPsyChannel</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">pch</name>  <init pos:start="9:25" pos:end="9:44">= <expr pos:start="9:27" pos:end="9:44"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:44"><name pos:start="9:28" pos:end="9:31">pctx</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:35">ch</name><index pos:start="9:36" pos:end="9:44">[<expr pos:start="9:37" pos:end="9:43"><name pos:start="9:37" pos:end="9:43">channel</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">grouping</name>     <init pos:start="11:22" pos:end="11:24">= <expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:20">uselongblock</name> <init pos:start="13:22" pos:end="13:24">= <expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:49"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:15">attacks</name><index pos:start="15:16" pos:end="15:41">[<expr pos:start="15:17" pos:end="15:40"><name pos:start="15:17" pos:end="15:36">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="15:38" pos:end="15:38">+</operator> <literal type="number" pos:start="15:40" pos:end="15:40">1</literal></expr>]</index></name> <init pos:start="15:43" pos:end="15:49">= <expr pos:start="15:45" pos:end="15:49"><block pos:start="15:45" pos:end="15:49">{ <expr pos:start="15:47" pos:end="15:47"><literal type="number" pos:start="15:47" pos:end="15:47">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:42"><decl pos:start="17:5" pos:end="17:41"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">float</name></type> <name pos:start="17:11" pos:end="17:41"><name pos:start="17:11" pos:end="17:19">clippings</name><index pos:start="17:20" pos:end="17:41">[<expr pos:start="17:21" pos:end="17:40"><name pos:start="17:21" pos:end="17:40">AAC_NUM_BLOCKS_SHORT</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:35"><decl pos:start="21:5" pos:end="21:34"><type pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:19">FFPsyWindowInfo</name></type> <name pos:start="21:21" pos:end="21:22">wi</name> <init pos:start="21:24" pos:end="21:34">= <expr pos:start="21:26" pos:end="21:34"><block pos:start="21:26" pos:end="21:34">{ <expr pos:start="21:28" pos:end="21:32"><block pos:start="21:28" pos:end="21:32">{ <expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="189:5"><if pos:start="25:5" pos:end="183:5">if <condition pos:start="25:8" pos:end="25:11">(<expr pos:start="25:9" pos:end="25:10"><name pos:start="25:9" pos:end="25:10">la</name></expr>)</condition> <block pos:start="25:13" pos:end="183:5">{<block_content pos:start="27:9" pos:end="181:9">

        <decl_stmt pos:start="27:9" pos:end="27:43"><decl pos:start="27:9" pos:end="27:42"><type pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:13">float</name></type> <name pos:start="27:15" pos:end="27:42"><name pos:start="27:15" pos:end="27:21">hpfsmpl</name><index pos:start="27:22" pos:end="27:42">[<expr pos:start="27:23" pos:end="27:41"><name pos:start="27:23" pos:end="27:41">AAC_BLOCK_SIZE_LONG</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:34"><decl pos:start="29:9" pos:end="29:33"><type pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:13">float</name> <specifier pos:start="29:15" pos:end="29:19">const</specifier> <modifier pos:start="29:21" pos:end="29:21">*</modifier></type><name pos:start="29:22" pos:end="29:23">pf</name> <init pos:start="29:25" pos:end="29:33">= <expr pos:start="29:27" pos:end="29:33"><name pos:start="29:27" pos:end="29:33">hpfsmpl</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:84"><decl pos:start="31:9" pos:end="31:83"><type pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:13">float</name></type> <name pos:start="31:15" pos:end="31:83"><name pos:start="31:15" pos:end="31:30">attack_intensity</name><index pos:start="31:31" pos:end="31:83">[<expr pos:start="31:32" pos:end="31:82"><operator pos:start="31:32" pos:end="31:32">(</operator><name pos:start="31:33" pos:end="31:52">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="31:54" pos:end="31:54">+</operator> <literal type="number" pos:start="31:56" pos:end="31:56">1</literal><operator pos:start="31:57" pos:end="31:57">)</operator> <operator pos:start="31:59" pos:end="31:59">*</operator> <name pos:start="31:61" pos:end="31:82">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:83"><decl pos:start="33:9" pos:end="33:82"><type pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:13">float</name></type> <name pos:start="33:15" pos:end="33:82"><name pos:start="33:15" pos:end="33:29">energy_subshort</name><index pos:start="33:30" pos:end="33:82">[<expr pos:start="33:31" pos:end="33:81"><operator pos:start="33:31" pos:end="33:31">(</operator><name pos:start="33:32" pos:end="33:51">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="33:53" pos:end="33:53">+</operator> <literal type="number" pos:start="33:55" pos:end="33:55">1</literal><operator pos:start="33:56" pos:end="33:56">)</operator> <operator pos:start="33:58" pos:end="33:58">*</operator> <name pos:start="33:60" pos:end="33:81">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:61"><decl pos:start="35:9" pos:end="35:60"><type pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:13">float</name></type> <name pos:start="35:15" pos:end="35:52"><name pos:start="35:15" pos:end="35:26">energy_short</name><index pos:start="35:27" pos:end="35:52">[<expr pos:start="35:28" pos:end="35:51"><name pos:start="35:28" pos:end="35:47">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="35:49" pos:end="35:49">+</operator> <literal type="number" pos:start="35:51" pos:end="35:51">1</literal></expr>]</index></name> <init pos:start="35:54" pos:end="35:60">= <expr pos:start="35:56" pos:end="35:60"><block pos:start="35:56" pos:end="35:60">{ <expr pos:start="35:58" pos:end="35:58"><literal type="number" pos:start="35:58" pos:end="35:58">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:79"><decl pos:start="37:9" pos:end="37:78"><type pos:start="37:9" pos:end="37:21"><specifier pos:start="37:9" pos:end="37:13">const</specifier> <name pos:start="37:15" pos:end="37:19">float</name> <modifier pos:start="37:21" pos:end="37:21">*</modifier></type><name pos:start="37:22" pos:end="37:27">firbuf</name> <init pos:start="37:29" pos:end="37:78">= <expr pos:start="37:31" pos:end="37:78"><name pos:start="37:31" pos:end="37:32">la</name> <operator pos:start="37:34" pos:end="37:34">+</operator> <operator pos:start="37:36" pos:end="37:36">(</operator><name pos:start="37:37" pos:end="37:56">AAC_BLOCK_SIZE_SHORT</name><operator pos:start="37:57" pos:end="37:57">/</operator><literal type="number" pos:start="37:58" pos:end="37:60">4</literal> <operator pos:start="37:60" pos:end="37:60">-</operator> <name pos:start="37:62" pos:end="37:77">PSY_LAME_FIR_LEN</name><operator pos:start="37:78" pos:end="37:78">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:24"><decl pos:start="39:9" pos:end="39:23"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:19">att_sum</name> <init pos:start="39:21" pos:end="39:23">= <expr pos:start="39:23" pos:end="39:23"><literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="43:9" pos:end="43:58">/* LAME comment: apply high pass filter of fs/4 */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:55"><expr pos:start="45:9" pos:end="45:54"><call pos:start="45:9" pos:end="45:54"><name pos:start="45:9" pos:end="45:21">psy_hp_filter</name><argument_list pos:start="45:22" pos:end="45:54">(<argument pos:start="45:23" pos:end="45:28"><expr pos:start="45:23" pos:end="45:28"><name pos:start="45:23" pos:end="45:28">firbuf</name></expr></argument>, <argument pos:start="45:31" pos:end="45:37"><expr pos:start="45:31" pos:end="45:37"><name pos:start="45:31" pos:end="45:37">hpfsmpl</name></expr></argument>, <argument pos:start="45:40" pos:end="45:53"><expr pos:start="45:40" pos:end="45:53"><name pos:start="45:40" pos:end="45:53">psy_fir_coeffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="49:9" pos:end="49:59">/* Calculate the energies of each sub-shortblock */</comment>

        <for pos:start="51:9" pos:end="61:9">for <control pos:start="51:13" pos:end="51:52">(<init pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:18"><name pos:start="51:14" pos:end="51:14">i</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>;</init> <condition pos:start="51:21" pos:end="51:47"><expr pos:start="51:21" pos:end="51:46"><name pos:start="51:21" pos:end="51:21">i</name> <operator pos:start="51:23" pos:end="51:23">&lt;</operator> <name pos:start="51:25" pos:end="51:46">PSY_LAME_NUM_SUBBLOCKS</name></expr>;</condition> <incr pos:start="51:49" pos:end="51:51"><expr pos:start="51:49" pos:end="51:51"><name pos:start="51:49" pos:end="51:49">i</name><operator pos:start="51:50" pos:end="51:51">++</operator></expr></incr>)</control> <block pos:start="51:54" pos:end="61:9">{<block_content pos:start="53:13" pos:end="59:50">

            <expr_stmt pos:start="53:13" pos:end="53:118"><expr pos:start="53:13" pos:end="53:117"><name pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:27">energy_subshort</name><index pos:start="53:28" pos:end="53:30">[<expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">i</name></expr>]</index></name> <operator pos:start="53:32" pos:end="53:32">=</operator> <name pos:start="53:34" pos:end="53:117"><name pos:start="53:34" pos:end="53:36">pch</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:58">prev_energy_subshort</name><index pos:start="53:59" pos:end="53:117">[<expr pos:start="53:60" pos:end="53:116"><name pos:start="53:60" pos:end="53:60">i</name> <operator pos:start="53:62" pos:end="53:62">+</operator> <operator pos:start="53:64" pos:end="53:64">(</operator><operator pos:start="53:65" pos:end="53:65">(</operator><name pos:start="53:66" pos:end="53:85">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="53:87" pos:end="53:87">-</operator> <literal type="number" pos:start="53:89" pos:end="53:89">1</literal><operator pos:start="53:90" pos:end="53:90">)</operator> <operator pos:start="53:92" pos:end="53:92">*</operator> <name pos:start="53:94" pos:end="53:115">PSY_LAME_NUM_SUBBLOCKS</name><operator pos:start="53:116" pos:end="53:116">)</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:113"><expr pos:start="55:13" pos:end="55:112"><call pos:start="55:13" pos:end="55:112"><name pos:start="55:13" pos:end="55:18">assert</name><argument_list pos:start="55:19" pos:end="55:112">(<argument pos:start="55:20" pos:end="55:111"><expr pos:start="55:20" pos:end="55:111"><name pos:start="55:20" pos:end="55:107"><name pos:start="55:20" pos:end="55:22">pch</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:44">prev_energy_subshort</name><index pos:start="55:45" pos:end="55:107">[<expr pos:start="55:46" pos:end="55:106"><name pos:start="55:46" pos:end="55:46">i</name> <operator pos:start="55:48" pos:end="55:48">+</operator> <operator pos:start="55:50" pos:end="55:50">(</operator><operator pos:start="55:51" pos:end="55:51">(</operator><name pos:start="55:52" pos:end="55:71">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="55:73" pos:end="55:73">-</operator> <literal type="number" pos:start="55:75" pos:end="55:75">2</literal><operator pos:start="55:76" pos:end="55:76">)</operator> <operator pos:start="55:78" pos:end="55:78">*</operator> <name pos:start="55:80" pos:end="55:101">PSY_LAME_NUM_SUBBLOCKS</name> <operator pos:start="55:103" pos:end="55:103">+</operator> <literal type="number" pos:start="55:105" pos:end="55:105">1</literal><operator pos:start="55:106" pos:end="55:106">)</operator></expr>]</index></name> <operator pos:start="55:109" pos:end="55:109">&gt;</operator> <literal type="number" pos:start="55:111" pos:end="55:111">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:144"><expr pos:start="57:13" pos:end="57:143"><name pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:28">attack_intensity</name><index pos:start="57:29" pos:end="57:31">[<expr pos:start="57:30" pos:end="57:30"><name pos:start="57:30" pos:end="57:30">i</name></expr>]</index></name> <operator pos:start="57:33" pos:end="57:33">=</operator> <name pos:start="57:35" pos:end="57:52"><name pos:start="57:35" pos:end="57:49">energy_subshort</name><index pos:start="57:50" pos:end="57:52">[<expr pos:start="57:51" pos:end="57:51"><name pos:start="57:51" pos:end="57:51">i</name></expr>]</index></name> <operator pos:start="57:54" pos:end="57:54">/</operator> <name pos:start="57:56" pos:end="57:143"><name pos:start="57:56" pos:end="57:58">pch</name><operator pos:start="57:59" pos:end="57:60">-&gt;</operator><name pos:start="57:61" pos:end="57:80">prev_energy_subshort</name><index pos:start="57:81" pos:end="57:143">[<expr pos:start="57:82" pos:end="57:142"><name pos:start="57:82" pos:end="57:82">i</name> <operator pos:start="57:84" pos:end="57:84">+</operator> <operator pos:start="57:86" pos:end="57:86">(</operator><operator pos:start="57:87" pos:end="57:87">(</operator><name pos:start="57:88" pos:end="57:107">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="57:109" pos:end="57:109">-</operator> <literal type="number" pos:start="57:111" pos:end="57:111">2</literal><operator pos:start="57:112" pos:end="57:112">)</operator> <operator pos:start="57:114" pos:end="57:114">*</operator> <name pos:start="57:116" pos:end="57:137">PSY_LAME_NUM_SUBBLOCKS</name> <operator pos:start="57:139" pos:end="57:139">+</operator> <literal type="number" pos:start="57:141" pos:end="57:141">1</literal><operator pos:start="57:142" pos:end="57:142">)</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:50"><expr pos:start="59:13" pos:end="59:49"><name pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:24">energy_short</name><index pos:start="59:25" pos:end="59:27">[<expr pos:start="59:26" pos:end="59:26"><literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr>]</index></name> <operator pos:start="59:29" pos:end="59:30">+=</operator> <name pos:start="59:32" pos:end="59:49"><name pos:start="59:32" pos:end="59:46">energy_subshort</name><index pos:start="59:47" pos:end="59:49">[<expr pos:start="59:48" pos:end="59:48"><name pos:start="59:48" pos:end="59:48">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="65:9" pos:end="107:9">for <control pos:start="65:13" pos:end="65:75">(<init pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:18"><name pos:start="65:14" pos:end="65:14">i</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr>;</init> <condition pos:start="65:21" pos:end="65:70"><expr pos:start="65:21" pos:end="65:69"><name pos:start="65:21" pos:end="65:21">i</name> <operator pos:start="65:23" pos:end="65:23">&lt;</operator> <name pos:start="65:25" pos:end="65:44">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="65:46" pos:end="65:46">*</operator> <name pos:start="65:48" pos:end="65:69">PSY_LAME_NUM_SUBBLOCKS</name></expr>;</condition> <incr pos:start="65:72" pos:end="65:74"><expr pos:start="65:72" pos:end="65:74"><name pos:start="65:72" pos:end="65:72">i</name><operator pos:start="65:73" pos:end="65:74">++</operator></expr></incr>)</control> <block pos:start="65:77" pos:end="107:9">{<block_content pos:start="67:13" pos:end="105:61">

            <decl_stmt pos:start="67:13" pos:end="67:112"><decl pos:start="67:13" pos:end="67:111"><type pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:17">float</name> <specifier pos:start="67:19" pos:end="67:23">const</specifier> <modifier pos:start="67:25" pos:end="67:25">*</modifier><specifier pos:start="67:26" pos:end="67:30">const</specifier></type> <name pos:start="67:32" pos:end="67:34">pfe</name> <init pos:start="67:36" pos:end="67:111">= <expr pos:start="67:38" pos:end="67:111"><name pos:start="67:38" pos:end="67:39">pf</name> <operator pos:start="67:41" pos:end="67:41">+</operator> <name pos:start="67:43" pos:end="67:61">AAC_BLOCK_SIZE_LONG</name> <operator pos:start="67:63" pos:end="67:63">/</operator> <operator pos:start="67:65" pos:end="67:65">(</operator><name pos:start="67:66" pos:end="67:85">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="67:87" pos:end="67:87">*</operator> <name pos:start="67:89" pos:end="67:110">PSY_LAME_NUM_SUBBLOCKS</name><operator pos:start="67:111" pos:end="67:111">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="69:13" pos:end="69:27"><decl pos:start="69:13" pos:end="69:26"><type pos:start="69:13" pos:end="69:17"><name pos:start="69:13" pos:end="69:17">float</name></type> <name pos:start="69:19" pos:end="69:19">p</name> <init pos:start="69:21" pos:end="69:26">= <expr pos:start="69:23" pos:end="69:26"><literal type="number" pos:start="69:23" pos:end="69:26">1.0f</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="71:13" pos:end="73:41">for <control pos:start="71:17" pos:end="71:34">(<init pos:start="71:18" pos:end="71:18">;</init> <condition pos:start="71:20" pos:end="71:28"><expr pos:start="71:20" pos:end="71:27"><name pos:start="71:20" pos:end="71:21">pf</name> <operator pos:start="71:23" pos:end="71:23">&lt;</operator> <name pos:start="71:25" pos:end="71:27">pfe</name></expr>;</condition> <incr pos:start="71:30" pos:end="71:33"><expr pos:start="71:30" pos:end="71:33"><name pos:start="71:30" pos:end="71:31">pf</name><operator pos:start="71:32" pos:end="71:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="73:17" pos:end="73:41"><block_content pos:start="73:17" pos:end="73:41">

                <expr_stmt pos:start="73:17" pos:end="73:41"><expr pos:start="73:17" pos:end="73:40"><name pos:start="73:17" pos:end="73:17">p</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <call pos:start="73:21" pos:end="73:40"><name pos:start="73:21" pos:end="73:25">FFMAX</name><argument_list pos:start="73:26" pos:end="73:40">(<argument pos:start="73:27" pos:end="73:27"><expr pos:start="73:27" pos:end="73:27"><name pos:start="73:27" pos:end="73:27">p</name></expr></argument>, <argument pos:start="73:30" pos:end="73:39"><expr pos:start="73:30" pos:end="73:39"><call pos:start="73:30" pos:end="73:39"><name pos:start="73:30" pos:end="73:34">fabsf</name><argument_list pos:start="73:35" pos:end="73:39">(<argument pos:start="73:36" pos:end="73:38"><expr pos:start="73:36" pos:end="73:38"><operator pos:start="73:36" pos:end="73:36">*</operator><name pos:start="73:37" pos:end="73:38">pf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="75:13" pos:end="75:91"><expr pos:start="75:13" pos:end="75:90"><name pos:start="75:13" pos:end="75:40"><name pos:start="75:13" pos:end="75:15">pch</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:37">prev_energy_subshort</name><index pos:start="75:38" pos:end="75:40">[<expr pos:start="75:39" pos:end="75:39"><name pos:start="75:39" pos:end="75:39">i</name></expr>]</index></name> <operator pos:start="75:42" pos:end="75:42">=</operator> <name pos:start="75:44" pos:end="75:86"><name pos:start="75:44" pos:end="75:58">energy_subshort</name><index pos:start="75:59" pos:end="75:86">[<expr pos:start="75:60" pos:end="75:85"><name pos:start="75:60" pos:end="75:60">i</name> <operator pos:start="75:62" pos:end="75:62">+</operator> <name pos:start="75:64" pos:end="75:85">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name> <operator pos:start="75:88" pos:end="75:88">=</operator> <name pos:start="75:90" pos:end="75:90">p</name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:62"><expr pos:start="77:13" pos:end="77:61"><name pos:start="77:13" pos:end="77:56"><name pos:start="77:13" pos:end="77:24">energy_short</name><index pos:start="77:25" pos:end="77:56">[<expr pos:start="77:26" pos:end="77:55"><literal type="number" pos:start="77:26" pos:end="77:26">1</literal> <operator pos:start="77:28" pos:end="77:28">+</operator> <name pos:start="77:30" pos:end="77:30">i</name> <operator pos:start="77:32" pos:end="77:32">/</operator> <name pos:start="77:34" pos:end="77:55">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name> <operator pos:start="77:58" pos:end="77:59">+=</operator> <name pos:start="77:61" pos:end="77:61">p</name></expr>;</expr_stmt>

            <comment type="block" pos:start="79:13" pos:end="91:15">/* NOTE: The indexes below are [i + 3 - 2] in the LAME source.

             *       Obviously the 3 and 2 have some significance, or this would be just [i + 1]

             *       (which is what we use here). What the 3 stands for is ambiguous, as it is both

             *       number of short blocks, and the number of sub-short blocks.

             *       It seems that LAME is comparing each sub-block to sub-block + 1 in the

             *       previous block.

             */</comment>

            <if_stmt pos:start="93:13" pos:end="103:24"><if pos:start="93:13" pos:end="95:47">if <condition pos:start="93:16" pos:end="93:43">(<expr pos:start="93:17" pos:end="93:42"><name pos:start="93:17" pos:end="93:17">p</name> <operator pos:start="93:19" pos:end="93:19">&gt;</operator> <name pos:start="93:21" pos:end="93:42"><name pos:start="93:21" pos:end="93:35">energy_subshort</name><index pos:start="93:36" pos:end="93:42">[<expr pos:start="93:37" pos:end="93:41"><name pos:start="93:37" pos:end="93:37">i</name> <operator pos:start="93:39" pos:end="93:39">+</operator> <literal type="number" pos:start="93:41" pos:end="93:41">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:47"><block_content pos:start="95:17" pos:end="95:47">

                <expr_stmt pos:start="95:17" pos:end="95:47"><expr pos:start="95:17" pos:end="95:46"><name pos:start="95:17" pos:end="95:17">p</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:21">p</name> <operator pos:start="95:23" pos:end="95:23">/</operator> <name pos:start="95:25" pos:end="95:46"><name pos:start="95:25" pos:end="95:39">energy_subshort</name><index pos:start="95:40" pos:end="95:46">[<expr pos:start="95:41" pos:end="95:45"><name pos:start="95:41" pos:end="95:41">i</name> <operator pos:start="95:43" pos:end="95:43">+</operator> <literal type="number" pos:start="95:45" pos:end="95:45">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="97:13" pos:end="99:57">else if <condition pos:start="97:21" pos:end="97:56">(<expr pos:start="97:22" pos:end="97:55"><name pos:start="97:22" pos:end="97:43"><name pos:start="97:22" pos:end="97:36">energy_subshort</name><index pos:start="97:37" pos:end="97:43">[<expr pos:start="97:38" pos:end="97:42"><name pos:start="97:38" pos:end="97:38">i</name> <operator pos:start="97:40" pos:end="97:40">+</operator> <literal type="number" pos:start="97:42" pos:end="97:42">1</literal></expr>]</index></name> <operator pos:start="97:45" pos:end="97:45">&gt;</operator> <name pos:start="97:47" pos:end="97:47">p</name> <operator pos:start="97:49" pos:end="97:49">*</operator> <literal type="number" pos:start="97:51" pos:end="97:55">10.0f</literal></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:57"><block_content pos:start="99:17" pos:end="99:57">

                <expr_stmt pos:start="99:17" pos:end="99:57"><expr pos:start="99:17" pos:end="99:56"><name pos:start="99:17" pos:end="99:17">p</name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:42"><name pos:start="99:21" pos:end="99:35">energy_subshort</name><index pos:start="99:36" pos:end="99:42">[<expr pos:start="99:37" pos:end="99:41"><name pos:start="99:37" pos:end="99:37">i</name> <operator pos:start="99:39" pos:end="99:39">+</operator> <literal type="number" pos:start="99:41" pos:end="99:41">1</literal></expr>]</index></name> <operator pos:start="99:44" pos:end="99:44">/</operator> <operator pos:start="99:46" pos:end="99:46">(</operator><name pos:start="99:47" pos:end="99:47">p</name> <operator pos:start="99:49" pos:end="99:49">*</operator> <literal type="number" pos:start="99:51" pos:end="99:55">10.0f</literal><operator pos:start="99:56" pos:end="99:56">)</operator></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="101:13" pos:end="103:24">else<block type="pseudo" pos:start="103:17" pos:end="103:24"><block_content pos:start="103:17" pos:end="103:24">

                <expr_stmt pos:start="103:17" pos:end="103:24"><expr pos:start="103:17" pos:end="103:23"><name pos:start="103:17" pos:end="103:17">p</name> <operator pos:start="103:19" pos:end="103:19">=</operator> <literal type="number" pos:start="103:21" pos:end="103:23">0.0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:61"><expr pos:start="105:13" pos:end="105:60"><name pos:start="105:13" pos:end="105:56"><name pos:start="105:13" pos:end="105:28">attack_intensity</name><index pos:start="105:29" pos:end="105:56">[<expr pos:start="105:30" pos:end="105:55"><name pos:start="105:30" pos:end="105:30">i</name> <operator pos:start="105:32" pos:end="105:32">+</operator> <name pos:start="105:34" pos:end="105:55">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name> <operator pos:start="105:58" pos:end="105:58">=</operator> <name pos:start="105:60" pos:end="105:60">p</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="111:9" pos:end="111:53">/* compare energy between sub-short blocks */</comment>

        <for pos:start="113:9" pos:end="119:91">for <control pos:start="113:13" pos:end="113:81">(<init pos:start="113:14" pos:end="113:19"><expr pos:start="113:14" pos:end="113:18"><name pos:start="113:14" pos:end="113:14">i</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <literal type="number" pos:start="113:18" pos:end="113:18">0</literal></expr>;</init> <condition pos:start="113:21" pos:end="113:76"><expr pos:start="113:21" pos:end="113:75"><name pos:start="113:21" pos:end="113:21">i</name> <operator pos:start="113:23" pos:end="113:23">&lt;</operator> <operator pos:start="113:25" pos:end="113:25">(</operator><name pos:start="113:26" pos:end="113:45">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="113:47" pos:end="113:47">+</operator> <literal type="number" pos:start="113:49" pos:end="113:49">1</literal><operator pos:start="113:50" pos:end="113:50">)</operator> <operator pos:start="113:52" pos:end="113:52">*</operator> <name pos:start="113:54" pos:end="113:75">PSY_LAME_NUM_SUBBLOCKS</name></expr>;</condition> <incr pos:start="113:78" pos:end="113:80"><expr pos:start="113:78" pos:end="113:80"><name pos:start="113:78" pos:end="113:78">i</name><operator pos:start="113:79" pos:end="113:80">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:13" pos:end="119:91"><block_content pos:start="115:13" pos:end="119:91">

            <if_stmt pos:start="115:13" pos:end="119:91"><if pos:start="115:13" pos:end="119:91">if <condition pos:start="115:16" pos:end="115:53">(<expr pos:start="115:17" pos:end="115:52"><operator pos:start="115:17" pos:end="115:17">!</operator><name pos:start="115:18" pos:end="115:52"><name pos:start="115:18" pos:end="115:24">attacks</name><index pos:start="115:25" pos:end="115:52">[<expr pos:start="115:26" pos:end="115:51"><name pos:start="115:26" pos:end="115:26">i</name> <operator pos:start="115:28" pos:end="115:28">/</operator> <name pos:start="115:30" pos:end="115:51">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="119:91"><block_content pos:start="117:17" pos:end="119:91">

                <if_stmt pos:start="117:17" pos:end="119:91"><if pos:start="117:17" pos:end="119:91">if <condition pos:start="117:20" pos:end="117:64">(<expr pos:start="117:21" pos:end="117:63"><name pos:start="117:21" pos:end="117:39"><name pos:start="117:21" pos:end="117:36">attack_intensity</name><index pos:start="117:37" pos:end="117:39">[<expr pos:start="117:38" pos:end="117:38"><name pos:start="117:38" pos:end="117:38">i</name></expr>]</index></name> <operator pos:start="117:41" pos:end="117:41">&gt;</operator> <name pos:start="117:43" pos:end="117:63"><name pos:start="117:43" pos:end="117:45">pch</name><operator pos:start="117:46" pos:end="117:47">-&gt;</operator><name pos:start="117:48" pos:end="117:63">attack_threshold</name></name></expr>)</condition><block type="pseudo" pos:start="119:21" pos:end="119:91"><block_content pos:start="119:21" pos:end="119:91">

                    <expr_stmt pos:start="119:21" pos:end="119:91"><expr pos:start="119:21" pos:end="119:90"><name pos:start="119:21" pos:end="119:55"><name pos:start="119:21" pos:end="119:27">attacks</name><index pos:start="119:28" pos:end="119:55">[<expr pos:start="119:29" pos:end="119:54"><name pos:start="119:29" pos:end="119:29">i</name> <operator pos:start="119:31" pos:end="119:31">/</operator> <name pos:start="119:33" pos:end="119:54">PSY_LAME_NUM_SUBBLOCKS</name></expr>]</index></name> <operator pos:start="119:57" pos:end="119:57">=</operator> <operator pos:start="119:59" pos:end="119:59">(</operator><name pos:start="119:60" pos:end="119:60">i</name> <operator pos:start="119:62" pos:end="119:62">%</operator> <name pos:start="119:64" pos:end="119:85">PSY_LAME_NUM_SUBBLOCKS</name><operator pos:start="119:86" pos:end="119:86">)</operator> <operator pos:start="119:88" pos:end="119:88">+</operator> <literal type="number" pos:start="119:90" pos:end="119:90">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for>



        <comment type="block" pos:start="123:9" pos:end="123:96">/* should have energy change between short blocks, in order to avoid periodic signals */</comment>

        <comment type="block" pos:start="125:9" pos:end="125:68">/* Good samples to show the effect are Trumpet test songs */</comment>

        <comment type="block" pos:start="127:9" pos:end="127:82">/* GB: tuned (1) to avoid too many short blocks for test sample TRUMPET */</comment>

        <comment type="block" pos:start="129:9" pos:end="129:93">/* RH: tuned (2) to let enough short blocks through for test sample FSOL and SNAPS */</comment>

        <for pos:start="131:9" pos:end="155:9">for <control pos:start="131:13" pos:end="131:54">(<init pos:start="131:14" pos:end="131:19"><expr pos:start="131:14" pos:end="131:18"><name pos:start="131:14" pos:end="131:14">i</name> <operator pos:start="131:16" pos:end="131:16">=</operator> <literal type="number" pos:start="131:18" pos:end="131:18">1</literal></expr>;</init> <condition pos:start="131:21" pos:end="131:49"><expr pos:start="131:21" pos:end="131:48"><name pos:start="131:21" pos:end="131:21">i</name> <operator pos:start="131:23" pos:end="131:23">&lt;</operator> <name pos:start="131:25" pos:end="131:44">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="131:46" pos:end="131:46">+</operator> <literal type="number" pos:start="131:48" pos:end="131:48">1</literal></expr>;</condition> <incr pos:start="131:51" pos:end="131:53"><expr pos:start="131:51" pos:end="131:53"><name pos:start="131:51" pos:end="131:51">i</name><operator pos:start="131:52" pos:end="131:53">++</operator></expr></incr>)</control> <block pos:start="131:56" pos:end="155:9">{<block_content pos:start="133:13" pos:end="153:34">

            <decl_stmt pos:start="133:13" pos:end="133:48"><decl pos:start="133:13" pos:end="133:47"><type pos:start="133:13" pos:end="133:23"><name pos:start="133:13" pos:end="133:17">float</name> <specifier pos:start="133:19" pos:end="133:23">const</specifier></type> <name pos:start="133:25" pos:end="133:25">u</name> <init pos:start="133:27" pos:end="133:47">= <expr pos:start="133:29" pos:end="133:47"><name pos:start="133:29" pos:end="133:47"><name pos:start="133:29" pos:end="133:40">energy_short</name><index pos:start="133:41" pos:end="133:47">[<expr pos:start="133:42" pos:end="133:46"><name pos:start="133:42" pos:end="133:42">i</name> <operator pos:start="133:44" pos:end="133:44">-</operator> <literal type="number" pos:start="133:46" pos:end="133:46">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="135:13" pos:end="135:44"><decl pos:start="135:13" pos:end="135:43"><type pos:start="135:13" pos:end="135:23"><name pos:start="135:13" pos:end="135:17">float</name> <specifier pos:start="135:19" pos:end="135:23">const</specifier></type> <name pos:start="135:25" pos:end="135:25">v</name> <init pos:start="135:27" pos:end="135:43">= <expr pos:start="135:29" pos:end="135:43"><name pos:start="135:29" pos:end="135:43"><name pos:start="135:29" pos:end="135:40">energy_short</name><index pos:start="135:41" pos:end="135:43">[<expr pos:start="135:42" pos:end="135:42"><name pos:start="135:42" pos:end="135:42">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="137:13" pos:end="137:40"><decl pos:start="137:13" pos:end="137:39"><type pos:start="137:13" pos:end="137:23"><name pos:start="137:13" pos:end="137:17">float</name> <specifier pos:start="137:19" pos:end="137:23">const</specifier></type> <name pos:start="137:25" pos:end="137:25">m</name> <init pos:start="137:27" pos:end="137:39">= <expr pos:start="137:29" pos:end="137:39"><call pos:start="137:29" pos:end="137:39"><name pos:start="137:29" pos:end="137:33">FFMAX</name><argument_list pos:start="137:34" pos:end="137:39">(<argument pos:start="137:35" pos:end="137:35"><expr pos:start="137:35" pos:end="137:35"><name pos:start="137:35" pos:end="137:35">u</name></expr></argument>, <argument pos:start="137:38" pos:end="137:38"><expr pos:start="137:38" pos:end="137:38"><name pos:start="137:38" pos:end="137:38">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="139:13" pos:end="151:13"><if pos:start="139:13" pos:end="151:13">if <condition pos:start="139:16" pos:end="139:26">(<expr pos:start="139:17" pos:end="139:25"><name pos:start="139:17" pos:end="139:17">m</name> <operator pos:start="139:19" pos:end="139:19">&lt;</operator> <literal type="number" pos:start="139:21" pos:end="139:25">40000</literal></expr>)</condition> <block pos:start="139:28" pos:end="151:13">{<block_content pos:start="141:17" pos:end="149:17">                          <comment type="block" pos:start="139:55" pos:end="139:63">/* (2) */</comment>

                <if_stmt pos:start="141:17" pos:end="149:17"><if pos:start="141:17" pos:end="149:17">if <condition pos:start="141:20" pos:end="141:49">(<expr pos:start="141:21" pos:end="141:48"><name pos:start="141:21" pos:end="141:21">u</name> <operator pos:start="141:23" pos:end="141:23">&lt;</operator> <literal type="number" pos:start="141:25" pos:end="141:28">1.7f</literal> <operator pos:start="141:30" pos:end="141:30">*</operator> <name pos:start="141:32" pos:end="141:32">v</name> <operator pos:start="141:34" pos:end="141:35">&amp;&amp;</operator> <name pos:start="141:37" pos:end="141:37">v</name> <operator pos:start="141:39" pos:end="141:39">&lt;</operator> <literal type="number" pos:start="141:41" pos:end="141:44">1.7f</literal> <operator pos:start="141:46" pos:end="141:46">*</operator> <name pos:start="141:48" pos:end="141:48">u</name></expr>)</condition> <block pos:start="141:51" pos:end="149:17">{<block_content pos:start="143:21" pos:end="147:35">   <comment type="block" pos:start="141:55" pos:end="141:63">/* (1) */</comment>

                    <if_stmt pos:start="143:21" pos:end="145:39"><if pos:start="143:21" pos:end="145:39">if <condition pos:start="143:24" pos:end="143:58">(<expr pos:start="143:25" pos:end="143:57"><name pos:start="143:25" pos:end="143:25">i</name> <operator pos:start="143:27" pos:end="143:28">==</operator> <literal type="number" pos:start="143:30" pos:end="143:30">1</literal> <operator pos:start="143:32" pos:end="143:33">&amp;&amp;</operator> <name pos:start="143:35" pos:end="143:44"><name pos:start="143:35" pos:end="143:41">attacks</name><index pos:start="143:42" pos:end="143:44">[<expr pos:start="143:43" pos:end="143:43"><literal type="number" pos:start="143:43" pos:end="143:43">0</literal></expr>]</index></name> <operator pos:start="143:46" pos:end="143:46">&lt;</operator> <name pos:start="143:48" pos:end="143:57"><name pos:start="143:48" pos:end="143:54">attacks</name><index pos:start="143:55" pos:end="143:57">[<expr pos:start="143:56" pos:end="143:56"><name pos:start="143:56" pos:end="143:56">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="145:25" pos:end="145:39"><block_content pos:start="145:25" pos:end="145:39">

                        <expr_stmt pos:start="145:25" pos:end="145:39"><expr pos:start="145:25" pos:end="145:38"><name pos:start="145:25" pos:end="145:34"><name pos:start="145:25" pos:end="145:31">attacks</name><index pos:start="145:32" pos:end="145:34">[<expr pos:start="145:33" pos:end="145:33"><literal type="number" pos:start="145:33" pos:end="145:33">0</literal></expr>]</index></name> <operator pos:start="145:36" pos:end="145:36">=</operator> <literal type="number" pos:start="145:38" pos:end="145:38">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:35"><expr pos:start="147:21" pos:end="147:34"><name pos:start="147:21" pos:end="147:30"><name pos:start="147:21" pos:end="147:27">attacks</name><index pos:start="147:28" pos:end="147:30">[<expr pos:start="147:29" pos:end="147:29"><name pos:start="147:29" pos:end="147:29">i</name></expr>]</index></name> <operator pos:start="147:32" pos:end="147:32">=</operator> <literal type="number" pos:start="147:34" pos:end="147:34">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:34"><expr pos:start="153:13" pos:end="153:33"><name pos:start="153:13" pos:end="153:19">att_sum</name> <operator pos:start="153:21" pos:end="153:22">+=</operator> <name pos:start="153:24" pos:end="153:33"><name pos:start="153:24" pos:end="153:30">attacks</name><index pos:start="153:31" pos:end="153:33">[<expr pos:start="153:32" pos:end="153:32"><name pos:start="153:32" pos:end="153:32">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="159:9" pos:end="161:27"><if pos:start="159:9" pos:end="161:27">if <condition pos:start="159:12" pos:end="159:43">(<expr pos:start="159:13" pos:end="159:42"><name pos:start="159:13" pos:end="159:22"><name pos:start="159:13" pos:end="159:19">attacks</name><index pos:start="159:20" pos:end="159:22">[<expr pos:start="159:21" pos:end="159:21"><literal type="number" pos:start="159:21" pos:end="159:21">0</literal></expr>]</index></name> <operator pos:start="159:24" pos:end="159:25">&lt;=</operator> <name pos:start="159:27" pos:end="159:42"><name pos:start="159:27" pos:end="159:29">pch</name><operator pos:start="159:30" pos:end="159:31">-&gt;</operator><name pos:start="159:32" pos:end="159:42">prev_attack</name></name></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:27"><block_content pos:start="161:13" pos:end="161:27">

            <expr_stmt pos:start="161:13" pos:end="161:27"><expr pos:start="161:13" pos:end="161:26"><name pos:start="161:13" pos:end="161:22"><name pos:start="161:13" pos:end="161:19">attacks</name><index pos:start="161:20" pos:end="161:22">[<expr pos:start="161:21" pos:end="161:21"><literal type="number" pos:start="161:21" pos:end="161:21">0</literal></expr>]</index></name> <operator pos:start="161:24" pos:end="161:24">=</operator> <literal type="number" pos:start="161:26" pos:end="161:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="165:9" pos:end="165:30"><expr pos:start="165:9" pos:end="165:29"><name pos:start="165:9" pos:end="165:15">att_sum</name> <operator pos:start="165:17" pos:end="165:18">+=</operator> <name pos:start="165:20" pos:end="165:29"><name pos:start="165:20" pos:end="165:26">attacks</name><index pos:start="165:27" pos:end="165:29">[<expr pos:start="165:28" pos:end="165:28"><literal type="number" pos:start="165:28" pos:end="165:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <comment type="block" pos:start="167:9" pos:end="167:107">/* 3 below indicates the previous attack happened in the last sub-block of the previous sequence */</comment>

        <if_stmt pos:start="169:9" pos:end="181:9"><if pos:start="169:9" pos:end="181:9">if <condition pos:start="169:12" pos:end="169:45">(<expr pos:start="169:13" pos:end="169:44"><name pos:start="169:13" pos:end="169:28"><name pos:start="169:13" pos:end="169:15">pch</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:28">prev_attack</name></name> <operator pos:start="169:30" pos:end="169:31">==</operator> <literal type="number" pos:start="169:33" pos:end="169:33">3</literal> <operator pos:start="169:35" pos:end="169:36">||</operator> <name pos:start="169:38" pos:end="169:44">att_sum</name></expr>)</condition> <block pos:start="169:47" pos:end="181:9">{<block_content pos:start="171:13" pos:end="179:35">

            <expr_stmt pos:start="171:13" pos:end="171:29"><expr pos:start="171:13" pos:end="171:28"><name pos:start="171:13" pos:end="171:24">uselongblock</name> <operator pos:start="171:26" pos:end="171:26">=</operator> <literal type="number" pos:start="171:28" pos:end="171:28">0</literal></expr>;</expr_stmt>



            <for pos:start="175:13" pos:end="179:35">for <control pos:start="175:17" pos:end="175:58">(<init pos:start="175:18" pos:end="175:23"><expr pos:start="175:18" pos:end="175:22"><name pos:start="175:18" pos:end="175:18">i</name> <operator pos:start="175:20" pos:end="175:20">=</operator> <literal type="number" pos:start="175:22" pos:end="175:22">1</literal></expr>;</init> <condition pos:start="175:25" pos:end="175:53"><expr pos:start="175:25" pos:end="175:52"><name pos:start="175:25" pos:end="175:25">i</name> <operator pos:start="175:27" pos:end="175:27">&lt;</operator> <name pos:start="175:29" pos:end="175:48">AAC_NUM_BLOCKS_SHORT</name> <operator pos:start="175:50" pos:end="175:50">+</operator> <literal type="number" pos:start="175:52" pos:end="175:52">1</literal></expr>;</condition> <incr pos:start="175:55" pos:end="175:57"><expr pos:start="175:55" pos:end="175:57"><name pos:start="175:55" pos:end="175:55">i</name><operator pos:start="175:56" pos:end="175:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="177:17" pos:end="179:35"><block_content pos:start="177:17" pos:end="179:35">

                <if_stmt pos:start="177:17" pos:end="179:35"><if pos:start="177:17" pos:end="179:35">if <condition pos:start="177:20" pos:end="177:47">(<expr pos:start="177:21" pos:end="177:46"><name pos:start="177:21" pos:end="177:30"><name pos:start="177:21" pos:end="177:27">attacks</name><index pos:start="177:28" pos:end="177:30">[<expr pos:start="177:29" pos:end="177:29"><name pos:start="177:29" pos:end="177:29">i</name></expr>]</index></name> <operator pos:start="177:32" pos:end="177:33">&amp;&amp;</operator> <name pos:start="177:35" pos:end="177:46"><name pos:start="177:35" pos:end="177:41">attacks</name><index pos:start="177:42" pos:end="177:46">[<expr pos:start="177:43" pos:end="177:45"><name pos:start="177:43" pos:end="177:43">i</name><operator pos:start="177:44" pos:end="177:44">-</operator><literal type="number" pos:start="177:45" pos:end="177:45">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="179:21" pos:end="179:35"><block_content pos:start="179:21" pos:end="179:35">

                    <expr_stmt pos:start="179:21" pos:end="179:35"><expr pos:start="179:21" pos:end="179:34"><name pos:start="179:21" pos:end="179:30"><name pos:start="179:21" pos:end="179:27">attacks</name><index pos:start="179:28" pos:end="179:30">[<expr pos:start="179:29" pos:end="179:29"><name pos:start="179:29" pos:end="179:29">i</name></expr>]</index></name> <operator pos:start="179:32" pos:end="179:32">=</operator> <literal type="number" pos:start="179:34" pos:end="179:34">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="183:7" pos:end="189:5">else <block pos:start="183:12" pos:end="189:5">{<block_content pos:start="187:9" pos:end="187:60">

        <comment type="block" pos:start="185:9" pos:end="185:88">/* We have no lookahead info, so just use same type as the previous sequence. */</comment>

        <expr_stmt pos:start="187:9" pos:end="187:60"><expr pos:start="187:9" pos:end="187:59"><name pos:start="187:9" pos:end="187:20">uselongblock</name> <operator pos:start="187:22" pos:end="187:22">=</operator> <operator pos:start="187:24" pos:end="187:24">!</operator><operator pos:start="187:25" pos:end="187:25">(</operator><name pos:start="187:26" pos:end="187:34">prev_type</name> <operator pos:start="187:36" pos:end="187:37">==</operator> <name pos:start="187:39" pos:end="187:58">EIGHT_SHORT_SEQUENCE</name><operator pos:start="187:59" pos:end="187:59">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="193:5" pos:end="193:50"><expr pos:start="193:5" pos:end="193:49"><call pos:start="193:5" pos:end="193:49"><name pos:start="193:5" pos:end="193:25">lame_apply_block_type</name><argument_list pos:start="193:26" pos:end="193:49">(<argument pos:start="193:27" pos:end="193:29"><expr pos:start="193:27" pos:end="193:29"><name pos:start="193:27" pos:end="193:29">pch</name></expr></argument>, <argument pos:start="193:32" pos:end="193:34"><expr pos:start="193:32" pos:end="193:34"><operator pos:start="193:32" pos:end="193:32">&amp;</operator><name pos:start="193:33" pos:end="193:34">wi</name></expr></argument>, <argument pos:start="193:37" pos:end="193:48"><expr pos:start="193:37" pos:end="193:48"><name pos:start="193:37" pos:end="193:48">uselongblock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="197:5" pos:end="197:68">/* Calculate input sample maximums and evaluate clipping risk */</comment>

    <if_stmt pos:start="199:5" pos:end="223:5"><if pos:start="199:5" pos:end="217:5">if <condition pos:start="199:8" pos:end="199:14">(<expr pos:start="199:9" pos:end="199:13"><name pos:start="199:9" pos:end="199:13">audio</name></expr>)</condition> <block pos:start="199:16" pos:end="217:5">{<block_content pos:start="201:9" pos:end="215:9">

        <for pos:start="201:9" pos:end="215:9">for <control pos:start="201:13" pos:end="201:50">(<init pos:start="201:14" pos:end="201:19"><expr pos:start="201:14" pos:end="201:18"><name pos:start="201:14" pos:end="201:14">i</name> <operator pos:start="201:16" pos:end="201:16">=</operator> <literal type="number" pos:start="201:18" pos:end="201:18">0</literal></expr>;</init> <condition pos:start="201:21" pos:end="201:45"><expr pos:start="201:21" pos:end="201:44"><name pos:start="201:21" pos:end="201:21">i</name> <operator pos:start="201:23" pos:end="201:23">&lt;</operator> <name pos:start="201:25" pos:end="201:44">AAC_NUM_BLOCKS_SHORT</name></expr>;</condition> <incr pos:start="201:47" pos:end="201:49"><expr pos:start="201:47" pos:end="201:49"><name pos:start="201:47" pos:end="201:47">i</name><operator pos:start="201:48" pos:end="201:49">++</operator></expr></incr>)</control> <block pos:start="201:52" pos:end="215:9">{<block_content pos:start="203:13" pos:end="213:31">

            <decl_stmt pos:start="203:13" pos:end="203:65"><decl pos:start="203:13" pos:end="203:64"><type pos:start="203:13" pos:end="203:25"><specifier pos:start="203:13" pos:end="203:17">const</specifier> <name pos:start="203:19" pos:end="203:23">float</name> <modifier pos:start="203:25" pos:end="203:25">*</modifier></type><name pos:start="203:26" pos:end="203:29">wbuf</name> <init pos:start="203:31" pos:end="203:64">= <expr pos:start="203:33" pos:end="203:64"><name pos:start="203:33" pos:end="203:37">audio</name> <operator pos:start="203:39" pos:end="203:39">+</operator> <name pos:start="203:41" pos:end="203:41">i</name> <operator pos:start="203:43" pos:end="203:43">*</operator> <name pos:start="203:45" pos:end="203:64">AAC_BLOCK_SIZE_SHORT</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="205:13" pos:end="205:26"><decl pos:start="205:13" pos:end="205:25"><type pos:start="205:13" pos:end="205:17"><name pos:start="205:13" pos:end="205:17">float</name></type> <name pos:start="205:19" pos:end="205:21">max</name> <init pos:start="205:23" pos:end="205:25">= <expr pos:start="205:25" pos:end="205:25"><literal type="number" pos:start="205:25" pos:end="205:25">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="207:13" pos:end="207:18"><decl pos:start="207:13" pos:end="207:17"><type pos:start="207:13" pos:end="207:15"><name pos:start="207:13" pos:end="207:15">int</name></type> <name pos:start="207:17" pos:end="207:17">j</name></decl>;</decl_stmt>

            <for pos:start="209:13" pos:end="211:49">for <control pos:start="209:17" pos:end="209:54">(<init pos:start="209:18" pos:end="209:23"><expr pos:start="209:18" pos:end="209:22"><name pos:start="209:18" pos:end="209:18">j</name> <operator pos:start="209:20" pos:end="209:20">=</operator> <literal type="number" pos:start="209:22" pos:end="209:22">0</literal></expr>;</init> <condition pos:start="209:25" pos:end="209:49"><expr pos:start="209:25" pos:end="209:48"><name pos:start="209:25" pos:end="209:25">j</name> <operator pos:start="209:27" pos:end="209:27">&lt;</operator> <name pos:start="209:29" pos:end="209:48">AAC_BLOCK_SIZE_SHORT</name></expr>;</condition> <incr pos:start="209:51" pos:end="209:53"><expr pos:start="209:51" pos:end="209:53"><name pos:start="209:51" pos:end="209:51">j</name><operator pos:start="209:52" pos:end="209:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="211:17" pos:end="211:49"><block_content pos:start="211:17" pos:end="211:49">

                <expr_stmt pos:start="211:17" pos:end="211:49"><expr pos:start="211:17" pos:end="211:48"><name pos:start="211:17" pos:end="211:19">max</name> <operator pos:start="211:21" pos:end="211:21">=</operator> <call pos:start="211:23" pos:end="211:48"><name pos:start="211:23" pos:end="211:27">FFMAX</name><argument_list pos:start="211:28" pos:end="211:48">(<argument pos:start="211:29" pos:end="211:31"><expr pos:start="211:29" pos:end="211:31"><name pos:start="211:29" pos:end="211:31">max</name></expr></argument>, <argument pos:start="211:34" pos:end="211:47"><expr pos:start="211:34" pos:end="211:47"><call pos:start="211:34" pos:end="211:47"><name pos:start="211:34" pos:end="211:38">fabsf</name><argument_list pos:start="211:39" pos:end="211:47">(<argument pos:start="211:40" pos:end="211:46"><expr pos:start="211:40" pos:end="211:46"><name pos:start="211:40" pos:end="211:46"><name pos:start="211:40" pos:end="211:43">wbuf</name><index pos:start="211:44" pos:end="211:46">[<expr pos:start="211:45" pos:end="211:45"><name pos:start="211:45" pos:end="211:45">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="213:13" pos:end="213:31"><expr pos:start="213:13" pos:end="213:30"><name pos:start="213:13" pos:end="213:24"><name pos:start="213:13" pos:end="213:21">clippings</name><index pos:start="213:22" pos:end="213:24">[<expr pos:start="213:23" pos:end="213:23"><name pos:start="213:23" pos:end="213:23">i</name></expr>]</index></name> <operator pos:start="213:26" pos:end="213:26">=</operator> <name pos:start="213:28" pos:end="213:30">max</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="217:7" pos:end="223:5">else <block pos:start="217:12" pos:end="223:5">{<block_content pos:start="219:9" pos:end="221:29">

        <for pos:start="219:9" pos:end="221:29">for <control pos:start="219:13" pos:end="219:31">(<init pos:start="219:14" pos:end="219:19"><expr pos:start="219:14" pos:end="219:18"><name pos:start="219:14" pos:end="219:14">i</name> <operator pos:start="219:16" pos:end="219:16">=</operator> <literal type="number" pos:start="219:18" pos:end="219:18">0</literal></expr>;</init> <condition pos:start="219:21" pos:end="219:26"><expr pos:start="219:21" pos:end="219:25"><name pos:start="219:21" pos:end="219:21">i</name> <operator pos:start="219:23" pos:end="219:23">&lt;</operator> <literal type="number" pos:start="219:25" pos:end="219:25">8</literal></expr>;</condition> <incr pos:start="219:28" pos:end="219:30"><expr pos:start="219:28" pos:end="219:30"><name pos:start="219:28" pos:end="219:28">i</name><operator pos:start="219:29" pos:end="219:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="221:13" pos:end="221:29"><block_content pos:start="221:13" pos:end="221:29">

            <expr_stmt pos:start="221:13" pos:end="221:29"><expr pos:start="221:13" pos:end="221:28"><name pos:start="221:13" pos:end="221:24"><name pos:start="221:13" pos:end="221:21">clippings</name><index pos:start="221:22" pos:end="221:24">[<expr pos:start="221:23" pos:end="221:23"><name pos:start="221:23" pos:end="221:23">i</name></expr>]</index></name> <operator pos:start="221:26" pos:end="221:26">=</operator> <literal type="number" pos:start="221:28" pos:end="221:28">0</literal></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="227:5" pos:end="227:34"><expr pos:start="227:5" pos:end="227:33"><name pos:start="227:5" pos:end="227:21"><name pos:start="227:5" pos:end="227:6">wi</name><operator pos:start="227:7" pos:end="227:7">.</operator><name pos:start="227:8" pos:end="227:18">window_type</name><index pos:start="227:19" pos:end="227:21">[<expr pos:start="227:20" pos:end="227:20"><literal type="number" pos:start="227:20" pos:end="227:20">1</literal></expr>]</index></name> <operator pos:start="227:23" pos:end="227:23">=</operator> <name pos:start="227:25" pos:end="227:33">prev_type</name></expr>;</expr_stmt>

    <if_stmt pos:start="229:5" pos:end="293:5"><if pos:start="229:5" pos:end="255:5">if <condition pos:start="229:8" pos:end="229:50">(<expr pos:start="229:9" pos:end="229:49"><name pos:start="229:9" pos:end="229:25"><name pos:start="229:9" pos:end="229:10">wi</name><operator pos:start="229:11" pos:end="229:11">.</operator><name pos:start="229:12" pos:end="229:22">window_type</name><index pos:start="229:23" pos:end="229:25">[<expr pos:start="229:24" pos:end="229:24"><literal type="number" pos:start="229:24" pos:end="229:24">0</literal></expr>]</index></name> <operator pos:start="229:27" pos:end="229:28">!=</operator> <name pos:start="229:30" pos:end="229:49">EIGHT_SHORT_SEQUENCE</name></expr>)</condition> <block pos:start="229:52" pos:end="255:5">{<block_content pos:start="231:9" pos:end="253:34">

        <decl_stmt pos:start="231:9" pos:end="231:30"><decl pos:start="231:9" pos:end="231:29"><type pos:start="231:9" pos:end="231:13"><name pos:start="231:9" pos:end="231:13">float</name></type> <name pos:start="231:15" pos:end="231:22">clipping</name> <init pos:start="231:24" pos:end="231:29">= <expr pos:start="231:26" pos:end="231:29"><literal type="number" pos:start="231:26" pos:end="231:29">0.0f</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="235:9" pos:end="235:28"><expr pos:start="235:9" pos:end="235:27"><name pos:start="235:9" pos:end="235:22"><name pos:start="235:9" pos:end="235:10">wi</name><operator pos:start="235:11" pos:end="235:11">.</operator><name pos:start="235:12" pos:end="235:22">num_windows</name></name>  <operator pos:start="235:25" pos:end="235:25">=</operator> <literal type="number" pos:start="235:27" pos:end="235:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:28"><expr pos:start="237:9" pos:end="237:27"><name pos:start="237:9" pos:end="237:22"><name pos:start="237:9" pos:end="237:10">wi</name><operator pos:start="237:11" pos:end="237:11">.</operator><name pos:start="237:12" pos:end="237:19">grouping</name><index pos:start="237:20" pos:end="237:22">[<expr pos:start="237:21" pos:end="237:21"><literal type="number" pos:start="237:21" pos:end="237:21">0</literal></expr>]</index></name>  <operator pos:start="237:25" pos:end="237:25">=</operator> <literal type="number" pos:start="237:27" pos:end="237:27">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="239:9" pos:end="245:32"><if pos:start="239:9" pos:end="241:32">if <condition pos:start="239:12" pos:end="239:53">(<expr pos:start="239:13" pos:end="239:52"><name pos:start="239:13" pos:end="239:29"><name pos:start="239:13" pos:end="239:14">wi</name><operator pos:start="239:15" pos:end="239:15">.</operator><name pos:start="239:16" pos:end="239:26">window_type</name><index pos:start="239:27" pos:end="239:29">[<expr pos:start="239:28" pos:end="239:28"><literal type="number" pos:start="239:28" pos:end="239:28">0</literal></expr>]</index></name> <operator pos:start="239:31" pos:end="239:32">==</operator> <name pos:start="239:34" pos:end="239:52">LONG_START_SEQUENCE</name></expr>)</condition><block type="pseudo" pos:start="241:13" pos:end="241:32"><block_content pos:start="241:13" pos:end="241:32">

            <expr_stmt pos:start="241:13" pos:end="241:32"><expr pos:start="241:13" pos:end="241:31"><name pos:start="241:13" pos:end="241:27"><name pos:start="241:13" pos:end="241:14">wi</name><operator pos:start="241:15" pos:end="241:15">.</operator><name pos:start="241:16" pos:end="241:27">window_shape</name></name> <operator pos:start="241:29" pos:end="241:29">=</operator> <literal type="number" pos:start="241:31" pos:end="241:31">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="243:9" pos:end="245:32">else<block type="pseudo" pos:start="245:13" pos:end="245:32"><block_content pos:start="245:13" pos:end="245:32">

            <expr_stmt pos:start="245:13" pos:end="245:32"><expr pos:start="245:13" pos:end="245:31"><name pos:start="245:13" pos:end="245:27"><name pos:start="245:13" pos:end="245:14">wi</name><operator pos:start="245:15" pos:end="245:15">.</operator><name pos:start="245:16" pos:end="245:27">window_shape</name></name> <operator pos:start="245:29" pos:end="245:29">=</operator> <literal type="number" pos:start="245:31" pos:end="245:31">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <for pos:start="249:9" pos:end="251:53">for <control pos:start="249:13" pos:end="249:31">(<init pos:start="249:14" pos:end="249:19"><expr pos:start="249:14" pos:end="249:18"><name pos:start="249:14" pos:end="249:14">i</name> <operator pos:start="249:16" pos:end="249:16">=</operator> <literal type="number" pos:start="249:18" pos:end="249:18">0</literal></expr>;</init> <condition pos:start="249:21" pos:end="249:26"><expr pos:start="249:21" pos:end="249:25"><name pos:start="249:21" pos:end="249:21">i</name> <operator pos:start="249:23" pos:end="249:23">&lt;</operator> <literal type="number" pos:start="249:25" pos:end="249:25">8</literal></expr>;</condition> <incr pos:start="249:28" pos:end="249:30"><expr pos:start="249:28" pos:end="249:30"><name pos:start="249:28" pos:end="249:28">i</name><operator pos:start="249:29" pos:end="249:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="251:13" pos:end="251:53"><block_content pos:start="251:13" pos:end="251:53">

            <expr_stmt pos:start="251:13" pos:end="251:53"><expr pos:start="251:13" pos:end="251:52"><name pos:start="251:13" pos:end="251:20">clipping</name> <operator pos:start="251:22" pos:end="251:22">=</operator> <call pos:start="251:24" pos:end="251:52"><name pos:start="251:24" pos:end="251:28">FFMAX</name><argument_list pos:start="251:29" pos:end="251:52">(<argument pos:start="251:30" pos:end="251:37"><expr pos:start="251:30" pos:end="251:37"><name pos:start="251:30" pos:end="251:37">clipping</name></expr></argument>, <argument pos:start="251:40" pos:end="251:51"><expr pos:start="251:40" pos:end="251:51"><name pos:start="251:40" pos:end="251:51"><name pos:start="251:40" pos:end="251:48">clippings</name><index pos:start="251:49" pos:end="251:51">[<expr pos:start="251:50" pos:end="251:50"><name pos:start="251:50" pos:end="251:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="253:9" pos:end="253:34"><expr pos:start="253:9" pos:end="253:33"><name pos:start="253:9" pos:end="253:22"><name pos:start="253:9" pos:end="253:10">wi</name><operator pos:start="253:11" pos:end="253:11">.</operator><name pos:start="253:12" pos:end="253:19">clipping</name><index pos:start="253:20" pos:end="253:22">[<expr pos:start="253:21" pos:end="253:21"><literal type="number" pos:start="253:21" pos:end="253:21">0</literal></expr>]</index></name> <operator pos:start="253:24" pos:end="253:24">=</operator> <name pos:start="253:26" pos:end="253:33">clipping</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="255:7" pos:end="293:5">else <block pos:start="255:12" pos:end="293:5">{<block_content pos:start="257:9" pos:end="291:9">

        <decl_stmt pos:start="257:9" pos:end="257:24"><decl pos:start="257:9" pos:end="257:23"><type pos:start="257:9" pos:end="257:11"><name pos:start="257:9" pos:end="257:11">int</name></type> <name pos:start="257:13" pos:end="257:19">lastgrp</name> <init pos:start="257:21" pos:end="257:23">= <expr pos:start="257:23" pos:end="257:23"><literal type="number" pos:start="257:23" pos:end="257:23">0</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="261:9" pos:end="261:27"><expr pos:start="261:9" pos:end="261:26"><name pos:start="261:9" pos:end="261:22"><name pos:start="261:9" pos:end="261:10">wi</name><operator pos:start="261:11" pos:end="261:11">.</operator><name pos:start="261:12" pos:end="261:22">num_windows</name></name> <operator pos:start="261:24" pos:end="261:24">=</operator> <literal type="number" pos:start="261:26" pos:end="261:26">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:28"><expr pos:start="263:9" pos:end="263:27"><name pos:start="263:9" pos:end="263:23"><name pos:start="263:9" pos:end="263:10">wi</name><operator pos:start="263:11" pos:end="263:11">.</operator><name pos:start="263:12" pos:end="263:23">window_shape</name></name> <operator pos:start="263:25" pos:end="263:25">=</operator> <literal type="number" pos:start="263:27" pos:end="263:27">0</literal></expr>;</expr_stmt>

        <for pos:start="265:9" pos:end="273:9">for <control pos:start="265:13" pos:end="265:31">(<init pos:start="265:14" pos:end="265:19"><expr pos:start="265:14" pos:end="265:18"><name pos:start="265:14" pos:end="265:14">i</name> <operator pos:start="265:16" pos:end="265:16">=</operator> <literal type="number" pos:start="265:18" pos:end="265:18">0</literal></expr>;</init> <condition pos:start="265:21" pos:end="265:26"><expr pos:start="265:21" pos:end="265:25"><name pos:start="265:21" pos:end="265:21">i</name> <operator pos:start="265:23" pos:end="265:23">&lt;</operator> <literal type="number" pos:start="265:25" pos:end="265:25">8</literal></expr>;</condition> <incr pos:start="265:28" pos:end="265:30"><expr pos:start="265:28" pos:end="265:30"><name pos:start="265:28" pos:end="265:28">i</name><operator pos:start="265:29" pos:end="265:30">++</operator></expr></incr>)</control> <block pos:start="265:33" pos:end="273:9">{<block_content pos:start="267:13" pos:end="271:35">

            <if_stmt pos:start="267:13" pos:end="269:28"><if pos:start="267:13" pos:end="269:28">if <condition pos:start="267:16" pos:end="267:49">(<expr pos:start="267:17" pos:end="267:48"><operator pos:start="267:17" pos:end="267:17">!</operator><operator pos:start="267:18" pos:end="267:18">(</operator><operator pos:start="267:19" pos:end="267:19">(</operator><name pos:start="267:20" pos:end="267:37"><name pos:start="267:20" pos:end="267:22">pch</name><operator pos:start="267:23" pos:end="267:24">-&gt;</operator><name pos:start="267:25" pos:end="267:37">next_grouping</name></name> <operator pos:start="267:39" pos:end="267:40">&gt;&gt;</operator> <name pos:start="267:42" pos:end="267:42">i</name><operator pos:start="267:43" pos:end="267:43">)</operator> <operator pos:start="267:45" pos:end="267:45">&amp;</operator> <literal type="number" pos:start="267:47" pos:end="267:47">1</literal><operator pos:start="267:48" pos:end="267:48">)</operator></expr>)</condition><block type="pseudo" pos:start="269:17" pos:end="269:28"><block_content pos:start="269:17" pos:end="269:28">

                <expr_stmt pos:start="269:17" pos:end="269:28"><expr pos:start="269:17" pos:end="269:27"><name pos:start="269:17" pos:end="269:23">lastgrp</name> <operator pos:start="269:25" pos:end="269:25">=</operator> <name pos:start="269:27" pos:end="269:27">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:35"><expr pos:start="271:13" pos:end="271:34"><name pos:start="271:13" pos:end="271:32"><name pos:start="271:13" pos:end="271:14">wi</name><operator pos:start="271:15" pos:end="271:15">.</operator><name pos:start="271:16" pos:end="271:23">grouping</name><index pos:start="271:24" pos:end="271:32">[<expr pos:start="271:25" pos:end="271:31"><name pos:start="271:25" pos:end="271:31">lastgrp</name></expr>]</index></name><operator pos:start="271:33" pos:end="271:34">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="277:9" pos:end="291:9">for <control pos:start="277:13" pos:end="277:47">(<init pos:start="277:14" pos:end="277:19"><expr pos:start="277:14" pos:end="277:18"><name pos:start="277:14" pos:end="277:14">i</name> <operator pos:start="277:16" pos:end="277:16">=</operator> <literal type="number" pos:start="277:18" pos:end="277:18">0</literal></expr>;</init> <condition pos:start="277:21" pos:end="277:26"><expr pos:start="277:21" pos:end="277:25"><name pos:start="277:21" pos:end="277:21">i</name> <operator pos:start="277:23" pos:end="277:23">&lt;</operator> <literal type="number" pos:start="277:25" pos:end="277:25">8</literal></expr>;</condition> <incr pos:start="277:28" pos:end="277:46"><expr pos:start="277:28" pos:end="277:46"><name pos:start="277:28" pos:end="277:28">i</name> <operator pos:start="277:30" pos:end="277:31">+=</operator> <name pos:start="277:33" pos:end="277:46"><name pos:start="277:33" pos:end="277:34">wi</name><operator pos:start="277:35" pos:end="277:35">.</operator><name pos:start="277:36" pos:end="277:43">grouping</name><index pos:start="277:44" pos:end="277:46">[<expr pos:start="277:45" pos:end="277:45"><name pos:start="277:45" pos:end="277:45">i</name></expr>]</index></name></expr></incr>)</control> <block pos:start="277:49" pos:end="291:9">{<block_content pos:start="279:13" pos:end="289:44">

            <decl_stmt pos:start="279:13" pos:end="279:18"><decl pos:start="279:13" pos:end="279:17"><type pos:start="279:13" pos:end="279:15"><name pos:start="279:13" pos:end="279:15">int</name></type> <name pos:start="279:17" pos:end="279:17">w</name></decl>;</decl_stmt>

            <decl_stmt pos:start="281:13" pos:end="281:34"><decl pos:start="281:13" pos:end="281:33"><type pos:start="281:13" pos:end="281:17"><name pos:start="281:13" pos:end="281:17">float</name></type> <name pos:start="281:19" pos:end="281:26">clipping</name> <init pos:start="281:28" pos:end="281:33">= <expr pos:start="281:30" pos:end="281:33"><literal type="number" pos:start="281:30" pos:end="281:33">0.0f</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="283:13" pos:end="285:59">for <control pos:start="283:17" pos:end="283:48">(<init pos:start="283:18" pos:end="283:23"><expr pos:start="283:18" pos:end="283:22"><name pos:start="283:18" pos:end="283:18">w</name> <operator pos:start="283:20" pos:end="283:20">=</operator> <literal type="number" pos:start="283:22" pos:end="283:22">0</literal></expr>;</init> <condition pos:start="283:25" pos:end="283:43"><expr pos:start="283:25" pos:end="283:42"><name pos:start="283:25" pos:end="283:25">w</name> <operator pos:start="283:27" pos:end="283:27">&lt;</operator> <name pos:start="283:29" pos:end="283:42"><name pos:start="283:29" pos:end="283:30">wi</name><operator pos:start="283:31" pos:end="283:31">.</operator><name pos:start="283:32" pos:end="283:39">grouping</name><index pos:start="283:40" pos:end="283:42">[<expr pos:start="283:41" pos:end="283:41"><name pos:start="283:41" pos:end="283:41">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="283:45" pos:end="283:47"><expr pos:start="283:45" pos:end="283:47"><name pos:start="283:45" pos:end="283:45">w</name><operator pos:start="283:46" pos:end="283:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="285:17" pos:end="285:59"><block_content pos:start="285:17" pos:end="285:59">

                <expr_stmt pos:start="285:17" pos:end="285:59"><expr pos:start="285:17" pos:end="285:58"><name pos:start="285:17" pos:end="285:24">clipping</name> <operator pos:start="285:26" pos:end="285:26">=</operator> <call pos:start="285:28" pos:end="285:58"><name pos:start="285:28" pos:end="285:32">FFMAX</name><argument_list pos:start="285:33" pos:end="285:58">(<argument pos:start="285:34" pos:end="285:41"><expr pos:start="285:34" pos:end="285:41"><name pos:start="285:34" pos:end="285:41">clipping</name></expr></argument>, <argument pos:start="285:44" pos:end="285:57"><expr pos:start="285:44" pos:end="285:57"><name pos:start="285:44" pos:end="285:57"><name pos:start="285:44" pos:end="285:52">clippings</name><index pos:start="285:53" pos:end="285:57">[<expr pos:start="285:54" pos:end="285:56"><name pos:start="285:54" pos:end="285:54">i</name><operator pos:start="285:55" pos:end="285:55">+</operator><name pos:start="285:56" pos:end="285:56">w</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <for pos:start="287:13" pos:end="289:44">for <control pos:start="287:17" pos:end="287:48">(<init pos:start="287:18" pos:end="287:23"><expr pos:start="287:18" pos:end="287:22"><name pos:start="287:18" pos:end="287:18">w</name> <operator pos:start="287:20" pos:end="287:20">=</operator> <literal type="number" pos:start="287:22" pos:end="287:22">0</literal></expr>;</init> <condition pos:start="287:25" pos:end="287:43"><expr pos:start="287:25" pos:end="287:42"><name pos:start="287:25" pos:end="287:25">w</name> <operator pos:start="287:27" pos:end="287:27">&lt;</operator> <name pos:start="287:29" pos:end="287:42"><name pos:start="287:29" pos:end="287:30">wi</name><operator pos:start="287:31" pos:end="287:31">.</operator><name pos:start="287:32" pos:end="287:39">grouping</name><index pos:start="287:40" pos:end="287:42">[<expr pos:start="287:41" pos:end="287:41"><name pos:start="287:41" pos:end="287:41">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="287:45" pos:end="287:47"><expr pos:start="287:45" pos:end="287:47"><name pos:start="287:45" pos:end="287:45">w</name><operator pos:start="287:46" pos:end="287:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="289:17" pos:end="289:44"><block_content pos:start="289:17" pos:end="289:44">

                <expr_stmt pos:start="289:17" pos:end="289:44"><expr pos:start="289:17" pos:end="289:43"><name pos:start="289:17" pos:end="289:32"><name pos:start="289:17" pos:end="289:18">wi</name><operator pos:start="289:19" pos:end="289:19">.</operator><name pos:start="289:20" pos:end="289:27">clipping</name><index pos:start="289:28" pos:end="289:32">[<expr pos:start="289:29" pos:end="289:31"><name pos:start="289:29" pos:end="289:29">i</name><operator pos:start="289:30" pos:end="289:30">+</operator><name pos:start="289:31" pos:end="289:31">w</name></expr>]</index></name> <operator pos:start="289:34" pos:end="289:34">=</operator> <name pos:start="289:36" pos:end="289:43">clipping</name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="297:5" pos:end="307:7">/* Determine grouping, based on the location of the first attack, and save for

     * the next frame.

     * FIXME: Move this to analysis.

     * TODO: Tune groupings depending on attack location

     * TODO: Handle more than one attack in a group

     */</comment>

    <for pos:start="309:5" pos:end="319:5">for <control pos:start="309:9" pos:end="309:27">(<init pos:start="309:10" pos:end="309:15"><expr pos:start="309:10" pos:end="309:14"><name pos:start="309:10" pos:end="309:10">i</name> <operator pos:start="309:12" pos:end="309:12">=</operator> <literal type="number" pos:start="309:14" pos:end="309:14">0</literal></expr>;</init> <condition pos:start="309:17" pos:end="309:22"><expr pos:start="309:17" pos:end="309:21"><name pos:start="309:17" pos:end="309:17">i</name> <operator pos:start="309:19" pos:end="309:19">&lt;</operator> <literal type="number" pos:start="309:21" pos:end="309:21">9</literal></expr>;</condition> <incr pos:start="309:24" pos:end="309:26"><expr pos:start="309:24" pos:end="309:26"><name pos:start="309:24" pos:end="309:24">i</name><operator pos:start="309:25" pos:end="309:26">++</operator></expr></incr>)</control> <block pos:start="309:29" pos:end="319:5">{<block_content pos:start="311:9" pos:end="317:9">

        <if_stmt pos:start="311:9" pos:end="317:9"><if pos:start="311:9" pos:end="317:9">if <condition pos:start="311:12" pos:end="311:23">(<expr pos:start="311:13" pos:end="311:22"><name pos:start="311:13" pos:end="311:22"><name pos:start="311:13" pos:end="311:19">attacks</name><index pos:start="311:20" pos:end="311:22">[<expr pos:start="311:21" pos:end="311:21"><name pos:start="311:21" pos:end="311:21">i</name></expr>]</index></name></expr>)</condition> <block pos:start="311:25" pos:end="317:9">{<block_content pos:start="313:13" pos:end="315:18">

            <expr_stmt pos:start="313:13" pos:end="313:25"><expr pos:start="313:13" pos:end="313:24"><name pos:start="313:13" pos:end="313:20">grouping</name> <operator pos:start="313:22" pos:end="313:22">=</operator> <name pos:start="313:24" pos:end="313:24">i</name></expr>;</expr_stmt>

            <break pos:start="315:13" pos:end="315:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="321:5" pos:end="321:51"><expr pos:start="321:5" pos:end="321:50"><name pos:start="321:5" pos:end="321:22"><name pos:start="321:5" pos:end="321:7">pch</name><operator pos:start="321:8" pos:end="321:9">-&gt;</operator><name pos:start="321:10" pos:end="321:22">next_grouping</name></name> <operator pos:start="321:24" pos:end="321:24">=</operator> <name pos:start="321:26" pos:end="321:50"><name pos:start="321:26" pos:end="321:40">window_grouping</name><index pos:start="321:41" pos:end="321:50">[<expr pos:start="321:42" pos:end="321:49"><name pos:start="321:42" pos:end="321:49">grouping</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="325:5" pos:end="325:34"><expr pos:start="325:5" pos:end="325:33"><name pos:start="325:5" pos:end="325:20"><name pos:start="325:5" pos:end="325:7">pch</name><operator pos:start="325:8" pos:end="325:9">-&gt;</operator><name pos:start="325:10" pos:end="325:20">prev_attack</name></name> <operator pos:start="325:22" pos:end="325:22">=</operator> <name pos:start="325:24" pos:end="325:33"><name pos:start="325:24" pos:end="325:30">attacks</name><index pos:start="325:31" pos:end="325:33">[<expr pos:start="325:32" pos:end="325:32"><literal type="number" pos:start="325:32" pos:end="325:32">8</literal></expr>]</index></name></expr>;</expr_stmt>



    <return pos:start="329:5" pos:end="329:14">return <expr pos:start="329:12" pos:end="329:13"><name pos:start="329:12" pos:end="329:13">wi</name></expr>;</return>

</block_content>}</block></function>
</unit>
