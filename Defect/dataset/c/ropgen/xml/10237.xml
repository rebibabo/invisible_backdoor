<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10237.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">rom_add_file</name><parameter_list pos:start="1:17" pos:end="3:41">(<parameter pos:start="1:18" pos:end="1:33"><decl pos:start="1:18" pos:end="1:33"><type pos:start="1:18" pos:end="1:33"><specifier pos:start="1:18" pos:end="1:22">const</specifier> <name pos:start="1:24" pos:end="1:27">char</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:33">file</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">fw_dir</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:74"><decl pos:start="1:56" pos:end="1:74"><type pos:start="1:56" pos:end="1:74"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:65">char</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:74">fw_file</name></decl></parameter>,

                 <parameter pos:start="3:18" pos:end="3:40"><decl pos:start="3:18" pos:end="3:40"><type pos:start="3:18" pos:end="3:40"><name pos:start="3:18" pos:end="3:35">target_phys_addr_t</name></type> <name pos:start="3:37" pos:end="3:40">addr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:14">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:7">Rom</name> <modifier pos:start="7:9" pos:end="7:9">*</modifier></type><name pos:start="7:10" pos:end="7:12">rom</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rc</name></decl>, <decl pos:start="9:13" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:14">fd</name> <init pos:start="9:16" pos:end="9:19">= <expr pos:start="9:18" pos:end="9:19"><operator pos:start="9:18" pos:end="9:18">-</operator><literal type="number" pos:start="9:19" pos:end="9:19">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:7">rom</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:36"><name pos:start="13:11" pos:end="13:22">qemu_mallocz</name><argument_list pos:start="13:23" pos:end="13:36">(<argument pos:start="13:24" pos:end="13:35"><expr pos:start="13:24" pos:end="13:35"><sizeof pos:start="13:24" pos:end="13:35">sizeof<argument_list pos:start="13:30" pos:end="13:35">(<argument pos:start="13:31" pos:end="13:34"><expr pos:start="13:31" pos:end="13:34"><operator pos:start="13:31" pos:end="13:31">*</operator><name pos:start="13:32" pos:end="13:34">rom</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:7">rom</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:13">name</name></name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:27">qemu_strdup</name><argument_list pos:start="15:28" pos:end="15:33">(<argument pos:start="15:29" pos:end="15:32"><expr pos:start="15:29" pos:end="15:32"><name pos:start="15:29" pos:end="15:32">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:63"><expr pos:start="17:5" pos:end="17:62"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:7">rom</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:13">path</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:62"><name pos:start="17:17" pos:end="17:30">qemu_find_file</name><argument_list pos:start="17:31" pos:end="17:62">(<argument pos:start="17:32" pos:end="17:50"><expr pos:start="17:32" pos:end="17:50"><name pos:start="17:32" pos:end="17:50">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="17:53" pos:end="17:61"><expr pos:start="17:53" pos:end="17:61"><name pos:start="17:53" pos:end="17:61"><name pos:start="17:53" pos:end="17:55">rom</name><operator pos:start="17:56" pos:end="17:57">-&gt;</operator><name pos:start="17:58" pos:end="17:61">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:26">(<expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">rom</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:17">path</name></name> <operator pos:start="19:19" pos:end="19:20">==</operator> <name pos:start="19:22" pos:end="19:25">NULL</name></expr>)</condition> <block pos:start="19:28" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:38">

        <expr_stmt pos:start="21:9" pos:end="21:38"><expr pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:11">rom</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:17">path</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <call pos:start="21:21" pos:end="21:37"><name pos:start="21:21" pos:end="21:31">qemu_strdup</name><argument_list pos:start="21:32" pos:end="21:37">(<argument pos:start="21:33" pos:end="21:36"><expr pos:start="21:33" pos:end="21:36"><name pos:start="21:33" pos:end="21:36">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:6">fd</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:45"><name pos:start="27:10" pos:end="27:13">open</name><argument_list pos:start="27:14" pos:end="27:45">(<argument pos:start="27:15" pos:end="27:23"><expr pos:start="27:15" pos:end="27:23"><name pos:start="27:15" pos:end="27:23"><name pos:start="27:15" pos:end="27:17">rom</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:23">path</name></name></expr></argument>, <argument pos:start="27:26" pos:end="27:44"><expr pos:start="27:26" pos:end="27:44"><name pos:start="27:26" pos:end="27:33">O_RDONLY</name> <operator pos:start="27:35" pos:end="27:35">|</operator> <name pos:start="27:37" pos:end="27:44">O_BINARY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:10">fd</name> <operator pos:start="29:12" pos:end="29:13">==</operator> <operator pos:start="29:15" pos:end="29:15">-</operator><literal type="number" pos:start="29:16" pos:end="29:16">1</literal></expr>)</condition> <block pos:start="29:19" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:17">

        <expr_stmt pos:start="31:9" pos:end="33:44"><expr pos:start="31:9" pos:end="33:43"><call pos:start="31:9" pos:end="33:43"><name pos:start="31:9" pos:end="31:15">fprintf</name><argument_list pos:start="31:16" pos:end="33:43">(<argument pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:22">stderr</name></expr></argument>, <argument pos:start="31:25" pos:end="31:62"><expr pos:start="31:25" pos:end="31:62"><literal type="string" pos:start="31:25" pos:end="31:62">"Could not open option rom '%s': %s\n"</literal></expr></argument>,

                <argument pos:start="33:17" pos:end="33:25"><expr pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:19">rom</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:25">path</name></name></expr></argument>, <argument pos:start="33:28" pos:end="33:42"><expr pos:start="33:28" pos:end="33:42"><call pos:start="33:28" pos:end="33:42"><name pos:start="33:28" pos:end="33:35">strerror</name><argument_list pos:start="33:36" pos:end="33:42">(<argument pos:start="33:37" pos:end="33:41"><expr pos:start="33:37" pos:end="33:41"><name pos:start="33:37" pos:end="33:41">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:57"><expr pos:start="41:5" pos:end="41:56"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:7">rom</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:15">fw_dir</name></name>  <operator pos:start="41:18" pos:end="41:18">=</operator> <ternary pos:start="41:20" pos:end="41:56"><condition pos:start="41:20" pos:end="41:28"><expr pos:start="41:20" pos:end="41:25"><name pos:start="41:20" pos:end="41:25">fw_dir</name></expr>  ?</condition><then pos:start="41:30" pos:end="41:48"> <expr pos:start="41:30" pos:end="41:48"><call pos:start="41:30" pos:end="41:48"><name pos:start="41:30" pos:end="41:40">qemu_strdup</name><argument_list pos:start="41:41" pos:end="41:48">(<argument pos:start="41:42" pos:end="41:47"><expr pos:start="41:42" pos:end="41:47"><name pos:start="41:42" pos:end="41:47">fw_dir</name></expr></argument>)</argument_list></call></expr>  </then><else pos:start="41:51" pos:end="41:56">: <expr pos:start="41:53" pos:end="41:56"><name pos:start="41:53" pos:end="41:56">NULL</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:7">rom</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:16">fw_file</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <ternary pos:start="43:20" pos:end="43:56"><condition pos:start="43:20" pos:end="43:28"><expr pos:start="43:20" pos:end="43:26"><name pos:start="43:20" pos:end="43:26">fw_file</name></expr> ?</condition><then pos:start="43:30" pos:end="43:49"> <expr pos:start="43:30" pos:end="43:49"><call pos:start="43:30" pos:end="43:49"><name pos:start="43:30" pos:end="43:40">qemu_strdup</name><argument_list pos:start="43:41" pos:end="43:49">(<argument pos:start="43:42" pos:end="43:48"><expr pos:start="43:42" pos:end="43:48"><name pos:start="43:42" pos:end="43:48">fw_file</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="43:51" pos:end="43:56">: <expr pos:start="43:53" pos:end="43:56"><name pos:start="43:53" pos:end="43:56">NULL</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:13"><name pos:start="45:5" pos:end="45:7">rom</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:13">addr</name></name>    <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:23">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:42"><expr pos:start="47:5" pos:end="47:41"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:7">rom</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:16">romsize</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:41"><name pos:start="47:20" pos:end="47:24">lseek</name><argument_list pos:start="47:25" pos:end="47:41">(<argument pos:start="47:26" pos:end="47:27"><expr pos:start="47:26" pos:end="47:27"><name pos:start="47:26" pos:end="47:27">fd</name></expr></argument>, <argument pos:start="47:30" pos:end="47:30"><expr pos:start="47:30" pos:end="47:30"><literal type="number" pos:start="47:30" pos:end="47:30">0</literal></expr></argument>, <argument pos:start="47:33" pos:end="47:40"><expr pos:start="47:33" pos:end="47:40"><name pos:start="47:33" pos:end="47:40">SEEK_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:46"><expr pos:start="49:5" pos:end="49:45"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:7">rom</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:13">data</name></name>    <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:45"><name pos:start="49:20" pos:end="49:31">qemu_mallocz</name><argument_list pos:start="49:32" pos:end="49:45">(<argument pos:start="49:33" pos:end="49:44"><expr pos:start="49:33" pos:end="49:44"><name pos:start="49:33" pos:end="49:44"><name pos:start="49:33" pos:end="49:35">rom</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:44">romsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><call pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:9">lseek</name><argument_list pos:start="51:10" pos:end="51:26">(<argument pos:start="51:11" pos:end="51:12"><expr pos:start="51:11" pos:end="51:12"><name pos:start="51:11" pos:end="51:12">fd</name></expr></argument>, <argument pos:start="51:15" pos:end="51:15"><expr pos:start="51:15" pos:end="51:15"><literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr></argument>, <argument pos:start="51:18" pos:end="51:25"><expr pos:start="51:18" pos:end="51:25"><name pos:start="51:18" pos:end="51:25">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:43"><expr pos:start="53:5" pos:end="53:42"><name pos:start="53:5" pos:end="53:6">rc</name> <operator pos:start="53:8" pos:end="53:8">=</operator> <call pos:start="53:10" pos:end="53:42"><name pos:start="53:10" pos:end="53:13">read</name><argument_list pos:start="53:14" pos:end="53:42">(<argument pos:start="53:15" pos:end="53:16"><expr pos:start="53:15" pos:end="53:16"><name pos:start="53:15" pos:end="53:16">fd</name></expr></argument>, <argument pos:start="53:19" pos:end="53:27"><expr pos:start="53:19" pos:end="53:27"><name pos:start="53:19" pos:end="53:27"><name pos:start="53:19" pos:end="53:21">rom</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:27">data</name></name></expr></argument>, <argument pos:start="53:30" pos:end="53:41"><expr pos:start="53:30" pos:end="53:41"><name pos:start="53:30" pos:end="53:41"><name pos:start="53:30" pos:end="53:32">rom</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:41">romsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:27">(<expr pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:10">rc</name> <operator pos:start="55:12" pos:end="55:13">!=</operator> <name pos:start="55:15" pos:end="55:26"><name pos:start="55:15" pos:end="55:17">rom</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:26">romsize</name></name></expr>)</condition> <block pos:start="55:29" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:17">

        <expr_stmt pos:start="57:9" pos:end="59:45"><expr pos:start="57:9" pos:end="59:44"><call pos:start="57:9" pos:end="59:44"><name pos:start="57:9" pos:end="57:15">fprintf</name><argument_list pos:start="57:16" pos:end="59:44">(<argument pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:22">stderr</name></expr></argument>, <argument pos:start="57:25" pos:end="57:77"><expr pos:start="57:25" pos:end="57:77"><literal type="string" pos:start="57:25" pos:end="57:77">"rom: file %-20s: read error: rc=%d (expected %zd)\n"</literal></expr></argument>,

                <argument pos:start="59:17" pos:end="59:25"><expr pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:19">rom</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:25">name</name></name></expr></argument>, <argument pos:start="59:28" pos:end="59:29"><expr pos:start="59:28" pos:end="59:29"><name pos:start="59:28" pos:end="59:29">rc</name></expr></argument>, <argument pos:start="59:32" pos:end="59:43"><expr pos:start="59:32" pos:end="59:43"><name pos:start="59:32" pos:end="59:43"><name pos:start="59:32" pos:end="59:34">rom</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:43">romsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:17">goto <name pos:start="61:14" pos:end="61:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:14"><expr pos:start="65:5" pos:end="65:13"><call pos:start="65:5" pos:end="65:13"><name pos:start="65:5" pos:end="65:9">close</name><argument_list pos:start="65:10" pos:end="65:13">(<argument pos:start="65:11" pos:end="65:12"><expr pos:start="65:11" pos:end="65:12"><name pos:start="65:11" pos:end="65:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:20"><expr pos:start="67:5" pos:end="67:19"><call pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:14">rom_insert</name><argument_list pos:start="67:15" pos:end="67:19">(<argument pos:start="67:16" pos:end="67:18"><expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">rom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>



<label pos:start="73:1" pos:end="73:4"><name pos:start="73:1" pos:end="73:3">err</name>:</label>

    <if_stmt pos:start="75:5" pos:end="77:18"><if pos:start="75:5" pos:end="77:18">if <condition pos:start="75:8" pos:end="75:17">(<expr pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:10">fd</name> <operator pos:start="75:12" pos:end="75:13">!=</operator> <operator pos:start="75:15" pos:end="75:15">-</operator><literal type="number" pos:start="75:16" pos:end="75:16">1</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:18"><block_content pos:start="77:9" pos:end="77:18">

        <expr_stmt pos:start="77:9" pos:end="77:18"><expr pos:start="77:9" pos:end="77:17"><call pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:13">close</name><argument_list pos:start="77:14" pos:end="77:17">(<argument pos:start="77:15" pos:end="77:16"><expr pos:start="77:15" pos:end="77:16"><name pos:start="77:15" pos:end="77:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:25"><expr pos:start="79:5" pos:end="79:24"><call pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:13">qemu_free</name><argument_list pos:start="79:14" pos:end="79:24">(<argument pos:start="79:15" pos:end="79:23"><expr pos:start="79:15" pos:end="79:23"><name pos:start="79:15" pos:end="79:23"><name pos:start="79:15" pos:end="79:17">rom</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:23">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:25"><expr pos:start="81:5" pos:end="81:24"><call pos:start="81:5" pos:end="81:24"><name pos:start="81:5" pos:end="81:13">qemu_free</name><argument_list pos:start="81:14" pos:end="81:24">(<argument pos:start="81:15" pos:end="81:23"><expr pos:start="81:15" pos:end="81:23"><name pos:start="81:15" pos:end="81:23"><name pos:start="81:15" pos:end="81:17">rom</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:23">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:25"><expr pos:start="83:5" pos:end="83:24"><call pos:start="83:5" pos:end="83:24"><name pos:start="83:5" pos:end="83:13">qemu_free</name><argument_list pos:start="83:14" pos:end="83:24">(<argument pos:start="83:15" pos:end="83:23"><expr pos:start="83:15" pos:end="83:23"><name pos:start="83:15" pos:end="83:23"><name pos:start="83:15" pos:end="83:17">rom</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:23">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:19"><expr pos:start="85:5" pos:end="85:18"><call pos:start="85:5" pos:end="85:18"><name pos:start="85:5" pos:end="85:13">qemu_free</name><argument_list pos:start="85:14" pos:end="85:18">(<argument pos:start="85:15" pos:end="85:17"><expr pos:start="85:15" pos:end="85:17"><name pos:start="85:15" pos:end="85:17">rom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="87:5" pos:end="87:14">return <expr pos:start="87:12" pos:end="87:13"><operator pos:start="87:12" pos:end="87:12">-</operator><literal type="number" pos:start="87:13" pos:end="87:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
