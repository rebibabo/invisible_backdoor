<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12553.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:29">color_init</name><parameter_list pos:start="1:30" pos:end="1:83">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:45">AVFilterContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">args</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:82"><decl pos:start="1:71" pos:end="1:82"><type pos:start="1:71" pos:end="1:82"><name pos:start="1:71" pos:end="1:74">void</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:82">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:15">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">ColorContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">color</name> <init pos:start="5:25" pos:end="5:35">= <expr pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:29">ctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:35">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:26"><name pos:start="7:10" pos:end="7:21">color_string</name><index pos:start="7:22" pos:end="7:26">[<expr pos:start="7:23" pos:end="7:25"><literal type="number" pos:start="7:23" pos:end="7:25">128</literal></expr>]</index></name> <init pos:start="7:28" pos:end="7:36">= <expr pos:start="7:30" pos:end="7:36"><literal type="string" pos:start="7:30" pos:end="7:36">"black"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:26"><name pos:start="9:10" pos:end="9:19">frame_size</name>  <index pos:start="9:22" pos:end="9:26">[<expr pos:start="9:23" pos:end="9:25"><literal type="number" pos:start="9:23" pos:end="9:25">128</literal></expr>]</index></name> <init pos:start="9:28" pos:end="9:38">= <expr pos:start="9:30" pos:end="9:38"><literal type="string" pos:start="9:30" pos:end="9:38">"320x240"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:26"><name pos:start="11:10" pos:end="11:19">frame_rate</name>  <index pos:start="11:22" pos:end="11:26">[<expr pos:start="11:23" pos:end="11:25"><literal type="number" pos:start="11:23" pos:end="11:25">128</literal></expr>]</index></name> <init pos:start="11:28" pos:end="11:33">= <expr pos:start="11:30" pos:end="11:33"><literal type="string" pos:start="11:30" pos:end="11:33">"25"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">AVRational</name></type> <name pos:start="13:16" pos:end="13:27">frame_rate_q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:15">colon</name> <init pos:start="15:17" pos:end="15:19">= <expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr></init></decl>, <decl pos:start="15:22" pos:end="15:31"><type ref="prev" pos:start="15:5" pos:end="15:10"><modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:27">equal</name> <init pos:start="15:29" pos:end="15:31">= <expr pos:start="15:31" pos:end="15:31"><literal type="number" pos:start="15:31" pos:end="15:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name> <init pos:start="17:13" pos:end="17:15">= <expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:9">color</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:16">class</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <operator pos:start="21:20" pos:end="21:20">&amp;</operator><name pos:start="21:21" pos:end="21:31">color_class</name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:13">(<expr pos:start="25:9" pos:end="25:12"><name pos:start="25:9" pos:end="25:12">args</name></expr>)</condition> <block pos:start="25:15" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:34">

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:13">colon</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:22">strchr</name><argument_list pos:start="27:23" pos:end="27:33">(<argument pos:start="27:24" pos:end="27:27"><expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">args</name></expr></argument>, <argument pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><literal type="char" pos:start="27:30" pos:end="27:32">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:34"><expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:13">equal</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:33"><name pos:start="29:17" pos:end="29:22">strchr</name><argument_list pos:start="29:23" pos:end="29:33">(<argument pos:start="29:24" pos:end="29:27"><expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">args</name></expr></argument>, <argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><literal type="char" pos:start="29:30" pos:end="29:32">'='</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="95:5"><if pos:start="35:5" pos:end="67:5">if <condition pos:start="35:8" pos:end="35:54">(<expr pos:start="35:9" pos:end="35:53"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:13">args</name> <operator pos:start="35:15" pos:end="35:16">||</operator> <operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:23">equal</name> <operator pos:start="35:25" pos:end="35:26">&amp;&amp;</operator> <operator pos:start="35:28" pos:end="35:28">(</operator><operator pos:start="35:29" pos:end="35:29">!</operator><name pos:start="35:30" pos:end="35:34">colon</name> <operator pos:start="35:36" pos:end="35:37">||</operator> <name pos:start="35:39" pos:end="35:43">equal</name> <operator pos:start="35:45" pos:end="35:45">&lt;</operator> <name pos:start="35:47" pos:end="35:51">colon</name><operator pos:start="35:52" pos:end="35:52">)</operator><operator pos:start="35:53" pos:end="35:53">)</operator></expr>)</condition> <block pos:start="35:56" pos:end="67:5">{<block_content pos:start="37:9" pos:end="65:9">

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><call pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:27">av_opt_set_defaults</name><argument_list pos:start="37:28" pos:end="37:34">(<argument pos:start="37:29" pos:end="37:33"><expr pos:start="37:29" pos:end="37:33"><name pos:start="37:29" pos:end="37:33">color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:69">(<expr pos:start="39:13" pos:end="39:68"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:16">ret</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:63"><name pos:start="39:20" pos:end="39:40">av_set_options_string</name><argument_list pos:start="39:41" pos:end="39:63">(<argument pos:start="39:42" pos:end="39:46"><expr pos:start="39:42" pos:end="39:46"><name pos:start="39:42" pos:end="39:46">color</name></expr></argument>, <argument pos:start="39:49" pos:end="39:52"><expr pos:start="39:49" pos:end="39:52"><name pos:start="39:49" pos:end="39:52">args</name></expr></argument>, <argument pos:start="39:55" pos:end="39:57"><expr pos:start="39:55" pos:end="39:57"><literal type="string" pos:start="39:55" pos:end="39:57">"="</literal></expr></argument>, <argument pos:start="39:60" pos:end="39:62"><expr pos:start="39:60" pos:end="39:62"><literal type="string" pos:start="39:60" pos:end="39:62">":"</literal></expr></argument>)</argument_list></call><operator pos:start="39:64" pos:end="39:64">)</operator> <operator pos:start="39:66" pos:end="39:66">&lt;</operator> <literal type="number" pos:start="39:68" pos:end="39:68">0</literal></expr>)</condition> <block pos:start="39:71" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:21">

            <expr_stmt pos:start="41:13" pos:end="41:84"><expr pos:start="41:13" pos:end="41:83"><call pos:start="41:13" pos:end="41:83"><name pos:start="41:13" pos:end="41:18">av_log</name><argument_list pos:start="41:19" pos:end="41:83">(<argument pos:start="41:20" pos:end="41:22"><expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">ctx</name></expr></argument>, <argument pos:start="41:25" pos:end="41:36"><expr pos:start="41:25" pos:end="41:36"><name pos:start="41:25" pos:end="41:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:39" pos:end="41:76"><expr pos:start="41:39" pos:end="41:76"><literal type="string" pos:start="41:39" pos:end="41:76">"Error parsing options string: '%s'\n"</literal></expr></argument>, <argument pos:start="41:79" pos:end="41:82"><expr pos:start="41:79" pos:end="41:82"><name pos:start="41:79" pos:end="41:82">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="43:13" pos:end="43:21">goto <name pos:start="43:18" pos:end="43:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="57:9"><if pos:start="47:9" pos:end="57:9">if <condition pos:start="47:12" pos:end="49:63">(<expr pos:start="47:13" pos:end="49:62"><call pos:start="47:13" pos:end="47:63"><name pos:start="47:13" pos:end="47:31">av_parse_video_rate</name><argument_list pos:start="47:32" pos:end="47:63">(<argument pos:start="47:33" pos:end="47:45"><expr pos:start="47:33" pos:end="47:45"><operator pos:start="47:33" pos:end="47:33">&amp;</operator><name pos:start="47:34" pos:end="47:45">frame_rate_q</name></expr></argument>, <argument pos:start="47:48" pos:end="47:62"><expr pos:start="47:48" pos:end="47:62"><name pos:start="47:48" pos:end="47:62"><name pos:start="47:48" pos:end="47:52">color</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:62">rate_str</name></name></expr></argument>)</argument_list></call> <operator pos:start="47:65" pos:end="47:65">&lt;</operator> <literal type="number" pos:start="47:67" pos:end="47:67">0</literal> <operator pos:start="47:69" pos:end="47:70">||</operator>

                <name pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:28">frame_rate_q</name><operator pos:start="49:29" pos:end="49:29">.</operator><name pos:start="49:30" pos:end="49:32">den</name></name> <operator pos:start="49:34" pos:end="49:35">&lt;=</operator> <literal type="number" pos:start="49:37" pos:end="49:37">0</literal> <operator pos:start="49:39" pos:end="49:40">||</operator> <name pos:start="49:42" pos:end="49:57"><name pos:start="49:42" pos:end="49:53">frame_rate_q</name><operator pos:start="49:54" pos:end="49:54">.</operator><name pos:start="49:55" pos:end="49:57">num</name></name> <operator pos:start="49:59" pos:end="49:60">&lt;=</operator> <literal type="number" pos:start="49:62" pos:end="49:62">0</literal></expr>)</condition> <block pos:start="49:65" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:21">

            <expr_stmt pos:start="51:13" pos:end="51:83"><expr pos:start="51:13" pos:end="51:82"><call pos:start="51:13" pos:end="51:82"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:82">(<argument pos:start="51:20" pos:end="51:22"><expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">ctx</name></expr></argument>, <argument pos:start="51:25" pos:end="51:36"><expr pos:start="51:25" pos:end="51:36"><name pos:start="51:25" pos:end="51:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:39" pos:end="51:64"><expr pos:start="51:39" pos:end="51:64"><literal type="string" pos:start="51:39" pos:end="51:64">"Invalid frame rate: %s\n"</literal></expr></argument>, <argument pos:start="51:67" pos:end="51:81"><expr pos:start="51:67" pos:end="51:81"><name pos:start="51:67" pos:end="51:81"><name pos:start="51:67" pos:end="51:71">color</name><operator pos:start="51:72" pos:end="51:73">-&gt;</operator><name pos:start="51:74" pos:end="51:81">rate_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:34"><expr pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:33"><name pos:start="53:19" pos:end="53:25">AVERROR</name><argument_list pos:start="53:26" pos:end="53:33">(<argument pos:start="53:27" pos:end="53:32"><expr pos:start="53:27" pos:end="53:32"><name pos:start="53:27" pos:end="53:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="55:13" pos:end="55:21">goto <name pos:start="55:18" pos:end="55:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:77">(<expr pos:start="59:13" pos:end="59:76"><call pos:start="59:13" pos:end="59:72"><name pos:start="59:13" pos:end="59:26">av_parse_color</name><argument_list pos:start="59:27" pos:end="59:72">(<argument pos:start="59:28" pos:end="59:44"><expr pos:start="59:28" pos:end="59:44"><name pos:start="59:28" pos:end="59:44"><name pos:start="59:28" pos:end="59:32">color</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:44">color_rgba</name></name></expr></argument>, <argument pos:start="59:47" pos:end="59:62"><expr pos:start="59:47" pos:end="59:62"><name pos:start="59:47" pos:end="59:62"><name pos:start="59:47" pos:end="59:51">color</name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:62">color_str</name></name></expr></argument>, <argument pos:start="59:65" pos:end="59:66"><expr pos:start="59:65" pos:end="59:66"><operator pos:start="59:65" pos:end="59:65">-</operator><literal type="number" pos:start="59:66" pos:end="59:66">1</literal></expr></argument>, <argument pos:start="59:69" pos:end="59:71"><expr pos:start="59:69" pos:end="59:71"><name pos:start="59:69" pos:end="59:71">ctx</name></expr></argument>)</argument_list></call> <operator pos:start="59:74" pos:end="59:74">&lt;</operator> <literal type="number" pos:start="59:76" pos:end="59:76">0</literal></expr>)</condition> <block pos:start="59:79" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:21">

            <expr_stmt pos:start="61:13" pos:end="61:34"><expr pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:33"><name pos:start="61:19" pos:end="61:25">AVERROR</name><argument_list pos:start="61:26" pos:end="61:33">(<argument pos:start="61:27" pos:end="61:32"><expr pos:start="61:27" pos:end="61:32"><name pos:start="61:27" pos:end="61:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="63:13" pos:end="63:21">goto <name pos:start="63:18" pos:end="63:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="95:5">else <block pos:start="67:12" pos:end="95:5">{<block_content pos:start="69:9" pos:end="93:35">

        <expr_stmt pos:start="69:9" pos:end="69:97"><expr pos:start="69:9" pos:end="69:96"><call pos:start="69:9" pos:end="69:96"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="69:96">(<argument pos:start="69:16" pos:end="69:18"><expr pos:start="69:16" pos:end="69:18"><name pos:start="69:16" pos:end="69:18">ctx</name></expr></argument>, <argument pos:start="69:21" pos:end="69:34"><expr pos:start="69:21" pos:end="69:34"><name pos:start="69:21" pos:end="69:34">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="69:37" pos:end="69:95"><expr pos:start="69:37" pos:end="69:95"><literal type="string" pos:start="69:37" pos:end="69:95">"Flat options syntax is deprecated, use key=value pairs.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:86"><expr pos:start="71:9" pos:end="71:85"><call pos:start="71:9" pos:end="71:85"><name pos:start="71:9" pos:end="71:14">sscanf</name><argument_list pos:start="71:15" pos:end="71:85">(<argument pos:start="71:16" pos:end="71:19"><expr pos:start="71:16" pos:end="71:19"><name pos:start="71:16" pos:end="71:19">args</name></expr></argument>, <argument pos:start="71:22" pos:end="71:46"><expr pos:start="71:22" pos:end="71:46"><literal type="string" pos:start="71:22" pos:end="71:46">"%127[^:]:%127[^:]:%127s"</literal></expr></argument>, <argument pos:start="71:49" pos:end="71:60"><expr pos:start="71:49" pos:end="71:60"><name pos:start="71:49" pos:end="71:60">color_string</name></expr></argument>, <argument pos:start="71:63" pos:end="71:72"><expr pos:start="71:63" pos:end="71:72"><name pos:start="71:63" pos:end="71:72">frame_size</name></expr></argument>, <argument pos:start="71:75" pos:end="71:84"><expr pos:start="71:75" pos:end="71:84"><name pos:start="71:75" pos:end="71:84">frame_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:70">(<expr pos:start="73:13" pos:end="73:69"><call pos:start="73:13" pos:end="73:65"><name pos:start="73:13" pos:end="73:31">av_parse_video_size</name><argument_list pos:start="73:32" pos:end="73:65">(<argument pos:start="73:33" pos:end="73:41"><expr pos:start="73:33" pos:end="73:41"><operator pos:start="73:33" pos:end="73:33">&amp;</operator><name pos:start="73:34" pos:end="73:41"><name pos:start="73:34" pos:end="73:38">color</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:41">w</name></name></expr></argument>, <argument pos:start="73:44" pos:end="73:52"><expr pos:start="73:44" pos:end="73:52"><operator pos:start="73:44" pos:end="73:44">&amp;</operator><name pos:start="73:45" pos:end="73:52"><name pos:start="73:45" pos:end="73:49">color</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:52">h</name></name></expr></argument>, <argument pos:start="73:55" pos:end="73:64"><expr pos:start="73:55" pos:end="73:64"><name pos:start="73:55" pos:end="73:64">frame_size</name></expr></argument>)</argument_list></call> <operator pos:start="73:67" pos:end="73:67">&lt;</operator> <literal type="number" pos:start="73:69" pos:end="73:69">0</literal></expr>)</condition> <block pos:start="73:72" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:35">

            <expr_stmt pos:start="75:13" pos:end="75:78"><expr pos:start="75:13" pos:end="75:77"><call pos:start="75:13" pos:end="75:77"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="75:77">(<argument pos:start="75:20" pos:end="75:22"><expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:22">ctx</name></expr></argument>, <argument pos:start="75:25" pos:end="75:36"><expr pos:start="75:25" pos:end="75:36"><name pos:start="75:25" pos:end="75:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:39" pos:end="75:64"><expr pos:start="75:39" pos:end="75:64"><literal type="string" pos:start="75:39" pos:end="75:64">"Invalid frame size: %s\n"</literal></expr></argument>, <argument pos:start="75:67" pos:end="75:76"><expr pos:start="75:67" pos:end="75:76"><name pos:start="75:67" pos:end="75:76">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="77:13" pos:end="77:35">return <expr pos:start="77:20" pos:end="77:34"><call pos:start="77:20" pos:end="77:34"><name pos:start="77:20" pos:end="77:26">AVERROR</name><argument_list pos:start="77:27" pos:end="77:34">(<argument pos:start="77:28" pos:end="77:33"><expr pos:start="77:28" pos:end="77:33"><name pos:start="77:28" pos:end="77:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="81:9" pos:end="89:9"><if pos:start="81:9" pos:end="89:9">if <condition pos:start="81:12" pos:end="83:63">(<expr pos:start="81:13" pos:end="83:62"><call pos:start="81:13" pos:end="81:58"><name pos:start="81:13" pos:end="81:31">av_parse_video_rate</name><argument_list pos:start="81:32" pos:end="81:58">(<argument pos:start="81:33" pos:end="81:45"><expr pos:start="81:33" pos:end="81:45"><operator pos:start="81:33" pos:end="81:33">&amp;</operator><name pos:start="81:34" pos:end="81:45">frame_rate_q</name></expr></argument>, <argument pos:start="81:48" pos:end="81:57"><expr pos:start="81:48" pos:end="81:57"><name pos:start="81:48" pos:end="81:57">frame_rate</name></expr></argument>)</argument_list></call> <operator pos:start="81:60" pos:end="81:60">&lt;</operator> <literal type="number" pos:start="81:62" pos:end="81:62">0</literal> <operator pos:start="81:64" pos:end="81:65">||</operator>

                <name pos:start="83:17" pos:end="83:32"><name pos:start="83:17" pos:end="83:28">frame_rate_q</name><operator pos:start="83:29" pos:end="83:29">.</operator><name pos:start="83:30" pos:end="83:32">den</name></name> <operator pos:start="83:34" pos:end="83:35">&lt;=</operator> <literal type="number" pos:start="83:37" pos:end="83:37">0</literal> <operator pos:start="83:39" pos:end="83:40">||</operator> <name pos:start="83:42" pos:end="83:57"><name pos:start="83:42" pos:end="83:53">frame_rate_q</name><operator pos:start="83:54" pos:end="83:54">.</operator><name pos:start="83:55" pos:end="83:57">num</name></name> <operator pos:start="83:59" pos:end="83:60">&lt;=</operator> <literal type="number" pos:start="83:62" pos:end="83:62">0</literal></expr>)</condition> <block pos:start="83:65" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:35">

            <expr_stmt pos:start="85:13" pos:end="85:78"><expr pos:start="85:13" pos:end="85:77"><call pos:start="85:13" pos:end="85:77"><name pos:start="85:13" pos:end="85:18">av_log</name><argument_list pos:start="85:19" pos:end="85:77">(<argument pos:start="85:20" pos:end="85:22"><expr pos:start="85:20" pos:end="85:22"><name pos:start="85:20" pos:end="85:22">ctx</name></expr></argument>, <argument pos:start="85:25" pos:end="85:36"><expr pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:39" pos:end="85:64"><expr pos:start="85:39" pos:end="85:64"><literal type="string" pos:start="85:39" pos:end="85:64">"Invalid frame rate: %s\n"</literal></expr></argument>, <argument pos:start="85:67" pos:end="85:76"><expr pos:start="85:67" pos:end="85:76"><name pos:start="85:67" pos:end="85:76">frame_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="87:13" pos:end="87:35">return <expr pos:start="87:20" pos:end="87:34"><call pos:start="87:20" pos:end="87:34"><name pos:start="87:20" pos:end="87:26">AVERROR</name><argument_list pos:start="87:27" pos:end="87:34">(<argument pos:start="87:28" pos:end="87:33"><expr pos:start="87:28" pos:end="87:33"><name pos:start="87:28" pos:end="87:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="91:9" pos:end="93:35"><if pos:start="91:9" pos:end="93:35">if <condition pos:start="91:12" pos:end="91:73">(<expr pos:start="91:13" pos:end="91:72"><call pos:start="91:13" pos:end="91:68"><name pos:start="91:13" pos:end="91:26">av_parse_color</name><argument_list pos:start="91:27" pos:end="91:68">(<argument pos:start="91:28" pos:end="91:44"><expr pos:start="91:28" pos:end="91:44"><name pos:start="91:28" pos:end="91:44"><name pos:start="91:28" pos:end="91:32">color</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:44">color_rgba</name></name></expr></argument>, <argument pos:start="91:47" pos:end="91:58"><expr pos:start="91:47" pos:end="91:58"><name pos:start="91:47" pos:end="91:58">color_string</name></expr></argument>, <argument pos:start="91:61" pos:end="91:62"><expr pos:start="91:61" pos:end="91:62"><operator pos:start="91:61" pos:end="91:61">-</operator><literal type="number" pos:start="91:62" pos:end="91:62">1</literal></expr></argument>, <argument pos:start="91:65" pos:end="91:67"><expr pos:start="91:65" pos:end="91:67"><name pos:start="91:65" pos:end="91:67">ctx</name></expr></argument>)</argument_list></call> <operator pos:start="91:70" pos:end="91:70">&lt;</operator> <literal type="number" pos:start="91:72" pos:end="91:72">0</literal></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:35"><block_content pos:start="93:13" pos:end="93:35">

            <return pos:start="93:13" pos:end="93:35">return <expr pos:start="93:20" pos:end="93:34"><call pos:start="93:20" pos:end="93:34"><name pos:start="93:20" pos:end="93:26">AVERROR</name><argument_list pos:start="93:27" pos:end="93:34">(<argument pos:start="93:28" pos:end="93:33"><expr pos:start="93:28" pos:end="93:33"><name pos:start="93:28" pos:end="93:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:44"><expr pos:start="99:5" pos:end="99:43"><name pos:start="99:5" pos:end="99:24"><name pos:start="99:5" pos:end="99:9">color</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:20">time_base</name><operator pos:start="99:21" pos:end="99:21">.</operator><name pos:start="99:22" pos:end="99:24">num</name></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <name pos:start="99:28" pos:end="99:43"><name pos:start="99:28" pos:end="99:39">frame_rate_q</name><operator pos:start="99:40" pos:end="99:40">.</operator><name pos:start="99:41" pos:end="99:43">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:44"><expr pos:start="101:5" pos:end="101:43"><name pos:start="101:5" pos:end="101:24"><name pos:start="101:5" pos:end="101:9">color</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:20">time_base</name><operator pos:start="101:21" pos:end="101:21">.</operator><name pos:start="101:22" pos:end="101:24">den</name></name> <operator pos:start="101:26" pos:end="101:26">=</operator> <name pos:start="101:28" pos:end="101:43"><name pos:start="101:28" pos:end="101:39">frame_rate_q</name><operator pos:start="101:40" pos:end="101:40">.</operator><name pos:start="101:41" pos:end="101:43">num</name></name></expr>;</expr_stmt>



<label pos:start="105:1" pos:end="105:4"><name pos:start="105:1" pos:end="105:3">end</name>:</label>

    <expr_stmt pos:start="107:5" pos:end="107:23"><expr pos:start="107:5" pos:end="107:22"><call pos:start="107:5" pos:end="107:22"><name pos:start="107:5" pos:end="107:15">av_opt_free</name><argument_list pos:start="107:16" pos:end="107:22">(<argument pos:start="107:17" pos:end="107:21"><expr pos:start="107:17" pos:end="107:21"><name pos:start="107:17" pos:end="107:21">color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="109:5" pos:end="109:15">return <expr pos:start="109:12" pos:end="109:14"><name pos:start="109:12" pos:end="109:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
