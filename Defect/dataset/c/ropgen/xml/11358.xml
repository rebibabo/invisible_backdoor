<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11358.c" pos:tabs="8"><function pos:start="1:1" pos:end="54:15"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ff_jni_init_jfields</name><parameter_list pos:start="1:24" pos:end="1:120">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:30">JNIEnv</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">env</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:41">void</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:50">jfields</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:92"><decl pos:start="1:53" pos:end="1:92"><type pos:start="1:53" pos:end="1:92"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:75"><name pos:start="1:59" pos:end="1:64">struct</name> <name pos:start="1:66" pos:end="1:75">FFJniField</name></name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:92">jfields_mapping</name></decl></parameter>, <parameter pos:start="1:95" pos:end="1:104"><decl pos:start="1:95" pos:end="1:104"><type pos:start="1:95" pos:end="1:104"><name pos:start="1:95" pos:end="1:97">int</name></type> <name pos:start="1:99" pos:end="1:104">global</name></decl></parameter>, <parameter pos:start="1:107" pos:end="1:119"><decl pos:start="1:107" pos:end="1:119"><type pos:start="1:107" pos:end="1:119"><name pos:start="1:107" pos:end="1:110">void</name> <modifier pos:start="1:112" pos:end="1:112">*</modifier></type><name pos:start="1:113" pos:end="1:119">log_ctx</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="54:15">{<block_content pos:start="3:5" pos:end="54:15">
    <decl_stmt pos:start="3:5" pos:end="3:19"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:18"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:14">ret</name> <init pos:start="3:16" pos:end="3:18">= <expr pos:start="3:18" pos:end="3:18"><literal type="number" pos:start="3:18" pos:end="3:18">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:29"><decl pos:start="4:5" pos:end="4:28"><type pos:start="4:5" pos:end="4:10"><name pos:start="4:5" pos:end="4:10">jclass</name></type> <name pos:start="4:12" pos:end="4:21">last_clazz</name> <init pos:start="4:23" pos:end="4:28">= <expr pos:start="4:25" pos:end="4:28"><name pos:start="4:25" pos:end="4:28">NULL</name></expr></init></decl>;</decl_stmt>
    <for pos:start="5:5" pos:end="54:15">for <control pos:start="5:9" pos:end="5:45">(<init pos:start="5:10" pos:end="5:15"><expr pos:start="5:10" pos:end="5:14"><name pos:start="5:10" pos:end="5:10">i</name> <operator pos:start="5:12" pos:end="5:12">=</operator> <literal type="number" pos:start="5:14" pos:end="5:14">0</literal></expr>;</init> <condition pos:start="5:17" pos:end="5:40"><expr pos:start="5:17" pos:end="5:39"><name pos:start="5:17" pos:end="5:34"><name pos:start="5:17" pos:end="5:31">jfields_mapping</name><index pos:start="5:32" pos:end="5:34">[<expr pos:start="5:33" pos:end="5:33"><name pos:start="5:33" pos:end="5:33">i</name></expr>]</index></name><operator pos:start="5:35" pos:end="5:35">.</operator><name pos:start="5:36" pos:end="5:39">name</name></expr>;</condition> <incr pos:start="5:42" pos:end="5:44"><expr pos:start="5:42" pos:end="5:44"><name pos:start="5:42" pos:end="5:42">i</name><operator pos:start="5:43" pos:end="5:44">++</operator></expr></incr>)</control> <block pos:start="5:47" pos:end="54:15">{<block_content pos:start="6:9" pos:end="54:15">
        <decl_stmt pos:start="6:9" pos:end="6:53"><decl pos:start="6:9" pos:end="6:52"><type pos:start="6:9" pos:end="6:11"><name pos:start="6:9" pos:end="6:11">int</name></type> <name pos:start="6:13" pos:end="6:21">mandatory</name> <init pos:start="6:23" pos:end="6:52">= <expr pos:start="6:25" pos:end="6:52"><name pos:start="6:25" pos:end="6:42"><name pos:start="6:25" pos:end="6:39">jfields_mapping</name><index pos:start="6:40" pos:end="6:42">[<expr pos:start="6:41" pos:end="6:41"><name pos:start="6:41" pos:end="6:41">i</name></expr>]</index></name><operator pos:start="6:43" pos:end="6:43">.</operator><name pos:start="6:44" pos:end="6:52">mandatory</name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="7:9" pos:end="7:59"><decl pos:start="7:9" pos:end="7:58"><type pos:start="7:9" pos:end="7:27"><name pos:start="7:9" pos:end="7:27"><name pos:start="7:9" pos:end="7:12">enum</name> <name pos:start="7:14" pos:end="7:27">FFJniFieldType</name></name></type> <name pos:start="7:29" pos:end="7:32">type</name> <init pos:start="7:34" pos:end="7:58">= <expr pos:start="7:36" pos:end="7:58"><name pos:start="7:36" pos:end="7:53"><name pos:start="7:36" pos:end="7:50">jfields_mapping</name><index pos:start="7:51" pos:end="7:53">[<expr pos:start="7:52" pos:end="7:52"><name pos:start="7:52" pos:end="7:52">i</name></expr>]</index></name><operator pos:start="7:54" pos:end="7:54">.</operator><name pos:start="7:55" pos:end="7:58">type</name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="8:9" pos:end="54:15"><if pos:start="8:9" pos:end="54:15">if <condition pos:start="8:12" pos:end="8:33">(<expr pos:start="8:13" pos:end="8:32"><name pos:start="8:13" pos:end="8:16">type</name> <operator pos:start="8:18" pos:end="8:19">==</operator> <name pos:start="8:21" pos:end="8:32">FF_JNI_CLASS</name></expr>)</condition> <block pos:start="8:35" pos:end="54:15">{<block_content pos:start="9:13" pos:end="54:15">
            <decl_stmt pos:start="9:13" pos:end="9:25"><decl pos:start="9:13" pos:end="9:24"><type pos:start="9:13" pos:end="9:18"><name pos:start="9:13" pos:end="9:18">jclass</name></type> <name pos:start="9:20" pos:end="9:24">clazz</name></decl>;</decl_stmt>
            <expr_stmt pos:start="10:13" pos:end="10:30"><expr pos:start="10:13" pos:end="10:29"><name pos:start="10:13" pos:end="10:22">last_clazz</name> <operator pos:start="10:24" pos:end="10:24">=</operator> <name pos:start="10:26" pos:end="10:29">NULL</name></expr>;</expr_stmt>
            <expr_stmt pos:start="11:13" pos:end="11:68"><expr pos:start="11:13" pos:end="11:67"><name pos:start="11:13" pos:end="11:17">clazz</name> <operator pos:start="11:19" pos:end="11:19">=</operator> <call pos:start="11:21" pos:end="11:67"><name pos:start="11:21" pos:end="11:37"><operator pos:start="11:21" pos:end="11:21">(</operator><operator pos:start="11:22" pos:end="11:22">*</operator><name pos:start="11:23" pos:end="11:25">env</name><operator pos:start="11:26" pos:end="11:26">)</operator><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:37">FindClass</name></name><argument_list pos:start="11:38" pos:end="11:67">(<argument pos:start="11:39" pos:end="11:41"><expr pos:start="11:39" pos:end="11:41"><name pos:start="11:39" pos:end="11:41">env</name></expr></argument>, <argument pos:start="11:44" pos:end="11:66"><expr pos:start="11:44" pos:end="11:66"><name pos:start="11:44" pos:end="11:61"><name pos:start="11:44" pos:end="11:58">jfields_mapping</name><index pos:start="11:59" pos:end="11:61">[<expr pos:start="11:60" pos:end="11:60"><name pos:start="11:60" pos:end="11:60">i</name></expr>]</index></name><operator pos:start="11:62" pos:end="11:62">.</operator><name pos:start="11:63" pos:end="11:66">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="12:13" pos:end="54:15"><if pos:start="12:13" pos:end="16:9">if <condition pos:start="12:16" pos:end="12:89">(<expr pos:start="12:17" pos:end="12:88"><operator pos:start="12:17" pos:end="12:17">(</operator><name pos:start="12:18" pos:end="12:20">ret</name> <operator pos:start="12:22" pos:end="12:22">=</operator> <call pos:start="12:24" pos:end="12:70"><name pos:start="12:24" pos:end="12:45">ff_jni_exception_check</name><argument_list pos:start="12:46" pos:end="12:70">(<argument pos:start="12:47" pos:end="12:49"><expr pos:start="12:47" pos:end="12:49"><name pos:start="12:47" pos:end="12:49">env</name></expr></argument>, <argument pos:start="12:52" pos:end="12:60"><expr pos:start="12:52" pos:end="12:60"><name pos:start="12:52" pos:end="12:60">mandatory</name></expr></argument>, <argument pos:start="12:63" pos:end="12:69"><expr pos:start="12:63" pos:end="12:69"><name pos:start="12:63" pos:end="12:69">log_ctx</name></expr></argument>)</argument_list></call><operator pos:start="12:71" pos:end="12:71">)</operator> <operator pos:start="12:73" pos:end="12:73">&lt;</operator> <literal type="number" pos:start="12:75" pos:end="12:75">0</literal> <operator pos:start="12:77" pos:end="12:78">&amp;&amp;</operator> <name pos:start="12:80" pos:end="12:88">mandatory</name></expr>)</condition> <block pos:start="12:91" pos:end="16:9">{<block_content pos:start="13:17" pos:end="15:70">
                <goto pos:start="13:17" pos:end="13:26">goto <name pos:start="13:22" pos:end="13:25">done</name>;</goto>
            <expr_stmt pos:start="14:13" pos:end="15:70"><expr pos:start="14:13" pos:end="15:69"><name pos:start="14:13" pos:end="14:22">last_clazz</name> <operator pos:start="14:24" pos:end="14:24">=</operator> <operator pos:start="14:26" pos:end="14:26">*</operator><operator pos:start="14:27" pos:end="14:27">(</operator><name pos:start="14:28" pos:end="14:33">jclass</name><operator pos:start="14:34" pos:end="14:34">*</operator><operator pos:start="14:35" pos:end="14:35">)</operator><operator pos:start="14:36" pos:end="14:36">(</operator><operator pos:start="14:37" pos:end="14:37">(</operator><name pos:start="14:38" pos:end="14:44">uint8_t</name><operator pos:start="14:45" pos:end="14:45">*</operator><operator pos:start="14:46" pos:end="14:46">)</operator><name pos:start="14:47" pos:end="14:53">jfields</name> <operator pos:start="14:55" pos:end="14:55">+</operator> <name pos:start="14:57" pos:end="14:74"><name pos:start="14:57" pos:end="14:71">jfields_mapping</name><index pos:start="14:72" pos:end="14:74">[<expr pos:start="14:73" pos:end="14:73"><name pos:start="14:73" pos:end="14:73">i</name></expr>]</index></name><operator pos:start="14:75" pos:end="14:75">.</operator><name pos:start="14:76" pos:end="14:81">offset</name><operator pos:start="14:82" pos:end="14:82">)</operator> <operator pos:start="14:84" pos:end="14:84">=</operator>
                    <ternary pos:start="15:21" pos:end="15:69"><condition pos:start="15:21" pos:end="15:28"><expr pos:start="15:21" pos:end="15:26"><name pos:start="15:21" pos:end="15:26">global</name></expr> ?</condition><then pos:start="15:30" pos:end="15:61"> <expr pos:start="15:30" pos:end="15:61"><call pos:start="15:30" pos:end="15:61"><name pos:start="15:30" pos:end="15:49"><operator pos:start="15:30" pos:end="15:30">(</operator><operator pos:start="15:31" pos:end="15:31">*</operator><name pos:start="15:32" pos:end="15:34">env</name><operator pos:start="15:35" pos:end="15:35">)</operator><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:49">NewGlobalRef</name></name><argument_list pos:start="15:50" pos:end="15:61">(<argument pos:start="15:51" pos:end="15:53"><expr pos:start="15:51" pos:end="15:53"><name pos:start="15:51" pos:end="15:53">env</name></expr></argument>, <argument pos:start="15:56" pos:end="15:60"><expr pos:start="15:56" pos:end="15:60"><name pos:start="15:56" pos:end="15:60">clazz</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="15:63" pos:end="15:69">: <expr pos:start="15:65" pos:end="15:69"><name pos:start="15:65" pos:end="15:69">clazz</name></expr></else></ternary></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="16:11" pos:end="54:15">else <block pos:start="16:16" pos:end="54:15">{<block_content pos:start="17:13" pos:end="54:15">
            <if_stmt pos:start="17:13" pos:end="54:15"><if pos:start="17:13" pos:end="54:15">if <condition pos:start="17:16" pos:end="17:28">(<expr pos:start="17:17" pos:end="17:27"><operator pos:start="17:17" pos:end="17:17">!</operator><name pos:start="17:18" pos:end="17:27">last_clazz</name></expr>)</condition> <block pos:start="17:30" pos:end="54:15">{<block_content pos:start="18:17" pos:end="54:15">
                <expr_stmt pos:start="18:17" pos:end="18:39"><expr pos:start="18:17" pos:end="18:38"><name pos:start="18:17" pos:end="18:19">ret</name> <operator pos:start="18:21" pos:end="18:21">=</operator> <name pos:start="18:23" pos:end="18:38">AVERROR_EXTERNAL</name></expr>;</expr_stmt>
                <break pos:start="19:17" pos:end="19:22">break;</break>
            <switch pos:start="20:13" pos:end="54:15">switch<condition pos:start="20:19" pos:end="20:24">(<expr pos:start="20:20" pos:end="20:23"><name pos:start="20:20" pos:end="20:23">type</name></expr>)</condition> <block pos:start="20:26" pos:end="54:15">{<block_content pos:start="21:13" pos:end="54:15">
            <case pos:start="21:13" pos:end="21:30">case <expr pos:start="21:18" pos:end="21:29"><name pos:start="21:18" pos:end="21:29">FF_JNI_FIELD</name></expr>:</case> <block pos:start="21:32" pos:end="54:15">{<block_content pos:start="22:17" pos:end="54:15">
                <decl_stmt pos:start="22:17" pos:end="22:129"><decl pos:start="22:17" pos:end="22:128"><type pos:start="22:17" pos:end="22:24"><name pos:start="22:17" pos:end="22:24">jfieldID</name></type> <name pos:start="22:26" pos:end="22:33">field_id</name> <init pos:start="22:35" pos:end="22:128">= <expr pos:start="22:37" pos:end="22:128"><call pos:start="22:37" pos:end="22:128"><name pos:start="22:37" pos:end="22:54"><operator pos:start="22:37" pos:end="22:37">(</operator><operator pos:start="22:38" pos:end="22:38">*</operator><name pos:start="22:39" pos:end="22:41">env</name><operator pos:start="22:42" pos:end="22:42">)</operator><operator pos:start="22:43" pos:end="22:44">-&gt;</operator><name pos:start="22:45" pos:end="22:54">GetFieldID</name></name><argument_list pos:start="22:55" pos:end="22:128">(<argument pos:start="22:56" pos:end="22:58"><expr pos:start="22:56" pos:end="22:58"><name pos:start="22:56" pos:end="22:58">env</name></expr></argument>, <argument pos:start="22:61" pos:end="22:70"><expr pos:start="22:61" pos:end="22:70"><name pos:start="22:61" pos:end="22:70">last_clazz</name></expr></argument>, <argument pos:start="22:73" pos:end="22:97"><expr pos:start="22:73" pos:end="22:97"><name pos:start="22:73" pos:end="22:90"><name pos:start="22:73" pos:end="22:87">jfields_mapping</name><index pos:start="22:88" pos:end="22:90">[<expr pos:start="22:89" pos:end="22:89"><name pos:start="22:89" pos:end="22:89">i</name></expr>]</index></name><operator pos:start="22:91" pos:end="22:91">.</operator><name pos:start="22:92" pos:end="22:97">method</name></expr></argument>, <argument pos:start="22:100" pos:end="22:127"><expr pos:start="22:100" pos:end="22:127"><name pos:start="22:100" pos:end="22:117"><name pos:start="22:100" pos:end="22:114">jfields_mapping</name><index pos:start="22:115" pos:end="22:117">[<expr pos:start="22:116" pos:end="22:116"><name pos:start="22:116" pos:end="22:116">i</name></expr>]</index></name><operator pos:start="22:118" pos:end="22:118">.</operator><name pos:start="22:119" pos:end="22:127">signature</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="23:17" pos:end="54:15"><if pos:start="23:17" pos:end="54:15">if <condition pos:start="23:20" pos:end="23:93">(<expr pos:start="23:21" pos:end="23:92"><operator pos:start="23:21" pos:end="23:21">(</operator><name pos:start="23:22" pos:end="23:24">ret</name> <operator pos:start="23:26" pos:end="23:26">=</operator> <call pos:start="23:28" pos:end="23:74"><name pos:start="23:28" pos:end="23:49">ff_jni_exception_check</name><argument_list pos:start="23:50" pos:end="23:74">(<argument pos:start="23:51" pos:end="23:53"><expr pos:start="23:51" pos:end="23:53"><name pos:start="23:51" pos:end="23:53">env</name></expr></argument>, <argument pos:start="23:56" pos:end="23:64"><expr pos:start="23:56" pos:end="23:64"><name pos:start="23:56" pos:end="23:64">mandatory</name></expr></argument>, <argument pos:start="23:67" pos:end="23:73"><expr pos:start="23:67" pos:end="23:73"><name pos:start="23:67" pos:end="23:73">log_ctx</name></expr></argument>)</argument_list></call><operator pos:start="23:75" pos:end="23:75">)</operator> <operator pos:start="23:77" pos:end="23:77">&lt;</operator> <literal type="number" pos:start="23:79" pos:end="23:79">0</literal> <operator pos:start="23:81" pos:end="23:82">&amp;&amp;</operator> <name pos:start="23:84" pos:end="23:92">mandatory</name></expr>)</condition> <block pos:start="23:95" pos:end="54:15">{<block_content pos:start="24:21" pos:end="54:15">
                    <goto pos:start="24:21" pos:end="24:30">goto <name pos:start="24:26" pos:end="24:29">done</name>;</goto>
                <expr_stmt pos:start="25:17" pos:end="25:87"><expr pos:start="25:17" pos:end="25:86"><operator pos:start="25:17" pos:end="25:17">*</operator><operator pos:start="25:18" pos:end="25:18">(</operator><name pos:start="25:19" pos:end="25:26">jfieldID</name><operator pos:start="25:27" pos:end="25:27">*</operator><operator pos:start="25:28" pos:end="25:28">)</operator><operator pos:start="25:29" pos:end="25:29">(</operator><operator pos:start="25:30" pos:end="25:30">(</operator><name pos:start="25:31" pos:end="25:37">uint8_t</name><operator pos:start="25:38" pos:end="25:38">*</operator><operator pos:start="25:39" pos:end="25:39">)</operator><name pos:start="25:40" pos:end="25:46">jfields</name> <operator pos:start="25:48" pos:end="25:48">+</operator> <name pos:start="25:50" pos:end="25:67"><name pos:start="25:50" pos:end="25:64">jfields_mapping</name><index pos:start="25:65" pos:end="25:67">[<expr pos:start="25:66" pos:end="25:66"><name pos:start="25:66" pos:end="25:66">i</name></expr>]</index></name><operator pos:start="25:68" pos:end="25:68">.</operator><name pos:start="25:69" pos:end="25:74">offset</name><operator pos:start="25:75" pos:end="25:75">)</operator> <operator pos:start="25:77" pos:end="25:77">=</operator> <name pos:start="25:79" pos:end="25:86">field_id</name></expr>;</expr_stmt>
                <break pos:start="26:17" pos:end="26:22">break;</break>
            <case pos:start="27:13" pos:end="27:37">case <expr pos:start="27:18" pos:end="27:36"><name pos:start="27:18" pos:end="27:36">FF_JNI_STATIC_FIELD</name></expr>:</case> <block pos:start="27:39" pos:end="54:15">{<block_content pos:start="28:17" pos:end="54:15">
                <decl_stmt pos:start="28:17" pos:end="28:135"><decl pos:start="28:17" pos:end="28:134"><type pos:start="28:17" pos:end="28:24"><name pos:start="28:17" pos:end="28:24">jfieldID</name></type> <name pos:start="28:26" pos:end="28:33">field_id</name> <init pos:start="28:35" pos:end="28:134">= <expr pos:start="28:37" pos:end="28:134"><call pos:start="28:37" pos:end="28:134"><name pos:start="28:37" pos:end="28:60"><operator pos:start="28:37" pos:end="28:37">(</operator><operator pos:start="28:38" pos:end="28:38">*</operator><name pos:start="28:39" pos:end="28:41">env</name><operator pos:start="28:42" pos:end="28:42">)</operator><operator pos:start="28:43" pos:end="28:44">-&gt;</operator><name pos:start="28:45" pos:end="28:60">GetStaticFieldID</name></name><argument_list pos:start="28:61" pos:end="28:134">(<argument pos:start="28:62" pos:end="28:64"><expr pos:start="28:62" pos:end="28:64"><name pos:start="28:62" pos:end="28:64">env</name></expr></argument>, <argument pos:start="28:67" pos:end="28:76"><expr pos:start="28:67" pos:end="28:76"><name pos:start="28:67" pos:end="28:76">last_clazz</name></expr></argument>, <argument pos:start="28:79" pos:end="28:103"><expr pos:start="28:79" pos:end="28:103"><name pos:start="28:79" pos:end="28:96"><name pos:start="28:79" pos:end="28:93">jfields_mapping</name><index pos:start="28:94" pos:end="28:96">[<expr pos:start="28:95" pos:end="28:95"><name pos:start="28:95" pos:end="28:95">i</name></expr>]</index></name><operator pos:start="28:97" pos:end="28:97">.</operator><name pos:start="28:98" pos:end="28:103">method</name></expr></argument>, <argument pos:start="28:106" pos:end="28:133"><expr pos:start="28:106" pos:end="28:133"><name pos:start="28:106" pos:end="28:123"><name pos:start="28:106" pos:end="28:120">jfields_mapping</name><index pos:start="28:121" pos:end="28:123">[<expr pos:start="28:122" pos:end="28:122"><name pos:start="28:122" pos:end="28:122">i</name></expr>]</index></name><operator pos:start="28:124" pos:end="28:124">.</operator><name pos:start="28:125" pos:end="28:133">signature</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="29:17" pos:end="54:15"><if pos:start="29:17" pos:end="54:15">if <condition pos:start="29:20" pos:end="29:93">(<expr pos:start="29:21" pos:end="29:92"><operator pos:start="29:21" pos:end="29:21">(</operator><name pos:start="29:22" pos:end="29:24">ret</name> <operator pos:start="29:26" pos:end="29:26">=</operator> <call pos:start="29:28" pos:end="29:74"><name pos:start="29:28" pos:end="29:49">ff_jni_exception_check</name><argument_list pos:start="29:50" pos:end="29:74">(<argument pos:start="29:51" pos:end="29:53"><expr pos:start="29:51" pos:end="29:53"><name pos:start="29:51" pos:end="29:53">env</name></expr></argument>, <argument pos:start="29:56" pos:end="29:64"><expr pos:start="29:56" pos:end="29:64"><name pos:start="29:56" pos:end="29:64">mandatory</name></expr></argument>, <argument pos:start="29:67" pos:end="29:73"><expr pos:start="29:67" pos:end="29:73"><name pos:start="29:67" pos:end="29:73">log_ctx</name></expr></argument>)</argument_list></call><operator pos:start="29:75" pos:end="29:75">)</operator> <operator pos:start="29:77" pos:end="29:77">&lt;</operator> <literal type="number" pos:start="29:79" pos:end="29:79">0</literal> <operator pos:start="29:81" pos:end="29:82">&amp;&amp;</operator> <name pos:start="29:84" pos:end="29:92">mandatory</name></expr>)</condition> <block pos:start="29:95" pos:end="54:15">{<block_content pos:start="30:21" pos:end="54:15">
                    <goto pos:start="30:21" pos:end="30:30">goto <name pos:start="30:26" pos:end="30:29">done</name>;</goto>
                <expr_stmt pos:start="31:17" pos:end="31:87"><expr pos:start="31:17" pos:end="31:86"><operator pos:start="31:17" pos:end="31:17">*</operator><operator pos:start="31:18" pos:end="31:18">(</operator><name pos:start="31:19" pos:end="31:26">jfieldID</name><operator pos:start="31:27" pos:end="31:27">*</operator><operator pos:start="31:28" pos:end="31:28">)</operator><operator pos:start="31:29" pos:end="31:29">(</operator><operator pos:start="31:30" pos:end="31:30">(</operator><name pos:start="31:31" pos:end="31:37">uint8_t</name><operator pos:start="31:38" pos:end="31:38">*</operator><operator pos:start="31:39" pos:end="31:39">)</operator><name pos:start="31:40" pos:end="31:46">jfields</name> <operator pos:start="31:48" pos:end="31:48">+</operator> <name pos:start="31:50" pos:end="31:67"><name pos:start="31:50" pos:end="31:64">jfields_mapping</name><index pos:start="31:65" pos:end="31:67">[<expr pos:start="31:66" pos:end="31:66"><name pos:start="31:66" pos:end="31:66">i</name></expr>]</index></name><operator pos:start="31:68" pos:end="31:68">.</operator><name pos:start="31:69" pos:end="31:74">offset</name><operator pos:start="31:75" pos:end="31:75">)</operator> <operator pos:start="31:77" pos:end="31:77">=</operator> <name pos:start="31:79" pos:end="31:86">field_id</name></expr>;</expr_stmt>
                <break pos:start="32:17" pos:end="32:22">break;</break>
            <case pos:start="33:13" pos:end="33:31">case <expr pos:start="33:18" pos:end="33:30"><name pos:start="33:18" pos:end="33:30">FF_JNI_METHOD</name></expr>:</case> <block pos:start="33:33" pos:end="54:15">{<block_content pos:start="34:17" pos:end="54:15">
                <decl_stmt pos:start="34:17" pos:end="34:132"><decl pos:start="34:17" pos:end="34:131"><type pos:start="34:17" pos:end="34:25"><name pos:start="34:17" pos:end="34:25">jmethodID</name></type> <name pos:start="34:27" pos:end="34:35">method_id</name> <init pos:start="34:37" pos:end="34:131">= <expr pos:start="34:39" pos:end="34:131"><call pos:start="34:39" pos:end="34:131"><name pos:start="34:39" pos:end="34:57"><operator pos:start="34:39" pos:end="34:39">(</operator><operator pos:start="34:40" pos:end="34:40">*</operator><name pos:start="34:41" pos:end="34:43">env</name><operator pos:start="34:44" pos:end="34:44">)</operator><operator pos:start="34:45" pos:end="34:46">-&gt;</operator><name pos:start="34:47" pos:end="34:57">GetMethodID</name></name><argument_list pos:start="34:58" pos:end="34:131">(<argument pos:start="34:59" pos:end="34:61"><expr pos:start="34:59" pos:end="34:61"><name pos:start="34:59" pos:end="34:61">env</name></expr></argument>, <argument pos:start="34:64" pos:end="34:73"><expr pos:start="34:64" pos:end="34:73"><name pos:start="34:64" pos:end="34:73">last_clazz</name></expr></argument>, <argument pos:start="34:76" pos:end="34:100"><expr pos:start="34:76" pos:end="34:100"><name pos:start="34:76" pos:end="34:93"><name pos:start="34:76" pos:end="34:90">jfields_mapping</name><index pos:start="34:91" pos:end="34:93">[<expr pos:start="34:92" pos:end="34:92"><name pos:start="34:92" pos:end="34:92">i</name></expr>]</index></name><operator pos:start="34:94" pos:end="34:94">.</operator><name pos:start="34:95" pos:end="34:100">method</name></expr></argument>, <argument pos:start="34:103" pos:end="34:130"><expr pos:start="34:103" pos:end="34:130"><name pos:start="34:103" pos:end="34:120"><name pos:start="34:103" pos:end="34:117">jfields_mapping</name><index pos:start="34:118" pos:end="34:120">[<expr pos:start="34:119" pos:end="34:119"><name pos:start="34:119" pos:end="34:119">i</name></expr>]</index></name><operator pos:start="34:121" pos:end="34:121">.</operator><name pos:start="34:122" pos:end="34:130">signature</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="35:17" pos:end="54:15"><if pos:start="35:17" pos:end="54:15">if <condition pos:start="35:20" pos:end="35:93">(<expr pos:start="35:21" pos:end="35:92"><operator pos:start="35:21" pos:end="35:21">(</operator><name pos:start="35:22" pos:end="35:24">ret</name> <operator pos:start="35:26" pos:end="35:26">=</operator> <call pos:start="35:28" pos:end="35:74"><name pos:start="35:28" pos:end="35:49">ff_jni_exception_check</name><argument_list pos:start="35:50" pos:end="35:74">(<argument pos:start="35:51" pos:end="35:53"><expr pos:start="35:51" pos:end="35:53"><name pos:start="35:51" pos:end="35:53">env</name></expr></argument>, <argument pos:start="35:56" pos:end="35:64"><expr pos:start="35:56" pos:end="35:64"><name pos:start="35:56" pos:end="35:64">mandatory</name></expr></argument>, <argument pos:start="35:67" pos:end="35:73"><expr pos:start="35:67" pos:end="35:73"><name pos:start="35:67" pos:end="35:73">log_ctx</name></expr></argument>)</argument_list></call><operator pos:start="35:75" pos:end="35:75">)</operator> <operator pos:start="35:77" pos:end="35:77">&lt;</operator> <literal type="number" pos:start="35:79" pos:end="35:79">0</literal> <operator pos:start="35:81" pos:end="35:82">&amp;&amp;</operator> <name pos:start="35:84" pos:end="35:92">mandatory</name></expr>)</condition> <block pos:start="35:95" pos:end="54:15">{<block_content pos:start="36:21" pos:end="54:15">
                    <goto pos:start="36:21" pos:end="36:30">goto <name pos:start="36:26" pos:end="36:29">done</name>;</goto>
                <expr_stmt pos:start="37:17" pos:end="37:89"><expr pos:start="37:17" pos:end="37:88"><operator pos:start="37:17" pos:end="37:17">*</operator><operator pos:start="37:18" pos:end="37:18">(</operator><name pos:start="37:19" pos:end="37:27">jmethodID</name><operator pos:start="37:28" pos:end="37:28">*</operator><operator pos:start="37:29" pos:end="37:29">)</operator><operator pos:start="37:30" pos:end="37:30">(</operator><operator pos:start="37:31" pos:end="37:31">(</operator><name pos:start="37:32" pos:end="37:38">uint8_t</name><operator pos:start="37:39" pos:end="37:39">*</operator><operator pos:start="37:40" pos:end="37:40">)</operator><name pos:start="37:41" pos:end="37:47">jfields</name> <operator pos:start="37:49" pos:end="37:49">+</operator> <name pos:start="37:51" pos:end="37:68"><name pos:start="37:51" pos:end="37:65">jfields_mapping</name><index pos:start="37:66" pos:end="37:68">[<expr pos:start="37:67" pos:end="37:67"><name pos:start="37:67" pos:end="37:67">i</name></expr>]</index></name><operator pos:start="37:69" pos:end="37:69">.</operator><name pos:start="37:70" pos:end="37:75">offset</name><operator pos:start="37:76" pos:end="37:76">)</operator> <operator pos:start="37:78" pos:end="37:78">=</operator> <name pos:start="37:80" pos:end="37:88">method_id</name></expr>;</expr_stmt>
                <break pos:start="38:17" pos:end="38:22">break;</break>
            <case pos:start="39:13" pos:end="39:38">case <expr pos:start="39:18" pos:end="39:37"><name pos:start="39:18" pos:end="39:37">FF_JNI_STATIC_METHOD</name></expr>:</case> <block pos:start="39:40" pos:end="54:15">{<block_content pos:start="40:17" pos:end="54:15">
                <decl_stmt pos:start="40:17" pos:end="40:138"><decl pos:start="40:17" pos:end="40:137"><type pos:start="40:17" pos:end="40:25"><name pos:start="40:17" pos:end="40:25">jmethodID</name></type> <name pos:start="40:27" pos:end="40:35">method_id</name> <init pos:start="40:37" pos:end="40:137">= <expr pos:start="40:39" pos:end="40:137"><call pos:start="40:39" pos:end="40:137"><name pos:start="40:39" pos:end="40:63"><operator pos:start="40:39" pos:end="40:39">(</operator><operator pos:start="40:40" pos:end="40:40">*</operator><name pos:start="40:41" pos:end="40:43">env</name><operator pos:start="40:44" pos:end="40:44">)</operator><operator pos:start="40:45" pos:end="40:46">-&gt;</operator><name pos:start="40:47" pos:end="40:63">GetStaticMethodID</name></name><argument_list pos:start="40:64" pos:end="40:137">(<argument pos:start="40:65" pos:end="40:67"><expr pos:start="40:65" pos:end="40:67"><name pos:start="40:65" pos:end="40:67">env</name></expr></argument>, <argument pos:start="40:70" pos:end="40:79"><expr pos:start="40:70" pos:end="40:79"><name pos:start="40:70" pos:end="40:79">last_clazz</name></expr></argument>, <argument pos:start="40:82" pos:end="40:106"><expr pos:start="40:82" pos:end="40:106"><name pos:start="40:82" pos:end="40:99"><name pos:start="40:82" pos:end="40:96">jfields_mapping</name><index pos:start="40:97" pos:end="40:99">[<expr pos:start="40:98" pos:end="40:98"><name pos:start="40:98" pos:end="40:98">i</name></expr>]</index></name><operator pos:start="40:100" pos:end="40:100">.</operator><name pos:start="40:101" pos:end="40:106">method</name></expr></argument>, <argument pos:start="40:109" pos:end="40:136"><expr pos:start="40:109" pos:end="40:136"><name pos:start="40:109" pos:end="40:126"><name pos:start="40:109" pos:end="40:123">jfields_mapping</name><index pos:start="40:124" pos:end="40:126">[<expr pos:start="40:125" pos:end="40:125"><name pos:start="40:125" pos:end="40:125">i</name></expr>]</index></name><operator pos:start="40:127" pos:end="40:127">.</operator><name pos:start="40:128" pos:end="40:136">signature</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="41:17" pos:end="54:15"><if pos:start="41:17" pos:end="54:15">if <condition pos:start="41:20" pos:end="41:93">(<expr pos:start="41:21" pos:end="41:92"><operator pos:start="41:21" pos:end="41:21">(</operator><name pos:start="41:22" pos:end="41:24">ret</name> <operator pos:start="41:26" pos:end="41:26">=</operator> <call pos:start="41:28" pos:end="41:74"><name pos:start="41:28" pos:end="41:49">ff_jni_exception_check</name><argument_list pos:start="41:50" pos:end="41:74">(<argument pos:start="41:51" pos:end="41:53"><expr pos:start="41:51" pos:end="41:53"><name pos:start="41:51" pos:end="41:53">env</name></expr></argument>, <argument pos:start="41:56" pos:end="41:64"><expr pos:start="41:56" pos:end="41:64"><name pos:start="41:56" pos:end="41:64">mandatory</name></expr></argument>, <argument pos:start="41:67" pos:end="41:73"><expr pos:start="41:67" pos:end="41:73"><name pos:start="41:67" pos:end="41:73">log_ctx</name></expr></argument>)</argument_list></call><operator pos:start="41:75" pos:end="41:75">)</operator> <operator pos:start="41:77" pos:end="41:77">&lt;</operator> <literal type="number" pos:start="41:79" pos:end="41:79">0</literal> <operator pos:start="41:81" pos:end="41:82">&amp;&amp;</operator> <name pos:start="41:84" pos:end="41:92">mandatory</name></expr>)</condition> <block pos:start="41:95" pos:end="54:15">{<block_content pos:start="42:21" pos:end="54:15">
                    <goto pos:start="42:21" pos:end="42:30">goto <name pos:start="42:26" pos:end="42:29">done</name>;</goto>
                <expr_stmt pos:start="43:17" pos:end="43:89"><expr pos:start="43:17" pos:end="43:88"><operator pos:start="43:17" pos:end="43:17">*</operator><operator pos:start="43:18" pos:end="43:18">(</operator><name pos:start="43:19" pos:end="43:27">jmethodID</name><operator pos:start="43:28" pos:end="43:28">*</operator><operator pos:start="43:29" pos:end="43:29">)</operator><operator pos:start="43:30" pos:end="43:30">(</operator><operator pos:start="43:31" pos:end="43:31">(</operator><name pos:start="43:32" pos:end="43:38">uint8_t</name><operator pos:start="43:39" pos:end="43:39">*</operator><operator pos:start="43:40" pos:end="43:40">)</operator><name pos:start="43:41" pos:end="43:47">jfields</name> <operator pos:start="43:49" pos:end="43:49">+</operator> <name pos:start="43:51" pos:end="43:68"><name pos:start="43:51" pos:end="43:65">jfields_mapping</name><index pos:start="43:66" pos:end="43:68">[<expr pos:start="43:67" pos:end="43:67"><name pos:start="43:67" pos:end="43:67">i</name></expr>]</index></name><operator pos:start="43:69" pos:end="43:69">.</operator><name pos:start="43:70" pos:end="43:75">offset</name><operator pos:start="43:76" pos:end="43:76">)</operator> <operator pos:start="43:78" pos:end="43:78">=</operator> <name pos:start="43:80" pos:end="43:88">method_id</name></expr>;</expr_stmt>
                <break pos:start="44:17" pos:end="44:22">break;</break>
            <default pos:start="45:13" pos:end="45:20">default:</default>
                <expr_stmt pos:start="46:17" pos:end="46:74"><expr pos:start="46:17" pos:end="46:73"><call pos:start="46:17" pos:end="46:73"><name pos:start="46:17" pos:end="46:22">av_log</name><argument_list pos:start="46:23" pos:end="46:73">(<argument pos:start="46:24" pos:end="46:30"><expr pos:start="46:24" pos:end="46:30"><name pos:start="46:24" pos:end="46:30">log_ctx</name></expr></argument>, <argument pos:start="46:33" pos:end="46:44"><expr pos:start="46:33" pos:end="46:44"><name pos:start="46:33" pos:end="46:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="46:47" pos:end="46:72"><expr pos:start="46:47" pos:end="46:72"><literal type="string" pos:start="46:47" pos:end="46:72">"Unknown JNI field type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="47:17" pos:end="47:38"><expr pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:19">ret</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <call pos:start="47:23" pos:end="47:37"><name pos:start="47:23" pos:end="47:29">AVERROR</name><argument_list pos:start="47:30" pos:end="47:37">(<argument pos:start="47:31" pos:end="47:36"><expr pos:start="47:31" pos:end="47:36"><name pos:start="47:31" pos:end="47:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <goto pos:start="48:17" pos:end="48:26">goto <name pos:start="48:22" pos:end="48:25">done</name>;</goto>
            <expr_stmt pos:start="49:13" pos:end="49:20"><expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>;</expr_stmt>
<label pos:start="50:1" pos:end="50:5"><name pos:start="50:1" pos:end="50:4">done</name>:</label>
    <if_stmt pos:start="51:5" pos:end="54:15"><if pos:start="51:5" pos:end="54:15">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition> <block pos:start="51:18" pos:end="54:15">{<block_content pos:start="53:9" pos:end="54:15">
        <comment type="block" pos:start="52:9" pos:end="52:77">/* reset jfields in case of failure so it does not leak references */</comment>
        <expr_stmt pos:start="53:9" pos:end="53:77"><expr pos:start="53:9" pos:end="53:76"><call pos:start="53:9" pos:end="53:76"><name pos:start="53:9" pos:end="53:28">ff_jni_reset_jfields</name><argument_list pos:start="53:29" pos:end="53:76">(<argument pos:start="53:30" pos:end="53:32"><expr pos:start="53:30" pos:end="53:32"><name pos:start="53:30" pos:end="53:32">env</name></expr></argument>, <argument pos:start="53:35" pos:end="53:41"><expr pos:start="53:35" pos:end="53:41"><name pos:start="53:35" pos:end="53:41">jfields</name></expr></argument>, <argument pos:start="53:44" pos:end="53:58"><expr pos:start="53:44" pos:end="53:58"><name pos:start="53:44" pos:end="53:58">jfields_mapping</name></expr></argument>, <argument pos:start="53:61" pos:end="53:66"><expr pos:start="53:61" pos:end="53:66"><name pos:start="53:61" pos:end="53:66">global</name></expr></argument>, <argument pos:start="53:69" pos:end="53:75"><expr pos:start="53:69" pos:end="53:75"><name pos:start="53:69" pos:end="53:75">log_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="54:5" pos:end="54:15">return <expr pos:start="54:12" pos:end="54:14"><name pos:start="54:12" pos:end="54:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></function></unit>
