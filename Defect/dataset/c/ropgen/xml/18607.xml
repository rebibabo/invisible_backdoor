<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18607.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:41">virtio_mmio_set_guest_notifier</name><parameter_list pos:start="1:42" pos:end="3:58">(<parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:53">DeviceState</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">d</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:63"><decl pos:start="1:59" pos:end="1:63"><type pos:start="1:59" pos:end="1:63"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:63">n</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:76"><decl pos:start="1:66" pos:end="1:76"><type pos:start="1:66" pos:end="1:76"><name pos:start="1:66" pos:end="1:69">bool</name></type> <name pos:start="1:71" pos:end="1:76">assign</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:57"><decl pos:start="3:43" pos:end="3:57"><type pos:start="3:43" pos:end="3:57"><name pos:start="3:43" pos:end="3:46">bool</name></type> <name pos:start="3:48" pos:end="3:57">with_irqfd</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:13">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">VirtIOMMIOProxy</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:26">proxy</name> <init pos:start="7:28" pos:end="7:43">= <expr pos:start="7:30" pos:end="7:43"><call pos:start="7:30" pos:end="7:43"><name pos:start="7:30" pos:end="7:40">VIRTIO_MMIO</name><argument_list pos:start="7:41" pos:end="7:43">(<argument pos:start="7:42" pos:end="7:42"><expr pos:start="7:42" pos:end="7:42"><name pos:start="7:42" pos:end="7:42">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">VirtIODevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">vdev</name> <init pos:start="9:24" pos:end="9:59">= <expr pos:start="9:26" pos:end="9:59"><call pos:start="9:26" pos:end="9:59"><name pos:start="9:26" pos:end="9:46">virtio_bus_get_device</name><argument_list pos:start="9:47" pos:end="9:59">(<argument pos:start="9:48" pos:end="9:58"><expr pos:start="9:48" pos:end="9:58"><operator pos:start="9:48" pos:end="9:48">&amp;</operator><name pos:start="9:49" pos:end="9:58"><name pos:start="9:49" pos:end="9:53">proxy</name><operator pos:start="9:54" pos:end="9:55">-&gt;</operator><name pos:start="9:56" pos:end="9:58">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:59"><decl pos:start="11:5" pos:end="11:58"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">VirtioDeviceClass</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:26">vdc</name> <init pos:start="11:28" pos:end="11:58">= <expr pos:start="11:30" pos:end="11:58"><call pos:start="11:30" pos:end="11:58"><name pos:start="11:30" pos:end="11:52">VIRTIO_DEVICE_GET_CLASS</name><argument_list pos:start="11:53" pos:end="11:58">(<argument pos:start="11:54" pos:end="11:57"><expr pos:start="11:54" pos:end="11:57"><name pos:start="11:54" pos:end="11:57">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">VirtQueue</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:17">vq</name> <init pos:start="13:19" pos:end="13:45">= <expr pos:start="13:21" pos:end="13:45"><call pos:start="13:21" pos:end="13:45"><name pos:start="13:21" pos:end="13:36">virtio_get_queue</name><argument_list pos:start="13:37" pos:end="13:45">(<argument pos:start="13:38" pos:end="13:41"><expr pos:start="13:38" pos:end="13:41"><name pos:start="13:38" pos:end="13:41">vdev</name></expr></argument>, <argument pos:start="13:44" pos:end="13:44"><expr pos:start="13:44" pos:end="13:44"><name pos:start="13:44" pos:end="13:44">n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:66"><decl pos:start="15:5" pos:end="15:65"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">EventNotifier</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:27">notifier</name> <init pos:start="15:29" pos:end="15:65">= <expr pos:start="15:31" pos:end="15:65"><call pos:start="15:31" pos:end="15:65"><name pos:start="15:31" pos:end="15:61">virtio_queue_get_guest_notifier</name><argument_list pos:start="15:62" pos:end="15:65">(<argument pos:start="15:63" pos:end="15:64"><expr pos:start="15:63" pos:end="15:64"><name pos:start="15:63" pos:end="15:64">vq</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="37:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:14">assign</name></expr>)</condition> <block pos:start="19:17" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:73">

        <decl_stmt pos:start="21:9" pos:end="21:49"><decl pos:start="21:9" pos:end="21:48"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">r</name> <init pos:start="21:15" pos:end="21:48">= <expr pos:start="21:17" pos:end="21:48"><call pos:start="21:17" pos:end="21:48"><name pos:start="21:17" pos:end="21:35">event_notifier_init</name><argument_list pos:start="21:36" pos:end="21:48">(<argument pos:start="21:37" pos:end="21:44"><expr pos:start="21:37" pos:end="21:44"><name pos:start="21:37" pos:end="21:44">notifier</name></expr></argument>, <argument pos:start="21:47" pos:end="21:47"><expr pos:start="21:47" pos:end="21:47"><literal type="number" pos:start="21:47" pos:end="21:47">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:18">(<expr pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:13">r</name> <operator pos:start="23:15" pos:end="23:15">&lt;</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>)</condition> <block pos:start="23:20" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:21">

            <return pos:start="25:13" pos:end="25:21">return <expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">r</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:73"><expr pos:start="29:9" pos:end="29:72"><call pos:start="29:9" pos:end="29:72"><name pos:start="29:9" pos:end="29:50">virtio_queue_set_guest_notifier_fd_handler</name><argument_list pos:start="29:51" pos:end="29:72">(<argument pos:start="29:52" pos:end="29:53"><expr pos:start="29:52" pos:end="29:53"><name pos:start="29:52" pos:end="29:53">vq</name></expr></argument>, <argument pos:start="29:56" pos:end="29:59"><expr pos:start="29:56" pos:end="29:59"><name pos:start="29:56" pos:end="29:59">true</name></expr></argument>, <argument pos:start="29:62" pos:end="29:71"><expr pos:start="29:62" pos:end="29:71"><name pos:start="29:62" pos:end="29:71">with_irqfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="37:5">else <block pos:start="31:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:41">

        <expr_stmt pos:start="33:9" pos:end="33:74"><expr pos:start="33:9" pos:end="33:73"><call pos:start="33:9" pos:end="33:73"><name pos:start="33:9" pos:end="33:50">virtio_queue_set_guest_notifier_fd_handler</name><argument_list pos:start="33:51" pos:end="33:73">(<argument pos:start="33:52" pos:end="33:53"><expr pos:start="33:52" pos:end="33:53"><name pos:start="33:52" pos:end="33:53">vq</name></expr></argument>, <argument pos:start="33:56" pos:end="33:60"><expr pos:start="33:56" pos:end="33:60"><name pos:start="33:56" pos:end="33:60">false</name></expr></argument>, <argument pos:start="33:63" pos:end="33:72"><expr pos:start="33:63" pos:end="33:72"><name pos:start="33:63" pos:end="33:72">with_irqfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><call pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:30">event_notifier_cleanup</name><argument_list pos:start="35:31" pos:end="35:40">(<argument pos:start="35:32" pos:end="35:39"><expr pos:start="35:32" pos:end="35:39"><name pos:start="35:32" pos:end="35:39">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:33">(<expr pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:11">vdc</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:32">guest_notifier_mask</name></name></expr>)</condition> <block pos:start="41:35" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:51">

        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><call pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:11">vdc</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:32">guest_notifier_mask</name></name><argument_list pos:start="43:33" pos:end="43:50">(<argument pos:start="43:34" pos:end="43:37"><expr pos:start="43:34" pos:end="43:37"><name pos:start="43:34" pos:end="43:37">vdev</name></expr></argument>, <argument pos:start="43:40" pos:end="43:40"><expr pos:start="43:40" pos:end="43:40"><name pos:start="43:40" pos:end="43:40">n</name></expr></argument>, <argument pos:start="43:43" pos:end="43:49"><expr pos:start="43:43" pos:end="43:49"><operator pos:start="43:43" pos:end="43:43">!</operator><name pos:start="43:44" pos:end="43:49">assign</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
