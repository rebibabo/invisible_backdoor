<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22416.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">ff_aac_ac3_parse</name><parameter_list pos:start="1:21" pos:end="7:54">(<parameter pos:start="1:22" pos:end="1:45"><decl pos:start="1:22" pos:end="1:45"><type pos:start="1:22" pos:end="1:45"><name pos:start="1:22" pos:end="1:41">AVCodecParserContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">s1</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:42"><decl pos:start="3:22" pos:end="3:42"><type pos:start="3:22" pos:end="3:42"><name pos:start="3:22" pos:end="3:35">AVCodecContext</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:42">avctx</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:44"><decl pos:start="5:22" pos:end="5:44"><type pos:start="5:22" pos:end="5:44"><specifier pos:start="5:22" pos:end="5:26">const</specifier> <name pos:start="5:28" pos:end="5:34">uint8_t</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier><modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:44">poutbuf</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:63"><decl pos:start="5:47" pos:end="5:63"><type pos:start="5:47" pos:end="5:63"><name pos:start="5:47" pos:end="5:49">int</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:63">poutbuf_size</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:39"><decl pos:start="7:22" pos:end="7:39"><type pos:start="7:22" pos:end="7:39"><specifier pos:start="7:22" pos:end="7:26">const</specifier> <name pos:start="7:28" pos:end="7:34">uint8_t</name> <modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:39">buf</name></decl></parameter>, <parameter pos:start="7:42" pos:end="7:53"><decl pos:start="7:42" pos:end="7:53"><type pos:start="7:42" pos:end="7:53"><name pos:start="7:42" pos:end="7:44">int</name></type> <name pos:start="7:46" pos:end="7:53">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="121:1">{<block_content pos:start="11:5" pos:end="119:25">

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">AACAC3ParseContext</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:25">s</name> <init pos:start="11:27" pos:end="11:41">= <expr pos:start="11:29" pos:end="11:41"><name pos:start="11:29" pos:end="11:41"><name pos:start="11:29" pos:end="11:30">s1</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:54"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">len</name></decl>, <decl pos:start="15:14" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:24">sample_rate</name></decl>, <decl pos:start="15:27" pos:end="15:34"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:27" pos:end="15:34">bit_rate</name></decl>, <decl pos:start="15:37" pos:end="15:44"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:37" pos:end="15:44">channels</name></decl>, <decl pos:start="15:47" pos:end="15:53"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:47" pos:end="15:53">samples</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:12">poutbuf</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><operator pos:start="21:5" pos:end="21:5">*</operator><name pos:start="21:6" pos:end="21:17">poutbuf_size</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:11">buf_ptr</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:17">buf</name></expr>;</expr_stmt>

    <while pos:start="27:5" pos:end="117:5">while <condition pos:start="27:11" pos:end="27:24">(<expr pos:start="27:12" pos:end="27:23"><name pos:start="27:12" pos:end="27:19">buf_size</name> <operator pos:start="27:21" pos:end="27:21">&gt;</operator> <literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr>)</condition> <block pos:start="27:26" pos:end="117:5">{<block_content pos:start="29:9" pos:end="115:9">

        <decl_stmt pos:start="29:9" pos:end="29:72"><decl pos:start="29:9" pos:end="29:71"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:23">size_needed</name><init pos:start="29:24" pos:end="29:71">= <expr pos:start="29:26" pos:end="29:71"><ternary pos:start="29:26" pos:end="29:71"><condition pos:start="29:26" pos:end="29:40"><expr pos:start="29:26" pos:end="29:38"><name pos:start="29:26" pos:end="29:38"><name pos:start="29:26" pos:end="29:26">s</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:38">frame_size</name></name></expr> ?</condition><then pos:start="29:42" pos:end="29:54"> <expr pos:start="29:42" pos:end="29:54"><name pos:start="29:42" pos:end="29:54"><name pos:start="29:42" pos:end="29:42">s</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:54">frame_size</name></name></expr> </then><else pos:start="29:56" pos:end="29:71">: <expr pos:start="29:58" pos:end="29:71"><name pos:start="29:58" pos:end="29:71"><name pos:start="29:58" pos:end="29:58">s</name><operator pos:start="29:59" pos:end="29:60">-&gt;</operator><name pos:start="29:61" pos:end="29:71">header_size</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:11">len</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:26"><name pos:start="31:15" pos:end="31:15">s</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:26">inbuf_ptr</name></name> <operator pos:start="31:28" pos:end="31:28">-</operator> <name pos:start="31:30" pos:end="31:37"><name pos:start="31:30" pos:end="31:30">s</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:37">inbuf</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="35:9" pos:end="47:9"><if pos:start="35:9" pos:end="47:9">if<condition pos:start="35:11" pos:end="35:27">(<expr pos:start="35:12" pos:end="35:26"><name pos:start="35:12" pos:end="35:14">len</name><operator pos:start="35:15" pos:end="35:15">&lt;</operator><name pos:start="35:16" pos:end="35:26">size_needed</name></expr>)</condition><block pos:start="35:28" pos:end="47:9">{<block_content pos:start="37:13" pos:end="45:32">

            <expr_stmt pos:start="37:13" pos:end="37:53"><expr pos:start="37:13" pos:end="37:52"><name pos:start="37:13" pos:end="37:15">len</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:52"><name pos:start="37:19" pos:end="37:23">FFMIN</name><argument_list pos:start="37:24" pos:end="37:52">(<argument pos:start="37:25" pos:end="37:41"><expr pos:start="37:25" pos:end="37:41"><name pos:start="37:25" pos:end="37:35">size_needed</name> <operator pos:start="37:37" pos:end="37:37">-</operator> <name pos:start="37:39" pos:end="37:41">len</name></expr></argument>, <argument pos:start="37:44" pos:end="37:51"><expr pos:start="37:44" pos:end="37:51"><name pos:start="37:44" pos:end="37:51">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:47"><expr pos:start="39:13" pos:end="39:46"><call pos:start="39:13" pos:end="39:46"><name pos:start="39:13" pos:end="39:18">memcpy</name><argument_list pos:start="39:19" pos:end="39:46">(<argument pos:start="39:20" pos:end="39:31"><expr pos:start="39:20" pos:end="39:31"><name pos:start="39:20" pos:end="39:31"><name pos:start="39:20" pos:end="39:20">s</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:31">inbuf_ptr</name></name></expr></argument>, <argument pos:start="39:34" pos:end="39:40"><expr pos:start="39:34" pos:end="39:40"><name pos:start="39:34" pos:end="39:40">buf_ptr</name></expr></argument>, <argument pos:start="39:43" pos:end="39:45"><expr pos:start="39:43" pos:end="39:45"><name pos:start="39:43" pos:end="39:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:32"><expr pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:19">buf_ptr</name>      <operator pos:start="41:26" pos:end="41:27">+=</operator> <name pos:start="41:29" pos:end="41:31">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:32"><expr pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:24">inbuf_ptr</name></name> <operator pos:start="43:26" pos:end="43:27">+=</operator> <name pos:start="43:29" pos:end="43:31">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:32"><expr pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:20">buf_size</name>     <operator pos:start="45:26" pos:end="45:27">-=</operator> <name pos:start="45:29" pos:end="45:31">len</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="51:9" pos:end="115:9"><if pos:start="51:9" pos:end="99:9">if <condition pos:start="51:12" pos:end="51:31">(<expr pos:start="51:13" pos:end="51:30"><name pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:25">frame_size</name></name> <operator pos:start="51:27" pos:end="51:28">==</operator> <literal type="number" pos:start="51:30" pos:end="51:30">0</literal></expr>)</condition> <block pos:start="51:33" pos:end="99:9">{<block_content pos:start="53:13" pos:end="97:13">

            <if_stmt pos:start="53:13" pos:end="97:13"><if pos:start="53:13" pos:end="97:13">if <condition pos:start="53:16" pos:end="53:60">(<expr pos:start="53:17" pos:end="53:59"><operator pos:start="53:17" pos:end="53:17">(</operator><name pos:start="53:18" pos:end="53:29"><name pos:start="53:18" pos:end="53:18">s</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:29">inbuf_ptr</name></name> <operator pos:start="53:31" pos:end="53:31">-</operator> <name pos:start="53:33" pos:end="53:40"><name pos:start="53:33" pos:end="53:33">s</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:40">inbuf</name></name><operator pos:start="53:41" pos:end="53:41">)</operator> <operator pos:start="53:43" pos:end="53:44">==</operator> <name pos:start="53:46" pos:end="53:59"><name pos:start="53:46" pos:end="53:46">s</name><operator pos:start="53:47" pos:end="53:48">-&gt;</operator><name pos:start="53:49" pos:end="53:59">header_size</name></name></expr>)</condition> <block pos:start="53:62" pos:end="97:13">{<block_content pos:start="55:17" pos:end="95:17">

                <expr_stmt pos:start="55:17" pos:end="57:40"><expr pos:start="55:17" pos:end="57:39"><name pos:start="55:17" pos:end="55:19">len</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <call pos:start="55:23" pos:end="57:39"><name pos:start="55:23" pos:end="55:29"><name pos:start="55:23" pos:end="55:23">s</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:29">sync</name></name><argument_list pos:start="55:30" pos:end="57:39">(<argument pos:start="55:31" pos:end="55:38"><expr pos:start="55:31" pos:end="55:38"><name pos:start="55:31" pos:end="55:38"><name pos:start="55:31" pos:end="55:31">s</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:38">inbuf</name></name></expr></argument>, <argument pos:start="55:41" pos:end="55:49"><expr pos:start="55:41" pos:end="55:49"><operator pos:start="55:41" pos:end="55:41">&amp;</operator><name pos:start="55:42" pos:end="55:49">channels</name></expr></argument>, <argument pos:start="55:52" pos:end="55:63"><expr pos:start="55:52" pos:end="55:63"><operator pos:start="55:52" pos:end="55:52">&amp;</operator><name pos:start="55:53" pos:end="55:63">sample_rate</name></expr></argument>, <argument pos:start="55:66" pos:end="55:74"><expr pos:start="55:66" pos:end="55:74"><operator pos:start="55:66" pos:end="55:66">&amp;</operator><name pos:start="55:67" pos:end="55:74">bit_rate</name></expr></argument>,

                              <argument pos:start="57:31" pos:end="57:38"><expr pos:start="57:31" pos:end="57:38"><operator pos:start="57:31" pos:end="57:31">&amp;</operator><name pos:start="57:32" pos:end="57:38">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="59:17" pos:end="95:17"><if pos:start="59:17" pos:end="67:17">if <condition pos:start="59:20" pos:end="59:29">(<expr pos:start="59:21" pos:end="59:28"><name pos:start="59:21" pos:end="59:23">len</name> <operator pos:start="59:25" pos:end="59:26">==</operator> <literal type="number" pos:start="59:28" pos:end="59:28">0</literal></expr>)</condition> <block pos:start="59:31" pos:end="67:17">{<block_content pos:start="63:21" pos:end="65:35">

                    <comment type="block" pos:start="61:21" pos:end="61:85">/* no sync found : move by one byte (inefficient, but simple!) */</comment>

                    <expr_stmt pos:start="63:21" pos:end="63:72"><expr pos:start="63:21" pos:end="63:71"><call pos:start="63:21" pos:end="63:71"><name pos:start="63:21" pos:end="63:27">memmove</name><argument_list pos:start="63:28" pos:end="63:71">(<argument pos:start="63:29" pos:end="63:36"><expr pos:start="63:29" pos:end="63:36"><name pos:start="63:29" pos:end="63:36"><name pos:start="63:29" pos:end="63:29">s</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:36">inbuf</name></name></expr></argument>, <argument pos:start="63:39" pos:end="63:50"><expr pos:start="63:39" pos:end="63:50"><name pos:start="63:39" pos:end="63:46"><name pos:start="63:39" pos:end="63:39">s</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:46">inbuf</name></name> <operator pos:start="63:48" pos:end="63:48">+</operator> <literal type="number" pos:start="63:50" pos:end="63:50">1</literal></expr></argument>, <argument pos:start="63:53" pos:end="63:70"><expr pos:start="63:53" pos:end="63:70"><name pos:start="63:53" pos:end="63:66"><name pos:start="63:53" pos:end="63:53">s</name><operator pos:start="63:54" pos:end="63:55">-&gt;</operator><name pos:start="63:56" pos:end="63:66">header_size</name></name> <operator pos:start="63:68" pos:end="63:68">-</operator> <literal type="number" pos:start="63:70" pos:end="63:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:35"><expr pos:start="65:21" pos:end="65:34"><name pos:start="65:21" pos:end="65:32"><name pos:start="65:21" pos:end="65:21">s</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:32">inbuf_ptr</name></name><operator pos:start="65:33" pos:end="65:34">--</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="67:19" pos:end="95:17">else <block pos:start="67:24" pos:end="95:17">{<block_content pos:start="69:21" pos:end="93:48">

                    <expr_stmt pos:start="69:21" pos:end="69:40"><expr pos:start="69:21" pos:end="69:39"><name pos:start="69:21" pos:end="69:33"><name pos:start="69:21" pos:end="69:21">s</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:33">frame_size</name></name> <operator pos:start="69:35" pos:end="69:35">=</operator> <name pos:start="69:37" pos:end="69:39">len</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="71:21" pos:end="71:43">/* update codec info */</comment>

                    <expr_stmt pos:start="73:21" pos:end="73:53"><expr pos:start="73:21" pos:end="73:52"><name pos:start="73:21" pos:end="73:38"><name pos:start="73:21" pos:end="73:25">avctx</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:38">sample_rate</name></name> <operator pos:start="73:40" pos:end="73:40">=</operator> <name pos:start="73:42" pos:end="73:52">sample_rate</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:47"><expr pos:start="75:21" pos:end="75:46"><name pos:start="75:21" pos:end="75:35"><name pos:start="75:21" pos:end="75:25">avctx</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:35">channels</name></name> <operator pos:start="75:37" pos:end="75:37">=</operator> <name pos:start="75:39" pos:end="75:46">channels</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="77:21" pos:end="77:68">/* allow downmixing to mono or stereo for AC3 */</comment>

                    <if_stmt pos:start="79:21" pos:end="89:21"><if pos:start="79:21" pos:end="89:21">if<condition pos:start="79:23" pos:end="85:60">(<expr pos:start="79:24" pos:end="85:59"><name pos:start="79:24" pos:end="79:46"><name pos:start="79:24" pos:end="79:28">avctx</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:46">request_channels</name></name> <operator pos:start="79:48" pos:end="79:48">&gt;</operator> <literal type="number" pos:start="79:50" pos:end="79:50">0</literal> <operator pos:start="79:52" pos:end="79:53">&amp;&amp;</operator>

                            <name pos:start="81:29" pos:end="81:51"><name pos:start="81:29" pos:end="81:33">avctx</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:51">request_channels</name></name> <operator pos:start="81:53" pos:end="81:53">&lt;</operator> <name pos:start="81:55" pos:end="81:62">channels</name> <operator pos:start="81:64" pos:end="81:65">&amp;&amp;</operator>

                            <name pos:start="83:29" pos:end="83:51"><name pos:start="83:29" pos:end="83:33">avctx</name><operator pos:start="83:34" pos:end="83:35">-&gt;</operator><name pos:start="83:36" pos:end="83:51">request_channels</name></name> <operator pos:start="83:53" pos:end="83:54">&lt;=</operator> <literal type="number" pos:start="83:56" pos:end="83:56">2</literal> <operator pos:start="83:58" pos:end="83:59">&amp;&amp;</operator>

                            <name pos:start="85:29" pos:end="85:43"><name pos:start="85:29" pos:end="85:33">avctx</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:43">codec_id</name></name> <operator pos:start="85:45" pos:end="85:46">==</operator> <name pos:start="85:48" pos:end="85:59">CODEC_ID_AC3</name></expr>)</condition> <block pos:start="85:62" pos:end="89:21">{<block_content pos:start="87:25" pos:end="87:66">

                        <expr_stmt pos:start="87:25" pos:end="87:66"><expr pos:start="87:25" pos:end="87:65"><name pos:start="87:25" pos:end="87:39"><name pos:start="87:25" pos:end="87:29">avctx</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:39">channels</name></name> <operator pos:start="87:41" pos:end="87:41">=</operator> <name pos:start="87:43" pos:end="87:65"><name pos:start="87:43" pos:end="87:47">avctx</name><operator pos:start="87:48" pos:end="87:49">-&gt;</operator><name pos:start="87:50" pos:end="87:65">request_channels</name></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:47"><expr pos:start="91:21" pos:end="91:46"><name pos:start="91:21" pos:end="91:35"><name pos:start="91:21" pos:end="91:25">avctx</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:35">bit_rate</name></name> <operator pos:start="91:37" pos:end="91:37">=</operator> <name pos:start="91:39" pos:end="91:46">bit_rate</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:48"><expr pos:start="93:21" pos:end="93:47"><name pos:start="93:21" pos:end="93:37"><name pos:start="93:21" pos:end="93:25">avctx</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:37">frame_size</name></name> <operator pos:start="93:39" pos:end="93:39">=</operator> <name pos:start="93:41" pos:end="93:47">samples</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="99:11" pos:end="115:9">else <block pos:start="99:16" pos:end="115:9">{<block_content pos:start="101:13" pos:end="113:13">

            <if_stmt pos:start="101:13" pos:end="113:13"><if pos:start="101:13" pos:end="113:13">if<condition pos:start="101:15" pos:end="101:56">(<expr pos:start="101:16" pos:end="101:55"><name pos:start="101:16" pos:end="101:27"><name pos:start="101:16" pos:end="101:16">s</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:27">inbuf_ptr</name></name> <operator pos:start="101:29" pos:end="101:29">-</operator> <name pos:start="101:31" pos:end="101:38"><name pos:start="101:31" pos:end="101:31">s</name><operator pos:start="101:32" pos:end="101:33">-&gt;</operator><name pos:start="101:34" pos:end="101:38">inbuf</name></name> <operator pos:start="101:40" pos:end="101:41">==</operator> <name pos:start="101:43" pos:end="101:55"><name pos:start="101:43" pos:end="101:43">s</name><operator pos:start="101:44" pos:end="101:45">-&gt;</operator><name pos:start="101:46" pos:end="101:55">frame_size</name></name></expr>)</condition><block pos:start="101:57" pos:end="113:13">{<block_content pos:start="103:17" pos:end="111:22">

                <expr_stmt pos:start="103:17" pos:end="103:36"><expr pos:start="103:17" pos:end="103:35"><operator pos:start="103:17" pos:end="103:17">*</operator><name pos:start="103:18" pos:end="103:24">poutbuf</name> <operator pos:start="103:26" pos:end="103:26">=</operator> <name pos:start="103:28" pos:end="103:35"><name pos:start="103:28" pos:end="103:28">s</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:35">inbuf</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:46"><expr pos:start="105:17" pos:end="105:45"><operator pos:start="105:17" pos:end="105:17">*</operator><name pos:start="105:18" pos:end="105:29">poutbuf_size</name> <operator pos:start="105:31" pos:end="105:31">=</operator> <name pos:start="105:33" pos:end="105:45"><name pos:start="105:33" pos:end="105:33">s</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:45">frame_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:40"><expr pos:start="107:17" pos:end="107:39"><name pos:start="107:17" pos:end="107:28"><name pos:start="107:17" pos:end="107:17">s</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:28">inbuf_ptr</name></name> <operator pos:start="107:30" pos:end="107:30">=</operator> <name pos:start="107:32" pos:end="107:39"><name pos:start="107:32" pos:end="107:32">s</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:39">inbuf</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:34"><expr pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:29"><name pos:start="109:17" pos:end="109:17">s</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:29">frame_size</name></name> <operator pos:start="109:31" pos:end="109:31">=</operator> <literal type="number" pos:start="109:33" pos:end="109:33">0</literal></expr>;</expr_stmt>

                <break pos:start="111:17" pos:end="111:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <return pos:start="119:5" pos:end="119:25">return <expr pos:start="119:12" pos:end="119:24"><name pos:start="119:12" pos:end="119:18">buf_ptr</name> <operator pos:start="119:20" pos:end="119:20">-</operator> <name pos:start="119:22" pos:end="119:24">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
