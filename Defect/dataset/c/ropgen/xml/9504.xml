<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9504.c" pos:tabs="8"><macro pos:start="1:1" pos:end="7:51"><name pos:start="1:1" pos:end="1:27">virtio_crypto_sym_op_helper</name><argument_list pos:start="1:28" pos:end="7:51">(<argument pos:start="1:29" pos:end="1:46">VirtIODevice *vdev</argument>,

           <argument pos:start="3:12" pos:end="3:56">struct virtio_crypto_cipher_para *cipher_para</argument>,

           <argument pos:start="5:12" pos:end="5:67">struct virtio_crypto_alg_chain_data_para *alg_chain_para</argument>,

           <argument pos:start="7:12" pos:end="7:28">struct iovec *iov</argument>, <argument pos:start="7:31" pos:end="7:50">unsigned int out_num</argument>)</argument_list></macro>

<block pos:start="9:1" pos:end="231:1">{<block_content pos:start="11:5" pos:end="229:16">

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">VirtIOCrypto</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:25">vcrypto</name> <init pos:start="11:27" pos:end="11:47">= <expr pos:start="11:29" pos:end="11:47"><call pos:start="11:29" pos:end="11:47"><name pos:start="11:29" pos:end="11:41">VIRTIO_CRYPTO</name><argument_list pos:start="11:42" pos:end="11:47">(<argument pos:start="11:43" pos:end="11:46"><expr pos:start="11:43" pos:end="11:46"><name pos:start="11:43" pos:end="11:46">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:29">CryptoDevBackendSymOpInfo</name> <modifier pos:start="13:31" pos:end="13:31">*</modifier></type><name pos:start="13:32" pos:end="13:38">op_info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:20">src_len</name> <init pos:start="15:22" pos:end="15:24">= <expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr></init></decl>, <decl pos:start="15:27" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:27" pos:end="15:33">dst_len</name> <init pos:start="15:35" pos:end="15:37">= <expr pos:start="15:37" pos:end="15:37"><literal type="number" pos:start="15:37" pos:end="15:37">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:19">iv_len</name> <init pos:start="17:21" pos:end="17:23">= <expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:46"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:20">aad_len</name> <init pos:start="19:22" pos:end="19:24">= <expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr></init></decl>, <decl pos:start="19:27" pos:end="19:45"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:27" pos:end="19:41">hash_result_len</name> <init pos:start="19:43" pos:end="19:45">= <expr pos:start="19:45" pos:end="19:45"><literal type="number" pos:start="19:45" pos:end="19:45">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:56"><decl pos:start="21:5" pos:end="21:38"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:34">hash_start_src_offset</name> <init pos:start="21:36" pos:end="21:38">= <expr pos:start="21:38" pos:end="21:38"><literal type="number" pos:start="21:38" pos:end="21:38">0</literal></expr></init></decl>, <decl pos:start="21:41" pos:end="21:55"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:41" pos:end="21:51">len_to_hash</name> <init pos:start="21:53" pos:end="21:55">= <expr pos:start="21:55" pos:end="21:55"><literal type="number" pos:start="21:55" pos:end="21:55">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:60"><decl pos:start="23:5" pos:end="23:40"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint32_t</name></type> <name pos:start="23:14" pos:end="23:36">cipher_start_src_offset</name> <init pos:start="23:38" pos:end="23:40">= <expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">0</literal></expr></init></decl>, <decl pos:start="23:43" pos:end="23:59"><type ref="prev" pos:start="23:5" pos:end="23:12"/><name pos:start="23:43" pos:end="23:55">len_to_cipher</name> <init pos:start="23:57" pos:end="23:59">= <expr pos:start="23:59" pos:end="23:59"><literal type="number" pos:start="23:59" pos:end="23:59">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="27:5" pos:end="27:34"><decl pos:start="27:5" pos:end="27:18"><type pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:10">size_t</name></type> <name pos:start="27:12" pos:end="27:18">max_len</name></decl>, <decl pos:start="27:21" pos:end="27:33"><type ref="prev" pos:start="27:5" pos:end="27:10"/><name pos:start="27:21" pos:end="27:29">curr_size</name> <init pos:start="27:31" pos:end="27:33">= <expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:13"><decl pos:start="29:5" pos:end="29:12"><type pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:10">size_t</name></type> <name pos:start="29:12" pos:end="29:12">s</name></decl>;</decl_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:22">/* Plain cipher */</comment>

    <if_stmt pos:start="35:5" pos:end="73:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:20">(<expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:19">cipher_para</name></expr>)</condition> <block pos:start="35:22" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:55">

        <expr_stmt pos:start="37:9" pos:end="37:48"><expr pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:14">iv_len</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:47"><name pos:start="37:18" pos:end="37:25">ldl_le_p</name><argument_list pos:start="37:26" pos:end="37:47">(<argument pos:start="37:27" pos:end="37:46"><expr pos:start="37:27" pos:end="37:46"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:46"><name pos:start="37:28" pos:end="37:38">cipher_para</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:46">iv_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:55"><expr pos:start="39:9" pos:end="39:54"><name pos:start="39:9" pos:end="39:15">src_len</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:54"><name pos:start="39:19" pos:end="39:26">ldl_le_p</name><argument_list pos:start="39:27" pos:end="39:54">(<argument pos:start="39:28" pos:end="39:53"><expr pos:start="39:28" pos:end="39:53"><operator pos:start="39:28" pos:end="39:28">&amp;</operator><name pos:start="39:29" pos:end="39:53"><name pos:start="39:29" pos:end="39:39">cipher_para</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:53">src_data_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:55"><expr pos:start="41:9" pos:end="41:54"><name pos:start="41:9" pos:end="41:15">dst_len</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:54"><name pos:start="41:19" pos:end="41:26">ldl_le_p</name><argument_list pos:start="41:27" pos:end="41:54">(<argument pos:start="41:28" pos:end="41:53"><expr pos:start="41:28" pos:end="41:53"><operator pos:start="41:28" pos:end="41:28">&amp;</operator><name pos:start="41:29" pos:end="41:53"><name pos:start="41:29" pos:end="41:39">cipher_para</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:53">dst_data_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="69:5">else if <condition pos:start="43:15" pos:end="43:30">(<expr pos:start="43:16" pos:end="43:29"><name pos:start="43:16" pos:end="43:29">alg_chain_para</name></expr>)</condition> <block pos:start="43:32" pos:end="69:5">{<block_content pos:start="45:9" pos:end="67:61"> <comment type="block" pos:start="43:34" pos:end="43:54">/* Algorithm chain */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:51"><expr pos:start="45:9" pos:end="45:50"><name pos:start="45:9" pos:end="45:14">iv_len</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:50"><name pos:start="45:18" pos:end="45:25">ldl_le_p</name><argument_list pos:start="45:26" pos:end="45:50">(<argument pos:start="45:27" pos:end="45:49"><expr pos:start="45:27" pos:end="45:49"><operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:49"><name pos:start="45:28" pos:end="45:41">alg_chain_para</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:49">iv_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:58"><expr pos:start="47:9" pos:end="47:57"><name pos:start="47:9" pos:end="47:15">src_len</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="47:57"><name pos:start="47:19" pos:end="47:26">ldl_le_p</name><argument_list pos:start="47:27" pos:end="47:57">(<argument pos:start="47:28" pos:end="47:56"><expr pos:start="47:28" pos:end="47:56"><operator pos:start="47:28" pos:end="47:28">&amp;</operator><name pos:start="47:29" pos:end="47:56"><name pos:start="47:29" pos:end="47:42">alg_chain_para</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:56">src_data_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:58"><expr pos:start="49:9" pos:end="49:57"><name pos:start="49:9" pos:end="49:15">dst_len</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:57"><name pos:start="49:19" pos:end="49:26">ldl_le_p</name><argument_list pos:start="49:27" pos:end="49:57">(<argument pos:start="49:28" pos:end="49:56"><expr pos:start="49:28" pos:end="49:56"><operator pos:start="49:28" pos:end="49:28">&amp;</operator><name pos:start="49:29" pos:end="49:56"><name pos:start="49:29" pos:end="49:42">alg_chain_para</name><operator pos:start="49:43" pos:end="49:44">-&gt;</operator><name pos:start="49:45" pos:end="49:56">dst_data_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:53"><expr pos:start="53:9" pos:end="53:52"><name pos:start="53:9" pos:end="53:15">aad_len</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:52"><name pos:start="53:19" pos:end="53:26">ldl_le_p</name><argument_list pos:start="53:27" pos:end="53:52">(<argument pos:start="53:28" pos:end="53:51"><expr pos:start="53:28" pos:end="53:51"><operator pos:start="53:28" pos:end="53:28">&amp;</operator><name pos:start="53:29" pos:end="53:51"><name pos:start="53:29" pos:end="53:42">alg_chain_para</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:51">aad_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:69"><expr pos:start="55:9" pos:end="55:68"><name pos:start="55:9" pos:end="55:23">hash_result_len</name> <operator pos:start="55:25" pos:end="55:25">=</operator> <call pos:start="55:27" pos:end="55:68"><name pos:start="55:27" pos:end="55:34">ldl_le_p</name><argument_list pos:start="55:35" pos:end="55:68">(<argument pos:start="55:36" pos:end="55:67"><expr pos:start="55:36" pos:end="55:67"><operator pos:start="55:36" pos:end="55:36">&amp;</operator><name pos:start="55:37" pos:end="55:67"><name pos:start="55:37" pos:end="55:50">alg_chain_para</name><operator pos:start="55:51" pos:end="55:52">-&gt;</operator><name pos:start="55:53" pos:end="55:67">hash_result_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="59:65"><expr pos:start="57:9" pos:end="59:64"><name pos:start="57:9" pos:end="57:29">hash_start_src_offset</name> <operator pos:start="57:31" pos:end="57:31">=</operator> <call pos:start="57:33" pos:end="59:64"><name pos:start="57:33" pos:end="57:40">ldl_le_p</name><argument_list pos:start="57:41" pos:end="59:64">(

                         <argument pos:start="59:26" pos:end="59:63"><expr pos:start="59:26" pos:end="59:63"><operator pos:start="59:26" pos:end="59:26">&amp;</operator><name pos:start="59:27" pos:end="59:63"><name pos:start="59:27" pos:end="59:40">alg_chain_para</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:63">hash_start_src_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="63:67"><expr pos:start="61:9" pos:end="63:66"><name pos:start="61:9" pos:end="61:31">cipher_start_src_offset</name> <operator pos:start="61:33" pos:end="61:33">=</operator> <call pos:start="61:35" pos:end="63:66"><name pos:start="61:35" pos:end="61:42">ldl_le_p</name><argument_list pos:start="61:43" pos:end="63:66">(

                         <argument pos:start="63:26" pos:end="63:65"><expr pos:start="63:26" pos:end="63:65"><operator pos:start="63:26" pos:end="63:26">&amp;</operator><name pos:start="63:27" pos:end="63:65"><name pos:start="63:27" pos:end="63:40">alg_chain_para</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:65">cipher_start_src_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:65"><expr pos:start="65:9" pos:end="65:64"><name pos:start="65:9" pos:end="65:21">len_to_cipher</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <call pos:start="65:25" pos:end="65:64"><name pos:start="65:25" pos:end="65:32">ldl_le_p</name><argument_list pos:start="65:33" pos:end="65:64">(<argument pos:start="65:34" pos:end="65:63"><expr pos:start="65:34" pos:end="65:63"><operator pos:start="65:34" pos:end="65:34">&amp;</operator><name pos:start="65:35" pos:end="65:63"><name pos:start="65:35" pos:end="65:48">alg_chain_para</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:63">len_to_cipher</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:61"><expr pos:start="67:9" pos:end="67:60"><name pos:start="67:9" pos:end="67:19">len_to_hash</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <call pos:start="67:23" pos:end="67:60"><name pos:start="67:23" pos:end="67:30">ldl_le_p</name><argument_list pos:start="67:31" pos:end="67:60">(<argument pos:start="67:32" pos:end="67:59"><expr pos:start="67:32" pos:end="67:59"><operator pos:start="67:32" pos:end="67:32">&amp;</operator><name pos:start="67:33" pos:end="67:59"><name pos:start="67:33" pos:end="67:46">alg_chain_para</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:59">len_to_hash</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="73:5">else <block pos:start="69:12" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:20">

        <return pos:start="71:9" pos:end="71:20">return <expr pos:start="71:16" pos:end="71:19"><name pos:start="71:16" pos:end="71:19">NULL</name></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:69"><expr pos:start="77:5" pos:end="77:68"><name pos:start="77:5" pos:end="77:11">max_len</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:20">iv_len</name> <operator pos:start="77:22" pos:end="77:22">+</operator> <name pos:start="77:24" pos:end="77:30">aad_len</name> <operator pos:start="77:32" pos:end="77:32">+</operator> <name pos:start="77:34" pos:end="77:40">src_len</name> <operator pos:start="77:42" pos:end="77:42">+</operator> <name pos:start="77:44" pos:end="77:50">dst_len</name> <operator pos:start="77:52" pos:end="77:52">+</operator> <name pos:start="77:54" pos:end="77:68">hash_result_len</name></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:51">(<expr pos:start="79:9" pos:end="79:50"><call pos:start="79:9" pos:end="79:50"><name pos:start="79:9" pos:end="79:16">unlikely</name><argument_list pos:start="79:17" pos:end="79:50">(<argument pos:start="79:18" pos:end="79:49"><expr pos:start="79:18" pos:end="79:49"><name pos:start="79:18" pos:end="79:24">max_len</name> <operator pos:start="79:26" pos:end="79:26">&gt;</operator> <name pos:start="79:28" pos:end="79:49"><name pos:start="79:28" pos:end="79:34">vcrypto</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:40">conf</name><operator pos:start="79:41" pos:end="79:41">.</operator><name pos:start="79:42" pos:end="79:49">max_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:53" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:20">

        <expr_stmt pos:start="81:9" pos:end="81:59"><expr pos:start="81:9" pos:end="81:58"><call pos:start="81:9" pos:end="81:58"><name pos:start="81:9" pos:end="81:20">virtio_error</name><argument_list pos:start="81:21" pos:end="81:58">(<argument pos:start="81:22" pos:end="81:25"><expr pos:start="81:22" pos:end="81:25"><name pos:start="81:22" pos:end="81:25">vdev</name></expr></argument>, <argument pos:start="81:28" pos:end="81:57"><expr pos:start="81:28" pos:end="81:57"><literal type="string" pos:start="81:28" pos:end="81:57">"virtio-crypto too big length"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:20">return <expr pos:start="83:16" pos:end="83:19"><name pos:start="83:16" pos:end="83:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:69"><expr pos:start="89:5" pos:end="89:68"><name pos:start="89:5" pos:end="89:11">op_info</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:68"><name pos:start="89:15" pos:end="89:23">g_malloc0</name><argument_list pos:start="89:24" pos:end="89:68">(<argument pos:start="89:25" pos:end="89:67"><expr pos:start="89:25" pos:end="89:67"><sizeof pos:start="89:25" pos:end="89:57">sizeof<argument_list pos:start="89:31" pos:end="89:57">(<argument pos:start="89:32" pos:end="89:56"><expr pos:start="89:32" pos:end="89:56"><name pos:start="89:32" pos:end="89:56">CryptoDevBackendSymOpInfo</name></expr></argument>)</argument_list></sizeof> <operator pos:start="89:59" pos:end="89:59">+</operator> <name pos:start="89:61" pos:end="89:67">max_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:29"><expr pos:start="91:5" pos:end="91:28"><name pos:start="91:5" pos:end="91:19"><name pos:start="91:5" pos:end="91:11">op_info</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:19">iv_len</name></name> <operator pos:start="91:21" pos:end="91:21">=</operator> <name pos:start="91:23" pos:end="91:28">iv_len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:31"><expr pos:start="93:5" pos:end="93:30"><name pos:start="93:5" pos:end="93:20"><name pos:start="93:5" pos:end="93:11">op_info</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:20">src_len</name></name> <operator pos:start="93:22" pos:end="93:22">=</operator> <name pos:start="93:24" pos:end="93:30">src_len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:31"><expr pos:start="95:5" pos:end="95:30"><name pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:11">op_info</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:20">dst_len</name></name> <operator pos:start="95:22" pos:end="95:22">=</operator> <name pos:start="95:24" pos:end="95:30">dst_len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:31"><expr pos:start="97:5" pos:end="97:30"><name pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:11">op_info</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:20">aad_len</name></name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:30">aad_len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:49"><expr pos:start="99:5" pos:end="99:48"><name pos:start="99:5" pos:end="99:30"><name pos:start="99:5" pos:end="99:11">op_info</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:30">digest_result_len</name></name> <operator pos:start="99:32" pos:end="99:32">=</operator> <name pos:start="99:34" pos:end="99:48">hash_result_len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:59"><expr pos:start="101:5" pos:end="101:58"><name pos:start="101:5" pos:end="101:34"><name pos:start="101:5" pos:end="101:11">op_info</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:34">hash_start_src_offset</name></name> <operator pos:start="101:36" pos:end="101:36">=</operator> <name pos:start="101:38" pos:end="101:58">hash_start_src_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:39"><expr pos:start="103:5" pos:end="103:38"><name pos:start="103:5" pos:end="103:24"><name pos:start="103:5" pos:end="103:11">op_info</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:24">len_to_hash</name></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <name pos:start="103:28" pos:end="103:38">len_to_hash</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:63"><expr pos:start="105:5" pos:end="105:62"><name pos:start="105:5" pos:end="105:36"><name pos:start="105:5" pos:end="105:11">op_info</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:36">cipher_start_src_offset</name></name> <operator pos:start="105:38" pos:end="105:38">=</operator> <name pos:start="105:40" pos:end="105:62">cipher_start_src_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:43"><expr pos:start="107:5" pos:end="107:42"><name pos:start="107:5" pos:end="107:26"><name pos:start="107:5" pos:end="107:11">op_info</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:26">len_to_cipher</name></name> <operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:42">len_to_cipher</name></expr>;</expr_stmt>

    <comment type="block" pos:start="109:5" pos:end="109:41">/* Handle the initilization vector */</comment>

    <if_stmt pos:start="111:5" pos:end="133:5"><if pos:start="111:5" pos:end="133:5">if <condition pos:start="111:8" pos:end="111:28">(<expr pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:15">op_info</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:23">iv_len</name></name> <operator pos:start="111:25" pos:end="111:25">&gt;</operator> <literal type="number" pos:start="111:27" pos:end="111:27">0</literal></expr>)</condition> <block pos:start="111:30" pos:end="133:5">{<block_content pos:start="113:9" pos:end="131:37">

        <expr_stmt pos:start="113:9" pos:end="113:57"><expr pos:start="113:9" pos:end="113:56"><call pos:start="113:9" pos:end="113:56"><name pos:start="113:9" pos:end="113:15">DPRINTF</name><argument_list pos:start="113:16" pos:end="113:56">(<argument pos:start="113:17" pos:end="113:38"><expr pos:start="113:17" pos:end="113:38"><literal type="string" pos:start="113:17" pos:end="113:26">"iv_len=%"</literal> <name pos:start="113:28" pos:end="113:33">PRIu32</name> <literal type="string" pos:start="113:35" pos:end="113:38">"\n"</literal></expr></argument>, <argument pos:start="113:41" pos:end="113:55"><expr pos:start="113:41" pos:end="113:55"><name pos:start="113:41" pos:end="113:55"><name pos:start="113:41" pos:end="113:47">op_info</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:55">iv_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:48"><expr pos:start="115:9" pos:end="115:47"><name pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:15">op_info</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:19">iv</name></name> <operator pos:start="115:21" pos:end="115:21">=</operator> <name pos:start="115:23" pos:end="115:35"><name pos:start="115:23" pos:end="115:29">op_info</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:35">data</name></name> <operator pos:start="115:37" pos:end="115:37">+</operator> <name pos:start="115:39" pos:end="115:47">curr_size</name></expr>;</expr_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:70"><expr pos:start="119:9" pos:end="119:69"><name pos:start="119:9" pos:end="119:9">s</name> <operator pos:start="119:11" pos:end="119:11">=</operator> <call pos:start="119:13" pos:end="119:69"><name pos:start="119:13" pos:end="119:22">iov_to_buf</name><argument_list pos:start="119:23" pos:end="119:69">(<argument pos:start="119:24" pos:end="119:26"><expr pos:start="119:24" pos:end="119:26"><name pos:start="119:24" pos:end="119:26">iov</name></expr></argument>, <argument pos:start="119:29" pos:end="119:35"><expr pos:start="119:29" pos:end="119:35"><name pos:start="119:29" pos:end="119:35">out_num</name></expr></argument>, <argument pos:start="119:38" pos:end="119:38"><expr pos:start="119:38" pos:end="119:38"><literal type="number" pos:start="119:38" pos:end="119:38">0</literal></expr></argument>, <argument pos:start="119:41" pos:end="119:51"><expr pos:start="119:41" pos:end="119:51"><name pos:start="119:41" pos:end="119:51"><name pos:start="119:41" pos:end="119:47">op_info</name><operator pos:start="119:48" pos:end="119:49">-&gt;</operator><name pos:start="119:50" pos:end="119:51">iv</name></name></expr></argument>, <argument pos:start="119:54" pos:end="119:68"><expr pos:start="119:54" pos:end="119:68"><name pos:start="119:54" pos:end="119:68"><name pos:start="119:54" pos:end="119:60">op_info</name><operator pos:start="119:61" pos:end="119:62">-&gt;</operator><name pos:start="119:63" pos:end="119:68">iv_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="127:9"><if pos:start="121:9" pos:end="127:9">if <condition pos:start="121:12" pos:end="121:43">(<expr pos:start="121:13" pos:end="121:42"><call pos:start="121:13" pos:end="121:42"><name pos:start="121:13" pos:end="121:20">unlikely</name><argument_list pos:start="121:21" pos:end="121:42">(<argument pos:start="121:22" pos:end="121:41"><expr pos:start="121:22" pos:end="121:41"><name pos:start="121:22" pos:end="121:22">s</name> <operator pos:start="121:24" pos:end="121:25">!=</operator> <name pos:start="121:27" pos:end="121:41"><name pos:start="121:27" pos:end="121:33">op_info</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:41">iv_len</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="121:45" pos:end="127:9">{<block_content pos:start="123:13" pos:end="125:21">

            <expr_stmt pos:start="123:13" pos:end="123:61"><expr pos:start="123:13" pos:end="123:60"><call pos:start="123:13" pos:end="123:60"><name pos:start="123:13" pos:end="123:24">virtio_error</name><argument_list pos:start="123:25" pos:end="123:60">(<argument pos:start="123:26" pos:end="123:29"><expr pos:start="123:26" pos:end="123:29"><name pos:start="123:26" pos:end="123:29">vdev</name></expr></argument>, <argument pos:start="123:32" pos:end="123:59"><expr pos:start="123:32" pos:end="123:59"><literal type="string" pos:start="123:32" pos:end="123:59">"virtio-crypto iv incorrect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="125:13" pos:end="125:21">goto <name pos:start="125:18" pos:end="125:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:59"><expr pos:start="129:9" pos:end="129:58"><call pos:start="129:9" pos:end="129:58"><name pos:start="129:9" pos:end="129:25">iov_discard_front</name><argument_list pos:start="129:26" pos:end="129:58">(<argument pos:start="129:27" pos:end="129:30"><expr pos:start="129:27" pos:end="129:30"><operator pos:start="129:27" pos:end="129:27">&amp;</operator><name pos:start="129:28" pos:end="129:30">iov</name></expr></argument>, <argument pos:start="129:33" pos:end="129:40"><expr pos:start="129:33" pos:end="129:40"><operator pos:start="129:33" pos:end="129:33">&amp;</operator><name pos:start="129:34" pos:end="129:40">out_num</name></expr></argument>, <argument pos:start="129:43" pos:end="129:57"><expr pos:start="129:43" pos:end="129:57"><name pos:start="129:43" pos:end="129:57"><name pos:start="129:43" pos:end="129:49">op_info</name><operator pos:start="129:50" pos:end="129:51">-&gt;</operator><name pos:start="129:52" pos:end="129:57">iv_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:37"><expr pos:start="131:9" pos:end="131:36"><name pos:start="131:9" pos:end="131:17">curr_size</name> <operator pos:start="131:19" pos:end="131:20">+=</operator> <name pos:start="131:22" pos:end="131:36"><name pos:start="131:22" pos:end="131:28">op_info</name><operator pos:start="131:29" pos:end="131:30">-&gt;</operator><name pos:start="131:31" pos:end="131:36">iv_len</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:57">/* Handle additional authentication data if exists */</comment>

    <if_stmt pos:start="139:5" pos:end="163:5"><if pos:start="139:5" pos:end="163:5">if <condition pos:start="139:8" pos:end="139:29">(<expr pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:15">op_info</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:24">aad_len</name></name> <operator pos:start="139:26" pos:end="139:26">&gt;</operator> <literal type="number" pos:start="139:28" pos:end="139:28">0</literal></expr>)</condition> <block pos:start="139:31" pos:end="163:5">{<block_content pos:start="141:9" pos:end="161:38">

        <expr_stmt pos:start="141:9" pos:end="141:59"><expr pos:start="141:9" pos:end="141:58"><call pos:start="141:9" pos:end="141:58"><name pos:start="141:9" pos:end="141:15">DPRINTF</name><argument_list pos:start="141:16" pos:end="141:58">(<argument pos:start="141:17" pos:end="141:39"><expr pos:start="141:17" pos:end="141:39"><literal type="string" pos:start="141:17" pos:end="141:27">"aad_len=%"</literal> <name pos:start="141:29" pos:end="141:34">PRIu32</name> <literal type="string" pos:start="141:36" pos:end="141:39">"\n"</literal></expr></argument>, <argument pos:start="141:42" pos:end="141:57"><expr pos:start="141:42" pos:end="141:57"><name pos:start="141:42" pos:end="141:57"><name pos:start="141:42" pos:end="141:48">op_info</name><operator pos:start="141:49" pos:end="141:50">-&gt;</operator><name pos:start="141:51" pos:end="141:57">aad_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:54"><expr pos:start="143:9" pos:end="143:53"><name pos:start="143:9" pos:end="143:25"><name pos:start="143:9" pos:end="143:15">op_info</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:25">aad_data</name></name> <operator pos:start="143:27" pos:end="143:27">=</operator> <name pos:start="143:29" pos:end="143:41"><name pos:start="143:29" pos:end="143:35">op_info</name><operator pos:start="143:36" pos:end="143:37">-&gt;</operator><name pos:start="143:38" pos:end="143:41">data</name></name> <operator pos:start="143:43" pos:end="143:43">+</operator> <name pos:start="143:45" pos:end="143:53">curr_size</name></expr>;</expr_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:77"><expr pos:start="147:9" pos:end="147:76"><name pos:start="147:9" pos:end="147:9">s</name> <operator pos:start="147:11" pos:end="147:11">=</operator> <call pos:start="147:13" pos:end="147:76"><name pos:start="147:13" pos:end="147:22">iov_to_buf</name><argument_list pos:start="147:23" pos:end="147:76">(<argument pos:start="147:24" pos:end="147:26"><expr pos:start="147:24" pos:end="147:26"><name pos:start="147:24" pos:end="147:26">iov</name></expr></argument>, <argument pos:start="147:29" pos:end="147:35"><expr pos:start="147:29" pos:end="147:35"><name pos:start="147:29" pos:end="147:35">out_num</name></expr></argument>, <argument pos:start="147:38" pos:end="147:38"><expr pos:start="147:38" pos:end="147:38"><literal type="number" pos:start="147:38" pos:end="147:38">0</literal></expr></argument>, <argument pos:start="147:41" pos:end="147:57"><expr pos:start="147:41" pos:end="147:57"><name pos:start="147:41" pos:end="147:57"><name pos:start="147:41" pos:end="147:47">op_info</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:57">aad_data</name></name></expr></argument>, <argument pos:start="147:60" pos:end="147:75"><expr pos:start="147:60" pos:end="147:75"><name pos:start="147:60" pos:end="147:75"><name pos:start="147:60" pos:end="147:66">op_info</name><operator pos:start="147:67" pos:end="147:68">-&gt;</operator><name pos:start="147:69" pos:end="147:75">aad_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="155:9"><if pos:start="149:9" pos:end="155:9">if <condition pos:start="149:12" pos:end="149:44">(<expr pos:start="149:13" pos:end="149:43"><call pos:start="149:13" pos:end="149:43"><name pos:start="149:13" pos:end="149:20">unlikely</name><argument_list pos:start="149:21" pos:end="149:43">(<argument pos:start="149:22" pos:end="149:42"><expr pos:start="149:22" pos:end="149:42"><name pos:start="149:22" pos:end="149:22">s</name> <operator pos:start="149:24" pos:end="149:25">!=</operator> <name pos:start="149:27" pos:end="149:42"><name pos:start="149:27" pos:end="149:33">op_info</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:42">aad_len</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:46" pos:end="155:9">{<block_content pos:start="151:13" pos:end="153:21">

            <expr_stmt pos:start="151:13" pos:end="151:79"><expr pos:start="151:13" pos:end="151:78"><call pos:start="151:13" pos:end="151:78"><name pos:start="151:13" pos:end="151:24">virtio_error</name><argument_list pos:start="151:25" pos:end="151:78">(<argument pos:start="151:26" pos:end="151:29"><expr pos:start="151:26" pos:end="151:29"><name pos:start="151:26" pos:end="151:29">vdev</name></expr></argument>, <argument pos:start="151:32" pos:end="151:77"><expr pos:start="151:32" pos:end="151:77"><literal type="string" pos:start="151:32" pos:end="151:77">"virtio-crypto additional auth data incorrect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="153:13" pos:end="153:21">goto <name pos:start="153:18" pos:end="153:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:60"><expr pos:start="157:9" pos:end="157:59"><call pos:start="157:9" pos:end="157:59"><name pos:start="157:9" pos:end="157:25">iov_discard_front</name><argument_list pos:start="157:26" pos:end="157:59">(<argument pos:start="157:27" pos:end="157:30"><expr pos:start="157:27" pos:end="157:30"><operator pos:start="157:27" pos:end="157:27">&amp;</operator><name pos:start="157:28" pos:end="157:30">iov</name></expr></argument>, <argument pos:start="157:33" pos:end="157:40"><expr pos:start="157:33" pos:end="157:40"><operator pos:start="157:33" pos:end="157:33">&amp;</operator><name pos:start="157:34" pos:end="157:40">out_num</name></expr></argument>, <argument pos:start="157:43" pos:end="157:58"><expr pos:start="157:43" pos:end="157:58"><name pos:start="157:43" pos:end="157:58"><name pos:start="157:43" pos:end="157:49">op_info</name><operator pos:start="157:50" pos:end="157:51">-&gt;</operator><name pos:start="157:52" pos:end="157:58">aad_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:38"><expr pos:start="161:9" pos:end="161:37"><name pos:start="161:9" pos:end="161:17">curr_size</name> <operator pos:start="161:19" pos:end="161:20">+=</operator> <name pos:start="161:22" pos:end="161:37"><name pos:start="161:22" pos:end="161:28">op_info</name><operator pos:start="161:29" pos:end="161:30">-&gt;</operator><name pos:start="161:31" pos:end="161:37">aad_len</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="167:5" pos:end="167:32">/* Handle the source data */</comment>

    <if_stmt pos:start="169:5" pos:end="193:5"><if pos:start="169:5" pos:end="193:5">if <condition pos:start="169:8" pos:end="169:29">(<expr pos:start="169:9" pos:end="169:28"><name pos:start="169:9" pos:end="169:24"><name pos:start="169:9" pos:end="169:15">op_info</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:24">src_len</name></name> <operator pos:start="169:26" pos:end="169:26">&gt;</operator> <literal type="number" pos:start="169:28" pos:end="169:28">0</literal></expr>)</condition> <block pos:start="169:31" pos:end="193:5">{<block_content pos:start="171:9" pos:end="191:38">

        <expr_stmt pos:start="171:9" pos:end="171:59"><expr pos:start="171:9" pos:end="171:58"><call pos:start="171:9" pos:end="171:58"><name pos:start="171:9" pos:end="171:15">DPRINTF</name><argument_list pos:start="171:16" pos:end="171:58">(<argument pos:start="171:17" pos:end="171:39"><expr pos:start="171:17" pos:end="171:39"><literal type="string" pos:start="171:17" pos:end="171:27">"src_len=%"</literal> <name pos:start="171:29" pos:end="171:34">PRIu32</name> <literal type="string" pos:start="171:36" pos:end="171:39">"\n"</literal></expr></argument>, <argument pos:start="171:42" pos:end="171:57"><expr pos:start="171:42" pos:end="171:57"><name pos:start="171:42" pos:end="171:57"><name pos:start="171:42" pos:end="171:48">op_info</name><operator pos:start="171:49" pos:end="171:50">-&gt;</operator><name pos:start="171:51" pos:end="171:57">src_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:49"><expr pos:start="173:9" pos:end="173:48"><name pos:start="173:9" pos:end="173:20"><name pos:start="173:9" pos:end="173:15">op_info</name><operator pos:start="173:16" pos:end="173:17">-&gt;</operator><name pos:start="173:18" pos:end="173:20">src</name></name> <operator pos:start="173:22" pos:end="173:22">=</operator> <name pos:start="173:24" pos:end="173:36"><name pos:start="173:24" pos:end="173:30">op_info</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:36">data</name></name> <operator pos:start="173:38" pos:end="173:38">+</operator> <name pos:start="173:40" pos:end="173:48">curr_size</name></expr>;</expr_stmt>



        <expr_stmt pos:start="177:9" pos:end="177:72"><expr pos:start="177:9" pos:end="177:71"><name pos:start="177:9" pos:end="177:9">s</name> <operator pos:start="177:11" pos:end="177:11">=</operator> <call pos:start="177:13" pos:end="177:71"><name pos:start="177:13" pos:end="177:22">iov_to_buf</name><argument_list pos:start="177:23" pos:end="177:71">(<argument pos:start="177:24" pos:end="177:26"><expr pos:start="177:24" pos:end="177:26"><name pos:start="177:24" pos:end="177:26">iov</name></expr></argument>, <argument pos:start="177:29" pos:end="177:35"><expr pos:start="177:29" pos:end="177:35"><name pos:start="177:29" pos:end="177:35">out_num</name></expr></argument>, <argument pos:start="177:38" pos:end="177:38"><expr pos:start="177:38" pos:end="177:38"><literal type="number" pos:start="177:38" pos:end="177:38">0</literal></expr></argument>, <argument pos:start="177:41" pos:end="177:52"><expr pos:start="177:41" pos:end="177:52"><name pos:start="177:41" pos:end="177:52"><name pos:start="177:41" pos:end="177:47">op_info</name><operator pos:start="177:48" pos:end="177:49">-&gt;</operator><name pos:start="177:50" pos:end="177:52">src</name></name></expr></argument>, <argument pos:start="177:55" pos:end="177:70"><expr pos:start="177:55" pos:end="177:70"><name pos:start="177:55" pos:end="177:70"><name pos:start="177:55" pos:end="177:61">op_info</name><operator pos:start="177:62" pos:end="177:63">-&gt;</operator><name pos:start="177:64" pos:end="177:70">src_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="185:9"><if pos:start="179:9" pos:end="185:9">if <condition pos:start="179:12" pos:end="179:44">(<expr pos:start="179:13" pos:end="179:43"><call pos:start="179:13" pos:end="179:43"><name pos:start="179:13" pos:end="179:20">unlikely</name><argument_list pos:start="179:21" pos:end="179:43">(<argument pos:start="179:22" pos:end="179:42"><expr pos:start="179:22" pos:end="179:42"><name pos:start="179:22" pos:end="179:22">s</name> <operator pos:start="179:24" pos:end="179:25">!=</operator> <name pos:start="179:27" pos:end="179:42"><name pos:start="179:27" pos:end="179:33">op_info</name><operator pos:start="179:34" pos:end="179:35">-&gt;</operator><name pos:start="179:36" pos:end="179:42">src_len</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="179:46" pos:end="185:9">{<block_content pos:start="181:13" pos:end="183:21">

            <expr_stmt pos:start="181:13" pos:end="181:70"><expr pos:start="181:13" pos:end="181:69"><call pos:start="181:13" pos:end="181:69"><name pos:start="181:13" pos:end="181:24">virtio_error</name><argument_list pos:start="181:25" pos:end="181:69">(<argument pos:start="181:26" pos:end="181:29"><expr pos:start="181:26" pos:end="181:29"><name pos:start="181:26" pos:end="181:29">vdev</name></expr></argument>, <argument pos:start="181:32" pos:end="181:68"><expr pos:start="181:32" pos:end="181:68"><literal type="string" pos:start="181:32" pos:end="181:68">"virtio-crypto source data incorrect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="183:13" pos:end="183:21">goto <name pos:start="183:18" pos:end="183:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:60"><expr pos:start="187:9" pos:end="187:59"><call pos:start="187:9" pos:end="187:59"><name pos:start="187:9" pos:end="187:25">iov_discard_front</name><argument_list pos:start="187:26" pos:end="187:59">(<argument pos:start="187:27" pos:end="187:30"><expr pos:start="187:27" pos:end="187:30"><operator pos:start="187:27" pos:end="187:27">&amp;</operator><name pos:start="187:28" pos:end="187:30">iov</name></expr></argument>, <argument pos:start="187:33" pos:end="187:40"><expr pos:start="187:33" pos:end="187:40"><operator pos:start="187:33" pos:end="187:33">&amp;</operator><name pos:start="187:34" pos:end="187:40">out_num</name></expr></argument>, <argument pos:start="187:43" pos:end="187:58"><expr pos:start="187:43" pos:end="187:58"><name pos:start="187:43" pos:end="187:58"><name pos:start="187:43" pos:end="187:49">op_info</name><operator pos:start="187:50" pos:end="187:51">-&gt;</operator><name pos:start="187:52" pos:end="187:58">src_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="191:9" pos:end="191:38"><expr pos:start="191:9" pos:end="191:37"><name pos:start="191:9" pos:end="191:17">curr_size</name> <operator pos:start="191:19" pos:end="191:20">+=</operator> <name pos:start="191:22" pos:end="191:37"><name pos:start="191:22" pos:end="191:28">op_info</name><operator pos:start="191:29" pos:end="191:30">-&gt;</operator><name pos:start="191:31" pos:end="191:37">src_len</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="197:5" pos:end="197:37">/* Handle the destination data */</comment>

    <expr_stmt pos:start="199:5" pos:end="199:45"><expr pos:start="199:5" pos:end="199:44"><name pos:start="199:5" pos:end="199:16"><name pos:start="199:5" pos:end="199:11">op_info</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:16">dst</name></name> <operator pos:start="199:18" pos:end="199:18">=</operator> <name pos:start="199:20" pos:end="199:32"><name pos:start="199:20" pos:end="199:26">op_info</name><operator pos:start="199:27" pos:end="199:28">-&gt;</operator><name pos:start="199:29" pos:end="199:32">data</name></name> <operator pos:start="199:34" pos:end="199:34">+</operator> <name pos:start="199:36" pos:end="199:44">curr_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:34"><expr pos:start="201:5" pos:end="201:33"><name pos:start="201:5" pos:end="201:13">curr_size</name> <operator pos:start="201:15" pos:end="201:16">+=</operator> <name pos:start="201:18" pos:end="201:33"><name pos:start="201:18" pos:end="201:24">op_info</name><operator pos:start="201:25" pos:end="201:26">-&gt;</operator><name pos:start="201:27" pos:end="201:33">dst_len</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:55"><expr pos:start="205:5" pos:end="205:54"><call pos:start="205:5" pos:end="205:54"><name pos:start="205:5" pos:end="205:11">DPRINTF</name><argument_list pos:start="205:12" pos:end="205:54">(<argument pos:start="205:13" pos:end="205:35"><expr pos:start="205:13" pos:end="205:35"><literal type="string" pos:start="205:13" pos:end="205:23">"dst_len=%"</literal> <name pos:start="205:25" pos:end="205:30">PRIu32</name> <literal type="string" pos:start="205:32" pos:end="205:35">"\n"</literal></expr></argument>, <argument pos:start="205:38" pos:end="205:53"><expr pos:start="205:38" pos:end="205:53"><name pos:start="205:38" pos:end="205:53"><name pos:start="205:38" pos:end="205:44">op_info</name><operator pos:start="205:45" pos:end="205:46">-&gt;</operator><name pos:start="205:47" pos:end="205:53">dst_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="209:5" pos:end="209:39">/* Handle the hash digest result */</comment>

    <if_stmt pos:start="211:5" pos:end="217:5"><if pos:start="211:5" pos:end="217:5">if <condition pos:start="211:8" pos:end="211:28">(<expr pos:start="211:9" pos:end="211:27"><name pos:start="211:9" pos:end="211:23">hash_result_len</name> <operator pos:start="211:25" pos:end="211:25">&gt;</operator> <literal type="number" pos:start="211:27" pos:end="211:27">0</literal></expr>)</condition> <block pos:start="211:30" pos:end="217:5">{<block_content pos:start="213:9" pos:end="215:59">

        <expr_stmt pos:start="213:9" pos:end="213:66"><expr pos:start="213:9" pos:end="213:65"><call pos:start="213:9" pos:end="213:65"><name pos:start="213:9" pos:end="213:15">DPRINTF</name><argument_list pos:start="213:16" pos:end="213:65">(<argument pos:start="213:17" pos:end="213:47"><expr pos:start="213:17" pos:end="213:47"><literal type="string" pos:start="213:17" pos:end="213:35">"hash_result_len=%"</literal> <name pos:start="213:37" pos:end="213:42">PRIu32</name> <literal type="string" pos:start="213:44" pos:end="213:47">"\n"</literal></expr></argument>, <argument pos:start="213:50" pos:end="213:64"><expr pos:start="213:50" pos:end="213:64"><name pos:start="213:50" pos:end="213:64">hash_result_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:59"><expr pos:start="215:9" pos:end="215:58"><name pos:start="215:9" pos:end="215:30"><name pos:start="215:9" pos:end="215:15">op_info</name><operator pos:start="215:16" pos:end="215:17">-&gt;</operator><name pos:start="215:18" pos:end="215:30">digest_result</name></name> <operator pos:start="215:32" pos:end="215:32">=</operator> <name pos:start="215:34" pos:end="215:46"><name pos:start="215:34" pos:end="215:40">op_info</name><operator pos:start="215:41" pos:end="215:42">-&gt;</operator><name pos:start="215:43" pos:end="215:46">data</name></name> <operator pos:start="215:48" pos:end="215:48">+</operator> <name pos:start="215:50" pos:end="215:58">curr_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="221:5" pos:end="221:19">return <expr pos:start="221:12" pos:end="221:18"><name pos:start="221:12" pos:end="221:18">op_info</name></expr>;</return>



<label pos:start="225:1" pos:end="225:4"><name pos:start="225:1" pos:end="225:3">err</name>:</label>

    <expr_stmt pos:start="227:5" pos:end="227:20"><expr pos:start="227:5" pos:end="227:19"><call pos:start="227:5" pos:end="227:19"><name pos:start="227:5" pos:end="227:10">g_free</name><argument_list pos:start="227:11" pos:end="227:19">(<argument pos:start="227:12" pos:end="227:18"><expr pos:start="227:12" pos:end="227:18"><name pos:start="227:12" pos:end="227:18">op_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="229:5" pos:end="229:16">return <expr pos:start="229:12" pos:end="229:15"><name pos:start="229:12" pos:end="229:15">NULL</name></expr>;</return>

</block_content>}</block>
</unit>
