<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19938.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:30">qemu_rbd_next_tok</name><parameter_list pos:start="1:31" pos:end="7:54">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:42">max_len</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:40"><decl pos:start="3:32" pos:end="3:40"><type pos:start="3:32" pos:end="3:40"><name pos:start="3:32" pos:end="3:35">char</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">src</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:52"><decl pos:start="3:43" pos:end="3:52"><type pos:start="3:43" pos:end="3:52"><name pos:start="3:43" pos:end="3:46">char</name></type> <name pos:start="3:48" pos:end="3:52">delim</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:47"><decl pos:start="5:32" pos:end="5:47"><type pos:start="5:32" pos:end="5:47"><specifier pos:start="5:32" pos:end="5:36">const</specifier> <name pos:start="5:38" pos:end="5:41">char</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:47">name</name></decl></parameter>,

                               <parameter pos:start="7:32" pos:end="7:39"><decl pos:start="7:32" pos:end="7:39"><type pos:start="7:32" pos:end="7:39"><name pos:start="7:32" pos:end="7:35">char</name> <modifier pos:start="7:37" pos:end="7:37">*</modifier><modifier pos:start="7:38" pos:end="7:38">*</modifier></type><name pos:start="7:39" pos:end="7:39">p</name></decl></parameter>, <parameter pos:start="7:42" pos:end="7:53"><decl pos:start="7:42" pos:end="7:53"><type pos:start="7:42" pos:end="7:53"><name pos:start="7:42" pos:end="7:46">Error</name> <modifier pos:start="7:48" pos:end="7:48">*</modifier><modifier pos:start="7:49" pos:end="7:49">*</modifier></type><name pos:start="7:50" pos:end="7:53">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="69:1">{<block_content pos:start="11:5" pos:end="67:15">

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:13">end</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:14"><expr pos:start="17:5" pos:end="17:13"><operator pos:start="17:5" pos:end="17:5">*</operator><name pos:start="17:6" pos:end="17:6">p</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:13">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="47:5"><if pos:start="21:5" pos:end="47:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:13">delim</name> <operator pos:start="21:15" pos:end="21:16">!=</operator> <literal type="char" pos:start="21:18" pos:end="21:21">'\0'</literal></expr>)</condition> <block pos:start="21:24" pos:end="47:5">{<block_content pos:start="23:9" pos:end="45:9">

        <for pos:start="23:9" pos:end="37:9">for <control pos:start="23:13" pos:end="23:36">(<init pos:start="23:14" pos:end="23:23"><expr pos:start="23:14" pos:end="23:22"><name pos:start="23:14" pos:end="23:16">end</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:22">src</name></expr>;</init> <condition pos:start="23:25" pos:end="23:29"><expr pos:start="23:25" pos:end="23:28"><operator pos:start="23:25" pos:end="23:25">*</operator><name pos:start="23:26" pos:end="23:28">end</name></expr>;</condition> <incr pos:start="23:31" pos:end="23:35"><expr pos:start="23:31" pos:end="23:35"><operator pos:start="23:31" pos:end="23:32">++</operator><name pos:start="23:33" pos:end="23:35">end</name></expr></incr>)</control> <block pos:start="23:38" pos:end="37:9">{<block_content pos:start="25:13" pos:end="35:13">

            <if_stmt pos:start="25:13" pos:end="29:13"><if pos:start="25:13" pos:end="29:13">if <condition pos:start="25:16" pos:end="25:30">(<expr pos:start="25:17" pos:end="25:29"><operator pos:start="25:17" pos:end="25:17">*</operator><name pos:start="25:18" pos:end="25:20">end</name> <operator pos:start="25:22" pos:end="25:23">==</operator> <name pos:start="25:25" pos:end="25:29">delim</name></expr>)</condition> <block pos:start="25:32" pos:end="29:13">{<block_content pos:start="27:17" pos:end="27:22">

                <break pos:start="27:17" pos:end="27:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="31:13" pos:end="35:13"><if pos:start="31:13" pos:end="35:13">if <condition pos:start="31:16" pos:end="31:47">(<expr pos:start="31:17" pos:end="31:46"><operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:20">end</name> <operator pos:start="31:22" pos:end="31:23">==</operator> <literal type="char" pos:start="31:25" pos:end="31:28">'\\'</literal> <operator pos:start="31:30" pos:end="31:31">&amp;&amp;</operator> <name pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:35">end</name><index pos:start="31:36" pos:end="31:38">[<expr pos:start="31:37" pos:end="31:37"><literal type="number" pos:start="31:37" pos:end="31:37">1</literal></expr>]</index></name> <operator pos:start="31:40" pos:end="31:41">!=</operator> <literal type="char" pos:start="31:43" pos:end="31:46">'\0'</literal></expr>)</condition> <block pos:start="31:49" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:22">

                <expr_stmt pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:19">end</name><operator pos:start="33:20" pos:end="33:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:26">(<expr pos:start="39:13" pos:end="39:25"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:16">end</name> <operator pos:start="39:18" pos:end="39:19">==</operator> <name pos:start="39:21" pos:end="39:25">delim</name></expr>)</condition> <block pos:start="39:28" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:24">

            <expr_stmt pos:start="41:13" pos:end="41:25"><expr pos:start="41:13" pos:end="41:24"><operator pos:start="41:13" pos:end="41:13">*</operator><name pos:start="41:14" pos:end="41:14">p</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:20">end</name> <operator pos:start="41:22" pos:end="41:22">+</operator> <literal type="number" pos:start="41:24" pos:end="41:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:24"><expr pos:start="43:13" pos:end="43:23"><operator pos:start="43:13" pos:end="43:13">*</operator><name pos:start="43:14" pos:end="43:16">end</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <literal type="char" pos:start="43:20" pos:end="43:23">'\0'</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:20"><expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:5">l</name> <operator pos:start="49:7" pos:end="49:7">=</operator> <call pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:14">strlen</name><argument_list pos:start="49:15" pos:end="49:19">(<argument pos:start="49:16" pos:end="49:18"><expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="63:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:21">(<expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:9">l</name> <operator pos:start="51:11" pos:end="51:12">&gt;=</operator> <name pos:start="51:14" pos:end="51:20">max_len</name></expr>)</condition> <block pos:start="51:23" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:20">

        <expr_stmt pos:start="53:9" pos:end="53:46"><expr pos:start="53:9" pos:end="53:45"><call pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:18">error_setg</name><argument_list pos:start="53:19" pos:end="53:45">(<argument pos:start="53:20" pos:end="53:23"><expr pos:start="53:20" pos:end="53:23"><name pos:start="53:20" pos:end="53:23">errp</name></expr></argument>, <argument pos:start="53:26" pos:end="53:38"><expr pos:start="53:26" pos:end="53:38"><literal type="string" pos:start="53:26" pos:end="53:38">"%s too long"</literal></expr></argument>, <argument pos:start="53:41" pos:end="53:44"><expr pos:start="53:41" pos:end="53:44"><name pos:start="53:41" pos:end="53:44">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:20">return <expr pos:start="55:16" pos:end="55:19"><name pos:start="55:16" pos:end="55:19">NULL</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="63:5">else if <condition pos:start="57:15" pos:end="57:22">(<expr pos:start="57:16" pos:end="57:21"><name pos:start="57:16" pos:end="57:16">l</name> <operator pos:start="57:18" pos:end="57:19">==</operator> <literal type="number" pos:start="57:21" pos:end="57:21">0</literal></expr>)</condition> <block pos:start="57:24" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:20">

        <expr_stmt pos:start="59:9" pos:end="59:47"><expr pos:start="59:9" pos:end="59:46"><call pos:start="59:9" pos:end="59:46"><name pos:start="59:9" pos:end="59:18">error_setg</name><argument_list pos:start="59:19" pos:end="59:46">(<argument pos:start="59:20" pos:end="59:23"><expr pos:start="59:20" pos:end="59:23"><name pos:start="59:20" pos:end="59:23">errp</name></expr></argument>, <argument pos:start="59:26" pos:end="59:39"><expr pos:start="59:26" pos:end="59:39"><literal type="string" pos:start="59:26" pos:end="59:39">"%s too short"</literal></expr></argument>, <argument pos:start="59:42" pos:end="59:45"><expr pos:start="59:42" pos:end="59:45"><name pos:start="59:42" pos:end="59:45">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:20">return <expr pos:start="61:16" pos:end="61:19"><name pos:start="61:16" pos:end="61:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:15">return <expr pos:start="67:12" pos:end="67:14"><name pos:start="67:12" pos:end="67:14">src</name></expr>;</return>

</block_content>}</block></function>
</unit>
