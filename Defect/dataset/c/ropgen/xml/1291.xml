<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1291.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">parser_context_free</name><parameter_list pos:start="1:32" pos:end="1:56">(<parameter pos:start="1:33" pos:end="1:55"><decl pos:start="1:33" pos:end="1:55"><type pos:start="1:33" pos:end="1:51"><name pos:start="1:33" pos:end="1:49">JSONParserContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">ctxt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:5">

    <if_stmt pos:start="5:5" pos:end="19:5"><if pos:start="5:5" pos:end="19:5">if <condition pos:start="5:8" pos:end="5:13">(<expr pos:start="5:9" pos:end="5:12"><name pos:start="5:9" pos:end="5:12">ctxt</name></expr>)</condition> <block pos:start="5:15" pos:end="19:5">{<block_content pos:start="7:9" pos:end="17:21">

        <while pos:start="7:9" pos:end="11:9">while <condition pos:start="7:15" pos:end="7:44">(<expr pos:start="7:16" pos:end="7:43"><operator pos:start="7:16" pos:end="7:16">!</operator><call pos:start="7:17" pos:end="7:43"><name pos:start="7:17" pos:end="7:32">g_queue_is_empty</name><argument_list pos:start="7:33" pos:end="7:43">(<argument pos:start="7:34" pos:end="7:42"><expr pos:start="7:34" pos:end="7:42"><name pos:start="7:34" pos:end="7:42"><name pos:start="7:34" pos:end="7:37">ctxt</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:42">buf</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:46" pos:end="11:9">{<block_content pos:start="9:13" pos:end="9:43">

            <expr_stmt pos:start="9:13" pos:end="9:43"><expr pos:start="9:13" pos:end="9:42"><call pos:start="9:13" pos:end="9:42"><name pos:start="9:13" pos:end="9:36">parser_context_pop_token</name><argument_list pos:start="9:37" pos:end="9:42">(<argument pos:start="9:38" pos:end="9:41"><expr pos:start="9:38" pos:end="9:41"><name pos:start="9:38" pos:end="9:41">ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="13:9" pos:end="13:38"><expr pos:start="13:9" pos:end="13:37"><call pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:22">qobject_decref</name><argument_list pos:start="13:23" pos:end="13:37">(<argument pos:start="13:24" pos:end="13:36"><expr pos:start="13:24" pos:end="13:36"><name pos:start="13:24" pos:end="13:36"><name pos:start="13:24" pos:end="13:27">ctxt</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:36">current</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:32"><expr pos:start="15:9" pos:end="15:31"><call pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:20">g_queue_free</name><argument_list pos:start="15:21" pos:end="15:31">(<argument pos:start="15:22" pos:end="15:30"><expr pos:start="15:22" pos:end="15:30"><name pos:start="15:22" pos:end="15:30"><name pos:start="15:22" pos:end="15:25">ctxt</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:30">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:21"><expr pos:start="17:9" pos:end="17:20"><call pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:14">g_free</name><argument_list pos:start="17:15" pos:end="17:20">(<argument pos:start="17:16" pos:end="17:19"><expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
