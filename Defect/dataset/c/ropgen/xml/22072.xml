<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22072.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vhost_net_start_one</name><parameter_list pos:start="1:31" pos:end="5:44">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:37">struct</name> <name pos:start="1:39" pos:end="1:47">vhost_net</name></name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">net</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:48"><decl pos:start="3:32" pos:end="3:48"><type pos:start="3:32" pos:end="3:48"><name pos:start="3:32" pos:end="3:43">VirtIODevice</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">dev</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:43"><decl pos:start="5:32" pos:end="5:43"><type pos:start="5:32" pos:end="5:43"><name pos:start="5:32" pos:end="5:34">int</name></type> <name pos:start="5:36" pos:end="5:43">vq_index</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="123:1">{<block_content pos:start="9:5" pos:end="121:13">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:27">vhost_vring_file</name></name></type> <name pos:start="9:29" pos:end="9:32">file</name> <init pos:start="9:34" pos:end="9:38">= <expr pos:start="9:36" pos:end="9:38"><block pos:start="9:36" pos:end="9:38">{ }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">r</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:25">(<expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:11">net</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:16">dev</name><operator pos:start="15:17" pos:end="15:17">.</operator><name pos:start="15:18" pos:end="15:24">started</name></name></expr>)</condition> <block pos:start="15:27" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:7">net</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:12">dev</name><operator pos:start="23:13" pos:end="23:13">.</operator><name pos:start="23:14" pos:end="23:17">nvqs</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:7">net</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:12">dev</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:16">vqs</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:22">net</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:27">vqs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:7">net</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:12">dev</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:21">vq_index</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:32">vq_index</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:51"><expr pos:start="31:5" pos:end="31:50"><name pos:start="31:5" pos:end="31:5">r</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <call pos:start="31:9" pos:end="31:50"><name pos:start="31:9" pos:end="31:34">vhost_dev_enable_notifiers</name><argument_list pos:start="31:35" pos:end="31:50">(<argument pos:start="31:36" pos:end="31:44"><expr pos:start="31:36" pos:end="31:44"><operator pos:start="31:36" pos:end="31:36">&amp;</operator><name pos:start="31:37" pos:end="31:44"><name pos:start="31:37" pos:end="31:39">net</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:44">dev</name></name></expr></argument>, <argument pos:start="31:47" pos:end="31:49"><expr pos:start="31:47" pos:end="31:49"><name pos:start="31:47" pos:end="31:49">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:14">(<expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">r</name> <operator pos:start="33:11" pos:end="33:11">&lt;</operator> <literal type="number" pos:start="33:13" pos:end="33:13">0</literal></expr>)</condition> <block pos:start="33:16" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:28">

        <goto pos:start="35:9" pos:end="35:28">goto <name pos:start="35:14" pos:end="35:27">fail_notifiers</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:5">r</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <call pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:23">vhost_dev_start</name><argument_list pos:start="41:24" pos:end="41:39">(<argument pos:start="41:25" pos:end="41:33"><expr pos:start="41:25" pos:end="41:33"><operator pos:start="41:25" pos:end="41:25">&amp;</operator><name pos:start="41:26" pos:end="41:33"><name pos:start="41:26" pos:end="41:28">net</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:33">dev</name></name></expr></argument>, <argument pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:38">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:14">(<expr pos:start="43:9" pos:end="43:13"><name pos:start="43:9" pos:end="43:9">r</name> <operator pos:start="43:11" pos:end="43:11">&lt;</operator> <literal type="number" pos:start="43:13" pos:end="43:13">0</literal></expr>)</condition> <block pos:start="43:16" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:24">

        <goto pos:start="45:9" pos:end="45:24">goto <name pos:start="45:14" pos:end="45:23">fail_start</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:28">(<expr pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:11">net</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:15">nc</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:21">info</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:27">poll</name></name></expr>)</condition> <block pos:start="51:30" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:44">

        <expr_stmt pos:start="53:9" pos:end="53:44"><expr pos:start="53:9" pos:end="53:43"><call pos:start="53:9" pos:end="53:43"><name pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:11">net</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:15">nc</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:21">info</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:27">poll</name></name><argument_list pos:start="53:28" pos:end="53:43">(<argument pos:start="53:29" pos:end="53:35"><expr pos:start="53:29" pos:end="53:35"><name pos:start="53:29" pos:end="53:35"><name pos:start="53:29" pos:end="53:31">net</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:35">nc</name></name></expr></argument>, <argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="83:5"><if pos:start="59:5" pos:end="83:5">if <condition pos:start="59:8" pos:end="59:59">(<expr pos:start="59:9" pos:end="59:58"><name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:11">net</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:15">nc</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:21">info</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:27">type</name></name> <operator pos:start="59:29" pos:end="59:30">==</operator> <name pos:start="59:32" pos:end="59:58">NET_CLIENT_OPTIONS_KIND_TAP</name></expr>)</condition> <block pos:start="59:61" pos:end="83:5">{<block_content pos:start="61:9" pos:end="81:9">

        <expr_stmt pos:start="61:9" pos:end="61:60"><expr pos:start="61:9" pos:end="61:59"><call pos:start="61:9" pos:end="61:59"><name pos:start="61:9" pos:end="61:27">qemu_set_fd_handler</name><argument_list pos:start="61:28" pos:end="61:59">(<argument pos:start="61:29" pos:end="61:40"><expr pos:start="61:29" pos:end="61:40"><name pos:start="61:29" pos:end="61:40"><name pos:start="61:29" pos:end="61:31">net</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:40">backend</name></name></expr></argument>, <argument pos:start="61:43" pos:end="61:46"><expr pos:start="61:43" pos:end="61:46"><name pos:start="61:43" pos:end="61:46">NULL</name></expr></argument>, <argument pos:start="61:49" pos:end="61:52"><expr pos:start="61:49" pos:end="61:52"><name pos:start="61:49" pos:end="61:52">NULL</name></expr></argument>, <argument pos:start="61:55" pos:end="61:58"><expr pos:start="61:55" pos:end="61:58"><name pos:start="61:55" pos:end="61:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:12">file</name><operator pos:start="63:13" pos:end="63:13">.</operator><name pos:start="63:14" pos:end="63:15">fd</name></name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:30"><name pos:start="63:19" pos:end="63:21">net</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:30">backend</name></name></expr>;</expr_stmt>

        <for pos:start="65:9" pos:end="81:9">for <control pos:start="65:13" pos:end="65:70">(<init pos:start="65:14" pos:end="65:28"><expr pos:start="65:14" pos:end="65:27"><name pos:start="65:14" pos:end="65:23"><name pos:start="65:14" pos:end="65:17">file</name><operator pos:start="65:18" pos:end="65:18">.</operator><name pos:start="65:19" pos:end="65:23">index</name></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <literal type="number" pos:start="65:27" pos:end="65:27">0</literal></expr>;</init> <condition pos:start="65:30" pos:end="65:56"><expr pos:start="65:30" pos:end="65:55"><name pos:start="65:30" pos:end="65:39"><name pos:start="65:30" pos:end="65:33">file</name><operator pos:start="65:34" pos:end="65:34">.</operator><name pos:start="65:35" pos:end="65:39">index</name></name> <operator pos:start="65:41" pos:end="65:41">&lt;</operator> <name pos:start="65:43" pos:end="65:55"><name pos:start="65:43" pos:end="65:45">net</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:50">dev</name><operator pos:start="65:51" pos:end="65:51">.</operator><name pos:start="65:52" pos:end="65:55">nvqs</name></name></expr>;</condition> <incr pos:start="65:58" pos:end="65:69"><expr pos:start="65:58" pos:end="65:69"><operator pos:start="65:58" pos:end="65:59">++</operator><name pos:start="65:60" pos:end="65:69"><name pos:start="65:60" pos:end="65:63">file</name><operator pos:start="65:64" pos:end="65:64">.</operator><name pos:start="65:65" pos:end="65:69">index</name></name></expr></incr>)</control> <block pos:start="65:72" pos:end="81:9">{<block_content pos:start="67:13" pos:end="79:13">

            <decl_stmt pos:start="67:13" pos:end="67:59"><decl pos:start="67:13" pos:end="67:58"><type pos:start="67:13" pos:end="67:28"><specifier pos:start="67:13" pos:end="67:17">const</specifier> <name pos:start="67:19" pos:end="67:26">VhostOps</name> <modifier pos:start="67:28" pos:end="67:28">*</modifier></type><name pos:start="67:29" pos:end="67:37">vhost_ops</name> <init pos:start="67:39" pos:end="67:58">= <expr pos:start="67:41" pos:end="67:58"><name pos:start="67:41" pos:end="67:58"><name pos:start="67:41" pos:end="67:43">net</name><operator pos:start="67:44" pos:end="67:45">-&gt;</operator><name pos:start="67:46" pos:end="67:48">dev</name><operator pos:start="67:49" pos:end="67:49">.</operator><name pos:start="67:50" pos:end="67:58">vhost_ops</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="69:13" pos:end="71:45"><expr pos:start="69:13" pos:end="71:44"><name pos:start="69:13" pos:end="69:13">r</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <call pos:start="69:17" pos:end="71:44"><name pos:start="69:17" pos:end="69:37"><name pos:start="69:17" pos:end="69:25">vhost_ops</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:37">vhost_call</name></name><argument_list pos:start="69:38" pos:end="71:44">(<argument pos:start="69:39" pos:end="69:47"><expr pos:start="69:39" pos:end="69:47"><operator pos:start="69:39" pos:end="69:39">&amp;</operator><name pos:start="69:40" pos:end="69:47"><name pos:start="69:40" pos:end="69:42">net</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:47">dev</name></name></expr></argument>, <argument pos:start="69:50" pos:end="69:70"><expr pos:start="69:50" pos:end="69:70"><name pos:start="69:50" pos:end="69:70">VHOST_NET_SET_BACKEND</name></expr></argument>,

                                      <argument pos:start="71:39" pos:end="71:43"><expr pos:start="71:39" pos:end="71:43"><operator pos:start="71:39" pos:end="71:39">&amp;</operator><name pos:start="71:40" pos:end="71:43">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="79:13"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="73:22">(<expr pos:start="73:17" pos:end="73:21"><name pos:start="73:17" pos:end="73:17">r</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <literal type="number" pos:start="73:21" pos:end="73:21">0</literal></expr>)</condition> <block pos:start="73:24" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:26">

                <expr_stmt pos:start="75:17" pos:end="75:27"><expr pos:start="75:17" pos:end="75:26"><name pos:start="75:17" pos:end="75:17">r</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <operator pos:start="75:21" pos:end="75:21">-</operator><name pos:start="75:22" pos:end="75:26">errno</name></expr>;</expr_stmt>

                <goto pos:start="77:17" pos:end="77:26">goto <name pos:start="77:22" pos:end="77:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

<label pos:start="87:1" pos:end="87:5"><name pos:start="87:1" pos:end="87:4">fail</name>:</label>

    <expr_stmt pos:start="89:5" pos:end="89:17"><expr pos:start="89:5" pos:end="89:16"><name pos:start="89:5" pos:end="89:11"><name pos:start="89:5" pos:end="89:8">file</name><operator pos:start="89:9" pos:end="89:9">.</operator><name pos:start="89:10" pos:end="89:11">fd</name></name> <operator pos:start="89:13" pos:end="89:13">=</operator> <operator pos:start="89:15" pos:end="89:15">-</operator><literal type="number" pos:start="89:16" pos:end="89:16">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="105:5"><if pos:start="91:5" pos:end="105:5">if <condition pos:start="91:8" pos:end="91:59">(<expr pos:start="91:9" pos:end="91:58"><name pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:11">net</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:15">nc</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:21">info</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:27">type</name></name> <operator pos:start="91:29" pos:end="91:30">==</operator> <name pos:start="91:32" pos:end="91:58">NET_CLIENT_OPTIONS_KIND_TAP</name></expr>)</condition> <block pos:start="91:61" pos:end="105:5">{<block_content pos:start="93:9" pos:end="103:9">

        <while pos:start="93:9" pos:end="103:9">while <condition pos:start="93:15" pos:end="93:32">(<expr pos:start="93:16" pos:end="93:31"><name pos:start="93:16" pos:end="93:25"><name pos:start="93:16" pos:end="93:19">file</name><operator pos:start="93:20" pos:end="93:20">.</operator><name pos:start="93:21" pos:end="93:25">index</name></name><operator pos:start="93:26" pos:end="93:27">--</operator> <operator pos:start="93:29" pos:end="93:29">&gt;</operator> <literal type="number" pos:start="93:31" pos:end="93:31">0</literal></expr>)</condition> <block pos:start="93:34" pos:end="103:9">{<block_content pos:start="95:13" pos:end="101:27">

            <decl_stmt pos:start="95:13" pos:end="95:59"><decl pos:start="95:13" pos:end="95:58"><type pos:start="95:13" pos:end="95:28"><specifier pos:start="95:13" pos:end="95:17">const</specifier> <name pos:start="95:19" pos:end="95:26">VhostOps</name> <modifier pos:start="95:28" pos:end="95:28">*</modifier></type><name pos:start="95:29" pos:end="95:37">vhost_ops</name> <init pos:start="95:39" pos:end="95:58">= <expr pos:start="95:41" pos:end="95:58"><name pos:start="95:41" pos:end="95:58"><name pos:start="95:41" pos:end="95:43">net</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:48">dev</name><operator pos:start="95:49" pos:end="95:49">.</operator><name pos:start="95:50" pos:end="95:58">vhost_ops</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="97:13" pos:end="99:49"><decl pos:start="97:13" pos:end="99:48"><type pos:start="97:13" pos:end="97:15"><name pos:start="97:13" pos:end="97:15">int</name></type> <name pos:start="97:17" pos:end="97:17">r</name> <init pos:start="97:19" pos:end="99:48">= <expr pos:start="97:21" pos:end="99:48"><call pos:start="97:21" pos:end="99:48"><name pos:start="97:21" pos:end="97:41"><name pos:start="97:21" pos:end="97:29">vhost_ops</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:41">vhost_call</name></name><argument_list pos:start="97:42" pos:end="99:48">(<argument pos:start="97:43" pos:end="97:51"><expr pos:start="97:43" pos:end="97:51"><operator pos:start="97:43" pos:end="97:43">&amp;</operator><name pos:start="97:44" pos:end="97:51"><name pos:start="97:44" pos:end="97:46">net</name><operator pos:start="97:47" pos:end="97:48">-&gt;</operator><name pos:start="97:49" pos:end="97:51">dev</name></name></expr></argument>, <argument pos:start="97:54" pos:end="97:74"><expr pos:start="97:54" pos:end="97:74"><name pos:start="97:54" pos:end="97:74">VHOST_NET_SET_BACKEND</name></expr></argument>,

                                          <argument pos:start="99:43" pos:end="99:47"><expr pos:start="99:43" pos:end="99:47"><operator pos:start="99:43" pos:end="99:43">&amp;</operator><name pos:start="99:44" pos:end="99:47">file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:27"><expr pos:start="101:13" pos:end="101:26"><call pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:18">assert</name><argument_list pos:start="101:19" pos:end="101:26">(<argument pos:start="101:20" pos:end="101:25"><expr pos:start="101:20" pos:end="101:25"><name pos:start="101:20" pos:end="101:20">r</name> <operator pos:start="101:22" pos:end="101:23">&gt;=</operator> <literal type="number" pos:start="101:25" pos:end="101:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="111:5"><if pos:start="107:5" pos:end="111:5">if <condition pos:start="107:8" pos:end="107:28">(<expr pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:11">net</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:15">nc</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:21">info</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:27">poll</name></name></expr>)</condition> <block pos:start="107:30" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:43">

        <expr_stmt pos:start="109:9" pos:end="109:43"><expr pos:start="109:9" pos:end="109:42"><call pos:start="109:9" pos:end="109:42"><name pos:start="109:9" pos:end="109:27"><name pos:start="109:9" pos:end="109:11">net</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:15">nc</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:21">info</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:27">poll</name></name><argument_list pos:start="109:28" pos:end="109:42">(<argument pos:start="109:29" pos:end="109:35"><expr pos:start="109:29" pos:end="109:35"><name pos:start="109:29" pos:end="109:35"><name pos:start="109:29" pos:end="109:31">net</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:35">nc</name></name></expr></argument>, <argument pos:start="109:38" pos:end="109:41"><expr pos:start="109:38" pos:end="109:41"><name pos:start="109:38" pos:end="109:41">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:35"><expr pos:start="113:5" pos:end="113:34"><call pos:start="113:5" pos:end="113:34"><name pos:start="113:5" pos:end="113:18">vhost_dev_stop</name><argument_list pos:start="113:19" pos:end="113:34">(<argument pos:start="113:20" pos:end="113:28"><expr pos:start="113:20" pos:end="113:28"><operator pos:start="113:20" pos:end="113:20">&amp;</operator><name pos:start="113:21" pos:end="113:28"><name pos:start="113:21" pos:end="113:23">net</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:28">dev</name></name></expr></argument>, <argument pos:start="113:31" pos:end="113:33"><expr pos:start="113:31" pos:end="113:33"><name pos:start="113:31" pos:end="113:33">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="115:1" pos:end="115:11"><name pos:start="115:1" pos:end="115:10">fail_start</name>:</label>

    <expr_stmt pos:start="117:5" pos:end="117:48"><expr pos:start="117:5" pos:end="117:47"><call pos:start="117:5" pos:end="117:47"><name pos:start="117:5" pos:end="117:31">vhost_dev_disable_notifiers</name><argument_list pos:start="117:32" pos:end="117:47">(<argument pos:start="117:33" pos:end="117:41"><expr pos:start="117:33" pos:end="117:41"><operator pos:start="117:33" pos:end="117:33">&amp;</operator><name pos:start="117:34" pos:end="117:41"><name pos:start="117:34" pos:end="117:36">net</name><operator pos:start="117:37" pos:end="117:38">-&gt;</operator><name pos:start="117:39" pos:end="117:41">dev</name></name></expr></argument>, <argument pos:start="117:44" pos:end="117:46"><expr pos:start="117:44" pos:end="117:46"><name pos:start="117:44" pos:end="117:46">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="119:1" pos:end="119:15"><name pos:start="119:1" pos:end="119:14">fail_notifiers</name>:</label>

    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><name pos:start="121:12" pos:end="121:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
