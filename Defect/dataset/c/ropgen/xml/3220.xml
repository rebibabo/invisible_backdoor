<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3220.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">replay_save_event</name><parameter_list pos:start="1:30" pos:end="1:59">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:35">Event</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:42">event</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:58"><decl pos:start="1:45" pos:end="1:58"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:58">checkpoint</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:5">

    <if_stmt pos:start="5:5" pos:end="51:5"><if pos:start="5:5" pos:end="51:5">if <condition pos:start="5:8" pos:end="5:40">(<expr pos:start="5:9" pos:end="5:39"><name pos:start="5:9" pos:end="5:19">replay_mode</name> <operator pos:start="5:21" pos:end="5:22">!=</operator> <name pos:start="5:24" pos:end="5:39">REPLAY_MODE_PLAY</name></expr>)</condition> <block pos:start="5:42" pos:end="51:5">{<block_content pos:start="9:9" pos:end="49:9">

        <comment type="block" pos:start="7:9" pos:end="7:41">/* put the event into the file */</comment>

        <expr_stmt pos:start="9:9" pos:end="9:38"><expr pos:start="9:9" pos:end="9:37"><call pos:start="9:9" pos:end="9:37"><name pos:start="9:9" pos:end="9:24">replay_put_event</name><argument_list pos:start="9:25" pos:end="9:37">(<argument pos:start="9:26" pos:end="9:36"><expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36">EVENT_ASYNC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:23">replay_put_byte</name><argument_list pos:start="11:24" pos:end="11:35">(<argument pos:start="11:25" pos:end="11:34"><expr pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:34">checkpoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:43"><expr pos:start="13:9" pos:end="13:42"><call pos:start="13:9" pos:end="13:42"><name pos:start="13:9" pos:end="13:23">replay_put_byte</name><argument_list pos:start="13:24" pos:end="13:42">(<argument pos:start="13:25" pos:end="13:41"><expr pos:start="13:25" pos:end="13:41"><name pos:start="13:25" pos:end="13:41"><name pos:start="13:25" pos:end="13:29">event</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:41">event_kind</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="17:9" pos:end="17:38">/* save event-specific data */</comment>

        <switch pos:start="19:9" pos:end="49:9">switch <condition pos:start="19:16" pos:end="19:34">(<expr pos:start="19:17" pos:end="19:33"><name pos:start="19:17" pos:end="19:33"><name pos:start="19:17" pos:end="19:21">event</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:33">event_kind</name></name></expr>)</condition> <block pos:start="19:36" pos:end="49:9">{<block_content pos:start="21:9" pos:end="47:20">

        <case pos:start="21:9" pos:end="21:35">case <expr pos:start="21:14" pos:end="21:34"><name pos:start="21:14" pos:end="21:34">REPLAY_ASYNC_EVENT_BH</name></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:40"><expr pos:start="23:13" pos:end="23:39"><call pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:28">replay_put_qword</name><argument_list pos:start="23:29" pos:end="23:39">(<argument pos:start="23:30" pos:end="23:38"><expr pos:start="23:30" pos:end="23:38"><name pos:start="23:30" pos:end="23:38"><name pos:start="23:30" pos:end="23:34">event</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:38">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        <case pos:start="27:9" pos:end="27:38">case <expr pos:start="27:14" pos:end="27:37"><name pos:start="27:14" pos:end="27:37">REPLAY_ASYNC_EVENT_INPUT</name></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:51"><expr pos:start="29:13" pos:end="29:50"><call pos:start="29:13" pos:end="29:50"><name pos:start="29:13" pos:end="29:35">replay_save_input_event</name><argument_list pos:start="29:36" pos:end="29:50">(<argument pos:start="29:37" pos:end="29:49"><expr pos:start="29:37" pos:end="29:49"><name pos:start="29:37" pos:end="29:49"><name pos:start="29:37" pos:end="29:41">event</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:49">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        <case pos:start="33:9" pos:end="33:43">case <expr pos:start="33:14" pos:end="33:42"><name pos:start="33:14" pos:end="33:42">REPLAY_ASYNC_EVENT_INPUT_SYNC</name></expr>:</case>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:42">case <expr pos:start="37:14" pos:end="37:41"><name pos:start="37:14" pos:end="37:41">REPLAY_ASYNC_EVENT_CHAR_READ</name></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:55"><expr pos:start="39:13" pos:end="39:54"><call pos:start="39:13" pos:end="39:54"><name pos:start="39:13" pos:end="39:39">replay_event_char_read_save</name><argument_list pos:start="39:40" pos:end="39:54">(<argument pos:start="39:41" pos:end="39:53"><expr pos:start="39:41" pos:end="39:53"><name pos:start="39:41" pos:end="39:53"><name pos:start="39:41" pos:end="39:45">event</name><operator pos:start="39:46" pos:end="39:47">-&gt;</operator><name pos:start="39:48" pos:end="39:53">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        <default pos:start="43:9" pos:end="43:16">default:</default>

            <expr_stmt pos:start="45:13" pos:end="45:75"><expr pos:start="45:13" pos:end="45:74"><call pos:start="45:13" pos:end="45:74"><name pos:start="45:13" pos:end="45:24">error_report</name><argument_list pos:start="45:25" pos:end="45:74">(<argument pos:start="45:26" pos:end="45:56"><expr pos:start="45:26" pos:end="45:56"><literal type="string" pos:start="45:26" pos:end="45:56">"Unknown ID %d of replay event"</literal></expr></argument>, <argument pos:start="45:59" pos:end="45:73"><expr pos:start="45:59" pos:end="45:73"><name pos:start="45:59" pos:end="45:73">read_event_kind</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:20"><expr pos:start="47:13" pos:end="47:19"><call pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:16">exit</name><argument_list pos:start="47:17" pos:end="47:19">(<argument pos:start="47:18" pos:end="47:18"><expr pos:start="47:18" pos:end="47:18"><literal type="number" pos:start="47:18" pos:end="47:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
