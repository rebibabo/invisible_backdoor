<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9532.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">v9fs_device_realize_common</name><parameter_list pos:start="1:31" pos:end="1:58">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:40">V9fsState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:50">Error</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier><modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="183:1">{<block_content pos:start="5:5" pos:end="181:14">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">V9fsVirtioState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">v</name> <init pos:start="5:24" pos:end="5:64">= <expr pos:start="5:26" pos:end="5:64"><call pos:start="5:26" pos:end="5:64"><name pos:start="5:26" pos:end="5:37">container_of</name><argument_list pos:start="5:38" pos:end="5:64">(<argument pos:start="5:39" pos:end="5:39"><expr pos:start="5:39" pos:end="5:39"><name pos:start="5:39" pos:end="5:39">s</name></expr></argument>, <argument pos:start="5:42" pos:end="5:56"><expr pos:start="5:42" pos:end="5:56"><name pos:start="5:42" pos:end="5:56">V9fsVirtioState</name></expr></argument>, <argument pos:start="5:59" pos:end="5:63"><expr pos:start="5:59" pos:end="5:63"><name pos:start="5:59" pos:end="5:63">state</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:15">stat</name></name></type> <name pos:start="9:17" pos:end="9:20">stat</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">FsDriverEntry</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">fse</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">V9fsPath</name></type> <name pos:start="13:14" pos:end="13:17">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">rc</name> <init pos:start="15:12" pos:end="15:14">= <expr pos:start="15:14" pos:end="15:14"><literal type="number" pos:start="15:14" pos:end="15:14">1</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:34">/* initialize pdu allocator */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><call pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:14">QLIST_INIT</name><argument_list pos:start="21:15" pos:end="21:29">(<argument pos:start="21:16" pos:end="21:28"><expr pos:start="21:16" pos:end="21:28"><operator pos:start="21:16" pos:end="21:16">&amp;</operator><name pos:start="21:17" pos:end="21:28"><name pos:start="21:17" pos:end="21:17">s</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:28">free_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><call pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:14">QLIST_INIT</name><argument_list pos:start="23:15" pos:end="23:31">(<argument pos:start="23:16" pos:end="23:30"><expr pos:start="23:16" pos:end="23:30"><operator pos:start="23:16" pos:end="23:16">&amp;</operator><name pos:start="23:17" pos:end="23:30"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:30">active_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="33:5">for <control pos:start="25:9" pos:end="25:39">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:34"><expr pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <operator pos:start="25:21" pos:end="25:21">(</operator><name pos:start="25:22" pos:end="25:28">MAX_REQ</name> <operator pos:start="25:30" pos:end="25:30">-</operator> <literal type="number" pos:start="25:32" pos:end="25:32">1</literal><operator pos:start="25:33" pos:end="25:33">)</operator></expr>;</condition> <incr pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:36">i</name><operator pos:start="25:37" pos:end="25:38">++</operator></expr></incr>)</control> <block pos:start="25:41" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:27">

        <expr_stmt pos:start="27:9" pos:end="27:60"><expr pos:start="27:9" pos:end="27:59"><call pos:start="27:9" pos:end="27:59"><name pos:start="27:9" pos:end="27:25">QLIST_INSERT_HEAD</name><argument_list pos:start="27:26" pos:end="27:59">(<argument pos:start="27:27" pos:end="27:39"><expr pos:start="27:27" pos:end="27:39"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:39"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:39">free_list</name></name></expr></argument>, <argument pos:start="27:42" pos:end="27:52"><expr pos:start="27:42" pos:end="27:52"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:52"><name pos:start="27:43" pos:end="27:43">v</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:49">pdus</name><index pos:start="27:50" pos:end="27:52">[<expr pos:start="27:51" pos:end="27:51"><name pos:start="27:51" pos:end="27:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="27:55" pos:end="27:58"><expr pos:start="27:55" pos:end="27:58"><name pos:start="27:55" pos:end="27:58">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:9">v</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">pdus</name><index pos:start="29:16" pos:end="29:18">[<expr pos:start="29:17" pos:end="29:17"><name pos:start="29:17" pos:end="29:17">i</name></expr>]</index></name><operator pos:start="29:19" pos:end="29:19">.</operator><name pos:start="29:20" pos:end="29:20">s</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:24">s</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:27"><expr pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:9">v</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:15">pdus</name><index pos:start="31:16" pos:end="31:18">[<expr pos:start="31:17" pos:end="31:17"><name pos:start="31:17" pos:end="31:17">i</name></expr>]</index></name><operator pos:start="31:19" pos:end="31:19">.</operator><name pos:start="31:20" pos:end="31:22">idx</name> <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:26">i</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><call pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:18">v9fs_path_init</name><argument_list pos:start="37:19" pos:end="37:25">(<argument pos:start="37:20" pos:end="37:24"><expr pos:start="37:20" pos:end="37:24"><operator pos:start="37:20" pos:end="37:20">&amp;</operator><name pos:start="37:21" pos:end="37:24">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:48"><expr pos:start="41:5" pos:end="41:47"><name pos:start="41:5" pos:end="41:7">fse</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:47"><name pos:start="41:11" pos:end="41:27">get_fsdev_fsentry</name><argument_list pos:start="41:28" pos:end="41:47">(<argument pos:start="41:29" pos:end="41:46"><expr pos:start="41:29" pos:end="41:46"><name pos:start="41:29" pos:end="41:46"><name pos:start="41:29" pos:end="41:29">s</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:37">fsconf</name><operator pos:start="41:38" pos:end="41:38">.</operator><name pos:start="41:39" pos:end="41:46">fsdev_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="57:5">if <condition pos:start="45:8" pos:end="45:13">(<expr pos:start="45:9" pos:end="45:12"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:12">fse</name></expr>)</condition> <block pos:start="45:15" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:17">

        <comment type="block" pos:start="47:9" pos:end="47:58">/* We don't have a fsdev identified by fsdev_id */</comment>

        <expr_stmt pos:start="49:9" pos:end="53:69"><expr pos:start="49:9" pos:end="53:68"><call pos:start="49:9" pos:end="53:68"><name pos:start="49:9" pos:end="49:18">error_setg</name><argument_list pos:start="49:19" pos:end="53:68">(<argument pos:start="49:20" pos:end="49:23"><expr pos:start="49:20" pos:end="49:23"><name pos:start="49:20" pos:end="49:23">errp</name></expr></argument>, <argument pos:start="49:26" pos:end="51:28"><expr pos:start="49:26" pos:end="51:28"><literal type="string" pos:start="49:26" pos:end="49:68">"9pfs device couldn't find fsdev with the "</literal>

                   <literal type="string" pos:start="51:20" pos:end="51:28">"id = %s"</literal></expr></argument>,

                   <argument pos:start="53:20" pos:end="53:67"><expr pos:start="53:20" pos:end="53:67"><ternary pos:start="53:20" pos:end="53:67"><condition pos:start="53:20" pos:end="53:39"><expr pos:start="53:20" pos:end="53:37"><name pos:start="53:20" pos:end="53:37"><name pos:start="53:20" pos:end="53:20">s</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:28">fsconf</name><operator pos:start="53:29" pos:end="53:29">.</operator><name pos:start="53:30" pos:end="53:37">fsdev_id</name></name></expr> ?</condition><then pos:start="53:41" pos:end="53:58"> <expr pos:start="53:41" pos:end="53:58"><name pos:start="53:41" pos:end="53:58"><name pos:start="53:41" pos:end="53:41">s</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:49">fsconf</name><operator pos:start="53:50" pos:end="53:50">.</operator><name pos:start="53:51" pos:end="53:58">fsdev_id</name></name></expr> </then><else pos:start="53:60" pos:end="53:67">: <expr pos:start="53:62" pos:end="53:67"><literal type="string" pos:start="53:62" pos:end="53:67">"NULL"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="55:9" pos:end="55:17">goto <name pos:start="55:14" pos:end="55:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="71:5"><if pos:start="61:5" pos:end="71:5">if <condition pos:start="61:8" pos:end="61:23">(<expr pos:start="61:9" pos:end="61:22"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:22"><name pos:start="61:10" pos:end="61:10">s</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:18">fsconf</name><operator pos:start="61:19" pos:end="61:19">.</operator><name pos:start="61:20" pos:end="61:22">tag</name></name></expr>)</condition> <block pos:start="61:25" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:17">

        <comment type="block" pos:start="63:9" pos:end="63:46">/* we haven't specified a mount_tag */</comment>

        <expr_stmt pos:start="65:9" pos:end="67:39"><expr pos:start="65:9" pos:end="67:38"><call pos:start="65:9" pos:end="67:38"><name pos:start="65:9" pos:end="65:18">error_setg</name><argument_list pos:start="65:19" pos:end="67:38">(<argument pos:start="65:20" pos:end="65:23"><expr pos:start="65:20" pos:end="65:23"><name pos:start="65:20" pos:end="65:23">errp</name></expr></argument>, <argument pos:start="65:26" pos:end="65:69"><expr pos:start="65:26" pos:end="65:69"><literal type="string" pos:start="65:26" pos:end="65:69">"fsdev with id %s needs mount_tag arguments"</literal></expr></argument>,

                   <argument pos:start="67:20" pos:end="67:37"><expr pos:start="67:20" pos:end="67:37"><name pos:start="67:20" pos:end="67:37"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:28">fsconf</name><operator pos:start="67:29" pos:end="67:29">.</operator><name pos:start="67:30" pos:end="67:37">fsdev_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:17">goto <name pos:start="69:14" pos:end="69:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:44"><expr pos:start="75:5" pos:end="75:43"><name pos:start="75:5" pos:end="75:23"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:10">ctx</name><operator pos:start="75:11" pos:end="75:11">.</operator><name pos:start="75:12" pos:end="75:23">export_flags</name></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <name pos:start="75:27" pos:end="75:43"><name pos:start="75:27" pos:end="75:29">fse</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:43">export_flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:41"><expr pos:start="77:5" pos:end="77:40"><name pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:10">ctx</name><operator pos:start="77:11" pos:end="77:11">.</operator><name pos:start="77:12" pos:end="77:18">fs_root</name></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <call pos:start="77:22" pos:end="77:40"><name pos:start="77:22" pos:end="77:29">g_strdup</name><argument_list pos:start="77:30" pos:end="77:40">(<argument pos:start="77:31" pos:end="77:39"><expr pos:start="77:31" pos:end="77:39"><name pos:start="77:31" pos:end="77:39"><name pos:start="77:31" pos:end="77:33">fse</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:39">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:35"><expr pos:start="79:5" pos:end="79:34"><name pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:10">ctx</name><operator pos:start="79:11" pos:end="79:11">.</operator><name pos:start="79:12" pos:end="79:16">exops</name><operator pos:start="79:17" pos:end="79:17">.</operator><name pos:start="79:18" pos:end="79:27">get_st_gen</name></name> <operator pos:start="79:29" pos:end="79:29">=</operator> <name pos:start="79:31" pos:end="79:34">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:32"><expr pos:start="81:5" pos:end="81:31"><name pos:start="81:5" pos:end="81:7">len</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <call pos:start="81:11" pos:end="81:31"><name pos:start="81:11" pos:end="81:16">strlen</name><argument_list pos:start="81:17" pos:end="81:31">(<argument pos:start="81:18" pos:end="81:30"><expr pos:start="81:18" pos:end="81:30"><name pos:start="81:18" pos:end="81:30"><name pos:start="81:18" pos:end="81:18">s</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:26">fsconf</name><operator pos:start="81:27" pos:end="81:27">.</operator><name pos:start="81:28" pos:end="81:30">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="91:5"><if pos:start="83:5" pos:end="91:5">if <condition pos:start="83:8" pos:end="83:30">(<expr pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:11">len</name> <operator pos:start="83:13" pos:end="83:13">&gt;</operator> <name pos:start="83:15" pos:end="83:25">MAX_TAG_LEN</name> <operator pos:start="83:27" pos:end="83:27">-</operator> <literal type="number" pos:start="83:29" pos:end="83:29">1</literal></expr>)</condition> <block pos:start="83:32" pos:end="91:5">{<block_content pos:start="85:9" pos:end="89:17">

        <expr_stmt pos:start="85:9" pos:end="87:78"><expr pos:start="85:9" pos:end="87:77"><call pos:start="85:9" pos:end="87:77"><name pos:start="85:9" pos:end="85:18">error_setg</name><argument_list pos:start="85:19" pos:end="87:77">(<argument pos:start="85:20" pos:end="85:23"><expr pos:start="85:20" pos:end="85:23"><name pos:start="85:20" pos:end="85:23">errp</name></expr></argument>, <argument pos:start="85:26" pos:end="87:39"><expr pos:start="85:26" pos:end="87:39"><literal type="string" pos:start="85:26" pos:end="85:68">"mount tag '%s' (%d bytes) is longer than "</literal>

                   <literal type="string" pos:start="87:20" pos:end="87:39">"maximum (%d bytes)"</literal></expr></argument>, <argument pos:start="87:42" pos:end="87:54"><expr pos:start="87:42" pos:end="87:54"><name pos:start="87:42" pos:end="87:54"><name pos:start="87:42" pos:end="87:42">s</name><operator pos:start="87:43" pos:end="87:44">-&gt;</operator><name pos:start="87:45" pos:end="87:50">fsconf</name><operator pos:start="87:51" pos:end="87:51">.</operator><name pos:start="87:52" pos:end="87:54">tag</name></name></expr></argument>, <argument pos:start="87:57" pos:end="87:59"><expr pos:start="87:57" pos:end="87:59"><name pos:start="87:57" pos:end="87:59">len</name></expr></argument>, <argument pos:start="87:62" pos:end="87:76"><expr pos:start="87:62" pos:end="87:76"><name pos:start="87:62" pos:end="87:72">MAX_TAG_LEN</name> <operator pos:start="87:74" pos:end="87:74">-</operator> <literal type="number" pos:start="87:76" pos:end="87:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="89:9" pos:end="89:17">goto <name pos:start="89:14" pos:end="89:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:37"><expr pos:start="95:5" pos:end="95:36"><name pos:start="95:5" pos:end="95:10"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:10">tag</name></name> <operator pos:start="95:12" pos:end="95:12">=</operator> <call pos:start="95:14" pos:end="95:36"><name pos:start="95:14" pos:end="95:21">g_strdup</name><argument_list pos:start="95:22" pos:end="95:36">(<argument pos:start="95:23" pos:end="95:35"><expr pos:start="95:23" pos:end="95:35"><name pos:start="95:23" pos:end="95:35"><name pos:start="95:23" pos:end="95:23">s</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:31">fsconf</name><operator pos:start="95:32" pos:end="95:32">.</operator><name pos:start="95:33" pos:end="95:35">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:20"><expr pos:start="97:5" pos:end="97:19"><name pos:start="97:5" pos:end="97:14"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:10">ctx</name><operator pos:start="97:11" pos:end="97:11">.</operator><name pos:start="97:12" pos:end="97:14">uid</name></name> <operator pos:start="97:16" pos:end="97:16">=</operator> <operator pos:start="97:18" pos:end="97:18">-</operator><literal type="number" pos:start="97:19" pos:end="97:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:22"><expr pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:10"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:10">ops</name></name> <operator pos:start="101:12" pos:end="101:12">=</operator> <name pos:start="101:14" pos:end="101:21"><name pos:start="101:14" pos:end="101:16">fse</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:21">ops</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:23"><expr pos:start="105:5" pos:end="105:22"><name pos:start="105:5" pos:end="105:15"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:15">fid_list</name></name> <operator pos:start="105:17" pos:end="105:17">=</operator> <name pos:start="105:19" pos:end="105:22">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:41"><expr pos:start="107:5" pos:end="107:40"><call pos:start="107:5" pos:end="107:40"><name pos:start="107:5" pos:end="107:23">qemu_co_rwlock_init</name><argument_list pos:start="107:24" pos:end="107:40">(<argument pos:start="107:25" pos:end="107:39"><expr pos:start="107:25" pos:end="107:39"><operator pos:start="107:25" pos:end="107:25">&amp;</operator><name pos:start="107:26" pos:end="107:39"><name pos:start="107:26" pos:end="107:26">s</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:39">rename_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="111:5" pos:end="119:5"><if pos:start="111:5" pos:end="119:5">if <condition pos:start="111:8" pos:end="111:34">(<expr pos:start="111:9" pos:end="111:33"><call pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:14">ops</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:20">init</name></name><argument_list pos:start="111:21" pos:end="111:29">(<argument pos:start="111:22" pos:end="111:28"><expr pos:start="111:22" pos:end="111:28"><operator pos:start="111:22" pos:end="111:22">&amp;</operator><name pos:start="111:23" pos:end="111:28"><name pos:start="111:23" pos:end="111:23">s</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:28">ctx</name></name></expr></argument>)</argument_list></call> <operator pos:start="111:31" pos:end="111:31">&lt;</operator> <literal type="number" pos:start="111:33" pos:end="111:33">0</literal></expr>)</condition> <block pos:start="111:36" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:17">

        <expr_stmt pos:start="113:9" pos:end="115:78"><expr pos:start="113:9" pos:end="115:77"><call pos:start="113:9" pos:end="115:77"><name pos:start="113:9" pos:end="113:18">error_setg</name><argument_list pos:start="113:19" pos:end="115:77">(<argument pos:start="113:20" pos:end="113:23"><expr pos:start="113:20" pos:end="113:23"><name pos:start="113:20" pos:end="113:23">errp</name></expr></argument>, <argument pos:start="113:26" pos:end="115:40"><expr pos:start="113:26" pos:end="115:40"><literal type="string" pos:start="113:26" pos:end="113:73">"9pfs Failed to initialize fs-driver with id:%s"</literal>

                   <literal type="string" pos:start="115:20" pos:end="115:40">" and export path:%s"</literal></expr></argument>, <argument pos:start="115:43" pos:end="115:60"><expr pos:start="115:43" pos:end="115:60"><name pos:start="115:43" pos:end="115:60"><name pos:start="115:43" pos:end="115:43">s</name><operator pos:start="115:44" pos:end="115:45">-&gt;</operator><name pos:start="115:46" pos:end="115:51">fsconf</name><operator pos:start="115:52" pos:end="115:52">.</operator><name pos:start="115:53" pos:end="115:60">fsdev_id</name></name></expr></argument>, <argument pos:start="115:63" pos:end="115:76"><expr pos:start="115:63" pos:end="115:76"><name pos:start="115:63" pos:end="115:76"><name pos:start="115:63" pos:end="115:63">s</name><operator pos:start="115:64" pos:end="115:65">-&gt;</operator><name pos:start="115:66" pos:end="115:68">ctx</name><operator pos:start="115:69" pos:end="115:69">.</operator><name pos:start="115:70" pos:end="115:76">fs_root</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="117:9" pos:end="117:17">goto <name pos:start="117:14" pos:end="117:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="123:5" pos:end="131:7">/*

     * Check details of export path, We need to use fs driver

     * call back to do that. Since we are in the init path, we don't

     * use co-routines here.

     */</comment>

    <if_stmt pos:start="133:5" pos:end="141:5"><if pos:start="133:5" pos:end="141:5">if <condition pos:start="133:8" pos:end="133:60">(<expr pos:start="133:9" pos:end="133:59"><call pos:start="133:9" pos:end="133:55"><name pos:start="133:9" pos:end="133:28"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:14">ops</name><operator pos:start="133:15" pos:end="133:16">-&gt;</operator><name pos:start="133:17" pos:end="133:28">name_to_path</name></name><argument_list pos:start="133:29" pos:end="133:55">(<argument pos:start="133:30" pos:end="133:36"><expr pos:start="133:30" pos:end="133:36"><operator pos:start="133:30" pos:end="133:30">&amp;</operator><name pos:start="133:31" pos:end="133:36"><name pos:start="133:31" pos:end="133:31">s</name><operator pos:start="133:32" pos:end="133:33">-&gt;</operator><name pos:start="133:34" pos:end="133:36">ctx</name></name></expr></argument>, <argument pos:start="133:39" pos:end="133:42"><expr pos:start="133:39" pos:end="133:42"><name pos:start="133:39" pos:end="133:42">NULL</name></expr></argument>, <argument pos:start="133:45" pos:end="133:47"><expr pos:start="133:45" pos:end="133:47"><literal type="string" pos:start="133:45" pos:end="133:47">"/"</literal></expr></argument>, <argument pos:start="133:50" pos:end="133:54"><expr pos:start="133:50" pos:end="133:54"><operator pos:start="133:50" pos:end="133:50">&amp;</operator><name pos:start="133:51" pos:end="133:54">path</name></expr></argument>)</argument_list></call> <operator pos:start="133:57" pos:end="133:57">&lt;</operator> <literal type="number" pos:start="133:59" pos:end="133:59">0</literal></expr>)</condition> <block pos:start="133:62" pos:end="141:5">{<block_content pos:start="135:9" pos:end="139:17">

        <expr_stmt pos:start="135:9" pos:end="137:75"><expr pos:start="135:9" pos:end="137:74"><call pos:start="135:9" pos:end="137:74"><name pos:start="135:9" pos:end="135:18">error_setg</name><argument_list pos:start="135:19" pos:end="137:74">(<argument pos:start="135:20" pos:end="135:23"><expr pos:start="135:20" pos:end="135:23"><name pos:start="135:20" pos:end="135:23">errp</name></expr></argument>,

                   <argument pos:start="137:20" pos:end="137:56"><expr pos:start="137:20" pos:end="137:56"><literal type="string" pos:start="137:20" pos:end="137:56">"error in converting name to path %s"</literal></expr></argument>, <argument pos:start="137:59" pos:end="137:73"><expr pos:start="137:59" pos:end="137:73"><call pos:start="137:59" pos:end="137:73"><name pos:start="137:59" pos:end="137:66">strerror</name><argument_list pos:start="137:67" pos:end="137:73">(<argument pos:start="137:68" pos:end="137:72"><expr pos:start="137:68" pos:end="137:72"><name pos:start="137:68" pos:end="137:72">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="139:9" pos:end="139:17">goto <name pos:start="139:14" pos:end="139:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="143:5" pos:end="155:5"><if pos:start="143:5" pos:end="149:5">if <condition pos:start="143:8" pos:end="143:45">(<expr pos:start="143:9" pos:end="143:44"><call pos:start="143:9" pos:end="143:44"><name pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:14">ops</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:21">lstat</name></name><argument_list pos:start="143:22" pos:end="143:44">(<argument pos:start="143:23" pos:end="143:29"><expr pos:start="143:23" pos:end="143:29"><operator pos:start="143:23" pos:end="143:23">&amp;</operator><name pos:start="143:24" pos:end="143:29"><name pos:start="143:24" pos:end="143:24">s</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:29">ctx</name></name></expr></argument>, <argument pos:start="143:32" pos:end="143:36"><expr pos:start="143:32" pos:end="143:36"><operator pos:start="143:32" pos:end="143:32">&amp;</operator><name pos:start="143:33" pos:end="143:36">path</name></expr></argument>, <argument pos:start="143:39" pos:end="143:43"><expr pos:start="143:39" pos:end="143:43"><operator pos:start="143:39" pos:end="143:39">&amp;</operator><name pos:start="143:40" pos:end="143:43">stat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:47" pos:end="149:5">{<block_content pos:start="145:9" pos:end="147:17">

        <expr_stmt pos:start="145:9" pos:end="145:68"><expr pos:start="145:9" pos:end="145:67"><call pos:start="145:9" pos:end="145:67"><name pos:start="145:9" pos:end="145:18">error_setg</name><argument_list pos:start="145:19" pos:end="145:67">(<argument pos:start="145:20" pos:end="145:23"><expr pos:start="145:20" pos:end="145:23"><name pos:start="145:20" pos:end="145:23">errp</name></expr></argument>, <argument pos:start="145:26" pos:end="145:55"><expr pos:start="145:26" pos:end="145:55"><literal type="string" pos:start="145:26" pos:end="145:55">"share path %s does not exist"</literal></expr></argument>, <argument pos:start="145:58" pos:end="145:66"><expr pos:start="145:58" pos:end="145:66"><name pos:start="145:58" pos:end="145:66"><name pos:start="145:58" pos:end="145:60">fse</name><operator pos:start="145:61" pos:end="145:62">-&gt;</operator><name pos:start="145:63" pos:end="145:66">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="147:9" pos:end="147:17">goto <name pos:start="147:14" pos:end="147:16">out</name>;</goto>

    </block_content>}</block></if> <if type="elseif" pos:start="149:7" pos:end="155:5">else if <condition pos:start="149:15" pos:end="149:38">(<expr pos:start="149:16" pos:end="149:37"><operator pos:start="149:16" pos:end="149:16">!</operator><call pos:start="149:17" pos:end="149:37"><name pos:start="149:17" pos:end="149:23">S_ISDIR</name><argument_list pos:start="149:24" pos:end="149:37">(<argument pos:start="149:25" pos:end="149:36"><expr pos:start="149:25" pos:end="149:36"><name pos:start="149:25" pos:end="149:36"><name pos:start="149:25" pos:end="149:28">stat</name><operator pos:start="149:29" pos:end="149:29">.</operator><name pos:start="149:30" pos:end="149:36">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:40" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:17">

        <expr_stmt pos:start="151:9" pos:end="151:72"><expr pos:start="151:9" pos:end="151:71"><call pos:start="151:9" pos:end="151:71"><name pos:start="151:9" pos:end="151:18">error_setg</name><argument_list pos:start="151:19" pos:end="151:71">(<argument pos:start="151:20" pos:end="151:23"><expr pos:start="151:20" pos:end="151:23"><name pos:start="151:20" pos:end="151:23">errp</name></expr></argument>, <argument pos:start="151:26" pos:end="151:59"><expr pos:start="151:26" pos:end="151:59"><literal type="string" pos:start="151:26" pos:end="151:59">"share path %s is not a directory"</literal></expr></argument>, <argument pos:start="151:62" pos:end="151:70"><expr pos:start="151:62" pos:end="151:70"><name pos:start="151:62" pos:end="151:70"><name pos:start="151:62" pos:end="151:64">fse</name><operator pos:start="151:65" pos:end="151:66">-&gt;</operator><name pos:start="151:67" pos:end="151:70">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="153:9" pos:end="153:17">goto <name pos:start="153:14" pos:end="153:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:26"><expr pos:start="157:5" pos:end="157:25"><call pos:start="157:5" pos:end="157:25"><name pos:start="157:5" pos:end="157:18">v9fs_path_free</name><argument_list pos:start="157:19" pos:end="157:25">(<argument pos:start="157:20" pos:end="157:24"><expr pos:start="157:20" pos:end="157:24"><operator pos:start="157:20" pos:end="157:20">&amp;</operator><name pos:start="157:21" pos:end="157:24">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:11"><expr pos:start="161:5" pos:end="161:10"><name pos:start="161:5" pos:end="161:6">rc</name> <operator pos:start="161:8" pos:end="161:8">=</operator> <literal type="number" pos:start="161:10" pos:end="161:10">0</literal></expr>;</expr_stmt>

<label pos:start="163:1" pos:end="163:4"><name pos:start="163:1" pos:end="163:3">out</name>:</label>

    <if_stmt pos:start="165:5" pos:end="179:5"><if pos:start="165:5" pos:end="179:5">if <condition pos:start="165:8" pos:end="165:11">(<expr pos:start="165:9" pos:end="165:10"><name pos:start="165:9" pos:end="165:10">rc</name></expr>)</condition> <block pos:start="165:13" pos:end="179:5">{<block_content pos:start="167:9" pos:end="177:30">

        <if_stmt pos:start="167:9" pos:end="171:9"><if pos:start="167:9" pos:end="171:9">if <condition pos:start="167:12" pos:end="167:46">(<expr pos:start="167:13" pos:end="167:45"><name pos:start="167:13" pos:end="167:27"><name pos:start="167:13" pos:end="167:13">s</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:18">ops</name><operator pos:start="167:19" pos:end="167:20">-&gt;</operator><name pos:start="167:21" pos:end="167:27">cleanup</name></name> <operator pos:start="167:29" pos:end="167:30">&amp;&amp;</operator> <name pos:start="167:32" pos:end="167:45"><name pos:start="167:32" pos:end="167:32">s</name><operator pos:start="167:33" pos:end="167:34">-&gt;</operator><name pos:start="167:35" pos:end="167:37">ctx</name><operator pos:start="167:38" pos:end="167:38">.</operator><name pos:start="167:39" pos:end="167:45">private</name></name></expr>)</condition> <block pos:start="167:48" pos:end="171:9">{<block_content pos:start="169:13" pos:end="169:37">

            <expr_stmt pos:start="169:13" pos:end="169:37"><expr pos:start="169:13" pos:end="169:36"><call pos:start="169:13" pos:end="169:36"><name pos:start="169:13" pos:end="169:27"><name pos:start="169:13" pos:end="169:13">s</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:18">ops</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:27">cleanup</name></name><argument_list pos:start="169:28" pos:end="169:36">(<argument pos:start="169:29" pos:end="169:35"><expr pos:start="169:29" pos:end="169:35"><operator pos:start="169:29" pos:end="169:29">&amp;</operator><name pos:start="169:30" pos:end="169:35"><name pos:start="169:30" pos:end="169:30">s</name><operator pos:start="169:31" pos:end="169:32">-&gt;</operator><name pos:start="169:33" pos:end="169:35">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:23"><expr pos:start="173:9" pos:end="173:22"><call pos:start="173:9" pos:end="173:22"><name pos:start="173:9" pos:end="173:14">g_free</name><argument_list pos:start="173:15" pos:end="173:22">(<argument pos:start="173:16" pos:end="173:21"><expr pos:start="173:16" pos:end="173:21"><name pos:start="173:16" pos:end="173:21"><name pos:start="173:16" pos:end="173:16">s</name><operator pos:start="173:17" pos:end="173:18">-&gt;</operator><name pos:start="173:19" pos:end="173:21">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:31"><expr pos:start="175:9" pos:end="175:30"><call pos:start="175:9" pos:end="175:30"><name pos:start="175:9" pos:end="175:14">g_free</name><argument_list pos:start="175:15" pos:end="175:30">(<argument pos:start="175:16" pos:end="175:29"><expr pos:start="175:16" pos:end="175:29"><name pos:start="175:16" pos:end="175:29"><name pos:start="175:16" pos:end="175:16">s</name><operator pos:start="175:17" pos:end="175:18">-&gt;</operator><name pos:start="175:19" pos:end="175:21">ctx</name><operator pos:start="175:22" pos:end="175:22">.</operator><name pos:start="175:23" pos:end="175:29">fs_root</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:30"><expr pos:start="177:9" pos:end="177:29"><call pos:start="177:9" pos:end="177:29"><name pos:start="177:9" pos:end="177:22">v9fs_path_free</name><argument_list pos:start="177:23" pos:end="177:29">(<argument pos:start="177:24" pos:end="177:28"><expr pos:start="177:24" pos:end="177:28"><operator pos:start="177:24" pos:end="177:24">&amp;</operator><name pos:start="177:25" pos:end="177:28">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="181:5" pos:end="181:14">return <expr pos:start="181:12" pos:end="181:13"><name pos:start="181:12" pos:end="181:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
