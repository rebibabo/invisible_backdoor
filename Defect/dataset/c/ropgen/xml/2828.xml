<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2828.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">iommu_dma_memory_set</name><parameter_list pos:start="1:25" pos:end="3:40">(<parameter pos:start="1:26" pos:end="1:40"><decl pos:start="1:26" pos:end="1:40"><type pos:start="1:26" pos:end="1:40"><name pos:start="1:26" pos:end="1:35">DMAContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dma</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:52">dma_addr_t</name></type> <name pos:start="1:54" pos:end="1:57">addr</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:66">uint8_t</name></type> <name pos:start="1:68" pos:end="1:68">c</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:39"><decl pos:start="3:26" pos:end="3:39"><type pos:start="3:26" pos:end="3:39"><name pos:start="3:26" pos:end="3:35">dma_addr_t</name></type> <name pos:start="3:37" pos:end="3:39">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:13">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">target_phys_addr_t</name></type> <name pos:start="7:24" pos:end="7:28">paddr</name></decl>, <decl pos:start="7:31" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:22"/><name pos:start="7:31" pos:end="7:34">plen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="14:0"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="13:1" pos:end="13:18">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:18">DEBUG_IOMMU</name></cpp:ifdef>

    <expr_stmt pos:start="15:5" pos:end="20:0"><expr pos:start="15:5" pos:end="17:56"><call pos:start="15:5" pos:end="17:56"><name pos:start="15:5" pos:end="15:11">fprintf</name><argument_list pos:start="15:12" pos:end="17:56">(<argument pos:start="15:13" pos:end="15:18"><expr pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:18">stderr</name></expr></argument>, <argument pos:start="15:21" pos:end="17:39"><expr pos:start="15:21" pos:end="17:39"><literal type="string" pos:start="15:21" pos:end="15:55">"dma_memory_set context=%p addr=0x"</literal> <name pos:start="15:57" pos:end="15:68">DMA_ADDR_FMT</name>

            <literal type="string" pos:start="17:13" pos:end="17:21">" len=0x"</literal> <name pos:start="17:23" pos:end="17:34">DMA_ADDR_FMT</name> <literal type="string" pos:start="17:36" pos:end="17:39">"\n"</literal></expr></argument>, <argument pos:start="17:42" pos:end="17:44"><expr pos:start="17:42" pos:end="17:44"><name pos:start="17:42" pos:end="17:44">dma</name></expr></argument>, <argument pos:start="17:47" pos:end="17:50"><expr pos:start="17:47" pos:end="17:50"><name pos:start="17:47" pos:end="17:50">addr</name></expr></argument>, <argument pos:start="17:53" pos:end="17:55"><expr pos:start="17:53" pos:end="17:55"><name pos:start="17:53" pos:end="17:55">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>



    <while pos:start="23:5" pos:end="55:5">while <condition pos:start="23:11" pos:end="23:15">(<expr pos:start="23:12" pos:end="23:14"><name pos:start="23:12" pos:end="23:14">len</name></expr>)</condition> <block pos:start="23:17" pos:end="55:5">{<block_content pos:start="25:9" pos:end="53:21">

        <expr_stmt pos:start="25:9" pos:end="27:56"><expr pos:start="25:9" pos:end="27:55"><name pos:start="25:9" pos:end="25:11">err</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="27:55"><name pos:start="25:15" pos:end="25:28"><name pos:start="25:15" pos:end="25:17">dma</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:28">translate</name></name><argument_list pos:start="25:29" pos:end="27:55">(<argument pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:32">dma</name></expr></argument>, <argument pos:start="25:35" pos:end="25:38"><expr pos:start="25:35" pos:end="25:38"><name pos:start="25:35" pos:end="25:38">addr</name></expr></argument>, <argument pos:start="25:41" pos:end="25:46"><expr pos:start="25:41" pos:end="25:46"><operator pos:start="25:41" pos:end="25:41">&amp;</operator><name pos:start="25:42" pos:end="25:46">paddr</name></expr></argument>, <argument pos:start="25:49" pos:end="25:53"><expr pos:start="25:49" pos:end="25:53"><operator pos:start="25:49" pos:end="25:49">&amp;</operator><name pos:start="25:50" pos:end="25:53">plen</name></expr></argument>,

                             <argument pos:start="27:30" pos:end="27:54"><expr pos:start="27:30" pos:end="27:54"><name pos:start="27:30" pos:end="27:54">DMA_DIRECTION_FROM_DEVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:16">(<expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">err</name></expr>)</condition> <block pos:start="29:18" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:23">

            <return pos:start="31:13" pos:end="31:23">return <expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">err</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="37:9" pos:end="37:64">/* The translation might be valid for larger regions. */</comment>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:23">(<expr pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:16">plen</name> <operator pos:start="39:18" pos:end="39:18">&gt;</operator> <name pos:start="39:20" pos:end="39:22">len</name></expr>)</condition> <block pos:start="39:25" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:23">

            <expr_stmt pos:start="41:13" pos:end="41:23"><expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:16">plen</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:22">len</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:51"><expr pos:start="47:9" pos:end="47:50"><call pos:start="47:9" pos:end="47:50"><name pos:start="47:9" pos:end="47:25">do_dma_memory_set</name><argument_list pos:start="47:26" pos:end="47:50">(<argument pos:start="47:27" pos:end="47:33"><expr pos:start="47:27" pos:end="47:33"><name pos:start="47:27" pos:end="47:33"><name pos:start="47:27" pos:end="47:29">dma</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:33">as</name></name></expr></argument>, <argument pos:start="47:36" pos:end="47:40"><expr pos:start="47:36" pos:end="47:40"><name pos:start="47:36" pos:end="47:40">paddr</name></expr></argument>, <argument pos:start="47:43" pos:end="47:43"><expr pos:start="47:43" pos:end="47:43"><name pos:start="47:43" pos:end="47:43">c</name></expr></argument>, <argument pos:start="47:46" pos:end="47:49"><expr pos:start="47:46" pos:end="47:49"><name pos:start="47:46" pos:end="47:49">plen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:20"><expr pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:11">len</name> <operator pos:start="51:13" pos:end="51:14">-=</operator> <name pos:start="51:16" pos:end="51:19">plen</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:12">addr</name> <operator pos:start="53:14" pos:end="53:15">+=</operator> <name pos:start="53:17" pos:end="53:20">plen</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
