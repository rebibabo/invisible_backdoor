<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16983.c" pos:tabs="8"><function pos:start="1:1" pos:end="295:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_pic_hdr</name><parameter_list pos:start="1:26" pos:end="1:70">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:41">IVI45DecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">ctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:69"><decl pos:start="1:49" pos:end="1:69"><type pos:start="1:49" pos:end="1:69"><name pos:start="1:49" pos:end="1:62">AVCodecContext</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="295:1">{<block_content pos:start="5:5" pos:end="293:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type>             <name pos:start="5:21" pos:end="5:33">pic_size_indx</name></decl>, <decl pos:start="5:36" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:36" pos:end="5:36">i</name></decl>, <decl pos:start="5:39" pos:end="5:39"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:39" pos:end="5:39">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">IVIPicConfig</name></type>    <name pos:start="7:21" pos:end="7:28">pic_conf</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:42">(<expr pos:start="11:9" pos:end="11:41"><call pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:16">get_bits</name><argument_list pos:start="11:17" pos:end="11:30">(<argument pos:start="11:18" pos:end="11:25"><expr pos:start="11:18" pos:end="11:25"><operator pos:start="11:18" pos:end="11:18">&amp;</operator><name pos:start="11:19" pos:end="11:25"><name pos:start="11:19" pos:end="11:21">ctx</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:25">gb</name></name></expr></argument>, <argument pos:start="11:28" pos:end="11:29"><expr pos:start="11:28" pos:end="11:29"><literal type="number" pos:start="11:28" pos:end="11:29">18</literal></expr></argument>)</argument_list></call> <operator pos:start="11:32" pos:end="11:33">!=</operator> <literal type="number" pos:start="11:35" pos:end="11:41">0x3FFF8</literal></expr>)</condition> <block pos:start="11:44" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:35">

        <expr_stmt pos:start="13:9" pos:end="13:69"><expr pos:start="13:9" pos:end="13:68"><call pos:start="13:9" pos:end="13:68"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:68">(<argument pos:start="13:16" pos:end="13:20"><expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">avctx</name></expr></argument>, <argument pos:start="13:23" pos:end="13:34"><expr pos:start="13:23" pos:end="13:34"><name pos:start="13:23" pos:end="13:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:37" pos:end="13:67"><expr pos:start="13:37" pos:end="13:67"><literal type="string" pos:start="13:37" pos:end="13:67">"Invalid picture start code!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:35">return <expr pos:start="15:16" pos:end="15:34"><name pos:start="15:16" pos:end="15:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:7">ctx</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:24">prev_frame_type</name></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <name pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:30">ctx</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:42">frame_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:49"><expr pos:start="23:5" pos:end="23:48"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:7">ctx</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:19">frame_type</name></name>      <operator pos:start="23:26" pos:end="23:26">=</operator> <call pos:start="23:28" pos:end="23:48"><name pos:start="23:28" pos:end="23:35">get_bits</name><argument_list pos:start="23:36" pos:end="23:48">(<argument pos:start="23:37" pos:end="23:44"><expr pos:start="23:37" pos:end="23:44"><operator pos:start="23:37" pos:end="23:37">&amp;</operator><name pos:start="23:38" pos:end="23:44"><name pos:start="23:38" pos:end="23:40">ctx</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:44">gb</name></name></expr></argument>, <argument pos:start="23:47" pos:end="23:47"><expr pos:start="23:47" pos:end="23:47"><literal type="number" pos:start="23:47" pos:end="23:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:29">(<expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:11">ctx</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:23">frame_type</name></name> <operator pos:start="25:25" pos:end="25:26">==</operator> <literal type="number" pos:start="25:28" pos:end="25:28">7</literal></expr>)</condition> <block pos:start="25:31" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:35">

        <expr_stmt pos:start="27:9" pos:end="27:81"><expr pos:start="27:9" pos:end="27:80"><call pos:start="27:9" pos:end="27:80"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:80">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">avctx</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:62"><expr pos:start="27:37" pos:end="27:62"><literal type="string" pos:start="27:37" pos:end="27:62">"Invalid frame type: %d\n"</literal></expr></argument>, <argument pos:start="27:65" pos:end="27:79"><expr pos:start="27:65" pos:end="27:79"><name pos:start="27:65" pos:end="27:79"><name pos:start="27:65" pos:end="27:67">ctx</name><operator pos:start="27:68" pos:end="27:69">-&gt;</operator><name pos:start="27:70" pos:end="27:79">frame_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:35">return <expr pos:start="29:16" pos:end="29:34"><name pos:start="29:16" pos:end="29:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="37:30"><if pos:start="35:5" pos:end="37:30">if <condition pos:start="35:8" pos:end="35:48">(<expr pos:start="35:9" pos:end="35:47"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:11">ctx</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:23">frame_type</name></name> <operator pos:start="35:25" pos:end="35:26">==</operator> <name pos:start="35:28" pos:end="35:47">IVI4_FRAMETYPE_BIDIR</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:30"><block_content pos:start="37:9" pos:end="37:30">

        <expr_stmt pos:start="37:9" pos:end="37:30"><expr pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:11">ctx</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:25">has_b_frames</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <literal type="number" pos:start="37:29" pos:end="37:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:45"><expr pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:7">ctx</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:22">transp_status</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <call pos:start="41:26" pos:end="41:44"><name pos:start="41:26" pos:end="41:34">get_bits1</name><argument_list pos:start="41:35" pos:end="41:44">(<argument pos:start="41:36" pos:end="41:43"><expr pos:start="41:36" pos:end="41:43"><operator pos:start="41:36" pos:end="41:36">&amp;</operator><name pos:start="41:37" pos:end="41:43"><name pos:start="41:37" pos:end="41:39">ctx</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:27">(<expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:11">ctx</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:26">transp_status</name></name></expr>)</condition> <block pos:start="43:29" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:28">

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:11">ctx</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:23">has_transp</name></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <literal type="number" pos:start="45:27" pos:end="45:27">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:72">/* unknown bit: Mac decoder ignores this bit, XANIM returns error */</comment>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:28">(<expr pos:start="53:9" pos:end="53:27"><call pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:17">get_bits1</name><argument_list pos:start="53:18" pos:end="53:27">(<argument pos:start="53:19" pos:end="53:26"><expr pos:start="53:19" pos:end="53:26"><operator pos:start="53:19" pos:end="53:19">&amp;</operator><name pos:start="53:20" pos:end="53:26"><name pos:start="53:20" pos:end="53:22">ctx</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:26">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:30" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:35">

        <expr_stmt pos:start="55:9" pos:end="55:58"><expr pos:start="55:9" pos:end="55:57"><call pos:start="55:9" pos:end="55:57"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:57">(<argument pos:start="55:16" pos:end="55:20"><expr pos:start="55:16" pos:end="55:20"><name pos:start="55:16" pos:end="55:20">avctx</name></expr></argument>, <argument pos:start="55:23" pos:end="55:34"><expr pos:start="55:23" pos:end="55:34"><name pos:start="55:23" pos:end="55:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:37" pos:end="55:56"><expr pos:start="55:37" pos:end="55:56"><literal type="string" pos:start="55:37" pos:end="55:56">"Sync bit is set!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:35">return <expr pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:70"><expr pos:start="63:5" pos:end="63:69"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:7">ctx</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:18">data_size</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <ternary pos:start="63:22" pos:end="63:69"><condition pos:start="63:22" pos:end="63:42"><expr pos:start="63:22" pos:end="63:40"><call pos:start="63:22" pos:end="63:40"><name pos:start="63:22" pos:end="63:30">get_bits1</name><argument_list pos:start="63:31" pos:end="63:40">(<argument pos:start="63:32" pos:end="63:39"><expr pos:start="63:32" pos:end="63:39"><operator pos:start="63:32" pos:end="63:32">&amp;</operator><name pos:start="63:33" pos:end="63:39"><name pos:start="63:33" pos:end="63:35">ctx</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:39">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="63:44" pos:end="63:65"> <expr pos:start="63:44" pos:end="63:65"><call pos:start="63:44" pos:end="63:65"><name pos:start="63:44" pos:end="63:51">get_bits</name><argument_list pos:start="63:52" pos:end="63:65">(<argument pos:start="63:53" pos:end="63:60"><expr pos:start="63:53" pos:end="63:60"><operator pos:start="63:53" pos:end="63:53">&amp;</operator><name pos:start="63:54" pos:end="63:60"><name pos:start="63:54" pos:end="63:56">ctx</name><operator pos:start="63:57" pos:end="63:58">-&gt;</operator><name pos:start="63:59" pos:end="63:60">gb</name></name></expr></argument>, <argument pos:start="63:63" pos:end="63:64"><expr pos:start="63:63" pos:end="63:64"><literal type="number" pos:start="63:63" pos:end="63:64">24</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="63:67" pos:end="63:69">: <expr pos:start="63:69" pos:end="63:69"><literal type="number" pos:start="63:69" pos:end="63:69">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:67">/* null frames don't contain anything else so we just return */</comment>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:53">(<expr pos:start="69:9" pos:end="69:52"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:11">ctx</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:23">frame_type</name></name> <operator pos:start="69:25" pos:end="69:26">&gt;=</operator> <name pos:start="69:28" pos:end="69:52">IVI4_FRAMETYPE_NULL_FIRST</name></expr>)</condition> <block pos:start="69:55" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:17">

        <expr_stmt pos:start="71:9" pos:end="71:52"><expr pos:start="71:9" pos:end="71:51"><call pos:start="71:9" pos:end="71:51"><name pos:start="71:9" pos:end="71:15">ff_dlog</name><argument_list pos:start="71:16" pos:end="71:51">(<argument pos:start="71:17" pos:end="71:21"><expr pos:start="71:17" pos:end="71:21"><name pos:start="71:17" pos:end="71:21">avctx</name></expr></argument>, <argument pos:start="71:24" pos:end="71:50"><expr pos:start="71:24" pos:end="71:50"><literal type="string" pos:start="71:24" pos:end="71:50">"Null frame encountered!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:17">return <expr pos:start="73:16" pos:end="73:16"><literal type="number" pos:start="73:16" pos:end="73:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:71">/* Check key lock status. If enabled - ignore lock word.         */</comment>

    <comment type="block" pos:start="81:5" pos:end="81:71">/* Usually we have to prompt the user for the password, but      */</comment>

    <comment type="block" pos:start="83:5" pos:end="83:71">/* we don't do that because Indeo 4 videos can be decoded anyway */</comment>

    <if_stmt pos:start="85:5" pos:end="91:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="85:28">(<expr pos:start="85:9" pos:end="85:27"><call pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:17">get_bits1</name><argument_list pos:start="85:18" pos:end="85:27">(<argument pos:start="85:19" pos:end="85:26"><expr pos:start="85:19" pos:end="85:26"><operator pos:start="85:19" pos:end="85:19">&amp;</operator><name pos:start="85:20" pos:end="85:26"><name pos:start="85:20" pos:end="85:22">ctx</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:26">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:30" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:53">

        <expr_stmt pos:start="87:9" pos:end="87:37"><expr pos:start="87:9" pos:end="87:36"><call pos:start="87:9" pos:end="87:36"><name pos:start="87:9" pos:end="87:22">skip_bits_long</name><argument_list pos:start="87:23" pos:end="87:36">(<argument pos:start="87:24" pos:end="87:31"><expr pos:start="87:24" pos:end="87:31"><operator pos:start="87:24" pos:end="87:24">&amp;</operator><name pos:start="87:25" pos:end="87:31"><name pos:start="87:25" pos:end="87:27">ctx</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:31">gb</name></name></expr></argument>, <argument pos:start="87:34" pos:end="87:35"><expr pos:start="87:34" pos:end="87:35"><literal type="number" pos:start="87:34" pos:end="87:35">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:53"><expr pos:start="89:9" pos:end="89:52"><call pos:start="89:9" pos:end="89:52"><name pos:start="89:9" pos:end="89:15">ff_dlog</name><argument_list pos:start="89:16" pos:end="89:52">(<argument pos:start="89:17" pos:end="89:21"><expr pos:start="89:17" pos:end="89:21"><name pos:start="89:17" pos:end="89:21">avctx</name></expr></argument>, <argument pos:start="89:24" pos:end="89:51"><expr pos:start="89:24" pos:end="89:51"><literal type="string" pos:start="89:24" pos:end="89:51">"Password-protected clip!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:42"><expr pos:start="95:5" pos:end="95:41"><name pos:start="95:5" pos:end="95:17">pic_size_indx</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <call pos:start="95:21" pos:end="95:41"><name pos:start="95:21" pos:end="95:28">get_bits</name><argument_list pos:start="95:29" pos:end="95:41">(<argument pos:start="95:30" pos:end="95:37"><expr pos:start="95:30" pos:end="95:37"><operator pos:start="95:30" pos:end="95:30">&amp;</operator><name pos:start="95:31" pos:end="95:37"><name pos:start="95:31" pos:end="95:33">ctx</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:37">gb</name></name></expr></argument>, <argument pos:start="95:40" pos:end="95:40"><expr pos:start="95:40" pos:end="95:40"><literal type="number" pos:start="95:40" pos:end="95:40">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="109:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:43">(<expr pos:start="97:9" pos:end="97:42"><name pos:start="97:9" pos:end="97:21">pic_size_indx</name> <operator pos:start="97:23" pos:end="97:24">==</operator> <name pos:start="97:26" pos:end="97:42">IVI4_PIC_SIZE_ESC</name></expr>)</condition> <block pos:start="97:45" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:53">

        <expr_stmt pos:start="99:9" pos:end="99:53"><expr pos:start="99:9" pos:end="99:52"><name pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:16">pic_conf</name><operator pos:start="99:17" pos:end="99:17">.</operator><name pos:start="99:18" pos:end="99:27">pic_height</name></name> <operator pos:start="99:29" pos:end="99:29">=</operator> <call pos:start="99:31" pos:end="99:52"><name pos:start="99:31" pos:end="99:38">get_bits</name><argument_list pos:start="99:39" pos:end="99:52">(<argument pos:start="99:40" pos:end="99:47"><expr pos:start="99:40" pos:end="99:47"><operator pos:start="99:40" pos:end="99:40">&amp;</operator><name pos:start="99:41" pos:end="99:47"><name pos:start="99:41" pos:end="99:43">ctx</name><operator pos:start="99:44" pos:end="99:45">-&gt;</operator><name pos:start="99:46" pos:end="99:47">gb</name></name></expr></argument>, <argument pos:start="99:50" pos:end="99:51"><expr pos:start="99:50" pos:end="99:51"><literal type="number" pos:start="99:50" pos:end="99:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:53"><expr pos:start="101:9" pos:end="101:52"><name pos:start="101:9" pos:end="101:26"><name pos:start="101:9" pos:end="101:16">pic_conf</name><operator pos:start="101:17" pos:end="101:17">.</operator><name pos:start="101:18" pos:end="101:26">pic_width</name></name>  <operator pos:start="101:29" pos:end="101:29">=</operator> <call pos:start="101:31" pos:end="101:52"><name pos:start="101:31" pos:end="101:38">get_bits</name><argument_list pos:start="101:39" pos:end="101:52">(<argument pos:start="101:40" pos:end="101:47"><expr pos:start="101:40" pos:end="101:47"><operator pos:start="101:40" pos:end="101:40">&amp;</operator><name pos:start="101:41" pos:end="101:47"><name pos:start="101:41" pos:end="101:43">ctx</name><operator pos:start="101:44" pos:end="101:45">-&gt;</operator><name pos:start="101:46" pos:end="101:47">gb</name></name></expr></argument>, <argument pos:start="101:50" pos:end="101:51"><expr pos:start="101:50" pos:end="101:51"><literal type="number" pos:start="101:50" pos:end="101:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="109:5">else <block pos:start="103:12" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:75">

        <expr_stmt pos:start="105:9" pos:end="105:75"><expr pos:start="105:9" pos:end="105:74"><name pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:16">pic_conf</name><operator pos:start="105:17" pos:end="105:17">.</operator><name pos:start="105:18" pos:end="105:27">pic_height</name></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <name pos:start="105:31" pos:end="105:74"><name pos:start="105:31" pos:end="105:51">ivi4_common_pic_sizes</name><index pos:start="105:52" pos:end="105:74">[<expr pos:start="105:53" pos:end="105:73"><name pos:start="105:53" pos:end="105:65">pic_size_indx</name> <operator pos:start="105:67" pos:end="105:67">*</operator> <literal type="number" pos:start="105:69" pos:end="105:71">2</literal> <operator pos:start="105:71" pos:end="105:71">+</operator> <literal type="number" pos:start="105:73" pos:end="105:73">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:75"><expr pos:start="107:9" pos:end="107:74"><name pos:start="107:9" pos:end="107:26"><name pos:start="107:9" pos:end="107:16">pic_conf</name><operator pos:start="107:17" pos:end="107:17">.</operator><name pos:start="107:18" pos:end="107:26">pic_width</name></name>  <operator pos:start="107:29" pos:end="107:29">=</operator> <name pos:start="107:31" pos:end="107:74"><name pos:start="107:31" pos:end="107:51">ivi4_common_pic_sizes</name><index pos:start="107:52" pos:end="107:74">[<expr pos:start="107:53" pos:end="107:69"><name pos:start="107:53" pos:end="107:65">pic_size_indx</name> <operator pos:start="107:67" pos:end="107:67">*</operator> <literal type="number" pos:start="107:69" pos:end="107:69">2</literal></expr>    ]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="113:5" pos:end="113:33">/* Decode tile dimensions. */</comment>

    <if_stmt pos:start="115:5" pos:end="129:5"><if pos:start="115:5" pos:end="123:5">if <condition pos:start="115:8" pos:end="115:28">(<expr pos:start="115:9" pos:end="115:27"><call pos:start="115:9" pos:end="115:27"><name pos:start="115:9" pos:end="115:17">get_bits1</name><argument_list pos:start="115:18" pos:end="115:27">(<argument pos:start="115:19" pos:end="115:26"><expr pos:start="115:19" pos:end="115:26"><operator pos:start="115:19" pos:end="115:19">&amp;</operator><name pos:start="115:20" pos:end="115:26"><name pos:start="115:20" pos:end="115:22">ctx</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:26">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:30" pos:end="123:5">{<block_content pos:start="117:9" pos:end="121:29">

        <expr_stmt pos:start="117:9" pos:end="117:91"><expr pos:start="117:9" pos:end="117:90"><name pos:start="117:9" pos:end="117:28"><name pos:start="117:9" pos:end="117:16">pic_conf</name><operator pos:start="117:17" pos:end="117:17">.</operator><name pos:start="117:18" pos:end="117:28">tile_height</name></name> <operator pos:start="117:30" pos:end="117:30">=</operator> <call pos:start="117:32" pos:end="117:90"><name pos:start="117:32" pos:end="117:46">scale_tile_size</name><argument_list pos:start="117:47" pos:end="117:90">(<argument pos:start="117:48" pos:end="117:66"><expr pos:start="117:48" pos:end="117:66"><name pos:start="117:48" pos:end="117:66"><name pos:start="117:48" pos:end="117:55">pic_conf</name><operator pos:start="117:56" pos:end="117:56">.</operator><name pos:start="117:57" pos:end="117:66">pic_height</name></name></expr></argument>, <argument pos:start="117:69" pos:end="117:89"><expr pos:start="117:69" pos:end="117:89"><call pos:start="117:69" pos:end="117:89"><name pos:start="117:69" pos:end="117:76">get_bits</name><argument_list pos:start="117:77" pos:end="117:89">(<argument pos:start="117:78" pos:end="117:85"><expr pos:start="117:78" pos:end="117:85"><operator pos:start="117:78" pos:end="117:78">&amp;</operator><name pos:start="117:79" pos:end="117:85"><name pos:start="117:79" pos:end="117:81">ctx</name><operator pos:start="117:82" pos:end="117:83">-&gt;</operator><name pos:start="117:84" pos:end="117:85">gb</name></name></expr></argument>, <argument pos:start="117:88" pos:end="117:88"><expr pos:start="117:88" pos:end="117:88"><literal type="number" pos:start="117:88" pos:end="117:88">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:91"><expr pos:start="119:9" pos:end="119:90"><name pos:start="119:9" pos:end="119:27"><name pos:start="119:9" pos:end="119:16">pic_conf</name><operator pos:start="119:17" pos:end="119:17">.</operator><name pos:start="119:18" pos:end="119:27">tile_width</name></name>  <operator pos:start="119:30" pos:end="119:30">=</operator> <call pos:start="119:32" pos:end="119:90"><name pos:start="119:32" pos:end="119:46">scale_tile_size</name><argument_list pos:start="119:47" pos:end="119:90">(<argument pos:start="119:48" pos:end="119:65"><expr pos:start="119:48" pos:end="119:65"><name pos:start="119:48" pos:end="119:65"><name pos:start="119:48" pos:end="119:55">pic_conf</name><operator pos:start="119:56" pos:end="119:56">.</operator><name pos:start="119:57" pos:end="119:65">pic_width</name></name></expr></argument>,  <argument pos:start="119:69" pos:end="119:89"><expr pos:start="119:69" pos:end="119:89"><call pos:start="119:69" pos:end="119:89"><name pos:start="119:69" pos:end="119:76">get_bits</name><argument_list pos:start="119:77" pos:end="119:89">(<argument pos:start="119:78" pos:end="119:85"><expr pos:start="119:78" pos:end="119:85"><operator pos:start="119:78" pos:end="119:78">&amp;</operator><name pos:start="119:79" pos:end="119:85"><name pos:start="119:79" pos:end="119:81">ctx</name><operator pos:start="119:82" pos:end="119:83">-&gt;</operator><name pos:start="119:84" pos:end="119:85">gb</name></name></expr></argument>, <argument pos:start="119:88" pos:end="119:88"><expr pos:start="119:88" pos:end="119:88"><literal type="number" pos:start="119:88" pos:end="119:88">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:29"><expr pos:start="121:9" pos:end="121:28"><name pos:start="121:9" pos:end="121:24"><name pos:start="121:9" pos:end="121:11">ctx</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:24">uses_tiling</name></name> <operator pos:start="121:26" pos:end="121:26">=</operator> <literal type="number" pos:start="121:28" pos:end="121:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="123:7" pos:end="129:5">else <block pos:start="123:12" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:50">

        <expr_stmt pos:start="125:9" pos:end="125:51"><expr pos:start="125:9" pos:end="125:50"><name pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:16">pic_conf</name><operator pos:start="125:17" pos:end="125:17">.</operator><name pos:start="125:18" pos:end="125:28">tile_height</name></name> <operator pos:start="125:30" pos:end="125:30">=</operator> <name pos:start="125:32" pos:end="125:50"><name pos:start="125:32" pos:end="125:39">pic_conf</name><operator pos:start="125:40" pos:end="125:40">.</operator><name pos:start="125:41" pos:end="125:50">pic_height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:50"><expr pos:start="127:9" pos:end="127:49"><name pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:16">pic_conf</name><operator pos:start="127:17" pos:end="127:17">.</operator><name pos:start="127:18" pos:end="127:27">tile_width</name></name>  <operator pos:start="127:30" pos:end="127:30">=</operator> <name pos:start="127:32" pos:end="127:49"><name pos:start="127:32" pos:end="127:39">pic_conf</name><operator pos:start="127:40" pos:end="127:40">.</operator><name pos:start="127:41" pos:end="127:49">pic_width</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="133:5" pos:end="133:66">/* Decode chroma subsampling. We support only 4:4 aka YVU9. */</comment>

    <if_stmt pos:start="135:5" pos:end="141:5"><if pos:start="135:5" pos:end="141:5">if <condition pos:start="135:8" pos:end="135:30">(<expr pos:start="135:9" pos:end="135:29"><call pos:start="135:9" pos:end="135:29"><name pos:start="135:9" pos:end="135:16">get_bits</name><argument_list pos:start="135:17" pos:end="135:29">(<argument pos:start="135:18" pos:end="135:25"><expr pos:start="135:18" pos:end="135:25"><operator pos:start="135:18" pos:end="135:18">&amp;</operator><name pos:start="135:19" pos:end="135:25"><name pos:start="135:19" pos:end="135:21">ctx</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:25">gb</name></name></expr></argument>, <argument pos:start="135:28" pos:end="135:28"><expr pos:start="135:28" pos:end="135:28"><literal type="number" pos:start="135:28" pos:end="135:28">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:32" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:35">

        <expr_stmt pos:start="137:9" pos:end="137:80"><expr pos:start="137:9" pos:end="137:79"><call pos:start="137:9" pos:end="137:79"><name pos:start="137:9" pos:end="137:14">av_log</name><argument_list pos:start="137:15" pos:end="137:79">(<argument pos:start="137:16" pos:end="137:20"><expr pos:start="137:16" pos:end="137:20"><name pos:start="137:16" pos:end="137:20">avctx</name></expr></argument>, <argument pos:start="137:23" pos:end="137:34"><expr pos:start="137:23" pos:end="137:34"><name pos:start="137:23" pos:end="137:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:37" pos:end="137:78"><expr pos:start="137:37" pos:end="137:78"><literal type="string" pos:start="137:37" pos:end="137:78">"Only YVU9 picture format is supported!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="139:9" pos:end="139:35">return <expr pos:start="139:16" pos:end="139:34"><name pos:start="139:16" pos:end="139:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:60"><expr pos:start="143:5" pos:end="143:59"><name pos:start="143:5" pos:end="143:26"><name pos:start="143:5" pos:end="143:12">pic_conf</name><operator pos:start="143:13" pos:end="143:13">.</operator><name pos:start="143:14" pos:end="143:26">chroma_height</name></name> <operator pos:start="143:28" pos:end="143:28">=</operator> <operator pos:start="143:30" pos:end="143:30">(</operator><name pos:start="143:31" pos:end="143:49"><name pos:start="143:31" pos:end="143:38">pic_conf</name><operator pos:start="143:39" pos:end="143:39">.</operator><name pos:start="143:40" pos:end="143:49">pic_height</name></name> <operator pos:start="143:51" pos:end="143:51">+</operator> <literal type="number" pos:start="143:53" pos:end="143:53">3</literal><operator pos:start="143:54" pos:end="143:54">)</operator> <operator pos:start="143:56" pos:end="143:57">&gt;&gt;</operator> <literal type="number" pos:start="143:59" pos:end="143:59">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:60"><expr pos:start="145:5" pos:end="145:59"><name pos:start="145:5" pos:end="145:25"><name pos:start="145:5" pos:end="145:12">pic_conf</name><operator pos:start="145:13" pos:end="145:13">.</operator><name pos:start="145:14" pos:end="145:25">chroma_width</name></name>  <operator pos:start="145:28" pos:end="145:28">=</operator> <operator pos:start="145:30" pos:end="145:30">(</operator><name pos:start="145:31" pos:end="145:48"><name pos:start="145:31" pos:end="145:38">pic_conf</name><operator pos:start="145:39" pos:end="145:39">.</operator><name pos:start="145:40" pos:end="145:48">pic_width</name></name>  <operator pos:start="145:51" pos:end="145:51">+</operator> <literal type="number" pos:start="145:53" pos:end="145:53">3</literal><operator pos:start="145:54" pos:end="145:54">)</operator> <operator pos:start="145:56" pos:end="145:57">&gt;&gt;</operator> <literal type="number" pos:start="145:59" pos:end="145:59">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:42">/* decode subdivision of the planes */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:61"><expr pos:start="151:5" pos:end="151:60"><name pos:start="151:5" pos:end="151:23"><name pos:start="151:5" pos:end="151:12">pic_conf</name><operator pos:start="151:13" pos:end="151:13">.</operator><name pos:start="151:14" pos:end="151:23">luma_bands</name></name> <operator pos:start="151:25" pos:end="151:25">=</operator> <call pos:start="151:27" pos:end="151:60"><name pos:start="151:27" pos:end="151:50">decode_plane_subdivision</name><argument_list pos:start="151:51" pos:end="151:60">(<argument pos:start="151:52" pos:end="151:59"><expr pos:start="151:52" pos:end="151:59"><operator pos:start="151:52" pos:end="151:52">&amp;</operator><name pos:start="151:53" pos:end="151:59"><name pos:start="151:53" pos:end="151:55">ctx</name><operator pos:start="151:56" pos:end="151:57">-&gt;</operator><name pos:start="151:58" pos:end="151:59">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="155:67"><if pos:start="153:5" pos:end="155:67">if <condition pos:start="153:8" pos:end="153:28">(<expr pos:start="153:9" pos:end="153:27"><name pos:start="153:9" pos:end="153:27"><name pos:start="153:9" pos:end="153:16">pic_conf</name><operator pos:start="153:17" pos:end="153:17">.</operator><name pos:start="153:18" pos:end="153:27">luma_bands</name></name></expr>)</condition><block type="pseudo" pos:start="155:9" pos:end="155:67"><block_content pos:start="155:9" pos:end="155:67">

        <expr_stmt pos:start="155:9" pos:end="155:67"><expr pos:start="155:9" pos:end="155:66"><name pos:start="155:9" pos:end="155:29"><name pos:start="155:9" pos:end="155:16">pic_conf</name><operator pos:start="155:17" pos:end="155:17">.</operator><name pos:start="155:18" pos:end="155:29">chroma_bands</name></name> <operator pos:start="155:31" pos:end="155:31">=</operator> <call pos:start="155:33" pos:end="155:66"><name pos:start="155:33" pos:end="155:56">decode_plane_subdivision</name><argument_list pos:start="155:57" pos:end="155:66">(<argument pos:start="155:58" pos:end="155:65"><expr pos:start="155:58" pos:end="155:65"><operator pos:start="155:58" pos:end="155:58">&amp;</operator><name pos:start="155:59" pos:end="155:65"><name pos:start="155:59" pos:end="155:61">ctx</name><operator pos:start="155:62" pos:end="155:63">-&gt;</operator><name pos:start="155:64" pos:end="155:65">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:78"><expr pos:start="157:5" pos:end="157:77"><name pos:start="157:5" pos:end="157:20"><name pos:start="157:5" pos:end="157:7">ctx</name><operator pos:start="157:8" pos:end="157:9">-&gt;</operator><name pos:start="157:10" pos:end="157:20">is_scalable</name></name> <operator pos:start="157:22" pos:end="157:22">=</operator> <name pos:start="157:24" pos:end="157:42"><name pos:start="157:24" pos:end="157:31">pic_conf</name><operator pos:start="157:32" pos:end="157:32">.</operator><name pos:start="157:33" pos:end="157:42">luma_bands</name></name> <operator pos:start="157:44" pos:end="157:45">!=</operator> <literal type="number" pos:start="157:47" pos:end="157:47">1</literal> <operator pos:start="157:49" pos:end="157:50">||</operator> <name pos:start="157:52" pos:end="157:72"><name pos:start="157:52" pos:end="157:59">pic_conf</name><operator pos:start="157:60" pos:end="157:60">.</operator><name pos:start="157:61" pos:end="157:72">chroma_bands</name></name> <operator pos:start="157:74" pos:end="157:75">!=</operator> <literal type="number" pos:start="157:77" pos:end="157:77">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="159:5" pos:end="167:5"><if pos:start="159:5" pos:end="167:5">if <condition pos:start="159:8" pos:end="159:85">(<expr pos:start="159:9" pos:end="159:84"><name pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:11">ctx</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:24">is_scalable</name></name> <operator pos:start="159:26" pos:end="159:27">&amp;&amp;</operator> <operator pos:start="159:29" pos:end="159:29">(</operator><name pos:start="159:30" pos:end="159:48"><name pos:start="159:30" pos:end="159:37">pic_conf</name><operator pos:start="159:38" pos:end="159:38">.</operator><name pos:start="159:39" pos:end="159:48">luma_bands</name></name> <operator pos:start="159:50" pos:end="159:51">!=</operator> <literal type="number" pos:start="159:53" pos:end="159:53">4</literal> <operator pos:start="159:55" pos:end="159:56">||</operator> <name pos:start="159:58" pos:end="159:78"><name pos:start="159:58" pos:end="159:65">pic_conf</name><operator pos:start="159:66" pos:end="159:66">.</operator><name pos:start="159:67" pos:end="159:78">chroma_bands</name></name> <operator pos:start="159:80" pos:end="159:81">!=</operator> <literal type="number" pos:start="159:83" pos:end="159:83">1</literal><operator pos:start="159:84" pos:end="159:84">)</operator></expr>)</condition> <block pos:start="159:87" pos:end="167:5">{<block_content pos:start="161:9" pos:end="165:35">

        <expr_stmt pos:start="161:9" pos:end="163:59"><expr pos:start="161:9" pos:end="163:58"><call pos:start="161:9" pos:end="163:58"><name pos:start="161:9" pos:end="161:14">av_log</name><argument_list pos:start="161:15" pos:end="163:58">(<argument pos:start="161:16" pos:end="161:20"><expr pos:start="161:16" pos:end="161:20"><name pos:start="161:16" pos:end="161:20">avctx</name></expr></argument>, <argument pos:start="161:23" pos:end="161:34"><expr pos:start="161:23" pos:end="161:34"><name pos:start="161:23" pos:end="161:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="161:37" pos:end="161:110"><expr pos:start="161:37" pos:end="161:110"><literal type="string" pos:start="161:37" pos:end="161:110">"Scalability: unsupported subdivision! Luma bands: %d, chroma bands: %d\n"</literal></expr></argument>,

               <argument pos:start="163:16" pos:end="163:34"><expr pos:start="163:16" pos:end="163:34"><name pos:start="163:16" pos:end="163:34"><name pos:start="163:16" pos:end="163:23">pic_conf</name><operator pos:start="163:24" pos:end="163:24">.</operator><name pos:start="163:25" pos:end="163:34">luma_bands</name></name></expr></argument>, <argument pos:start="163:37" pos:end="163:57"><expr pos:start="163:37" pos:end="163:57"><name pos:start="163:37" pos:end="163:57"><name pos:start="163:37" pos:end="163:44">pic_conf</name><operator pos:start="163:45" pos:end="163:45">.</operator><name pos:start="163:46" pos:end="163:57">chroma_bands</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="165:9" pos:end="165:35">return <expr pos:start="165:16" pos:end="165:34"><name pos:start="165:16" pos:end="165:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="171:5" pos:end="171:68">/* check if picture layout was changed and reallocate buffers */</comment>

    <if_stmt pos:start="173:5" pos:end="219:5"><if pos:start="173:5" pos:end="219:5">if <condition pos:start="173:8" pos:end="173:54">(<expr pos:start="173:9" pos:end="173:53"><call pos:start="173:9" pos:end="173:53"><name pos:start="173:9" pos:end="173:26">ivi_pic_config_cmp</name><argument_list pos:start="173:27" pos:end="173:53">(<argument pos:start="173:28" pos:end="173:36"><expr pos:start="173:28" pos:end="173:36"><operator pos:start="173:28" pos:end="173:28">&amp;</operator><name pos:start="173:29" pos:end="173:36">pic_conf</name></expr></argument>, <argument pos:start="173:39" pos:end="173:52"><expr pos:start="173:39" pos:end="173:52"><operator pos:start="173:39" pos:end="173:39">&amp;</operator><name pos:start="173:40" pos:end="173:52"><name pos:start="173:40" pos:end="173:42">ctx</name><operator pos:start="173:43" pos:end="173:44">-&gt;</operator><name pos:start="173:45" pos:end="173:52">pic_conf</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="173:56" pos:end="219:5">{<block_content pos:start="175:9" pos:end="217:9">

        <if_stmt pos:start="175:9" pos:end="183:9"><if pos:start="175:9" pos:end="183:9">if <condition pos:start="175:12" pos:end="175:58">(<expr pos:start="175:13" pos:end="175:57"><call pos:start="175:13" pos:end="175:57"><name pos:start="175:13" pos:end="175:30">ff_ivi_init_planes</name><argument_list pos:start="175:31" pos:end="175:57">(<argument pos:start="175:32" pos:end="175:42"><expr pos:start="175:32" pos:end="175:42"><name pos:start="175:32" pos:end="175:42"><name pos:start="175:32" pos:end="175:34">ctx</name><operator pos:start="175:35" pos:end="175:36">-&gt;</operator><name pos:start="175:37" pos:end="175:42">planes</name></name></expr></argument>, <argument pos:start="175:45" pos:end="175:53"><expr pos:start="175:45" pos:end="175:53"><operator pos:start="175:45" pos:end="175:45">&amp;</operator><name pos:start="175:46" pos:end="175:53">pic_conf</name></expr></argument>, <argument pos:start="175:56" pos:end="175:56"><expr pos:start="175:56" pos:end="175:56"><literal type="number" pos:start="175:56" pos:end="175:56">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="175:60" pos:end="183:9">{<block_content pos:start="177:13" pos:end="181:35">

            <expr_stmt pos:start="177:13" pos:end="177:79"><expr pos:start="177:13" pos:end="177:78"><call pos:start="177:13" pos:end="177:78"><name pos:start="177:13" pos:end="177:18">av_log</name><argument_list pos:start="177:19" pos:end="177:78">(<argument pos:start="177:20" pos:end="177:24"><expr pos:start="177:20" pos:end="177:24"><name pos:start="177:20" pos:end="177:24">avctx</name></expr></argument>, <argument pos:start="177:27" pos:end="177:38"><expr pos:start="177:27" pos:end="177:38"><name pos:start="177:27" pos:end="177:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="177:41" pos:end="177:77"><expr pos:start="177:41" pos:end="177:77"><literal type="string" pos:start="177:41" pos:end="177:77">"Couldn't reallocate color planes!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:41"><expr pos:start="179:13" pos:end="179:40"><name pos:start="179:13" pos:end="179:36"><name pos:start="179:13" pos:end="179:15">ctx</name><operator pos:start="179:16" pos:end="179:17">-&gt;</operator><name pos:start="179:18" pos:end="179:25">pic_conf</name><operator pos:start="179:26" pos:end="179:26">.</operator><name pos:start="179:27" pos:end="179:36">luma_bands</name></name> <operator pos:start="179:38" pos:end="179:38">=</operator> <literal type="number" pos:start="179:40" pos:end="179:40">0</literal></expr>;</expr_stmt>

            <return pos:start="181:13" pos:end="181:35">return <expr pos:start="181:20" pos:end="181:34"><call pos:start="181:20" pos:end="181:34"><name pos:start="181:20" pos:end="181:26">AVERROR</name><argument_list pos:start="181:27" pos:end="181:34">(<argument pos:start="181:28" pos:end="181:33"><expr pos:start="181:28" pos:end="181:33"><name pos:start="181:28" pos:end="181:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="187:9" pos:end="187:33"><expr pos:start="187:9" pos:end="187:32"><name pos:start="187:9" pos:end="187:21"><name pos:start="187:9" pos:end="187:11">ctx</name><operator pos:start="187:12" pos:end="187:13">-&gt;</operator><name pos:start="187:14" pos:end="187:21">pic_conf</name></name> <operator pos:start="187:23" pos:end="187:23">=</operator> <name pos:start="187:25" pos:end="187:32">pic_conf</name></expr>;</expr_stmt>



        <comment type="block" pos:start="191:9" pos:end="191:53">/* set default macroblock/block dimensions */</comment>

        <for pos:start="193:9" pos:end="203:9">for <control pos:start="193:13" pos:end="193:32">(<init pos:start="193:14" pos:end="193:19"><expr pos:start="193:14" pos:end="193:18"><name pos:start="193:14" pos:end="193:14">p</name> <operator pos:start="193:16" pos:end="193:16">=</operator> <literal type="number" pos:start="193:18" pos:end="193:18">0</literal></expr>;</init> <condition pos:start="193:21" pos:end="193:27"><expr pos:start="193:21" pos:end="193:26"><name pos:start="193:21" pos:end="193:21">p</name> <operator pos:start="193:23" pos:end="193:24">&lt;=</operator> <literal type="number" pos:start="193:26" pos:end="193:26">2</literal></expr>;</condition> <incr pos:start="193:29" pos:end="193:31"><expr pos:start="193:29" pos:end="193:31"><name pos:start="193:29" pos:end="193:29">p</name><operator pos:start="193:30" pos:end="193:31">++</operator></expr></incr>)</control> <block pos:start="193:34" pos:end="203:9">{<block_content pos:start="195:13" pos:end="201:13">

            <for pos:start="195:13" pos:end="201:13">for <control pos:start="195:17" pos:end="195:84">(<init pos:start="195:18" pos:end="195:23"><expr pos:start="195:18" pos:end="195:22"><name pos:start="195:18" pos:end="195:18">i</name> <operator pos:start="195:20" pos:end="195:20">=</operator> <literal type="number" pos:start="195:22" pos:end="195:22">0</literal></expr>;</init> <condition pos:start="195:25" pos:end="195:79"><expr pos:start="195:25" pos:end="195:78"><name pos:start="195:25" pos:end="195:25">i</name> <operator pos:start="195:27" pos:end="195:27">&lt;</operator> <operator pos:start="195:29" pos:end="195:29">(</operator><ternary pos:start="195:30" pos:end="195:77"><condition pos:start="195:30" pos:end="195:33"><expr pos:start="195:30" pos:end="195:31"><operator pos:start="195:30" pos:end="195:30">!</operator><name pos:start="195:31" pos:end="195:31">p</name></expr> ?</condition><then pos:start="195:35" pos:end="195:53"> <expr pos:start="195:35" pos:end="195:53"><name pos:start="195:35" pos:end="195:53"><name pos:start="195:35" pos:end="195:42">pic_conf</name><operator pos:start="195:43" pos:end="195:43">.</operator><name pos:start="195:44" pos:end="195:53">luma_bands</name></name></expr> </then><else pos:start="195:55" pos:end="195:77">: <expr pos:start="195:57" pos:end="195:77"><name pos:start="195:57" pos:end="195:77"><name pos:start="195:57" pos:end="195:64">pic_conf</name><operator pos:start="195:65" pos:end="195:65">.</operator><name pos:start="195:66" pos:end="195:77">chroma_bands</name></name></expr></else></ternary><operator pos:start="195:78" pos:end="195:78">)</operator></expr>;</condition> <incr pos:start="195:81" pos:end="195:83"><expr pos:start="195:81" pos:end="195:83"><name pos:start="195:81" pos:end="195:81">i</name><operator pos:start="195:82" pos:end="195:83">++</operator></expr></incr>)</control> <block pos:start="195:86" pos:end="201:13">{<block_content pos:start="197:17" pos:end="199:62">

                <expr_stmt pos:start="197:17" pos:end="197:89"><expr pos:start="197:17" pos:end="197:88"><name pos:start="197:17" pos:end="197:30"><name pos:start="197:17" pos:end="197:19">ctx</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:27">planes</name><index pos:start="197:28" pos:end="197:30">[<expr pos:start="197:29" pos:end="197:29"><name pos:start="197:29" pos:end="197:29">p</name></expr>]</index></name><operator pos:start="197:31" pos:end="197:31">.</operator><name pos:start="197:32" pos:end="197:39"><name pos:start="197:32" pos:end="197:36">bands</name><index pos:start="197:37" pos:end="197:39">[<expr pos:start="197:38" pos:end="197:38"><name pos:start="197:38" pos:end="197:38">i</name></expr>]</index></name><operator pos:start="197:40" pos:end="197:40">.</operator><name pos:start="197:41" pos:end="197:47">mb_size</name>  <operator pos:start="197:50" pos:end="197:50">=</operator> <ternary pos:start="197:52" pos:end="197:88"><condition pos:start="197:52" pos:end="197:55"><expr pos:start="197:52" pos:end="197:53"><operator pos:start="197:52" pos:end="197:52">!</operator><name pos:start="197:53" pos:end="197:53">p</name></expr> ?</condition><then pos:start="197:57" pos:end="197:84"> <expr pos:start="197:57" pos:end="197:84"><operator pos:start="197:57" pos:end="197:57">(</operator><ternary pos:start="197:58" pos:end="197:83"><condition pos:start="197:58" pos:end="197:76"><expr pos:start="197:58" pos:end="197:74"><operator pos:start="197:58" pos:end="197:58">!</operator><name pos:start="197:59" pos:end="197:74"><name pos:start="197:59" pos:end="197:61">ctx</name><operator pos:start="197:62" pos:end="197:63">-&gt;</operator><name pos:start="197:64" pos:end="197:74">is_scalable</name></name></expr> ?</condition><then pos:start="197:78" pos:end="197:79"> <expr pos:start="197:78" pos:end="197:79"><literal type="number" pos:start="197:78" pos:end="197:79">16</literal></expr> </then><else pos:start="197:81" pos:end="197:83">: <expr pos:start="197:83" pos:end="197:83"><literal type="number" pos:start="197:83" pos:end="197:83">8</literal></expr></else></ternary><operator pos:start="197:84" pos:end="197:84">)</operator></expr> </then><else pos:start="197:86" pos:end="197:88">: <expr pos:start="197:88" pos:end="197:88"><literal type="number" pos:start="197:88" pos:end="197:88">4</literal></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:62"><expr pos:start="199:17" pos:end="199:61"><name pos:start="199:17" pos:end="199:30"><name pos:start="199:17" pos:end="199:19">ctx</name><operator pos:start="199:20" pos:end="199:21">-&gt;</operator><name pos:start="199:22" pos:end="199:27">planes</name><index pos:start="199:28" pos:end="199:30">[<expr pos:start="199:29" pos:end="199:29"><name pos:start="199:29" pos:end="199:29">p</name></expr>]</index></name><operator pos:start="199:31" pos:end="199:31">.</operator><name pos:start="199:32" pos:end="199:39"><name pos:start="199:32" pos:end="199:36">bands</name><index pos:start="199:37" pos:end="199:39">[<expr pos:start="199:38" pos:end="199:38"><name pos:start="199:38" pos:end="199:38">i</name></expr>]</index></name><operator pos:start="199:40" pos:end="199:40">.</operator><name pos:start="199:41" pos:end="199:48">blk_size</name> <operator pos:start="199:50" pos:end="199:50">=</operator> <ternary pos:start="199:52" pos:end="199:61"><condition pos:start="199:52" pos:end="199:55"><expr pos:start="199:52" pos:end="199:53"><operator pos:start="199:52" pos:end="199:52">!</operator><name pos:start="199:53" pos:end="199:53">p</name></expr> ?</condition><then pos:start="199:57" pos:end="199:57"> <expr pos:start="199:57" pos:end="199:57"><literal type="number" pos:start="199:57" pos:end="199:57">8</literal></expr> </then><else pos:start="199:59" pos:end="199:61">: <expr pos:start="199:61" pos:end="199:61"><literal type="number" pos:start="199:61" pos:end="199:61">4</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <if_stmt pos:start="207:9" pos:end="217:9"><if pos:start="207:9" pos:end="217:9">if <condition pos:start="207:12" pos:end="209:57">(<expr pos:start="207:13" pos:end="209:56"><call pos:start="207:13" pos:end="209:56"><name pos:start="207:13" pos:end="207:29">ff_ivi_init_tiles</name><argument_list pos:start="207:30" pos:end="209:56">(<argument pos:start="207:31" pos:end="207:41"><expr pos:start="207:31" pos:end="207:41"><name pos:start="207:31" pos:end="207:41"><name pos:start="207:31" pos:end="207:33">ctx</name><operator pos:start="207:34" pos:end="207:35">-&gt;</operator><name pos:start="207:36" pos:end="207:41">planes</name></name></expr></argument>, <argument pos:start="207:44" pos:end="207:67"><expr pos:start="207:44" pos:end="207:67"><name pos:start="207:44" pos:end="207:67"><name pos:start="207:44" pos:end="207:46">ctx</name><operator pos:start="207:47" pos:end="207:48">-&gt;</operator><name pos:start="207:49" pos:end="207:56">pic_conf</name><operator pos:start="207:57" pos:end="207:57">.</operator><name pos:start="207:58" pos:end="207:67">tile_width</name></name></expr></argument>,

                              <argument pos:start="209:31" pos:end="209:55"><expr pos:start="209:31" pos:end="209:55"><name pos:start="209:31" pos:end="209:55"><name pos:start="209:31" pos:end="209:33">ctx</name><operator pos:start="209:34" pos:end="209:35">-&gt;</operator><name pos:start="209:36" pos:end="209:43">pic_conf</name><operator pos:start="209:44" pos:end="209:44">.</operator><name pos:start="209:45" pos:end="209:55">tile_height</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="209:59" pos:end="217:9">{<block_content pos:start="211:13" pos:end="215:35">

            <expr_stmt pos:start="211:13" pos:end="213:65"><expr pos:start="211:13" pos:end="213:64"><call pos:start="211:13" pos:end="213:64"><name pos:start="211:13" pos:end="211:18">av_log</name><argument_list pos:start="211:19" pos:end="213:64">(<argument pos:start="211:20" pos:end="211:24"><expr pos:start="211:20" pos:end="211:24"><name pos:start="211:20" pos:end="211:24">avctx</name></expr></argument>, <argument pos:start="211:27" pos:end="211:38"><expr pos:start="211:27" pos:end="211:38"><name pos:start="211:27" pos:end="211:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="213:20" pos:end="213:63"><expr pos:start="213:20" pos:end="213:63"><literal type="string" pos:start="213:20" pos:end="213:63">"Couldn't reallocate internal structures!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="215:13" pos:end="215:35">return <expr pos:start="215:20" pos:end="215:34"><call pos:start="215:20" pos:end="215:34"><name pos:start="215:20" pos:end="215:26">AVERROR</name><argument_list pos:start="215:27" pos:end="215:34">(<argument pos:start="215:28" pos:end="215:33"><expr pos:start="215:28" pos:end="215:33"><name pos:start="215:28" pos:end="215:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="223:5" pos:end="223:70"><expr pos:start="223:5" pos:end="223:69"><name pos:start="223:5" pos:end="223:18"><name pos:start="223:5" pos:end="223:7">ctx</name><operator pos:start="223:8" pos:end="223:9">-&gt;</operator><name pos:start="223:10" pos:end="223:18">frame_num</name></name> <operator pos:start="223:20" pos:end="223:20">=</operator> <ternary pos:start="223:22" pos:end="223:69"><condition pos:start="223:22" pos:end="223:42"><expr pos:start="223:22" pos:end="223:40"><call pos:start="223:22" pos:end="223:40"><name pos:start="223:22" pos:end="223:30">get_bits1</name><argument_list pos:start="223:31" pos:end="223:40">(<argument pos:start="223:32" pos:end="223:39"><expr pos:start="223:32" pos:end="223:39"><operator pos:start="223:32" pos:end="223:32">&amp;</operator><name pos:start="223:33" pos:end="223:39"><name pos:start="223:33" pos:end="223:35">ctx</name><operator pos:start="223:36" pos:end="223:37">-&gt;</operator><name pos:start="223:38" pos:end="223:39">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="223:44" pos:end="223:65"> <expr pos:start="223:44" pos:end="223:65"><call pos:start="223:44" pos:end="223:65"><name pos:start="223:44" pos:end="223:51">get_bits</name><argument_list pos:start="223:52" pos:end="223:65">(<argument pos:start="223:53" pos:end="223:60"><expr pos:start="223:53" pos:end="223:60"><operator pos:start="223:53" pos:end="223:53">&amp;</operator><name pos:start="223:54" pos:end="223:60"><name pos:start="223:54" pos:end="223:56">ctx</name><operator pos:start="223:57" pos:end="223:58">-&gt;</operator><name pos:start="223:59" pos:end="223:60">gb</name></name></expr></argument>, <argument pos:start="223:63" pos:end="223:64"><expr pos:start="223:63" pos:end="223:64"><literal type="number" pos:start="223:63" pos:end="223:64">20</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="223:67" pos:end="223:69">: <expr pos:start="223:69" pos:end="223:69"><literal type="number" pos:start="223:69" pos:end="223:69">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="227:5" pos:end="227:42">/* skip decTimeEst field if present */</comment>

    <if_stmt pos:start="229:5" pos:end="231:31"><if pos:start="229:5" pos:end="231:31">if <condition pos:start="229:8" pos:end="229:28">(<expr pos:start="229:9" pos:end="229:27"><call pos:start="229:9" pos:end="229:27"><name pos:start="229:9" pos:end="229:17">get_bits1</name><argument_list pos:start="229:18" pos:end="229:27">(<argument pos:start="229:19" pos:end="229:26"><expr pos:start="229:19" pos:end="229:26"><operator pos:start="229:19" pos:end="229:19">&amp;</operator><name pos:start="229:20" pos:end="229:26"><name pos:start="229:20" pos:end="229:22">ctx</name><operator pos:start="229:23" pos:end="229:24">-&gt;</operator><name pos:start="229:25" pos:end="229:26">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="231:9" pos:end="231:31"><block_content pos:start="231:9" pos:end="231:31">

        <expr_stmt pos:start="231:9" pos:end="231:31"><expr pos:start="231:9" pos:end="231:30"><call pos:start="231:9" pos:end="231:30"><name pos:start="231:9" pos:end="231:17">skip_bits</name><argument_list pos:start="231:18" pos:end="231:30">(<argument pos:start="231:19" pos:end="231:26"><expr pos:start="231:19" pos:end="231:26"><operator pos:start="231:19" pos:end="231:19">&amp;</operator><name pos:start="231:20" pos:end="231:26"><name pos:start="231:20" pos:end="231:22">ctx</name><operator pos:start="231:23" pos:end="231:24">-&gt;</operator><name pos:start="231:25" pos:end="231:26">gb</name></name></expr></argument>, <argument pos:start="231:29" pos:end="231:29"><expr pos:start="231:29" pos:end="231:29"><literal type="number" pos:start="231:29" pos:end="231:29">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="235:5" pos:end="235:55">/* decode macroblock and block huffman codebooks */</comment>

    <if_stmt pos:start="237:5" pos:end="241:35"><if pos:start="237:5" pos:end="241:35">if <condition pos:start="237:8" pos:end="239:96">(<expr pos:start="237:9" pos:end="239:95"><call pos:start="237:9" pos:end="237:95"><name pos:start="237:9" pos:end="237:28">ff_ivi_dec_huff_desc</name><argument_list pos:start="237:29" pos:end="237:95">(<argument pos:start="237:30" pos:end="237:37"><expr pos:start="237:30" pos:end="237:37"><operator pos:start="237:30" pos:end="237:30">&amp;</operator><name pos:start="237:31" pos:end="237:37"><name pos:start="237:31" pos:end="237:33">ctx</name><operator pos:start="237:34" pos:end="237:35">-&gt;</operator><name pos:start="237:36" pos:end="237:37">gb</name></name></expr></argument>, <argument pos:start="237:40" pos:end="237:58"><expr pos:start="237:40" pos:end="237:58"><call pos:start="237:40" pos:end="237:58"><name pos:start="237:40" pos:end="237:48">get_bits1</name><argument_list pos:start="237:49" pos:end="237:58">(<argument pos:start="237:50" pos:end="237:57"><expr pos:start="237:50" pos:end="237:57"><operator pos:start="237:50" pos:end="237:50">&amp;</operator><name pos:start="237:51" pos:end="237:57"><name pos:start="237:51" pos:end="237:53">ctx</name><operator pos:start="237:54" pos:end="237:55">-&gt;</operator><name pos:start="237:56" pos:end="237:57">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="237:61" pos:end="237:71"><expr pos:start="237:61" pos:end="237:71"><name pos:start="237:61" pos:end="237:71">IVI_MB_HUFF</name></expr></argument>,  <argument pos:start="237:75" pos:end="237:86"><expr pos:start="237:75" pos:end="237:86"><operator pos:start="237:75" pos:end="237:75">&amp;</operator><name pos:start="237:76" pos:end="237:86"><name pos:start="237:76" pos:end="237:78">ctx</name><operator pos:start="237:79" pos:end="237:80">-&gt;</operator><name pos:start="237:81" pos:end="237:86">mb_vlc</name></name></expr></argument>,  <argument pos:start="237:90" pos:end="237:94"><expr pos:start="237:90" pos:end="237:94"><name pos:start="237:90" pos:end="237:94">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="237:97" pos:end="237:98">||</operator>

        <call pos:start="239:9" pos:end="239:95"><name pos:start="239:9" pos:end="239:28">ff_ivi_dec_huff_desc</name><argument_list pos:start="239:29" pos:end="239:95">(<argument pos:start="239:30" pos:end="239:37"><expr pos:start="239:30" pos:end="239:37"><operator pos:start="239:30" pos:end="239:30">&amp;</operator><name pos:start="239:31" pos:end="239:37"><name pos:start="239:31" pos:end="239:33">ctx</name><operator pos:start="239:34" pos:end="239:35">-&gt;</operator><name pos:start="239:36" pos:end="239:37">gb</name></name></expr></argument>, <argument pos:start="239:40" pos:end="239:58"><expr pos:start="239:40" pos:end="239:58"><call pos:start="239:40" pos:end="239:58"><name pos:start="239:40" pos:end="239:48">get_bits1</name><argument_list pos:start="239:49" pos:end="239:58">(<argument pos:start="239:50" pos:end="239:57"><expr pos:start="239:50" pos:end="239:57"><operator pos:start="239:50" pos:end="239:50">&amp;</operator><name pos:start="239:51" pos:end="239:57"><name pos:start="239:51" pos:end="239:53">ctx</name><operator pos:start="239:54" pos:end="239:55">-&gt;</operator><name pos:start="239:56" pos:end="239:57">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="239:61" pos:end="239:72"><expr pos:start="239:61" pos:end="239:72"><name pos:start="239:61" pos:end="239:72">IVI_BLK_HUFF</name></expr></argument>, <argument pos:start="239:75" pos:end="239:87"><expr pos:start="239:75" pos:end="239:87"><operator pos:start="239:75" pos:end="239:75">&amp;</operator><name pos:start="239:76" pos:end="239:87"><name pos:start="239:76" pos:end="239:78">ctx</name><operator pos:start="239:79" pos:end="239:80">-&gt;</operator><name pos:start="239:81" pos:end="239:87">blk_vlc</name></name></expr></argument>, <argument pos:start="239:90" pos:end="239:94"><expr pos:start="239:90" pos:end="239:94"><name pos:start="239:90" pos:end="239:94">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="241:9" pos:end="241:35"><block_content pos:start="241:9" pos:end="241:35">

        <return pos:start="241:9" pos:end="241:35">return <expr pos:start="241:16" pos:end="241:34"><name pos:start="241:16" pos:end="241:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="245:5" pos:end="245:69"><expr pos:start="245:5" pos:end="245:68"><name pos:start="245:5" pos:end="245:18"><name pos:start="245:5" pos:end="245:7">ctx</name><operator pos:start="245:8" pos:end="245:9">-&gt;</operator><name pos:start="245:10" pos:end="245:18">rvmap_sel</name></name> <operator pos:start="245:20" pos:end="245:20">=</operator> <ternary pos:start="245:22" pos:end="245:68"><condition pos:start="245:22" pos:end="245:42"><expr pos:start="245:22" pos:end="245:40"><call pos:start="245:22" pos:end="245:40"><name pos:start="245:22" pos:end="245:30">get_bits1</name><argument_list pos:start="245:31" pos:end="245:40">(<argument pos:start="245:32" pos:end="245:39"><expr pos:start="245:32" pos:end="245:39"><operator pos:start="245:32" pos:end="245:32">&amp;</operator><name pos:start="245:33" pos:end="245:39"><name pos:start="245:33" pos:end="245:35">ctx</name><operator pos:start="245:36" pos:end="245:37">-&gt;</operator><name pos:start="245:38" pos:end="245:39">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="245:44" pos:end="245:64"> <expr pos:start="245:44" pos:end="245:64"><call pos:start="245:44" pos:end="245:64"><name pos:start="245:44" pos:end="245:51">get_bits</name><argument_list pos:start="245:52" pos:end="245:64">(<argument pos:start="245:53" pos:end="245:60"><expr pos:start="245:53" pos:end="245:60"><operator pos:start="245:53" pos:end="245:53">&amp;</operator><name pos:start="245:54" pos:end="245:60"><name pos:start="245:54" pos:end="245:56">ctx</name><operator pos:start="245:57" pos:end="245:58">-&gt;</operator><name pos:start="245:59" pos:end="245:60">gb</name></name></expr></argument>, <argument pos:start="245:63" pos:end="245:63"><expr pos:start="245:63" pos:end="245:63"><literal type="number" pos:start="245:63" pos:end="245:63">3</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="245:66" pos:end="245:68">: <expr pos:start="245:68" pos:end="245:68"><literal type="number" pos:start="245:68" pos:end="245:68">8</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:38"><expr pos:start="249:5" pos:end="249:37"><name pos:start="249:5" pos:end="249:15"><name pos:start="249:5" pos:end="249:7">ctx</name><operator pos:start="249:8" pos:end="249:9">-&gt;</operator><name pos:start="249:10" pos:end="249:15">in_imf</name></name> <operator pos:start="249:17" pos:end="249:17">=</operator> <call pos:start="249:19" pos:end="249:37"><name pos:start="249:19" pos:end="249:27">get_bits1</name><argument_list pos:start="249:28" pos:end="249:37">(<argument pos:start="249:29" pos:end="249:36"><expr pos:start="249:29" pos:end="249:36"><operator pos:start="249:29" pos:end="249:29">&amp;</operator><name pos:start="249:30" pos:end="249:36"><name pos:start="249:30" pos:end="249:32">ctx</name><operator pos:start="249:33" pos:end="249:34">-&gt;</operator><name pos:start="249:35" pos:end="249:36">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:38"><expr pos:start="251:5" pos:end="251:37"><name pos:start="251:5" pos:end="251:13"><name pos:start="251:5" pos:end="251:7">ctx</name><operator pos:start="251:8" pos:end="251:9">-&gt;</operator><name pos:start="251:10" pos:end="251:13">in_q</name></name>   <operator pos:start="251:17" pos:end="251:17">=</operator> <call pos:start="251:19" pos:end="251:37"><name pos:start="251:19" pos:end="251:27">get_bits1</name><argument_list pos:start="251:28" pos:end="251:37">(<argument pos:start="251:29" pos:end="251:36"><expr pos:start="251:29" pos:end="251:36"><operator pos:start="251:29" pos:end="251:29">&amp;</operator><name pos:start="251:30" pos:end="251:36"><name pos:start="251:30" pos:end="251:32">ctx</name><operator pos:start="251:33" pos:end="251:34">-&gt;</operator><name pos:start="251:35" pos:end="251:36">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="255:5" pos:end="255:48"><expr pos:start="255:5" pos:end="255:47"><name pos:start="255:5" pos:end="255:23"><name pos:start="255:5" pos:end="255:7">ctx</name><operator pos:start="255:8" pos:end="255:9">-&gt;</operator><name pos:start="255:10" pos:end="255:23">pic_glob_quant</name></name> <operator pos:start="255:25" pos:end="255:25">=</operator> <call pos:start="255:27" pos:end="255:47"><name pos:start="255:27" pos:end="255:34">get_bits</name><argument_list pos:start="255:35" pos:end="255:47">(<argument pos:start="255:36" pos:end="255:43"><expr pos:start="255:36" pos:end="255:43"><operator pos:start="255:36" pos:end="255:36">&amp;</operator><name pos:start="255:37" pos:end="255:43"><name pos:start="255:37" pos:end="255:39">ctx</name><operator pos:start="255:40" pos:end="255:41">-&gt;</operator><name pos:start="255:42" pos:end="255:43">gb</name></name></expr></argument>, <argument pos:start="255:46" pos:end="255:46"><expr pos:start="255:46" pos:end="255:46"><literal type="number" pos:start="255:46" pos:end="255:46">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="259:5" pos:end="259:47">/* TODO: ignore this parameter if unused */</comment>

    <expr_stmt pos:start="261:5" pos:end="261:68"><expr pos:start="261:5" pos:end="261:67"><name pos:start="261:5" pos:end="261:17"><name pos:start="261:5" pos:end="261:7">ctx</name><operator pos:start="261:8" pos:end="261:9">-&gt;</operator><name pos:start="261:10" pos:end="261:17">unknown1</name></name> <operator pos:start="261:19" pos:end="261:19">=</operator> <ternary pos:start="261:21" pos:end="261:67"><condition pos:start="261:21" pos:end="261:41"><expr pos:start="261:21" pos:end="261:39"><call pos:start="261:21" pos:end="261:39"><name pos:start="261:21" pos:end="261:29">get_bits1</name><argument_list pos:start="261:30" pos:end="261:39">(<argument pos:start="261:31" pos:end="261:38"><expr pos:start="261:31" pos:end="261:38"><operator pos:start="261:31" pos:end="261:31">&amp;</operator><name pos:start="261:32" pos:end="261:38"><name pos:start="261:32" pos:end="261:34">ctx</name><operator pos:start="261:35" pos:end="261:36">-&gt;</operator><name pos:start="261:37" pos:end="261:38">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="261:43" pos:end="261:63"> <expr pos:start="261:43" pos:end="261:63"><call pos:start="261:43" pos:end="261:63"><name pos:start="261:43" pos:end="261:50">get_bits</name><argument_list pos:start="261:51" pos:end="261:63">(<argument pos:start="261:52" pos:end="261:59"><expr pos:start="261:52" pos:end="261:59"><operator pos:start="261:52" pos:end="261:52">&amp;</operator><name pos:start="261:53" pos:end="261:59"><name pos:start="261:53" pos:end="261:55">ctx</name><operator pos:start="261:56" pos:end="261:57">-&gt;</operator><name pos:start="261:58" pos:end="261:59">gb</name></name></expr></argument>, <argument pos:start="261:62" pos:end="261:62"><expr pos:start="261:62" pos:end="261:62"><literal type="number" pos:start="261:62" pos:end="261:62">3</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="261:65" pos:end="261:67">: <expr pos:start="261:67" pos:end="261:67"><literal type="number" pos:start="261:67" pos:end="261:67">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="265:5" pos:end="265:69"><expr pos:start="265:5" pos:end="265:68"><name pos:start="265:5" pos:end="265:17"><name pos:start="265:5" pos:end="265:7">ctx</name><operator pos:start="265:8" pos:end="265:9">-&gt;</operator><name pos:start="265:10" pos:end="265:17">checksum</name></name> <operator pos:start="265:19" pos:end="265:19">=</operator> <ternary pos:start="265:21" pos:end="265:68"><condition pos:start="265:21" pos:end="265:41"><expr pos:start="265:21" pos:end="265:39"><call pos:start="265:21" pos:end="265:39"><name pos:start="265:21" pos:end="265:29">get_bits1</name><argument_list pos:start="265:30" pos:end="265:39">(<argument pos:start="265:31" pos:end="265:38"><expr pos:start="265:31" pos:end="265:38"><operator pos:start="265:31" pos:end="265:31">&amp;</operator><name pos:start="265:32" pos:end="265:38"><name pos:start="265:32" pos:end="265:34">ctx</name><operator pos:start="265:35" pos:end="265:36">-&gt;</operator><name pos:start="265:37" pos:end="265:38">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="265:43" pos:end="265:64"> <expr pos:start="265:43" pos:end="265:64"><call pos:start="265:43" pos:end="265:64"><name pos:start="265:43" pos:end="265:50">get_bits</name><argument_list pos:start="265:51" pos:end="265:64">(<argument pos:start="265:52" pos:end="265:59"><expr pos:start="265:52" pos:end="265:59"><operator pos:start="265:52" pos:end="265:52">&amp;</operator><name pos:start="265:53" pos:end="265:59"><name pos:start="265:53" pos:end="265:55">ctx</name><operator pos:start="265:56" pos:end="265:57">-&gt;</operator><name pos:start="265:58" pos:end="265:59">gb</name></name></expr></argument>, <argument pos:start="265:62" pos:end="265:63"><expr pos:start="265:62" pos:end="265:63"><literal type="number" pos:start="265:62" pos:end="265:63">16</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="265:66" pos:end="265:68">: <expr pos:start="265:68" pos:end="265:68"><literal type="number" pos:start="265:68" pos:end="265:68">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="269:5" pos:end="269:46">/* skip picture header extension if any */</comment>

    <while pos:start="271:5" pos:end="277:5">while <condition pos:start="271:11" pos:end="271:31">(<expr pos:start="271:12" pos:end="271:30"><call pos:start="271:12" pos:end="271:30"><name pos:start="271:12" pos:end="271:20">get_bits1</name><argument_list pos:start="271:21" pos:end="271:30">(<argument pos:start="271:22" pos:end="271:29"><expr pos:start="271:22" pos:end="271:29"><operator pos:start="271:22" pos:end="271:22">&amp;</operator><name pos:start="271:23" pos:end="271:29"><name pos:start="271:23" pos:end="271:25">ctx</name><operator pos:start="271:26" pos:end="271:27">-&gt;</operator><name pos:start="271:28" pos:end="271:29">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="271:33" pos:end="277:5">{<block_content pos:start="273:9" pos:end="275:31">

        <expr_stmt pos:start="273:9" pos:end="273:59"><expr pos:start="273:9" pos:end="273:58"><call pos:start="273:9" pos:end="273:58"><name pos:start="273:9" pos:end="273:15">ff_dlog</name><argument_list pos:start="273:16" pos:end="273:58">(<argument pos:start="273:17" pos:end="273:21"><expr pos:start="273:17" pos:end="273:21"><name pos:start="273:17" pos:end="273:21">avctx</name></expr></argument>, <argument pos:start="273:24" pos:end="273:57"><expr pos:start="273:24" pos:end="273:57"><literal type="string" pos:start="273:24" pos:end="273:57">"Pic hdr extension encountered!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:31"><expr pos:start="275:9" pos:end="275:30"><call pos:start="275:9" pos:end="275:30"><name pos:start="275:9" pos:end="275:17">skip_bits</name><argument_list pos:start="275:18" pos:end="275:30">(<argument pos:start="275:19" pos:end="275:26"><expr pos:start="275:19" pos:end="275:26"><operator pos:start="275:19" pos:end="275:19">&amp;</operator><name pos:start="275:20" pos:end="275:26"><name pos:start="275:20" pos:end="275:22">ctx</name><operator pos:start="275:23" pos:end="275:24">-&gt;</operator><name pos:start="275:25" pos:end="275:26">gb</name></name></expr></argument>, <argument pos:start="275:29" pos:end="275:29"><expr pos:start="275:29" pos:end="275:29"><literal type="number" pos:start="275:29" pos:end="275:29">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="281:5" pos:end="285:5"><if pos:start="281:5" pos:end="285:5">if <condition pos:start="281:8" pos:end="281:28">(<expr pos:start="281:9" pos:end="281:27"><call pos:start="281:9" pos:end="281:27"><name pos:start="281:9" pos:end="281:17">get_bits1</name><argument_list pos:start="281:18" pos:end="281:27">(<argument pos:start="281:19" pos:end="281:26"><expr pos:start="281:19" pos:end="281:26"><operator pos:start="281:19" pos:end="281:19">&amp;</operator><name pos:start="281:20" pos:end="281:26"><name pos:start="281:20" pos:end="281:22">ctx</name><operator pos:start="281:23" pos:end="281:24">-&gt;</operator><name pos:start="281:25" pos:end="281:26">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="281:30" pos:end="285:5">{<block_content pos:start="283:9" pos:end="283:70">

        <expr_stmt pos:start="283:9" pos:end="283:70"><expr pos:start="283:9" pos:end="283:69"><call pos:start="283:9" pos:end="283:69"><name pos:start="283:9" pos:end="283:14">av_log</name><argument_list pos:start="283:15" pos:end="283:69">(<argument pos:start="283:16" pos:end="283:20"><expr pos:start="283:16" pos:end="283:20"><name pos:start="283:16" pos:end="283:20">avctx</name></expr></argument>, <argument pos:start="283:23" pos:end="283:34"><expr pos:start="283:23" pos:end="283:34"><name pos:start="283:23" pos:end="283:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="283:37" pos:end="283:68"><expr pos:start="283:37" pos:end="283:68"><literal type="string" pos:start="283:37" pos:end="283:68">"Bad blocks bits encountered!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="289:5" pos:end="289:29"><expr pos:start="289:5" pos:end="289:28"><call pos:start="289:5" pos:end="289:28"><name pos:start="289:5" pos:end="289:18">align_get_bits</name><argument_list pos:start="289:19" pos:end="289:28">(<argument pos:start="289:20" pos:end="289:27"><expr pos:start="289:20" pos:end="289:27"><operator pos:start="289:20" pos:end="289:20">&amp;</operator><name pos:start="289:21" pos:end="289:27"><name pos:start="289:21" pos:end="289:23">ctx</name><operator pos:start="289:24" pos:end="289:25">-&gt;</operator><name pos:start="289:26" pos:end="289:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="293:5" pos:end="293:13">return <expr pos:start="293:12" pos:end="293:12"><literal type="number" pos:start="293:12" pos:end="293:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
