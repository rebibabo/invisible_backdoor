<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9345.c" pos:tabs="8"><function pos:start="1:1" pos:end="243:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">bitplane_decoding</name><parameter_list pos:start="1:29" pos:end="1:73">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:36">uint8_t</name><modifier pos:start="1:37" pos:end="1:37">*</modifier></type> <name pos:start="1:39" pos:end="1:42">data</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:47">int</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:57">raw_flag</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:69">VC1Context</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:72">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="243:1">{<block_content pos:start="5:5" pos:end="241:33">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:32">= <expr pos:start="5:25" pos:end="5:32"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:32"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:30">.</operator><name pos:start="5:31" pos:end="5:32">gb</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">imode</name></decl>, <decl pos:start="9:16" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:16">x</name></decl>, <decl pos:start="9:19" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:19">y</name></decl>, <decl pos:start="9:22" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:25">code</name></decl>, <decl pos:start="9:28" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:33">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:18">invert</name></decl>, <decl pos:start="11:21" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:27">planep</name> <init pos:start="11:29" pos:end="11:34">= <expr pos:start="11:31" pos:end="11:34"><name pos:start="11:31" pos:end="11:34">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">width</name></decl>, <decl pos:start="13:16" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:21">height</name></decl>, <decl pos:start="13:24" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:29">stride</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:9">width</name>  <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:26"><name pos:start="17:14" pos:end="17:14">v</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:17">s</name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:26">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:10">height</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:27"><name pos:start="19:14" pos:end="19:14">v</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:17">s</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:27">mb_height</name></name> <operator pos:start="19:29" pos:end="19:30">&gt;&gt;</operator> <name pos:start="19:32" pos:end="19:44"><name pos:start="19:32" pos:end="19:32">v</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:44">field_mode</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:10">stride</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:27"><name pos:start="21:14" pos:end="21:14">v</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:17">s</name><operator pos:start="21:18" pos:end="21:18">.</operator><name pos:start="21:19" pos:end="21:27">mb_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:10">invert</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:26"><name pos:start="23:14" pos:end="23:22">get_bits1</name><argument_list pos:start="23:23" pos:end="23:26">(<argument pos:start="23:24" pos:end="23:25"><expr pos:start="23:24" pos:end="23:25"><name pos:start="23:24" pos:end="23:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:72"><expr pos:start="25:5" pos:end="25:71"><name pos:start="25:5" pos:end="25:9">imode</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:71"><name pos:start="25:13" pos:end="25:20">get_vlc2</name><argument_list pos:start="25:21" pos:end="25:71">(<argument pos:start="25:22" pos:end="25:23"><expr pos:start="25:22" pos:end="25:23"><name pos:start="25:22" pos:end="25:23">gb</name></expr></argument>, <argument pos:start="25:26" pos:end="25:47"><expr pos:start="25:26" pos:end="25:47"><name pos:start="25:26" pos:end="25:47"><name pos:start="25:26" pos:end="25:41">ff_vc1_imode_vlc</name><operator pos:start="25:42" pos:end="25:42">.</operator><name pos:start="25:43" pos:end="25:47">table</name></name></expr></argument>, <argument pos:start="25:50" pos:end="25:67"><expr pos:start="25:50" pos:end="25:67"><name pos:start="25:50" pos:end="25:67">VC1_IMODE_VLC_BITS</name></expr></argument>, <argument pos:start="25:70" pos:end="25:70"><expr pos:start="25:70" pos:end="25:70"><literal type="number" pos:start="25:70" pos:end="25:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><operator pos:start="29:5" pos:end="29:5">*</operator><name pos:start="29:6" pos:end="29:13">raw_flag</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</expr_stmt>

    <switch pos:start="31:5" pos:end="199:5">switch <condition pos:start="31:12" pos:end="31:18">(<expr pos:start="31:13" pos:end="31:17"><name pos:start="31:13" pos:end="31:17">imode</name></expr>)</condition> <block pos:start="31:20" pos:end="199:5">{<block_content pos:start="33:5" pos:end="197:14">

    <case pos:start="33:5" pos:end="33:19">case <expr pos:start="33:10" pos:end="33:18"><name pos:start="33:10" pos:end="33:18">IMODE_RAW</name></expr>:</case>

        <comment type="line" pos:start="35:9" pos:end="35:77">//Data is actually read in the MB layer (same for all tests == "raw")</comment>

        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><operator pos:start="37:9" pos:end="37:9">*</operator><name pos:start="37:10" pos:end="37:17">raw_flag</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="37:24" pos:end="37:39">//invert ignored</comment>

        <return pos:start="39:9" pos:end="39:22">return <expr pos:start="39:16" pos:end="39:21"><name pos:start="39:16" pos:end="39:21">invert</name></expr>;</return>

    <case pos:start="41:5" pos:end="41:21">case <expr pos:start="41:10" pos:end="41:20"><name pos:start="41:10" pos:end="41:20">IMODE_DIFF2</name></expr>:</case>

    <case pos:start="43:5" pos:end="43:21">case <expr pos:start="43:10" pos:end="43:20"><name pos:start="43:10" pos:end="43:20">IMODE_NORM2</name></expr>:</case>

        <if_stmt pos:start="45:9" pos:end="55:23"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:33">(<expr pos:start="45:13" pos:end="45:32"><operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:19">height</name> <operator pos:start="45:21" pos:end="45:21">*</operator> <name pos:start="45:23" pos:end="45:27">width</name><operator pos:start="45:28" pos:end="45:28">)</operator> <operator pos:start="45:30" pos:end="45:30">&amp;</operator> <literal type="number" pos:start="45:32" pos:end="45:32">1</literal></expr>)</condition> <block pos:start="45:35" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:26">

            <expr_stmt pos:start="47:13" pos:end="47:38"><expr pos:start="47:13" pos:end="47:37"><operator pos:start="47:13" pos:end="47:13">*</operator><name pos:start="47:14" pos:end="47:19">planep</name><operator pos:start="47:20" pos:end="47:21">++</operator> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="47:37"><name pos:start="47:25" pos:end="47:33">get_bits1</name><argument_list pos:start="47:34" pos:end="47:37">(<argument pos:start="47:35" pos:end="47:36"><expr pos:start="47:35" pos:end="47:36"><name pos:start="47:35" pos:end="47:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:26"><expr pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:18">offset</name>    <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="number" pos:start="49:25" pos:end="49:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="53:9" pos:end="55:23">else<block type="pseudo" pos:start="55:13" pos:end="55:23"><block_content pos:start="55:13" pos:end="55:23">

            <expr_stmt pos:start="55:13" pos:end="55:23"><expr pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:18">offset</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <comment type="line" pos:start="57:9" pos:end="57:43">// decode bitplane as one long line</comment>

        <for pos:start="59:9" pos:end="87:9">for <control pos:start="59:13" pos:end="59:52">(<init pos:start="59:14" pos:end="59:24"><expr pos:start="59:14" pos:end="59:23"><name pos:start="59:14" pos:end="59:14">y</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:23">offset</name></expr>;</init> <condition pos:start="59:26" pos:end="59:44"><expr pos:start="59:26" pos:end="59:43"><name pos:start="59:26" pos:end="59:26">y</name> <operator pos:start="59:28" pos:end="59:28">&lt;</operator> <name pos:start="59:30" pos:end="59:35">height</name> <operator pos:start="59:37" pos:end="59:37">*</operator> <name pos:start="59:39" pos:end="59:43">width</name></expr>;</condition> <incr pos:start="59:46" pos:end="59:51"><expr pos:start="59:46" pos:end="59:51"><name pos:start="59:46" pos:end="59:46">y</name> <operator pos:start="59:48" pos:end="59:49">+=</operator> <literal type="number" pos:start="59:51" pos:end="59:51">2</literal></expr></incr>)</control> <block pos:start="59:54" pos:end="87:9">{<block_content pos:start="61:13" pos:end="85:13">

            <expr_stmt pos:start="61:13" pos:end="61:79"><expr pos:start="61:13" pos:end="61:78"><name pos:start="61:13" pos:end="61:16">code</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:78"><name pos:start="61:20" pos:end="61:27">get_vlc2</name><argument_list pos:start="61:28" pos:end="61:78">(<argument pos:start="61:29" pos:end="61:30"><expr pos:start="61:29" pos:end="61:30"><name pos:start="61:29" pos:end="61:30">gb</name></expr></argument>, <argument pos:start="61:33" pos:end="61:54"><expr pos:start="61:33" pos:end="61:54"><name pos:start="61:33" pos:end="61:54"><name pos:start="61:33" pos:end="61:48">ff_vc1_norm2_vlc</name><operator pos:start="61:49" pos:end="61:49">.</operator><name pos:start="61:50" pos:end="61:54">table</name></name></expr></argument>, <argument pos:start="61:57" pos:end="61:74"><expr pos:start="61:57" pos:end="61:74"><name pos:start="61:57" pos:end="61:74">VC1_NORM2_VLC_BITS</name></expr></argument>, <argument pos:start="61:77" pos:end="61:77"><expr pos:start="61:77" pos:end="61:77"><literal type="number" pos:start="61:77" pos:end="61:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:33"><expr pos:start="63:13" pos:end="63:32"><operator pos:start="63:13" pos:end="63:13">*</operator><name pos:start="63:14" pos:end="63:19">planep</name><operator pos:start="63:20" pos:end="63:21">++</operator> <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:28">code</name> <operator pos:start="63:30" pos:end="63:30">&amp;</operator> <literal type="number" pos:start="63:32" pos:end="63:32">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:21"><expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:18">offset</name><operator pos:start="65:19" pos:end="65:20">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="73:13"><if pos:start="67:13" pos:end="73:13">if <condition pos:start="67:16" pos:end="67:32">(<expr pos:start="67:17" pos:end="67:31"><name pos:start="67:17" pos:end="67:22">offset</name> <operator pos:start="67:24" pos:end="67:25">==</operator> <name pos:start="67:27" pos:end="67:31">width</name></expr>)</condition> <block pos:start="67:34" pos:end="73:13">{<block_content pos:start="69:17" pos:end="71:41">

                <expr_stmt pos:start="69:17" pos:end="69:28"><expr pos:start="69:17" pos:end="69:27"><name pos:start="69:17" pos:end="69:22">offset</name>  <operator pos:start="69:25" pos:end="69:25">=</operator> <literal type="number" pos:start="69:27" pos:end="69:27">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:41"><expr pos:start="71:17" pos:end="71:40"><name pos:start="71:17" pos:end="71:22">planep</name> <operator pos:start="71:24" pos:end="71:25">+=</operator> <name pos:start="71:27" pos:end="71:32">stride</name> <operator pos:start="71:34" pos:end="71:34">-</operator> <name pos:start="71:36" pos:end="71:40">width</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:34"><expr pos:start="75:13" pos:end="75:33"><operator pos:start="75:13" pos:end="75:13">*</operator><name pos:start="75:14" pos:end="75:19">planep</name><operator pos:start="75:20" pos:end="75:21">++</operator> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:28">code</name> <operator pos:start="75:30" pos:end="75:31">&gt;&gt;</operator> <literal type="number" pos:start="75:33" pos:end="75:33">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:21"><expr pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:18">offset</name><operator pos:start="77:19" pos:end="77:20">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="85:13"><if pos:start="79:13" pos:end="85:13">if <condition pos:start="79:16" pos:end="79:32">(<expr pos:start="79:17" pos:end="79:31"><name pos:start="79:17" pos:end="79:22">offset</name> <operator pos:start="79:24" pos:end="79:25">==</operator> <name pos:start="79:27" pos:end="79:31">width</name></expr>)</condition> <block pos:start="79:34" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:41">

                <expr_stmt pos:start="81:17" pos:end="81:28"><expr pos:start="81:17" pos:end="81:27"><name pos:start="81:17" pos:end="81:22">offset</name>  <operator pos:start="81:25" pos:end="81:25">=</operator> <literal type="number" pos:start="81:27" pos:end="81:27">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:41"><expr pos:start="83:17" pos:end="83:40"><name pos:start="83:17" pos:end="83:22">planep</name> <operator pos:start="83:24" pos:end="83:25">+=</operator> <name pos:start="83:27" pos:end="83:32">stride</name> <operator pos:start="83:34" pos:end="83:34">-</operator> <name pos:start="83:36" pos:end="83:40">width</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:21">case <expr pos:start="91:10" pos:end="91:20"><name pos:start="91:10" pos:end="91:20">IMODE_DIFF6</name></expr>:</case>

    <case pos:start="93:5" pos:end="93:21">case <expr pos:start="93:10" pos:end="93:20"><name pos:start="93:10" pos:end="93:20">IMODE_NORM6</name></expr>:</case>

        <if_stmt pos:start="95:9" pos:end="179:9"><if pos:start="95:9" pos:end="133:9">if <condition pos:start="95:12" pos:end="95:41">(<expr pos:start="95:13" pos:end="95:40"><operator pos:start="95:13" pos:end="95:13">!</operator><operator pos:start="95:14" pos:end="95:14">(</operator><name pos:start="95:15" pos:end="95:20">height</name> <operator pos:start="95:22" pos:end="95:22">%</operator> <literal type="number" pos:start="95:24" pos:end="95:24">3</literal><operator pos:start="95:25" pos:end="95:25">)</operator> <operator pos:start="95:27" pos:end="95:28">&amp;&amp;</operator> <operator pos:start="95:30" pos:end="95:30">(</operator><name pos:start="95:31" pos:end="95:35">width</name> <operator pos:start="95:37" pos:end="95:37">%</operator> <literal type="number" pos:start="95:39" pos:end="95:39">3</literal><operator pos:start="95:40" pos:end="95:40">)</operator></expr>)</condition> <block pos:start="95:43" pos:end="133:9">{<block_content pos:start="97:13" pos:end="131:66"> <comment type="line" pos:start="95:45" pos:end="95:63">// use 2x3 decoding</comment>

            <for pos:start="97:13" pos:end="127:13">for <control pos:start="97:17" pos:end="97:43">(<init pos:start="97:18" pos:end="97:23"><expr pos:start="97:18" pos:end="97:22"><name pos:start="97:18" pos:end="97:18">y</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <literal type="number" pos:start="97:22" pos:end="97:22">0</literal></expr>;</init> <condition pos:start="97:25" pos:end="97:35"><expr pos:start="97:25" pos:end="97:34"><name pos:start="97:25" pos:end="97:25">y</name> <operator pos:start="97:27" pos:end="97:27">&lt;</operator> <name pos:start="97:29" pos:end="97:34">height</name></expr>;</condition> <incr pos:start="97:37" pos:end="97:42"><expr pos:start="97:37" pos:end="97:42"><name pos:start="97:37" pos:end="97:37">y</name> <operator pos:start="97:39" pos:end="97:40">+=</operator> <literal type="number" pos:start="97:42" pos:end="97:42">3</literal></expr></incr>)</control> <block pos:start="97:45" pos:end="127:13">{<block_content pos:start="99:17" pos:end="125:37">

                <for pos:start="99:17" pos:end="123:17">for <control pos:start="99:21" pos:end="99:54">(<init pos:start="99:22" pos:end="99:35"><expr pos:start="99:22" pos:end="99:34"><name pos:start="99:22" pos:end="99:22">x</name> <operator pos:start="99:24" pos:end="99:24">=</operator> <name pos:start="99:26" pos:end="99:30">width</name> <operator pos:start="99:32" pos:end="99:32">&amp;</operator> <literal type="number" pos:start="99:34" pos:end="99:34">1</literal></expr>;</init> <condition pos:start="99:37" pos:end="99:46"><expr pos:start="99:37" pos:end="99:45"><name pos:start="99:37" pos:end="99:37">x</name> <operator pos:start="99:39" pos:end="99:39">&lt;</operator> <name pos:start="99:41" pos:end="99:45">width</name></expr>;</condition> <incr pos:start="99:48" pos:end="99:53"><expr pos:start="99:48" pos:end="99:53"><name pos:start="99:48" pos:end="99:48">x</name> <operator pos:start="99:50" pos:end="99:51">+=</operator> <literal type="number" pos:start="99:53" pos:end="99:53">2</literal></expr></incr>)</control> <block pos:start="99:56" pos:end="123:17">{<block_content pos:start="101:21" pos:end="121:65">

                    <expr_stmt pos:start="101:21" pos:end="101:87"><expr pos:start="101:21" pos:end="101:86"><name pos:start="101:21" pos:end="101:24">code</name> <operator pos:start="101:26" pos:end="101:26">=</operator> <call pos:start="101:28" pos:end="101:86"><name pos:start="101:28" pos:end="101:35">get_vlc2</name><argument_list pos:start="101:36" pos:end="101:86">(<argument pos:start="101:37" pos:end="101:38"><expr pos:start="101:37" pos:end="101:38"><name pos:start="101:37" pos:end="101:38">gb</name></expr></argument>, <argument pos:start="101:41" pos:end="101:62"><expr pos:start="101:41" pos:end="101:62"><name pos:start="101:41" pos:end="101:62"><name pos:start="101:41" pos:end="101:56">ff_vc1_norm6_vlc</name><operator pos:start="101:57" pos:end="101:57">.</operator><name pos:start="101:58" pos:end="101:62">table</name></name></expr></argument>, <argument pos:start="101:65" pos:end="101:82"><expr pos:start="101:65" pos:end="101:82"><name pos:start="101:65" pos:end="101:82">VC1_NORM6_VLC_BITS</name></expr></argument>, <argument pos:start="101:85" pos:end="101:85"><expr pos:start="101:85" pos:end="101:85"><literal type="number" pos:start="101:85" pos:end="101:85">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="103:21" pos:end="109:21"><if pos:start="103:21" pos:end="109:21">if <condition pos:start="103:24" pos:end="103:33">(<expr pos:start="103:25" pos:end="103:32"><name pos:start="103:25" pos:end="103:28">code</name> <operator pos:start="103:30" pos:end="103:30">&lt;</operator> <literal type="number" pos:start="103:32" pos:end="103:32">0</literal></expr>)</condition> <block pos:start="103:35" pos:end="109:21">{<block_content pos:start="105:25" pos:end="107:34">

                        <expr_stmt pos:start="105:25" pos:end="105:81"><expr pos:start="105:25" pos:end="105:80"><call pos:start="105:25" pos:end="105:80"><name pos:start="105:25" pos:end="105:30">av_log</name><argument_list pos:start="105:31" pos:end="105:80">(<argument pos:start="105:32" pos:end="105:41"><expr pos:start="105:32" pos:end="105:41"><name pos:start="105:32" pos:end="105:41"><name pos:start="105:32" pos:end="105:32">v</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:35">s</name><operator pos:start="105:36" pos:end="105:36">.</operator><name pos:start="105:37" pos:end="105:41">avctx</name></name></expr></argument>, <argument pos:start="105:44" pos:end="105:55"><expr pos:start="105:44" pos:end="105:55"><name pos:start="105:44" pos:end="105:55">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="105:58" pos:end="105:79"><expr pos:start="105:58" pos:end="105:79"><literal type="string" pos:start="105:58" pos:end="105:79">"invalid NORM-6 VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="107:25" pos:end="107:34">return <expr pos:start="107:32" pos:end="107:33"><operator pos:start="107:32" pos:end="107:32">-</operator><literal type="number" pos:start="107:33" pos:end="107:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:65"><expr pos:start="111:21" pos:end="111:64"><name pos:start="111:21" pos:end="111:33"><name pos:start="111:21" pos:end="111:26">planep</name><index pos:start="111:27" pos:end="111:33">[<expr pos:start="111:28" pos:end="111:32"><name pos:start="111:28" pos:end="111:28">x</name> <operator pos:start="111:30" pos:end="111:30">+</operator> <literal type="number" pos:start="111:32" pos:end="111:32">0</literal></expr>]</index></name>              <operator pos:start="111:48" pos:end="111:48">=</operator> <operator pos:start="111:50" pos:end="111:50">(</operator><name pos:start="111:51" pos:end="111:54">code</name> <operator pos:start="111:56" pos:end="111:57">&gt;&gt;</operator> <literal type="number" pos:start="111:59" pos:end="111:59">0</literal><operator pos:start="111:60" pos:end="111:60">)</operator> <operator pos:start="111:62" pos:end="111:62">&amp;</operator> <literal type="number" pos:start="111:64" pos:end="111:64">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:65"><expr pos:start="113:21" pos:end="113:64"><name pos:start="113:21" pos:end="113:33"><name pos:start="113:21" pos:end="113:26">planep</name><index pos:start="113:27" pos:end="113:33">[<expr pos:start="113:28" pos:end="113:32"><name pos:start="113:28" pos:end="113:28">x</name> <operator pos:start="113:30" pos:end="113:30">+</operator> <literal type="number" pos:start="113:32" pos:end="113:32">1</literal></expr>]</index></name>              <operator pos:start="113:48" pos:end="113:48">=</operator> <operator pos:start="113:50" pos:end="113:50">(</operator><name pos:start="113:51" pos:end="113:54">code</name> <operator pos:start="113:56" pos:end="113:57">&gt;&gt;</operator> <literal type="number" pos:start="113:59" pos:end="113:59">1</literal><operator pos:start="113:60" pos:end="113:60">)</operator> <operator pos:start="113:62" pos:end="113:62">&amp;</operator> <literal type="number" pos:start="113:64" pos:end="113:64">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:65"><expr pos:start="115:21" pos:end="115:64"><name pos:start="115:21" pos:end="115:42"><name pos:start="115:21" pos:end="115:26">planep</name><index pos:start="115:27" pos:end="115:42">[<expr pos:start="115:28" pos:end="115:41"><name pos:start="115:28" pos:end="115:28">x</name> <operator pos:start="115:30" pos:end="115:30">+</operator> <literal type="number" pos:start="115:32" pos:end="115:32">0</literal> <operator pos:start="115:34" pos:end="115:34">+</operator> <name pos:start="115:36" pos:end="115:41">stride</name></expr>]</index></name>     <operator pos:start="115:48" pos:end="115:48">=</operator> <operator pos:start="115:50" pos:end="115:50">(</operator><name pos:start="115:51" pos:end="115:54">code</name> <operator pos:start="115:56" pos:end="115:57">&gt;&gt;</operator> <literal type="number" pos:start="115:59" pos:end="115:59">2</literal><operator pos:start="115:60" pos:end="115:60">)</operator> <operator pos:start="115:62" pos:end="115:62">&amp;</operator> <literal type="number" pos:start="115:64" pos:end="115:64">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:65"><expr pos:start="117:21" pos:end="117:64"><name pos:start="117:21" pos:end="117:42"><name pos:start="117:21" pos:end="117:26">planep</name><index pos:start="117:27" pos:end="117:42">[<expr pos:start="117:28" pos:end="117:41"><name pos:start="117:28" pos:end="117:28">x</name> <operator pos:start="117:30" pos:end="117:30">+</operator> <literal type="number" pos:start="117:32" pos:end="117:32">1</literal> <operator pos:start="117:34" pos:end="117:34">+</operator> <name pos:start="117:36" pos:end="117:41">stride</name></expr>]</index></name>     <operator pos:start="117:48" pos:end="117:48">=</operator> <operator pos:start="117:50" pos:end="117:50">(</operator><name pos:start="117:51" pos:end="117:54">code</name> <operator pos:start="117:56" pos:end="117:57">&gt;&gt;</operator> <literal type="number" pos:start="117:59" pos:end="117:59">3</literal><operator pos:start="117:60" pos:end="117:60">)</operator> <operator pos:start="117:62" pos:end="117:62">&amp;</operator> <literal type="number" pos:start="117:64" pos:end="117:64">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="119:21" pos:end="119:65"><expr pos:start="119:21" pos:end="119:64"><name pos:start="119:21" pos:end="119:46"><name pos:start="119:21" pos:end="119:26">planep</name><index pos:start="119:27" pos:end="119:46">[<expr pos:start="119:28" pos:end="119:45"><name pos:start="119:28" pos:end="119:28">x</name> <operator pos:start="119:30" pos:end="119:30">+</operator> <literal type="number" pos:start="119:32" pos:end="119:32">0</literal> <operator pos:start="119:34" pos:end="119:34">+</operator> <name pos:start="119:36" pos:end="119:41">stride</name> <operator pos:start="119:43" pos:end="119:43">*</operator> <literal type="number" pos:start="119:45" pos:end="119:45">2</literal></expr>]</index></name> <operator pos:start="119:48" pos:end="119:48">=</operator> <operator pos:start="119:50" pos:end="119:50">(</operator><name pos:start="119:51" pos:end="119:54">code</name> <operator pos:start="119:56" pos:end="119:57">&gt;&gt;</operator> <literal type="number" pos:start="119:59" pos:end="119:59">4</literal><operator pos:start="119:60" pos:end="119:60">)</operator> <operator pos:start="119:62" pos:end="119:62">&amp;</operator> <literal type="number" pos:start="119:64" pos:end="119:64">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="121:21" pos:end="121:65"><expr pos:start="121:21" pos:end="121:64"><name pos:start="121:21" pos:end="121:46"><name pos:start="121:21" pos:end="121:26">planep</name><index pos:start="121:27" pos:end="121:46">[<expr pos:start="121:28" pos:end="121:45"><name pos:start="121:28" pos:end="121:28">x</name> <operator pos:start="121:30" pos:end="121:30">+</operator> <literal type="number" pos:start="121:32" pos:end="121:32">1</literal> <operator pos:start="121:34" pos:end="121:34">+</operator> <name pos:start="121:36" pos:end="121:41">stride</name> <operator pos:start="121:43" pos:end="121:43">*</operator> <literal type="number" pos:start="121:45" pos:end="121:45">2</literal></expr>]</index></name> <operator pos:start="121:48" pos:end="121:48">=</operator> <operator pos:start="121:50" pos:end="121:50">(</operator><name pos:start="121:51" pos:end="121:54">code</name> <operator pos:start="121:56" pos:end="121:57">&gt;&gt;</operator> <literal type="number" pos:start="121:59" pos:end="121:59">5</literal><operator pos:start="121:60" pos:end="121:60">)</operator> <operator pos:start="121:62" pos:end="121:62">&amp;</operator> <literal type="number" pos:start="121:64" pos:end="121:64">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="125:17" pos:end="125:37"><expr pos:start="125:17" pos:end="125:36"><name pos:start="125:17" pos:end="125:22">planep</name> <operator pos:start="125:24" pos:end="125:25">+=</operator> <name pos:start="125:27" pos:end="125:32">stride</name> <operator pos:start="125:34" pos:end="125:34">*</operator> <literal type="number" pos:start="125:36" pos:end="125:36">3</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="129:13" pos:end="131:66"><if pos:start="129:13" pos:end="131:66">if <condition pos:start="129:16" pos:end="129:26">(<expr pos:start="129:17" pos:end="129:25"><name pos:start="129:17" pos:end="129:21">width</name> <operator pos:start="129:23" pos:end="129:23">&amp;</operator> <literal type="number" pos:start="129:25" pos:end="129:25">1</literal></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:66"><block_content pos:start="131:17" pos:end="131:66">

                <expr_stmt pos:start="131:17" pos:end="131:66"><expr pos:start="131:17" pos:end="131:65"><call pos:start="131:17" pos:end="131:65"><name pos:start="131:17" pos:end="131:30">decode_colskip</name><argument_list pos:start="131:31" pos:end="131:65">(<argument pos:start="131:32" pos:end="131:35"><expr pos:start="131:32" pos:end="131:35"><name pos:start="131:32" pos:end="131:35">data</name></expr></argument>, <argument pos:start="131:38" pos:end="131:38"><expr pos:start="131:38" pos:end="131:38"><literal type="number" pos:start="131:38" pos:end="131:38">1</literal></expr></argument>, <argument pos:start="131:41" pos:end="131:46"><expr pos:start="131:41" pos:end="131:46"><name pos:start="131:41" pos:end="131:46">height</name></expr></argument>, <argument pos:start="131:49" pos:end="131:54"><expr pos:start="131:49" pos:end="131:54"><name pos:start="131:49" pos:end="131:54">stride</name></expr></argument>, <argument pos:start="131:57" pos:end="131:64"><expr pos:start="131:57" pos:end="131:64"><operator pos:start="131:57" pos:end="131:57">&amp;</operator><name pos:start="131:58" pos:end="131:64"><name pos:start="131:58" pos:end="131:58">v</name><operator pos:start="131:59" pos:end="131:60">-&gt;</operator><name pos:start="131:61" pos:end="131:61">s</name><operator pos:start="131:62" pos:end="131:62">.</operator><name pos:start="131:63" pos:end="131:64">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="133:11" pos:end="179:9">else <block pos:start="133:16" pos:end="179:9">{<block_content pos:start="135:13" pos:end="177:78"> <comment type="line" pos:start="133:18" pos:end="133:23">// 3x2</comment>

            <expr_stmt pos:start="135:13" pos:end="135:44"><expr pos:start="135:13" pos:end="135:43"><name pos:start="135:13" pos:end="135:18">planep</name> <operator pos:start="135:20" pos:end="135:21">+=</operator> <operator pos:start="135:23" pos:end="135:23">(</operator><name pos:start="135:24" pos:end="135:29">height</name> <operator pos:start="135:31" pos:end="135:31">&amp;</operator> <literal type="number" pos:start="135:33" pos:end="135:33">1</literal><operator pos:start="135:34" pos:end="135:34">)</operator> <operator pos:start="135:36" pos:end="135:36">*</operator> <name pos:start="135:38" pos:end="135:43">stride</name></expr>;</expr_stmt>

            <for pos:start="137:13" pos:end="167:13">for <control pos:start="137:17" pos:end="137:52">(<init pos:start="137:18" pos:end="137:32"><expr pos:start="137:18" pos:end="137:31"><name pos:start="137:18" pos:end="137:18">y</name> <operator pos:start="137:20" pos:end="137:20">=</operator> <name pos:start="137:22" pos:end="137:27">height</name> <operator pos:start="137:29" pos:end="137:29">&amp;</operator> <literal type="number" pos:start="137:31" pos:end="137:31">1</literal></expr>;</init> <condition pos:start="137:34" pos:end="137:44"><expr pos:start="137:34" pos:end="137:43"><name pos:start="137:34" pos:end="137:34">y</name> <operator pos:start="137:36" pos:end="137:36">&lt;</operator> <name pos:start="137:38" pos:end="137:43">height</name></expr>;</condition> <incr pos:start="137:46" pos:end="137:51"><expr pos:start="137:46" pos:end="137:51"><name pos:start="137:46" pos:end="137:46">y</name> <operator pos:start="137:48" pos:end="137:49">+=</operator> <literal type="number" pos:start="137:51" pos:end="137:51">2</literal></expr></incr>)</control> <block pos:start="137:54" pos:end="167:13">{<block_content pos:start="139:17" pos:end="165:37">

                <for pos:start="139:17" pos:end="163:17">for <control pos:start="139:21" pos:end="139:54">(<init pos:start="139:22" pos:end="139:35"><expr pos:start="139:22" pos:end="139:34"><name pos:start="139:22" pos:end="139:22">x</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <name pos:start="139:26" pos:end="139:30">width</name> <operator pos:start="139:32" pos:end="139:32">%</operator> <literal type="number" pos:start="139:34" pos:end="139:34">3</literal></expr>;</init> <condition pos:start="139:37" pos:end="139:46"><expr pos:start="139:37" pos:end="139:45"><name pos:start="139:37" pos:end="139:37">x</name> <operator pos:start="139:39" pos:end="139:39">&lt;</operator> <name pos:start="139:41" pos:end="139:45">width</name></expr>;</condition> <incr pos:start="139:48" pos:end="139:53"><expr pos:start="139:48" pos:end="139:53"><name pos:start="139:48" pos:end="139:48">x</name> <operator pos:start="139:50" pos:end="139:51">+=</operator> <literal type="number" pos:start="139:53" pos:end="139:53">3</literal></expr></incr>)</control> <block pos:start="139:56" pos:end="163:17">{<block_content pos:start="141:21" pos:end="161:61">

                    <expr_stmt pos:start="141:21" pos:end="141:87"><expr pos:start="141:21" pos:end="141:86"><name pos:start="141:21" pos:end="141:24">code</name> <operator pos:start="141:26" pos:end="141:26">=</operator> <call pos:start="141:28" pos:end="141:86"><name pos:start="141:28" pos:end="141:35">get_vlc2</name><argument_list pos:start="141:36" pos:end="141:86">(<argument pos:start="141:37" pos:end="141:38"><expr pos:start="141:37" pos:end="141:38"><name pos:start="141:37" pos:end="141:38">gb</name></expr></argument>, <argument pos:start="141:41" pos:end="141:62"><expr pos:start="141:41" pos:end="141:62"><name pos:start="141:41" pos:end="141:62"><name pos:start="141:41" pos:end="141:56">ff_vc1_norm6_vlc</name><operator pos:start="141:57" pos:end="141:57">.</operator><name pos:start="141:58" pos:end="141:62">table</name></name></expr></argument>, <argument pos:start="141:65" pos:end="141:82"><expr pos:start="141:65" pos:end="141:82"><name pos:start="141:65" pos:end="141:82">VC1_NORM6_VLC_BITS</name></expr></argument>, <argument pos:start="141:85" pos:end="141:85"><expr pos:start="141:85" pos:end="141:85"><literal type="number" pos:start="141:85" pos:end="141:85">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="143:21" pos:end="149:21"><if pos:start="143:21" pos:end="149:21">if <condition pos:start="143:24" pos:end="143:33">(<expr pos:start="143:25" pos:end="143:32"><name pos:start="143:25" pos:end="143:28">code</name> <operator pos:start="143:30" pos:end="143:30">&lt;</operator> <literal type="number" pos:start="143:32" pos:end="143:32">0</literal></expr>)</condition> <block pos:start="143:35" pos:end="149:21">{<block_content pos:start="145:25" pos:end="147:34">

                        <expr_stmt pos:start="145:25" pos:end="145:81"><expr pos:start="145:25" pos:end="145:80"><call pos:start="145:25" pos:end="145:80"><name pos:start="145:25" pos:end="145:30">av_log</name><argument_list pos:start="145:31" pos:end="145:80">(<argument pos:start="145:32" pos:end="145:41"><expr pos:start="145:32" pos:end="145:41"><name pos:start="145:32" pos:end="145:41"><name pos:start="145:32" pos:end="145:32">v</name><operator pos:start="145:33" pos:end="145:34">-&gt;</operator><name pos:start="145:35" pos:end="145:35">s</name><operator pos:start="145:36" pos:end="145:36">.</operator><name pos:start="145:37" pos:end="145:41">avctx</name></name></expr></argument>, <argument pos:start="145:44" pos:end="145:55"><expr pos:start="145:44" pos:end="145:55"><name pos:start="145:44" pos:end="145:55">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="145:58" pos:end="145:79"><expr pos:start="145:58" pos:end="145:79"><literal type="string" pos:start="145:58" pos:end="145:79">"invalid NORM-6 VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="147:25" pos:end="147:34">return <expr pos:start="147:32" pos:end="147:33"><operator pos:start="147:32" pos:end="147:32">-</operator><literal type="number" pos:start="147:33" pos:end="147:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:61"><expr pos:start="151:21" pos:end="151:60"><name pos:start="151:21" pos:end="151:33"><name pos:start="151:21" pos:end="151:26">planep</name><index pos:start="151:27" pos:end="151:33">[<expr pos:start="151:28" pos:end="151:32"><name pos:start="151:28" pos:end="151:28">x</name> <operator pos:start="151:30" pos:end="151:30">+</operator> <literal type="number" pos:start="151:32" pos:end="151:32">0</literal></expr>]</index></name>          <operator pos:start="151:44" pos:end="151:44">=</operator> <operator pos:start="151:46" pos:end="151:46">(</operator><name pos:start="151:47" pos:end="151:50">code</name> <operator pos:start="151:52" pos:end="151:53">&gt;&gt;</operator> <literal type="number" pos:start="151:55" pos:end="151:55">0</literal><operator pos:start="151:56" pos:end="151:56">)</operator> <operator pos:start="151:58" pos:end="151:58">&amp;</operator> <literal type="number" pos:start="151:60" pos:end="151:60">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="153:21" pos:end="153:61"><expr pos:start="153:21" pos:end="153:60"><name pos:start="153:21" pos:end="153:33"><name pos:start="153:21" pos:end="153:26">planep</name><index pos:start="153:27" pos:end="153:33">[<expr pos:start="153:28" pos:end="153:32"><name pos:start="153:28" pos:end="153:28">x</name> <operator pos:start="153:30" pos:end="153:30">+</operator> <literal type="number" pos:start="153:32" pos:end="153:32">1</literal></expr>]</index></name>          <operator pos:start="153:44" pos:end="153:44">=</operator> <operator pos:start="153:46" pos:end="153:46">(</operator><name pos:start="153:47" pos:end="153:50">code</name> <operator pos:start="153:52" pos:end="153:53">&gt;&gt;</operator> <literal type="number" pos:start="153:55" pos:end="153:55">1</literal><operator pos:start="153:56" pos:end="153:56">)</operator> <operator pos:start="153:58" pos:end="153:58">&amp;</operator> <literal type="number" pos:start="153:60" pos:end="153:60">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:61"><expr pos:start="155:21" pos:end="155:60"><name pos:start="155:21" pos:end="155:33"><name pos:start="155:21" pos:end="155:26">planep</name><index pos:start="155:27" pos:end="155:33">[<expr pos:start="155:28" pos:end="155:32"><name pos:start="155:28" pos:end="155:28">x</name> <operator pos:start="155:30" pos:end="155:30">+</operator> <literal type="number" pos:start="155:32" pos:end="155:32">2</literal></expr>]</index></name>          <operator pos:start="155:44" pos:end="155:44">=</operator> <operator pos:start="155:46" pos:end="155:46">(</operator><name pos:start="155:47" pos:end="155:50">code</name> <operator pos:start="155:52" pos:end="155:53">&gt;&gt;</operator> <literal type="number" pos:start="155:55" pos:end="155:55">2</literal><operator pos:start="155:56" pos:end="155:56">)</operator> <operator pos:start="155:58" pos:end="155:58">&amp;</operator> <literal type="number" pos:start="155:60" pos:end="155:60">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:61"><expr pos:start="157:21" pos:end="157:60"><name pos:start="157:21" pos:end="157:42"><name pos:start="157:21" pos:end="157:26">planep</name><index pos:start="157:27" pos:end="157:42">[<expr pos:start="157:28" pos:end="157:41"><name pos:start="157:28" pos:end="157:28">x</name> <operator pos:start="157:30" pos:end="157:30">+</operator> <literal type="number" pos:start="157:32" pos:end="157:32">0</literal> <operator pos:start="157:34" pos:end="157:34">+</operator> <name pos:start="157:36" pos:end="157:41">stride</name></expr>]</index></name> <operator pos:start="157:44" pos:end="157:44">=</operator> <operator pos:start="157:46" pos:end="157:46">(</operator><name pos:start="157:47" pos:end="157:50">code</name> <operator pos:start="157:52" pos:end="157:53">&gt;&gt;</operator> <literal type="number" pos:start="157:55" pos:end="157:55">3</literal><operator pos:start="157:56" pos:end="157:56">)</operator> <operator pos:start="157:58" pos:end="157:58">&amp;</operator> <literal type="number" pos:start="157:60" pos:end="157:60">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="159:21" pos:end="159:61"><expr pos:start="159:21" pos:end="159:60"><name pos:start="159:21" pos:end="159:42"><name pos:start="159:21" pos:end="159:26">planep</name><index pos:start="159:27" pos:end="159:42">[<expr pos:start="159:28" pos:end="159:41"><name pos:start="159:28" pos:end="159:28">x</name> <operator pos:start="159:30" pos:end="159:30">+</operator> <literal type="number" pos:start="159:32" pos:end="159:32">1</literal> <operator pos:start="159:34" pos:end="159:34">+</operator> <name pos:start="159:36" pos:end="159:41">stride</name></expr>]</index></name> <operator pos:start="159:44" pos:end="159:44">=</operator> <operator pos:start="159:46" pos:end="159:46">(</operator><name pos:start="159:47" pos:end="159:50">code</name> <operator pos:start="159:52" pos:end="159:53">&gt;&gt;</operator> <literal type="number" pos:start="159:55" pos:end="159:55">4</literal><operator pos:start="159:56" pos:end="159:56">)</operator> <operator pos:start="159:58" pos:end="159:58">&amp;</operator> <literal type="number" pos:start="159:60" pos:end="159:60">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="161:21" pos:end="161:61"><expr pos:start="161:21" pos:end="161:60"><name pos:start="161:21" pos:end="161:42"><name pos:start="161:21" pos:end="161:26">planep</name><index pos:start="161:27" pos:end="161:42">[<expr pos:start="161:28" pos:end="161:41"><name pos:start="161:28" pos:end="161:28">x</name> <operator pos:start="161:30" pos:end="161:30">+</operator> <literal type="number" pos:start="161:32" pos:end="161:32">2</literal> <operator pos:start="161:34" pos:end="161:34">+</operator> <name pos:start="161:36" pos:end="161:41">stride</name></expr>]</index></name> <operator pos:start="161:44" pos:end="161:44">=</operator> <operator pos:start="161:46" pos:end="161:46">(</operator><name pos:start="161:47" pos:end="161:50">code</name> <operator pos:start="161:52" pos:end="161:53">&gt;&gt;</operator> <literal type="number" pos:start="161:55" pos:end="161:55">5</literal><operator pos:start="161:56" pos:end="161:56">)</operator> <operator pos:start="161:58" pos:end="161:58">&amp;</operator> <literal type="number" pos:start="161:60" pos:end="161:60">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="165:17" pos:end="165:37"><expr pos:start="165:17" pos:end="165:36"><name pos:start="165:17" pos:end="165:22">planep</name> <operator pos:start="165:24" pos:end="165:25">+=</operator> <name pos:start="165:27" pos:end="165:32">stride</name> <operator pos:start="165:34" pos:end="165:34">*</operator> <literal type="number" pos:start="165:36" pos:end="165:36">2</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="169:13" pos:end="169:26"><expr pos:start="169:13" pos:end="169:25"><name pos:start="169:13" pos:end="169:13">x</name> <operator pos:start="169:15" pos:end="169:15">=</operator> <name pos:start="169:17" pos:end="169:21">width</name> <operator pos:start="169:23" pos:end="169:23">%</operator> <literal type="number" pos:start="169:25" pos:end="169:25">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="173:78"><if pos:start="171:13" pos:end="173:78">if <condition pos:start="171:16" pos:end="171:18">(<expr pos:start="171:17" pos:end="171:17"><name pos:start="171:17" pos:end="171:17">x</name></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:78"><block_content pos:start="173:17" pos:end="173:78">

                <expr_stmt pos:start="173:17" pos:end="173:78"><expr pos:start="173:17" pos:end="173:77"><call pos:start="173:17" pos:end="173:77"><name pos:start="173:17" pos:end="173:30">decode_colskip</name><argument_list pos:start="173:31" pos:end="173:77">(<argument pos:start="173:32" pos:end="173:35"><expr pos:start="173:32" pos:end="173:35"><name pos:start="173:32" pos:end="173:35">data</name></expr></argument>,             <argument pos:start="173:50" pos:end="173:50"><expr pos:start="173:50" pos:end="173:50"><name pos:start="173:50" pos:end="173:50">x</name></expr></argument>, <argument pos:start="173:53" pos:end="173:58"><expr pos:start="173:53" pos:end="173:58"><name pos:start="173:53" pos:end="173:58">height</name></expr></argument>, <argument pos:start="173:61" pos:end="173:66"><expr pos:start="173:61" pos:end="173:66"><name pos:start="173:61" pos:end="173:66">stride</name></expr></argument>, <argument pos:start="173:69" pos:end="173:76"><expr pos:start="173:69" pos:end="173:76"><operator pos:start="173:69" pos:end="173:69">&amp;</operator><name pos:start="173:70" pos:end="173:76"><name pos:start="173:70" pos:end="173:70">v</name><operator pos:start="173:71" pos:end="173:72">-&gt;</operator><name pos:start="173:73" pos:end="173:73">s</name><operator pos:start="173:74" pos:end="173:74">.</operator><name pos:start="173:75" pos:end="173:76">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="175:13" pos:end="177:78"><if pos:start="175:13" pos:end="177:78">if <condition pos:start="175:16" pos:end="175:27">(<expr pos:start="175:17" pos:end="175:26"><name pos:start="175:17" pos:end="175:22">height</name> <operator pos:start="175:24" pos:end="175:24">&amp;</operator> <literal type="number" pos:start="175:26" pos:end="175:26">1</literal></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:78"><block_content pos:start="177:17" pos:end="177:78">

                <expr_stmt pos:start="177:17" pos:end="177:78"><expr pos:start="177:17" pos:end="177:77"><call pos:start="177:17" pos:end="177:77"><name pos:start="177:17" pos:end="177:30">decode_rowskip</name><argument_list pos:start="177:31" pos:end="177:77">(<argument pos:start="177:32" pos:end="177:39"><expr pos:start="177:32" pos:end="177:39"><name pos:start="177:32" pos:end="177:35">data</name> <operator pos:start="177:37" pos:end="177:37">+</operator> <name pos:start="177:39" pos:end="177:39">x</name></expr></argument>, <argument pos:start="177:42" pos:end="177:50"><expr pos:start="177:42" pos:end="177:50"><name pos:start="177:42" pos:end="177:46">width</name> <operator pos:start="177:48" pos:end="177:48">-</operator> <name pos:start="177:50" pos:end="177:50">x</name></expr></argument>,      <argument pos:start="177:58" pos:end="177:58"><expr pos:start="177:58" pos:end="177:58"><literal type="number" pos:start="177:58" pos:end="177:58">1</literal></expr></argument>, <argument pos:start="177:61" pos:end="177:66"><expr pos:start="177:61" pos:end="177:66"><name pos:start="177:61" pos:end="177:66">stride</name></expr></argument>, <argument pos:start="177:69" pos:end="177:76"><expr pos:start="177:69" pos:end="177:76"><operator pos:start="177:69" pos:end="177:69">&amp;</operator><name pos:start="177:70" pos:end="177:76"><name pos:start="177:70" pos:end="177:70">v</name><operator pos:start="177:71" pos:end="177:72">-&gt;</operator><name pos:start="177:73" pos:end="177:73">s</name><operator pos:start="177:74" pos:end="177:74">.</operator><name pos:start="177:75" pos:end="177:76">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="181:9" pos:end="181:14">break;</break>

    <case pos:start="183:5" pos:end="183:23">case <expr pos:start="183:10" pos:end="183:22"><name pos:start="183:10" pos:end="183:22">IMODE_ROWSKIP</name></expr>:</case>

        <expr_stmt pos:start="185:9" pos:end="185:62"><expr pos:start="185:9" pos:end="185:61"><call pos:start="185:9" pos:end="185:61"><name pos:start="185:9" pos:end="185:22">decode_rowskip</name><argument_list pos:start="185:23" pos:end="185:61">(<argument pos:start="185:24" pos:end="185:27"><expr pos:start="185:24" pos:end="185:27"><name pos:start="185:24" pos:end="185:27">data</name></expr></argument>, <argument pos:start="185:30" pos:end="185:34"><expr pos:start="185:30" pos:end="185:34"><name pos:start="185:30" pos:end="185:34">width</name></expr></argument>, <argument pos:start="185:37" pos:end="185:42"><expr pos:start="185:37" pos:end="185:42"><name pos:start="185:37" pos:end="185:42">height</name></expr></argument>, <argument pos:start="185:45" pos:end="185:50"><expr pos:start="185:45" pos:end="185:50"><name pos:start="185:45" pos:end="185:50">stride</name></expr></argument>, <argument pos:start="185:53" pos:end="185:60"><expr pos:start="185:53" pos:end="185:60"><operator pos:start="185:53" pos:end="185:53">&amp;</operator><name pos:start="185:54" pos:end="185:60"><name pos:start="185:54" pos:end="185:54">v</name><operator pos:start="185:55" pos:end="185:56">-&gt;</operator><name pos:start="185:57" pos:end="185:57">s</name><operator pos:start="185:58" pos:end="185:58">.</operator><name pos:start="185:59" pos:end="185:60">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="187:9" pos:end="187:14">break;</break>

    <case pos:start="189:5" pos:end="189:23">case <expr pos:start="189:10" pos:end="189:22"><name pos:start="189:10" pos:end="189:22">IMODE_COLSKIP</name></expr>:</case>

        <expr_stmt pos:start="191:9" pos:end="191:62"><expr pos:start="191:9" pos:end="191:61"><call pos:start="191:9" pos:end="191:61"><name pos:start="191:9" pos:end="191:22">decode_colskip</name><argument_list pos:start="191:23" pos:end="191:61">(<argument pos:start="191:24" pos:end="191:27"><expr pos:start="191:24" pos:end="191:27"><name pos:start="191:24" pos:end="191:27">data</name></expr></argument>, <argument pos:start="191:30" pos:end="191:34"><expr pos:start="191:30" pos:end="191:34"><name pos:start="191:30" pos:end="191:34">width</name></expr></argument>, <argument pos:start="191:37" pos:end="191:42"><expr pos:start="191:37" pos:end="191:42"><name pos:start="191:37" pos:end="191:42">height</name></expr></argument>, <argument pos:start="191:45" pos:end="191:50"><expr pos:start="191:45" pos:end="191:50"><name pos:start="191:45" pos:end="191:50">stride</name></expr></argument>, <argument pos:start="191:53" pos:end="191:60"><expr pos:start="191:53" pos:end="191:60"><operator pos:start="191:53" pos:end="191:53">&amp;</operator><name pos:start="191:54" pos:end="191:60"><name pos:start="191:54" pos:end="191:54">v</name><operator pos:start="191:55" pos:end="191:56">-&gt;</operator><name pos:start="191:57" pos:end="191:57">s</name><operator pos:start="191:58" pos:end="191:58">.</operator><name pos:start="191:59" pos:end="191:60">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    <default pos:start="195:5" pos:end="195:12">default:</default>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="203:5" pos:end="203:32">/* Applying diff operator */</comment>

    <if_stmt pos:start="205:5" pos:end="239:5"><if pos:start="205:5" pos:end="231:5">if <condition pos:start="205:8" pos:end="205:53">(<expr pos:start="205:9" pos:end="205:52"><name pos:start="205:9" pos:end="205:13">imode</name> <operator pos:start="205:15" pos:end="205:16">==</operator> <name pos:start="205:18" pos:end="205:28">IMODE_DIFF2</name> <operator pos:start="205:30" pos:end="205:31">||</operator> <name pos:start="205:33" pos:end="205:37">imode</name> <operator pos:start="205:39" pos:end="205:40">==</operator> <name pos:start="205:42" pos:end="205:52">IMODE_DIFF6</name></expr>)</condition> <block pos:start="205:55" pos:end="231:5">{<block_content pos:start="207:9" pos:end="229:9">

        <expr_stmt pos:start="207:9" pos:end="207:22"><expr pos:start="207:9" pos:end="207:21"><name pos:start="207:9" pos:end="207:14">planep</name> <operator pos:start="207:16" pos:end="207:16">=</operator> <name pos:start="207:18" pos:end="207:21">data</name></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:28"><expr pos:start="209:9" pos:end="209:27"><name pos:start="209:9" pos:end="209:17"><name pos:start="209:9" pos:end="209:14">planep</name><index pos:start="209:15" pos:end="209:17">[<expr pos:start="209:16" pos:end="209:16"><literal type="number" pos:start="209:16" pos:end="209:16">0</literal></expr>]</index></name> <operator pos:start="209:19" pos:end="209:20">^=</operator> <name pos:start="209:22" pos:end="209:27">invert</name></expr>;</expr_stmt>

        <for pos:start="211:9" pos:end="213:37">for <control pos:start="211:13" pos:end="211:35">(<init pos:start="211:14" pos:end="211:19"><expr pos:start="211:14" pos:end="211:18"><name pos:start="211:14" pos:end="211:14">x</name> <operator pos:start="211:16" pos:end="211:16">=</operator> <literal type="number" pos:start="211:18" pos:end="211:18">1</literal></expr>;</init> <condition pos:start="211:21" pos:end="211:30"><expr pos:start="211:21" pos:end="211:29"><name pos:start="211:21" pos:end="211:21">x</name> <operator pos:start="211:23" pos:end="211:23">&lt;</operator> <name pos:start="211:25" pos:end="211:29">width</name></expr>;</condition> <incr pos:start="211:32" pos:end="211:34"><expr pos:start="211:32" pos:end="211:34"><name pos:start="211:32" pos:end="211:32">x</name><operator pos:start="211:33" pos:end="211:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="213:13" pos:end="213:37"><block_content pos:start="213:13" pos:end="213:37">

            <expr_stmt pos:start="213:13" pos:end="213:37"><expr pos:start="213:13" pos:end="213:36"><name pos:start="213:13" pos:end="213:21"><name pos:start="213:13" pos:end="213:18">planep</name><index pos:start="213:19" pos:end="213:21">[<expr pos:start="213:20" pos:end="213:20"><name pos:start="213:20" pos:end="213:20">x</name></expr>]</index></name> <operator pos:start="213:23" pos:end="213:24">^=</operator> <name pos:start="213:26" pos:end="213:36"><name pos:start="213:26" pos:end="213:31">planep</name><index pos:start="213:32" pos:end="213:36">[<expr pos:start="213:33" pos:end="213:35"><name pos:start="213:33" pos:end="213:33">x</name><operator pos:start="213:34" pos:end="213:34">-</operator><literal type="number" pos:start="213:35" pos:end="213:35">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="215:9" pos:end="229:9">for <control pos:start="215:13" pos:end="215:36">(<init pos:start="215:14" pos:end="215:19"><expr pos:start="215:14" pos:end="215:18"><name pos:start="215:14" pos:end="215:14">y</name> <operator pos:start="215:16" pos:end="215:16">=</operator> <literal type="number" pos:start="215:18" pos:end="215:18">1</literal></expr>;</init> <condition pos:start="215:21" pos:end="215:31"><expr pos:start="215:21" pos:end="215:30"><name pos:start="215:21" pos:end="215:21">y</name> <operator pos:start="215:23" pos:end="215:23">&lt;</operator> <name pos:start="215:25" pos:end="215:30">height</name></expr>;</condition> <incr pos:start="215:33" pos:end="215:35"><expr pos:start="215:33" pos:end="215:35"><name pos:start="215:33" pos:end="215:33">y</name><operator pos:start="215:34" pos:end="215:35">++</operator></expr></incr>)</control> <block pos:start="215:38" pos:end="229:9">{<block_content pos:start="217:13" pos:end="227:13">

            <expr_stmt pos:start="217:13" pos:end="217:29"><expr pos:start="217:13" pos:end="217:28"><name pos:start="217:13" pos:end="217:18">planep</name> <operator pos:start="217:20" pos:end="217:21">+=</operator> <name pos:start="217:23" pos:end="217:28">stride</name></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:41"><expr pos:start="219:13" pos:end="219:40"><name pos:start="219:13" pos:end="219:21"><name pos:start="219:13" pos:end="219:18">planep</name><index pos:start="219:19" pos:end="219:21">[<expr pos:start="219:20" pos:end="219:20"><literal type="number" pos:start="219:20" pos:end="219:20">0</literal></expr>]</index></name> <operator pos:start="219:23" pos:end="219:24">^=</operator> <name pos:start="219:26" pos:end="219:40"><name pos:start="219:26" pos:end="219:31">planep</name><index pos:start="219:32" pos:end="219:40">[<expr pos:start="219:33" pos:end="219:39"><operator pos:start="219:33" pos:end="219:33">-</operator><name pos:start="219:34" pos:end="219:39">stride</name></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="221:13" pos:end="227:13">for <control pos:start="221:17" pos:end="221:39">(<init pos:start="221:18" pos:end="221:23"><expr pos:start="221:18" pos:end="221:22"><name pos:start="221:18" pos:end="221:18">x</name> <operator pos:start="221:20" pos:end="221:20">=</operator> <literal type="number" pos:start="221:22" pos:end="221:22">1</literal></expr>;</init> <condition pos:start="221:25" pos:end="221:34"><expr pos:start="221:25" pos:end="221:33"><name pos:start="221:25" pos:end="221:25">x</name> <operator pos:start="221:27" pos:end="221:27">&lt;</operator> <name pos:start="221:29" pos:end="221:33">width</name></expr>;</condition> <incr pos:start="221:36" pos:end="221:38"><expr pos:start="221:36" pos:end="221:38"><name pos:start="221:36" pos:end="221:36">x</name><operator pos:start="221:37" pos:end="221:38">++</operator></expr></incr>)</control> <block pos:start="221:41" pos:end="227:13">{<block_content pos:start="223:17" pos:end="225:78">

                <if_stmt pos:start="223:17" pos:end="225:78"><if pos:start="223:17" pos:end="223:73">if <condition pos:start="223:20" pos:end="223:52">(<expr pos:start="223:21" pos:end="223:51"><name pos:start="223:21" pos:end="223:31"><name pos:start="223:21" pos:end="223:26">planep</name><index pos:start="223:27" pos:end="223:31">[<expr pos:start="223:28" pos:end="223:30"><name pos:start="223:28" pos:end="223:28">x</name><operator pos:start="223:29" pos:end="223:29">-</operator><literal type="number" pos:start="223:30" pos:end="223:30">1</literal></expr>]</index></name> <operator pos:start="223:33" pos:end="223:34">!=</operator> <name pos:start="223:36" pos:end="223:51"><name pos:start="223:36" pos:end="223:41">planep</name><index pos:start="223:42" pos:end="223:51">[<expr pos:start="223:43" pos:end="223:50"><name pos:start="223:43" pos:end="223:43">x</name><operator pos:start="223:44" pos:end="223:44">-</operator><name pos:start="223:45" pos:end="223:50">stride</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="223:54" pos:end="223:73"><block_content pos:start="223:54" pos:end="223:73"> <expr_stmt pos:start="223:54" pos:end="223:73"><expr pos:start="223:54" pos:end="223:72"><name pos:start="223:54" pos:end="223:62"><name pos:start="223:54" pos:end="223:59">planep</name><index pos:start="223:60" pos:end="223:62">[<expr pos:start="223:61" pos:end="223:61"><name pos:start="223:61" pos:end="223:61">x</name></expr>]</index></name> <operator pos:start="223:64" pos:end="223:65">^=</operator> <name pos:start="223:67" pos:end="223:72">invert</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="225:17" pos:end="225:78">else<block type="pseudo" pos:start="225:54" pos:end="225:78"><block_content pos:start="225:54" pos:end="225:78">                                 <expr_stmt pos:start="225:54" pos:end="225:78"><expr pos:start="225:54" pos:end="225:77"><name pos:start="225:54" pos:end="225:62"><name pos:start="225:54" pos:end="225:59">planep</name><index pos:start="225:60" pos:end="225:62">[<expr pos:start="225:61" pos:end="225:61"><name pos:start="225:61" pos:end="225:61">x</name></expr>]</index></name> <operator pos:start="225:64" pos:end="225:65">^=</operator> <name pos:start="225:67" pos:end="225:77"><name pos:start="225:67" pos:end="225:72">planep</name><index pos:start="225:73" pos:end="225:77">[<expr pos:start="225:74" pos:end="225:76"><name pos:start="225:74" pos:end="225:74">x</name><operator pos:start="225:75" pos:end="225:75">-</operator><literal type="number" pos:start="225:76" pos:end="225:76">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="231:7" pos:end="239:5">else if <condition pos:start="231:15" pos:end="231:22">(<expr pos:start="231:16" pos:end="231:21"><name pos:start="231:16" pos:end="231:21">invert</name></expr>)</condition> <block pos:start="231:24" pos:end="239:5">{<block_content pos:start="233:9" pos:end="237:35">

        <expr_stmt pos:start="233:9" pos:end="233:22"><expr pos:start="233:9" pos:end="233:21"><name pos:start="233:9" pos:end="233:14">planep</name> <operator pos:start="233:16" pos:end="233:16">=</operator> <name pos:start="233:18" pos:end="233:21">data</name></expr>;</expr_stmt>

        <for pos:start="235:9" pos:end="237:35">for <control pos:start="235:13" pos:end="235:45">(<init pos:start="235:14" pos:end="235:19"><expr pos:start="235:14" pos:end="235:18"><name pos:start="235:14" pos:end="235:14">x</name> <operator pos:start="235:16" pos:end="235:16">=</operator> <literal type="number" pos:start="235:18" pos:end="235:18">0</literal></expr>;</init> <condition pos:start="235:21" pos:end="235:40"><expr pos:start="235:21" pos:end="235:39"><name pos:start="235:21" pos:end="235:21">x</name> <operator pos:start="235:23" pos:end="235:23">&lt;</operator> <name pos:start="235:25" pos:end="235:30">stride</name> <operator pos:start="235:32" pos:end="235:32">*</operator> <name pos:start="235:34" pos:end="235:39">height</name></expr>;</condition> <incr pos:start="235:42" pos:end="235:44"><expr pos:start="235:42" pos:end="235:44"><name pos:start="235:42" pos:end="235:42">x</name><operator pos:start="235:43" pos:end="235:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="237:13" pos:end="237:35"><block_content pos:start="237:13" pos:end="237:35">

            <expr_stmt pos:start="237:13" pos:end="237:35"><expr pos:start="237:13" pos:end="237:34"><name pos:start="237:13" pos:end="237:21"><name pos:start="237:13" pos:end="237:18">planep</name><index pos:start="237:19" pos:end="237:21">[<expr pos:start="237:20" pos:end="237:20"><name pos:start="237:20" pos:end="237:20">x</name></expr>]</index></name> <operator pos:start="237:23" pos:end="237:23">=</operator> <operator pos:start="237:25" pos:end="237:25">!</operator><name pos:start="237:26" pos:end="237:34"><name pos:start="237:26" pos:end="237:31">planep</name><index pos:start="237:32" pos:end="237:34">[<expr pos:start="237:33" pos:end="237:33"><name pos:start="237:33" pos:end="237:33">x</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for> <comment type="line" pos:start="237:37" pos:end="237:50">//FIXME stride</comment>

    </block_content>}</block></if></if_stmt>

    <return pos:start="241:5" pos:end="241:33">return <expr pos:start="241:12" pos:end="241:32"><operator pos:start="241:12" pos:end="241:12">(</operator><name pos:start="241:13" pos:end="241:17">imode</name> <operator pos:start="241:19" pos:end="241:20">&lt;&lt;</operator> <literal type="number" pos:start="241:22" pos:end="241:22">1</literal><operator pos:start="241:23" pos:end="241:23">)</operator> <operator pos:start="241:25" pos:end="241:25">+</operator> <name pos:start="241:27" pos:end="241:32">invert</name></expr>;</return>

</block_content>}</block></function>
</unit>
