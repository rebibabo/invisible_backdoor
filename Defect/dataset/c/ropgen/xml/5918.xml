<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5918.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="1:91">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:62">int</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:73">data_size</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:90"><decl pos:start="1:76" pos:end="1:90"><type pos:start="1:76" pos:end="1:90"><name pos:start="1:76" pos:end="1:83">AVPacket</name> <modifier pos:start="1:85" pos:end="1:85">*</modifier></type><name pos:start="1:86" pos:end="1:90">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:20">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">buf_size</name> <init pos:start="7:18" pos:end="7:30">= <expr pos:start="7:20" pos:end="7:30"><name pos:start="7:20" pos:end="7:30"><name pos:start="7:20" pos:end="7:24">avpkt</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:16">VBDecContext</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier> <specifier pos:start="9:20" pos:end="9:24">const</specifier></type> <name pos:start="9:26" pos:end="9:26">c</name> <init pos:start="9:28" pos:end="9:45">= <expr pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">outptr</name></decl>, <decl pos:start="11:22" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:28">srcptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">rest</name> <init pos:start="19:14" pos:end="19:23">= <expr pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:23">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:14">offset</name> <init pos:start="21:16" pos:end="21:18">= <expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="27:46"><if pos:start="25:5" pos:end="27:46">if<condition pos:start="25:7" pos:end="25:22">(<expr pos:start="25:8" pos:end="25:21"><name pos:start="25:8" pos:end="25:21"><name pos:start="25:8" pos:end="25:8">c</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:13">pic</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:18">data</name><index pos:start="25:19" pos:end="25:21">[<expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:46"><block_content pos:start="27:9" pos:end="27:46">

        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><call pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:13">avctx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:29">release_buffer</name></name><argument_list pos:start="27:30" pos:end="27:45">(<argument pos:start="27:31" pos:end="27:35"><expr pos:start="27:31" pos:end="27:35"><name pos:start="27:31" pos:end="27:35">avctx</name></expr></argument>, <argument pos:start="27:38" pos:end="27:44"><expr pos:start="27:38" pos:end="27:44"><operator pos:start="27:38" pos:end="27:38">&amp;</operator><name pos:start="27:39" pos:end="27:44"><name pos:start="27:39" pos:end="27:39">c</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:44">pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:5">c</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:10">pic</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:20">reference</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <literal type="number" pos:start="29:24" pos:end="29:24">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if<condition pos:start="31:7" pos:end="31:45">(<expr pos:start="31:8" pos:end="31:44"><call pos:start="31:8" pos:end="31:40"><name pos:start="31:8" pos:end="31:24"><name pos:start="31:8" pos:end="31:12">avctx</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:24">get_buffer</name></name><argument_list pos:start="31:25" pos:end="31:40">(<argument pos:start="31:26" pos:end="31:30"><expr pos:start="31:26" pos:end="31:30"><name pos:start="31:26" pos:end="31:30">avctx</name></expr></argument>, <argument pos:start="31:33" pos:end="31:39"><expr pos:start="31:33" pos:end="31:39"><operator pos:start="31:33" pos:end="31:33">&amp;</operator><name pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:34">c</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:39">pic</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:42" pos:end="31:42">&lt;</operator> <literal type="number" pos:start="31:44" pos:end="31:44">0</literal></expr>)</condition><block pos:start="31:46" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:61"><expr pos:start="33:9" pos:end="33:60"><call pos:start="33:9" pos:end="33:60"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:60">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:59"><expr pos:start="33:37" pos:end="33:59"><literal type="string" pos:start="33:37" pos:end="33:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:5">c</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:13">stream</name></name> <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:19">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:44"><expr pos:start="43:5" pos:end="43:43"><name pos:start="43:5" pos:end="43:9">flags</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <call pos:start="43:13" pos:end="43:43"><name pos:start="43:13" pos:end="43:31">bytestream_get_le16</name><argument_list pos:start="43:32" pos:end="43:43">(<argument pos:start="43:33" pos:end="43:42"><expr pos:start="43:33" pos:end="43:42"><operator pos:start="43:33" pos:end="43:33">&amp;</operator><name pos:start="43:34" pos:end="43:42"><name pos:start="43:34" pos:end="43:34">c</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:42">stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:14"><expr pos:start="45:5" pos:end="45:13"><name pos:start="45:5" pos:end="45:8">rest</name> <operator pos:start="45:10" pos:end="45:11">-=</operator> <literal type="number" pos:start="45:13" pos:end="45:13">2</literal></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="59:5"><if pos:start="49:5" pos:end="59:5">if<condition pos:start="49:7" pos:end="49:26">(<expr pos:start="49:8" pos:end="49:25"><name pos:start="49:8" pos:end="49:12">flags</name> <operator pos:start="49:14" pos:end="49:14">&amp;</operator> <name pos:start="49:16" pos:end="49:25">VB_HAS_GMC</name></expr>)</condition><block pos:start="49:27" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:18">

        <expr_stmt pos:start="51:9" pos:end="51:53"><expr pos:start="51:9" pos:end="51:52"><name pos:start="51:9" pos:end="51:9">i</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:20">int16_t</name><operator pos:start="51:21" pos:end="51:21">)</operator><call pos:start="51:22" pos:end="51:52"><name pos:start="51:22" pos:end="51:40">bytestream_get_le16</name><argument_list pos:start="51:41" pos:end="51:52">(<argument pos:start="51:42" pos:end="51:51"><expr pos:start="51:42" pos:end="51:51"><operator pos:start="51:42" pos:end="51:42">&amp;</operator><name pos:start="51:43" pos:end="51:51"><name pos:start="51:43" pos:end="51:43">c</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:51">stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:53"><expr pos:start="53:9" pos:end="53:52"><name pos:start="53:9" pos:end="53:9">j</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <operator pos:start="53:13" pos:end="53:13">(</operator><name pos:start="53:14" pos:end="53:20">int16_t</name><operator pos:start="53:21" pos:end="53:21">)</operator><call pos:start="53:22" pos:end="53:52"><name pos:start="53:22" pos:end="53:40">bytestream_get_le16</name><argument_list pos:start="53:41" pos:end="53:52">(<argument pos:start="53:42" pos:end="53:51"><expr pos:start="53:42" pos:end="53:51"><operator pos:start="53:42" pos:end="53:42">&amp;</operator><name pos:start="53:43" pos:end="53:51"><name pos:start="53:43" pos:end="53:43">c</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:51">stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:38"><expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:14">offset</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:18">i</name> <operator pos:start="55:20" pos:end="55:20">+</operator> <name pos:start="55:22" pos:end="55:22">j</name> <operator pos:start="55:24" pos:end="55:24">*</operator> <name pos:start="55:26" pos:end="55:37"><name pos:start="55:26" pos:end="55:30">avctx</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:37">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:18"><expr pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:12">rest</name> <operator pos:start="57:14" pos:end="57:15">-=</operator> <literal type="number" pos:start="57:17" pos:end="57:17">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="79:5"><if pos:start="61:5" pos:end="79:5">if<condition pos:start="61:7" pos:end="61:28">(<expr pos:start="61:8" pos:end="61:27"><name pos:start="61:8" pos:end="61:12">flags</name> <operator pos:start="61:14" pos:end="61:14">&amp;</operator> <name pos:start="61:16" pos:end="61:27">VB_HAS_VIDEO</name></expr>)</condition><block pos:start="61:29" pos:end="79:5">{<block_content pos:start="63:9" pos:end="77:21">

        <expr_stmt pos:start="63:9" pos:end="63:47"><expr pos:start="63:9" pos:end="63:46"><name pos:start="63:9" pos:end="63:12">size</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <call pos:start="63:16" pos:end="63:46"><name pos:start="63:16" pos:end="63:34">bytestream_get_le32</name><argument_list pos:start="63:35" pos:end="63:46">(<argument pos:start="63:36" pos:end="63:45"><expr pos:start="63:36" pos:end="63:45"><operator pos:start="63:36" pos:end="63:36">&amp;</operator><name pos:start="63:37" pos:end="63:45"><name pos:start="63:37" pos:end="63:37">c</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:45">stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if<condition pos:start="65:11" pos:end="65:23">(<expr pos:start="65:12" pos:end="65:22"><name pos:start="65:12" pos:end="65:15">size</name> <operator pos:start="65:17" pos:end="65:17">&gt;</operator> <name pos:start="65:19" pos:end="65:22">rest</name></expr>)</condition><block pos:start="65:24" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:22">

            <expr_stmt pos:start="67:13" pos:end="67:67"><expr pos:start="67:13" pos:end="67:66"><call pos:start="67:13" pos:end="67:66"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="67:66">(<argument pos:start="67:20" pos:end="67:24"><expr pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:24">avctx</name></expr></argument>, <argument pos:start="67:27" pos:end="67:38"><expr pos:start="67:27" pos:end="67:38"><name pos:start="67:27" pos:end="67:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:41" pos:end="67:65"><expr pos:start="67:41" pos:end="67:65"><literal type="string" pos:start="67:41" pos:end="67:65">"Frame size is too big\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:22">return <expr pos:start="69:20" pos:end="69:21"><operator pos:start="69:20" pos:end="69:20">-</operator><literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:56"><expr pos:start="73:9" pos:end="73:55"><call pos:start="73:9" pos:end="73:55"><name pos:start="73:9" pos:end="73:27">vb_decode_framedata</name><argument_list pos:start="73:28" pos:end="73:55">(<argument pos:start="73:29" pos:end="73:29"><expr pos:start="73:29" pos:end="73:29"><name pos:start="73:29" pos:end="73:29">c</name></expr></argument>, <argument pos:start="73:32" pos:end="73:40"><expr pos:start="73:32" pos:end="73:40"><name pos:start="73:32" pos:end="73:40"><name pos:start="73:32" pos:end="73:32">c</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:40">stream</name></name></expr></argument>, <argument pos:start="73:43" pos:end="73:46"><expr pos:start="73:43" pos:end="73:46"><name pos:start="73:43" pos:end="73:46">size</name></expr></argument>, <argument pos:start="73:49" pos:end="73:54"><expr pos:start="73:49" pos:end="73:54"><name pos:start="73:49" pos:end="73:54">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:17"><name pos:start="75:9" pos:end="75:9">c</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:17">stream</name></name> <operator pos:start="75:19" pos:end="75:20">+=</operator> <name pos:start="75:22" pos:end="75:25">size</name> <operator pos:start="75:27" pos:end="75:27">-</operator> <literal type="number" pos:start="75:29" pos:end="75:29">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:21"><expr pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:12">rest</name> <operator pos:start="77:14" pos:end="77:15">-=</operator> <name pos:start="77:17" pos:end="77:20">size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="97:5"><if pos:start="81:5" pos:end="97:5">if<condition pos:start="81:7" pos:end="81:30">(<expr pos:start="81:8" pos:end="81:29"><name pos:start="81:8" pos:end="81:12">flags</name> <operator pos:start="81:14" pos:end="81:14">&amp;</operator> <name pos:start="81:16" pos:end="81:29">VB_HAS_PALETTE</name></expr>)</condition><block pos:start="81:31" pos:end="97:5">{<block_content pos:start="83:9" pos:end="95:21">

        <expr_stmt pos:start="83:9" pos:end="83:47"><expr pos:start="83:9" pos:end="83:46"><name pos:start="83:9" pos:end="83:12">size</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:46"><name pos:start="83:16" pos:end="83:34">bytestream_get_le32</name><argument_list pos:start="83:35" pos:end="83:46">(<argument pos:start="83:36" pos:end="83:45"><expr pos:start="83:36" pos:end="83:45"><operator pos:start="83:36" pos:end="83:36">&amp;</operator><name pos:start="83:37" pos:end="83:45"><name pos:start="83:37" pos:end="83:37">c</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:45">stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="91:9"><if pos:start="85:9" pos:end="91:9">if<condition pos:start="85:11" pos:end="85:23">(<expr pos:start="85:12" pos:end="85:22"><name pos:start="85:12" pos:end="85:15">size</name> <operator pos:start="85:17" pos:end="85:17">&gt;</operator> <name pos:start="85:19" pos:end="85:22">rest</name></expr>)</condition><block pos:start="85:24" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:22">

            <expr_stmt pos:start="87:13" pos:end="87:69"><expr pos:start="87:13" pos:end="87:68"><call pos:start="87:13" pos:end="87:68"><name pos:start="87:13" pos:end="87:18">av_log</name><argument_list pos:start="87:19" pos:end="87:68">(<argument pos:start="87:20" pos:end="87:24"><expr pos:start="87:20" pos:end="87:24"><name pos:start="87:20" pos:end="87:24">avctx</name></expr></argument>, <argument pos:start="87:27" pos:end="87:38"><expr pos:start="87:27" pos:end="87:38"><name pos:start="87:27" pos:end="87:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:41" pos:end="87:67"><expr pos:start="87:41" pos:end="87:67"><literal type="string" pos:start="87:41" pos:end="87:67">"Palette size is too big\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:22">return <expr pos:start="89:20" pos:end="89:21"><operator pos:start="89:20" pos:end="89:20">-</operator><literal type="number" pos:start="89:21" pos:end="89:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:35"><expr pos:start="93:9" pos:end="93:34"><call pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:25">vb_decode_palette</name><argument_list pos:start="93:26" pos:end="93:34">(<argument pos:start="93:27" pos:end="93:27"><expr pos:start="93:27" pos:end="93:27"><name pos:start="93:27" pos:end="93:27">c</name></expr></argument>, <argument pos:start="93:30" pos:end="93:33"><expr pos:start="93:30" pos:end="93:33"><name pos:start="93:30" pos:end="93:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:21"><expr pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:12">rest</name> <operator pos:start="95:14" pos:end="95:15">-=</operator> <name pos:start="95:17" pos:end="95:20">size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:51"><expr pos:start="101:5" pos:end="101:50"><call pos:start="101:5" pos:end="101:50"><name pos:start="101:5" pos:end="101:10">memcpy</name><argument_list pos:start="101:11" pos:end="101:50">(<argument pos:start="101:12" pos:end="101:25"><expr pos:start="101:12" pos:end="101:25"><name pos:start="101:12" pos:end="101:25"><name pos:start="101:12" pos:end="101:12">c</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:17">pic</name><operator pos:start="101:18" pos:end="101:18">.</operator><name pos:start="101:19" pos:end="101:22">data</name><index pos:start="101:23" pos:end="101:25">[<expr pos:start="101:24" pos:end="101:24"><literal type="number" pos:start="101:24" pos:end="101:24">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="101:28" pos:end="101:33"><expr pos:start="101:28" pos:end="101:33"><name pos:start="101:28" pos:end="101:33"><name pos:start="101:28" pos:end="101:28">c</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:33">pal</name></name></expr></argument>, <argument pos:start="101:36" pos:end="101:49"><expr pos:start="101:36" pos:end="101:49"><name pos:start="101:36" pos:end="101:49">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:56"><expr pos:start="103:5" pos:end="103:55"><name pos:start="103:5" pos:end="103:30"><name pos:start="103:5" pos:end="103:5">c</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:10">pic</name><operator pos:start="103:11" pos:end="103:11">.</operator><name pos:start="103:12" pos:end="103:30">palette_has_changed</name></name> <operator pos:start="103:32" pos:end="103:32">=</operator> <name pos:start="103:34" pos:end="103:38">flags</name> <operator pos:start="103:40" pos:end="103:40">&amp;</operator> <name pos:start="103:42" pos:end="103:55">VB_HAS_PALETTE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:28"><expr pos:start="107:5" pos:end="107:27"><name pos:start="107:5" pos:end="107:10">outptr</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <name pos:start="107:14" pos:end="107:27"><name pos:start="107:14" pos:end="107:14">c</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:19">pic</name><operator pos:start="107:20" pos:end="107:20">.</operator><name pos:start="107:21" pos:end="107:24">data</name><index pos:start="107:25" pos:end="107:27">[<expr pos:start="107:26" pos:end="107:26"><literal type="number" pos:start="107:26" pos:end="107:26">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:22"><expr pos:start="109:5" pos:end="109:21"><name pos:start="109:5" pos:end="109:10">srcptr</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <name pos:start="109:14" pos:end="109:21"><name pos:start="109:14" pos:end="109:14">c</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:21">frame</name></name></expr>;</expr_stmt>



    <for pos:start="113:5" pos:end="121:5">for<control pos:start="113:8" pos:end="113:38">(<init pos:start="113:9" pos:end="113:14"><expr pos:start="113:9" pos:end="113:13"><name pos:start="113:9" pos:end="113:9">i</name> <operator pos:start="113:11" pos:end="113:11">=</operator> <literal type="number" pos:start="113:13" pos:end="113:13">0</literal></expr>;</init> <condition pos:start="113:16" pos:end="113:33"><expr pos:start="113:16" pos:end="113:32"><name pos:start="113:16" pos:end="113:16">i</name> <operator pos:start="113:18" pos:end="113:18">&lt;</operator> <name pos:start="113:20" pos:end="113:32"><name pos:start="113:20" pos:end="113:24">avctx</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:32">height</name></name></expr>;</condition> <incr pos:start="113:35" pos:end="113:37"><expr pos:start="113:35" pos:end="113:37"><name pos:start="113:35" pos:end="113:35">i</name><operator pos:start="113:36" pos:end="113:37">++</operator></expr></incr>)</control><block pos:start="113:39" pos:end="121:5">{<block_content pos:start="115:9" pos:end="119:37">

        <expr_stmt pos:start="115:9" pos:end="115:45"><expr pos:start="115:9" pos:end="115:44"><call pos:start="115:9" pos:end="115:44"><name pos:start="115:9" pos:end="115:14">memcpy</name><argument_list pos:start="115:15" pos:end="115:44">(<argument pos:start="115:16" pos:end="115:21"><expr pos:start="115:16" pos:end="115:21"><name pos:start="115:16" pos:end="115:21">outptr</name></expr></argument>, <argument pos:start="115:24" pos:end="115:29"><expr pos:start="115:24" pos:end="115:29"><name pos:start="115:24" pos:end="115:29">srcptr</name></expr></argument>, <argument pos:start="115:32" pos:end="115:43"><expr pos:start="115:32" pos:end="115:43"><name pos:start="115:32" pos:end="115:43"><name pos:start="115:32" pos:end="115:36">avctx</name><operator pos:start="115:37" pos:end="115:38">-&gt;</operator><name pos:start="115:39" pos:end="115:43">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:31"><expr pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:14">srcptr</name> <operator pos:start="117:16" pos:end="117:17">+=</operator> <name pos:start="117:19" pos:end="117:30"><name pos:start="117:19" pos:end="117:23">avctx</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:30">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:37"><expr pos:start="119:9" pos:end="119:36"><name pos:start="119:9" pos:end="119:14">outptr</name> <operator pos:start="119:16" pos:end="119:17">+=</operator> <name pos:start="119:19" pos:end="119:36"><name pos:start="119:19" pos:end="119:19">c</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:24">pic</name><operator pos:start="119:25" pos:end="119:25">.</operator><name pos:start="119:26" pos:end="119:33">linesize</name><index pos:start="119:34" pos:end="119:36">[<expr pos:start="119:35" pos:end="119:35"><literal type="number" pos:start="119:35" pos:end="119:35">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="125:5" pos:end="125:46"><expr pos:start="125:5" pos:end="125:45"><call pos:start="125:5" pos:end="125:45"><name pos:start="125:5" pos:end="125:10">FFSWAP</name><argument_list pos:start="125:11" pos:end="125:45">(<argument pos:start="125:12" pos:end="125:19"><expr pos:start="125:12" pos:end="125:19"><name pos:start="125:12" pos:end="125:18">uint8_t</name><operator pos:start="125:19" pos:end="125:19">*</operator></expr></argument>, <argument pos:start="125:22" pos:end="125:29"><expr pos:start="125:22" pos:end="125:29"><name pos:start="125:22" pos:end="125:29"><name pos:start="125:22" pos:end="125:22">c</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:29">frame</name></name></expr></argument>, <argument pos:start="125:32" pos:end="125:44"><expr pos:start="125:32" pos:end="125:44"><name pos:start="125:32" pos:end="125:44"><name pos:start="125:32" pos:end="125:32">c</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:44">prev_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:33"><expr pos:start="129:5" pos:end="129:32"><operator pos:start="129:5" pos:end="129:5">*</operator><name pos:start="129:6" pos:end="129:14">data_size</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <sizeof pos:start="129:18" pos:end="129:32">sizeof<argument_list pos:start="129:24" pos:end="129:32">(<argument pos:start="129:25" pos:end="129:31"><expr pos:start="129:25" pos:end="129:31"><name pos:start="129:25" pos:end="129:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:29"><expr pos:start="131:5" pos:end="131:28"><operator pos:start="131:5" pos:end="131:5">*</operator><operator pos:start="131:6" pos:end="131:6">(</operator><name pos:start="131:7" pos:end="131:13">AVFrame</name><operator pos:start="131:14" pos:end="131:14">*</operator><operator pos:start="131:15" pos:end="131:15">)</operator><name pos:start="131:16" pos:end="131:19">data</name> <operator pos:start="131:21" pos:end="131:21">=</operator> <name pos:start="131:23" pos:end="131:28"><name pos:start="131:23" pos:end="131:23">c</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:28">pic</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="135:5" pos:end="135:63">/* always report that the buffer was completely consumed */</comment>

    <return pos:start="137:5" pos:end="137:20">return <expr pos:start="137:12" pos:end="137:19"><name pos:start="137:12" pos:end="137:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
