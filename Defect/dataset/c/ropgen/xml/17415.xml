<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17415.c" pos:tabs="8"><function pos:start="1:1" pos:end="104:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">pxa2xx_gpio_write</name><parameter_list pos:start="1:30" pos:end="3:58">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:41"><decl pos:start="3:17" pos:end="3:41"><type pos:start="3:17" pos:end="3:41"><name pos:start="3:17" pos:end="3:34">target_phys_addr_t</name></type> <name pos:start="3:36" pos:end="3:41">offset</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:51">uint32_t</name></type> <name pos:start="3:53" pos:end="3:57">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="104:1">{<block_content pos:start="7:5" pos:end="102:5">

    <decl_stmt pos:start="7:5" pos:end="7:72"><decl pos:start="7:5" pos:end="7:71"><type pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:29">pxa2xx_gpio_info_s</name></name> <modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:32">s</name> <init pos:start="7:34" pos:end="7:71">= <expr pos:start="7:36" pos:end="7:71"><operator pos:start="7:36" pos:end="7:36">(</operator>struct <name pos:start="7:44" pos:end="7:61">pxa2xx_gpio_info_s</name> <operator pos:start="7:63" pos:end="7:63">*</operator><operator pos:start="7:64" pos:end="7:64">)</operator> <name pos:start="7:66" pos:end="7:71">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">bank</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:10">offset</name> <operator pos:start="11:12" pos:end="11:13">-=</operator> <name pos:start="11:15" pos:end="11:21"><name pos:start="11:15" pos:end="11:15">s</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:21">base</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:15"><if pos:start="13:5" pos:end="15:15">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:14">offset</name> <operator pos:start="13:16" pos:end="13:17">&gt;=</operator> <literal type="number" pos:start="13:19" pos:end="13:23">0x200</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:8">bank</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:35"><name pos:start="19:12" pos:end="19:27">pxa2xx_gpio_regs</name><index pos:start="19:28" pos:end="19:35">[<expr pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:34">offset</name></expr>]</index></name><operator pos:start="19:36" pos:end="19:36">.</operator><name pos:start="19:37" pos:end="19:40">bank</name></expr>;</expr_stmt>

    <switch pos:start="21:5" pos:end="102:5">switch <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:36"><name pos:start="21:13" pos:end="21:28">pxa2xx_gpio_regs</name><index pos:start="21:29" pos:end="21:36">[<expr pos:start="21:30" pos:end="21:35"><name pos:start="21:30" pos:end="21:35">offset</name></expr>]</index></name><operator pos:start="21:37" pos:end="21:37">.</operator><name pos:start="21:38" pos:end="21:40">reg</name></expr>)</condition> <block pos:start="21:43" pos:end="102:5">{<block_content pos:start="23:5" pos:end="100:70">

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><name pos:start="23:10" pos:end="23:13">GPDR</name></expr>:</case>		<comment type="block" pos:start="23:25" pos:end="23:58">/* GPIO Pin-Direction registers */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:14">dir</name><index pos:start="25:15" pos:end="25:20">[<expr pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:19">bank</name></expr>]</index></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:28">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><call pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:34">pxa2xx_gpio_handler_update</name><argument_list pos:start="27:35" pos:end="27:37">(<argument pos:start="27:36" pos:end="27:36"><expr pos:start="27:36" pos:end="27:36"><name pos:start="27:36" pos:end="27:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>



    <case pos:start="33:5" pos:end="33:14">case <expr pos:start="33:10" pos:end="33:13"><name pos:start="33:10" pos:end="33:13">GPSR</name></expr>:</case>		<comment type="block" pos:start="33:25" pos:end="33:59">/* GPIO Pin-Output Set registers */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:17">olevel</name><index pos:start="35:18" pos:end="35:23">[<expr pos:start="35:19" pos:end="35:22"><name pos:start="35:19" pos:end="35:22">bank</name></expr>]</index></name> <operator pos:start="35:25" pos:end="35:26">|=</operator> <name pos:start="35:28" pos:end="35:32">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><call pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:34">pxa2xx_gpio_handler_update</name><argument_list pos:start="37:35" pos:end="37:37">(<argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><name pos:start="37:36" pos:end="37:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <break pos:start="40:9" pos:end="40:14">break;</break>



    <case pos:start="44:5" pos:end="44:14">case <expr pos:start="44:10" pos:end="44:13"><name pos:start="44:10" pos:end="44:13">GPCR</name></expr>:</case>		<comment type="block" pos:start="44:25" pos:end="44:61">/* GPIO Pin-Output Clear registers */</comment>

        <expr_stmt pos:start="46:9" pos:end="46:34"><expr pos:start="46:9" pos:end="46:33"><name pos:start="46:9" pos:end="46:23"><name pos:start="46:9" pos:end="46:9">s</name><operator pos:start="46:10" pos:end="46:11">-&gt;</operator><name pos:start="46:12" pos:end="46:17">olevel</name><index pos:start="46:18" pos:end="46:23">[<expr pos:start="46:19" pos:end="46:22"><name pos:start="46:19" pos:end="46:22">bank</name></expr>]</index></name> <operator pos:start="46:25" pos:end="46:26">&amp;=</operator> <operator pos:start="46:28" pos:end="46:28">~</operator><name pos:start="46:29" pos:end="46:33">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="48:9" pos:end="48:38"><expr pos:start="48:9" pos:end="48:37"><call pos:start="48:9" pos:end="48:37"><name pos:start="48:9" pos:end="48:34">pxa2xx_gpio_handler_update</name><argument_list pos:start="48:35" pos:end="48:37">(<argument pos:start="48:36" pos:end="48:36"><expr pos:start="48:36" pos:end="48:36"><name pos:start="48:36" pos:end="48:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="50:9" pos:end="50:14">break;</break>



    <case pos:start="54:5" pos:end="54:14">case <expr pos:start="54:10" pos:end="54:13"><name pos:start="54:10" pos:end="54:13">GRER</name></expr>:</case>		<comment type="block" pos:start="54:25" pos:end="54:70">/* GPIO Rising-Edge Detect Enable registers */</comment>

        <expr_stmt pos:start="56:9" pos:end="56:32"><expr pos:start="56:9" pos:end="56:31"><name pos:start="56:9" pos:end="56:23"><name pos:start="56:9" pos:end="56:9">s</name><operator pos:start="56:10" pos:end="56:11">-&gt;</operator><name pos:start="56:12" pos:end="56:17">rising</name><index pos:start="56:18" pos:end="56:23">[<expr pos:start="56:19" pos:end="56:22"><name pos:start="56:19" pos:end="56:22">bank</name></expr>]</index></name> <operator pos:start="56:25" pos:end="56:25">=</operator> <name pos:start="56:27" pos:end="56:31">value</name></expr>;</expr_stmt>

        <break pos:start="58:9" pos:end="58:14">break;</break>



    <case pos:start="62:5" pos:end="62:14">case <expr pos:start="62:10" pos:end="62:13"><name pos:start="62:10" pos:end="62:13">GFER</name></expr>:</case>		<comment type="block" pos:start="62:25" pos:end="62:71">/* GPIO Falling-Edge Detect Enable registers */</comment>

        <expr_stmt pos:start="64:9" pos:end="64:33"><expr pos:start="64:9" pos:end="64:32"><name pos:start="64:9" pos:end="64:24"><name pos:start="64:9" pos:end="64:9">s</name><operator pos:start="64:10" pos:end="64:11">-&gt;</operator><name pos:start="64:12" pos:end="64:18">falling</name><index pos:start="64:19" pos:end="64:24">[<expr pos:start="64:20" pos:end="64:23"><name pos:start="64:20" pos:end="64:23">bank</name></expr>]</index></name> <operator pos:start="64:26" pos:end="64:26">=</operator> <name pos:start="64:28" pos:end="64:32">value</name></expr>;</expr_stmt>

        <break pos:start="66:9" pos:end="66:14">break;</break>



    <case pos:start="70:5" pos:end="70:16">case <expr pos:start="70:10" pos:end="70:15"><name pos:start="70:10" pos:end="70:15">GAFR_L</name></expr>:</case>	<comment type="block" pos:start="70:25" pos:end="70:63">/* GPIO Alternate Function registers */</comment>

        <expr_stmt pos:start="72:9" pos:end="72:34"><expr pos:start="72:9" pos:end="72:33"><name pos:start="72:9" pos:end="72:25"><name pos:start="72:9" pos:end="72:9">s</name><operator pos:start="72:10" pos:end="72:11">-&gt;</operator><name pos:start="72:12" pos:end="72:15">gafr</name><index pos:start="72:16" pos:end="72:25">[<expr pos:start="72:17" pos:end="72:24"><name pos:start="72:17" pos:end="72:20">bank</name> <operator pos:start="72:22" pos:end="72:22">*</operator> <literal type="number" pos:start="72:24" pos:end="72:24">2</literal></expr>]</index></name> <operator pos:start="72:27" pos:end="72:27">=</operator> <name pos:start="72:29" pos:end="72:33">value</name></expr>;</expr_stmt>

        <break pos:start="74:9" pos:end="74:14">break;</break>



    <case pos:start="78:5" pos:end="78:16">case <expr pos:start="78:10" pos:end="78:15"><name pos:start="78:10" pos:end="78:15">GAFR_U</name></expr>:</case>	<comment type="block" pos:start="78:25" pos:end="78:63">/* GPIO Alternate Function registers */</comment>

        <expr_stmt pos:start="80:9" pos:end="80:38"><expr pos:start="80:9" pos:end="80:37"><name pos:start="80:9" pos:end="80:29"><name pos:start="80:9" pos:end="80:9">s</name><operator pos:start="80:10" pos:end="80:11">-&gt;</operator><name pos:start="80:12" pos:end="80:15">gafr</name><index pos:start="80:16" pos:end="80:29">[<expr pos:start="80:17" pos:end="80:28"><name pos:start="80:17" pos:end="80:20">bank</name> <operator pos:start="80:22" pos:end="80:22">*</operator> <literal type="number" pos:start="80:24" pos:end="80:24">2</literal> <operator pos:start="80:26" pos:end="80:26">+</operator> <literal type="number" pos:start="80:28" pos:end="80:28">1</literal></expr>]</index></name> <operator pos:start="80:31" pos:end="80:31">=</operator> <name pos:start="80:33" pos:end="80:37">value</name></expr>;</expr_stmt>

        <break pos:start="82:9" pos:end="82:14">break;</break>



    <case pos:start="86:5" pos:end="86:14">case <expr pos:start="86:10" pos:end="86:13"><name pos:start="86:10" pos:end="86:13">GEDR</name></expr>:</case>		<comment type="block" pos:start="86:25" pos:end="86:63">/* GPIO Edge Detect Status registers */</comment>

        <expr_stmt pos:start="88:9" pos:end="88:34"><expr pos:start="88:9" pos:end="88:33"><name pos:start="88:9" pos:end="88:23"><name pos:start="88:9" pos:end="88:9">s</name><operator pos:start="88:10" pos:end="88:11">-&gt;</operator><name pos:start="88:12" pos:end="88:17">status</name><index pos:start="88:18" pos:end="88:23">[<expr pos:start="88:19" pos:end="88:22"><name pos:start="88:19" pos:end="88:22">bank</name></expr>]</index></name> <operator pos:start="88:25" pos:end="88:26">&amp;=</operator> <operator pos:start="88:28" pos:end="88:28">~</operator><name pos:start="88:29" pos:end="88:33">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="90:9" pos:end="90:34"><expr pos:start="90:9" pos:end="90:33"><call pos:start="90:9" pos:end="90:33"><name pos:start="90:9" pos:end="90:30">pxa2xx_gpio_irq_update</name><argument_list pos:start="90:31" pos:end="90:33">(<argument pos:start="90:32" pos:end="90:32"><expr pos:start="90:32" pos:end="90:32"><name pos:start="90:32" pos:end="90:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="92:9" pos:end="92:14">break;</break>



    <default pos:start="96:5" pos:end="96:12">default:</default>

        <expr_stmt pos:start="98:9" pos:end="100:70"><expr pos:start="98:9" pos:end="100:69"><call pos:start="98:9" pos:end="100:69"><name pos:start="98:9" pos:end="98:17">cpu_abort</name><argument_list pos:start="98:18" pos:end="100:69">(<argument pos:start="98:19" pos:end="98:32"><expr pos:start="98:19" pos:end="98:32"><name pos:start="98:19" pos:end="98:32">cpu_single_env</name></expr></argument>,

                <argument pos:start="100:17" pos:end="100:46"><expr pos:start="100:17" pos:end="100:46"><literal type="string" pos:start="100:17" pos:end="100:33">"%s: Bad offset "</literal> <name pos:start="100:35" pos:end="100:41">REG_FMT</name> <literal type="string" pos:start="100:43" pos:end="100:46">"\n"</literal></expr></argument>, <argument pos:start="100:49" pos:end="100:60"><expr pos:start="100:49" pos:end="100:60"><name pos:start="100:49" pos:end="100:60">__FUNCTION__</name></expr></argument>, <argument pos:start="100:63" pos:end="100:68"><expr pos:start="100:63" pos:end="100:68"><name pos:start="100:63" pos:end="100:68">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function></unit>
