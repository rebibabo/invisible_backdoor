<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19036.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:61"><name pos:start="1:1" pos:end="1:18">ff_rm_parse_packet</name> <argument_list pos:start="1:20" pos:end="5:61">(<argument pos:start="1:21" pos:end="1:38">AVFormatContext *s</argument>, <argument pos:start="1:41" pos:end="1:57">ByteIOContext *pb</argument>,

                    <argument pos:start="3:21" pos:end="3:32">AVStream *st</argument>, <argument pos:start="3:35" pos:end="3:47">RMStream *ast</argument>, <argument pos:start="3:50" pos:end="3:56">int len</argument>, <argument pos:start="3:59" pos:end="3:71">AVPacket *pkt</argument>,

                    <argument pos:start="5:21" pos:end="5:28">int *seq</argument>, <argument pos:start="5:31" pos:end="5:40">int *flags</argument>, <argument pos:start="5:43" pos:end="5:60">int64_t *timestamp</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="193:1">{<block_content pos:start="9:5" pos:end="191:77">

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">RMDemuxContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:22">rm</name> <init pos:start="9:24" pos:end="9:37">= <expr pos:start="9:26" pos:end="9:37"><name pos:start="9:26" pos:end="9:37"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:37">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="137:36"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:50">(<expr pos:start="13:9" pos:end="13:49"><name pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:10">st</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:17">codec</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:29">codec_type</name></name> <operator pos:start="13:31" pos:end="13:32">==</operator> <name pos:start="13:34" pos:end="13:49">CODEC_TYPE_VIDEO</name></expr>)</condition> <block pos:start="13:52" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:22">

        <expr_stmt pos:start="15:9" pos:end="15:35"><expr pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:10">rm</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:26">current_stream</name></name><operator pos:start="15:27" pos:end="15:27">=</operator> <name pos:start="15:29" pos:end="15:34"><name pos:start="15:29" pos:end="15:30">st</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:34">id</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:22"><if pos:start="17:9" pos:end="19:22">if<condition pos:start="17:11" pos:end="17:61">(<expr pos:start="17:12" pos:end="17:60"><call pos:start="17:12" pos:end="17:60"><name pos:start="17:12" pos:end="17:34">rm_assemble_video_frame</name><argument_list pos:start="17:35" pos:end="17:60">(<argument pos:start="17:36" pos:end="17:36"><expr pos:start="17:36" pos:end="17:36"><name pos:start="17:36" pos:end="17:36">s</name></expr></argument>, <argument pos:start="17:39" pos:end="17:40"><expr pos:start="17:39" pos:end="17:40"><name pos:start="17:39" pos:end="17:40">pb</name></expr></argument>, <argument pos:start="17:43" pos:end="17:44"><expr pos:start="17:43" pos:end="17:44"><name pos:start="17:43" pos:end="17:44">rm</name></expr></argument>, <argument pos:start="17:47" pos:end="17:49"><expr pos:start="17:47" pos:end="17:49"><name pos:start="17:47" pos:end="17:49">ast</name></expr></argument>, <argument pos:start="17:52" pos:end="17:54"><expr pos:start="17:52" pos:end="17:54"><name pos:start="17:52" pos:end="17:54">pkt</name></expr></argument>, <argument pos:start="17:57" pos:end="17:59"><expr pos:start="17:57" pos:end="17:59"><name pos:start="17:57" pos:end="17:59">len</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:22"><block_content pos:start="19:13" pos:end="19:22">

            <return pos:start="19:13" pos:end="19:22">return <expr pos:start="19:20" pos:end="19:21"><operator pos:start="19:20" pos:end="19:20">-</operator><literal type="number" pos:start="19:21" pos:end="19:21">1</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="19:24" pos:end="19:42">//got partial frame</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="21:7" pos:end="135:5">else if <condition pos:start="21:15" pos:end="21:57">(<expr pos:start="21:16" pos:end="21:56"><name pos:start="21:16" pos:end="21:36"><name pos:start="21:16" pos:end="21:17">st</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:24">codec</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:36">codec_type</name></name> <operator pos:start="21:38" pos:end="21:39">==</operator> <name pos:start="21:41" pos:end="21:56">CODEC_TYPE_AUDIO</name></expr>)</condition> <block pos:start="21:59" pos:end="135:5">{<block_content pos:start="23:9" pos:end="133:9">

        <if_stmt pos:start="23:9" pos:end="133:9"><if pos:start="23:9" pos:end="103:9">if <condition pos:start="23:12" pos:end="29:51">(<expr pos:start="23:13" pos:end="29:50"><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:32"><name pos:start="23:14" pos:end="23:15">st</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:22">codec</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:32">codec_id</name></name> <operator pos:start="23:34" pos:end="23:35">==</operator> <name pos:start="23:37" pos:end="23:51">CODEC_ID_RA_288</name><operator pos:start="23:52" pos:end="23:52">)</operator> <operator pos:start="23:54" pos:end="23:55">||</operator>

            <operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:32"><name pos:start="25:14" pos:end="25:15">st</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:22">codec</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:32">codec_id</name></name> <operator pos:start="25:34" pos:end="25:35">==</operator> <name pos:start="25:37" pos:end="25:49">CODEC_ID_COOK</name><operator pos:start="25:50" pos:end="25:50">)</operator> <operator pos:start="25:52" pos:end="25:53">||</operator>

            <operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:32"><name pos:start="27:14" pos:end="27:15">st</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:22">codec</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:32">codec_id</name></name> <operator pos:start="27:34" pos:end="27:35">==</operator> <name pos:start="27:37" pos:end="27:51">CODEC_ID_ATRAC3</name><operator pos:start="27:52" pos:end="27:52">)</operator> <operator pos:start="27:54" pos:end="27:55">||</operator>

            <operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:32"><name pos:start="29:14" pos:end="29:15">st</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:22">codec</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:32">codec_id</name></name> <operator pos:start="29:34" pos:end="29:35">==</operator> <name pos:start="29:37" pos:end="29:49">CODEC_ID_SIPR</name><operator pos:start="29:50" pos:end="29:50">)</operator></expr>)</condition> <block pos:start="29:53" pos:end="103:9">{<block_content pos:start="31:13" pos:end="101:13">

            <decl_stmt pos:start="31:13" pos:end="31:18"><decl pos:start="31:13" pos:end="31:17"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:17">x</name></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:43"><decl pos:start="33:13" pos:end="33:42"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:19">sps</name> <init pos:start="33:21" pos:end="33:42">= <expr pos:start="33:23" pos:end="33:42"><name pos:start="33:23" pos:end="33:42"><name pos:start="33:23" pos:end="33:25">ast</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:42">sub_packet_size</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:43"><decl pos:start="35:13" pos:end="35:42"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:19">cfs</name> <init pos:start="35:21" pos:end="35:42">= <expr pos:start="35:23" pos:end="35:42"><name pos:start="35:23" pos:end="35:42"><name pos:start="35:23" pos:end="35:25">ast</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:42">coded_framesize</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:38"><decl pos:start="37:13" pos:end="37:37"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:17">h</name> <init pos:start="37:19" pos:end="37:37">= <expr pos:start="37:21" pos:end="37:37"><name pos:start="37:21" pos:end="37:37"><name pos:start="37:21" pos:end="37:23">ast</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:37">sub_packet_h</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:40"><decl pos:start="39:13" pos:end="39:39"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:17">y</name> <init pos:start="39:19" pos:end="39:39">= <expr pos:start="39:21" pos:end="39:39"><name pos:start="39:21" pos:end="39:39"><name pos:start="39:21" pos:end="39:23">ast</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:39">sub_packet_cnt</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:41"><decl pos:start="41:13" pos:end="41:40"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:17">w</name> <init pos:start="41:19" pos:end="41:40">= <expr pos:start="41:21" pos:end="41:40"><name pos:start="41:21" pos:end="41:40"><name pos:start="41:21" pos:end="41:23">ast</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:40">audio_framesize</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="45:13" pos:end="47:44"><if pos:start="45:13" pos:end="47:44">if <condition pos:start="45:16" pos:end="45:27">(<expr pos:start="45:17" pos:end="45:26"><operator pos:start="45:17" pos:end="45:17">*</operator><name pos:start="45:18" pos:end="45:22">flags</name> <operator pos:start="45:24" pos:end="45:24">&amp;</operator> <literal type="number" pos:start="45:26" pos:end="45:26">2</literal></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:44"><block_content pos:start="47:17" pos:end="47:44">

                <expr_stmt pos:start="47:17" pos:end="47:44"><expr pos:start="47:17" pos:end="47:43"><name pos:start="47:17" pos:end="47:17">y</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:39"><name pos:start="47:21" pos:end="47:23">ast</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:39">sub_packet_cnt</name></name> <operator pos:start="47:41" pos:end="47:41">=</operator> <literal type="number" pos:start="47:43" pos:end="47:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="49:13" pos:end="51:49"><if pos:start="49:13" pos:end="51:49">if <condition pos:start="49:16" pos:end="49:19">(<expr pos:start="49:17" pos:end="49:18"><operator pos:start="49:17" pos:end="49:17">!</operator><name pos:start="49:18" pos:end="49:18">y</name></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:49"><block_content pos:start="51:17" pos:end="51:49">

                <expr_stmt pos:start="51:17" pos:end="51:49"><expr pos:start="51:17" pos:end="51:48"><name pos:start="51:17" pos:end="51:35"><name pos:start="51:17" pos:end="51:19">ast</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:35">audiotimestamp</name></name> <operator pos:start="51:37" pos:end="51:37">=</operator> <operator pos:start="51:39" pos:end="51:39">*</operator><name pos:start="51:40" pos:end="51:48">timestamp</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <switch pos:start="55:13" pos:end="75:13">switch<condition pos:start="55:19" pos:end="55:39">(<expr pos:start="55:20" pos:end="55:38"><name pos:start="55:20" pos:end="55:38"><name pos:start="55:20" pos:end="55:21">st</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:28">codec</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:38">codec_id</name></name></expr>)</condition> <block pos:start="55:41" pos:end="75:13">{<block_content pos:start="57:17" pos:end="73:26">

                <case pos:start="57:17" pos:end="57:37">case <expr pos:start="57:22" pos:end="57:36"><name pos:start="57:22" pos:end="57:36">CODEC_ID_RA_288</name></expr>:</case>

                    <for pos:start="59:21" pos:end="61:71">for <control pos:start="59:25" pos:end="59:45">(<init pos:start="59:26" pos:end="59:31"><expr pos:start="59:26" pos:end="59:30"><name pos:start="59:26" pos:end="59:26">x</name> <operator pos:start="59:28" pos:end="59:28">=</operator> <literal type="number" pos:start="59:30" pos:end="59:30">0</literal></expr>;</init> <condition pos:start="59:33" pos:end="59:40"><expr pos:start="59:33" pos:end="59:39"><name pos:start="59:33" pos:end="59:33">x</name> <operator pos:start="59:35" pos:end="59:35">&lt;</operator> <name pos:start="59:37" pos:end="59:37">h</name><operator pos:start="59:38" pos:end="59:38">/</operator><literal type="number" pos:start="59:39" pos:end="59:39">2</literal></expr>;</condition> <incr pos:start="59:42" pos:end="59:44"><expr pos:start="59:42" pos:end="59:44"><name pos:start="59:42" pos:end="59:42">x</name><operator pos:start="59:43" pos:end="59:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="61:25" pos:end="61:71"><block_content pos:start="61:25" pos:end="61:71">

                        <expr_stmt pos:start="61:25" pos:end="61:71"><expr pos:start="61:25" pos:end="61:70"><call pos:start="61:25" pos:end="61:70"><name pos:start="61:25" pos:end="61:34">get_buffer</name><argument_list pos:start="61:35" pos:end="61:70">(<argument pos:start="61:36" pos:end="61:37"><expr pos:start="61:36" pos:end="61:37"><name pos:start="61:36" pos:end="61:37">pb</name></expr></argument>, <argument pos:start="61:40" pos:end="61:64"><expr pos:start="61:40" pos:end="61:64"><name pos:start="61:40" pos:end="61:52"><name pos:start="61:40" pos:end="61:42">ast</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:47">pkt</name><operator pos:start="61:48" pos:end="61:48">.</operator><name pos:start="61:49" pos:end="61:52">data</name></name><operator pos:start="61:53" pos:end="61:53">+</operator><name pos:start="61:54" pos:end="61:54">x</name><operator pos:start="61:55" pos:end="61:55">*</operator><literal type="number" pos:start="61:56" pos:end="61:56">2</literal><operator pos:start="61:57" pos:end="61:57">*</operator><name pos:start="61:58" pos:end="61:58">w</name><operator pos:start="61:59" pos:end="61:59">+</operator><name pos:start="61:60" pos:end="61:60">y</name><operator pos:start="61:61" pos:end="61:61">*</operator><name pos:start="61:62" pos:end="61:64">cfs</name></expr></argument>, <argument pos:start="61:67" pos:end="61:69"><expr pos:start="61:67" pos:end="61:69"><name pos:start="61:67" pos:end="61:69">cfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    <break pos:start="63:21" pos:end="63:26">break;</break>

                <case pos:start="65:17" pos:end="65:37">case <expr pos:start="65:22" pos:end="65:36"><name pos:start="65:22" pos:end="65:36">CODEC_ID_ATRAC3</name></expr>:</case>

                <case pos:start="67:17" pos:end="67:35">case <expr pos:start="67:22" pos:end="67:34"><name pos:start="67:22" pos:end="67:34">CODEC_ID_COOK</name></expr>:</case>

                    <for pos:start="69:21" pos:end="71:92">for <control pos:start="69:25" pos:end="69:47">(<init pos:start="69:26" pos:end="69:31"><expr pos:start="69:26" pos:end="69:30"><name pos:start="69:26" pos:end="69:26">x</name> <operator pos:start="69:28" pos:end="69:28">=</operator> <literal type="number" pos:start="69:30" pos:end="69:30">0</literal></expr>;</init> <condition pos:start="69:33" pos:end="69:42"><expr pos:start="69:33" pos:end="69:41"><name pos:start="69:33" pos:end="69:33">x</name> <operator pos:start="69:35" pos:end="69:35">&lt;</operator> <name pos:start="69:37" pos:end="69:37">w</name><operator pos:start="69:38" pos:end="69:38">/</operator><name pos:start="69:39" pos:end="69:41">sps</name></expr>;</condition> <incr pos:start="69:44" pos:end="69:46"><expr pos:start="69:44" pos:end="69:46"><name pos:start="69:44" pos:end="69:44">x</name><operator pos:start="69:45" pos:end="69:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="71:25" pos:end="71:92"><block_content pos:start="71:25" pos:end="71:92">

                        <expr_stmt pos:start="71:25" pos:end="71:92"><expr pos:start="71:25" pos:end="71:91"><call pos:start="71:25" pos:end="71:91"><name pos:start="71:25" pos:end="71:34">get_buffer</name><argument_list pos:start="71:35" pos:end="71:91">(<argument pos:start="71:36" pos:end="71:37"><expr pos:start="71:36" pos:end="71:37"><name pos:start="71:36" pos:end="71:37">pb</name></expr></argument>, <argument pos:start="71:40" pos:end="71:85"><expr pos:start="71:40" pos:end="71:85"><name pos:start="71:40" pos:end="71:52"><name pos:start="71:40" pos:end="71:42">ast</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:47">pkt</name><operator pos:start="71:48" pos:end="71:48">.</operator><name pos:start="71:49" pos:end="71:52">data</name></name><operator pos:start="71:53" pos:end="71:53">+</operator><name pos:start="71:54" pos:end="71:56">sps</name><operator pos:start="71:57" pos:end="71:57">*</operator><operator pos:start="71:58" pos:end="71:58">(</operator><name pos:start="71:59" pos:end="71:59">h</name><operator pos:start="71:60" pos:end="71:60">*</operator><name pos:start="71:61" pos:end="71:61">x</name><operator pos:start="71:62" pos:end="71:62">+</operator><operator pos:start="71:63" pos:end="71:63">(</operator><operator pos:start="71:64" pos:end="71:64">(</operator><name pos:start="71:65" pos:end="71:65">h</name><operator pos:start="71:66" pos:end="71:66">+</operator><literal type="number" pos:start="71:67" pos:end="71:67">1</literal><operator pos:start="71:68" pos:end="71:68">)</operator><operator pos:start="71:69" pos:end="71:69">/</operator><literal type="number" pos:start="71:70" pos:end="71:70">2</literal><operator pos:start="71:71" pos:end="71:71">)</operator><operator pos:start="71:72" pos:end="71:72">*</operator><operator pos:start="71:73" pos:end="71:73">(</operator><name pos:start="71:74" pos:end="71:74">y</name><operator pos:start="71:75" pos:end="71:75">&amp;</operator><literal type="number" pos:start="71:76" pos:end="71:76">1</literal><operator pos:start="71:77" pos:end="71:77">)</operator><operator pos:start="71:78" pos:end="71:78">+</operator><operator pos:start="71:79" pos:end="71:79">(</operator><name pos:start="71:80" pos:end="71:80">y</name><operator pos:start="71:81" pos:end="71:82">&gt;&gt;</operator><literal type="number" pos:start="71:83" pos:end="71:83">1</literal><operator pos:start="71:84" pos:end="71:84">)</operator><operator pos:start="71:85" pos:end="71:85">)</operator></expr></argument>, <argument pos:start="71:88" pos:end="71:90"><expr pos:start="71:88" pos:end="71:90"><name pos:start="71:88" pos:end="71:90">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    <break pos:start="73:21" pos:end="73:26">break;</break>

            </block_content>}</block></switch>



            <if_stmt pos:start="79:13" pos:end="101:13"><if pos:start="79:13" pos:end="81:26">if <condition pos:start="79:16" pos:end="79:44">(<expr pos:start="79:17" pos:end="79:43"><operator pos:start="79:17" pos:end="79:18">++</operator><operator pos:start="79:19" pos:end="79:19">(</operator><name pos:start="79:20" pos:end="79:38"><name pos:start="79:20" pos:end="79:22">ast</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:38">sub_packet_cnt</name></name><operator pos:start="79:39" pos:end="79:39">)</operator> <operator pos:start="79:41" pos:end="79:41">&lt;</operator> <name pos:start="79:43" pos:end="79:43">h</name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:26"><block_content pos:start="81:17" pos:end="81:26">

                <return pos:start="81:17" pos:end="81:26">return <expr pos:start="81:24" pos:end="81:25"><operator pos:start="81:24" pos:end="81:24">-</operator><literal type="number" pos:start="81:25" pos:end="81:25">1</literal></expr>;</return></block_content></block></if>

            <else pos:start="83:13" pos:end="101:13">else <block pos:start="83:18" pos:end="101:13">{<block_content pos:start="85:17" pos:end="99:27">

                <expr_stmt pos:start="85:17" pos:end="85:40"><expr pos:start="85:17" pos:end="85:39"><name pos:start="85:17" pos:end="85:35"><name pos:start="85:17" pos:end="85:19">ast</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:35">sub_packet_cnt</name></name> <operator pos:start="85:37" pos:end="85:37">=</operator> <literal type="number" pos:start="85:39" pos:end="85:39">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:49"><expr pos:start="87:17" pos:end="87:48"><name pos:start="87:17" pos:end="87:36"><name pos:start="87:17" pos:end="87:18">rm</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:36">audio_stream_num</name></name> <operator pos:start="87:38" pos:end="87:38">=</operator> <name pos:start="87:40" pos:end="87:48"><name pos:start="87:40" pos:end="87:41">st</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:48">index</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:71"><expr pos:start="89:17" pos:end="89:70"><name pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:18">rm</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:33">audio_pkt_cnt</name></name> <operator pos:start="89:35" pos:end="89:35">=</operator> <name pos:start="89:37" pos:end="89:37">h</name> <operator pos:start="89:39" pos:end="89:39">*</operator> <name pos:start="89:41" pos:end="89:41">w</name> <operator pos:start="89:43" pos:end="89:43">/</operator> <name pos:start="89:45" pos:end="89:66"><name pos:start="89:45" pos:end="89:46">st</name><operator pos:start="89:47" pos:end="89:48">-&gt;</operator><name pos:start="89:49" pos:end="89:53">codec</name><operator pos:start="89:54" pos:end="89:55">-&gt;</operator><name pos:start="89:56" pos:end="89:66">block_align</name></name> <operator pos:start="89:68" pos:end="89:68">-</operator> <literal type="number" pos:start="89:70" pos:end="89:70">1</literal></expr>;</expr_stmt>

                <comment type="line" pos:start="91:17" pos:end="91:45">// Release first audio packet</comment>

                <expr_stmt pos:start="93:17" pos:end="93:59"><expr pos:start="93:17" pos:end="93:58"><call pos:start="93:17" pos:end="93:58"><name pos:start="93:17" pos:end="93:29">av_new_packet</name><argument_list pos:start="93:30" pos:end="93:58">(<argument pos:start="93:31" pos:end="93:33"><expr pos:start="93:31" pos:end="93:33"><name pos:start="93:31" pos:end="93:33">pkt</name></expr></argument>, <argument pos:start="93:36" pos:end="93:57"><expr pos:start="93:36" pos:end="93:57"><name pos:start="93:36" pos:end="93:57"><name pos:start="93:36" pos:end="93:37">st</name><operator pos:start="93:38" pos:end="93:39">-&gt;</operator><name pos:start="93:40" pos:end="93:44">codec</name><operator pos:start="93:45" pos:end="93:46">-&gt;</operator><name pos:start="93:47" pos:end="93:57">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:73"><expr pos:start="95:17" pos:end="95:72"><call pos:start="95:17" pos:end="95:72"><name pos:start="95:17" pos:end="95:22">memcpy</name><argument_list pos:start="95:23" pos:end="95:72">(<argument pos:start="95:24" pos:end="95:32"><expr pos:start="95:24" pos:end="95:32"><name pos:start="95:24" pos:end="95:32"><name pos:start="95:24" pos:end="95:26">pkt</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:32">data</name></name></expr></argument>, <argument pos:start="95:35" pos:end="95:47"><expr pos:start="95:35" pos:end="95:47"><name pos:start="95:35" pos:end="95:47"><name pos:start="95:35" pos:end="95:37">ast</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:42">pkt</name><operator pos:start="95:43" pos:end="95:43">.</operator><name pos:start="95:44" pos:end="95:47">data</name></name></expr></argument>, <argument pos:start="95:50" pos:end="95:71"><expr pos:start="95:50" pos:end="95:71"><name pos:start="95:50" pos:end="95:71"><name pos:start="95:50" pos:end="95:51">st</name><operator pos:start="95:52" pos:end="95:53">-&gt;</operator><name pos:start="95:54" pos:end="95:58">codec</name><operator pos:start="95:59" pos:end="95:60">-&gt;</operator><name pos:start="95:61" pos:end="95:71">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="95:75" pos:end="95:92">//FIXME avoid this</comment>

                <expr_stmt pos:start="97:17" pos:end="97:49"><expr pos:start="97:17" pos:end="97:48"><operator pos:start="97:17" pos:end="97:17">*</operator><name pos:start="97:18" pos:end="97:26">timestamp</name> <operator pos:start="97:28" pos:end="97:28">=</operator> <name pos:start="97:30" pos:end="97:48"><name pos:start="97:30" pos:end="97:32">ast</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:48">audiotimestamp</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:27"><expr pos:start="99:17" pos:end="99:26"><operator pos:start="99:17" pos:end="99:17">*</operator><name pos:start="99:18" pos:end="99:22">flags</name> <operator pos:start="99:24" pos:end="99:24">=</operator> <literal type="number" pos:start="99:26" pos:end="99:26">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="99:29" pos:end="99:60">// Mark first packet as keyframe</comment>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="103:11" pos:end="127:9">else if <condition pos:start="103:19" pos:end="103:55">(<expr pos:start="103:20" pos:end="103:54"><name pos:start="103:20" pos:end="103:38"><name pos:start="103:20" pos:end="103:21">st</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:28">codec</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:38">codec_id</name></name> <operator pos:start="103:40" pos:end="103:41">==</operator> <name pos:start="103:43" pos:end="103:54">CODEC_ID_AAC</name></expr>)</condition> <block pos:start="103:57" pos:end="127:9">{<block_content pos:start="105:13" pos:end="125:13">

            <decl_stmt pos:start="105:13" pos:end="105:18"><decl pos:start="105:13" pos:end="105:17"><type pos:start="105:13" pos:end="105:15"><name pos:start="105:13" pos:end="105:15">int</name></type> <name pos:start="105:17" pos:end="105:17">x</name></decl>;</decl_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:45"><expr pos:start="107:13" pos:end="107:44"><name pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:14">rm</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:32">audio_stream_num</name></name> <operator pos:start="107:34" pos:end="107:34">=</operator> <name pos:start="107:36" pos:end="107:44"><name pos:start="107:36" pos:end="107:37">st</name><operator pos:start="107:38" pos:end="107:39">-&gt;</operator><name pos:start="107:40" pos:end="107:44">index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:61"><expr pos:start="109:13" pos:end="109:60"><name pos:start="109:13" pos:end="109:31"><name pos:start="109:13" pos:end="109:15">ast</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:31">sub_packet_cnt</name></name> <operator pos:start="109:33" pos:end="109:33">=</operator> <operator pos:start="109:35" pos:end="109:35">(</operator><call pos:start="109:36" pos:end="109:47"><name pos:start="109:36" pos:end="109:43">get_be16</name><argument_list pos:start="109:44" pos:end="109:47">(<argument pos:start="109:45" pos:end="109:46"><expr pos:start="109:45" pos:end="109:46"><name pos:start="109:45" pos:end="109:46">pb</name></expr></argument>)</argument_list></call> <operator pos:start="109:49" pos:end="109:49">&amp;</operator> <literal type="number" pos:start="109:51" pos:end="109:54">0xf0</literal><operator pos:start="109:55" pos:end="109:55">)</operator> <operator pos:start="109:57" pos:end="109:58">&gt;&gt;</operator> <literal type="number" pos:start="109:60" pos:end="109:60">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="125:13"><if pos:start="111:13" pos:end="125:13">if <condition pos:start="111:16" pos:end="111:36">(<expr pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:19">ast</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:35">sub_packet_cnt</name></name></expr>)</condition> <block pos:start="111:38" pos:end="125:13">{<block_content pos:start="113:17" pos:end="123:27">

                <for pos:start="113:17" pos:end="115:62">for <control pos:start="113:21" pos:end="113:57">(<init pos:start="113:22" pos:end="113:27"><expr pos:start="113:22" pos:end="113:26"><name pos:start="113:22" pos:end="113:22">x</name> <operator pos:start="113:24" pos:end="113:24">=</operator> <literal type="number" pos:start="113:26" pos:end="113:26">0</literal></expr>;</init> <condition pos:start="113:29" pos:end="113:52"><expr pos:start="113:29" pos:end="113:51"><name pos:start="113:29" pos:end="113:29">x</name> <operator pos:start="113:31" pos:end="113:31">&lt;</operator> <name pos:start="113:33" pos:end="113:51"><name pos:start="113:33" pos:end="113:35">ast</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:51">sub_packet_cnt</name></name></expr>;</condition> <incr pos:start="113:54" pos:end="113:56"><expr pos:start="113:54" pos:end="113:56"><name pos:start="113:54" pos:end="113:54">x</name><operator pos:start="113:55" pos:end="113:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:21" pos:end="115:62"><block_content pos:start="115:21" pos:end="115:62">

                    <expr_stmt pos:start="115:21" pos:end="115:62"><expr pos:start="115:21" pos:end="115:61"><name pos:start="115:21" pos:end="115:46"><name pos:start="115:21" pos:end="115:23">ast</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:43">sub_packet_lengths</name><index pos:start="115:44" pos:end="115:46">[<expr pos:start="115:45" pos:end="115:45"><name pos:start="115:45" pos:end="115:45">x</name></expr>]</index></name> <operator pos:start="115:48" pos:end="115:48">=</operator> <call pos:start="115:50" pos:end="115:61"><name pos:start="115:50" pos:end="115:57">get_be16</name><argument_list pos:start="115:58" pos:end="115:61">(<argument pos:start="115:59" pos:end="115:60"><expr pos:start="115:59" pos:end="115:60"><name pos:start="115:59" pos:end="115:60">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <comment type="line" pos:start="117:17" pos:end="117:45">// Release first audio packet</comment>

                <expr_stmt pos:start="119:17" pos:end="119:60"><expr pos:start="119:17" pos:end="119:59"><name pos:start="119:17" pos:end="119:33"><name pos:start="119:17" pos:end="119:18">rm</name><operator pos:start="119:19" pos:end="119:20">-&gt;</operator><name pos:start="119:21" pos:end="119:33">audio_pkt_cnt</name></name> <operator pos:start="119:35" pos:end="119:35">=</operator> <name pos:start="119:37" pos:end="119:55"><name pos:start="119:37" pos:end="119:39">ast</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:55">sub_packet_cnt</name></name> <operator pos:start="119:57" pos:end="119:57">-</operator> <literal type="number" pos:start="119:59" pos:end="119:59">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:67"><expr pos:start="121:17" pos:end="121:66"><call pos:start="121:17" pos:end="121:66"><name pos:start="121:17" pos:end="121:29">av_get_packet</name><argument_list pos:start="121:30" pos:end="121:66">(<argument pos:start="121:31" pos:end="121:32"><expr pos:start="121:31" pos:end="121:32"><name pos:start="121:31" pos:end="121:32">pb</name></expr></argument>, <argument pos:start="121:35" pos:end="121:37"><expr pos:start="121:35" pos:end="121:37"><name pos:start="121:35" pos:end="121:37">pkt</name></expr></argument>, <argument pos:start="121:40" pos:end="121:65"><expr pos:start="121:40" pos:end="121:65"><name pos:start="121:40" pos:end="121:65"><name pos:start="121:40" pos:end="121:42">ast</name><operator pos:start="121:43" pos:end="121:44">-&gt;</operator><name pos:start="121:45" pos:end="121:62">sub_packet_lengths</name><index pos:start="121:63" pos:end="121:65">[<expr pos:start="121:64" pos:end="121:64"><literal type="number" pos:start="121:64" pos:end="121:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:27"><expr pos:start="123:17" pos:end="123:26"><operator pos:start="123:17" pos:end="123:17">*</operator><name pos:start="123:18" pos:end="123:22">flags</name> <operator pos:start="123:24" pos:end="123:24">=</operator> <literal type="number" pos:start="123:26" pos:end="123:26">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="123:29" pos:end="123:60">// Mark first packet as keyframe</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="127:11" pos:end="133:9">else <block pos:start="127:16" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:39">

            <expr_stmt pos:start="129:13" pos:end="129:40"><expr pos:start="129:13" pos:end="129:39"><call pos:start="129:13" pos:end="129:39"><name pos:start="129:13" pos:end="129:25">av_get_packet</name><argument_list pos:start="129:26" pos:end="129:39">(<argument pos:start="129:27" pos:end="129:28"><expr pos:start="129:27" pos:end="129:28"><name pos:start="129:27" pos:end="129:28">pb</name></expr></argument>, <argument pos:start="129:31" pos:end="129:33"><expr pos:start="129:31" pos:end="129:33"><name pos:start="129:31" pos:end="129:33">pkt</name></expr></argument>, <argument pos:start="129:36" pos:end="129:38"><expr pos:start="129:36" pos:end="129:38"><name pos:start="129:36" pos:end="129:38">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:39"><expr pos:start="131:13" pos:end="131:38"><call pos:start="131:13" pos:end="131:38"><name pos:start="131:13" pos:end="131:29">rm_ac3_swap_bytes</name><argument_list pos:start="131:30" pos:end="131:38">(<argument pos:start="131:31" pos:end="131:32"><expr pos:start="131:31" pos:end="131:32"><name pos:start="131:31" pos:end="131:32">st</name></expr></argument>, <argument pos:start="131:35" pos:end="131:37"><expr pos:start="131:35" pos:end="131:37"><name pos:start="131:35" pos:end="131:37">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="135:7" pos:end="137:36">else<block type="pseudo" pos:start="137:9" pos:end="137:36"><block_content pos:start="137:9" pos:end="137:36">

        <expr_stmt pos:start="137:9" pos:end="137:36"><expr pos:start="137:9" pos:end="137:35"><call pos:start="137:9" pos:end="137:35"><name pos:start="137:9" pos:end="137:21">av_get_packet</name><argument_list pos:start="137:22" pos:end="137:35">(<argument pos:start="137:23" pos:end="137:24"><expr pos:start="137:23" pos:end="137:24"><name pos:start="137:23" pos:end="137:24">pb</name></expr></argument>, <argument pos:start="137:27" pos:end="137:29"><expr pos:start="137:27" pos:end="137:29"><name pos:start="137:27" pos:end="137:29">pkt</name></expr></argument>, <argument pos:start="137:32" pos:end="137:34"><expr pos:start="137:32" pos:end="137:34"><name pos:start="137:32" pos:end="137:34">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="141:5" pos:end="149:5"><if pos:start="141:5" pos:end="149:5">if<condition pos:start="141:7" pos:end="143:39">(  <expr pos:start="141:10" pos:end="143:38"><operator pos:start="141:10" pos:end="141:10">(</operator><name pos:start="141:11" pos:end="141:21"><name pos:start="141:11" pos:end="141:12">st</name><operator pos:start="141:13" pos:end="141:14">-&gt;</operator><name pos:start="141:15" pos:end="141:21">discard</name></name> <operator pos:start="141:23" pos:end="141:24">&gt;=</operator> <name pos:start="141:26" pos:end="141:41">AVDISCARD_NONKEY</name> <operator pos:start="141:43" pos:end="141:44">&amp;&amp;</operator> <operator pos:start="141:46" pos:end="141:46">!</operator><operator pos:start="141:47" pos:end="141:47">(</operator><operator pos:start="141:48" pos:end="141:48">*</operator><name pos:start="141:49" pos:end="141:53">flags</name><operator pos:start="141:54" pos:end="141:54">&amp;</operator><literal type="number" pos:start="141:55" pos:end="141:55">2</literal><operator pos:start="141:56" pos:end="141:56">)</operator><operator pos:start="141:57" pos:end="141:57">)</operator>

       <operator pos:start="143:8" pos:end="143:9">||</operator> <name pos:start="143:11" pos:end="143:21"><name pos:start="143:11" pos:end="143:12">st</name><operator pos:start="143:13" pos:end="143:14">-&gt;</operator><name pos:start="143:15" pos:end="143:21">discard</name></name> <operator pos:start="143:23" pos:end="143:24">&gt;=</operator> <name pos:start="143:26" pos:end="143:38">AVDISCARD_ALL</name></expr>)</condition><block pos:start="143:40" pos:end="149:5">{<block_content pos:start="145:9" pos:end="147:18">

        <expr_stmt pos:start="145:9" pos:end="145:28"><expr pos:start="145:9" pos:end="145:27"><call pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:22">av_free_packet</name><argument_list pos:start="145:23" pos:end="145:27">(<argument pos:start="145:24" pos:end="145:26"><expr pos:start="145:24" pos:end="145:26"><name pos:start="145:24" pos:end="145:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="147:9" pos:end="147:18">return <expr pos:start="147:16" pos:end="147:17"><operator pos:start="147:16" pos:end="147:16">-</operator><literal type="number" pos:start="147:17" pos:end="147:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="153:5" pos:end="180:0"><expr pos:start="153:5" pos:end="153:33"><name pos:start="153:5" pos:end="153:21"><name pos:start="153:5" pos:end="153:7">pkt</name><operator pos:start="153:8" pos:end="153:9">-&gt;</operator><name pos:start="153:10" pos:end="153:21">stream_index</name></name> <operator pos:start="153:23" pos:end="153:23">=</operator> <name pos:start="153:25" pos:end="153:33"><name pos:start="153:25" pos:end="153:26">st</name><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:33">index</name></name></expr>;</expr_stmt>



<cpp:if pos:start="157:1" pos:end="157:5">#<cpp:directive pos:start="157:2" pos:end="157:3">if</cpp:directive> <expr pos:start="157:5" pos:end="157:5"><literal type="number" pos:start="157:5" pos:end="157:5">0</literal></expr></cpp:if>

    if (st-&gt;codec-&gt;codec_type == CODEC_TYPE_VIDEO) {

        if(st-&gt;codec-&gt;codec_id == CODEC_ID_RV20){

            int seq= 128*(pkt-&gt;data[2]&amp;0x7F) + (pkt-&gt;data[3]&gt;&gt;1);

            av_log(s, AV_LOG_DEBUG, "%d %"PRId64" %d\n", *timestamp, *timestamp*512LL/25, seq);



            seq |= (*timestamp&amp;~0x3FFF);

            if(seq - *timestamp &gt;  0x2000) seq -= 0x4000;

            if(seq - *timestamp &lt; -0x2000) seq += 0x4000;

        }

    }

<cpp:endif pos:start="179:1" pos:end="179:6">#<cpp:directive pos:start="179:2" pos:end="179:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="183:5" pos:end="183:25"><expr pos:start="183:5" pos:end="183:24"><name pos:start="183:5" pos:end="183:12"><name pos:start="183:5" pos:end="183:7">pkt</name><operator pos:start="183:8" pos:end="183:9">-&gt;</operator><name pos:start="183:10" pos:end="183:12">pts</name></name><operator pos:start="183:13" pos:end="183:13">=</operator> <operator pos:start="183:15" pos:end="183:15">*</operator><name pos:start="183:16" pos:end="183:24">timestamp</name></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="187:35"><if pos:start="185:5" pos:end="187:35">if <condition pos:start="185:8" pos:end="185:19">(<expr pos:start="185:9" pos:end="185:18"><operator pos:start="185:9" pos:end="185:9">*</operator><name pos:start="185:10" pos:end="185:14">flags</name> <operator pos:start="185:16" pos:end="185:16">&amp;</operator> <literal type="number" pos:start="185:18" pos:end="185:18">2</literal></expr>)</condition><block type="pseudo" pos:start="187:9" pos:end="187:35"><block_content pos:start="187:9" pos:end="187:35">

        <expr_stmt pos:start="187:9" pos:end="187:35"><expr pos:start="187:9" pos:end="187:34"><name pos:start="187:9" pos:end="187:18"><name pos:start="187:9" pos:end="187:11">pkt</name><operator pos:start="187:12" pos:end="187:13">-&gt;</operator><name pos:start="187:14" pos:end="187:18">flags</name></name> <operator pos:start="187:20" pos:end="187:21">|=</operator> <name pos:start="187:23" pos:end="187:34">PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="191:5" pos:end="191:77">return <expr pos:start="191:12" pos:end="191:76"><ternary pos:start="191:12" pos:end="191:76"><condition pos:start="191:12" pos:end="191:54"><expr pos:start="191:12" pos:end="191:52"><name pos:start="191:12" pos:end="191:32"><name pos:start="191:12" pos:end="191:13">st</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:20">codec</name><operator pos:start="191:21" pos:end="191:22">-&gt;</operator><name pos:start="191:23" pos:end="191:32">codec_type</name></name> <operator pos:start="191:34" pos:end="191:35">==</operator> <name pos:start="191:37" pos:end="191:52">CODEC_TYPE_AUDIO</name></expr> ?</condition><then pos:start="191:56" pos:end="191:72"> <expr pos:start="191:56" pos:end="191:72"><name pos:start="191:56" pos:end="191:72"><name pos:start="191:56" pos:end="191:57">rm</name><operator pos:start="191:58" pos:end="191:59">-&gt;</operator><name pos:start="191:60" pos:end="191:72">audio_pkt_cnt</name></name></expr> </then><else pos:start="191:74" pos:end="191:76">: <expr pos:start="191:76" pos:end="191:76"><literal type="number" pos:start="191:76" pos:end="191:76">0</literal></expr></else></ternary></expr>;</return>

</block_content>}</block>
</unit>
