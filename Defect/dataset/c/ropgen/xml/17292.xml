<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17292.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">read_rle_sgi</name><parameter_list pos:start="1:24" pos:end="1:54">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:31">uint8_t</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:40">out_buf</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:50">SgiState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:21">dest_row</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:20">len</name> <init pos:start="7:22" pos:end="7:47">= <expr pos:start="7:24" pos:end="7:47"><name pos:start="7:24" pos:end="7:32"><name pos:start="7:24" pos:end="7:24">s</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">height</name></name> <operator pos:start="7:34" pos:end="7:34">*</operator> <name pos:start="7:36" pos:end="7:43"><name pos:start="7:36" pos:end="7:36">s</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:43">depth</name></name> <operator pos:start="7:45" pos:end="7:45">*</operator> <literal type="number" pos:start="7:47" pos:end="7:47">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:18">GetByteContext</name></type> <name pos:start="9:20" pos:end="9:26">g_table</name> <init pos:start="9:28" pos:end="9:33">= <expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:30">s</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:33">g</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">y</name></decl>, <decl pos:start="11:21" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:21" pos:end="11:21">z</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:29">start_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">linesize</name></decl>, <decl pos:start="15:19" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:19" pos:end="15:21">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:47">/* size of  RLE offset and length tables */</comment>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:52">(<expr pos:start="21:9" pos:end="21:51"><name pos:start="21:9" pos:end="21:11">len</name> <operator pos:start="21:13" pos:end="21:13">*</operator> <literal type="number" pos:start="21:15" pos:end="21:15">2</literal> <operator pos:start="21:17" pos:end="21:17">&gt;</operator> <call pos:start="21:19" pos:end="21:51"><name pos:start="21:19" pos:end="21:44">bytestream2_get_bytes_left</name><argument_list pos:start="21:45" pos:end="21:51">(<argument pos:start="21:46" pos:end="21:50"><expr pos:start="21:46" pos:end="21:50"><operator pos:start="21:46" pos:end="21:46">&amp;</operator><name pos:start="21:47" pos:end="21:50"><name pos:start="21:47" pos:end="21:47">s</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:50">g</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:54" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:35">

        <return pos:start="23:9" pos:end="23:35">return <expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="29:5" pos:end="57:5">for <control pos:start="29:9" pos:end="29:34">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">z</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:29"><expr pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:17">z</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:28"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:28">depth</name></name></expr>;</condition> <incr pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:31">z</name><operator pos:start="29:32" pos:end="29:33">++</operator></expr></incr>)</control> <block pos:start="29:36" pos:end="57:5">{<block_content pos:start="31:9" pos:end="55:9">

        <expr_stmt pos:start="31:9" pos:end="31:27"><expr pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:16">dest_row</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:26">out_buf</name></expr>;</expr_stmt>

        <for pos:start="33:9" pos:end="55:9">for <control pos:start="33:13" pos:end="33:39">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">y</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:34"><expr pos:start="33:21" pos:end="33:33"><name pos:start="33:21" pos:end="33:21">y</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:33"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:33">height</name></name></expr>;</condition> <incr pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:36">y</name><operator pos:start="33:37" pos:end="33:38">++</operator></expr></incr>)</control> <block pos:start="33:41" pos:end="55:9">{<block_content pos:start="35:13" pos:end="53:43">

            <expr_stmt pos:start="35:13" pos:end="35:66"><expr pos:start="35:13" pos:end="35:65"><name pos:start="35:13" pos:end="35:20">linesize</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:31"><name pos:start="35:24" pos:end="35:24">s</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:31">width</name></name> <operator pos:start="35:33" pos:end="35:33">*</operator> <name pos:start="35:35" pos:end="35:42"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:42">depth</name></name> <operator pos:start="35:44" pos:end="35:44">*</operator> <name pos:start="35:46" pos:end="35:65"><name pos:start="35:46" pos:end="35:46">s</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:65">bytes_per_channel</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:36"><expr pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:20">dest_row</name> <operator pos:start="37:22" pos:end="37:23">-=</operator> <name pos:start="37:25" pos:end="37:35"><name pos:start="37:25" pos:end="37:25">s</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:35">linesize</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:58"><expr pos:start="39:13" pos:end="39:57"><name pos:start="39:13" pos:end="39:24">start_offset</name> <operator pos:start="39:26" pos:end="39:26">=</operator> <call pos:start="39:28" pos:end="39:57"><name pos:start="39:28" pos:end="39:47">bytestream2_get_be32</name><argument_list pos:start="39:48" pos:end="39:57">(<argument pos:start="39:49" pos:end="39:56"><expr pos:start="39:49" pos:end="39:56"><operator pos:start="39:49" pos:end="39:49">&amp;</operator><name pos:start="39:50" pos:end="39:56">g_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:60"><expr pos:start="41:13" pos:end="41:59"><call pos:start="41:13" pos:end="41:59"><name pos:start="41:13" pos:end="41:28">bytestream2_seek</name><argument_list pos:start="41:29" pos:end="41:59">(<argument pos:start="41:30" pos:end="41:34"><expr pos:start="41:30" pos:end="41:34"><operator pos:start="41:30" pos:end="41:30">&amp;</operator><name pos:start="41:31" pos:end="41:34"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:34">g</name></name></expr></argument>, <argument pos:start="41:37" pos:end="41:48"><expr pos:start="41:37" pos:end="41:48"><name pos:start="41:37" pos:end="41:48">start_offset</name></expr></argument>, <argument pos:start="41:51" pos:end="41:58"><expr pos:start="41:51" pos:end="41:58"><name pos:start="41:51" pos:end="41:58">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="49:88"><if pos:start="43:13" pos:end="45:75">if <condition pos:start="43:16" pos:end="43:42">(<expr pos:start="43:17" pos:end="43:41"><name pos:start="43:17" pos:end="43:36"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:36">bytes_per_channel</name></name> <operator pos:start="43:38" pos:end="43:39">==</operator> <literal type="number" pos:start="43:41" pos:end="43:41">1</literal></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:75"><block_content pos:start="45:17" pos:end="45:75">

                <expr_stmt pos:start="45:17" pos:end="45:75"><expr pos:start="45:17" pos:end="45:74"><name pos:start="45:17" pos:end="45:19">ret</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <call pos:start="45:23" pos:end="45:74"><name pos:start="45:23" pos:end="45:37">expand_rle_row8</name><argument_list pos:start="45:38" pos:end="45:74">(<argument pos:start="45:39" pos:end="45:39"><expr pos:start="45:39" pos:end="45:39"><name pos:start="45:39" pos:end="45:39">s</name></expr></argument>, <argument pos:start="45:42" pos:end="45:53"><expr pos:start="45:42" pos:end="45:53"><name pos:start="45:42" pos:end="45:49">dest_row</name> <operator pos:start="45:51" pos:end="45:51">+</operator> <name pos:start="45:53" pos:end="45:53">z</name></expr></argument>, <argument pos:start="45:56" pos:end="45:63"><expr pos:start="45:56" pos:end="45:63"><name pos:start="45:56" pos:end="45:63">linesize</name></expr></argument>, <argument pos:start="45:66" pos:end="45:73"><expr pos:start="45:66" pos:end="45:73"><name pos:start="45:66" pos:end="45:73"><name pos:start="45:66" pos:end="45:66">s</name><operator pos:start="45:67" pos:end="45:68">-&gt;</operator><name pos:start="45:69" pos:end="45:73">depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="47:13" pos:end="49:88">else<block type="pseudo" pos:start="49:17" pos:end="49:88"><block_content pos:start="49:17" pos:end="49:88">

                <expr_stmt pos:start="49:17" pos:end="49:88"><expr pos:start="49:17" pos:end="49:87"><name pos:start="49:17" pos:end="49:19">ret</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <call pos:start="49:23" pos:end="49:87"><name pos:start="49:23" pos:end="49:38">expand_rle_row16</name><argument_list pos:start="49:39" pos:end="49:87">(<argument pos:start="49:40" pos:end="49:40"><expr pos:start="49:40" pos:end="49:40"><name pos:start="49:40" pos:end="49:40">s</name></expr></argument>, <argument pos:start="49:43" pos:end="49:66"><expr pos:start="49:43" pos:end="49:66"><operator pos:start="49:43" pos:end="49:43">(</operator><name pos:start="49:44" pos:end="49:51">uint16_t</name> <operator pos:start="49:53" pos:end="49:53">*</operator><operator pos:start="49:54" pos:end="49:54">)</operator><name pos:start="49:55" pos:end="49:62">dest_row</name> <operator pos:start="49:64" pos:end="49:64">+</operator> <name pos:start="49:66" pos:end="49:66">z</name></expr></argument>, <argument pos:start="49:69" pos:end="49:76"><expr pos:start="49:69" pos:end="49:76"><name pos:start="49:69" pos:end="49:76">linesize</name></expr></argument>, <argument pos:start="49:79" pos:end="49:86"><expr pos:start="49:79" pos:end="49:86"><name pos:start="49:79" pos:end="49:86"><name pos:start="49:79" pos:end="49:79">s</name><operator pos:start="49:80" pos:end="49:81">-&gt;</operator><name pos:start="49:82" pos:end="49:86">depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="51:13" pos:end="53:43"><if pos:start="51:13" pos:end="53:43">if <condition pos:start="51:16" pos:end="51:32">(<expr pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:19">ret</name> <operator pos:start="51:21" pos:end="51:22">!=</operator> <name pos:start="51:24" pos:end="51:31"><name pos:start="51:24" pos:end="51:24">s</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:31">width</name></name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:43"><block_content pos:start="53:17" pos:end="53:43">

                <return pos:start="53:17" pos:end="53:43">return <expr pos:start="53:24" pos:end="53:42"><name pos:start="53:24" pos:end="53:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
