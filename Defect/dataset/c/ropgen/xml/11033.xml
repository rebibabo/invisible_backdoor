<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11033.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">probe_codec</name><parameter_list pos:start="1:24" pos:end="1:78">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:52">AVStream</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">st</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:77"><decl pos:start="1:59" pos:end="1:77"><type pos:start="1:59" pos:end="1:77"><specifier pos:start="1:59" pos:end="1:63">const</specifier> <name pos:start="1:65" pos:end="1:72">AVPacket</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:77">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:5">

    <if_stmt pos:start="5:5" pos:end="43:5"><if pos:start="5:5" pos:end="43:5">if<condition pos:start="5:7" pos:end="5:45">(<expr pos:start="5:8" pos:end="5:44"><name pos:start="5:8" pos:end="5:26"><name pos:start="5:8" pos:end="5:9">st</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:16">codec</name><operator pos:start="5:17" pos:end="5:18">-&gt;</operator><name pos:start="5:19" pos:end="5:26">codec_id</name></name> <operator pos:start="5:28" pos:end="5:29">==</operator> <name pos:start="5:31" pos:end="5:44">CODEC_ID_PROBE</name></expr>)</condition><block pos:start="5:46" pos:end="43:5">{<block_content pos:start="7:9" pos:end="41:9">

        <decl_stmt pos:start="7:9" pos:end="7:42"><decl pos:start="7:9" pos:end="7:41"><type pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:19">AVProbeData</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">pd</name> <init pos:start="7:25" pos:end="7:41">= <expr pos:start="7:27" pos:end="7:41"><operator pos:start="7:27" pos:end="7:27">&amp;</operator><name pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:29">st</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:41">probe_data</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="9:9" pos:end="9:66"><expr pos:start="9:9" pos:end="9:65"><call pos:start="9:9" pos:end="9:65"><name pos:start="9:9" pos:end="9:14">av_log</name><argument_list pos:start="9:15" pos:end="9:65">(<argument pos:start="9:16" pos:end="9:16"><expr pos:start="9:16" pos:end="9:16"><name pos:start="9:16" pos:end="9:16">s</name></expr></argument>, <argument pos:start="9:19" pos:end="9:30"><expr pos:start="9:19" pos:end="9:30"><name pos:start="9:19" pos:end="9:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="9:33" pos:end="9:53"><expr pos:start="9:33" pos:end="9:53"><literal type="string" pos:start="9:33" pos:end="9:53">"probing stream %d\n"</literal></expr></argument>, <argument pos:start="9:56" pos:end="9:64"><expr pos:start="9:56" pos:end="9:64"><name pos:start="9:56" pos:end="9:64"><name pos:start="9:56" pos:end="9:57">st</name><operator pos:start="9:58" pos:end="9:59">-&gt;</operator><name pos:start="9:60" pos:end="9:64">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:28"><expr pos:start="11:9" pos:end="11:27"><operator pos:start="11:9" pos:end="11:10">--</operator><name pos:start="11:11" pos:end="11:27"><name pos:start="11:11" pos:end="11:12">st</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:27">probe_packets</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="15:9" pos:end="15:83"><expr pos:start="15:9" pos:end="15:82"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:10">pd</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:15">buf</name></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <call pos:start="15:19" pos:end="15:82"><name pos:start="15:19" pos:end="15:28">av_realloc</name><argument_list pos:start="15:29" pos:end="15:82">(<argument pos:start="15:30" pos:end="15:36"><expr pos:start="15:30" pos:end="15:36"><name pos:start="15:30" pos:end="15:36"><name pos:start="15:30" pos:end="15:31">pd</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:36">buf</name></name></expr></argument>, <argument pos:start="15:39" pos:end="15:81"><expr pos:start="15:39" pos:end="15:81"><name pos:start="15:39" pos:end="15:50"><name pos:start="15:39" pos:end="15:40">pd</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:50">buf_size</name></name><operator pos:start="15:51" pos:end="15:51">+</operator><name pos:start="15:52" pos:end="15:60"><name pos:start="15:52" pos:end="15:54">pkt</name><operator pos:start="15:55" pos:end="15:56">-&gt;</operator><name pos:start="15:57" pos:end="15:60">size</name></name><operator pos:start="15:61" pos:end="15:61">+</operator><name pos:start="15:62" pos:end="15:81">AVPROBE_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:59"><expr pos:start="17:9" pos:end="17:58"><call pos:start="17:9" pos:end="17:58"><name pos:start="17:9" pos:end="17:14">memcpy</name><argument_list pos:start="17:15" pos:end="17:58">(<argument pos:start="17:16" pos:end="17:35"><expr pos:start="17:16" pos:end="17:35"><name pos:start="17:16" pos:end="17:22"><name pos:start="17:16" pos:end="17:17">pd</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:22">buf</name></name><operator pos:start="17:23" pos:end="17:23">+</operator><name pos:start="17:24" pos:end="17:35"><name pos:start="17:24" pos:end="17:25">pd</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:35">buf_size</name></name></expr></argument>, <argument pos:start="17:38" pos:end="17:46"><expr pos:start="17:38" pos:end="17:46"><name pos:start="17:38" pos:end="17:46"><name pos:start="17:38" pos:end="17:40">pkt</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:46">data</name></name></expr></argument>, <argument pos:start="17:49" pos:end="17:57"><expr pos:start="17:49" pos:end="17:57"><name pos:start="17:49" pos:end="17:57"><name pos:start="17:49" pos:end="17:51">pkt</name><operator pos:start="17:52" pos:end="17:53">-&gt;</operator><name pos:start="17:54" pos:end="17:57">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:10">pd</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:20">buf_size</name></name> <operator pos:start="19:22" pos:end="19:23">+=</operator> <name pos:start="19:25" pos:end="19:33"><name pos:start="19:25" pos:end="19:27">pkt</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:33">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:62"><expr pos:start="21:9" pos:end="21:61"><call pos:start="21:9" pos:end="21:61"><name pos:start="21:9" pos:end="21:14">memset</name><argument_list pos:start="21:15" pos:end="21:61">(<argument pos:start="21:16" pos:end="21:35"><expr pos:start="21:16" pos:end="21:35"><name pos:start="21:16" pos:end="21:22"><name pos:start="21:16" pos:end="21:17">pd</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:22">buf</name></name><operator pos:start="21:23" pos:end="21:23">+</operator><name pos:start="21:24" pos:end="21:35"><name pos:start="21:24" pos:end="21:25">pd</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:35">buf_size</name></name></expr></argument>, <argument pos:start="21:38" pos:end="21:38"><expr pos:start="21:38" pos:end="21:38"><literal type="number" pos:start="21:38" pos:end="21:38">0</literal></expr></argument>, <argument pos:start="21:41" pos:end="21:60"><expr pos:start="21:41" pos:end="21:60"><name pos:start="21:41" pos:end="21:60">AVPROBE_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="25:9" pos:end="41:9"><if pos:start="25:9" pos:end="41:9">if<condition pos:start="25:11" pos:end="25:70">(<expr pos:start="25:12" pos:end="25:69"><call pos:start="25:12" pos:end="25:32"><name pos:start="25:12" pos:end="25:18">av_log2</name><argument_list pos:start="25:19" pos:end="25:32">(<argument pos:start="25:20" pos:end="25:31"><expr pos:start="25:20" pos:end="25:31"><name pos:start="25:20" pos:end="25:31"><name pos:start="25:20" pos:end="25:21">pd</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:31">buf_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:34" pos:end="25:35">!=</operator> <call pos:start="25:37" pos:end="25:69"><name pos:start="25:37" pos:end="25:43">av_log2</name><argument_list pos:start="25:44" pos:end="25:69">(<argument pos:start="25:45" pos:end="25:68"><expr pos:start="25:45" pos:end="25:68"><name pos:start="25:45" pos:end="25:56"><name pos:start="25:45" pos:end="25:46">pd</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:56">buf_size</name></name> <operator pos:start="25:58" pos:end="25:58">-</operator> <name pos:start="25:60" pos:end="25:68"><name pos:start="25:60" pos:end="25:62">pkt</name><operator pos:start="25:63" pos:end="25:64">-&gt;</operator><name pos:start="25:65" pos:end="25:68">size</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="25:71" pos:end="41:9">{<block_content pos:start="29:13" pos:end="39:13">

            <comment type="line" pos:start="27:13" pos:end="27:100">//FIXME we do not reduce score to 0 for the case of running out of buffer space in bytes</comment>

            <expr_stmt pos:start="29:13" pos:end="29:98"><expr pos:start="29:13" pos:end="29:97"><call pos:start="29:13" pos:end="29:97"><name pos:start="29:13" pos:end="29:37">set_codec_from_probe_data</name><argument_list pos:start="29:38" pos:end="29:97">(<argument pos:start="29:39" pos:end="29:39"><expr pos:start="29:39" pos:end="29:39"><name pos:start="29:39" pos:end="29:39">s</name></expr></argument>, <argument pos:start="29:42" pos:end="29:43"><expr pos:start="29:42" pos:end="29:43"><name pos:start="29:42" pos:end="29:43">st</name></expr></argument>, <argument pos:start="29:46" pos:end="29:47"><expr pos:start="29:46" pos:end="29:47"><name pos:start="29:46" pos:end="29:47">pd</name></expr></argument>, <argument pos:start="29:50" pos:end="29:96"><expr pos:start="29:50" pos:end="29:96"><ternary pos:start="29:50" pos:end="29:96"><condition pos:start="29:50" pos:end="29:72"><expr pos:start="29:50" pos:end="29:70"><name pos:start="29:50" pos:end="29:66"><name pos:start="29:50" pos:end="29:51">st</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:66">probe_packets</name></name> <operator pos:start="29:68" pos:end="29:68">&gt;</operator> <literal type="number" pos:start="29:70" pos:end="29:70">0</literal></expr> ?</condition><then pos:start="29:74" pos:end="29:92"> <expr pos:start="29:74" pos:end="29:92"><name pos:start="29:74" pos:end="29:90">AVPROBE_SCORE_MAX</name><operator pos:start="29:91" pos:end="29:91">/</operator><literal type="number" pos:start="29:92" pos:end="29:92">4</literal></expr> </then><else pos:start="29:94" pos:end="29:96">: <expr pos:start="29:96" pos:end="29:96"><literal type="number" pos:start="29:96" pos:end="29:96">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="39:13"><if pos:start="31:13" pos:end="39:13">if<condition pos:start="31:15" pos:end="31:53">(<expr pos:start="31:16" pos:end="31:52"><name pos:start="31:16" pos:end="31:34"><name pos:start="31:16" pos:end="31:17">st</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:24">codec</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:34">codec_id</name></name> <operator pos:start="31:36" pos:end="31:37">!=</operator> <name pos:start="31:39" pos:end="31:52">CODEC_ID_PROBE</name></expr>)</condition><block pos:start="31:54" pos:end="39:13">{<block_content pos:start="33:17" pos:end="37:73">

                <expr_stmt pos:start="33:17" pos:end="33:31"><expr pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:28"><name pos:start="33:17" pos:end="33:18">pd</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:28">buf_size</name></name><operator pos:start="33:29" pos:end="33:29">=</operator><literal type="number" pos:start="33:30" pos:end="33:30">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:35"><expr pos:start="35:17" pos:end="35:34"><call pos:start="35:17" pos:end="35:34"><name pos:start="35:17" pos:end="35:24">av_freep</name><argument_list pos:start="35:25" pos:end="35:34">(<argument pos:start="35:26" pos:end="35:33"><expr pos:start="35:26" pos:end="35:33"><operator pos:start="35:26" pos:end="35:26">&amp;</operator><name pos:start="35:27" pos:end="35:33"><name pos:start="35:27" pos:end="35:28">pd</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:33">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:73"><expr pos:start="37:17" pos:end="37:72"><call pos:start="37:17" pos:end="37:72"><name pos:start="37:17" pos:end="37:22">av_log</name><argument_list pos:start="37:23" pos:end="37:72">(<argument pos:start="37:24" pos:end="37:24"><expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">s</name></expr></argument>, <argument pos:start="37:27" pos:end="37:38"><expr pos:start="37:27" pos:end="37:38"><name pos:start="37:27" pos:end="37:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="37:41" pos:end="37:60"><expr pos:start="37:41" pos:end="37:60"><literal type="string" pos:start="37:41" pos:end="37:60">"probed stream %d\n"</literal></expr></argument>, <argument pos:start="37:63" pos:end="37:71"><expr pos:start="37:63" pos:end="37:71"><name pos:start="37:63" pos:end="37:71"><name pos:start="37:63" pos:end="37:64">st</name><operator pos:start="37:65" pos:end="37:66">-&gt;</operator><name pos:start="37:67" pos:end="37:71">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
