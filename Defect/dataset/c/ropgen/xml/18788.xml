<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18788.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">send_palette_rect</name><parameter_list pos:start="1:29" pos:end="1:79">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:37">VncState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">vs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:48"><decl pos:start="1:44" pos:end="1:48"><type pos:start="1:44" pos:end="1:48"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:48">w</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:55"><decl pos:start="1:51" pos:end="1:55"><type pos:start="1:51" pos:end="1:55"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:55">h</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:78"><decl pos:start="1:58" pos:end="1:78"><type pos:start="1:58" pos:end="1:78"><name pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:63">struct</name> <name pos:start="1:65" pos:end="1:69">QDict</name></name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:78">palette</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:24">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">stream</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:65"><decl pos:start="7:5" pos:end="7:64"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">level</name> <init pos:start="7:15" pos:end="7:64">= <expr pos:start="7:17" pos:end="7:64"><name pos:start="7:17" pos:end="7:49"><name pos:start="7:17" pos:end="7:26">tight_conf</name><index pos:start="7:27" pos:end="7:49">[<expr pos:start="7:28" pos:end="7:48"><name pos:start="7:28" pos:end="7:48"><name pos:start="7:28" pos:end="7:29">vs</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:48">tight_compression</name></name></expr>]</index></name><operator pos:start="7:50" pos:end="7:50">.</operator><name pos:start="7:51" pos:end="7:64">idx_zlib_level</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">colors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:16">bytes</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:10">colors</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:32"><name pos:start="15:14" pos:end="15:23">qdict_size</name><argument_list pos:start="15:24" pos:end="15:32">(<argument pos:start="15:25" pos:end="15:31"><expr pos:start="15:25" pos:end="15:31"><name pos:start="15:25" pos:end="15:31">palette</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:64"><expr pos:start="19:5" pos:end="19:63"><call pos:start="19:5" pos:end="19:63"><name pos:start="19:5" pos:end="19:16">vnc_write_u8</name><argument_list pos:start="19:17" pos:end="19:63">(<argument pos:start="19:18" pos:end="19:19"><expr pos:start="19:18" pos:end="19:19"><name pos:start="19:18" pos:end="19:19">vs</name></expr></argument>, <argument pos:start="19:22" pos:end="19:62"><expr pos:start="19:22" pos:end="19:62"><operator pos:start="19:22" pos:end="19:22">(</operator><name pos:start="19:23" pos:end="19:28">stream</name> <operator pos:start="19:30" pos:end="19:30">|</operator> <name pos:start="19:32" pos:end="19:56">VNC_TIGHT_EXPLICIT_FILTER</name><operator pos:start="19:57" pos:end="19:57">)</operator> <operator pos:start="19:59" pos:end="19:60">&lt;&lt;</operator> <literal type="number" pos:start="19:62" pos:end="19:62">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:47"><expr pos:start="21:5" pos:end="21:46"><call pos:start="21:5" pos:end="21:46"><name pos:start="21:5" pos:end="21:16">vnc_write_u8</name><argument_list pos:start="21:17" pos:end="21:46">(<argument pos:start="21:18" pos:end="21:19"><expr pos:start="21:18" pos:end="21:19"><name pos:start="21:18" pos:end="21:19">vs</name></expr></argument>, <argument pos:start="21:22" pos:end="21:45"><expr pos:start="21:22" pos:end="21:45"><name pos:start="21:22" pos:end="21:45">VNC_TIGHT_FILTER_PALETTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><call pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:16">vnc_write_u8</name><argument_list pos:start="23:17" pos:end="23:32">(<argument pos:start="23:18" pos:end="23:19"><expr pos:start="23:18" pos:end="23:19"><name pos:start="23:18" pos:end="23:19">vs</name></expr></argument>, <argument pos:start="23:22" pos:end="23:31"><expr pos:start="23:22" pos:end="23:31"><name pos:start="23:22" pos:end="23:27">colors</name> <operator pos:start="23:29" pos:end="23:29">-</operator> <literal type="number" pos:start="23:31" pos:end="23:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="27:5" pos:end="91:5">switch<condition pos:start="27:11" pos:end="27:43">(<expr pos:start="27:12" pos:end="27:42"><name pos:start="27:12" pos:end="27:42"><name pos:start="27:12" pos:end="27:13">vs</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:23">clientds</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:26">pf</name><operator pos:start="27:27" pos:end="27:27">.</operator><name pos:start="27:28" pos:end="27:42">bytes_per_pixel</name></name></expr>)</condition> <block pos:start="27:45" pos:end="91:5">{<block_content pos:start="29:5" pos:end="89:14">

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">4</literal></expr>:</case>

    <block pos:start="31:5" pos:end="63:5">{<block_content pos:start="33:9" pos:end="61:14">

        <decl_stmt pos:start="33:9" pos:end="33:34"><decl pos:start="33:9" pos:end="33:25"><type pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:14">size_t</name></type> <name pos:start="33:16" pos:end="33:25">old_offset</name></decl>, <decl pos:start="33:28" pos:end="33:33"><type ref="prev" pos:start="33:9" pos:end="33:14"/><name pos:start="33:28" pos:end="33:33">offset</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:45"><decl pos:start="35:9" pos:end="35:44"><type pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:16">uint32_t</name></type> <name pos:start="35:18" pos:end="35:44"><name pos:start="35:18" pos:end="35:23">header</name><index pos:start="35:24" pos:end="35:44">[<expr pos:start="35:25" pos:end="35:43"><call pos:start="35:25" pos:end="35:43"><name pos:start="35:25" pos:end="35:34">qdict_size</name><argument_list pos:start="35:35" pos:end="35:43">(<argument pos:start="35:36" pos:end="35:42"><expr pos:start="35:36" pos:end="35:42"><name pos:start="35:36" pos:end="35:42">palette</name></expr></argument>)</argument_list></call></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:64"><decl pos:start="37:9" pos:end="37:63"><type pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:14">struct</name> <name pos:start="37:16" pos:end="37:30">palette_cb_priv</name></name></type> <name pos:start="37:32" pos:end="37:35">priv</name> <init pos:start="37:37" pos:end="37:63">= <expr pos:start="37:39" pos:end="37:63"><block pos:start="37:39" pos:end="37:63">{ <expr pos:start="37:41" pos:end="37:42"><name pos:start="37:41" pos:end="37:42">vs</name></expr>, <expr pos:start="37:45" pos:end="37:61"><operator pos:start="37:45" pos:end="37:45">(</operator><name pos:start="37:46" pos:end="37:52">uint8_t</name> <operator pos:start="37:54" pos:end="37:54">*</operator><operator pos:start="37:55" pos:end="37:55">)</operator><name pos:start="37:56" pos:end="37:61">header</name></expr> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:39"><expr pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:18">old_offset</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:38"><name pos:start="41:22" pos:end="41:23">vs</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:31">output</name><operator pos:start="41:32" pos:end="41:32">.</operator><name pos:start="41:33" pos:end="41:38">offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:50"><expr pos:start="43:9" pos:end="43:49"><call pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:18">qdict_iter</name><argument_list pos:start="43:19" pos:end="43:49">(<argument pos:start="43:20" pos:end="43:26"><expr pos:start="43:20" pos:end="43:26"><name pos:start="43:20" pos:end="43:26">palette</name></expr></argument>, <argument pos:start="43:29" pos:end="43:41"><expr pos:start="43:29" pos:end="43:41"><name pos:start="43:29" pos:end="43:41">write_palette</name></expr></argument>, <argument pos:start="43:44" pos:end="43:48"><expr pos:start="43:44" pos:end="43:48"><operator pos:start="43:44" pos:end="43:44">&amp;</operator><name pos:start="43:45" pos:end="43:48">priv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:46"><expr pos:start="45:9" pos:end="45:45"><call pos:start="45:9" pos:end="45:45"><name pos:start="45:9" pos:end="45:17">vnc_write</name><argument_list pos:start="45:18" pos:end="45:45">(<argument pos:start="45:19" pos:end="45:20"><expr pos:start="45:19" pos:end="45:20"><name pos:start="45:19" pos:end="45:20">vs</name></expr></argument>, <argument pos:start="45:23" pos:end="45:28"><expr pos:start="45:23" pos:end="45:28"><name pos:start="45:23" pos:end="45:28">header</name></expr></argument>, <argument pos:start="45:31" pos:end="45:44"><expr pos:start="45:31" pos:end="45:44"><sizeof pos:start="45:31" pos:end="45:44">sizeof<argument_list pos:start="45:37" pos:end="45:44">(<argument pos:start="45:38" pos:end="45:43"><expr pos:start="45:38" pos:end="45:43"><name pos:start="45:38" pos:end="45:43">header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:30">(<expr pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:14">vs</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:29">tight_pixel24</name></name></expr>)</condition> <block pos:start="49:32" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:52">

            <expr_stmt pos:start="51:13" pos:end="51:78"><expr pos:start="51:13" pos:end="51:77"><call pos:start="51:13" pos:end="51:77"><name pos:start="51:13" pos:end="51:24">tight_pack24</name><argument_list pos:start="51:25" pos:end="51:77">(<argument pos:start="51:26" pos:end="51:27"><expr pos:start="51:26" pos:end="51:27"><name pos:start="51:26" pos:end="51:27">vs</name></expr></argument>, <argument pos:start="51:30" pos:end="51:59"><expr pos:start="51:30" pos:end="51:59"><name pos:start="51:30" pos:end="51:46"><name pos:start="51:30" pos:end="51:31">vs</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:39">output</name><operator pos:start="51:40" pos:end="51:40">.</operator><name pos:start="51:41" pos:end="51:46">buffer</name></name> <operator pos:start="51:48" pos:end="51:48">+</operator> <name pos:start="51:50" pos:end="51:59">old_offset</name></expr></argument>, <argument pos:start="51:62" pos:end="51:67"><expr pos:start="51:62" pos:end="51:67"><name pos:start="51:62" pos:end="51:67">colors</name></expr></argument>, <argument pos:start="51:70" pos:end="51:76"><expr pos:start="51:70" pos:end="51:76"><operator pos:start="51:70" pos:end="51:70">&amp;</operator><name pos:start="51:71" pos:end="51:76">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:52"><expr pos:start="53:13" pos:end="53:51"><name pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:14">vs</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:22">output</name><operator pos:start="53:23" pos:end="53:23">.</operator><name pos:start="53:24" pos:end="53:29">offset</name></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <name pos:start="53:33" pos:end="53:42">old_offset</name> <operator pos:start="53:44" pos:end="53:44">+</operator> <name pos:start="53:46" pos:end="53:51">offset</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:70"><expr pos:start="59:9" pos:end="59:69"><call pos:start="59:9" pos:end="59:69"><name pos:start="59:9" pos:end="59:35">tight_encode_indexed_rect32</name><argument_list pos:start="59:36" pos:end="59:69">(<argument pos:start="59:37" pos:end="59:52"><expr pos:start="59:37" pos:end="59:52"><name pos:start="59:37" pos:end="59:52"><name pos:start="59:37" pos:end="59:38">vs</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:45">tight</name><operator pos:start="59:46" pos:end="59:46">.</operator><name pos:start="59:47" pos:end="59:52">buffer</name></name></expr></argument>, <argument pos:start="59:55" pos:end="59:59"><expr pos:start="59:55" pos:end="59:59"><name pos:start="59:55" pos:end="59:55">w</name> <operator pos:start="59:57" pos:end="59:57">*</operator> <name pos:start="59:59" pos:end="59:59">h</name></expr></argument>, <argument pos:start="59:62" pos:end="59:68"><expr pos:start="59:62" pos:end="59:68"><name pos:start="59:62" pos:end="59:68">palette</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    </block_content>}</block>

    <case pos:start="65:5" pos:end="65:11">case <expr pos:start="65:10" pos:end="65:10"><literal type="number" pos:start="65:10" pos:end="65:10">2</literal></expr>:</case>

    <block pos:start="67:5" pos:end="83:5">{<block_content pos:start="69:9" pos:end="81:14">

        <decl_stmt pos:start="69:9" pos:end="69:45"><decl pos:start="69:9" pos:end="69:44"><type pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:16">uint16_t</name></type> <name pos:start="69:18" pos:end="69:44"><name pos:start="69:18" pos:end="69:23">header</name><index pos:start="69:24" pos:end="69:44">[<expr pos:start="69:25" pos:end="69:43"><call pos:start="69:25" pos:end="69:43"><name pos:start="69:25" pos:end="69:34">qdict_size</name><argument_list pos:start="69:35" pos:end="69:43">(<argument pos:start="69:36" pos:end="69:42"><expr pos:start="69:36" pos:end="69:42"><name pos:start="69:36" pos:end="69:42">palette</name></expr></argument>)</argument_list></call></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:64"><decl pos:start="71:9" pos:end="71:63"><type pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:14">struct</name> <name pos:start="71:16" pos:end="71:30">palette_cb_priv</name></name></type> <name pos:start="71:32" pos:end="71:35">priv</name> <init pos:start="71:37" pos:end="71:63">= <expr pos:start="71:39" pos:end="71:63"><block pos:start="71:39" pos:end="71:63">{ <expr pos:start="71:41" pos:end="71:42"><name pos:start="71:41" pos:end="71:42">vs</name></expr>, <expr pos:start="71:45" pos:end="71:61"><operator pos:start="71:45" pos:end="71:45">(</operator><name pos:start="71:46" pos:end="71:52">uint8_t</name> <operator pos:start="71:54" pos:end="71:54">*</operator><operator pos:start="71:55" pos:end="71:55">)</operator><name pos:start="71:56" pos:end="71:61">header</name></expr> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:50"><expr pos:start="75:9" pos:end="75:49"><call pos:start="75:9" pos:end="75:49"><name pos:start="75:9" pos:end="75:18">qdict_iter</name><argument_list pos:start="75:19" pos:end="75:49">(<argument pos:start="75:20" pos:end="75:26"><expr pos:start="75:20" pos:end="75:26"><name pos:start="75:20" pos:end="75:26">palette</name></expr></argument>, <argument pos:start="75:29" pos:end="75:41"><expr pos:start="75:29" pos:end="75:41"><name pos:start="75:29" pos:end="75:41">write_palette</name></expr></argument>, <argument pos:start="75:44" pos:end="75:48"><expr pos:start="75:44" pos:end="75:48"><operator pos:start="75:44" pos:end="75:44">&amp;</operator><name pos:start="75:45" pos:end="75:48">priv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><call pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:17">vnc_write</name><argument_list pos:start="77:18" pos:end="77:45">(<argument pos:start="77:19" pos:end="77:20"><expr pos:start="77:19" pos:end="77:20"><name pos:start="77:19" pos:end="77:20">vs</name></expr></argument>, <argument pos:start="77:23" pos:end="77:28"><expr pos:start="77:23" pos:end="77:28"><name pos:start="77:23" pos:end="77:28">header</name></expr></argument>, <argument pos:start="77:31" pos:end="77:44"><expr pos:start="77:31" pos:end="77:44"><sizeof pos:start="77:31" pos:end="77:44">sizeof<argument_list pos:start="77:37" pos:end="77:44">(<argument pos:start="77:38" pos:end="77:43"><expr pos:start="77:38" pos:end="77:43"><name pos:start="77:38" pos:end="77:43">header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:70"><expr pos:start="79:9" pos:end="79:69"><call pos:start="79:9" pos:end="79:69"><name pos:start="79:9" pos:end="79:35">tight_encode_indexed_rect16</name><argument_list pos:start="79:36" pos:end="79:69">(<argument pos:start="79:37" pos:end="79:52"><expr pos:start="79:37" pos:end="79:52"><name pos:start="79:37" pos:end="79:52"><name pos:start="79:37" pos:end="79:38">vs</name><operator pos:start="79:39" pos:end="79:40">-&gt;</operator><name pos:start="79:41" pos:end="79:45">tight</name><operator pos:start="79:46" pos:end="79:46">.</operator><name pos:start="79:47" pos:end="79:52">buffer</name></name></expr></argument>, <argument pos:start="79:55" pos:end="79:59"><expr pos:start="79:55" pos:end="79:59"><name pos:start="79:55" pos:end="79:55">w</name> <operator pos:start="79:57" pos:end="79:57">*</operator> <name pos:start="79:59" pos:end="79:59">h</name></expr></argument>, <argument pos:start="79:62" pos:end="79:68"><expr pos:start="79:62" pos:end="79:68"><name pos:start="79:62" pos:end="79:68">palette</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    </block_content>}</block>

    <default pos:start="85:5" pos:end="85:12">default:</default>

        <return pos:start="87:9" pos:end="87:18">return <expr pos:start="87:16" pos:end="87:17"><operator pos:start="87:16" pos:end="87:16">-</operator><literal type="number" pos:start="87:17" pos:end="87:17">1</literal></expr>;</return> <comment type="block" pos:start="87:20" pos:end="87:52">/* No palette for 8bits colors */</comment>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="93:5" pos:end="93:18"><expr pos:start="93:5" pos:end="93:17"><name pos:start="93:5" pos:end="93:9">bytes</name> <operator pos:start="93:11" pos:end="93:11">=</operator> <name pos:start="93:13" pos:end="93:13">w</name> <operator pos:start="93:15" pos:end="93:15">*</operator> <name pos:start="93:17" pos:end="93:17">h</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:29"><expr pos:start="95:5" pos:end="95:28"><name pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:6">vs</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:13">tight</name><operator pos:start="95:14" pos:end="95:14">.</operator><name pos:start="95:15" pos:end="95:20">offset</name></name> <operator pos:start="95:22" pos:end="95:22">=</operator> <name pos:start="95:24" pos:end="95:28">bytes</name></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="101:59"><expr pos:start="99:5" pos:end="101:58"><name pos:start="99:5" pos:end="99:9">bytes</name> <operator pos:start="99:11" pos:end="99:11">=</operator> <call pos:start="99:13" pos:end="101:58"><name pos:start="99:13" pos:end="99:31">tight_compress_data</name><argument_list pos:start="99:32" pos:end="101:58">(<argument pos:start="99:33" pos:end="99:34"><expr pos:start="99:33" pos:end="99:34"><name pos:start="99:33" pos:end="99:34">vs</name></expr></argument>, <argument pos:start="99:37" pos:end="99:42"><expr pos:start="99:37" pos:end="99:42"><name pos:start="99:37" pos:end="99:42">stream</name></expr></argument>, <argument pos:start="99:45" pos:end="99:49"><expr pos:start="99:45" pos:end="99:49"><name pos:start="99:45" pos:end="99:49">bytes</name></expr></argument>,

                                <argument pos:start="101:33" pos:end="101:37"><expr pos:start="101:33" pos:end="101:37"><name pos:start="101:33" pos:end="101:37">level</name></expr></argument>, <argument pos:start="101:40" pos:end="101:57"><expr pos:start="101:40" pos:end="101:57"><name pos:start="101:40" pos:end="101:57">Z_DEFAULT_STRATEGY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="103:5" pos:end="103:24">return <expr pos:start="103:12" pos:end="103:23"><operator pos:start="103:12" pos:end="103:12">(</operator><name pos:start="103:13" pos:end="103:17">bytes</name> <operator pos:start="103:19" pos:end="103:20">&gt;=</operator> <literal type="number" pos:start="103:22" pos:end="103:22">0</literal><operator pos:start="103:23" pos:end="103:23">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
