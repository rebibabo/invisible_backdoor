<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1911.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">win_chr_readfile</name><parameter_list pos:start="1:29" pos:end="1:50">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">CharDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">chr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">WinCharState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:33">= <expr pos:start="5:23" pos:end="5:33"><name pos:start="5:23" pos:end="5:33"><name pos:start="5:23" pos:end="5:25">chr</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:21"><name pos:start="9:13" pos:end="9:15">buf</name><index pos:start="9:16" pos:end="9:21">[<expr pos:start="9:17" pos:end="9:20"><literal type="number" pos:start="9:17" pos:end="9:20">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">DWORD</name></type> <name pos:start="11:11" pos:end="11:14">size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:44"><expr pos:start="15:5" pos:end="15:43"><call pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:14">ZeroMemory</name><argument_list pos:start="15:15" pos:end="15:43">(<argument pos:start="15:16" pos:end="15:24"><expr pos:start="15:16" pos:end="15:24"><operator pos:start="15:16" pos:end="15:16">&amp;</operator><name pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:24">orecv</name></name></expr></argument>, <argument pos:start="15:27" pos:end="15:42"><expr pos:start="15:27" pos:end="15:42"><sizeof pos:start="15:27" pos:end="15:42">sizeof<argument_list pos:start="15:33" pos:end="15:42">(<argument pos:start="15:34" pos:end="15:41"><expr pos:start="15:34" pos:end="15:41"><name pos:start="15:34" pos:end="15:41"><name pos:start="15:34" pos:end="15:34">s</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:41">orecv</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:12">orecv</name><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:19">hEvent</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:30"><name pos:start="17:23" pos:end="17:23">s</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:30">hrecv</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:59"><expr pos:start="19:5" pos:end="19:58"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:58"><name pos:start="19:11" pos:end="19:18">ReadFile</name><argument_list pos:start="19:19" pos:end="19:58">(<argument pos:start="19:20" pos:end="19:26"><expr pos:start="19:20" pos:end="19:26"><name pos:start="19:20" pos:end="19:26"><name pos:start="19:20" pos:end="19:20">s</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:26">hcom</name></name></expr></argument>, <argument pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:31">buf</name></expr></argument>, <argument pos:start="19:34" pos:end="19:39"><expr pos:start="19:34" pos:end="19:39"><name pos:start="19:34" pos:end="19:39"><name pos:start="19:34" pos:end="19:34">s</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:39">len</name></name></expr></argument>, <argument pos:start="19:42" pos:end="19:46"><expr pos:start="19:42" pos:end="19:46"><operator pos:start="19:42" pos:end="19:42">&amp;</operator><name pos:start="19:43" pos:end="19:46">size</name></expr></argument>, <argument pos:start="19:49" pos:end="19:57"><expr pos:start="19:49" pos:end="19:57"><operator pos:start="19:49" pos:end="19:49">&amp;</operator><name pos:start="19:50" pos:end="19:57"><name pos:start="19:50" pos:end="19:50">s</name><operator pos:start="19:51" pos:end="19:52">-&gt;</operator><name pos:start="19:53" pos:end="19:57">orecv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:13">(<expr pos:start="21:9" pos:end="21:12"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:12">ret</name></expr>)</condition> <block pos:start="21:15" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:9">

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:11">err</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:28"><name pos:start="23:15" pos:end="23:26">GetLastError</name><argument_list pos:start="23:27" pos:end="23:28">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:36">(<expr pos:start="25:13" pos:end="25:35"><name pos:start="25:13" pos:end="25:15">err</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <name pos:start="25:20" pos:end="25:35">ERROR_IO_PENDING</name></expr>)</condition> <block pos:start="25:38" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:71">

            <expr_stmt pos:start="27:13" pos:end="27:71"><expr pos:start="27:13" pos:end="27:70"><name pos:start="27:13" pos:end="27:15">ret</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:70"><name pos:start="27:19" pos:end="27:37">GetOverlappedResult</name><argument_list pos:start="27:38" pos:end="27:70">(<argument pos:start="27:39" pos:end="27:45"><expr pos:start="27:39" pos:end="27:45"><name pos:start="27:39" pos:end="27:45"><name pos:start="27:39" pos:end="27:39">s</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:45">hcom</name></name></expr></argument>, <argument pos:start="27:48" pos:end="27:56"><expr pos:start="27:48" pos:end="27:56"><operator pos:start="27:48" pos:end="27:48">&amp;</operator><name pos:start="27:49" pos:end="27:56"><name pos:start="27:49" pos:end="27:49">s</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:56">orecv</name></name></expr></argument>, <argument pos:start="27:59" pos:end="27:63"><expr pos:start="27:59" pos:end="27:63"><operator pos:start="27:59" pos:end="27:59">&amp;</operator><name pos:start="27:60" pos:end="27:63">size</name></expr></argument>, <argument pos:start="27:66" pos:end="27:69"><expr pos:start="27:66" pos:end="27:69"><name pos:start="27:66" pos:end="27:69">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:17">(<expr pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:12">size</name> <operator pos:start="35:14" pos:end="35:14">&gt;</operator> <literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>)</condition> <block pos:start="35:19" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:38">

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><call pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:21">qemu_chr_read</name><argument_list pos:start="37:22" pos:end="37:37">(<argument pos:start="37:23" pos:end="37:25"><expr pos:start="37:23" pos:end="37:25"><name pos:start="37:23" pos:end="37:25">chr</name></expr></argument>, <argument pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><name pos:start="37:28" pos:end="37:30">buf</name></expr></argument>, <argument pos:start="37:33" pos:end="37:36"><expr pos:start="37:33" pos:end="37:36"><name pos:start="37:33" pos:end="37:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
