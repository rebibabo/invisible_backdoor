<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24470.c" pos:tabs="8"><function pos:start="1:1" pos:end="429:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:22">abi_long</name></type> <name pos:start="1:24" pos:end="1:42">host_to_target_cmsg</name><parameter_list pos:start="1:43" pos:end="3:63">(<parameter pos:start="1:44" pos:end="1:76"><decl pos:start="1:44" pos:end="1:76"><type pos:start="1:44" pos:end="1:76"><name pos:start="1:44" pos:end="1:63"><name pos:start="1:44" pos:end="1:49">struct</name> <name pos:start="1:51" pos:end="1:63">target_msghdr</name></name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:76">target_msgh</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:62"><decl pos:start="3:44" pos:end="3:62"><type pos:start="3:44" pos:end="3:62"><name pos:start="3:44" pos:end="3:56"><name pos:start="3:44" pos:end="3:49">struct</name> <name pos:start="3:51" pos:end="3:56">msghdr</name></name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:62">msgh</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="429:1">{<block_content pos:start="7:5" pos:end="427:13">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:18">cmsghdr</name></name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">cmsg</name> <init pos:start="7:26" pos:end="7:46">= <expr pos:start="7:28" pos:end="7:46"><call pos:start="7:28" pos:end="7:46"><name pos:start="7:28" pos:end="7:40">CMSG_FIRSTHDR</name><argument_list pos:start="7:41" pos:end="7:46">(<argument pos:start="7:42" pos:end="7:45"><expr pos:start="7:42" pos:end="7:45"><name pos:start="7:42" pos:end="7:45">msgh</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">abi_long</name></type> <name pos:start="9:14" pos:end="9:27">msg_controllen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">abi_ulong</name></type> <name pos:start="11:15" pos:end="11:30">target_cmsg_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:25">target_cmsghdr</name></name> <modifier pos:start="13:27" pos:end="13:27">*</modifier></type><name pos:start="13:28" pos:end="13:38">target_cmsg</name></decl>, <decl pos:start="13:41" pos:end="13:58"><type ref="prev" pos:start="13:5" pos:end="13:27"><modifier pos:start="13:41" pos:end="13:41">*</modifier></type><name pos:start="13:42" pos:end="13:58">target_cmsg_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:13">socklen_t</name></type> <name pos:start="15:15" pos:end="15:19">space</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:58"><expr pos:start="19:5" pos:end="19:57"><name pos:start="19:5" pos:end="19:18">msg_controllen</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <call pos:start="19:22" pos:end="19:57"><name pos:start="19:22" pos:end="19:28">tswapal</name><argument_list pos:start="19:29" pos:end="19:57">(<argument pos:start="19:30" pos:end="19:56"><expr pos:start="19:30" pos:end="19:56"><name pos:start="19:30" pos:end="19:56"><name pos:start="19:30" pos:end="19:40">target_msgh</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:56">msg_controllen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:21"><if pos:start="21:5" pos:end="23:21">if <condition pos:start="21:8" pos:end="21:56">(<expr pos:start="21:9" pos:end="21:55"><name pos:start="21:9" pos:end="21:22">msg_controllen</name> <operator pos:start="21:24" pos:end="21:24">&lt;</operator> <sizeof pos:start="21:26" pos:end="21:55">sizeof <argument_list pos:start="21:33" pos:end="21:55">(<argument pos:start="21:34" pos:end="21:54"><expr pos:start="21:34" pos:end="21:54">struct <name pos:start="21:41" pos:end="21:54">target_cmsghdr</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:21"><block_content pos:start="23:9" pos:end="23:21"> 

        <goto pos:start="23:9" pos:end="23:21">goto <name pos:start="23:14" pos:end="23:20">the_end</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:57"><expr pos:start="25:5" pos:end="25:56"><name pos:start="25:5" pos:end="25:20">target_cmsg_addr</name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:56"><name pos:start="25:24" pos:end="25:30">tswapal</name><argument_list pos:start="25:31" pos:end="25:56">(<argument pos:start="25:32" pos:end="25:55"><expr pos:start="25:32" pos:end="25:55"><name pos:start="25:32" pos:end="25:55"><name pos:start="25:32" pos:end="25:42">target_msgh</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:55">msg_control</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:79"><expr pos:start="27:5" pos:end="27:78"><name pos:start="27:5" pos:end="27:15">target_cmsg</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:78"><name pos:start="27:19" pos:end="27:27">lock_user</name><argument_list pos:start="27:28" pos:end="27:78">(<argument pos:start="27:29" pos:end="27:40"><expr pos:start="27:29" pos:end="27:40"><name pos:start="27:29" pos:end="27:40">VERIFY_WRITE</name></expr></argument>, <argument pos:start="27:43" pos:end="27:58"><expr pos:start="27:43" pos:end="27:58"><name pos:start="27:43" pos:end="27:58">target_cmsg_addr</name></expr></argument>, <argument pos:start="27:61" pos:end="27:74"><expr pos:start="27:61" pos:end="27:74"><name pos:start="27:61" pos:end="27:74">msg_controllen</name></expr></argument>, <argument pos:start="27:77" pos:end="27:77"><expr pos:start="27:77" pos:end="27:77"><literal type="number" pos:start="27:77" pos:end="27:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:21">target_cmsg_start</name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:35">target_cmsg</name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="33:30"><if pos:start="31:5" pos:end="33:30">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:20">target_cmsg</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:30"><block_content pos:start="33:9" pos:end="33:30">

        <return pos:start="33:9" pos:end="33:30">return <expr pos:start="33:16" pos:end="33:29"><operator pos:start="33:16" pos:end="33:16">-</operator><name pos:start="33:17" pos:end="33:29">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="37:5" pos:end="419:5">while <condition pos:start="37:11" pos:end="37:31">(<expr pos:start="37:12" pos:end="37:30"><name pos:start="37:12" pos:end="37:15">cmsg</name> <operator pos:start="37:17" pos:end="37:18">&amp;&amp;</operator> <name pos:start="37:20" pos:end="37:30">target_cmsg</name></expr>)</condition> <block pos:start="37:33" pos:end="419:5">{<block_content pos:start="39:9" pos:end="417:60">

        <decl_stmt pos:start="39:9" pos:end="39:37"><decl pos:start="39:9" pos:end="39:36"><type pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:12">void</name> <modifier pos:start="39:14" pos:end="39:14">*</modifier></type><name pos:start="39:15" pos:end="39:18">data</name> <init pos:start="39:20" pos:end="39:36">= <expr pos:start="39:22" pos:end="39:36"><call pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:30">CMSG_DATA</name><argument_list pos:start="39:31" pos:end="39:36">(<argument pos:start="39:32" pos:end="39:35"><expr pos:start="39:32" pos:end="39:35"><name pos:start="39:32" pos:end="39:35">cmsg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:58"><decl pos:start="41:9" pos:end="41:57"><type pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:12">void</name> <modifier pos:start="41:14" pos:end="41:14">*</modifier></type><name pos:start="41:15" pos:end="41:25">target_data</name> <init pos:start="41:27" pos:end="41:57">= <expr pos:start="41:29" pos:end="41:57"><call pos:start="41:29" pos:end="41:57"><name pos:start="41:29" pos:end="41:44">TARGET_CMSG_DATA</name><argument_list pos:start="41:45" pos:end="41:57">(<argument pos:start="41:46" pos:end="41:56"><expr pos:start="41:46" pos:end="41:56"><name pos:start="41:46" pos:end="41:56">target_cmsg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <decl_stmt pos:start="45:9" pos:end="45:71"><decl pos:start="45:9" pos:end="45:70"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:15">len</name> <init pos:start="45:17" pos:end="45:70">= <expr pos:start="45:19" pos:end="45:70"><name pos:start="45:19" pos:end="45:32"><name pos:start="45:19" pos:end="45:22">cmsg</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:32">cmsg_len</name></name> <operator pos:start="45:34" pos:end="45:34">-</operator> <call pos:start="45:36" pos:end="45:70"><name pos:start="45:36" pos:end="45:45">CMSG_ALIGN</name><argument_list pos:start="45:46" pos:end="45:70">(<argument pos:start="45:47" pos:end="45:69"><expr pos:start="45:47" pos:end="45:69"><sizeof pos:start="45:47" pos:end="45:69">sizeof <argument_list pos:start="45:54" pos:end="45:69">(<argument pos:start="45:55" pos:end="45:68"><expr pos:start="45:55" pos:end="45:68">struct <name pos:start="45:62" pos:end="45:68">cmsghdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:31"><decl pos:start="47:9" pos:end="47:19"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:19">tgt_len</name></decl>, <decl pos:start="47:22" pos:end="47:30"><type ref="prev" pos:start="47:9" pos:end="47:11"/><name pos:start="47:22" pos:end="47:30">tgt_space</name></decl>;</decl_stmt>



        <comment type="block" pos:start="51:9" pos:end="61:11">/* We never copy a half-header but may copy half-data;

         * this is Linux's behaviour in put_cmsg(). Note that

         * truncation here is a guest problem (which we report

         * to the guest via the CTRUNC bit), unlike truncation

         * in target_to_host_cmsg, which is a QEMU bug.

         */</comment>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:52">(<expr pos:start="63:13" pos:end="63:51"><name pos:start="63:13" pos:end="63:26">msg_controllen</name> <operator pos:start="63:28" pos:end="63:28">&lt;</operator> <sizeof pos:start="63:30" pos:end="63:51">sizeof<argument_list pos:start="63:36" pos:end="63:51">(<argument pos:start="63:37" pos:end="63:50"><expr pos:start="63:37" pos:end="63:50">struct <name pos:start="63:44" pos:end="63:50">cmsghdr</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="63:54" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:18">

            <expr_stmt pos:start="65:13" pos:end="65:58"><expr pos:start="65:13" pos:end="65:57"><name pos:start="65:13" pos:end="65:34"><name pos:start="65:13" pos:end="65:23">target_msgh</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:34">msg_flags</name></name> <operator pos:start="65:36" pos:end="65:37">|=</operator> <call pos:start="65:39" pos:end="65:57"><name pos:start="65:39" pos:end="65:45">tswap32</name><argument_list pos:start="65:46" pos:end="65:57">(<argument pos:start="65:47" pos:end="65:56"><expr pos:start="65:47" pos:end="65:56"><name pos:start="65:47" pos:end="65:56">MSG_CTRUNC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:43">(<expr pos:start="73:13" pos:end="73:42"><name pos:start="73:13" pos:end="73:28"><name pos:start="73:13" pos:end="73:16">cmsg</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:28">cmsg_level</name></name> <operator pos:start="73:30" pos:end="73:31">==</operator> <name pos:start="73:33" pos:end="73:42">SOL_SOCKET</name></expr>)</condition> <block pos:start="73:45" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:65">

            <expr_stmt pos:start="75:13" pos:end="75:65"><expr pos:start="75:13" pos:end="75:64"><name pos:start="75:13" pos:end="75:35"><name pos:start="75:13" pos:end="75:23">target_cmsg</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:35">cmsg_level</name></name> <operator pos:start="75:37" pos:end="75:37">=</operator> <call pos:start="75:39" pos:end="75:64"><name pos:start="75:39" pos:end="75:45">tswap32</name><argument_list pos:start="75:46" pos:end="75:64">(<argument pos:start="75:47" pos:end="75:63"><expr pos:start="75:47" pos:end="75:63"><name pos:start="75:47" pos:end="75:63">TARGET_SOL_SOCKET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="81:9">else <block pos:start="77:16" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:64">

            <expr_stmt pos:start="79:13" pos:end="79:64"><expr pos:start="79:13" pos:end="79:63"><name pos:start="79:13" pos:end="79:35"><name pos:start="79:13" pos:end="79:23">target_cmsg</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:35">cmsg_level</name></name> <operator pos:start="79:37" pos:end="79:37">=</operator> <call pos:start="79:39" pos:end="79:63"><name pos:start="79:39" pos:end="79:45">tswap32</name><argument_list pos:start="79:46" pos:end="79:63">(<argument pos:start="79:47" pos:end="79:62"><expr pos:start="79:47" pos:end="79:62"><name pos:start="79:47" pos:end="79:62"><name pos:start="79:47" pos:end="79:50">cmsg</name><operator pos:start="79:51" pos:end="79:52">-&gt;</operator><name pos:start="79:53" pos:end="79:62">cmsg_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:58"><expr pos:start="83:9" pos:end="83:57"><name pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:19">target_cmsg</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:30">cmsg_type</name></name> <operator pos:start="83:32" pos:end="83:32">=</operator> <call pos:start="83:34" pos:end="83:57"><name pos:start="83:34" pos:end="83:40">tswap32</name><argument_list pos:start="83:41" pos:end="83:57">(<argument pos:start="83:42" pos:end="83:56"><expr pos:start="83:42" pos:end="83:56"><name pos:start="83:42" pos:end="83:56"><name pos:start="83:42" pos:end="83:45">cmsg</name><operator pos:start="83:46" pos:end="83:47">-&gt;</operator><name pos:start="83:48" pos:end="83:56">cmsg_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:39"><expr pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:15">tgt_len</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:38"><name pos:start="87:19" pos:end="87:33">TARGET_CMSG_LEN</name><argument_list pos:start="87:34" pos:end="87:38">(<argument pos:start="87:35" pos:end="87:37"><expr pos:start="87:35" pos:end="87:37"><name pos:start="87:35" pos:end="87:37">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="91:9" pos:end="95:11">/* Payload types which need a different size of payload on

         * the target must adjust tgt_len here.

         */</comment>

        <switch pos:start="97:9" pos:end="119:9">switch <condition pos:start="97:16" pos:end="97:33">(<expr pos:start="97:17" pos:end="97:32"><name pos:start="97:17" pos:end="97:32"><name pos:start="97:17" pos:end="97:20">cmsg</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:32">cmsg_level</name></name></expr>)</condition> <block pos:start="97:35" pos:end="119:9">{<block_content pos:start="99:9" pos:end="117:18">

        <case pos:start="99:9" pos:end="99:24">case <expr pos:start="99:14" pos:end="99:23"><name pos:start="99:14" pos:end="99:23">SOL_SOCKET</name></expr>:</case>

            <switch pos:start="101:13" pos:end="113:13">switch <condition pos:start="101:20" pos:end="101:36">(<expr pos:start="101:21" pos:end="101:35"><name pos:start="101:21" pos:end="101:35"><name pos:start="101:21" pos:end="101:24">cmsg</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:35">cmsg_type</name></name></expr>)</condition> <block pos:start="101:38" pos:end="113:13">{<block_content pos:start="103:13" pos:end="111:22">

            <case pos:start="103:13" pos:end="103:30">case <expr pos:start="103:18" pos:end="103:29"><name pos:start="103:18" pos:end="103:29">SO_TIMESTAMP</name></expr>:</case>

                <expr_stmt pos:start="105:17" pos:end="105:56"><expr pos:start="105:17" pos:end="105:55"><name pos:start="105:17" pos:end="105:23">tgt_len</name> <operator pos:start="105:25" pos:end="105:25">=</operator> <sizeof pos:start="105:27" pos:end="105:55">sizeof<argument_list pos:start="105:33" pos:end="105:55">(<argument pos:start="105:34" pos:end="105:54"><expr pos:start="105:34" pos:end="105:54">struct <name pos:start="105:41" pos:end="105:54">target_timeval</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

                <break pos:start="107:17" pos:end="107:22">break;</break>

            <default pos:start="109:13" pos:end="109:20">default:</default>

                <break pos:start="111:17" pos:end="111:22">break;</break>

            </block_content>}</block></switch>

        <default pos:start="115:9" pos:end="115:16">default:</default>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:37">(<expr pos:start="123:13" pos:end="123:36"><name pos:start="123:13" pos:end="123:26">msg_controllen</name> <operator pos:start="123:28" pos:end="123:28">&lt;</operator> <name pos:start="123:30" pos:end="123:36">tgt_len</name></expr>)</condition> <block pos:start="123:39" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:37">

            <expr_stmt pos:start="125:13" pos:end="125:58"><expr pos:start="125:13" pos:end="125:57"><name pos:start="125:13" pos:end="125:34"><name pos:start="125:13" pos:end="125:23">target_msgh</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:34">msg_flags</name></name> <operator pos:start="125:36" pos:end="125:37">|=</operator> <call pos:start="125:39" pos:end="125:57"><name pos:start="125:39" pos:end="125:45">tswap32</name><argument_list pos:start="125:46" pos:end="125:57">(<argument pos:start="125:47" pos:end="125:56"><expr pos:start="125:47" pos:end="125:56"><name pos:start="125:47" pos:end="125:56">MSG_CTRUNC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:37"><expr pos:start="127:13" pos:end="127:36"><name pos:start="127:13" pos:end="127:19">tgt_len</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <name pos:start="127:23" pos:end="127:36">msg_controllen</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="133:9" pos:end="141:11">/* We must now copy-and-convert len bytes of payload

         * into tgt_len bytes of destination space. Bear in mind

         * that in both source and destination we may be dealing

         * with a truncated value!

         */</comment>

        <switch pos:start="143:9" pos:end="395:9">switch <condition pos:start="143:16" pos:end="143:33">(<expr pos:start="143:17" pos:end="143:32"><name pos:start="143:17" pos:end="143:32"><name pos:start="143:17" pos:end="143:20">cmsg</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:32">cmsg_level</name></name></expr>)</condition> <block pos:start="143:35" pos:end="395:9">{<block_content pos:start="145:9" pos:end="393:13">

        <case pos:start="145:9" pos:end="145:24">case <expr pos:start="145:14" pos:end="145:23"><name pos:start="145:14" pos:end="145:23">SOL_SOCKET</name></expr>:</case>

            <switch pos:start="147:13" pos:end="229:13">switch <condition pos:start="147:20" pos:end="147:36">(<expr pos:start="147:21" pos:end="147:35"><name pos:start="147:21" pos:end="147:35"><name pos:start="147:21" pos:end="147:24">cmsg</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:35">cmsg_type</name></name></expr>)</condition> <block pos:start="147:38" pos:end="229:13">{<block_content pos:start="149:13" pos:end="227:35">

            <case pos:start="149:13" pos:end="149:28">case <expr pos:start="149:18" pos:end="149:27"><name pos:start="149:18" pos:end="149:27">SCM_RIGHTS</name></expr>:</case>

            <block pos:start="151:13" pos:end="169:13">{<block_content pos:start="153:17" pos:end="167:22">

                <decl_stmt pos:start="153:17" pos:end="153:38"><decl pos:start="153:17" pos:end="153:37"><type pos:start="153:17" pos:end="153:21"><name pos:start="153:17" pos:end="153:19">int</name> <modifier pos:start="153:21" pos:end="153:21">*</modifier></type><name pos:start="153:22" pos:end="153:23">fd</name> <init pos:start="153:25" pos:end="153:37">= <expr pos:start="153:27" pos:end="153:37"><operator pos:start="153:27" pos:end="153:27">(</operator><name pos:start="153:28" pos:end="153:30">int</name> <operator pos:start="153:32" pos:end="153:32">*</operator><operator pos:start="153:33" pos:end="153:33">)</operator><name pos:start="153:34" pos:end="153:37">data</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="155:17" pos:end="155:52"><decl pos:start="155:17" pos:end="155:51"><type pos:start="155:17" pos:end="155:21"><name pos:start="155:17" pos:end="155:19">int</name> <modifier pos:start="155:21" pos:end="155:21">*</modifier></type><name pos:start="155:22" pos:end="155:30">target_fd</name> <init pos:start="155:32" pos:end="155:51">= <expr pos:start="155:34" pos:end="155:51"><operator pos:start="155:34" pos:end="155:34">(</operator><name pos:start="155:35" pos:end="155:37">int</name> <operator pos:start="155:39" pos:end="155:39">*</operator><operator pos:start="155:40" pos:end="155:40">)</operator><name pos:start="155:41" pos:end="155:51">target_data</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="157:17" pos:end="157:54"><decl pos:start="157:17" pos:end="157:21"><type pos:start="157:17" pos:end="157:19"><name pos:start="157:17" pos:end="157:19">int</name></type> <name pos:start="157:21" pos:end="157:21">i</name></decl>, <decl pos:start="157:24" pos:end="157:53"><type ref="prev" pos:start="157:17" pos:end="157:19"/><name pos:start="157:24" pos:end="157:29">numfds</name> <init pos:start="157:31" pos:end="157:53">= <expr pos:start="157:33" pos:end="157:53"><name pos:start="157:33" pos:end="157:39">tgt_len</name> <operator pos:start="157:41" pos:end="157:41">/</operator> <sizeof pos:start="157:43" pos:end="157:53">sizeof<argument_list pos:start="157:49" pos:end="157:53">(<argument pos:start="157:50" pos:end="157:52"><expr pos:start="157:50" pos:end="157:52"><name pos:start="157:50" pos:end="157:52">int</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



                <for pos:start="161:17" pos:end="165:17">for <control pos:start="161:21" pos:end="161:44">(<init pos:start="161:22" pos:end="161:27"><expr pos:start="161:22" pos:end="161:26"><name pos:start="161:22" pos:end="161:22">i</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <literal type="number" pos:start="161:26" pos:end="161:26">0</literal></expr>;</init> <condition pos:start="161:29" pos:end="161:39"><expr pos:start="161:29" pos:end="161:38"><name pos:start="161:29" pos:end="161:29">i</name> <operator pos:start="161:31" pos:end="161:31">&lt;</operator> <name pos:start="161:33" pos:end="161:38">numfds</name></expr>;</condition> <incr pos:start="161:41" pos:end="161:43"><expr pos:start="161:41" pos:end="161:43"><name pos:start="161:41" pos:end="161:41">i</name><operator pos:start="161:42" pos:end="161:43">++</operator></expr></incr>)</control> <block pos:start="161:46" pos:end="165:17">{<block_content pos:start="163:21" pos:end="163:53">

                    <expr_stmt pos:start="163:21" pos:end="163:53"><expr pos:start="163:21" pos:end="163:52"><call pos:start="163:21" pos:end="163:52"><name pos:start="163:21" pos:end="163:30">__put_user</name><argument_list pos:start="163:31" pos:end="163:52">(<argument pos:start="163:32" pos:end="163:36"><expr pos:start="163:32" pos:end="163:36"><name pos:start="163:32" pos:end="163:36"><name pos:start="163:32" pos:end="163:33">fd</name><index pos:start="163:34" pos:end="163:36">[<expr pos:start="163:35" pos:end="163:35"><name pos:start="163:35" pos:end="163:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="163:39" pos:end="163:51"><expr pos:start="163:39" pos:end="163:51"><name pos:start="163:39" pos:end="163:47">target_fd</name> <operator pos:start="163:49" pos:end="163:49">+</operator> <name pos:start="163:51" pos:end="163:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <break pos:start="167:17" pos:end="167:22">break;</break>

            </block_content>}</block>

            <case pos:start="171:13" pos:end="171:30">case <expr pos:start="171:18" pos:end="171:29"><name pos:start="171:18" pos:end="171:29">SO_TIMESTAMP</name></expr>:</case>

            <block pos:start="173:13" pos:end="201:13">{<block_content pos:start="175:17" pos:end="199:22">

                <decl_stmt pos:start="175:17" pos:end="175:60"><decl pos:start="175:17" pos:end="175:59"><type pos:start="175:17" pos:end="175:32"><name pos:start="175:17" pos:end="175:30"><name pos:start="175:17" pos:end="175:22">struct</name> <name pos:start="175:24" pos:end="175:30">timeval</name></name> <modifier pos:start="175:32" pos:end="175:32">*</modifier></type><name pos:start="175:33" pos:end="175:34">tv</name> <init pos:start="175:36" pos:end="175:59">= <expr pos:start="175:38" pos:end="175:59"><operator pos:start="175:38" pos:end="175:38">(</operator>struct <name pos:start="175:46" pos:end="175:52">timeval</name> <operator pos:start="175:54" pos:end="175:54">*</operator><operator pos:start="175:55" pos:end="175:55">)</operator><name pos:start="175:56" pos:end="175:59">data</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="177:17" pos:end="179:57"><decl pos:start="177:17" pos:end="179:56"><type pos:start="177:17" pos:end="177:39"><name pos:start="177:17" pos:end="177:37"><name pos:start="177:17" pos:end="177:22">struct</name> <name pos:start="177:24" pos:end="177:37">target_timeval</name></name> <modifier pos:start="177:39" pos:end="177:39">*</modifier></type><name pos:start="177:40" pos:end="177:48">target_tv</name> <init pos:start="177:50" pos:end="179:56">=

                    <expr pos:start="179:21" pos:end="179:56"><operator pos:start="179:21" pos:end="179:21">(</operator>struct <name pos:start="179:29" pos:end="179:42">target_timeval</name> <operator pos:start="179:44" pos:end="179:44">*</operator><operator pos:start="179:45" pos:end="179:45">)</operator><name pos:start="179:46" pos:end="179:56">target_data</name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="183:17" pos:end="189:17"><if pos:start="183:17" pos:end="189:17">if <condition pos:start="183:20" pos:end="185:61">(<expr pos:start="183:21" pos:end="185:60"><name pos:start="183:21" pos:end="183:23">len</name> <operator pos:start="183:25" pos:end="183:26">!=</operator> <sizeof pos:start="183:28" pos:end="183:49">sizeof<argument_list pos:start="183:34" pos:end="183:49">(<argument pos:start="183:35" pos:end="183:48"><expr pos:start="183:35" pos:end="183:48">struct <name pos:start="183:42" pos:end="183:48">timeval</name></expr></argument>)</argument_list></sizeof> <operator pos:start="183:51" pos:end="183:52">||</operator>

                    <name pos:start="185:21" pos:end="185:27">tgt_len</name> <operator pos:start="185:29" pos:end="185:30">!=</operator> <sizeof pos:start="185:32" pos:end="185:60">sizeof<argument_list pos:start="185:38" pos:end="185:60">(<argument pos:start="185:39" pos:end="185:59"><expr pos:start="185:39" pos:end="185:59">struct <name pos:start="185:46" pos:end="185:59">target_timeval</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="185:63" pos:end="189:17">{<block_content pos:start="187:21" pos:end="187:39">

                    <goto pos:start="187:21" pos:end="187:39">goto <name pos:start="187:26" pos:end="187:38">unimplemented</name>;</goto>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="193:17" pos:end="193:51">/* copy struct timeval to target */</comment>

                <expr_stmt pos:start="195:17" pos:end="195:59"><expr pos:start="195:17" pos:end="195:58"><call pos:start="195:17" pos:end="195:58"><name pos:start="195:17" pos:end="195:26">__put_user</name><argument_list pos:start="195:27" pos:end="195:58">(<argument pos:start="195:28" pos:end="195:37"><expr pos:start="195:28" pos:end="195:37"><name pos:start="195:28" pos:end="195:37"><name pos:start="195:28" pos:end="195:29">tv</name><operator pos:start="195:30" pos:end="195:31">-&gt;</operator><name pos:start="195:32" pos:end="195:37">tv_sec</name></name></expr></argument>, <argument pos:start="195:40" pos:end="195:57"><expr pos:start="195:40" pos:end="195:57"><operator pos:start="195:40" pos:end="195:40">&amp;</operator><name pos:start="195:41" pos:end="195:57"><name pos:start="195:41" pos:end="195:49">target_tv</name><operator pos:start="195:50" pos:end="195:51">-&gt;</operator><name pos:start="195:52" pos:end="195:57">tv_sec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:61"><expr pos:start="197:17" pos:end="197:60"><call pos:start="197:17" pos:end="197:60"><name pos:start="197:17" pos:end="197:26">__put_user</name><argument_list pos:start="197:27" pos:end="197:60">(<argument pos:start="197:28" pos:end="197:38"><expr pos:start="197:28" pos:end="197:38"><name pos:start="197:28" pos:end="197:38"><name pos:start="197:28" pos:end="197:29">tv</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:38">tv_usec</name></name></expr></argument>, <argument pos:start="197:41" pos:end="197:59"><expr pos:start="197:41" pos:end="197:59"><operator pos:start="197:41" pos:end="197:41">&amp;</operator><name pos:start="197:42" pos:end="197:59"><name pos:start="197:42" pos:end="197:50">target_tv</name><operator pos:start="197:51" pos:end="197:52">-&gt;</operator><name pos:start="197:53" pos:end="197:59">tv_usec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="199:17" pos:end="199:22">break;</break>

            </block_content>}</block>

            <case pos:start="203:13" pos:end="203:33">case <expr pos:start="203:18" pos:end="203:32"><name pos:start="203:18" pos:end="203:32">SCM_CREDENTIALS</name></expr>:</case>

            <block pos:start="205:13" pos:end="223:13">{<block_content pos:start="207:17" pos:end="221:22">

                <decl_stmt pos:start="207:17" pos:end="207:58"><decl pos:start="207:17" pos:end="207:57"><type pos:start="207:17" pos:end="207:30"><name pos:start="207:17" pos:end="207:28"><name pos:start="207:17" pos:end="207:22">struct</name> <name pos:start="207:24" pos:end="207:28">ucred</name></name> <modifier pos:start="207:30" pos:end="207:30">*</modifier></type><name pos:start="207:31" pos:end="207:34">cred</name> <init pos:start="207:36" pos:end="207:57">= <expr pos:start="207:38" pos:end="207:57"><operator pos:start="207:38" pos:end="207:38">(</operator>struct <name pos:start="207:46" pos:end="207:50">ucred</name> <operator pos:start="207:52" pos:end="207:52">*</operator><operator pos:start="207:53" pos:end="207:53">)</operator><name pos:start="207:54" pos:end="207:57">data</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="209:17" pos:end="211:55"><decl pos:start="209:17" pos:end="211:54"><type pos:start="209:17" pos:end="209:37"><name pos:start="209:17" pos:end="209:35"><name pos:start="209:17" pos:end="209:22">struct</name> <name pos:start="209:24" pos:end="209:35">target_ucred</name></name> <modifier pos:start="209:37" pos:end="209:37">*</modifier></type><name pos:start="209:38" pos:end="209:48">target_cred</name> <init pos:start="209:50" pos:end="211:54">=

                    <expr pos:start="211:21" pos:end="211:54"><operator pos:start="211:21" pos:end="211:21">(</operator>struct <name pos:start="211:29" pos:end="211:40">target_ucred</name> <operator pos:start="211:42" pos:end="211:42">*</operator><operator pos:start="211:43" pos:end="211:43">)</operator><name pos:start="211:44" pos:end="211:54">target_data</name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="215:17" pos:end="215:57"><expr pos:start="215:17" pos:end="215:56"><call pos:start="215:17" pos:end="215:56"><name pos:start="215:17" pos:end="215:26">__put_user</name><argument_list pos:start="215:27" pos:end="215:56">(<argument pos:start="215:28" pos:end="215:36"><expr pos:start="215:28" pos:end="215:36"><name pos:start="215:28" pos:end="215:36"><name pos:start="215:28" pos:end="215:31">cred</name><operator pos:start="215:32" pos:end="215:33">-&gt;</operator><name pos:start="215:34" pos:end="215:36">pid</name></name></expr></argument>, <argument pos:start="215:39" pos:end="215:55"><expr pos:start="215:39" pos:end="215:55"><operator pos:start="215:39" pos:end="215:39">&amp;</operator><name pos:start="215:40" pos:end="215:55"><name pos:start="215:40" pos:end="215:50">target_cred</name><operator pos:start="215:51" pos:end="215:52">-&gt;</operator><name pos:start="215:53" pos:end="215:55">pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:57"><expr pos:start="217:17" pos:end="217:56"><call pos:start="217:17" pos:end="217:56"><name pos:start="217:17" pos:end="217:26">__put_user</name><argument_list pos:start="217:27" pos:end="217:56">(<argument pos:start="217:28" pos:end="217:36"><expr pos:start="217:28" pos:end="217:36"><name pos:start="217:28" pos:end="217:36"><name pos:start="217:28" pos:end="217:31">cred</name><operator pos:start="217:32" pos:end="217:33">-&gt;</operator><name pos:start="217:34" pos:end="217:36">uid</name></name></expr></argument>, <argument pos:start="217:39" pos:end="217:55"><expr pos:start="217:39" pos:end="217:55"><operator pos:start="217:39" pos:end="217:39">&amp;</operator><name pos:start="217:40" pos:end="217:55"><name pos:start="217:40" pos:end="217:50">target_cred</name><operator pos:start="217:51" pos:end="217:52">-&gt;</operator><name pos:start="217:53" pos:end="217:55">uid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:57"><expr pos:start="219:17" pos:end="219:56"><call pos:start="219:17" pos:end="219:56"><name pos:start="219:17" pos:end="219:26">__put_user</name><argument_list pos:start="219:27" pos:end="219:56">(<argument pos:start="219:28" pos:end="219:36"><expr pos:start="219:28" pos:end="219:36"><name pos:start="219:28" pos:end="219:36"><name pos:start="219:28" pos:end="219:31">cred</name><operator pos:start="219:32" pos:end="219:33">-&gt;</operator><name pos:start="219:34" pos:end="219:36">gid</name></name></expr></argument>, <argument pos:start="219:39" pos:end="219:55"><expr pos:start="219:39" pos:end="219:55"><operator pos:start="219:39" pos:end="219:39">&amp;</operator><name pos:start="219:40" pos:end="219:55"><name pos:start="219:40" pos:end="219:50">target_cred</name><operator pos:start="219:51" pos:end="219:52">-&gt;</operator><name pos:start="219:53" pos:end="219:55">gid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="221:17" pos:end="221:22">break;</break>

            </block_content>}</block>

            <default pos:start="225:13" pos:end="225:20">default:</default>

                <goto pos:start="227:17" pos:end="227:35">goto <name pos:start="227:22" pos:end="227:34">unimplemented</name>;</goto>

            </block_content>}</block></switch>

            <break pos:start="231:13" pos:end="231:18">break;</break>



        <case pos:start="235:9" pos:end="235:20">case <expr pos:start="235:14" pos:end="235:19"><name pos:start="235:14" pos:end="235:19">SOL_IP</name></expr>:</case>

            <switch pos:start="237:13" pos:end="301:13">switch <condition pos:start="237:20" pos:end="237:36">(<expr pos:start="237:21" pos:end="237:35"><name pos:start="237:21" pos:end="237:35"><name pos:start="237:21" pos:end="237:24">cmsg</name><operator pos:start="237:25" pos:end="237:26">-&gt;</operator><name pos:start="237:27" pos:end="237:35">cmsg_type</name></name></expr>)</condition> <block pos:start="237:38" pos:end="301:13">{<block_content pos:start="239:13" pos:end="299:35">

            <case pos:start="239:13" pos:end="239:24">case <expr pos:start="239:18" pos:end="239:23"><name pos:start="239:18" pos:end="239:23">IP_TTL</name></expr>:</case>

            <block pos:start="241:13" pos:end="253:13">{<block_content pos:start="243:17" pos:end="251:22">

                <decl_stmt pos:start="243:17" pos:end="243:47"><decl pos:start="243:17" pos:end="243:46"><type pos:start="243:17" pos:end="243:26"><name pos:start="243:17" pos:end="243:24">uint32_t</name> <modifier pos:start="243:26" pos:end="243:26">*</modifier></type><name pos:start="243:27" pos:end="243:27">v</name> <init pos:start="243:29" pos:end="243:46">= <expr pos:start="243:31" pos:end="243:46"><operator pos:start="243:31" pos:end="243:31">(</operator><name pos:start="243:32" pos:end="243:39">uint32_t</name> <operator pos:start="243:41" pos:end="243:41">*</operator><operator pos:start="243:42" pos:end="243:42">)</operator><name pos:start="243:43" pos:end="243:46">data</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="245:17" pos:end="245:58"><decl pos:start="245:17" pos:end="245:57"><type pos:start="245:17" pos:end="245:26"><name pos:start="245:17" pos:end="245:24">uint32_t</name> <modifier pos:start="245:26" pos:end="245:26">*</modifier></type><name pos:start="245:27" pos:end="245:31">t_int</name> <init pos:start="245:33" pos:end="245:57">= <expr pos:start="245:35" pos:end="245:57"><operator pos:start="245:35" pos:end="245:35">(</operator><name pos:start="245:36" pos:end="245:43">uint32_t</name> <operator pos:start="245:45" pos:end="245:45">*</operator><operator pos:start="245:46" pos:end="245:46">)</operator><name pos:start="245:47" pos:end="245:57">target_data</name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="249:17" pos:end="249:38"><expr pos:start="249:17" pos:end="249:37"><call pos:start="249:17" pos:end="249:37"><name pos:start="249:17" pos:end="249:26">__put_user</name><argument_list pos:start="249:27" pos:end="249:37">(<argument pos:start="249:28" pos:end="249:29"><expr pos:start="249:28" pos:end="249:29"><operator pos:start="249:28" pos:end="249:28">*</operator><name pos:start="249:29" pos:end="249:29">v</name></expr></argument>, <argument pos:start="249:32" pos:end="249:36"><expr pos:start="249:32" pos:end="249:36"><name pos:start="249:32" pos:end="249:36">t_int</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="251:17" pos:end="251:22">break;</break>

            </block_content>}</block>

            <case pos:start="255:13" pos:end="255:28">case <expr pos:start="255:18" pos:end="255:27"><name pos:start="255:18" pos:end="255:27">IP_RECVERR</name></expr>:</case>

            <block pos:start="257:13" pos:end="295:13">{<block_content pos:start="259:17" pos:end="293:22">

                <struct pos:start="259:17" pos:end="265:18">struct <name pos:start="259:24" pos:end="259:31">errhdr_t</name> <block pos:start="259:33" pos:end="265:17">{

                   <decl_stmt pos:start="261:20" pos:end="261:47"><decl pos:start="261:20" pos:end="261:46"><type pos:start="261:20" pos:end="261:43"><name pos:start="261:20" pos:end="261:43"><name pos:start="261:20" pos:end="261:25">struct</name> <name pos:start="261:27" pos:end="261:43">sock_extended_err</name></name></type> <name pos:start="261:45" pos:end="261:46">ee</name></decl>;</decl_stmt>

                   <decl_stmt pos:start="263:20" pos:end="263:47"><decl pos:start="263:20" pos:end="263:46"><type pos:start="263:20" pos:end="263:37"><name pos:start="263:20" pos:end="263:37"><name pos:start="263:20" pos:end="263:25">struct</name> <name pos:start="263:27" pos:end="263:37">sockaddr_in</name></name></type> <name pos:start="263:39" pos:end="263:46">offender</name></decl>;</decl_stmt>

                }</block>;</struct>

                <decl_stmt pos:start="267:17" pos:end="267:64"><decl pos:start="267:17" pos:end="267:63"><type pos:start="267:17" pos:end="267:33"><name pos:start="267:17" pos:end="267:31"><name pos:start="267:17" pos:end="267:22">struct</name> <name pos:start="267:24" pos:end="267:31">errhdr_t</name></name> <modifier pos:start="267:33" pos:end="267:33">*</modifier></type><name pos:start="267:34" pos:end="267:37">errh</name> <init pos:start="267:39" pos:end="267:63">= <expr pos:start="267:41" pos:end="267:63"><operator pos:start="267:41" pos:end="267:41">(</operator>struct <name pos:start="267:49" pos:end="267:56">errhdr_t</name> <operator pos:start="267:58" pos:end="267:58">*</operator><operator pos:start="267:59" pos:end="267:59">)</operator><name pos:start="267:60" pos:end="267:63">data</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="269:17" pos:end="271:51"><decl pos:start="269:17" pos:end="271:50"><type pos:start="269:17" pos:end="269:33"><name pos:start="269:17" pos:end="269:31"><name pos:start="269:17" pos:end="269:22">struct</name> <name pos:start="269:24" pos:end="269:31">errhdr_t</name></name> <modifier pos:start="269:33" pos:end="269:33">*</modifier></type><name pos:start="269:34" pos:end="269:44">target_errh</name> <init pos:start="269:46" pos:end="271:50">=

                    <expr pos:start="271:21" pos:end="271:50"><operator pos:start="271:21" pos:end="271:21">(</operator>struct <name pos:start="271:29" pos:end="271:36">errhdr_t</name> <operator pos:start="271:38" pos:end="271:38">*</operator><operator pos:start="271:39" pos:end="271:39">)</operator><name pos:start="271:40" pos:end="271:50">target_data</name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="275:17" pos:end="275:73"><expr pos:start="275:17" pos:end="275:72"><call pos:start="275:17" pos:end="275:72"><name pos:start="275:17" pos:end="275:26">__put_user</name><argument_list pos:start="275:27" pos:end="275:72">(<argument pos:start="275:28" pos:end="275:44"><expr pos:start="275:28" pos:end="275:44"><name pos:start="275:28" pos:end="275:44"><name pos:start="275:28" pos:end="275:31">errh</name><operator pos:start="275:32" pos:end="275:33">-&gt;</operator><name pos:start="275:34" pos:end="275:35">ee</name><operator pos:start="275:36" pos:end="275:36">.</operator><name pos:start="275:37" pos:end="275:44">ee_errno</name></name></expr></argument>, <argument pos:start="275:47" pos:end="275:71"><expr pos:start="275:47" pos:end="275:71"><operator pos:start="275:47" pos:end="275:47">&amp;</operator><name pos:start="275:48" pos:end="275:71"><name pos:start="275:48" pos:end="275:58">target_errh</name><operator pos:start="275:59" pos:end="275:60">-&gt;</operator><name pos:start="275:61" pos:end="275:62">ee</name><operator pos:start="275:63" pos:end="275:63">.</operator><name pos:start="275:64" pos:end="275:71">ee_errno</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="277:17" pos:end="277:75"><expr pos:start="277:17" pos:end="277:74"><call pos:start="277:17" pos:end="277:74"><name pos:start="277:17" pos:end="277:26">__put_user</name><argument_list pos:start="277:27" pos:end="277:74">(<argument pos:start="277:28" pos:end="277:45"><expr pos:start="277:28" pos:end="277:45"><name pos:start="277:28" pos:end="277:45"><name pos:start="277:28" pos:end="277:31">errh</name><operator pos:start="277:32" pos:end="277:33">-&gt;</operator><name pos:start="277:34" pos:end="277:35">ee</name><operator pos:start="277:36" pos:end="277:36">.</operator><name pos:start="277:37" pos:end="277:45">ee_origin</name></name></expr></argument>, <argument pos:start="277:48" pos:end="277:73"><expr pos:start="277:48" pos:end="277:73"><operator pos:start="277:48" pos:end="277:48">&amp;</operator><name pos:start="277:49" pos:end="277:73"><name pos:start="277:49" pos:end="277:59">target_errh</name><operator pos:start="277:60" pos:end="277:61">-&gt;</operator><name pos:start="277:62" pos:end="277:63">ee</name><operator pos:start="277:64" pos:end="277:64">.</operator><name pos:start="277:65" pos:end="277:73">ee_origin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:72"><expr pos:start="279:17" pos:end="279:71"><call pos:start="279:17" pos:end="279:71"><name pos:start="279:17" pos:end="279:26">__put_user</name><argument_list pos:start="279:27" pos:end="279:71">(<argument pos:start="279:28" pos:end="279:43"><expr pos:start="279:28" pos:end="279:43"><name pos:start="279:28" pos:end="279:43"><name pos:start="279:28" pos:end="279:31">errh</name><operator pos:start="279:32" pos:end="279:33">-&gt;</operator><name pos:start="279:34" pos:end="279:35">ee</name><operator pos:start="279:36" pos:end="279:36">.</operator><name pos:start="279:37" pos:end="279:43">ee_type</name></name></expr></argument>,  <argument pos:start="279:47" pos:end="279:70"><expr pos:start="279:47" pos:end="279:70"><operator pos:start="279:47" pos:end="279:47">&amp;</operator><name pos:start="279:48" pos:end="279:70"><name pos:start="279:48" pos:end="279:58">target_errh</name><operator pos:start="279:59" pos:end="279:60">-&gt;</operator><name pos:start="279:61" pos:end="279:62">ee</name><operator pos:start="279:63" pos:end="279:63">.</operator><name pos:start="279:64" pos:end="279:70">ee_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="281:17" pos:end="281:71"><expr pos:start="281:17" pos:end="281:70"><call pos:start="281:17" pos:end="281:70"><name pos:start="281:17" pos:end="281:26">__put_user</name><argument_list pos:start="281:27" pos:end="281:70">(<argument pos:start="281:28" pos:end="281:43"><expr pos:start="281:28" pos:end="281:43"><name pos:start="281:28" pos:end="281:43"><name pos:start="281:28" pos:end="281:31">errh</name><operator pos:start="281:32" pos:end="281:33">-&gt;</operator><name pos:start="281:34" pos:end="281:35">ee</name><operator pos:start="281:36" pos:end="281:36">.</operator><name pos:start="281:37" pos:end="281:43">ee_code</name></name></expr></argument>, <argument pos:start="281:46" pos:end="281:69"><expr pos:start="281:46" pos:end="281:69"><operator pos:start="281:46" pos:end="281:46">&amp;</operator><name pos:start="281:47" pos:end="281:69"><name pos:start="281:47" pos:end="281:57">target_errh</name><operator pos:start="281:58" pos:end="281:59">-&gt;</operator><name pos:start="281:60" pos:end="281:61">ee</name><operator pos:start="281:62" pos:end="281:62">.</operator><name pos:start="281:63" pos:end="281:69">ee_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="283:17" pos:end="283:69"><expr pos:start="283:17" pos:end="283:68"><call pos:start="283:17" pos:end="283:68"><name pos:start="283:17" pos:end="283:26">__put_user</name><argument_list pos:start="283:27" pos:end="283:68">(<argument pos:start="283:28" pos:end="283:42"><expr pos:start="283:28" pos:end="283:42"><name pos:start="283:28" pos:end="283:42"><name pos:start="283:28" pos:end="283:31">errh</name><operator pos:start="283:32" pos:end="283:33">-&gt;</operator><name pos:start="283:34" pos:end="283:35">ee</name><operator pos:start="283:36" pos:end="283:36">.</operator><name pos:start="283:37" pos:end="283:42">ee_pad</name></name></expr></argument>, <argument pos:start="283:45" pos:end="283:67"><expr pos:start="283:45" pos:end="283:67"><operator pos:start="283:45" pos:end="283:45">&amp;</operator><name pos:start="283:46" pos:end="283:67"><name pos:start="283:46" pos:end="283:56">target_errh</name><operator pos:start="283:57" pos:end="283:58">-&gt;</operator><name pos:start="283:59" pos:end="283:60">ee</name><operator pos:start="283:61" pos:end="283:61">.</operator><name pos:start="283:62" pos:end="283:67">ee_pad</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="285:17" pos:end="285:71"><expr pos:start="285:17" pos:end="285:70"><call pos:start="285:17" pos:end="285:70"><name pos:start="285:17" pos:end="285:26">__put_user</name><argument_list pos:start="285:27" pos:end="285:70">(<argument pos:start="285:28" pos:end="285:43"><expr pos:start="285:28" pos:end="285:43"><name pos:start="285:28" pos:end="285:43"><name pos:start="285:28" pos:end="285:31">errh</name><operator pos:start="285:32" pos:end="285:33">-&gt;</operator><name pos:start="285:34" pos:end="285:35">ee</name><operator pos:start="285:36" pos:end="285:36">.</operator><name pos:start="285:37" pos:end="285:43">ee_info</name></name></expr></argument>, <argument pos:start="285:46" pos:end="285:69"><expr pos:start="285:46" pos:end="285:69"><operator pos:start="285:46" pos:end="285:46">&amp;</operator><name pos:start="285:47" pos:end="285:69"><name pos:start="285:47" pos:end="285:57">target_errh</name><operator pos:start="285:58" pos:end="285:59">-&gt;</operator><name pos:start="285:60" pos:end="285:61">ee</name><operator pos:start="285:62" pos:end="285:62">.</operator><name pos:start="285:63" pos:end="285:69">ee_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:71"><expr pos:start="287:17" pos:end="287:70"><call pos:start="287:17" pos:end="287:70"><name pos:start="287:17" pos:end="287:26">__put_user</name><argument_list pos:start="287:27" pos:end="287:70">(<argument pos:start="287:28" pos:end="287:43"><expr pos:start="287:28" pos:end="287:43"><name pos:start="287:28" pos:end="287:43"><name pos:start="287:28" pos:end="287:31">errh</name><operator pos:start="287:32" pos:end="287:33">-&gt;</operator><name pos:start="287:34" pos:end="287:35">ee</name><operator pos:start="287:36" pos:end="287:36">.</operator><name pos:start="287:37" pos:end="287:43">ee_data</name></name></expr></argument>, <argument pos:start="287:46" pos:end="287:69"><expr pos:start="287:46" pos:end="287:69"><operator pos:start="287:46" pos:end="287:46">&amp;</operator><name pos:start="287:47" pos:end="287:69"><name pos:start="287:47" pos:end="287:57">target_errh</name><operator pos:start="287:58" pos:end="287:59">-&gt;</operator><name pos:start="287:60" pos:end="287:61">ee</name><operator pos:start="287:62" pos:end="287:62">.</operator><name pos:start="287:63" pos:end="287:69">ee_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="291:70"><expr pos:start="289:17" pos:end="291:69"><call pos:start="289:17" pos:end="291:69"><name pos:start="289:17" pos:end="289:39">host_to_target_sockaddr</name><argument_list pos:start="289:40" pos:end="291:69">(<argument pos:start="289:41" pos:end="289:78"><expr pos:start="289:41" pos:end="289:78"><operator pos:start="289:41" pos:end="289:41">(</operator><name pos:start="289:42" pos:end="289:49">unsigned</name> <name pos:start="289:51" pos:end="289:54">long</name><operator pos:start="289:55" pos:end="289:55">)</operator> <operator pos:start="289:57" pos:end="289:57">&amp;</operator><name pos:start="289:58" pos:end="289:78"><name pos:start="289:58" pos:end="289:68">target_errh</name><operator pos:start="289:69" pos:end="289:70">-&gt;</operator><name pos:start="289:71" pos:end="289:78">offender</name></name></expr></argument>,

                    <argument pos:start="291:21" pos:end="291:44"><expr pos:start="291:21" pos:end="291:44"><operator pos:start="291:21" pos:end="291:21">(</operator><name pos:start="291:22" pos:end="291:25">void</name> <operator pos:start="291:27" pos:end="291:27">*</operator><operator pos:start="291:28" pos:end="291:28">)</operator> <operator pos:start="291:30" pos:end="291:30">&amp;</operator><name pos:start="291:31" pos:end="291:44"><name pos:start="291:31" pos:end="291:34">errh</name><operator pos:start="291:35" pos:end="291:36">-&gt;</operator><name pos:start="291:37" pos:end="291:44">offender</name></name></expr></argument>, <argument pos:start="291:47" pos:end="291:68"><expr pos:start="291:47" pos:end="291:68"><sizeof pos:start="291:47" pos:end="291:68">sizeof<argument_list pos:start="291:53" pos:end="291:68">(<argument pos:start="291:54" pos:end="291:67"><expr pos:start="291:54" pos:end="291:67"><name pos:start="291:54" pos:end="291:67"><name pos:start="291:54" pos:end="291:57">errh</name><operator pos:start="291:58" pos:end="291:59">-&gt;</operator><name pos:start="291:60" pos:end="291:67">offender</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="293:17" pos:end="293:22">break;</break>

            </block_content>}</block>

            <default pos:start="297:13" pos:end="297:20">default:</default>

                <goto pos:start="299:17" pos:end="299:35">goto <name pos:start="299:22" pos:end="299:34">unimplemented</name>;</goto>

            </block_content>}</block></switch>

            <break pos:start="303:13" pos:end="303:18">break;</break>



        <case pos:start="307:9" pos:end="307:22">case <expr pos:start="307:14" pos:end="307:21"><name pos:start="307:14" pos:end="307:21">SOL_IPV6</name></expr>:</case>

            <switch pos:start="309:13" pos:end="373:13">switch <condition pos:start="309:20" pos:end="309:36">(<expr pos:start="309:21" pos:end="309:35"><name pos:start="309:21" pos:end="309:35"><name pos:start="309:21" pos:end="309:24">cmsg</name><operator pos:start="309:25" pos:end="309:26">-&gt;</operator><name pos:start="309:27" pos:end="309:35">cmsg_type</name></name></expr>)</condition> <block pos:start="309:38" pos:end="373:13">{<block_content pos:start="311:13" pos:end="371:35">

            <case pos:start="311:13" pos:end="311:31">case <expr pos:start="311:18" pos:end="311:30"><name pos:start="311:18" pos:end="311:30">IPV6_HOPLIMIT</name></expr>:</case>

            <block pos:start="313:13" pos:end="325:13">{<block_content pos:start="315:17" pos:end="323:22">

                <decl_stmt pos:start="315:17" pos:end="315:47"><decl pos:start="315:17" pos:end="315:46"><type pos:start="315:17" pos:end="315:26"><name pos:start="315:17" pos:end="315:24">uint32_t</name> <modifier pos:start="315:26" pos:end="315:26">*</modifier></type><name pos:start="315:27" pos:end="315:27">v</name> <init pos:start="315:29" pos:end="315:46">= <expr pos:start="315:31" pos:end="315:46"><operator pos:start="315:31" pos:end="315:31">(</operator><name pos:start="315:32" pos:end="315:39">uint32_t</name> <operator pos:start="315:41" pos:end="315:41">*</operator><operator pos:start="315:42" pos:end="315:42">)</operator><name pos:start="315:43" pos:end="315:46">data</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="317:17" pos:end="317:58"><decl pos:start="317:17" pos:end="317:57"><type pos:start="317:17" pos:end="317:26"><name pos:start="317:17" pos:end="317:24">uint32_t</name> <modifier pos:start="317:26" pos:end="317:26">*</modifier></type><name pos:start="317:27" pos:end="317:31">t_int</name> <init pos:start="317:33" pos:end="317:57">= <expr pos:start="317:35" pos:end="317:57"><operator pos:start="317:35" pos:end="317:35">(</operator><name pos:start="317:36" pos:end="317:43">uint32_t</name> <operator pos:start="317:45" pos:end="317:45">*</operator><operator pos:start="317:46" pos:end="317:46">)</operator><name pos:start="317:47" pos:end="317:57">target_data</name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="321:17" pos:end="321:38"><expr pos:start="321:17" pos:end="321:37"><call pos:start="321:17" pos:end="321:37"><name pos:start="321:17" pos:end="321:26">__put_user</name><argument_list pos:start="321:27" pos:end="321:37">(<argument pos:start="321:28" pos:end="321:29"><expr pos:start="321:28" pos:end="321:29"><operator pos:start="321:28" pos:end="321:28">*</operator><name pos:start="321:29" pos:end="321:29">v</name></expr></argument>, <argument pos:start="321:32" pos:end="321:36"><expr pos:start="321:32" pos:end="321:36"><name pos:start="321:32" pos:end="321:36">t_int</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="323:17" pos:end="323:22">break;</break>

            </block_content>}</block>

            <case pos:start="327:13" pos:end="327:30">case <expr pos:start="327:18" pos:end="327:29"><name pos:start="327:18" pos:end="327:29">IPV6_RECVERR</name></expr>:</case>

            <block pos:start="329:13" pos:end="367:13">{<block_content pos:start="331:17" pos:end="365:22">

                <struct pos:start="331:17" pos:end="337:18">struct <name pos:start="331:24" pos:end="331:32">errhdr6_t</name> <block pos:start="331:34" pos:end="337:17">{

                   <decl_stmt pos:start="333:20" pos:end="333:47"><decl pos:start="333:20" pos:end="333:46"><type pos:start="333:20" pos:end="333:43"><name pos:start="333:20" pos:end="333:43"><name pos:start="333:20" pos:end="333:25">struct</name> <name pos:start="333:27" pos:end="333:43">sock_extended_err</name></name></type> <name pos:start="333:45" pos:end="333:46">ee</name></decl>;</decl_stmt>

                   <decl_stmt pos:start="335:20" pos:end="335:48"><decl pos:start="335:20" pos:end="335:47"><type pos:start="335:20" pos:end="335:38"><name pos:start="335:20" pos:end="335:38"><name pos:start="335:20" pos:end="335:25">struct</name> <name pos:start="335:27" pos:end="335:38">sockaddr_in6</name></name></type> <name pos:start="335:40" pos:end="335:47">offender</name></decl>;</decl_stmt>

                }</block>;</struct>

                <decl_stmt pos:start="339:17" pos:end="339:66"><decl pos:start="339:17" pos:end="339:65"><type pos:start="339:17" pos:end="339:34"><name pos:start="339:17" pos:end="339:32"><name pos:start="339:17" pos:end="339:22">struct</name> <name pos:start="339:24" pos:end="339:32">errhdr6_t</name></name> <modifier pos:start="339:34" pos:end="339:34">*</modifier></type><name pos:start="339:35" pos:end="339:38">errh</name> <init pos:start="339:40" pos:end="339:65">= <expr pos:start="339:42" pos:end="339:65"><operator pos:start="339:42" pos:end="339:42">(</operator>struct <name pos:start="339:50" pos:end="339:58">errhdr6_t</name> <operator pos:start="339:60" pos:end="339:60">*</operator><operator pos:start="339:61" pos:end="339:61">)</operator><name pos:start="339:62" pos:end="339:65">data</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="341:17" pos:end="343:52"><decl pos:start="341:17" pos:end="343:51"><type pos:start="341:17" pos:end="341:34"><name pos:start="341:17" pos:end="341:32"><name pos:start="341:17" pos:end="341:22">struct</name> <name pos:start="341:24" pos:end="341:32">errhdr6_t</name></name> <modifier pos:start="341:34" pos:end="341:34">*</modifier></type><name pos:start="341:35" pos:end="341:45">target_errh</name> <init pos:start="341:47" pos:end="343:51">=

                    <expr pos:start="343:21" pos:end="343:51"><operator pos:start="343:21" pos:end="343:21">(</operator>struct <name pos:start="343:29" pos:end="343:37">errhdr6_t</name> <operator pos:start="343:39" pos:end="343:39">*</operator><operator pos:start="343:40" pos:end="343:40">)</operator><name pos:start="343:41" pos:end="343:51">target_data</name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="347:17" pos:end="347:73"><expr pos:start="347:17" pos:end="347:72"><call pos:start="347:17" pos:end="347:72"><name pos:start="347:17" pos:end="347:26">__put_user</name><argument_list pos:start="347:27" pos:end="347:72">(<argument pos:start="347:28" pos:end="347:44"><expr pos:start="347:28" pos:end="347:44"><name pos:start="347:28" pos:end="347:44"><name pos:start="347:28" pos:end="347:31">errh</name><operator pos:start="347:32" pos:end="347:33">-&gt;</operator><name pos:start="347:34" pos:end="347:35">ee</name><operator pos:start="347:36" pos:end="347:36">.</operator><name pos:start="347:37" pos:end="347:44">ee_errno</name></name></expr></argument>, <argument pos:start="347:47" pos:end="347:71"><expr pos:start="347:47" pos:end="347:71"><operator pos:start="347:47" pos:end="347:47">&amp;</operator><name pos:start="347:48" pos:end="347:71"><name pos:start="347:48" pos:end="347:58">target_errh</name><operator pos:start="347:59" pos:end="347:60">-&gt;</operator><name pos:start="347:61" pos:end="347:62">ee</name><operator pos:start="347:63" pos:end="347:63">.</operator><name pos:start="347:64" pos:end="347:71">ee_errno</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="349:17" pos:end="349:75"><expr pos:start="349:17" pos:end="349:74"><call pos:start="349:17" pos:end="349:74"><name pos:start="349:17" pos:end="349:26">__put_user</name><argument_list pos:start="349:27" pos:end="349:74">(<argument pos:start="349:28" pos:end="349:45"><expr pos:start="349:28" pos:end="349:45"><name pos:start="349:28" pos:end="349:45"><name pos:start="349:28" pos:end="349:31">errh</name><operator pos:start="349:32" pos:end="349:33">-&gt;</operator><name pos:start="349:34" pos:end="349:35">ee</name><operator pos:start="349:36" pos:end="349:36">.</operator><name pos:start="349:37" pos:end="349:45">ee_origin</name></name></expr></argument>, <argument pos:start="349:48" pos:end="349:73"><expr pos:start="349:48" pos:end="349:73"><operator pos:start="349:48" pos:end="349:48">&amp;</operator><name pos:start="349:49" pos:end="349:73"><name pos:start="349:49" pos:end="349:59">target_errh</name><operator pos:start="349:60" pos:end="349:61">-&gt;</operator><name pos:start="349:62" pos:end="349:63">ee</name><operator pos:start="349:64" pos:end="349:64">.</operator><name pos:start="349:65" pos:end="349:73">ee_origin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="351:17" pos:end="351:72"><expr pos:start="351:17" pos:end="351:71"><call pos:start="351:17" pos:end="351:71"><name pos:start="351:17" pos:end="351:26">__put_user</name><argument_list pos:start="351:27" pos:end="351:71">(<argument pos:start="351:28" pos:end="351:43"><expr pos:start="351:28" pos:end="351:43"><name pos:start="351:28" pos:end="351:43"><name pos:start="351:28" pos:end="351:31">errh</name><operator pos:start="351:32" pos:end="351:33">-&gt;</operator><name pos:start="351:34" pos:end="351:35">ee</name><operator pos:start="351:36" pos:end="351:36">.</operator><name pos:start="351:37" pos:end="351:43">ee_type</name></name></expr></argument>,  <argument pos:start="351:47" pos:end="351:70"><expr pos:start="351:47" pos:end="351:70"><operator pos:start="351:47" pos:end="351:47">&amp;</operator><name pos:start="351:48" pos:end="351:70"><name pos:start="351:48" pos:end="351:58">target_errh</name><operator pos:start="351:59" pos:end="351:60">-&gt;</operator><name pos:start="351:61" pos:end="351:62">ee</name><operator pos:start="351:63" pos:end="351:63">.</operator><name pos:start="351:64" pos:end="351:70">ee_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="353:17" pos:end="353:71"><expr pos:start="353:17" pos:end="353:70"><call pos:start="353:17" pos:end="353:70"><name pos:start="353:17" pos:end="353:26">__put_user</name><argument_list pos:start="353:27" pos:end="353:70">(<argument pos:start="353:28" pos:end="353:43"><expr pos:start="353:28" pos:end="353:43"><name pos:start="353:28" pos:end="353:43"><name pos:start="353:28" pos:end="353:31">errh</name><operator pos:start="353:32" pos:end="353:33">-&gt;</operator><name pos:start="353:34" pos:end="353:35">ee</name><operator pos:start="353:36" pos:end="353:36">.</operator><name pos:start="353:37" pos:end="353:43">ee_code</name></name></expr></argument>, <argument pos:start="353:46" pos:end="353:69"><expr pos:start="353:46" pos:end="353:69"><operator pos:start="353:46" pos:end="353:46">&amp;</operator><name pos:start="353:47" pos:end="353:69"><name pos:start="353:47" pos:end="353:57">target_errh</name><operator pos:start="353:58" pos:end="353:59">-&gt;</operator><name pos:start="353:60" pos:end="353:61">ee</name><operator pos:start="353:62" pos:end="353:62">.</operator><name pos:start="353:63" pos:end="353:69">ee_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="355:17" pos:end="355:69"><expr pos:start="355:17" pos:end="355:68"><call pos:start="355:17" pos:end="355:68"><name pos:start="355:17" pos:end="355:26">__put_user</name><argument_list pos:start="355:27" pos:end="355:68">(<argument pos:start="355:28" pos:end="355:42"><expr pos:start="355:28" pos:end="355:42"><name pos:start="355:28" pos:end="355:42"><name pos:start="355:28" pos:end="355:31">errh</name><operator pos:start="355:32" pos:end="355:33">-&gt;</operator><name pos:start="355:34" pos:end="355:35">ee</name><operator pos:start="355:36" pos:end="355:36">.</operator><name pos:start="355:37" pos:end="355:42">ee_pad</name></name></expr></argument>, <argument pos:start="355:45" pos:end="355:67"><expr pos:start="355:45" pos:end="355:67"><operator pos:start="355:45" pos:end="355:45">&amp;</operator><name pos:start="355:46" pos:end="355:67"><name pos:start="355:46" pos:end="355:56">target_errh</name><operator pos:start="355:57" pos:end="355:58">-&gt;</operator><name pos:start="355:59" pos:end="355:60">ee</name><operator pos:start="355:61" pos:end="355:61">.</operator><name pos:start="355:62" pos:end="355:67">ee_pad</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="357:17" pos:end="357:71"><expr pos:start="357:17" pos:end="357:70"><call pos:start="357:17" pos:end="357:70"><name pos:start="357:17" pos:end="357:26">__put_user</name><argument_list pos:start="357:27" pos:end="357:70">(<argument pos:start="357:28" pos:end="357:43"><expr pos:start="357:28" pos:end="357:43"><name pos:start="357:28" pos:end="357:43"><name pos:start="357:28" pos:end="357:31">errh</name><operator pos:start="357:32" pos:end="357:33">-&gt;</operator><name pos:start="357:34" pos:end="357:35">ee</name><operator pos:start="357:36" pos:end="357:36">.</operator><name pos:start="357:37" pos:end="357:43">ee_info</name></name></expr></argument>, <argument pos:start="357:46" pos:end="357:69"><expr pos:start="357:46" pos:end="357:69"><operator pos:start="357:46" pos:end="357:46">&amp;</operator><name pos:start="357:47" pos:end="357:69"><name pos:start="357:47" pos:end="357:57">target_errh</name><operator pos:start="357:58" pos:end="357:59">-&gt;</operator><name pos:start="357:60" pos:end="357:61">ee</name><operator pos:start="357:62" pos:end="357:62">.</operator><name pos:start="357:63" pos:end="357:69">ee_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="359:17" pos:end="359:71"><expr pos:start="359:17" pos:end="359:70"><call pos:start="359:17" pos:end="359:70"><name pos:start="359:17" pos:end="359:26">__put_user</name><argument_list pos:start="359:27" pos:end="359:70">(<argument pos:start="359:28" pos:end="359:43"><expr pos:start="359:28" pos:end="359:43"><name pos:start="359:28" pos:end="359:43"><name pos:start="359:28" pos:end="359:31">errh</name><operator pos:start="359:32" pos:end="359:33">-&gt;</operator><name pos:start="359:34" pos:end="359:35">ee</name><operator pos:start="359:36" pos:end="359:36">.</operator><name pos:start="359:37" pos:end="359:43">ee_data</name></name></expr></argument>, <argument pos:start="359:46" pos:end="359:69"><expr pos:start="359:46" pos:end="359:69"><operator pos:start="359:46" pos:end="359:46">&amp;</operator><name pos:start="359:47" pos:end="359:69"><name pos:start="359:47" pos:end="359:57">target_errh</name><operator pos:start="359:58" pos:end="359:59">-&gt;</operator><name pos:start="359:60" pos:end="359:61">ee</name><operator pos:start="359:62" pos:end="359:62">.</operator><name pos:start="359:63" pos:end="359:69">ee_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="361:17" pos:end="363:70"><expr pos:start="361:17" pos:end="363:69"><call pos:start="361:17" pos:end="363:69"><name pos:start="361:17" pos:end="361:39">host_to_target_sockaddr</name><argument_list pos:start="361:40" pos:end="363:69">(<argument pos:start="361:41" pos:end="361:78"><expr pos:start="361:41" pos:end="361:78"><operator pos:start="361:41" pos:end="361:41">(</operator><name pos:start="361:42" pos:end="361:49">unsigned</name> <name pos:start="361:51" pos:end="361:54">long</name><operator pos:start="361:55" pos:end="361:55">)</operator> <operator pos:start="361:57" pos:end="361:57">&amp;</operator><name pos:start="361:58" pos:end="361:78"><name pos:start="361:58" pos:end="361:68">target_errh</name><operator pos:start="361:69" pos:end="361:70">-&gt;</operator><name pos:start="361:71" pos:end="361:78">offender</name></name></expr></argument>,

                    <argument pos:start="363:21" pos:end="363:44"><expr pos:start="363:21" pos:end="363:44"><operator pos:start="363:21" pos:end="363:21">(</operator><name pos:start="363:22" pos:end="363:25">void</name> <operator pos:start="363:27" pos:end="363:27">*</operator><operator pos:start="363:28" pos:end="363:28">)</operator> <operator pos:start="363:30" pos:end="363:30">&amp;</operator><name pos:start="363:31" pos:end="363:44"><name pos:start="363:31" pos:end="363:34">errh</name><operator pos:start="363:35" pos:end="363:36">-&gt;</operator><name pos:start="363:37" pos:end="363:44">offender</name></name></expr></argument>, <argument pos:start="363:47" pos:end="363:68"><expr pos:start="363:47" pos:end="363:68"><sizeof pos:start="363:47" pos:end="363:68">sizeof<argument_list pos:start="363:53" pos:end="363:68">(<argument pos:start="363:54" pos:end="363:67"><expr pos:start="363:54" pos:end="363:67"><name pos:start="363:54" pos:end="363:67"><name pos:start="363:54" pos:end="363:57">errh</name><operator pos:start="363:58" pos:end="363:59">-&gt;</operator><name pos:start="363:60" pos:end="363:67">offender</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="365:17" pos:end="365:22">break;</break>

            </block_content>}</block>

            <default pos:start="369:13" pos:end="369:20">default:</default>

                <goto pos:start="371:17" pos:end="371:35">goto <name pos:start="371:22" pos:end="371:34">unimplemented</name>;</goto>

            </block_content>}</block></switch>

            <break pos:start="375:13" pos:end="375:18">break;</break>



        <default pos:start="379:9" pos:end="379:16">default:</default>

        <label pos:start="381:9" pos:end="381:22"><name pos:start="381:9" pos:end="381:21">unimplemented</name>:</label>

            <expr_stmt pos:start="383:13" pos:end="385:75"><expr pos:start="383:13" pos:end="385:74"><call pos:start="383:13" pos:end="385:74"><name pos:start="383:13" pos:end="383:20">gemu_log</name><argument_list pos:start="383:21" pos:end="385:74">(<argument pos:start="383:22" pos:end="383:58"><expr pos:start="383:22" pos:end="383:58"><literal type="string" pos:start="383:22" pos:end="383:58">"Unsupported ancillary data: %d/%d\n"</literal></expr></argument>,

                                        <argument pos:start="385:41" pos:end="385:56"><expr pos:start="385:41" pos:end="385:56"><name pos:start="385:41" pos:end="385:56"><name pos:start="385:41" pos:end="385:44">cmsg</name><operator pos:start="385:45" pos:end="385:46">-&gt;</operator><name pos:start="385:47" pos:end="385:56">cmsg_level</name></name></expr></argument>, <argument pos:start="385:59" pos:end="385:73"><expr pos:start="385:59" pos:end="385:73"><name pos:start="385:59" pos:end="385:73"><name pos:start="385:59" pos:end="385:62">cmsg</name><operator pos:start="385:63" pos:end="385:64">-&gt;</operator><name pos:start="385:65" pos:end="385:73">cmsg_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="387:13" pos:end="387:57"><expr pos:start="387:13" pos:end="387:56"><call pos:start="387:13" pos:end="387:56"><name pos:start="387:13" pos:end="387:18">memcpy</name><argument_list pos:start="387:19" pos:end="387:56">(<argument pos:start="387:20" pos:end="387:30"><expr pos:start="387:20" pos:end="387:30"><name pos:start="387:20" pos:end="387:30">target_data</name></expr></argument>, <argument pos:start="387:33" pos:end="387:36"><expr pos:start="387:33" pos:end="387:36"><name pos:start="387:33" pos:end="387:36">data</name></expr></argument>, <argument pos:start="387:39" pos:end="387:55"><expr pos:start="387:39" pos:end="387:55"><call pos:start="387:39" pos:end="387:55"><name pos:start="387:39" pos:end="387:41">MIN</name><argument_list pos:start="387:42" pos:end="387:55">(<argument pos:start="387:43" pos:end="387:45"><expr pos:start="387:43" pos:end="387:45"><name pos:start="387:43" pos:end="387:45">len</name></expr></argument>, <argument pos:start="387:48" pos:end="387:54"><expr pos:start="387:48" pos:end="387:54"><name pos:start="387:48" pos:end="387:54">tgt_len</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="389:13" pos:end="393:13"><if pos:start="389:13" pos:end="393:13">if <condition pos:start="389:16" pos:end="389:30">(<expr pos:start="389:17" pos:end="389:29"><name pos:start="389:17" pos:end="389:23">tgt_len</name> <operator pos:start="389:25" pos:end="389:25">&gt;</operator> <name pos:start="389:27" pos:end="389:29">len</name></expr>)</condition> <block pos:start="389:32" pos:end="393:13">{<block_content pos:start="391:17" pos:end="391:60">

                <expr_stmt pos:start="391:17" pos:end="391:60"><expr pos:start="391:17" pos:end="391:59"><call pos:start="391:17" pos:end="391:59"><name pos:start="391:17" pos:end="391:22">memset</name><argument_list pos:start="391:23" pos:end="391:59">(<argument pos:start="391:24" pos:end="391:40"><expr pos:start="391:24" pos:end="391:40"><name pos:start="391:24" pos:end="391:34">target_data</name> <operator pos:start="391:36" pos:end="391:36">+</operator> <name pos:start="391:38" pos:end="391:40">len</name></expr></argument>, <argument pos:start="391:43" pos:end="391:43"><expr pos:start="391:43" pos:end="391:43"><literal type="number" pos:start="391:43" pos:end="391:43">0</literal></expr></argument>, <argument pos:start="391:46" pos:end="391:58"><expr pos:start="391:46" pos:end="391:58"><name pos:start="391:46" pos:end="391:52">tgt_len</name> <operator pos:start="391:54" pos:end="391:54">-</operator> <name pos:start="391:56" pos:end="391:58">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></switch>



        <expr_stmt pos:start="399:9" pos:end="399:49"><expr pos:start="399:9" pos:end="399:48"><name pos:start="399:9" pos:end="399:29"><name pos:start="399:9" pos:end="399:19">target_cmsg</name><operator pos:start="399:20" pos:end="399:21">-&gt;</operator><name pos:start="399:22" pos:end="399:29">cmsg_len</name></name> <operator pos:start="399:31" pos:end="399:31">=</operator> <call pos:start="399:33" pos:end="399:48"><name pos:start="399:33" pos:end="399:39">tswapal</name><argument_list pos:start="399:40" pos:end="399:48">(<argument pos:start="399:41" pos:end="399:47"><expr pos:start="399:41" pos:end="399:47"><name pos:start="399:41" pos:end="399:47">tgt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="401:9" pos:end="401:43"><expr pos:start="401:9" pos:end="401:42"><name pos:start="401:9" pos:end="401:17">tgt_space</name> <operator pos:start="401:19" pos:end="401:19">=</operator> <call pos:start="401:21" pos:end="401:42"><name pos:start="401:21" pos:end="401:37">TARGET_CMSG_SPACE</name><argument_list pos:start="401:38" pos:end="401:42">(<argument pos:start="401:39" pos:end="401:41"><expr pos:start="401:39" pos:end="401:41"><name pos:start="401:39" pos:end="401:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="403:9" pos:end="407:9"><if pos:start="403:9" pos:end="407:9">if <condition pos:start="403:12" pos:end="403:39">(<expr pos:start="403:13" pos:end="403:38"><name pos:start="403:13" pos:end="403:26">msg_controllen</name> <operator pos:start="403:28" pos:end="403:28">&lt;</operator> <name pos:start="403:30" pos:end="403:38">tgt_space</name></expr>)</condition> <block pos:start="403:41" pos:end="407:9">{<block_content pos:start="405:13" pos:end="405:39">

            <expr_stmt pos:start="405:13" pos:end="405:39"><expr pos:start="405:13" pos:end="405:38"><name pos:start="405:13" pos:end="405:21">tgt_space</name> <operator pos:start="405:23" pos:end="405:23">=</operator> <name pos:start="405:25" pos:end="405:38">msg_controllen</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:36"><expr pos:start="409:9" pos:end="409:35"><name pos:start="409:9" pos:end="409:22">msg_controllen</name> <operator pos:start="409:24" pos:end="409:25">-=</operator> <name pos:start="409:27" pos:end="409:35">tgt_space</name></expr>;</expr_stmt>

        <expr_stmt pos:start="411:9" pos:end="411:27"><expr pos:start="411:9" pos:end="411:26"><name pos:start="411:9" pos:end="411:13">space</name> <operator pos:start="411:15" pos:end="411:16">+=</operator> <name pos:start="411:18" pos:end="411:26">tgt_space</name></expr>;</expr_stmt>

        <expr_stmt pos:start="413:9" pos:end="413:39"><expr pos:start="413:9" pos:end="413:38"><name pos:start="413:9" pos:end="413:12">cmsg</name> <operator pos:start="413:14" pos:end="413:14">=</operator> <call pos:start="413:16" pos:end="413:38"><name pos:start="413:16" pos:end="413:26">CMSG_NXTHDR</name><argument_list pos:start="413:27" pos:end="413:38">(<argument pos:start="413:28" pos:end="413:31"><expr pos:start="413:28" pos:end="413:31"><name pos:start="413:28" pos:end="413:31">msgh</name></expr></argument>, <argument pos:start="413:34" pos:end="413:37"><expr pos:start="413:34" pos:end="413:37"><name pos:start="413:34" pos:end="413:37">cmsg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="415:9" pos:end="417:60"><expr pos:start="415:9" pos:end="417:59"><name pos:start="415:9" pos:end="415:19">target_cmsg</name> <operator pos:start="415:21" pos:end="415:21">=</operator> <call pos:start="415:23" pos:end="417:59"><name pos:start="415:23" pos:end="415:40">TARGET_CMSG_NXTHDR</name><argument_list pos:start="415:41" pos:end="417:59">(<argument pos:start="415:42" pos:end="415:52"><expr pos:start="415:42" pos:end="415:52"><name pos:start="415:42" pos:end="415:52">target_msgh</name></expr></argument>, <argument pos:start="415:55" pos:end="415:65"><expr pos:start="415:55" pos:end="415:65"><name pos:start="415:55" pos:end="415:65">target_cmsg</name></expr></argument>,

                                         <argument pos:start="417:42" pos:end="417:58"><expr pos:start="417:42" pos:end="417:58"><name pos:start="417:42" pos:end="417:58">target_cmsg_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="421:5" pos:end="421:54"><expr pos:start="421:5" pos:end="421:53"><call pos:start="421:5" pos:end="421:53"><name pos:start="421:5" pos:end="421:15">unlock_user</name><argument_list pos:start="421:16" pos:end="421:53">(<argument pos:start="421:17" pos:end="421:27"><expr pos:start="421:17" pos:end="421:27"><name pos:start="421:17" pos:end="421:27">target_cmsg</name></expr></argument>, <argument pos:start="421:30" pos:end="421:45"><expr pos:start="421:30" pos:end="421:45"><name pos:start="421:30" pos:end="421:45">target_cmsg_addr</name></expr></argument>, <argument pos:start="421:48" pos:end="421:52"><expr pos:start="421:48" pos:end="421:52"><name pos:start="421:48" pos:end="421:52">space</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

 <label pos:start="423:2" pos:end="423:9"><name pos:start="423:2" pos:end="423:8">the_end</name>:</label>

    <expr_stmt pos:start="425:5" pos:end="425:49"><expr pos:start="425:5" pos:end="425:48"><name pos:start="425:5" pos:end="425:31"><name pos:start="425:5" pos:end="425:15">target_msgh</name><operator pos:start="425:16" pos:end="425:17">-&gt;</operator><name pos:start="425:18" pos:end="425:31">msg_controllen</name></name> <operator pos:start="425:33" pos:end="425:33">=</operator> <call pos:start="425:35" pos:end="425:48"><name pos:start="425:35" pos:end="425:41">tswapal</name><argument_list pos:start="425:42" pos:end="425:48">(<argument pos:start="425:43" pos:end="425:47"><expr pos:start="425:43" pos:end="425:47"><name pos:start="425:43" pos:end="425:47">space</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="427:5" pos:end="427:13">return <expr pos:start="427:12" pos:end="427:12"><literal type="number" pos:start="427:12" pos:end="427:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
