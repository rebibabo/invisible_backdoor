<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5971.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">test_butterflies_float</name><parameter_list pos:start="1:35" pos:end="1:72">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:46">float</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">src0</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:71"><decl pos:start="1:55" pos:end="1:71"><type pos:start="1:55" pos:end="1:71"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:65">float</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">src1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:32">

    <expr_stmt pos:start="5:5" pos:end="5:43"><expr pos:start="5:5" pos:end="5:42"><call pos:start="5:5" pos:end="5:42"><name pos:start="5:5" pos:end="5:20">LOCAL_ALIGNED_16</name><argument_list pos:start="5:21" pos:end="5:42">(<argument pos:start="5:22" pos:end="5:26"><expr pos:start="5:22" pos:end="5:26"><name pos:start="5:22" pos:end="5:26">float</name></expr></argument>,  <argument pos:start="5:30" pos:end="5:33"><expr pos:start="5:30" pos:end="5:33"><name pos:start="5:30" pos:end="5:33">cdst</name></expr></argument>,  <argument pos:start="5:37" pos:end="5:41"><expr pos:start="5:37" pos:end="5:41"><index pos:start="5:37" pos:end="5:41">[<expr pos:start="5:38" pos:end="5:40"><name pos:start="5:38" pos:end="5:40">LEN</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:43"><expr pos:start="7:5" pos:end="7:42"><call pos:start="7:5" pos:end="7:42"><name pos:start="7:5" pos:end="7:20">LOCAL_ALIGNED_16</name><argument_list pos:start="7:21" pos:end="7:42">(<argument pos:start="7:22" pos:end="7:26"><expr pos:start="7:22" pos:end="7:26"><name pos:start="7:22" pos:end="7:26">float</name></expr></argument>,  <argument pos:start="7:30" pos:end="7:33"><expr pos:start="7:30" pos:end="7:33"><name pos:start="7:30" pos:end="7:33">odst</name></expr></argument>,  <argument pos:start="7:37" pos:end="7:41"><expr pos:start="7:37" pos:end="7:41"><index pos:start="7:37" pos:end="7:41">[<expr pos:start="7:38" pos:end="7:40"><name pos:start="7:38" pos:end="7:40">LEN</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:43"><expr pos:start="9:5" pos:end="9:42"><call pos:start="9:5" pos:end="9:42"><name pos:start="9:5" pos:end="9:20">LOCAL_ALIGNED_16</name><argument_list pos:start="9:21" pos:end="9:42">(<argument pos:start="9:22" pos:end="9:26"><expr pos:start="9:22" pos:end="9:26"><name pos:start="9:22" pos:end="9:26">float</name></expr></argument>,  <argument pos:start="9:30" pos:end="9:34"><expr pos:start="9:30" pos:end="9:34"><name pos:start="9:30" pos:end="9:34">cdst1</name></expr></argument>, <argument pos:start="9:37" pos:end="9:41"><expr pos:start="9:37" pos:end="9:41"><index pos:start="9:37" pos:end="9:41">[<expr pos:start="9:38" pos:end="9:40"><name pos:start="9:38" pos:end="9:40">LEN</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:43"><expr pos:start="11:5" pos:end="11:42"><call pos:start="11:5" pos:end="11:42"><name pos:start="11:5" pos:end="11:20">LOCAL_ALIGNED_16</name><argument_list pos:start="11:21" pos:end="11:42">(<argument pos:start="11:22" pos:end="11:26"><expr pos:start="11:22" pos:end="11:26"><name pos:start="11:22" pos:end="11:26">float</name></expr></argument>,  <argument pos:start="11:30" pos:end="11:34"><expr pos:start="11:30" pos:end="11:34"><name pos:start="11:30" pos:end="11:34">odst1</name></expr></argument>, <argument pos:start="11:37" pos:end="11:41"><expr pos:start="11:37" pos:end="11:41"><index pos:start="11:37" pos:end="11:41">[<expr pos:start="11:38" pos:end="11:40"><name pos:start="11:38" pos:end="11:40">LEN</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <macro pos:start="17:5" pos:end="19:12"><name pos:start="17:5" pos:end="17:16">declare_func</name><argument_list pos:start="17:17" pos:end="19:12">(<argument pos:start="17:18" pos:end="17:21">void</argument>, <argument pos:start="17:24" pos:end="17:46">float *av_restrict src0</argument>, <argument pos:start="17:49" pos:end="17:71">float *av_restrict src1</argument>,

    <argument pos:start="19:5" pos:end="19:11">int len</argument>)</argument_list></macro><empty_stmt pos:start="19:13" pos:end="19:13">;</empty_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><call pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:10">memcpy</name><argument_list pos:start="23:11" pos:end="23:44">(<argument pos:start="23:12" pos:end="23:15"><expr pos:start="23:12" pos:end="23:15"><name pos:start="23:12" pos:end="23:15">cdst</name></expr></argument>,  <argument pos:start="23:19" pos:end="23:22"><expr pos:start="23:19" pos:end="23:22"><name pos:start="23:19" pos:end="23:22">src0</name></expr></argument>, <argument pos:start="23:25" pos:end="23:43"><expr pos:start="23:25" pos:end="23:43"><name pos:start="23:25" pos:end="23:27">LEN</name> <operator pos:start="23:29" pos:end="23:29">*</operator> <sizeof pos:start="23:31" pos:end="23:43">sizeof<argument_list pos:start="23:37" pos:end="23:43">(<argument pos:start="23:38" pos:end="23:42"><expr pos:start="23:38" pos:end="23:42"><operator pos:start="23:38" pos:end="23:38">*</operator><name pos:start="23:39" pos:end="23:42">src0</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><call pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:10">memcpy</name><argument_list pos:start="25:11" pos:end="25:44">(<argument pos:start="25:12" pos:end="25:16"><expr pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:16">cdst1</name></expr></argument>, <argument pos:start="25:19" pos:end="25:22"><expr pos:start="25:19" pos:end="25:22"><name pos:start="25:19" pos:end="25:22">src1</name></expr></argument>, <argument pos:start="25:25" pos:end="25:43"><expr pos:start="25:25" pos:end="25:43"><name pos:start="25:25" pos:end="25:27">LEN</name> <operator pos:start="25:29" pos:end="25:29">*</operator> <sizeof pos:start="25:31" pos:end="25:43">sizeof<argument_list pos:start="25:37" pos:end="25:43">(<argument pos:start="25:38" pos:end="25:42"><expr pos:start="25:38" pos:end="25:42"><operator pos:start="25:38" pos:end="25:38">*</operator><name pos:start="25:39" pos:end="25:42">src1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><call pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:10">memcpy</name><argument_list pos:start="27:11" pos:end="27:44">(<argument pos:start="27:12" pos:end="27:15"><expr pos:start="27:12" pos:end="27:15"><name pos:start="27:12" pos:end="27:15">odst</name></expr></argument>,  <argument pos:start="27:19" pos:end="27:22"><expr pos:start="27:19" pos:end="27:22"><name pos:start="27:19" pos:end="27:22">src0</name></expr></argument>, <argument pos:start="27:25" pos:end="27:43"><expr pos:start="27:25" pos:end="27:43"><name pos:start="27:25" pos:end="27:27">LEN</name> <operator pos:start="27:29" pos:end="27:29">*</operator> <sizeof pos:start="27:31" pos:end="27:43">sizeof<argument_list pos:start="27:37" pos:end="27:43">(<argument pos:start="27:38" pos:end="27:42"><expr pos:start="27:38" pos:end="27:42"><operator pos:start="27:38" pos:end="27:38">*</operator><name pos:start="27:39" pos:end="27:42">src0</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:10">memcpy</name><argument_list pos:start="29:11" pos:end="29:44">(<argument pos:start="29:12" pos:end="29:16"><expr pos:start="29:12" pos:end="29:16"><name pos:start="29:12" pos:end="29:16">odst1</name></expr></argument>, <argument pos:start="29:19" pos:end="29:22"><expr pos:start="29:19" pos:end="29:22"><name pos:start="29:19" pos:end="29:22">src1</name></expr></argument>, <argument pos:start="29:25" pos:end="29:43"><expr pos:start="29:25" pos:end="29:43"><name pos:start="29:25" pos:end="29:27">LEN</name> <operator pos:start="29:29" pos:end="29:29">*</operator> <sizeof pos:start="29:31" pos:end="29:43">sizeof<argument_list pos:start="29:37" pos:end="29:43">(<argument pos:start="29:38" pos:end="29:42"><expr pos:start="29:38" pos:end="29:42"><operator pos:start="29:38" pos:end="29:38">*</operator><name pos:start="29:39" pos:end="29:42">src1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><call pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:12">call_ref</name><argument_list pos:start="33:13" pos:end="33:30">(<argument pos:start="33:14" pos:end="33:17"><expr pos:start="33:14" pos:end="33:17"><name pos:start="33:14" pos:end="33:17">cdst</name></expr></argument>, <argument pos:start="33:20" pos:end="33:24"><expr pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:24">cdst1</name></expr></argument>, <argument pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:29">LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><call pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:12">call_new</name><argument_list pos:start="35:13" pos:end="35:30">(<argument pos:start="35:14" pos:end="35:17"><expr pos:start="35:14" pos:end="35:17"><name pos:start="35:14" pos:end="35:17">odst</name></expr></argument>, <argument pos:start="35:20" pos:end="35:24"><expr pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:24">odst1</name></expr></argument>, <argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="37:5" pos:end="51:5">for <control pos:start="37:9" pos:end="37:29">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:24"><expr pos:start="37:17" pos:end="37:23"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:23">LEN</name></expr>;</condition> <incr pos:start="37:26" pos:end="37:28"><expr pos:start="37:26" pos:end="37:28"><name pos:start="37:26" pos:end="37:26">i</name><operator pos:start="37:27" pos:end="37:28">++</operator></expr></incr>)</control> <block pos:start="37:31" pos:end="51:5">{<block_content pos:start="39:9" pos:end="49:9">

        <if_stmt pos:start="39:9" pos:end="49:9"><if pos:start="39:9" pos:end="49:9">if <condition pos:start="39:12" pos:end="39:63">(<expr pos:start="39:13" pos:end="39:62"><operator pos:start="39:13" pos:end="39:13">!</operator><call pos:start="39:14" pos:end="39:62"><name pos:start="39:14" pos:end="39:31">float_near_abs_eps</name><argument_list pos:start="39:32" pos:end="39:62">(<argument pos:start="39:33" pos:end="39:39"><expr pos:start="39:33" pos:end="39:39"><name pos:start="39:33" pos:end="39:39"><name pos:start="39:33" pos:end="39:36">cdst</name><index pos:start="39:37" pos:end="39:39">[<expr pos:start="39:38" pos:end="39:38"><name pos:start="39:38" pos:end="39:38">i</name></expr>]</index></name></expr></argument>, <argument pos:start="39:42" pos:end="39:48"><expr pos:start="39:42" pos:end="39:48"><name pos:start="39:42" pos:end="39:48"><name pos:start="39:42" pos:end="39:45">odst</name><index pos:start="39:46" pos:end="39:48">[<expr pos:start="39:47" pos:end="39:47"><name pos:start="39:47" pos:end="39:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="39:51" pos:end="39:61"><expr pos:start="39:51" pos:end="39:61"><name pos:start="39:51" pos:end="39:61">FLT_EPSILON</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:65" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:18">

            <expr_stmt pos:start="41:13" pos:end="43:60"><expr pos:start="41:13" pos:end="43:59"><call pos:start="41:13" pos:end="43:59"><name pos:start="41:13" pos:end="41:19">fprintf</name><argument_list pos:start="41:20" pos:end="43:59">(<argument pos:start="41:21" pos:end="41:26"><expr pos:start="41:21" pos:end="41:26"><name pos:start="41:21" pos:end="41:26">stderr</name></expr></argument>, <argument pos:start="41:29" pos:end="41:62"><expr pos:start="41:29" pos:end="41:62"><literal type="string" pos:start="41:29" pos:end="41:62">"%d: %- .12f - %- .12f = % .12g\n"</literal></expr></argument>,

                    <argument pos:start="43:21" pos:end="43:21"><expr pos:start="43:21" pos:end="43:21"><name pos:start="43:21" pos:end="43:21">i</name></expr></argument>, <argument pos:start="43:24" pos:end="43:30"><expr pos:start="43:24" pos:end="43:30"><name pos:start="43:24" pos:end="43:30"><name pos:start="43:24" pos:end="43:27">cdst</name><index pos:start="43:28" pos:end="43:30">[<expr pos:start="43:29" pos:end="43:29"><name pos:start="43:29" pos:end="43:29">i</name></expr>]</index></name></expr></argument>, <argument pos:start="43:33" pos:end="43:39"><expr pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:36">odst</name><index pos:start="43:37" pos:end="43:39">[<expr pos:start="43:38" pos:end="43:38"><name pos:start="43:38" pos:end="43:38">i</name></expr>]</index></name></expr></argument>, <argument pos:start="43:42" pos:end="43:58"><expr pos:start="43:42" pos:end="43:58"><name pos:start="43:42" pos:end="43:48"><name pos:start="43:42" pos:end="43:45">cdst</name><index pos:start="43:46" pos:end="43:48">[<expr pos:start="43:47" pos:end="43:47"><name pos:start="43:47" pos:end="43:47">i</name></expr>]</index></name> <operator pos:start="43:50" pos:end="43:50">-</operator> <name pos:start="43:52" pos:end="43:58"><name pos:start="43:52" pos:end="43:55">odst</name><index pos:start="43:56" pos:end="43:58">[<expr pos:start="43:57" pos:end="43:57"><name pos:start="43:57" pos:end="43:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:19"><expr pos:start="45:13" pos:end="45:18"><call pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:16">fail</name><argument_list pos:start="45:17" pos:end="45:18">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><call pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:10">memcpy</name><argument_list pos:start="53:11" pos:end="53:44">(<argument pos:start="53:12" pos:end="53:15"><expr pos:start="53:12" pos:end="53:15"><name pos:start="53:12" pos:end="53:15">odst</name></expr></argument>,  <argument pos:start="53:19" pos:end="53:22"><expr pos:start="53:19" pos:end="53:22"><name pos:start="53:19" pos:end="53:22">src0</name></expr></argument>, <argument pos:start="53:25" pos:end="53:43"><expr pos:start="53:25" pos:end="53:43"><name pos:start="53:25" pos:end="53:27">LEN</name> <operator pos:start="53:29" pos:end="53:29">*</operator> <sizeof pos:start="53:31" pos:end="53:43">sizeof<argument_list pos:start="53:37" pos:end="53:43">(<argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><operator pos:start="53:38" pos:end="53:38">*</operator><name pos:start="53:39" pos:end="53:42">src0</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><call pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:10">memcpy</name><argument_list pos:start="55:11" pos:end="55:44">(<argument pos:start="55:12" pos:end="55:16"><expr pos:start="55:12" pos:end="55:16"><name pos:start="55:12" pos:end="55:16">odst1</name></expr></argument>, <argument pos:start="55:19" pos:end="55:22"><expr pos:start="55:19" pos:end="55:22"><name pos:start="55:19" pos:end="55:22">src1</name></expr></argument>, <argument pos:start="55:25" pos:end="55:43"><expr pos:start="55:25" pos:end="55:43"><name pos:start="55:25" pos:end="55:27">LEN</name> <operator pos:start="55:29" pos:end="55:29">*</operator> <sizeof pos:start="55:31" pos:end="55:43">sizeof<argument_list pos:start="55:37" pos:end="55:43">(<argument pos:start="55:38" pos:end="55:42"><expr pos:start="55:38" pos:end="55:42"><operator pos:start="55:38" pos:end="55:38">*</operator><name pos:start="55:39" pos:end="55:42">src1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:32"><expr pos:start="57:5" pos:end="57:31"><call pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:13">bench_new</name><argument_list pos:start="57:14" pos:end="57:31">(<argument pos:start="57:15" pos:end="57:18"><expr pos:start="57:15" pos:end="57:18"><name pos:start="57:15" pos:end="57:18">odst</name></expr></argument>, <argument pos:start="57:21" pos:end="57:25"><expr pos:start="57:21" pos:end="57:25"><name pos:start="57:21" pos:end="57:25">odst1</name></expr></argument>, <argument pos:start="57:28" pos:end="57:30"><expr pos:start="57:28" pos:end="57:30"><name pos:start="57:28" pos:end="57:30">LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
