<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11915.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:45"><name pos:start="1:1" pos:end="1:30">gen_intermediate_code_internal</name><argument_list pos:start="1:31" pos:end="3:45">(<argument pos:start="1:32" pos:end="1:45">CPUState * env</argument>, <argument pos:start="1:48" pos:end="1:68">TranslationBlock * tb</argument>,

                               <argument pos:start="3:32" pos:end="3:44">int search_pc</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="261:1">{<block_content pos:start="7:5" pos:end="260:0">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">DisasContext</name></type> <name pos:start="7:18" pos:end="7:20">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:25">pc_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:21"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:19">uint16_t</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:32">gen_opc_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">CPUBreakpoint</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:21">bp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:13"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:13">ii</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">num_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">max_insns</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:12">pc_start</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:21"><name pos:start="23:16" pos:end="23:17">tb</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:21">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:15">gen_opc_end</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:29">gen_opc_buf</name> <operator pos:start="25:31" pos:end="25:31">+</operator> <name pos:start="25:33" pos:end="25:44">OPC_MAX_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:7">ctx</name><operator pos:start="27:8" pos:end="27:8">.</operator><name pos:start="27:9" pos:end="27:10">pc</name></name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:7">ctx</name><operator pos:start="29:8" pos:end="29:8">.</operator><name pos:start="29:9" pos:end="29:13">flags</name></name> <operator pos:start="29:15" pos:end="29:15">=</operator> <operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:25">uint32_t</name><operator pos:start="29:26" pos:end="29:26">)</operator><name pos:start="29:27" pos:end="29:35"><name pos:start="29:27" pos:end="29:28">tb</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:35">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:25"><expr pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:7">ctx</name><operator pos:start="31:8" pos:end="31:8">.</operator><name pos:start="31:9" pos:end="31:14">bstate</name></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:24">BS_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:7">ctx</name><operator pos:start="33:8" pos:end="33:8">.</operator><name pos:start="33:9" pos:end="33:10">sr</name></name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:20"><name pos:start="33:14" pos:end="33:16">env</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:20">sr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:7">ctx</name><operator pos:start="35:8" pos:end="35:8">.</operator><name pos:start="35:9" pos:end="35:13">fpscr</name></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:26"><name pos:start="35:17" pos:end="35:19">env</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:26">fpscr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:43"><expr pos:start="37:5" pos:end="37:42"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:7">ctx</name><operator pos:start="37:8" pos:end="37:8">.</operator><name pos:start="37:9" pos:end="37:14">memidx</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <ternary pos:start="37:18" pos:end="37:42"><condition pos:start="37:18" pos:end="37:36"><expr pos:start="37:18" pos:end="37:34"><operator pos:start="37:18" pos:end="37:18">(</operator><name pos:start="37:19" pos:end="37:25"><name pos:start="37:19" pos:end="37:21">env</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:25">sr</name></name> <operator pos:start="37:27" pos:end="37:27">&amp;</operator> <name pos:start="37:29" pos:end="37:33">SR_MD</name><operator pos:start="37:34" pos:end="37:34">)</operator></expr> ?</condition><then pos:start="37:38" pos:end="37:38"> <expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">1</literal></expr> </then><else pos:start="37:40" pos:end="37:42">: <expr pos:start="37:42" pos:end="37:42"><literal type="number" pos:start="37:42" pos:end="37:42">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <comment type="block" pos:start="39:5" pos:end="41:44">/* We don't know if the delayed pc came from a dynamic or static branch,

       so assume it is a dynamic branch.  */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:24"><expr pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:7">ctx</name><operator pos:start="43:8" pos:end="43:8">.</operator><name pos:start="43:9" pos:end="43:18">delayed_pc</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <operator pos:start="43:22" pos:end="43:22">-</operator><literal type="number" pos:start="43:23" pos:end="43:23">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="43:26" pos:end="43:62">/* use delayed pc from env pointer */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:16"><expr pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:7">ctx</name><operator pos:start="45:8" pos:end="45:8">.</operator><name pos:start="45:9" pos:end="45:10">tb</name></name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:15">tb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:7">ctx</name><operator pos:start="47:8" pos:end="47:8">.</operator><name pos:start="47:9" pos:end="47:26">singlestep_enabled</name></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:52"><name pos:start="47:30" pos:end="47:32">env</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:52">singlestep_enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:7">ctx</name><operator pos:start="49:8" pos:end="49:8">.</operator><name pos:start="49:9" pos:end="49:16">features</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:32"><name pos:start="49:20" pos:end="49:22">env</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:32">features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="56:0"><expr pos:start="51:5" pos:end="51:56"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:7">ctx</name><operator pos:start="51:8" pos:end="51:8">.</operator><name pos:start="51:9" pos:end="51:18">has_movcal</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <operator pos:start="51:22" pos:end="51:22">(</operator><name pos:start="51:23" pos:end="51:31"><name pos:start="51:23" pos:end="51:24">tb</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:31">flags</name></name> <operator pos:start="51:33" pos:end="51:33">&amp;</operator> <name pos:start="51:35" pos:end="51:55">TB_FLAG_PENDING_MOVCA</name><operator pos:start="51:56" pos:end="51:56">)</operator></expr>;</expr_stmt>



<cpp:ifdef pos:start="55:1" pos:end="55:18">#<cpp:directive pos:start="55:2" pos:end="55:6">ifdef</cpp:directive> <name pos:start="55:8" pos:end="55:18">DEBUG_DISAS</name></cpp:ifdef>

    <expr_stmt pos:start="57:5" pos:end="59:71"><expr pos:start="57:5" pos:end="59:70"><call pos:start="57:5" pos:end="59:70"><name pos:start="57:5" pos:end="57:17">qemu_log_mask</name><argument_list pos:start="57:18" pos:end="59:70">(<argument pos:start="57:19" pos:end="57:32"><expr pos:start="57:19" pos:end="57:32"><name pos:start="57:19" pos:end="57:32">CPU_LOG_TB_CPU</name></expr></argument>,

                 <argument pos:start="59:18" pos:end="59:69"><expr pos:start="59:18" pos:end="59:69"><literal type="string" pos:start="59:18" pos:end="59:69">"------------------------------------------------\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="64:0"><expr pos:start="61:5" pos:end="61:46"><call pos:start="61:5" pos:end="61:46"><name pos:start="61:5" pos:end="61:22">log_cpu_state_mask</name><argument_list pos:start="61:23" pos:end="61:46">(<argument pos:start="61:24" pos:end="61:37"><expr pos:start="61:24" pos:end="61:37"><name pos:start="61:24" pos:end="61:37">CPU_LOG_TB_CPU</name></expr></argument>, <argument pos:start="61:40" pos:end="61:42"><expr pos:start="61:40" pos:end="61:42"><name pos:start="61:40" pos:end="61:42">env</name></expr></argument>, <argument pos:start="61:45" pos:end="61:45"><expr pos:start="61:45" pos:end="61:45"><literal type="number" pos:start="61:45" pos:end="61:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="67:5" pos:end="67:12"><expr pos:start="67:5" pos:end="67:11"><name pos:start="67:5" pos:end="67:6">ii</name> <operator pos:start="67:8" pos:end="67:8">=</operator> <operator pos:start="67:10" pos:end="67:10">-</operator><literal type="number" pos:start="67:11" pos:end="67:11">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:18"><expr pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:13">num_insns</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <literal type="number" pos:start="69:17" pos:end="69:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:43"><expr pos:start="71:5" pos:end="71:42"><name pos:start="71:5" pos:end="71:13">max_insns</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <name pos:start="71:17" pos:end="71:26"><name pos:start="71:17" pos:end="71:18">tb</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:26">cflags</name></name> <operator pos:start="71:28" pos:end="71:28">&amp;</operator> <name pos:start="71:30" pos:end="71:42">CF_COUNT_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:34"><if pos:start="73:5" pos:end="75:34">if <condition pos:start="73:8" pos:end="73:23">(<expr pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:17">max_insns</name> <operator pos:start="73:19" pos:end="73:20">==</operator> <literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:34"><block_content pos:start="75:9" pos:end="75:34">

        <expr_stmt pos:start="75:9" pos:end="75:34"><expr pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:17">max_insns</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:33">CF_COUNT_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:23"><expr pos:start="77:5" pos:end="77:22"><call pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:20">gen_icount_start</name><argument_list pos:start="77:21" pos:end="77:22">()</argument_list></call></expr>;</expr_stmt>

    <while pos:start="79:5" pos:end="163:5">while <condition pos:start="79:11" pos:end="79:62">(<expr pos:start="79:12" pos:end="79:61"><name pos:start="79:12" pos:end="79:21"><name pos:start="79:12" pos:end="79:14">ctx</name><operator pos:start="79:15" pos:end="79:15">.</operator><name pos:start="79:16" pos:end="79:21">bstate</name></name> <operator pos:start="79:23" pos:end="79:24">==</operator> <name pos:start="79:26" pos:end="79:32">BS_NONE</name> <operator pos:start="79:34" pos:end="79:35">&amp;&amp;</operator> <name pos:start="79:37" pos:end="79:47">gen_opc_ptr</name> <operator pos:start="79:49" pos:end="79:49">&lt;</operator> <name pos:start="79:51" pos:end="79:61">gen_opc_end</name></expr>)</condition> <block pos:start="79:64" pos:end="163:5">{<block_content pos:start="81:9" pos:end="161:18">

        <if_stmt pos:start="81:9" pos:end="101:9"><if pos:start="81:9" pos:end="101:9">if <condition pos:start="81:12" pos:end="81:54">(<expr pos:start="81:13" pos:end="81:53"><call pos:start="81:13" pos:end="81:53"><name pos:start="81:13" pos:end="81:20">unlikely</name><argument_list pos:start="81:21" pos:end="81:53">(<argument pos:start="81:22" pos:end="81:52"><expr pos:start="81:22" pos:end="81:52"><operator pos:start="81:22" pos:end="81:22">!</operator><call pos:start="81:23" pos:end="81:52"><name pos:start="81:23" pos:end="81:33">TAILQ_EMPTY</name><argument_list pos:start="81:34" pos:end="81:52">(<argument pos:start="81:35" pos:end="81:51"><expr pos:start="81:35" pos:end="81:51"><operator pos:start="81:35" pos:end="81:35">&amp;</operator><name pos:start="81:36" pos:end="81:51"><name pos:start="81:36" pos:end="81:38">env</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:51">breakpoints</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:56" pos:end="101:9">{<block_content pos:start="83:13" pos:end="99:13">

            <macro pos:start="83:13" pos:end="83:55"><name pos:start="83:13" pos:end="83:25">TAILQ_FOREACH</name><argument_list pos:start="83:26" pos:end="83:55">(<argument pos:start="83:27" pos:end="83:28">bp</argument>, <argument pos:start="83:31" pos:end="83:47">&amp;env-&gt;breakpoints</argument>, <argument pos:start="83:50" pos:end="83:54">entry</argument>)</argument_list></macro> <block pos:start="83:57" pos:end="99:13">{<block_content pos:start="85:17" pos:end="97:17">

                <if_stmt pos:start="85:17" pos:end="97:17"><if pos:start="85:17" pos:end="97:17">if <condition pos:start="85:20" pos:end="85:37">(<expr pos:start="85:21" pos:end="85:36"><name pos:start="85:21" pos:end="85:26"><name pos:start="85:21" pos:end="85:23">ctx</name><operator pos:start="85:24" pos:end="85:24">.</operator><name pos:start="85:25" pos:end="85:26">pc</name></name> <operator pos:start="85:28" pos:end="85:29">==</operator> <name pos:start="85:31" pos:end="85:36"><name pos:start="85:31" pos:end="85:32">bp</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:36">pc</name></name></expr>)</condition> <block pos:start="85:39" pos:end="97:17">{<block_content pos:start="89:21" pos:end="95:26">

		    <comment type="block" pos:start="87:21" pos:end="87:79">/* We have hit a breakpoint - make sure PC is up-to-date */</comment>

		    <expr_stmt pos:start="89:21" pos:end="89:53"><expr pos:start="89:21" pos:end="89:52"><call pos:start="89:21" pos:end="89:52"><name pos:start="89:21" pos:end="89:36">tcg_gen_movi_i32</name><argument_list pos:start="89:37" pos:end="89:52">(<argument pos:start="89:38" pos:end="89:43"><expr pos:start="89:38" pos:end="89:43"><name pos:start="89:38" pos:end="89:43">cpu_pc</name></expr></argument>, <argument pos:start="89:46" pos:end="89:51"><expr pos:start="89:46" pos:end="89:51"><name pos:start="89:46" pos:end="89:51"><name pos:start="89:46" pos:end="89:48">ctx</name><operator pos:start="89:49" pos:end="89:49">.</operator><name pos:start="89:50" pos:end="89:51">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="91:21" pos:end="91:39"><expr pos:start="91:21" pos:end="91:38"><call pos:start="91:21" pos:end="91:38"><name pos:start="91:21" pos:end="91:36">gen_helper_debug</name><argument_list pos:start="91:37" pos:end="91:38">()</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="93:21" pos:end="93:41"><expr pos:start="93:21" pos:end="93:40"><name pos:start="93:21" pos:end="93:30"><name pos:start="93:21" pos:end="93:23">ctx</name><operator pos:start="93:24" pos:end="93:24">.</operator><name pos:start="93:25" pos:end="93:30">bstate</name></name> <operator pos:start="93:32" pos:end="93:32">=</operator> <name pos:start="93:34" pos:end="93:40">BS_EXCP</name></expr>;</expr_stmt>

		    <break pos:start="95:21" pos:end="95:26">break;</break>

		</block_content>}</block></if></if_stmt>

	    </block_content>}</block>

	</block_content>}</block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="125:9"><if pos:start="103:9" pos:end="125:9">if <condition pos:start="103:12" pos:end="103:22">(<expr pos:start="103:13" pos:end="103:21"><name pos:start="103:13" pos:end="103:21">search_pc</name></expr>)</condition> <block pos:start="103:24" pos:end="125:9">{<block_content pos:start="105:13" pos:end="123:43">

            <expr_stmt pos:start="105:13" pos:end="105:42"><expr pos:start="105:13" pos:end="105:41"><name pos:start="105:13" pos:end="105:13">i</name> <operator pos:start="105:15" pos:end="105:15">=</operator> <name pos:start="105:17" pos:end="105:27">gen_opc_ptr</name> <operator pos:start="105:29" pos:end="105:29">-</operator> <name pos:start="105:31" pos:end="105:41">gen_opc_buf</name></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="115:13"><if pos:start="107:13" pos:end="115:13">if <condition pos:start="107:16" pos:end="107:23">(<expr pos:start="107:17" pos:end="107:22"><name pos:start="107:17" pos:end="107:18">ii</name> <operator pos:start="107:20" pos:end="107:20">&lt;</operator> <name pos:start="107:22" pos:end="107:22">i</name></expr>)</condition> <block pos:start="107:25" pos:end="115:13">{<block_content pos:start="109:17" pos:end="113:50">

                <expr_stmt pos:start="109:17" pos:end="109:21"><expr pos:start="109:17" pos:end="109:20"><name pos:start="109:17" pos:end="109:18">ii</name><operator pos:start="109:19" pos:end="109:20">++</operator></expr>;</expr_stmt>

                <while pos:start="111:17" pos:end="113:50">while <condition pos:start="111:23" pos:end="111:30">(<expr pos:start="111:24" pos:end="111:29"><name pos:start="111:24" pos:end="111:25">ii</name> <operator pos:start="111:27" pos:end="111:27">&lt;</operator> <name pos:start="111:29" pos:end="111:29">i</name></expr>)</condition><block type="pseudo" pos:start="113:21" pos:end="113:50"><block_content pos:start="113:21" pos:end="113:50">

                    <expr_stmt pos:start="113:21" pos:end="113:50"><expr pos:start="113:21" pos:end="113:49"><name pos:start="113:21" pos:end="113:45"><name pos:start="113:21" pos:end="113:39">gen_opc_instr_start</name><index pos:start="113:40" pos:end="113:45">[<expr pos:start="113:41" pos:end="113:44"><name pos:start="113:41" pos:end="113:42">ii</name><operator pos:start="113:43" pos:end="113:44">++</operator></expr>]</index></name> <operator pos:start="113:47" pos:end="113:47">=</operator> <literal type="number" pos:start="113:49" pos:end="113:49">0</literal></expr>;</expr_stmt></block_content></block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:36"><expr pos:start="117:13" pos:end="117:35"><name pos:start="117:13" pos:end="117:26"><name pos:start="117:13" pos:end="117:22">gen_opc_pc</name><index pos:start="117:23" pos:end="117:26">[<expr pos:start="117:24" pos:end="117:25"><name pos:start="117:24" pos:end="117:25">ii</name></expr>]</index></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <name pos:start="117:30" pos:end="117:35"><name pos:start="117:30" pos:end="117:32">ctx</name><operator pos:start="117:33" pos:end="117:33">.</operator><name pos:start="117:34" pos:end="117:35">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:43"><expr pos:start="119:13" pos:end="119:42"><name pos:start="119:13" pos:end="119:30"><name pos:start="119:13" pos:end="119:26">gen_opc_hflags</name><index pos:start="119:27" pos:end="119:30">[<expr pos:start="119:28" pos:end="119:29"><name pos:start="119:28" pos:end="119:29">ii</name></expr>]</index></name> <operator pos:start="119:32" pos:end="119:32">=</operator> <name pos:start="119:34" pos:end="119:42"><name pos:start="119:34" pos:end="119:36">ctx</name><operator pos:start="119:37" pos:end="119:37">.</operator><name pos:start="119:38" pos:end="119:42">flags</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:40"><expr pos:start="121:13" pos:end="121:39"><name pos:start="121:13" pos:end="121:35"><name pos:start="121:13" pos:end="121:31">gen_opc_instr_start</name><index pos:start="121:32" pos:end="121:35">[<expr pos:start="121:33" pos:end="121:34"><name pos:start="121:33" pos:end="121:34">ii</name></expr>]</index></name> <operator pos:start="121:37" pos:end="121:37">=</operator> <literal type="number" pos:start="121:39" pos:end="121:39">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:43"><expr pos:start="123:13" pos:end="123:42"><name pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:26">gen_opc_icount</name><index pos:start="123:27" pos:end="123:30">[<expr pos:start="123:28" pos:end="123:29"><name pos:start="123:28" pos:end="123:29">ii</name></expr>]</index></name> <operator pos:start="123:32" pos:end="123:32">=</operator> <name pos:start="123:34" pos:end="123:42">num_insns</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="127:9" pos:end="138:0"><if pos:start="127:9" pos:end="138:0">if <condition pos:start="127:12" pos:end="127:68">(<expr pos:start="127:13" pos:end="127:67"><name pos:start="127:13" pos:end="127:21">num_insns</name> <operator pos:start="127:23" pos:end="127:23">+</operator> <literal type="number" pos:start="127:25" pos:end="127:25">1</literal> <operator pos:start="127:27" pos:end="127:28">==</operator> <name pos:start="127:30" pos:end="127:38">max_insns</name> <operator pos:start="127:40" pos:end="127:41">&amp;&amp;</operator> <operator pos:start="127:43" pos:end="127:43">(</operator><name pos:start="127:44" pos:end="127:53"><name pos:start="127:44" pos:end="127:45">tb</name><operator pos:start="127:46" pos:end="127:47">-&gt;</operator><name pos:start="127:48" pos:end="127:53">cflags</name></name> <operator pos:start="127:55" pos:end="127:55">&amp;</operator> <name pos:start="127:57" pos:end="127:66">CF_LAST_IO</name><operator pos:start="127:67" pos:end="127:67">)</operator></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="138:0"><block_content pos:start="129:13" pos:end="138:0">

            <expr_stmt pos:start="129:13" pos:end="138:0"><expr pos:start="129:13" pos:end="129:26"><call pos:start="129:13" pos:end="129:26"><name pos:start="129:13" pos:end="129:24">gen_io_start</name><argument_list pos:start="129:25" pos:end="129:26">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:if pos:start="131:1" pos:end="131:5">#<cpp:directive pos:start="131:2" pos:end="131:3">if</cpp:directive> <expr pos:start="131:5" pos:end="131:5"><literal type="number" pos:start="131:5" pos:end="131:5">0</literal></expr></cpp:if>

	fprintf(stderr, "Loading opcode at address 0x%08x\n", ctx.pc);

	fflush(stderr);

<cpp:endif pos:start="137:1" pos:end="137:6">#<cpp:directive pos:start="137:2" pos:end="137:6">endif</cpp:directive></cpp:endif>

	<expr_stmt pos:start="139:9" pos:end="139:39"><expr pos:start="139:9" pos:end="139:38"><name pos:start="139:9" pos:end="139:18"><name pos:start="139:9" pos:end="139:11">ctx</name><operator pos:start="139:12" pos:end="139:12">.</operator><name pos:start="139:13" pos:end="139:18">opcode</name></name> <operator pos:start="139:20" pos:end="139:20">=</operator> <call pos:start="139:22" pos:end="139:38"><name pos:start="139:22" pos:end="139:30">lduw_code</name><argument_list pos:start="139:31" pos:end="139:38">(<argument pos:start="139:32" pos:end="139:37"><expr pos:start="139:32" pos:end="139:37"><name pos:start="139:32" pos:end="139:37"><name pos:start="139:32" pos:end="139:34">ctx</name><operator pos:start="139:35" pos:end="139:35">.</operator><name pos:start="139:36" pos:end="139:37">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="141:9" pos:end="141:25"><expr pos:start="141:9" pos:end="141:24"><call pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:18">decode_opc</name><argument_list pos:start="141:19" pos:end="141:24">(<argument pos:start="141:20" pos:end="141:23"><expr pos:start="141:20" pos:end="141:23"><operator pos:start="141:20" pos:end="141:20">&amp;</operator><name pos:start="141:21" pos:end="141:23">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:20"><expr pos:start="143:9" pos:end="143:19"><name pos:start="143:9" pos:end="143:17">num_insns</name><operator pos:start="143:18" pos:end="143:19">++</operator></expr>;</expr_stmt>

	<expr_stmt pos:start="145:9" pos:end="145:20"><expr pos:start="145:9" pos:end="145:19"><name pos:start="145:9" pos:end="145:14"><name pos:start="145:9" pos:end="145:11">ctx</name><operator pos:start="145:12" pos:end="145:12">.</operator><name pos:start="145:13" pos:end="145:14">pc</name></name> <operator pos:start="145:16" pos:end="145:17">+=</operator> <literal type="number" pos:start="145:19" pos:end="145:19">2</literal></expr>;</expr_stmt>

	<if_stmt pos:start="147:9" pos:end="149:18"><if pos:start="147:9" pos:end="149:18">if <condition pos:start="147:12" pos:end="147:51">(<expr pos:start="147:13" pos:end="147:50"><operator pos:start="147:13" pos:end="147:13">(</operator><name pos:start="147:14" pos:end="147:19"><name pos:start="147:14" pos:end="147:16">ctx</name><operator pos:start="147:17" pos:end="147:17">.</operator><name pos:start="147:18" pos:end="147:19">pc</name></name> <operator pos:start="147:21" pos:end="147:21">&amp;</operator> <operator pos:start="147:23" pos:end="147:23">(</operator><name pos:start="147:24" pos:end="147:39">TARGET_PAGE_SIZE</name> <operator pos:start="147:41" pos:end="147:41">-</operator> <literal type="number" pos:start="147:43" pos:end="147:43">1</literal><operator pos:start="147:44" pos:end="147:44">)</operator><operator pos:start="147:45" pos:end="147:45">)</operator> <operator pos:start="147:47" pos:end="147:48">==</operator> <literal type="number" pos:start="147:50" pos:end="147:50">0</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:18"><block_content pos:start="149:13" pos:end="149:18">

	    <break pos:start="149:13" pos:end="149:18">break;</break></block_content></block></if></if_stmt>

	<if_stmt pos:start="151:9" pos:end="153:18"><if pos:start="151:9" pos:end="153:18">if <condition pos:start="151:12" pos:end="151:36">(<expr pos:start="151:13" pos:end="151:35"><name pos:start="151:13" pos:end="151:35"><name pos:start="151:13" pos:end="151:15">env</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:35">singlestep_enabled</name></name></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:18"><block_content pos:start="153:13" pos:end="153:18">

	    <break pos:start="153:13" pos:end="153:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="155:9" pos:end="157:18"><if pos:start="155:9" pos:end="157:18">if <condition pos:start="155:12" pos:end="155:35">(<expr pos:start="155:13" pos:end="155:34"><name pos:start="155:13" pos:end="155:21">num_insns</name> <operator pos:start="155:23" pos:end="155:24">&gt;=</operator> <name pos:start="155:26" pos:end="155:34">max_insns</name></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:18"><block_content pos:start="157:13" pos:end="157:18">

            <break pos:start="157:13" pos:end="157:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="159:9" pos:end="161:18"><if pos:start="159:9" pos:end="161:18">if <condition pos:start="159:12" pos:end="159:23">(<expr pos:start="159:13" pos:end="159:22"><name pos:start="159:13" pos:end="159:22">singlestep</name></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:18"><block_content pos:start="161:13" pos:end="161:18">

            <break pos:start="161:13" pos:end="161:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="165:5" pos:end="167:21"><if pos:start="165:5" pos:end="167:21">if <condition pos:start="165:8" pos:end="165:32">(<expr pos:start="165:9" pos:end="165:31"><name pos:start="165:9" pos:end="165:18"><name pos:start="165:9" pos:end="165:10">tb</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:18">cflags</name></name> <operator pos:start="165:20" pos:end="165:20">&amp;</operator> <name pos:start="165:22" pos:end="165:31">CF_LAST_IO</name></expr>)</condition><block type="pseudo" pos:start="167:9" pos:end="167:21"><block_content pos:start="167:9" pos:end="167:21">

        <expr_stmt pos:start="167:9" pos:end="167:21"><expr pos:start="167:9" pos:end="167:20"><call pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:18">gen_io_end</name><argument_list pos:start="167:19" pos:end="167:20">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="169:5" pos:end="213:5"><if pos:start="169:5" pos:end="175:5">if <condition pos:start="169:8" pos:end="169:32">(<expr pos:start="169:9" pos:end="169:31"><name pos:start="169:9" pos:end="169:31"><name pos:start="169:9" pos:end="169:11">env</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:31">singlestep_enabled</name></name></expr>)</condition> <block pos:start="169:34" pos:end="175:5">{<block_content pos:start="171:9" pos:end="173:27">

        <expr_stmt pos:start="171:9" pos:end="171:41"><expr pos:start="171:9" pos:end="171:40"><call pos:start="171:9" pos:end="171:40"><name pos:start="171:9" pos:end="171:24">tcg_gen_movi_i32</name><argument_list pos:start="171:25" pos:end="171:40">(<argument pos:start="171:26" pos:end="171:31"><expr pos:start="171:26" pos:end="171:31"><name pos:start="171:26" pos:end="171:31">cpu_pc</name></expr></argument>, <argument pos:start="171:34" pos:end="171:39"><expr pos:start="171:34" pos:end="171:39"><name pos:start="171:34" pos:end="171:39"><name pos:start="171:34" pos:end="171:36">ctx</name><operator pos:start="171:37" pos:end="171:37">.</operator><name pos:start="171:38" pos:end="171:39">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:27"><expr pos:start="173:9" pos:end="173:26"><call pos:start="173:9" pos:end="173:26"><name pos:start="173:9" pos:end="173:24">gen_helper_debug</name><argument_list pos:start="173:25" pos:end="173:26">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="175:7" pos:end="213:5">else <block pos:start="175:12" pos:end="213:5">{<block_content pos:start="177:9" pos:end="211:9">

	<switch pos:start="177:9" pos:end="211:9">switch <condition pos:start="177:16" pos:end="177:27">(<expr pos:start="177:17" pos:end="177:26"><name pos:start="177:17" pos:end="177:26"><name pos:start="177:17" pos:end="177:19">ctx</name><operator pos:start="177:20" pos:end="177:20">.</operator><name pos:start="177:21" pos:end="177:26">bstate</name></name></expr>)</condition> <block pos:start="177:29" pos:end="211:9">{<block_content pos:start="179:9" pos:end="209:18">

        <case pos:start="179:9" pos:end="179:21">case <expr pos:start="179:14" pos:end="179:20"><name pos:start="179:14" pos:end="179:20">BS_STOP</name></expr>:</case>

            <comment type="block" pos:start="181:13" pos:end="181:45">/* gen_op_interrupt_restart(); */</comment>

            <comment type="block" pos:start="183:13" pos:end="183:30">/* fall through */</comment>

        <case pos:start="185:9" pos:end="185:21">case <expr pos:start="185:14" pos:end="185:20"><name pos:start="185:14" pos:end="185:20">BS_NONE</name></expr>:</case>

            <if_stmt pos:start="187:13" pos:end="191:13"><if pos:start="187:13" pos:end="191:13">if <condition pos:start="187:16" pos:end="187:26">(<expr pos:start="187:17" pos:end="187:25"><name pos:start="187:17" pos:end="187:25"><name pos:start="187:17" pos:end="187:19">ctx</name><operator pos:start="187:20" pos:end="187:20">.</operator><name pos:start="187:21" pos:end="187:25">flags</name></name></expr>)</condition> <block pos:start="187:28" pos:end="191:13">{<block_content pos:start="189:17" pos:end="189:64">

                <expr_stmt pos:start="189:17" pos:end="189:64"><expr pos:start="189:17" pos:end="189:63"><call pos:start="189:17" pos:end="189:63"><name pos:start="189:17" pos:end="189:31">gen_store_flags</name><argument_list pos:start="189:32" pos:end="189:63">(<argument pos:start="189:33" pos:end="189:62"><expr pos:start="189:33" pos:end="189:62"><name pos:start="189:33" pos:end="189:41"><name pos:start="189:33" pos:end="189:35">ctx</name><operator pos:start="189:36" pos:end="189:36">.</operator><name pos:start="189:37" pos:end="189:41">flags</name></name> <operator pos:start="189:43" pos:end="189:43">|</operator> <name pos:start="189:45" pos:end="189:62">DELAY_SLOT_CLEARME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:41"><expr pos:start="193:13" pos:end="193:40"><call pos:start="193:13" pos:end="193:40"><name pos:start="193:13" pos:end="193:23">gen_goto_tb</name><argument_list pos:start="193:24" pos:end="193:40">(<argument pos:start="193:25" pos:end="193:28"><expr pos:start="193:25" pos:end="193:28"><operator pos:start="193:25" pos:end="193:25">&amp;</operator><name pos:start="193:26" pos:end="193:28">ctx</name></expr></argument>, <argument pos:start="193:31" pos:end="193:31"><expr pos:start="193:31" pos:end="193:31"><literal type="number" pos:start="193:31" pos:end="193:31">0</literal></expr></argument>, <argument pos:start="193:34" pos:end="193:39"><expr pos:start="193:34" pos:end="193:39"><name pos:start="193:34" pos:end="193:39"><name pos:start="193:34" pos:end="193:36">ctx</name><operator pos:start="193:37" pos:end="193:37">.</operator><name pos:start="193:38" pos:end="193:39">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <case pos:start="197:9" pos:end="197:21">case <expr pos:start="197:14" pos:end="197:20"><name pos:start="197:14" pos:end="197:20">BS_EXCP</name></expr>:</case>

            <comment type="block" pos:start="199:13" pos:end="199:45">/* gen_op_interrupt_restart(); */</comment>

            <expr_stmt pos:start="201:13" pos:end="201:31"><expr pos:start="201:13" pos:end="201:30"><call pos:start="201:13" pos:end="201:30"><name pos:start="201:13" pos:end="201:27">tcg_gen_exit_tb</name><argument_list pos:start="201:28" pos:end="201:30">(<argument pos:start="201:29" pos:end="201:29"><expr pos:start="201:29" pos:end="201:29"><literal type="number" pos:start="201:29" pos:end="201:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="203:13" pos:end="203:18">break;</break>

        <case pos:start="205:9" pos:end="205:23">case <expr pos:start="205:14" pos:end="205:22"><name pos:start="205:14" pos:end="205:22">BS_BRANCH</name></expr>:</case>

        <default pos:start="207:9" pos:end="207:16">default:</default>

            <break pos:start="209:13" pos:end="209:18">break;</break>

	</block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="217:5" pos:end="217:34"><expr pos:start="217:5" pos:end="217:33"><call pos:start="217:5" pos:end="217:33"><name pos:start="217:5" pos:end="217:18">gen_icount_end</name><argument_list pos:start="217:19" pos:end="217:33">(<argument pos:start="217:20" pos:end="217:21"><expr pos:start="217:20" pos:end="217:21"><name pos:start="217:20" pos:end="217:21">tb</name></expr></argument>, <argument pos:start="217:24" pos:end="217:32"><expr pos:start="217:24" pos:end="217:32"><name pos:start="217:24" pos:end="217:32">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:32"><expr pos:start="219:5" pos:end="219:31"><operator pos:start="219:5" pos:end="219:5">*</operator><name pos:start="219:6" pos:end="219:16">gen_opc_ptr</name> <operator pos:start="219:18" pos:end="219:18">=</operator> <name pos:start="219:20" pos:end="219:31">INDEX_op_end</name></expr>;</expr_stmt>

    <if_stmt pos:start="221:5" pos:end="244:0"><if pos:start="221:5" pos:end="231:5">if <condition pos:start="221:8" pos:end="221:18">(<expr pos:start="221:9" pos:end="221:17"><name pos:start="221:9" pos:end="221:17">search_pc</name></expr>)</condition> <block pos:start="221:20" pos:end="231:5">{<block_content pos:start="223:9" pos:end="229:42">

        <expr_stmt pos:start="223:9" pos:end="223:38"><expr pos:start="223:9" pos:end="223:37"><name pos:start="223:9" pos:end="223:9">i</name> <operator pos:start="223:11" pos:end="223:11">=</operator> <name pos:start="223:13" pos:end="223:23">gen_opc_ptr</name> <operator pos:start="223:25" pos:end="223:25">-</operator> <name pos:start="223:27" pos:end="223:37">gen_opc_buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:13"><expr pos:start="225:9" pos:end="225:12"><name pos:start="225:9" pos:end="225:10">ii</name><operator pos:start="225:11" pos:end="225:12">++</operator></expr>;</expr_stmt>

        <while pos:start="227:9" pos:end="229:42">while <condition pos:start="227:15" pos:end="227:23">(<expr pos:start="227:16" pos:end="227:22"><name pos:start="227:16" pos:end="227:17">ii</name> <operator pos:start="227:19" pos:end="227:20">&lt;=</operator> <name pos:start="227:22" pos:end="227:22">i</name></expr>)</condition><block type="pseudo" pos:start="229:13" pos:end="229:42"><block_content pos:start="229:13" pos:end="229:42">

            <expr_stmt pos:start="229:13" pos:end="229:42"><expr pos:start="229:13" pos:end="229:41"><name pos:start="229:13" pos:end="229:37"><name pos:start="229:13" pos:end="229:31">gen_opc_instr_start</name><index pos:start="229:32" pos:end="229:37">[<expr pos:start="229:33" pos:end="229:36"><name pos:start="229:33" pos:end="229:34">ii</name><operator pos:start="229:35" pos:end="229:36">++</operator></expr>]</index></name> <operator pos:start="229:39" pos:end="229:39">=</operator> <literal type="number" pos:start="229:41" pos:end="229:41">0</literal></expr>;</expr_stmt></block_content></block></while>

    </block_content>}</block></if> <else pos:start="231:7" pos:end="244:0">else <block pos:start="231:12" pos:end="244:0">{<block_content pos:start="233:9" pos:end="235:31">

        <expr_stmt pos:start="233:9" pos:end="233:37"><expr pos:start="233:9" pos:end="233:36"><name pos:start="233:9" pos:end="233:16"><name pos:start="233:9" pos:end="233:10">tb</name><operator pos:start="233:11" pos:end="233:12">-&gt;</operator><name pos:start="233:13" pos:end="233:16">size</name></name> <operator pos:start="233:18" pos:end="233:18">=</operator> <name pos:start="233:20" pos:end="233:25"><name pos:start="233:20" pos:end="233:22">ctx</name><operator pos:start="233:23" pos:end="233:23">.</operator><name pos:start="233:24" pos:end="233:25">pc</name></name> <operator pos:start="233:27" pos:end="233:27">-</operator> <name pos:start="233:29" pos:end="233:36">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:31"><expr pos:start="235:9" pos:end="235:30"><name pos:start="235:9" pos:end="235:18"><name pos:start="235:9" pos:end="235:10">tb</name><operator pos:start="235:11" pos:end="235:12">-&gt;</operator><name pos:start="235:13" pos:end="235:18">icount</name></name> <operator pos:start="235:20" pos:end="235:20">=</operator> <name pos:start="235:22" pos:end="235:30">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="241:1" pos:end="241:18">#<cpp:directive pos:start="241:2" pos:end="241:6">ifdef</cpp:directive> <name pos:start="241:8" pos:end="241:18">DEBUG_DISAS</name></cpp:ifdef>

<cpp:ifdef pos:start="243:1" pos:end="243:22">#<cpp:directive pos:start="243:2" pos:end="243:6">ifdef</cpp:directive> <name pos:start="243:8" pos:end="243:22">SH4_DEBUG_DISAS</name></cpp:ifdef>

    <expr_stmt pos:start="245:5" pos:end="248:0"><expr pos:start="245:5" pos:end="245:42"><call pos:start="245:5" pos:end="245:42"><name pos:start="245:5" pos:end="245:17">qemu_log_mask</name><argument_list pos:start="245:18" pos:end="245:42">(<argument pos:start="245:19" pos:end="245:35"><expr pos:start="245:19" pos:end="245:35"><name pos:start="245:19" pos:end="245:35">CPU_LOG_TB_IN_ASM</name></expr></argument>, <argument pos:start="245:38" pos:end="245:41"><expr pos:start="245:38" pos:end="245:41"><literal type="string" pos:start="245:38" pos:end="245:41">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="247:1" pos:end="247:6">#<cpp:directive pos:start="247:2" pos:end="247:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="249:5" pos:end="260:0"><if pos:start="249:5" pos:end="260:0">if <condition pos:start="249:8" pos:end="249:46">(<expr pos:start="249:9" pos:end="249:45"><call pos:start="249:9" pos:end="249:45"><name pos:start="249:9" pos:end="249:26">qemu_loglevel_mask</name><argument_list pos:start="249:27" pos:end="249:45">(<argument pos:start="249:28" pos:end="249:44"><expr pos:start="249:28" pos:end="249:44"><name pos:start="249:28" pos:end="249:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="249:48" pos:end="260:0">{<block_content pos:start="251:9" pos:end="255:23">

	<expr_stmt pos:start="251:9" pos:end="251:26"><expr pos:start="251:9" pos:end="251:25"><call pos:start="251:9" pos:end="251:25"><name pos:start="251:9" pos:end="251:16">qemu_log</name><argument_list pos:start="251:17" pos:end="251:25">(<argument pos:start="251:18" pos:end="251:24"><expr pos:start="251:18" pos:end="251:24"><literal type="string" pos:start="251:18" pos:end="251:24">"IN:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="251:33" pos:end="251:65">/* , lookup_symbol(pc_start)); */</comment>

	<expr_stmt pos:start="253:9" pos:end="253:57"><expr pos:start="253:9" pos:end="253:56"><call pos:start="253:9" pos:end="253:56"><name pos:start="253:9" pos:end="253:24">log_target_disas</name><argument_list pos:start="253:25" pos:end="253:56">(<argument pos:start="253:26" pos:end="253:33"><expr pos:start="253:26" pos:end="253:33"><name pos:start="253:26" pos:end="253:33">pc_start</name></expr></argument>, <argument pos:start="253:36" pos:end="253:52"><expr pos:start="253:36" pos:end="253:52"><name pos:start="253:36" pos:end="253:41"><name pos:start="253:36" pos:end="253:38">ctx</name><operator pos:start="253:39" pos:end="253:39">.</operator><name pos:start="253:40" pos:end="253:41">pc</name></name> <operator pos:start="253:43" pos:end="253:43">-</operator> <name pos:start="253:45" pos:end="253:52">pc_start</name></expr></argument>, <argument pos:start="253:55" pos:end="253:55"><expr pos:start="253:55" pos:end="253:55"><literal type="number" pos:start="253:55" pos:end="253:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="255:9" pos:end="255:23"><expr pos:start="255:9" pos:end="255:22"><call pos:start="255:9" pos:end="255:22"><name pos:start="255:9" pos:end="255:16">qemu_log</name><argument_list pos:start="255:17" pos:end="255:22">(<argument pos:start="255:18" pos:end="255:21"><expr pos:start="255:18" pos:end="255:21"><literal type="string" pos:start="255:18" pos:end="255:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="259:1" pos:end="259:6">#<cpp:directive pos:start="259:2" pos:end="259:6">endif</cpp:directive></cpp:endif>

</block_content>}</block>
</unit>
