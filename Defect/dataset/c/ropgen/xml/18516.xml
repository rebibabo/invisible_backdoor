<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18516.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">lx60_net_init</name><parameter_list pos:start="1:26" pos:end="9:34">(<parameter pos:start="1:27" pos:end="1:53"><decl pos:start="1:27" pos:end="1:53"><type pos:start="1:27" pos:end="1:53"><name pos:start="1:27" pos:end="1:38">MemoryRegion</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:53">address_space</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:19"><decl pos:start="3:9" pos:end="3:19"><type pos:start="3:9" pos:end="3:19"><name pos:start="3:9" pos:end="3:14">hwaddr</name></type> <name pos:start="3:16" pos:end="3:19">base</name></decl></parameter>,

        <parameter pos:start="5:9" pos:end="5:26"><decl pos:start="5:9" pos:end="5:26"><type pos:start="5:9" pos:end="5:26"><name pos:start="5:9" pos:end="5:14">hwaddr</name></type> <name pos:start="5:16" pos:end="5:26">descriptors</name></decl></parameter>,

        <parameter pos:start="7:9" pos:end="7:22"><decl pos:start="7:9" pos:end="7:22"><type pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:14">hwaddr</name></type> <name pos:start="7:16" pos:end="7:22">buffers</name></decl></parameter>,

        <parameter pos:start="9:9" pos:end="9:20"><decl pos:start="9:9" pos:end="9:20"><type pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:16">qemu_irq</name></type> <name pos:start="9:18" pos:end="9:20">irq</name></decl></parameter>, <parameter pos:start="9:23" pos:end="9:33"><decl pos:start="9:23" pos:end="9:33"><type pos:start="9:23" pos:end="9:33"><name pos:start="9:23" pos:end="9:29">NICInfo</name> <modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:33">nd</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="51:1">{<block_content pos:start="13:5" pos:end="49:61">

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">DeviceState</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">SysBusDevice</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">MemoryRegion</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:21">ram</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:7">dev</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:39"><name pos:start="21:11" pos:end="21:21">qdev_create</name><argument_list pos:start="21:22" pos:end="21:39">(<argument pos:start="21:23" pos:end="21:26"><expr pos:start="21:23" pos:end="21:26"><name pos:start="21:23" pos:end="21:26">NULL</name></expr></argument>, <argument pos:start="21:29" pos:end="21:38"><expr pos:start="21:29" pos:end="21:38"><literal type="string" pos:start="21:29" pos:end="21:38">"open_eth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><call pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:27">qdev_set_nic_properties</name><argument_list pos:start="23:28" pos:end="23:36">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">dev</name></expr></argument>, <argument pos:start="23:34" pos:end="23:35"><expr pos:start="23:34" pos:end="23:35"><name pos:start="23:34" pos:end="23:35">nd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:20">qdev_init_nofail</name><argument_list pos:start="25:21" pos:end="25:25">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:5">s</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:22">SYS_BUS_DEVICE</name><argument_list pos:start="29:23" pos:end="29:27">(<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><call pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:22">sysbus_connect_irq</name><argument_list pos:start="31:23" pos:end="31:33">(<argument pos:start="31:24" pos:end="31:24"><expr pos:start="31:24" pos:end="31:24"><name pos:start="31:24" pos:end="31:24">s</name></expr></argument>, <argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr></argument>, <argument pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:32">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:42"><expr pos:start="33:5" pos:end="35:41"><call pos:start="33:5" pos:end="35:41"><name pos:start="33:5" pos:end="33:31">memory_region_add_subregion</name><argument_list pos:start="33:32" pos:end="35:41">(<argument pos:start="33:33" pos:end="33:45"><expr pos:start="33:33" pos:end="33:45"><name pos:start="33:33" pos:end="33:45">address_space</name></expr></argument>, <argument pos:start="33:48" pos:end="33:51"><expr pos:start="33:48" pos:end="33:51"><name pos:start="33:48" pos:end="33:51">base</name></expr></argument>,

            <argument pos:start="35:13" pos:end="35:40"><expr pos:start="35:13" pos:end="35:40"><call pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:34">sysbus_mmio_get_region</name><argument_list pos:start="35:35" pos:end="35:40">(<argument pos:start="35:36" pos:end="35:36"><expr pos:start="35:36" pos:end="35:36"><name pos:start="35:36" pos:end="35:36">s</name></expr></argument>, <argument pos:start="35:39" pos:end="35:39"><expr pos:start="35:39" pos:end="35:39"><literal type="number" pos:start="35:39" pos:end="35:39">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="39:42"><expr pos:start="37:5" pos:end="39:41"><call pos:start="37:5" pos:end="39:41"><name pos:start="37:5" pos:end="37:31">memory_region_add_subregion</name><argument_list pos:start="37:32" pos:end="39:41">(<argument pos:start="37:33" pos:end="37:45"><expr pos:start="37:33" pos:end="37:45"><name pos:start="37:33" pos:end="37:45">address_space</name></expr></argument>, <argument pos:start="37:48" pos:end="37:58"><expr pos:start="37:48" pos:end="37:58"><name pos:start="37:48" pos:end="37:58">descriptors</name></expr></argument>,

            <argument pos:start="39:13" pos:end="39:40"><expr pos:start="39:13" pos:end="39:40"><call pos:start="39:13" pos:end="39:40"><name pos:start="39:13" pos:end="39:34">sysbus_mmio_get_region</name><argument_list pos:start="39:35" pos:end="39:40">(<argument pos:start="39:36" pos:end="39:36"><expr pos:start="39:36" pos:end="39:36"><name pos:start="39:36" pos:end="39:36">s</name></expr></argument>, <argument pos:start="39:39" pos:end="39:39"><expr pos:start="39:39" pos:end="39:39"><literal type="number" pos:start="39:39" pos:end="39:39">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:7">ram</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:32"><name pos:start="43:11" pos:end="43:18">g_malloc</name><argument_list pos:start="43:19" pos:end="43:32">(<argument pos:start="43:20" pos:end="43:31"><expr pos:start="43:20" pos:end="43:31"><sizeof pos:start="43:20" pos:end="43:31">sizeof<argument_list pos:start="43:26" pos:end="43:31">(<argument pos:start="43:27" pos:end="43:30"><expr pos:start="43:27" pos:end="43:30"><operator pos:start="43:27" pos:end="43:27">*</operator><name pos:start="43:28" pos:end="43:30">ram</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:80"><expr pos:start="45:5" pos:end="45:79"><call pos:start="45:5" pos:end="45:79"><name pos:start="45:5" pos:end="45:26">memory_region_init_ram</name><argument_list pos:start="45:27" pos:end="45:79">(<argument pos:start="45:28" pos:end="45:30"><expr pos:start="45:28" pos:end="45:30"><name pos:start="45:28" pos:end="45:30">ram</name></expr></argument>, <argument pos:start="45:33" pos:end="45:41"><expr pos:start="45:33" pos:end="45:41"><call pos:start="45:33" pos:end="45:41"><name pos:start="45:33" pos:end="45:38">OBJECT</name><argument_list pos:start="45:39" pos:end="45:41">(<argument pos:start="45:40" pos:end="45:40"><expr pos:start="45:40" pos:end="45:40"><name pos:start="45:40" pos:end="45:40">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:44" pos:end="45:57"><expr pos:start="45:44" pos:end="45:57"><literal type="string" pos:start="45:44" pos:end="45:57">"open_eth.ram"</literal></expr></argument>, <argument pos:start="45:60" pos:end="45:64"><expr pos:start="45:60" pos:end="45:64"><literal type="number" pos:start="45:60" pos:end="45:64">16384</literal></expr></argument>, <argument pos:start="45:67" pos:end="45:78"><expr pos:start="45:67" pos:end="45:78"><operator pos:start="45:67" pos:end="45:67">&amp;</operator><name pos:start="45:68" pos:end="45:78">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:37"><expr pos:start="47:5" pos:end="47:36"><call pos:start="47:5" pos:end="47:36"><name pos:start="47:5" pos:end="47:31">vmstate_register_ram_global</name><argument_list pos:start="47:32" pos:end="47:36">(<argument pos:start="47:33" pos:end="47:35"><expr pos:start="47:33" pos:end="47:35"><name pos:start="47:33" pos:end="47:35">ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:61"><expr pos:start="49:5" pos:end="49:60"><call pos:start="49:5" pos:end="49:60"><name pos:start="49:5" pos:end="49:31">memory_region_add_subregion</name><argument_list pos:start="49:32" pos:end="49:60">(<argument pos:start="49:33" pos:end="49:45"><expr pos:start="49:33" pos:end="49:45"><name pos:start="49:33" pos:end="49:45">address_space</name></expr></argument>, <argument pos:start="49:48" pos:end="49:54"><expr pos:start="49:48" pos:end="49:54"><name pos:start="49:48" pos:end="49:54">buffers</name></expr></argument>, <argument pos:start="49:57" pos:end="49:59"><expr pos:start="49:57" pos:end="49:59"><name pos:start="49:57" pos:end="49:59">ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
