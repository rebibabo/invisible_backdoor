<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18774.c" pos:tabs="8"><function pos:start="1:1" pos:end="375:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">print_report</name><parameter_list pos:start="1:25" pos:end="1:83">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:28">int</name></type> <name pos:start="1:30" pos:end="1:43">is_last_report</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:64"><decl pos:start="1:46" pos:end="1:64"><type pos:start="1:46" pos:end="1:64"><name pos:start="1:46" pos:end="1:52">int64_t</name></type> <name pos:start="1:54" pos:end="1:64">timer_start</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:82"><decl pos:start="1:67" pos:end="1:82"><type pos:start="1:67" pos:end="1:82"><name pos:start="1:67" pos:end="1:73">int64_t</name></type> <name pos:start="1:75" pos:end="1:82">cur_time</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="375:1">{<block_content pos:start="5:5" pos:end="373:38">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:18"><name pos:start="5:10" pos:end="5:12">buf</name><index pos:start="5:13" pos:end="5:18">[<expr pos:start="5:14" pos:end="5:17"><literal type="number" pos:start="5:14" pos:end="5:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">AVBPrint</name></type> <name pos:start="7:14" pos:end="7:23">buf_script</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">OutputStream</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">AVFormatContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:23">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:22">total_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">frame_number</name></decl>, <decl pos:start="17:23" pos:end="17:25"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:23" pos:end="17:25">vid</name></decl>, <decl pos:start="17:28" pos:end="17:28"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:28" pos:end="17:28">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">double</name></type> <name pos:start="19:12" pos:end="19:18">bitrate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">double</name></type> <name pos:start="21:12" pos:end="21:16">speed</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:32"><decl pos:start="23:5" pos:end="23:31"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int64_t</name></type> <name pos:start="23:13" pos:end="23:15">pts</name> <init pos:start="23:17" pos:end="23:31">= <expr pos:start="23:19" pos:end="23:31"><name pos:start="23:19" pos:end="23:27">INT64_MIN</name> <operator pos:start="23:29" pos:end="23:29">+</operator> <literal type="number" pos:start="23:31" pos:end="23:31">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:34"><decl pos:start="25:5" pos:end="25:33"><type pos:start="25:5" pos:end="25:18"><specifier pos:start="25:5" pos:end="25:10">static</specifier> <name pos:start="25:12" pos:end="25:18">int64_t</name></type> <name pos:start="25:20" pos:end="25:28">last_time</name> <init pos:start="25:30" pos:end="25:33">= <expr pos:start="25:32" pos:end="25:33"><operator pos:start="25:32" pos:end="25:32">-</operator><literal type="number" pos:start="25:33" pos:end="25:33">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:32"><decl pos:start="27:5" pos:end="27:31"><type pos:start="27:5" pos:end="27:14"><specifier pos:start="27:5" pos:end="27:10">static</specifier> <name pos:start="27:12" pos:end="27:14">int</name></type> <name pos:start="27:16" pos:end="27:31"><name pos:start="27:16" pos:end="27:27">qp_histogram</name><index pos:start="27:28" pos:end="27:31">[<expr pos:start="27:29" pos:end="27:30"><literal type="number" pos:start="27:29" pos:end="27:30">52</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:30"><decl pos:start="29:5" pos:end="29:13"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:13">hours</name></decl>, <decl pos:start="29:16" pos:end="29:19"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:16" pos:end="29:19">mins</name></decl>, <decl pos:start="29:22" pos:end="29:25"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:22" pos:end="29:25">secs</name></decl>, <decl pos:start="29:28" pos:end="29:29"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:28" pos:end="29:29">us</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:12"><decl pos:start="31:5" pos:end="31:11"><type pos:start="31:5" pos:end="31:9"><name pos:start="31:5" pos:end="31:9">float</name></type> <name pos:start="31:11" pos:end="31:11">t</name></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="37:15"><if pos:start="35:5" pos:end="37:15">if <condition pos:start="35:8" pos:end="35:58">(<expr pos:start="35:9" pos:end="35:57"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:20">print_stats</name> <operator pos:start="35:22" pos:end="35:23">&amp;&amp;</operator> <operator pos:start="35:25" pos:end="35:25">!</operator><name pos:start="35:26" pos:end="35:39">is_last_report</name> <operator pos:start="35:41" pos:end="35:42">&amp;&amp;</operator> <operator pos:start="35:44" pos:end="35:44">!</operator><name pos:start="35:45" pos:end="35:57">progress_avio</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:15"><block_content pos:start="37:9" pos:end="37:15">

        <return pos:start="37:9" pos:end="37:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="57:5"><if pos:start="41:5" pos:end="57:5">if <condition pos:start="41:8" pos:end="41:24">(<expr pos:start="41:9" pos:end="41:23"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:23">is_last_report</name></expr>)</condition> <block pos:start="41:26" pos:end="57:5">{<block_content pos:start="43:9" pos:end="55:29">

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:28">(<expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:21">last_time</name> <operator pos:start="43:23" pos:end="43:24">==</operator> <operator pos:start="43:26" pos:end="43:26">-</operator><literal type="number" pos:start="43:27" pos:end="43:27">1</literal></expr>)</condition> <block pos:start="43:30" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:19">

            <expr_stmt pos:start="45:13" pos:end="45:33"><expr pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:21">last_time</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:32">cur_time</name></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="53:19"><if pos:start="51:9" pos:end="53:19">if <condition pos:start="51:12" pos:end="51:44">(<expr pos:start="51:13" pos:end="51:43"><operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:21">cur_time</name> <operator pos:start="51:23" pos:end="51:23">-</operator> <name pos:start="51:25" pos:end="51:33">last_time</name><operator pos:start="51:34" pos:end="51:34">)</operator> <operator pos:start="51:36" pos:end="51:36">&lt;</operator> <literal type="number" pos:start="51:38" pos:end="51:43">500000</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:19"><block_content pos:start="53:13" pos:end="53:19">

            <return pos:start="53:13" pos:end="53:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:17">last_time</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:28">cur_time</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:43"><expr pos:start="61:5" pos:end="61:42"><name pos:start="61:5" pos:end="61:5">t</name> <operator pos:start="61:7" pos:end="61:7">=</operator> <operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:17">cur_time</name><operator pos:start="61:18" pos:end="61:18">-</operator><name pos:start="61:19" pos:end="61:29">timer_start</name><operator pos:start="61:30" pos:end="61:30">)</operator> <operator pos:start="61:32" pos:end="61:32">/</operator> <literal type="number" pos:start="61:34" pos:end="61:42">1000000.0</literal></expr>;</expr_stmt>





    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:6">oc</name> <operator pos:start="67:8" pos:end="67:8">=</operator> <name pos:start="67:10" pos:end="67:24"><name pos:start="67:10" pos:end="67:21">output_files</name><index pos:start="67:22" pos:end="67:24">[<expr pos:start="67:23" pos:end="67:23"><literal type="number" pos:start="67:23" pos:end="67:23">0</literal></expr>]</index></name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:29">ctx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:35"><expr pos:start="71:5" pos:end="71:34"><name pos:start="71:5" pos:end="71:14">total_size</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="71:34"><name pos:start="71:18" pos:end="71:26">avio_size</name><argument_list pos:start="71:27" pos:end="71:34">(<argument pos:start="71:28" pos:end="71:33"><expr pos:start="71:28" pos:end="71:33"><name pos:start="71:28" pos:end="71:33"><name pos:start="71:28" pos:end="71:29">oc</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:39"><if pos:start="73:5" pos:end="75:39">if <condition pos:start="73:8" pos:end="73:24">(<expr pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:18">total_size</name> <operator pos:start="73:20" pos:end="73:21">&lt;=</operator> <literal type="number" pos:start="73:23" pos:end="73:23">0</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:39"><block_content pos:start="75:9" pos:end="75:39"> <comment type="line" pos:start="73:26" pos:end="73:94">// FIXME improve avio_size() so it works with non seekable output too</comment>

        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:18">total_size</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <call pos:start="75:22" pos:end="75:38"><name pos:start="75:22" pos:end="75:30">avio_tell</name><argument_list pos:start="75:31" pos:end="75:38">(<argument pos:start="75:32" pos:end="75:37"><expr pos:start="75:32" pos:end="75:37"><name pos:start="75:32" pos:end="75:37"><name pos:start="75:32" pos:end="75:33">oc</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:18"><expr pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:10"><name pos:start="79:5" pos:end="79:7">buf</name><index pos:start="79:8" pos:end="79:10">[<expr pos:start="79:9" pos:end="79:9"><literal type="number" pos:start="79:9" pos:end="79:9">0</literal></expr>]</index></name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="char" pos:start="79:14" pos:end="79:17">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:12"><expr pos:start="81:5" pos:end="81:11"><name pos:start="81:5" pos:end="81:7">vid</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <literal type="number" pos:start="81:11" pos:end="81:11">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:38"><expr pos:start="83:5" pos:end="83:37"><call pos:start="83:5" pos:end="83:37"><name pos:start="83:5" pos:end="83:18">av_bprint_init</name><argument_list pos:start="83:19" pos:end="83:37">(<argument pos:start="83:20" pos:end="83:30"><expr pos:start="83:20" pos:end="83:30"><operator pos:start="83:20" pos:end="83:20">&amp;</operator><name pos:start="83:21" pos:end="83:30">buf_script</name></expr></argument>, <argument pos:start="83:33" pos:end="83:33"><expr pos:start="83:33" pos:end="83:33"><literal type="number" pos:start="83:33" pos:end="83:33">0</literal></expr></argument>, <argument pos:start="83:36" pos:end="83:36"><expr pos:start="83:36" pos:end="83:36"><literal type="number" pos:start="83:36" pos:end="83:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="85:5" pos:end="227:5">for <control pos:start="85:9" pos:end="85:43">(<init pos:start="85:10" pos:end="85:15"><expr pos:start="85:10" pos:end="85:14"><name pos:start="85:10" pos:end="85:10">i</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <literal type="number" pos:start="85:14" pos:end="85:14">0</literal></expr>;</init> <condition pos:start="85:17" pos:end="85:38"><expr pos:start="85:17" pos:end="85:37"><name pos:start="85:17" pos:end="85:17">i</name> <operator pos:start="85:19" pos:end="85:19">&lt;</operator> <name pos:start="85:21" pos:end="85:37">nb_output_streams</name></expr>;</condition> <incr pos:start="85:40" pos:end="85:42"><expr pos:start="85:40" pos:end="85:42"><name pos:start="85:40" pos:end="85:40">i</name><operator pos:start="85:41" pos:end="85:42">++</operator></expr></incr>)</control> <block pos:start="85:45" pos:end="227:5">{<block_content pos:start="87:9" pos:end="225:48">

        <decl_stmt pos:start="87:9" pos:end="87:21"><decl pos:start="87:9" pos:end="87:20"><type pos:start="87:9" pos:end="87:13"><name pos:start="87:9" pos:end="87:13">float</name></type> <name pos:start="87:15" pos:end="87:15">q</name> <init pos:start="87:17" pos:end="87:20">= <expr pos:start="87:19" pos:end="87:20"><operator pos:start="87:19" pos:end="87:19">-</operator><literal type="number" pos:start="87:20" pos:end="87:20">1</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:32"><expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:11">ost</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:31"><name pos:start="89:15" pos:end="89:28">output_streams</name><index pos:start="89:29" pos:end="89:31">[<expr pos:start="89:30" pos:end="89:30"><name pos:start="89:30" pos:end="89:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:27"><expr pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:11">enc</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <name pos:start="91:15" pos:end="91:26"><name pos:start="91:15" pos:end="91:17">ost</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:26">enc_ctx</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="95:52"><if pos:start="93:9" pos:end="95:52">if <condition pos:start="93:12" pos:end="93:30">(<expr pos:start="93:13" pos:end="93:29"><operator pos:start="93:13" pos:end="93:13">!</operator><name pos:start="93:14" pos:end="93:29"><name pos:start="93:14" pos:end="93:16">ost</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:29">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:52"><block_content pos:start="95:13" pos:end="95:52">

            <expr_stmt pos:start="95:13" pos:end="95:52"><expr pos:start="95:13" pos:end="95:51"><name pos:start="95:13" pos:end="95:13">q</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <name pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:19">ost</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:28">quality</name></name> <operator pos:start="95:30" pos:end="95:30">/</operator> <operator pos:start="95:32" pos:end="95:32">(</operator><name pos:start="95:33" pos:end="95:37">float</name><operator pos:start="95:38" pos:end="95:38">)</operator> <name pos:start="95:40" pos:end="95:51">FF_QP2LAMBDA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="99:9" pos:end="107:9"><if pos:start="99:9" pos:end="107:9">if <condition pos:start="99:12" pos:end="99:57">(<expr pos:start="99:13" pos:end="99:56"><name pos:start="99:13" pos:end="99:15">vid</name> <operator pos:start="99:17" pos:end="99:18">&amp;&amp;</operator> <name pos:start="99:20" pos:end="99:34"><name pos:start="99:20" pos:end="99:22">enc</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:34">codec_type</name></name> <operator pos:start="99:36" pos:end="99:37">==</operator> <name pos:start="99:39" pos:end="99:56">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="99:59" pos:end="107:9">{<block_content pos:start="101:13" pos:end="105:55">

            <expr_stmt pos:start="101:13" pos:end="101:82"><expr pos:start="101:13" pos:end="101:81"><call pos:start="101:13" pos:end="101:81"><name pos:start="101:13" pos:end="101:20">snprintf</name><argument_list pos:start="101:21" pos:end="101:81">(<argument pos:start="101:22" pos:end="101:38"><expr pos:start="101:22" pos:end="101:38"><name pos:start="101:22" pos:end="101:24">buf</name> <operator pos:start="101:26" pos:end="101:26">+</operator> <call pos:start="101:28" pos:end="101:38"><name pos:start="101:28" pos:end="101:33">strlen</name><argument_list pos:start="101:34" pos:end="101:38">(<argument pos:start="101:35" pos:end="101:37"><expr pos:start="101:35" pos:end="101:37"><name pos:start="101:35" pos:end="101:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:41" pos:end="101:65"><expr pos:start="101:41" pos:end="101:65"><sizeof pos:start="101:41" pos:end="101:51">sizeof<argument_list pos:start="101:47" pos:end="101:51">(<argument pos:start="101:48" pos:end="101:50"><expr pos:start="101:48" pos:end="101:50"><name pos:start="101:48" pos:end="101:50">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="101:53" pos:end="101:53">-</operator> <call pos:start="101:55" pos:end="101:65"><name pos:start="101:55" pos:end="101:60">strlen</name><argument_list pos:start="101:61" pos:end="101:65">(<argument pos:start="101:62" pos:end="101:64"><expr pos:start="101:62" pos:end="101:64"><name pos:start="101:62" pos:end="101:64">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:68" pos:end="101:77"><expr pos:start="101:68" pos:end="101:77"><literal type="string" pos:start="101:68" pos:end="101:77">"q=%2.1f "</literal></expr></argument>, <argument pos:start="101:80" pos:end="101:80"><expr pos:start="101:80" pos:end="101:80"><name pos:start="101:80" pos:end="101:80">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="105:55"><expr pos:start="103:13" pos:end="105:54"><call pos:start="103:13" pos:end="105:54"><name pos:start="103:13" pos:end="103:22">av_bprintf</name><argument_list pos:start="103:23" pos:end="105:54">(<argument pos:start="103:24" pos:end="103:34"><expr pos:start="103:24" pos:end="103:34"><operator pos:start="103:24" pos:end="103:24">&amp;</operator><name pos:start="103:25" pos:end="103:34">buf_script</name></expr></argument>, <argument pos:start="103:37" pos:end="103:59"><expr pos:start="103:37" pos:end="103:59"><literal type="string" pos:start="103:37" pos:end="103:59">"stream_%d_%d_q=%.1f\n"</literal></expr></argument>,

                       <argument pos:start="105:24" pos:end="105:38"><expr pos:start="105:24" pos:end="105:38"><name pos:start="105:24" pos:end="105:38"><name pos:start="105:24" pos:end="105:26">ost</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:38">file_index</name></name></expr></argument>, <argument pos:start="105:41" pos:end="105:50"><expr pos:start="105:41" pos:end="105:50"><name pos:start="105:41" pos:end="105:50"><name pos:start="105:41" pos:end="105:43">ost</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:50">index</name></name></expr></argument>, <argument pos:start="105:53" pos:end="105:53"><expr pos:start="105:53" pos:end="105:53"><name pos:start="105:53" pos:end="105:53">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="109:9" pos:end="213:9"><if pos:start="109:9" pos:end="213:9">if <condition pos:start="109:12" pos:end="109:58">(<expr pos:start="109:13" pos:end="109:57"><operator pos:start="109:13" pos:end="109:13">!</operator><name pos:start="109:14" pos:end="109:16">vid</name> <operator pos:start="109:18" pos:end="109:19">&amp;&amp;</operator> <name pos:start="109:21" pos:end="109:35"><name pos:start="109:21" pos:end="109:23">enc</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:35">codec_type</name></name> <operator pos:start="109:37" pos:end="109:38">==</operator> <name pos:start="109:40" pos:end="109:57">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="109:60" pos:end="213:9">{<block_content pos:start="111:13" pos:end="211:20">

            <decl_stmt pos:start="111:13" pos:end="111:22"><decl pos:start="111:13" pos:end="111:21"><type pos:start="111:13" pos:end="111:17"><name pos:start="111:13" pos:end="111:17">float</name></type> <name pos:start="111:19" pos:end="111:21">fps</name></decl>;</decl_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:45"><expr pos:start="115:13" pos:end="115:44"><name pos:start="115:13" pos:end="115:24">frame_number</name> <operator pos:start="115:26" pos:end="115:26">=</operator> <name pos:start="115:28" pos:end="115:44"><name pos:start="115:28" pos:end="115:30">ost</name><operator pos:start="115:31" pos:end="115:32">-&gt;</operator><name pos:start="115:33" pos:end="115:44">frame_number</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:47"><expr pos:start="117:13" pos:end="117:46"><name pos:start="117:13" pos:end="117:15">fps</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <ternary pos:start="117:19" pos:end="117:46"><condition pos:start="117:19" pos:end="117:25"><expr pos:start="117:19" pos:end="117:23"><name pos:start="117:19" pos:end="117:19">t</name> <operator pos:start="117:21" pos:end="117:21">&gt;</operator> <literal type="number" pos:start="117:23" pos:end="117:23">1</literal></expr> ?</condition><then pos:start="117:27" pos:end="117:42"> <expr pos:start="117:27" pos:end="117:42"><name pos:start="117:27" pos:end="117:38">frame_number</name> <operator pos:start="117:40" pos:end="117:40">/</operator> <name pos:start="117:42" pos:end="117:42">t</name></expr> </then><else pos:start="117:44" pos:end="117:46">: <expr pos:start="117:46" pos:end="117:46"><literal type="number" pos:start="117:46" pos:end="117:46">0</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="121:55"><expr pos:start="119:13" pos:end="121:54"><call pos:start="119:13" pos:end="121:54"><name pos:start="119:13" pos:end="119:20">snprintf</name><argument_list pos:start="119:21" pos:end="121:54">(<argument pos:start="119:22" pos:end="119:38"><expr pos:start="119:22" pos:end="119:38"><name pos:start="119:22" pos:end="119:24">buf</name> <operator pos:start="119:26" pos:end="119:26">+</operator> <call pos:start="119:28" pos:end="119:38"><name pos:start="119:28" pos:end="119:33">strlen</name><argument_list pos:start="119:34" pos:end="119:38">(<argument pos:start="119:35" pos:end="119:37"><expr pos:start="119:35" pos:end="119:37"><name pos:start="119:35" pos:end="119:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:41" pos:end="119:65"><expr pos:start="119:41" pos:end="119:65"><sizeof pos:start="119:41" pos:end="119:51">sizeof<argument_list pos:start="119:47" pos:end="119:51">(<argument pos:start="119:48" pos:end="119:50"><expr pos:start="119:48" pos:end="119:50"><name pos:start="119:48" pos:end="119:50">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="119:53" pos:end="119:53">-</operator> <call pos:start="119:55" pos:end="119:65"><name pos:start="119:55" pos:end="119:60">strlen</name><argument_list pos:start="119:61" pos:end="119:65">(<argument pos:start="119:62" pos:end="119:64"><expr pos:start="119:62" pos:end="119:64"><name pos:start="119:62" pos:end="119:64">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:68" pos:end="119:97"><expr pos:start="119:68" pos:end="119:97"><literal type="string" pos:start="119:68" pos:end="119:97">"frame=%5d fps=%3.*f q=%3.1f "</literal></expr></argument>,

                     <argument pos:start="121:22" pos:end="121:33"><expr pos:start="121:22" pos:end="121:33"><name pos:start="121:22" pos:end="121:33">frame_number</name></expr></argument>, <argument pos:start="121:36" pos:end="121:45"><expr pos:start="121:36" pos:end="121:45"><name pos:start="121:36" pos:end="121:38">fps</name> <operator pos:start="121:40" pos:end="121:40">&lt;</operator> <literal type="number" pos:start="121:42" pos:end="121:45">9.95</literal></expr></argument>, <argument pos:start="121:48" pos:end="121:50"><expr pos:start="121:48" pos:end="121:50"><name pos:start="121:48" pos:end="121:50">fps</name></expr></argument>, <argument pos:start="121:53" pos:end="121:53"><expr pos:start="121:53" pos:end="121:53"><name pos:start="121:53" pos:end="121:53">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:64"><expr pos:start="123:13" pos:end="123:63"><call pos:start="123:13" pos:end="123:63"><name pos:start="123:13" pos:end="123:22">av_bprintf</name><argument_list pos:start="123:23" pos:end="123:63">(<argument pos:start="123:24" pos:end="123:34"><expr pos:start="123:24" pos:end="123:34"><operator pos:start="123:24" pos:end="123:24">&amp;</operator><name pos:start="123:25" pos:end="123:34">buf_script</name></expr></argument>, <argument pos:start="123:37" pos:end="123:48"><expr pos:start="123:37" pos:end="123:48"><literal type="string" pos:start="123:37" pos:end="123:48">"frame=%d\n"</literal></expr></argument>, <argument pos:start="123:51" pos:end="123:62"><expr pos:start="123:51" pos:end="123:62"><name pos:start="123:51" pos:end="123:62">frame_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:55"><expr pos:start="125:13" pos:end="125:54"><call pos:start="125:13" pos:end="125:54"><name pos:start="125:13" pos:end="125:22">av_bprintf</name><argument_list pos:start="125:23" pos:end="125:54">(<argument pos:start="125:24" pos:end="125:34"><expr pos:start="125:24" pos:end="125:34"><operator pos:start="125:24" pos:end="125:24">&amp;</operator><name pos:start="125:25" pos:end="125:34">buf_script</name></expr></argument>, <argument pos:start="125:37" pos:end="125:48"><expr pos:start="125:37" pos:end="125:48"><literal type="string" pos:start="125:37" pos:end="125:48">"fps=%.1f\n"</literal></expr></argument>, <argument pos:start="125:51" pos:end="125:53"><expr pos:start="125:51" pos:end="125:53"><name pos:start="125:51" pos:end="125:53">fps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="129:55"><expr pos:start="127:13" pos:end="129:54"><call pos:start="127:13" pos:end="129:54"><name pos:start="127:13" pos:end="127:22">av_bprintf</name><argument_list pos:start="127:23" pos:end="129:54">(<argument pos:start="127:24" pos:end="127:34"><expr pos:start="127:24" pos:end="127:34"><operator pos:start="127:24" pos:end="127:24">&amp;</operator><name pos:start="127:25" pos:end="127:34">buf_script</name></expr></argument>, <argument pos:start="127:37" pos:end="127:59"><expr pos:start="127:37" pos:end="127:59"><literal type="string" pos:start="127:37" pos:end="127:59">"stream_%d_%d_q=%.1f\n"</literal></expr></argument>,

                       <argument pos:start="129:24" pos:end="129:38"><expr pos:start="129:24" pos:end="129:38"><name pos:start="129:24" pos:end="129:38"><name pos:start="129:24" pos:end="129:26">ost</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:38">file_index</name></name></expr></argument>, <argument pos:start="129:41" pos:end="129:50"><expr pos:start="129:41" pos:end="129:50"><name pos:start="129:41" pos:end="129:50"><name pos:start="129:41" pos:end="129:43">ost</name><operator pos:start="129:44" pos:end="129:45">-&gt;</operator><name pos:start="129:46" pos:end="129:50">index</name></name></expr></argument>, <argument pos:start="129:53" pos:end="129:53"><expr pos:start="129:53" pos:end="129:53"><name pos:start="129:53" pos:end="129:53">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="133:76"><if pos:start="131:13" pos:end="133:76">if <condition pos:start="131:16" pos:end="131:31">(<expr pos:start="131:17" pos:end="131:30"><name pos:start="131:17" pos:end="131:30">is_last_report</name></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:76"><block_content pos:start="133:17" pos:end="133:76">

                <expr_stmt pos:start="133:17" pos:end="133:76"><expr pos:start="133:17" pos:end="133:75"><call pos:start="133:17" pos:end="133:75"><name pos:start="133:17" pos:end="133:24">snprintf</name><argument_list pos:start="133:25" pos:end="133:75">(<argument pos:start="133:26" pos:end="133:42"><expr pos:start="133:26" pos:end="133:42"><name pos:start="133:26" pos:end="133:28">buf</name> <operator pos:start="133:30" pos:end="133:30">+</operator> <call pos:start="133:32" pos:end="133:42"><name pos:start="133:32" pos:end="133:37">strlen</name><argument_list pos:start="133:38" pos:end="133:42">(<argument pos:start="133:39" pos:end="133:41"><expr pos:start="133:39" pos:end="133:41"><name pos:start="133:39" pos:end="133:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="133:45" pos:end="133:69"><expr pos:start="133:45" pos:end="133:69"><sizeof pos:start="133:45" pos:end="133:55">sizeof<argument_list pos:start="133:51" pos:end="133:55">(<argument pos:start="133:52" pos:end="133:54"><expr pos:start="133:52" pos:end="133:54"><name pos:start="133:52" pos:end="133:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="133:57" pos:end="133:57">-</operator> <call pos:start="133:59" pos:end="133:69"><name pos:start="133:59" pos:end="133:64">strlen</name><argument_list pos:start="133:65" pos:end="133:69">(<argument pos:start="133:66" pos:end="133:68"><expr pos:start="133:66" pos:end="133:68"><name pos:start="133:66" pos:end="133:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="133:72" pos:end="133:74"><expr pos:start="133:72" pos:end="133:74"><literal type="string" pos:start="133:72" pos:end="133:74">"L"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="135:13" pos:end="149:13"><if pos:start="135:13" pos:end="149:13">if <condition pos:start="135:16" pos:end="135:24">(<expr pos:start="135:17" pos:end="135:23"><name pos:start="135:17" pos:end="135:23">qp_hist</name></expr>)</condition> <block pos:start="135:26" pos:end="149:13">{<block_content pos:start="137:17" pos:end="147:121">

                <decl_stmt pos:start="137:17" pos:end="137:22"><decl pos:start="137:17" pos:end="137:21"><type pos:start="137:17" pos:end="137:19"><name pos:start="137:17" pos:end="137:19">int</name></type> <name pos:start="137:21" pos:end="137:21">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="139:17" pos:end="139:35"><decl pos:start="139:17" pos:end="139:34"><type pos:start="139:17" pos:end="139:19"><name pos:start="139:17" pos:end="139:19">int</name></type> <name pos:start="139:21" pos:end="139:22">qp</name> <init pos:start="139:24" pos:end="139:34">= <expr pos:start="139:26" pos:end="139:34"><call pos:start="139:26" pos:end="139:34"><name pos:start="139:26" pos:end="139:31">lrintf</name><argument_list pos:start="139:32" pos:end="139:34">(<argument pos:start="139:33" pos:end="139:33"><expr pos:start="139:33" pos:end="139:33"><name pos:start="139:33" pos:end="139:33">q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="141:17" pos:end="143:39"><if pos:start="141:17" pos:end="143:39">if <condition pos:start="141:20" pos:end="141:65">(<expr pos:start="141:21" pos:end="141:64"><name pos:start="141:21" pos:end="141:22">qp</name> <operator pos:start="141:24" pos:end="141:25">&gt;=</operator> <literal type="number" pos:start="141:27" pos:end="141:27">0</literal> <operator pos:start="141:29" pos:end="141:30">&amp;&amp;</operator> <name pos:start="141:32" pos:end="141:33">qp</name> <operator pos:start="141:35" pos:end="141:35">&lt;</operator> <call pos:start="141:37" pos:end="141:64"><name pos:start="141:37" pos:end="141:50">FF_ARRAY_ELEMS</name><argument_list pos:start="141:51" pos:end="141:64">(<argument pos:start="141:52" pos:end="141:63"><expr pos:start="141:52" pos:end="141:63"><name pos:start="141:52" pos:end="141:63">qp_histogram</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="143:21" pos:end="143:39"><block_content pos:start="143:21" pos:end="143:39">

                    <expr_stmt pos:start="143:21" pos:end="143:39"><expr pos:start="143:21" pos:end="143:38"><name pos:start="143:21" pos:end="143:36"><name pos:start="143:21" pos:end="143:32">qp_histogram</name><index pos:start="143:33" pos:end="143:36">[<expr pos:start="143:34" pos:end="143:35"><name pos:start="143:34" pos:end="143:35">qp</name></expr>]</index></name><operator pos:start="143:37" pos:end="143:38">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="145:17" pos:end="147:121">for <control pos:start="145:21" pos:end="145:40">(<init pos:start="145:22" pos:end="145:27"><expr pos:start="145:22" pos:end="145:26"><name pos:start="145:22" pos:end="145:22">j</name> <operator pos:start="145:24" pos:end="145:24">=</operator> <literal type="number" pos:start="145:26" pos:end="145:26">0</literal></expr>;</init> <condition pos:start="145:29" pos:end="145:35"><expr pos:start="145:29" pos:end="145:34"><name pos:start="145:29" pos:end="145:29">j</name> <operator pos:start="145:31" pos:end="145:31">&lt;</operator> <literal type="number" pos:start="145:33" pos:end="145:34">32</literal></expr>;</condition> <incr pos:start="145:37" pos:end="145:39"><expr pos:start="145:37" pos:end="145:39"><name pos:start="145:37" pos:end="145:37">j</name><operator pos:start="145:38" pos:end="145:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="147:21" pos:end="147:121"><block_content pos:start="147:21" pos:end="147:121">

                    <expr_stmt pos:start="147:21" pos:end="147:121"><expr pos:start="147:21" pos:end="147:120"><call pos:start="147:21" pos:end="147:120"><name pos:start="147:21" pos:end="147:28">snprintf</name><argument_list pos:start="147:29" pos:end="147:120">(<argument pos:start="147:30" pos:end="147:46"><expr pos:start="147:30" pos:end="147:46"><name pos:start="147:30" pos:end="147:32">buf</name> <operator pos:start="147:34" pos:end="147:34">+</operator> <call pos:start="147:36" pos:end="147:46"><name pos:start="147:36" pos:end="147:41">strlen</name><argument_list pos:start="147:42" pos:end="147:46">(<argument pos:start="147:43" pos:end="147:45"><expr pos:start="147:43" pos:end="147:45"><name pos:start="147:43" pos:end="147:45">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="147:49" pos:end="147:73"><expr pos:start="147:49" pos:end="147:73"><sizeof pos:start="147:49" pos:end="147:59">sizeof<argument_list pos:start="147:55" pos:end="147:59">(<argument pos:start="147:56" pos:end="147:58"><expr pos:start="147:56" pos:end="147:58"><name pos:start="147:56" pos:end="147:58">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="147:61" pos:end="147:61">-</operator> <call pos:start="147:63" pos:end="147:73"><name pos:start="147:63" pos:end="147:68">strlen</name><argument_list pos:start="147:69" pos:end="147:73">(<argument pos:start="147:70" pos:end="147:72"><expr pos:start="147:70" pos:end="147:72"><name pos:start="147:70" pos:end="147:72">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="147:76" pos:end="147:79"><expr pos:start="147:76" pos:end="147:79"><literal type="string" pos:start="147:76" pos:end="147:79">"%X"</literal></expr></argument>, <argument pos:start="147:82" pos:end="147:119"><expr pos:start="147:82" pos:end="147:119"><operator pos:start="147:82" pos:end="147:82">(</operator><name pos:start="147:83" pos:end="147:85">int</name><operator pos:start="147:86" pos:end="147:86">)</operator><call pos:start="147:87" pos:end="147:119"><name pos:start="147:87" pos:end="147:92">lrintf</name><argument_list pos:start="147:93" pos:end="147:119">(<argument pos:start="147:94" pos:end="147:118"><expr pos:start="147:94" pos:end="147:118"><call pos:start="147:94" pos:end="147:118"><name pos:start="147:94" pos:end="147:97">log2</name><argument_list pos:start="147:98" pos:end="147:118">(<argument pos:start="147:99" pos:end="147:117"><expr pos:start="147:99" pos:end="147:117"><name pos:start="147:99" pos:end="147:113"><name pos:start="147:99" pos:end="147:110">qp_histogram</name><index pos:start="147:111" pos:end="147:113">[<expr pos:start="147:112" pos:end="147:112"><name pos:start="147:112" pos:end="147:112">j</name></expr>]</index></name> <operator pos:start="147:115" pos:end="147:115">+</operator> <literal type="number" pos:start="147:117" pos:end="147:117">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="153:13" pos:end="209:13"><if pos:start="153:13" pos:end="209:13">if <condition pos:start="153:16" pos:end="153:112">(<expr pos:start="153:17" pos:end="153:111"><operator pos:start="153:17" pos:end="153:17">(</operator><name pos:start="153:18" pos:end="153:27"><name pos:start="153:18" pos:end="153:20">enc</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:27">flags</name></name> <operator pos:start="153:29" pos:end="153:29">&amp;</operator> <name pos:start="153:31" pos:end="153:48">AV_CODEC_FLAG_PSNR</name><operator pos:start="153:49" pos:end="153:49">)</operator> <operator pos:start="153:51" pos:end="153:52">&amp;&amp;</operator> <operator pos:start="153:54" pos:end="153:54">(</operator><name pos:start="153:55" pos:end="153:68"><name pos:start="153:55" pos:end="153:57">ost</name><operator pos:start="153:58" pos:end="153:59">-&gt;</operator><name pos:start="153:60" pos:end="153:68">pict_type</name></name> <operator pos:start="153:70" pos:end="153:71">!=</operator> <name pos:start="153:73" pos:end="153:92">AV_PICTURE_TYPE_NONE</name> <operator pos:start="153:94" pos:end="153:95">||</operator> <name pos:start="153:97" pos:end="153:110">is_last_report</name><operator pos:start="153:111" pos:end="153:111">)</operator></expr>)</condition> <block pos:start="153:114" pos:end="209:13">{<block_content pos:start="155:17" pos:end="207:59">

                <decl_stmt pos:start="155:17" pos:end="155:22"><decl pos:start="155:17" pos:end="155:21"><type pos:start="155:17" pos:end="155:19"><name pos:start="155:17" pos:end="155:19">int</name></type> <name pos:start="155:21" pos:end="155:21">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="157:17" pos:end="157:44"><decl pos:start="157:17" pos:end="157:28"><type pos:start="157:17" pos:end="157:22"><name pos:start="157:17" pos:end="157:22">double</name></type> <name pos:start="157:24" pos:end="157:28">error</name></decl>, <decl pos:start="157:31" pos:end="157:43"><type ref="prev" pos:start="157:17" pos:end="157:22"/><name pos:start="157:31" pos:end="157:39">error_sum</name> <init pos:start="157:41" pos:end="157:43">= <expr pos:start="157:43" pos:end="157:43"><literal type="number" pos:start="157:43" pos:end="157:43">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="159:17" pos:end="159:44"><decl pos:start="159:17" pos:end="159:28"><type pos:start="159:17" pos:end="159:22"><name pos:start="159:17" pos:end="159:22">double</name></type> <name pos:start="159:24" pos:end="159:28">scale</name></decl>, <decl pos:start="159:31" pos:end="159:43"><type ref="prev" pos:start="159:17" pos:end="159:22"/><name pos:start="159:31" pos:end="159:39">scale_sum</name> <init pos:start="159:41" pos:end="159:43">= <expr pos:start="159:43" pos:end="159:43"><literal type="number" pos:start="159:43" pos:end="159:43">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="161:17" pos:end="161:25"><decl pos:start="161:17" pos:end="161:24"><type pos:start="161:17" pos:end="161:22"><name pos:start="161:17" pos:end="161:22">double</name></type> <name pos:start="161:24" pos:end="161:24">p</name></decl>;</decl_stmt>

                <decl_stmt pos:start="163:17" pos:end="163:47"><decl pos:start="163:17" pos:end="163:46"><type pos:start="163:17" pos:end="163:20"><name pos:start="163:17" pos:end="163:20">char</name></type> <name pos:start="163:22" pos:end="163:28"><name pos:start="163:22" pos:end="163:25">type</name><index pos:start="163:26" pos:end="163:28">[<expr pos:start="163:27" pos:end="163:27"><literal type="number" pos:start="163:27" pos:end="163:27">3</literal></expr>]</index></name> <init pos:start="163:30" pos:end="163:46">= <expr pos:start="163:32" pos:end="163:46"><block pos:start="163:32" pos:end="163:46">{ <expr pos:start="163:34" pos:end="163:36"><literal type="char" pos:start="163:34" pos:end="163:36">'Y'</literal></expr>,<expr pos:start="163:38" pos:end="163:40"><literal type="char" pos:start="163:38" pos:end="163:40">'U'</literal></expr>,<expr pos:start="163:42" pos:end="163:44"><literal type="char" pos:start="163:42" pos:end="163:44">'V'</literal></expr> }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:80"><expr pos:start="165:17" pos:end="165:79"><call pos:start="165:17" pos:end="165:79"><name pos:start="165:17" pos:end="165:24">snprintf</name><argument_list pos:start="165:25" pos:end="165:79">(<argument pos:start="165:26" pos:end="165:42"><expr pos:start="165:26" pos:end="165:42"><name pos:start="165:26" pos:end="165:28">buf</name> <operator pos:start="165:30" pos:end="165:30">+</operator> <call pos:start="165:32" pos:end="165:42"><name pos:start="165:32" pos:end="165:37">strlen</name><argument_list pos:start="165:38" pos:end="165:42">(<argument pos:start="165:39" pos:end="165:41"><expr pos:start="165:39" pos:end="165:41"><name pos:start="165:39" pos:end="165:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="165:45" pos:end="165:69"><expr pos:start="165:45" pos:end="165:69"><sizeof pos:start="165:45" pos:end="165:55">sizeof<argument_list pos:start="165:51" pos:end="165:55">(<argument pos:start="165:52" pos:end="165:54"><expr pos:start="165:52" pos:end="165:54"><name pos:start="165:52" pos:end="165:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="165:57" pos:end="165:57">-</operator> <call pos:start="165:59" pos:end="165:69"><name pos:start="165:59" pos:end="165:64">strlen</name><argument_list pos:start="165:65" pos:end="165:69">(<argument pos:start="165:66" pos:end="165:68"><expr pos:start="165:66" pos:end="165:68"><name pos:start="165:66" pos:end="165:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="165:72" pos:end="165:78"><expr pos:start="165:72" pos:end="165:78"><literal type="string" pos:start="165:72" pos:end="165:78">"PSNR="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="167:17" pos:end="199:17">for <control pos:start="167:21" pos:end="167:39">(<init pos:start="167:22" pos:end="167:27"><expr pos:start="167:22" pos:end="167:26"><name pos:start="167:22" pos:end="167:22">j</name> <operator pos:start="167:24" pos:end="167:24">=</operator> <literal type="number" pos:start="167:26" pos:end="167:26">0</literal></expr>;</init> <condition pos:start="167:29" pos:end="167:34"><expr pos:start="167:29" pos:end="167:33"><name pos:start="167:29" pos:end="167:29">j</name> <operator pos:start="167:31" pos:end="167:31">&lt;</operator> <literal type="number" pos:start="167:33" pos:end="167:33">3</literal></expr>;</condition> <incr pos:start="167:36" pos:end="167:38"><expr pos:start="167:36" pos:end="167:38"><name pos:start="167:36" pos:end="167:36">j</name><operator pos:start="167:37" pos:end="167:38">++</operator></expr></incr>)</control> <block pos:start="167:41" pos:end="199:17">{<block_content pos:start="169:21" pos:end="197:77">

                    <if_stmt pos:start="169:21" pos:end="181:21"><if pos:start="169:21" pos:end="175:21">if <condition pos:start="169:24" pos:end="169:39">(<expr pos:start="169:25" pos:end="169:38"><name pos:start="169:25" pos:end="169:38">is_last_report</name></expr>)</condition> <block pos:start="169:41" pos:end="175:21">{<block_content pos:start="171:25" pos:end="173:88">

                        <expr_stmt pos:start="171:25" pos:end="171:46"><expr pos:start="171:25" pos:end="171:45"><name pos:start="171:25" pos:end="171:29">error</name> <operator pos:start="171:31" pos:end="171:31">=</operator> <name pos:start="171:33" pos:end="171:45"><name pos:start="171:33" pos:end="171:35">enc</name><operator pos:start="171:36" pos:end="171:37">-&gt;</operator><name pos:start="171:38" pos:end="171:42">error</name><index pos:start="171:43" pos:end="171:45">[<expr pos:start="171:44" pos:end="171:44"><name pos:start="171:44" pos:end="171:44">j</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="173:25" pos:end="173:88"><expr pos:start="173:25" pos:end="173:87"><name pos:start="173:25" pos:end="173:29">scale</name> <operator pos:start="173:31" pos:end="173:31">=</operator> <name pos:start="173:33" pos:end="173:42"><name pos:start="173:33" pos:end="173:35">enc</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:42">width</name></name> <operator pos:start="173:44" pos:end="173:44">*</operator> <name pos:start="173:46" pos:end="173:56"><name pos:start="173:46" pos:end="173:48">enc</name><operator pos:start="173:49" pos:end="173:50">-&gt;</operator><name pos:start="173:51" pos:end="173:56">height</name></name> <operator pos:start="173:58" pos:end="173:58">*</operator> <literal type="number" pos:start="173:60" pos:end="173:64">255.0</literal> <operator pos:start="173:66" pos:end="173:66">*</operator> <literal type="number" pos:start="173:68" pos:end="173:72">255.0</literal> <operator pos:start="173:74" pos:end="173:74">*</operator> <name pos:start="173:76" pos:end="173:87">frame_number</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="175:23" pos:end="181:21">else <block pos:start="175:28" pos:end="181:21">{<block_content pos:start="177:25" pos:end="179:73">

                        <expr_stmt pos:start="177:25" pos:end="177:46"><expr pos:start="177:25" pos:end="177:45"><name pos:start="177:25" pos:end="177:29">error</name> <operator pos:start="177:31" pos:end="177:31">=</operator> <name pos:start="177:33" pos:end="177:45"><name pos:start="177:33" pos:end="177:35">ost</name><operator pos:start="177:36" pos:end="177:37">-&gt;</operator><name pos:start="177:38" pos:end="177:42">error</name><index pos:start="177:43" pos:end="177:45">[<expr pos:start="177:44" pos:end="177:44"><name pos:start="177:44" pos:end="177:44">j</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="179:25" pos:end="179:73"><expr pos:start="179:25" pos:end="179:72"><name pos:start="179:25" pos:end="179:29">scale</name> <operator pos:start="179:31" pos:end="179:31">=</operator> <name pos:start="179:33" pos:end="179:42"><name pos:start="179:33" pos:end="179:35">enc</name><operator pos:start="179:36" pos:end="179:37">-&gt;</operator><name pos:start="179:38" pos:end="179:42">width</name></name> <operator pos:start="179:44" pos:end="179:44">*</operator> <name pos:start="179:46" pos:end="179:56"><name pos:start="179:46" pos:end="179:48">enc</name><operator pos:start="179:49" pos:end="179:50">-&gt;</operator><name pos:start="179:51" pos:end="179:56">height</name></name> <operator pos:start="179:58" pos:end="179:58">*</operator> <literal type="number" pos:start="179:60" pos:end="179:64">255.0</literal> <operator pos:start="179:66" pos:end="179:66">*</operator> <literal type="number" pos:start="179:68" pos:end="179:72">255.0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="183:21" pos:end="185:35"><if pos:start="183:21" pos:end="185:35">if <condition pos:start="183:24" pos:end="183:26">(<expr pos:start="183:25" pos:end="183:25"><name pos:start="183:25" pos:end="183:25">j</name></expr>)</condition><block type="pseudo" pos:start="185:25" pos:end="185:35"><block_content pos:start="185:25" pos:end="185:35">

                        <expr_stmt pos:start="185:25" pos:end="185:35"><expr pos:start="185:25" pos:end="185:34"><name pos:start="185:25" pos:end="185:29">scale</name> <operator pos:start="185:31" pos:end="185:32">/=</operator> <literal type="number" pos:start="185:34" pos:end="185:34">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="187:21" pos:end="187:39"><expr pos:start="187:21" pos:end="187:38"><name pos:start="187:21" pos:end="187:29">error_sum</name> <operator pos:start="187:31" pos:end="187:32">+=</operator> <name pos:start="187:34" pos:end="187:38">error</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:39"><expr pos:start="189:21" pos:end="189:38"><name pos:start="189:21" pos:end="189:29">scale_sum</name> <operator pos:start="189:31" pos:end="189:32">+=</operator> <name pos:start="189:34" pos:end="189:38">scale</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:44"><expr pos:start="191:21" pos:end="191:43"><name pos:start="191:21" pos:end="191:21">p</name> <operator pos:start="191:23" pos:end="191:23">=</operator> <call pos:start="191:25" pos:end="191:43"><name pos:start="191:25" pos:end="191:28">psnr</name><argument_list pos:start="191:29" pos:end="191:43">(<argument pos:start="191:30" pos:end="191:42"><expr pos:start="191:30" pos:end="191:42"><name pos:start="191:30" pos:end="191:34">error</name> <operator pos:start="191:36" pos:end="191:36">/</operator> <name pos:start="191:38" pos:end="191:42">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:100"><expr pos:start="193:21" pos:end="193:99"><call pos:start="193:21" pos:end="193:99"><name pos:start="193:21" pos:end="193:28">snprintf</name><argument_list pos:start="193:29" pos:end="193:99">(<argument pos:start="193:30" pos:end="193:46"><expr pos:start="193:30" pos:end="193:46"><name pos:start="193:30" pos:end="193:32">buf</name> <operator pos:start="193:34" pos:end="193:34">+</operator> <call pos:start="193:36" pos:end="193:46"><name pos:start="193:36" pos:end="193:41">strlen</name><argument_list pos:start="193:42" pos:end="193:46">(<argument pos:start="193:43" pos:end="193:45"><expr pos:start="193:43" pos:end="193:45"><name pos:start="193:43" pos:end="193:45">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="193:49" pos:end="193:73"><expr pos:start="193:49" pos:end="193:73"><sizeof pos:start="193:49" pos:end="193:59">sizeof<argument_list pos:start="193:55" pos:end="193:59">(<argument pos:start="193:56" pos:end="193:58"><expr pos:start="193:56" pos:end="193:58"><name pos:start="193:56" pos:end="193:58">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="193:61" pos:end="193:61">-</operator> <call pos:start="193:63" pos:end="193:73"><name pos:start="193:63" pos:end="193:68">strlen</name><argument_list pos:start="193:69" pos:end="193:73">(<argument pos:start="193:70" pos:end="193:72"><expr pos:start="193:70" pos:end="193:72"><name pos:start="193:70" pos:end="193:72">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="193:76" pos:end="193:86"><expr pos:start="193:76" pos:end="193:86"><literal type="string" pos:start="193:76" pos:end="193:86">"%c:%2.2f "</literal></expr></argument>, <argument pos:start="193:89" pos:end="193:95"><expr pos:start="193:89" pos:end="193:95"><name pos:start="193:89" pos:end="193:95"><name pos:start="193:89" pos:end="193:92">type</name><index pos:start="193:93" pos:end="193:95">[<expr pos:start="193:94" pos:end="193:94"><name pos:start="193:94" pos:end="193:94">j</name></expr>]</index></name></expr></argument>, <argument pos:start="193:98" pos:end="193:98"><expr pos:start="193:98" pos:end="193:98"><name pos:start="193:98" pos:end="193:98">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="197:77"><expr pos:start="195:21" pos:end="197:76"><call pos:start="195:21" pos:end="197:76"><name pos:start="195:21" pos:end="195:30">av_bprintf</name><argument_list pos:start="195:31" pos:end="197:76">(<argument pos:start="195:32" pos:end="195:42"><expr pos:start="195:32" pos:end="195:42"><operator pos:start="195:32" pos:end="195:32">&amp;</operator><name pos:start="195:33" pos:end="195:42">buf_script</name></expr></argument>, <argument pos:start="195:45" pos:end="195:74"><expr pos:start="195:45" pos:end="195:74"><literal type="string" pos:start="195:45" pos:end="195:74">"stream_%d_%d_psnr_%c=%2.2f\n"</literal></expr></argument>,

                               <argument pos:start="197:32" pos:end="197:46"><expr pos:start="197:32" pos:end="197:46"><name pos:start="197:32" pos:end="197:46"><name pos:start="197:32" pos:end="197:34">ost</name><operator pos:start="197:35" pos:end="197:36">-&gt;</operator><name pos:start="197:37" pos:end="197:46">file_index</name></name></expr></argument>, <argument pos:start="197:49" pos:end="197:58"><expr pos:start="197:49" pos:end="197:58"><name pos:start="197:49" pos:end="197:58"><name pos:start="197:49" pos:end="197:51">ost</name><operator pos:start="197:52" pos:end="197:53">-&gt;</operator><name pos:start="197:54" pos:end="197:58">index</name></name></expr></argument>, <argument pos:start="197:61" pos:end="197:72"><expr pos:start="197:61" pos:end="197:72"><name pos:start="197:61" pos:end="197:67"><name pos:start="197:61" pos:end="197:64">type</name><index pos:start="197:65" pos:end="197:67">[<expr pos:start="197:66" pos:end="197:66"><name pos:start="197:66" pos:end="197:66">j</name></expr>]</index></name> <operator pos:start="197:69" pos:end="197:69">|</operator> <literal type="number" pos:start="197:71" pos:end="197:72">32</literal></expr></argument>, <argument pos:start="197:75" pos:end="197:75"><expr pos:start="197:75" pos:end="197:75"><name pos:start="197:75" pos:end="197:75">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="201:17" pos:end="201:48"><expr pos:start="201:17" pos:end="201:47"><name pos:start="201:17" pos:end="201:17">p</name> <operator pos:start="201:19" pos:end="201:19">=</operator> <call pos:start="201:21" pos:end="201:47"><name pos:start="201:21" pos:end="201:24">psnr</name><argument_list pos:start="201:25" pos:end="201:47">(<argument pos:start="201:26" pos:end="201:46"><expr pos:start="201:26" pos:end="201:46"><name pos:start="201:26" pos:end="201:34">error_sum</name> <operator pos:start="201:36" pos:end="201:36">/</operator> <name pos:start="201:38" pos:end="201:46">scale_sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:112"><expr pos:start="203:17" pos:end="203:111"><call pos:start="203:17" pos:end="203:111"><name pos:start="203:17" pos:end="203:24">snprintf</name><argument_list pos:start="203:25" pos:end="203:111">(<argument pos:start="203:26" pos:end="203:42"><expr pos:start="203:26" pos:end="203:42"><name pos:start="203:26" pos:end="203:28">buf</name> <operator pos:start="203:30" pos:end="203:30">+</operator> <call pos:start="203:32" pos:end="203:42"><name pos:start="203:32" pos:end="203:37">strlen</name><argument_list pos:start="203:38" pos:end="203:42">(<argument pos:start="203:39" pos:end="203:41"><expr pos:start="203:39" pos:end="203:41"><name pos:start="203:39" pos:end="203:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="203:45" pos:end="203:69"><expr pos:start="203:45" pos:end="203:69"><sizeof pos:start="203:45" pos:end="203:55">sizeof<argument_list pos:start="203:51" pos:end="203:55">(<argument pos:start="203:52" pos:end="203:54"><expr pos:start="203:52" pos:end="203:54"><name pos:start="203:52" pos:end="203:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="203:57" pos:end="203:57">-</operator> <call pos:start="203:59" pos:end="203:69"><name pos:start="203:59" pos:end="203:64">strlen</name><argument_list pos:start="203:65" pos:end="203:69">(<argument pos:start="203:66" pos:end="203:68"><expr pos:start="203:66" pos:end="203:68"><name pos:start="203:66" pos:end="203:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="203:72" pos:end="203:81"><expr pos:start="203:72" pos:end="203:81"><literal type="string" pos:start="203:72" pos:end="203:81">"*:%2.2f "</literal></expr></argument>, <argument pos:start="203:84" pos:end="203:110"><expr pos:start="203:84" pos:end="203:110"><call pos:start="203:84" pos:end="203:110"><name pos:start="203:84" pos:end="203:87">psnr</name><argument_list pos:start="203:88" pos:end="203:110">(<argument pos:start="203:89" pos:end="203:109"><expr pos:start="203:89" pos:end="203:109"><name pos:start="203:89" pos:end="203:97">error_sum</name> <operator pos:start="203:99" pos:end="203:99">/</operator> <name pos:start="203:101" pos:end="203:109">scale_sum</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="207:59"><expr pos:start="205:17" pos:end="207:58"><call pos:start="205:17" pos:end="207:58"><name pos:start="205:17" pos:end="205:26">av_bprintf</name><argument_list pos:start="205:27" pos:end="207:58">(<argument pos:start="205:28" pos:end="205:38"><expr pos:start="205:28" pos:end="205:38"><operator pos:start="205:28" pos:end="205:28">&amp;</operator><name pos:start="205:29" pos:end="205:38">buf_script</name></expr></argument>, <argument pos:start="205:41" pos:end="205:71"><expr pos:start="205:41" pos:end="205:71"><literal type="string" pos:start="205:41" pos:end="205:71">"stream_%d_%d_psnr_all=%2.2f\n"</literal></expr></argument>,

                           <argument pos:start="207:28" pos:end="207:42"><expr pos:start="207:28" pos:end="207:42"><name pos:start="207:28" pos:end="207:42"><name pos:start="207:28" pos:end="207:30">ost</name><operator pos:start="207:31" pos:end="207:32">-&gt;</operator><name pos:start="207:33" pos:end="207:42">file_index</name></name></expr></argument>, <argument pos:start="207:45" pos:end="207:54"><expr pos:start="207:45" pos:end="207:54"><name pos:start="207:45" pos:end="207:54"><name pos:start="207:45" pos:end="207:47">ost</name><operator pos:start="207:48" pos:end="207:49">-&gt;</operator><name pos:start="207:50" pos:end="207:54">index</name></name></expr></argument>, <argument pos:start="207:57" pos:end="207:57"><expr pos:start="207:57" pos:end="207:57"><name pos:start="207:57" pos:end="207:57">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:20"><expr pos:start="211:13" pos:end="211:19"><name pos:start="211:13" pos:end="211:15">vid</name> <operator pos:start="211:17" pos:end="211:17">=</operator> <literal type="number" pos:start="211:19" pos:end="211:19">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="215:9" pos:end="215:38">/* compute min output value */</comment>

        <if_stmt pos:start="217:9" pos:end="221:79"><if pos:start="217:9" pos:end="221:79">if <condition pos:start="217:12" pos:end="217:61">(<expr pos:start="217:13" pos:end="217:60"><call pos:start="217:13" pos:end="217:42"><name pos:start="217:13" pos:end="217:33">av_stream_get_end_pts</name><argument_list pos:start="217:34" pos:end="217:42">(<argument pos:start="217:35" pos:end="217:41"><expr pos:start="217:35" pos:end="217:41"><name pos:start="217:35" pos:end="217:41"><name pos:start="217:35" pos:end="217:37">ost</name><operator pos:start="217:38" pos:end="217:39">-&gt;</operator><name pos:start="217:40" pos:end="217:41">st</name></name></expr></argument>)</argument_list></call> <operator pos:start="217:44" pos:end="217:45">!=</operator> <name pos:start="217:47" pos:end="217:60">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="219:13" pos:end="221:79"><block_content pos:start="219:13" pos:end="221:79">

            <expr_stmt pos:start="219:13" pos:end="221:79"><expr pos:start="219:13" pos:end="221:78"><name pos:start="219:13" pos:end="219:15">pts</name> <operator pos:start="219:17" pos:end="219:17">=</operator> <call pos:start="219:19" pos:end="221:78"><name pos:start="219:19" pos:end="219:23">FFMAX</name><argument_list pos:start="219:24" pos:end="221:78">(<argument pos:start="219:25" pos:end="219:27"><expr pos:start="219:25" pos:end="219:27"><name pos:start="219:25" pos:end="219:27">pts</name></expr></argument>, <argument pos:start="219:30" pos:end="221:77"><expr pos:start="219:30" pos:end="221:77"><call pos:start="219:30" pos:end="221:77"><name pos:start="219:30" pos:end="219:41">av_rescale_q</name><argument_list pos:start="219:42" pos:end="221:77">(<argument pos:start="219:43" pos:end="219:72"><expr pos:start="219:43" pos:end="219:72"><call pos:start="219:43" pos:end="219:72"><name pos:start="219:43" pos:end="219:63">av_stream_get_end_pts</name><argument_list pos:start="219:64" pos:end="219:72">(<argument pos:start="219:65" pos:end="219:71"><expr pos:start="219:65" pos:end="219:71"><name pos:start="219:65" pos:end="219:71"><name pos:start="219:65" pos:end="219:67">ost</name><operator pos:start="219:68" pos:end="219:69">-&gt;</operator><name pos:start="219:70" pos:end="219:71">st</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                          <argument pos:start="221:43" pos:end="221:60"><expr pos:start="221:43" pos:end="221:60"><name pos:start="221:43" pos:end="221:60"><name pos:start="221:43" pos:end="221:45">ost</name><operator pos:start="221:46" pos:end="221:47">-&gt;</operator><name pos:start="221:48" pos:end="221:49">st</name><operator pos:start="221:50" pos:end="221:51">-&gt;</operator><name pos:start="221:52" pos:end="221:60">time_base</name></name></expr></argument>, <argument pos:start="221:63" pos:end="221:76"><expr pos:start="221:63" pos:end="221:76"><name pos:start="221:63" pos:end="221:76">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="223:9" pos:end="225:48"><if pos:start="223:9" pos:end="225:48">if <condition pos:start="223:12" pos:end="223:27">(<expr pos:start="223:13" pos:end="223:26"><name pos:start="223:13" pos:end="223:26">is_last_report</name></expr>)</condition><block type="pseudo" pos:start="225:13" pos:end="225:48"><block_content pos:start="225:13" pos:end="225:48">

            <expr_stmt pos:start="225:13" pos:end="225:48"><expr pos:start="225:13" pos:end="225:47"><name pos:start="225:13" pos:end="225:26">nb_frames_drop</name> <operator pos:start="225:28" pos:end="225:29">+=</operator> <name pos:start="225:31" pos:end="225:47"><name pos:start="225:31" pos:end="225:33">ost</name><operator pos:start="225:34" pos:end="225:35">-&gt;</operator><name pos:start="225:36" pos:end="225:47">last_dropped</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="231:5" pos:end="231:37"><expr pos:start="231:5" pos:end="231:36"><name pos:start="231:5" pos:end="231:8">secs</name> <operator pos:start="231:10" pos:end="231:10">=</operator> <call pos:start="231:12" pos:end="231:21"><name pos:start="231:12" pos:end="231:16">FFABS</name><argument_list pos:start="231:17" pos:end="231:21">(<argument pos:start="231:18" pos:end="231:20"><expr pos:start="231:18" pos:end="231:20"><name pos:start="231:18" pos:end="231:20">pts</name></expr></argument>)</argument_list></call> <operator pos:start="231:23" pos:end="231:23">/</operator> <name pos:start="231:25" pos:end="231:36">AV_TIME_BASE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:35"><expr pos:start="233:5" pos:end="233:34"><name pos:start="233:5" pos:end="233:6">us</name> <operator pos:start="233:8" pos:end="233:8">=</operator> <call pos:start="233:10" pos:end="233:19"><name pos:start="233:10" pos:end="233:14">FFABS</name><argument_list pos:start="233:15" pos:end="233:19">(<argument pos:start="233:16" pos:end="233:18"><expr pos:start="233:16" pos:end="233:18"><name pos:start="233:16" pos:end="233:18">pts</name></expr></argument>)</argument_list></call> <operator pos:start="233:21" pos:end="233:21">%</operator> <name pos:start="233:23" pos:end="233:34">AV_TIME_BASE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:21"><expr pos:start="235:5" pos:end="235:20"><name pos:start="235:5" pos:end="235:8">mins</name> <operator pos:start="235:10" pos:end="235:10">=</operator> <name pos:start="235:12" pos:end="235:15">secs</name> <operator pos:start="235:17" pos:end="235:17">/</operator> <literal type="number" pos:start="235:19" pos:end="235:20">60</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:15"><expr pos:start="237:5" pos:end="237:14"><name pos:start="237:5" pos:end="237:8">secs</name> <operator pos:start="237:10" pos:end="237:11">%=</operator> <literal type="number" pos:start="237:13" pos:end="237:14">60</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:22"><expr pos:start="239:5" pos:end="239:21"><name pos:start="239:5" pos:end="239:9">hours</name> <operator pos:start="239:11" pos:end="239:11">=</operator> <name pos:start="239:13" pos:end="239:16">mins</name> <operator pos:start="239:18" pos:end="239:18">/</operator> <literal type="number" pos:start="239:20" pos:end="239:21">60</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:15"><expr pos:start="241:5" pos:end="241:14"><name pos:start="241:5" pos:end="241:8">mins</name> <operator pos:start="241:10" pos:end="241:11">%=</operator> <literal type="number" pos:start="241:13" pos:end="241:14">60</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="245:5" pos:end="245:76"><expr pos:start="245:5" pos:end="245:75"><name pos:start="245:5" pos:end="245:11">bitrate</name> <operator pos:start="245:13" pos:end="245:13">=</operator> <ternary pos:start="245:15" pos:end="245:75"><condition pos:start="245:15" pos:end="245:38"><expr pos:start="245:15" pos:end="245:36"><name pos:start="245:15" pos:end="245:17">pts</name> <operator pos:start="245:19" pos:end="245:20">&amp;&amp;</operator> <name pos:start="245:22" pos:end="245:31">total_size</name> <operator pos:start="245:33" pos:end="245:34">&gt;=</operator> <literal type="number" pos:start="245:36" pos:end="245:36">0</literal></expr> ?</condition><then pos:start="245:40" pos:end="245:70"> <expr pos:start="245:40" pos:end="245:70"><name pos:start="245:40" pos:end="245:49">total_size</name> <operator pos:start="245:51" pos:end="245:51">*</operator> <literal type="number" pos:start="245:53" pos:end="245:53">8</literal> <operator pos:start="245:55" pos:end="245:55">/</operator> <operator pos:start="245:57" pos:end="245:57">(</operator><name pos:start="245:58" pos:end="245:60">pts</name> <operator pos:start="245:62" pos:end="245:62">/</operator> <literal type="number" pos:start="245:64" pos:end="245:69">1000.0</literal><operator pos:start="245:70" pos:end="245:70">)</operator></expr> </then><else pos:start="245:72" pos:end="245:75">: <expr pos:start="245:74" pos:end="245:75"><operator pos:start="245:74" pos:end="245:74">-</operator><literal type="number" pos:start="245:75" pos:end="245:75">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:59"><expr pos:start="247:5" pos:end="247:58"><name pos:start="247:5" pos:end="247:9">speed</name> <operator pos:start="247:11" pos:end="247:11">=</operator> <ternary pos:start="247:13" pos:end="247:58"><condition pos:start="247:13" pos:end="247:22"><expr pos:start="247:13" pos:end="247:20"><name pos:start="247:13" pos:end="247:13">t</name> <operator pos:start="247:15" pos:end="247:16">!=</operator> <literal type="number" pos:start="247:18" pos:end="247:20">0.0</literal></expr> ?</condition><then pos:start="247:24" pos:end="247:53"> <expr pos:start="247:24" pos:end="247:53"><operator pos:start="247:24" pos:end="247:24">(</operator><name pos:start="247:25" pos:end="247:30">double</name><operator pos:start="247:31" pos:end="247:31">)</operator><name pos:start="247:32" pos:end="247:34">pts</name> <operator pos:start="247:36" pos:end="247:36">/</operator> <name pos:start="247:38" pos:end="247:49">AV_TIME_BASE</name> <operator pos:start="247:51" pos:end="247:51">/</operator> <name pos:start="247:53" pos:end="247:53">t</name></expr> </then><else pos:start="247:55" pos:end="247:58">: <expr pos:start="247:57" pos:end="247:58"><operator pos:start="247:57" pos:end="247:57">-</operator><literal type="number" pos:start="247:58" pos:end="247:58">1</literal></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="251:5" pos:end="257:76"><if pos:start="251:5" pos:end="253:51">if <condition pos:start="251:8" pos:end="251:23">(<expr pos:start="251:9" pos:end="251:22"><name pos:start="251:9" pos:end="251:18">total_size</name> <operator pos:start="251:20" pos:end="251:20">&lt;</operator> <literal type="number" pos:start="251:22" pos:end="251:22">0</literal></expr>)</condition><block type="pseudo" pos:start="251:25" pos:end="253:51"><block_content pos:start="251:25" pos:end="253:51"> <expr_stmt pos:start="251:25" pos:end="253:51"><expr pos:start="251:25" pos:end="253:50"><call pos:start="251:25" pos:end="253:50"><name pos:start="251:25" pos:end="251:32">snprintf</name><argument_list pos:start="251:33" pos:end="253:50">(<argument pos:start="251:34" pos:end="251:50"><expr pos:start="251:34" pos:end="251:50"><name pos:start="251:34" pos:end="251:36">buf</name> <operator pos:start="251:38" pos:end="251:38">+</operator> <call pos:start="251:40" pos:end="251:50"><name pos:start="251:40" pos:end="251:45">strlen</name><argument_list pos:start="251:46" pos:end="251:50">(<argument pos:start="251:47" pos:end="251:49"><expr pos:start="251:47" pos:end="251:49"><name pos:start="251:47" pos:end="251:49">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="251:53" pos:end="251:77"><expr pos:start="251:53" pos:end="251:77"><sizeof pos:start="251:53" pos:end="251:63">sizeof<argument_list pos:start="251:59" pos:end="251:63">(<argument pos:start="251:60" pos:end="251:62"><expr pos:start="251:60" pos:end="251:62"><name pos:start="251:60" pos:end="251:62">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="251:65" pos:end="251:65">-</operator> <call pos:start="251:67" pos:end="251:77"><name pos:start="251:67" pos:end="251:72">strlen</name><argument_list pos:start="251:73" pos:end="251:77">(<argument pos:start="251:74" pos:end="251:76"><expr pos:start="251:74" pos:end="251:76"><name pos:start="251:74" pos:end="251:76">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="253:34" pos:end="253:49"><expr pos:start="253:34" pos:end="253:49"><literal type="string" pos:start="253:34" pos:end="253:49">"size=N/A time="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="255:5" pos:end="257:76">else<block type="pseudo" pos:start="255:25" pos:end="257:76"><block_content pos:start="255:25" pos:end="257:76">                <expr_stmt pos:start="255:25" pos:end="257:76"><expr pos:start="255:25" pos:end="257:75"><call pos:start="255:25" pos:end="257:75"><name pos:start="255:25" pos:end="255:32">snprintf</name><argument_list pos:start="255:33" pos:end="257:75">(<argument pos:start="255:34" pos:end="255:50"><expr pos:start="255:34" pos:end="255:50"><name pos:start="255:34" pos:end="255:36">buf</name> <operator pos:start="255:38" pos:end="255:38">+</operator> <call pos:start="255:40" pos:end="255:50"><name pos:start="255:40" pos:end="255:45">strlen</name><argument_list pos:start="255:46" pos:end="255:50">(<argument pos:start="255:47" pos:end="255:49"><expr pos:start="255:47" pos:end="255:49"><name pos:start="255:47" pos:end="255:49">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="255:53" pos:end="255:77"><expr pos:start="255:53" pos:end="255:77"><sizeof pos:start="255:53" pos:end="255:63">sizeof<argument_list pos:start="255:59" pos:end="255:63">(<argument pos:start="255:60" pos:end="255:62"><expr pos:start="255:60" pos:end="255:62"><name pos:start="255:60" pos:end="255:62">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="255:65" pos:end="255:65">-</operator> <call pos:start="255:67" pos:end="255:77"><name pos:start="255:67" pos:end="255:72">strlen</name><argument_list pos:start="255:73" pos:end="255:77">(<argument pos:start="255:74" pos:end="255:76"><expr pos:start="255:74" pos:end="255:76"><name pos:start="255:74" pos:end="255:76">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="257:34" pos:end="257:53"><expr pos:start="257:34" pos:end="257:53"><literal type="string" pos:start="257:34" pos:end="257:53">"size=%8.0fkB time="</literal></expr></argument>, <argument pos:start="257:56" pos:end="257:74"><expr pos:start="257:56" pos:end="257:74"><name pos:start="257:56" pos:end="257:65">total_size</name> <operator pos:start="257:67" pos:end="257:67">/</operator> <literal type="number" pos:start="257:69" pos:end="257:74">1024.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="259:5" pos:end="261:68"><if pos:start="259:5" pos:end="261:68">if <condition pos:start="259:8" pos:end="259:16">(<expr pos:start="259:9" pos:end="259:15"><name pos:start="259:9" pos:end="259:11">pts</name> <operator pos:start="259:13" pos:end="259:13">&lt;</operator> <literal type="number" pos:start="259:15" pos:end="259:15">0</literal></expr>)</condition><block type="pseudo" pos:start="261:9" pos:end="261:68"><block_content pos:start="261:9" pos:end="261:68">

        <expr_stmt pos:start="261:9" pos:end="261:68"><expr pos:start="261:9" pos:end="261:67"><call pos:start="261:9" pos:end="261:67"><name pos:start="261:9" pos:end="261:16">snprintf</name><argument_list pos:start="261:17" pos:end="261:67">(<argument pos:start="261:18" pos:end="261:34"><expr pos:start="261:18" pos:end="261:34"><name pos:start="261:18" pos:end="261:20">buf</name> <operator pos:start="261:22" pos:end="261:22">+</operator> <call pos:start="261:24" pos:end="261:34"><name pos:start="261:24" pos:end="261:29">strlen</name><argument_list pos:start="261:30" pos:end="261:34">(<argument pos:start="261:31" pos:end="261:33"><expr pos:start="261:31" pos:end="261:33"><name pos:start="261:31" pos:end="261:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="261:37" pos:end="261:61"><expr pos:start="261:37" pos:end="261:61"><sizeof pos:start="261:37" pos:end="261:47">sizeof<argument_list pos:start="261:43" pos:end="261:47">(<argument pos:start="261:44" pos:end="261:46"><expr pos:start="261:44" pos:end="261:46"><name pos:start="261:44" pos:end="261:46">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="261:49" pos:end="261:49">-</operator> <call pos:start="261:51" pos:end="261:61"><name pos:start="261:51" pos:end="261:56">strlen</name><argument_list pos:start="261:57" pos:end="261:61">(<argument pos:start="261:58" pos:end="261:60"><expr pos:start="261:58" pos:end="261:60"><name pos:start="261:58" pos:end="261:60">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="261:64" pos:end="261:66"><expr pos:start="261:64" pos:end="261:66"><literal type="string" pos:start="261:64" pos:end="261:66">"-"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="263:5" pos:end="267:40"><expr pos:start="263:5" pos:end="267:39"><call pos:start="263:5" pos:end="267:39"><name pos:start="263:5" pos:end="263:12">snprintf</name><argument_list pos:start="263:13" pos:end="267:39">(<argument pos:start="263:14" pos:end="263:30"><expr pos:start="263:14" pos:end="263:30"><name pos:start="263:14" pos:end="263:16">buf</name> <operator pos:start="263:18" pos:end="263:18">+</operator> <call pos:start="263:20" pos:end="263:30"><name pos:start="263:20" pos:end="263:25">strlen</name><argument_list pos:start="263:26" pos:end="263:30">(<argument pos:start="263:27" pos:end="263:29"><expr pos:start="263:27" pos:end="263:29"><name pos:start="263:27" pos:end="263:29">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="263:33" pos:end="263:57"><expr pos:start="263:33" pos:end="263:57"><sizeof pos:start="263:33" pos:end="263:43">sizeof<argument_list pos:start="263:39" pos:end="263:43">(<argument pos:start="263:40" pos:end="263:42"><expr pos:start="263:40" pos:end="263:42"><name pos:start="263:40" pos:end="263:42">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="263:45" pos:end="263:45">-</operator> <call pos:start="263:47" pos:end="263:57"><name pos:start="263:47" pos:end="263:52">strlen</name><argument_list pos:start="263:53" pos:end="263:57">(<argument pos:start="263:54" pos:end="263:56"><expr pos:start="263:54" pos:end="263:56"><name pos:start="263:54" pos:end="263:56">buf</name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="265:14" pos:end="265:35"><expr pos:start="265:14" pos:end="265:35"><literal type="string" pos:start="265:14" pos:end="265:35">"%02d:%02d:%02d.%02d "</literal></expr></argument>, <argument pos:start="265:38" pos:end="265:42"><expr pos:start="265:38" pos:end="265:42"><name pos:start="265:38" pos:end="265:42">hours</name></expr></argument>, <argument pos:start="265:45" pos:end="265:48"><expr pos:start="265:45" pos:end="265:48"><name pos:start="265:45" pos:end="265:48">mins</name></expr></argument>, <argument pos:start="265:51" pos:end="265:54"><expr pos:start="265:51" pos:end="265:54"><name pos:start="265:51" pos:end="265:54">secs</name></expr></argument>,

             <argument pos:start="267:14" pos:end="267:38"><expr pos:start="267:14" pos:end="267:38"><operator pos:start="267:14" pos:end="267:14">(</operator><literal type="number" pos:start="267:15" pos:end="267:17">100</literal> <operator pos:start="267:19" pos:end="267:19">*</operator> <name pos:start="267:21" pos:end="267:22">us</name><operator pos:start="267:23" pos:end="267:23">)</operator> <operator pos:start="267:25" pos:end="267:25">/</operator> <name pos:start="267:27" pos:end="267:38">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="271:5" pos:end="283:5"><if pos:start="271:5" pos:end="277:5">if <condition pos:start="271:8" pos:end="271:20">(<expr pos:start="271:9" pos:end="271:19"><name pos:start="271:9" pos:end="271:15">bitrate</name> <operator pos:start="271:17" pos:end="271:17">&lt;</operator> <literal type="number" pos:start="271:19" pos:end="271:19">0</literal></expr>)</condition> <block pos:start="271:22" pos:end="277:5">{<block_content pos:start="273:9" pos:end="275:49">

        <expr_stmt pos:start="273:9" pos:end="273:77"><expr pos:start="273:9" pos:end="273:76"><call pos:start="273:9" pos:end="273:76"><name pos:start="273:9" pos:end="273:16">snprintf</name><argument_list pos:start="273:17" pos:end="273:76">(<argument pos:start="273:18" pos:end="273:34"><expr pos:start="273:18" pos:end="273:34"><name pos:start="273:18" pos:end="273:20">buf</name> <operator pos:start="273:22" pos:end="273:22">+</operator> <call pos:start="273:24" pos:end="273:34"><name pos:start="273:24" pos:end="273:29">strlen</name><argument_list pos:start="273:30" pos:end="273:34">(<argument pos:start="273:31" pos:end="273:33"><expr pos:start="273:31" pos:end="273:33"><name pos:start="273:31" pos:end="273:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="273:37" pos:end="273:61"><expr pos:start="273:37" pos:end="273:61"><sizeof pos:start="273:37" pos:end="273:47">sizeof<argument_list pos:start="273:43" pos:end="273:47">(<argument pos:start="273:44" pos:end="273:46"><expr pos:start="273:44" pos:end="273:46"><name pos:start="273:44" pos:end="273:46">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="273:49" pos:end="273:49">-</operator> <call pos:start="273:51" pos:end="273:61"><name pos:start="273:51" pos:end="273:56">strlen</name><argument_list pos:start="273:57" pos:end="273:61">(<argument pos:start="273:58" pos:end="273:60"><expr pos:start="273:58" pos:end="273:60"><name pos:start="273:58" pos:end="273:60">buf</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="273:63" pos:end="273:75"><expr pos:start="273:63" pos:end="273:75"><literal type="string" pos:start="273:63" pos:end="273:75">"bitrate=N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:49"><expr pos:start="275:9" pos:end="275:48"><call pos:start="275:9" pos:end="275:48"><name pos:start="275:9" pos:end="275:18">av_bprintf</name><argument_list pos:start="275:19" pos:end="275:48">(<argument pos:start="275:20" pos:end="275:30"><expr pos:start="275:20" pos:end="275:30"><operator pos:start="275:20" pos:end="275:20">&amp;</operator><name pos:start="275:21" pos:end="275:30">buf_script</name></expr></argument>, <argument pos:start="275:33" pos:end="275:47"><expr pos:start="275:33" pos:end="275:47"><literal type="string" pos:start="275:33" pos:end="275:47">"bitrate=N/A\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="277:6" pos:end="283:5">else<block pos:start="277:10" pos:end="283:5">{<block_content pos:start="279:9" pos:end="281:67">

        <expr_stmt pos:start="279:9" pos:end="279:95"><expr pos:start="279:9" pos:end="279:94"><call pos:start="279:9" pos:end="279:94"><name pos:start="279:9" pos:end="279:16">snprintf</name><argument_list pos:start="279:17" pos:end="279:94">(<argument pos:start="279:18" pos:end="279:34"><expr pos:start="279:18" pos:end="279:34"><name pos:start="279:18" pos:end="279:20">buf</name> <operator pos:start="279:22" pos:end="279:22">+</operator> <call pos:start="279:24" pos:end="279:34"><name pos:start="279:24" pos:end="279:29">strlen</name><argument_list pos:start="279:30" pos:end="279:34">(<argument pos:start="279:31" pos:end="279:33"><expr pos:start="279:31" pos:end="279:33"><name pos:start="279:31" pos:end="279:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="279:37" pos:end="279:61"><expr pos:start="279:37" pos:end="279:61"><sizeof pos:start="279:37" pos:end="279:47">sizeof<argument_list pos:start="279:43" pos:end="279:47">(<argument pos:start="279:44" pos:end="279:46"><expr pos:start="279:44" pos:end="279:46"><name pos:start="279:44" pos:end="279:46">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="279:49" pos:end="279:49">-</operator> <call pos:start="279:51" pos:end="279:61"><name pos:start="279:51" pos:end="279:56">strlen</name><argument_list pos:start="279:57" pos:end="279:61">(<argument pos:start="279:58" pos:end="279:60"><expr pos:start="279:58" pos:end="279:60"><name pos:start="279:58" pos:end="279:60">buf</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="279:63" pos:end="279:84"><expr pos:start="279:63" pos:end="279:84"><literal type="string" pos:start="279:63" pos:end="279:84">"bitrate=%6.1fkbits/s"</literal></expr></argument>, <argument pos:start="279:87" pos:end="279:93"><expr pos:start="279:87" pos:end="279:93"><name pos:start="279:87" pos:end="279:93">bitrate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:67"><expr pos:start="281:9" pos:end="281:66"><call pos:start="281:9" pos:end="281:66"><name pos:start="281:9" pos:end="281:18">av_bprintf</name><argument_list pos:start="281:19" pos:end="281:66">(<argument pos:start="281:20" pos:end="281:30"><expr pos:start="281:20" pos:end="281:30"><operator pos:start="281:20" pos:end="281:20">&amp;</operator><name pos:start="281:21" pos:end="281:30">buf_script</name></expr></argument>, <argument pos:start="281:33" pos:end="281:56"><expr pos:start="281:33" pos:end="281:56"><literal type="string" pos:start="281:33" pos:end="281:56">"bitrate=%6.1fkbits/s\n"</literal></expr></argument>, <argument pos:start="281:59" pos:end="281:65"><expr pos:start="281:59" pos:end="281:65"><name pos:start="281:59" pos:end="281:65">bitrate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="287:5" pos:end="289:86"><if pos:start="287:5" pos:end="287:68">if <condition pos:start="287:8" pos:end="287:23">(<expr pos:start="287:9" pos:end="287:22"><name pos:start="287:9" pos:end="287:18">total_size</name> <operator pos:start="287:20" pos:end="287:20">&lt;</operator> <literal type="number" pos:start="287:22" pos:end="287:22">0</literal></expr>)</condition><block type="pseudo" pos:start="287:25" pos:end="287:68"><block_content pos:start="287:25" pos:end="287:68"> <expr_stmt pos:start="287:25" pos:end="287:68"><expr pos:start="287:25" pos:end="287:67"><call pos:start="287:25" pos:end="287:67"><name pos:start="287:25" pos:end="287:34">av_bprintf</name><argument_list pos:start="287:35" pos:end="287:67">(<argument pos:start="287:36" pos:end="287:46"><expr pos:start="287:36" pos:end="287:46"><operator pos:start="287:36" pos:end="287:36">&amp;</operator><name pos:start="287:37" pos:end="287:46">buf_script</name></expr></argument>, <argument pos:start="287:49" pos:end="287:66"><expr pos:start="287:49" pos:end="287:66"><literal type="string" pos:start="287:49" pos:end="287:66">"total_size=N/A\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="289:5" pos:end="289:86">else<block type="pseudo" pos:start="289:25" pos:end="289:86"><block_content pos:start="289:25" pos:end="289:86">                <expr_stmt pos:start="289:25" pos:end="289:86"><expr pos:start="289:25" pos:end="289:85"><call pos:start="289:25" pos:end="289:85"><name pos:start="289:25" pos:end="289:34">av_bprintf</name><argument_list pos:start="289:35" pos:end="289:85">(<argument pos:start="289:36" pos:end="289:46"><expr pos:start="289:36" pos:end="289:46"><operator pos:start="289:36" pos:end="289:36">&amp;</operator><name pos:start="289:37" pos:end="289:46">buf_script</name></expr></argument>, <argument pos:start="289:49" pos:end="289:72"><expr pos:start="289:49" pos:end="289:72"><literal type="string" pos:start="289:49" pos:end="289:62">"total_size=%"</literal><name pos:start="289:63" pos:end="289:68">PRId64</name><literal type="string" pos:start="289:69" pos:end="289:72">"\n"</literal></expr></argument>, <argument pos:start="289:75" pos:end="289:84"><expr pos:start="289:75" pos:end="289:84"><name pos:start="289:75" pos:end="289:84">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="291:5" pos:end="291:60"><expr pos:start="291:5" pos:end="291:59"><call pos:start="291:5" pos:end="291:59"><name pos:start="291:5" pos:end="291:14">av_bprintf</name><argument_list pos:start="291:15" pos:end="291:59">(<argument pos:start="291:16" pos:end="291:26"><expr pos:start="291:16" pos:end="291:26"><operator pos:start="291:16" pos:end="291:16">&amp;</operator><name pos:start="291:17" pos:end="291:26">buf_script</name></expr></argument>, <argument pos:start="291:29" pos:end="291:53"><expr pos:start="291:29" pos:end="291:53"><literal type="string" pos:start="291:29" pos:end="291:43">"out_time_ms=%"</literal><name pos:start="291:44" pos:end="291:49">PRId64</name><literal type="string" pos:start="291:50" pos:end="291:53">"\n"</literal></expr></argument>, <argument pos:start="291:56" pos:end="291:58"><expr pos:start="291:56" pos:end="291:58"><name pos:start="291:56" pos:end="291:58">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="295:38"><expr pos:start="293:5" pos:end="295:37"><call pos:start="293:5" pos:end="295:37"><name pos:start="293:5" pos:end="293:14">av_bprintf</name><argument_list pos:start="293:15" pos:end="295:37">(<argument pos:start="293:16" pos:end="293:26"><expr pos:start="293:16" pos:end="293:26"><operator pos:start="293:16" pos:end="293:16">&amp;</operator><name pos:start="293:17" pos:end="293:26">buf_script</name></expr></argument>, <argument pos:start="293:29" pos:end="293:60"><expr pos:start="293:29" pos:end="293:60"><literal type="string" pos:start="293:29" pos:end="293:60">"out_time=%02d:%02d:%02d.%06d\n"</literal></expr></argument>,

               <argument pos:start="295:16" pos:end="295:20"><expr pos:start="295:16" pos:end="295:20"><name pos:start="295:16" pos:end="295:20">hours</name></expr></argument>, <argument pos:start="295:23" pos:end="295:26"><expr pos:start="295:23" pos:end="295:26"><name pos:start="295:23" pos:end="295:26">mins</name></expr></argument>, <argument pos:start="295:29" pos:end="295:32"><expr pos:start="295:29" pos:end="295:32"><name pos:start="295:29" pos:end="295:32">secs</name></expr></argument>, <argument pos:start="295:35" pos:end="295:36"><expr pos:start="295:35" pos:end="295:36"><name pos:start="295:35" pos:end="295:36">us</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="299:5" pos:end="303:47"><if pos:start="299:5" pos:end="303:47">if <condition pos:start="299:8" pos:end="299:40">(<expr pos:start="299:9" pos:end="299:39"><name pos:start="299:9" pos:end="299:21">nb_frames_dup</name> <operator pos:start="299:23" pos:end="299:24">||</operator> <name pos:start="299:26" pos:end="299:39">nb_frames_drop</name></expr>)</condition><block type="pseudo" pos:start="301:9" pos:end="303:47"><block_content pos:start="301:9" pos:end="303:47">

        <expr_stmt pos:start="301:9" pos:end="303:47"><expr pos:start="301:9" pos:end="303:46"><call pos:start="301:9" pos:end="303:46"><name pos:start="301:9" pos:end="301:16">snprintf</name><argument_list pos:start="301:17" pos:end="303:46">(<argument pos:start="301:18" pos:end="301:34"><expr pos:start="301:18" pos:end="301:34"><name pos:start="301:18" pos:end="301:20">buf</name> <operator pos:start="301:22" pos:end="301:22">+</operator> <call pos:start="301:24" pos:end="301:34"><name pos:start="301:24" pos:end="301:29">strlen</name><argument_list pos:start="301:30" pos:end="301:34">(<argument pos:start="301:31" pos:end="301:33"><expr pos:start="301:31" pos:end="301:33"><name pos:start="301:31" pos:end="301:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="301:37" pos:end="301:61"><expr pos:start="301:37" pos:end="301:61"><sizeof pos:start="301:37" pos:end="301:47">sizeof<argument_list pos:start="301:43" pos:end="301:47">(<argument pos:start="301:44" pos:end="301:46"><expr pos:start="301:44" pos:end="301:46"><name pos:start="301:44" pos:end="301:46">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="301:49" pos:end="301:49">-</operator> <call pos:start="301:51" pos:end="301:61"><name pos:start="301:51" pos:end="301:56">strlen</name><argument_list pos:start="301:57" pos:end="301:61">(<argument pos:start="301:58" pos:end="301:60"><expr pos:start="301:58" pos:end="301:60"><name pos:start="301:58" pos:end="301:60">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="301:64" pos:end="301:80"><expr pos:start="301:64" pos:end="301:80"><literal type="string" pos:start="301:64" pos:end="301:80">" dup=%d drop=%d"</literal></expr></argument>,

                <argument pos:start="303:17" pos:end="303:29"><expr pos:start="303:17" pos:end="303:29"><name pos:start="303:17" pos:end="303:29">nb_frames_dup</name></expr></argument>, <argument pos:start="303:32" pos:end="303:45"><expr pos:start="303:32" pos:end="303:45"><name pos:start="303:32" pos:end="303:45">nb_frames_drop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:62"><expr pos:start="305:5" pos:end="305:61"><call pos:start="305:5" pos:end="305:61"><name pos:start="305:5" pos:end="305:14">av_bprintf</name><argument_list pos:start="305:15" pos:end="305:61">(<argument pos:start="305:16" pos:end="305:26"><expr pos:start="305:16" pos:end="305:26"><operator pos:start="305:16" pos:end="305:16">&amp;</operator><name pos:start="305:17" pos:end="305:26">buf_script</name></expr></argument>, <argument pos:start="305:29" pos:end="305:45"><expr pos:start="305:29" pos:end="305:45"><literal type="string" pos:start="305:29" pos:end="305:45">"dup_frames=%d\n"</literal></expr></argument>, <argument pos:start="305:48" pos:end="305:60"><expr pos:start="305:48" pos:end="305:60"><name pos:start="305:48" pos:end="305:60">nb_frames_dup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:64"><expr pos:start="307:5" pos:end="307:63"><call pos:start="307:5" pos:end="307:63"><name pos:start="307:5" pos:end="307:14">av_bprintf</name><argument_list pos:start="307:15" pos:end="307:63">(<argument pos:start="307:16" pos:end="307:26"><expr pos:start="307:16" pos:end="307:26"><operator pos:start="307:16" pos:end="307:16">&amp;</operator><name pos:start="307:17" pos:end="307:26">buf_script</name></expr></argument>, <argument pos:start="307:29" pos:end="307:46"><expr pos:start="307:29" pos:end="307:46"><literal type="string" pos:start="307:29" pos:end="307:46">"drop_frames=%d\n"</literal></expr></argument>, <argument pos:start="307:49" pos:end="307:62"><expr pos:start="307:49" pos:end="307:62"><name pos:start="307:49" pos:end="307:62">nb_frames_drop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="311:5" pos:end="323:5"><if pos:start="311:5" pos:end="317:5">if <condition pos:start="311:8" pos:end="311:18">(<expr pos:start="311:9" pos:end="311:17"><name pos:start="311:9" pos:end="311:13">speed</name> <operator pos:start="311:15" pos:end="311:15">&lt;</operator> <literal type="number" pos:start="311:17" pos:end="311:17">0</literal></expr>)</condition> <block pos:start="311:20" pos:end="317:5">{<block_content pos:start="313:9" pos:end="315:47">

        <expr_stmt pos:start="313:9" pos:end="313:76"><expr pos:start="313:9" pos:end="313:75"><call pos:start="313:9" pos:end="313:75"><name pos:start="313:9" pos:end="313:16">snprintf</name><argument_list pos:start="313:17" pos:end="313:75">(<argument pos:start="313:18" pos:end="313:34"><expr pos:start="313:18" pos:end="313:34"><name pos:start="313:18" pos:end="313:20">buf</name> <operator pos:start="313:22" pos:end="313:22">+</operator> <call pos:start="313:24" pos:end="313:34"><name pos:start="313:24" pos:end="313:29">strlen</name><argument_list pos:start="313:30" pos:end="313:34">(<argument pos:start="313:31" pos:end="313:33"><expr pos:start="313:31" pos:end="313:33"><name pos:start="313:31" pos:end="313:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="313:37" pos:end="313:61"><expr pos:start="313:37" pos:end="313:61"><sizeof pos:start="313:37" pos:end="313:47">sizeof<argument_list pos:start="313:43" pos:end="313:47">(<argument pos:start="313:44" pos:end="313:46"><expr pos:start="313:44" pos:end="313:46"><name pos:start="313:44" pos:end="313:46">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="313:49" pos:end="313:49">-</operator> <call pos:start="313:51" pos:end="313:61"><name pos:start="313:51" pos:end="313:56">strlen</name><argument_list pos:start="313:57" pos:end="313:61">(<argument pos:start="313:58" pos:end="313:60"><expr pos:start="313:58" pos:end="313:60"><name pos:start="313:58" pos:end="313:60">buf</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="313:63" pos:end="313:74"><expr pos:start="313:63" pos:end="313:74"><literal type="string" pos:start="313:63" pos:end="313:74">" speed=N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:47"><expr pos:start="315:9" pos:end="315:46"><call pos:start="315:9" pos:end="315:46"><name pos:start="315:9" pos:end="315:18">av_bprintf</name><argument_list pos:start="315:19" pos:end="315:46">(<argument pos:start="315:20" pos:end="315:30"><expr pos:start="315:20" pos:end="315:30"><operator pos:start="315:20" pos:end="315:20">&amp;</operator><name pos:start="315:21" pos:end="315:30">buf_script</name></expr></argument>, <argument pos:start="315:33" pos:end="315:45"><expr pos:start="315:33" pos:end="315:45"><literal type="string" pos:start="315:33" pos:end="315:45">"speed=N/A\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="317:7" pos:end="323:5">else <block pos:start="317:12" pos:end="323:5">{<block_content pos:start="319:9" pos:end="321:57">

        <expr_stmt pos:start="319:9" pos:end="319:86"><expr pos:start="319:9" pos:end="319:85"><call pos:start="319:9" pos:end="319:85"><name pos:start="319:9" pos:end="319:16">snprintf</name><argument_list pos:start="319:17" pos:end="319:85">(<argument pos:start="319:18" pos:end="319:34"><expr pos:start="319:18" pos:end="319:34"><name pos:start="319:18" pos:end="319:20">buf</name> <operator pos:start="319:22" pos:end="319:22">+</operator> <call pos:start="319:24" pos:end="319:34"><name pos:start="319:24" pos:end="319:29">strlen</name><argument_list pos:start="319:30" pos:end="319:34">(<argument pos:start="319:31" pos:end="319:33"><expr pos:start="319:31" pos:end="319:33"><name pos:start="319:31" pos:end="319:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="319:37" pos:end="319:61"><expr pos:start="319:37" pos:end="319:61"><sizeof pos:start="319:37" pos:end="319:47">sizeof<argument_list pos:start="319:43" pos:end="319:47">(<argument pos:start="319:44" pos:end="319:46"><expr pos:start="319:44" pos:end="319:46"><name pos:start="319:44" pos:end="319:46">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="319:49" pos:end="319:49">-</operator> <call pos:start="319:51" pos:end="319:61"><name pos:start="319:51" pos:end="319:56">strlen</name><argument_list pos:start="319:57" pos:end="319:61">(<argument pos:start="319:58" pos:end="319:60"><expr pos:start="319:58" pos:end="319:60"><name pos:start="319:58" pos:end="319:60">buf</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="319:63" pos:end="319:77"><expr pos:start="319:63" pos:end="319:77"><literal type="string" pos:start="319:63" pos:end="319:77">" speed=%4.3gx"</literal></expr></argument>, <argument pos:start="319:80" pos:end="319:84"><expr pos:start="319:80" pos:end="319:84"><name pos:start="319:80" pos:end="319:84">speed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:57"><expr pos:start="321:9" pos:end="321:56"><call pos:start="321:9" pos:end="321:56"><name pos:start="321:9" pos:end="321:18">av_bprintf</name><argument_list pos:start="321:19" pos:end="321:56">(<argument pos:start="321:20" pos:end="321:30"><expr pos:start="321:20" pos:end="321:30"><operator pos:start="321:20" pos:end="321:20">&amp;</operator><name pos:start="321:21" pos:end="321:30">buf_script</name></expr></argument>, <argument pos:start="321:33" pos:end="321:48"><expr pos:start="321:33" pos:end="321:48"><literal type="string" pos:start="321:33" pos:end="321:48">"speed=%4.3gx\n"</literal></expr></argument>, <argument pos:start="321:51" pos:end="321:55"><expr pos:start="321:51" pos:end="321:55"><name pos:start="321:51" pos:end="321:55">speed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="327:5" pos:end="343:5"><if pos:start="327:5" pos:end="343:5">if <condition pos:start="327:8" pos:end="327:38">(<expr pos:start="327:9" pos:end="327:37"><name pos:start="327:9" pos:end="327:19">print_stats</name> <operator pos:start="327:21" pos:end="327:22">||</operator> <name pos:start="327:24" pos:end="327:37">is_last_report</name></expr>)</condition> <block pos:start="327:40" pos:end="343:5">{<block_content pos:start="329:9" pos:end="341:19">

        <decl_stmt pos:start="329:9" pos:end="329:54"><decl pos:start="329:9" pos:end="329:53"><type pos:start="329:9" pos:end="329:18"><specifier pos:start="329:9" pos:end="329:13">const</specifier> <name pos:start="329:15" pos:end="329:18">char</name></type> <name pos:start="329:20" pos:end="329:22">end</name> <init pos:start="329:24" pos:end="329:53">= <expr pos:start="329:26" pos:end="329:53"><ternary pos:start="329:26" pos:end="329:53"><condition pos:start="329:26" pos:end="329:41"><expr pos:start="329:26" pos:end="329:39"><name pos:start="329:26" pos:end="329:39">is_last_report</name></expr> ?</condition><then pos:start="329:43" pos:end="329:46"> <expr pos:start="329:43" pos:end="329:46"><literal type="char" pos:start="329:43" pos:end="329:46">'\n'</literal></expr> </then><else pos:start="329:48" pos:end="329:53">: <expr pos:start="329:50" pos:end="329:53"><literal type="char" pos:start="329:50" pos:end="329:53">'\r'</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="331:9" pos:end="337:60"><if pos:start="331:9" pos:end="335:9">if <condition pos:start="331:12" pos:end="331:63">(<expr pos:start="331:13" pos:end="331:62"><name pos:start="331:13" pos:end="331:23">print_stats</name><operator pos:start="331:24" pos:end="331:25">==</operator><literal type="number" pos:start="331:26" pos:end="331:26">1</literal> <operator pos:start="331:28" pos:end="331:29">&amp;&amp;</operator> <name pos:start="331:31" pos:end="331:41">AV_LOG_INFO</name> <operator pos:start="331:43" pos:end="331:43">&gt;</operator> <call pos:start="331:45" pos:end="331:62"><name pos:start="331:45" pos:end="331:60">av_log_get_level</name><argument_list pos:start="331:61" pos:end="331:62">()</argument_list></call></expr>)</condition> <block pos:start="331:65" pos:end="335:9">{<block_content pos:start="333:13" pos:end="333:50">

            <expr_stmt pos:start="333:13" pos:end="333:50"><expr pos:start="333:13" pos:end="333:49"><call pos:start="333:13" pos:end="333:49"><name pos:start="333:13" pos:end="333:19">fprintf</name><argument_list pos:start="333:20" pos:end="333:49">(<argument pos:start="333:21" pos:end="333:26"><expr pos:start="333:21" pos:end="333:26"><name pos:start="333:21" pos:end="333:26">stderr</name></expr></argument>, <argument pos:start="333:29" pos:end="333:38"><expr pos:start="333:29" pos:end="333:38"><literal type="string" pos:start="333:29" pos:end="333:38">"%s    %c"</literal></expr></argument>, <argument pos:start="333:41" pos:end="333:43"><expr pos:start="333:41" pos:end="333:43"><name pos:start="333:41" pos:end="333:43">buf</name></expr></argument>, <argument pos:start="333:46" pos:end="333:48"><expr pos:start="333:46" pos:end="333:48"><name pos:start="333:46" pos:end="333:48">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="335:11" pos:end="337:60">else<block type="pseudo" pos:start="337:13" pos:end="337:60"><block_content pos:start="337:13" pos:end="337:60">

            <expr_stmt pos:start="337:13" pos:end="337:60"><expr pos:start="337:13" pos:end="337:59"><call pos:start="337:13" pos:end="337:59"><name pos:start="337:13" pos:end="337:18">av_log</name><argument_list pos:start="337:19" pos:end="337:59">(<argument pos:start="337:20" pos:end="337:23"><expr pos:start="337:20" pos:end="337:23"><name pos:start="337:20" pos:end="337:23">NULL</name></expr></argument>, <argument pos:start="337:26" pos:end="337:36"><expr pos:start="337:26" pos:end="337:36"><name pos:start="337:26" pos:end="337:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="337:39" pos:end="337:48"><expr pos:start="337:39" pos:end="337:48"><literal type="string" pos:start="337:39" pos:end="337:48">"%s    %c"</literal></expr></argument>, <argument pos:start="337:51" pos:end="337:53"><expr pos:start="337:51" pos:end="337:53"><name pos:start="337:51" pos:end="337:53">buf</name></expr></argument>, <argument pos:start="337:56" pos:end="337:58"><expr pos:start="337:56" pos:end="337:58"><name pos:start="337:56" pos:end="337:58">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="341:5" pos:end="341:19"><expr pos:start="341:5" pos:end="341:18"><call pos:start="341:5" pos:end="341:18"><name pos:start="341:5" pos:end="341:10">fflush</name><argument_list pos:start="341:11" pos:end="341:18">(<argument pos:start="341:12" pos:end="341:17"><expr pos:start="341:12" pos:end="341:17"><name pos:start="341:12" pos:end="341:17">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="347:5" pos:end="367:5"><if pos:start="347:5" pos:end="367:5">if <condition pos:start="347:8" pos:end="347:22">(<expr pos:start="347:9" pos:end="347:21"><name pos:start="347:9" pos:end="347:21">progress_avio</name></expr>)</condition> <block pos:start="347:24" pos:end="367:5">{<block_content pos:start="349:9" pos:end="365:9">

        <expr_stmt pos:start="349:9" pos:end="351:56"><expr pos:start="349:9" pos:end="351:55"><call pos:start="349:9" pos:end="351:55"><name pos:start="349:9" pos:end="349:18">av_bprintf</name><argument_list pos:start="349:19" pos:end="351:55">(<argument pos:start="349:20" pos:end="349:30"><expr pos:start="349:20" pos:end="349:30"><operator pos:start="349:20" pos:end="349:20">&amp;</operator><name pos:start="349:21" pos:end="349:30">buf_script</name></expr></argument>, <argument pos:start="349:33" pos:end="349:47"><expr pos:start="349:33" pos:end="349:47"><literal type="string" pos:start="349:33" pos:end="349:47">"progress=%s\n"</literal></expr></argument>,

                   <argument pos:start="351:20" pos:end="351:54"><expr pos:start="351:20" pos:end="351:54"><ternary pos:start="351:20" pos:end="351:54"><condition pos:start="351:20" pos:end="351:35"><expr pos:start="351:20" pos:end="351:33"><name pos:start="351:20" pos:end="351:33">is_last_report</name></expr> ?</condition><then pos:start="351:37" pos:end="351:41"> <expr pos:start="351:37" pos:end="351:41"><literal type="string" pos:start="351:37" pos:end="351:41">"end"</literal></expr> </then><else pos:start="351:43" pos:end="351:54">: <expr pos:start="351:45" pos:end="351:54"><literal type="string" pos:start="351:45" pos:end="351:54">"continue"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="355:63"><expr pos:start="353:9" pos:end="355:62"><call pos:start="353:9" pos:end="355:62"><name pos:start="353:9" pos:end="353:18">avio_write</name><argument_list pos:start="353:19" pos:end="355:62">(<argument pos:start="353:20" pos:end="353:32"><expr pos:start="353:20" pos:end="353:32"><name pos:start="353:20" pos:end="353:32">progress_avio</name></expr></argument>, <argument pos:start="353:35" pos:end="353:48"><expr pos:start="353:35" pos:end="353:48"><name pos:start="353:35" pos:end="353:48"><name pos:start="353:35" pos:end="353:44">buf_script</name><operator pos:start="353:45" pos:end="353:45">.</operator><name pos:start="353:46" pos:end="353:48">str</name></name></expr></argument>,

                   <argument pos:start="355:20" pos:end="355:61"><expr pos:start="355:20" pos:end="355:61"><call pos:start="355:20" pos:end="355:61"><name pos:start="355:20" pos:end="355:24">FFMIN</name><argument_list pos:start="355:25" pos:end="355:61">(<argument pos:start="355:26" pos:end="355:39"><expr pos:start="355:26" pos:end="355:39"><name pos:start="355:26" pos:end="355:39"><name pos:start="355:26" pos:end="355:35">buf_script</name><operator pos:start="355:36" pos:end="355:36">.</operator><name pos:start="355:37" pos:end="355:39">len</name></name></expr></argument>, <argument pos:start="355:42" pos:end="355:60"><expr pos:start="355:42" pos:end="355:60"><name pos:start="355:42" pos:end="355:56"><name pos:start="355:42" pos:end="355:51">buf_script</name><operator pos:start="355:52" pos:end="355:52">.</operator><name pos:start="355:53" pos:end="355:56">size</name></name> <operator pos:start="355:58" pos:end="355:58">-</operator> <literal type="number" pos:start="355:60" pos:end="355:60">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:34"><expr pos:start="357:9" pos:end="357:33"><call pos:start="357:9" pos:end="357:33"><name pos:start="357:9" pos:end="357:18">avio_flush</name><argument_list pos:start="357:19" pos:end="357:33">(<argument pos:start="357:20" pos:end="357:32"><expr pos:start="357:20" pos:end="357:32"><name pos:start="357:20" pos:end="357:32">progress_avio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:46"><expr pos:start="359:9" pos:end="359:45"><call pos:start="359:9" pos:end="359:45"><name pos:start="359:9" pos:end="359:26">av_bprint_finalize</name><argument_list pos:start="359:27" pos:end="359:45">(<argument pos:start="359:28" pos:end="359:38"><expr pos:start="359:28" pos:end="359:38"><operator pos:start="359:28" pos:end="359:28">&amp;</operator><name pos:start="359:29" pos:end="359:38">buf_script</name></expr></argument>, <argument pos:start="359:41" pos:end="359:44"><expr pos:start="359:41" pos:end="359:44"><name pos:start="359:41" pos:end="359:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="361:9" pos:end="365:9"><if pos:start="361:9" pos:end="365:9">if <condition pos:start="361:12" pos:end="361:27">(<expr pos:start="361:13" pos:end="361:26"><name pos:start="361:13" pos:end="361:26">is_last_report</name></expr>)</condition> <block pos:start="361:29" pos:end="365:9">{<block_content pos:start="363:13" pos:end="363:40">

            <expr_stmt pos:start="363:13" pos:end="363:40"><expr pos:start="363:13" pos:end="363:39"><call pos:start="363:13" pos:end="363:39"><name pos:start="363:13" pos:end="363:23">avio_closep</name><argument_list pos:start="363:24" pos:end="363:39">(<argument pos:start="363:25" pos:end="363:38"><expr pos:start="363:25" pos:end="363:38"><operator pos:start="363:25" pos:end="363:25">&amp;</operator><name pos:start="363:26" pos:end="363:38">progress_avio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="371:5" pos:end="373:38"><if pos:start="371:5" pos:end="373:38">if <condition pos:start="371:8" pos:end="371:23">(<expr pos:start="371:9" pos:end="371:22"><name pos:start="371:9" pos:end="371:22">is_last_report</name></expr>)</condition><block type="pseudo" pos:start="373:9" pos:end="373:38"><block_content pos:start="373:9" pos:end="373:38">

        <expr_stmt pos:start="373:9" pos:end="373:38"><expr pos:start="373:9" pos:end="373:37"><call pos:start="373:9" pos:end="373:37"><name pos:start="373:9" pos:end="373:25">print_final_stats</name><argument_list pos:start="373:26" pos:end="373:37">(<argument pos:start="373:27" pos:end="373:36"><expr pos:start="373:27" pos:end="373:36"><name pos:start="373:27" pos:end="373:36">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
