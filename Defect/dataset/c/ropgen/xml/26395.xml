<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26395.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">monitor_find_completion</name><parameter_list pos:start="1:36" pos:end="1:56">(<parameter pos:start="1:37" pos:end="1:55"><decl pos:start="1:37" pos:end="1:55"><type pos:start="1:37" pos:end="1:48"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:55">cmdline</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="201:1">{<block_content pos:start="5:5" pos:end="199:5">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:23">cmdname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:24"><name pos:start="7:11" pos:end="7:14">args</name><index pos:start="7:15" pos:end="7:24">[<expr pos:start="7:16" pos:end="7:23"><name pos:start="7:16" pos:end="7:23">MAX_ARGS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">nb_args</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:23">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:21">ptype</name></decl>, <decl pos:start="11:24" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:16"><modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:27">str</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:21"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:19">mon_cmd_t</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:24">cmd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:18"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:16">KeyDef</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:21">key</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:42"><call pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:17">parse_cmdline</name><argument_list pos:start="19:18" pos:end="19:42">(<argument pos:start="19:19" pos:end="19:25"><expr pos:start="19:19" pos:end="19:25"><name pos:start="19:19" pos:end="19:25">cmdline</name></expr></argument>, <argument pos:start="19:28" pos:end="19:35"><expr pos:start="19:28" pos:end="19:35"><operator pos:start="19:28" pos:end="19:28">&amp;</operator><name pos:start="19:29" pos:end="19:35">nb_args</name></expr></argument>, <argument pos:start="19:38" pos:end="19:41"><expr pos:start="19:38" pos:end="19:41"><name pos:start="19:38" pos:end="19:41">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="21:1" pos:end="21:23">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:23">DEBUG_COMPLETION</name></cpp:ifdef>

    <for pos:start="23:5" pos:end="30:0">for<control pos:start="23:8" pos:end="23:32">(<init pos:start="23:9" pos:end="23:14"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">i</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>;</init> <condition pos:start="23:16" pos:end="23:27"><expr pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:16">i</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <name pos:start="23:20" pos:end="23:26">nb_args</name></expr>;</condition> <incr pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:29">i</name><operator pos:start="23:30" pos:end="23:31">++</operator></expr></incr>)</control> <block pos:start="23:34" pos:end="30:0">{<block_content pos:start="25:9" pos:end="25:70">

        <expr_stmt pos:start="25:9" pos:end="25:70"><expr pos:start="25:9" pos:end="25:69"><call pos:start="25:9" pos:end="25:69"><name pos:start="25:9" pos:end="25:22">monitor_printf</name><argument_list pos:start="25:23" pos:end="25:69">(<argument pos:start="25:24" pos:end="25:30"><expr pos:start="25:24" pos:end="25:30"><name pos:start="25:24" pos:end="25:30">cur_mon</name></expr></argument>, <argument pos:start="25:33" pos:end="25:48"><expr pos:start="25:33" pos:end="25:48"><literal type="string" pos:start="25:33" pos:end="25:48">"arg%d = '%s'\n"</literal></expr></argument>, <argument pos:start="25:51" pos:end="25:51"><expr pos:start="25:51" pos:end="25:51"><name pos:start="25:51" pos:end="25:51">i</name></expr></argument>, <argument pos:start="25:54" pos:end="25:68"><expr pos:start="25:54" pos:end="25:68"><operator pos:start="25:54" pos:end="25:54">(</operator><name pos:start="25:55" pos:end="25:58">char</name> <operator pos:start="25:60" pos:end="25:60">*</operator><operator pos:start="25:61" pos:end="25:61">)</operator><name pos:start="25:62" pos:end="25:68"><name pos:start="25:62" pos:end="25:65">args</name><index pos:start="25:66" pos:end="25:68">[<expr pos:start="25:67" pos:end="25:67"><name pos:start="25:67" pos:end="25:67">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="33:5" pos:end="35:18">/* if the line ends with a space, it means we want to complete the

       next arg */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:7">len</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:25"><name pos:start="37:11" pos:end="37:16">strlen</name><argument_list pos:start="37:17" pos:end="37:25">(<argument pos:start="37:18" pos:end="37:24"><expr pos:start="37:18" pos:end="37:24"><name pos:start="37:18" pos:end="37:24">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:50">(<expr pos:start="39:9" pos:end="39:49"><name pos:start="39:9" pos:end="39:11">len</name> <operator pos:start="39:13" pos:end="39:13">&gt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal> <operator pos:start="39:17" pos:end="39:18">&amp;&amp;</operator> <call pos:start="39:20" pos:end="39:49"><name pos:start="39:20" pos:end="39:31">qemu_isspace</name><argument_list pos:start="39:32" pos:end="39:49">(<argument pos:start="39:33" pos:end="39:48"><expr pos:start="39:33" pos:end="39:48"><name pos:start="39:33" pos:end="39:48"><name pos:start="39:33" pos:end="39:39">cmdline</name><index pos:start="39:40" pos:end="39:48">[<expr pos:start="39:41" pos:end="39:47"><name pos:start="39:41" pos:end="39:43">len</name> <operator pos:start="39:45" pos:end="39:45">-</operator> <literal type="number" pos:start="39:47" pos:end="39:47">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:52" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:39">

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:32">(<expr pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:19">nb_args</name> <operator pos:start="41:21" pos:end="41:22">&gt;=</operator> <name pos:start="41:24" pos:end="41:31">MAX_ARGS</name></expr>)</condition> <block pos:start="41:34" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:25">

            <goto pos:start="43:13" pos:end="43:25">goto <name pos:start="43:18" pos:end="43:24">cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:39"><expr pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:12">args</name><index pos:start="47:13" pos:end="47:23">[<expr pos:start="47:14" pos:end="47:22"><name pos:start="47:14" pos:end="47:20">nb_args</name><operator pos:start="47:21" pos:end="47:22">++</operator></expr>]</index></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <call pos:start="47:27" pos:end="47:38"><name pos:start="47:27" pos:end="47:34">g_strdup</name><argument_list pos:start="47:35" pos:end="47:38">(<argument pos:start="47:36" pos:end="47:37"><expr pos:start="47:36" pos:end="47:37"><literal type="string" pos:start="47:36" pos:end="47:37">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="189:5"><if pos:start="51:5" pos:end="71:5">if <condition pos:start="51:8" pos:end="51:21">(<expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:15">nb_args</name> <operator pos:start="51:17" pos:end="51:18">&lt;=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">1</literal></expr>)</condition> <block pos:start="51:23" pos:end="71:5">{<block_content pos:start="55:9" pos:end="69:9">

        <comment type="block" pos:start="53:9" pos:end="53:32">/* command completion */</comment>

        <if_stmt pos:start="55:9" pos:end="61:30"><if pos:start="55:9" pos:end="57:25">if <condition pos:start="55:12" pos:end="55:25">(<expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:19">nb_args</name> <operator pos:start="55:21" pos:end="55:22">==</operator> <literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:25"><block_content pos:start="57:13" pos:end="57:25">

            <expr_stmt pos:start="57:13" pos:end="57:25"><expr pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:19">cmdname</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <literal type="string" pos:start="57:23" pos:end="57:24">""</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="59:9" pos:end="61:30">else<block type="pseudo" pos:start="61:13" pos:end="61:30"><block_content pos:start="61:13" pos:end="61:30">

            <expr_stmt pos:start="61:13" pos:end="61:30"><expr pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:19">cmdname</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:29"><name pos:start="61:23" pos:end="61:26">args</name><index pos:start="61:27" pos:end="61:29">[<expr pos:start="61:28" pos:end="61:28"><literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:68"><expr pos:start="63:9" pos:end="63:67"><call pos:start="63:9" pos:end="63:67"><name pos:start="63:9" pos:end="63:37">readline_set_completion_index</name><argument_list pos:start="63:38" pos:end="63:67">(<argument pos:start="63:39" pos:end="63:49"><expr pos:start="63:39" pos:end="63:49"><name pos:start="63:39" pos:end="63:49"><name pos:start="63:39" pos:end="63:45">cur_mon</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:49">rs</name></name></expr></argument>, <argument pos:start="63:52" pos:end="63:66"><expr pos:start="63:52" pos:end="63:66"><call pos:start="63:52" pos:end="63:66"><name pos:start="63:52" pos:end="63:57">strlen</name><argument_list pos:start="63:58" pos:end="63:66">(<argument pos:start="63:59" pos:end="63:65"><expr pos:start="63:59" pos:end="63:65"><name pos:start="63:59" pos:end="63:65">cmdname</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="65:9" pos:end="69:9">for<control pos:start="65:12" pos:end="65:53">(<init pos:start="65:13" pos:end="65:27"><expr pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:15">cmd</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:26">mon_cmds</name></expr>;</init> <condition pos:start="65:29" pos:end="65:46"><expr pos:start="65:29" pos:end="65:45"><name pos:start="65:29" pos:end="65:37"><name pos:start="65:29" pos:end="65:31">cmd</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:37">name</name></name> <operator pos:start="65:39" pos:end="65:40">!=</operator> <name pos:start="65:42" pos:end="65:45">NULL</name></expr>;</condition> <incr pos:start="65:48" pos:end="65:52"><expr pos:start="65:48" pos:end="65:52"><name pos:start="65:48" pos:end="65:50">cmd</name><operator pos:start="65:51" pos:end="65:52">++</operator></expr></incr>)</control> <block pos:start="65:55" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:47">

            <expr_stmt pos:start="67:13" pos:end="67:47"><expr pos:start="67:13" pos:end="67:46"><call pos:start="67:13" pos:end="67:46"><name pos:start="67:13" pos:end="67:26">cmd_completion</name><argument_list pos:start="67:27" pos:end="67:46">(<argument pos:start="67:28" pos:end="67:34"><expr pos:start="67:28" pos:end="67:34"><name pos:start="67:28" pos:end="67:34">cmdname</name></expr></argument>, <argument pos:start="67:37" pos:end="67:45"><expr pos:start="67:37" pos:end="67:45"><name pos:start="67:37" pos:end="67:45"><name pos:start="67:37" pos:end="67:39">cmd</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:45">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="189:5">else <block pos:start="71:12" pos:end="189:5">{<block_content pos:start="75:9" pos:end="187:9">

        <comment type="block" pos:start="73:9" pos:end="73:30">/* find the command */</comment>

        <for pos:start="75:9" pos:end="83:9">for <control pos:start="75:13" pos:end="75:54">(<init pos:start="75:14" pos:end="75:28"><expr pos:start="75:14" pos:end="75:27"><name pos:start="75:14" pos:end="75:16">cmd</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:27">mon_cmds</name></expr>;</init> <condition pos:start="75:30" pos:end="75:47"><expr pos:start="75:30" pos:end="75:46"><name pos:start="75:30" pos:end="75:38"><name pos:start="75:30" pos:end="75:32">cmd</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:38">name</name></name> <operator pos:start="75:40" pos:end="75:41">!=</operator> <name pos:start="75:43" pos:end="75:46">NULL</name></expr>;</condition> <incr pos:start="75:49" pos:end="75:53"><expr pos:start="75:49" pos:end="75:53"><name pos:start="75:49" pos:end="75:51">cmd</name><operator pos:start="75:52" pos:end="75:53">++</operator></expr></incr>)</control> <block pos:start="75:56" pos:end="83:9">{<block_content pos:start="77:13" pos:end="81:13">

            <if_stmt pos:start="77:13" pos:end="81:13"><if pos:start="77:13" pos:end="81:13">if <condition pos:start="77:16" pos:end="77:48">(<expr pos:start="77:17" pos:end="77:47"><call pos:start="77:17" pos:end="77:47"><name pos:start="77:17" pos:end="77:27">compare_cmd</name><argument_list pos:start="77:28" pos:end="77:47">(<argument pos:start="77:29" pos:end="77:35"><expr pos:start="77:29" pos:end="77:35"><name pos:start="77:29" pos:end="77:35"><name pos:start="77:29" pos:end="77:32">args</name><index pos:start="77:33" pos:end="77:35">[<expr pos:start="77:34" pos:end="77:34"><literal type="number" pos:start="77:34" pos:end="77:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="77:38" pos:end="77:46"><expr pos:start="77:38" pos:end="77:46"><name pos:start="77:38" pos:end="77:46"><name pos:start="77:38" pos:end="77:40">cmd</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:46">name</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:50" pos:end="81:13">{<block_content pos:start="79:17" pos:end="79:22">

                <break pos:start="79:17" pos:end="79:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:23">(<expr pos:start="85:13" pos:end="85:22"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:22"><name pos:start="85:14" pos:end="85:16">cmd</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:22">name</name></name></expr>)</condition> <block pos:start="85:25" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:25">

            <goto pos:start="87:13" pos:end="87:25">goto <name pos:start="87:18" pos:end="87:24">cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:46"><expr pos:start="93:9" pos:end="93:45"><name pos:start="93:9" pos:end="93:13">ptype</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <call pos:start="93:17" pos:end="93:45"><name pos:start="93:17" pos:end="93:29">next_arg_type</name><argument_list pos:start="93:30" pos:end="93:45">(<argument pos:start="93:31" pos:end="93:44"><expr pos:start="93:31" pos:end="93:44"><name pos:start="93:31" pos:end="93:44"><name pos:start="93:31" pos:end="93:33">cmd</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:44">args_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="95:9" pos:end="107:9">for<control pos:start="95:12" pos:end="95:40">(<init pos:start="95:13" pos:end="95:18"><expr pos:start="95:13" pos:end="95:17"><name pos:start="95:13" pos:end="95:13">i</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <literal type="number" pos:start="95:17" pos:end="95:17">0</literal></expr>;</init> <condition pos:start="95:20" pos:end="95:35"><expr pos:start="95:20" pos:end="95:34"><name pos:start="95:20" pos:end="95:20">i</name> <operator pos:start="95:22" pos:end="95:22">&lt;</operator> <name pos:start="95:24" pos:end="95:30">nb_args</name> <operator pos:start="95:32" pos:end="95:32">-</operator> <literal type="number" pos:start="95:34" pos:end="95:34">2</literal></expr>;</condition> <incr pos:start="95:37" pos:end="95:39"><expr pos:start="95:37" pos:end="95:39"><name pos:start="95:37" pos:end="95:37">i</name><operator pos:start="95:38" pos:end="95:39">++</operator></expr></incr>)</control> <block pos:start="95:42" pos:end="107:9">{<block_content pos:start="97:13" pos:end="105:13">

            <if_stmt pos:start="97:13" pos:end="105:13"><if pos:start="97:13" pos:end="105:13">if <condition pos:start="97:16" pos:end="97:31">(<expr pos:start="97:17" pos:end="97:30"><operator pos:start="97:17" pos:end="97:17">*</operator><name pos:start="97:18" pos:end="97:22">ptype</name> <operator pos:start="97:24" pos:end="97:25">!=</operator> <literal type="char" pos:start="97:27" pos:end="97:30">'\0'</literal></expr>)</condition> <block pos:start="97:33" pos:end="105:13">{<block_content pos:start="99:17" pos:end="103:49">

                <expr_stmt pos:start="99:17" pos:end="99:45"><expr pos:start="99:17" pos:end="99:44"><name pos:start="99:17" pos:end="99:21">ptype</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <call pos:start="99:25" pos:end="99:44"><name pos:start="99:25" pos:end="99:37">next_arg_type</name><argument_list pos:start="99:38" pos:end="99:44">(<argument pos:start="99:39" pos:end="99:43"><expr pos:start="99:39" pos:end="99:43"><name pos:start="99:39" pos:end="99:43">ptype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <while pos:start="101:17" pos:end="103:49">while <condition pos:start="101:23" pos:end="101:37">(<expr pos:start="101:24" pos:end="101:36"><operator pos:start="101:24" pos:end="101:24">*</operator><name pos:start="101:25" pos:end="101:29">ptype</name> <operator pos:start="101:31" pos:end="101:32">==</operator> <literal type="char" pos:start="101:34" pos:end="101:36">'?'</literal></expr>)</condition><block type="pseudo" pos:start="103:21" pos:end="103:49"><block_content pos:start="103:21" pos:end="103:49">

                    <expr_stmt pos:start="103:21" pos:end="103:49"><expr pos:start="103:21" pos:end="103:48"><name pos:start="103:21" pos:end="103:25">ptype</name> <operator pos:start="103:27" pos:end="103:27">=</operator> <call pos:start="103:29" pos:end="103:48"><name pos:start="103:29" pos:end="103:41">next_arg_type</name><argument_list pos:start="103:42" pos:end="103:48">(<argument pos:start="103:43" pos:end="103:47"><expr pos:start="103:43" pos:end="103:47"><name pos:start="103:43" pos:end="103:47">ptype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="109:9" pos:end="109:32"><expr pos:start="109:9" pos:end="109:31"><name pos:start="109:9" pos:end="109:11">str</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <name pos:start="109:15" pos:end="109:31"><name pos:start="109:15" pos:end="109:18">args</name><index pos:start="109:19" pos:end="109:31">[<expr pos:start="109:20" pos:end="109:30"><name pos:start="109:20" pos:end="109:26">nb_args</name> <operator pos:start="109:28" pos:end="109:28">-</operator> <literal type="number" pos:start="109:30" pos:end="109:30">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="115:9"><if pos:start="111:9" pos:end="115:9">if <condition pos:start="111:12" pos:end="111:46">(<expr pos:start="111:13" pos:end="111:45"><operator pos:start="111:13" pos:end="111:13">*</operator><name pos:start="111:14" pos:end="111:18">ptype</name> <operator pos:start="111:20" pos:end="111:21">==</operator> <literal type="char" pos:start="111:23" pos:end="111:25">'-'</literal> <operator pos:start="111:27" pos:end="111:28">&amp;&amp;</operator> <name pos:start="111:30" pos:end="111:37"><name pos:start="111:30" pos:end="111:34">ptype</name><index pos:start="111:35" pos:end="111:37">[<expr pos:start="111:36" pos:end="111:36"><literal type="number" pos:start="111:36" pos:end="111:36">1</literal></expr>]</index></name> <operator pos:start="111:39" pos:end="111:40">!=</operator> <literal type="char" pos:start="111:42" pos:end="111:45">'\0'</literal></expr>)</condition> <block pos:start="111:48" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:41">

            <expr_stmt pos:start="113:13" pos:end="113:41"><expr pos:start="113:13" pos:end="113:40"><name pos:start="113:13" pos:end="113:17">ptype</name> <operator pos:start="113:19" pos:end="113:19">=</operator> <call pos:start="113:21" pos:end="113:40"><name pos:start="113:21" pos:end="113:33">next_arg_type</name><argument_list pos:start="113:34" pos:end="113:40">(<argument pos:start="113:35" pos:end="113:39"><expr pos:start="113:35" pos:end="113:39"><name pos:start="113:35" pos:end="113:39">ptype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="117:9" pos:end="187:9">switch<condition pos:start="117:15" pos:end="117:22">(<expr pos:start="117:16" pos:end="117:21"><operator pos:start="117:16" pos:end="117:16">*</operator><name pos:start="117:17" pos:end="117:21">ptype</name></expr>)</condition> <block pos:start="117:24" pos:end="187:9">{<block_content pos:start="119:9" pos:end="185:18">

        <case pos:start="119:9" pos:end="119:17">case <expr pos:start="119:14" pos:end="119:16"><literal type="char" pos:start="119:14" pos:end="119:16">'F'</literal></expr>:</case>

            <comment type="block" pos:start="121:13" pos:end="121:33">/* file completion */</comment>

            <expr_stmt pos:start="123:13" pos:end="123:68"><expr pos:start="123:13" pos:end="123:67"><call pos:start="123:13" pos:end="123:67"><name pos:start="123:13" pos:end="123:41">readline_set_completion_index</name><argument_list pos:start="123:42" pos:end="123:67">(<argument pos:start="123:43" pos:end="123:53"><expr pos:start="123:43" pos:end="123:53"><name pos:start="123:43" pos:end="123:53"><name pos:start="123:43" pos:end="123:49">cur_mon</name><operator pos:start="123:50" pos:end="123:51">-&gt;</operator><name pos:start="123:52" pos:end="123:53">rs</name></name></expr></argument>, <argument pos:start="123:56" pos:end="123:66"><expr pos:start="123:56" pos:end="123:66"><call pos:start="123:56" pos:end="123:66"><name pos:start="123:56" pos:end="123:61">strlen</name><argument_list pos:start="123:62" pos:end="123:66">(<argument pos:start="123:63" pos:end="123:65"><expr pos:start="123:63" pos:end="123:65"><name pos:start="123:63" pos:end="123:65">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:33"><expr pos:start="125:13" pos:end="125:32"><call pos:start="125:13" pos:end="125:32"><name pos:start="125:13" pos:end="125:27">file_completion</name><argument_list pos:start="125:28" pos:end="125:32">(<argument pos:start="125:29" pos:end="125:31"><expr pos:start="125:29" pos:end="125:31"><name pos:start="125:29" pos:end="125:31">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        <case pos:start="129:9" pos:end="129:17">case <expr pos:start="129:14" pos:end="129:16"><literal type="char" pos:start="129:14" pos:end="129:16">'B'</literal></expr>:</case>

            <comment type="block" pos:start="131:13" pos:end="131:46">/* block device name completion */</comment>

            <expr_stmt pos:start="133:13" pos:end="133:68"><expr pos:start="133:13" pos:end="133:67"><call pos:start="133:13" pos:end="133:67"><name pos:start="133:13" pos:end="133:41">readline_set_completion_index</name><argument_list pos:start="133:42" pos:end="133:67">(<argument pos:start="133:43" pos:end="133:53"><expr pos:start="133:43" pos:end="133:53"><name pos:start="133:43" pos:end="133:53"><name pos:start="133:43" pos:end="133:49">cur_mon</name><operator pos:start="133:50" pos:end="133:51">-&gt;</operator><name pos:start="133:52" pos:end="133:53">rs</name></name></expr></argument>, <argument pos:start="133:56" pos:end="133:66"><expr pos:start="133:56" pos:end="133:66"><call pos:start="133:56" pos:end="133:66"><name pos:start="133:56" pos:end="133:61">strlen</name><argument_list pos:start="133:62" pos:end="133:66">(<argument pos:start="133:63" pos:end="133:65"><expr pos:start="133:63" pos:end="133:65"><name pos:start="133:63" pos:end="133:65">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:59"><expr pos:start="135:13" pos:end="135:58"><call pos:start="135:13" pos:end="135:58"><name pos:start="135:13" pos:end="135:24">bdrv_iterate</name><argument_list pos:start="135:25" pos:end="135:58">(<argument pos:start="135:26" pos:end="135:44"><expr pos:start="135:26" pos:end="135:44"><name pos:start="135:26" pos:end="135:44">block_completion_it</name></expr></argument>, <argument pos:start="135:47" pos:end="135:57"><expr pos:start="135:47" pos:end="135:57"><operator pos:start="135:47" pos:end="135:47">(</operator><name pos:start="135:48" pos:end="135:51">void</name> <operator pos:start="135:53" pos:end="135:53">*</operator><operator pos:start="135:54" pos:end="135:54">)</operator><name pos:start="135:55" pos:end="135:57">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        <case pos:start="139:9" pos:end="139:17">case <expr pos:start="139:14" pos:end="139:16"><literal type="char" pos:start="139:14" pos:end="139:16">'s'</literal></expr>:</case>

            <comment type="block" pos:start="141:13" pos:end="141:37">/* XXX: more generic ? */</comment>

            <if_stmt pos:start="143:13" pos:end="179:13"><if pos:start="143:13" pos:end="153:13">if <condition pos:start="143:16" pos:end="143:43">(<expr pos:start="143:17" pos:end="143:42"><operator pos:start="143:17" pos:end="143:17">!</operator><call pos:start="143:18" pos:end="143:42"><name pos:start="143:18" pos:end="143:23">strcmp</name><argument_list pos:start="143:24" pos:end="143:42">(<argument pos:start="143:25" pos:end="143:33"><expr pos:start="143:25" pos:end="143:33"><name pos:start="143:25" pos:end="143:33"><name pos:start="143:25" pos:end="143:27">cmd</name><operator pos:start="143:28" pos:end="143:29">-&gt;</operator><name pos:start="143:30" pos:end="143:33">name</name></name></expr></argument>, <argument pos:start="143:36" pos:end="143:41"><expr pos:start="143:36" pos:end="143:41"><literal type="string" pos:start="143:36" pos:end="143:41">"info"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:45" pos:end="153:13">{<block_content pos:start="145:17" pos:end="151:17">

                <expr_stmt pos:start="145:17" pos:end="145:72"><expr pos:start="145:17" pos:end="145:71"><call pos:start="145:17" pos:end="145:71"><name pos:start="145:17" pos:end="145:45">readline_set_completion_index</name><argument_list pos:start="145:46" pos:end="145:71">(<argument pos:start="145:47" pos:end="145:57"><expr pos:start="145:47" pos:end="145:57"><name pos:start="145:47" pos:end="145:57"><name pos:start="145:47" pos:end="145:53">cur_mon</name><operator pos:start="145:54" pos:end="145:55">-&gt;</operator><name pos:start="145:56" pos:end="145:57">rs</name></name></expr></argument>, <argument pos:start="145:60" pos:end="145:70"><expr pos:start="145:60" pos:end="145:70"><call pos:start="145:60" pos:end="145:70"><name pos:start="145:60" pos:end="145:65">strlen</name><argument_list pos:start="145:66" pos:end="145:70">(<argument pos:start="145:67" pos:end="145:69"><expr pos:start="145:67" pos:end="145:69"><name pos:start="145:67" pos:end="145:69">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="147:17" pos:end="151:17">for<control pos:start="147:20" pos:end="147:62">(<init pos:start="147:21" pos:end="147:36"><expr pos:start="147:21" pos:end="147:35"><name pos:start="147:21" pos:end="147:23">cmd</name> <operator pos:start="147:25" pos:end="147:25">=</operator> <name pos:start="147:27" pos:end="147:35">info_cmds</name></expr>;</init> <condition pos:start="147:38" pos:end="147:55"><expr pos:start="147:38" pos:end="147:54"><name pos:start="147:38" pos:end="147:46"><name pos:start="147:38" pos:end="147:40">cmd</name><operator pos:start="147:41" pos:end="147:42">-&gt;</operator><name pos:start="147:43" pos:end="147:46">name</name></name> <operator pos:start="147:48" pos:end="147:49">!=</operator> <name pos:start="147:51" pos:end="147:54">NULL</name></expr>;</condition> <incr pos:start="147:57" pos:end="147:61"><expr pos:start="147:57" pos:end="147:61"><name pos:start="147:57" pos:end="147:59">cmd</name><operator pos:start="147:60" pos:end="147:61">++</operator></expr></incr>)</control> <block pos:start="147:64" pos:end="151:17">{<block_content pos:start="149:21" pos:end="149:51">

                    <expr_stmt pos:start="149:21" pos:end="149:51"><expr pos:start="149:21" pos:end="149:50"><call pos:start="149:21" pos:end="149:50"><name pos:start="149:21" pos:end="149:34">cmd_completion</name><argument_list pos:start="149:35" pos:end="149:50">(<argument pos:start="149:36" pos:end="149:38"><expr pos:start="149:36" pos:end="149:38"><name pos:start="149:36" pos:end="149:38">str</name></expr></argument>, <argument pos:start="149:41" pos:end="149:49"><expr pos:start="149:41" pos:end="149:49"><name pos:start="149:41" pos:end="149:49"><name pos:start="149:41" pos:end="149:43">cmd</name><operator pos:start="149:44" pos:end="149:45">-&gt;</operator><name pos:start="149:46" pos:end="149:49">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <if type="elseif" pos:start="153:15" pos:end="169:13">else if <condition pos:start="153:23" pos:end="153:53">(<expr pos:start="153:24" pos:end="153:52"><operator pos:start="153:24" pos:end="153:24">!</operator><call pos:start="153:25" pos:end="153:52"><name pos:start="153:25" pos:end="153:30">strcmp</name><argument_list pos:start="153:31" pos:end="153:52">(<argument pos:start="153:32" pos:end="153:40"><expr pos:start="153:32" pos:end="153:40"><name pos:start="153:32" pos:end="153:40"><name pos:start="153:32" pos:end="153:34">cmd</name><operator pos:start="153:35" pos:end="153:36">-&gt;</operator><name pos:start="153:37" pos:end="153:40">name</name></name></expr></argument>, <argument pos:start="153:43" pos:end="153:51"><expr pos:start="153:43" pos:end="153:51"><literal type="string" pos:start="153:43" pos:end="153:51">"sendkey"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="153:55" pos:end="169:13">{<block_content pos:start="155:17" pos:end="167:17">

                <decl_stmt pos:start="155:17" pos:end="155:46"><decl pos:start="155:17" pos:end="155:45"><type pos:start="155:17" pos:end="155:22"><name pos:start="155:17" pos:end="155:20">char</name> <modifier pos:start="155:22" pos:end="155:22">*</modifier></type><name pos:start="155:23" pos:end="155:25">sep</name> <init pos:start="155:27" pos:end="155:45">= <expr pos:start="155:29" pos:end="155:45"><call pos:start="155:29" pos:end="155:45"><name pos:start="155:29" pos:end="155:35">strrchr</name><argument_list pos:start="155:36" pos:end="155:45">(<argument pos:start="155:37" pos:end="155:39"><expr pos:start="155:37" pos:end="155:39"><name pos:start="155:37" pos:end="155:39">str</name></expr></argument>, <argument pos:start="155:42" pos:end="155:44"><expr pos:start="155:42" pos:end="155:44"><literal type="char" pos:start="155:42" pos:end="155:44">'-'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="157:17" pos:end="159:34"><if pos:start="157:17" pos:end="159:34">if <condition pos:start="157:20" pos:end="157:24">(<expr pos:start="157:21" pos:end="157:23"><name pos:start="157:21" pos:end="157:23">sep</name></expr>)</condition><block type="pseudo" pos:start="159:21" pos:end="159:34"><block_content pos:start="159:21" pos:end="159:34">

                    <expr_stmt pos:start="159:21" pos:end="159:34"><expr pos:start="159:21" pos:end="159:33"><name pos:start="159:21" pos:end="159:23">str</name> <operator pos:start="159:25" pos:end="159:25">=</operator> <name pos:start="159:27" pos:end="159:29">sep</name> <operator pos:start="159:31" pos:end="159:31">+</operator> <literal type="number" pos:start="159:33" pos:end="159:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:72"><expr pos:start="161:17" pos:end="161:71"><call pos:start="161:17" pos:end="161:71"><name pos:start="161:17" pos:end="161:45">readline_set_completion_index</name><argument_list pos:start="161:46" pos:end="161:71">(<argument pos:start="161:47" pos:end="161:57"><expr pos:start="161:47" pos:end="161:57"><name pos:start="161:47" pos:end="161:57"><name pos:start="161:47" pos:end="161:53">cur_mon</name><operator pos:start="161:54" pos:end="161:55">-&gt;</operator><name pos:start="161:56" pos:end="161:57">rs</name></name></expr></argument>, <argument pos:start="161:60" pos:end="161:70"><expr pos:start="161:60" pos:end="161:70"><call pos:start="161:60" pos:end="161:70"><name pos:start="161:60" pos:end="161:65">strlen</name><argument_list pos:start="161:66" pos:end="161:70">(<argument pos:start="161:67" pos:end="161:69"><expr pos:start="161:67" pos:end="161:69"><name pos:start="161:67" pos:end="161:69">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="163:17" pos:end="167:17">for<control pos:start="163:20" pos:end="163:61">(<init pos:start="163:21" pos:end="163:35"><expr pos:start="163:21" pos:end="163:34"><name pos:start="163:21" pos:end="163:23">key</name> <operator pos:start="163:25" pos:end="163:25">=</operator> <name pos:start="163:27" pos:end="163:34">key_defs</name></expr>;</init> <condition pos:start="163:37" pos:end="163:54"><expr pos:start="163:37" pos:end="163:53"><name pos:start="163:37" pos:end="163:45"><name pos:start="163:37" pos:end="163:39">key</name><operator pos:start="163:40" pos:end="163:41">-&gt;</operator><name pos:start="163:42" pos:end="163:45">name</name></name> <operator pos:start="163:47" pos:end="163:48">!=</operator> <name pos:start="163:50" pos:end="163:53">NULL</name></expr>;</condition> <incr pos:start="163:56" pos:end="163:60"><expr pos:start="163:56" pos:end="163:60"><name pos:start="163:56" pos:end="163:58">key</name><operator pos:start="163:59" pos:end="163:60">++</operator></expr></incr>)</control> <block pos:start="163:63" pos:end="167:17">{<block_content pos:start="165:21" pos:end="165:51">

                    <expr_stmt pos:start="165:21" pos:end="165:51"><expr pos:start="165:21" pos:end="165:50"><call pos:start="165:21" pos:end="165:50"><name pos:start="165:21" pos:end="165:34">cmd_completion</name><argument_list pos:start="165:35" pos:end="165:50">(<argument pos:start="165:36" pos:end="165:38"><expr pos:start="165:36" pos:end="165:38"><name pos:start="165:36" pos:end="165:38">str</name></expr></argument>, <argument pos:start="165:41" pos:end="165:49"><expr pos:start="165:41" pos:end="165:49"><name pos:start="165:41" pos:end="165:49"><name pos:start="165:41" pos:end="165:43">key</name><operator pos:start="165:44" pos:end="165:45">-&gt;</operator><name pos:start="165:46" pos:end="165:49">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <if type="elseif" pos:start="169:15" pos:end="179:13">else if <condition pos:start="169:23" pos:end="169:52">(<expr pos:start="169:24" pos:end="169:51"><operator pos:start="169:24" pos:end="169:24">!</operator><call pos:start="169:25" pos:end="169:51"><name pos:start="169:25" pos:end="169:30">strcmp</name><argument_list pos:start="169:31" pos:end="169:51">(<argument pos:start="169:32" pos:end="169:40"><expr pos:start="169:32" pos:end="169:40"><name pos:start="169:32" pos:end="169:40"><name pos:start="169:32" pos:end="169:34">cmd</name><operator pos:start="169:35" pos:end="169:36">-&gt;</operator><name pos:start="169:37" pos:end="169:40">name</name></name></expr></argument>, <argument pos:start="169:43" pos:end="169:50"><expr pos:start="169:43" pos:end="169:50"><literal type="string" pos:start="169:43" pos:end="169:50">"help|?"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="169:54" pos:end="179:13">{<block_content pos:start="171:17" pos:end="177:17">

                <expr_stmt pos:start="171:17" pos:end="171:72"><expr pos:start="171:17" pos:end="171:71"><call pos:start="171:17" pos:end="171:71"><name pos:start="171:17" pos:end="171:45">readline_set_completion_index</name><argument_list pos:start="171:46" pos:end="171:71">(<argument pos:start="171:47" pos:end="171:57"><expr pos:start="171:47" pos:end="171:57"><name pos:start="171:47" pos:end="171:57"><name pos:start="171:47" pos:end="171:53">cur_mon</name><operator pos:start="171:54" pos:end="171:55">-&gt;</operator><name pos:start="171:56" pos:end="171:57">rs</name></name></expr></argument>, <argument pos:start="171:60" pos:end="171:70"><expr pos:start="171:60" pos:end="171:70"><call pos:start="171:60" pos:end="171:70"><name pos:start="171:60" pos:end="171:65">strlen</name><argument_list pos:start="171:66" pos:end="171:70">(<argument pos:start="171:67" pos:end="171:69"><expr pos:start="171:67" pos:end="171:69"><name pos:start="171:67" pos:end="171:69">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="173:17" pos:end="177:17">for <control pos:start="173:21" pos:end="173:62">(<init pos:start="173:22" pos:end="173:36"><expr pos:start="173:22" pos:end="173:35"><name pos:start="173:22" pos:end="173:24">cmd</name> <operator pos:start="173:26" pos:end="173:26">=</operator> <name pos:start="173:28" pos:end="173:35">mon_cmds</name></expr>;</init> <condition pos:start="173:38" pos:end="173:55"><expr pos:start="173:38" pos:end="173:54"><name pos:start="173:38" pos:end="173:46"><name pos:start="173:38" pos:end="173:40">cmd</name><operator pos:start="173:41" pos:end="173:42">-&gt;</operator><name pos:start="173:43" pos:end="173:46">name</name></name> <operator pos:start="173:48" pos:end="173:49">!=</operator> <name pos:start="173:51" pos:end="173:54">NULL</name></expr>;</condition> <incr pos:start="173:57" pos:end="173:61"><expr pos:start="173:57" pos:end="173:61"><name pos:start="173:57" pos:end="173:59">cmd</name><operator pos:start="173:60" pos:end="173:61">++</operator></expr></incr>)</control> <block pos:start="173:64" pos:end="177:17">{<block_content pos:start="175:21" pos:end="175:51">

                    <expr_stmt pos:start="175:21" pos:end="175:51"><expr pos:start="175:21" pos:end="175:50"><call pos:start="175:21" pos:end="175:50"><name pos:start="175:21" pos:end="175:34">cmd_completion</name><argument_list pos:start="175:35" pos:end="175:50">(<argument pos:start="175:36" pos:end="175:38"><expr pos:start="175:36" pos:end="175:38"><name pos:start="175:36" pos:end="175:38">str</name></expr></argument>, <argument pos:start="175:41" pos:end="175:49"><expr pos:start="175:41" pos:end="175:49"><name pos:start="175:41" pos:end="175:49"><name pos:start="175:41" pos:end="175:43">cmd</name><operator pos:start="175:44" pos:end="175:45">-&gt;</operator><name pos:start="175:46" pos:end="175:49">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <break pos:start="181:13" pos:end="181:18">break;</break>

        <default pos:start="183:9" pos:end="183:16">default:</default>

            <break pos:start="185:13" pos:end="185:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



<label pos:start="193:1" pos:end="193:8"><name pos:start="193:1" pos:end="193:7">cleanup</name>:</label>

    <for pos:start="195:5" pos:end="199:5">for <control pos:start="195:9" pos:end="195:33">(<init pos:start="195:10" pos:end="195:15"><expr pos:start="195:10" pos:end="195:14"><name pos:start="195:10" pos:end="195:10">i</name> <operator pos:start="195:12" pos:end="195:12">=</operator> <literal type="number" pos:start="195:14" pos:end="195:14">0</literal></expr>;</init> <condition pos:start="195:17" pos:end="195:28"><expr pos:start="195:17" pos:end="195:27"><name pos:start="195:17" pos:end="195:17">i</name> <operator pos:start="195:19" pos:end="195:19">&lt;</operator> <name pos:start="195:21" pos:end="195:27">nb_args</name></expr>;</condition> <incr pos:start="195:30" pos:end="195:32"><expr pos:start="195:30" pos:end="195:32"><name pos:start="195:30" pos:end="195:30">i</name><operator pos:start="195:31" pos:end="195:32">++</operator></expr></incr>)</control> <block pos:start="195:35" pos:end="199:5">{<block_content pos:start="197:9" pos:end="197:24">

        <expr_stmt pos:start="197:9" pos:end="197:24"><expr pos:start="197:9" pos:end="197:23"><call pos:start="197:9" pos:end="197:23"><name pos:start="197:9" pos:end="197:14">g_free</name><argument_list pos:start="197:15" pos:end="197:23">(<argument pos:start="197:16" pos:end="197:22"><expr pos:start="197:16" pos:end="197:22"><name pos:start="197:16" pos:end="197:22"><name pos:start="197:16" pos:end="197:19">args</name><index pos:start="197:20" pos:end="197:22">[<expr pos:start="197:21" pos:end="197:21"><name pos:start="197:21" pos:end="197:21">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
