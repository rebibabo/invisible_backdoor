<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10758.c" pos:tabs="8"><function pos:start="1:1" pos:end="30:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">rso_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="30:1">{<block_content pos:start="5:5" pos:end="28:13">

    <decl_stmt pos:start="5:5" pos:end="5:69"><decl pos:start="5:5" pos:end="5:68"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">bps</name> <init pos:start="5:13" pos:end="5:68">= <expr pos:start="5:15" pos:end="5:68"><call pos:start="5:15" pos:end="5:68"><name pos:start="5:15" pos:end="5:36">av_get_bits_per_sample</name><argument_list pos:start="5:37" pos:end="5:68">(<argument pos:start="5:38" pos:end="5:67"><expr pos:start="5:38" pos:end="5:67"><name pos:start="5:38" pos:end="5:50"><name pos:start="5:38" pos:end="5:38">s</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:47">streams</name><index pos:start="5:48" pos:end="5:50">[<expr pos:start="5:49" pos:end="5:49"><literal type="number" pos:start="5:49" pos:end="5:49">0</literal></expr>]</index></name><operator pos:start="5:51" pos:end="5:52">-&gt;</operator><name pos:start="5:53" pos:end="5:67"><name pos:start="5:53" pos:end="5:57">codec</name><operator pos:start="5:58" pos:end="5:59">-&gt;</operator><name pos:start="5:60" pos:end="5:67">codec_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:62"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:62">= <expr pos:start="7:15" pos:end="7:62"><call pos:start="7:15" pos:end="7:62"><name pos:start="7:15" pos:end="7:27">av_get_packet</name><argument_list pos:start="7:28" pos:end="7:62">(<argument pos:start="7:29" pos:end="7:33"><expr pos:start="7:29" pos:end="7:33"><name pos:start="7:29" pos:end="7:33"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:33">pb</name></name></expr></argument>, <argument pos:start="7:36" pos:end="7:38"><expr pos:start="7:36" pos:end="7:38"><name pos:start="7:36" pos:end="7:38">pkt</name></expr></argument>, <argument pos:start="7:41" pos:end="7:61"><expr pos:start="7:41" pos:end="7:61"><name pos:start="7:41" pos:end="7:50">BLOCK_SIZE</name> <operator pos:start="7:52" pos:end="7:52">*</operator> <name pos:start="7:54" pos:end="7:56">bps</name> <operator pos:start="7:58" pos:end="7:59">&gt;&gt;</operator> <literal type="number" pos:start="7:61" pos:end="7:61">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:19"><if pos:start="11:5" pos:end="13:19">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:19"><block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ret</name></expr>;</return></block_content></block></if></if_stmt>




    <expr_stmt pos:start="18:5" pos:end="18:26"><expr pos:start="18:5" pos:end="18:25"><name pos:start="18:5" pos:end="18:21"><name pos:start="18:5" pos:end="18:7">pkt</name><operator pos:start="18:8" pos:end="18:9">-&gt;</operator><name pos:start="18:10" pos:end="18:21">stream_index</name></name> <operator pos:start="18:23" pos:end="18:23">=</operator> <literal type="number" pos:start="18:25" pos:end="18:25">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="22:5" pos:end="22:80">/* note: we need to modify the packet size here to handle the last packet */</comment>

    <expr_stmt pos:start="24:5" pos:end="24:20"><expr pos:start="24:5" pos:end="24:19"><name pos:start="24:5" pos:end="24:13"><name pos:start="24:5" pos:end="24:7">pkt</name><operator pos:start="24:8" pos:end="24:9">-&gt;</operator><name pos:start="24:10" pos:end="24:13">size</name></name> <operator pos:start="24:15" pos:end="24:15">=</operator> <name pos:start="24:17" pos:end="24:19">ret</name></expr>;</expr_stmt>



    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
