<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16320.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">test_visitor_in_enum</name><parameter_list pos:start="1:33" pos:end="3:52">(<parameter pos:start="1:34" pos:end="1:59"><decl pos:start="1:34" pos:end="1:59"><type pos:start="1:34" pos:end="1:59"><name pos:start="1:34" pos:end="1:53">TestInputVisitorData</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">data</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:51"><decl pos:start="3:34" pos:end="3:51"><type pos:start="3:34" pos:end="3:51"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:43">void</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:51">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:5">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">Visitor</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">EnumOne</name></type> <name pos:start="11:13" pos:end="11:13">i</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="31:5">for <control pos:start="15:9" pos:end="15:39">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:34"><expr pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:30">EnumOne_lookup</name><index pos:start="15:31" pos:end="15:33">[<expr pos:start="15:32" pos:end="15:32"><name pos:start="15:32" pos:end="15:32">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="15:36" pos:end="15:38"><expr pos:start="15:36" pos:end="15:38"><name pos:start="15:36" pos:end="15:36">i</name><operator pos:start="15:37" pos:end="15:38">++</operator></expr></incr>)</control> <block pos:start="15:41" pos:end="31:5">{<block_content pos:start="17:9" pos:end="29:36">

        <decl_stmt pos:start="17:9" pos:end="17:25"><decl pos:start="17:9" pos:end="17:24"><type pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15">EnumOne</name></type> <name pos:start="17:17" pos:end="17:19">res</name> <init pos:start="17:21" pos:end="17:24">= <expr pos:start="17:23" pos:end="17:24"><operator pos:start="17:23" pos:end="17:23">-</operator><literal type="number" pos:start="17:24" pos:end="17:24">1</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:67"><expr pos:start="21:9" pos:end="21:66"><name pos:start="21:9" pos:end="21:9">v</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:66"><name pos:start="21:13" pos:end="21:35">visitor_input_test_init</name><argument_list pos:start="21:36" pos:end="21:66">(<argument pos:start="21:37" pos:end="21:40"><expr pos:start="21:37" pos:end="21:40"><name pos:start="21:37" pos:end="21:40">data</name></expr></argument>, <argument pos:start="21:43" pos:end="21:46"><expr pos:start="21:43" pos:end="21:46"><literal type="string" pos:start="21:43" pos:end="21:46">"%s"</literal></expr></argument>, <argument pos:start="21:49" pos:end="21:65"><expr pos:start="21:49" pos:end="21:65"><name pos:start="21:49" pos:end="21:65"><name pos:start="21:49" pos:end="21:62">EnumOne_lookup</name><index pos:start="21:63" pos:end="21:65">[<expr pos:start="21:64" pos:end="21:64"><name pos:start="21:64" pos:end="21:64">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><call pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:26">visit_type_EnumOne</name><argument_list pos:start="25:27" pos:end="25:47">(<argument pos:start="25:28" pos:end="25:28"><expr pos:start="25:28" pos:end="25:28"><name pos:start="25:28" pos:end="25:28">v</name></expr></argument>, <argument pos:start="25:31" pos:end="25:34"><expr pos:start="25:31" pos:end="25:34"><operator pos:start="25:31" pos:end="25:31">&amp;</operator><name pos:start="25:32" pos:end="25:34">res</name></expr></argument>, <argument pos:start="25:37" pos:end="25:40"><expr pos:start="25:37" pos:end="25:40"><name pos:start="25:37" pos:end="25:40">NULL</name></expr></argument>, <argument pos:start="25:43" pos:end="25:46"><expr pos:start="25:43" pos:end="25:46"><operator pos:start="25:43" pos:end="25:43">&amp;</operator><name pos:start="25:44" pos:end="25:46">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><call pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:16">g_assert</name><argument_list pos:start="27:17" pos:end="27:22">(<argument pos:start="27:18" pos:end="27:21"><expr pos:start="27:18" pos:end="27:21"><operator pos:start="27:18" pos:end="27:18">!</operator><name pos:start="27:19" pos:end="27:21">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><call pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:23">g_assert_cmpint</name><argument_list pos:start="29:24" pos:end="29:35">(<argument pos:start="29:25" pos:end="29:25"><expr pos:start="29:25" pos:end="29:25"><name pos:start="29:25" pos:end="29:25">i</name></expr></argument>, <argument pos:start="29:28" pos:end="29:29"><expr pos:start="29:28" pos:end="29:29"><operator pos:start="29:28" pos:end="29:29">==</operator></expr></argument>, <argument pos:start="29:32" pos:end="29:34"><expr pos:start="29:32" pos:end="29:34"><name pos:start="29:32" pos:end="29:34">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
