<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11079.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vfio_add_std_cap</name><parameter_list pos:start="1:28" pos:end="1:58">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:38">VFIODevice</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">vdev</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:57"><decl pos:start="1:47" pos:end="1:57"><type pos:start="1:47" pos:end="1:57"><name pos:start="1:47" pos:end="1:53">uint8_t</name></type> <name pos:start="1:55" pos:end="1:57">pos</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">pdev</name> <init pos:start="5:21" pos:end="5:33">= <expr pos:start="5:23" pos:end="5:33"><operator pos:start="5:23" pos:end="5:23">&amp;</operator><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:27">vdev</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:33">pdev</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:18">cap_id</name></decl>, <decl pos:start="7:21" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:21" pos:end="7:24">next</name></decl>, <decl pos:start="7:27" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:27" pos:end="7:30">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:10">cap_id</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:30"><name pos:start="13:14" pos:end="13:17">pdev</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:25">config</name><index pos:start="13:26" pos:end="13:30">[<expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:29">pos</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:8">next</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <name pos:start="15:12" pos:end="15:32"><name pos:start="15:12" pos:end="15:15">pdev</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:23">config</name><index pos:start="15:24" pos:end="15:32">[<expr pos:start="15:25" pos:end="15:31"><name pos:start="15:25" pos:end="15:27">pos</name> <operator pos:start="15:29" pos:end="15:29">+</operator> <literal type="number" pos:start="15:31" pos:end="15:31">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="29:7">/*

     * If it becomes important to configure capabilities to their actual

     * size, use this as the default when it's something we don't recognize.

     * Since QEMU doesn't actually handle many of the config accesses,

     * exact size doesn't seem worthwhile.

     */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:44"><expr pos:start="31:5" pos:end="31:43"><name pos:start="31:5" pos:end="31:8">size</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:43"><name pos:start="31:12" pos:end="31:32">vfio_std_cap_max_size</name><argument_list pos:start="31:33" pos:end="31:43">(<argument pos:start="31:34" pos:end="31:37"><expr pos:start="31:34" pos:end="31:37"><name pos:start="31:34" pos:end="31:37">pdev</name></expr></argument>, <argument pos:start="31:40" pos:end="31:42"><expr pos:start="31:40" pos:end="31:42"><name pos:start="31:40" pos:end="31:42">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="47:7">/*

     * pci_add_capability always inserts the new capability at the head

     * of the chain.  Therefore to end up with a chain that matches the

     * physical device, we insert from the end by making this recursive.

     * This is also why we pre-caclulate size above as cached config space

     * will be changed as we unwind the stack.

     */</comment>

    <if_stmt pos:start="49:5" pos:end="63:5"><if pos:start="49:5" pos:end="59:5">if <condition pos:start="49:8" pos:end="49:13">(<expr pos:start="49:9" pos:end="49:12"><name pos:start="49:9" pos:end="49:12">next</name></expr>)</condition> <block pos:start="49:15" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:9">

        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:42"><name pos:start="51:15" pos:end="51:30">vfio_add_std_cap</name><argument_list pos:start="51:31" pos:end="51:42">(<argument pos:start="51:32" pos:end="51:35"><expr pos:start="51:32" pos:end="51:35"><name pos:start="51:32" pos:end="51:35">vdev</name></expr></argument>, <argument pos:start="51:38" pos:end="51:41"><expr pos:start="51:38" pos:end="51:41"><name pos:start="51:38" pos:end="51:41">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:16">(<expr pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">ret</name></expr>)</condition> <block pos:start="53:18" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:23">

            <return pos:start="55:13" pos:end="55:23">return <expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="63:5">else <block pos:start="59:12" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:46">

        <expr_stmt pos:start="61:9" pos:end="61:46"><expr pos:start="61:9" pos:end="61:45"><name pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:12">pdev</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:20">config</name><index pos:start="61:21" pos:end="61:41">[<expr pos:start="61:22" pos:end="61:40"><name pos:start="61:22" pos:end="61:40">PCI_CAPABILITY_LIST</name></expr>]</index></name> <operator pos:start="61:43" pos:end="61:43">=</operator> <literal type="number" pos:start="61:45" pos:end="61:45">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="61:48" pos:end="61:70">/* Begin the rebuild */</comment>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="67:5" pos:end="87:5">switch <condition pos:start="67:12" pos:end="67:19">(<expr pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:18">cap_id</name></expr>)</condition> <block pos:start="67:21" pos:end="87:5">{<block_content pos:start="69:5" pos:end="85:14">

    <case pos:start="69:5" pos:end="69:24">case <expr pos:start="69:10" pos:end="69:23"><name pos:start="69:10" pos:end="69:23">PCI_CAP_ID_MSI</name></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:40"><expr pos:start="71:9" pos:end="71:39"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:39"><name pos:start="71:15" pos:end="71:28">vfio_setup_msi</name><argument_list pos:start="71:29" pos:end="71:39">(<argument pos:start="71:30" pos:end="71:33"><expr pos:start="71:30" pos:end="71:33"><name pos:start="71:30" pos:end="71:33">vdev</name></expr></argument>, <argument pos:start="71:36" pos:end="71:38"><expr pos:start="71:36" pos:end="71:38"><name pos:start="71:36" pos:end="71:38">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:25">case <expr pos:start="75:10" pos:end="75:24"><name pos:start="75:10" pos:end="75:24">PCI_CAP_ID_MSIX</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:41"><expr pos:start="77:9" pos:end="77:40"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="77:40"><name pos:start="77:15" pos:end="77:29">vfio_setup_msix</name><argument_list pos:start="77:30" pos:end="77:40">(<argument pos:start="77:31" pos:end="77:34"><expr pos:start="77:31" pos:end="77:34"><name pos:start="77:31" pos:end="77:34">vdev</name></expr></argument>, <argument pos:start="77:37" pos:end="77:39"><expr pos:start="77:37" pos:end="77:39"><name pos:start="77:37" pos:end="77:39">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <default pos:start="81:5" pos:end="81:12">default:</default>

        <expr_stmt pos:start="83:9" pos:end="83:58"><expr pos:start="83:9" pos:end="83:57"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:57"><name pos:start="83:15" pos:end="83:32">pci_add_capability</name><argument_list pos:start="83:33" pos:end="83:57">(<argument pos:start="83:34" pos:end="83:37"><expr pos:start="83:34" pos:end="83:37"><name pos:start="83:34" pos:end="83:37">pdev</name></expr></argument>, <argument pos:start="83:40" pos:end="83:45"><expr pos:start="83:40" pos:end="83:45"><name pos:start="83:40" pos:end="83:45">cap_id</name></expr></argument>, <argument pos:start="83:48" pos:end="83:50"><expr pos:start="83:48" pos:end="83:50"><name pos:start="83:48" pos:end="83:50">pos</name></expr></argument>, <argument pos:start="83:53" pos:end="83:56"><expr pos:start="83:53" pos:end="83:56"><name pos:start="83:53" pos:end="83:56">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="91:5" pos:end="103:5"><if pos:start="91:5" pos:end="103:5">if <condition pos:start="91:8" pos:end="91:16">(<expr pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">&lt;</operator> <literal type="number" pos:start="91:15" pos:end="91:15">0</literal></expr>)</condition> <block pos:start="91:18" pos:end="103:5">{<block_content pos:start="93:9" pos:end="101:19">

        <expr_stmt pos:start="93:9" pos:end="99:45"><expr pos:start="93:9" pos:end="99:44"><call pos:start="93:9" pos:end="99:44"><name pos:start="93:9" pos:end="93:20">error_report</name><argument_list pos:start="93:21" pos:end="99:44">(<argument pos:start="93:22" pos:end="95:42"><expr pos:start="93:22" pos:end="95:42"><literal type="string" pos:start="93:22" pos:end="93:75">"vfio: %04x:%02x:%02x.%x Error adding PCI capability "</literal>

                     <literal type="string" pos:start="95:22" pos:end="95:42">"0x%x[0x%x]@0x%x: %d"</literal></expr></argument>, <argument pos:start="95:45" pos:end="95:61"><expr pos:start="95:45" pos:end="95:61"><name pos:start="95:45" pos:end="95:61"><name pos:start="95:45" pos:end="95:48">vdev</name><operator pos:start="95:49" pos:end="95:50">-&gt;</operator><name pos:start="95:51" pos:end="95:54">host</name><operator pos:start="95:55" pos:end="95:55">.</operator><name pos:start="95:56" pos:end="95:61">domain</name></name></expr></argument>,

                     <argument pos:start="97:22" pos:end="97:35"><expr pos:start="97:22" pos:end="97:35"><name pos:start="97:22" pos:end="97:35"><name pos:start="97:22" pos:end="97:25">vdev</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:31">host</name><operator pos:start="97:32" pos:end="97:32">.</operator><name pos:start="97:33" pos:end="97:35">bus</name></name></expr></argument>, <argument pos:start="97:38" pos:end="97:52"><expr pos:start="97:38" pos:end="97:52"><name pos:start="97:38" pos:end="97:52"><name pos:start="97:38" pos:end="97:41">vdev</name><operator pos:start="97:42" pos:end="97:43">-&gt;</operator><name pos:start="97:44" pos:end="97:47">host</name><operator pos:start="97:48" pos:end="97:48">.</operator><name pos:start="97:49" pos:end="97:52">slot</name></name></expr></argument>, <argument pos:start="97:55" pos:end="97:73"><expr pos:start="97:55" pos:end="97:73"><name pos:start="97:55" pos:end="97:73"><name pos:start="97:55" pos:end="97:58">vdev</name><operator pos:start="97:59" pos:end="97:60">-&gt;</operator><name pos:start="97:61" pos:end="97:64">host</name><operator pos:start="97:65" pos:end="97:65">.</operator><name pos:start="97:66" pos:end="97:73">function</name></name></expr></argument>,

                     <argument pos:start="99:22" pos:end="99:27"><expr pos:start="99:22" pos:end="99:27"><name pos:start="99:22" pos:end="99:27">cap_id</name></expr></argument>, <argument pos:start="99:30" pos:end="99:33"><expr pos:start="99:30" pos:end="99:33"><name pos:start="99:30" pos:end="99:33">size</name></expr></argument>, <argument pos:start="99:36" pos:end="99:38"><expr pos:start="99:36" pos:end="99:38"><name pos:start="99:36" pos:end="99:38">pos</name></expr></argument>, <argument pos:start="99:41" pos:end="99:43"><expr pos:start="99:41" pos:end="99:43"><name pos:start="99:41" pos:end="99:43">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:19">return <expr pos:start="101:16" pos:end="101:18"><name pos:start="101:16" pos:end="101:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
