<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16756.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">asink_query_formats</name><parameter_list pos:start="1:31" pos:end="1:52">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:46">AVFilterContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">BufferSinkContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">buf</name> <init pos:start="5:28" pos:end="5:38">= <expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:32">ctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:38">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFilterFormats</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:28">formats</name> <init pos:start="7:30" pos:end="7:35">= <expr pos:start="7:32" pos:end="7:35"><name pos:start="7:32" pos:end="7:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:26">AVFilterChannelLayouts</name> <modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:35">layouts</name> <init pos:start="9:37" pos:end="9:42">= <expr pos:start="9:39" pos:end="9:42"><name pos:start="9:39" pos:end="9:42">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <macro pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:19">CHECK_LIST_SIZE</name><argument_list pos:start="17:20" pos:end="17:32">(<argument pos:start="17:21" pos:end="17:31">sample_fmts</argument>)</argument_list></macro>

    <macro pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:19">CHECK_LIST_SIZE</name><argument_list pos:start="19:20" pos:end="19:33">(<argument pos:start="19:21" pos:end="19:32">sample_rates</argument>)</argument_list></macro>

    <macro pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:19">CHECK_LIST_SIZE</name><argument_list pos:start="21:20" pos:end="21:36">(<argument pos:start="21:21" pos:end="21:35">channel_layouts</argument>)</argument_list></macro>

    <macro pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:19">CHECK_LIST_SIZE</name><argument_list pos:start="23:20" pos:end="23:35">(<argument pos:start="23:21" pos:end="23:34">channel_counts</argument>)</argument_list></macro>



    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:30">(<expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">buf</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:29">sample_fmts_size</name></name></expr>)</condition> <block pos:start="27:32" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:44">

        <for pos:start="29:9" pos:end="33:27">for <control pos:start="29:13" pos:end="29:56">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">i</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:51"><expr pos:start="29:21" pos:end="29:50"><name pos:start="29:21" pos:end="29:21">i</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <call pos:start="29:25" pos:end="29:50"><name pos:start="29:25" pos:end="29:32">NB_ITEMS</name><argument_list pos:start="29:33" pos:end="29:50">(<argument pos:start="29:34" pos:end="29:49"><expr pos:start="29:34" pos:end="29:49"><name pos:start="29:34" pos:end="29:49"><name pos:start="29:34" pos:end="29:36">buf</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:49">sample_fmts</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="29:53" pos:end="29:55"><expr pos:start="29:53" pos:end="29:55"><name pos:start="29:53" pos:end="29:53">i</name><operator pos:start="29:54" pos:end="29:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:13" pos:end="33:27"><block_content pos:start="31:13" pos:end="33:27">

            <if_stmt pos:start="31:13" pos:end="33:27"><if pos:start="31:13" pos:end="33:27">if <condition pos:start="31:16" pos:end="31:73">(<expr pos:start="31:17" pos:end="31:72"><operator pos:start="31:17" pos:end="31:17">(</operator><name pos:start="31:18" pos:end="31:20">ret</name> <operator pos:start="31:22" pos:end="31:22">=</operator> <call pos:start="31:24" pos:end="31:67"><name pos:start="31:24" pos:end="31:36">ff_add_format</name><argument_list pos:start="31:37" pos:end="31:67">(<argument pos:start="31:38" pos:end="31:45"><expr pos:start="31:38" pos:end="31:45"><operator pos:start="31:38" pos:end="31:38">&amp;</operator><name pos:start="31:39" pos:end="31:45">formats</name></expr></argument>, <argument pos:start="31:48" pos:end="31:66"><expr pos:start="31:48" pos:end="31:66"><name pos:start="31:48" pos:end="31:66"><name pos:start="31:48" pos:end="31:50">buf</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:63">sample_fmts</name><index pos:start="31:64" pos:end="31:66">[<expr pos:start="31:65" pos:end="31:65"><name pos:start="31:65" pos:end="31:65">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="31:68" pos:end="31:68">)</operator> <operator pos:start="31:70" pos:end="31:70">&lt;</operator> <literal type="number" pos:start="31:72" pos:end="31:72">0</literal></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:27"><block_content pos:start="33:17" pos:end="33:27">

                <return pos:start="33:17" pos:end="33:27">return <expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><call pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:29">ff_set_common_formats</name><argument_list pos:start="35:30" pos:end="35:43">(<argument pos:start="35:31" pos:end="35:33"><expr pos:start="35:31" pos:end="35:33"><name pos:start="35:31" pos:end="35:33">ctx</name></expr></argument>, <argument pos:start="35:36" pos:end="35:42"><expr pos:start="35:36" pos:end="35:42"><name pos:start="35:36" pos:end="35:42">formats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="73:5"><if pos:start="41:5" pos:end="73:5">if <condition pos:start="41:8" pos:end="43:32">(<expr pos:start="41:9" pos:end="43:31"><name pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:11">buf</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:33">channel_layouts_size</name></name> <operator pos:start="41:35" pos:end="41:36">||</operator> <name pos:start="41:38" pos:end="41:61"><name pos:start="41:38" pos:end="41:40">buf</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:61">channel_counts_size</name></name> <operator pos:start="41:63" pos:end="41:64">||</operator>

        <name pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:11">buf</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:31">all_channel_counts</name></name></expr>)</condition> <block pos:start="43:34" pos:end="73:5">{<block_content pos:start="45:9" pos:end="71:52">

        <for pos:start="45:9" pos:end="49:27">for <control pos:start="45:13" pos:end="45:60">(<init pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:18"><name pos:start="45:14" pos:end="45:14">i</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</init> <condition pos:start="45:21" pos:end="45:55"><expr pos:start="45:21" pos:end="45:54"><name pos:start="45:21" pos:end="45:21">i</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <call pos:start="45:25" pos:end="45:54"><name pos:start="45:25" pos:end="45:32">NB_ITEMS</name><argument_list pos:start="45:33" pos:end="45:54">(<argument pos:start="45:34" pos:end="45:53"><expr pos:start="45:34" pos:end="45:53"><name pos:start="45:34" pos:end="45:53"><name pos:start="45:34" pos:end="45:36">buf</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:53">channel_layouts</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="45:57" pos:end="45:59"><expr pos:start="45:57" pos:end="45:59"><name pos:start="45:57" pos:end="45:57">i</name><operator pos:start="45:58" pos:end="45:59">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:13" pos:end="49:27"><block_content pos:start="47:13" pos:end="49:27">

            <if_stmt pos:start="47:13" pos:end="49:27"><if pos:start="47:13" pos:end="49:27">if <condition pos:start="47:16" pos:end="47:85">(<expr pos:start="47:17" pos:end="47:84"><operator pos:start="47:17" pos:end="47:17">(</operator><name pos:start="47:18" pos:end="47:20">ret</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <call pos:start="47:24" pos:end="47:79"><name pos:start="47:24" pos:end="47:44">ff_add_channel_layout</name><argument_list pos:start="47:45" pos:end="47:79">(<argument pos:start="47:46" pos:end="47:53"><expr pos:start="47:46" pos:end="47:53"><operator pos:start="47:46" pos:end="47:46">&amp;</operator><name pos:start="47:47" pos:end="47:53">layouts</name></expr></argument>, <argument pos:start="47:56" pos:end="47:78"><expr pos:start="47:56" pos:end="47:78"><name pos:start="47:56" pos:end="47:78"><name pos:start="47:56" pos:end="47:58">buf</name><operator pos:start="47:59" pos:end="47:60">-&gt;</operator><name pos:start="47:61" pos:end="47:75">channel_layouts</name><index pos:start="47:76" pos:end="47:78">[<expr pos:start="47:77" pos:end="47:77"><name pos:start="47:77" pos:end="47:77">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="47:80" pos:end="47:80">)</operator> <operator pos:start="47:82" pos:end="47:82">&lt;</operator> <literal type="number" pos:start="47:84" pos:end="47:84">0</literal></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:27"><block_content pos:start="49:17" pos:end="49:27">

                <return pos:start="49:17" pos:end="49:27">return <expr pos:start="49:24" pos:end="49:26"><name pos:start="49:24" pos:end="49:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

        <for pos:start="51:9" pos:end="55:27">for <control pos:start="51:13" pos:end="51:59">(<init pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:18"><name pos:start="51:14" pos:end="51:14">i</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>;</init> <condition pos:start="51:21" pos:end="51:54"><expr pos:start="51:21" pos:end="51:53"><name pos:start="51:21" pos:end="51:21">i</name> <operator pos:start="51:23" pos:end="51:23">&lt;</operator> <call pos:start="51:25" pos:end="51:53"><name pos:start="51:25" pos:end="51:32">NB_ITEMS</name><argument_list pos:start="51:33" pos:end="51:53">(<argument pos:start="51:34" pos:end="51:52"><expr pos:start="51:34" pos:end="51:52"><name pos:start="51:34" pos:end="51:52"><name pos:start="51:34" pos:end="51:36">buf</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:52">channel_counts</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="51:56" pos:end="51:58"><expr pos:start="51:56" pos:end="51:58"><name pos:start="51:56" pos:end="51:56">i</name><operator pos:start="51:57" pos:end="51:58">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:13" pos:end="55:27"><block_content pos:start="53:13" pos:end="55:27">

            <if_stmt pos:start="53:13" pos:end="55:27"><if pos:start="53:13" pos:end="55:27">if <condition pos:start="53:16" pos:end="53:101">(<expr pos:start="53:17" pos:end="53:100"><operator pos:start="53:17" pos:end="53:17">(</operator><name pos:start="53:18" pos:end="53:20">ret</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:95"><name pos:start="53:24" pos:end="53:44">ff_add_channel_layout</name><argument_list pos:start="53:45" pos:end="53:95">(<argument pos:start="53:46" pos:end="53:53"><expr pos:start="53:46" pos:end="53:53"><operator pos:start="53:46" pos:end="53:46">&amp;</operator><name pos:start="53:47" pos:end="53:53">layouts</name></expr></argument>, <argument pos:start="53:56" pos:end="53:94"><expr pos:start="53:56" pos:end="53:94"><call pos:start="53:56" pos:end="53:94"><name pos:start="53:56" pos:end="53:70">FF_COUNT2LAYOUT</name><argument_list pos:start="53:71" pos:end="53:94">(<argument pos:start="53:72" pos:end="53:93"><expr pos:start="53:72" pos:end="53:93"><name pos:start="53:72" pos:end="53:93"><name pos:start="53:72" pos:end="53:74">buf</name><operator pos:start="53:75" pos:end="53:76">-&gt;</operator><name pos:start="53:77" pos:end="53:90">channel_counts</name><index pos:start="53:91" pos:end="53:93">[<expr pos:start="53:92" pos:end="53:92"><name pos:start="53:92" pos:end="53:92">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="53:96" pos:end="53:96">)</operator> <operator pos:start="53:98" pos:end="53:98">&lt;</operator> <literal type="number" pos:start="53:100" pos:end="53:100">0</literal></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:27"><block_content pos:start="55:17" pos:end="55:27">

                <return pos:start="55:17" pos:end="55:27">return <expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

        <if_stmt pos:start="57:9" pos:end="69:9"><if pos:start="57:9" pos:end="69:9">if <condition pos:start="57:12" pos:end="57:36">(<expr pos:start="57:13" pos:end="57:35"><name pos:start="57:13" pos:end="57:35"><name pos:start="57:13" pos:end="57:15">buf</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:35">all_channel_counts</name></name></expr>)</condition> <block pos:start="57:38" pos:end="69:9">{<block_content pos:start="59:13" pos:end="67:39">

            <if_stmt pos:start="59:13" pos:end="67:39"><if pos:start="59:13" pos:end="63:79">if <condition pos:start="59:16" pos:end="59:24">(<expr pos:start="59:17" pos:end="59:23"><name pos:start="59:17" pos:end="59:23">layouts</name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="63:79"><block_content pos:start="61:17" pos:end="63:79">

                <expr_stmt pos:start="61:17" pos:end="63:79"><expr pos:start="61:17" pos:end="63:78"><call pos:start="61:17" pos:end="63:78"><name pos:start="61:17" pos:end="61:22">av_log</name><argument_list pos:start="61:23" pos:end="63:78">(<argument pos:start="61:24" pos:end="61:26"><expr pos:start="61:24" pos:end="61:26"><name pos:start="61:24" pos:end="61:26">ctx</name></expr></argument>, <argument pos:start="61:29" pos:end="61:42"><expr pos:start="61:29" pos:end="61:42"><name pos:start="61:29" pos:end="61:42">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="63:24" pos:end="63:77"><expr pos:start="63:24" pos:end="63:77"><literal type="string" pos:start="63:24" pos:end="63:77">"Conflicting all_channel_counts and list in options\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="65:13" pos:end="67:39">else if <condition pos:start="65:21" pos:end="65:58">(<expr pos:start="65:22" pos:end="65:57"><operator pos:start="65:22" pos:end="65:22">!</operator><operator pos:start="65:23" pos:end="65:23">(</operator><name pos:start="65:24" pos:end="65:30">layouts</name> <operator pos:start="65:32" pos:end="65:32">=</operator> <call pos:start="65:34" pos:end="65:56"><name pos:start="65:34" pos:end="65:54">ff_all_channel_counts</name><argument_list pos:start="65:55" pos:end="65:56">()</argument_list></call><operator pos:start="65:57" pos:end="65:57">)</operator></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:39"><block_content pos:start="67:17" pos:end="67:39">

                <return pos:start="67:17" pos:end="67:39">return <expr pos:start="67:24" pos:end="67:38"><call pos:start="67:24" pos:end="67:38"><name pos:start="67:24" pos:end="67:30">AVERROR</name><argument_list pos:start="67:31" pos:end="67:38">(<argument pos:start="67:32" pos:end="67:37"><expr pos:start="67:32" pos:end="67:37"><name pos:start="67:32" pos:end="67:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:52"><expr pos:start="71:9" pos:end="71:51"><call pos:start="71:9" pos:end="71:51"><name pos:start="71:9" pos:end="71:37">ff_set_common_channel_layouts</name><argument_list pos:start="71:38" pos:end="71:51">(<argument pos:start="71:39" pos:end="71:41"><expr pos:start="71:39" pos:end="71:41"><name pos:start="71:39" pos:end="71:41">ctx</name></expr></argument>, <argument pos:start="71:44" pos:end="71:50"><expr pos:start="71:44" pos:end="71:50"><name pos:start="71:44" pos:end="71:50">layouts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="89:5"><if pos:start="77:5" pos:end="89:5">if <condition pos:start="77:8" pos:end="77:31">(<expr pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:11">buf</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:30">sample_rates_size</name></name></expr>)</condition> <block pos:start="77:33" pos:end="89:5">{<block_content pos:start="79:9" pos:end="87:48">

        <expr_stmt pos:start="79:9" pos:end="79:23"><expr pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:15">formats</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:22">NULL</name></expr>;</expr_stmt>

        <for pos:start="81:9" pos:end="85:27">for <control pos:start="81:13" pos:end="81:57">(<init pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:18"><name pos:start="81:14" pos:end="81:14">i</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>;</init> <condition pos:start="81:21" pos:end="81:52"><expr pos:start="81:21" pos:end="81:51"><name pos:start="81:21" pos:end="81:21">i</name> <operator pos:start="81:23" pos:end="81:23">&lt;</operator> <call pos:start="81:25" pos:end="81:51"><name pos:start="81:25" pos:end="81:32">NB_ITEMS</name><argument_list pos:start="81:33" pos:end="81:51">(<argument pos:start="81:34" pos:end="81:50"><expr pos:start="81:34" pos:end="81:50"><name pos:start="81:34" pos:end="81:50"><name pos:start="81:34" pos:end="81:36">buf</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:50">sample_rates</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="81:54" pos:end="81:56"><expr pos:start="81:54" pos:end="81:56"><name pos:start="81:54" pos:end="81:54">i</name><operator pos:start="81:55" pos:end="81:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="83:13" pos:end="85:27"><block_content pos:start="83:13" pos:end="85:27">

            <if_stmt pos:start="83:13" pos:end="85:27"><if pos:start="83:13" pos:end="85:27">if <condition pos:start="83:16" pos:end="83:74">(<expr pos:start="83:17" pos:end="83:73"><operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:20">ret</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <call pos:start="83:24" pos:end="83:68"><name pos:start="83:24" pos:end="83:36">ff_add_format</name><argument_list pos:start="83:37" pos:end="83:68">(<argument pos:start="83:38" pos:end="83:45"><expr pos:start="83:38" pos:end="83:45"><operator pos:start="83:38" pos:end="83:38">&amp;</operator><name pos:start="83:39" pos:end="83:45">formats</name></expr></argument>, <argument pos:start="83:48" pos:end="83:67"><expr pos:start="83:48" pos:end="83:67"><name pos:start="83:48" pos:end="83:67"><name pos:start="83:48" pos:end="83:50">buf</name><operator pos:start="83:51" pos:end="83:52">-&gt;</operator><name pos:start="83:53" pos:end="83:64">sample_rates</name><index pos:start="83:65" pos:end="83:67">[<expr pos:start="83:66" pos:end="83:66"><name pos:start="83:66" pos:end="83:66">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="83:69" pos:end="83:69">)</operator> <operator pos:start="83:71" pos:end="83:71">&lt;</operator> <literal type="number" pos:start="83:73" pos:end="83:73">0</literal></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:27"><block_content pos:start="85:17" pos:end="85:27">

                <return pos:start="85:17" pos:end="85:27">return <expr pos:start="85:24" pos:end="85:26"><name pos:start="85:24" pos:end="85:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

        <expr_stmt pos:start="87:9" pos:end="87:48"><expr pos:start="87:9" pos:end="87:47"><call pos:start="87:9" pos:end="87:47"><name pos:start="87:9" pos:end="87:33">ff_set_common_samplerates</name><argument_list pos:start="87:34" pos:end="87:47">(<argument pos:start="87:35" pos:end="87:37"><expr pos:start="87:35" pos:end="87:37"><name pos:start="87:35" pos:end="87:37">ctx</name></expr></argument>, <argument pos:start="87:40" pos:end="87:46"><expr pos:start="87:40" pos:end="87:46"><name pos:start="87:40" pos:end="87:46">formats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
