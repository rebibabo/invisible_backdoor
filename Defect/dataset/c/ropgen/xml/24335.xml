<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24335.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">mxf_decrypt_triplet</name><parameter_list pos:start="1:31" pos:end="1:81">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:59">AVPacket</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">pkt</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:80"><decl pos:start="1:67" pos:end="1:80"><type pos:start="1:67" pos:end="1:80"><name pos:start="1:67" pos:end="1:75">KLVPacket</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:80">klv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:13">

    <decl_stmt pos:start="5:5" pos:end="5:135"><decl pos:start="5:5" pos:end="5:134"><type pos:start="5:5" pos:end="5:24"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:24">uint8_t</name></type> <name pos:start="5:26" pos:end="5:35"><name pos:start="5:26" pos:end="5:31">checkv</name><index pos:start="5:32" pos:end="5:35">[<expr pos:start="5:33" pos:end="5:34"><literal type="number" pos:start="5:33" pos:end="5:34">16</literal></expr>]</index></name> <init pos:start="5:37" pos:end="5:134">= <expr pos:start="5:39" pos:end="5:134"><block pos:start="5:39" pos:end="5:134">{<expr pos:start="5:40" pos:end="5:43"><literal type="number" pos:start="5:40" pos:end="5:43">0x43</literal></expr>, <expr pos:start="5:46" pos:end="5:49"><literal type="number" pos:start="5:46" pos:end="5:49">0x48</literal></expr>, <expr pos:start="5:52" pos:end="5:55"><literal type="number" pos:start="5:52" pos:end="5:55">0x55</literal></expr>, <expr pos:start="5:58" pos:end="5:61"><literal type="number" pos:start="5:58" pos:end="5:61">0x4b</literal></expr>, <expr pos:start="5:64" pos:end="5:67"><literal type="number" pos:start="5:64" pos:end="5:67">0x43</literal></expr>, <expr pos:start="5:70" pos:end="5:73"><literal type="number" pos:start="5:70" pos:end="5:73">0x48</literal></expr>, <expr pos:start="5:76" pos:end="5:79"><literal type="number" pos:start="5:76" pos:end="5:79">0x55</literal></expr>, <expr pos:start="5:82" pos:end="5:85"><literal type="number" pos:start="5:82" pos:end="5:85">0x4b</literal></expr>, <expr pos:start="5:88" pos:end="5:91"><literal type="number" pos:start="5:88" pos:end="5:91">0x43</literal></expr>, <expr pos:start="5:94" pos:end="5:97"><literal type="number" pos:start="5:94" pos:end="5:97">0x48</literal></expr>, <expr pos:start="5:100" pos:end="5:103"><literal type="number" pos:start="5:100" pos:end="5:103">0x55</literal></expr>, <expr pos:start="5:106" pos:end="5:109"><literal type="number" pos:start="5:106" pos:end="5:109">0x4b</literal></expr>, <expr pos:start="5:112" pos:end="5:115"><literal type="number" pos:start="5:112" pos:end="5:115">0x43</literal></expr>, <expr pos:start="5:118" pos:end="5:121"><literal type="number" pos:start="5:118" pos:end="5:121">0x48</literal></expr>, <expr pos:start="5:124" pos:end="5:127"><literal type="number" pos:start="5:124" pos:end="5:127">0x55</literal></expr>, <expr pos:start="5:130" pos:end="5:133"><literal type="number" pos:start="5:130" pos:end="5:133">0x4b</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">MXFContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">mxf</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">end</name> <init pos:start="11:17" pos:end="11:45">= <expr pos:start="11:19" pos:end="11:45"><call pos:start="11:19" pos:end="11:31"><name pos:start="11:19" pos:end="11:27">avio_tell</name><argument_list pos:start="11:28" pos:end="11:31">(<argument pos:start="11:29" pos:end="11:30"><expr pos:start="11:29" pos:end="11:30"><name pos:start="11:29" pos:end="11:30">pb</name></expr></argument>)</argument_list></call> <operator pos:start="11:33" pos:end="11:33">+</operator> <name pos:start="11:35" pos:end="11:45"><name pos:start="11:35" pos:end="11:37">klv</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:45">length</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:22">orig_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:27">plaintext_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">uint8_t</name></type> <name pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:16">ivec</name><index pos:start="19:17" pos:end="19:20">[<expr pos:start="19:18" pos:end="19:19"><literal type="number" pos:start="19:18" pos:end="19:19">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">uint8_t</name></type> <name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:18">tmpbuf</name><index pos:start="21:19" pos:end="21:22">[<expr pos:start="21:20" pos:end="21:21"><literal type="number" pos:start="21:20" pos:end="21:21">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:14"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">index</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:48">(<expr pos:start="27:9" pos:end="27:47"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:18"><name pos:start="27:10" pos:end="27:12">mxf</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:18">aesc</name></name> <operator pos:start="27:20" pos:end="27:21">&amp;&amp;</operator> <name pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:28">key</name></name> <operator pos:start="27:30" pos:end="27:31">&amp;&amp;</operator> <name pos:start="27:33" pos:end="27:41"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:41">keylen</name></name> <operator pos:start="27:43" pos:end="27:44">==</operator> <literal type="number" pos:start="27:46" pos:end="27:47">16</literal></expr>)</condition> <block pos:start="27:50" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:47">

        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:11">mxf</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:17">aesc</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <call pos:start="29:21" pos:end="29:42"><name pos:start="29:21" pos:end="29:29">av_malloc</name><argument_list pos:start="29:30" pos:end="29:42">(<argument pos:start="29:31" pos:end="29:41"><expr pos:start="29:31" pos:end="29:41"><name pos:start="29:31" pos:end="29:41">av_aes_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:22"><if pos:start="31:9" pos:end="33:22">if <condition pos:start="31:12" pos:end="31:23">(<expr pos:start="31:13" pos:end="31:22"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:22"><name pos:start="31:14" pos:end="31:16">mxf</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:22">aesc</name></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:22"><block_content pos:start="33:13" pos:end="33:22">

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:47"><expr pos:start="35:9" pos:end="35:46"><call pos:start="35:9" pos:end="35:46"><name pos:start="35:9" pos:end="35:19">av_aes_init</name><argument_list pos:start="35:20" pos:end="35:46">(<argument pos:start="35:21" pos:end="35:29"><expr pos:start="35:21" pos:end="35:29"><name pos:start="35:21" pos:end="35:29"><name pos:start="35:21" pos:end="35:23">mxf</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:29">aesc</name></name></expr></argument>, <argument pos:start="35:32" pos:end="35:37"><expr pos:start="35:32" pos:end="35:37"><name pos:start="35:32" pos:end="35:37"><name pos:start="35:32" pos:end="35:32">s</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:37">key</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><literal type="number" pos:start="35:40" pos:end="35:42">128</literal></expr></argument>, <argument pos:start="35:45" pos:end="35:45"><expr pos:start="35:45" pos:end="35:45"><literal type="number" pos:start="35:45" pos:end="35:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="39:5" pos:end="39:21">// crypto context</comment>

    <expr_stmt pos:start="41:5" pos:end="41:45"><expr pos:start="41:5" pos:end="41:44"><call pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:13">avio_skip</name><argument_list pos:start="41:14" pos:end="41:44">(<argument pos:start="41:15" pos:end="41:16"><expr pos:start="41:15" pos:end="41:16"><name pos:start="41:15" pos:end="41:16">pb</name></expr></argument>, <argument pos:start="41:19" pos:end="41:43"><expr pos:start="41:19" pos:end="41:43"><call pos:start="41:19" pos:end="41:43"><name pos:start="41:19" pos:end="41:39">klv_decode_ber_length</name><argument_list pos:start="41:40" pos:end="41:43">(<argument pos:start="41:41" pos:end="41:42"><expr pos:start="41:41" pos:end="41:42"><name pos:start="41:41" pos:end="41:42">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="43:5" pos:end="43:23">// plaintext offset</comment>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><call pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:25">klv_decode_ber_length</name><argument_list pos:start="45:26" pos:end="45:29">(<argument pos:start="45:27" pos:end="45:28"><expr pos:start="45:27" pos:end="45:28"><name pos:start="45:27" pos:end="45:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:35"><expr pos:start="47:5" pos:end="47:34"><name pos:start="47:5" pos:end="47:18">plaintext_size</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <call pos:start="47:22" pos:end="47:34"><name pos:start="47:22" pos:end="47:30">avio_rb64</name><argument_list pos:start="47:31" pos:end="47:34">(<argument pos:start="47:32" pos:end="47:33"><expr pos:start="47:32" pos:end="47:33"><name pos:start="47:32" pos:end="47:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="49:5" pos:end="49:21">// source klv key</comment>

    <expr_stmt pos:start="51:5" pos:end="51:30"><expr pos:start="51:5" pos:end="51:29"><call pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:25">klv_decode_ber_length</name><argument_list pos:start="51:26" pos:end="51:29">(<argument pos:start="51:27" pos:end="51:28"><expr pos:start="51:27" pos:end="51:28"><name pos:start="51:27" pos:end="51:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><call pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:13">avio_read</name><argument_list pos:start="53:14" pos:end="53:31">(<argument pos:start="53:15" pos:end="53:16"><expr pos:start="53:15" pos:end="53:16"><name pos:start="53:15" pos:end="53:16">pb</name></expr></argument>, <argument pos:start="53:19" pos:end="53:26"><expr pos:start="53:19" pos:end="53:26"><name pos:start="53:19" pos:end="53:26"><name pos:start="53:19" pos:end="53:21">klv</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:26">key</name></name></expr></argument>, <argument pos:start="53:29" pos:end="53:30"><expr pos:start="53:29" pos:end="53:30"><literal type="number" pos:start="53:29" pos:end="53:30">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:18"><if pos:start="55:5" pos:end="57:18">if <condition pos:start="55:8" pos:end="55:50">(<expr pos:start="55:9" pos:end="55:49"><operator pos:start="55:9" pos:end="55:9">!</operator><call pos:start="55:10" pos:end="55:49"><name pos:start="55:10" pos:end="55:19">IS_KLV_KEY</name><argument_list pos:start="55:20" pos:end="55:49">(<argument pos:start="55:21" pos:end="55:23"><expr pos:start="55:21" pos:end="55:23"><name pos:start="55:21" pos:end="55:23">klv</name></expr></argument>, <argument pos:start="55:26" pos:end="55:48"><expr pos:start="55:26" pos:end="55:48"><name pos:start="55:26" pos:end="55:48">mxf_essence_element_key</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:18"><block_content pos:start="57:9" pos:end="57:18">

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:41"><expr pos:start="59:5" pos:end="59:40"><name pos:start="59:5" pos:end="59:9">index</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <call pos:start="59:13" pos:end="59:40"><name pos:start="59:13" pos:end="59:32">mxf_get_stream_index</name><argument_list pos:start="59:33" pos:end="59:40">(<argument pos:start="59:34" pos:end="59:34"><expr pos:start="59:34" pos:end="59:34"><name pos:start="59:34" pos:end="59:34">s</name></expr></argument>, <argument pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><name pos:start="59:37" pos:end="59:39">klv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="63:18"><if pos:start="61:5" pos:end="63:18">if <condition pos:start="61:8" pos:end="61:18">(<expr pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:13">index</name> <operator pos:start="61:15" pos:end="61:15">&lt;</operator> <literal type="number" pos:start="61:17" pos:end="61:17">0</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:18"><block_content pos:start="63:9" pos:end="63:18">

        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="line" pos:start="65:5" pos:end="65:18">// source size</comment>

    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><call pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:25">klv_decode_ber_length</name><argument_list pos:start="67:26" pos:end="67:29">(<argument pos:start="67:27" pos:end="67:28"><expr pos:start="67:27" pos:end="67:28"><name pos:start="67:27" pos:end="67:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:30"><expr pos:start="69:5" pos:end="69:29"><name pos:start="69:5" pos:end="69:13">orig_size</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <call pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:25">avio_rb64</name><argument_list pos:start="69:26" pos:end="69:29">(<argument pos:start="69:27" pos:end="69:28"><expr pos:start="69:27" pos:end="69:28"><name pos:start="69:27" pos:end="69:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="73:18"><if pos:start="71:5" pos:end="73:18">if <condition pos:start="71:8" pos:end="71:35">(<expr pos:start="71:9" pos:end="71:34"><name pos:start="71:9" pos:end="71:17">orig_size</name> <operator pos:start="71:19" pos:end="71:19">&lt;</operator> <name pos:start="71:21" pos:end="71:34">plaintext_size</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:18"><block_content pos:start="73:9" pos:end="73:18">

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="line" pos:start="75:5" pos:end="75:16">// enc. code</comment>

    <expr_stmt pos:start="77:5" pos:end="77:37"><expr pos:start="77:5" pos:end="77:36"><name pos:start="77:5" pos:end="77:8">size</name> <operator pos:start="77:10" pos:end="77:10">=</operator> <call pos:start="77:12" pos:end="77:36"><name pos:start="77:12" pos:end="77:32">klv_decode_ber_length</name><argument_list pos:start="77:33" pos:end="77:36">(<argument pos:start="77:34" pos:end="77:35"><expr pos:start="77:34" pos:end="77:35"><name pos:start="77:34" pos:end="77:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="81:18"><if pos:start="79:5" pos:end="81:18">if <condition pos:start="79:8" pos:end="79:43">(<expr pos:start="79:9" pos:end="79:42"><name pos:start="79:9" pos:end="79:12">size</name> <operator pos:start="79:14" pos:end="79:14">&lt;</operator> <literal type="number" pos:start="79:16" pos:end="79:17">32</literal> <operator pos:start="79:19" pos:end="79:20">||</operator> <name pos:start="79:22" pos:end="79:25">size</name> <operator pos:start="79:27" pos:end="79:27">-</operator> <literal type="number" pos:start="79:29" pos:end="79:30">32</literal> <operator pos:start="79:32" pos:end="79:32">&lt;</operator> <name pos:start="79:34" pos:end="79:42">orig_size</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:18"><block_content pos:start="81:9" pos:end="81:18">

        <return pos:start="81:9" pos:end="81:18">return <expr pos:start="81:16" pos:end="81:17"><operator pos:start="81:16" pos:end="81:16">-</operator><literal type="number" pos:start="81:17" pos:end="81:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:28"><expr pos:start="83:5" pos:end="83:27"><call pos:start="83:5" pos:end="83:27"><name pos:start="83:5" pos:end="83:13">avio_read</name><argument_list pos:start="83:14" pos:end="83:27">(<argument pos:start="83:15" pos:end="83:16"><expr pos:start="83:15" pos:end="83:16"><name pos:start="83:15" pos:end="83:16">pb</name></expr></argument>, <argument pos:start="83:19" pos:end="83:22"><expr pos:start="83:19" pos:end="83:22"><name pos:start="83:19" pos:end="83:22">ivec</name></expr></argument>, <argument pos:start="83:25" pos:end="83:26"><expr pos:start="83:25" pos:end="83:26"><literal type="number" pos:start="83:25" pos:end="83:26">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:30"><expr pos:start="85:5" pos:end="85:29"><call pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:13">avio_read</name><argument_list pos:start="85:14" pos:end="85:29">(<argument pos:start="85:15" pos:end="85:16"><expr pos:start="85:15" pos:end="85:16"><name pos:start="85:15" pos:end="85:16">pb</name></expr></argument>, <argument pos:start="85:19" pos:end="85:24"><expr pos:start="85:19" pos:end="85:24"><name pos:start="85:19" pos:end="85:24">tmpbuf</name></expr></argument>, <argument pos:start="85:27" pos:end="85:28"><expr pos:start="85:27" pos:end="85:28"><literal type="number" pos:start="85:27" pos:end="85:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="89:60"><if pos:start="87:5" pos:end="89:60">if <condition pos:start="87:8" pos:end="87:18">(<expr pos:start="87:9" pos:end="87:17"><name pos:start="87:9" pos:end="87:17"><name pos:start="87:9" pos:end="87:11">mxf</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:17">aesc</name></name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:60"><block_content pos:start="89:9" pos:end="89:60">

        <expr_stmt pos:start="89:9" pos:end="89:60"><expr pos:start="89:9" pos:end="89:59"><call pos:start="89:9" pos:end="89:59"><name pos:start="89:9" pos:end="89:20">av_aes_crypt</name><argument_list pos:start="89:21" pos:end="89:59">(<argument pos:start="89:22" pos:end="89:30"><expr pos:start="89:22" pos:end="89:30"><name pos:start="89:22" pos:end="89:30"><name pos:start="89:22" pos:end="89:24">mxf</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:30">aesc</name></name></expr></argument>, <argument pos:start="89:33" pos:end="89:38"><expr pos:start="89:33" pos:end="89:38"><name pos:start="89:33" pos:end="89:38">tmpbuf</name></expr></argument>, <argument pos:start="89:41" pos:end="89:46"><expr pos:start="89:41" pos:end="89:46"><name pos:start="89:41" pos:end="89:46">tmpbuf</name></expr></argument>, <argument pos:start="89:49" pos:end="89:49"><expr pos:start="89:49" pos:end="89:49"><literal type="number" pos:start="89:49" pos:end="89:49">1</literal></expr></argument>, <argument pos:start="89:52" pos:end="89:55"><expr pos:start="89:52" pos:end="89:55"><name pos:start="89:52" pos:end="89:55">ivec</name></expr></argument>, <argument pos:start="89:58" pos:end="89:58"><expr pos:start="89:58" pos:end="89:58"><literal type="number" pos:start="89:58" pos:end="89:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="93:71"><if pos:start="91:5" pos:end="93:71">if <condition pos:start="91:8" pos:end="91:35">(<expr pos:start="91:9" pos:end="91:34"><call pos:start="91:9" pos:end="91:34"><name pos:start="91:9" pos:end="91:14">memcmp</name><argument_list pos:start="91:15" pos:end="91:34">(<argument pos:start="91:16" pos:end="91:21"><expr pos:start="91:16" pos:end="91:21"><name pos:start="91:16" pos:end="91:21">tmpbuf</name></expr></argument>, <argument pos:start="91:24" pos:end="91:29"><expr pos:start="91:24" pos:end="91:29"><name pos:start="91:24" pos:end="91:29">checkv</name></expr></argument>, <argument pos:start="91:32" pos:end="91:33"><expr pos:start="91:32" pos:end="91:33"><literal type="number" pos:start="91:32" pos:end="91:33">16</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:71"><block_content pos:start="93:9" pos:end="93:71">

        <expr_stmt pos:start="93:9" pos:end="93:71"><expr pos:start="93:9" pos:end="93:70"><call pos:start="93:9" pos:end="93:70"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:70">(<argument pos:start="93:16" pos:end="93:16"><expr pos:start="93:16" pos:end="93:16"><name pos:start="93:16" pos:end="93:16">s</name></expr></argument>, <argument pos:start="93:19" pos:end="93:30"><expr pos:start="93:19" pos:end="93:30"><name pos:start="93:19" pos:end="93:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:33" pos:end="93:69"><expr pos:start="93:33" pos:end="93:69"><literal type="string" pos:start="93:33" pos:end="93:69">"probably incorrect decryption key\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:15"><expr pos:start="95:5" pos:end="95:14"><name pos:start="95:5" pos:end="95:8">size</name> <operator pos:start="95:10" pos:end="95:11">-=</operator> <literal type="number" pos:start="95:13" pos:end="95:14">32</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:33"><expr pos:start="97:5" pos:end="97:32"><call pos:start="97:5" pos:end="97:32"><name pos:start="97:5" pos:end="97:17">av_get_packet</name><argument_list pos:start="97:18" pos:end="97:32">(<argument pos:start="97:19" pos:end="97:20"><expr pos:start="97:19" pos:end="97:20"><name pos:start="97:19" pos:end="97:20">pb</name></expr></argument>, <argument pos:start="97:23" pos:end="97:25"><expr pos:start="97:23" pos:end="97:25"><name pos:start="97:23" pos:end="97:25">pkt</name></expr></argument>, <argument pos:start="97:28" pos:end="97:31"><expr pos:start="97:28" pos:end="97:31"><name pos:start="97:28" pos:end="97:31">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:27"><expr pos:start="99:5" pos:end="99:26"><name pos:start="99:5" pos:end="99:8">size</name> <operator pos:start="99:10" pos:end="99:11">-=</operator> <name pos:start="99:13" pos:end="99:26">plaintext_size</name></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="105:69"><if pos:start="101:5" pos:end="105:69">if <condition pos:start="101:8" pos:end="101:18">(<expr pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:11">mxf</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:17">aesc</name></name></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="105:69"><block_content pos:start="103:9" pos:end="105:69">

        <expr_stmt pos:start="103:9" pos:end="105:69"><expr pos:start="103:9" pos:end="105:68"><call pos:start="103:9" pos:end="105:68"><name pos:start="103:9" pos:end="103:20">av_aes_crypt</name><argument_list pos:start="103:21" pos:end="105:68">(<argument pos:start="103:22" pos:end="103:30"><expr pos:start="103:22" pos:end="103:30"><name pos:start="103:22" pos:end="103:30"><name pos:start="103:22" pos:end="103:24">mxf</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:30">aesc</name></name></expr></argument>, <argument pos:start="103:33" pos:end="103:58"><expr pos:start="103:33" pos:end="103:58"><operator pos:start="103:33" pos:end="103:33">&amp;</operator><name pos:start="103:34" pos:end="103:58"><name pos:start="103:34" pos:end="103:36">pkt</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:42">data</name><index pos:start="103:43" pos:end="103:58">[<expr pos:start="103:44" pos:end="103:57"><name pos:start="103:44" pos:end="103:57">plaintext_size</name></expr>]</index></name></expr></argument>,

                     <argument pos:start="105:22" pos:end="105:47"><expr pos:start="105:22" pos:end="105:47"><operator pos:start="105:22" pos:end="105:22">&amp;</operator><name pos:start="105:23" pos:end="105:47"><name pos:start="105:23" pos:end="105:25">pkt</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:31">data</name><index pos:start="105:32" pos:end="105:47">[<expr pos:start="105:33" pos:end="105:46"><name pos:start="105:33" pos:end="105:46">plaintext_size</name></expr>]</index></name></expr></argument>, <argument pos:start="105:50" pos:end="105:58"><expr pos:start="105:50" pos:end="105:58"><name pos:start="105:50" pos:end="105:53">size</name> <operator pos:start="105:55" pos:end="105:56">&gt;&gt;</operator> <literal type="number" pos:start="105:58" pos:end="105:58">4</literal></expr></argument>, <argument pos:start="105:61" pos:end="105:64"><expr pos:start="105:61" pos:end="105:64"><name pos:start="105:61" pos:end="105:64">ivec</name></expr></argument>, <argument pos:start="105:67" pos:end="105:67"><expr pos:start="105:67" pos:end="105:67"><literal type="number" pos:start="105:67" pos:end="105:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:26"><expr pos:start="107:5" pos:end="107:25"><name pos:start="107:5" pos:end="107:13"><name pos:start="107:5" pos:end="107:7">pkt</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:13">size</name></name> <operator pos:start="107:15" pos:end="107:15">=</operator> <name pos:start="107:17" pos:end="107:25">orig_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:30"><expr pos:start="109:5" pos:end="109:29"><name pos:start="109:5" pos:end="109:21"><name pos:start="109:5" pos:end="109:7">pkt</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:21">stream_index</name></name> <operator pos:start="109:23" pos:end="109:23">=</operator> <name pos:start="109:25" pos:end="109:29">index</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:39"><expr pos:start="111:5" pos:end="111:38"><call pos:start="111:5" pos:end="111:38"><name pos:start="111:5" pos:end="111:13">avio_skip</name><argument_list pos:start="111:14" pos:end="111:38">(<argument pos:start="111:15" pos:end="111:16"><expr pos:start="111:15" pos:end="111:16"><name pos:start="111:15" pos:end="111:16">pb</name></expr></argument>, <argument pos:start="111:19" pos:end="111:37"><expr pos:start="111:19" pos:end="111:37"><name pos:start="111:19" pos:end="111:21">end</name> <operator pos:start="111:23" pos:end="111:23">-</operator> <call pos:start="111:25" pos:end="111:37"><name pos:start="111:25" pos:end="111:33">avio_tell</name><argument_list pos:start="111:34" pos:end="111:37">(<argument pos:start="111:35" pos:end="111:36"><expr pos:start="111:35" pos:end="111:36"><name pos:start="111:35" pos:end="111:36">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
