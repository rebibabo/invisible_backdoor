<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9264.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">hmp_migrate_set_parameter</name><parameter_list pos:start="1:31" pos:end="1:64">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:38">Monitor</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">mon</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:63"><decl pos:start="1:46" pos:end="1:63"><type pos:start="1:46" pos:end="1:63"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:56">QDict</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="183:1">{<block_content pos:start="5:5" pos:end="181:5">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:21">param</name> <init pos:start="5:23" pos:end="5:57">= <expr pos:start="5:25" pos:end="5:57"><call pos:start="5:25" pos:end="5:57"><name pos:start="5:25" pos:end="5:37">qdict_get_str</name><argument_list pos:start="5:38" pos:end="5:57">(<argument pos:start="5:39" pos:end="5:43"><expr pos:start="5:39" pos:end="5:43"><name pos:start="5:39" pos:end="5:43">qdict</name></expr></argument>, <argument pos:start="5:46" pos:end="5:56"><expr pos:start="5:46" pos:end="5:56"><literal type="string" pos:start="5:46" pos:end="5:56">"parameter"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:24">valuestr</name> <init pos:start="7:26" pos:end="7:56">= <expr pos:start="7:28" pos:end="7:56"><call pos:start="7:28" pos:end="7:56"><name pos:start="7:28" pos:end="7:40">qdict_get_str</name><argument_list pos:start="7:41" pos:end="7:56">(<argument pos:start="7:42" pos:end="7:46"><expr pos:start="7:42" pos:end="7:46"><name pos:start="7:42" pos:end="7:46">qdict</name></expr></argument>, <argument pos:start="7:49" pos:end="7:55"><expr pos:start="7:49" pos:end="7:55"><literal type="string" pos:start="7:49" pos:end="7:55">"value"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:19">valuebw</name> <init pos:start="9:21" pos:end="9:23">= <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">long</name></type> <name pos:start="11:10" pos:end="11:17">valueint</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:14">err</name> <init pos:start="13:16" pos:end="13:21">= <expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:22">use_int_value</name> <init pos:start="15:24" pos:end="15:30">= <expr pos:start="15:26" pos:end="15:30"><name pos:start="15:26" pos:end="15:30">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="163:5">for <control pos:start="21:9" pos:end="21:50">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:45"><expr pos:start="21:17" pos:end="21:44"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:44">MIGRATION_PARAMETER__MAX</name></expr>;</condition> <incr pos:start="21:47" pos:end="21:49"><expr pos:start="21:47" pos:end="21:49"><name pos:start="21:47" pos:end="21:47">i</name><operator pos:start="21:48" pos:end="21:49">++</operator></expr></incr>)</control> <block pos:start="21:52" pos:end="163:5">{<block_content pos:start="23:9" pos:end="161:9">

        <if_stmt pos:start="23:9" pos:end="161:9"><if pos:start="23:9" pos:end="161:9">if <condition pos:start="23:12" pos:end="23:61">(<expr pos:start="23:13" pos:end="23:60"><call pos:start="23:13" pos:end="23:55"><name pos:start="23:13" pos:end="23:18">strcmp</name><argument_list pos:start="23:19" pos:end="23:55">(<argument pos:start="23:20" pos:end="23:24"><expr pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:24">param</name></expr></argument>, <argument pos:start="23:27" pos:end="23:54"><expr pos:start="23:27" pos:end="23:54"><name pos:start="23:27" pos:end="23:54"><name pos:start="23:27" pos:end="23:51">MigrationParameter_lookup</name><index pos:start="23:52" pos:end="23:54">[<expr pos:start="23:53" pos:end="23:53"><name pos:start="23:53" pos:end="23:53">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="23:57" pos:end="23:58">==</operator> <literal type="number" pos:start="23:60" pos:end="23:60">0</literal></expr>)</condition> <block pos:start="23:63" pos:end="161:9">{<block_content pos:start="25:13" pos:end="159:18">

            <decl_stmt pos:start="25:13" pos:end="25:42"><decl pos:start="25:13" pos:end="25:41"><type pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:31">MigrationParameters</name></type> <name pos:start="25:33" pos:end="25:33">p</name> <init pos:start="25:35" pos:end="25:41">= <expr pos:start="25:37" pos:end="25:41"><block pos:start="25:37" pos:end="25:41">{ <expr pos:start="25:39" pos:end="25:39"><literal type="number" pos:start="25:39" pos:end="25:39">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

            <switch pos:start="27:13" pos:end="119:13">switch <condition pos:start="27:20" pos:end="27:22">(<expr pos:start="27:21" pos:end="27:21"><name pos:start="27:21" pos:end="27:21">i</name></expr>)</condition> <block pos:start="27:24" pos:end="119:13">{<block_content pos:start="29:13" pos:end="117:22">

            <case pos:start="29:13" pos:end="29:52">case <expr pos:start="29:18" pos:end="29:51"><name pos:start="29:18" pos:end="29:51">MIGRATION_PARAMETER_COMPRESS_LEVEL</name></expr>:</case>

                <expr_stmt pos:start="31:17" pos:end="31:44"><expr pos:start="31:17" pos:end="31:43"><name pos:start="31:17" pos:end="31:36"><name pos:start="31:17" pos:end="31:17">p</name><operator pos:start="31:18" pos:end="31:18">.</operator><name pos:start="31:19" pos:end="31:36">has_compress_level</name></name> <operator pos:start="31:38" pos:end="31:38">=</operator> <name pos:start="31:40" pos:end="31:43">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:37"><expr pos:start="33:17" pos:end="33:36"><name pos:start="33:17" pos:end="33:29">use_int_value</name> <operator pos:start="33:31" pos:end="33:31">=</operator> <name pos:start="33:33" pos:end="33:36">true</name></expr>;</expr_stmt>

                <break pos:start="35:17" pos:end="35:22">break;</break>

            <case pos:start="37:13" pos:end="37:54">case <expr pos:start="37:18" pos:end="37:53"><name pos:start="37:18" pos:end="37:53">MIGRATION_PARAMETER_COMPRESS_THREADS</name></expr>:</case>

                <expr_stmt pos:start="39:17" pos:end="39:46"><expr pos:start="39:17" pos:end="39:45"><name pos:start="39:17" pos:end="39:38"><name pos:start="39:17" pos:end="39:17">p</name><operator pos:start="39:18" pos:end="39:18">.</operator><name pos:start="39:19" pos:end="39:38">has_compress_threads</name></name> <operator pos:start="39:40" pos:end="39:40">=</operator> <name pos:start="39:42" pos:end="39:45">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:37"><expr pos:start="41:17" pos:end="41:36"><name pos:start="41:17" pos:end="41:29">use_int_value</name> <operator pos:start="41:31" pos:end="41:31">=</operator> <name pos:start="41:33" pos:end="41:36">true</name></expr>;</expr_stmt>

                <break pos:start="43:17" pos:end="43:22">break;</break>

            <case pos:start="45:13" pos:end="45:56">case <expr pos:start="45:18" pos:end="45:55"><name pos:start="45:18" pos:end="45:55">MIGRATION_PARAMETER_DECOMPRESS_THREADS</name></expr>:</case>

                <expr_stmt pos:start="47:17" pos:end="47:48"><expr pos:start="47:17" pos:end="47:47"><name pos:start="47:17" pos:end="47:40"><name pos:start="47:17" pos:end="47:17">p</name><operator pos:start="47:18" pos:end="47:18">.</operator><name pos:start="47:19" pos:end="47:40">has_decompress_threads</name></name> <operator pos:start="47:42" pos:end="47:42">=</operator> <name pos:start="47:44" pos:end="47:47">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:37"><expr pos:start="49:17" pos:end="49:36"><name pos:start="49:17" pos:end="49:29">use_int_value</name> <operator pos:start="49:31" pos:end="49:31">=</operator> <name pos:start="49:33" pos:end="49:36">true</name></expr>;</expr_stmt>

                <break pos:start="51:17" pos:end="51:22">break;</break>

            <case pos:start="53:13" pos:end="53:58">case <expr pos:start="53:18" pos:end="53:57"><name pos:start="53:18" pos:end="53:57">MIGRATION_PARAMETER_CPU_THROTTLE_INITIAL</name></expr>:</case>

                <expr_stmt pos:start="55:17" pos:end="55:50"><expr pos:start="55:17" pos:end="55:49"><name pos:start="55:17" pos:end="55:42"><name pos:start="55:17" pos:end="55:17">p</name><operator pos:start="55:18" pos:end="55:18">.</operator><name pos:start="55:19" pos:end="55:42">has_cpu_throttle_initial</name></name> <operator pos:start="55:44" pos:end="55:44">=</operator> <name pos:start="55:46" pos:end="55:49">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:37"><expr pos:start="57:17" pos:end="57:36"><name pos:start="57:17" pos:end="57:29">use_int_value</name> <operator pos:start="57:31" pos:end="57:31">=</operator> <name pos:start="57:33" pos:end="57:36">true</name></expr>;</expr_stmt>

                <break pos:start="59:17" pos:end="59:22">break;</break>

            <case pos:start="61:13" pos:end="61:60">case <expr pos:start="61:18" pos:end="61:59"><name pos:start="61:18" pos:end="61:59">MIGRATION_PARAMETER_CPU_THROTTLE_INCREMENT</name></expr>:</case>

                <expr_stmt pos:start="63:17" pos:end="63:52"><expr pos:start="63:17" pos:end="63:51"><name pos:start="63:17" pos:end="63:44"><name pos:start="63:17" pos:end="63:17">p</name><operator pos:start="63:18" pos:end="63:18">.</operator><name pos:start="63:19" pos:end="63:44">has_cpu_throttle_increment</name></name> <operator pos:start="63:46" pos:end="63:46">=</operator> <name pos:start="63:48" pos:end="63:51">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:37"><expr pos:start="65:17" pos:end="65:36"><name pos:start="65:17" pos:end="65:29">use_int_value</name> <operator pos:start="65:31" pos:end="65:31">=</operator> <name pos:start="65:33" pos:end="65:36">true</name></expr>;</expr_stmt>

                <break pos:start="67:17" pos:end="67:22">break;</break>

            <case pos:start="69:13" pos:end="69:47">case <expr pos:start="69:18" pos:end="69:46"><name pos:start="69:18" pos:end="69:46">MIGRATION_PARAMETER_TLS_CREDS</name></expr>:</case>

                <expr_stmt pos:start="71:17" pos:end="71:39"><expr pos:start="71:17" pos:end="71:38"><name pos:start="71:17" pos:end="71:31"><name pos:start="71:17" pos:end="71:17">p</name><operator pos:start="71:18" pos:end="71:18">.</operator><name pos:start="71:19" pos:end="71:31">has_tls_creds</name></name> <operator pos:start="71:33" pos:end="71:33">=</operator> <name pos:start="71:35" pos:end="71:38">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:48"><expr pos:start="73:17" pos:end="73:47"><name pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:17">p</name><operator pos:start="73:18" pos:end="73:18">.</operator><name pos:start="73:19" pos:end="73:27">tls_creds</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <operator pos:start="73:31" pos:end="73:31">(</operator><name pos:start="73:32" pos:end="73:35">char</name> <operator pos:start="73:37" pos:end="73:37">*</operator><operator pos:start="73:38" pos:end="73:38">)</operator> <name pos:start="73:40" pos:end="73:47">valuestr</name></expr>;</expr_stmt>

                <break pos:start="75:17" pos:end="75:22">break;</break>

            <case pos:start="77:13" pos:end="77:50">case <expr pos:start="77:18" pos:end="77:49"><name pos:start="77:18" pos:end="77:49">MIGRATION_PARAMETER_TLS_HOSTNAME</name></expr>:</case>

                <expr_stmt pos:start="79:17" pos:end="79:42"><expr pos:start="79:17" pos:end="79:41"><name pos:start="79:17" pos:end="79:34"><name pos:start="79:17" pos:end="79:17">p</name><operator pos:start="79:18" pos:end="79:18">.</operator><name pos:start="79:19" pos:end="79:34">has_tls_hostname</name></name> <operator pos:start="79:36" pos:end="79:36">=</operator> <name pos:start="79:38" pos:end="79:41">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:51"><expr pos:start="81:17" pos:end="81:50"><name pos:start="81:17" pos:end="81:30"><name pos:start="81:17" pos:end="81:17">p</name><operator pos:start="81:18" pos:end="81:18">.</operator><name pos:start="81:19" pos:end="81:30">tls_hostname</name></name> <operator pos:start="81:32" pos:end="81:32">=</operator> <operator pos:start="81:34" pos:end="81:34">(</operator><name pos:start="81:35" pos:end="81:38">char</name> <operator pos:start="81:40" pos:end="81:40">*</operator><operator pos:start="81:41" pos:end="81:41">)</operator> <name pos:start="81:43" pos:end="81:50">valuestr</name></expr>;</expr_stmt>

                <break pos:start="83:17" pos:end="83:22">break;</break>

            <case pos:start="85:13" pos:end="85:51">case <expr pos:start="85:18" pos:end="85:50"><name pos:start="85:18" pos:end="85:50">MIGRATION_PARAMETER_MAX_BANDWIDTH</name></expr>:</case>

                <expr_stmt pos:start="87:17" pos:end="87:43"><expr pos:start="87:17" pos:end="87:42"><name pos:start="87:17" pos:end="87:35"><name pos:start="87:17" pos:end="87:17">p</name><operator pos:start="87:18" pos:end="87:18">.</operator><name pos:start="87:19" pos:end="87:35">has_max_bandwidth</name></name> <operator pos:start="87:37" pos:end="87:37">=</operator> <name pos:start="87:39" pos:end="87:42">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:59"><expr pos:start="89:17" pos:end="89:58"><name pos:start="89:17" pos:end="89:23">valuebw</name> <operator pos:start="89:25" pos:end="89:25">=</operator> <call pos:start="89:27" pos:end="89:58"><name pos:start="89:27" pos:end="89:42">qemu_strtosz_MiB</name><argument_list pos:start="89:43" pos:end="89:58">(<argument pos:start="89:44" pos:end="89:51"><expr pos:start="89:44" pos:end="89:51"><name pos:start="89:44" pos:end="89:51">valuestr</name></expr></argument>, <argument pos:start="89:54" pos:end="89:57"><expr pos:start="89:54" pos:end="89:57"><name pos:start="89:54" pos:end="89:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="91:17" pos:end="97:17"><if pos:start="91:17" pos:end="97:17">if <condition pos:start="91:20" pos:end="91:62">(<expr pos:start="91:21" pos:end="91:61"><name pos:start="91:21" pos:end="91:27">valuebw</name> <operator pos:start="91:29" pos:end="91:29">&lt;</operator> <literal type="number" pos:start="91:31" pos:end="91:31">0</literal> <operator pos:start="91:33" pos:end="91:34">||</operator> <operator pos:start="91:36" pos:end="91:36">(</operator><name pos:start="91:37" pos:end="91:42">size_t</name><operator pos:start="91:43" pos:end="91:43">)</operator><name pos:start="91:44" pos:end="91:50">valuebw</name> <operator pos:start="91:52" pos:end="91:53">!=</operator> <name pos:start="91:55" pos:end="91:61">valuebw</name></expr>)</condition> <block pos:start="91:64" pos:end="97:17">{<block_content pos:start="93:21" pos:end="95:33">

                    <expr_stmt pos:start="93:21" pos:end="93:66"><expr pos:start="93:21" pos:end="93:65"><call pos:start="93:21" pos:end="93:65"><name pos:start="93:21" pos:end="93:30">error_setg</name><argument_list pos:start="93:31" pos:end="93:65">(<argument pos:start="93:32" pos:end="93:35"><expr pos:start="93:32" pos:end="93:35"><operator pos:start="93:32" pos:end="93:32">&amp;</operator><name pos:start="93:33" pos:end="93:35">err</name></expr></argument>, <argument pos:start="93:38" pos:end="93:54"><expr pos:start="93:38" pos:end="93:54"><literal type="string" pos:start="93:38" pos:end="93:54">"Invalid size %s"</literal></expr></argument>, <argument pos:start="93:57" pos:end="93:64"><expr pos:start="93:57" pos:end="93:64"><name pos:start="93:57" pos:end="93:64">valuestr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="95:21" pos:end="95:33">goto <name pos:start="95:26" pos:end="95:32">cleanup</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:42"><expr pos:start="99:17" pos:end="99:41"><name pos:start="99:17" pos:end="99:31"><name pos:start="99:17" pos:end="99:17">p</name><operator pos:start="99:18" pos:end="99:18">.</operator><name pos:start="99:19" pos:end="99:31">max_bandwidth</name></name> <operator pos:start="99:33" pos:end="99:33">=</operator> <name pos:start="99:35" pos:end="99:41">valuebw</name></expr>;</expr_stmt>

                <break pos:start="101:17" pos:end="101:22">break;</break>

            <case pos:start="103:13" pos:end="103:52">case <expr pos:start="103:18" pos:end="103:51"><name pos:start="103:18" pos:end="103:51">MIGRATION_PARAMETER_DOWNTIME_LIMIT</name></expr>:</case>

                <expr_stmt pos:start="105:17" pos:end="105:44"><expr pos:start="105:17" pos:end="105:43"><name pos:start="105:17" pos:end="105:36"><name pos:start="105:17" pos:end="105:17">p</name><operator pos:start="105:18" pos:end="105:18">.</operator><name pos:start="105:19" pos:end="105:36">has_downtime_limit</name></name> <operator pos:start="105:38" pos:end="105:38">=</operator> <name pos:start="105:40" pos:end="105:43">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:37"><expr pos:start="107:17" pos:end="107:36"><name pos:start="107:17" pos:end="107:29">use_int_value</name> <operator pos:start="107:31" pos:end="107:31">=</operator> <name pos:start="107:33" pos:end="107:36">true</name></expr>;</expr_stmt>

                <break pos:start="109:17" pos:end="109:22">break;</break>

            <case pos:start="111:13" pos:end="111:56">case <expr pos:start="111:18" pos:end="111:55"><name pos:start="111:18" pos:end="111:55">MIGRATION_PARAMETER_X_CHECKPOINT_DELAY</name></expr>:</case>

                <expr_stmt pos:start="113:17" pos:end="113:48"><expr pos:start="113:17" pos:end="113:47"><name pos:start="113:17" pos:end="113:40"><name pos:start="113:17" pos:end="113:17">p</name><operator pos:start="113:18" pos:end="113:18">.</operator><name pos:start="113:19" pos:end="113:40">has_x_checkpoint_delay</name></name> <operator pos:start="113:42" pos:end="113:42">=</operator> <name pos:start="113:44" pos:end="113:47">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:37"><expr pos:start="115:17" pos:end="115:36"><name pos:start="115:17" pos:end="115:29">use_int_value</name> <operator pos:start="115:31" pos:end="115:31">=</operator> <name pos:start="115:33" pos:end="115:36">true</name></expr>;</expr_stmt>

                <break pos:start="117:17" pos:end="117:22">break;</break>

            </block_content>}</block></switch>



            <if_stmt pos:start="123:13" pos:end="153:13"><if pos:start="123:13" pos:end="153:13">if <condition pos:start="123:16" pos:end="123:30">(<expr pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:29">use_int_value</name></expr>)</condition> <block pos:start="123:32" pos:end="153:13">{<block_content pos:start="125:17" pos:end="151:48">

                <if_stmt pos:start="125:17" pos:end="133:17"><if pos:start="125:17" pos:end="133:17">if <condition pos:start="125:20" pos:end="125:67">(<expr pos:start="125:21" pos:end="125:66"><call pos:start="125:21" pos:end="125:62"><name pos:start="125:21" pos:end="125:31">qemu_strtol</name><argument_list pos:start="125:32" pos:end="125:62">(<argument pos:start="125:33" pos:end="125:40"><expr pos:start="125:33" pos:end="125:40"><name pos:start="125:33" pos:end="125:40">valuestr</name></expr></argument>, <argument pos:start="125:43" pos:end="125:46"><expr pos:start="125:43" pos:end="125:46"><name pos:start="125:43" pos:end="125:46">NULL</name></expr></argument>, <argument pos:start="125:49" pos:end="125:50"><expr pos:start="125:49" pos:end="125:50"><literal type="number" pos:start="125:49" pos:end="125:50">10</literal></expr></argument>, <argument pos:start="125:53" pos:end="125:61"><expr pos:start="125:53" pos:end="125:61"><operator pos:start="125:53" pos:end="125:53">&amp;</operator><name pos:start="125:54" pos:end="125:61">valueint</name></expr></argument>)</argument_list></call> <operator pos:start="125:64" pos:end="125:64">&lt;</operator> <literal type="number" pos:start="125:66" pos:end="125:66">0</literal></expr>)</condition> <block pos:start="125:69" pos:end="133:17">{<block_content pos:start="127:21" pos:end="131:33">

                    <expr_stmt pos:start="127:21" pos:end="129:41"><expr pos:start="127:21" pos:end="129:40"><call pos:start="127:21" pos:end="129:40"><name pos:start="127:21" pos:end="127:30">error_setg</name><argument_list pos:start="127:31" pos:end="129:40">(<argument pos:start="127:32" pos:end="127:35"><expr pos:start="127:32" pos:end="127:35"><operator pos:start="127:32" pos:end="127:32">&amp;</operator><name pos:start="127:33" pos:end="127:35">err</name></expr></argument>, <argument pos:start="127:38" pos:end="127:69"><expr pos:start="127:38" pos:end="127:69"><literal type="string" pos:start="127:38" pos:end="127:69">"Unable to parse '%s' as an int"</literal></expr></argument>,

                               <argument pos:start="129:32" pos:end="129:39"><expr pos:start="129:32" pos:end="129:39"><name pos:start="129:32" pos:end="129:39">valuestr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="131:21" pos:end="131:33">goto <name pos:start="131:26" pos:end="131:32">cleanup</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="135:17" pos:end="137:59">/* Set all integers; only one has_FOO will be set, and

                 * the code ignores the remaining values */</comment>

                <expr_stmt pos:start="139:17" pos:end="139:44"><expr pos:start="139:17" pos:end="139:43"><name pos:start="139:17" pos:end="139:32"><name pos:start="139:17" pos:end="139:17">p</name><operator pos:start="139:18" pos:end="139:18">.</operator><name pos:start="139:19" pos:end="139:32">compress_level</name></name> <operator pos:start="139:34" pos:end="139:34">=</operator> <name pos:start="139:36" pos:end="139:43">valueint</name></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:46"><expr pos:start="141:17" pos:end="141:45"><name pos:start="141:17" pos:end="141:34"><name pos:start="141:17" pos:end="141:17">p</name><operator pos:start="141:18" pos:end="141:18">.</operator><name pos:start="141:19" pos:end="141:34">compress_threads</name></name> <operator pos:start="141:36" pos:end="141:36">=</operator> <name pos:start="141:38" pos:end="141:45">valueint</name></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:48"><expr pos:start="143:17" pos:end="143:47"><name pos:start="143:17" pos:end="143:36"><name pos:start="143:17" pos:end="143:17">p</name><operator pos:start="143:18" pos:end="143:18">.</operator><name pos:start="143:19" pos:end="143:36">decompress_threads</name></name> <operator pos:start="143:38" pos:end="143:38">=</operator> <name pos:start="143:40" pos:end="143:47">valueint</name></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:50"><expr pos:start="145:17" pos:end="145:49"><name pos:start="145:17" pos:end="145:38"><name pos:start="145:17" pos:end="145:17">p</name><operator pos:start="145:18" pos:end="145:18">.</operator><name pos:start="145:19" pos:end="145:38">cpu_throttle_initial</name></name> <operator pos:start="145:40" pos:end="145:40">=</operator> <name pos:start="145:42" pos:end="145:49">valueint</name></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:52"><expr pos:start="147:17" pos:end="147:51"><name pos:start="147:17" pos:end="147:40"><name pos:start="147:17" pos:end="147:17">p</name><operator pos:start="147:18" pos:end="147:18">.</operator><name pos:start="147:19" pos:end="147:40">cpu_throttle_increment</name></name> <operator pos:start="147:42" pos:end="147:42">=</operator> <name pos:start="147:44" pos:end="147:51">valueint</name></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:44"><expr pos:start="149:17" pos:end="149:43"><name pos:start="149:17" pos:end="149:32"><name pos:start="149:17" pos:end="149:17">p</name><operator pos:start="149:18" pos:end="149:18">.</operator><name pos:start="149:19" pos:end="149:32">downtime_limit</name></name> <operator pos:start="149:34" pos:end="149:34">=</operator> <name pos:start="149:36" pos:end="149:43">valueint</name></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:48"><expr pos:start="151:17" pos:end="151:47"><name pos:start="151:17" pos:end="151:36"><name pos:start="151:17" pos:end="151:17">p</name><operator pos:start="151:18" pos:end="151:18">.</operator><name pos:start="151:19" pos:end="151:36">x_checkpoint_delay</name></name> <operator pos:start="151:38" pos:end="151:38">=</operator> <name pos:start="151:40" pos:end="151:47">valueint</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="157:13" pos:end="157:49"><expr pos:start="157:13" pos:end="157:48"><call pos:start="157:13" pos:end="157:48"><name pos:start="157:13" pos:end="157:38">qmp_migrate_set_parameters</name><argument_list pos:start="157:39" pos:end="157:48">(<argument pos:start="157:40" pos:end="157:41"><expr pos:start="157:40" pos:end="157:41"><operator pos:start="157:40" pos:end="157:40">&amp;</operator><name pos:start="157:41" pos:end="157:41">p</name></expr></argument>, <argument pos:start="157:44" pos:end="157:47"><expr pos:start="157:44" pos:end="157:47"><operator pos:start="157:44" pos:end="157:44">&amp;</operator><name pos:start="157:45" pos:end="157:47">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="159:13" pos:end="159:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="167:5" pos:end="171:5"><if pos:start="167:5" pos:end="171:5">if <condition pos:start="167:8" pos:end="167:38">(<expr pos:start="167:9" pos:end="167:37"><name pos:start="167:9" pos:end="167:9">i</name> <operator pos:start="167:11" pos:end="167:12">==</operator> <name pos:start="167:14" pos:end="167:37">MIGRATION_PARAMETER__MAX</name></expr>)</condition> <block pos:start="167:40" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:56">

        <expr_stmt pos:start="169:9" pos:end="169:56"><expr pos:start="169:9" pos:end="169:55"><call pos:start="169:9" pos:end="169:55"><name pos:start="169:9" pos:end="169:18">error_setg</name><argument_list pos:start="169:19" pos:end="169:55">(<argument pos:start="169:20" pos:end="169:23"><expr pos:start="169:20" pos:end="169:23"><operator pos:start="169:20" pos:end="169:20">&amp;</operator><name pos:start="169:21" pos:end="169:23">err</name></expr></argument>, <argument pos:start="169:26" pos:end="169:47"><expr pos:start="169:26" pos:end="169:47"><name pos:start="169:26" pos:end="169:47">QERR_INVALID_PARAMETER</name></expr></argument>, <argument pos:start="169:50" pos:end="169:54"><expr pos:start="169:50" pos:end="169:54"><name pos:start="169:50" pos:end="169:54">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



 <label pos:start="175:2" pos:end="175:9"><name pos:start="175:2" pos:end="175:8">cleanup</name>:</label>

    <if_stmt pos:start="177:5" pos:end="181:5"><if pos:start="177:5" pos:end="181:5">if <condition pos:start="177:8" pos:end="177:12">(<expr pos:start="177:9" pos:end="177:11"><name pos:start="177:9" pos:end="177:11">err</name></expr>)</condition> <block pos:start="177:14" pos:end="181:5">{<block_content pos:start="179:9" pos:end="179:30">

        <expr_stmt pos:start="179:9" pos:end="179:30"><expr pos:start="179:9" pos:end="179:29"><call pos:start="179:9" pos:end="179:29"><name pos:start="179:9" pos:end="179:24">error_report_err</name><argument_list pos:start="179:25" pos:end="179:29">(<argument pos:start="179:26" pos:end="179:28"><expr pos:start="179:26" pos:end="179:28"><name pos:start="179:26" pos:end="179:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
