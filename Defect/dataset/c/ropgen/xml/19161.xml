<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19161.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:37">bdrv_start_throttled_reqs</name><parameter_list pos:start="1:38" pos:end="1:59">(<parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:54">BlockDriverState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:19">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">bool</name></type> <name pos:start="5:10" pos:end="5:16">drained</name> <init pos:start="5:18" pos:end="5:24">= <expr pos:start="5:20" pos:end="5:24"><name pos:start="5:20" pos:end="5:24">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:16">enabled</name> <init pos:start="7:18" pos:end="7:40">= <expr pos:start="7:20" pos:end="7:40"><name pos:start="7:20" pos:end="7:40"><name pos:start="7:20" pos:end="7:21">bs</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:40">io_limits_enabled</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:6">bs</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:25">io_limits_enabled</name></name> <operator pos:start="13:27" pos:end="13:27">=</operator> <name pos:start="13:29" pos:end="13:33">false</name></expr>;</expr_stmt>



    <for pos:start="17:5" pos:end="25:5">for <control pos:start="17:9" pos:end="17:27">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:21"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <literal type="number" pos:start="17:21" pos:end="17:21">2</literal></expr>;</condition> <incr pos:start="17:24" pos:end="17:26"><expr pos:start="17:24" pos:end="17:26"><name pos:start="17:24" pos:end="17:24">i</name><operator pos:start="17:25" pos:end="17:26">++</operator></expr></incr>)</control> <block pos:start="17:29" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:9">

        <while pos:start="19:9" pos:end="23:9">while <condition pos:start="19:15" pos:end="19:58">(<expr pos:start="19:16" pos:end="19:57"><call pos:start="19:16" pos:end="19:57"><name pos:start="19:16" pos:end="19:33">qemu_co_enter_next</name><argument_list pos:start="19:34" pos:end="19:57">(<argument pos:start="19:35" pos:end="19:56"><expr pos:start="19:35" pos:end="19:56"><operator pos:start="19:35" pos:end="19:35">&amp;</operator><name pos:start="19:36" pos:end="19:56"><name pos:start="19:36" pos:end="19:37">bs</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:53">throttled_reqs</name><index pos:start="19:54" pos:end="19:56">[<expr pos:start="19:55" pos:end="19:55"><name pos:start="19:55" pos:end="19:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:60" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:27">

            <expr_stmt pos:start="21:13" pos:end="21:27"><expr pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:19">drained</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:26">true</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></for>



    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:6">bs</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:25">io_limits_enabled</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:35">enabled</name></expr>;</expr_stmt>



    <return pos:start="33:5" pos:end="33:19">return <expr pos:start="33:12" pos:end="33:18"><name pos:start="33:12" pos:end="33:18">drained</name></expr>;</return>

</block_content>}</block></function>
</unit>
