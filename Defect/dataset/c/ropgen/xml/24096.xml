<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24096.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:66"><name pos:start="1:1" pos:end="1:8">eth_read</name><argument_list pos:start="1:9" pos:end="1:66">(<argument pos:start="1:10" pos:end="1:21">void *opaque</argument>, <argument pos:start="1:24" pos:end="1:46">target_phys_addr_t addr</argument>, <argument pos:start="1:49" pos:end="1:65">unsigned int size</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:9" pos:end="33:17">

	<decl_stmt pos:start="5:9" pos:end="5:36"><decl pos:start="5:9" pos:end="5:35"><type pos:start="5:9" pos:end="5:23"><name pos:start="5:9" pos:end="5:21"><name pos:start="5:9" pos:end="5:14">struct</name> <name pos:start="5:16" pos:end="5:21">fs_eth</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">eth</name> <init pos:start="5:28" pos:end="5:35">= <expr pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:35">opaque</name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:23"><decl pos:start="7:9" pos:end="7:22"><type pos:start="7:9" pos:end="7:16"><name pos:start="7:9" pos:end="7:16">uint32_t</name></type> <name pos:start="7:18" pos:end="7:18">r</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">0</literal></expr></init></decl>;</decl_stmt>



	<expr_stmt pos:start="11:9" pos:end="11:19"><expr pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:12">addr</name> <operator pos:start="11:14" pos:end="11:16">&gt;&gt;=</operator> <literal type="number" pos:start="11:18" pos:end="11:18">2</literal></expr>;</expr_stmt>



	<switch pos:start="15:9" pos:end="31:9">switch <condition pos:start="15:16" pos:end="15:21">(<expr pos:start="15:17" pos:end="15:20"><name pos:start="15:17" pos:end="15:20">addr</name></expr>)</condition> <block pos:start="15:23" pos:end="31:9">{<block_content pos:start="17:17" pos:end="29:22">

		<case pos:start="17:17" pos:end="17:28">case <expr pos:start="17:22" pos:end="17:27"><name pos:start="17:22" pos:end="17:27">R_STAT</name></expr>:</case>

			<expr_stmt pos:start="19:25" pos:end="19:51"><expr pos:start="19:25" pos:end="19:50"><name pos:start="19:25" pos:end="19:25">r</name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:46"><name pos:start="19:29" pos:end="19:31">eth</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:41">mdio_bus</name><operator pos:start="19:42" pos:end="19:42">.</operator><name pos:start="19:43" pos:end="19:46">mdio</name></name> <operator pos:start="19:48" pos:end="19:48">&amp;</operator> <literal type="number" pos:start="19:50" pos:end="19:50">1</literal></expr>;</expr_stmt>

			<break pos:start="21:25" pos:end="21:30">break;</break>

	<default pos:start="23:9" pos:end="23:16">default:</default>

		<expr_stmt pos:start="25:17" pos:end="25:36"><expr pos:start="25:17" pos:end="25:35"><name pos:start="25:17" pos:end="25:17">r</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:35"><name pos:start="25:21" pos:end="25:23">eth</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:29">regs</name><index pos:start="25:30" pos:end="25:35">[<expr pos:start="25:31" pos:end="25:34"><name pos:start="25:31" pos:end="25:34">addr</name></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="27:17" pos:end="27:58"><expr pos:start="27:17" pos:end="27:57"><call pos:start="27:17" pos:end="27:57"><name pos:start="27:17" pos:end="27:17">D</name><argument_list pos:start="27:18" pos:end="27:57">(<argument pos:start="27:19" pos:end="27:56"><expr pos:start="27:19" pos:end="27:56"><call pos:start="27:19" pos:end="27:56"><name pos:start="27:19" pos:end="27:24">printf</name> <argument_list pos:start="27:26" pos:end="27:56">(<argument pos:start="27:27" pos:end="27:35"><expr pos:start="27:27" pos:end="27:35"><literal type="string" pos:start="27:27" pos:end="27:35">"%s %x\n"</literal></expr></argument>, <argument pos:start="27:38" pos:end="27:45"><expr pos:start="27:38" pos:end="27:45"><name pos:start="27:38" pos:end="27:45">__func__</name></expr></argument>, <argument pos:start="27:48" pos:end="27:55"><expr pos:start="27:48" pos:end="27:55"><name pos:start="27:48" pos:end="27:51">addr</name> <operator pos:start="27:53" pos:end="27:53">*</operator> <literal type="number" pos:start="27:55" pos:end="27:55">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="29:17" pos:end="29:22">break;</break>

	</block_content>}</block></switch>

	<return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">r</name></expr>;</return>

</block_content>}</block>
</unit>
