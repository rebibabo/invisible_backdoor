<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11563.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:16">flat</name><parameter_list pos:start="1:17" pos:end="3:70">(<parameter pos:start="1:18" pos:end="1:35"><decl pos:start="1:18" pos:end="1:35"><type pos:start="1:18" pos:end="1:35"><name pos:start="1:18" pos:end="1:32">WaveformContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:48"><decl pos:start="1:38" pos:end="1:48"><type pos:start="1:38" pos:end="1:48"><name pos:start="1:38" pos:end="1:44">AVFrame</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">in</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:57">AVFrame</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">out</name></decl></parameter>,

                 <parameter pos:start="3:18" pos:end="3:30"><decl pos:start="3:18" pos:end="3:30"><type pos:start="3:18" pos:end="3:30"><name pos:start="3:18" pos:end="3:20">int</name></type> <name pos:start="3:22" pos:end="3:30">component</name></decl></parameter>, <parameter pos:start="3:33" pos:end="3:45"><decl pos:start="3:33" pos:end="3:45"><type pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:45">intensity</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:57"><decl pos:start="3:48" pos:end="3:57"><type pos:start="3:48" pos:end="3:57"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:57">offset</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:69"><decl pos:start="3:60" pos:end="3:69"><type pos:start="3:60" pos:end="3:69"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:69">column</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="193:1">{<block_content pos:start="7:5" pos:end="191:52">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">plane</name> <init pos:start="7:21" pos:end="7:52">= <expr pos:start="7:23" pos:end="7:52"><name pos:start="7:23" pos:end="7:46"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:29">desc</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:35">comp</name><index pos:start="7:36" pos:end="7:46">[<expr pos:start="7:37" pos:end="7:45"><name pos:start="7:37" pos:end="7:45">component</name></expr>]</index></name><operator pos:start="7:47" pos:end="7:47">.</operator><name pos:start="7:48" pos:end="7:52">plane</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:20">mirror</name> <init pos:start="9:22" pos:end="9:32">= <expr pos:start="9:24" pos:end="9:32"><name pos:start="9:24" pos:end="9:32"><name pos:start="9:24" pos:end="9:24">s</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">mirror</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:54"><decl pos:start="11:5" pos:end="11:53"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:25">c0_linesize</name> <init pos:start="11:27" pos:end="11:53">= <expr pos:start="11:29" pos:end="11:53"><name pos:start="11:29" pos:end="11:53"><name pos:start="11:29" pos:end="11:30">in</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:40">linesize</name><index pos:start="11:41" pos:end="11:53">[ <expr pos:start="11:43" pos:end="11:51"><name pos:start="11:43" pos:end="11:47">plane</name> <operator pos:start="11:49" pos:end="11:49">+</operator> <literal type="number" pos:start="11:51" pos:end="11:51">0</literal></expr> ]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:65"><decl pos:start="13:5" pos:end="13:64"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:25">c1_linesize</name> <init pos:start="13:27" pos:end="13:64">= <expr pos:start="13:29" pos:end="13:64"><name pos:start="13:29" pos:end="13:64"><name pos:start="13:29" pos:end="13:30">in</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:40">linesize</name><index pos:start="13:41" pos:end="13:64">[<expr pos:start="13:42" pos:end="13:63"><operator pos:start="13:42" pos:end="13:42">(</operator><name pos:start="13:43" pos:end="13:47">plane</name> <operator pos:start="13:49" pos:end="13:49">+</operator> <literal type="number" pos:start="13:51" pos:end="13:51">1</literal><operator pos:start="13:52" pos:end="13:52">)</operator> <operator pos:start="13:54" pos:end="13:54">%</operator> <name pos:start="13:56" pos:end="13:63"><name pos:start="13:56" pos:end="13:56">s</name><operator pos:start="13:57" pos:end="13:58">-&gt;</operator><name pos:start="13:59" pos:end="13:63">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:65"><decl pos:start="15:5" pos:end="15:64"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:25">c2_linesize</name> <init pos:start="15:27" pos:end="15:64">= <expr pos:start="15:29" pos:end="15:64"><name pos:start="15:29" pos:end="15:64"><name pos:start="15:29" pos:end="15:30">in</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:40">linesize</name><index pos:start="15:41" pos:end="15:64">[<expr pos:start="15:42" pos:end="15:63"><operator pos:start="15:42" pos:end="15:42">(</operator><name pos:start="15:43" pos:end="15:47">plane</name> <operator pos:start="15:49" pos:end="15:49">+</operator> <literal type="number" pos:start="15:51" pos:end="15:51">2</literal><operator pos:start="15:52" pos:end="15:52">)</operator> <operator pos:start="15:54" pos:end="15:54">%</operator> <name pos:start="15:56" pos:end="15:63"><name pos:start="15:56" pos:end="15:56">s</name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:63">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:55"><decl pos:start="17:5" pos:end="17:54"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:25">d0_linesize</name> <init pos:start="17:27" pos:end="17:54">= <expr pos:start="17:29" pos:end="17:54"><name pos:start="17:29" pos:end="17:54"><name pos:start="17:29" pos:end="17:31">out</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:41">linesize</name><index pos:start="17:42" pos:end="17:54">[ <expr pos:start="17:44" pos:end="17:52"><name pos:start="17:44" pos:end="17:48">plane</name> <operator pos:start="17:50" pos:end="17:50">+</operator> <literal type="number" pos:start="17:52" pos:end="17:52">0</literal></expr> ]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:66"><decl pos:start="19:5" pos:end="19:65"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:25">d1_linesize</name> <init pos:start="19:27" pos:end="19:65">= <expr pos:start="19:29" pos:end="19:65"><name pos:start="19:29" pos:end="19:65"><name pos:start="19:29" pos:end="19:31">out</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:41">linesize</name><index pos:start="19:42" pos:end="19:65">[<expr pos:start="19:43" pos:end="19:64"><operator pos:start="19:43" pos:end="19:43">(</operator><name pos:start="19:44" pos:end="19:48">plane</name> <operator pos:start="19:50" pos:end="19:50">+</operator> <literal type="number" pos:start="19:52" pos:end="19:52">1</literal><operator pos:start="19:53" pos:end="19:53">)</operator> <operator pos:start="19:55" pos:end="19:55">%</operator> <name pos:start="19:57" pos:end="19:64"><name pos:start="19:57" pos:end="19:57">s</name><operator pos:start="19:58" pos:end="19:59">-&gt;</operator><name pos:start="19:60" pos:end="19:64">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:36"><decl pos:start="21:5" pos:end="21:35"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:17">max</name> <init pos:start="21:19" pos:end="21:35">= <expr pos:start="21:21" pos:end="21:35"><literal type="number" pos:start="21:21" pos:end="21:25">255</literal> <operator pos:start="21:25" pos:end="21:25">-</operator> <name pos:start="21:27" pos:end="21:35">intensity</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:33"><decl pos:start="23:5" pos:end="23:32"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:19">src_h</name> <init pos:start="23:21" pos:end="23:32">= <expr pos:start="23:23" pos:end="23:32"><name pos:start="23:23" pos:end="23:32"><name pos:start="23:23" pos:end="23:24">in</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:32">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:32"><decl pos:start="25:5" pos:end="25:31"><type pos:start="25:5" pos:end="25:13"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:13">int</name></type> <name pos:start="25:15" pos:end="25:19">src_w</name> <init pos:start="25:21" pos:end="25:31">= <expr pos:start="25:23" pos:end="25:31"><name pos:start="25:23" pos:end="25:31"><name pos:start="25:23" pos:end="25:24">in</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:31">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:13"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">x</name></decl>, <decl pos:start="27:12" pos:end="27:12"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:12" pos:end="27:12">y</name></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="185:5"><if pos:start="31:5" pos:end="101:5">if <condition pos:start="31:8" pos:end="31:15">(<expr pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:14">column</name></expr>)</condition> <block pos:start="31:17" pos:end="101:5">{<block_content pos:start="33:9" pos:end="99:9">

        <decl_stmt pos:start="33:9" pos:end="33:76"><decl pos:start="33:9" pos:end="33:75"><type pos:start="33:9" pos:end="33:17"><specifier pos:start="33:9" pos:end="33:13">const</specifier> <name pos:start="33:15" pos:end="33:17">int</name></type> <name pos:start="33:19" pos:end="33:36">d0_signed_linesize</name> <init pos:start="33:38" pos:end="33:75">= <expr pos:start="33:40" pos:end="33:75"><name pos:start="33:40" pos:end="33:50">d0_linesize</name> <operator pos:start="33:52" pos:end="33:52">*</operator> <operator pos:start="33:54" pos:end="33:54">(</operator><ternary pos:start="33:55" pos:end="33:74"><condition pos:start="33:55" pos:end="33:67"><expr pos:start="33:55" pos:end="33:65"><name pos:start="33:55" pos:end="33:60">mirror</name> <operator pos:start="33:62" pos:end="33:63">==</operator> <literal type="number" pos:start="33:65" pos:end="33:65">1</literal></expr> ?</condition><then pos:start="33:69" pos:end="33:70"> <expr pos:start="33:69" pos:end="33:70"><operator pos:start="33:69" pos:end="33:69">-</operator><literal type="number" pos:start="33:70" pos:end="33:70">1</literal></expr> </then><else pos:start="33:72" pos:end="33:74">: <expr pos:start="33:74" pos:end="33:74"><literal type="number" pos:start="33:74" pos:end="33:74">1</literal></expr></else></ternary><operator pos:start="33:75" pos:end="33:75">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:76"><decl pos:start="35:9" pos:end="35:75"><type pos:start="35:9" pos:end="35:17"><specifier pos:start="35:9" pos:end="35:13">const</specifier> <name pos:start="35:15" pos:end="35:17">int</name></type> <name pos:start="35:19" pos:end="35:36">d1_signed_linesize</name> <init pos:start="35:38" pos:end="35:75">= <expr pos:start="35:40" pos:end="35:75"><name pos:start="35:40" pos:end="35:50">d1_linesize</name> <operator pos:start="35:52" pos:end="35:52">*</operator> <operator pos:start="35:54" pos:end="35:54">(</operator><ternary pos:start="35:55" pos:end="35:74"><condition pos:start="35:55" pos:end="35:67"><expr pos:start="35:55" pos:end="35:65"><name pos:start="35:55" pos:end="35:60">mirror</name> <operator pos:start="35:62" pos:end="35:63">==</operator> <literal type="number" pos:start="35:65" pos:end="35:65">1</literal></expr> ?</condition><then pos:start="35:69" pos:end="35:70"> <expr pos:start="35:69" pos:end="35:70"><operator pos:start="35:69" pos:end="35:69">-</operator><literal type="number" pos:start="35:70" pos:end="35:70">1</literal></expr> </then><else pos:start="35:72" pos:end="35:74">: <expr pos:start="35:74" pos:end="35:74"><literal type="number" pos:start="35:74" pos:end="35:74">1</literal></expr></else></ternary><operator pos:start="35:75" pos:end="35:75">)</operator></expr></init></decl>;</decl_stmt>



        <for pos:start="39:9" pos:end="99:9">for <control pos:start="39:13" pos:end="39:35">(<init pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">x</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</init> <condition pos:start="39:21" pos:end="39:30"><expr pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:21">x</name> <operator pos:start="39:23" pos:end="39:23">&lt;</operator> <name pos:start="39:25" pos:end="39:29">src_w</name></expr>;</condition> <incr pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:32">x</name><operator pos:start="39:33" pos:end="39:34">++</operator></expr></incr>)</control> <block pos:start="39:37" pos:end="99:9">{<block_content pos:start="41:13" pos:end="97:13">

            <decl_stmt pos:start="41:13" pos:end="41:57"><decl pos:start="41:13" pos:end="41:56"><type pos:start="41:13" pos:end="41:27"><specifier pos:start="41:13" pos:end="41:17">const</specifier> <name pos:start="41:19" pos:end="41:25">uint8_t</name> <modifier pos:start="41:27" pos:end="41:27">*</modifier></type><name pos:start="41:28" pos:end="41:34">c0_data</name> <init pos:start="41:36" pos:end="41:56">= <expr pos:start="41:38" pos:end="41:56"><name pos:start="41:38" pos:end="41:56"><name pos:start="41:38" pos:end="41:39">in</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:45">data</name><index pos:start="41:46" pos:end="41:56">[<expr pos:start="41:47" pos:end="41:55"><name pos:start="41:47" pos:end="41:51">plane</name> <operator pos:start="41:53" pos:end="41:53">+</operator> <literal type="number" pos:start="41:55" pos:end="41:55">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:70"><decl pos:start="43:13" pos:end="43:69"><type pos:start="43:13" pos:end="43:27"><specifier pos:start="43:13" pos:end="43:17">const</specifier> <name pos:start="43:19" pos:end="43:25">uint8_t</name> <modifier pos:start="43:27" pos:end="43:27">*</modifier></type><name pos:start="43:28" pos:end="43:34">c1_data</name> <init pos:start="43:36" pos:end="43:69">= <expr pos:start="43:38" pos:end="43:69"><name pos:start="43:38" pos:end="43:69"><name pos:start="43:38" pos:end="43:39">in</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:45">data</name><index pos:start="43:46" pos:end="43:69">[<expr pos:start="43:47" pos:end="43:68"><operator pos:start="43:47" pos:end="43:47">(</operator><name pos:start="43:48" pos:end="43:52">plane</name> <operator pos:start="43:54" pos:end="43:54">+</operator> <literal type="number" pos:start="43:56" pos:end="43:56">1</literal><operator pos:start="43:57" pos:end="43:57">)</operator> <operator pos:start="43:59" pos:end="43:59">%</operator> <name pos:start="43:61" pos:end="43:68"><name pos:start="43:61" pos:end="43:61">s</name><operator pos:start="43:62" pos:end="43:63">-&gt;</operator><name pos:start="43:64" pos:end="43:68">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="45:13" pos:end="45:70"><decl pos:start="45:13" pos:end="45:69"><type pos:start="45:13" pos:end="45:27"><specifier pos:start="45:13" pos:end="45:17">const</specifier> <name pos:start="45:19" pos:end="45:25">uint8_t</name> <modifier pos:start="45:27" pos:end="45:27">*</modifier></type><name pos:start="45:28" pos:end="45:34">c2_data</name> <init pos:start="45:36" pos:end="45:69">= <expr pos:start="45:38" pos:end="45:69"><name pos:start="45:38" pos:end="45:69"><name pos:start="45:38" pos:end="45:39">in</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:45">data</name><index pos:start="45:46" pos:end="45:69">[<expr pos:start="45:47" pos:end="45:68"><operator pos:start="45:47" pos:end="45:47">(</operator><name pos:start="45:48" pos:end="45:52">plane</name> <operator pos:start="45:54" pos:end="45:54">+</operator> <literal type="number" pos:start="45:56" pos:end="45:56">2</literal><operator pos:start="45:57" pos:end="45:57">)</operator> <operator pos:start="45:59" pos:end="45:59">%</operator> <name pos:start="45:61" pos:end="45:68"><name pos:start="45:61" pos:end="45:61">s</name><operator pos:start="45:62" pos:end="45:63">-&gt;</operator><name pos:start="45:64" pos:end="45:68">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:71"><decl pos:start="47:13" pos:end="47:70"><type pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:19">uint8_t</name> <modifier pos:start="47:21" pos:end="47:21">*</modifier></type><name pos:start="47:22" pos:end="47:28">d0_data</name> <init pos:start="47:30" pos:end="47:70">= <expr pos:start="47:32" pos:end="47:70"><name pos:start="47:32" pos:end="47:47"><name pos:start="47:32" pos:end="47:34">out</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:40">data</name><index pos:start="47:41" pos:end="47:47">[<expr pos:start="47:42" pos:end="47:46"><name pos:start="47:42" pos:end="47:46">plane</name></expr>]</index></name> <operator pos:start="47:49" pos:end="47:49">+</operator> <name pos:start="47:51" pos:end="47:56">offset</name> <operator pos:start="47:58" pos:end="47:58">*</operator> <name pos:start="47:60" pos:end="47:70">d0_linesize</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:88"><decl pos:start="49:13" pos:end="49:87"><type pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:19">uint8_t</name> <modifier pos:start="49:21" pos:end="49:21">*</modifier></type><name pos:start="49:22" pos:end="49:28">d1_data</name> <init pos:start="49:30" pos:end="49:87">= <expr pos:start="49:32" pos:end="49:87"><name pos:start="49:32" pos:end="49:64"><name pos:start="49:32" pos:end="49:34">out</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:40">data</name><index pos:start="49:41" pos:end="49:64">[<expr pos:start="49:42" pos:end="49:63"><operator pos:start="49:42" pos:end="49:42">(</operator><name pos:start="49:43" pos:end="49:47">plane</name> <operator pos:start="49:49" pos:end="49:49">+</operator> <literal type="number" pos:start="49:51" pos:end="49:51">1</literal><operator pos:start="49:52" pos:end="49:52">)</operator> <operator pos:start="49:54" pos:end="49:54">%</operator> <name pos:start="49:56" pos:end="49:63"><name pos:start="49:56" pos:end="49:56">s</name><operator pos:start="49:57" pos:end="49:58">-&gt;</operator><name pos:start="49:59" pos:end="49:63">ncomp</name></name></expr>]</index></name> <operator pos:start="49:66" pos:end="49:66">+</operator> <name pos:start="49:68" pos:end="49:73">offset</name> <operator pos:start="49:75" pos:end="49:75">*</operator> <name pos:start="49:77" pos:end="49:87">d1_linesize</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:83"><decl pos:start="51:13" pos:end="51:82"><type pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:19">uint8_t</name> <modifier pos:start="51:21" pos:end="51:21">*</modifier> <specifier pos:start="51:23" pos:end="51:27">const</specifier></type> <name pos:start="51:29" pos:end="51:42">d0_bottom_line</name> <init pos:start="51:44" pos:end="51:82">= <expr pos:start="51:46" pos:end="51:82"><name pos:start="51:46" pos:end="51:52">d0_data</name> <operator pos:start="51:54" pos:end="51:54">+</operator> <name pos:start="51:56" pos:end="51:66">d0_linesize</name> <operator pos:start="51:68" pos:end="51:68">*</operator> <operator pos:start="51:70" pos:end="51:70">(</operator><name pos:start="51:71" pos:end="51:77"><name pos:start="51:71" pos:end="51:71">s</name><operator pos:start="51:72" pos:end="51:73">-&gt;</operator><name pos:start="51:74" pos:end="51:77">size</name></name> <operator pos:start="51:79" pos:end="51:79">-</operator> <literal type="number" pos:start="51:81" pos:end="51:81">1</literal><operator pos:start="51:82" pos:end="51:82">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:69"><decl pos:start="53:13" pos:end="53:68"><type pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:19">uint8_t</name> <modifier pos:start="53:21" pos:end="53:21">*</modifier> <specifier pos:start="53:23" pos:end="53:27">const</specifier></type> <name pos:start="53:29" pos:end="53:30">d0</name> <init pos:start="53:32" pos:end="53:68">= <expr pos:start="53:34" pos:end="53:68"><operator pos:start="53:34" pos:end="53:34">(</operator><ternary pos:start="53:35" pos:end="53:67"><condition pos:start="53:35" pos:end="53:42"><expr pos:start="53:35" pos:end="53:40"><name pos:start="53:35" pos:end="53:40">mirror</name></expr> ?</condition><then pos:start="53:44" pos:end="53:57"> <expr pos:start="53:44" pos:end="53:57"><name pos:start="53:44" pos:end="53:57">d0_bottom_line</name></expr> </then><else pos:start="53:59" pos:end="53:67">: <expr pos:start="53:61" pos:end="53:67"><name pos:start="53:61" pos:end="53:67">d0_data</name></expr></else></ternary><operator pos:start="53:68" pos:end="53:68">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:83"><decl pos:start="55:13" pos:end="55:82"><type pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:19">uint8_t</name> <modifier pos:start="55:21" pos:end="55:21">*</modifier> <specifier pos:start="55:23" pos:end="55:27">const</specifier></type> <name pos:start="55:29" pos:end="55:42">d1_bottom_line</name> <init pos:start="55:44" pos:end="55:82">= <expr pos:start="55:46" pos:end="55:82"><name pos:start="55:46" pos:end="55:52">d1_data</name> <operator pos:start="55:54" pos:end="55:54">+</operator> <name pos:start="55:56" pos:end="55:66">d1_linesize</name> <operator pos:start="55:68" pos:end="55:68">*</operator> <operator pos:start="55:70" pos:end="55:70">(</operator><name pos:start="55:71" pos:end="55:77"><name pos:start="55:71" pos:end="55:71">s</name><operator pos:start="55:72" pos:end="55:73">-&gt;</operator><name pos:start="55:74" pos:end="55:77">size</name></name> <operator pos:start="55:79" pos:end="55:79">-</operator> <literal type="number" pos:start="55:81" pos:end="55:81">1</literal><operator pos:start="55:82" pos:end="55:82">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="57:13" pos:end="57:69"><decl pos:start="57:13" pos:end="57:68"><type pos:start="57:13" pos:end="57:27"><name pos:start="57:13" pos:end="57:19">uint8_t</name> <modifier pos:start="57:21" pos:end="57:21">*</modifier> <specifier pos:start="57:23" pos:end="57:27">const</specifier></type> <name pos:start="57:29" pos:end="57:30">d1</name> <init pos:start="57:32" pos:end="57:68">= <expr pos:start="57:34" pos:end="57:68"><operator pos:start="57:34" pos:end="57:34">(</operator><ternary pos:start="57:35" pos:end="57:67"><condition pos:start="57:35" pos:end="57:42"><expr pos:start="57:35" pos:end="57:40"><name pos:start="57:35" pos:end="57:40">mirror</name></expr> ?</condition><then pos:start="57:44" pos:end="57:57"> <expr pos:start="57:44" pos:end="57:57"><name pos:start="57:44" pos:end="57:57">d1_bottom_line</name></expr> </then><else pos:start="57:59" pos:end="57:67">: <expr pos:start="57:61" pos:end="57:67"><name pos:start="57:61" pos:end="57:67">d1_data</name></expr></else></ternary><operator pos:start="57:68" pos:end="57:68">)</operator></expr></init></decl>;</decl_stmt>



            <for pos:start="61:13" pos:end="97:13">for <control pos:start="61:17" pos:end="61:39">(<init pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:22"><name pos:start="61:18" pos:end="61:18">y</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>;</init> <condition pos:start="61:25" pos:end="61:34"><expr pos:start="61:25" pos:end="61:33"><name pos:start="61:25" pos:end="61:25">y</name> <operator pos:start="61:27" pos:end="61:27">&lt;</operator> <name pos:start="61:29" pos:end="61:33">src_h</name></expr>;</condition> <incr pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><name pos:start="61:36" pos:end="61:36">y</name><operator pos:start="61:37" pos:end="61:38">++</operator></expr></incr>)</control> <block pos:start="61:41" pos:end="97:13">{<block_content pos:start="63:17" pos:end="95:39">

                <decl_stmt pos:start="63:17" pos:end="63:48"><decl pos:start="63:17" pos:end="63:47"><type pos:start="63:17" pos:end="63:25"><specifier pos:start="63:17" pos:end="63:21">const</specifier> <name pos:start="63:23" pos:end="63:25">int</name></type> <name pos:start="63:27" pos:end="63:28">c0</name> <init pos:start="63:30" pos:end="63:47">= <expr pos:start="63:32" pos:end="63:47"><name pos:start="63:32" pos:end="63:41"><name pos:start="63:32" pos:end="63:38">c0_data</name><index pos:start="63:39" pos:end="63:41">[<expr pos:start="63:40" pos:end="63:40"><name pos:start="63:40" pos:end="63:40">x</name></expr>]</index></name> <operator pos:start="63:43" pos:end="63:43">+</operator> <literal type="number" pos:start="63:45" pos:end="63:47">256</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="65:17" pos:end="65:81"><decl pos:start="65:17" pos:end="65:80"><type pos:start="65:17" pos:end="65:25"><specifier pos:start="65:17" pos:end="65:21">const</specifier> <name pos:start="65:23" pos:end="65:25">int</name></type> <name pos:start="65:27" pos:end="65:28">c1</name> <init pos:start="65:30" pos:end="65:80">= <expr pos:start="65:32" pos:end="65:80"><call pos:start="65:32" pos:end="65:54"><name pos:start="65:32" pos:end="65:36">FFABS</name><argument_list pos:start="65:37" pos:end="65:54">(<argument pos:start="65:38" pos:end="65:53"><expr pos:start="65:38" pos:end="65:53"><name pos:start="65:38" pos:end="65:47"><name pos:start="65:38" pos:end="65:44">c1_data</name><index pos:start="65:45" pos:end="65:47">[<expr pos:start="65:46" pos:end="65:46"><name pos:start="65:46" pos:end="65:46">x</name></expr>]</index></name> <operator pos:start="65:49" pos:end="65:49">-</operator> <literal type="number" pos:start="65:51" pos:end="65:53">128</literal></expr></argument>)</argument_list></call> <operator pos:start="65:56" pos:end="65:56">+</operator> <call pos:start="65:58" pos:end="65:80"><name pos:start="65:58" pos:end="65:62">FFABS</name><argument_list pos:start="65:63" pos:end="65:80">(<argument pos:start="65:64" pos:end="65:79"><expr pos:start="65:64" pos:end="65:79"><name pos:start="65:64" pos:end="65:73"><name pos:start="65:64" pos:end="65:70">c2_data</name><index pos:start="65:71" pos:end="65:73">[<expr pos:start="65:72" pos:end="65:72"><name pos:start="65:72" pos:end="65:72">x</name></expr>]</index></name> <operator pos:start="65:75" pos:end="65:75">-</operator> <literal type="number" pos:start="65:77" pos:end="65:79">128</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="67:17" pos:end="67:32"><decl pos:start="67:17" pos:end="67:31"><type pos:start="67:17" pos:end="67:25"><name pos:start="67:17" pos:end="67:23">uint8_t</name> <modifier pos:start="67:25" pos:end="67:25">*</modifier></type><name pos:start="67:26" pos:end="67:31">target</name></decl>;</decl_stmt>

                <decl_stmt pos:start="69:17" pos:end="69:22"><decl pos:start="69:17" pos:end="69:21"><type pos:start="69:17" pos:end="69:19"><name pos:start="69:17" pos:end="69:19">int</name></type> <name pos:start="69:21" pos:end="69:21">p</name></decl>;</decl_stmt>



                <expr_stmt pos:start="73:17" pos:end="73:58"><expr pos:start="73:17" pos:end="73:57"><name pos:start="73:17" pos:end="73:22">target</name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:27">d0</name> <operator pos:start="73:29" pos:end="73:29">+</operator> <name pos:start="73:31" pos:end="73:31">x</name> <operator pos:start="73:33" pos:end="73:33">+</operator> <name pos:start="73:35" pos:end="73:52">d0_signed_linesize</name> <operator pos:start="73:54" pos:end="73:54">*</operator> <name pos:start="73:56" pos:end="73:57">c0</name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:47"><expr pos:start="75:17" pos:end="75:46"><call pos:start="75:17" pos:end="75:46"><name pos:start="75:17" pos:end="75:22">update</name><argument_list pos:start="75:23" pos:end="75:46">(<argument pos:start="75:24" pos:end="75:29"><expr pos:start="75:24" pos:end="75:29"><name pos:start="75:24" pos:end="75:29">target</name></expr></argument>, <argument pos:start="75:32" pos:end="75:34"><expr pos:start="75:32" pos:end="75:34"><name pos:start="75:32" pos:end="75:34">max</name></expr></argument>, <argument pos:start="75:37" pos:end="75:45"><expr pos:start="75:37" pos:end="75:45"><name pos:start="75:37" pos:end="75:45">intensity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <for pos:start="79:17" pos:end="85:17">for <control pos:start="79:21" pos:end="79:51">(<init pos:start="79:22" pos:end="79:33"><expr pos:start="79:22" pos:end="79:32"><name pos:start="79:22" pos:end="79:22">p</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:27">c0</name> <operator pos:start="79:29" pos:end="79:29">-</operator> <name pos:start="79:31" pos:end="79:32">c1</name></expr>;</init> <condition pos:start="79:35" pos:end="79:46"><expr pos:start="79:35" pos:end="79:45"><name pos:start="79:35" pos:end="79:35">p</name> <operator pos:start="79:37" pos:end="79:37">&lt;</operator> <name pos:start="79:39" pos:end="79:40">c0</name> <operator pos:start="79:42" pos:end="79:42">+</operator> <name pos:start="79:44" pos:end="79:45">c1</name></expr>;</condition> <incr pos:start="79:48" pos:end="79:50"><expr pos:start="79:48" pos:end="79:50"><name pos:start="79:48" pos:end="79:48">p</name><operator pos:start="79:49" pos:end="79:50">++</operator></expr></incr>)</control> <block pos:start="79:53" pos:end="85:17">{<block_content pos:start="81:21" pos:end="83:43">

                    <expr_stmt pos:start="81:21" pos:end="81:61"><expr pos:start="81:21" pos:end="81:60"><name pos:start="81:21" pos:end="81:26">target</name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:31">d1</name> <operator pos:start="81:33" pos:end="81:33">+</operator> <name pos:start="81:35" pos:end="81:35">x</name> <operator pos:start="81:37" pos:end="81:37">+</operator> <name pos:start="81:39" pos:end="81:56">d1_signed_linesize</name> <operator pos:start="81:58" pos:end="81:58">*</operator> <name pos:start="81:60" pos:end="81:60">p</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:43"><expr pos:start="83:21" pos:end="83:42"><call pos:start="83:21" pos:end="83:42"><name pos:start="83:21" pos:end="83:26">update</name><argument_list pos:start="83:27" pos:end="83:42">(<argument pos:start="83:28" pos:end="83:33"><expr pos:start="83:28" pos:end="83:33"><name pos:start="83:28" pos:end="83:33">target</name></expr></argument>, <argument pos:start="83:36" pos:end="83:38"><expr pos:start="83:36" pos:end="83:38"><name pos:start="83:36" pos:end="83:38">max</name></expr></argument>, <argument pos:start="83:41" pos:end="83:41"><expr pos:start="83:41" pos:end="83:41"><literal type="number" pos:start="83:41" pos:end="83:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="87:17" pos:end="87:39"><expr pos:start="87:17" pos:end="87:38"><name pos:start="87:17" pos:end="87:23">c0_data</name> <operator pos:start="87:25" pos:end="87:26">+=</operator> <name pos:start="87:28" pos:end="87:38">c0_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:39"><expr pos:start="89:17" pos:end="89:38"><name pos:start="89:17" pos:end="89:23">c1_data</name> <operator pos:start="89:25" pos:end="89:26">+=</operator> <name pos:start="89:28" pos:end="89:38">c1_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:39"><expr pos:start="91:17" pos:end="91:38"><name pos:start="91:17" pos:end="91:23">c2_data</name> <operator pos:start="91:25" pos:end="91:26">+=</operator> <name pos:start="91:28" pos:end="91:38">c2_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:39"><expr pos:start="93:17" pos:end="93:38"><name pos:start="93:17" pos:end="93:23">d0_data</name> <operator pos:start="93:25" pos:end="93:26">+=</operator> <name pos:start="93:28" pos:end="93:38">d0_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:39"><expr pos:start="95:17" pos:end="95:38"><name pos:start="95:17" pos:end="95:23">d1_data</name> <operator pos:start="95:25" pos:end="95:26">+=</operator> <name pos:start="95:28" pos:end="95:38">d1_linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="101:7" pos:end="185:5">else <block pos:start="101:12" pos:end="185:5">{<block_content pos:start="103:9" pos:end="183:9">

        <decl_stmt pos:start="103:9" pos:end="103:49"><decl pos:start="103:9" pos:end="103:48"><type pos:start="103:9" pos:end="103:23"><specifier pos:start="103:9" pos:end="103:13">const</specifier> <name pos:start="103:15" pos:end="103:21">uint8_t</name> <modifier pos:start="103:23" pos:end="103:23">*</modifier></type><name pos:start="103:24" pos:end="103:30">c0_data</name> <init pos:start="103:32" pos:end="103:48">= <expr pos:start="103:34" pos:end="103:48"><name pos:start="103:34" pos:end="103:48"><name pos:start="103:34" pos:end="103:35">in</name><operator pos:start="103:36" pos:end="103:37">-&gt;</operator><name pos:start="103:38" pos:end="103:41">data</name><index pos:start="103:42" pos:end="103:48">[<expr pos:start="103:43" pos:end="103:47"><name pos:start="103:43" pos:end="103:47">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="105:9" pos:end="105:66"><decl pos:start="105:9" pos:end="105:65"><type pos:start="105:9" pos:end="105:23"><specifier pos:start="105:9" pos:end="105:13">const</specifier> <name pos:start="105:15" pos:end="105:21">uint8_t</name> <modifier pos:start="105:23" pos:end="105:23">*</modifier></type><name pos:start="105:24" pos:end="105:30">c1_data</name> <init pos:start="105:32" pos:end="105:65">= <expr pos:start="105:34" pos:end="105:65"><name pos:start="105:34" pos:end="105:65"><name pos:start="105:34" pos:end="105:35">in</name><operator pos:start="105:36" pos:end="105:37">-&gt;</operator><name pos:start="105:38" pos:end="105:41">data</name><index pos:start="105:42" pos:end="105:65">[<expr pos:start="105:43" pos:end="105:64"><operator pos:start="105:43" pos:end="105:43">(</operator><name pos:start="105:44" pos:end="105:48">plane</name> <operator pos:start="105:50" pos:end="105:50">+</operator> <literal type="number" pos:start="105:52" pos:end="105:52">1</literal><operator pos:start="105:53" pos:end="105:53">)</operator> <operator pos:start="105:55" pos:end="105:55">%</operator> <name pos:start="105:57" pos:end="105:64"><name pos:start="105:57" pos:end="105:57">s</name><operator pos:start="105:58" pos:end="105:59">-&gt;</operator><name pos:start="105:60" pos:end="105:64">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="107:9" pos:end="107:66"><decl pos:start="107:9" pos:end="107:65"><type pos:start="107:9" pos:end="107:23"><specifier pos:start="107:9" pos:end="107:13">const</specifier> <name pos:start="107:15" pos:end="107:21">uint8_t</name> <modifier pos:start="107:23" pos:end="107:23">*</modifier></type><name pos:start="107:24" pos:end="107:30">c2_data</name> <init pos:start="107:32" pos:end="107:65">= <expr pos:start="107:34" pos:end="107:65"><name pos:start="107:34" pos:end="107:65"><name pos:start="107:34" pos:end="107:35">in</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:41">data</name><index pos:start="107:42" pos:end="107:65">[<expr pos:start="107:43" pos:end="107:64"><operator pos:start="107:43" pos:end="107:43">(</operator><name pos:start="107:44" pos:end="107:48">plane</name> <operator pos:start="107:50" pos:end="107:50">+</operator> <literal type="number" pos:start="107:52" pos:end="107:52">2</literal><operator pos:start="107:53" pos:end="107:53">)</operator> <operator pos:start="107:55" pos:end="107:55">%</operator> <name pos:start="107:57" pos:end="107:64"><name pos:start="107:57" pos:end="107:57">s</name><operator pos:start="107:58" pos:end="107:59">-&gt;</operator><name pos:start="107:60" pos:end="107:64">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="109:9" pos:end="109:53"><decl pos:start="109:9" pos:end="109:52"><type pos:start="109:9" pos:end="109:17"><name pos:start="109:9" pos:end="109:15">uint8_t</name> <modifier pos:start="109:17" pos:end="109:17">*</modifier></type><name pos:start="109:18" pos:end="109:24">d0_data</name> <init pos:start="109:26" pos:end="109:52">= <expr pos:start="109:28" pos:end="109:52"><name pos:start="109:28" pos:end="109:43"><name pos:start="109:28" pos:end="109:30">out</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:36">data</name><index pos:start="109:37" pos:end="109:43">[<expr pos:start="109:38" pos:end="109:42"><name pos:start="109:38" pos:end="109:42">plane</name></expr>]</index></name> <operator pos:start="109:45" pos:end="109:45">+</operator> <name pos:start="109:47" pos:end="109:52">offset</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="111:9" pos:end="111:70"><decl pos:start="111:9" pos:end="111:69"><type pos:start="111:9" pos:end="111:17"><name pos:start="111:9" pos:end="111:15">uint8_t</name> <modifier pos:start="111:17" pos:end="111:17">*</modifier></type><name pos:start="111:18" pos:end="111:24">d1_data</name> <init pos:start="111:26" pos:end="111:69">= <expr pos:start="111:28" pos:end="111:69"><name pos:start="111:28" pos:end="111:60"><name pos:start="111:28" pos:end="111:30">out</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:36">data</name><index pos:start="111:37" pos:end="111:60">[<expr pos:start="111:38" pos:end="111:59"><operator pos:start="111:38" pos:end="111:38">(</operator><name pos:start="111:39" pos:end="111:43">plane</name> <operator pos:start="111:45" pos:end="111:45">+</operator> <literal type="number" pos:start="111:47" pos:end="111:47">1</literal><operator pos:start="111:48" pos:end="111:48">)</operator> <operator pos:start="111:50" pos:end="111:50">%</operator> <name pos:start="111:52" pos:end="111:59"><name pos:start="111:52" pos:end="111:52">s</name><operator pos:start="111:53" pos:end="111:54">-&gt;</operator><name pos:start="111:55" pos:end="111:59">ncomp</name></name></expr>]</index></name> <operator pos:start="111:62" pos:end="111:62">+</operator> <name pos:start="111:64" pos:end="111:69">offset</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="115:9" pos:end="121:9"><if pos:start="115:9" pos:end="121:9">if <condition pos:start="115:12" pos:end="115:19">(<expr pos:start="115:13" pos:end="115:18"><name pos:start="115:13" pos:end="115:18">mirror</name></expr>)</condition> <block pos:start="115:21" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:35">

            <expr_stmt pos:start="117:13" pos:end="117:35"><expr pos:start="117:13" pos:end="117:34"><name pos:start="117:13" pos:end="117:19">d0_data</name> <operator pos:start="117:21" pos:end="117:22">+=</operator> <name pos:start="117:24" pos:end="117:30"><name pos:start="117:24" pos:end="117:24">s</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:30">size</name></name> <operator pos:start="117:32" pos:end="117:32">-</operator> <literal type="number" pos:start="117:34" pos:end="117:34">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:35"><expr pos:start="119:13" pos:end="119:34"><name pos:start="119:13" pos:end="119:19">d1_data</name> <operator pos:start="119:21" pos:end="119:22">+=</operator> <name pos:start="119:24" pos:end="119:30"><name pos:start="119:24" pos:end="119:24">s</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:30">size</name></name> <operator pos:start="119:32" pos:end="119:32">-</operator> <literal type="number" pos:start="119:34" pos:end="119:34">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="125:9" pos:end="183:9">for <control pos:start="125:13" pos:end="125:35">(<init pos:start="125:14" pos:end="125:19"><expr pos:start="125:14" pos:end="125:18"><name pos:start="125:14" pos:end="125:14">y</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <literal type="number" pos:start="125:18" pos:end="125:18">0</literal></expr>;</init> <condition pos:start="125:21" pos:end="125:30"><expr pos:start="125:21" pos:end="125:29"><name pos:start="125:21" pos:end="125:21">y</name> <operator pos:start="125:23" pos:end="125:23">&lt;</operator> <name pos:start="125:25" pos:end="125:29">src_h</name></expr>;</condition> <incr pos:start="125:32" pos:end="125:34"><expr pos:start="125:32" pos:end="125:34"><name pos:start="125:32" pos:end="125:32">y</name><operator pos:start="125:33" pos:end="125:34">++</operator></expr></incr>)</control> <block pos:start="125:37" pos:end="183:9">{<block_content pos:start="127:13" pos:end="181:35">

            <for pos:start="127:13" pos:end="169:13">for <control pos:start="127:17" pos:end="127:39">(<init pos:start="127:18" pos:end="127:23"><expr pos:start="127:18" pos:end="127:22"><name pos:start="127:18" pos:end="127:18">x</name> <operator pos:start="127:20" pos:end="127:20">=</operator> <literal type="number" pos:start="127:22" pos:end="127:22">0</literal></expr>;</init> <condition pos:start="127:25" pos:end="127:34"><expr pos:start="127:25" pos:end="127:33"><name pos:start="127:25" pos:end="127:25">x</name> <operator pos:start="127:27" pos:end="127:27">&lt;</operator> <name pos:start="127:29" pos:end="127:33">src_w</name></expr>;</condition> <incr pos:start="127:36" pos:end="127:38"><expr pos:start="127:36" pos:end="127:38"><name pos:start="127:36" pos:end="127:36">x</name><operator pos:start="127:37" pos:end="127:38">++</operator></expr></incr>)</control> <block pos:start="127:41" pos:end="169:13">{<block_content pos:start="129:17" pos:end="167:17">

                <decl_stmt pos:start="129:17" pos:end="129:42"><decl pos:start="129:17" pos:end="129:41"><type pos:start="129:17" pos:end="129:19"><name pos:start="129:17" pos:end="129:19">int</name></type> <name pos:start="129:21" pos:end="129:22">c0</name> <init pos:start="129:24" pos:end="129:41">= <expr pos:start="129:26" pos:end="129:41"><name pos:start="129:26" pos:end="129:35"><name pos:start="129:26" pos:end="129:32">c0_data</name><index pos:start="129:33" pos:end="129:35">[<expr pos:start="129:34" pos:end="129:34"><name pos:start="129:34" pos:end="129:34">x</name></expr>]</index></name> <operator pos:start="129:37" pos:end="129:37">+</operator> <literal type="number" pos:start="129:39" pos:end="129:41">256</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="131:17" pos:end="131:81"><decl pos:start="131:17" pos:end="131:80"><type pos:start="131:17" pos:end="131:25"><specifier pos:start="131:17" pos:end="131:21">const</specifier> <name pos:start="131:23" pos:end="131:25">int</name></type> <name pos:start="131:27" pos:end="131:28">c1</name> <init pos:start="131:30" pos:end="131:80">= <expr pos:start="131:32" pos:end="131:80"><call pos:start="131:32" pos:end="131:54"><name pos:start="131:32" pos:end="131:36">FFABS</name><argument_list pos:start="131:37" pos:end="131:54">(<argument pos:start="131:38" pos:end="131:53"><expr pos:start="131:38" pos:end="131:53"><name pos:start="131:38" pos:end="131:47"><name pos:start="131:38" pos:end="131:44">c1_data</name><index pos:start="131:45" pos:end="131:47">[<expr pos:start="131:46" pos:end="131:46"><name pos:start="131:46" pos:end="131:46">x</name></expr>]</index></name> <operator pos:start="131:49" pos:end="131:49">-</operator> <literal type="number" pos:start="131:51" pos:end="131:53">128</literal></expr></argument>)</argument_list></call> <operator pos:start="131:56" pos:end="131:56">+</operator> <call pos:start="131:58" pos:end="131:80"><name pos:start="131:58" pos:end="131:62">FFABS</name><argument_list pos:start="131:63" pos:end="131:80">(<argument pos:start="131:64" pos:end="131:79"><expr pos:start="131:64" pos:end="131:79"><name pos:start="131:64" pos:end="131:73"><name pos:start="131:64" pos:end="131:70">c2_data</name><index pos:start="131:71" pos:end="131:73">[<expr pos:start="131:72" pos:end="131:72"><name pos:start="131:72" pos:end="131:72">x</name></expr>]</index></name> <operator pos:start="131:75" pos:end="131:75">-</operator> <literal type="number" pos:start="131:77" pos:end="131:79">128</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="133:17" pos:end="133:32"><decl pos:start="133:17" pos:end="133:31"><type pos:start="133:17" pos:end="133:25"><name pos:start="133:17" pos:end="133:23">uint8_t</name> <modifier pos:start="133:25" pos:end="133:25">*</modifier></type><name pos:start="133:26" pos:end="133:31">target</name></decl>;</decl_stmt>

                <decl_stmt pos:start="135:17" pos:end="135:22"><decl pos:start="135:17" pos:end="135:21"><type pos:start="135:17" pos:end="135:19"><name pos:start="135:17" pos:end="135:19">int</name></type> <name pos:start="135:21" pos:end="135:21">p</name></decl>;</decl_stmt>



                <if_stmt pos:start="139:17" pos:end="145:42"><if pos:start="139:17" pos:end="141:42">if <condition pos:start="139:20" pos:end="139:27">(<expr pos:start="139:21" pos:end="139:26"><name pos:start="139:21" pos:end="139:26">mirror</name></expr>)</condition><block type="pseudo" pos:start="141:21" pos:end="141:42"><block_content pos:start="141:21" pos:end="141:42">

                    <expr_stmt pos:start="141:21" pos:end="141:42"><expr pos:start="141:21" pos:end="141:41"><name pos:start="141:21" pos:end="141:26">target</name> <operator pos:start="141:28" pos:end="141:28">=</operator> <name pos:start="141:30" pos:end="141:36">d0_data</name> <operator pos:start="141:38" pos:end="141:38">-</operator> <name pos:start="141:40" pos:end="141:41">c0</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="143:17" pos:end="145:42">else<block type="pseudo" pos:start="145:21" pos:end="145:42"><block_content pos:start="145:21" pos:end="145:42">

                    <expr_stmt pos:start="145:21" pos:end="145:42"><expr pos:start="145:21" pos:end="145:41"><name pos:start="145:21" pos:end="145:26">target</name> <operator pos:start="145:28" pos:end="145:28">=</operator> <name pos:start="145:30" pos:end="145:36">d0_data</name> <operator pos:start="145:38" pos:end="145:38">+</operator> <name pos:start="145:40" pos:end="145:41">c0</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="149:17" pos:end="149:47"><expr pos:start="149:17" pos:end="149:46"><call pos:start="149:17" pos:end="149:46"><name pos:start="149:17" pos:end="149:22">update</name><argument_list pos:start="149:23" pos:end="149:46">(<argument pos:start="149:24" pos:end="149:29"><expr pos:start="149:24" pos:end="149:29"><name pos:start="149:24" pos:end="149:29">target</name></expr></argument>, <argument pos:start="149:32" pos:end="149:34"><expr pos:start="149:32" pos:end="149:34"><name pos:start="149:32" pos:end="149:34">max</name></expr></argument>, <argument pos:start="149:37" pos:end="149:45"><expr pos:start="149:37" pos:end="149:45"><name pos:start="149:37" pos:end="149:45">intensity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <for pos:start="153:17" pos:end="167:17">for <control pos:start="153:21" pos:end="153:51">(<init pos:start="153:22" pos:end="153:33"><expr pos:start="153:22" pos:end="153:32"><name pos:start="153:22" pos:end="153:22">p</name> <operator pos:start="153:24" pos:end="153:24">=</operator> <name pos:start="153:26" pos:end="153:27">c0</name> <operator pos:start="153:29" pos:end="153:29">-</operator> <name pos:start="153:31" pos:end="153:32">c1</name></expr>;</init> <condition pos:start="153:35" pos:end="153:46"><expr pos:start="153:35" pos:end="153:45"><name pos:start="153:35" pos:end="153:35">p</name> <operator pos:start="153:37" pos:end="153:37">&lt;</operator> <name pos:start="153:39" pos:end="153:40">c0</name> <operator pos:start="153:42" pos:end="153:42">+</operator> <name pos:start="153:44" pos:end="153:45">c1</name></expr>;</condition> <incr pos:start="153:48" pos:end="153:50"><expr pos:start="153:48" pos:end="153:50"><name pos:start="153:48" pos:end="153:48">p</name><operator pos:start="153:49" pos:end="153:50">++</operator></expr></incr>)</control> <block pos:start="153:53" pos:end="167:17">{<block_content pos:start="155:21" pos:end="165:43">

                    <if_stmt pos:start="155:21" pos:end="161:45"><if pos:start="155:21" pos:end="157:45">if <condition pos:start="155:24" pos:end="155:31">(<expr pos:start="155:25" pos:end="155:30"><name pos:start="155:25" pos:end="155:30">mirror</name></expr>)</condition><block type="pseudo" pos:start="157:25" pos:end="157:45"><block_content pos:start="157:25" pos:end="157:45">

                        <expr_stmt pos:start="157:25" pos:end="157:45"><expr pos:start="157:25" pos:end="157:44"><name pos:start="157:25" pos:end="157:30">target</name> <operator pos:start="157:32" pos:end="157:32">=</operator> <name pos:start="157:34" pos:end="157:40">d1_data</name> <operator pos:start="157:42" pos:end="157:42">-</operator> <name pos:start="157:44" pos:end="157:44">p</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="159:21" pos:end="161:45">else<block type="pseudo" pos:start="161:25" pos:end="161:45"><block_content pos:start="161:25" pos:end="161:45">

                        <expr_stmt pos:start="161:25" pos:end="161:45"><expr pos:start="161:25" pos:end="161:44"><name pos:start="161:25" pos:end="161:30">target</name> <operator pos:start="161:32" pos:end="161:32">=</operator> <name pos:start="161:34" pos:end="161:40">d1_data</name> <operator pos:start="161:42" pos:end="161:42">+</operator> <name pos:start="161:44" pos:end="161:44">p</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="165:21" pos:end="165:43"><expr pos:start="165:21" pos:end="165:42"><call pos:start="165:21" pos:end="165:42"><name pos:start="165:21" pos:end="165:26">update</name><argument_list pos:start="165:27" pos:end="165:42">(<argument pos:start="165:28" pos:end="165:33"><expr pos:start="165:28" pos:end="165:33"><name pos:start="165:28" pos:end="165:33">target</name></expr></argument>, <argument pos:start="165:36" pos:end="165:38"><expr pos:start="165:36" pos:end="165:38"><name pos:start="165:36" pos:end="165:38">max</name></expr></argument>, <argument pos:start="165:41" pos:end="165:41"><expr pos:start="165:41" pos:end="165:41"><literal type="number" pos:start="165:41" pos:end="165:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



            <expr_stmt pos:start="173:13" pos:end="173:35"><expr pos:start="173:13" pos:end="173:34"><name pos:start="173:13" pos:end="173:19">c0_data</name> <operator pos:start="173:21" pos:end="173:22">+=</operator> <name pos:start="173:24" pos:end="173:34">c0_linesize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:35"><expr pos:start="175:13" pos:end="175:34"><name pos:start="175:13" pos:end="175:19">c1_data</name> <operator pos:start="175:21" pos:end="175:22">+=</operator> <name pos:start="175:24" pos:end="175:34">c1_linesize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:35"><expr pos:start="177:13" pos:end="177:34"><name pos:start="177:13" pos:end="177:19">c2_data</name> <operator pos:start="177:21" pos:end="177:22">+=</operator> <name pos:start="177:24" pos:end="177:34">c2_linesize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:35"><expr pos:start="179:13" pos:end="179:34"><name pos:start="179:13" pos:end="179:19">d0_data</name> <operator pos:start="179:21" pos:end="179:22">+=</operator> <name pos:start="179:24" pos:end="179:34">d0_linesize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:35"><expr pos:start="181:13" pos:end="181:34"><name pos:start="181:13" pos:end="181:19">d1_data</name> <operator pos:start="181:21" pos:end="181:22">+=</operator> <name pos:start="181:24" pos:end="181:34">d1_linesize</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:35"><expr pos:start="189:5" pos:end="189:34"><call pos:start="189:5" pos:end="189:34"><name pos:start="189:5" pos:end="189:12">envelope</name><argument_list pos:start="189:13" pos:end="189:34">(<argument pos:start="189:14" pos:end="189:14"><expr pos:start="189:14" pos:end="189:14"><name pos:start="189:14" pos:end="189:14">s</name></expr></argument>, <argument pos:start="189:17" pos:end="189:19"><expr pos:start="189:17" pos:end="189:19"><name pos:start="189:17" pos:end="189:19">out</name></expr></argument>, <argument pos:start="189:22" pos:end="189:26"><expr pos:start="189:22" pos:end="189:26"><name pos:start="189:22" pos:end="189:26">plane</name></expr></argument>, <argument pos:start="189:29" pos:end="189:33"><expr pos:start="189:29" pos:end="189:33"><name pos:start="189:29" pos:end="189:33">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:52"><expr pos:start="191:5" pos:end="191:51"><call pos:start="191:5" pos:end="191:51"><name pos:start="191:5" pos:end="191:12">envelope</name><argument_list pos:start="191:13" pos:end="191:51">(<argument pos:start="191:14" pos:end="191:14"><expr pos:start="191:14" pos:end="191:14"><name pos:start="191:14" pos:end="191:14">s</name></expr></argument>, <argument pos:start="191:17" pos:end="191:19"><expr pos:start="191:17" pos:end="191:19"><name pos:start="191:17" pos:end="191:19">out</name></expr></argument>, <argument pos:start="191:22" pos:end="191:26"><expr pos:start="191:22" pos:end="191:26"><name pos:start="191:22" pos:end="191:26">plane</name></expr></argument>, <argument pos:start="191:29" pos:end="191:50"><expr pos:start="191:29" pos:end="191:50"><operator pos:start="191:29" pos:end="191:29">(</operator><name pos:start="191:30" pos:end="191:34">plane</name> <operator pos:start="191:36" pos:end="191:36">+</operator> <literal type="number" pos:start="191:38" pos:end="191:38">1</literal><operator pos:start="191:39" pos:end="191:39">)</operator> <operator pos:start="191:41" pos:end="191:41">%</operator> <name pos:start="191:43" pos:end="191:50"><name pos:start="191:43" pos:end="191:43">s</name><operator pos:start="191:44" pos:end="191:45">-&gt;</operator><name pos:start="191:46" pos:end="191:50">ncomp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
