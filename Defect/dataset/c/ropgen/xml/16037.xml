<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16037.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:33">aio_dispatch_handlers</name><parameter_list pos:start="1:34" pos:end="1:64">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:49"><name pos:start="1:35" pos:end="1:44">AioContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:57">HANDLE</name></type> <name pos:start="1:59" pos:end="1:63">event</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:20">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AioHandler</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">node</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:17">progress</name> <init pos:start="7:19" pos:end="7:25">= <expr pos:start="7:21" pos:end="7:25"><name pos:start="7:21" pos:end="7:25">false</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="17:7">/*

     * We have to walk very carefully in case aio_set_fd_handler is

     * called while we're walking.

     */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:8">node</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:42"><name pos:start="19:12" pos:end="19:22">QLIST_FIRST</name><argument_list pos:start="19:23" pos:end="19:42">(<argument pos:start="19:24" pos:end="19:41"><expr pos:start="19:24" pos:end="19:41"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:41"><name pos:start="19:25" pos:end="19:27">ctx</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:41">aio_handlers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="21:5" pos:end="73:5">while <condition pos:start="21:11" pos:end="21:16">(<expr pos:start="21:12" pos:end="21:15"><name pos:start="21:12" pos:end="21:15">node</name></expr>)</condition> <block pos:start="21:18" pos:end="73:5">{<block_content pos:start="23:9" pos:end="71:9">

        <decl_stmt pos:start="23:9" pos:end="23:24"><decl pos:start="23:9" pos:end="23:23"><type pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:18">AioHandler</name> <modifier pos:start="23:20" pos:end="23:20">*</modifier></type><name pos:start="23:21" pos:end="23:23">tmp</name></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:32"><expr pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">ctx</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:29">walking_handlers</name></name><operator pos:start="27:30" pos:end="27:31">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="51:9"><if pos:start="31:9" pos:end="51:9">if <condition pos:start="31:12" pos:end="35:28">(<expr pos:start="31:13" pos:end="35:27"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:26"><name pos:start="31:14" pos:end="31:17">node</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:26">deleted</name></name> <operator pos:start="31:28" pos:end="31:29">&amp;&amp;</operator>

            <operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:30"><name pos:start="33:14" pos:end="33:17">node</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:22">pfd</name><operator pos:start="33:23" pos:end="33:23">.</operator><name pos:start="33:24" pos:end="33:30">revents</name></name> <operator pos:start="33:32" pos:end="33:33">||</operator> <call pos:start="33:35" pos:end="33:68"><name pos:start="33:35" pos:end="33:59">event_notifier_get_handle</name><argument_list pos:start="33:60" pos:end="33:68">(<argument pos:start="33:61" pos:end="33:67"><expr pos:start="33:61" pos:end="33:67"><name pos:start="33:61" pos:end="33:67"><name pos:start="33:61" pos:end="33:64">node</name><operator pos:start="33:65" pos:end="33:66">-&gt;</operator><name pos:start="33:67" pos:end="33:67">e</name></name></expr></argument>)</argument_list></call> <operator pos:start="33:70" pos:end="33:71">==</operator> <name pos:start="33:73" pos:end="33:77">event</name><operator pos:start="33:78" pos:end="33:78">)</operator> <operator pos:start="33:80" pos:end="33:81">&amp;&amp;</operator>

            <name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:16">node</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:27">io_notify</name></name></expr>)</condition> <block pos:start="35:30" pos:end="51:9">{<block_content pos:start="37:13" pos:end="49:13">

            <expr_stmt pos:start="37:13" pos:end="37:34"><expr pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:16">node</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:21">pfd</name><operator pos:start="37:22" pos:end="37:22">.</operator><name pos:start="37:23" pos:end="37:29">revents</name></name> <operator pos:start="37:31" pos:end="37:31">=</operator> <literal type="number" pos:start="37:33" pos:end="37:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:37"><expr pos:start="39:13" pos:end="39:36"><call pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:16">node</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:27">io_notify</name></name><argument_list pos:start="39:28" pos:end="39:36">(<argument pos:start="39:29" pos:end="39:35"><expr pos:start="39:29" pos:end="39:35"><name pos:start="39:29" pos:end="39:35"><name pos:start="39:29" pos:end="39:32">node</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:35">e</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="43:13" pos:end="43:57">/* aio_notify() does not count as progress */</comment>

            <if_stmt pos:start="45:13" pos:end="49:13"><if pos:start="45:13" pos:end="49:13">if <condition pos:start="45:16" pos:end="45:42">(<expr pos:start="45:17" pos:end="45:41"><name pos:start="45:17" pos:end="45:23"><name pos:start="45:17" pos:end="45:20">node</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:23">e</name></name> <operator pos:start="45:25" pos:end="45:26">!=</operator> <operator pos:start="45:28" pos:end="45:28">&amp;</operator><name pos:start="45:29" pos:end="45:41"><name pos:start="45:29" pos:end="45:31">ctx</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:41">notifier</name></name></expr>)</condition> <block pos:start="45:44" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:32">

                <expr_stmt pos:start="47:17" pos:end="47:32"><expr pos:start="47:17" pos:end="47:31"><name pos:start="47:17" pos:end="47:24">progress</name> <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:31">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:19"><expr pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">tmp</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:18">node</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:38"><expr pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:12">node</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:37"><name pos:start="57:16" pos:end="57:25">QLIST_NEXT</name><argument_list pos:start="57:26" pos:end="57:37">(<argument pos:start="57:27" pos:end="57:30"><expr pos:start="57:27" pos:end="57:30"><name pos:start="57:27" pos:end="57:30">node</name></expr></argument>, <argument pos:start="57:33" pos:end="57:36"><expr pos:start="57:33" pos:end="57:36"><name pos:start="57:33" pos:end="57:36">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:11">ctx</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:29">walking_handlers</name></name><operator pos:start="61:30" pos:end="61:31">--</operator></expr>;</expr_stmt>



        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:51">(<expr pos:start="65:13" pos:end="65:50"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:34"><name pos:start="65:14" pos:end="65:16">ctx</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:34">walking_handlers</name></name> <operator pos:start="65:36" pos:end="65:37">&amp;&amp;</operator> <name pos:start="65:39" pos:end="65:50"><name pos:start="65:39" pos:end="65:41">tmp</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:50">deleted</name></name></expr>)</condition> <block pos:start="65:53" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:24">

            <expr_stmt pos:start="67:13" pos:end="67:36"><expr pos:start="67:13" pos:end="67:35"><call pos:start="67:13" pos:end="67:35"><name pos:start="67:13" pos:end="67:24">QLIST_REMOVE</name><argument_list pos:start="67:25" pos:end="67:35">(<argument pos:start="67:26" pos:end="67:28"><expr pos:start="67:26" pos:end="67:28"><name pos:start="67:26" pos:end="67:28">tmp</name></expr></argument>, <argument pos:start="67:31" pos:end="67:34"><expr pos:start="67:31" pos:end="67:34"><name pos:start="67:31" pos:end="67:34">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:24"><expr pos:start="69:13" pos:end="69:23"><call pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:18">g_free</name><argument_list pos:start="69:19" pos:end="69:23">(<argument pos:start="69:20" pos:end="69:22"><expr pos:start="69:20" pos:end="69:22"><name pos:start="69:20" pos:end="69:22">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="77:5" pos:end="77:20">return <expr pos:start="77:12" pos:end="77:19"><name pos:start="77:12" pos:end="77:19">progress</name></expr>;</return>

</block_content>}</block></function>
</unit>
