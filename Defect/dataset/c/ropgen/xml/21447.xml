<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21447.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">monitor_parse</name><parameter_list pos:start="1:25" pos:end="1:45">(<parameter pos:start="1:26" pos:end="1:44"><decl pos:start="1:26" pos:end="1:44"><type pos:start="1:26" pos:end="1:37"><specifier pos:start="1:26" pos:end="1:30">const</specifier> <name pos:start="1:32" pos:end="1:35">char</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:44">devname</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:20">index</name> <init pos:start="5:22" pos:end="5:24">= <expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:18"><name pos:start="7:10" pos:end="7:14">label</name><index pos:start="7:15" pos:end="7:18">[<expr pos:start="7:16" pos:end="7:17"><literal type="number" pos:start="7:16" pos:end="7:17">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:37">(<expr pos:start="11:9" pos:end="11:36"><call pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:14">strcmp</name><argument_list pos:start="11:15" pos:end="11:31">(<argument pos:start="11:16" pos:end="11:22"><expr pos:start="11:16" pos:end="11:22"><name pos:start="11:16" pos:end="11:22">devname</name></expr></argument>, <argument pos:start="11:25" pos:end="11:30"><expr pos:start="11:25" pos:end="11:30"><literal type="string" pos:start="11:25" pos:end="11:30">"none"</literal></expr></argument>)</argument_list></call> <operator pos:start="11:33" pos:end="11:34">==</operator> <literal type="number" pos:start="11:36" pos:end="11:36">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:37">(<expr pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:13">index</name> <operator pos:start="15:15" pos:end="15:16">==</operator> <name pos:start="15:18" pos:end="15:36">MAX_MONITOR_DEVICES</name></expr>)</condition> <block pos:start="15:39" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:16">

        <expr_stmt pos:start="17:9" pos:end="17:60"><expr pos:start="17:9" pos:end="17:59"><call pos:start="17:9" pos:end="17:59"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="17:59">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="17:58"><expr pos:start="17:25" pos:end="17:58"><literal type="string" pos:start="17:25" pos:end="17:58">"qemu: too many monitor devices\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:16"><expr pos:start="19:9" pos:end="19:15"><call pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:12">exit</name><argument_list pos:start="19:13" pos:end="19:15">(<argument pos:start="19:14" pos:end="19:14"><expr pos:start="19:14" pos:end="19:14"><literal type="number" pos:start="19:14" pos:end="19:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:13">index</name> <operator pos:start="23:15" pos:end="23:16">==</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>)</condition> <block pos:start="23:21" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:50">

        <expr_stmt pos:start="25:9" pos:end="25:50"><expr pos:start="25:9" pos:end="25:49"><call pos:start="25:9" pos:end="25:49"><name pos:start="25:9" pos:end="25:16">snprintf</name><argument_list pos:start="25:17" pos:end="25:49">(<argument pos:start="25:18" pos:end="25:22"><expr pos:start="25:18" pos:end="25:22"><name pos:start="25:18" pos:end="25:22">label</name></expr></argument>, <argument pos:start="25:25" pos:end="25:37"><expr pos:start="25:25" pos:end="25:37"><sizeof pos:start="25:25" pos:end="25:37">sizeof<argument_list pos:start="25:31" pos:end="25:37">(<argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><name pos:start="25:32" pos:end="25:36">label</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:40" pos:end="25:48"><expr pos:start="25:40" pos:end="25:48"><literal type="string" pos:start="25:40" pos:end="25:48">"monitor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="31:5">else <block pos:start="27:12" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:59">

        <expr_stmt pos:start="29:9" pos:end="29:59"><expr pos:start="29:9" pos:end="29:58"><call pos:start="29:9" pos:end="29:58"><name pos:start="29:9" pos:end="29:16">snprintf</name><argument_list pos:start="29:17" pos:end="29:58">(<argument pos:start="29:18" pos:end="29:22"><expr pos:start="29:18" pos:end="29:22"><name pos:start="29:18" pos:end="29:22">label</name></expr></argument>, <argument pos:start="29:25" pos:end="29:37"><expr pos:start="29:25" pos:end="29:37"><sizeof pos:start="29:25" pos:end="29:37">sizeof<argument_list pos:start="29:31" pos:end="29:37">(<argument pos:start="29:32" pos:end="29:36"><expr pos:start="29:32" pos:end="29:36"><name pos:start="29:32" pos:end="29:36">label</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:40" pos:end="29:50"><expr pos:start="29:40" pos:end="29:50"><literal type="string" pos:start="29:40" pos:end="29:50">"monitor%d"</literal></expr></argument>, <argument pos:start="29:53" pos:end="29:57"><expr pos:start="29:53" pos:end="29:57"><name pos:start="29:53" pos:end="29:57">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:61"><expr pos:start="33:5" pos:end="33:60"><name pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:15">monitor_hds</name><index pos:start="33:16" pos:end="33:22">[<expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:21">index</name></expr>]</index></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <call pos:start="33:26" pos:end="33:60"><name pos:start="33:26" pos:end="33:38">qemu_chr_open</name><argument_list pos:start="33:39" pos:end="33:60">(<argument pos:start="33:40" pos:end="33:44"><expr pos:start="33:40" pos:end="33:44"><name pos:start="33:40" pos:end="33:44">label</name></expr></argument>, <argument pos:start="33:47" pos:end="33:53"><expr pos:start="33:47" pos:end="33:53"><name pos:start="33:47" pos:end="33:53">devname</name></expr></argument>, <argument pos:start="33:56" pos:end="33:59"><expr pos:start="33:56" pos:end="33:59"><name pos:start="33:56" pos:end="33:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:28">(<expr pos:start="35:9" pos:end="35:27"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:27"><name pos:start="35:10" pos:end="35:20">monitor_hds</name><index pos:start="35:21" pos:end="35:27">[<expr pos:start="35:22" pos:end="35:26"><name pos:start="35:22" pos:end="35:26">index</name></expr>]</index></name></expr>)</condition> <block pos:start="35:30" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:18">

        <expr_stmt pos:start="37:9" pos:end="39:25"><expr pos:start="37:9" pos:end="39:24"><call pos:start="37:9" pos:end="39:24"><name pos:start="37:9" pos:end="37:15">fprintf</name><argument_list pos:start="37:16" pos:end="39:24">(<argument pos:start="37:17" pos:end="37:22"><expr pos:start="37:17" pos:end="37:22"><name pos:start="37:17" pos:end="37:22">stderr</name></expr></argument>, <argument pos:start="37:25" pos:end="37:68"><expr pos:start="37:25" pos:end="37:68"><literal type="string" pos:start="37:25" pos:end="37:68">"qemu: could not open monitor device '%s'\n"</literal></expr></argument>,

                <argument pos:start="39:17" pos:end="39:23"><expr pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:23">devname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:12"><expr pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:9">index</name><operator pos:start="45:10" pos:end="45:11">++</operator></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
