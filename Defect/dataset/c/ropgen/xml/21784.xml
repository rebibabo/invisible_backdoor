<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21784.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">check_itxfm</name><parameter_list pos:start="1:24" pos:end="1:29">(<parameter pos:start="1:25" pos:end="1:28"><decl pos:start="1:25" pos:end="1:28"><type pos:start="1:25" pos:end="1:28"><name pos:start="1:25" pos:end="1:28">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:20">

    <expr_stmt pos:start="5:5" pos:end="5:50"><expr pos:start="5:5" pos:end="5:49"><call pos:start="5:5" pos:end="5:49"><name pos:start="5:5" pos:end="5:20">LOCAL_ALIGNED_32</name><argument_list pos:start="5:21" pos:end="5:49">(<argument pos:start="5:22" pos:end="5:28"><expr pos:start="5:22" pos:end="5:28"><name pos:start="5:22" pos:end="5:28">uint8_t</name></expr></argument>, <argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">src</name></expr></argument>, <argument pos:start="5:36" pos:end="5:48"><expr pos:start="5:36" pos:end="5:48"><index pos:start="5:36" pos:end="5:48">[<expr pos:start="5:37" pos:end="5:47"><literal type="number" pos:start="5:37" pos:end="5:38">32</literal> <operator pos:start="5:40" pos:end="5:40">*</operator> <literal type="number" pos:start="5:42" pos:end="5:43">32</literal> <operator pos:start="5:45" pos:end="5:45">*</operator> <literal type="number" pos:start="5:47" pos:end="5:47">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:50"><expr pos:start="7:5" pos:end="7:49"><call pos:start="7:5" pos:end="7:49"><name pos:start="7:5" pos:end="7:20">LOCAL_ALIGNED_32</name><argument_list pos:start="7:21" pos:end="7:49">(<argument pos:start="7:22" pos:end="7:28"><expr pos:start="7:22" pos:end="7:28"><name pos:start="7:22" pos:end="7:28">uint8_t</name></expr></argument>, <argument pos:start="7:31" pos:end="7:33"><expr pos:start="7:31" pos:end="7:33"><name pos:start="7:31" pos:end="7:33">dst</name></expr></argument>, <argument pos:start="7:36" pos:end="7:48"><expr pos:start="7:36" pos:end="7:48"><index pos:start="7:36" pos:end="7:48">[<expr pos:start="7:37" pos:end="7:47"><literal type="number" pos:start="7:37" pos:end="7:38">32</literal> <operator pos:start="7:40" pos:end="7:40">*</operator> <literal type="number" pos:start="7:42" pos:end="7:43">32</literal> <operator pos:start="7:45" pos:end="7:45">*</operator> <literal type="number" pos:start="7:47" pos:end="7:47">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:51"><expr pos:start="9:5" pos:end="9:50"><call pos:start="9:5" pos:end="9:50"><name pos:start="9:5" pos:end="9:20">LOCAL_ALIGNED_32</name><argument_list pos:start="9:21" pos:end="9:50">(<argument pos:start="9:22" pos:end="9:28"><expr pos:start="9:22" pos:end="9:28"><name pos:start="9:22" pos:end="9:28">uint8_t</name></expr></argument>, <argument pos:start="9:31" pos:end="9:34"><expr pos:start="9:31" pos:end="9:34"><name pos:start="9:31" pos:end="9:34">dst0</name></expr></argument>, <argument pos:start="9:37" pos:end="9:49"><expr pos:start="9:37" pos:end="9:49"><index pos:start="9:37" pos:end="9:49">[<expr pos:start="9:38" pos:end="9:48"><literal type="number" pos:start="9:38" pos:end="9:39">32</literal> <operator pos:start="9:41" pos:end="9:41">*</operator> <literal type="number" pos:start="9:43" pos:end="9:44">32</literal> <operator pos:start="9:46" pos:end="9:46">*</operator> <literal type="number" pos:start="9:48" pos:end="9:48">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><call pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:20">LOCAL_ALIGNED_32</name><argument_list pos:start="11:21" pos:end="11:50">(<argument pos:start="11:22" pos:end="11:28"><expr pos:start="11:22" pos:end="11:28"><name pos:start="11:22" pos:end="11:28">uint8_t</name></expr></argument>, <argument pos:start="11:31" pos:end="11:34"><expr pos:start="11:31" pos:end="11:34"><name pos:start="11:31" pos:end="11:34">dst1</name></expr></argument>, <argument pos:start="11:37" pos:end="11:49"><expr pos:start="11:37" pos:end="11:49"><index pos:start="11:37" pos:end="11:49">[<expr pos:start="11:38" pos:end="11:48"><literal type="number" pos:start="11:38" pos:end="11:39">32</literal> <operator pos:start="11:41" pos:end="11:41">*</operator> <literal type="number" pos:start="11:43" pos:end="11:44">32</literal> <operator pos:start="11:46" pos:end="11:46">*</operator> <literal type="number" pos:start="11:48" pos:end="11:48">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:51"><expr pos:start="13:5" pos:end="13:50"><call pos:start="13:5" pos:end="13:50"><name pos:start="13:5" pos:end="13:20">LOCAL_ALIGNED_32</name><argument_list pos:start="13:21" pos:end="13:50">(<argument pos:start="13:22" pos:end="13:28"><expr pos:start="13:22" pos:end="13:28"><name pos:start="13:22" pos:end="13:28">int16_t</name></expr></argument>, <argument pos:start="13:31" pos:end="13:34"><expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">coef</name></expr></argument>, <argument pos:start="13:37" pos:end="13:49"><expr pos:start="13:37" pos:end="13:49"><index pos:start="13:37" pos:end="13:49">[<expr pos:start="13:38" pos:end="13:48"><literal type="number" pos:start="13:38" pos:end="13:39">32</literal> <operator pos:start="13:41" pos:end="13:41">*</operator> <literal type="number" pos:start="13:43" pos:end="13:44">32</literal> <operator pos:start="13:46" pos:end="13:46">*</operator> <literal type="number" pos:start="13:48" pos:end="13:48">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:55"><expr pos:start="15:5" pos:end="15:54"><call pos:start="15:5" pos:end="15:54"><name pos:start="15:5" pos:end="15:20">LOCAL_ALIGNED_32</name><argument_list pos:start="15:21" pos:end="15:54">(<argument pos:start="15:22" pos:end="15:28"><expr pos:start="15:22" pos:end="15:28"><name pos:start="15:22" pos:end="15:28">int16_t</name></expr></argument>, <argument pos:start="15:31" pos:end="15:38"><expr pos:start="15:31" pos:end="15:38"><name pos:start="15:31" pos:end="15:38">subcoef0</name></expr></argument>, <argument pos:start="15:41" pos:end="15:53"><expr pos:start="15:41" pos:end="15:53"><index pos:start="15:41" pos:end="15:53">[<expr pos:start="15:42" pos:end="15:52"><literal type="number" pos:start="15:42" pos:end="15:43">32</literal> <operator pos:start="15:45" pos:end="15:45">*</operator> <literal type="number" pos:start="15:47" pos:end="15:48">32</literal> <operator pos:start="15:50" pos:end="15:50">*</operator> <literal type="number" pos:start="15:52" pos:end="15:52">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:55"><expr pos:start="17:5" pos:end="17:54"><call pos:start="17:5" pos:end="17:54"><name pos:start="17:5" pos:end="17:20">LOCAL_ALIGNED_32</name><argument_list pos:start="17:21" pos:end="17:54">(<argument pos:start="17:22" pos:end="17:28"><expr pos:start="17:22" pos:end="17:28"><name pos:start="17:22" pos:end="17:28">int16_t</name></expr></argument>, <argument pos:start="17:31" pos:end="17:38"><expr pos:start="17:31" pos:end="17:38"><name pos:start="17:31" pos:end="17:38">subcoef1</name></expr></argument>, <argument pos:start="17:41" pos:end="17:53"><expr pos:start="17:41" pos:end="17:53"><index pos:start="17:41" pos:end="17:53">[<expr pos:start="17:42" pos:end="17:52"><literal type="number" pos:start="17:42" pos:end="17:43">32</literal> <operator pos:start="17:45" pos:end="17:45">*</operator> <literal type="number" pos:start="17:47" pos:end="17:48">32</literal> <operator pos:start="17:50" pos:end="17:50">*</operator> <literal type="number" pos:start="17:52" pos:end="17:52">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="19:5" pos:end="19:122"><name pos:start="19:5" pos:end="19:21">declare_func_emms</name><argument_list pos:start="19:22" pos:end="19:122">(<argument pos:start="19:23" pos:end="19:58">AV_CPU_FLAG_MMX | AV_CPU_FLAG_MMXEXT</argument>, <argument pos:start="19:61" pos:end="19:64">void</argument>, <argument pos:start="19:67" pos:end="19:78">uint8_t *dst</argument>, <argument pos:start="19:81" pos:end="19:96">ptrdiff_t stride</argument>, <argument pos:start="19:99" pos:end="19:112">int16_t *block</argument>, <argument pos:start="19:115" pos:end="19:121">int eob</argument>)</argument_list></macro><empty_stmt pos:start="19:123" pos:end="19:123">;</empty_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:17">VP9DSPContext</name></type> <name pos:start="21:19" pos:end="21:21">dsp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:39"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">y</name></decl>, <decl pos:start="23:12" pos:end="23:12"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:12">x</name></decl>, <decl pos:start="23:15" pos:end="23:16"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:15" pos:end="23:16">tx</name></decl>, <decl pos:start="23:19" pos:end="23:22"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:19" pos:end="23:22">txtp</name></decl>, <decl pos:start="23:25" pos:end="23:33"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:25" pos:end="23:33">bit_depth</name></decl>, <decl pos:start="23:36" pos:end="23:38"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:36" pos:end="23:38">sub</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="31:6"><decl pos:start="25:5" pos:end="31:5"><type pos:start="25:5" pos:end="25:28"><specifier pos:start="25:5" pos:end="25:10">static</specifier> <specifier pos:start="25:12" pos:end="25:16">const</specifier> <name pos:start="25:18" pos:end="25:21">char</name> <modifier pos:start="25:23" pos:end="25:23">*</modifier><specifier pos:start="25:24" pos:end="25:28">const</specifier></type> <name pos:start="25:30" pos:end="25:53"><name pos:start="25:30" pos:end="25:39">txtp_types</name><index pos:start="25:40" pos:end="25:53">[<expr pos:start="25:41" pos:end="25:52"><name pos:start="25:41" pos:end="25:52">N_TXFM_TYPES</name></expr>]</index></name> <init pos:start="25:55" pos:end="31:5">= <expr pos:start="25:57" pos:end="31:5"><block pos:start="25:57" pos:end="31:5">{

        <expr pos:start="27:9" pos:end="27:29"><index pos:start="27:9" pos:end="27:17">[<expr pos:start="27:10" pos:end="27:16"><name pos:start="27:10" pos:end="27:16">DCT_DCT</name></expr>]</index> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="string" pos:start="27:21" pos:end="27:29">"dct_dct"</literal></expr>, <expr pos:start="27:32" pos:end="27:54"><index pos:start="27:32" pos:end="27:41">[<expr pos:start="27:33" pos:end="27:40"><name pos:start="27:33" pos:end="27:40">DCT_ADST</name></expr>]</index> <operator pos:start="27:43" pos:end="27:43">=</operator> <literal type="string" pos:start="27:45" pos:end="27:54">"adst_dct"</literal></expr>,

        <expr pos:start="29:9" pos:end="29:31"><index pos:start="29:9" pos:end="29:18">[<expr pos:start="29:10" pos:end="29:17"><name pos:start="29:10" pos:end="29:17">ADST_DCT</name></expr>]</index> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="string" pos:start="29:22" pos:end="29:31">"dct_adst"</literal></expr>, <expr pos:start="29:34" pos:end="29:58"><index pos:start="29:34" pos:end="29:44">[<expr pos:start="29:35" pos:end="29:43"><name pos:start="29:35" pos:end="29:43">ADST_ADST</name></expr>]</index> <operator pos:start="29:46" pos:end="29:46">=</operator> <literal type="string" pos:start="29:48" pos:end="29:58">"adst_adst"</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>



    <for pos:start="35:5" pos:end="113:5">for <control pos:start="35:9" pos:end="35:56">(<init pos:start="35:10" pos:end="35:23"><expr pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:18">bit_depth</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:22">8</literal></expr>;</init> <condition pos:start="35:25" pos:end="35:40"><expr pos:start="35:25" pos:end="35:39"><name pos:start="35:25" pos:end="35:33">bit_depth</name> <operator pos:start="35:35" pos:end="35:36">&lt;=</operator> <literal type="number" pos:start="35:38" pos:end="35:39">12</literal></expr>;</condition> <incr pos:start="35:42" pos:end="35:55"><expr pos:start="35:42" pos:end="35:55"><name pos:start="35:42" pos:end="35:50">bit_depth</name> <operator pos:start="35:52" pos:end="35:53">+=</operator> <literal type="number" pos:start="35:55" pos:end="35:55">2</literal></expr></incr>)</control> <block pos:start="35:58" pos:end="113:5">{<block_content pos:start="37:9" pos:end="111:9">

        <expr_stmt pos:start="37:9" pos:end="37:43"><expr pos:start="37:9" pos:end="37:42"><call pos:start="37:9" pos:end="37:42"><name pos:start="37:9" pos:end="37:22">ff_vp9dsp_init</name><argument_list pos:start="37:23" pos:end="37:42">(<argument pos:start="37:24" pos:end="37:27"><expr pos:start="37:24" pos:end="37:27"><operator pos:start="37:24" pos:end="37:24">&amp;</operator><name pos:start="37:25" pos:end="37:27">dsp</name></expr></argument>, <argument pos:start="37:30" pos:end="37:38"><expr pos:start="37:30" pos:end="37:38"><name pos:start="37:30" pos:end="37:38">bit_depth</name></expr></argument>, <argument pos:start="37:41" pos:end="37:41"><expr pos:start="37:41" pos:end="37:41"><literal type="number" pos:start="37:41" pos:end="37:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="41:9" pos:end="111:9">for <control pos:start="41:13" pos:end="41:70">(<init pos:start="41:14" pos:end="41:25"><expr pos:start="41:14" pos:end="41:24"><name pos:start="41:14" pos:end="41:15">tx</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:24">TX_4X4</name></expr>;</init> <condition pos:start="41:27" pos:end="41:64"><expr pos:start="41:27" pos:end="41:44"><name pos:start="41:27" pos:end="41:28">tx</name> <operator pos:start="41:30" pos:end="41:31">&lt;=</operator> <name pos:start="41:33" pos:end="41:44">N_TXFM_SIZES</name></expr> <comment type="block" pos:start="41:46" pos:end="41:63">/* 4 = lossless */</comment>;</condition> <incr pos:start="41:66" pos:end="41:69"><expr pos:start="41:66" pos:end="41:69"><name pos:start="41:66" pos:end="41:67">tx</name><operator pos:start="41:68" pos:end="41:69">++</operator></expr></incr>)</control> <block pos:start="41:72" pos:end="111:9">{<block_content pos:start="43:13" pos:end="109:13">

            <decl_stmt pos:start="43:13" pos:end="43:35"><decl pos:start="43:13" pos:end="43:34"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:18">sz</name> <init pos:start="43:20" pos:end="43:34">= <expr pos:start="43:22" pos:end="43:34"><literal type="number" pos:start="43:22" pos:end="43:22">4</literal> <operator pos:start="43:24" pos:end="43:25">&lt;&lt;</operator> <operator pos:start="43:27" pos:end="43:27">(</operator><name pos:start="43:28" pos:end="43:29">tx</name> <operator pos:start="43:31" pos:end="43:31">&amp;</operator> <literal type="number" pos:start="43:33" pos:end="43:33">3</literal><operator pos:start="43:34" pos:end="43:34">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="45:13" pos:end="45:59"><decl pos:start="45:13" pos:end="45:58"><type pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">int</name></type> <name pos:start="45:17" pos:end="45:23">n_txtps</name> <init pos:start="45:25" pos:end="45:58">= <expr pos:start="45:27" pos:end="45:58"><ternary pos:start="45:27" pos:end="45:58"><condition pos:start="45:27" pos:end="45:41"><expr pos:start="45:27" pos:end="45:39"><name pos:start="45:27" pos:end="45:28">tx</name> <operator pos:start="45:30" pos:end="45:30">&lt;</operator> <name pos:start="45:32" pos:end="45:39">TX_32X32</name></expr> ?</condition><then pos:start="45:43" pos:end="45:54"> <expr pos:start="45:43" pos:end="45:54"><name pos:start="45:43" pos:end="45:54">N_TXFM_TYPES</name></expr> </then><else pos:start="45:56" pos:end="45:58">: <expr pos:start="45:58" pos:end="45:58"><literal type="number" pos:start="45:58" pos:end="45:58">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <for pos:start="49:13" pos:end="109:13">for <control pos:start="49:17" pos:end="49:50">(<init pos:start="49:18" pos:end="49:26"><expr pos:start="49:18" pos:end="49:25"><name pos:start="49:18" pos:end="49:21">txtp</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="number" pos:start="49:25" pos:end="49:25">0</literal></expr>;</init> <condition pos:start="49:28" pos:end="49:42"><expr pos:start="49:28" pos:end="49:41"><name pos:start="49:28" pos:end="49:31">txtp</name> <operator pos:start="49:33" pos:end="49:33">&lt;</operator> <name pos:start="49:35" pos:end="49:41">n_txtps</name></expr>;</condition> <incr pos:start="49:44" pos:end="49:49"><expr pos:start="49:44" pos:end="49:49"><name pos:start="49:44" pos:end="49:47">txtp</name><operator pos:start="49:48" pos:end="49:49">++</operator></expr></incr>)</control> <block pos:start="49:52" pos:end="109:13">{<block_content pos:start="51:17" pos:end="107:17">

                <if_stmt pos:start="51:17" pos:end="107:17"><if pos:start="51:17" pos:end="107:17">if <condition pos:start="51:20" pos:end="55:42">(<expr pos:start="51:21" pos:end="55:41"><call pos:start="51:21" pos:end="55:41"><name pos:start="51:21" pos:end="51:30">check_func</name><argument_list pos:start="51:31" pos:end="55:41">(<argument pos:start="51:32" pos:end="51:54"><expr pos:start="51:32" pos:end="51:54"><name pos:start="51:32" pos:end="51:54"><name pos:start="51:32" pos:end="51:34">dsp</name><operator pos:start="51:35" pos:end="51:35">.</operator><name pos:start="51:36" pos:end="51:44">itxfm_add</name><index pos:start="51:45" pos:end="51:48">[<expr pos:start="51:46" pos:end="51:47"><name pos:start="51:46" pos:end="51:47">tx</name></expr>]</index><index pos:start="51:49" pos:end="51:54">[<expr pos:start="51:50" pos:end="51:53"><name pos:start="51:50" pos:end="51:53">txtp</name></expr>]</index></name></expr></argument>, <argument pos:start="51:57" pos:end="51:81"><expr pos:start="51:57" pos:end="51:81"><literal type="string" pos:start="51:57" pos:end="51:81">"vp9_inv_%s_%dx%d_add_%d"</literal></expr></argument>,

                               <argument pos:start="53:32" pos:end="53:69"><expr pos:start="53:32" pos:end="53:69"><ternary pos:start="53:32" pos:end="53:69"><condition pos:start="53:32" pos:end="53:40"><expr pos:start="53:32" pos:end="53:38"><name pos:start="53:32" pos:end="53:33">tx</name> <operator pos:start="53:35" pos:end="53:36">==</operator> <literal type="number" pos:start="53:38" pos:end="53:38">4</literal></expr> ?</condition><then pos:start="53:42" pos:end="53:50"> <expr pos:start="53:42" pos:end="53:50"><literal type="string" pos:start="53:42" pos:end="53:50">"wht_wht"</literal></expr> </then><else pos:start="53:52" pos:end="53:69">: <expr pos:start="53:54" pos:end="53:69"><name pos:start="53:54" pos:end="53:69"><name pos:start="53:54" pos:end="53:63">txtp_types</name><index pos:start="53:64" pos:end="53:69">[<expr pos:start="53:65" pos:end="53:68"><name pos:start="53:65" pos:end="53:68">txtp</name></expr>]</index></name></expr></else></ternary></expr></argument>, <argument pos:start="53:72" pos:end="53:73"><expr pos:start="53:72" pos:end="53:73"><name pos:start="53:72" pos:end="53:73">sz</name></expr></argument>, <argument pos:start="53:76" pos:end="53:77"><expr pos:start="53:76" pos:end="53:77"><name pos:start="53:76" pos:end="53:77">sz</name></expr></argument>,

                               <argument pos:start="55:32" pos:end="55:40"><expr pos:start="55:32" pos:end="55:40"><name pos:start="55:32" pos:end="55:40">bit_depth</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:44" pos:end="107:17">{<block_content pos:start="57:21" pos:end="105:69">

                    <expr_stmt pos:start="57:21" pos:end="57:40"><expr pos:start="57:21" pos:end="57:39"><call pos:start="57:21" pos:end="57:39"><name pos:start="57:21" pos:end="57:37">randomize_buffers</name><argument_list pos:start="57:38" pos:end="57:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:55"><expr pos:start="59:21" pos:end="59:54"><call pos:start="59:21" pos:end="59:54"><name pos:start="59:21" pos:end="59:23">ftx</name><argument_list pos:start="59:24" pos:end="59:54">(<argument pos:start="59:25" pos:end="59:28"><expr pos:start="59:25" pos:end="59:28"><name pos:start="59:25" pos:end="59:28">coef</name></expr></argument>, <argument pos:start="59:31" pos:end="59:32"><expr pos:start="59:31" pos:end="59:32"><name pos:start="59:31" pos:end="59:32">tx</name></expr></argument>, <argument pos:start="59:35" pos:end="59:38"><expr pos:start="59:35" pos:end="59:38"><name pos:start="59:35" pos:end="59:38">txtp</name></expr></argument>, <argument pos:start="59:41" pos:end="59:42"><expr pos:start="59:41" pos:end="59:42"><name pos:start="59:41" pos:end="59:42">sz</name></expr></argument>, <argument pos:start="59:45" pos:end="59:53"><expr pos:start="59:45" pos:end="59:53"><name pos:start="59:45" pos:end="59:53">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <for pos:start="63:21" pos:end="103:21">for <control pos:start="63:25" pos:end="63:73">(<init pos:start="63:26" pos:end="63:51"><expr pos:start="63:26" pos:end="63:50"><name pos:start="63:26" pos:end="63:28">sub</name> <operator pos:start="63:30" pos:end="63:30">=</operator> <ternary pos:start="63:32" pos:end="63:50"><condition pos:start="63:32" pos:end="63:44"><expr pos:start="63:32" pos:end="63:42"><operator pos:start="63:32" pos:end="63:32">(</operator><name pos:start="63:33" pos:end="63:36">txtp</name> <operator pos:start="63:38" pos:end="63:39">==</operator> <literal type="number" pos:start="63:41" pos:end="63:41">0</literal><operator pos:start="63:42" pos:end="63:42">)</operator></expr> ?</condition><then pos:start="63:46" pos:end="63:46"> <expr pos:start="63:46" pos:end="63:46"><literal type="number" pos:start="63:46" pos:end="63:46">1</literal></expr> </then><else pos:start="63:48" pos:end="63:50">: <expr pos:start="63:50" pos:end="63:50"><literal type="number" pos:start="63:50" pos:end="63:50">2</literal></expr></else></ternary></expr>;</init> <condition pos:start="63:53" pos:end="63:62"><expr pos:start="63:53" pos:end="63:61"><name pos:start="63:53" pos:end="63:55">sub</name> <operator pos:start="63:57" pos:end="63:58">&lt;=</operator> <name pos:start="63:60" pos:end="63:61">sz</name></expr>;</condition> <incr pos:start="63:64" pos:end="63:72"><expr pos:start="63:64" pos:end="63:72"><name pos:start="63:64" pos:end="63:66">sub</name> <operator pos:start="63:68" pos:end="63:70">&lt;&lt;=</operator> <literal type="number" pos:start="63:72" pos:end="63:72">1</literal></expr></incr>)</control> <block pos:start="63:75" pos:end="103:21">{<block_content pos:start="65:25" pos:end="101:35">

                        <decl_stmt pos:start="65:25" pos:end="65:32"><decl pos:start="65:25" pos:end="65:31"><type pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:27">int</name></type> <name pos:start="65:29" pos:end="65:31">eob</name></decl>;</decl_stmt>



                        <if_stmt pos:start="69:25" pos:end="81:25"><if pos:start="69:25" pos:end="75:25">if <condition pos:start="69:28" pos:end="69:37">(<expr pos:start="69:29" pos:end="69:36"><name pos:start="69:29" pos:end="69:31">sub</name> <operator pos:start="69:33" pos:end="69:33">&lt;</operator> <name pos:start="69:35" pos:end="69:36">sz</name></expr>)</condition> <block pos:start="69:39" pos:end="75:25">{<block_content pos:start="71:29" pos:end="73:68">

                            <expr_stmt pos:start="71:29" pos:end="73:68"><expr pos:start="71:29" pos:end="73:67"><name pos:start="71:29" pos:end="71:31">eob</name> <operator pos:start="71:33" pos:end="71:33">=</operator> <call pos:start="71:35" pos:end="73:67"><name pos:start="71:35" pos:end="71:47">copy_subcoefs</name><argument_list pos:start="71:48" pos:end="73:67">(<argument pos:start="71:49" pos:end="71:56"><expr pos:start="71:49" pos:end="71:56"><name pos:start="71:49" pos:end="71:56">subcoef0</name></expr></argument>, <argument pos:start="71:59" pos:end="71:62"><expr pos:start="71:59" pos:end="71:62"><name pos:start="71:59" pos:end="71:62">coef</name></expr></argument>, <argument pos:start="71:65" pos:end="71:66"><expr pos:start="71:65" pos:end="71:66"><name pos:start="71:65" pos:end="71:66">tx</name></expr></argument>, <argument pos:start="71:69" pos:end="71:72"><expr pos:start="71:69" pos:end="71:72"><name pos:start="71:69" pos:end="71:72">txtp</name></expr></argument>,

                                                <argument pos:start="73:49" pos:end="73:50"><expr pos:start="73:49" pos:end="73:50"><name pos:start="73:49" pos:end="73:50">sz</name></expr></argument>, <argument pos:start="73:53" pos:end="73:55"><expr pos:start="73:53" pos:end="73:55"><name pos:start="73:53" pos:end="73:55">sub</name></expr></argument>, <argument pos:start="73:58" pos:end="73:66"><expr pos:start="73:58" pos:end="73:66"><name pos:start="73:58" pos:end="73:66">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="75:27" pos:end="81:25">else <block pos:start="75:32" pos:end="81:25">{<block_content pos:start="77:29" pos:end="79:74">

                            <expr_stmt pos:start="77:29" pos:end="77:42"><expr pos:start="77:29" pos:end="77:41"><name pos:start="77:29" pos:end="77:31">eob</name> <operator pos:start="77:33" pos:end="77:33">=</operator> <name pos:start="77:35" pos:end="77:36">sz</name> <operator pos:start="77:38" pos:end="77:38">*</operator> <name pos:start="77:40" pos:end="77:41">sz</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="79:29" pos:end="79:74"><expr pos:start="79:29" pos:end="79:73"><call pos:start="79:29" pos:end="79:73"><name pos:start="79:29" pos:end="79:34">memcpy</name><argument_list pos:start="79:35" pos:end="79:73">(<argument pos:start="79:36" pos:end="79:43"><expr pos:start="79:36" pos:end="79:43"><name pos:start="79:36" pos:end="79:43">subcoef0</name></expr></argument>, <argument pos:start="79:46" pos:end="79:49"><expr pos:start="79:46" pos:end="79:49"><name pos:start="79:46" pos:end="79:49">coef</name></expr></argument>, <argument pos:start="79:52" pos:end="79:72"><expr pos:start="79:52" pos:end="79:72"><name pos:start="79:52" pos:end="79:53">sz</name> <operator pos:start="79:55" pos:end="79:55">*</operator> <name pos:start="79:57" pos:end="79:58">sz</name> <operator pos:start="79:60" pos:end="79:60">*</operator> <name pos:start="79:62" pos:end="79:72">SIZEOF_COEF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>



                        <expr_stmt pos:start="85:25" pos:end="85:66"><expr pos:start="85:25" pos:end="85:65"><call pos:start="85:25" pos:end="85:65"><name pos:start="85:25" pos:end="85:30">memcpy</name><argument_list pos:start="85:31" pos:end="85:65">(<argument pos:start="85:32" pos:end="85:35"><expr pos:start="85:32" pos:end="85:35"><name pos:start="85:32" pos:end="85:35">dst0</name></expr></argument>, <argument pos:start="85:38" pos:end="85:40"><expr pos:start="85:38" pos:end="85:40"><name pos:start="85:38" pos:end="85:40">dst</name></expr></argument>, <argument pos:start="85:43" pos:end="85:64"><expr pos:start="85:43" pos:end="85:64"><name pos:start="85:43" pos:end="85:44">sz</name> <operator pos:start="85:46" pos:end="85:46">*</operator> <name pos:start="85:48" pos:end="85:49">sz</name> <operator pos:start="85:51" pos:end="85:51">*</operator> <name pos:start="85:53" pos:end="85:64">SIZEOF_PIXEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="87:25" pos:end="87:66"><expr pos:start="87:25" pos:end="87:65"><call pos:start="87:25" pos:end="87:65"><name pos:start="87:25" pos:end="87:30">memcpy</name><argument_list pos:start="87:31" pos:end="87:65">(<argument pos:start="87:32" pos:end="87:35"><expr pos:start="87:32" pos:end="87:35"><name pos:start="87:32" pos:end="87:35">dst1</name></expr></argument>, <argument pos:start="87:38" pos:end="87:40"><expr pos:start="87:38" pos:end="87:40"><name pos:start="87:38" pos:end="87:40">dst</name></expr></argument>, <argument pos:start="87:43" pos:end="87:64"><expr pos:start="87:43" pos:end="87:64"><name pos:start="87:43" pos:end="87:44">sz</name> <operator pos:start="87:46" pos:end="87:46">*</operator> <name pos:start="87:48" pos:end="87:49">sz</name> <operator pos:start="87:51" pos:end="87:51">*</operator> <name pos:start="87:53" pos:end="87:64">SIZEOF_PIXEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="89:25" pos:end="89:74"><expr pos:start="89:25" pos:end="89:73"><call pos:start="89:25" pos:end="89:73"><name pos:start="89:25" pos:end="89:30">memcpy</name><argument_list pos:start="89:31" pos:end="89:73">(<argument pos:start="89:32" pos:end="89:39"><expr pos:start="89:32" pos:end="89:39"><name pos:start="89:32" pos:end="89:39">subcoef1</name></expr></argument>, <argument pos:start="89:42" pos:end="89:49"><expr pos:start="89:42" pos:end="89:49"><name pos:start="89:42" pos:end="89:49">subcoef0</name></expr></argument>, <argument pos:start="89:52" pos:end="89:72"><expr pos:start="89:52" pos:end="89:72"><name pos:start="89:52" pos:end="89:53">sz</name> <operator pos:start="89:55" pos:end="89:55">*</operator> <name pos:start="89:57" pos:end="89:58">sz</name> <operator pos:start="89:60" pos:end="89:60">*</operator> <name pos:start="89:62" pos:end="89:72">SIZEOF_COEF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="91:25" pos:end="91:73"><expr pos:start="91:25" pos:end="91:72"><call pos:start="91:25" pos:end="91:72"><name pos:start="91:25" pos:end="91:32">call_ref</name><argument_list pos:start="91:33" pos:end="91:72">(<argument pos:start="91:34" pos:end="91:37"><expr pos:start="91:34" pos:end="91:37"><name pos:start="91:34" pos:end="91:37">dst0</name></expr></argument>, <argument pos:start="91:40" pos:end="91:56"><expr pos:start="91:40" pos:end="91:56"><name pos:start="91:40" pos:end="91:41">sz</name> <operator pos:start="91:43" pos:end="91:43">*</operator> <name pos:start="91:45" pos:end="91:56">SIZEOF_PIXEL</name></expr></argument>, <argument pos:start="91:59" pos:end="91:66"><expr pos:start="91:59" pos:end="91:66"><name pos:start="91:59" pos:end="91:66">subcoef0</name></expr></argument>, <argument pos:start="91:69" pos:end="91:71"><expr pos:start="91:69" pos:end="91:71"><name pos:start="91:69" pos:end="91:71">eob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="93:25" pos:end="93:73"><expr pos:start="93:25" pos:end="93:72"><call pos:start="93:25" pos:end="93:72"><name pos:start="93:25" pos:end="93:32">call_new</name><argument_list pos:start="93:33" pos:end="93:72">(<argument pos:start="93:34" pos:end="93:37"><expr pos:start="93:34" pos:end="93:37"><name pos:start="93:34" pos:end="93:37">dst1</name></expr></argument>, <argument pos:start="93:40" pos:end="93:56"><expr pos:start="93:40" pos:end="93:56"><name pos:start="93:40" pos:end="93:41">sz</name> <operator pos:start="93:43" pos:end="93:43">*</operator> <name pos:start="93:45" pos:end="93:56">SIZEOF_PIXEL</name></expr></argument>, <argument pos:start="93:59" pos:end="93:66"><expr pos:start="93:59" pos:end="93:66"><name pos:start="93:59" pos:end="93:66">subcoef1</name></expr></argument>, <argument pos:start="93:69" pos:end="93:71"><expr pos:start="93:69" pos:end="93:71"><name pos:start="93:69" pos:end="93:71">eob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="95:25" pos:end="101:35"><if pos:start="95:25" pos:end="101:35">if <condition pos:start="95:28" pos:end="99:69">(<expr pos:start="95:29" pos:end="99:68"><call pos:start="95:29" pos:end="95:70"><name pos:start="95:29" pos:end="95:34">memcmp</name><argument_list pos:start="95:35" pos:end="95:70">(<argument pos:start="95:36" pos:end="95:39"><expr pos:start="95:36" pos:end="95:39"><name pos:start="95:36" pos:end="95:39">dst0</name></expr></argument>, <argument pos:start="95:42" pos:end="95:45"><expr pos:start="95:42" pos:end="95:45"><name pos:start="95:42" pos:end="95:45">dst1</name></expr></argument>, <argument pos:start="95:48" pos:end="95:69"><expr pos:start="95:48" pos:end="95:69"><name pos:start="95:48" pos:end="95:49">sz</name> <operator pos:start="95:51" pos:end="95:51">*</operator> <name pos:start="95:53" pos:end="95:54">sz</name> <operator pos:start="95:56" pos:end="95:56">*</operator> <name pos:start="95:58" pos:end="95:69">SIZEOF_PIXEL</name></expr></argument>)</argument_list></call> <operator pos:start="95:72" pos:end="95:73">||</operator>

                            <operator pos:start="97:29" pos:end="97:29">!</operator><call pos:start="97:30" pos:end="97:68"><name pos:start="97:30" pos:end="97:35">iszero</name><argument_list pos:start="97:36" pos:end="97:68">(<argument pos:start="97:37" pos:end="97:44"><expr pos:start="97:37" pos:end="97:44"><name pos:start="97:37" pos:end="97:44">subcoef0</name></expr></argument>, <argument pos:start="97:47" pos:end="97:67"><expr pos:start="97:47" pos:end="97:67"><name pos:start="97:47" pos:end="97:48">sz</name> <operator pos:start="97:50" pos:end="97:50">*</operator> <name pos:start="97:52" pos:end="97:53">sz</name> <operator pos:start="97:55" pos:end="97:55">*</operator> <name pos:start="97:57" pos:end="97:67">SIZEOF_COEF</name></expr></argument>)</argument_list></call> <operator pos:start="97:70" pos:end="97:71">||</operator>

                            <operator pos:start="99:29" pos:end="99:29">!</operator><call pos:start="99:30" pos:end="99:68"><name pos:start="99:30" pos:end="99:35">iszero</name><argument_list pos:start="99:36" pos:end="99:68">(<argument pos:start="99:37" pos:end="99:44"><expr pos:start="99:37" pos:end="99:44"><name pos:start="99:37" pos:end="99:44">subcoef1</name></expr></argument>, <argument pos:start="99:47" pos:end="99:67"><expr pos:start="99:47" pos:end="99:67"><name pos:start="99:47" pos:end="99:48">sz</name> <operator pos:start="99:50" pos:end="99:50">*</operator> <name pos:start="99:52" pos:end="99:53">sz</name> <operator pos:start="99:55" pos:end="99:55">*</operator> <name pos:start="99:57" pos:end="99:67">SIZEOF_COEF</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="101:29" pos:end="101:35"><block_content pos:start="101:29" pos:end="101:35">

                            <expr_stmt pos:start="101:29" pos:end="101:35"><expr pos:start="101:29" pos:end="101:34"><call pos:start="101:29" pos:end="101:34"><name pos:start="101:29" pos:end="101:32">fail</name><argument_list pos:start="101:33" pos:end="101:34">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="105:21" pos:end="105:69"><expr pos:start="105:21" pos:end="105:68"><call pos:start="105:21" pos:end="105:68"><name pos:start="105:21" pos:end="105:29">bench_new</name><argument_list pos:start="105:30" pos:end="105:68">(<argument pos:start="105:31" pos:end="105:33"><expr pos:start="105:31" pos:end="105:33"><name pos:start="105:31" pos:end="105:33">dst</name></expr></argument>, <argument pos:start="105:36" pos:end="105:52"><expr pos:start="105:36" pos:end="105:52"><name pos:start="105:36" pos:end="105:37">sz</name> <operator pos:start="105:39" pos:end="105:39">*</operator> <name pos:start="105:41" pos:end="105:52">SIZEOF_PIXEL</name></expr></argument>, <argument pos:start="105:55" pos:end="105:58"><expr pos:start="105:55" pos:end="105:58"><name pos:start="105:55" pos:end="105:58">coef</name></expr></argument>, <argument pos:start="105:61" pos:end="105:67"><expr pos:start="105:61" pos:end="105:67"><name pos:start="105:61" pos:end="105:62">sz</name> <operator pos:start="105:64" pos:end="105:64">*</operator> <name pos:start="105:66" pos:end="105:67">sz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="115:5" pos:end="115:20"><expr pos:start="115:5" pos:end="115:19"><call pos:start="115:5" pos:end="115:19"><name pos:start="115:5" pos:end="115:10">report</name><argument_list pos:start="115:11" pos:end="115:19">(<argument pos:start="115:12" pos:end="115:18"><expr pos:start="115:12" pos:end="115:18"><literal type="string" pos:start="115:12" pos:end="115:18">"itxfm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
