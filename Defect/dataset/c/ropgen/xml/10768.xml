<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10768.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">achroma</name><parameter_list pos:start="1:20" pos:end="3:73">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:35">WaveformContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:51"><decl pos:start="1:41" pos:end="1:51"><type pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:47">AVFrame</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">in</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:60">AVFrame</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">out</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:33"><decl pos:start="3:21" pos:end="3:33"><type pos:start="3:21" pos:end="3:33"><name pos:start="3:21" pos:end="3:23">int</name></type> <name pos:start="3:25" pos:end="3:33">component</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:48"><decl pos:start="3:36" pos:end="3:48"><type pos:start="3:36" pos:end="3:48"><name pos:start="3:36" pos:end="3:38">int</name></type> <name pos:start="3:40" pos:end="3:48">intensity</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:60"><decl pos:start="3:51" pos:end="3:60"><type pos:start="3:51" pos:end="3:60"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:60">offset</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:72"><decl pos:start="3:63" pos:end="3:72"><type pos:start="3:63" pos:end="3:72"><name pos:start="3:63" pos:end="3:65">int</name></type> <name pos:start="3:67" pos:end="3:72">column</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="253:1">{<block_content pos:start="7:5" pos:end="251:52">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">plane</name> <init pos:start="7:21" pos:end="7:52">= <expr pos:start="7:23" pos:end="7:52"><name pos:start="7:23" pos:end="7:46"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:29">desc</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:35">comp</name><index pos:start="7:36" pos:end="7:46">[<expr pos:start="7:37" pos:end="7:45"><name pos:start="7:37" pos:end="7:45">component</name></expr>]</index></name><operator pos:start="7:47" pos:end="7:47">.</operator><name pos:start="7:48" pos:end="7:52">plane</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:20">mirror</name> <init pos:start="9:22" pos:end="9:32">= <expr pos:start="9:24" pos:end="9:32"><name pos:start="9:24" pos:end="9:32"><name pos:start="9:24" pos:end="9:24">s</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">mirror</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:65"><decl pos:start="11:5" pos:end="11:64"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:25">c1_linesize</name> <init pos:start="11:27" pos:end="11:64">= <expr pos:start="11:29" pos:end="11:64"><name pos:start="11:29" pos:end="11:64"><name pos:start="11:29" pos:end="11:30">in</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:40">linesize</name><index pos:start="11:41" pos:end="11:64">[<expr pos:start="11:42" pos:end="11:63"><operator pos:start="11:42" pos:end="11:42">(</operator><name pos:start="11:43" pos:end="11:47">plane</name> <operator pos:start="11:49" pos:end="11:49">+</operator> <literal type="number" pos:start="11:51" pos:end="11:51">1</literal><operator pos:start="11:52" pos:end="11:52">)</operator> <operator pos:start="11:54" pos:end="11:54">%</operator> <name pos:start="11:56" pos:end="11:63"><name pos:start="11:56" pos:end="11:56">s</name><operator pos:start="11:57" pos:end="11:58">-&gt;</operator><name pos:start="11:59" pos:end="11:63">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:65"><decl pos:start="13:5" pos:end="13:64"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:25">c2_linesize</name> <init pos:start="13:27" pos:end="13:64">= <expr pos:start="13:29" pos:end="13:64"><name pos:start="13:29" pos:end="13:64"><name pos:start="13:29" pos:end="13:30">in</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:40">linesize</name><index pos:start="13:41" pos:end="13:64">[<expr pos:start="13:42" pos:end="13:63"><operator pos:start="13:42" pos:end="13:42">(</operator><name pos:start="13:43" pos:end="13:47">plane</name> <operator pos:start="13:49" pos:end="13:49">+</operator> <literal type="number" pos:start="13:51" pos:end="13:51">2</literal><operator pos:start="13:52" pos:end="13:52">)</operator> <operator pos:start="13:54" pos:end="13:54">%</operator> <name pos:start="13:56" pos:end="13:63"><name pos:start="13:56" pos:end="13:56">s</name><operator pos:start="13:57" pos:end="13:58">-&gt;</operator><name pos:start="13:59" pos:end="13:63">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:66"><decl pos:start="15:5" pos:end="15:65"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:25">d1_linesize</name> <init pos:start="15:27" pos:end="15:65">= <expr pos:start="15:29" pos:end="15:65"><name pos:start="15:29" pos:end="15:65"><name pos:start="15:29" pos:end="15:31">out</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:41">linesize</name><index pos:start="15:42" pos:end="15:65">[<expr pos:start="15:43" pos:end="15:64"><operator pos:start="15:43" pos:end="15:43">(</operator><name pos:start="15:44" pos:end="15:48">plane</name> <operator pos:start="15:50" pos:end="15:50">+</operator> <literal type="number" pos:start="15:52" pos:end="15:52">1</literal><operator pos:start="15:53" pos:end="15:53">)</operator> <operator pos:start="15:55" pos:end="15:55">%</operator> <name pos:start="15:57" pos:end="15:64"><name pos:start="15:57" pos:end="15:57">s</name><operator pos:start="15:58" pos:end="15:59">-&gt;</operator><name pos:start="15:60" pos:end="15:64">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:66"><decl pos:start="17:5" pos:end="17:65"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:25">d2_linesize</name> <init pos:start="17:27" pos:end="17:65">= <expr pos:start="17:29" pos:end="17:65"><name pos:start="17:29" pos:end="17:65"><name pos:start="17:29" pos:end="17:31">out</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:41">linesize</name><index pos:start="17:42" pos:end="17:65">[<expr pos:start="17:43" pos:end="17:64"><operator pos:start="17:43" pos:end="17:43">(</operator><name pos:start="17:44" pos:end="17:48">plane</name> <operator pos:start="17:50" pos:end="17:50">+</operator> <literal type="number" pos:start="17:52" pos:end="17:52">2</literal><operator pos:start="17:53" pos:end="17:53">)</operator> <operator pos:start="17:55" pos:end="17:55">%</operator> <name pos:start="17:57" pos:end="17:64"><name pos:start="17:57" pos:end="17:57">s</name><operator pos:start="17:58" pos:end="17:59">-&gt;</operator><name pos:start="17:60" pos:end="17:64">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:36"><decl pos:start="19:5" pos:end="19:35"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:17">max</name> <init pos:start="19:19" pos:end="19:35">= <expr pos:start="19:21" pos:end="19:35"><literal type="number" pos:start="19:21" pos:end="19:25">255</literal> <operator pos:start="19:25" pos:end="19:25">-</operator> <name pos:start="19:27" pos:end="19:35">intensity</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:33"><decl pos:start="21:5" pos:end="21:32"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:19">src_h</name> <init pos:start="21:21" pos:end="21:32">= <expr pos:start="21:23" pos:end="21:32"><name pos:start="21:23" pos:end="21:32"><name pos:start="21:23" pos:end="21:24">in</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:32">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:32"><decl pos:start="23:5" pos:end="23:31"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:19">src_w</name> <init pos:start="23:21" pos:end="23:31">= <expr pos:start="23:23" pos:end="23:31"><name pos:start="23:23" pos:end="23:31"><name pos:start="23:23" pos:end="23:24">in</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:31">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:13"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">x</name></decl>, <decl pos:start="25:12" pos:end="25:12"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:12" pos:end="25:12">y</name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="245:5"><if pos:start="29:5" pos:end="121:5">if <condition pos:start="29:8" pos:end="29:15">(<expr pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:14">column</name></expr>)</condition> <block pos:start="29:17" pos:end="121:5">{<block_content pos:start="31:9" pos:end="119:9">

        <decl_stmt pos:start="31:9" pos:end="31:76"><decl pos:start="31:9" pos:end="31:75"><type pos:start="31:9" pos:end="31:17"><specifier pos:start="31:9" pos:end="31:13">const</specifier> <name pos:start="31:15" pos:end="31:17">int</name></type> <name pos:start="31:19" pos:end="31:36">d1_signed_linesize</name> <init pos:start="31:38" pos:end="31:75">= <expr pos:start="31:40" pos:end="31:75"><name pos:start="31:40" pos:end="31:50">d1_linesize</name> <operator pos:start="31:52" pos:end="31:52">*</operator> <operator pos:start="31:54" pos:end="31:54">(</operator><ternary pos:start="31:55" pos:end="31:74"><condition pos:start="31:55" pos:end="31:67"><expr pos:start="31:55" pos:end="31:65"><name pos:start="31:55" pos:end="31:60">mirror</name> <operator pos:start="31:62" pos:end="31:63">==</operator> <literal type="number" pos:start="31:65" pos:end="31:65">1</literal></expr> ?</condition><then pos:start="31:69" pos:end="31:70"> <expr pos:start="31:69" pos:end="31:70"><operator pos:start="31:69" pos:end="31:69">-</operator><literal type="number" pos:start="31:70" pos:end="31:70">1</literal></expr> </then><else pos:start="31:72" pos:end="31:74">: <expr pos:start="31:74" pos:end="31:74"><literal type="number" pos:start="31:74" pos:end="31:74">1</literal></expr></else></ternary><operator pos:start="31:75" pos:end="31:75">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:76"><decl pos:start="33:9" pos:end="33:75"><type pos:start="33:9" pos:end="33:17"><specifier pos:start="33:9" pos:end="33:13">const</specifier> <name pos:start="33:15" pos:end="33:17">int</name></type> <name pos:start="33:19" pos:end="33:36">d2_signed_linesize</name> <init pos:start="33:38" pos:end="33:75">= <expr pos:start="33:40" pos:end="33:75"><name pos:start="33:40" pos:end="33:50">d2_linesize</name> <operator pos:start="33:52" pos:end="33:52">*</operator> <operator pos:start="33:54" pos:end="33:54">(</operator><ternary pos:start="33:55" pos:end="33:74"><condition pos:start="33:55" pos:end="33:67"><expr pos:start="33:55" pos:end="33:65"><name pos:start="33:55" pos:end="33:60">mirror</name> <operator pos:start="33:62" pos:end="33:63">==</operator> <literal type="number" pos:start="33:65" pos:end="33:65">1</literal></expr> ?</condition><then pos:start="33:69" pos:end="33:70"> <expr pos:start="33:69" pos:end="33:70"><operator pos:start="33:69" pos:end="33:69">-</operator><literal type="number" pos:start="33:70" pos:end="33:70">1</literal></expr> </then><else pos:start="33:72" pos:end="33:74">: <expr pos:start="33:74" pos:end="33:74"><literal type="number" pos:start="33:74" pos:end="33:74">1</literal></expr></else></ternary><operator pos:start="33:75" pos:end="33:75">)</operator></expr></init></decl>;</decl_stmt>



        <for pos:start="37:9" pos:end="119:9">for <control pos:start="37:13" pos:end="37:35">(<init pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">x</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</init> <condition pos:start="37:21" pos:end="37:30"><expr pos:start="37:21" pos:end="37:29"><name pos:start="37:21" pos:end="37:21">x</name> <operator pos:start="37:23" pos:end="37:23">&lt;</operator> <name pos:start="37:25" pos:end="37:29">src_w</name></expr>;</condition> <incr pos:start="37:32" pos:end="37:34"><expr pos:start="37:32" pos:end="37:34"><name pos:start="37:32" pos:end="37:32">x</name><operator pos:start="37:33" pos:end="37:34">++</operator></expr></incr>)</control> <block pos:start="37:37" pos:end="119:9">{<block_content pos:start="39:13" pos:end="117:13">

            <decl_stmt pos:start="39:13" pos:end="39:70"><decl pos:start="39:13" pos:end="39:69"><type pos:start="39:13" pos:end="39:27"><specifier pos:start="39:13" pos:end="39:17">const</specifier> <name pos:start="39:19" pos:end="39:25">uint8_t</name> <modifier pos:start="39:27" pos:end="39:27">*</modifier></type><name pos:start="39:28" pos:end="39:34">c1_data</name> <init pos:start="39:36" pos:end="39:69">= <expr pos:start="39:38" pos:end="39:69"><name pos:start="39:38" pos:end="39:69"><name pos:start="39:38" pos:end="39:39">in</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:45">data</name><index pos:start="39:46" pos:end="39:69">[<expr pos:start="39:47" pos:end="39:68"><operator pos:start="39:47" pos:end="39:47">(</operator><name pos:start="39:48" pos:end="39:52">plane</name> <operator pos:start="39:54" pos:end="39:54">+</operator> <literal type="number" pos:start="39:56" pos:end="39:56">1</literal><operator pos:start="39:57" pos:end="39:57">)</operator> <operator pos:start="39:59" pos:end="39:59">%</operator> <name pos:start="39:61" pos:end="39:68"><name pos:start="39:61" pos:end="39:61">s</name><operator pos:start="39:62" pos:end="39:63">-&gt;</operator><name pos:start="39:64" pos:end="39:68">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:70"><decl pos:start="41:13" pos:end="41:69"><type pos:start="41:13" pos:end="41:27"><specifier pos:start="41:13" pos:end="41:17">const</specifier> <name pos:start="41:19" pos:end="41:25">uint8_t</name> <modifier pos:start="41:27" pos:end="41:27">*</modifier></type><name pos:start="41:28" pos:end="41:34">c2_data</name> <init pos:start="41:36" pos:end="41:69">= <expr pos:start="41:38" pos:end="41:69"><name pos:start="41:38" pos:end="41:69"><name pos:start="41:38" pos:end="41:39">in</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:45">data</name><index pos:start="41:46" pos:end="41:69">[<expr pos:start="41:47" pos:end="41:68"><operator pos:start="41:47" pos:end="41:47">(</operator><name pos:start="41:48" pos:end="41:52">plane</name> <operator pos:start="41:54" pos:end="41:54">+</operator> <literal type="number" pos:start="41:56" pos:end="41:56">2</literal><operator pos:start="41:57" pos:end="41:57">)</operator> <operator pos:start="41:59" pos:end="41:59">%</operator> <name pos:start="41:61" pos:end="41:68"><name pos:start="41:61" pos:end="41:61">s</name><operator pos:start="41:62" pos:end="41:63">-&gt;</operator><name pos:start="41:64" pos:end="41:68">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:88"><decl pos:start="43:13" pos:end="43:87"><type pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:19">uint8_t</name> <modifier pos:start="43:21" pos:end="43:21">*</modifier></type><name pos:start="43:22" pos:end="43:28">d1_data</name> <init pos:start="43:30" pos:end="43:87">= <expr pos:start="43:32" pos:end="43:87"><name pos:start="43:32" pos:end="43:64"><name pos:start="43:32" pos:end="43:34">out</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:40">data</name><index pos:start="43:41" pos:end="43:64">[<expr pos:start="43:42" pos:end="43:63"><operator pos:start="43:42" pos:end="43:42">(</operator><name pos:start="43:43" pos:end="43:47">plane</name> <operator pos:start="43:49" pos:end="43:49">+</operator> <literal type="number" pos:start="43:51" pos:end="43:51">1</literal><operator pos:start="43:52" pos:end="43:52">)</operator> <operator pos:start="43:54" pos:end="43:54">%</operator> <name pos:start="43:56" pos:end="43:63"><name pos:start="43:56" pos:end="43:56">s</name><operator pos:start="43:57" pos:end="43:58">-&gt;</operator><name pos:start="43:59" pos:end="43:63">ncomp</name></name></expr>]</index></name> <operator pos:start="43:66" pos:end="43:66">+</operator> <name pos:start="43:68" pos:end="43:73">offset</name> <operator pos:start="43:75" pos:end="43:75">*</operator> <name pos:start="43:77" pos:end="43:87">d1_linesize</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="45:13" pos:end="45:88"><decl pos:start="45:13" pos:end="45:87"><type pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:19">uint8_t</name> <modifier pos:start="45:21" pos:end="45:21">*</modifier></type><name pos:start="45:22" pos:end="45:28">d2_data</name> <init pos:start="45:30" pos:end="45:87">= <expr pos:start="45:32" pos:end="45:87"><name pos:start="45:32" pos:end="45:64"><name pos:start="45:32" pos:end="45:34">out</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:40">data</name><index pos:start="45:41" pos:end="45:64">[<expr pos:start="45:42" pos:end="45:63"><operator pos:start="45:42" pos:end="45:42">(</operator><name pos:start="45:43" pos:end="45:47">plane</name> <operator pos:start="45:49" pos:end="45:49">+</operator> <literal type="number" pos:start="45:51" pos:end="45:51">2</literal><operator pos:start="45:52" pos:end="45:52">)</operator> <operator pos:start="45:54" pos:end="45:54">%</operator> <name pos:start="45:56" pos:end="45:63"><name pos:start="45:56" pos:end="45:56">s</name><operator pos:start="45:57" pos:end="45:58">-&gt;</operator><name pos:start="45:59" pos:end="45:63">ncomp</name></name></expr>]</index></name> <operator pos:start="45:66" pos:end="45:66">+</operator> <name pos:start="45:68" pos:end="45:73">offset</name> <operator pos:start="45:75" pos:end="45:75">*</operator> <name pos:start="45:77" pos:end="45:87">d2_linesize</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:83"><decl pos:start="47:13" pos:end="47:82"><type pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:19">uint8_t</name> <modifier pos:start="47:21" pos:end="47:21">*</modifier> <specifier pos:start="47:23" pos:end="47:27">const</specifier></type> <name pos:start="47:29" pos:end="47:42">d1_bottom_line</name> <init pos:start="47:44" pos:end="47:82">= <expr pos:start="47:46" pos:end="47:82"><name pos:start="47:46" pos:end="47:52">d1_data</name> <operator pos:start="47:54" pos:end="47:54">+</operator> <name pos:start="47:56" pos:end="47:66">d1_linesize</name> <operator pos:start="47:68" pos:end="47:68">*</operator> <operator pos:start="47:70" pos:end="47:70">(</operator><name pos:start="47:71" pos:end="47:77"><name pos:start="47:71" pos:end="47:71">s</name><operator pos:start="47:72" pos:end="47:73">-&gt;</operator><name pos:start="47:74" pos:end="47:77">size</name></name> <operator pos:start="47:79" pos:end="47:79">-</operator> <literal type="number" pos:start="47:81" pos:end="47:81">1</literal><operator pos:start="47:82" pos:end="47:82">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:69"><decl pos:start="49:13" pos:end="49:68"><type pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:19">uint8_t</name> <modifier pos:start="49:21" pos:end="49:21">*</modifier> <specifier pos:start="49:23" pos:end="49:27">const</specifier></type> <name pos:start="49:29" pos:end="49:30">d1</name> <init pos:start="49:32" pos:end="49:68">= <expr pos:start="49:34" pos:end="49:68"><operator pos:start="49:34" pos:end="49:34">(</operator><ternary pos:start="49:35" pos:end="49:67"><condition pos:start="49:35" pos:end="49:42"><expr pos:start="49:35" pos:end="49:40"><name pos:start="49:35" pos:end="49:40">mirror</name></expr> ?</condition><then pos:start="49:44" pos:end="49:57"> <expr pos:start="49:44" pos:end="49:57"><name pos:start="49:44" pos:end="49:57">d1_bottom_line</name></expr> </then><else pos:start="49:59" pos:end="49:67">: <expr pos:start="49:61" pos:end="49:67"><name pos:start="49:61" pos:end="49:67">d1_data</name></expr></else></ternary><operator pos:start="49:68" pos:end="49:68">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:83"><decl pos:start="51:13" pos:end="51:82"><type pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:19">uint8_t</name> <modifier pos:start="51:21" pos:end="51:21">*</modifier> <specifier pos:start="51:23" pos:end="51:27">const</specifier></type> <name pos:start="51:29" pos:end="51:42">d2_bottom_line</name> <init pos:start="51:44" pos:end="51:82">= <expr pos:start="51:46" pos:end="51:82"><name pos:start="51:46" pos:end="51:52">d2_data</name> <operator pos:start="51:54" pos:end="51:54">+</operator> <name pos:start="51:56" pos:end="51:66">d2_linesize</name> <operator pos:start="51:68" pos:end="51:68">*</operator> <operator pos:start="51:70" pos:end="51:70">(</operator><name pos:start="51:71" pos:end="51:77"><name pos:start="51:71" pos:end="51:71">s</name><operator pos:start="51:72" pos:end="51:73">-&gt;</operator><name pos:start="51:74" pos:end="51:77">size</name></name> <operator pos:start="51:79" pos:end="51:79">-</operator> <literal type="number" pos:start="51:81" pos:end="51:81">1</literal><operator pos:start="51:82" pos:end="51:82">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:69"><decl pos:start="53:13" pos:end="53:68"><type pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:19">uint8_t</name> <modifier pos:start="53:21" pos:end="53:21">*</modifier> <specifier pos:start="53:23" pos:end="53:27">const</specifier></type> <name pos:start="53:29" pos:end="53:30">d2</name> <init pos:start="53:32" pos:end="53:68">= <expr pos:start="53:34" pos:end="53:68"><operator pos:start="53:34" pos:end="53:34">(</operator><ternary pos:start="53:35" pos:end="53:67"><condition pos:start="53:35" pos:end="53:42"><expr pos:start="53:35" pos:end="53:40"><name pos:start="53:35" pos:end="53:40">mirror</name></expr> ?</condition><then pos:start="53:44" pos:end="53:57"> <expr pos:start="53:44" pos:end="53:57"><name pos:start="53:44" pos:end="53:57">d2_bottom_line</name></expr> </then><else pos:start="53:59" pos:end="53:67">: <expr pos:start="53:61" pos:end="53:67"><name pos:start="53:61" pos:end="53:67">d2_data</name></expr></else></ternary><operator pos:start="53:68" pos:end="53:68">)</operator></expr></init></decl>;</decl_stmt>



            <for pos:start="57:13" pos:end="117:13">for <control pos:start="57:17" pos:end="57:39">(<init pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:22"><name pos:start="57:18" pos:end="57:18">y</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>;</init> <condition pos:start="57:25" pos:end="57:34"><expr pos:start="57:25" pos:end="57:33"><name pos:start="57:25" pos:end="57:25">y</name> <operator pos:start="57:27" pos:end="57:27">&lt;</operator> <name pos:start="57:29" pos:end="57:33">src_h</name></expr>;</condition> <incr pos:start="57:36" pos:end="57:38"><expr pos:start="57:36" pos:end="57:38"><name pos:start="57:36" pos:end="57:36">y</name><operator pos:start="57:37" pos:end="57:38">++</operator></expr></incr>)</control> <block pos:start="57:41" pos:end="117:13">{<block_content pos:start="59:17" pos:end="115:39">

                <decl_stmt pos:start="59:17" pos:end="59:48"><decl pos:start="59:17" pos:end="59:47"><type pos:start="59:17" pos:end="59:25"><specifier pos:start="59:17" pos:end="59:21">const</specifier> <name pos:start="59:23" pos:end="59:25">int</name></type> <name pos:start="59:27" pos:end="59:28">c1</name> <init pos:start="59:30" pos:end="59:47">= <expr pos:start="59:32" pos:end="59:47"><name pos:start="59:32" pos:end="59:41"><name pos:start="59:32" pos:end="59:38">c1_data</name><index pos:start="59:39" pos:end="59:41">[<expr pos:start="59:40" pos:end="59:40"><name pos:start="59:40" pos:end="59:40">x</name></expr>]</index></name> <operator pos:start="59:43" pos:end="59:43">-</operator> <literal type="number" pos:start="59:45" pos:end="59:47">128</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="61:17" pos:end="61:48"><decl pos:start="61:17" pos:end="61:47"><type pos:start="61:17" pos:end="61:25"><specifier pos:start="61:17" pos:end="61:21">const</specifier> <name pos:start="61:23" pos:end="61:25">int</name></type> <name pos:start="61:27" pos:end="61:28">c2</name> <init pos:start="61:30" pos:end="61:47">= <expr pos:start="61:32" pos:end="61:47"><name pos:start="61:32" pos:end="61:41"><name pos:start="61:32" pos:end="61:38">c2_data</name><index pos:start="61:39" pos:end="61:41">[<expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">x</name></expr>]</index></name> <operator pos:start="61:43" pos:end="61:43">-</operator> <literal type="number" pos:start="61:45" pos:end="61:47">128</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="63:17" pos:end="63:32"><decl pos:start="63:17" pos:end="63:31"><type pos:start="63:17" pos:end="63:25"><name pos:start="63:17" pos:end="63:23">uint8_t</name> <modifier pos:start="63:25" pos:end="63:25">*</modifier></type><name pos:start="63:26" pos:end="63:31">target</name></decl>;</decl_stmt>

                <decl_stmt pos:start="65:17" pos:end="65:22"><decl pos:start="65:17" pos:end="65:21"><type pos:start="65:17" pos:end="65:19"><name pos:start="65:17" pos:end="65:19">int</name></type> <name pos:start="65:21" pos:end="65:21">p</name></decl>;</decl_stmt>



                <for pos:start="69:17" pos:end="75:17">for <control pos:start="69:21" pos:end="69:48">(<init pos:start="69:22" pos:end="69:34"><expr pos:start="69:22" pos:end="69:33"><name pos:start="69:22" pos:end="69:22">p</name> <operator pos:start="69:24" pos:end="69:24">=</operator> <literal type="number" pos:start="69:26" pos:end="69:30">128</literal> <operator pos:start="69:30" pos:end="69:30">+</operator> <name pos:start="69:32" pos:end="69:33">c1</name></expr>;</init> <condition pos:start="69:36" pos:end="69:43"><expr pos:start="69:36" pos:end="69:42"><name pos:start="69:36" pos:end="69:36">p</name> <operator pos:start="69:38" pos:end="69:38">&lt;</operator> <literal type="number" pos:start="69:40" pos:end="69:42">128</literal></expr>;</condition> <incr pos:start="69:45" pos:end="69:47"><expr pos:start="69:45" pos:end="69:47"><name pos:start="69:45" pos:end="69:45">p</name><operator pos:start="69:46" pos:end="69:47">++</operator></expr></incr>)</control> <block pos:start="69:50" pos:end="75:17">{<block_content pos:start="71:21" pos:end="73:43">

                    <expr_stmt pos:start="71:21" pos:end="71:61"><expr pos:start="71:21" pos:end="71:60"><name pos:start="71:21" pos:end="71:26">target</name> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:31">d1</name> <operator pos:start="71:33" pos:end="71:33">+</operator> <name pos:start="71:35" pos:end="71:35">x</name> <operator pos:start="71:37" pos:end="71:37">+</operator> <name pos:start="71:39" pos:end="71:56">d1_signed_linesize</name> <operator pos:start="71:58" pos:end="71:58">*</operator> <name pos:start="71:60" pos:end="71:60">p</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:43"><expr pos:start="73:21" pos:end="73:42"><call pos:start="73:21" pos:end="73:42"><name pos:start="73:21" pos:end="73:26">update</name><argument_list pos:start="73:27" pos:end="73:42">(<argument pos:start="73:28" pos:end="73:33"><expr pos:start="73:28" pos:end="73:33"><name pos:start="73:28" pos:end="73:33">target</name></expr></argument>, <argument pos:start="73:36" pos:end="73:38"><expr pos:start="73:36" pos:end="73:38"><name pos:start="73:36" pos:end="73:38">max</name></expr></argument>, <argument pos:start="73:41" pos:end="73:41"><expr pos:start="73:41" pos:end="73:41"><literal type="number" pos:start="73:41" pos:end="73:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <for pos:start="79:17" pos:end="85:17">for <control pos:start="79:21" pos:end="79:52">(<init pos:start="79:22" pos:end="79:38"><expr pos:start="79:22" pos:end="79:37"><name pos:start="79:22" pos:end="79:22">p</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <literal type="number" pos:start="79:26" pos:end="79:30">128</literal> <operator pos:start="79:30" pos:end="79:30">+</operator> <name pos:start="79:32" pos:end="79:33">c1</name> <operator pos:start="79:35" pos:end="79:35">-</operator> <literal type="number" pos:start="79:37" pos:end="79:37">1</literal></expr>;</init> <condition pos:start="79:40" pos:end="79:47"><expr pos:start="79:40" pos:end="79:46"><name pos:start="79:40" pos:end="79:40">p</name> <operator pos:start="79:42" pos:end="79:42">&gt;</operator> <literal type="number" pos:start="79:44" pos:end="79:46">128</literal></expr>;</condition> <incr pos:start="79:49" pos:end="79:51"><expr pos:start="79:49" pos:end="79:51"><name pos:start="79:49" pos:end="79:49">p</name><operator pos:start="79:50" pos:end="79:51">--</operator></expr></incr>)</control> <block pos:start="79:54" pos:end="85:17">{<block_content pos:start="81:21" pos:end="83:43">

                    <expr_stmt pos:start="81:21" pos:end="81:61"><expr pos:start="81:21" pos:end="81:60"><name pos:start="81:21" pos:end="81:26">target</name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:31">d1</name> <operator pos:start="81:33" pos:end="81:33">+</operator> <name pos:start="81:35" pos:end="81:35">x</name> <operator pos:start="81:37" pos:end="81:37">+</operator> <name pos:start="81:39" pos:end="81:56">d1_signed_linesize</name> <operator pos:start="81:58" pos:end="81:58">*</operator> <name pos:start="81:60" pos:end="81:60">p</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:43"><expr pos:start="83:21" pos:end="83:42"><call pos:start="83:21" pos:end="83:42"><name pos:start="83:21" pos:end="83:26">update</name><argument_list pos:start="83:27" pos:end="83:42">(<argument pos:start="83:28" pos:end="83:33"><expr pos:start="83:28" pos:end="83:33"><name pos:start="83:28" pos:end="83:33">target</name></expr></argument>, <argument pos:start="83:36" pos:end="83:38"><expr pos:start="83:36" pos:end="83:38"><name pos:start="83:36" pos:end="83:38">max</name></expr></argument>, <argument pos:start="83:41" pos:end="83:41"><expr pos:start="83:41" pos:end="83:41"><literal type="number" pos:start="83:41" pos:end="83:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <for pos:start="89:17" pos:end="95:17">for <control pos:start="89:21" pos:end="89:48">(<init pos:start="89:22" pos:end="89:34"><expr pos:start="89:22" pos:end="89:33"><name pos:start="89:22" pos:end="89:22">p</name> <operator pos:start="89:24" pos:end="89:24">=</operator> <literal type="number" pos:start="89:26" pos:end="89:30">128</literal> <operator pos:start="89:30" pos:end="89:30">+</operator> <name pos:start="89:32" pos:end="89:33">c2</name></expr>;</init> <condition pos:start="89:36" pos:end="89:43"><expr pos:start="89:36" pos:end="89:42"><name pos:start="89:36" pos:end="89:36">p</name> <operator pos:start="89:38" pos:end="89:38">&lt;</operator> <literal type="number" pos:start="89:40" pos:end="89:42">128</literal></expr>;</condition> <incr pos:start="89:45" pos:end="89:47"><expr pos:start="89:45" pos:end="89:47"><name pos:start="89:45" pos:end="89:45">p</name><operator pos:start="89:46" pos:end="89:47">++</operator></expr></incr>)</control> <block pos:start="89:50" pos:end="95:17">{<block_content pos:start="91:21" pos:end="93:43">

                    <expr_stmt pos:start="91:21" pos:end="91:61"><expr pos:start="91:21" pos:end="91:60"><name pos:start="91:21" pos:end="91:26">target</name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:31">d2</name> <operator pos:start="91:33" pos:end="91:33">+</operator> <name pos:start="91:35" pos:end="91:35">x</name> <operator pos:start="91:37" pos:end="91:37">+</operator> <name pos:start="91:39" pos:end="91:56">d2_signed_linesize</name> <operator pos:start="91:58" pos:end="91:58">*</operator> <name pos:start="91:60" pos:end="91:60">p</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:43"><expr pos:start="93:21" pos:end="93:42"><call pos:start="93:21" pos:end="93:42"><name pos:start="93:21" pos:end="93:26">update</name><argument_list pos:start="93:27" pos:end="93:42">(<argument pos:start="93:28" pos:end="93:33"><expr pos:start="93:28" pos:end="93:33"><name pos:start="93:28" pos:end="93:33">target</name></expr></argument>, <argument pos:start="93:36" pos:end="93:38"><expr pos:start="93:36" pos:end="93:38"><name pos:start="93:36" pos:end="93:38">max</name></expr></argument>, <argument pos:start="93:41" pos:end="93:41"><expr pos:start="93:41" pos:end="93:41"><literal type="number" pos:start="93:41" pos:end="93:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <for pos:start="99:17" pos:end="105:17">for <control pos:start="99:21" pos:end="99:52">(<init pos:start="99:22" pos:end="99:38"><expr pos:start="99:22" pos:end="99:37"><name pos:start="99:22" pos:end="99:22">p</name> <operator pos:start="99:24" pos:end="99:24">=</operator> <literal type="number" pos:start="99:26" pos:end="99:30">128</literal> <operator pos:start="99:30" pos:end="99:30">+</operator> <name pos:start="99:32" pos:end="99:33">c2</name> <operator pos:start="99:35" pos:end="99:35">-</operator> <literal type="number" pos:start="99:37" pos:end="99:37">1</literal></expr>;</init> <condition pos:start="99:40" pos:end="99:47"><expr pos:start="99:40" pos:end="99:46"><name pos:start="99:40" pos:end="99:40">p</name> <operator pos:start="99:42" pos:end="99:42">&gt;</operator> <literal type="number" pos:start="99:44" pos:end="99:46">128</literal></expr>;</condition> <incr pos:start="99:49" pos:end="99:51"><expr pos:start="99:49" pos:end="99:51"><name pos:start="99:49" pos:end="99:49">p</name><operator pos:start="99:50" pos:end="99:51">--</operator></expr></incr>)</control> <block pos:start="99:54" pos:end="105:17">{<block_content pos:start="101:21" pos:end="103:43">

                    <expr_stmt pos:start="101:21" pos:end="101:61"><expr pos:start="101:21" pos:end="101:60"><name pos:start="101:21" pos:end="101:26">target</name> <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:31">d2</name> <operator pos:start="101:33" pos:end="101:33">+</operator> <name pos:start="101:35" pos:end="101:35">x</name> <operator pos:start="101:37" pos:end="101:37">+</operator> <name pos:start="101:39" pos:end="101:56">d2_signed_linesize</name> <operator pos:start="101:58" pos:end="101:58">*</operator> <name pos:start="101:60" pos:end="101:60">p</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:43"><expr pos:start="103:21" pos:end="103:42"><call pos:start="103:21" pos:end="103:42"><name pos:start="103:21" pos:end="103:26">update</name><argument_list pos:start="103:27" pos:end="103:42">(<argument pos:start="103:28" pos:end="103:33"><expr pos:start="103:28" pos:end="103:33"><name pos:start="103:28" pos:end="103:33">target</name></expr></argument>, <argument pos:start="103:36" pos:end="103:38"><expr pos:start="103:36" pos:end="103:38"><name pos:start="103:36" pos:end="103:38">max</name></expr></argument>, <argument pos:start="103:41" pos:end="103:41"><expr pos:start="103:41" pos:end="103:41"><literal type="number" pos:start="103:41" pos:end="103:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <expr_stmt pos:start="109:17" pos:end="109:39"><expr pos:start="109:17" pos:end="109:38"><name pos:start="109:17" pos:end="109:23">c1_data</name> <operator pos:start="109:25" pos:end="109:26">+=</operator> <name pos:start="109:28" pos:end="109:38">c1_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:39"><expr pos:start="111:17" pos:end="111:38"><name pos:start="111:17" pos:end="111:23">c2_data</name> <operator pos:start="111:25" pos:end="111:26">+=</operator> <name pos:start="111:28" pos:end="111:38">c2_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:39"><expr pos:start="113:17" pos:end="113:38"><name pos:start="113:17" pos:end="113:23">d1_data</name> <operator pos:start="113:25" pos:end="113:26">+=</operator> <name pos:start="113:28" pos:end="113:38">d1_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:39"><expr pos:start="115:17" pos:end="115:38"><name pos:start="115:17" pos:end="115:23">d2_data</name> <operator pos:start="115:25" pos:end="115:26">+=</operator> <name pos:start="115:28" pos:end="115:38">d2_linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="121:7" pos:end="245:5">else <block pos:start="121:12" pos:end="245:5">{<block_content pos:start="123:9" pos:end="243:9">

        <decl_stmt pos:start="123:9" pos:end="123:66"><decl pos:start="123:9" pos:end="123:65"><type pos:start="123:9" pos:end="123:23"><specifier pos:start="123:9" pos:end="123:13">const</specifier> <name pos:start="123:15" pos:end="123:21">uint8_t</name> <modifier pos:start="123:23" pos:end="123:23">*</modifier></type><name pos:start="123:24" pos:end="123:30">c1_data</name> <init pos:start="123:32" pos:end="123:65">= <expr pos:start="123:34" pos:end="123:65"><name pos:start="123:34" pos:end="123:65"><name pos:start="123:34" pos:end="123:35">in</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:41">data</name><index pos:start="123:42" pos:end="123:65">[<expr pos:start="123:43" pos:end="123:64"><operator pos:start="123:43" pos:end="123:43">(</operator><name pos:start="123:44" pos:end="123:48">plane</name> <operator pos:start="123:50" pos:end="123:50">+</operator> <literal type="number" pos:start="123:52" pos:end="123:52">1</literal><operator pos:start="123:53" pos:end="123:53">)</operator> <operator pos:start="123:55" pos:end="123:55">%</operator> <name pos:start="123:57" pos:end="123:64"><name pos:start="123:57" pos:end="123:57">s</name><operator pos:start="123:58" pos:end="123:59">-&gt;</operator><name pos:start="123:60" pos:end="123:64">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="125:9" pos:end="125:66"><decl pos:start="125:9" pos:end="125:65"><type pos:start="125:9" pos:end="125:23"><specifier pos:start="125:9" pos:end="125:13">const</specifier> <name pos:start="125:15" pos:end="125:21">uint8_t</name> <modifier pos:start="125:23" pos:end="125:23">*</modifier></type><name pos:start="125:24" pos:end="125:30">c2_data</name> <init pos:start="125:32" pos:end="125:65">= <expr pos:start="125:34" pos:end="125:65"><name pos:start="125:34" pos:end="125:65"><name pos:start="125:34" pos:end="125:35">in</name><operator pos:start="125:36" pos:end="125:37">-&gt;</operator><name pos:start="125:38" pos:end="125:41">data</name><index pos:start="125:42" pos:end="125:65">[<expr pos:start="125:43" pos:end="125:64"><operator pos:start="125:43" pos:end="125:43">(</operator><name pos:start="125:44" pos:end="125:48">plane</name> <operator pos:start="125:50" pos:end="125:50">+</operator> <literal type="number" pos:start="125:52" pos:end="125:52">2</literal><operator pos:start="125:53" pos:end="125:53">)</operator> <operator pos:start="125:55" pos:end="125:55">%</operator> <name pos:start="125:57" pos:end="125:64"><name pos:start="125:57" pos:end="125:57">s</name><operator pos:start="125:58" pos:end="125:59">-&gt;</operator><name pos:start="125:60" pos:end="125:64">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="127:9" pos:end="127:53"><decl pos:start="127:9" pos:end="127:52"><type pos:start="127:9" pos:end="127:17"><name pos:start="127:9" pos:end="127:15">uint8_t</name> <modifier pos:start="127:17" pos:end="127:17">*</modifier></type><name pos:start="127:18" pos:end="127:24">d0_data</name> <init pos:start="127:26" pos:end="127:52">= <expr pos:start="127:28" pos:end="127:52"><name pos:start="127:28" pos:end="127:43"><name pos:start="127:28" pos:end="127:30">out</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:36">data</name><index pos:start="127:37" pos:end="127:43">[<expr pos:start="127:38" pos:end="127:42"><name pos:start="127:38" pos:end="127:42">plane</name></expr>]</index></name> <operator pos:start="127:45" pos:end="127:45">+</operator> <name pos:start="127:47" pos:end="127:52">offset</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="129:9" pos:end="129:70"><decl pos:start="129:9" pos:end="129:69"><type pos:start="129:9" pos:end="129:17"><name pos:start="129:9" pos:end="129:15">uint8_t</name> <modifier pos:start="129:17" pos:end="129:17">*</modifier></type><name pos:start="129:18" pos:end="129:24">d1_data</name> <init pos:start="129:26" pos:end="129:69">= <expr pos:start="129:28" pos:end="129:69"><name pos:start="129:28" pos:end="129:60"><name pos:start="129:28" pos:end="129:30">out</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:36">data</name><index pos:start="129:37" pos:end="129:60">[<expr pos:start="129:38" pos:end="129:59"><operator pos:start="129:38" pos:end="129:38">(</operator><name pos:start="129:39" pos:end="129:43">plane</name> <operator pos:start="129:45" pos:end="129:45">+</operator> <literal type="number" pos:start="129:47" pos:end="129:47">1</literal><operator pos:start="129:48" pos:end="129:48">)</operator> <operator pos:start="129:50" pos:end="129:50">%</operator> <name pos:start="129:52" pos:end="129:59"><name pos:start="129:52" pos:end="129:52">s</name><operator pos:start="129:53" pos:end="129:54">-&gt;</operator><name pos:start="129:55" pos:end="129:59">ncomp</name></name></expr>]</index></name> <operator pos:start="129:62" pos:end="129:62">+</operator> <name pos:start="129:64" pos:end="129:69">offset</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="131:70"><decl pos:start="131:9" pos:end="131:69"><type pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:15">uint8_t</name> <modifier pos:start="131:17" pos:end="131:17">*</modifier></type><name pos:start="131:18" pos:end="131:24">d2_data</name> <init pos:start="131:26" pos:end="131:69">= <expr pos:start="131:28" pos:end="131:69"><name pos:start="131:28" pos:end="131:60"><name pos:start="131:28" pos:end="131:30">out</name><operator pos:start="131:31" pos:end="131:32">-&gt;</operator><name pos:start="131:33" pos:end="131:36">data</name><index pos:start="131:37" pos:end="131:60">[<expr pos:start="131:38" pos:end="131:59"><operator pos:start="131:38" pos:end="131:38">(</operator><name pos:start="131:39" pos:end="131:43">plane</name> <operator pos:start="131:45" pos:end="131:45">+</operator> <literal type="number" pos:start="131:47" pos:end="131:47">2</literal><operator pos:start="131:48" pos:end="131:48">)</operator> <operator pos:start="131:50" pos:end="131:50">%</operator> <name pos:start="131:52" pos:end="131:59"><name pos:start="131:52" pos:end="131:52">s</name><operator pos:start="131:53" pos:end="131:54">-&gt;</operator><name pos:start="131:55" pos:end="131:59">ncomp</name></name></expr>]</index></name> <operator pos:start="131:62" pos:end="131:62">+</operator> <name pos:start="131:64" pos:end="131:69">offset</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="135:9" pos:end="143:9"><if pos:start="135:9" pos:end="143:9">if <condition pos:start="135:12" pos:end="135:19">(<expr pos:start="135:13" pos:end="135:18"><name pos:start="135:13" pos:end="135:18">mirror</name></expr>)</condition> <block pos:start="135:21" pos:end="143:9">{<block_content pos:start="137:13" pos:end="141:35">

            <expr_stmt pos:start="137:13" pos:end="137:35"><expr pos:start="137:13" pos:end="137:34"><name pos:start="137:13" pos:end="137:19">d0_data</name> <operator pos:start="137:21" pos:end="137:22">+=</operator> <name pos:start="137:24" pos:end="137:30"><name pos:start="137:24" pos:end="137:24">s</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:30">size</name></name> <operator pos:start="137:32" pos:end="137:32">-</operator> <literal type="number" pos:start="137:34" pos:end="137:34">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:35"><expr pos:start="139:13" pos:end="139:34"><name pos:start="139:13" pos:end="139:19">d1_data</name> <operator pos:start="139:21" pos:end="139:22">+=</operator> <name pos:start="139:24" pos:end="139:30"><name pos:start="139:24" pos:end="139:24">s</name><operator pos:start="139:25" pos:end="139:26">-&gt;</operator><name pos:start="139:27" pos:end="139:30">size</name></name> <operator pos:start="139:32" pos:end="139:32">-</operator> <literal type="number" pos:start="139:34" pos:end="139:34">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:35"><expr pos:start="141:13" pos:end="141:34"><name pos:start="141:13" pos:end="141:19">d2_data</name> <operator pos:start="141:21" pos:end="141:22">+=</operator> <name pos:start="141:24" pos:end="141:30"><name pos:start="141:24" pos:end="141:24">s</name><operator pos:start="141:25" pos:end="141:26">-&gt;</operator><name pos:start="141:27" pos:end="141:30">size</name></name> <operator pos:start="141:32" pos:end="141:32">-</operator> <literal type="number" pos:start="141:34" pos:end="141:34">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="147:9" pos:end="243:9">for <control pos:start="147:13" pos:end="147:35">(<init pos:start="147:14" pos:end="147:19"><expr pos:start="147:14" pos:end="147:18"><name pos:start="147:14" pos:end="147:14">y</name> <operator pos:start="147:16" pos:end="147:16">=</operator> <literal type="number" pos:start="147:18" pos:end="147:18">0</literal></expr>;</init> <condition pos:start="147:21" pos:end="147:30"><expr pos:start="147:21" pos:end="147:29"><name pos:start="147:21" pos:end="147:21">y</name> <operator pos:start="147:23" pos:end="147:23">&lt;</operator> <name pos:start="147:25" pos:end="147:29">src_h</name></expr>;</condition> <incr pos:start="147:32" pos:end="147:34"><expr pos:start="147:32" pos:end="147:34"><name pos:start="147:32" pos:end="147:32">y</name><operator pos:start="147:33" pos:end="147:34">++</operator></expr></incr>)</control> <block pos:start="147:37" pos:end="243:9">{<block_content pos:start="149:13" pos:end="241:35">

            <for pos:start="149:13" pos:end="231:13">for <control pos:start="149:17" pos:end="149:39">(<init pos:start="149:18" pos:end="149:23"><expr pos:start="149:18" pos:end="149:22"><name pos:start="149:18" pos:end="149:18">x</name> <operator pos:start="149:20" pos:end="149:20">=</operator> <literal type="number" pos:start="149:22" pos:end="149:22">0</literal></expr>;</init> <condition pos:start="149:25" pos:end="149:34"><expr pos:start="149:25" pos:end="149:33"><name pos:start="149:25" pos:end="149:25">x</name> <operator pos:start="149:27" pos:end="149:27">&lt;</operator> <name pos:start="149:29" pos:end="149:33">src_w</name></expr>;</condition> <incr pos:start="149:36" pos:end="149:38"><expr pos:start="149:36" pos:end="149:38"><name pos:start="149:36" pos:end="149:36">x</name><operator pos:start="149:37" pos:end="149:38">++</operator></expr></incr>)</control> <block pos:start="149:41" pos:end="231:13">{<block_content pos:start="151:17" pos:end="229:17">

                <decl_stmt pos:start="151:17" pos:end="151:48"><decl pos:start="151:17" pos:end="151:47"><type pos:start="151:17" pos:end="151:25"><specifier pos:start="151:17" pos:end="151:21">const</specifier> <name pos:start="151:23" pos:end="151:25">int</name></type> <name pos:start="151:27" pos:end="151:28">c1</name> <init pos:start="151:30" pos:end="151:47">= <expr pos:start="151:32" pos:end="151:47"><name pos:start="151:32" pos:end="151:41"><name pos:start="151:32" pos:end="151:38">c1_data</name><index pos:start="151:39" pos:end="151:41">[<expr pos:start="151:40" pos:end="151:40"><name pos:start="151:40" pos:end="151:40">x</name></expr>]</index></name> <operator pos:start="151:43" pos:end="151:43">-</operator> <literal type="number" pos:start="151:45" pos:end="151:47">128</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="153:17" pos:end="153:48"><decl pos:start="153:17" pos:end="153:47"><type pos:start="153:17" pos:end="153:25"><specifier pos:start="153:17" pos:end="153:21">const</specifier> <name pos:start="153:23" pos:end="153:25">int</name></type> <name pos:start="153:27" pos:end="153:28">c2</name> <init pos:start="153:30" pos:end="153:47">= <expr pos:start="153:32" pos:end="153:47"><name pos:start="153:32" pos:end="153:41"><name pos:start="153:32" pos:end="153:38">c2_data</name><index pos:start="153:39" pos:end="153:41">[<expr pos:start="153:40" pos:end="153:40"><name pos:start="153:40" pos:end="153:40">x</name></expr>]</index></name> <operator pos:start="153:43" pos:end="153:43">-</operator> <literal type="number" pos:start="153:45" pos:end="153:47">128</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="155:17" pos:end="155:32"><decl pos:start="155:17" pos:end="155:31"><type pos:start="155:17" pos:end="155:25"><name pos:start="155:17" pos:end="155:23">uint8_t</name> <modifier pos:start="155:25" pos:end="155:25">*</modifier></type><name pos:start="155:26" pos:end="155:31">target</name></decl>;</decl_stmt>

                <decl_stmt pos:start="157:17" pos:end="157:22"><decl pos:start="157:17" pos:end="157:21"><type pos:start="157:17" pos:end="157:19"><name pos:start="157:17" pos:end="157:19">int</name></type> <name pos:start="157:21" pos:end="157:21">p</name></decl>;</decl_stmt>



                <for pos:start="161:17" pos:end="175:17">for <control pos:start="161:21" pos:end="161:48">(<init pos:start="161:22" pos:end="161:34"><expr pos:start="161:22" pos:end="161:33"><name pos:start="161:22" pos:end="161:22">p</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <literal type="number" pos:start="161:26" pos:end="161:30">128</literal> <operator pos:start="161:30" pos:end="161:30">+</operator> <name pos:start="161:32" pos:end="161:33">c1</name></expr>;</init> <condition pos:start="161:36" pos:end="161:43"><expr pos:start="161:36" pos:end="161:42"><name pos:start="161:36" pos:end="161:36">p</name> <operator pos:start="161:38" pos:end="161:38">&lt;</operator> <literal type="number" pos:start="161:40" pos:end="161:42">128</literal></expr>;</condition> <incr pos:start="161:45" pos:end="161:47"><expr pos:start="161:45" pos:end="161:47"><name pos:start="161:45" pos:end="161:45">p</name><operator pos:start="161:46" pos:end="161:47">++</operator></expr></incr>)</control> <block pos:start="161:50" pos:end="175:17">{<block_content pos:start="163:21" pos:end="173:43">

                    <if_stmt pos:start="163:21" pos:end="169:45"><if pos:start="163:21" pos:end="165:45">if <condition pos:start="163:24" pos:end="163:31">(<expr pos:start="163:25" pos:end="163:30"><name pos:start="163:25" pos:end="163:30">mirror</name></expr>)</condition><block type="pseudo" pos:start="165:25" pos:end="165:45"><block_content pos:start="165:25" pos:end="165:45">

                        <expr_stmt pos:start="165:25" pos:end="165:45"><expr pos:start="165:25" pos:end="165:44"><name pos:start="165:25" pos:end="165:30">target</name> <operator pos:start="165:32" pos:end="165:32">=</operator> <name pos:start="165:34" pos:end="165:40">d1_data</name> <operator pos:start="165:42" pos:end="165:42">-</operator> <name pos:start="165:44" pos:end="165:44">p</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="167:21" pos:end="169:45">else<block type="pseudo" pos:start="169:25" pos:end="169:45"><block_content pos:start="169:25" pos:end="169:45">

                        <expr_stmt pos:start="169:25" pos:end="169:45"><expr pos:start="169:25" pos:end="169:44"><name pos:start="169:25" pos:end="169:30">target</name> <operator pos:start="169:32" pos:end="169:32">=</operator> <name pos:start="169:34" pos:end="169:40">d1_data</name> <operator pos:start="169:42" pos:end="169:42">+</operator> <name pos:start="169:44" pos:end="169:44">p</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="173:21" pos:end="173:43"><expr pos:start="173:21" pos:end="173:42"><call pos:start="173:21" pos:end="173:42"><name pos:start="173:21" pos:end="173:26">update</name><argument_list pos:start="173:27" pos:end="173:42">(<argument pos:start="173:28" pos:end="173:33"><expr pos:start="173:28" pos:end="173:33"><name pos:start="173:28" pos:end="173:33">target</name></expr></argument>, <argument pos:start="173:36" pos:end="173:38"><expr pos:start="173:36" pos:end="173:38"><name pos:start="173:36" pos:end="173:38">max</name></expr></argument>, <argument pos:start="173:41" pos:end="173:41"><expr pos:start="173:41" pos:end="173:41"><literal type="number" pos:start="173:41" pos:end="173:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <for pos:start="179:17" pos:end="193:17">for <control pos:start="179:21" pos:end="179:52">(<init pos:start="179:22" pos:end="179:33"><expr pos:start="179:22" pos:end="179:32"><name pos:start="179:22" pos:end="179:22">p</name> <operator pos:start="179:24" pos:end="179:24">=</operator> <literal type="number" pos:start="179:26" pos:end="179:30">128</literal> <operator pos:start="179:30" pos:end="179:30">+</operator> <literal type="number" pos:start="179:32" pos:end="179:32">1</literal></expr>;</init> <condition pos:start="179:35" pos:end="179:47"><expr pos:start="179:35" pos:end="179:46"><name pos:start="179:35" pos:end="179:35">p</name> <operator pos:start="179:37" pos:end="179:37">&lt;</operator> <literal type="number" pos:start="179:39" pos:end="179:43">128</literal> <operator pos:start="179:43" pos:end="179:43">+</operator> <name pos:start="179:45" pos:end="179:46">c1</name></expr>;</condition> <incr pos:start="179:49" pos:end="179:51"><expr pos:start="179:49" pos:end="179:51"><name pos:start="179:49" pos:end="179:49">p</name><operator pos:start="179:50" pos:end="179:51">++</operator></expr></incr>)</control> <block pos:start="179:54" pos:end="193:17">{<block_content pos:start="181:21" pos:end="191:43">

                    <if_stmt pos:start="181:21" pos:end="187:45"><if pos:start="181:21" pos:end="183:45">if <condition pos:start="181:24" pos:end="181:31">(<expr pos:start="181:25" pos:end="181:30"><name pos:start="181:25" pos:end="181:30">mirror</name></expr>)</condition><block type="pseudo" pos:start="183:25" pos:end="183:45"><block_content pos:start="183:25" pos:end="183:45">

                        <expr_stmt pos:start="183:25" pos:end="183:45"><expr pos:start="183:25" pos:end="183:44"><name pos:start="183:25" pos:end="183:30">target</name> <operator pos:start="183:32" pos:end="183:32">=</operator> <name pos:start="183:34" pos:end="183:40">d1_data</name> <operator pos:start="183:42" pos:end="183:42">-</operator> <name pos:start="183:44" pos:end="183:44">p</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="185:21" pos:end="187:45">else<block type="pseudo" pos:start="187:25" pos:end="187:45"><block_content pos:start="187:25" pos:end="187:45">

                        <expr_stmt pos:start="187:25" pos:end="187:45"><expr pos:start="187:25" pos:end="187:44"><name pos:start="187:25" pos:end="187:30">target</name> <operator pos:start="187:32" pos:end="187:32">=</operator> <name pos:start="187:34" pos:end="187:40">d1_data</name> <operator pos:start="187:42" pos:end="187:42">+</operator> <name pos:start="187:44" pos:end="187:44">p</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="191:21" pos:end="191:43"><expr pos:start="191:21" pos:end="191:42"><call pos:start="191:21" pos:end="191:42"><name pos:start="191:21" pos:end="191:26">update</name><argument_list pos:start="191:27" pos:end="191:42">(<argument pos:start="191:28" pos:end="191:33"><expr pos:start="191:28" pos:end="191:33"><name pos:start="191:28" pos:end="191:33">target</name></expr></argument>, <argument pos:start="191:36" pos:end="191:38"><expr pos:start="191:36" pos:end="191:38"><name pos:start="191:36" pos:end="191:38">max</name></expr></argument>, <argument pos:start="191:41" pos:end="191:41"><expr pos:start="191:41" pos:end="191:41"><literal type="number" pos:start="191:41" pos:end="191:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <for pos:start="197:17" pos:end="211:17">for <control pos:start="197:21" pos:end="197:48">(<init pos:start="197:22" pos:end="197:34"><expr pos:start="197:22" pos:end="197:33"><name pos:start="197:22" pos:end="197:22">p</name> <operator pos:start="197:24" pos:end="197:24">=</operator> <literal type="number" pos:start="197:26" pos:end="197:30">128</literal> <operator pos:start="197:30" pos:end="197:30">+</operator> <name pos:start="197:32" pos:end="197:33">c2</name></expr>;</init> <condition pos:start="197:36" pos:end="197:43"><expr pos:start="197:36" pos:end="197:42"><name pos:start="197:36" pos:end="197:36">p</name> <operator pos:start="197:38" pos:end="197:38">&lt;</operator> <literal type="number" pos:start="197:40" pos:end="197:42">128</literal></expr>;</condition> <incr pos:start="197:45" pos:end="197:47"><expr pos:start="197:45" pos:end="197:47"><name pos:start="197:45" pos:end="197:45">p</name><operator pos:start="197:46" pos:end="197:47">++</operator></expr></incr>)</control> <block pos:start="197:50" pos:end="211:17">{<block_content pos:start="199:21" pos:end="209:43">

                    <if_stmt pos:start="199:21" pos:end="205:45"><if pos:start="199:21" pos:end="201:45">if <condition pos:start="199:24" pos:end="199:31">(<expr pos:start="199:25" pos:end="199:30"><name pos:start="199:25" pos:end="199:30">mirror</name></expr>)</condition><block type="pseudo" pos:start="201:25" pos:end="201:45"><block_content pos:start="201:25" pos:end="201:45">

                        <expr_stmt pos:start="201:25" pos:end="201:45"><expr pos:start="201:25" pos:end="201:44"><name pos:start="201:25" pos:end="201:30">target</name> <operator pos:start="201:32" pos:end="201:32">=</operator> <name pos:start="201:34" pos:end="201:40">d2_data</name> <operator pos:start="201:42" pos:end="201:42">-</operator> <name pos:start="201:44" pos:end="201:44">p</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="203:21" pos:end="205:45">else<block type="pseudo" pos:start="205:25" pos:end="205:45"><block_content pos:start="205:25" pos:end="205:45">

                        <expr_stmt pos:start="205:25" pos:end="205:45"><expr pos:start="205:25" pos:end="205:44"><name pos:start="205:25" pos:end="205:30">target</name> <operator pos:start="205:32" pos:end="205:32">=</operator> <name pos:start="205:34" pos:end="205:40">d2_data</name> <operator pos:start="205:42" pos:end="205:42">+</operator> <name pos:start="205:44" pos:end="205:44">p</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="209:21" pos:end="209:43"><expr pos:start="209:21" pos:end="209:42"><call pos:start="209:21" pos:end="209:42"><name pos:start="209:21" pos:end="209:26">update</name><argument_list pos:start="209:27" pos:end="209:42">(<argument pos:start="209:28" pos:end="209:33"><expr pos:start="209:28" pos:end="209:33"><name pos:start="209:28" pos:end="209:33">target</name></expr></argument>, <argument pos:start="209:36" pos:end="209:38"><expr pos:start="209:36" pos:end="209:38"><name pos:start="209:36" pos:end="209:38">max</name></expr></argument>, <argument pos:start="209:41" pos:end="209:41"><expr pos:start="209:41" pos:end="209:41"><literal type="number" pos:start="209:41" pos:end="209:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <for pos:start="215:17" pos:end="229:17">for <control pos:start="215:21" pos:end="215:52">(<init pos:start="215:22" pos:end="215:33"><expr pos:start="215:22" pos:end="215:32"><name pos:start="215:22" pos:end="215:22">p</name> <operator pos:start="215:24" pos:end="215:24">=</operator> <literal type="number" pos:start="215:26" pos:end="215:30">128</literal> <operator pos:start="215:30" pos:end="215:30">+</operator> <literal type="number" pos:start="215:32" pos:end="215:32">1</literal></expr>;</init> <condition pos:start="215:35" pos:end="215:47"><expr pos:start="215:35" pos:end="215:46"><name pos:start="215:35" pos:end="215:35">p</name> <operator pos:start="215:37" pos:end="215:37">&lt;</operator> <literal type="number" pos:start="215:39" pos:end="215:43">128</literal> <operator pos:start="215:43" pos:end="215:43">+</operator> <name pos:start="215:45" pos:end="215:46">c2</name></expr>;</condition> <incr pos:start="215:49" pos:end="215:51"><expr pos:start="215:49" pos:end="215:51"><name pos:start="215:49" pos:end="215:49">p</name><operator pos:start="215:50" pos:end="215:51">++</operator></expr></incr>)</control> <block pos:start="215:54" pos:end="229:17">{<block_content pos:start="217:21" pos:end="227:43">

                    <if_stmt pos:start="217:21" pos:end="223:45"><if pos:start="217:21" pos:end="219:45">if <condition pos:start="217:24" pos:end="217:31">(<expr pos:start="217:25" pos:end="217:30"><name pos:start="217:25" pos:end="217:30">mirror</name></expr>)</condition><block type="pseudo" pos:start="219:25" pos:end="219:45"><block_content pos:start="219:25" pos:end="219:45">

                        <expr_stmt pos:start="219:25" pos:end="219:45"><expr pos:start="219:25" pos:end="219:44"><name pos:start="219:25" pos:end="219:30">target</name> <operator pos:start="219:32" pos:end="219:32">=</operator> <name pos:start="219:34" pos:end="219:40">d2_data</name> <operator pos:start="219:42" pos:end="219:42">-</operator> <name pos:start="219:44" pos:end="219:44">p</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="221:21" pos:end="223:45">else<block type="pseudo" pos:start="223:25" pos:end="223:45"><block_content pos:start="223:25" pos:end="223:45">

                        <expr_stmt pos:start="223:25" pos:end="223:45"><expr pos:start="223:25" pos:end="223:44"><name pos:start="223:25" pos:end="223:30">target</name> <operator pos:start="223:32" pos:end="223:32">=</operator> <name pos:start="223:34" pos:end="223:40">d2_data</name> <operator pos:start="223:42" pos:end="223:42">+</operator> <name pos:start="223:44" pos:end="223:44">p</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="227:21" pos:end="227:43"><expr pos:start="227:21" pos:end="227:42"><call pos:start="227:21" pos:end="227:42"><name pos:start="227:21" pos:end="227:26">update</name><argument_list pos:start="227:27" pos:end="227:42">(<argument pos:start="227:28" pos:end="227:33"><expr pos:start="227:28" pos:end="227:33"><name pos:start="227:28" pos:end="227:33">target</name></expr></argument>, <argument pos:start="227:36" pos:end="227:38"><expr pos:start="227:36" pos:end="227:38"><name pos:start="227:36" pos:end="227:38">max</name></expr></argument>, <argument pos:start="227:41" pos:end="227:41"><expr pos:start="227:41" pos:end="227:41"><literal type="number" pos:start="227:41" pos:end="227:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



            <expr_stmt pos:start="235:13" pos:end="235:35"><expr pos:start="235:13" pos:end="235:34"><name pos:start="235:13" pos:end="235:19">c1_data</name> <operator pos:start="235:21" pos:end="235:22">+=</operator> <name pos:start="235:24" pos:end="235:34">c1_linesize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:35"><expr pos:start="237:13" pos:end="237:34"><name pos:start="237:13" pos:end="237:19">c2_data</name> <operator pos:start="237:21" pos:end="237:22">+=</operator> <name pos:start="237:24" pos:end="237:34">c2_linesize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:35"><expr pos:start="239:13" pos:end="239:34"><name pos:start="239:13" pos:end="239:19">d1_data</name> <operator pos:start="239:21" pos:end="239:22">+=</operator> <name pos:start="239:24" pos:end="239:34">d1_linesize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:35"><expr pos:start="241:13" pos:end="241:34"><name pos:start="241:13" pos:end="241:19">d2_data</name> <operator pos:start="241:21" pos:end="241:22">+=</operator> <name pos:start="241:24" pos:end="241:34">d2_linesize</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:52"><expr pos:start="249:5" pos:end="249:51"><call pos:start="249:5" pos:end="249:51"><name pos:start="249:5" pos:end="249:12">envelope</name><argument_list pos:start="249:13" pos:end="249:51">(<argument pos:start="249:14" pos:end="249:14"><expr pos:start="249:14" pos:end="249:14"><name pos:start="249:14" pos:end="249:14">s</name></expr></argument>, <argument pos:start="249:17" pos:end="249:19"><expr pos:start="249:17" pos:end="249:19"><name pos:start="249:17" pos:end="249:19">out</name></expr></argument>, <argument pos:start="249:22" pos:end="249:26"><expr pos:start="249:22" pos:end="249:26"><name pos:start="249:22" pos:end="249:26">plane</name></expr></argument>, <argument pos:start="249:29" pos:end="249:50"><expr pos:start="249:29" pos:end="249:50"><operator pos:start="249:29" pos:end="249:29">(</operator><name pos:start="249:30" pos:end="249:34">plane</name> <operator pos:start="249:36" pos:end="249:36">+</operator> <literal type="number" pos:start="249:38" pos:end="249:38">1</literal><operator pos:start="249:39" pos:end="249:39">)</operator> <operator pos:start="249:41" pos:end="249:41">%</operator> <name pos:start="249:43" pos:end="249:50"><name pos:start="249:43" pos:end="249:43">s</name><operator pos:start="249:44" pos:end="249:45">-&gt;</operator><name pos:start="249:46" pos:end="249:50">ncomp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:52"><expr pos:start="251:5" pos:end="251:51"><call pos:start="251:5" pos:end="251:51"><name pos:start="251:5" pos:end="251:12">envelope</name><argument_list pos:start="251:13" pos:end="251:51">(<argument pos:start="251:14" pos:end="251:14"><expr pos:start="251:14" pos:end="251:14"><name pos:start="251:14" pos:end="251:14">s</name></expr></argument>, <argument pos:start="251:17" pos:end="251:19"><expr pos:start="251:17" pos:end="251:19"><name pos:start="251:17" pos:end="251:19">out</name></expr></argument>, <argument pos:start="251:22" pos:end="251:26"><expr pos:start="251:22" pos:end="251:26"><name pos:start="251:22" pos:end="251:26">plane</name></expr></argument>, <argument pos:start="251:29" pos:end="251:50"><expr pos:start="251:29" pos:end="251:50"><operator pos:start="251:29" pos:end="251:29">(</operator><name pos:start="251:30" pos:end="251:34">plane</name> <operator pos:start="251:36" pos:end="251:36">+</operator> <literal type="number" pos:start="251:38" pos:end="251:38">2</literal><operator pos:start="251:39" pos:end="251:39">)</operator> <operator pos:start="251:41" pos:end="251:41">%</operator> <name pos:start="251:43" pos:end="251:50"><name pos:start="251:43" pos:end="251:43">s</name><operator pos:start="251:44" pos:end="251:45">-&gt;</operator><name pos:start="251:46" pos:end="251:50">ncomp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
