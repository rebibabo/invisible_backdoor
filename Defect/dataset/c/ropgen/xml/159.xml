<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/159.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">smacker_read_packet</name><parameter_list pos:start="1:31" pos:end="1:65">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:59">AVPacket</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="241:1">{<block_content pos:start="5:5" pos:end="239:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SmackerContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">smk</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">frame_size</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">palchange</name> <init pos:start="15:19" pos:end="15:21">= <expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:27"><if pos:start="19:5" pos:end="21:27">if <condition pos:start="19:8" pos:end="19:60">(<expr pos:start="19:9" pos:end="19:59"><name pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:13">pb</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:26">eof_reached</name></name> <operator pos:start="19:28" pos:end="19:29">||</operator> <name pos:start="19:31" pos:end="19:44"><name pos:start="19:31" pos:end="19:33">smk</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:44">cur_frame</name></name> <operator pos:start="19:46" pos:end="19:47">&gt;=</operator> <name pos:start="19:49" pos:end="19:59"><name pos:start="19:49" pos:end="19:51">smk</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:59">frames</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:27"><block_content pos:start="21:9" pos:end="21:27">

        <return pos:start="21:9" pos:end="21:27">return <expr pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:55">/* if we demuxed all streams, pass another frame */</comment>

    <if_stmt pos:start="27:5" pos:end="235:5"><if pos:start="27:5" pos:end="213:5">if<condition pos:start="27:7" pos:end="27:26">(<expr pos:start="27:8" pos:end="27:25"><name pos:start="27:8" pos:end="27:21"><name pos:start="27:8" pos:end="27:10">smk</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:21">curstream</name></name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr>)</condition> <block pos:start="27:28" pos:end="213:5">{<block_content pos:start="29:9" pos:end="211:40">

        <expr_stmt pos:start="29:9" pos:end="29:42"><expr pos:start="29:9" pos:end="29:41"><call pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:17">avio_seek</name><argument_list pos:start="29:18" pos:end="29:41">(<argument pos:start="29:19" pos:end="29:23"><expr pos:start="29:19" pos:end="29:23"><name pos:start="29:19" pos:end="29:23"><name pos:start="29:19" pos:end="29:19">s</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:23">pb</name></name></expr></argument>, <argument pos:start="29:26" pos:end="29:37"><expr pos:start="29:26" pos:end="29:37"><name pos:start="29:26" pos:end="29:37"><name pos:start="29:26" pos:end="29:28">smk</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:37">nextpos</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:40"><expr pos:start="29:40" pos:end="29:40"><literal type="number" pos:start="29:40" pos:end="29:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:18">frame_size</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:50"><name pos:start="31:22" pos:end="31:24">smk</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:34">frm_size</name><index pos:start="31:35" pos:end="31:50">[<expr pos:start="31:36" pos:end="31:49"><name pos:start="31:36" pos:end="31:49"><name pos:start="31:36" pos:end="31:38">smk</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:49">cur_frame</name></name></expr>]</index></name> <operator pos:start="31:52" pos:end="31:52">&amp;</operator> <operator pos:start="31:54" pos:end="31:54">(</operator><operator pos:start="31:55" pos:end="31:55">~</operator><literal type="number" pos:start="31:56" pos:end="31:56">3</literal><operator pos:start="31:57" pos:end="31:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:13">flags</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:46"><name pos:start="33:17" pos:end="33:19">smk</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:30">frm_flags</name><index pos:start="33:31" pos:end="33:46">[<expr pos:start="33:32" pos:end="33:45"><name pos:start="33:32" pos:end="33:45"><name pos:start="33:32" pos:end="33:34">smk</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:45">cur_frame</name></name></expr>]</index></name></expr>;</expr_stmt>

        <comment type="block" pos:start="35:9" pos:end="35:41">/* handle palette change event */</comment>

        <if_stmt pos:start="37:9" pos:end="123:9"><if pos:start="37:9" pos:end="123:9">if<condition pos:start="37:11" pos:end="37:31">(<expr pos:start="37:12" pos:end="37:30"><name pos:start="37:12" pos:end="37:16">flags</name> <operator pos:start="37:18" pos:end="37:18">&amp;</operator> <name pos:start="37:20" pos:end="37:30">SMACKER_PAL</name></expr>)</condition><block pos:start="37:32" pos:end="123:9">{<block_content pos:start="39:13" pos:end="121:27">

            <decl_stmt pos:start="39:13" pos:end="39:41"><decl pos:start="39:13" pos:end="39:20"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:20">size</name></decl>, <decl pos:start="39:23" pos:end="39:24"><type ref="prev" pos:start="39:13" pos:end="39:15"/><name pos:start="39:23" pos:end="39:24">sz</name></decl>, <decl pos:start="39:27" pos:end="39:27"><type ref="prev" pos:start="39:13" pos:end="39:15"/><name pos:start="39:27" pos:end="39:27">t</name></decl>, <decl pos:start="39:30" pos:end="39:32"><type ref="prev" pos:start="39:13" pos:end="39:15"/><name pos:start="39:30" pos:end="39:32">off</name></decl>, <decl pos:start="39:35" pos:end="39:35"><type ref="prev" pos:start="39:13" pos:end="39:15"/><name pos:start="39:35" pos:end="39:35">j</name></decl>, <decl pos:start="39:38" pos:end="39:40"><type ref="prev" pos:start="39:13" pos:end="39:15"/><name pos:start="39:38" pos:end="39:40">pos</name></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:36"><decl pos:start="41:13" pos:end="41:35"><type pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:19">uint8_t</name> <modifier pos:start="41:21" pos:end="41:21">*</modifier></type><name pos:start="41:22" pos:end="41:24">pal</name> <init pos:start="41:26" pos:end="41:35">= <expr pos:start="41:28" pos:end="41:35"><name pos:start="41:28" pos:end="41:35"><name pos:start="41:28" pos:end="41:30">smk</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:35">pal</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:32"><decl pos:start="43:13" pos:end="43:31"><type pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:19">uint8_t</name></type> <name pos:start="43:21" pos:end="43:31"><name pos:start="43:21" pos:end="43:26">oldpal</name><index pos:start="43:27" pos:end="43:31">[<expr pos:start="43:28" pos:end="43:30"><literal type="number" pos:start="43:28" pos:end="43:30">768</literal></expr>]</index></name></decl>;</decl_stmt>



            <expr_stmt pos:start="47:13" pos:end="47:37"><expr pos:start="47:13" pos:end="47:36"><call pos:start="47:13" pos:end="47:36"><name pos:start="47:13" pos:end="47:18">memcpy</name><argument_list pos:start="47:19" pos:end="47:36">(<argument pos:start="47:20" pos:end="47:25"><expr pos:start="47:20" pos:end="47:25"><name pos:start="47:20" pos:end="47:25">oldpal</name></expr></argument>, <argument pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">pal</name></expr></argument>, <argument pos:start="47:33" pos:end="47:35"><expr pos:start="47:33" pos:end="47:35"><literal type="number" pos:start="47:33" pos:end="47:35">768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:34"><expr pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:16">size</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:33"><name pos:start="49:20" pos:end="49:26">avio_r8</name><argument_list pos:start="49:27" pos:end="49:33">(<argument pos:start="49:28" pos:end="49:32"><expr pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:32">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:32"><expr pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:16">size</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:23">size</name> <operator pos:start="51:25" pos:end="51:25">*</operator> <literal type="number" pos:start="51:27" pos:end="51:29">4</literal> <operator pos:start="51:29" pos:end="51:29">-</operator> <literal type="number" pos:start="51:31" pos:end="51:31">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:31"><expr pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:22">frame_size</name> <operator pos:start="53:24" pos:end="53:25">-=</operator> <name pos:start="53:27" pos:end="53:30">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:25"><expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:22">frame_size</name><operator pos:start="55:23" pos:end="55:24">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:19"><expr pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:14">sz</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:42"><expr pos:start="59:13" pos:end="59:41"><name pos:start="59:13" pos:end="59:15">pos</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:34"><name pos:start="59:19" pos:end="59:27">avio_tell</name><argument_list pos:start="59:28" pos:end="59:34">(<argument pos:start="59:29" pos:end="59:33"><expr pos:start="59:29" pos:end="59:33"><name pos:start="59:29" pos:end="59:33"><name pos:start="59:29" pos:end="59:29">s</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:33">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="59:36" pos:end="59:36">+</operator> <name pos:start="59:38" pos:end="59:41">size</name></expr>;</expr_stmt>

            <while pos:start="61:13" pos:end="117:13">while<condition pos:start="61:18" pos:end="61:27">(<expr pos:start="61:19" pos:end="61:26"><name pos:start="61:19" pos:end="61:20">sz</name> <operator pos:start="61:22" pos:end="61:22">&lt;</operator> <literal type="number" pos:start="61:24" pos:end="61:26">256</literal></expr>)</condition><block pos:start="61:28" pos:end="117:13">{<block_content pos:start="63:17" pos:end="115:17">

                <expr_stmt pos:start="63:17" pos:end="63:35"><expr pos:start="63:17" pos:end="63:34"><name pos:start="63:17" pos:end="63:17">t</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <call pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:27">avio_r8</name><argument_list pos:start="63:28" pos:end="63:34">(<argument pos:start="63:29" pos:end="63:33"><expr pos:start="63:29" pos:end="63:33"><name pos:start="63:29" pos:end="63:33"><name pos:start="63:29" pos:end="63:29">s</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="65:17" pos:end="115:17"><if pos:start="65:17" pos:end="71:17">if<condition pos:start="65:19" pos:end="65:28">(<expr pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:20">t</name> <operator pos:start="65:22" pos:end="65:22">&amp;</operator> <literal type="number" pos:start="65:24" pos:end="65:27">0x80</literal></expr>)</condition><block pos:start="65:29" pos:end="71:17">{<block_content pos:start="67:21" pos:end="69:48"> <comment type="block" pos:start="65:31" pos:end="65:56">/* skip palette entries */</comment>

                    <expr_stmt pos:start="67:21" pos:end="67:41"><expr pos:start="67:21" pos:end="67:40"><name pos:start="67:21" pos:end="67:22">sz</name> <operator pos:start="67:24" pos:end="67:25">+=</operator> <operator pos:start="67:27" pos:end="67:27">(</operator><name pos:start="67:28" pos:end="67:28">t</name> <operator pos:start="67:30" pos:end="67:30">&amp;</operator> <literal type="number" pos:start="67:32" pos:end="67:35">0x7F</literal><operator pos:start="67:36" pos:end="67:36">)</operator> <operator pos:start="67:38" pos:end="67:38">+</operator> <literal type="number" pos:start="67:40" pos:end="67:40">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:48"><expr pos:start="69:21" pos:end="69:47"><name pos:start="69:21" pos:end="69:23">pal</name> <operator pos:start="69:25" pos:end="69:26">+=</operator> <operator pos:start="69:28" pos:end="69:28">(</operator><operator pos:start="69:29" pos:end="69:29">(</operator><name pos:start="69:30" pos:end="69:30">t</name> <operator pos:start="69:32" pos:end="69:32">&amp;</operator> <literal type="number" pos:start="69:34" pos:end="69:37">0x7F</literal><operator pos:start="69:38" pos:end="69:38">)</operator> <operator pos:start="69:40" pos:end="69:40">+</operator> <literal type="number" pos:start="69:42" pos:end="69:42">1</literal><operator pos:start="69:43" pos:end="69:43">)</operator> <operator pos:start="69:45" pos:end="69:45">*</operator> <literal type="number" pos:start="69:47" pos:end="69:47">3</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="71:19" pos:end="105:17">else if<condition pos:start="71:26" pos:end="71:35">(<expr pos:start="71:27" pos:end="71:34"><name pos:start="71:27" pos:end="71:27">t</name> <operator pos:start="71:29" pos:end="71:29">&amp;</operator> <literal type="number" pos:start="71:31" pos:end="71:34">0x40</literal></expr>)</condition><block pos:start="71:36" pos:end="105:17">{<block_content pos:start="73:21" pos:end="103:21"> <comment type="block" pos:start="71:38" pos:end="71:59">/* copy with offset */</comment>

                    <expr_stmt pos:start="73:21" pos:end="73:41"><expr pos:start="73:21" pos:end="73:40"><name pos:start="73:21" pos:end="73:23">off</name> <operator pos:start="73:25" pos:end="73:25">=</operator> <call pos:start="73:27" pos:end="73:40"><name pos:start="73:27" pos:end="73:33">avio_r8</name><argument_list pos:start="73:34" pos:end="73:40">(<argument pos:start="73:35" pos:end="73:39"><expr pos:start="73:35" pos:end="73:39"><name pos:start="73:35" pos:end="73:39"><name pos:start="73:35" pos:end="73:35">s</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:39">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:39"><expr pos:start="75:21" pos:end="75:38"><name pos:start="75:21" pos:end="75:21">j</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <operator pos:start="75:25" pos:end="75:25">(</operator><name pos:start="75:26" pos:end="75:26">t</name> <operator pos:start="75:28" pos:end="75:28">&amp;</operator> <literal type="number" pos:start="75:30" pos:end="75:33">0x3F</literal><operator pos:start="75:34" pos:end="75:34">)</operator> <operator pos:start="75:36" pos:end="75:36">+</operator> <literal type="number" pos:start="75:38" pos:end="75:38">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="77:21" pos:end="87:21"><if pos:start="77:21" pos:end="87:21">if <condition pos:start="77:24" pos:end="77:40">(<expr pos:start="77:25" pos:end="77:39"><name pos:start="77:25" pos:end="77:27">off</name> <operator pos:start="77:29" pos:end="77:29">+</operator> <name pos:start="77:31" pos:end="77:31">j</name> <operator pos:start="77:33" pos:end="77:33">&gt;</operator> <literal type="number" pos:start="77:35" pos:end="77:39">0x100</literal></expr>)</condition> <block pos:start="77:42" pos:end="87:21">{<block_content pos:start="79:25" pos:end="85:51">

                        <expr_stmt pos:start="79:25" pos:end="83:39"><expr pos:start="79:25" pos:end="83:38"><call pos:start="79:25" pos:end="83:38"><name pos:start="79:25" pos:end="79:30">av_log</name><argument_list pos:start="79:31" pos:end="83:38">(<argument pos:start="79:32" pos:end="79:32"><expr pos:start="79:32" pos:end="79:32"><name pos:start="79:32" pos:end="79:32">s</name></expr></argument>, <argument pos:start="79:35" pos:end="79:46"><expr pos:start="79:35" pos:end="79:46"><name pos:start="79:35" pos:end="79:46">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="81:32" pos:end="81:106"><expr pos:start="81:32" pos:end="81:106"><literal type="string" pos:start="81:32" pos:end="81:106">"Invalid palette update, offset=%d length=%d extends beyond palette size\n"</literal></expr></argument>,

                               <argument pos:start="83:32" pos:end="83:34"><expr pos:start="83:32" pos:end="83:34"><name pos:start="83:32" pos:end="83:34">off</name></expr></argument>, <argument pos:start="83:37" pos:end="83:37"><expr pos:start="83:37" pos:end="83:37"><name pos:start="83:37" pos:end="83:37">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="85:25" pos:end="85:51">return <expr pos:start="85:32" pos:end="85:50"><name pos:start="85:32" pos:end="85:50">AVERROR_INVALIDDATA</name></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:29"><expr pos:start="89:21" pos:end="89:28"><name pos:start="89:21" pos:end="89:23">off</name> <operator pos:start="89:25" pos:end="89:26">*=</operator> <literal type="number" pos:start="89:28" pos:end="89:28">3</literal></expr>;</expr_stmt>

                    <while pos:start="91:21" pos:end="103:21">while<condition pos:start="91:26" pos:end="91:42">(<expr pos:start="91:27" pos:end="91:41"><name pos:start="91:27" pos:end="91:27">j</name><operator pos:start="91:28" pos:end="91:29">--</operator> <operator pos:start="91:31" pos:end="91:32">&amp;&amp;</operator> <name pos:start="91:34" pos:end="91:35">sz</name> <operator pos:start="91:37" pos:end="91:37">&lt;</operator> <literal type="number" pos:start="91:39" pos:end="91:41">256</literal></expr>)</condition> <block pos:start="91:44" pos:end="103:21">{<block_content pos:start="93:25" pos:end="101:33">

                        <expr_stmt pos:start="93:25" pos:end="93:49"><expr pos:start="93:25" pos:end="93:48"><operator pos:start="93:25" pos:end="93:25">*</operator><name pos:start="93:26" pos:end="93:28">pal</name><operator pos:start="93:29" pos:end="93:30">++</operator> <operator pos:start="93:32" pos:end="93:32">=</operator> <name pos:start="93:34" pos:end="93:48"><name pos:start="93:34" pos:end="93:39">oldpal</name><index pos:start="93:40" pos:end="93:48">[<expr pos:start="93:41" pos:end="93:47"><name pos:start="93:41" pos:end="93:43">off</name> <operator pos:start="93:45" pos:end="93:45">+</operator> <literal type="number" pos:start="93:47" pos:end="93:47">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="95:25" pos:end="95:49"><expr pos:start="95:25" pos:end="95:48"><operator pos:start="95:25" pos:end="95:25">*</operator><name pos:start="95:26" pos:end="95:28">pal</name><operator pos:start="95:29" pos:end="95:30">++</operator> <operator pos:start="95:32" pos:end="95:32">=</operator> <name pos:start="95:34" pos:end="95:48"><name pos:start="95:34" pos:end="95:39">oldpal</name><index pos:start="95:40" pos:end="95:48">[<expr pos:start="95:41" pos:end="95:47"><name pos:start="95:41" pos:end="95:43">off</name> <operator pos:start="95:45" pos:end="95:45">+</operator> <literal type="number" pos:start="95:47" pos:end="95:47">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="97:25" pos:end="97:49"><expr pos:start="97:25" pos:end="97:48"><operator pos:start="97:25" pos:end="97:25">*</operator><name pos:start="97:26" pos:end="97:28">pal</name><operator pos:start="97:29" pos:end="97:30">++</operator> <operator pos:start="97:32" pos:end="97:32">=</operator> <name pos:start="97:34" pos:end="97:48"><name pos:start="97:34" pos:end="97:39">oldpal</name><index pos:start="97:40" pos:end="97:48">[<expr pos:start="97:41" pos:end="97:47"><name pos:start="97:41" pos:end="97:43">off</name> <operator pos:start="97:45" pos:end="97:45">+</operator> <literal type="number" pos:start="97:47" pos:end="97:47">2</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="99:25" pos:end="99:29"><expr pos:start="99:25" pos:end="99:28"><name pos:start="99:25" pos:end="99:26">sz</name><operator pos:start="99:27" pos:end="99:28">++</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="101:25" pos:end="101:33"><expr pos:start="101:25" pos:end="101:32"><name pos:start="101:25" pos:end="101:27">off</name> <operator pos:start="101:29" pos:end="101:30">+=</operator> <literal type="number" pos:start="101:32" pos:end="101:32">3</literal></expr>;</expr_stmt>

                    </block_content>}</block></while>

                </block_content>}</block></if> <else pos:start="105:19" pos:end="115:17">else <block pos:start="105:24" pos:end="115:17">{<block_content pos:start="107:21" pos:end="113:25"> <comment type="block" pos:start="105:26" pos:end="105:42">/* new entries */</comment>

                    <expr_stmt pos:start="107:21" pos:end="107:40"><expr pos:start="107:21" pos:end="107:39"><operator pos:start="107:21" pos:end="107:21">*</operator><name pos:start="107:22" pos:end="107:24">pal</name><operator pos:start="107:25" pos:end="107:26">++</operator> <operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:39"><name pos:start="107:30" pos:end="107:36">smk_pal</name><index pos:start="107:37" pos:end="107:39">[<expr pos:start="107:38" pos:end="107:38"><name pos:start="107:38" pos:end="107:38">t</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:60"><expr pos:start="109:21" pos:end="109:59"><operator pos:start="109:21" pos:end="109:21">*</operator><name pos:start="109:22" pos:end="109:24">pal</name><operator pos:start="109:25" pos:end="109:26">++</operator> <operator pos:start="109:28" pos:end="109:28">=</operator> <name pos:start="109:30" pos:end="109:59"><name pos:start="109:30" pos:end="109:36">smk_pal</name><index pos:start="109:37" pos:end="109:59">[<expr pos:start="109:38" pos:end="109:58"><call pos:start="109:38" pos:end="109:51"><name pos:start="109:38" pos:end="109:44">avio_r8</name><argument_list pos:start="109:45" pos:end="109:51">(<argument pos:start="109:46" pos:end="109:50"><expr pos:start="109:46" pos:end="109:50"><name pos:start="109:46" pos:end="109:50"><name pos:start="109:46" pos:end="109:46">s</name><operator pos:start="109:47" pos:end="109:48">-&gt;</operator><name pos:start="109:49" pos:end="109:50">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="109:53" pos:end="109:53">&amp;</operator> <literal type="number" pos:start="109:55" pos:end="109:58">0x3F</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:60"><expr pos:start="111:21" pos:end="111:59"><operator pos:start="111:21" pos:end="111:21">*</operator><name pos:start="111:22" pos:end="111:24">pal</name><operator pos:start="111:25" pos:end="111:26">++</operator> <operator pos:start="111:28" pos:end="111:28">=</operator> <name pos:start="111:30" pos:end="111:59"><name pos:start="111:30" pos:end="111:36">smk_pal</name><index pos:start="111:37" pos:end="111:59">[<expr pos:start="111:38" pos:end="111:58"><call pos:start="111:38" pos:end="111:51"><name pos:start="111:38" pos:end="111:44">avio_r8</name><argument_list pos:start="111:45" pos:end="111:51">(<argument pos:start="111:46" pos:end="111:50"><expr pos:start="111:46" pos:end="111:50"><name pos:start="111:46" pos:end="111:50"><name pos:start="111:46" pos:end="111:46">s</name><operator pos:start="111:47" pos:end="111:48">-&gt;</operator><name pos:start="111:49" pos:end="111:50">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="111:53" pos:end="111:53">&amp;</operator> <literal type="number" pos:start="111:55" pos:end="111:58">0x3F</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:25"><expr pos:start="113:21" pos:end="113:24"><name pos:start="113:21" pos:end="113:22">sz</name><operator pos:start="113:23" pos:end="113:24">++</operator></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="119:13" pos:end="119:37"><expr pos:start="119:13" pos:end="119:36"><call pos:start="119:13" pos:end="119:36"><name pos:start="119:13" pos:end="119:21">avio_seek</name><argument_list pos:start="119:22" pos:end="119:36">(<argument pos:start="119:23" pos:end="119:27"><expr pos:start="119:23" pos:end="119:27"><name pos:start="119:23" pos:end="119:27"><name pos:start="119:23" pos:end="119:23">s</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:27">pb</name></name></expr></argument>, <argument pos:start="119:30" pos:end="119:32"><expr pos:start="119:30" pos:end="119:32"><name pos:start="119:30" pos:end="119:32">pos</name></expr></argument>, <argument pos:start="119:35" pos:end="119:35"><expr pos:start="119:35" pos:end="119:35"><literal type="number" pos:start="119:35" pos:end="119:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:27"><expr pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:21">palchange</name> <operator pos:start="121:23" pos:end="121:24">|=</operator> <literal type="number" pos:start="121:26" pos:end="121:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:20"><expr pos:start="125:9" pos:end="125:19"><name pos:start="125:9" pos:end="125:13">flags</name> <operator pos:start="125:15" pos:end="125:17">&gt;&gt;=</operator> <literal type="number" pos:start="125:19" pos:end="125:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:28"><expr pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:11">smk</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:22">curstream</name></name> <operator pos:start="127:24" pos:end="127:24">=</operator> <operator pos:start="127:26" pos:end="127:26">-</operator><literal type="number" pos:start="127:27" pos:end="127:27">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="129:9" pos:end="129:79">/* if audio chunks are present, put them to stack and retrieve later */</comment>

        <for pos:start="131:9" pos:end="179:9">for<control pos:start="131:12" pos:end="131:30">(<init pos:start="131:13" pos:end="131:18"><expr pos:start="131:13" pos:end="131:17"><name pos:start="131:13" pos:end="131:13">i</name> <operator pos:start="131:15" pos:end="131:15">=</operator> <literal type="number" pos:start="131:17" pos:end="131:17">0</literal></expr>;</init> <condition pos:start="131:20" pos:end="131:25"><expr pos:start="131:20" pos:end="131:24"><name pos:start="131:20" pos:end="131:20">i</name> <operator pos:start="131:22" pos:end="131:22">&lt;</operator> <literal type="number" pos:start="131:24" pos:end="131:24">7</literal></expr>;</condition> <incr pos:start="131:27" pos:end="131:29"><expr pos:start="131:27" pos:end="131:29"><name pos:start="131:27" pos:end="131:27">i</name><operator pos:start="131:28" pos:end="131:29">++</operator></expr></incr>)</control> <block pos:start="131:32" pos:end="179:9">{<block_content pos:start="133:13" pos:end="177:24">

            <if_stmt pos:start="133:13" pos:end="175:13"><if pos:start="133:13" pos:end="175:13">if<condition pos:start="133:15" pos:end="133:25">(<expr pos:start="133:16" pos:end="133:24"><name pos:start="133:16" pos:end="133:20">flags</name> <operator pos:start="133:22" pos:end="133:22">&amp;</operator> <literal type="number" pos:start="133:24" pos:end="133:24">1</literal></expr>)</condition> <block pos:start="133:27" pos:end="175:13">{<block_content pos:start="135:17" pos:end="173:65">

                <decl_stmt pos:start="135:17" pos:end="135:30"><decl pos:start="135:17" pos:end="135:29"><type pos:start="135:17" pos:end="135:24"><name pos:start="135:17" pos:end="135:24">uint32_t</name></type> <name pos:start="135:26" pos:end="135:29">size</name></decl>;</decl_stmt>

                <decl_stmt pos:start="137:17" pos:end="137:32"><decl pos:start="137:17" pos:end="137:31"><type pos:start="137:17" pos:end="137:25"><name pos:start="137:17" pos:end="137:23">uint8_t</name> <modifier pos:start="137:25" pos:end="137:25">*</modifier></type><name pos:start="137:26" pos:end="137:31">tmpbuf</name></decl>;</decl_stmt>



                <expr_stmt pos:start="141:17" pos:end="141:44"><expr pos:start="141:17" pos:end="141:43"><name pos:start="141:17" pos:end="141:20">size</name> <operator pos:start="141:22" pos:end="141:22">=</operator> <call pos:start="141:24" pos:end="141:39"><name pos:start="141:24" pos:end="141:32">avio_rl32</name><argument_list pos:start="141:33" pos:end="141:39">(<argument pos:start="141:34" pos:end="141:38"><expr pos:start="141:34" pos:end="141:38"><name pos:start="141:34" pos:end="141:38"><name pos:start="141:34" pos:end="141:34">s</name><operator pos:start="141:35" pos:end="141:36">-&gt;</operator><name pos:start="141:37" pos:end="141:38">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="141:41" pos:end="141:41">-</operator> <literal type="number" pos:start="141:43" pos:end="141:43">4</literal></expr>;</expr_stmt>

                <if_stmt pos:start="143:17" pos:end="149:17"><if pos:start="143:17" pos:end="149:17">if <condition pos:start="143:20" pos:end="143:47">(<expr pos:start="143:21" pos:end="143:46"><operator pos:start="143:21" pos:end="143:21">!</operator><name pos:start="143:22" pos:end="143:25">size</name> <operator pos:start="143:27" pos:end="143:28">||</operator> <name pos:start="143:30" pos:end="143:33">size</name> <operator pos:start="143:35" pos:end="143:35">&gt;</operator> <name pos:start="143:37" pos:end="143:46">frame_size</name></expr>)</condition> <block pos:start="143:49" pos:end="149:17">{<block_content pos:start="145:21" pos:end="147:47">

                    <expr_stmt pos:start="145:21" pos:end="145:73"><expr pos:start="145:21" pos:end="145:72"><call pos:start="145:21" pos:end="145:72"><name pos:start="145:21" pos:end="145:26">av_log</name><argument_list pos:start="145:27" pos:end="145:72">(<argument pos:start="145:28" pos:end="145:28"><expr pos:start="145:28" pos:end="145:28"><name pos:start="145:28" pos:end="145:28">s</name></expr></argument>, <argument pos:start="145:31" pos:end="145:42"><expr pos:start="145:31" pos:end="145:42"><name pos:start="145:31" pos:end="145:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="145:45" pos:end="145:71"><expr pos:start="145:45" pos:end="145:71"><literal type="string" pos:start="145:45" pos:end="145:71">"Invalid audio part size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="147:21" pos:end="147:47">return <expr pos:start="147:28" pos:end="147:46"><name pos:start="147:28" pos:end="147:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:35"><expr pos:start="151:17" pos:end="151:34"><name pos:start="151:17" pos:end="151:26">frame_size</name> <operator pos:start="151:28" pos:end="151:29">-=</operator> <name pos:start="151:31" pos:end="151:34">size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:32"><expr pos:start="153:17" pos:end="153:31"><name pos:start="153:17" pos:end="153:26">frame_size</name> <operator pos:start="153:28" pos:end="153:29">-=</operator> <literal type="number" pos:start="153:31" pos:end="153:31">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:33"><expr pos:start="155:17" pos:end="155:32"><name pos:start="155:17" pos:end="155:30"><name pos:start="155:17" pos:end="155:19">smk</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:30">curstream</name></name><operator pos:start="155:31" pos:end="155:32">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:69"><expr pos:start="157:17" pos:end="157:68"><name pos:start="157:17" pos:end="157:22">tmpbuf</name> <operator pos:start="157:24" pos:end="157:24">=</operator> <call pos:start="157:26" pos:end="157:68"><name pos:start="157:26" pos:end="157:35">av_realloc</name><argument_list pos:start="157:36" pos:end="157:68">(<argument pos:start="157:37" pos:end="157:61"><expr pos:start="157:37" pos:end="157:61"><name pos:start="157:37" pos:end="157:61"><name pos:start="157:37" pos:end="157:39">smk</name><operator pos:start="157:40" pos:end="157:41">-&gt;</operator><name pos:start="157:42" pos:end="157:45">bufs</name><index pos:start="157:46" pos:end="157:61">[<expr pos:start="157:47" pos:end="157:60"><name pos:start="157:47" pos:end="157:60"><name pos:start="157:47" pos:end="157:49">smk</name><operator pos:start="157:50" pos:end="157:51">-&gt;</operator><name pos:start="157:52" pos:end="157:60">curstream</name></name></expr>]</index></name></expr></argument>, <argument pos:start="157:64" pos:end="157:67"><expr pos:start="157:64" pos:end="157:67"><name pos:start="157:64" pos:end="157:67">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="159:17" pos:end="161:43"><if pos:start="159:17" pos:end="161:43">if <condition pos:start="159:20" pos:end="159:28">(<expr pos:start="159:21" pos:end="159:27"><operator pos:start="159:21" pos:end="159:21">!</operator><name pos:start="159:22" pos:end="159:27">tmpbuf</name></expr>)</condition><block type="pseudo" pos:start="161:21" pos:end="161:43"><block_content pos:start="161:21" pos:end="161:43">

                    <return pos:start="161:21" pos:end="161:43">return <expr pos:start="161:28" pos:end="161:42"><call pos:start="161:28" pos:end="161:42"><name pos:start="161:28" pos:end="161:34">AVERROR</name><argument_list pos:start="161:35" pos:end="161:42">(<argument pos:start="161:36" pos:end="161:41"><expr pos:start="161:36" pos:end="161:41"><name pos:start="161:36" pos:end="161:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:51"><expr pos:start="163:17" pos:end="163:50"><name pos:start="163:17" pos:end="163:41"><name pos:start="163:17" pos:end="163:19">smk</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:25">bufs</name><index pos:start="163:26" pos:end="163:41">[<expr pos:start="163:27" pos:end="163:40"><name pos:start="163:27" pos:end="163:40"><name pos:start="163:27" pos:end="163:29">smk</name><operator pos:start="163:30" pos:end="163:31">-&gt;</operator><name pos:start="163:32" pos:end="163:40">curstream</name></name></expr>]</index></name> <operator pos:start="163:43" pos:end="163:43">=</operator> <name pos:start="163:45" pos:end="163:50">tmpbuf</name></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:54"><expr pos:start="165:17" pos:end="165:53"><name pos:start="165:17" pos:end="165:46"><name pos:start="165:17" pos:end="165:19">smk</name><operator pos:start="165:20" pos:end="165:21">-&gt;</operator><name pos:start="165:22" pos:end="165:30">buf_sizes</name><index pos:start="165:31" pos:end="165:46">[<expr pos:start="165:32" pos:end="165:45"><name pos:start="165:32" pos:end="165:45"><name pos:start="165:32" pos:end="165:34">smk</name><operator pos:start="165:35" pos:end="165:36">-&gt;</operator><name pos:start="165:37" pos:end="165:45">curstream</name></name></expr>]</index></name> <operator pos:start="165:48" pos:end="165:48">=</operator> <name pos:start="165:50" pos:end="165:53">size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:72"><expr pos:start="167:17" pos:end="167:71"><name pos:start="167:17" pos:end="167:19">ret</name> <operator pos:start="167:21" pos:end="167:21">=</operator> <call pos:start="167:23" pos:end="167:71"><name pos:start="167:23" pos:end="167:31">avio_read</name><argument_list pos:start="167:32" pos:end="167:71">(<argument pos:start="167:33" pos:end="167:37"><expr pos:start="167:33" pos:end="167:37"><name pos:start="167:33" pos:end="167:37"><name pos:start="167:33" pos:end="167:33">s</name><operator pos:start="167:34" pos:end="167:35">-&gt;</operator><name pos:start="167:36" pos:end="167:37">pb</name></name></expr></argument>, <argument pos:start="167:40" pos:end="167:64"><expr pos:start="167:40" pos:end="167:64"><name pos:start="167:40" pos:end="167:64"><name pos:start="167:40" pos:end="167:42">smk</name><operator pos:start="167:43" pos:end="167:44">-&gt;</operator><name pos:start="167:45" pos:end="167:48">bufs</name><index pos:start="167:49" pos:end="167:64">[<expr pos:start="167:50" pos:end="167:63"><name pos:start="167:50" pos:end="167:63"><name pos:start="167:50" pos:end="167:52">smk</name><operator pos:start="167:53" pos:end="167:54">-&gt;</operator><name pos:start="167:55" pos:end="167:63">curstream</name></name></expr>]</index></name></expr></argument>, <argument pos:start="167:67" pos:end="167:70"><expr pos:start="167:67" pos:end="167:70"><name pos:start="167:67" pos:end="167:70">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="169:17" pos:end="171:40"><if pos:start="169:17" pos:end="171:40">if<condition pos:start="169:19" pos:end="169:31">(<expr pos:start="169:20" pos:end="169:30"><name pos:start="169:20" pos:end="169:22">ret</name> <operator pos:start="169:24" pos:end="169:25">!=</operator> <name pos:start="169:27" pos:end="169:30">size</name></expr>)</condition><block type="pseudo" pos:start="171:21" pos:end="171:40"><block_content pos:start="171:21" pos:end="171:40">

                    <return pos:start="171:21" pos:end="171:40">return <expr pos:start="171:28" pos:end="171:39"><call pos:start="171:28" pos:end="171:39"><name pos:start="171:28" pos:end="171:34">AVERROR</name><argument_list pos:start="171:35" pos:end="171:39">(<argument pos:start="171:36" pos:end="171:38"><expr pos:start="171:36" pos:end="171:38"><name pos:start="171:36" pos:end="171:38">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:65"><expr pos:start="173:17" pos:end="173:64"><name pos:start="173:17" pos:end="173:46"><name pos:start="173:17" pos:end="173:19">smk</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:30">stream_id</name><index pos:start="173:31" pos:end="173:46">[<expr pos:start="173:32" pos:end="173:45"><name pos:start="173:32" pos:end="173:45"><name pos:start="173:32" pos:end="173:34">smk</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:45">curstream</name></name></expr>]</index></name> <operator pos:start="173:48" pos:end="173:48">=</operator> <name pos:start="173:50" pos:end="173:64"><name pos:start="173:50" pos:end="173:52">smk</name><operator pos:start="173:53" pos:end="173:54">-&gt;</operator><name pos:start="173:55" pos:end="173:61">indexes</name><index pos:start="173:62" pos:end="173:64">[<expr pos:start="173:63" pos:end="173:63"><name pos:start="173:63" pos:end="173:63">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:24"><expr pos:start="177:13" pos:end="177:23"><name pos:start="177:13" pos:end="177:17">flags</name> <operator pos:start="177:19" pos:end="177:21">&gt;&gt;=</operator> <literal type="number" pos:start="177:23" pos:end="177:23">1</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="181:9" pos:end="183:39"><if pos:start="181:9" pos:end="183:39">if <condition pos:start="181:12" pos:end="181:27">(<expr pos:start="181:13" pos:end="181:26"><name pos:start="181:13" pos:end="181:22">frame_size</name> <operator pos:start="181:24" pos:end="181:24">&lt;</operator> <literal type="number" pos:start="181:26" pos:end="181:26">0</literal></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:39"><block_content pos:start="183:13" pos:end="183:39">

            <return pos:start="183:13" pos:end="183:39">return <expr pos:start="183:20" pos:end="183:38"><name pos:start="183:20" pos:end="183:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="185:9" pos:end="187:35"><if pos:start="185:9" pos:end="187:35">if <condition pos:start="185:12" pos:end="185:49">(<expr pos:start="185:13" pos:end="185:48"><call pos:start="185:13" pos:end="185:48"><name pos:start="185:13" pos:end="185:25">av_new_packet</name><argument_list pos:start="185:26" pos:end="185:48">(<argument pos:start="185:27" pos:end="185:29"><expr pos:start="185:27" pos:end="185:29"><name pos:start="185:27" pos:end="185:29">pkt</name></expr></argument>, <argument pos:start="185:32" pos:end="185:47"><expr pos:start="185:32" pos:end="185:47"><name pos:start="185:32" pos:end="185:41">frame_size</name> <operator pos:start="185:43" pos:end="185:43">+</operator> <literal type="number" pos:start="185:45" pos:end="185:47">769</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:35"><block_content pos:start="187:13" pos:end="187:35">

            <return pos:start="187:13" pos:end="187:35">return <expr pos:start="187:20" pos:end="187:34"><call pos:start="187:20" pos:end="187:34"><name pos:start="187:20" pos:end="187:26">AVERROR</name><argument_list pos:start="187:27" pos:end="187:34">(<argument pos:start="187:28" pos:end="187:33"><expr pos:start="187:28" pos:end="187:33"><name pos:start="187:28" pos:end="187:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="189:9" pos:end="191:27"><if pos:start="189:9" pos:end="191:27">if<condition pos:start="189:11" pos:end="189:45">(<expr pos:start="189:12" pos:end="189:44"><name pos:start="189:12" pos:end="189:40"><name pos:start="189:12" pos:end="189:14">smk</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:24">frm_size</name><index pos:start="189:25" pos:end="189:40">[<expr pos:start="189:26" pos:end="189:39"><name pos:start="189:26" pos:end="189:39"><name pos:start="189:26" pos:end="189:28">smk</name><operator pos:start="189:29" pos:end="189:30">-&gt;</operator><name pos:start="189:31" pos:end="189:39">cur_frame</name></name></expr>]</index></name> <operator pos:start="189:42" pos:end="189:42">&amp;</operator> <literal type="number" pos:start="189:44" pos:end="189:44">1</literal></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:27"><block_content pos:start="191:13" pos:end="191:27">

            <expr_stmt pos:start="191:13" pos:end="191:27"><expr pos:start="191:13" pos:end="191:26"><name pos:start="191:13" pos:end="191:21">palchange</name> <operator pos:start="191:23" pos:end="191:24">|=</operator> <literal type="number" pos:start="191:26" pos:end="191:26">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:33"><expr pos:start="193:9" pos:end="193:32"><name pos:start="193:9" pos:end="193:20"><name pos:start="193:9" pos:end="193:11">pkt</name><operator pos:start="193:12" pos:end="193:13">-&gt;</operator><name pos:start="193:14" pos:end="193:17">data</name><index pos:start="193:18" pos:end="193:20">[<expr pos:start="193:19" pos:end="193:19"><literal type="number" pos:start="193:19" pos:end="193:19">0</literal></expr>]</index></name> <operator pos:start="193:22" pos:end="193:22">=</operator> <name pos:start="193:24" pos:end="193:32">palchange</name></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:45"><expr pos:start="195:9" pos:end="195:44"><call pos:start="195:9" pos:end="195:44"><name pos:start="195:9" pos:end="195:14">memcpy</name><argument_list pos:start="195:15" pos:end="195:44">(<argument pos:start="195:16" pos:end="195:28"><expr pos:start="195:16" pos:end="195:28"><name pos:start="195:16" pos:end="195:24"><name pos:start="195:16" pos:end="195:18">pkt</name><operator pos:start="195:19" pos:end="195:20">-&gt;</operator><name pos:start="195:21" pos:end="195:24">data</name></name> <operator pos:start="195:26" pos:end="195:26">+</operator> <literal type="number" pos:start="195:28" pos:end="195:28">1</literal></expr></argument>, <argument pos:start="195:31" pos:end="195:38"><expr pos:start="195:31" pos:end="195:38"><name pos:start="195:31" pos:end="195:38"><name pos:start="195:31" pos:end="195:33">smk</name><operator pos:start="195:34" pos:end="195:35">-&gt;</operator><name pos:start="195:36" pos:end="195:38">pal</name></name></expr></argument>, <argument pos:start="195:41" pos:end="195:43"><expr pos:start="195:41" pos:end="195:43"><literal type="number" pos:start="195:41" pos:end="195:43">768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:60"><expr pos:start="197:9" pos:end="197:59"><name pos:start="197:9" pos:end="197:11">ret</name> <operator pos:start="197:13" pos:end="197:13">=</operator> <call pos:start="197:15" pos:end="197:59"><name pos:start="197:15" pos:end="197:23">avio_read</name><argument_list pos:start="197:24" pos:end="197:59">(<argument pos:start="197:25" pos:end="197:29"><expr pos:start="197:25" pos:end="197:29"><name pos:start="197:25" pos:end="197:29"><name pos:start="197:25" pos:end="197:25">s</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:29">pb</name></name></expr></argument>, <argument pos:start="197:32" pos:end="197:46"><expr pos:start="197:32" pos:end="197:46"><name pos:start="197:32" pos:end="197:40"><name pos:start="197:32" pos:end="197:34">pkt</name><operator pos:start="197:35" pos:end="197:36">-&gt;</operator><name pos:start="197:37" pos:end="197:40">data</name></name> <operator pos:start="197:42" pos:end="197:42">+</operator> <literal type="number" pos:start="197:44" pos:end="197:46">769</literal></expr></argument>, <argument pos:start="197:49" pos:end="197:58"><expr pos:start="197:49" pos:end="197:58"><name pos:start="197:49" pos:end="197:58">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="199:9" pos:end="201:32"><if pos:start="199:9" pos:end="201:32">if<condition pos:start="199:11" pos:end="199:29">(<expr pos:start="199:12" pos:end="199:28"><name pos:start="199:12" pos:end="199:14">ret</name> <operator pos:start="199:16" pos:end="199:17">!=</operator> <name pos:start="199:19" pos:end="199:28">frame_size</name></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:32"><block_content pos:start="201:13" pos:end="201:32">

            <return pos:start="201:13" pos:end="201:32">return <expr pos:start="201:20" pos:end="201:31"><call pos:start="201:20" pos:end="201:31"><name pos:start="201:20" pos:end="201:26">AVERROR</name><argument_list pos:start="201:27" pos:end="201:31">(<argument pos:start="201:28" pos:end="201:30"><expr pos:start="201:28" pos:end="201:30"><name pos:start="201:28" pos:end="201:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:44"><expr pos:start="203:9" pos:end="203:43"><name pos:start="203:9" pos:end="203:25"><name pos:start="203:9" pos:end="203:11">pkt</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:25">stream_index</name></name> <operator pos:start="203:27" pos:end="203:27">=</operator> <name pos:start="203:29" pos:end="203:43"><name pos:start="203:29" pos:end="203:31">smk</name><operator pos:start="203:32" pos:end="203:33">-&gt;</operator><name pos:start="203:34" pos:end="203:43">videoindex</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:43"><expr pos:start="205:9" pos:end="205:42"><name pos:start="205:9" pos:end="205:16"><name pos:start="205:9" pos:end="205:11">pkt</name><operator pos:start="205:12" pos:end="205:13">-&gt;</operator><name pos:start="205:14" pos:end="205:16">pts</name></name>          <operator pos:start="205:27" pos:end="205:27">=</operator> <name pos:start="205:29" pos:end="205:42"><name pos:start="205:29" pos:end="205:31">smk</name><operator pos:start="205:32" pos:end="205:33">-&gt;</operator><name pos:start="205:34" pos:end="205:42">cur_frame</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:30"><expr pos:start="207:9" pos:end="207:29"><name pos:start="207:9" pos:end="207:17"><name pos:start="207:9" pos:end="207:11">pkt</name><operator pos:start="207:12" pos:end="207:13">-&gt;</operator><name pos:start="207:14" pos:end="207:17">size</name></name> <operator pos:start="207:19" pos:end="207:19">=</operator> <name pos:start="207:21" pos:end="207:23">ret</name> <operator pos:start="207:25" pos:end="207:25">+</operator> <literal type="number" pos:start="207:27" pos:end="207:29">769</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:25"><expr pos:start="209:9" pos:end="209:24"><name pos:start="209:9" pos:end="209:22"><name pos:start="209:9" pos:end="209:11">smk</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:22">cur_frame</name></name><operator pos:start="209:23" pos:end="209:24">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:40"><expr pos:start="211:9" pos:end="211:39"><name pos:start="211:9" pos:end="211:20"><name pos:start="211:9" pos:end="211:11">smk</name><operator pos:start="211:12" pos:end="211:13">-&gt;</operator><name pos:start="211:14" pos:end="211:20">nextpos</name></name> <operator pos:start="211:22" pos:end="211:22">=</operator> <call pos:start="211:24" pos:end="211:39"><name pos:start="211:24" pos:end="211:32">avio_tell</name><argument_list pos:start="211:33" pos:end="211:39">(<argument pos:start="211:34" pos:end="211:38"><expr pos:start="211:34" pos:end="211:38"><name pos:start="211:34" pos:end="211:38"><name pos:start="211:34" pos:end="211:34">s</name><operator pos:start="211:35" pos:end="211:36">-&gt;</operator><name pos:start="211:37" pos:end="211:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="213:7" pos:end="235:5">else <block pos:start="213:12" pos:end="235:5">{<block_content pos:start="215:9" pos:end="233:25">

        <if_stmt pos:start="215:9" pos:end="217:39"><if pos:start="215:9" pos:end="217:39">if <condition pos:start="215:12" pos:end="215:47">(<expr pos:start="215:13" pos:end="215:46"><name pos:start="215:13" pos:end="215:42"><name pos:start="215:13" pos:end="215:15">smk</name><operator pos:start="215:16" pos:end="215:17">-&gt;</operator><name pos:start="215:18" pos:end="215:26">stream_id</name><index pos:start="215:27" pos:end="215:42">[<expr pos:start="215:28" pos:end="215:41"><name pos:start="215:28" pos:end="215:41"><name pos:start="215:28" pos:end="215:30">smk</name><operator pos:start="215:31" pos:end="215:32">-&gt;</operator><name pos:start="215:33" pos:end="215:41">curstream</name></name></expr>]</index></name> <operator pos:start="215:44" pos:end="215:44">&lt;</operator> <literal type="number" pos:start="215:46" pos:end="215:46">0</literal></expr>)</condition><block type="pseudo" pos:start="217:13" pos:end="217:39"><block_content pos:start="217:13" pos:end="217:39">

            <return pos:start="217:13" pos:end="217:39">return <expr pos:start="217:20" pos:end="217:38"><name pos:start="217:20" pos:end="217:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="219:9" pos:end="221:35"><if pos:start="219:9" pos:end="221:35">if <condition pos:start="219:12" pos:end="219:63">(<expr pos:start="219:13" pos:end="219:62"><call pos:start="219:13" pos:end="219:62"><name pos:start="219:13" pos:end="219:25">av_new_packet</name><argument_list pos:start="219:26" pos:end="219:62">(<argument pos:start="219:27" pos:end="219:29"><expr pos:start="219:27" pos:end="219:29"><name pos:start="219:27" pos:end="219:29">pkt</name></expr></argument>, <argument pos:start="219:32" pos:end="219:61"><expr pos:start="219:32" pos:end="219:61"><name pos:start="219:32" pos:end="219:61"><name pos:start="219:32" pos:end="219:34">smk</name><operator pos:start="219:35" pos:end="219:36">-&gt;</operator><name pos:start="219:37" pos:end="219:45">buf_sizes</name><index pos:start="219:46" pos:end="219:61">[<expr pos:start="219:47" pos:end="219:60"><name pos:start="219:47" pos:end="219:60"><name pos:start="219:47" pos:end="219:49">smk</name><operator pos:start="219:50" pos:end="219:51">-&gt;</operator><name pos:start="219:52" pos:end="219:60">curstream</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="221:35"><block_content pos:start="221:13" pos:end="221:35">

            <return pos:start="221:13" pos:end="221:35">return <expr pos:start="221:20" pos:end="221:34"><call pos:start="221:20" pos:end="221:34"><name pos:start="221:20" pos:end="221:26">AVERROR</name><argument_list pos:start="221:27" pos:end="221:34">(<argument pos:start="221:28" pos:end="221:33"><expr pos:start="221:28" pos:end="221:33"><name pos:start="221:28" pos:end="221:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:85"><expr pos:start="223:9" pos:end="223:84"><call pos:start="223:9" pos:end="223:84"><name pos:start="223:9" pos:end="223:14">memcpy</name><argument_list pos:start="223:15" pos:end="223:84">(<argument pos:start="223:16" pos:end="223:24"><expr pos:start="223:16" pos:end="223:24"><name pos:start="223:16" pos:end="223:24"><name pos:start="223:16" pos:end="223:18">pkt</name><operator pos:start="223:19" pos:end="223:20">-&gt;</operator><name pos:start="223:21" pos:end="223:24">data</name></name></expr></argument>, <argument pos:start="223:27" pos:end="223:51"><expr pos:start="223:27" pos:end="223:51"><name pos:start="223:27" pos:end="223:51"><name pos:start="223:27" pos:end="223:29">smk</name><operator pos:start="223:30" pos:end="223:31">-&gt;</operator><name pos:start="223:32" pos:end="223:35">bufs</name><index pos:start="223:36" pos:end="223:51">[<expr pos:start="223:37" pos:end="223:50"><name pos:start="223:37" pos:end="223:50"><name pos:start="223:37" pos:end="223:39">smk</name><operator pos:start="223:40" pos:end="223:41">-&gt;</operator><name pos:start="223:42" pos:end="223:50">curstream</name></name></expr>]</index></name></expr></argument>, <argument pos:start="223:54" pos:end="223:83"><expr pos:start="223:54" pos:end="223:83"><name pos:start="223:54" pos:end="223:83"><name pos:start="223:54" pos:end="223:56">smk</name><operator pos:start="223:57" pos:end="223:58">-&gt;</operator><name pos:start="223:59" pos:end="223:67">buf_sizes</name><index pos:start="223:68" pos:end="223:83">[<expr pos:start="223:69" pos:end="223:82"><name pos:start="223:69" pos:end="223:82"><name pos:start="223:69" pos:end="223:71">smk</name><operator pos:start="223:72" pos:end="223:73">-&gt;</operator><name pos:start="223:74" pos:end="223:82">curstream</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:51"><expr pos:start="225:9" pos:end="225:50"><name pos:start="225:9" pos:end="225:17"><name pos:start="225:9" pos:end="225:11">pkt</name><operator pos:start="225:12" pos:end="225:13">-&gt;</operator><name pos:start="225:14" pos:end="225:17">size</name></name> <operator pos:start="225:19" pos:end="225:19">=</operator> <name pos:start="225:21" pos:end="225:50"><name pos:start="225:21" pos:end="225:23">smk</name><operator pos:start="225:24" pos:end="225:25">-&gt;</operator><name pos:start="225:26" pos:end="225:34">buf_sizes</name><index pos:start="225:35" pos:end="225:50">[<expr pos:start="225:36" pos:end="225:49"><name pos:start="225:36" pos:end="225:49"><name pos:start="225:36" pos:end="225:38">smk</name><operator pos:start="225:39" pos:end="225:40">-&gt;</operator><name pos:start="225:41" pos:end="225:49">curstream</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:59"><expr pos:start="227:9" pos:end="227:58"><name pos:start="227:9" pos:end="227:25"><name pos:start="227:9" pos:end="227:11">pkt</name><operator pos:start="227:12" pos:end="227:13">-&gt;</operator><name pos:start="227:14" pos:end="227:25">stream_index</name></name> <operator pos:start="227:27" pos:end="227:27">=</operator> <name pos:start="227:29" pos:end="227:58"><name pos:start="227:29" pos:end="227:31">smk</name><operator pos:start="227:32" pos:end="227:33">-&gt;</operator><name pos:start="227:34" pos:end="227:42">stream_id</name><index pos:start="227:43" pos:end="227:58">[<expr pos:start="227:44" pos:end="227:57"><name pos:start="227:44" pos:end="227:57"><name pos:start="227:44" pos:end="227:46">smk</name><operator pos:start="227:47" pos:end="227:48">-&gt;</operator><name pos:start="227:49" pos:end="227:57">curstream</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:48"><expr pos:start="229:9" pos:end="229:47"><name pos:start="229:9" pos:end="229:16"><name pos:start="229:9" pos:end="229:11">pkt</name><operator pos:start="229:12" pos:end="229:13">-&gt;</operator><name pos:start="229:14" pos:end="229:16">pts</name></name> <operator pos:start="229:18" pos:end="229:18">=</operator> <name pos:start="229:20" pos:end="229:47"><name pos:start="229:20" pos:end="229:22">smk</name><operator pos:start="229:23" pos:end="229:24">-&gt;</operator><name pos:start="229:25" pos:end="229:31">aud_pts</name><index pos:start="229:32" pos:end="229:47">[<expr pos:start="229:33" pos:end="229:46"><name pos:start="229:33" pos:end="229:46"><name pos:start="229:33" pos:end="229:35">smk</name><operator pos:start="229:36" pos:end="229:37">-&gt;</operator><name pos:start="229:38" pos:end="229:46">curstream</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:59"><expr pos:start="231:9" pos:end="231:58"><name pos:start="231:9" pos:end="231:36"><name pos:start="231:9" pos:end="231:11">smk</name><operator pos:start="231:12" pos:end="231:13">-&gt;</operator><name pos:start="231:14" pos:end="231:20">aud_pts</name><index pos:start="231:21" pos:end="231:36">[<expr pos:start="231:22" pos:end="231:35"><name pos:start="231:22" pos:end="231:35"><name pos:start="231:22" pos:end="231:24">smk</name><operator pos:start="231:25" pos:end="231:26">-&gt;</operator><name pos:start="231:27" pos:end="231:35">curstream</name></name></expr>]</index></name> <operator pos:start="231:38" pos:end="231:39">+=</operator> <call pos:start="231:41" pos:end="231:58"><name pos:start="231:41" pos:end="231:47">AV_RL32</name><argument_list pos:start="231:48" pos:end="231:58">(<argument pos:start="231:49" pos:end="231:57"><expr pos:start="231:49" pos:end="231:57"><name pos:start="231:49" pos:end="231:57"><name pos:start="231:49" pos:end="231:51">pkt</name><operator pos:start="231:52" pos:end="231:53">-&gt;</operator><name pos:start="231:54" pos:end="231:57">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:25"><expr pos:start="233:9" pos:end="233:24"><name pos:start="233:9" pos:end="233:22"><name pos:start="233:9" pos:end="233:11">smk</name><operator pos:start="233:12" pos:end="233:13">-&gt;</operator><name pos:start="233:14" pos:end="233:22">curstream</name></name><operator pos:start="233:23" pos:end="233:24">--</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="239:5" pos:end="239:13">return <expr pos:start="239:12" pos:end="239:12"><literal type="number" pos:start="239:12" pos:end="239:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
