<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5001.c" pos:tabs="8"><function pos:start="1:1" pos:end="44:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">gen_tlbsx_booke206</name><parameter_list pos:start="1:31" pos:end="1:49">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:43">DisasContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="44:1">{<block_content pos:start="7:5" pos:end="43:0">

<cpp:if pos:start="5:1" pos:end="5:29">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:29">(<argument pos:start="5:13" pos:end="5:28"><expr pos:start="5:13" pos:end="5:28"><name pos:start="5:13" pos:end="5:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="7:5" pos:end="10:0"><expr pos:start="7:5" pos:end="7:51"><call pos:start="7:5" pos:end="7:51"><name pos:start="7:5" pos:end="7:23">gen_inval_exception</name><argument_list pos:start="7:24" pos:end="7:51">(<argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:27">ctx</name></expr></argument>, <argument pos:start="7:30" pos:end="7:50"><expr pos:start="7:30" pos:end="7:50"><name pos:start="7:30" pos:end="7:50">POWERPC_EXCP_PRIV_OPC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="9:1" pos:end="9:5">#<cpp:directive pos:start="9:2" pos:end="9:5">else</cpp:directive></cpp:else>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">TCGv</name></type> <name pos:start="11:10" pos:end="11:11">t0</name></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:32">(<expr pos:start="13:9" pos:end="13:31"><call pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:16">unlikely</name><argument_list pos:start="13:17" pos:end="13:31">(<argument pos:start="13:18" pos:end="13:30"><expr pos:start="13:18" pos:end="13:30"><operator pos:start="13:18" pos:end="13:18">!</operator><name pos:start="13:19" pos:end="13:30"><name pos:start="13:19" pos:end="13:21">ctx</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:30">mem_idx</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:34" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:56"><expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:27">gen_inval_exception</name><argument_list pos:start="15:28" pos:end="15:55">(<argument pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:31">ctx</name></expr></argument>, <argument pos:start="15:34" pos:end="15:54"><expr pos:start="15:34" pos:end="15:54"><name pos:start="15:34" pos:end="15:54">POWERPC_EXCP_PRIV_OPC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><call pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:10">rA</name><argument_list pos:start="23:11" pos:end="23:23">(<argument pos:start="23:12" pos:end="23:22"><expr pos:start="23:12" pos:end="23:22"><name pos:start="23:12" pos:end="23:22"><name pos:start="23:12" pos:end="23:14">ctx</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:22">opcode</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:26" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:53">

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:10">t0</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:27"><name pos:start="25:14" pos:end="25:25">tcg_temp_new</name><argument_list pos:start="25:26" pos:end="25:27">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:53"><expr pos:start="27:9" pos:end="27:52"><call pos:start="27:9" pos:end="27:52"><name pos:start="27:9" pos:end="27:22">tcg_gen_mov_tl</name><argument_list pos:start="27:23" pos:end="27:52">(<argument pos:start="27:24" pos:end="27:25"><expr pos:start="27:24" pos:end="27:25"><name pos:start="27:24" pos:end="27:25">t0</name></expr></argument>, <argument pos:start="27:28" pos:end="27:51"><expr pos:start="27:28" pos:end="27:51"><name pos:start="27:28" pos:end="27:51"><name pos:start="27:28" pos:end="27:34">cpu_gpr</name><index pos:start="27:35" pos:end="27:51">[<expr pos:start="27:36" pos:end="27:50"><call pos:start="27:36" pos:end="27:50"><name pos:start="27:36" pos:end="27:37">rD</name><argument_list pos:start="27:38" pos:end="27:50">(<argument pos:start="27:39" pos:end="27:49"><expr pos:start="27:39" pos:end="27:49"><name pos:start="27:39" pos:end="27:49"><name pos:start="27:39" pos:end="27:41">ctx</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:49">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="33:5">else <block pos:start="29:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:29">

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:10">t0</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:28"><name pos:start="31:14" pos:end="31:25">tcg_const_tl</name><argument_list pos:start="31:26" pos:end="31:28">(<argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><call pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:18">tcg_gen_add_tl</name><argument_list pos:start="37:19" pos:end="37:52">(<argument pos:start="37:20" pos:end="37:21"><expr pos:start="37:20" pos:end="37:21"><name pos:start="37:20" pos:end="37:21">t0</name></expr></argument>, <argument pos:start="37:24" pos:end="37:25"><expr pos:start="37:24" pos:end="37:25"><name pos:start="37:24" pos:end="37:25">t0</name></expr></argument>, <argument pos:start="37:28" pos:end="37:51"><expr pos:start="37:28" pos:end="37:51"><name pos:start="37:28" pos:end="37:51"><name pos:start="37:28" pos:end="37:34">cpu_gpr</name><index pos:start="37:35" pos:end="37:51">[<expr pos:start="37:36" pos:end="37:50"><call pos:start="37:36" pos:end="37:50"><name pos:start="37:36" pos:end="37:37">rB</name><argument_list pos:start="37:38" pos:end="37:50">(<argument pos:start="37:39" pos:end="37:49"><expr pos:start="37:39" pos:end="37:49"><name pos:start="37:39" pos:end="37:49"><name pos:start="37:39" pos:end="37:41">ctx</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:49">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="43:0"><expr pos:start="39:5" pos:end="39:42"><call pos:start="39:5" pos:end="39:42"><name pos:start="39:5" pos:end="39:29">gen_helper_booke206_tlbsx</name><argument_list pos:start="39:30" pos:end="39:42">(<argument pos:start="39:31" pos:end="39:37"><expr pos:start="39:31" pos:end="39:37"><name pos:start="39:31" pos:end="39:37">cpu_env</name></expr></argument>, <argument pos:start="39:40" pos:end="39:41"><expr pos:start="39:40" pos:end="39:41"><name pos:start="39:40" pos:end="39:41">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<cpp:endif pos:start="42:1" pos:end="42:6">#<cpp:directive pos:start="42:2" pos:end="42:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function></unit>
