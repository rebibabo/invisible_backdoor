<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25083.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:74"><name pos:start="1:1" pos:end="1:25">ivshmem_client_parse_args</name><argument_list pos:start="1:26" pos:end="1:74">(<argument pos:start="1:27" pos:end="1:49">IvshmemClientArgs *args</argument>, <argument pos:start="1:52" pos:end="1:59">int argc</argument>, <argument pos:start="1:62" pos:end="1:73">char *argv[]</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">c</name></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="55:5">while <condition pos:start="9:11" pos:end="17:31">(<expr pos:start="9:12" pos:end="17:30"><operator pos:start="9:12" pos:end="9:12">(</operator><name pos:start="9:13" pos:end="9:13">c</name> <operator pos:start="9:15" pos:end="9:15">=</operator> <call pos:start="9:17" pos:end="17:23"><name pos:start="9:17" pos:end="9:22">getopt</name><argument_list pos:start="9:23" pos:end="17:23">(<argument pos:start="9:24" pos:end="9:27"><expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">argc</name></expr></argument>, <argument pos:start="9:30" pos:end="9:33"><expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:33">argv</name></expr></argument>,

                       <argument pos:start="11:24" pos:end="15:27"><expr pos:start="11:24" pos:end="15:27"><literal type="string" pos:start="11:24" pos:end="11:26">"h"</literal>  <comment type="block" pos:start="11:29" pos:end="11:38">/* help */</comment>

                       <literal type="string" pos:start="13:24" pos:end="13:26">"v"</literal>  <comment type="block" pos:start="13:29" pos:end="13:41">/* verbose */</comment>

                       <literal type="string" pos:start="15:24" pos:end="15:27">"S:"</literal></expr></argument> <comment type="block" pos:start="15:29" pos:end="15:48">/* unix_sock_path */</comment>

                      )</argument_list></call><operator pos:start="17:24" pos:end="17:24">)</operator> <operator pos:start="17:26" pos:end="17:27">!=</operator> <operator pos:start="17:29" pos:end="17:29">-</operator><literal type="number" pos:start="17:30" pos:end="17:30">1</literal></expr>)</condition> <block pos:start="17:33" pos:end="55:5">{<block_content pos:start="21:9" pos:end="53:9">



        <switch pos:start="21:9" pos:end="53:9">switch <condition pos:start="21:16" pos:end="21:18">(<expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">c</name></expr>)</condition> <block pos:start="21:20" pos:end="53:9">{<block_content pos:start="23:9" pos:end="51:18">

        <case pos:start="23:9" pos:end="23:17">case <expr pos:start="23:14" pos:end="23:16"><literal type="char" pos:start="23:14" pos:end="23:16">'h'</literal></expr>:</case> <comment type="block" pos:start="23:19" pos:end="23:28">/* help */</comment>

            <expr_stmt pos:start="25:13" pos:end="25:45"><expr pos:start="25:13" pos:end="25:44"><call pos:start="25:13" pos:end="25:44"><name pos:start="25:13" pos:end="25:32">ivshmem_client_usage</name><argument_list pos:start="25:33" pos:end="25:44">(<argument pos:start="25:34" pos:end="25:40"><expr pos:start="25:34" pos:end="25:40"><name pos:start="25:34" pos:end="25:40"><name pos:start="25:34" pos:end="25:37">argv</name><index pos:start="25:38" pos:end="25:40">[<expr pos:start="25:39" pos:end="25:39"><literal type="number" pos:start="25:39" pos:end="25:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:43" pos:end="25:43"><expr pos:start="25:43" pos:end="25:43"><literal type="number" pos:start="25:43" pos:end="25:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>



        <case pos:start="31:9" pos:end="31:17">case <expr pos:start="31:14" pos:end="31:16"><literal type="char" pos:start="31:14" pos:end="31:16">'v'</literal></expr>:</case> <comment type="block" pos:start="31:19" pos:end="31:31">/* verbose */</comment>

            <expr_stmt pos:start="33:13" pos:end="33:30"><expr pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:16">args</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:25">verbose</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <literal type="number" pos:start="33:29" pos:end="33:29">1</literal></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>



        <case pos:start="39:9" pos:end="39:17">case <expr pos:start="39:14" pos:end="39:16"><literal type="char" pos:start="39:14" pos:end="39:16">'S'</literal></expr>:</case> <comment type="block" pos:start="39:19" pos:end="39:38">/* unix_sock_path */</comment>

            <expr_stmt pos:start="41:13" pos:end="41:50"><expr pos:start="41:13" pos:end="41:49"><name pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:16">args</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:32">unix_sock_path</name></name> <operator pos:start="41:34" pos:end="41:34">=</operator> <call pos:start="41:36" pos:end="41:49"><name pos:start="41:36" pos:end="41:41">strdup</name><argument_list pos:start="41:42" pos:end="41:49">(<argument pos:start="41:43" pos:end="41:48"><expr pos:start="41:43" pos:end="41:48"><name pos:start="41:43" pos:end="41:48">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>



        <default pos:start="47:9" pos:end="47:16">default:</default>

            <expr_stmt pos:start="49:13" pos:end="49:45"><expr pos:start="49:13" pos:end="49:44"><call pos:start="49:13" pos:end="49:44"><name pos:start="49:13" pos:end="49:32">ivshmem_client_usage</name><argument_list pos:start="49:33" pos:end="49:44">(<argument pos:start="49:34" pos:end="49:40"><expr pos:start="49:34" pos:end="49:40"><name pos:start="49:34" pos:end="49:40"><name pos:start="49:34" pos:end="49:37">argv</name><index pos:start="49:38" pos:end="49:40">[<expr pos:start="49:39" pos:end="49:39"><literal type="number" pos:start="49:39" pos:end="49:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="49:43" pos:end="49:43"><expr pos:start="49:43" pos:end="49:43"><literal type="number" pos:start="49:43" pos:end="49:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>

</block_content>}</block>
</unit>
