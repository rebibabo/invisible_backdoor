<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/65.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">listener_add_address_space</name><parameter_list pos:start="1:39" pos:end="3:56">(<parameter pos:start="1:40" pos:end="1:63"><decl pos:start="1:40" pos:end="1:63"><type pos:start="1:40" pos:end="1:63"><name pos:start="1:40" pos:end="1:53">MemoryListener</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:63">listener</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:55"><decl pos:start="3:40" pos:end="3:55"><type pos:start="3:40" pos:end="3:55"><name pos:start="3:40" pos:end="3:51">AddressSpace</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:55">as</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:5">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">FlatView</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">view</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">FlatRange</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:17">fr</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="15:48">(<expr pos:start="13:9" pos:end="15:47"><name pos:start="13:9" pos:end="13:38"><name pos:start="13:9" pos:end="13:16">listener</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:38">address_space_filter</name></name>

        <operator pos:start="15:9" pos:end="15:10">&amp;&amp;</operator> <name pos:start="15:12" pos:end="15:41"><name pos:start="15:12" pos:end="15:19">listener</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:41">address_space_filter</name></name> <operator pos:start="15:43" pos:end="15:44">!=</operator> <name pos:start="15:46" pos:end="15:47">as</name></expr>)</condition> <block pos:start="15:50" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:24">global_dirty_log</name></expr>)</condition> <block pos:start="23:27" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:9">

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:39">(<expr pos:start="25:13" pos:end="25:38"><name pos:start="25:13" pos:end="25:38"><name pos:start="25:13" pos:end="25:20">listener</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:38">log_global_start</name></name></expr>)</condition> <block pos:start="25:41" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:49">

            <expr_stmt pos:start="27:13" pos:end="27:49"><expr pos:start="27:13" pos:end="27:48"><call pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:20">listener</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:38">log_global_start</name></name><argument_list pos:start="27:39" pos:end="27:48">(<argument pos:start="27:40" pos:end="27:47"><expr pos:start="27:40" pos:end="27:47"><name pos:start="27:40" pos:end="27:47">listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:8">view</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <name pos:start="35:12" pos:end="35:26"><name pos:start="35:12" pos:end="35:13">as</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:26">current_map</name></name></expr>;</expr_stmt>

    <macro pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:23">FOR_EACH_FLAT_RANGE</name><argument_list pos:start="37:24" pos:end="37:33">(<argument pos:start="37:25" pos:end="37:26">fr</argument>, <argument pos:start="37:29" pos:end="37:32">view</argument>)</argument_list></macro> <block pos:start="37:35" pos:end="61:5">{<block_content pos:start="39:9" pos:end="59:9">

        <decl_stmt pos:start="39:9" pos:end="53:10"><decl pos:start="39:9" pos:end="53:9"><type pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:27">MemoryRegionSection</name></type> <name pos:start="39:29" pos:end="39:35">section</name> <init pos:start="39:37" pos:end="53:9">= <expr pos:start="39:39" pos:end="53:9"><block pos:start="39:39" pos:end="53:9">{

            <expr pos:start="41:13" pos:end="41:24"><operator pos:start="41:13" pos:end="41:13">.</operator><name pos:start="41:14" pos:end="41:15">mr</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:24"><name pos:start="41:19" pos:end="41:20">fr</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:24">mr</name></name></expr>,

            <expr pos:start="43:13" pos:end="43:31"><operator pos:start="43:13" pos:end="43:13">.</operator><name pos:start="43:14" pos:end="43:26">address_space</name> <operator pos:start="43:28" pos:end="43:28">=</operator> <name pos:start="43:30" pos:end="43:31">as</name></expr>,

            <expr pos:start="45:13" pos:end="45:56"><operator pos:start="45:13" pos:end="45:13">.</operator><name pos:start="45:14" pos:end="45:33">offset_within_region</name> <operator pos:start="45:35" pos:end="45:35">=</operator> <name pos:start="45:37" pos:end="45:56"><name pos:start="45:37" pos:end="45:38">fr</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:56">offset_in_region</name></name></expr>,

            <expr pos:start="47:13" pos:end="47:33"><operator pos:start="47:13" pos:end="47:13">.</operator><name pos:start="47:14" pos:end="47:17">size</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:33"><name pos:start="47:21" pos:end="47:22">fr</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:28">addr</name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:33">size</name></name></expr>,

            <expr pos:start="49:13" pos:end="49:71"><operator pos:start="49:13" pos:end="49:13">.</operator><name pos:start="49:14" pos:end="49:40">offset_within_address_space</name> <operator pos:start="49:42" pos:end="49:42">=</operator> <call pos:start="49:44" pos:end="49:71"><name pos:start="49:44" pos:end="49:55">int128_get64</name><argument_list pos:start="49:56" pos:end="49:71">(<argument pos:start="49:57" pos:end="49:70"><expr pos:start="49:57" pos:end="49:70"><name pos:start="49:57" pos:end="49:70"><name pos:start="49:57" pos:end="49:58">fr</name><operator pos:start="49:59" pos:end="49:60">-&gt;</operator><name pos:start="49:61" pos:end="49:64">addr</name><operator pos:start="49:65" pos:end="49:65">.</operator><name pos:start="49:66" pos:end="49:70">start</name></name></expr></argument>)</argument_list></call></expr>,

            <expr pos:start="51:13" pos:end="51:36"><operator pos:start="51:13" pos:end="51:13">.</operator><name pos:start="51:14" pos:end="51:21">readonly</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:36"><name pos:start="51:25" pos:end="51:26">fr</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:36">readonly</name></name></expr>,

        }</block></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:33">(<expr pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:20">listener</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:32">region_add</name></name></expr>)</condition> <block pos:start="55:35" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:53">

            <expr_stmt pos:start="57:13" pos:end="57:53"><expr pos:start="57:13" pos:end="57:52"><call pos:start="57:13" pos:end="57:52"><name pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:20">listener</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:32">region_add</name></name><argument_list pos:start="57:33" pos:end="57:52">(<argument pos:start="57:34" pos:end="57:41"><expr pos:start="57:34" pos:end="57:41"><name pos:start="57:34" pos:end="57:41">listener</name></expr></argument>, <argument pos:start="57:44" pos:end="57:51"><expr pos:start="57:44" pos:end="57:51"><operator pos:start="57:44" pos:end="57:44">&amp;</operator><name pos:start="57:45" pos:end="57:51">section</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
