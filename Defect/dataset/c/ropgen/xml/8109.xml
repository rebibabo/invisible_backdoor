<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8109.c" pos:tabs="8"><function pos:start="1:1" pos:end="653:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">vdpau_hevc_start_frame</name><parameter_list pos:start="1:34" pos:end="3:71">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:55"><decl pos:start="3:35" pos:end="3:55"><type pos:start="3:35" pos:end="3:55"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:47">uint8_t</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:55">buffer</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:70"><decl pos:start="3:58" pos:end="3:70"><type pos:start="3:58" pos:end="3:70"><name pos:start="3:58" pos:end="3:65">uint32_t</name></type> <name pos:start="3:67" pos:end="3:70">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="653:1">{<block_content pos:start="7:5" pos:end="651:62">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">HEVCContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">h</name> <init pos:start="7:20" pos:end="7:37">= <expr pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:26">avctx</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">HEVCFrame</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:18">pic</name> <init pos:start="9:20" pos:end="9:27">= <expr pos:start="9:22" pos:end="9:27"><name pos:start="9:22" pos:end="9:27"><name pos:start="9:22" pos:end="9:22">h</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:27">ref</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:73"><decl pos:start="11:5" pos:end="11:72"><type pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:32">vdpau_picture_context</name></name> <modifier pos:start="11:34" pos:end="11:34">*</modifier></type><name pos:start="11:35" pos:end="11:41">pic_ctx</name> <init pos:start="11:43" pos:end="11:72">= <expr pos:start="11:45" pos:end="11:72"><name pos:start="11:45" pos:end="11:72"><name pos:start="11:45" pos:end="11:47">pic</name><operator pos:start="11:48" pos:end="11:49">-&gt;</operator><name pos:start="11:50" pos:end="11:72">hwaccel_picture_private</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:22">VdpPictureInfoHEVC</name> <modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:28">info</name> <init pos:start="15:30" pos:end="15:50">= <expr pos:start="15:32" pos:end="15:50"><operator pos:start="15:32" pos:end="15:32">&amp;</operator><name pos:start="15:33" pos:end="15:50"><name pos:start="15:33" pos:end="15:39">pic_ctx</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:45">info</name><operator pos:start="15:46" pos:end="15:46">.</operator><name pos:start="15:47" pos:end="15:50">hevc</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:35"><decl pos:start="19:5" pos:end="19:34"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">HEVCSPS</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:22">sps</name> <init pos:start="19:24" pos:end="19:34">= <expr pos:start="19:26" pos:end="19:34"><name pos:start="19:26" pos:end="19:34"><name pos:start="19:26" pos:end="19:26">h</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:30">ps</name><operator pos:start="19:31" pos:end="19:31">.</operator><name pos:start="19:32" pos:end="19:34">sps</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:35"><decl pos:start="21:5" pos:end="21:34"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">HEVCPPS</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:22">pps</name> <init pos:start="21:24" pos:end="21:34">= <expr pos:start="21:26" pos:end="21:34"><name pos:start="21:26" pos:end="21:34"><name pos:start="21:26" pos:end="21:26">h</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:30">ps</name><operator pos:start="21:31" pos:end="21:31">.</operator><name pos:start="21:32" pos:end="21:34">pps</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:35"><decl pos:start="23:5" pos:end="23:34"><type pos:start="23:5" pos:end="23:23"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:21">SliceHeader</name> <modifier pos:start="23:23" pos:end="23:23">*</modifier></type><name pos:start="23:24" pos:end="23:25">sh</name> <init pos:start="23:27" pos:end="23:34">= <expr pos:start="23:29" pos:end="23:34"><operator pos:start="23:29" pos:end="23:29">&amp;</operator><name pos:start="23:30" pos:end="23:34"><name pos:start="23:30" pos:end="23:30">h</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:34">sh</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="27:68"><decl pos:start="25:5" pos:end="27:67"><type pos:start="25:5" pos:end="25:23"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:21">ScalingList</name> <modifier pos:start="25:23" pos:end="25:23">*</modifier></type><name pos:start="25:24" pos:end="25:25">sl</name> <init pos:start="25:27" pos:end="27:67">= <expr pos:start="25:29" pos:end="27:67"><ternary pos:start="25:29" pos:end="27:67"><condition pos:start="25:29" pos:end="25:65"><expr pos:start="25:29" pos:end="25:63"><name pos:start="25:29" pos:end="25:63"><name pos:start="25:29" pos:end="25:31">pps</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:63">scaling_list_data_present_flag</name></name></expr> ?</condition><then pos:start="27:29" pos:end="27:46">

                            <expr pos:start="27:29" pos:end="27:46"><operator pos:start="27:29" pos:end="27:29">&amp;</operator><name pos:start="27:30" pos:end="27:46"><name pos:start="27:30" pos:end="27:32">pps</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:46">scaling_list</name></name></expr> </then><else pos:start="27:48" pos:end="27:67">: <expr pos:start="27:50" pos:end="27:67"><operator pos:start="27:50" pos:end="27:50">&amp;</operator><name pos:start="27:51" pos:end="27:67"><name pos:start="27:51" pos:end="27:53">sps</name><operator pos:start="27:54" pos:end="27:55">-&gt;</operator><name pos:start="27:56" pos:end="27:67">scaling_list</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:33">/* init VdpPictureInfoHEVC */</comment>



    <comment type="block" pos:start="35:5" pos:end="35:13">/* SPS */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:8">info</name><operator pos:start="37:9" pos:end="37:10">-&gt;</operator><name pos:start="37:11" pos:end="37:27">chroma_format_idc</name></name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:52"><name pos:start="37:31" pos:end="37:33">sps</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:52">chroma_format_idc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:71"><expr pos:start="39:5" pos:end="39:70"><name pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:8">info</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:36">separate_colour_plane_flag</name></name> <operator pos:start="39:38" pos:end="39:38">=</operator> <name pos:start="39:40" pos:end="39:70"><name pos:start="39:40" pos:end="39:42">sps</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:70">separate_colour_plane_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:49"><expr pos:start="41:5" pos:end="41:48"><name pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:8">info</name><operator pos:start="41:9" pos:end="41:10">-&gt;</operator><name pos:start="41:11" pos:end="41:35">pic_width_in_luma_samples</name></name> <operator pos:start="41:37" pos:end="41:37">=</operator> <name pos:start="41:39" pos:end="41:48"><name pos:start="41:39" pos:end="41:41">sps</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:48">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:51"><expr pos:start="43:5" pos:end="43:50"><name pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:8">info</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:36">pic_height_in_luma_samples</name></name> <operator pos:start="43:38" pos:end="43:38">=</operator> <name pos:start="43:40" pos:end="43:50"><name pos:start="43:40" pos:end="43:42">sps</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:50">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:53"><expr pos:start="45:5" pos:end="45:52"><name pos:start="45:5" pos:end="45:31"><name pos:start="45:5" pos:end="45:8">info</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:31">bit_depth_luma_minus8</name></name> <operator pos:start="45:33" pos:end="45:33">=</operator> <name pos:start="45:35" pos:end="45:48"><name pos:start="45:35" pos:end="45:37">sps</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:48">bit_depth</name></name> <operator pos:start="45:50" pos:end="45:50">-</operator> <literal type="number" pos:start="45:52" pos:end="45:52">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:55"><expr pos:start="47:5" pos:end="47:54"><name pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:8">info</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:33">bit_depth_chroma_minus8</name></name> <operator pos:start="47:35" pos:end="47:35">=</operator> <name pos:start="47:37" pos:end="47:50"><name pos:start="47:37" pos:end="47:39">sps</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:50">bit_depth</name></name> <operator pos:start="47:52" pos:end="47:52">-</operator> <literal type="number" pos:start="47:54" pos:end="47:54">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:72"><expr pos:start="49:5" pos:end="49:71"><name pos:start="49:5" pos:end="49:43"><name pos:start="49:5" pos:end="49:8">info</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:43">log2_max_pic_order_cnt_lsb_minus4</name></name> <operator pos:start="49:45" pos:end="49:45">=</operator> <name pos:start="49:47" pos:end="49:67"><name pos:start="49:47" pos:end="49:49">sps</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:67">log2_max_poc_lsb</name></name> <operator pos:start="49:69" pos:end="49:69">-</operator> <literal type="number" pos:start="49:71" pos:end="49:71">4</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="51:5" pos:end="53:24">/* Provide the value corresponding to the nuh_temporal_id of the frame

       to be decoded. */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:116"><expr pos:start="55:5" pos:end="55:115"><name pos:start="55:5" pos:end="55:42"><name pos:start="55:5" pos:end="55:8">info</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:42">sps_max_dec_pic_buffering_minus1</name></name> <operator pos:start="55:44" pos:end="55:44">=</operator> <name pos:start="55:46" pos:end="55:89"><name pos:start="55:46" pos:end="55:48">sps</name><operator pos:start="55:49" pos:end="55:50">-&gt;</operator><name pos:start="55:51" pos:end="55:64">temporal_layer</name><index pos:start="55:65" pos:end="55:89">[<expr pos:start="55:66" pos:end="55:88"><name pos:start="55:66" pos:end="55:84"><name pos:start="55:66" pos:end="55:68">sps</name><operator pos:start="55:69" pos:end="55:70">-&gt;</operator><name pos:start="55:71" pos:end="55:84">max_sub_layers</name></name> <operator pos:start="55:86" pos:end="55:86">-</operator> <literal type="number" pos:start="55:88" pos:end="55:88">1</literal></expr>]</index></name><operator pos:start="55:90" pos:end="55:90">.</operator><name pos:start="55:91" pos:end="55:111">max_dec_pic_buffering</name> <operator pos:start="55:113" pos:end="55:113">-</operator> <literal type="number" pos:start="55:115" pos:end="55:115">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:77"><expr pos:start="57:5" pos:end="57:76"><name pos:start="57:5" pos:end="57:48"><name pos:start="57:5" pos:end="57:8">info</name><operator pos:start="57:9" pos:end="57:10">-&gt;</operator><name pos:start="57:11" pos:end="57:48">log2_min_luma_coding_block_size_minus3</name></name> <operator pos:start="57:50" pos:end="57:50">=</operator> <name pos:start="57:52" pos:end="57:72"><name pos:start="57:52" pos:end="57:54">sps</name><operator pos:start="57:55" pos:end="57:56">-&gt;</operator><name pos:start="57:57" pos:end="57:72">log2_min_cb_size</name></name> <operator pos:start="57:74" pos:end="57:74">-</operator> <literal type="number" pos:start="57:76" pos:end="57:76">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:94"><expr pos:start="59:5" pos:end="59:93"><name pos:start="59:5" pos:end="59:50"><name pos:start="59:5" pos:end="59:8">info</name><operator pos:start="59:9" pos:end="59:10">-&gt;</operator><name pos:start="59:11" pos:end="59:50">log2_diff_max_min_luma_coding_block_size</name></name> <operator pos:start="59:52" pos:end="59:52">=</operator> <name pos:start="59:54" pos:end="59:93"><name pos:start="59:54" pos:end="59:56">sps</name><operator pos:start="59:57" pos:end="59:58">-&gt;</operator><name pos:start="59:59" pos:end="59:93">log2_diff_max_min_coding_block_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:75"><expr pos:start="61:5" pos:end="61:74"><name pos:start="61:5" pos:end="61:46"><name pos:start="61:5" pos:end="61:8">info</name><operator pos:start="61:9" pos:end="61:10">-&gt;</operator><name pos:start="61:11" pos:end="61:46">log2_min_transform_block_size_minus2</name></name> <operator pos:start="61:48" pos:end="61:48">=</operator> <name pos:start="61:50" pos:end="61:70"><name pos:start="61:50" pos:end="61:52">sps</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:70">log2_min_tb_size</name></name> <operator pos:start="61:72" pos:end="61:72">-</operator> <literal type="number" pos:start="61:74" pos:end="61:74">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:100"><expr pos:start="63:5" pos:end="63:99"><name pos:start="63:5" pos:end="63:48"><name pos:start="63:5" pos:end="63:8">info</name><operator pos:start="63:9" pos:end="63:10">-&gt;</operator><name pos:start="63:11" pos:end="63:48">log2_diff_max_min_transform_block_size</name></name> <operator pos:start="63:50" pos:end="63:50">=</operator> <name pos:start="63:52" pos:end="63:75"><name pos:start="63:52" pos:end="63:54">sps</name><operator pos:start="63:55" pos:end="63:56">-&gt;</operator><name pos:start="63:57" pos:end="63:75">log2_max_trafo_size</name></name> <operator pos:start="63:77" pos:end="63:77">-</operator> <name pos:start="63:79" pos:end="63:99"><name pos:start="63:79" pos:end="63:81">sps</name><operator pos:start="63:82" pos:end="63:83">-&gt;</operator><name pos:start="63:84" pos:end="63:99">log2_min_tb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:89"><expr pos:start="65:5" pos:end="65:88"><name pos:start="65:5" pos:end="65:45"><name pos:start="65:5" pos:end="65:8">info</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:45">max_transform_hierarchy_depth_inter</name></name> <operator pos:start="65:47" pos:end="65:47">=</operator> <name pos:start="65:49" pos:end="65:88"><name pos:start="65:49" pos:end="65:51">sps</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:88">max_transform_hierarchy_depth_inter</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:89"><expr pos:start="67:5" pos:end="67:88"><name pos:start="67:5" pos:end="67:45"><name pos:start="67:5" pos:end="67:8">info</name><operator pos:start="67:9" pos:end="67:10">-&gt;</operator><name pos:start="67:11" pos:end="67:45">max_transform_hierarchy_depth_intra</name></name> <operator pos:start="67:47" pos:end="67:47">=</operator> <name pos:start="67:49" pos:end="67:88"><name pos:start="67:49" pos:end="67:51">sps</name><operator pos:start="67:52" pos:end="67:53">-&gt;</operator><name pos:start="67:54" pos:end="67:88">max_transform_hierarchy_depth_intra</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:68"><expr pos:start="69:5" pos:end="69:67"><name pos:start="69:5" pos:end="69:35"><name pos:start="69:5" pos:end="69:8">info</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:35">scaling_list_enabled_flag</name></name> <operator pos:start="69:37" pos:end="69:37">=</operator> <name pos:start="69:39" pos:end="69:67"><name pos:start="69:39" pos:end="69:41">sps</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:67">scaling_list_enable_flag</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="71:5" pos:end="71:70">/* Scaling lists, in diagonal order, to be used for this frame. */</comment>

    <for pos:start="73:5" pos:end="131:5">for <control pos:start="73:9" pos:end="73:34">(<init pos:start="73:10" pos:end="73:22"><decl pos:start="73:10" pos:end="73:21"><type pos:start="73:10" pos:end="73:15"><name pos:start="73:10" pos:end="73:15">size_t</name></type> <name pos:start="73:17" pos:end="73:17">i</name> <init pos:start="73:19" pos:end="73:21">= <expr pos:start="73:21" pos:end="73:21"><literal type="number" pos:start="73:21" pos:end="73:21">0</literal></expr></init></decl>;</init> <condition pos:start="73:24" pos:end="73:29"><expr pos:start="73:24" pos:end="73:28"><name pos:start="73:24" pos:end="73:24">i</name> <operator pos:start="73:26" pos:end="73:26">&lt;</operator> <literal type="number" pos:start="73:28" pos:end="73:28">6</literal></expr>;</condition> <incr pos:start="73:31" pos:end="73:33"><expr pos:start="73:31" pos:end="73:33"><name pos:start="73:31" pos:end="73:31">i</name><operator pos:start="73:32" pos:end="73:33">++</operator></expr></incr>)</control> <block pos:start="73:36" pos:end="131:5">{<block_content pos:start="75:9" pos:end="129:9">

        <for pos:start="75:9" pos:end="85:9">for <control pos:start="75:13" pos:end="75:39">(<init pos:start="75:14" pos:end="75:26"><decl pos:start="75:14" pos:end="75:25"><type pos:start="75:14" pos:end="75:19"><name pos:start="75:14" pos:end="75:19">size_t</name></type> <name pos:start="75:21" pos:end="75:21">j</name> <init pos:start="75:23" pos:end="75:25">= <expr pos:start="75:25" pos:end="75:25"><literal type="number" pos:start="75:25" pos:end="75:25">0</literal></expr></init></decl>;</init> <condition pos:start="75:28" pos:end="75:34"><expr pos:start="75:28" pos:end="75:33"><name pos:start="75:28" pos:end="75:28">j</name> <operator pos:start="75:30" pos:end="75:30">&lt;</operator> <literal type="number" pos:start="75:32" pos:end="75:33">16</literal></expr>;</condition> <incr pos:start="75:36" pos:end="75:38"><expr pos:start="75:36" pos:end="75:38"><name pos:start="75:36" pos:end="75:36">j</name><operator pos:start="75:37" pos:end="75:38">++</operator></expr></incr>)</control> <block pos:start="75:41" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:59">

            <comment type="block" pos:start="77:13" pos:end="79:57">/* Scaling List for 4x4 quantization matrix,

               indexed as ScalingList4x4[matrixId][i]. */</comment>

            <decl_stmt pos:start="81:13" pos:end="81:84"><decl pos:start="81:13" pos:end="81:83"><type pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:19">uint8_t</name></type> <name pos:start="81:21" pos:end="81:23">pos</name> <init pos:start="81:25" pos:end="81:83">= <expr pos:start="81:27" pos:end="81:83"><literal type="number" pos:start="81:27" pos:end="81:27">4</literal> <operator pos:start="81:29" pos:end="81:29">*</operator> <name pos:start="81:31" pos:end="81:55"><name pos:start="81:31" pos:end="81:52">ff_hevc_diag_scan4x4_y</name><index pos:start="81:53" pos:end="81:55">[<expr pos:start="81:54" pos:end="81:54"><name pos:start="81:54" pos:end="81:54">j</name></expr>]</index></name> <operator pos:start="81:57" pos:end="81:57">+</operator> <name pos:start="81:59" pos:end="81:83"><name pos:start="81:59" pos:end="81:80">ff_hevc_diag_scan4x4_x</name><index pos:start="81:81" pos:end="81:83">[<expr pos:start="81:82" pos:end="81:82"><name pos:start="81:82" pos:end="81:82">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:59"><expr pos:start="83:13" pos:end="83:58"><name pos:start="83:13" pos:end="83:38"><name pos:start="83:13" pos:end="83:16">info</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:32">ScalingList4x4</name><index pos:start="83:33" pos:end="83:35">[<expr pos:start="83:34" pos:end="83:34"><name pos:start="83:34" pos:end="83:34">i</name></expr>]</index><index pos:start="83:36" pos:end="83:38">[<expr pos:start="83:37" pos:end="83:37"><name pos:start="83:37" pos:end="83:37">j</name></expr>]</index></name> <operator pos:start="83:40" pos:end="83:40">=</operator> <name pos:start="83:42" pos:end="83:58"><name pos:start="83:42" pos:end="83:43">sl</name><operator pos:start="83:44" pos:end="83:45">-&gt;</operator><name pos:start="83:46" pos:end="83:47">sl</name><index pos:start="83:48" pos:end="83:50">[<expr pos:start="83:49" pos:end="83:49"><literal type="number" pos:start="83:49" pos:end="83:49">0</literal></expr>]</index><index pos:start="83:51" pos:end="83:53">[<expr pos:start="83:52" pos:end="83:52"><name pos:start="83:52" pos:end="83:52">i</name></expr>]</index><index pos:start="83:54" pos:end="83:58">[<expr pos:start="83:55" pos:end="83:57"><name pos:start="83:55" pos:end="83:57">pos</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="87:9" pos:end="113:9">for <control pos:start="87:13" pos:end="87:39">(<init pos:start="87:14" pos:end="87:26"><decl pos:start="87:14" pos:end="87:25"><type pos:start="87:14" pos:end="87:19"><name pos:start="87:14" pos:end="87:19">size_t</name></type> <name pos:start="87:21" pos:end="87:21">j</name> <init pos:start="87:23" pos:end="87:25">= <expr pos:start="87:25" pos:end="87:25"><literal type="number" pos:start="87:25" pos:end="87:25">0</literal></expr></init></decl>;</init> <condition pos:start="87:28" pos:end="87:34"><expr pos:start="87:28" pos:end="87:33"><name pos:start="87:28" pos:end="87:28">j</name> <operator pos:start="87:30" pos:end="87:30">&lt;</operator> <literal type="number" pos:start="87:32" pos:end="87:33">64</literal></expr>;</condition> <incr pos:start="87:36" pos:end="87:38"><expr pos:start="87:36" pos:end="87:38"><name pos:start="87:36" pos:end="87:36">j</name><operator pos:start="87:37" pos:end="87:38">++</operator></expr></incr>)</control> <block pos:start="87:41" pos:end="113:9">{<block_content pos:start="89:13" pos:end="111:13">

            <decl_stmt pos:start="89:13" pos:end="89:84"><decl pos:start="89:13" pos:end="89:83"><type pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:19">uint8_t</name></type> <name pos:start="89:21" pos:end="89:23">pos</name> <init pos:start="89:25" pos:end="89:83">= <expr pos:start="89:27" pos:end="89:83"><literal type="number" pos:start="89:27" pos:end="89:27">8</literal> <operator pos:start="89:29" pos:end="89:29">*</operator> <name pos:start="89:31" pos:end="89:55"><name pos:start="89:31" pos:end="89:52">ff_hevc_diag_scan8x8_y</name><index pos:start="89:53" pos:end="89:55">[<expr pos:start="89:54" pos:end="89:54"><name pos:start="89:54" pos:end="89:54">j</name></expr>]</index></name> <operator pos:start="89:57" pos:end="89:57">+</operator> <name pos:start="89:59" pos:end="89:83"><name pos:start="89:59" pos:end="89:80">ff_hevc_diag_scan8x8_x</name><index pos:start="89:81" pos:end="89:83">[<expr pos:start="89:82" pos:end="89:82"><name pos:start="89:82" pos:end="89:82">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <comment type="block" pos:start="91:13" pos:end="93:57">/* Scaling List for 8x8 quantization matrix,

               indexed as ScalingList8x8[matrixId][i]. */</comment>

            <expr_stmt pos:start="95:13" pos:end="95:59"><expr pos:start="95:13" pos:end="95:58"><name pos:start="95:13" pos:end="95:38"><name pos:start="95:13" pos:end="95:16">info</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:32">ScalingList8x8</name><index pos:start="95:33" pos:end="95:35">[<expr pos:start="95:34" pos:end="95:34"><name pos:start="95:34" pos:end="95:34">i</name></expr>]</index><index pos:start="95:36" pos:end="95:38">[<expr pos:start="95:37" pos:end="95:37"><name pos:start="95:37" pos:end="95:37">j</name></expr>]</index></name> <operator pos:start="95:40" pos:end="95:40">=</operator> <name pos:start="95:42" pos:end="95:58"><name pos:start="95:42" pos:end="95:43">sl</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:47">sl</name><index pos:start="95:48" pos:end="95:50">[<expr pos:start="95:49" pos:end="95:49"><literal type="number" pos:start="95:49" pos:end="95:49">1</literal></expr>]</index><index pos:start="95:51" pos:end="95:53">[<expr pos:start="95:52" pos:end="95:52"><name pos:start="95:52" pos:end="95:52">i</name></expr>]</index><index pos:start="95:54" pos:end="95:58">[<expr pos:start="95:55" pos:end="95:57"><name pos:start="95:55" pos:end="95:57">pos</name></expr>]</index></name></expr>;</expr_stmt>

            <comment type="block" pos:start="97:13" pos:end="99:59">/* Scaling List for 16x16 quantization matrix,

               indexed as ScalingList16x16[matrixId][i]. */</comment>

            <expr_stmt pos:start="101:13" pos:end="101:61"><expr pos:start="101:13" pos:end="101:60"><name pos:start="101:13" pos:end="101:40"><name pos:start="101:13" pos:end="101:16">info</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:34">ScalingList16x16</name><index pos:start="101:35" pos:end="101:37">[<expr pos:start="101:36" pos:end="101:36"><name pos:start="101:36" pos:end="101:36">i</name></expr>]</index><index pos:start="101:38" pos:end="101:40">[<expr pos:start="101:39" pos:end="101:39"><name pos:start="101:39" pos:end="101:39">j</name></expr>]</index></name> <operator pos:start="101:42" pos:end="101:42">=</operator> <name pos:start="101:44" pos:end="101:60"><name pos:start="101:44" pos:end="101:45">sl</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:49">sl</name><index pos:start="101:50" pos:end="101:52">[<expr pos:start="101:51" pos:end="101:51"><literal type="number" pos:start="101:51" pos:end="101:51">2</literal></expr>]</index><index pos:start="101:53" pos:end="101:55">[<expr pos:start="101:54" pos:end="101:54"><name pos:start="101:54" pos:end="101:54">i</name></expr>]</index><index pos:start="101:56" pos:end="101:60">[<expr pos:start="101:57" pos:end="101:59"><name pos:start="101:57" pos:end="101:59">pos</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="111:13"><if pos:start="103:13" pos:end="111:13">if <condition pos:start="103:16" pos:end="103:22">(<expr pos:start="103:17" pos:end="103:21"><name pos:start="103:17" pos:end="103:17">i</name> <operator pos:start="103:19" pos:end="103:19">&lt;</operator> <literal type="number" pos:start="103:21" pos:end="103:21">2</literal></expr>)</condition> <block pos:start="103:24" pos:end="111:13">{<block_content pos:start="109:17" pos:end="109:69">

                <comment type="block" pos:start="105:17" pos:end="107:63">/* Scaling List for 32x32 quantization matrix,

                   indexed as ScalingList32x32[matrixId][i]. */</comment>

                <expr_stmt pos:start="109:17" pos:end="109:69"><expr pos:start="109:17" pos:end="109:68"><name pos:start="109:17" pos:end="109:44"><name pos:start="109:17" pos:end="109:20">info</name><operator pos:start="109:21" pos:end="109:22">-&gt;</operator><name pos:start="109:23" pos:end="109:38">ScalingList32x32</name><index pos:start="109:39" pos:end="109:41">[<expr pos:start="109:40" pos:end="109:40"><name pos:start="109:40" pos:end="109:40">i</name></expr>]</index><index pos:start="109:42" pos:end="109:44">[<expr pos:start="109:43" pos:end="109:43"><name pos:start="109:43" pos:end="109:43">j</name></expr>]</index></name> <operator pos:start="109:46" pos:end="109:46">=</operator> <name pos:start="109:48" pos:end="109:68"><name pos:start="109:48" pos:end="109:49">sl</name><operator pos:start="109:50" pos:end="109:51">-&gt;</operator><name pos:start="109:52" pos:end="109:53">sl</name><index pos:start="109:54" pos:end="109:56">[<expr pos:start="109:55" pos:end="109:55"><literal type="number" pos:start="109:55" pos:end="109:55">3</literal></expr>]</index><index pos:start="109:57" pos:end="109:63">[<expr pos:start="109:58" pos:end="109:62"><name pos:start="109:58" pos:end="109:58">i</name> <operator pos:start="109:60" pos:end="109:60">*</operator> <literal type="number" pos:start="109:62" pos:end="109:62">3</literal></expr>]</index><index pos:start="109:64" pos:end="109:68">[<expr pos:start="109:65" pos:end="109:67"><name pos:start="109:65" pos:end="109:67">pos</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="115:9" pos:end="117:59">/* Scaling List DC Coefficients for 16x16,

           indexed as ScalingListDCCoeff16x16[matrixId]. */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:59"><expr pos:start="119:9" pos:end="119:58"><name pos:start="119:9" pos:end="119:40"><name pos:start="119:9" pos:end="119:12">info</name><operator pos:start="119:13" pos:end="119:14">-&gt;</operator><name pos:start="119:15" pos:end="119:37">ScalingListDCCoeff16x16</name><index pos:start="119:38" pos:end="119:40">[<expr pos:start="119:39" pos:end="119:39"><name pos:start="119:39" pos:end="119:39">i</name></expr>]</index></name> <operator pos:start="119:42" pos:end="119:42">=</operator> <name pos:start="119:44" pos:end="119:58"><name pos:start="119:44" pos:end="119:45">sl</name><operator pos:start="119:46" pos:end="119:47">-&gt;</operator><name pos:start="119:48" pos:end="119:52">sl_dc</name><index pos:start="119:53" pos:end="119:55">[<expr pos:start="119:54" pos:end="119:54"><literal type="number" pos:start="119:54" pos:end="119:54">0</literal></expr>]</index><index pos:start="119:56" pos:end="119:58">[<expr pos:start="119:57" pos:end="119:57"><name pos:start="119:57" pos:end="119:57">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="129:9"><if pos:start="121:9" pos:end="129:9">if <condition pos:start="121:12" pos:end="121:18">(<expr pos:start="121:13" pos:end="121:17"><name pos:start="121:13" pos:end="121:13">i</name> <operator pos:start="121:15" pos:end="121:15">&lt;</operator> <literal type="number" pos:start="121:17" pos:end="121:17">2</literal></expr>)</condition> <block pos:start="121:20" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:67">

            <comment type="block" pos:start="123:13" pos:end="125:63">/* Scaling List DC Coefficients for 32x32,

               indexed as ScalingListDCCoeff32x32[matrixId]. */</comment>

            <expr_stmt pos:start="127:13" pos:end="127:67"><expr pos:start="127:13" pos:end="127:66"><name pos:start="127:13" pos:end="127:44"><name pos:start="127:13" pos:end="127:16">info</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:41">ScalingListDCCoeff32x32</name><index pos:start="127:42" pos:end="127:44">[<expr pos:start="127:43" pos:end="127:43"><name pos:start="127:43" pos:end="127:43">i</name></expr>]</index></name> <operator pos:start="127:46" pos:end="127:46">=</operator> <name pos:start="127:48" pos:end="127:66"><name pos:start="127:48" pos:end="127:49">sl</name><operator pos:start="127:50" pos:end="127:51">-&gt;</operator><name pos:start="127:52" pos:end="127:56">sl_dc</name><index pos:start="127:57" pos:end="127:59">[<expr pos:start="127:58" pos:end="127:58"><literal type="number" pos:start="127:58" pos:end="127:58">1</literal></expr>]</index><index pos:start="127:60" pos:end="127:66">[<expr pos:start="127:61" pos:end="127:65"><name pos:start="127:61" pos:end="127:61">i</name> <operator pos:start="127:63" pos:end="127:63">*</operator> <literal type="number" pos:start="127:65" pos:end="127:65">3</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="133:5" pos:end="133:51"><expr pos:start="133:5" pos:end="133:50"><name pos:start="133:5" pos:end="133:26"><name pos:start="133:5" pos:end="133:8">info</name><operator pos:start="133:9" pos:end="133:10">-&gt;</operator><name pos:start="133:11" pos:end="133:26">amp_enabled_flag</name></name> <operator pos:start="133:28" pos:end="133:28">=</operator> <name pos:start="133:30" pos:end="133:50"><name pos:start="133:30" pos:end="133:32">sps</name><operator pos:start="133:33" pos:end="133:34">-&gt;</operator><name pos:start="133:35" pos:end="133:50">amp_enabled_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:65"><expr pos:start="135:5" pos:end="135:64"><name pos:start="135:5" pos:end="135:45"><name pos:start="135:5" pos:end="135:8">info</name><operator pos:start="135:9" pos:end="135:10">-&gt;</operator><name pos:start="135:11" pos:end="135:45">sample_adaptive_offset_enabled_flag</name></name> <operator pos:start="135:47" pos:end="135:47">=</operator> <name pos:start="135:49" pos:end="135:64"><name pos:start="135:49" pos:end="135:51">sps</name><operator pos:start="135:52" pos:end="135:53">-&gt;</operator><name pos:start="135:54" pos:end="135:64">sao_enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:51"><expr pos:start="137:5" pos:end="137:50"><name pos:start="137:5" pos:end="137:26"><name pos:start="137:5" pos:end="137:8">info</name><operator pos:start="137:9" pos:end="137:10">-&gt;</operator><name pos:start="137:11" pos:end="137:26">pcm_enabled_flag</name></name> <operator pos:start="137:28" pos:end="137:28">=</operator> <name pos:start="137:30" pos:end="137:50"><name pos:start="137:30" pos:end="137:32">sps</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:50">pcm_enabled_flag</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="161:5"><if pos:start="139:5" pos:end="161:5">if <condition pos:start="139:8" pos:end="139:31">(<expr pos:start="139:9" pos:end="139:30"><name pos:start="139:9" pos:end="139:30"><name pos:start="139:9" pos:end="139:12">info</name><operator pos:start="139:13" pos:end="139:14">-&gt;</operator><name pos:start="139:15" pos:end="139:30">pcm_enabled_flag</name></name></expr>)</condition> <block pos:start="139:33" pos:end="161:5">{<block_content pos:start="143:9" pos:end="159:80">

        <comment type="block" pos:start="141:9" pos:end="141:81">/* Only needs to be set if pcm_enabled_flag is set. Ignored otherwise. */</comment>

        <expr_stmt pos:start="143:9" pos:end="143:72"><expr pos:start="143:9" pos:end="143:71"><name pos:start="143:9" pos:end="143:46"><name pos:start="143:9" pos:end="143:12">info</name><operator pos:start="143:13" pos:end="143:14">-&gt;</operator><name pos:start="143:15" pos:end="143:46">pcm_sample_bit_depth_luma_minus1</name></name> <operator pos:start="143:48" pos:end="143:48">=</operator> <name pos:start="143:50" pos:end="143:67"><name pos:start="143:50" pos:end="143:52">sps</name><operator pos:start="143:53" pos:end="143:54">-&gt;</operator><name pos:start="143:55" pos:end="143:57">pcm</name><operator pos:start="143:58" pos:end="143:58">.</operator><name pos:start="143:59" pos:end="143:67">bit_depth</name></name> <operator pos:start="143:69" pos:end="143:69">-</operator> <literal type="number" pos:start="143:71" pos:end="143:71">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="145:9" pos:end="145:81">/* Only needs to be set if pcm_enabled_flag is set. Ignored otherwise. */</comment>

        <expr_stmt pos:start="147:9" pos:end="147:81"><expr pos:start="147:9" pos:end="147:80"><name pos:start="147:9" pos:end="147:48"><name pos:start="147:9" pos:end="147:12">info</name><operator pos:start="147:13" pos:end="147:14">-&gt;</operator><name pos:start="147:15" pos:end="147:48">pcm_sample_bit_depth_chroma_minus1</name></name> <operator pos:start="147:50" pos:end="147:50">=</operator> <name pos:start="147:52" pos:end="147:76"><name pos:start="147:52" pos:end="147:54">sps</name><operator pos:start="147:55" pos:end="147:56">-&gt;</operator><name pos:start="147:57" pos:end="147:59">pcm</name><operator pos:start="147:60" pos:end="147:60">.</operator><name pos:start="147:61" pos:end="147:76">bit_depth_chroma</name></name> <operator pos:start="147:78" pos:end="147:78">-</operator> <literal type="number" pos:start="147:80" pos:end="147:80">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="149:9" pos:end="149:81">/* Only needs to be set if pcm_enabled_flag is set. Ignored otherwise. */</comment>

        <expr_stmt pos:start="151:9" pos:end="151:93"><expr pos:start="151:9" pos:end="151:92"><name pos:start="151:9" pos:end="151:56"><name pos:start="151:9" pos:end="151:12">info</name><operator pos:start="151:13" pos:end="151:14">-&gt;</operator><name pos:start="151:15" pos:end="151:56">log2_min_pcm_luma_coding_block_size_minus3</name></name> <operator pos:start="151:58" pos:end="151:58">=</operator> <name pos:start="151:60" pos:end="151:88"><name pos:start="151:60" pos:end="151:62">sps</name><operator pos:start="151:63" pos:end="151:64">-&gt;</operator><name pos:start="151:65" pos:end="151:67">pcm</name><operator pos:start="151:68" pos:end="151:68">.</operator><name pos:start="151:69" pos:end="151:88">log2_min_pcm_cb_size</name></name> <operator pos:start="151:90" pos:end="151:90">-</operator> <literal type="number" pos:start="151:92" pos:end="151:92">3</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="153:9" pos:end="153:81">/* Only needs to be set if pcm_enabled_flag is set. Ignored otherwise. */</comment>

        <expr_stmt pos:start="155:9" pos:end="155:123"><expr pos:start="155:9" pos:end="155:122"><name pos:start="155:9" pos:end="155:58"><name pos:start="155:9" pos:end="155:12">info</name><operator pos:start="155:13" pos:end="155:14">-&gt;</operator><name pos:start="155:15" pos:end="155:58">log2_diff_max_min_pcm_luma_coding_block_size</name></name> <operator pos:start="155:60" pos:end="155:60">=</operator> <name pos:start="155:62" pos:end="155:90"><name pos:start="155:62" pos:end="155:64">sps</name><operator pos:start="155:65" pos:end="155:66">-&gt;</operator><name pos:start="155:67" pos:end="155:69">pcm</name><operator pos:start="155:70" pos:end="155:70">.</operator><name pos:start="155:71" pos:end="155:90">log2_max_pcm_cb_size</name></name> <operator pos:start="155:92" pos:end="155:92">-</operator> <name pos:start="155:94" pos:end="155:122"><name pos:start="155:94" pos:end="155:96">sps</name><operator pos:start="155:97" pos:end="155:98">-&gt;</operator><name pos:start="155:99" pos:end="155:101">pcm</name><operator pos:start="155:102" pos:end="155:102">.</operator><name pos:start="155:103" pos:end="155:122">log2_min_pcm_cb_size</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="157:9" pos:end="157:81">/* Only needs to be set if pcm_enabled_flag is set. Ignored otherwise. */</comment>

        <expr_stmt pos:start="159:9" pos:end="159:80"><expr pos:start="159:9" pos:end="159:79"><name pos:start="159:9" pos:end="159:43"><name pos:start="159:9" pos:end="159:12">info</name><operator pos:start="159:13" pos:end="159:14">-&gt;</operator><name pos:start="159:15" pos:end="159:43">pcm_loop_filter_disabled_flag</name></name> <operator pos:start="159:45" pos:end="159:45">=</operator> <name pos:start="159:47" pos:end="159:79"><name pos:start="159:47" pos:end="159:49">sps</name><operator pos:start="159:50" pos:end="159:51">-&gt;</operator><name pos:start="159:52" pos:end="159:54">pcm</name><operator pos:start="159:55" pos:end="159:55">.</operator><name pos:start="159:56" pos:end="159:79">loop_filter_disable_flag</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="163:5" pos:end="165:23">/* Per spec, when zero, assume short_term_ref_pic_set_sps_flag

       is also zero. */</comment>

    <expr_stmt pos:start="167:5" pos:end="167:55"><expr pos:start="167:5" pos:end="167:54"><name pos:start="167:5" pos:end="167:37"><name pos:start="167:5" pos:end="167:8">info</name><operator pos:start="167:9" pos:end="167:10">-&gt;</operator><name pos:start="167:11" pos:end="167:37">num_short_term_ref_pic_sets</name></name> <operator pos:start="167:39" pos:end="167:39">=</operator> <name pos:start="167:41" pos:end="167:54"><name pos:start="167:41" pos:end="167:43">sps</name><operator pos:start="167:44" pos:end="167:45">-&gt;</operator><name pos:start="167:46" pos:end="167:54">nb_st_rps</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:81"><expr pos:start="169:5" pos:end="169:80"><name pos:start="169:5" pos:end="169:41"><name pos:start="169:5" pos:end="169:8">info</name><operator pos:start="169:9" pos:end="169:10">-&gt;</operator><name pos:start="169:11" pos:end="169:41">long_term_ref_pics_present_flag</name></name> <operator pos:start="169:43" pos:end="169:43">=</operator> <name pos:start="169:45" pos:end="169:80"><name pos:start="169:45" pos:end="169:47">sps</name><operator pos:start="169:48" pos:end="169:49">-&gt;</operator><name pos:start="169:50" pos:end="169:80">long_term_ref_pics_present_flag</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="171:5" pos:end="173:20">/* Only needed if long_term_ref_pics_present_flag is set. Ignored

       otherwise. */</comment>

    <expr_stmt pos:start="175:5" pos:end="175:71"><expr pos:start="175:5" pos:end="175:70"><name pos:start="175:5" pos:end="175:36"><name pos:start="175:5" pos:end="175:8">info</name><operator pos:start="175:9" pos:end="175:10">-&gt;</operator><name pos:start="175:11" pos:end="175:36">num_long_term_ref_pics_sps</name></name> <operator pos:start="175:38" pos:end="175:38">=</operator> <name pos:start="175:40" pos:end="175:70"><name pos:start="175:40" pos:end="175:42">sps</name><operator pos:start="175:43" pos:end="175:44">-&gt;</operator><name pos:start="175:45" pos:end="175:70">num_long_term_ref_pics_sps</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:77"><expr pos:start="177:5" pos:end="177:76"><name pos:start="177:5" pos:end="177:39"><name pos:start="177:5" pos:end="177:8">info</name><operator pos:start="177:9" pos:end="177:10">-&gt;</operator><name pos:start="177:11" pos:end="177:39">sps_temporal_mvp_enabled_flag</name></name> <operator pos:start="177:41" pos:end="177:41">=</operator> <name pos:start="177:43" pos:end="177:76"><name pos:start="177:43" pos:end="177:45">sps</name><operator pos:start="177:46" pos:end="177:47">-&gt;</operator><name pos:start="177:48" pos:end="177:76">sps_temporal_mvp_enabled_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:92"><expr pos:start="179:5" pos:end="179:91"><name pos:start="179:5" pos:end="179:45"><name pos:start="179:5" pos:end="179:8">info</name><operator pos:start="179:9" pos:end="179:10">-&gt;</operator><name pos:start="179:11" pos:end="179:45">strong_intra_smoothing_enabled_flag</name></name> <operator pos:start="179:47" pos:end="179:47">=</operator> <name pos:start="179:49" pos:end="179:91"><name pos:start="179:49" pos:end="179:51">sps</name><operator pos:start="179:52" pos:end="179:53">-&gt;</operator><name pos:start="179:54" pos:end="179:91">sps_strong_intra_smoothing_enable_flag</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="183:5" pos:end="183:63">/* Copy the HEVC Picture Parameter Set bitstream fields. */</comment>

    <expr_stmt pos:start="185:5" pos:end="185:93"><expr pos:start="185:5" pos:end="185:92"><name pos:start="185:5" pos:end="185:47"><name pos:start="185:5" pos:end="185:8">info</name><operator pos:start="185:9" pos:end="185:10">-&gt;</operator><name pos:start="185:11" pos:end="185:47">dependent_slice_segments_enabled_flag</name></name> <operator pos:start="185:49" pos:end="185:49">=</operator> <name pos:start="185:51" pos:end="185:92"><name pos:start="185:51" pos:end="185:53">pps</name><operator pos:start="185:54" pos:end="185:55">-&gt;</operator><name pos:start="185:56" pos:end="185:92">dependent_slice_segments_enabled_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:67"><expr pos:start="187:5" pos:end="187:66"><name pos:start="187:5" pos:end="187:34"><name pos:start="187:5" pos:end="187:8">info</name><operator pos:start="187:9" pos:end="187:10">-&gt;</operator><name pos:start="187:11" pos:end="187:34">output_flag_present_flag</name></name> <operator pos:start="187:36" pos:end="187:36">=</operator> <name pos:start="187:38" pos:end="187:66"><name pos:start="187:38" pos:end="187:40">pps</name><operator pos:start="187:41" pos:end="187:42">-&gt;</operator><name pos:start="187:43" pos:end="187:66">output_flag_present_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:73"><expr pos:start="189:5" pos:end="189:72"><name pos:start="189:5" pos:end="189:37"><name pos:start="189:5" pos:end="189:8">info</name><operator pos:start="189:9" pos:end="189:10">-&gt;</operator><name pos:start="189:11" pos:end="189:37">num_extra_slice_header_bits</name></name> <operator pos:start="189:39" pos:end="189:39">=</operator> <name pos:start="189:41" pos:end="189:72"><name pos:start="189:41" pos:end="189:43">pps</name><operator pos:start="189:44" pos:end="189:45">-&gt;</operator><name pos:start="189:46" pos:end="189:72">num_extra_slice_header_bits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:69"><expr pos:start="191:5" pos:end="191:68"><name pos:start="191:5" pos:end="191:39"><name pos:start="191:5" pos:end="191:8">info</name><operator pos:start="191:9" pos:end="191:10">-&gt;</operator><name pos:start="191:11" pos:end="191:39">sign_data_hiding_enabled_flag</name></name> <operator pos:start="191:41" pos:end="191:41">=</operator> <name pos:start="191:43" pos:end="191:68"><name pos:start="191:43" pos:end="191:45">pps</name><operator pos:start="191:46" pos:end="191:47">-&gt;</operator><name pos:start="191:48" pos:end="191:68">sign_data_hiding_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:65"><expr pos:start="193:5" pos:end="193:64"><name pos:start="193:5" pos:end="193:33"><name pos:start="193:5" pos:end="193:8">info</name><operator pos:start="193:9" pos:end="193:10">-&gt;</operator><name pos:start="193:11" pos:end="193:33">cabac_init_present_flag</name></name> <operator pos:start="193:35" pos:end="193:35">=</operator> <name pos:start="193:37" pos:end="193:64"><name pos:start="193:37" pos:end="193:39">pps</name><operator pos:start="193:40" pos:end="193:41">-&gt;</operator><name pos:start="193:42" pos:end="193:64">cabac_init_present_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:88"><expr pos:start="195:5" pos:end="195:87"><name pos:start="195:5" pos:end="195:46"><name pos:start="195:5" pos:end="195:8">info</name><operator pos:start="195:9" pos:end="195:10">-&gt;</operator><name pos:start="195:11" pos:end="195:46">num_ref_idx_l0_default_active_minus1</name></name> <operator pos:start="195:48" pos:end="195:48">=</operator> <name pos:start="195:50" pos:end="195:83"><name pos:start="195:50" pos:end="195:52">pps</name><operator pos:start="195:53" pos:end="195:54">-&gt;</operator><name pos:start="195:55" pos:end="195:83">num_ref_idx_l0_default_active</name></name> <operator pos:start="195:85" pos:end="195:85">-</operator> <literal type="number" pos:start="195:87" pos:end="195:87">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:88"><expr pos:start="197:5" pos:end="197:87"><name pos:start="197:5" pos:end="197:46"><name pos:start="197:5" pos:end="197:8">info</name><operator pos:start="197:9" pos:end="197:10">-&gt;</operator><name pos:start="197:11" pos:end="197:46">num_ref_idx_l1_default_active_minus1</name></name> <operator pos:start="197:48" pos:end="197:48">=</operator> <name pos:start="197:50" pos:end="197:83"><name pos:start="197:50" pos:end="197:52">pps</name><operator pos:start="197:53" pos:end="197:54">-&gt;</operator><name pos:start="197:55" pos:end="197:83">num_ref_idx_l1_default_active</name></name> <operator pos:start="197:85" pos:end="197:85">-</operator> <literal type="number" pos:start="197:87" pos:end="197:87">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:53"><expr pos:start="199:5" pos:end="199:52"><name pos:start="199:5" pos:end="199:25"><name pos:start="199:5" pos:end="199:8">info</name><operator pos:start="199:9" pos:end="199:10">-&gt;</operator><name pos:start="199:11" pos:end="199:25">init_qp_minus26</name></name> <operator pos:start="199:27" pos:end="199:27">=</operator> <name pos:start="199:29" pos:end="199:52"><name pos:start="199:29" pos:end="199:31">pps</name><operator pos:start="199:32" pos:end="199:33">-&gt;</operator><name pos:start="199:34" pos:end="199:52">pic_init_qp_minus26</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:73"><expr pos:start="201:5" pos:end="201:72"><name pos:start="201:5" pos:end="201:37"><name pos:start="201:5" pos:end="201:8">info</name><operator pos:start="201:9" pos:end="201:10">-&gt;</operator><name pos:start="201:11" pos:end="201:37">constrained_intra_pred_flag</name></name> <operator pos:start="201:39" pos:end="201:39">=</operator> <name pos:start="201:41" pos:end="201:72"><name pos:start="201:41" pos:end="201:43">pps</name><operator pos:start="201:44" pos:end="201:45">-&gt;</operator><name pos:start="201:46" pos:end="201:72">constrained_intra_pred_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:73"><expr pos:start="203:5" pos:end="203:72"><name pos:start="203:5" pos:end="203:37"><name pos:start="203:5" pos:end="203:8">info</name><operator pos:start="203:9" pos:end="203:10">-&gt;</operator><name pos:start="203:11" pos:end="203:37">transform_skip_enabled_flag</name></name> <operator pos:start="203:39" pos:end="203:39">=</operator> <name pos:start="203:41" pos:end="203:72"><name pos:start="203:41" pos:end="203:43">pps</name><operator pos:start="203:44" pos:end="203:45">-&gt;</operator><name pos:start="203:46" pos:end="203:72">transform_skip_enabled_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:67"><expr pos:start="205:5" pos:end="205:66"><name pos:start="205:5" pos:end="205:34"><name pos:start="205:5" pos:end="205:8">info</name><operator pos:start="205:9" pos:end="205:10">-&gt;</operator><name pos:start="205:11" pos:end="205:34">cu_qp_delta_enabled_flag</name></name> <operator pos:start="205:36" pos:end="205:36">=</operator> <name pos:start="205:38" pos:end="205:66"><name pos:start="205:38" pos:end="205:40">pps</name><operator pos:start="205:41" pos:end="205:42">-&gt;</operator><name pos:start="205:43" pos:end="205:66">cu_qp_delta_enabled_flag</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="207:5" pos:end="207:76">/* Only needed if cu_qp_delta_enabled_flag is set. Ignored otherwise. */</comment>

    <expr_stmt pos:start="209:5" pos:end="209:63"><expr pos:start="209:5" pos:end="209:62"><name pos:start="209:5" pos:end="209:32"><name pos:start="209:5" pos:end="209:8">info</name><operator pos:start="209:9" pos:end="209:10">-&gt;</operator><name pos:start="209:11" pos:end="209:32">diff_cu_qp_delta_depth</name></name> <operator pos:start="209:34" pos:end="209:34">=</operator> <name pos:start="209:36" pos:end="209:62"><name pos:start="209:36" pos:end="209:38">pps</name><operator pos:start="209:39" pos:end="209:40">-&gt;</operator><name pos:start="209:41" pos:end="209:62">diff_cu_qp_delta_depth</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:47"><expr pos:start="211:5" pos:end="211:46"><name pos:start="211:5" pos:end="211:26"><name pos:start="211:5" pos:end="211:8">info</name><operator pos:start="211:9" pos:end="211:10">-&gt;</operator><name pos:start="211:11" pos:end="211:26">pps_cb_qp_offset</name></name> <operator pos:start="211:28" pos:end="211:28">=</operator> <name pos:start="211:30" pos:end="211:46"><name pos:start="211:30" pos:end="211:32">pps</name><operator pos:start="211:33" pos:end="211:34">-&gt;</operator><name pos:start="211:35" pos:end="211:46">cb_qp_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:47"><expr pos:start="213:5" pos:end="213:46"><name pos:start="213:5" pos:end="213:26"><name pos:start="213:5" pos:end="213:8">info</name><operator pos:start="213:9" pos:end="213:10">-&gt;</operator><name pos:start="213:11" pos:end="213:26">pps_cr_qp_offset</name></name> <operator pos:start="213:28" pos:end="213:28">=</operator> <name pos:start="213:30" pos:end="213:46"><name pos:start="213:30" pos:end="213:32">pps</name><operator pos:start="213:33" pos:end="213:34">-&gt;</operator><name pos:start="213:35" pos:end="213:46">cr_qp_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:105"><expr pos:start="215:5" pos:end="215:104"><name pos:start="215:5" pos:end="215:50"><name pos:start="215:5" pos:end="215:8">info</name><operator pos:start="215:9" pos:end="215:10">-&gt;</operator><name pos:start="215:11" pos:end="215:50">pps_slice_chroma_qp_offsets_present_flag</name></name> <operator pos:start="215:52" pos:end="215:52">=</operator> <name pos:start="215:54" pos:end="215:104"><name pos:start="215:54" pos:end="215:56">pps</name><operator pos:start="215:57" pos:end="215:58">-&gt;</operator><name pos:start="215:59" pos:end="215:104">pic_slice_level_chroma_qp_offsets_present_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:55"><expr pos:start="217:5" pos:end="217:54"><name pos:start="217:5" pos:end="217:28"><name pos:start="217:5" pos:end="217:8">info</name><operator pos:start="217:9" pos:end="217:10">-&gt;</operator><name pos:start="217:11" pos:end="217:28">weighted_pred_flag</name></name> <operator pos:start="217:30" pos:end="217:30">=</operator> <name pos:start="217:32" pos:end="217:54"><name pos:start="217:32" pos:end="217:34">pps</name><operator pos:start="217:35" pos:end="217:36">-&gt;</operator><name pos:start="217:37" pos:end="217:54">weighted_pred_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:59"><expr pos:start="219:5" pos:end="219:58"><name pos:start="219:5" pos:end="219:30"><name pos:start="219:5" pos:end="219:8">info</name><operator pos:start="219:9" pos:end="219:10">-&gt;</operator><name pos:start="219:11" pos:end="219:30">weighted_bipred_flag</name></name> <operator pos:start="219:32" pos:end="219:32">=</operator> <name pos:start="219:34" pos:end="219:58"><name pos:start="219:34" pos:end="219:36">pps</name><operator pos:start="219:37" pos:end="219:38">-&gt;</operator><name pos:start="219:39" pos:end="219:58">weighted_bipred_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:78"><expr pos:start="221:5" pos:end="221:77"><name pos:start="221:5" pos:end="221:40"><name pos:start="221:5" pos:end="221:8">info</name><operator pos:start="221:9" pos:end="221:10">-&gt;</operator><name pos:start="221:11" pos:end="221:40">transquant_bypass_enabled_flag</name></name> <operator pos:start="221:42" pos:end="221:42">=</operator> <name pos:start="221:44" pos:end="221:77"><name pos:start="221:44" pos:end="221:46">pps</name><operator pos:start="221:47" pos:end="221:48">-&gt;</operator><name pos:start="221:49" pos:end="221:77">transquant_bypass_enable_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:55"><expr pos:start="223:5" pos:end="223:54"><name pos:start="223:5" pos:end="223:28"><name pos:start="223:5" pos:end="223:8">info</name><operator pos:start="223:9" pos:end="223:10">-&gt;</operator><name pos:start="223:11" pos:end="223:28">tiles_enabled_flag</name></name> <operator pos:start="223:30" pos:end="223:30">=</operator> <name pos:start="223:32" pos:end="223:54"><name pos:start="223:32" pos:end="223:34">pps</name><operator pos:start="223:35" pos:end="223:36">-&gt;</operator><name pos:start="223:37" pos:end="223:54">tiles_enabled_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:83"><expr pos:start="225:5" pos:end="225:82"><name pos:start="225:5" pos:end="225:42"><name pos:start="225:5" pos:end="225:8">info</name><operator pos:start="225:9" pos:end="225:10">-&gt;</operator><name pos:start="225:11" pos:end="225:42">entropy_coding_sync_enabled_flag</name></name> <operator pos:start="225:44" pos:end="225:44">=</operator> <name pos:start="225:46" pos:end="225:82"><name pos:start="225:46" pos:end="225:48">pps</name><operator pos:start="225:49" pos:end="225:50">-&gt;</operator><name pos:start="225:51" pos:end="225:82">entropy_coding_sync_enabled_flag</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="227:5" pos:end="271:5"><if pos:start="227:5" pos:end="271:5">if <condition pos:start="227:8" pos:end="227:33">(<expr pos:start="227:9" pos:end="227:32"><name pos:start="227:9" pos:end="227:32"><name pos:start="227:9" pos:end="227:12">info</name><operator pos:start="227:13" pos:end="227:14">-&gt;</operator><name pos:start="227:15" pos:end="227:32">tiles_enabled_flag</name></name></expr>)</condition> <block pos:start="227:35" pos:end="271:5">{<block_content pos:start="231:9" pos:end="269:97">

        <comment type="block" pos:start="229:9" pos:end="229:73">/* Only valid if tiles_enabled_flag is set. Ignored otherwise. */</comment>

        <expr_stmt pos:start="231:9" pos:end="231:66"><expr pos:start="231:9" pos:end="231:65"><name pos:start="231:9" pos:end="231:37"><name pos:start="231:9" pos:end="231:12">info</name><operator pos:start="231:13" pos:end="231:14">-&gt;</operator><name pos:start="231:15" pos:end="231:37">num_tile_columns_minus1</name></name> <operator pos:start="231:39" pos:end="231:39">=</operator> <name pos:start="231:41" pos:end="231:61"><name pos:start="231:41" pos:end="231:43">pps</name><operator pos:start="231:44" pos:end="231:45">-&gt;</operator><name pos:start="231:46" pos:end="231:61">num_tile_columns</name></name> <operator pos:start="231:63" pos:end="231:63">-</operator> <literal type="number" pos:start="231:65" pos:end="231:65">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="233:9" pos:end="233:73">/* Only valid if tiles_enabled_flag is set. Ignored otherwise. */</comment>

        <expr_stmt pos:start="235:9" pos:end="235:60"><expr pos:start="235:9" pos:end="235:59"><name pos:start="235:9" pos:end="235:34"><name pos:start="235:9" pos:end="235:12">info</name><operator pos:start="235:13" pos:end="235:14">-&gt;</operator><name pos:start="235:15" pos:end="235:34">num_tile_rows_minus1</name></name> <operator pos:start="235:36" pos:end="235:36">=</operator> <name pos:start="235:38" pos:end="235:55"><name pos:start="235:38" pos:end="235:40">pps</name><operator pos:start="235:41" pos:end="235:42">-&gt;</operator><name pos:start="235:43" pos:end="235:55">num_tile_rows</name></name> <operator pos:start="235:57" pos:end="235:57">-</operator> <literal type="number" pos:start="235:59" pos:end="235:59">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="237:9" pos:end="237:73">/* Only valid if tiles_enabled_flag is set. Ignored otherwise. */</comment>

        <expr_stmt pos:start="239:9" pos:end="239:63"><expr pos:start="239:9" pos:end="239:62"><name pos:start="239:9" pos:end="239:34"><name pos:start="239:9" pos:end="239:12">info</name><operator pos:start="239:13" pos:end="239:14">-&gt;</operator><name pos:start="239:15" pos:end="239:34">uniform_spacing_flag</name></name> <operator pos:start="239:36" pos:end="239:36">=</operator> <name pos:start="239:38" pos:end="239:62"><name pos:start="239:38" pos:end="239:40">pps</name><operator pos:start="239:41" pos:end="239:42">-&gt;</operator><name pos:start="239:43" pos:end="239:62">uniform_spacing_flag</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="241:9" pos:end="245:22">/* Only need to set 0..num_tile_columns_minus1. The struct

           definition reserves up to the maximum of 20. Invalid values are

           ignored. */</comment>

        <for pos:start="247:9" pos:end="251:9">for <control pos:start="247:13" pos:end="247:59">(<init pos:start="247:14" pos:end="247:27"><decl pos:start="247:14" pos:end="247:26"><type pos:start="247:14" pos:end="247:20"><name pos:start="247:14" pos:end="247:20">ssize_t</name></type> <name pos:start="247:22" pos:end="247:22">i</name> <init pos:start="247:24" pos:end="247:26">= <expr pos:start="247:26" pos:end="247:26"><literal type="number" pos:start="247:26" pos:end="247:26">0</literal></expr></init></decl>;</init> <condition pos:start="247:29" pos:end="247:54"><expr pos:start="247:29" pos:end="247:53"><name pos:start="247:29" pos:end="247:29">i</name> <operator pos:start="247:31" pos:end="247:31">&lt;</operator> <name pos:start="247:33" pos:end="247:53"><name pos:start="247:33" pos:end="247:35">pps</name><operator pos:start="247:36" pos:end="247:37">-&gt;</operator><name pos:start="247:38" pos:end="247:53">num_tile_columns</name></name></expr>;</condition> <incr pos:start="247:56" pos:end="247:58"><expr pos:start="247:56" pos:end="247:58"><name pos:start="247:56" pos:end="247:56">i</name><operator pos:start="247:57" pos:end="247:58">++</operator></expr></incr>)</control> <block pos:start="247:61" pos:end="251:9">{<block_content pos:start="249:13" pos:end="249:68">

            <expr_stmt pos:start="249:13" pos:end="249:68"><expr pos:start="249:13" pos:end="249:67"><name pos:start="249:13" pos:end="249:40"><name pos:start="249:13" pos:end="249:16">info</name><operator pos:start="249:17" pos:end="249:18">-&gt;</operator><name pos:start="249:19" pos:end="249:37">column_width_minus1</name><index pos:start="249:38" pos:end="249:40">[<expr pos:start="249:39" pos:end="249:39"><name pos:start="249:39" pos:end="249:39">i</name></expr>]</index></name> <operator pos:start="249:42" pos:end="249:42">=</operator> <name pos:start="249:44" pos:end="249:63"><name pos:start="249:44" pos:end="249:46">pps</name><operator pos:start="249:47" pos:end="249:48">-&gt;</operator><name pos:start="249:49" pos:end="249:60">column_width</name><index pos:start="249:61" pos:end="249:63">[<expr pos:start="249:62" pos:end="249:62"><name pos:start="249:62" pos:end="249:62">i</name></expr>]</index></name> <operator pos:start="249:65" pos:end="249:65">-</operator> <literal type="number" pos:start="249:67" pos:end="249:67">1</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="253:9" pos:end="257:21">/* Only need to set 0..num_tile_rows_minus1. The struct

           definition reserves up to the maximum of 22. Invalid values are

           ignored.*/</comment>

        <for pos:start="259:9" pos:end="263:9">for <control pos:start="259:13" pos:end="259:56">(<init pos:start="259:14" pos:end="259:27"><decl pos:start="259:14" pos:end="259:26"><type pos:start="259:14" pos:end="259:20"><name pos:start="259:14" pos:end="259:20">ssize_t</name></type> <name pos:start="259:22" pos:end="259:22">i</name> <init pos:start="259:24" pos:end="259:26">= <expr pos:start="259:26" pos:end="259:26"><literal type="number" pos:start="259:26" pos:end="259:26">0</literal></expr></init></decl>;</init> <condition pos:start="259:29" pos:end="259:51"><expr pos:start="259:29" pos:end="259:50"><name pos:start="259:29" pos:end="259:29">i</name> <operator pos:start="259:31" pos:end="259:31">&lt;</operator> <name pos:start="259:33" pos:end="259:50"><name pos:start="259:33" pos:end="259:35">pps</name><operator pos:start="259:36" pos:end="259:37">-&gt;</operator><name pos:start="259:38" pos:end="259:50">num_tile_rows</name></name></expr>;</condition> <incr pos:start="259:53" pos:end="259:55"><expr pos:start="259:53" pos:end="259:55"><name pos:start="259:53" pos:end="259:53">i</name><operator pos:start="259:54" pos:end="259:55">++</operator></expr></incr>)</control> <block pos:start="259:58" pos:end="263:9">{<block_content pos:start="261:13" pos:end="261:64">

            <expr_stmt pos:start="261:13" pos:end="261:64"><expr pos:start="261:13" pos:end="261:63"><name pos:start="261:13" pos:end="261:38"><name pos:start="261:13" pos:end="261:16">info</name><operator pos:start="261:17" pos:end="261:18">-&gt;</operator><name pos:start="261:19" pos:end="261:35">row_height_minus1</name><index pos:start="261:36" pos:end="261:38">[<expr pos:start="261:37" pos:end="261:37"><name pos:start="261:37" pos:end="261:37">i</name></expr>]</index></name> <operator pos:start="261:40" pos:end="261:40">=</operator> <name pos:start="261:42" pos:end="261:59"><name pos:start="261:42" pos:end="261:44">pps</name><operator pos:start="261:45" pos:end="261:46">-&gt;</operator><name pos:start="261:47" pos:end="261:56">row_height</name><index pos:start="261:57" pos:end="261:59">[<expr pos:start="261:58" pos:end="261:58"><name pos:start="261:58" pos:end="261:58">i</name></expr>]</index></name> <operator pos:start="261:61" pos:end="261:61">-</operator> <literal type="number" pos:start="261:63" pos:end="261:63">1</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="265:9" pos:end="267:22">/* Only needed if tiles_enabled_flag is set. Invalid values are

           ignored. */</comment>

        <expr_stmt pos:start="269:9" pos:end="269:97"><expr pos:start="269:9" pos:end="269:96"><name pos:start="269:9" pos:end="269:51"><name pos:start="269:9" pos:end="269:12">info</name><operator pos:start="269:13" pos:end="269:14">-&gt;</operator><name pos:start="269:15" pos:end="269:51">loop_filter_across_tiles_enabled_flag</name></name> <operator pos:start="269:53" pos:end="269:53">=</operator> <name pos:start="269:55" pos:end="269:96"><name pos:start="269:55" pos:end="269:57">pps</name><operator pos:start="269:58" pos:end="269:59">-&gt;</operator><name pos:start="269:60" pos:end="269:96">loop_filter_across_tiles_enabled_flag</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:103"><expr pos:start="273:5" pos:end="273:102"><name pos:start="273:5" pos:end="273:52"><name pos:start="273:5" pos:end="273:8">info</name><operator pos:start="273:9" pos:end="273:10">-&gt;</operator><name pos:start="273:11" pos:end="273:52">pps_loop_filter_across_slices_enabled_flag</name></name> <operator pos:start="273:54" pos:end="273:54">=</operator> <name pos:start="273:56" pos:end="273:102"><name pos:start="273:56" pos:end="273:58">pps</name><operator pos:start="273:59" pos:end="273:60">-&gt;</operator><name pos:start="273:61" pos:end="273:102">seq_loop_filter_across_slices_enabled_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="275:5" pos:end="275:95"><expr pos:start="275:5" pos:end="275:94"><name pos:start="275:5" pos:end="275:48"><name pos:start="275:5" pos:end="275:8">info</name><operator pos:start="275:9" pos:end="275:10">-&gt;</operator><name pos:start="275:11" pos:end="275:48">deblocking_filter_control_present_flag</name></name> <operator pos:start="275:50" pos:end="275:50">=</operator> <name pos:start="275:52" pos:end="275:94"><name pos:start="275:52" pos:end="275:54">pps</name><operator pos:start="275:55" pos:end="275:56">-&gt;</operator><name pos:start="275:57" pos:end="275:94">deblocking_filter_control_present_flag</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="277:5" pos:end="279:20">/* Only valid if deblocking_filter_control_present_flag is set. Ignored

       otherwise. */</comment>

    <expr_stmt pos:start="281:5" pos:end="281:97"><expr pos:start="281:5" pos:end="281:96"><name pos:start="281:5" pos:end="281:49"><name pos:start="281:5" pos:end="281:8">info</name><operator pos:start="281:9" pos:end="281:10">-&gt;</operator><name pos:start="281:11" pos:end="281:49">deblocking_filter_override_enabled_flag</name></name> <operator pos:start="281:51" pos:end="281:51">=</operator> <name pos:start="281:53" pos:end="281:96"><name pos:start="281:53" pos:end="281:55">pps</name><operator pos:start="281:56" pos:end="281:57">-&gt;</operator><name pos:start="281:58" pos:end="281:96">deblocking_filter_override_enabled_flag</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="283:5" pos:end="285:20">/* Only valid if deblocking_filter_control_present_flag is set. Ignored

       otherwise. */</comment>

    <expr_stmt pos:start="287:5" pos:end="287:65"><expr pos:start="287:5" pos:end="287:64"><name pos:start="287:5" pos:end="287:45"><name pos:start="287:5" pos:end="287:8">info</name><operator pos:start="287:9" pos:end="287:10">-&gt;</operator><name pos:start="287:11" pos:end="287:45">pps_deblocking_filter_disabled_flag</name></name> <operator pos:start="287:47" pos:end="287:47">=</operator> <name pos:start="287:49" pos:end="287:64"><name pos:start="287:49" pos:end="287:51">pps</name><operator pos:start="287:52" pos:end="287:53">-&gt;</operator><name pos:start="287:54" pos:end="287:64">disable_dbf</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="289:5" pos:end="291:75">/* Only valid if deblocking_filter_control_present_flag is set and

       pps_deblocking_filter_disabled_flag is not set. Ignored otherwise.*/</comment>

    <expr_stmt pos:start="293:5" pos:end="293:54"><expr pos:start="293:5" pos:end="293:53"><name pos:start="293:5" pos:end="293:30"><name pos:start="293:5" pos:end="293:8">info</name><operator pos:start="293:9" pos:end="293:10">-&gt;</operator><name pos:start="293:11" pos:end="293:30">pps_beta_offset_div2</name></name> <operator pos:start="293:32" pos:end="293:32">=</operator> <name pos:start="293:34" pos:end="293:49"><name pos:start="293:34" pos:end="293:36">pps</name><operator pos:start="293:37" pos:end="293:38">-&gt;</operator><name pos:start="293:39" pos:end="293:49">beta_offset</name></name> <operator pos:start="293:51" pos:end="293:51">/</operator> <literal type="number" pos:start="293:53" pos:end="293:53">2</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="295:5" pos:end="297:76">/* Only valid if deblocking_filter_control_present_flag is set and

       pps_deblocking_filter_disabled_flag is not set. Ignored otherwise. */</comment>

    <expr_stmt pos:start="299:5" pos:end="299:50"><expr pos:start="299:5" pos:end="299:49"><name pos:start="299:5" pos:end="299:28"><name pos:start="299:5" pos:end="299:8">info</name><operator pos:start="299:9" pos:end="299:10">-&gt;</operator><name pos:start="299:11" pos:end="299:28">pps_tc_offset_div2</name></name> <operator pos:start="299:30" pos:end="299:30">=</operator> <name pos:start="299:32" pos:end="299:45"><name pos:start="299:32" pos:end="299:34">pps</name><operator pos:start="299:35" pos:end="299:36">-&gt;</operator><name pos:start="299:37" pos:end="299:45">tc_offset</name></name> <operator pos:start="299:47" pos:end="299:47">/</operator> <literal type="number" pos:start="299:49" pos:end="299:49">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="301:5" pos:end="301:81"><expr pos:start="301:5" pos:end="301:80"><name pos:start="301:5" pos:end="301:41"><name pos:start="301:5" pos:end="301:8">info</name><operator pos:start="301:9" pos:end="301:10">-&gt;</operator><name pos:start="301:11" pos:end="301:41">lists_modification_present_flag</name></name> <operator pos:start="301:43" pos:end="301:43">=</operator> <name pos:start="301:45" pos:end="301:80"><name pos:start="301:45" pos:end="301:47">pps</name><operator pos:start="301:48" pos:end="301:49">-&gt;</operator><name pos:start="301:50" pos:end="301:80">lists_modification_present_flag</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:80"><expr pos:start="303:5" pos:end="303:79"><name pos:start="303:5" pos:end="303:42"><name pos:start="303:5" pos:end="303:8">info</name><operator pos:start="303:9" pos:end="303:10">-&gt;</operator><name pos:start="303:11" pos:end="303:42">log2_parallel_merge_level_minus2</name></name> <operator pos:start="303:44" pos:end="303:44">=</operator> <name pos:start="303:46" pos:end="303:75"><name pos:start="303:46" pos:end="303:48">pps</name><operator pos:start="303:49" pos:end="303:50">-&gt;</operator><name pos:start="303:51" pos:end="303:75">log2_parallel_merge_level</name></name> <operator pos:start="303:77" pos:end="303:77">-</operator> <literal type="number" pos:start="303:79" pos:end="303:79">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:97"><expr pos:start="305:5" pos:end="305:96"><name pos:start="305:5" pos:end="305:53"><name pos:start="305:5" pos:end="305:8">info</name><operator pos:start="305:9" pos:end="305:10">-&gt;</operator><name pos:start="305:11" pos:end="305:53">slice_segment_header_extension_present_flag</name></name> <operator pos:start="305:55" pos:end="305:55">=</operator> <name pos:start="305:57" pos:end="305:96"><name pos:start="305:57" pos:end="305:59">pps</name><operator pos:start="305:60" pos:end="305:61">-&gt;</operator><name pos:start="305:62" pos:end="305:96">slice_header_extension_present_flag</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="309:5" pos:end="311:32">/* Set to 1 if nal_unit_type is equal to IDR_W_RADL or IDR_N_LP.

       Set to zero otherwise. */</comment>

    <expr_stmt pos:start="313:5" pos:end="313:33"><expr pos:start="313:5" pos:end="313:32"><name pos:start="313:5" pos:end="313:20"><name pos:start="313:5" pos:end="313:8">info</name><operator pos:start="313:9" pos:end="313:10">-&gt;</operator><name pos:start="313:11" pos:end="313:20">IDRPicFlag</name></name> <operator pos:start="313:22" pos:end="313:22">=</operator> <call pos:start="313:24" pos:end="313:32"><name pos:start="313:24" pos:end="313:29">IS_IDR</name><argument_list pos:start="313:30" pos:end="313:32">(<argument pos:start="313:31" pos:end="313:31"><expr pos:start="313:31" pos:end="313:31"><name pos:start="313:31" pos:end="313:31">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="315:5" pos:end="317:58">/* Set to 1 if nal_unit_type in the range of BLA_W_LP to

       RSV_IRAP_VCL23, inclusive. Set to zero otherwise.*/</comment>

    <expr_stmt pos:start="319:5" pos:end="319:34"><expr pos:start="319:5" pos:end="319:33"><name pos:start="319:5" pos:end="319:20"><name pos:start="319:5" pos:end="319:8">info</name><operator pos:start="319:9" pos:end="319:10">-&gt;</operator><name pos:start="319:11" pos:end="319:20">RAPPicFlag</name></name> <operator pos:start="319:22" pos:end="319:22">=</operator> <call pos:start="319:24" pos:end="319:33"><name pos:start="319:24" pos:end="319:30">IS_IRAP</name><argument_list pos:start="319:31" pos:end="319:33">(<argument pos:start="319:32" pos:end="319:32"><expr pos:start="319:32" pos:end="319:32"><name pos:start="319:32" pos:end="319:32">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="321:5" pos:end="321:51">/* See section 7.4.7.1 of the specification. */</comment>

    <expr_stmt pos:start="323:5" pos:end="323:38"><expr pos:start="323:5" pos:end="323:37"><name pos:start="323:5" pos:end="323:20"><name pos:start="323:5" pos:end="323:8">info</name><operator pos:start="323:9" pos:end="323:10">-&gt;</operator><name pos:start="323:11" pos:end="323:20">CurrRpsIdx</name></name> <operator pos:start="323:22" pos:end="323:22">=</operator> <name pos:start="323:24" pos:end="323:37"><name pos:start="323:24" pos:end="323:26">sps</name><operator pos:start="323:27" pos:end="323:28">-&gt;</operator><name pos:start="323:29" pos:end="323:37">nb_st_rps</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="325:5" pos:end="339:5"><if pos:start="325:5" pos:end="339:5">if <condition pos:start="325:8" pos:end="325:49">(<expr pos:start="325:9" pos:end="325:48"><name pos:start="325:9" pos:end="325:43"><name pos:start="325:9" pos:end="325:10">sh</name><operator pos:start="325:11" pos:end="325:12">-&gt;</operator><name pos:start="325:13" pos:end="325:43">short_term_ref_pic_set_sps_flag</name></name> <operator pos:start="325:45" pos:end="325:46">==</operator> <literal type="number" pos:start="325:48" pos:end="325:48">1</literal></expr>)</condition> <block pos:start="325:51" pos:end="339:5">{<block_content pos:start="327:9" pos:end="337:9">

        <for pos:start="327:9" pos:end="337:9">for <control pos:start="327:13" pos:end="327:51">(<init pos:start="327:14" pos:end="327:26"><decl pos:start="327:14" pos:end="327:25"><type pos:start="327:14" pos:end="327:19"><name pos:start="327:14" pos:end="327:19">size_t</name></type> <name pos:start="327:21" pos:end="327:21">i</name> <init pos:start="327:23" pos:end="327:25">= <expr pos:start="327:25" pos:end="327:25"><literal type="number" pos:start="327:25" pos:end="327:25">0</literal></expr></init></decl>;</init> <condition pos:start="327:28" pos:end="327:46"><expr pos:start="327:28" pos:end="327:45"><name pos:start="327:28" pos:end="327:28">i</name> <operator pos:start="327:30" pos:end="327:30">&lt;</operator> <name pos:start="327:32" pos:end="327:45"><name pos:start="327:32" pos:end="327:34">sps</name><operator pos:start="327:35" pos:end="327:36">-&gt;</operator><name pos:start="327:37" pos:end="327:45">nb_st_rps</name></name></expr>;</condition> <incr pos:start="327:48" pos:end="327:50"><expr pos:start="327:48" pos:end="327:50"><name pos:start="327:48" pos:end="327:48">i</name><operator pos:start="327:49" pos:end="327:50">++</operator></expr></incr>)</control> <block pos:start="327:53" pos:end="337:9">{<block_content pos:start="329:13" pos:end="335:13">

            <if_stmt pos:start="329:13" pos:end="335:13"><if pos:start="329:13" pos:end="335:13">if <condition pos:start="329:16" pos:end="329:54">(<expr pos:start="329:17" pos:end="329:53"><name pos:start="329:17" pos:end="329:34"><name pos:start="329:17" pos:end="329:18">sh</name><operator pos:start="329:19" pos:end="329:20">-&gt;</operator><name pos:start="329:21" pos:end="329:34">short_term_rps</name></name> <operator pos:start="329:36" pos:end="329:37">==</operator> <operator pos:start="329:39" pos:end="329:39">&amp;</operator><name pos:start="329:40" pos:end="329:53"><name pos:start="329:40" pos:end="329:42">sps</name><operator pos:start="329:43" pos:end="329:44">-&gt;</operator><name pos:start="329:45" pos:end="329:50">st_rps</name><index pos:start="329:51" pos:end="329:53">[<expr pos:start="329:52" pos:end="329:52"><name pos:start="329:52" pos:end="329:52">i</name></expr>]</index></name></expr>)</condition> <block pos:start="329:56" pos:end="335:13">{<block_content pos:start="331:17" pos:end="333:22">

                <expr_stmt pos:start="331:17" pos:end="331:37"><expr pos:start="331:17" pos:end="331:36"><name pos:start="331:17" pos:end="331:32"><name pos:start="331:17" pos:end="331:20">info</name><operator pos:start="331:21" pos:end="331:22">-&gt;</operator><name pos:start="331:23" pos:end="331:32">CurrRpsIdx</name></name> <operator pos:start="331:34" pos:end="331:34">=</operator> <name pos:start="331:36" pos:end="331:36">i</name></expr>;</expr_stmt>

                <break pos:start="333:17" pos:end="333:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="341:5" pos:end="341:51">/* See section 7.4.7.2 of the specification. */</comment>

    <expr_stmt pos:start="343:5" pos:end="343:53"><expr pos:start="343:5" pos:end="343:52"><name pos:start="343:5" pos:end="343:25"><name pos:start="343:5" pos:end="343:8">info</name><operator pos:start="343:9" pos:end="343:10">-&gt;</operator><name pos:start="343:11" pos:end="343:25">NumPocTotalCurr</name></name> <operator pos:start="343:27" pos:end="343:27">=</operator> <call pos:start="343:29" pos:end="343:52"><name pos:start="343:29" pos:end="343:49">ff_hevc_frame_nb_refs</name><argument_list pos:start="343:50" pos:end="343:52">(<argument pos:start="343:51" pos:end="343:51"><expr pos:start="343:51" pos:end="343:51"><name pos:start="343:51" pos:end="343:51">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="345:5" pos:end="355:5"><if pos:start="345:5" pos:end="355:5">if <condition pos:start="345:8" pos:end="345:71">(<expr pos:start="345:9" pos:end="345:70"><name pos:start="345:9" pos:end="345:43"><name pos:start="345:9" pos:end="345:10">sh</name><operator pos:start="345:11" pos:end="345:12">-&gt;</operator><name pos:start="345:13" pos:end="345:43">short_term_ref_pic_set_sps_flag</name></name> <operator pos:start="345:45" pos:end="345:46">==</operator> <literal type="number" pos:start="345:48" pos:end="345:48">0</literal> <operator pos:start="345:50" pos:end="345:51">&amp;&amp;</operator> <name pos:start="345:53" pos:end="345:70"><name pos:start="345:53" pos:end="345:54">sh</name><operator pos:start="345:55" pos:end="345:56">-&gt;</operator><name pos:start="345:57" pos:end="345:70">short_term_rps</name></name></expr>)</condition> <block pos:start="345:73" pos:end="355:5">{<block_content pos:start="353:9" pos:end="353:83">

        <comment type="block" pos:start="347:9" pos:end="351:79">/* Corresponds to specification field, NumDeltaPocs[RefRpsIdx].

           Only applicable when short_term_ref_pic_set_sps_flag == 0.

           Implementations will ignore this value in other cases. See 7.4.8. */</comment>

        <expr_stmt pos:start="353:9" pos:end="353:83"><expr pos:start="353:9" pos:end="353:82"><name pos:start="353:9" pos:end="353:37"><name pos:start="353:9" pos:end="353:12">info</name><operator pos:start="353:13" pos:end="353:14">-&gt;</operator><name pos:start="353:15" pos:end="353:37">NumDeltaPocsOfRefRpsIdx</name></name> <operator pos:start="353:39" pos:end="353:39">=</operator> <name pos:start="353:41" pos:end="353:82"><name pos:start="353:41" pos:end="353:42">sh</name><operator pos:start="353:43" pos:end="353:44">-&gt;</operator><name pos:start="353:45" pos:end="353:58">short_term_rps</name><operator pos:start="353:59" pos:end="353:60">-&gt;</operator><name pos:start="353:61" pos:end="353:82">rps_idx_num_delta_pocs</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="357:5" pos:end="369:71">/* Section 7.6.3.1 of the H.265/HEVC Specification defines the syntax of

       the slice_segment_header. This header contains information that

       some VDPAU implementations may choose to skip. The VDPAU API

       requires client applications to track the number of bits used in the

       slice header for structures associated with short term and long term

       reference pictures. First, VDPAU requires the number of bits used by

       the short_term_ref_pic_set array in the slice_segment_header. */</comment>

    <expr_stmt pos:start="371:5" pos:end="371:79"><expr pos:start="371:5" pos:end="371:78"><name pos:start="371:5" pos:end="371:44"><name pos:start="371:5" pos:end="371:8">info</name><operator pos:start="371:9" pos:end="371:10">-&gt;</operator><name pos:start="371:11" pos:end="371:44">NumShortTermPictureSliceHeaderBits</name></name> <operator pos:start="371:46" pos:end="371:46">=</operator> <name pos:start="371:48" pos:end="371:78"><name pos:start="371:48" pos:end="371:49">sh</name><operator pos:start="371:50" pos:end="371:51">-&gt;</operator><name pos:start="371:52" pos:end="371:78">short_term_ref_pic_set_size</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="373:5" pos:end="379:48">/* Second, VDPAU requires the number of bits used for long term reference

       pictures in the slice_segment_header. This is equal to the number

       of bits used for the contents of the block beginning with

       "if(long_term_ref_pics_present_flag)". */</comment>

    <expr_stmt pos:start="381:5" pos:end="381:77"><expr pos:start="381:5" pos:end="381:76"><name pos:start="381:5" pos:end="381:43"><name pos:start="381:5" pos:end="381:8">info</name><operator pos:start="381:9" pos:end="381:10">-&gt;</operator><name pos:start="381:11" pos:end="381:43">NumLongTermPictureSliceHeaderBits</name></name> <operator pos:start="381:45" pos:end="381:45">=</operator> <name pos:start="381:47" pos:end="381:76"><name pos:start="381:47" pos:end="381:48">sh</name><operator pos:start="381:49" pos:end="381:50">-&gt;</operator><name pos:start="381:51" pos:end="381:76">long_term_ref_pic_set_size</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="385:5" pos:end="387:64">/* The value of PicOrderCntVal of the picture in the access unit

       containing the SEI message. The picture being decoded. */</comment>

    <expr_stmt pos:start="389:5" pos:end="389:38"><expr pos:start="389:5" pos:end="389:37"><name pos:start="389:5" pos:end="389:28"><name pos:start="389:5" pos:end="389:8">info</name><operator pos:start="389:9" pos:end="389:10">-&gt;</operator><name pos:start="389:11" pos:end="389:28">CurrPicOrderCntVal</name></name> <operator pos:start="389:30" pos:end="389:30">=</operator> <name pos:start="389:32" pos:end="389:37"><name pos:start="389:32" pos:end="389:32">h</name><operator pos:start="389:33" pos:end="389:34">-&gt;</operator><name pos:start="389:35" pos:end="389:37">poc</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="393:5" pos:end="393:57">/* Slice Decoding Process - Reference Picture Sets */</comment>

    <for pos:start="395:5" pos:end="403:5">for <control pos:start="395:9" pos:end="395:35">(<init pos:start="395:10" pos:end="395:22"><decl pos:start="395:10" pos:end="395:21"><type pos:start="395:10" pos:end="395:15"><name pos:start="395:10" pos:end="395:15">size_t</name></type> <name pos:start="395:17" pos:end="395:17">i</name> <init pos:start="395:19" pos:end="395:21">= <expr pos:start="395:21" pos:end="395:21"><literal type="number" pos:start="395:21" pos:end="395:21">0</literal></expr></init></decl>;</init> <condition pos:start="395:24" pos:end="395:30"><expr pos:start="395:24" pos:end="395:29"><name pos:start="395:24" pos:end="395:24">i</name> <operator pos:start="395:26" pos:end="395:26">&lt;</operator> <literal type="number" pos:start="395:28" pos:end="395:29">16</literal></expr>;</condition> <incr pos:start="395:32" pos:end="395:34"><expr pos:start="395:32" pos:end="395:34"><name pos:start="395:32" pos:end="395:32">i</name><operator pos:start="395:33" pos:end="395:34">++</operator></expr></incr>)</control> <block pos:start="395:37" pos:end="403:5">{<block_content pos:start="397:9" pos:end="401:32">

        <expr_stmt pos:start="397:9" pos:end="397:46"><expr pos:start="397:9" pos:end="397:45"><name pos:start="397:9" pos:end="397:24"><name pos:start="397:9" pos:end="397:12">info</name><operator pos:start="397:13" pos:end="397:14">-&gt;</operator><name pos:start="397:15" pos:end="397:21">RefPics</name><index pos:start="397:22" pos:end="397:24">[<expr pos:start="397:23" pos:end="397:23"><name pos:start="397:23" pos:end="397:23">i</name></expr>]</index></name> <operator pos:start="397:26" pos:end="397:26">=</operator> <name pos:start="397:28" pos:end="397:45">VDP_INVALID_HANDLE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="399:9" pos:end="399:36"><expr pos:start="399:9" pos:end="399:35"><name pos:start="399:9" pos:end="399:31"><name pos:start="399:9" pos:end="399:12">info</name><operator pos:start="399:13" pos:end="399:14">-&gt;</operator><name pos:start="399:15" pos:end="399:28">PicOrderCntVal</name><index pos:start="399:29" pos:end="399:31">[<expr pos:start="399:30" pos:end="399:30"><name pos:start="399:30" pos:end="399:30">i</name></expr>]</index></name> <operator pos:start="399:33" pos:end="399:33">=</operator> <literal type="number" pos:start="399:35" pos:end="399:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="401:9" pos:end="401:32"><expr pos:start="401:9" pos:end="401:31"><name pos:start="401:9" pos:end="401:27"><name pos:start="401:9" pos:end="401:12">info</name><operator pos:start="401:13" pos:end="401:14">-&gt;</operator><name pos:start="401:15" pos:end="401:24">IsLongTerm</name><index pos:start="401:25" pos:end="401:27">[<expr pos:start="401:26" pos:end="401:26"><name pos:start="401:26" pos:end="401:26">i</name></expr>]</index></name> <operator pos:start="401:29" pos:end="401:29">=</operator> <literal type="number" pos:start="401:31" pos:end="401:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="405:5" pos:end="455:5">for <control pos:start="405:9" pos:end="405:62">(<init pos:start="405:10" pos:end="405:29"><decl pos:start="405:10" pos:end="405:21"><type pos:start="405:10" pos:end="405:15"><name pos:start="405:10" pos:end="405:15">size_t</name></type> <name pos:start="405:17" pos:end="405:17">i</name> <init pos:start="405:19" pos:end="405:21">= <expr pos:start="405:21" pos:end="405:21"><literal type="number" pos:start="405:21" pos:end="405:21">0</literal></expr></init></decl>, <decl pos:start="405:24" pos:end="405:28"><type ref="prev" pos:start="405:10" pos:end="405:15"/><name pos:start="405:24" pos:end="405:24">j</name> <init pos:start="405:26" pos:end="405:28">= <expr pos:start="405:28" pos:end="405:28"><literal type="number" pos:start="405:28" pos:end="405:28">0</literal></expr></init></decl>;</init> <condition pos:start="405:31" pos:end="405:57"><expr pos:start="405:31" pos:end="405:56"><name pos:start="405:31" pos:end="405:31">i</name> <operator pos:start="405:33" pos:end="405:33">&lt;</operator> <call pos:start="405:35" pos:end="405:56"><name pos:start="405:35" pos:end="405:48">FF_ARRAY_ELEMS</name><argument_list pos:start="405:49" pos:end="405:56">(<argument pos:start="405:50" pos:end="405:55"><expr pos:start="405:50" pos:end="405:55"><name pos:start="405:50" pos:end="405:55"><name pos:start="405:50" pos:end="405:50">h</name><operator pos:start="405:51" pos:end="405:52">-&gt;</operator><name pos:start="405:53" pos:end="405:55">DPB</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="405:59" pos:end="405:61"><expr pos:start="405:59" pos:end="405:61"><name pos:start="405:59" pos:end="405:59">i</name><operator pos:start="405:60" pos:end="405:61">++</operator></expr></incr>)</control> <block pos:start="405:64" pos:end="455:5">{<block_content pos:start="407:9" pos:end="453:9">

        <decl_stmt pos:start="407:9" pos:end="407:44"><decl pos:start="407:9" pos:end="407:43"><type pos:start="407:9" pos:end="407:25"><specifier pos:start="407:9" pos:end="407:13">const</specifier> <name pos:start="407:15" pos:end="407:23">HEVCFrame</name> <modifier pos:start="407:25" pos:end="407:25">*</modifier></type><name pos:start="407:26" pos:end="407:30">frame</name> <init pos:start="407:32" pos:end="407:43">= <expr pos:start="407:34" pos:end="407:43"><operator pos:start="407:34" pos:end="407:34">&amp;</operator><name pos:start="407:35" pos:end="407:43"><name pos:start="407:35" pos:end="407:35">h</name><operator pos:start="407:36" pos:end="407:37">-&gt;</operator><name pos:start="407:38" pos:end="407:40">DPB</name><index pos:start="407:41" pos:end="407:43">[<expr pos:start="407:42" pos:end="407:42"><name pos:start="407:42" pos:end="407:42">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="409:9" pos:end="453:9"><if pos:start="409:9" pos:end="453:9">if <condition pos:start="409:12" pos:end="411:76">(<expr pos:start="409:13" pos:end="411:75"><name pos:start="409:13" pos:end="409:17">frame</name> <operator pos:start="409:19" pos:end="409:20">!=</operator> <name pos:start="409:22" pos:end="409:27"><name pos:start="409:22" pos:end="409:22">h</name><operator pos:start="409:23" pos:end="409:24">-&gt;</operator><name pos:start="409:25" pos:end="409:27">ref</name></name> <operator pos:start="409:29" pos:end="409:30">&amp;&amp;</operator> <operator pos:start="409:32" pos:end="409:32">(</operator><name pos:start="409:33" pos:end="409:44"><name pos:start="409:33" pos:end="409:37">frame</name><operator pos:start="409:38" pos:end="409:39">-&gt;</operator><name pos:start="409:40" pos:end="409:44">flags</name></name> <operator pos:start="409:46" pos:end="409:46">&amp;</operator> <operator pos:start="409:48" pos:end="409:48">(</operator><name pos:start="409:49" pos:end="409:72">HEVC_FRAME_FLAG_LONG_REF</name> <operator pos:start="409:74" pos:end="409:74">|</operator>

                                                <name pos:start="411:49" pos:end="411:73">HEVC_FRAME_FLAG_SHORT_REF</name><operator pos:start="411:74" pos:end="411:74">)</operator><operator pos:start="411:75" pos:end="411:75">)</operator></expr>)</condition> <block pos:start="411:78" pos:end="453:9">{<block_content pos:start="413:13" pos:end="451:16">

            <if_stmt pos:start="413:13" pos:end="423:13"><if pos:start="413:13" pos:end="423:13">if <condition pos:start="413:16" pos:end="413:23">(<expr pos:start="413:17" pos:end="413:22"><name pos:start="413:17" pos:end="413:17">j</name> <operator pos:start="413:19" pos:end="413:19">&gt;</operator> <literal type="number" pos:start="413:21" pos:end="413:22">16</literal></expr>)</condition> <block pos:start="413:25" pos:end="423:13">{<block_content pos:start="415:17" pos:end="421:22">

                <expr_stmt pos:start="415:17" pos:end="419:67"><expr pos:start="415:17" pos:end="419:66"><call pos:start="415:17" pos:end="419:66"><name pos:start="415:17" pos:end="415:22">av_log</name><argument_list pos:start="415:23" pos:end="419:66">(<argument pos:start="415:24" pos:end="415:28"><expr pos:start="415:24" pos:end="415:28"><name pos:start="415:24" pos:end="415:28">avctx</name></expr></argument>, <argument pos:start="415:31" pos:end="415:44"><expr pos:start="415:31" pos:end="415:44"><name pos:start="415:31" pos:end="415:44">AV_LOG_WARNING</name></expr></argument>,

                     <argument pos:start="417:22" pos:end="419:65"><expr pos:start="417:22" pos:end="419:65"><literal type="string" pos:start="417:22" pos:end="417:75">"VDPAU only supports up to 16 references in the DPB. "</literal>

                     <literal type="string" pos:start="419:22" pos:end="419:65">"This frame may not be decoded correctly.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="421:17" pos:end="421:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="425:13" pos:end="427:65">/* Array of video reference surfaces.

               Set any unused positions to VDP_INVALID_HANDLE. */</comment>

            <expr_stmt pos:start="429:13" pos:end="429:69"><expr pos:start="429:13" pos:end="429:68"><name pos:start="429:13" pos:end="429:28"><name pos:start="429:13" pos:end="429:16">info</name><operator pos:start="429:17" pos:end="429:18">-&gt;</operator><name pos:start="429:19" pos:end="429:25">RefPics</name><index pos:start="429:26" pos:end="429:28">[<expr pos:start="429:27" pos:end="429:27"><name pos:start="429:27" pos:end="429:27">j</name></expr>]</index></name> <operator pos:start="429:30" pos:end="429:30">=</operator> <call pos:start="429:32" pos:end="429:68"><name pos:start="429:32" pos:end="429:54">ff_vdpau_get_surface_id</name><argument_list pos:start="429:55" pos:end="429:68">(<argument pos:start="429:56" pos:end="429:67"><expr pos:start="429:56" pos:end="429:67"><name pos:start="429:56" pos:end="429:67"><name pos:start="429:56" pos:end="429:60">frame</name><operator pos:start="429:61" pos:end="429:62">-&gt;</operator><name pos:start="429:63" pos:end="429:67">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="431:13" pos:end="433:39">/* Array of picture order counts. These correspond to positions

               in the RefPics array. */</comment>

            <expr_stmt pos:start="435:13" pos:end="435:49"><expr pos:start="435:13" pos:end="435:48"><name pos:start="435:13" pos:end="435:35"><name pos:start="435:13" pos:end="435:16">info</name><operator pos:start="435:17" pos:end="435:18">-&gt;</operator><name pos:start="435:19" pos:end="435:32">PicOrderCntVal</name><index pos:start="435:33" pos:end="435:35">[<expr pos:start="435:34" pos:end="435:34"><name pos:start="435:34" pos:end="435:34">j</name></expr>]</index></name> <operator pos:start="435:37" pos:end="435:37">=</operator> <name pos:start="435:39" pos:end="435:48"><name pos:start="435:39" pos:end="435:43">frame</name><operator pos:start="435:44" pos:end="435:45">-&gt;</operator><name pos:start="435:46" pos:end="435:48">poc</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="437:13" pos:end="441:28">/* Array used to specify whether a particular RefPic is

               a long term reference. A value of "1" indicates a long-term

               reference. */</comment>

            <comment type="line" pos:start="443:13" pos:end="443:77">// XXX: Setting this caused glitches in the nvidia implementation</comment>

            <comment type="line" pos:start="445:13" pos:end="445:66">// Always setting it to zero, produces correct results</comment>

            <comment type="line" pos:start="447:13" pos:end="447:76">//info-&gt;IsLongTerm[j] = frame-&gt;flags &amp; HEVC_FRAME_FLAG_LONG_REF;</comment>

            <expr_stmt pos:start="449:13" pos:end="449:36"><expr pos:start="449:13" pos:end="449:35"><name pos:start="449:13" pos:end="449:31"><name pos:start="449:13" pos:end="449:16">info</name><operator pos:start="449:17" pos:end="449:18">-&gt;</operator><name pos:start="449:19" pos:end="449:28">IsLongTerm</name><index pos:start="449:29" pos:end="449:31">[<expr pos:start="449:30" pos:end="449:30"><name pos:start="449:30" pos:end="449:30">j</name></expr>]</index></name> <operator pos:start="449:33" pos:end="449:33">=</operator> <literal type="number" pos:start="449:35" pos:end="449:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:16"><expr pos:start="451:13" pos:end="451:15"><name pos:start="451:13" pos:end="451:13">j</name><operator pos:start="451:14" pos:end="451:15">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="457:5" pos:end="459:35">/* Copy of specification field, see Section 8.3.2 of the

       H.265/HEVC Specification. */</comment>

    <expr_stmt pos:start="461:5" pos:end="461:59"><expr pos:start="461:5" pos:end="461:58"><name pos:start="461:5" pos:end="461:28"><name pos:start="461:5" pos:end="461:8">info</name><operator pos:start="461:9" pos:end="461:10">-&gt;</operator><name pos:start="461:11" pos:end="461:28">NumPocStCurrBefore</name></name> <operator pos:start="461:30" pos:end="461:30">=</operator> <name pos:start="461:32" pos:end="461:50"><name pos:start="461:32" pos:end="461:32">h</name><operator pos:start="461:33" pos:end="461:34">-&gt;</operator><name pos:start="461:35" pos:end="461:37">rps</name><index pos:start="461:38" pos:end="461:50">[<expr pos:start="461:39" pos:end="461:49"><name pos:start="461:39" pos:end="461:49">ST_CURR_BEF</name></expr>]</index></name><operator pos:start="461:51" pos:end="461:51">.</operator><name pos:start="461:52" pos:end="461:58">nb_refs</name></expr>;</expr_stmt>

    <if_stmt pos:start="463:5" pos:end="473:5"><if pos:start="463:5" pos:end="473:5">if <condition pos:start="463:8" pos:end="463:37">(<expr pos:start="463:9" pos:end="463:36"><name pos:start="463:9" pos:end="463:32"><name pos:start="463:9" pos:end="463:12">info</name><operator pos:start="463:13" pos:end="463:14">-&gt;</operator><name pos:start="463:15" pos:end="463:32">NumPocStCurrBefore</name></name> <operator pos:start="463:34" pos:end="463:34">&gt;</operator> <literal type="number" pos:start="463:36" pos:end="463:36">8</literal></expr>)</condition> <block pos:start="463:39" pos:end="473:5">{<block_content pos:start="465:9" pos:end="471:37">

        <expr_stmt pos:start="465:9" pos:end="469:59"><expr pos:start="465:9" pos:end="469:58"><call pos:start="465:9" pos:end="469:58"><name pos:start="465:9" pos:end="465:14">av_log</name><argument_list pos:start="465:15" pos:end="469:58">(<argument pos:start="465:16" pos:end="465:20"><expr pos:start="465:16" pos:end="465:20"><name pos:start="465:16" pos:end="465:20">avctx</name></expr></argument>, <argument pos:start="465:23" pos:end="465:36"><expr pos:start="465:23" pos:end="465:36"><name pos:start="465:23" pos:end="465:36">AV_LOG_WARNING</name></expr></argument>,

             <argument pos:start="467:14" pos:end="469:57"><expr pos:start="467:14" pos:end="469:57"><literal type="string" pos:start="467:14" pos:end="467:71">"VDPAU only supports up to 8 references in StCurrBefore. "</literal>

             <literal type="string" pos:start="469:14" pos:end="469:57">"This frame may not be decoded correctly.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="471:9" pos:end="471:37"><expr pos:start="471:9" pos:end="471:36"><name pos:start="471:9" pos:end="471:32"><name pos:start="471:9" pos:end="471:12">info</name><operator pos:start="471:13" pos:end="471:14">-&gt;</operator><name pos:start="471:15" pos:end="471:32">NumPocStCurrBefore</name></name> <operator pos:start="471:34" pos:end="471:34">=</operator> <literal type="number" pos:start="471:36" pos:end="471:36">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="475:5" pos:end="477:35">/* Copy of specification field, see Section 8.3.2 of the

       H.265/HEVC Specification. */</comment>

    <expr_stmt pos:start="479:5" pos:end="479:58"><expr pos:start="479:5" pos:end="479:57"><name pos:start="479:5" pos:end="479:27"><name pos:start="479:5" pos:end="479:8">info</name><operator pos:start="479:9" pos:end="479:10">-&gt;</operator><name pos:start="479:11" pos:end="479:27">NumPocStCurrAfter</name></name> <operator pos:start="479:29" pos:end="479:29">=</operator> <name pos:start="479:31" pos:end="479:49"><name pos:start="479:31" pos:end="479:31">h</name><operator pos:start="479:32" pos:end="479:33">-&gt;</operator><name pos:start="479:34" pos:end="479:36">rps</name><index pos:start="479:37" pos:end="479:49">[<expr pos:start="479:38" pos:end="479:48"><name pos:start="479:38" pos:end="479:48">ST_CURR_AFT</name></expr>]</index></name><operator pos:start="479:50" pos:end="479:50">.</operator><name pos:start="479:51" pos:end="479:57">nb_refs</name></expr>;</expr_stmt>

    <if_stmt pos:start="481:5" pos:end="491:5"><if pos:start="481:5" pos:end="491:5">if <condition pos:start="481:8" pos:end="481:36">(<expr pos:start="481:9" pos:end="481:35"><name pos:start="481:9" pos:end="481:31"><name pos:start="481:9" pos:end="481:12">info</name><operator pos:start="481:13" pos:end="481:14">-&gt;</operator><name pos:start="481:15" pos:end="481:31">NumPocStCurrAfter</name></name> <operator pos:start="481:33" pos:end="481:33">&gt;</operator> <literal type="number" pos:start="481:35" pos:end="481:35">8</literal></expr>)</condition> <block pos:start="481:38" pos:end="491:5">{<block_content pos:start="483:9" pos:end="489:36">

        <expr_stmt pos:start="483:9" pos:end="487:59"><expr pos:start="483:9" pos:end="487:58"><call pos:start="483:9" pos:end="487:58"><name pos:start="483:9" pos:end="483:14">av_log</name><argument_list pos:start="483:15" pos:end="487:58">(<argument pos:start="483:16" pos:end="483:20"><expr pos:start="483:16" pos:end="483:20"><name pos:start="483:16" pos:end="483:20">avctx</name></expr></argument>, <argument pos:start="483:23" pos:end="483:36"><expr pos:start="483:23" pos:end="483:36"><name pos:start="483:23" pos:end="483:36">AV_LOG_WARNING</name></expr></argument>,

             <argument pos:start="485:14" pos:end="487:57"><expr pos:start="485:14" pos:end="487:57"><literal type="string" pos:start="485:14" pos:end="485:70">"VDPAU only supports up to 8 references in StCurrAfter. "</literal>

             <literal type="string" pos:start="487:14" pos:end="487:57">"This frame may not be decoded correctly.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="489:9" pos:end="489:36"><expr pos:start="489:9" pos:end="489:35"><name pos:start="489:9" pos:end="489:31"><name pos:start="489:9" pos:end="489:12">info</name><operator pos:start="489:13" pos:end="489:14">-&gt;</operator><name pos:start="489:15" pos:end="489:31">NumPocStCurrAfter</name></name> <operator pos:start="489:33" pos:end="489:33">=</operator> <literal type="number" pos:start="489:35" pos:end="489:35">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="493:5" pos:end="495:35">/* Copy of specification field, see Section 8.3.2 of the

       H.265/HEVC Specification. */</comment>

    <expr_stmt pos:start="497:5" pos:end="497:49"><expr pos:start="497:5" pos:end="497:48"><name pos:start="497:5" pos:end="497:22"><name pos:start="497:5" pos:end="497:8">info</name><operator pos:start="497:9" pos:end="497:10">-&gt;</operator><name pos:start="497:11" pos:end="497:22">NumPocLtCurr</name></name> <operator pos:start="497:24" pos:end="497:24">=</operator> <name pos:start="497:26" pos:end="497:40"><name pos:start="497:26" pos:end="497:26">h</name><operator pos:start="497:27" pos:end="497:28">-&gt;</operator><name pos:start="497:29" pos:end="497:31">rps</name><index pos:start="497:32" pos:end="497:40">[<expr pos:start="497:33" pos:end="497:39"><name pos:start="497:33" pos:end="497:39">LT_CURR</name></expr>]</index></name><operator pos:start="497:41" pos:end="497:41">.</operator><name pos:start="497:42" pos:end="497:48">nb_refs</name></expr>;</expr_stmt>

    <if_stmt pos:start="499:5" pos:end="509:5"><if pos:start="499:5" pos:end="509:5">if <condition pos:start="499:8" pos:end="499:31">(<expr pos:start="499:9" pos:end="499:30"><name pos:start="499:9" pos:end="499:26"><name pos:start="499:9" pos:end="499:12">info</name><operator pos:start="499:13" pos:end="499:14">-&gt;</operator><name pos:start="499:15" pos:end="499:26">NumPocLtCurr</name></name> <operator pos:start="499:28" pos:end="499:28">&gt;</operator> <literal type="number" pos:start="499:30" pos:end="499:30">8</literal></expr>)</condition> <block pos:start="499:33" pos:end="509:5">{<block_content pos:start="501:9" pos:end="507:31">

        <expr_stmt pos:start="501:9" pos:end="505:59"><expr pos:start="501:9" pos:end="505:58"><call pos:start="501:9" pos:end="505:58"><name pos:start="501:9" pos:end="501:14">av_log</name><argument_list pos:start="501:15" pos:end="505:58">(<argument pos:start="501:16" pos:end="501:20"><expr pos:start="501:16" pos:end="501:20"><name pos:start="501:16" pos:end="501:20">avctx</name></expr></argument>, <argument pos:start="501:23" pos:end="501:36"><expr pos:start="501:23" pos:end="501:36"><name pos:start="501:23" pos:end="501:36">AV_LOG_WARNING</name></expr></argument>,

             <argument pos:start="503:14" pos:end="505:57"><expr pos:start="503:14" pos:end="505:57"><literal type="string" pos:start="503:14" pos:end="503:65">"VDPAU only supports up to 8 references in LtCurr. "</literal>

             <literal type="string" pos:start="505:14" pos:end="505:57">"This frame may not be decoded correctly.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="507:9" pos:end="507:31"><expr pos:start="507:9" pos:end="507:30"><name pos:start="507:9" pos:end="507:26"><name pos:start="507:9" pos:end="507:12">info</name><operator pos:start="507:13" pos:end="507:14">-&gt;</operator><name pos:start="507:15" pos:end="507:26">NumPocLtCurr</name></name> <operator pos:start="507:28" pos:end="507:28">=</operator> <literal type="number" pos:start="507:30" pos:end="507:30">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="511:5" pos:end="513:55">/* Reference Picture Set list, one of the short-term RPS. These

       correspond to positions in the RefPics array. */</comment>

    <for pos:start="515:5" pos:end="555:5">for <control pos:start="515:9" pos:end="515:68">(<init pos:start="515:10" pos:end="515:30"><decl pos:start="515:10" pos:end="515:22"><type pos:start="515:10" pos:end="515:16"><name pos:start="515:10" pos:end="515:16">ssize_t</name></type> <name pos:start="515:18" pos:end="515:18">i</name> <init pos:start="515:20" pos:end="515:22">= <expr pos:start="515:22" pos:end="515:22"><literal type="number" pos:start="515:22" pos:end="515:22">0</literal></expr></init></decl>, <decl pos:start="515:25" pos:end="515:29"><type ref="prev" pos:start="515:10" pos:end="515:16"/><name pos:start="515:25" pos:end="515:25">j</name> <init pos:start="515:27" pos:end="515:29">= <expr pos:start="515:29" pos:end="515:29"><literal type="number" pos:start="515:29" pos:end="515:29">0</literal></expr></init></decl>;</init> <condition pos:start="515:32" pos:end="515:63"><expr pos:start="515:32" pos:end="515:62"><name pos:start="515:32" pos:end="515:32">i</name> <operator pos:start="515:34" pos:end="515:34">&lt;</operator> <name pos:start="515:36" pos:end="515:54"><name pos:start="515:36" pos:end="515:36">h</name><operator pos:start="515:37" pos:end="515:38">-&gt;</operator><name pos:start="515:39" pos:end="515:41">rps</name><index pos:start="515:42" pos:end="515:54">[<expr pos:start="515:43" pos:end="515:53"><name pos:start="515:43" pos:end="515:53">ST_CURR_BEF</name></expr>]</index></name><operator pos:start="515:55" pos:end="515:55">.</operator><name pos:start="515:56" pos:end="515:62">nb_refs</name></expr>;</condition> <incr pos:start="515:65" pos:end="515:67"><expr pos:start="515:65" pos:end="515:67"><name pos:start="515:65" pos:end="515:65">i</name><operator pos:start="515:66" pos:end="515:67">++</operator></expr></incr>)</control> <block pos:start="515:70" pos:end="555:5">{<block_content pos:start="517:9" pos:end="553:9">

        <decl_stmt pos:start="517:9" pos:end="517:54"><decl pos:start="517:9" pos:end="517:53"><type pos:start="517:9" pos:end="517:19"><name pos:start="517:9" pos:end="517:17">HEVCFrame</name> <modifier pos:start="517:19" pos:end="517:19">*</modifier></type><name pos:start="517:20" pos:end="517:24">frame</name> <init pos:start="517:26" pos:end="517:53">= <expr pos:start="517:28" pos:end="517:53"><name pos:start="517:28" pos:end="517:46"><name pos:start="517:28" pos:end="517:28">h</name><operator pos:start="517:29" pos:end="517:30">-&gt;</operator><name pos:start="517:31" pos:end="517:33">rps</name><index pos:start="517:34" pos:end="517:46">[<expr pos:start="517:35" pos:end="517:45"><name pos:start="517:35" pos:end="517:45">ST_CURR_BEF</name></expr>]</index></name><operator pos:start="517:47" pos:end="517:47">.</operator><name pos:start="517:48" pos:end="517:53"><name pos:start="517:48" pos:end="517:50">ref</name><index pos:start="517:51" pos:end="517:53">[<expr pos:start="517:52" pos:end="517:52"><name pos:start="517:52" pos:end="517:52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="519:9" pos:end="553:9"><if pos:start="519:9" pos:end="549:9">if <condition pos:start="519:12" pos:end="519:18">(<expr pos:start="519:13" pos:end="519:17"><name pos:start="519:13" pos:end="519:17">frame</name></expr>)</condition> <block pos:start="519:20" pos:end="549:9">{<block_content pos:start="521:13" pos:end="547:13">

            <decl_stmt pos:start="521:13" pos:end="521:30"><decl pos:start="521:13" pos:end="521:29"><type pos:start="521:13" pos:end="521:19"><name pos:start="521:13" pos:end="521:19">uint8_t</name></type> <name pos:start="521:21" pos:end="521:25">found</name> <init pos:start="521:27" pos:end="521:29">= <expr pos:start="521:29" pos:end="521:29"><literal type="number" pos:start="521:29" pos:end="521:29">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="523:13" pos:end="523:65"><decl pos:start="523:13" pos:end="523:64"><type pos:start="523:13" pos:end="523:21"><name pos:start="523:13" pos:end="523:21">uintptr_t</name></type> <name pos:start="523:23" pos:end="523:24">id</name> <init pos:start="523:26" pos:end="523:64">= <expr pos:start="523:28" pos:end="523:64"><call pos:start="523:28" pos:end="523:64"><name pos:start="523:28" pos:end="523:50">ff_vdpau_get_surface_id</name><argument_list pos:start="523:51" pos:end="523:64">(<argument pos:start="523:52" pos:end="523:63"><expr pos:start="523:52" pos:end="523:63"><name pos:start="523:52" pos:end="523:63"><name pos:start="523:52" pos:end="523:56">frame</name><operator pos:start="523:57" pos:end="523:58">-&gt;</operator><name pos:start="523:59" pos:end="523:63">frame</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <for pos:start="525:13" pos:end="539:13">for <control pos:start="525:17" pos:end="525:43">(<init pos:start="525:18" pos:end="525:30"><decl pos:start="525:18" pos:end="525:29"><type pos:start="525:18" pos:end="525:23"><name pos:start="525:18" pos:end="525:23">size_t</name></type> <name pos:start="525:25" pos:end="525:25">k</name> <init pos:start="525:27" pos:end="525:29">= <expr pos:start="525:29" pos:end="525:29"><literal type="number" pos:start="525:29" pos:end="525:29">0</literal></expr></init></decl>;</init> <condition pos:start="525:32" pos:end="525:38"><expr pos:start="525:32" pos:end="525:37"><name pos:start="525:32" pos:end="525:32">k</name> <operator pos:start="525:34" pos:end="525:34">&lt;</operator> <literal type="number" pos:start="525:36" pos:end="525:37">16</literal></expr>;</condition> <incr pos:start="525:40" pos:end="525:42"><expr pos:start="525:40" pos:end="525:42"><name pos:start="525:40" pos:end="525:40">k</name><operator pos:start="525:41" pos:end="525:42">++</operator></expr></incr>)</control> <block pos:start="525:45" pos:end="539:13">{<block_content pos:start="527:17" pos:end="537:17">

                <if_stmt pos:start="527:17" pos:end="537:17"><if pos:start="527:17" pos:end="537:17">if <condition pos:start="527:20" pos:end="527:43">(<expr pos:start="527:21" pos:end="527:42"><name pos:start="527:21" pos:end="527:22">id</name> <operator pos:start="527:24" pos:end="527:25">==</operator> <name pos:start="527:27" pos:end="527:42"><name pos:start="527:27" pos:end="527:30">info</name><operator pos:start="527:31" pos:end="527:32">-&gt;</operator><name pos:start="527:33" pos:end="527:39">RefPics</name><index pos:start="527:40" pos:end="527:42">[<expr pos:start="527:41" pos:end="527:41"><name pos:start="527:41" pos:end="527:41">k</name></expr>]</index></name></expr>)</condition> <block pos:start="527:45" pos:end="537:17">{<block_content pos:start="529:21" pos:end="535:26">

                    <expr_stmt pos:start="529:21" pos:end="529:55"><expr pos:start="529:21" pos:end="529:54"><name pos:start="529:21" pos:end="529:50"><name pos:start="529:21" pos:end="529:24">info</name><operator pos:start="529:25" pos:end="529:26">-&gt;</operator><name pos:start="529:27" pos:end="529:47">RefPicSetStCurrBefore</name><index pos:start="529:48" pos:end="529:50">[<expr pos:start="529:49" pos:end="529:49"><name pos:start="529:49" pos:end="529:49">j</name></expr>]</index></name> <operator pos:start="529:52" pos:end="529:52">=</operator> <name pos:start="529:54" pos:end="529:54">k</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="531:21" pos:end="531:24"><expr pos:start="531:21" pos:end="531:23"><name pos:start="531:21" pos:end="531:21">j</name><operator pos:start="531:22" pos:end="531:23">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="533:21" pos:end="533:30"><expr pos:start="533:21" pos:end="533:29"><name pos:start="533:21" pos:end="533:25">found</name> <operator pos:start="533:27" pos:end="533:27">=</operator> <literal type="number" pos:start="533:29" pos:end="533:29">1</literal></expr>;</expr_stmt>

                    <break pos:start="535:21" pos:end="535:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="541:13" pos:end="547:13"><if pos:start="541:13" pos:end="547:13">if <condition pos:start="541:16" pos:end="541:23">(<expr pos:start="541:17" pos:end="541:22"><operator pos:start="541:17" pos:end="541:17">!</operator><name pos:start="541:18" pos:end="541:22">found</name></expr>)</condition> <block pos:start="541:25" pos:end="547:13">{<block_content pos:start="543:17" pos:end="545:35">

                <expr_stmt pos:start="543:17" pos:end="545:35"><expr pos:start="543:17" pos:end="545:34"><call pos:start="543:17" pos:end="545:34"><name pos:start="543:17" pos:end="543:22">av_log</name><argument_list pos:start="543:23" pos:end="545:34">(<argument pos:start="543:24" pos:end="543:28"><expr pos:start="543:24" pos:end="543:28"><name pos:start="543:24" pos:end="543:28">avctx</name></expr></argument>, <argument pos:start="543:31" pos:end="543:44"><expr pos:start="543:31" pos:end="543:44"><name pos:start="543:31" pos:end="543:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="543:47" pos:end="543:69"><expr pos:start="543:47" pos:end="543:69"><literal type="string" pos:start="543:47" pos:end="543:69">"missing surface: %p\n"</literal></expr></argument>,

                       <argument pos:start="545:24" pos:end="545:33"><expr pos:start="545:24" pos:end="545:33"><operator pos:start="545:24" pos:end="545:24">(</operator><name pos:start="545:25" pos:end="545:28">void</name> <operator pos:start="545:30" pos:end="545:30">*</operator><operator pos:start="545:31" pos:end="545:31">)</operator><name pos:start="545:32" pos:end="545:33">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="549:11" pos:end="553:9">else <block pos:start="549:16" pos:end="553:9">{<block_content pos:start="551:13" pos:end="551:80">

            <expr_stmt pos:start="551:13" pos:end="551:80"><expr pos:start="551:13" pos:end="551:79"><call pos:start="551:13" pos:end="551:79"><name pos:start="551:13" pos:end="551:18">av_log</name><argument_list pos:start="551:19" pos:end="551:79">(<argument pos:start="551:20" pos:end="551:24"><expr pos:start="551:20" pos:end="551:24"><name pos:start="551:20" pos:end="551:24">avctx</name></expr></argument>, <argument pos:start="551:27" pos:end="551:40"><expr pos:start="551:27" pos:end="551:40"><name pos:start="551:27" pos:end="551:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="551:43" pos:end="551:75"><expr pos:start="551:43" pos:end="551:75"><literal type="string" pos:start="551:43" pos:end="551:75">"missing STR Before frame: %zd\n"</literal></expr></argument>, <argument pos:start="551:78" pos:end="551:78"><expr pos:start="551:78" pos:end="551:78"><name pos:start="551:78" pos:end="551:78">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="557:5" pos:end="559:55">/* Reference Picture Set list, one of the short-term RPS. These

       correspond to positions in the RefPics array. */</comment>

    <for pos:start="561:5" pos:end="601:5">for <control pos:start="561:9" pos:end="561:68">(<init pos:start="561:10" pos:end="561:30"><decl pos:start="561:10" pos:end="561:22"><type pos:start="561:10" pos:end="561:16"><name pos:start="561:10" pos:end="561:16">ssize_t</name></type> <name pos:start="561:18" pos:end="561:18">i</name> <init pos:start="561:20" pos:end="561:22">= <expr pos:start="561:22" pos:end="561:22"><literal type="number" pos:start="561:22" pos:end="561:22">0</literal></expr></init></decl>, <decl pos:start="561:25" pos:end="561:29"><type ref="prev" pos:start="561:10" pos:end="561:16"/><name pos:start="561:25" pos:end="561:25">j</name> <init pos:start="561:27" pos:end="561:29">= <expr pos:start="561:29" pos:end="561:29"><literal type="number" pos:start="561:29" pos:end="561:29">0</literal></expr></init></decl>;</init> <condition pos:start="561:32" pos:end="561:63"><expr pos:start="561:32" pos:end="561:62"><name pos:start="561:32" pos:end="561:32">i</name> <operator pos:start="561:34" pos:end="561:34">&lt;</operator> <name pos:start="561:36" pos:end="561:54"><name pos:start="561:36" pos:end="561:36">h</name><operator pos:start="561:37" pos:end="561:38">-&gt;</operator><name pos:start="561:39" pos:end="561:41">rps</name><index pos:start="561:42" pos:end="561:54">[<expr pos:start="561:43" pos:end="561:53"><name pos:start="561:43" pos:end="561:53">ST_CURR_AFT</name></expr>]</index></name><operator pos:start="561:55" pos:end="561:55">.</operator><name pos:start="561:56" pos:end="561:62">nb_refs</name></expr>;</condition> <incr pos:start="561:65" pos:end="561:67"><expr pos:start="561:65" pos:end="561:67"><name pos:start="561:65" pos:end="561:65">i</name><operator pos:start="561:66" pos:end="561:67">++</operator></expr></incr>)</control> <block pos:start="561:70" pos:end="601:5">{<block_content pos:start="563:9" pos:end="599:9">

        <decl_stmt pos:start="563:9" pos:end="563:54"><decl pos:start="563:9" pos:end="563:53"><type pos:start="563:9" pos:end="563:19"><name pos:start="563:9" pos:end="563:17">HEVCFrame</name> <modifier pos:start="563:19" pos:end="563:19">*</modifier></type><name pos:start="563:20" pos:end="563:24">frame</name> <init pos:start="563:26" pos:end="563:53">= <expr pos:start="563:28" pos:end="563:53"><name pos:start="563:28" pos:end="563:46"><name pos:start="563:28" pos:end="563:28">h</name><operator pos:start="563:29" pos:end="563:30">-&gt;</operator><name pos:start="563:31" pos:end="563:33">rps</name><index pos:start="563:34" pos:end="563:46">[<expr pos:start="563:35" pos:end="563:45"><name pos:start="563:35" pos:end="563:45">ST_CURR_AFT</name></expr>]</index></name><operator pos:start="563:47" pos:end="563:47">.</operator><name pos:start="563:48" pos:end="563:53"><name pos:start="563:48" pos:end="563:50">ref</name><index pos:start="563:51" pos:end="563:53">[<expr pos:start="563:52" pos:end="563:52"><name pos:start="563:52" pos:end="563:52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="565:9" pos:end="599:9"><if pos:start="565:9" pos:end="595:9">if <condition pos:start="565:12" pos:end="565:18">(<expr pos:start="565:13" pos:end="565:17"><name pos:start="565:13" pos:end="565:17">frame</name></expr>)</condition> <block pos:start="565:20" pos:end="595:9">{<block_content pos:start="567:13" pos:end="593:13">

            <decl_stmt pos:start="567:13" pos:end="567:30"><decl pos:start="567:13" pos:end="567:29"><type pos:start="567:13" pos:end="567:19"><name pos:start="567:13" pos:end="567:19">uint8_t</name></type> <name pos:start="567:21" pos:end="567:25">found</name> <init pos:start="567:27" pos:end="567:29">= <expr pos:start="567:29" pos:end="567:29"><literal type="number" pos:start="567:29" pos:end="567:29">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="569:13" pos:end="569:65"><decl pos:start="569:13" pos:end="569:64"><type pos:start="569:13" pos:end="569:21"><name pos:start="569:13" pos:end="569:21">uintptr_t</name></type> <name pos:start="569:23" pos:end="569:24">id</name> <init pos:start="569:26" pos:end="569:64">= <expr pos:start="569:28" pos:end="569:64"><call pos:start="569:28" pos:end="569:64"><name pos:start="569:28" pos:end="569:50">ff_vdpau_get_surface_id</name><argument_list pos:start="569:51" pos:end="569:64">(<argument pos:start="569:52" pos:end="569:63"><expr pos:start="569:52" pos:end="569:63"><name pos:start="569:52" pos:end="569:63"><name pos:start="569:52" pos:end="569:56">frame</name><operator pos:start="569:57" pos:end="569:58">-&gt;</operator><name pos:start="569:59" pos:end="569:63">frame</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <for pos:start="571:13" pos:end="585:13">for <control pos:start="571:17" pos:end="571:43">(<init pos:start="571:18" pos:end="571:30"><decl pos:start="571:18" pos:end="571:29"><type pos:start="571:18" pos:end="571:23"><name pos:start="571:18" pos:end="571:23">size_t</name></type> <name pos:start="571:25" pos:end="571:25">k</name> <init pos:start="571:27" pos:end="571:29">= <expr pos:start="571:29" pos:end="571:29"><literal type="number" pos:start="571:29" pos:end="571:29">0</literal></expr></init></decl>;</init> <condition pos:start="571:32" pos:end="571:38"><expr pos:start="571:32" pos:end="571:37"><name pos:start="571:32" pos:end="571:32">k</name> <operator pos:start="571:34" pos:end="571:34">&lt;</operator> <literal type="number" pos:start="571:36" pos:end="571:37">16</literal></expr>;</condition> <incr pos:start="571:40" pos:end="571:42"><expr pos:start="571:40" pos:end="571:42"><name pos:start="571:40" pos:end="571:40">k</name><operator pos:start="571:41" pos:end="571:42">++</operator></expr></incr>)</control> <block pos:start="571:45" pos:end="585:13">{<block_content pos:start="573:17" pos:end="583:17">

                <if_stmt pos:start="573:17" pos:end="583:17"><if pos:start="573:17" pos:end="583:17">if <condition pos:start="573:20" pos:end="573:43">(<expr pos:start="573:21" pos:end="573:42"><name pos:start="573:21" pos:end="573:22">id</name> <operator pos:start="573:24" pos:end="573:25">==</operator> <name pos:start="573:27" pos:end="573:42"><name pos:start="573:27" pos:end="573:30">info</name><operator pos:start="573:31" pos:end="573:32">-&gt;</operator><name pos:start="573:33" pos:end="573:39">RefPics</name><index pos:start="573:40" pos:end="573:42">[<expr pos:start="573:41" pos:end="573:41"><name pos:start="573:41" pos:end="573:41">k</name></expr>]</index></name></expr>)</condition> <block pos:start="573:45" pos:end="583:17">{<block_content pos:start="575:21" pos:end="581:26">

                    <expr_stmt pos:start="575:21" pos:end="575:54"><expr pos:start="575:21" pos:end="575:53"><name pos:start="575:21" pos:end="575:49"><name pos:start="575:21" pos:end="575:24">info</name><operator pos:start="575:25" pos:end="575:26">-&gt;</operator><name pos:start="575:27" pos:end="575:46">RefPicSetStCurrAfter</name><index pos:start="575:47" pos:end="575:49">[<expr pos:start="575:48" pos:end="575:48"><name pos:start="575:48" pos:end="575:48">j</name></expr>]</index></name> <operator pos:start="575:51" pos:end="575:51">=</operator> <name pos:start="575:53" pos:end="575:53">k</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="577:21" pos:end="577:24"><expr pos:start="577:21" pos:end="577:23"><name pos:start="577:21" pos:end="577:21">j</name><operator pos:start="577:22" pos:end="577:23">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="579:21" pos:end="579:30"><expr pos:start="579:21" pos:end="579:29"><name pos:start="579:21" pos:end="579:25">found</name> <operator pos:start="579:27" pos:end="579:27">=</operator> <literal type="number" pos:start="579:29" pos:end="579:29">1</literal></expr>;</expr_stmt>

                    <break pos:start="581:21" pos:end="581:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="587:13" pos:end="593:13"><if pos:start="587:13" pos:end="593:13">if <condition pos:start="587:16" pos:end="587:23">(<expr pos:start="587:17" pos:end="587:22"><operator pos:start="587:17" pos:end="587:17">!</operator><name pos:start="587:18" pos:end="587:22">found</name></expr>)</condition> <block pos:start="587:25" pos:end="593:13">{<block_content pos:start="589:17" pos:end="591:35">

                <expr_stmt pos:start="589:17" pos:end="591:35"><expr pos:start="589:17" pos:end="591:34"><call pos:start="589:17" pos:end="591:34"><name pos:start="589:17" pos:end="589:22">av_log</name><argument_list pos:start="589:23" pos:end="591:34">(<argument pos:start="589:24" pos:end="589:28"><expr pos:start="589:24" pos:end="589:28"><name pos:start="589:24" pos:end="589:28">avctx</name></expr></argument>, <argument pos:start="589:31" pos:end="589:44"><expr pos:start="589:31" pos:end="589:44"><name pos:start="589:31" pos:end="589:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="589:47" pos:end="589:69"><expr pos:start="589:47" pos:end="589:69"><literal type="string" pos:start="589:47" pos:end="589:69">"missing surface: %p\n"</literal></expr></argument>,

                       <argument pos:start="591:24" pos:end="591:33"><expr pos:start="591:24" pos:end="591:33"><operator pos:start="591:24" pos:end="591:24">(</operator><name pos:start="591:25" pos:end="591:28">void</name> <operator pos:start="591:30" pos:end="591:30">*</operator><operator pos:start="591:31" pos:end="591:31">)</operator><name pos:start="591:32" pos:end="591:33">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="595:11" pos:end="599:9">else <block pos:start="595:16" pos:end="599:9">{<block_content pos:start="597:13" pos:end="597:79">

            <expr_stmt pos:start="597:13" pos:end="597:79"><expr pos:start="597:13" pos:end="597:78"><call pos:start="597:13" pos:end="597:78"><name pos:start="597:13" pos:end="597:18">av_log</name><argument_list pos:start="597:19" pos:end="597:78">(<argument pos:start="597:20" pos:end="597:24"><expr pos:start="597:20" pos:end="597:24"><name pos:start="597:20" pos:end="597:24">avctx</name></expr></argument>, <argument pos:start="597:27" pos:end="597:40"><expr pos:start="597:27" pos:end="597:40"><name pos:start="597:27" pos:end="597:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="597:43" pos:end="597:74"><expr pos:start="597:43" pos:end="597:74"><literal type="string" pos:start="597:43" pos:end="597:74">"missing STR After frame: %zd\n"</literal></expr></argument>, <argument pos:start="597:77" pos:end="597:77"><expr pos:start="597:77" pos:end="597:77"><name pos:start="597:77" pos:end="597:77">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="603:5" pos:end="605:55">/* Reference Picture Set list, one of the long-term RPS. These

       correspond to positions in the RefPics array. */</comment>

    <for pos:start="607:5" pos:end="647:5">for <control pos:start="607:9" pos:end="607:64">(<init pos:start="607:10" pos:end="607:30"><decl pos:start="607:10" pos:end="607:22"><type pos:start="607:10" pos:end="607:16"><name pos:start="607:10" pos:end="607:16">ssize_t</name></type> <name pos:start="607:18" pos:end="607:18">i</name> <init pos:start="607:20" pos:end="607:22">= <expr pos:start="607:22" pos:end="607:22"><literal type="number" pos:start="607:22" pos:end="607:22">0</literal></expr></init></decl>, <decl pos:start="607:25" pos:end="607:29"><type ref="prev" pos:start="607:10" pos:end="607:16"/><name pos:start="607:25" pos:end="607:25">j</name> <init pos:start="607:27" pos:end="607:29">= <expr pos:start="607:29" pos:end="607:29"><literal type="number" pos:start="607:29" pos:end="607:29">0</literal></expr></init></decl>;</init> <condition pos:start="607:32" pos:end="607:59"><expr pos:start="607:32" pos:end="607:58"><name pos:start="607:32" pos:end="607:32">i</name> <operator pos:start="607:34" pos:end="607:34">&lt;</operator> <name pos:start="607:36" pos:end="607:50"><name pos:start="607:36" pos:end="607:36">h</name><operator pos:start="607:37" pos:end="607:38">-&gt;</operator><name pos:start="607:39" pos:end="607:41">rps</name><index pos:start="607:42" pos:end="607:50">[<expr pos:start="607:43" pos:end="607:49"><name pos:start="607:43" pos:end="607:49">LT_CURR</name></expr>]</index></name><operator pos:start="607:51" pos:end="607:51">.</operator><name pos:start="607:52" pos:end="607:58">nb_refs</name></expr>;</condition> <incr pos:start="607:61" pos:end="607:63"><expr pos:start="607:61" pos:end="607:63"><name pos:start="607:61" pos:end="607:61">i</name><operator pos:start="607:62" pos:end="607:63">++</operator></expr></incr>)</control> <block pos:start="607:66" pos:end="647:5">{<block_content pos:start="609:9" pos:end="645:9">

        <decl_stmt pos:start="609:9" pos:end="609:50"><decl pos:start="609:9" pos:end="609:49"><type pos:start="609:9" pos:end="609:19"><name pos:start="609:9" pos:end="609:17">HEVCFrame</name> <modifier pos:start="609:19" pos:end="609:19">*</modifier></type><name pos:start="609:20" pos:end="609:24">frame</name> <init pos:start="609:26" pos:end="609:49">= <expr pos:start="609:28" pos:end="609:49"><name pos:start="609:28" pos:end="609:42"><name pos:start="609:28" pos:end="609:28">h</name><operator pos:start="609:29" pos:end="609:30">-&gt;</operator><name pos:start="609:31" pos:end="609:33">rps</name><index pos:start="609:34" pos:end="609:42">[<expr pos:start="609:35" pos:end="609:41"><name pos:start="609:35" pos:end="609:41">LT_CURR</name></expr>]</index></name><operator pos:start="609:43" pos:end="609:43">.</operator><name pos:start="609:44" pos:end="609:49"><name pos:start="609:44" pos:end="609:46">ref</name><index pos:start="609:47" pos:end="609:49">[<expr pos:start="609:48" pos:end="609:48"><name pos:start="609:48" pos:end="609:48">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="611:9" pos:end="645:9"><if pos:start="611:9" pos:end="641:9">if <condition pos:start="611:12" pos:end="611:18">(<expr pos:start="611:13" pos:end="611:17"><name pos:start="611:13" pos:end="611:17">frame</name></expr>)</condition> <block pos:start="611:20" pos:end="641:9">{<block_content pos:start="613:13" pos:end="639:13">

            <decl_stmt pos:start="613:13" pos:end="613:30"><decl pos:start="613:13" pos:end="613:29"><type pos:start="613:13" pos:end="613:19"><name pos:start="613:13" pos:end="613:19">uint8_t</name></type> <name pos:start="613:21" pos:end="613:25">found</name> <init pos:start="613:27" pos:end="613:29">= <expr pos:start="613:29" pos:end="613:29"><literal type="number" pos:start="613:29" pos:end="613:29">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="615:13" pos:end="615:65"><decl pos:start="615:13" pos:end="615:64"><type pos:start="615:13" pos:end="615:21"><name pos:start="615:13" pos:end="615:21">uintptr_t</name></type> <name pos:start="615:23" pos:end="615:24">id</name> <init pos:start="615:26" pos:end="615:64">= <expr pos:start="615:28" pos:end="615:64"><call pos:start="615:28" pos:end="615:64"><name pos:start="615:28" pos:end="615:50">ff_vdpau_get_surface_id</name><argument_list pos:start="615:51" pos:end="615:64">(<argument pos:start="615:52" pos:end="615:63"><expr pos:start="615:52" pos:end="615:63"><name pos:start="615:52" pos:end="615:63"><name pos:start="615:52" pos:end="615:56">frame</name><operator pos:start="615:57" pos:end="615:58">-&gt;</operator><name pos:start="615:59" pos:end="615:63">frame</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <for pos:start="617:13" pos:end="631:13">for <control pos:start="617:17" pos:end="617:43">(<init pos:start="617:18" pos:end="617:30"><decl pos:start="617:18" pos:end="617:29"><type pos:start="617:18" pos:end="617:23"><name pos:start="617:18" pos:end="617:23">size_t</name></type> <name pos:start="617:25" pos:end="617:25">k</name> <init pos:start="617:27" pos:end="617:29">= <expr pos:start="617:29" pos:end="617:29"><literal type="number" pos:start="617:29" pos:end="617:29">0</literal></expr></init></decl>;</init> <condition pos:start="617:32" pos:end="617:38"><expr pos:start="617:32" pos:end="617:37"><name pos:start="617:32" pos:end="617:32">k</name> <operator pos:start="617:34" pos:end="617:34">&lt;</operator> <literal type="number" pos:start="617:36" pos:end="617:37">16</literal></expr>;</condition> <incr pos:start="617:40" pos:end="617:42"><expr pos:start="617:40" pos:end="617:42"><name pos:start="617:40" pos:end="617:40">k</name><operator pos:start="617:41" pos:end="617:42">++</operator></expr></incr>)</control> <block pos:start="617:45" pos:end="631:13">{<block_content pos:start="619:17" pos:end="629:17">

                <if_stmt pos:start="619:17" pos:end="629:17"><if pos:start="619:17" pos:end="629:17">if <condition pos:start="619:20" pos:end="619:43">(<expr pos:start="619:21" pos:end="619:42"><name pos:start="619:21" pos:end="619:22">id</name> <operator pos:start="619:24" pos:end="619:25">==</operator> <name pos:start="619:27" pos:end="619:42"><name pos:start="619:27" pos:end="619:30">info</name><operator pos:start="619:31" pos:end="619:32">-&gt;</operator><name pos:start="619:33" pos:end="619:39">RefPics</name><index pos:start="619:40" pos:end="619:42">[<expr pos:start="619:41" pos:end="619:41"><name pos:start="619:41" pos:end="619:41">k</name></expr>]</index></name></expr>)</condition> <block pos:start="619:45" pos:end="629:17">{<block_content pos:start="621:21" pos:end="627:26">

                    <expr_stmt pos:start="621:21" pos:end="621:49"><expr pos:start="621:21" pos:end="621:48"><name pos:start="621:21" pos:end="621:44"><name pos:start="621:21" pos:end="621:24">info</name><operator pos:start="621:25" pos:end="621:26">-&gt;</operator><name pos:start="621:27" pos:end="621:41">RefPicSetLtCurr</name><index pos:start="621:42" pos:end="621:44">[<expr pos:start="621:43" pos:end="621:43"><name pos:start="621:43" pos:end="621:43">j</name></expr>]</index></name> <operator pos:start="621:46" pos:end="621:46">=</operator> <name pos:start="621:48" pos:end="621:48">k</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="623:21" pos:end="623:24"><expr pos:start="623:21" pos:end="623:23"><name pos:start="623:21" pos:end="623:21">j</name><operator pos:start="623:22" pos:end="623:23">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="625:21" pos:end="625:30"><expr pos:start="625:21" pos:end="625:29"><name pos:start="625:21" pos:end="625:25">found</name> <operator pos:start="625:27" pos:end="625:27">=</operator> <literal type="number" pos:start="625:29" pos:end="625:29">1</literal></expr>;</expr_stmt>

                    <break pos:start="627:21" pos:end="627:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="633:13" pos:end="639:13"><if pos:start="633:13" pos:end="639:13">if <condition pos:start="633:16" pos:end="633:23">(<expr pos:start="633:17" pos:end="633:22"><operator pos:start="633:17" pos:end="633:17">!</operator><name pos:start="633:18" pos:end="633:22">found</name></expr>)</condition> <block pos:start="633:25" pos:end="639:13">{<block_content pos:start="635:17" pos:end="637:35">

                <expr_stmt pos:start="635:17" pos:end="637:35"><expr pos:start="635:17" pos:end="637:34"><call pos:start="635:17" pos:end="637:34"><name pos:start="635:17" pos:end="635:22">av_log</name><argument_list pos:start="635:23" pos:end="637:34">(<argument pos:start="635:24" pos:end="635:28"><expr pos:start="635:24" pos:end="635:28"><name pos:start="635:24" pos:end="635:28">avctx</name></expr></argument>, <argument pos:start="635:31" pos:end="635:44"><expr pos:start="635:31" pos:end="635:44"><name pos:start="635:31" pos:end="635:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="635:47" pos:end="635:69"><expr pos:start="635:47" pos:end="635:69"><literal type="string" pos:start="635:47" pos:end="635:69">"missing surface: %p\n"</literal></expr></argument>,

                       <argument pos:start="637:24" pos:end="637:33"><expr pos:start="637:24" pos:end="637:33"><operator pos:start="637:24" pos:end="637:24">(</operator><name pos:start="637:25" pos:end="637:28">void</name> <operator pos:start="637:30" pos:end="637:30">*</operator><operator pos:start="637:31" pos:end="637:31">)</operator><name pos:start="637:32" pos:end="637:33">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="641:11" pos:end="645:9">else <block pos:start="641:16" pos:end="645:9">{<block_content pos:start="643:13" pos:end="643:73">

            <expr_stmt pos:start="643:13" pos:end="643:73"><expr pos:start="643:13" pos:end="643:72"><call pos:start="643:13" pos:end="643:72"><name pos:start="643:13" pos:end="643:18">av_log</name><argument_list pos:start="643:19" pos:end="643:72">(<argument pos:start="643:20" pos:end="643:24"><expr pos:start="643:20" pos:end="643:24"><name pos:start="643:20" pos:end="643:24">avctx</name></expr></argument>, <argument pos:start="643:27" pos:end="643:40"><expr pos:start="643:27" pos:end="643:40"><name pos:start="643:27" pos:end="643:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="643:43" pos:end="643:68"><expr pos:start="643:43" pos:end="643:68"><literal type="string" pos:start="643:43" pos:end="643:68">"missing LTR frame: %zd\n"</literal></expr></argument>, <argument pos:start="643:71" pos:end="643:71"><expr pos:start="643:71" pos:end="643:71"><name pos:start="643:71" pos:end="643:71">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <return pos:start="651:5" pos:end="651:62">return <expr pos:start="651:12" pos:end="651:61"><call pos:start="651:12" pos:end="651:61"><name pos:start="651:12" pos:end="651:38">ff_vdpau_common_start_frame</name><argument_list pos:start="651:39" pos:end="651:61">(<argument pos:start="651:40" pos:end="651:46"><expr pos:start="651:40" pos:end="651:46"><name pos:start="651:40" pos:end="651:46">pic_ctx</name></expr></argument>, <argument pos:start="651:49" pos:end="651:54"><expr pos:start="651:49" pos:end="651:54"><name pos:start="651:49" pos:end="651:54">buffer</name></expr></argument>, <argument pos:start="651:57" pos:end="651:60"><expr pos:start="651:57" pos:end="651:60"><name pos:start="651:57" pos:end="651:60">size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
