<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3030.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">unregister_savevm</name><parameter_list pos:start="1:23" pos:end="1:73">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:34">DeviceState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">dev</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">idstr</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:64">void</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:72">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SaveStateEntry</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">se</name></decl>, <decl pos:start="5:25" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:20"><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:31">new_se</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:16"><name pos:start="7:10" pos:end="7:11">id</name><index pos:start="7:12" pos:end="7:16">[<expr pos:start="7:13" pos:end="7:15"><literal type="number" pos:start="7:13" pos:end="7:15">256</literal></expr>]</index></name> <init pos:start="7:18" pos:end="7:21">= <expr pos:start="7:20" pos:end="7:21"><literal type="string" pos:start="7:20" pos:end="7:21">""</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="25:5">if <condition pos:start="11:8" pos:end="11:12">(<expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">dev</name></expr>)</condition> <block pos:start="11:14" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:9">

        <decl_stmt pos:start="13:9" pos:end="13:44"><decl pos:start="13:9" pos:end="13:43"><type pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:12">char</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:18">path</name> <init pos:start="13:20" pos:end="13:43">= <expr pos:start="13:22" pos:end="13:43"><call pos:start="13:22" pos:end="13:43"><name pos:start="13:22" pos:end="13:38">qdev_get_dev_path</name><argument_list pos:start="13:39" pos:end="13:43">(<argument pos:start="13:40" pos:end="13:42"><expr pos:start="13:40" pos:end="13:42"><name pos:start="13:40" pos:end="13:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="15:9" pos:end="23:9"><if pos:start="15:9" pos:end="23:9">if <condition pos:start="15:12" pos:end="15:17">(<expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">path</name></expr>)</condition> <block pos:start="15:19" pos:end="23:9">{<block_content pos:start="17:13" pos:end="21:25">

            <expr_stmt pos:start="17:13" pos:end="17:42"><expr pos:start="17:13" pos:end="17:41"><call pos:start="17:13" pos:end="17:41"><name pos:start="17:13" pos:end="17:19">pstrcpy</name><argument_list pos:start="17:20" pos:end="17:41">(<argument pos:start="17:21" pos:end="17:22"><expr pos:start="17:21" pos:end="17:22"><name pos:start="17:21" pos:end="17:22">id</name></expr></argument>, <argument pos:start="17:25" pos:end="17:34"><expr pos:start="17:25" pos:end="17:34"><sizeof pos:start="17:25" pos:end="17:34">sizeof<argument_list pos:start="17:31" pos:end="17:34">(<argument pos:start="17:32" pos:end="17:33"><expr pos:start="17:32" pos:end="17:33"><name pos:start="17:32" pos:end="17:33">id</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:37" pos:end="17:40"><expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:41"><expr pos:start="19:13" pos:end="19:40"><call pos:start="19:13" pos:end="19:40"><name pos:start="19:13" pos:end="19:19">pstrcat</name><argument_list pos:start="19:20" pos:end="19:40">(<argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">id</name></expr></argument>, <argument pos:start="19:25" pos:end="19:34"><expr pos:start="19:25" pos:end="19:34"><sizeof pos:start="19:25" pos:end="19:34">sizeof<argument_list pos:start="19:31" pos:end="19:34">(<argument pos:start="19:32" pos:end="19:33"><expr pos:start="19:32" pos:end="19:33"><name pos:start="19:32" pos:end="19:33">id</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="19:37" pos:end="19:39"><expr pos:start="19:37" pos:end="19:39"><literal type="string" pos:start="19:37" pos:end="19:39">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:25"><expr pos:start="21:13" pos:end="21:24"><call pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:18">g_free</name><argument_list pos:start="21:19" pos:end="21:24">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><call pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:11">pstrcat</name><argument_list pos:start="27:12" pos:end="27:34">(<argument pos:start="27:13" pos:end="27:14"><expr pos:start="27:13" pos:end="27:14"><name pos:start="27:13" pos:end="27:14">id</name></expr></argument>, <argument pos:start="27:17" pos:end="27:26"><expr pos:start="27:17" pos:end="27:26"><sizeof pos:start="27:17" pos:end="27:26">sizeof<argument_list pos:start="27:23" pos:end="27:26">(<argument pos:start="27:24" pos:end="27:25"><expr pos:start="27:24" pos:end="27:25"><name pos:start="27:24" pos:end="27:25">id</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:29" pos:end="27:33"><expr pos:start="27:29" pos:end="27:33"><name pos:start="27:29" pos:end="27:33">idstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="31:5" pos:end="31:66"><name pos:start="31:5" pos:end="31:23">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="31:24" pos:end="31:66">(<argument pos:start="31:25" pos:end="31:26">se</argument>, <argument pos:start="31:29" pos:end="31:50">&amp;savevm_state.handlers</argument>, <argument pos:start="31:53" pos:end="31:57">entry</argument>, <argument pos:start="31:60" pos:end="31:65">new_se</argument>)</argument_list></macro> <block pos:start="31:68" pos:end="49:5">{<block_content pos:start="33:9" pos:end="47:9">

        <if_stmt pos:start="33:9" pos:end="47:9"><if pos:start="33:9" pos:end="47:9">if <condition pos:start="33:12" pos:end="33:63">(<expr pos:start="33:13" pos:end="33:62"><call pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:18">strcmp</name><argument_list pos:start="33:19" pos:end="33:33">(<argument pos:start="33:20" pos:end="33:28"><expr pos:start="33:20" pos:end="33:28"><name pos:start="33:20" pos:end="33:28"><name pos:start="33:20" pos:end="33:21">se</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:28">idstr</name></name></expr></argument>, <argument pos:start="33:31" pos:end="33:32"><expr pos:start="33:31" pos:end="33:32"><name pos:start="33:31" pos:end="33:32">id</name></expr></argument>)</argument_list></call> <operator pos:start="33:35" pos:end="33:36">==</operator> <literal type="number" pos:start="33:38" pos:end="33:38">0</literal> <operator pos:start="33:40" pos:end="33:41">&amp;&amp;</operator> <name pos:start="33:43" pos:end="33:52"><name pos:start="33:43" pos:end="33:44">se</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:52">opaque</name></name> <operator pos:start="33:54" pos:end="33:55">==</operator> <name pos:start="33:57" pos:end="33:62">opaque</name></expr>)</condition> <block pos:start="33:65" pos:end="47:9">{<block_content pos:start="35:13" pos:end="45:23">

            <expr_stmt pos:start="35:13" pos:end="35:61"><expr pos:start="35:13" pos:end="35:60"><call pos:start="35:13" pos:end="35:60"><name pos:start="35:13" pos:end="35:25">QTAILQ_REMOVE</name><argument_list pos:start="35:26" pos:end="35:60">(<argument pos:start="35:27" pos:end="35:48"><expr pos:start="35:27" pos:end="35:48"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:48"><name pos:start="35:28" pos:end="35:39">savevm_state</name><operator pos:start="35:40" pos:end="35:40">.</operator><name pos:start="35:41" pos:end="35:48">handlers</name></name></expr></argument>, <argument pos:start="35:51" pos:end="35:52"><expr pos:start="35:51" pos:end="35:52"><name pos:start="35:51" pos:end="35:52">se</name></expr></argument>, <argument pos:start="35:55" pos:end="35:59"><expr pos:start="35:55" pos:end="35:59"><name pos:start="35:55" pos:end="35:59">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="41:13"><if pos:start="37:13" pos:end="41:13">if <condition pos:start="37:16" pos:end="37:27">(<expr pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:18">se</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:26">compat</name></name></expr>)</condition> <block pos:start="37:29" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:35">

                <expr_stmt pos:start="39:17" pos:end="39:35"><expr pos:start="39:17" pos:end="39:34"><call pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:22">g_free</name><argument_list pos:start="39:23" pos:end="39:34">(<argument pos:start="39:24" pos:end="39:33"><expr pos:start="39:24" pos:end="39:33"><name pos:start="39:24" pos:end="39:33"><name pos:start="39:24" pos:end="39:25">se</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:33">compat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:28"><expr pos:start="43:13" pos:end="43:27"><call pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:18">g_free</name><argument_list pos:start="43:19" pos:end="43:27">(<argument pos:start="43:20" pos:end="43:26"><expr pos:start="43:20" pos:end="43:26"><name pos:start="43:20" pos:end="43:26"><name pos:start="43:20" pos:end="43:21">se</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:26">ops</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:23"><expr pos:start="45:13" pos:end="45:22"><call pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:18">g_free</name><argument_list pos:start="45:19" pos:end="45:22">(<argument pos:start="45:20" pos:end="45:21"><expr pos:start="45:20" pos:end="45:21"><name pos:start="45:20" pos:end="45:21">se</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
