<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6603.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">qed_read_table</name><parameter_list pos:start="1:26" pos:end="1:76">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:38">BDRVQEDState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><name pos:start="1:44" pos:end="1:51">uint64_t</name></type> <name pos:start="1:53" pos:end="1:58">offset</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:75"><decl pos:start="1:61" pos:end="1:75"><type pos:start="1:61" pos:end="1:75"><name pos:start="1:61" pos:end="1:68">QEDTable</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:75">table</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:15">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16">QEMUIOVector</name></type> <name pos:start="5:18" pos:end="5:21">qiov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">noffsets</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="19:6"><decl pos:start="13:5" pos:end="19:5"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:16">iovec</name></name></type> <name pos:start="13:18" pos:end="13:20">iov</name> <init pos:start="13:22" pos:end="19:5">= <expr pos:start="13:24" pos:end="19:5"><block pos:start="13:24" pos:end="19:5">{

        <expr pos:start="15:9" pos:end="15:34"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:17">iov_base</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:34"><name pos:start="15:21" pos:end="15:25">table</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:34">offsets</name></name></expr>,

        <expr pos:start="17:9" pos:end="17:64"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:16">iov_len</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:41"><name pos:start="17:20" pos:end="17:20">s</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:28">header</name><operator pos:start="17:29" pos:end="17:29">.</operator><name pos:start="17:30" pos:end="17:41">cluster_size</name></name> <operator pos:start="17:43" pos:end="17:43">*</operator> <name pos:start="17:45" pos:end="17:64"><name pos:start="17:45" pos:end="17:45">s</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:53">header</name><operator pos:start="17:54" pos:end="17:54">.</operator><name pos:start="17:55" pos:end="17:64">table_size</name></name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><call pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:28">qemu_iovec_init_external</name><argument_list pos:start="21:29" pos:end="21:44">(<argument pos:start="21:30" pos:end="21:34"><expr pos:start="21:30" pos:end="21:34"><operator pos:start="21:30" pos:end="21:30">&amp;</operator><name pos:start="21:31" pos:end="21:34">qiov</name></expr></argument>, <argument pos:start="21:37" pos:end="21:40"><expr pos:start="21:37" pos:end="21:40"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:40">iov</name></expr></argument>, <argument pos:start="21:43" pos:end="21:43"><expr pos:start="21:43" pos:end="21:43"><literal type="number" pos:start="21:43" pos:end="21:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><call pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:24">trace_qed_read_table</name><argument_list pos:start="25:25" pos:end="25:42">(<argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><name pos:start="25:26" pos:end="25:26">s</name></expr></argument>, <argument pos:start="25:29" pos:end="25:34"><expr pos:start="25:29" pos:end="25:34"><name pos:start="25:29" pos:end="25:34">offset</name></expr></argument>, <argument pos:start="25:37" pos:end="25:41"><expr pos:start="25:37" pos:end="25:41"><name pos:start="25:37" pos:end="25:41">table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:50"><expr pos:start="29:5" pos:end="29:49"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:49"><name pos:start="29:11" pos:end="29:21">bdrv_preadv</name><argument_list pos:start="29:22" pos:end="29:49">(<argument pos:start="29:23" pos:end="29:33"><expr pos:start="29:23" pos:end="29:33"><name pos:start="29:23" pos:end="29:33"><name pos:start="29:23" pos:end="29:23">s</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:27">bs</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:33">file</name></name></expr></argument>, <argument pos:start="29:36" pos:end="29:41"><expr pos:start="29:36" pos:end="29:41"><name pos:start="29:36" pos:end="29:41">offset</name></expr></argument>, <argument pos:start="29:44" pos:end="29:48"><expr pos:start="29:44" pos:end="29:48"><operator pos:start="29:44" pos:end="29:44">&amp;</operator><name pos:start="29:45" pos:end="29:48">qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">&lt;</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>)</condition> <block pos:start="31:18" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:17">

        <goto pos:start="33:9" pos:end="33:17">goto <name pos:start="33:14" pos:end="33:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:26">/* Byteswap offsets */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:19"><expr pos:start="41:5" pos:end="41:18"><call pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:15">qed_acquire</name><argument_list pos:start="41:16" pos:end="41:18">(<argument pos:start="41:17" pos:end="41:17"><expr pos:start="41:17" pos:end="41:17"><name pos:start="41:17" pos:end="41:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:44"><expr pos:start="43:5" pos:end="43:43"><name pos:start="43:5" pos:end="43:12">noffsets</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:24"><name pos:start="43:16" pos:end="43:19">qiov</name><operator pos:start="43:20" pos:end="43:20">.</operator><name pos:start="43:21" pos:end="43:24">size</name></name> <operator pos:start="43:26" pos:end="43:26">/</operator> <sizeof pos:start="43:28" pos:end="43:43">sizeof<argument_list pos:start="43:34" pos:end="43:43">(<argument pos:start="43:35" pos:end="43:42"><expr pos:start="43:35" pos:end="43:42"><name pos:start="43:35" pos:end="43:42">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <for pos:start="45:5" pos:end="49:5">for <control pos:start="45:9" pos:end="45:34">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:29"><expr pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:28">noffsets</name></expr>;</condition> <incr pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:31">i</name><operator pos:start="45:32" pos:end="45:33">++</operator></expr></incr>)</control> <block pos:start="45:36" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:59">

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:13">table</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">offsets</name><index pos:start="47:23" pos:end="47:25">[<expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">i</name></expr>]</index></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <call pos:start="47:29" pos:end="47:58"><name pos:start="47:29" pos:end="47:39">le64_to_cpu</name><argument_list pos:start="47:40" pos:end="47:58">(<argument pos:start="47:41" pos:end="47:57"><expr pos:start="47:41" pos:end="47:57"><name pos:start="47:41" pos:end="47:57"><name pos:start="47:41" pos:end="47:45">table</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:54">offsets</name><index pos:start="47:55" pos:end="47:57">[<expr pos:start="47:56" pos:end="47:56"><name pos:start="47:56" pos:end="47:56">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="51:5" pos:end="51:19"><expr pos:start="51:5" pos:end="51:18"><call pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:15">qed_release</name><argument_list pos:start="51:16" pos:end="51:18">(<argument pos:start="51:17" pos:end="51:17"><expr pos:start="51:17" pos:end="51:17"><name pos:start="51:17" pos:end="51:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:12"><expr pos:start="55:5" pos:end="55:11"><name pos:start="55:5" pos:end="55:7">ret</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <literal type="number" pos:start="55:11" pos:end="55:11">0</literal></expr>;</expr_stmt>

<label pos:start="57:1" pos:end="57:4"><name pos:start="57:1" pos:end="57:3">out</name>:</label>

    <comment type="block" pos:start="59:5" pos:end="59:20">/* Completion */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:43"><expr pos:start="61:5" pos:end="61:42"><call pos:start="61:5" pos:end="61:42"><name pos:start="61:5" pos:end="61:27">trace_qed_read_table_cb</name><argument_list pos:start="61:28" pos:end="61:42">(<argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><name pos:start="61:29" pos:end="61:29">s</name></expr></argument>, <argument pos:start="61:32" pos:end="61:36"><expr pos:start="61:32" pos:end="61:36"><name pos:start="61:32" pos:end="61:36">table</name></expr></argument>, <argument pos:start="61:39" pos:end="61:41"><expr pos:start="61:39" pos:end="61:41"><name pos:start="61:39" pos:end="61:41">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:15">return <expr pos:start="63:12" pos:end="63:14"><name pos:start="63:12" pos:end="63:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
