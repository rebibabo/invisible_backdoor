<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5303.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">get_phys_addr_v6</name><parameter_list pos:start="1:28" pos:end="5:63">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:39">CPUARMState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:54">uint32_t</name></type> <name pos:start="1:56" pos:end="1:62">address</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:79"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:79">access_type</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:39"><decl pos:start="3:29" pos:end="3:39"><type pos:start="3:29" pos:end="3:39"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:39">is_user</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:57"><decl pos:start="3:42" pos:end="3:57"><type pos:start="3:42" pos:end="3:57"><name pos:start="3:42" pos:end="3:47">hwaddr</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:57">phys_ptr</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:37"><decl pos:start="5:29" pos:end="5:37"><type pos:start="5:29" pos:end="5:37"><name pos:start="5:29" pos:end="5:31">int</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier></type><name pos:start="5:34" pos:end="5:37">prot</name></decl></parameter>, <parameter pos:start="5:40" pos:end="5:62"><decl pos:start="5:40" pos:end="5:62"><type pos:start="5:40" pos:end="5:62"><name pos:start="5:40" pos:end="5:51">target_ulong</name> <modifier pos:start="5:53" pos:end="5:53">*</modifier></type><name pos:start="5:54" pos:end="5:62">page_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="223:1">{<block_content pos:start="9:5" pos:end="221:32">

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">CPUState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">cs</name> <init pos:start="9:18" pos:end="9:35">= <expr pos:start="9:20" pos:end="9:35"><call pos:start="9:20" pos:end="9:35"><name pos:start="9:20" pos:end="9:30">ENV_GET_CPU</name><argument_list pos:start="9:31" pos:end="9:35">(<argument pos:start="9:32" pos:end="9:34"><expr pos:start="9:32" pos:end="9:34"><name pos:start="9:32" pos:end="9:34">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:18">table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:17">desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:15">xn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:16">pxn</name> <init pos:start="19:18" pos:end="19:20">= <expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:13"><decl pos:start="21:5" pos:end="21:12"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:11"><decl pos:start="23:5" pos:end="23:10"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:10">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:19"><decl pos:start="25:5" pos:end="25:18"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:14">domain</name> <init pos:start="25:16" pos:end="25:18">= <expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:20"><decl pos:start="27:5" pos:end="27:19"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:19">domain_prot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:20"><type pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:10">hwaddr</name></type> <name pos:start="29:12" pos:end="29:20">phys_addr</name></decl>;</decl_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:26">/* Pagetable walk.  */</comment>

    <comment type="block" pos:start="35:5" pos:end="35:32">/* Lookup l1 descriptor.  */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:9">table</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="37:50"><name pos:start="37:13" pos:end="37:36">get_level1_table_address</name><argument_list pos:start="37:37" pos:end="37:50">(<argument pos:start="37:38" pos:end="37:40"><expr pos:start="37:38" pos:end="37:40"><name pos:start="37:38" pos:end="37:40">env</name></expr></argument>, <argument pos:start="37:43" pos:end="37:49"><expr pos:start="37:43" pos:end="37:49"><name pos:start="37:43" pos:end="37:49">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:8">desc</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="39:34"><name pos:start="39:12" pos:end="39:19">ldl_phys</name><argument_list pos:start="39:20" pos:end="39:34">(<argument pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:22">cs</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:26">as</name></name></expr></argument>, <argument pos:start="39:29" pos:end="39:33"><expr pos:start="39:29" pos:end="39:33"><name pos:start="39:29" pos:end="39:33">table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:8">type</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <operator pos:start="41:12" pos:end="41:12">(</operator><name pos:start="41:13" pos:end="41:16">desc</name> <operator pos:start="41:18" pos:end="41:18">&amp;</operator> <literal type="number" pos:start="41:20" pos:end="41:20">3</literal><operator pos:start="41:21" pos:end="41:21">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="55:5"><if pos:start="43:5" pos:end="55:5">if <condition pos:start="43:8" pos:end="43:71">(<expr pos:start="43:9" pos:end="43:70"><name pos:start="43:9" pos:end="43:12">type</name> <operator pos:start="43:14" pos:end="43:15">==</operator> <literal type="number" pos:start="43:17" pos:end="43:17">0</literal> <operator pos:start="43:19" pos:end="43:20">||</operator> <operator pos:start="43:22" pos:end="43:22">(</operator><name pos:start="43:23" pos:end="43:26">type</name> <operator pos:start="43:28" pos:end="43:29">==</operator> <literal type="number" pos:start="43:31" pos:end="43:31">3</literal> <operator pos:start="43:33" pos:end="43:34">&amp;&amp;</operator> <operator pos:start="43:36" pos:end="43:36">!</operator><call pos:start="43:37" pos:end="43:69"><name pos:start="43:37" pos:end="43:47">arm_feature</name><argument_list pos:start="43:48" pos:end="43:69">(<argument pos:start="43:49" pos:end="43:51"><expr pos:start="43:49" pos:end="43:51"><name pos:start="43:49" pos:end="43:51">env</name></expr></argument>, <argument pos:start="43:54" pos:end="43:68"><expr pos:start="43:54" pos:end="43:68"><name pos:start="43:54" pos:end="43:68">ARM_FEATURE_PXN</name></expr></argument>)</argument_list></call><operator pos:start="43:70" pos:end="43:70">)</operator></expr>)</condition> <block pos:start="43:73" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:22">

        <comment type="block" pos:start="45:9" pos:end="49:11">/* Section translation fault, or attempt to use the encoding

         * which is Reserved on implementations without PXN.

         */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:17"><expr pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:12">code</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <literal type="number" pos:start="51:16" pos:end="51:16">5</literal></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:22">goto <name pos:start="53:14" pos:end="53:21">do_fault</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:43">(<expr pos:start="57:9" pos:end="57:42"><operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:13">type</name> <operator pos:start="57:15" pos:end="57:16">==</operator> <literal type="number" pos:start="57:18" pos:end="57:18">1</literal><operator pos:start="57:19" pos:end="57:19">)</operator> <operator pos:start="57:21" pos:end="57:22">||</operator> <operator pos:start="57:24" pos:end="57:24">!</operator><operator pos:start="57:25" pos:end="57:25">(</operator><name pos:start="57:26" pos:end="57:29">desc</name> <operator pos:start="57:31" pos:end="57:31">&amp;</operator> <operator pos:start="57:33" pos:end="57:33">(</operator><literal type="number" pos:start="57:34" pos:end="57:34">1</literal> <operator pos:start="57:36" pos:end="57:37">&lt;&lt;</operator> <literal type="number" pos:start="57:39" pos:end="57:40">18</literal><operator pos:start="57:41" pos:end="57:41">)</operator><operator pos:start="57:42" pos:end="57:42">)</operator></expr>)</condition> <block pos:start="57:45" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:36">

        <comment type="block" pos:start="59:9" pos:end="59:31">/* Page or Section.  */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:14">domain</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <operator pos:start="61:18" pos:end="61:18">(</operator><name pos:start="61:19" pos:end="61:22">desc</name> <operator pos:start="61:24" pos:end="61:25">&gt;&gt;</operator> <literal type="number" pos:start="61:27" pos:end="61:27">5</literal><operator pos:start="61:28" pos:end="61:28">)</operator> <operator pos:start="61:30" pos:end="61:30">&amp;</operator> <literal type="number" pos:start="61:32" pos:end="61:35">0x0f</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:53"><expr pos:start="65:5" pos:end="65:52"><name pos:start="65:5" pos:end="65:15">domain_prot</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <operator pos:start="65:19" pos:end="65:19">(</operator><name pos:start="65:20" pos:end="65:31"><name pos:start="65:20" pos:end="65:22">env</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:28">cp15</name><operator pos:start="65:29" pos:end="65:29">.</operator><name pos:start="65:30" pos:end="65:31">c3</name></name> <operator pos:start="65:33" pos:end="65:34">&gt;&gt;</operator> <operator pos:start="65:36" pos:end="65:36">(</operator><name pos:start="65:37" pos:end="65:42">domain</name> <operator pos:start="65:44" pos:end="65:44">*</operator> <literal type="number" pos:start="65:46" pos:end="65:46">2</literal><operator pos:start="65:47" pos:end="65:47">)</operator><operator pos:start="65:48" pos:end="65:48">)</operator> <operator pos:start="65:50" pos:end="65:50">&amp;</operator> <literal type="number" pos:start="65:52" pos:end="65:52">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="81:5"><if pos:start="67:5" pos:end="81:5">if <condition pos:start="67:8" pos:end="67:45">(<expr pos:start="67:9" pos:end="67:44"><name pos:start="67:9" pos:end="67:19">domain_prot</name> <operator pos:start="67:21" pos:end="67:22">==</operator> <literal type="number" pos:start="67:24" pos:end="67:24">0</literal> <operator pos:start="67:26" pos:end="67:27">||</operator> <name pos:start="67:29" pos:end="67:39">domain_prot</name> <operator pos:start="67:41" pos:end="67:42">==</operator> <literal type="number" pos:start="67:44" pos:end="67:44">2</literal></expr>)</condition> <block pos:start="67:47" pos:end="81:5">{<block_content pos:start="69:9" pos:end="79:22">

        <if_stmt pos:start="69:9" pos:end="77:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:22">(<expr pos:start="69:13" pos:end="69:21"><name pos:start="69:13" pos:end="69:16">type</name> <operator pos:start="69:18" pos:end="69:19">!=</operator> <literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>)</condition> <block pos:start="69:24" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:21">

            <expr_stmt pos:start="71:13" pos:end="71:21"><expr pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:16">code</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <literal type="number" pos:start="71:20" pos:end="71:20">9</literal></expr>;</expr_stmt> <comment type="block" pos:start="71:23" pos:end="71:50">/* Section domain fault.  */</comment>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="77:9">else <block pos:start="73:16" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:22">

            <expr_stmt pos:start="75:13" pos:end="75:22"><expr pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:16">code</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <literal type="number" pos:start="75:20" pos:end="75:21">11</literal></expr>;</expr_stmt> <comment type="block" pos:start="75:24" pos:end="75:48">/* Page domain fault.  */</comment>

        </block_content>}</block></else></if_stmt>

        <goto pos:start="79:9" pos:end="79:22">goto <name pos:start="79:14" pos:end="79:21">do_fault</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="165:5"><if pos:start="83:5" pos:end="111:5">if <condition pos:start="83:8" pos:end="83:18">(<expr pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:12">type</name> <operator pos:start="83:14" pos:end="83:15">!=</operator> <literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>)</condition> <block pos:start="83:20" pos:end="111:5">{<block_content pos:start="85:9" pos:end="109:18">

        <if_stmt pos:start="85:9" pos:end="101:9"><if pos:start="85:9" pos:end="93:9">if <condition pos:start="85:12" pos:end="85:29">(<expr pos:start="85:13" pos:end="85:28"><name pos:start="85:13" pos:end="85:16">desc</name> <operator pos:start="85:18" pos:end="85:18">&amp;</operator> <operator pos:start="85:20" pos:end="85:20">(</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal> <operator pos:start="85:23" pos:end="85:24">&lt;&lt;</operator> <literal type="number" pos:start="85:26" pos:end="85:27">18</literal><operator pos:start="85:28" pos:end="85:28">)</operator></expr>)</condition> <block pos:start="85:31" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:35">

            <comment type="block" pos:start="87:13" pos:end="87:32">/* Supersection.  */</comment>

            <expr_stmt pos:start="89:13" pos:end="89:69"><expr pos:start="89:13" pos:end="89:68"><name pos:start="89:13" pos:end="89:21">phys_addr</name> <operator pos:start="89:23" pos:end="89:23">=</operator> <operator pos:start="89:25" pos:end="89:25">(</operator><name pos:start="89:26" pos:end="89:29">desc</name> <operator pos:start="89:31" pos:end="89:31">&amp;</operator> <literal type="number" pos:start="89:33" pos:end="89:42">0xff000000</literal><operator pos:start="89:43" pos:end="89:43">)</operator> <operator pos:start="89:45" pos:end="89:45">|</operator> <operator pos:start="89:47" pos:end="89:47">(</operator><name pos:start="89:48" pos:end="89:54">address</name> <operator pos:start="89:56" pos:end="89:56">&amp;</operator> <literal type="number" pos:start="89:58" pos:end="89:67">0x00ffffff</literal><operator pos:start="89:68" pos:end="89:68">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:35"><expr pos:start="91:13" pos:end="91:34"><operator pos:start="91:13" pos:end="91:13">*</operator><name pos:start="91:14" pos:end="91:22">page_size</name> <operator pos:start="91:24" pos:end="91:24">=</operator> <literal type="number" pos:start="91:26" pos:end="91:34">0x1000000</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="101:9">else <block pos:start="93:16" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:34">

            <comment type="block" pos:start="95:13" pos:end="95:27">/* Section.  */</comment>

            <expr_stmt pos:start="97:13" pos:end="97:69"><expr pos:start="97:13" pos:end="97:68"><name pos:start="97:13" pos:end="97:21">phys_addr</name> <operator pos:start="97:23" pos:end="97:23">=</operator> <operator pos:start="97:25" pos:end="97:25">(</operator><name pos:start="97:26" pos:end="97:29">desc</name> <operator pos:start="97:31" pos:end="97:31">&amp;</operator> <literal type="number" pos:start="97:33" pos:end="97:42">0xfff00000</literal><operator pos:start="97:43" pos:end="97:43">)</operator> <operator pos:start="97:45" pos:end="97:45">|</operator> <operator pos:start="97:47" pos:end="97:47">(</operator><name pos:start="97:48" pos:end="97:54">address</name> <operator pos:start="97:56" pos:end="97:56">&amp;</operator> <literal type="number" pos:start="97:58" pos:end="97:67">0x000fffff</literal><operator pos:start="97:68" pos:end="97:68">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:34"><expr pos:start="99:13" pos:end="99:33"><operator pos:start="99:13" pos:end="99:13">*</operator><name pos:start="99:14" pos:end="99:22">page_size</name> <operator pos:start="99:24" pos:end="99:24">=</operator> <literal type="number" pos:start="99:26" pos:end="99:33">0x100000</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:53"><expr pos:start="103:9" pos:end="103:52"><name pos:start="103:9" pos:end="103:10">ap</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <operator pos:start="103:14" pos:end="103:14">(</operator><operator pos:start="103:15" pos:end="103:15">(</operator><name pos:start="103:16" pos:end="103:19">desc</name> <operator pos:start="103:21" pos:end="103:22">&gt;&gt;</operator> <literal type="number" pos:start="103:24" pos:end="103:25">10</literal><operator pos:start="103:26" pos:end="103:26">)</operator> <operator pos:start="103:28" pos:end="103:28">&amp;</operator> <literal type="number" pos:start="103:30" pos:end="103:30">3</literal><operator pos:start="103:31" pos:end="103:31">)</operator> <operator pos:start="103:33" pos:end="103:33">|</operator> <operator pos:start="103:35" pos:end="103:35">(</operator><operator pos:start="103:36" pos:end="103:36">(</operator><name pos:start="103:37" pos:end="103:40">desc</name> <operator pos:start="103:42" pos:end="103:43">&gt;&gt;</operator> <literal type="number" pos:start="103:45" pos:end="103:46">13</literal><operator pos:start="103:47" pos:end="103:47">)</operator> <operator pos:start="103:49" pos:end="103:49">&amp;</operator> <literal type="number" pos:start="103:51" pos:end="103:51">4</literal><operator pos:start="103:52" pos:end="103:52">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:29"><expr pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:10">xn</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <name pos:start="105:14" pos:end="105:17">desc</name> <operator pos:start="105:19" pos:end="105:19">&amp;</operator> <operator pos:start="105:21" pos:end="105:21">(</operator><literal type="number" pos:start="105:22" pos:end="105:22">1</literal> <operator pos:start="105:24" pos:end="105:25">&lt;&lt;</operator> <literal type="number" pos:start="105:27" pos:end="105:27">4</literal><operator pos:start="105:28" pos:end="105:28">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:23"><expr pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:11">pxn</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <name pos:start="107:15" pos:end="107:18">desc</name> <operator pos:start="107:20" pos:end="107:20">&amp;</operator> <literal type="number" pos:start="107:22" pos:end="107:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:18"><expr pos:start="109:9" pos:end="109:17"><name pos:start="109:9" pos:end="109:12">code</name> <operator pos:start="109:14" pos:end="109:14">=</operator> <literal type="number" pos:start="109:16" pos:end="109:17">13</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="111:7" pos:end="165:5">else <block pos:start="111:12" pos:end="165:5">{<block_content pos:start="113:9" pos:end="163:18">

        <if_stmt pos:start="113:9" pos:end="117:9"><if pos:start="113:9" pos:end="117:9">if <condition pos:start="113:12" pos:end="113:46">(<expr pos:start="113:13" pos:end="113:45"><call pos:start="113:13" pos:end="113:45"><name pos:start="113:13" pos:end="113:23">arm_feature</name><argument_list pos:start="113:24" pos:end="113:45">(<argument pos:start="113:25" pos:end="113:27"><expr pos:start="113:25" pos:end="113:27"><name pos:start="113:25" pos:end="113:27">env</name></expr></argument>, <argument pos:start="113:30" pos:end="113:44"><expr pos:start="113:30" pos:end="113:44"><name pos:start="113:30" pos:end="113:44">ARM_FEATURE_PXN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:48" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:34">

            <expr_stmt pos:start="115:13" pos:end="115:34"><expr pos:start="115:13" pos:end="115:33"><name pos:start="115:13" pos:end="115:15">pxn</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <operator pos:start="115:19" pos:end="115:19">(</operator><name pos:start="115:20" pos:end="115:23">desc</name> <operator pos:start="115:25" pos:end="115:26">&gt;&gt;</operator> <literal type="number" pos:start="115:28" pos:end="115:28">2</literal><operator pos:start="115:29" pos:end="115:29">)</operator> <operator pos:start="115:31" pos:end="115:31">&amp;</operator> <literal type="number" pos:start="115:33" pos:end="115:33">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="119:9" pos:end="119:31">/* Lookup l2 entry.  */</comment>

        <expr_stmt pos:start="121:9" pos:end="121:64"><expr pos:start="121:9" pos:end="121:63"><name pos:start="121:9" pos:end="121:13">table</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <operator pos:start="121:17" pos:end="121:17">(</operator><name pos:start="121:18" pos:end="121:21">desc</name> <operator pos:start="121:23" pos:end="121:23">&amp;</operator> <literal type="number" pos:start="121:25" pos:end="121:34">0xfffffc00</literal><operator pos:start="121:35" pos:end="121:35">)</operator> <operator pos:start="121:37" pos:end="121:37">|</operator> <operator pos:start="121:39" pos:end="121:39">(</operator><operator pos:start="121:40" pos:end="121:40">(</operator><name pos:start="121:41" pos:end="121:47">address</name> <operator pos:start="121:49" pos:end="121:50">&gt;&gt;</operator> <literal type="number" pos:start="121:52" pos:end="121:53">10</literal><operator pos:start="121:54" pos:end="121:54">)</operator> <operator pos:start="121:56" pos:end="121:56">&amp;</operator> <literal type="number" pos:start="121:58" pos:end="121:62">0x3fc</literal><operator pos:start="121:63" pos:end="121:63">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:39"><expr pos:start="123:9" pos:end="123:38"><name pos:start="123:9" pos:end="123:12">desc</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <call pos:start="123:16" pos:end="123:38"><name pos:start="123:16" pos:end="123:23">ldl_phys</name><argument_list pos:start="123:24" pos:end="123:38">(<argument pos:start="123:25" pos:end="123:30"><expr pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:26">cs</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:30">as</name></name></expr></argument>, <argument pos:start="123:33" pos:end="123:37"><expr pos:start="123:33" pos:end="123:37"><name pos:start="123:33" pos:end="123:37">table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:51"><expr pos:start="125:9" pos:end="125:50"><name pos:start="125:9" pos:end="125:10">ap</name> <operator pos:start="125:12" pos:end="125:12">=</operator> <operator pos:start="125:14" pos:end="125:14">(</operator><operator pos:start="125:15" pos:end="125:15">(</operator><name pos:start="125:16" pos:end="125:19">desc</name> <operator pos:start="125:21" pos:end="125:22">&gt;&gt;</operator> <literal type="number" pos:start="125:24" pos:end="125:24">4</literal><operator pos:start="125:25" pos:end="125:25">)</operator> <operator pos:start="125:27" pos:end="125:27">&amp;</operator> <literal type="number" pos:start="125:29" pos:end="125:29">3</literal><operator pos:start="125:30" pos:end="125:30">)</operator> <operator pos:start="125:32" pos:end="125:32">|</operator> <operator pos:start="125:34" pos:end="125:34">(</operator><operator pos:start="125:35" pos:end="125:35">(</operator><name pos:start="125:36" pos:end="125:39">desc</name> <operator pos:start="125:41" pos:end="125:42">&gt;&gt;</operator> <literal type="number" pos:start="125:44" pos:end="125:44">7</literal><operator pos:start="125:45" pos:end="125:45">)</operator> <operator pos:start="125:47" pos:end="125:47">&amp;</operator> <literal type="number" pos:start="125:49" pos:end="125:49">4</literal><operator pos:start="125:50" pos:end="125:50">)</operator></expr>;</expr_stmt>

        <switch pos:start="127:9" pos:end="161:9">switch <condition pos:start="127:16" pos:end="127:25">(<expr pos:start="127:17" pos:end="127:24"><name pos:start="127:17" pos:end="127:20">desc</name> <operator pos:start="127:22" pos:end="127:22">&amp;</operator> <literal type="number" pos:start="127:24" pos:end="127:24">3</literal></expr>)</condition> <block pos:start="127:27" pos:end="161:9">{<block_content pos:start="129:9" pos:end="159:20">

        <case pos:start="129:9" pos:end="129:15">case <expr pos:start="129:14" pos:end="129:14"><literal type="number" pos:start="129:14" pos:end="129:14">0</literal></expr>:</case> <comment type="block" pos:start="129:17" pos:end="129:46">/* Page translation fault.  */</comment>

            <expr_stmt pos:start="131:13" pos:end="131:21"><expr pos:start="131:13" pos:end="131:20"><name pos:start="131:13" pos:end="131:16">code</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <literal type="number" pos:start="131:20" pos:end="131:20">7</literal></expr>;</expr_stmt>

            <goto pos:start="133:13" pos:end="133:26">goto <name pos:start="133:18" pos:end="133:25">do_fault</name>;</goto>

        <case pos:start="135:9" pos:end="135:15">case <expr pos:start="135:14" pos:end="135:14"><literal type="number" pos:start="135:14" pos:end="135:14">1</literal></expr>:</case> <comment type="block" pos:start="135:17" pos:end="135:32">/* 64k page.  */</comment>

            <expr_stmt pos:start="137:13" pos:end="137:65"><expr pos:start="137:13" pos:end="137:64"><name pos:start="137:13" pos:end="137:21">phys_addr</name> <operator pos:start="137:23" pos:end="137:23">=</operator> <operator pos:start="137:25" pos:end="137:25">(</operator><name pos:start="137:26" pos:end="137:29">desc</name> <operator pos:start="137:31" pos:end="137:31">&amp;</operator> <literal type="number" pos:start="137:33" pos:end="137:42">0xffff0000</literal><operator pos:start="137:43" pos:end="137:43">)</operator> <operator pos:start="137:45" pos:end="137:45">|</operator> <operator pos:start="137:47" pos:end="137:47">(</operator><name pos:start="137:48" pos:end="137:54">address</name> <operator pos:start="137:56" pos:end="137:56">&amp;</operator> <literal type="number" pos:start="137:58" pos:end="137:63">0xffff</literal><operator pos:start="137:64" pos:end="137:64">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:34"><expr pos:start="139:13" pos:end="139:33"><name pos:start="139:13" pos:end="139:14">xn</name> <operator pos:start="139:16" pos:end="139:16">=</operator> <name pos:start="139:18" pos:end="139:21">desc</name> <operator pos:start="139:23" pos:end="139:23">&amp;</operator> <operator pos:start="139:25" pos:end="139:25">(</operator><literal type="number" pos:start="139:26" pos:end="139:26">1</literal> <operator pos:start="139:28" pos:end="139:29">&lt;&lt;</operator> <literal type="number" pos:start="139:31" pos:end="139:32">15</literal><operator pos:start="139:33" pos:end="139:33">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:33"><expr pos:start="141:13" pos:end="141:32"><operator pos:start="141:13" pos:end="141:13">*</operator><name pos:start="141:14" pos:end="141:22">page_size</name> <operator pos:start="141:24" pos:end="141:24">=</operator> <literal type="number" pos:start="141:26" pos:end="141:32">0x10000</literal></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="145:15">case <expr pos:start="145:14" pos:end="145:14"><literal type="number" pos:start="145:14" pos:end="145:14">2</literal></expr>:</case> <case pos:start="145:17" pos:end="145:23">case <expr pos:start="145:22" pos:end="145:22"><literal type="number" pos:start="145:22" pos:end="145:22">3</literal></expr>:</case> <comment type="block" pos:start="145:25" pos:end="145:39">/* 4k page.  */</comment>

            <expr_stmt pos:start="147:13" pos:end="147:64"><expr pos:start="147:13" pos:end="147:63"><name pos:start="147:13" pos:end="147:21">phys_addr</name> <operator pos:start="147:23" pos:end="147:23">=</operator> <operator pos:start="147:25" pos:end="147:25">(</operator><name pos:start="147:26" pos:end="147:29">desc</name> <operator pos:start="147:31" pos:end="147:31">&amp;</operator> <literal type="number" pos:start="147:33" pos:end="147:42">0xfffff000</literal><operator pos:start="147:43" pos:end="147:43">)</operator> <operator pos:start="147:45" pos:end="147:45">|</operator> <operator pos:start="147:47" pos:end="147:47">(</operator><name pos:start="147:48" pos:end="147:54">address</name> <operator pos:start="147:56" pos:end="147:56">&amp;</operator> <literal type="number" pos:start="147:58" pos:end="147:62">0xfff</literal><operator pos:start="147:63" pos:end="147:63">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:26"><expr pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:14">xn</name> <operator pos:start="149:16" pos:end="149:16">=</operator> <name pos:start="149:18" pos:end="149:21">desc</name> <operator pos:start="149:23" pos:end="149:23">&amp;</operator> <literal type="number" pos:start="149:25" pos:end="149:25">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:32"><expr pos:start="151:13" pos:end="151:31"><operator pos:start="151:13" pos:end="151:13">*</operator><name pos:start="151:14" pos:end="151:22">page_size</name> <operator pos:start="151:24" pos:end="151:24">=</operator> <literal type="number" pos:start="151:26" pos:end="151:31">0x1000</literal></expr>;</expr_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        <default pos:start="155:9" pos:end="155:16">default:</default>

            <comment type="block" pos:start="157:13" pos:end="157:74">/* Never happens, but compiler isn't smart enough to tell.  */</comment>

            <expr_stmt pos:start="159:13" pos:end="159:20"><expr pos:start="159:13" pos:end="159:19"><call pos:start="159:13" pos:end="159:19"><name pos:start="159:13" pos:end="159:17">abort</name><argument_list pos:start="159:18" pos:end="159:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="163:9" pos:end="163:18"><expr pos:start="163:9" pos:end="163:17"><name pos:start="163:9" pos:end="163:12">code</name> <operator pos:start="163:14" pos:end="163:14">=</operator> <literal type="number" pos:start="163:16" pos:end="163:17">15</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="167:5" pos:end="213:5"><if pos:start="167:5" pos:end="171:5">if <condition pos:start="167:8" pos:end="167:25">(<expr pos:start="167:9" pos:end="167:24"><name pos:start="167:9" pos:end="167:19">domain_prot</name> <operator pos:start="167:21" pos:end="167:22">==</operator> <literal type="number" pos:start="167:24" pos:end="167:24">3</literal></expr>)</condition> <block pos:start="167:27" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:51">

        <expr_stmt pos:start="169:9" pos:end="169:51"><expr pos:start="169:9" pos:end="169:50"><operator pos:start="169:9" pos:end="169:9">*</operator><name pos:start="169:10" pos:end="169:13">prot</name> <operator pos:start="169:15" pos:end="169:15">=</operator> <name pos:start="169:17" pos:end="169:25">PAGE_READ</name> <operator pos:start="169:27" pos:end="169:27">|</operator> <name pos:start="169:29" pos:end="169:38">PAGE_WRITE</name> <operator pos:start="169:40" pos:end="169:40">|</operator> <name pos:start="169:42" pos:end="169:50">PAGE_EXEC</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="171:7" pos:end="213:5">else <block pos:start="171:12" pos:end="213:5">{<block_content pos:start="173:9" pos:end="211:9">

        <if_stmt pos:start="173:9" pos:end="177:9"><if pos:start="173:9" pos:end="177:9">if <condition pos:start="173:12" pos:end="173:28">(<expr pos:start="173:13" pos:end="173:27"><name pos:start="173:13" pos:end="173:15">pxn</name> <operator pos:start="173:17" pos:end="173:18">&amp;&amp;</operator> <operator pos:start="173:20" pos:end="173:20">!</operator><name pos:start="173:21" pos:end="173:27">is_user</name></expr>)</condition> <block pos:start="173:30" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:19">

            <expr_stmt pos:start="175:13" pos:end="175:19"><expr pos:start="175:13" pos:end="175:18"><name pos:start="175:13" pos:end="175:14">xn</name> <operator pos:start="175:16" pos:end="175:16">=</operator> <literal type="number" pos:start="175:18" pos:end="175:18">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="179:9" pos:end="181:26"><if pos:start="179:9" pos:end="181:26">if <condition pos:start="179:12" pos:end="179:35">(<expr pos:start="179:13" pos:end="179:34"><name pos:start="179:13" pos:end="179:14">xn</name> <operator pos:start="179:16" pos:end="179:17">&amp;&amp;</operator> <name pos:start="179:19" pos:end="179:29">access_type</name> <operator pos:start="179:31" pos:end="179:32">==</operator> <literal type="number" pos:start="179:34" pos:end="179:34">2</literal></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:26"><block_content pos:start="181:13" pos:end="181:26">

            <goto pos:start="181:13" pos:end="181:26">goto <name pos:start="181:18" pos:end="181:25">do_fault</name>;</goto></block_content></block></if></if_stmt>



        <comment type="block" pos:start="185:9" pos:end="185:72">/* The simplified model uses AP[0] as an access control bit.  */</comment>

        <if_stmt pos:start="187:9" pos:end="195:9"><if pos:start="187:9" pos:end="195:9">if <condition pos:start="187:12" pos:end="187:60">(<expr pos:start="187:13" pos:end="187:59"><operator pos:start="187:13" pos:end="187:13">(</operator><name pos:start="187:14" pos:end="187:29"><name pos:start="187:14" pos:end="187:16">env</name><operator pos:start="187:17" pos:end="187:18">-&gt;</operator><name pos:start="187:19" pos:end="187:22">cp15</name><operator pos:start="187:23" pos:end="187:23">.</operator><name pos:start="187:24" pos:end="187:29">c1_sys</name></name> <operator pos:start="187:31" pos:end="187:31">&amp;</operator> <operator pos:start="187:33" pos:end="187:33">(</operator><literal type="number" pos:start="187:34" pos:end="187:34">1</literal> <operator pos:start="187:36" pos:end="187:37">&lt;&lt;</operator> <literal type="number" pos:start="187:39" pos:end="187:40">29</literal><operator pos:start="187:41" pos:end="187:41">)</operator><operator pos:start="187:42" pos:end="187:42">)</operator> <operator pos:start="187:44" pos:end="187:45">&amp;&amp;</operator> <operator pos:start="187:47" pos:end="187:47">(</operator><name pos:start="187:48" pos:end="187:49">ap</name> <operator pos:start="187:51" pos:end="187:51">&amp;</operator> <literal type="number" pos:start="187:53" pos:end="187:53">1</literal><operator pos:start="187:54" pos:end="187:54">)</operator> <operator pos:start="187:56" pos:end="187:57">==</operator> <literal type="number" pos:start="187:59" pos:end="187:59">0</literal></expr>)</condition> <block pos:start="187:62" pos:end="195:9">{<block_content pos:start="191:13" pos:end="193:26">

            <comment type="block" pos:start="189:13" pos:end="189:37">/* Access flag fault.  */</comment>

            <expr_stmt pos:start="191:13" pos:end="191:40"><expr pos:start="191:13" pos:end="191:39"><name pos:start="191:13" pos:end="191:16">code</name> <operator pos:start="191:18" pos:end="191:18">=</operator> <ternary pos:start="191:20" pos:end="191:39"><condition pos:start="191:20" pos:end="191:33"><expr pos:start="191:20" pos:end="191:31"><operator pos:start="191:20" pos:end="191:20">(</operator><name pos:start="191:21" pos:end="191:24">code</name> <operator pos:start="191:26" pos:end="191:27">==</operator> <literal type="number" pos:start="191:29" pos:end="191:30">15</literal><operator pos:start="191:31" pos:end="191:31">)</operator></expr> ?</condition><then pos:start="191:35" pos:end="191:35"> <expr pos:start="191:35" pos:end="191:35"><literal type="number" pos:start="191:35" pos:end="191:35">6</literal></expr> </then><else pos:start="191:37" pos:end="191:39">: <expr pos:start="191:39" pos:end="191:39"><literal type="number" pos:start="191:39" pos:end="191:39">3</literal></expr></else></ternary></expr>;</expr_stmt>

            <goto pos:start="193:13" pos:end="193:26">goto <name pos:start="193:18" pos:end="193:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:69"><expr pos:start="197:9" pos:end="197:68"><operator pos:start="197:9" pos:end="197:9">*</operator><name pos:start="197:10" pos:end="197:13">prot</name> <operator pos:start="197:15" pos:end="197:15">=</operator> <call pos:start="197:17" pos:end="197:68"><name pos:start="197:17" pos:end="197:24">check_ap</name><argument_list pos:start="197:25" pos:end="197:68">(<argument pos:start="197:26" pos:end="197:28"><expr pos:start="197:26" pos:end="197:28"><name pos:start="197:26" pos:end="197:28">env</name></expr></argument>, <argument pos:start="197:31" pos:end="197:32"><expr pos:start="197:31" pos:end="197:32"><name pos:start="197:31" pos:end="197:32">ap</name></expr></argument>, <argument pos:start="197:35" pos:end="197:45"><expr pos:start="197:35" pos:end="197:45"><name pos:start="197:35" pos:end="197:45">domain_prot</name></expr></argument>, <argument pos:start="197:48" pos:end="197:58"><expr pos:start="197:48" pos:end="197:58"><name pos:start="197:48" pos:end="197:58">access_type</name></expr></argument>, <argument pos:start="197:61" pos:end="197:67"><expr pos:start="197:61" pos:end="197:67"><name pos:start="197:61" pos:end="197:67">is_user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="199:9" pos:end="205:9"><if pos:start="199:9" pos:end="205:9">if <condition pos:start="199:12" pos:end="199:19">(<expr pos:start="199:13" pos:end="199:18"><operator pos:start="199:13" pos:end="199:13">!</operator><operator pos:start="199:14" pos:end="199:14">*</operator><name pos:start="199:15" pos:end="199:18">prot</name></expr>)</condition> <block pos:start="199:21" pos:end="205:9">{<block_content pos:start="203:13" pos:end="203:26">

            <comment type="block" pos:start="201:13" pos:end="201:43">/* Access permission fault.  */</comment>

            <goto pos:start="203:13" pos:end="203:26">goto <name pos:start="203:18" pos:end="203:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="207:9" pos:end="211:9"><if pos:start="207:9" pos:end="211:9">if <condition pos:start="207:12" pos:end="207:16">(<expr pos:start="207:13" pos:end="207:15"><operator pos:start="207:13" pos:end="207:13">!</operator><name pos:start="207:14" pos:end="207:15">xn</name></expr>)</condition> <block pos:start="207:18" pos:end="211:9">{<block_content pos:start="209:13" pos:end="209:31">

            <expr_stmt pos:start="209:13" pos:end="209:31"><expr pos:start="209:13" pos:end="209:30"><operator pos:start="209:13" pos:end="209:13">*</operator><name pos:start="209:14" pos:end="209:17">prot</name> <operator pos:start="209:19" pos:end="209:20">|=</operator> <name pos:start="209:22" pos:end="209:30">PAGE_EXEC</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:26"><expr pos:start="215:5" pos:end="215:25"><operator pos:start="215:5" pos:end="215:5">*</operator><name pos:start="215:6" pos:end="215:13">phys_ptr</name> <operator pos:start="215:15" pos:end="215:15">=</operator> <name pos:start="215:17" pos:end="215:25">phys_addr</name></expr>;</expr_stmt>

    <return pos:start="217:5" pos:end="217:13">return <expr pos:start="217:12" pos:end="217:12"><literal type="number" pos:start="217:12" pos:end="217:12">0</literal></expr>;</return>

<label pos:start="219:1" pos:end="219:9"><name pos:start="219:1" pos:end="219:8">do_fault</name>:</label>

    <return pos:start="221:5" pos:end="221:32">return <expr pos:start="221:12" pos:end="221:31"><name pos:start="221:12" pos:end="221:15">code</name> <operator pos:start="221:17" pos:end="221:17">|</operator> <operator pos:start="221:19" pos:end="221:19">(</operator><name pos:start="221:20" pos:end="221:25">domain</name> <operator pos:start="221:27" pos:end="221:28">&lt;&lt;</operator> <literal type="number" pos:start="221:30" pos:end="221:30">4</literal><operator pos:start="221:31" pos:end="221:31">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
