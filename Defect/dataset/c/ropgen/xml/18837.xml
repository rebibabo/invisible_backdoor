<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18837.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">read_sl_header</name><parameter_list pos:start="1:26" pos:end="3:59">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:36">PESContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">pes</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:56">SLConfigDescr</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">sl</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:44"><decl pos:start="3:27" pos:end="3:44"><type pos:start="3:27" pos:end="3:44"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:39">uint8_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">buf</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:58"><decl pos:start="3:47" pos:end="3:58"><type pos:start="3:47" pos:end="3:58"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:58">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="7:5" pos:end="129:42">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">GetBitContext</name></type> <name pos:start="7:19" pos:end="7:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:72"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">au_start_flag</name> <init pos:start="9:23" pos:end="9:25">= <expr pos:start="9:25" pos:end="9:25"><literal type="number" pos:start="9:25" pos:end="9:25">0</literal></expr></init></decl>, <decl pos:start="9:28" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:38">au_end_flag</name> <init pos:start="9:40" pos:end="9:42">= <expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr></init></decl>, <decl pos:start="9:45" pos:end="9:56"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:45" pos:end="9:52">ocr_flag</name> <init pos:start="9:54" pos:end="9:56">= <expr pos:start="9:56" pos:end="9:56"><literal type="number" pos:start="9:56" pos:end="9:56">0</literal></expr></init></decl>, <decl pos:start="9:59" pos:end="9:71"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:59" pos:end="9:67">idle_flag</name> <init pos:start="9:69" pos:end="9:71">= <expr pos:start="9:71" pos:end="9:71"><literal type="number" pos:start="9:71" pos:end="9:71">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:66"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">padding_flag</name> <init pos:start="11:22" pos:end="11:24">= <expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr></init></decl>, <decl pos:start="11:27" pos:end="11:42"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:27" pos:end="11:38">padding_bits</name> <init pos:start="11:40" pos:end="11:42">= <expr pos:start="11:42" pos:end="11:42"><literal type="number" pos:start="11:42" pos:end="11:42">0</literal></expr></init></decl>, <decl pos:start="11:45" pos:end="11:65"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:45" pos:end="11:61">inst_bitrate_flag</name> <init pos:start="11:63" pos:end="11:65">= <expr pos:start="11:65" pos:end="11:65"><literal type="number" pos:start="11:65" pos:end="11:65">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">dts_flag</name> <init pos:start="13:18" pos:end="13:21">= <expr pos:start="13:20" pos:end="13:21"><operator pos:start="13:20" pos:end="13:20">-</operator><literal type="number" pos:start="13:21" pos:end="13:21">1</literal></expr></init></decl>, <decl pos:start="13:24" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:31">cts_flag</name> <init pos:start="13:33" pos:end="13:36">= <expr pos:start="13:35" pos:end="13:36"><operator pos:start="13:35" pos:end="13:35">-</operator><literal type="number" pos:start="13:36" pos:end="13:36">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:55"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:15">dts</name> <init pos:start="15:17" pos:end="15:32">= <expr pos:start="15:19" pos:end="15:32"><name pos:start="15:19" pos:end="15:32">AV_NOPTS_VALUE</name></expr></init></decl>, <decl pos:start="15:35" pos:end="15:54"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:35" pos:end="15:37">cts</name> <init pos:start="15:39" pos:end="15:54">= <expr pos:start="15:41" pos:end="15:54"><name pos:start="15:41" pos:end="15:54">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><call pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:17">init_get_bits</name><argument_list pos:start="19:18" pos:end="19:41">(<argument pos:start="19:19" pos:end="19:21"><expr pos:start="19:19" pos:end="19:21"><operator pos:start="19:19" pos:end="19:19">&amp;</operator><name pos:start="19:20" pos:end="19:21">gb</name></expr></argument>, <argument pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">buf</name></expr></argument>, <argument pos:start="19:29" pos:end="19:40"><expr pos:start="19:29" pos:end="19:40"><name pos:start="19:29" pos:end="19:36">buf_size</name> <operator pos:start="19:38" pos:end="19:38">*</operator> <literal type="number" pos:start="19:40" pos:end="19:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:39"><if pos:start="23:5" pos:end="25:39">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:10">sl</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:24">use_au_start</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:39"><block_content pos:start="25:9" pos:end="25:39">

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:21">au_start_flag</name> <operator pos:start="25:23" pos:end="25:23">=</operator> <call pos:start="25:25" pos:end="25:38"><name pos:start="25:25" pos:end="25:33">get_bits1</name><argument_list pos:start="25:34" pos:end="25:38">(<argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><operator pos:start="25:35" pos:end="25:35">&amp;</operator><name pos:start="25:36" pos:end="25:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="29:37"><if pos:start="27:5" pos:end="29:37">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:10">sl</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:22">use_au_end</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:37"><block_content pos:start="29:9" pos:end="29:37">

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:19">au_end_flag</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:36"><name pos:start="29:23" pos:end="29:31">get_bits1</name><argument_list pos:start="29:32" pos:end="29:36">(<argument pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><operator pos:start="29:33" pos:end="29:33">&amp;</operator><name pos:start="29:34" pos:end="29:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="33:40"><if pos:start="31:5" pos:end="33:40">if <condition pos:start="31:8" pos:end="31:45">(<expr pos:start="31:9" pos:end="31:44"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:25"><name pos:start="31:10" pos:end="31:11">sl</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:25">use_au_start</name></name> <operator pos:start="31:27" pos:end="31:28">&amp;&amp;</operator> <operator pos:start="31:30" pos:end="31:30">!</operator><name pos:start="31:31" pos:end="31:44"><name pos:start="31:31" pos:end="31:32">sl</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:44">use_au_end</name></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:40"><block_content pos:start="33:9" pos:end="33:40">

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:21">au_start_flag</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:35">au_end_flag</name> <operator pos:start="33:37" pos:end="33:37">=</operator> <literal type="number" pos:start="33:39" pos:end="33:39">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="37:34"><if pos:start="35:5" pos:end="37:34">if <condition pos:start="35:8" pos:end="35:24">(<expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:10">sl</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:19">ocr_len</name></name> <operator pos:start="35:21" pos:end="35:21">&gt;</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:34"><block_content pos:start="37:9" pos:end="37:34">

        <expr_stmt pos:start="37:9" pos:end="37:34"><expr pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:16">ocr_flag</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:33"><name pos:start="37:20" pos:end="37:28">get_bits1</name><argument_list pos:start="37:29" pos:end="37:33">(<argument pos:start="37:30" pos:end="37:32"><expr pos:start="37:30" pos:end="37:32"><operator pos:start="37:30" pos:end="37:30">&amp;</operator><name pos:start="37:31" pos:end="37:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:35"><if pos:start="39:5" pos:end="41:35">if <condition pos:start="39:8" pos:end="39:21">(<expr pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:10">sl</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:20">use_idle</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:35"><block_content pos:start="41:9" pos:end="41:35">

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:17">idle_flag</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="41:34"><name pos:start="41:21" pos:end="41:29">get_bits1</name><argument_list pos:start="41:30" pos:end="41:34">(<argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><operator pos:start="41:31" pos:end="41:31">&amp;</operator><name pos:start="41:32" pos:end="41:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="45:38"><if pos:start="43:5" pos:end="45:38">if <condition pos:start="43:8" pos:end="43:24">(<expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:10">sl</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:23">use_padding</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:38"><block_content pos:start="45:9" pos:end="45:38">

        <expr_stmt pos:start="45:9" pos:end="45:38"><expr pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:20">padding_flag</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:37"><name pos:start="45:24" pos:end="45:32">get_bits1</name><argument_list pos:start="45:33" pos:end="45:37">(<argument pos:start="45:34" pos:end="45:36"><expr pos:start="45:34" pos:end="45:36"><operator pos:start="45:34" pos:end="45:34">&amp;</operator><name pos:start="45:35" pos:end="45:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="49:40"><if pos:start="47:5" pos:end="49:40">if <condition pos:start="47:8" pos:end="47:21">(<expr pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:20">padding_flag</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:40"><block_content pos:start="49:9" pos:end="49:40">

        <expr_stmt pos:start="49:9" pos:end="49:40"><expr pos:start="49:9" pos:end="49:39"><name pos:start="49:9" pos:end="49:20">padding_bits</name> <operator pos:start="49:22" pos:end="49:22">=</operator> <call pos:start="49:24" pos:end="49:39"><name pos:start="49:24" pos:end="49:31">get_bits</name><argument_list pos:start="49:32" pos:end="49:39">(<argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><operator pos:start="49:33" pos:end="49:33">&amp;</operator><name pos:start="49:34" pos:end="49:35">gb</name></expr></argument>, <argument pos:start="49:38" pos:end="49:38"><expr pos:start="49:38" pos:end="49:38"><literal type="number" pos:start="49:38" pos:end="49:38">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="109:5"><if pos:start="53:5" pos:end="109:5">if <condition pos:start="53:8" pos:end="53:59">(<expr pos:start="53:9" pos:end="53:58"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:18">idle_flag</name> <operator pos:start="53:20" pos:end="53:21">&amp;&amp;</operator> <operator pos:start="53:23" pos:end="53:23">(</operator><operator pos:start="53:24" pos:end="53:24">!</operator><name pos:start="53:25" pos:end="53:36">padding_flag</name> <operator pos:start="53:38" pos:end="53:39">||</operator> <name pos:start="53:41" pos:end="53:52">padding_bits</name> <operator pos:start="53:54" pos:end="53:55">!=</operator> <literal type="number" pos:start="53:57" pos:end="53:57">0</literal><operator pos:start="53:58" pos:end="53:58">)</operator></expr>)</condition> <block pos:start="53:61" pos:end="109:5">{<block_content pos:start="55:9" pos:end="107:54">

        <if_stmt pos:start="55:9" pos:end="57:56"><if pos:start="55:9" pos:end="57:56">if <condition pos:start="55:12" pos:end="55:35">(<expr pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:14">sl</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:34">packet_seq_num_len</name></name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:56"><block_content pos:start="57:13" pos:end="57:56">

            <expr_stmt pos:start="57:13" pos:end="57:56"><expr pos:start="57:13" pos:end="57:55"><call pos:start="57:13" pos:end="57:55"><name pos:start="57:13" pos:end="57:26">skip_bits_long</name><argument_list pos:start="57:27" pos:end="57:55">(<argument pos:start="57:28" pos:end="57:30"><expr pos:start="57:28" pos:end="57:30"><operator pos:start="57:28" pos:end="57:28">&amp;</operator><name pos:start="57:29" pos:end="57:30">gb</name></expr></argument>, <argument pos:start="57:33" pos:end="57:54"><expr pos:start="57:33" pos:end="57:54"><name pos:start="57:33" pos:end="57:54"><name pos:start="57:33" pos:end="57:34">sl</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:54">packet_seq_num_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="63:51"><if pos:start="59:9" pos:end="63:51">if <condition pos:start="59:12" pos:end="59:31">(<expr pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:14">sl</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:30">degr_prior_len</name></name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="63:51"><block_content pos:start="61:13" pos:end="63:51">

            <if_stmt pos:start="61:13" pos:end="63:51"><if pos:start="61:13" pos:end="63:51">if <condition pos:start="61:16" pos:end="61:31">(<expr pos:start="61:17" pos:end="61:30"><call pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:25">get_bits1</name><argument_list pos:start="61:26" pos:end="61:30">(<argument pos:start="61:27" pos:end="61:29"><expr pos:start="61:27" pos:end="61:29"><operator pos:start="61:27" pos:end="61:27">&amp;</operator><name pos:start="61:28" pos:end="61:29">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:51"><block_content pos:start="63:17" pos:end="63:51">

                <expr_stmt pos:start="63:17" pos:end="63:51"><expr pos:start="63:17" pos:end="63:50"><call pos:start="63:17" pos:end="63:50"><name pos:start="63:17" pos:end="63:25">skip_bits</name><argument_list pos:start="63:26" pos:end="63:50">(<argument pos:start="63:27" pos:end="63:29"><expr pos:start="63:27" pos:end="63:29"><operator pos:start="63:27" pos:end="63:27">&amp;</operator><name pos:start="63:28" pos:end="63:29">gb</name></expr></argument>, <argument pos:start="63:32" pos:end="63:49"><expr pos:start="63:32" pos:end="63:49"><name pos:start="63:32" pos:end="63:49"><name pos:start="63:32" pos:end="63:33">sl</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:49">degr_prior_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="67:45"><if pos:start="65:9" pos:end="67:45">if <condition pos:start="65:12" pos:end="65:21">(<expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:20">ocr_flag</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:45"><block_content pos:start="67:13" pos:end="67:45">

            <expr_stmt pos:start="67:13" pos:end="67:45"><expr pos:start="67:13" pos:end="67:44"><call pos:start="67:13" pos:end="67:44"><name pos:start="67:13" pos:end="67:26">skip_bits_long</name><argument_list pos:start="67:27" pos:end="67:44">(<argument pos:start="67:28" pos:end="67:30"><expr pos:start="67:28" pos:end="67:30"><operator pos:start="67:28" pos:end="67:28">&amp;</operator><name pos:start="67:29" pos:end="67:30">gb</name></expr></argument>, <argument pos:start="67:33" pos:end="67:43"><expr pos:start="67:33" pos:end="67:43"><name pos:start="67:33" pos:end="67:43"><name pos:start="67:33" pos:end="67:34">sl</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:43">ocr_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="87:9"><if pos:start="69:9" pos:end="87:9">if <condition pos:start="69:12" pos:end="69:26">(<expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:25">au_start_flag</name></expr>)</condition> <block pos:start="69:28" pos:end="87:9">{<block_content pos:start="71:13" pos:end="85:13">

            <if_stmt pos:start="71:13" pos:end="73:31"><if pos:start="71:13" pos:end="73:31">if <condition pos:start="71:16" pos:end="71:36">(<expr pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:18">sl</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:35">use_rand_acc_pt</name></name></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:31"><block_content pos:start="73:17" pos:end="73:31">

                <expr_stmt pos:start="73:17" pos:end="73:31"><expr pos:start="73:17" pos:end="73:30"><call pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:25">get_bits1</name><argument_list pos:start="73:26" pos:end="73:30">(<argument pos:start="73:27" pos:end="73:29"><expr pos:start="73:27" pos:end="73:29"><operator pos:start="73:27" pos:end="73:27">&amp;</operator><name pos:start="73:28" pos:end="73:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="75:13" pos:end="77:56"><if pos:start="75:13" pos:end="77:56">if <condition pos:start="75:16" pos:end="75:39">(<expr pos:start="75:17" pos:end="75:38"><name pos:start="75:17" pos:end="75:34"><name pos:start="75:17" pos:end="75:18">sl</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:34">au_seq_num_len</name></name> <operator pos:start="75:36" pos:end="75:36">&gt;</operator> <literal type="number" pos:start="75:38" pos:end="75:38">0</literal></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:56"><block_content pos:start="77:17" pos:end="77:56">

                <expr_stmt pos:start="77:17" pos:end="77:56"><expr pos:start="77:17" pos:end="77:55"><call pos:start="77:17" pos:end="77:55"><name pos:start="77:17" pos:end="77:30">skip_bits_long</name><argument_list pos:start="77:31" pos:end="77:55">(<argument pos:start="77:32" pos:end="77:34"><expr pos:start="77:32" pos:end="77:34"><operator pos:start="77:32" pos:end="77:32">&amp;</operator><name pos:start="77:33" pos:end="77:34">gb</name></expr></argument>, <argument pos:start="77:37" pos:end="77:54"><expr pos:start="77:37" pos:end="77:54"><name pos:start="77:37" pos:end="77:54"><name pos:start="77:37" pos:end="77:38">sl</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:54">au_seq_num_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="79:13" pos:end="85:13"><if pos:start="79:13" pos:end="85:13">if <condition pos:start="79:16" pos:end="79:35">(<expr pos:start="79:17" pos:end="79:34"><name pos:start="79:17" pos:end="79:34"><name pos:start="79:17" pos:end="79:18">sl</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:34">use_timestamps</name></name></expr>)</condition> <block pos:start="79:37" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:42">

                <expr_stmt pos:start="81:17" pos:end="81:42"><expr pos:start="81:17" pos:end="81:41"><name pos:start="81:17" pos:end="81:24">dts_flag</name> <operator pos:start="81:26" pos:end="81:26">=</operator> <call pos:start="81:28" pos:end="81:41"><name pos:start="81:28" pos:end="81:36">get_bits1</name><argument_list pos:start="81:37" pos:end="81:41">(<argument pos:start="81:38" pos:end="81:40"><expr pos:start="81:38" pos:end="81:40"><operator pos:start="81:38" pos:end="81:38">&amp;</operator><name pos:start="81:39" pos:end="81:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:42"><expr pos:start="83:17" pos:end="83:41"><name pos:start="83:17" pos:end="83:24">cts_flag</name> <operator pos:start="83:26" pos:end="83:26">=</operator> <call pos:start="83:28" pos:end="83:41"><name pos:start="83:28" pos:end="83:36">get_bits1</name><argument_list pos:start="83:37" pos:end="83:41">(<argument pos:start="83:38" pos:end="83:40"><expr pos:start="83:38" pos:end="83:40"><operator pos:start="83:38" pos:end="83:38">&amp;</operator><name pos:start="83:39" pos:end="83:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="91:47"><if pos:start="89:9" pos:end="91:47">if <condition pos:start="89:12" pos:end="89:33">(<expr pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:14">sl</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:32">inst_bitrate_len</name></name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:47"><block_content pos:start="91:13" pos:end="91:47">

            <expr_stmt pos:start="91:13" pos:end="91:47"><expr pos:start="91:13" pos:end="91:46"><name pos:start="91:13" pos:end="91:29">inst_bitrate_flag</name> <operator pos:start="91:31" pos:end="91:31">=</operator> <call pos:start="91:33" pos:end="91:46"><name pos:start="91:33" pos:end="91:41">get_bits1</name><argument_list pos:start="91:42" pos:end="91:46">(<argument pos:start="91:43" pos:end="91:45"><expr pos:start="91:43" pos:end="91:45"><operator pos:start="91:43" pos:end="91:43">&amp;</operator><name pos:start="91:44" pos:end="91:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="93:9" pos:end="95:51"><if pos:start="93:9" pos:end="95:51">if <condition pos:start="93:12" pos:end="93:26">(<expr pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:20">dts_flag</name> <operator pos:start="93:22" pos:end="93:23">==</operator> <literal type="number" pos:start="93:25" pos:end="93:25">1</literal></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:51"><block_content pos:start="95:13" pos:end="95:51">

            <expr_stmt pos:start="95:13" pos:end="95:51"><expr pos:start="95:13" pos:end="95:50"><name pos:start="95:13" pos:end="95:15">dts</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:50"><name pos:start="95:19" pos:end="95:26">get_ts64</name><argument_list pos:start="95:27" pos:end="95:50">(<argument pos:start="95:28" pos:end="95:30"><expr pos:start="95:28" pos:end="95:30"><operator pos:start="95:28" pos:end="95:28">&amp;</operator><name pos:start="95:29" pos:end="95:30">gb</name></expr></argument>, <argument pos:start="95:33" pos:end="95:49"><expr pos:start="95:33" pos:end="95:49"><name pos:start="95:33" pos:end="95:49"><name pos:start="95:33" pos:end="95:34">sl</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:49">timestamp_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="97:9" pos:end="99:51"><if pos:start="97:9" pos:end="99:51">if <condition pos:start="97:12" pos:end="97:26">(<expr pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:20">cts_flag</name> <operator pos:start="97:22" pos:end="97:23">==</operator> <literal type="number" pos:start="97:25" pos:end="97:25">1</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:51"><block_content pos:start="99:13" pos:end="99:51">

            <expr_stmt pos:start="99:13" pos:end="99:51"><expr pos:start="99:13" pos:end="99:50"><name pos:start="99:13" pos:end="99:15">cts</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="99:50"><name pos:start="99:19" pos:end="99:26">get_ts64</name><argument_list pos:start="99:27" pos:end="99:50">(<argument pos:start="99:28" pos:end="99:30"><expr pos:start="99:28" pos:end="99:30"><operator pos:start="99:28" pos:end="99:28">&amp;</operator><name pos:start="99:29" pos:end="99:30">gb</name></expr></argument>, <argument pos:start="99:33" pos:end="99:49"><expr pos:start="99:33" pos:end="99:49"><name pos:start="99:33" pos:end="99:49"><name pos:start="99:33" pos:end="99:34">sl</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:49">timestamp_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="101:9" pos:end="103:44"><if pos:start="101:9" pos:end="103:44">if <condition pos:start="101:12" pos:end="101:27">(<expr pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:22"><name pos:start="101:13" pos:end="101:14">sl</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:22">au_len</name></name> <operator pos:start="101:24" pos:end="101:24">&gt;</operator> <literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:44"><block_content pos:start="103:13" pos:end="103:44">

            <expr_stmt pos:start="103:13" pos:end="103:44"><expr pos:start="103:13" pos:end="103:43"><call pos:start="103:13" pos:end="103:43"><name pos:start="103:13" pos:end="103:26">skip_bits_long</name><argument_list pos:start="103:27" pos:end="103:43">(<argument pos:start="103:28" pos:end="103:30"><expr pos:start="103:28" pos:end="103:30"><operator pos:start="103:28" pos:end="103:28">&amp;</operator><name pos:start="103:29" pos:end="103:30">gb</name></expr></argument>, <argument pos:start="103:33" pos:end="103:42"><expr pos:start="103:33" pos:end="103:42"><name pos:start="103:33" pos:end="103:42"><name pos:start="103:33" pos:end="103:34">sl</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:42">au_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="105:9" pos:end="107:54"><if pos:start="105:9" pos:end="107:54">if <condition pos:start="105:12" pos:end="105:30">(<expr pos:start="105:13" pos:end="105:29"><name pos:start="105:13" pos:end="105:29">inst_bitrate_flag</name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:54"><block_content pos:start="107:13" pos:end="107:54">

            <expr_stmt pos:start="107:13" pos:end="107:54"><expr pos:start="107:13" pos:end="107:53"><call pos:start="107:13" pos:end="107:53"><name pos:start="107:13" pos:end="107:26">skip_bits_long</name><argument_list pos:start="107:27" pos:end="107:53">(<argument pos:start="107:28" pos:end="107:30"><expr pos:start="107:28" pos:end="107:30"><operator pos:start="107:28" pos:end="107:28">&amp;</operator><name pos:start="107:29" pos:end="107:30">gb</name></expr></argument>, <argument pos:start="107:33" pos:end="107:52"><expr pos:start="107:33" pos:end="107:52"><name pos:start="107:33" pos:end="107:52"><name pos:start="107:33" pos:end="107:34">sl</name><operator pos:start="107:35" pos:end="107:36">-&gt;</operator><name pos:start="107:37" pos:end="107:52">inst_bitrate_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="115:23"><if pos:start="113:5" pos:end="115:23">if <condition pos:start="113:8" pos:end="113:30">(<expr pos:start="113:9" pos:end="113:29"><name pos:start="113:9" pos:end="113:11">dts</name> <operator pos:start="113:13" pos:end="113:14">!=</operator> <name pos:start="113:16" pos:end="113:29">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:23"><block_content pos:start="115:9" pos:end="115:23">

        <expr_stmt pos:start="115:9" pos:end="115:23"><expr pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:16"><name pos:start="115:9" pos:end="115:11">pes</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:16">dts</name></name> <operator pos:start="115:18" pos:end="115:18">=</operator> <name pos:start="115:20" pos:end="115:22">dts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="117:5" pos:end="119:23"><if pos:start="117:5" pos:end="119:23">if <condition pos:start="117:8" pos:end="117:30">(<expr pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:11">cts</name> <operator pos:start="117:13" pos:end="117:14">!=</operator> <name pos:start="117:16" pos:end="117:29">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:23"><block_content pos:start="119:9" pos:end="119:23">

        <expr_stmt pos:start="119:9" pos:end="119:23"><expr pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:16"><name pos:start="119:9" pos:end="119:11">pes</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:16">pts</name></name> <operator pos:start="119:18" pos:end="119:18">=</operator> <name pos:start="119:20" pos:end="119:22">cts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="125:78"><if pos:start="123:5" pos:end="125:78">if <condition pos:start="123:8" pos:end="123:47">(<expr pos:start="123:9" pos:end="123:46"><name pos:start="123:9" pos:end="123:25"><name pos:start="123:9" pos:end="123:10">sl</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:25">timestamp_len</name></name> <operator pos:start="123:27" pos:end="123:28">&amp;&amp;</operator> <name pos:start="123:30" pos:end="123:46"><name pos:start="123:30" pos:end="123:31">sl</name><operator pos:start="123:32" pos:end="123:33">-&gt;</operator><name pos:start="123:34" pos:end="123:46">timestamp_res</name></name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:78"><block_content pos:start="125:9" pos:end="125:78">

        <expr_stmt pos:start="125:9" pos:end="125:78"><expr pos:start="125:9" pos:end="125:77"><call pos:start="125:9" pos:end="125:77"><name pos:start="125:9" pos:end="125:27">avpriv_set_pts_info</name><argument_list pos:start="125:28" pos:end="125:77">(<argument pos:start="125:29" pos:end="125:35"><expr pos:start="125:29" pos:end="125:35"><name pos:start="125:29" pos:end="125:35"><name pos:start="125:29" pos:end="125:31">pes</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:35">st</name></name></expr></argument>, <argument pos:start="125:38" pos:end="125:54"><expr pos:start="125:38" pos:end="125:54"><name pos:start="125:38" pos:end="125:54"><name pos:start="125:38" pos:end="125:39">sl</name><operator pos:start="125:40" pos:end="125:41">-&gt;</operator><name pos:start="125:42" pos:end="125:54">timestamp_len</name></name></expr></argument>, <argument pos:start="125:57" pos:end="125:57"><expr pos:start="125:57" pos:end="125:57"><literal type="number" pos:start="125:57" pos:end="125:57">1</literal></expr></argument>, <argument pos:start="125:60" pos:end="125:76"><expr pos:start="125:60" pos:end="125:76"><name pos:start="125:60" pos:end="125:76"><name pos:start="125:60" pos:end="125:61">sl</name><operator pos:start="125:62" pos:end="125:63">-&gt;</operator><name pos:start="125:64" pos:end="125:76">timestamp_res</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="129:5" pos:end="129:42">return <expr pos:start="129:12" pos:end="129:41"><operator pos:start="129:12" pos:end="129:12">(</operator><call pos:start="129:13" pos:end="129:31"><name pos:start="129:13" pos:end="129:26">get_bits_count</name><argument_list pos:start="129:27" pos:end="129:31">(<argument pos:start="129:28" pos:end="129:30"><expr pos:start="129:28" pos:end="129:30"><operator pos:start="129:28" pos:end="129:28">&amp;</operator><name pos:start="129:29" pos:end="129:30">gb</name></expr></argument>)</argument_list></call> <operator pos:start="129:33" pos:end="129:33">+</operator> <literal type="number" pos:start="129:35" pos:end="129:35">7</literal><operator pos:start="129:36" pos:end="129:36">)</operator> <operator pos:start="129:38" pos:end="129:39">&gt;&gt;</operator> <literal type="number" pos:start="129:41" pos:end="129:41">3</literal></expr>;</return>

</block_content>}</block></function>
</unit>
