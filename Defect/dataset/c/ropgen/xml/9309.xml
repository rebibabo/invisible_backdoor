<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9309.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">check_refcounts_l1</name><parameter_list pos:start="1:30" pos:end="9:47">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:46">BlockDriverState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">bs</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:54"><decl pos:start="3:31" pos:end="3:54"><type pos:start="3:31" pos:end="3:54"><name pos:start="3:31" pos:end="3:38">uint16_t</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:54">refcount_table</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:53"><decl pos:start="5:31" pos:end="5:53"><type pos:start="5:31" pos:end="5:53"><name pos:start="5:31" pos:end="5:33">int</name></type> <name pos:start="5:35" pos:end="5:53">refcount_table_size</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:53"><decl pos:start="7:31" pos:end="7:53"><type pos:start="7:31" pos:end="7:53"><name pos:start="7:31" pos:end="7:37">int64_t</name></type> <name pos:start="7:39" pos:end="7:53">l1_table_offset</name></decl></parameter>, <parameter pos:start="7:56" pos:end="7:66"><decl pos:start="7:56" pos:end="7:66"><type pos:start="7:56" pos:end="7:66"><name pos:start="7:56" pos:end="7:58">int</name></type> <name pos:start="7:60" pos:end="7:66">l1_size</name></decl></parameter>,

                              <parameter pos:start="9:31" pos:end="9:46"><decl pos:start="9:31" pos:end="9:46"><type pos:start="9:31" pos:end="9:46"><name pos:start="9:31" pos:end="9:33">int</name></type> <name pos:start="9:35" pos:end="9:46">check_copied</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="165:1">{<block_content pos:start="13:5" pos:end="163:16">

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">BDRVQcowState</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">s</name> <init pos:start="13:22" pos:end="13:33">= <expr pos:start="13:24" pos:end="13:33"><name pos:start="13:24" pos:end="13:33"><name pos:start="13:24" pos:end="13:25">bs</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:63"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">uint64_t</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:22">l1_table</name></decl>, <decl pos:start="15:25" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:14"><modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:33">l2_table</name></decl>, <decl pos:start="15:36" pos:end="15:44"><type ref="prev" pos:start="15:5" pos:end="15:14"/><name pos:start="15:36" pos:end="15:44">l2_offset</name></decl>, <decl pos:start="15:47" pos:end="15:52"><type ref="prev" pos:start="15:5" pos:end="15:14"/><name pos:start="15:47" pos:end="15:52">offset</name></decl>, <decl pos:start="15:55" pos:end="15:62"><type ref="prev" pos:start="15:5" pos:end="15:14"/><name pos:start="15:55" pos:end="15:62">l1_size2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:45"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">l2_size</name></decl>, <decl pos:start="17:18" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:18" pos:end="17:18">i</name></decl>, <decl pos:start="17:21" pos:end="17:21"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:21" pos:end="17:21">j</name></decl>, <decl pos:start="17:24" pos:end="17:34"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:24" pos:end="17:34">nb_csectors</name></decl>, <decl pos:start="17:37" pos:end="17:44"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:37" pos:end="17:44">refcount</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:12">l2_table</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:12">l1_size2</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:22">l1_size</name> <operator pos:start="23:24" pos:end="23:24">*</operator> <sizeof pos:start="23:26" pos:end="23:41">sizeof<argument_list pos:start="23:32" pos:end="23:41">(<argument pos:start="23:33" pos:end="23:40"><expr pos:start="23:33" pos:end="23:40"><name pos:start="23:33" pos:end="23:40">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:45"><expr pos:start="27:5" pos:end="29:44"><call pos:start="27:5" pos:end="29:44"><name pos:start="27:5" pos:end="27:17">inc_refcounts</name><argument_list pos:start="27:18" pos:end="29:44">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">bs</name></expr></argument>, <argument pos:start="27:23" pos:end="27:36"><expr pos:start="27:23" pos:end="27:36"><name pos:start="27:23" pos:end="27:36">refcount_table</name></expr></argument>, <argument pos:start="27:39" pos:end="27:57"><expr pos:start="27:39" pos:end="27:57"><name pos:start="27:39" pos:end="27:57">refcount_table_size</name></expr></argument>,

                  <argument pos:start="29:19" pos:end="29:33"><expr pos:start="29:19" pos:end="29:33"><name pos:start="29:19" pos:end="29:33">l1_table_offset</name></expr></argument>, <argument pos:start="29:36" pos:end="29:43"><expr pos:start="29:36" pos:end="29:43"><name pos:start="29:36" pos:end="29:43">l1_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:12">l1_table</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:36"><name pos:start="33:16" pos:end="33:26">qemu_malloc</name><argument_list pos:start="33:27" pos:end="33:36">(<argument pos:start="33:28" pos:end="33:35"><expr pos:start="33:28" pos:end="33:35"><name pos:start="33:28" pos:end="33:35">l1_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:18"><if pos:start="35:5" pos:end="39:18">if <condition pos:start="35:8" pos:end="37:51">(<expr pos:start="35:9" pos:end="37:50"><call pos:start="35:9" pos:end="37:38"><name pos:start="35:9" pos:end="35:18">bdrv_pread</name><argument_list pos:start="35:19" pos:end="37:38">(<argument pos:start="35:20" pos:end="35:24"><expr pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:20">s</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:24">hd</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:41"><expr pos:start="35:27" pos:end="35:41"><name pos:start="35:27" pos:end="35:41">l1_table_offset</name></expr></argument>,

                   <argument pos:start="37:20" pos:end="37:27"><expr pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:27">l1_table</name></expr></argument>, <argument pos:start="37:30" pos:end="37:37"><expr pos:start="37:30" pos:end="37:37"><name pos:start="37:30" pos:end="37:37">l1_size2</name></expr></argument>)</argument_list></call> <operator pos:start="37:40" pos:end="37:41">!=</operator> <name pos:start="37:43" pos:end="37:50">l1_size2</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <for pos:start="41:5" pos:end="43:35">for<control pos:start="41:8" pos:end="41:31">(<init pos:start="41:9" pos:end="41:14"><expr pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:9">i</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <literal type="number" pos:start="41:13" pos:end="41:13">0</literal></expr>;</init><condition pos:start="41:15" pos:end="41:26"><expr pos:start="41:15" pos:end="41:25"><name pos:start="41:15" pos:end="41:15">i</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <name pos:start="41:19" pos:end="41:25">l1_size</name></expr>;</condition> <incr pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:28">i</name><operator pos:start="41:29" pos:end="41:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:9" pos:end="43:35"><block_content pos:start="43:9" pos:end="43:35">

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><call pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:20">be64_to_cpus</name><argument_list pos:start="43:21" pos:end="43:34">(<argument pos:start="43:22" pos:end="43:33"><expr pos:start="43:22" pos:end="43:33"><operator pos:start="43:22" pos:end="43:22">&amp;</operator><name pos:start="43:23" pos:end="43:33"><name pos:start="43:23" pos:end="43:30">l1_table</name><index pos:start="43:31" pos:end="43:33">[<expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="47:5" pos:end="47:44"><expr pos:start="47:5" pos:end="47:43"><name pos:start="47:5" pos:end="47:11">l2_size</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:24"><name pos:start="47:15" pos:end="47:15">s</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:24">l2_size</name></name> <operator pos:start="47:26" pos:end="47:26">*</operator> <sizeof pos:start="47:28" pos:end="47:43">sizeof<argument_list pos:start="47:34" pos:end="47:43">(<argument pos:start="47:35" pos:end="47:42"><expr pos:start="47:35" pos:end="47:42"><name pos:start="47:35" pos:end="47:42">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:36"><expr pos:start="49:5" pos:end="49:35"><name pos:start="49:5" pos:end="49:12">l2_table</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:35"><name pos:start="49:16" pos:end="49:26">qemu_malloc</name><argument_list pos:start="49:27" pos:end="49:35">(<argument pos:start="49:28" pos:end="49:34"><expr pos:start="49:28" pos:end="49:34"><name pos:start="49:28" pos:end="49:34">l2_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="51:5" pos:end="147:5">for<control pos:start="51:8" pos:end="51:32">(<init pos:start="51:9" pos:end="51:14"><expr pos:start="51:9" pos:end="51:13"><name pos:start="51:9" pos:end="51:9">i</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <literal type="number" pos:start="51:13" pos:end="51:13">0</literal></expr>;</init> <condition pos:start="51:16" pos:end="51:27"><expr pos:start="51:16" pos:end="51:26"><name pos:start="51:16" pos:end="51:16">i</name> <operator pos:start="51:18" pos:end="51:18">&lt;</operator> <name pos:start="51:20" pos:end="51:26">l1_size</name></expr>;</condition> <incr pos:start="51:29" pos:end="51:31"><expr pos:start="51:29" pos:end="51:31"><name pos:start="51:29" pos:end="51:29">i</name><operator pos:start="51:30" pos:end="51:31">++</operator></expr></incr>)</control> <block pos:start="51:34" pos:end="147:5">{<block_content pos:start="53:9" pos:end="145:9">

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:17">l2_offset</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:31"><name pos:start="53:21" pos:end="53:28">l1_table</name><index pos:start="53:29" pos:end="53:31">[<expr pos:start="53:30" pos:end="53:30"><name pos:start="53:30" pos:end="53:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="145:9"><if pos:start="55:9" pos:end="145:9">if <condition pos:start="55:12" pos:end="55:22">(<expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:21">l2_offset</name></expr>)</condition> <block pos:start="55:24" pos:end="145:9">{<block_content pos:start="57:13" pos:end="143:43">

            <if_stmt pos:start="57:13" pos:end="69:13"><if pos:start="57:13" pos:end="69:13">if <condition pos:start="57:16" pos:end="57:29">(<expr pos:start="57:17" pos:end="57:28"><name pos:start="57:17" pos:end="57:28">check_copied</name></expr>)</condition> <block pos:start="57:31" pos:end="69:13">{<block_content pos:start="59:17" pos:end="67:17">

                <expr_stmt pos:start="59:17" pos:end="59:97"><expr pos:start="59:17" pos:end="59:96"><name pos:start="59:17" pos:end="59:24">refcount</name> <operator pos:start="59:26" pos:end="59:26">=</operator> <call pos:start="59:28" pos:end="59:96"><name pos:start="59:28" pos:end="59:39">get_refcount</name><argument_list pos:start="59:40" pos:end="59:96">(<argument pos:start="59:41" pos:end="59:42"><expr pos:start="59:41" pos:end="59:42"><name pos:start="59:41" pos:end="59:42">bs</name></expr></argument>, <argument pos:start="59:45" pos:end="59:95"><expr pos:start="59:45" pos:end="59:95"><operator pos:start="59:45" pos:end="59:45">(</operator><name pos:start="59:46" pos:end="59:54">l2_offset</name> <operator pos:start="59:56" pos:end="59:56">&amp;</operator> <operator pos:start="59:58" pos:end="59:58">~</operator><name pos:start="59:59" pos:end="59:75">QCOW_OFLAG_COPIED</name><operator pos:start="59:76" pos:end="59:76">)</operator> <operator pos:start="59:78" pos:end="59:79">&gt;&gt;</operator> <name pos:start="59:81" pos:end="59:95"><name pos:start="59:81" pos:end="59:81">s</name><operator pos:start="59:82" pos:end="59:83">-&gt;</operator><name pos:start="59:84" pos:end="59:95">cluster_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="61:17" pos:end="67:17"><if pos:start="61:17" pos:end="67:17">if <condition pos:start="61:20" pos:end="61:78">(<expr pos:start="61:21" pos:end="61:77"><operator pos:start="61:21" pos:end="61:21">(</operator><name pos:start="61:22" pos:end="61:29">refcount</name> <operator pos:start="61:31" pos:end="61:32">==</operator> <literal type="number" pos:start="61:34" pos:end="61:34">1</literal><operator pos:start="61:35" pos:end="61:35">)</operator> <operator pos:start="61:37" pos:end="61:38">!=</operator> <operator pos:start="61:40" pos:end="61:40">(</operator><operator pos:start="61:41" pos:end="61:41">(</operator><name pos:start="61:42" pos:end="61:50">l2_offset</name> <operator pos:start="61:52" pos:end="61:52">&amp;</operator> <name pos:start="61:54" pos:end="61:70">QCOW_OFLAG_COPIED</name><operator pos:start="61:71" pos:end="61:71">)</operator> <operator pos:start="61:73" pos:end="61:74">!=</operator> <literal type="number" pos:start="61:76" pos:end="61:76">0</literal><operator pos:start="61:77" pos:end="61:77">)</operator></expr>)</condition> <block pos:start="61:80" pos:end="67:17">{<block_content pos:start="63:21" pos:end="65:48">

                    <expr_stmt pos:start="63:21" pos:end="65:48"><expr pos:start="63:21" pos:end="65:47"><call pos:start="63:21" pos:end="65:47"><name pos:start="63:21" pos:end="63:26">printf</name><argument_list pos:start="63:27" pos:end="65:47">(<argument pos:start="63:28" pos:end="63:77"><expr pos:start="63:28" pos:end="63:77"><literal type="string" pos:start="63:28" pos:end="63:77">"ERROR OFLAG_COPIED: l2_offset=%llx refcount=%d\n"</literal></expr></argument>,

                           <argument pos:start="65:28" pos:end="65:36"><expr pos:start="65:28" pos:end="65:36"><name pos:start="65:28" pos:end="65:36">l2_offset</name></expr></argument>, <argument pos:start="65:39" pos:end="65:46"><expr pos:start="65:39" pos:end="65:46"><name pos:start="65:39" pos:end="65:46">refcount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:44"><expr pos:start="71:13" pos:end="71:43"><name pos:start="71:13" pos:end="71:21">l2_offset</name> <operator pos:start="71:23" pos:end="71:24">&amp;=</operator> <operator pos:start="71:26" pos:end="71:26">~</operator><name pos:start="71:27" pos:end="71:43">QCOW_OFLAG_COPIED</name></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="75:26"><if pos:start="73:13" pos:end="75:26">if <condition pos:start="73:16" pos:end="73:75">(<expr pos:start="73:17" pos:end="73:74"><call pos:start="73:17" pos:end="73:63"><name pos:start="73:17" pos:end="73:26">bdrv_pread</name><argument_list pos:start="73:27" pos:end="73:63">(<argument pos:start="73:28" pos:end="73:32"><expr pos:start="73:28" pos:end="73:32"><name pos:start="73:28" pos:end="73:32"><name pos:start="73:28" pos:end="73:28">s</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:32">hd</name></name></expr></argument>, <argument pos:start="73:35" pos:end="73:43"><expr pos:start="73:35" pos:end="73:43"><name pos:start="73:35" pos:end="73:43">l2_offset</name></expr></argument>, <argument pos:start="73:46" pos:end="73:53"><expr pos:start="73:46" pos:end="73:53"><name pos:start="73:46" pos:end="73:53">l2_table</name></expr></argument>, <argument pos:start="73:56" pos:end="73:62"><expr pos:start="73:56" pos:end="73:62"><name pos:start="73:56" pos:end="73:62">l2_size</name></expr></argument>)</argument_list></call> <operator pos:start="73:65" pos:end="73:66">!=</operator> <name pos:start="73:68" pos:end="73:74">l2_size</name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:26"><block_content pos:start="75:17" pos:end="75:26">

                <goto pos:start="75:17" pos:end="75:26">goto <name pos:start="75:22" pos:end="75:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <for pos:start="77:13" pos:end="135:13">for<control pos:start="77:16" pos:end="77:43">(<init pos:start="77:17" pos:end="77:22"><expr pos:start="77:17" pos:end="77:21"><name pos:start="77:17" pos:end="77:17">j</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <literal type="number" pos:start="77:21" pos:end="77:21">0</literal></expr>;</init> <condition pos:start="77:24" pos:end="77:38"><expr pos:start="77:24" pos:end="77:37"><name pos:start="77:24" pos:end="77:24">j</name> <operator pos:start="77:26" pos:end="77:26">&lt;</operator> <name pos:start="77:28" pos:end="77:37"><name pos:start="77:28" pos:end="77:28">s</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:37">l2_size</name></name></expr>;</condition> <incr pos:start="77:40" pos:end="77:42"><expr pos:start="77:40" pos:end="77:42"><name pos:start="77:40" pos:end="77:40">j</name><operator pos:start="77:41" pos:end="77:42">++</operator></expr></incr>)</control> <block pos:start="77:45" pos:end="135:13">{<block_content pos:start="79:17" pos:end="133:17">

                <expr_stmt pos:start="79:17" pos:end="79:50"><expr pos:start="79:17" pos:end="79:49"><name pos:start="79:17" pos:end="79:22">offset</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <call pos:start="79:26" pos:end="79:49"><name pos:start="79:26" pos:end="79:36">be64_to_cpu</name><argument_list pos:start="79:37" pos:end="79:49">(<argument pos:start="79:38" pos:end="79:48"><expr pos:start="79:38" pos:end="79:48"><name pos:start="79:38" pos:end="79:48"><name pos:start="79:38" pos:end="79:45">l2_table</name><index pos:start="79:46" pos:end="79:48">[<expr pos:start="79:47" pos:end="79:47"><name pos:start="79:47" pos:end="79:47">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="81:17" pos:end="133:17"><if pos:start="81:17" pos:end="133:17">if <condition pos:start="81:20" pos:end="81:32">(<expr pos:start="81:21" pos:end="81:31"><name pos:start="81:21" pos:end="81:26">offset</name> <operator pos:start="81:28" pos:end="81:29">!=</operator> <literal type="number" pos:start="81:31" pos:end="81:31">0</literal></expr>)</condition> <block pos:start="81:34" pos:end="133:17">{<block_content pos:start="83:21" pos:end="131:21">

                    <if_stmt pos:start="83:21" pos:end="131:21"><if pos:start="83:21" pos:end="107:21">if <condition pos:start="83:24" pos:end="83:55">(<expr pos:start="83:25" pos:end="83:54"><name pos:start="83:25" pos:end="83:30">offset</name> <operator pos:start="83:32" pos:end="83:32">&amp;</operator> <name pos:start="83:34" pos:end="83:54">QCOW_OFLAG_COMPRESSED</name></expr>)</condition> <block pos:start="83:57" pos:end="107:21">{<block_content pos:start="85:25" pos:end="105:72">

                        <if_stmt pos:start="85:25" pos:end="93:25"><if pos:start="85:25" pos:end="93:25">if <condition pos:start="85:28" pos:end="85:55">(<expr pos:start="85:29" pos:end="85:54"><name pos:start="85:29" pos:end="85:34">offset</name> <operator pos:start="85:36" pos:end="85:36">&amp;</operator> <name pos:start="85:38" pos:end="85:54">QCOW_OFLAG_COPIED</name></expr>)</condition> <block pos:start="85:57" pos:end="93:25">{<block_content pos:start="87:29" pos:end="91:57">

                            <expr_stmt pos:start="87:29" pos:end="89:62"><expr pos:start="87:29" pos:end="89:61"><call pos:start="87:29" pos:end="89:61"><name pos:start="87:29" pos:end="87:34">printf</name><argument_list pos:start="87:35" pos:end="89:61">(<argument pos:start="87:36" pos:end="87:113"><expr pos:start="87:36" pos:end="87:113"><literal type="string" pos:start="87:36" pos:end="87:113">"ERROR: cluster %lld: copied flag must never be set for compressed clusters\n"</literal></expr></argument>,

                                   <argument pos:start="89:36" pos:end="89:60"><expr pos:start="89:36" pos:end="89:60"><name pos:start="89:36" pos:end="89:41">offset</name> <operator pos:start="89:43" pos:end="89:44">&gt;&gt;</operator> <name pos:start="89:46" pos:end="89:60"><name pos:start="89:46" pos:end="89:46">s</name><operator pos:start="89:47" pos:end="89:48">-&gt;</operator><name pos:start="89:49" pos:end="89:60">cluster_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="91:29" pos:end="91:57"><expr pos:start="91:29" pos:end="91:56"><name pos:start="91:29" pos:end="91:34">offset</name> <operator pos:start="91:36" pos:end="91:37">&amp;=</operator> <operator pos:start="91:39" pos:end="91:39">~</operator><name pos:start="91:40" pos:end="91:56">QCOW_OFLAG_COPIED</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="95:25" pos:end="97:58"><expr pos:start="95:25" pos:end="97:57"><name pos:start="95:25" pos:end="95:35">nb_csectors</name> <operator pos:start="95:37" pos:end="95:37">=</operator> <operator pos:start="95:39" pos:end="95:39">(</operator><operator pos:start="95:40" pos:end="95:40">(</operator><name pos:start="95:41" pos:end="95:46">offset</name> <operator pos:start="95:48" pos:end="95:49">&gt;&gt;</operator> <name pos:start="95:51" pos:end="95:64"><name pos:start="95:51" pos:end="95:51">s</name><operator pos:start="95:52" pos:end="95:53">-&gt;</operator><name pos:start="95:54" pos:end="95:64">csize_shift</name></name><operator pos:start="95:65" pos:end="95:65">)</operator> <operator pos:start="95:67" pos:end="95:67">&amp;</operator>

                                       <name pos:start="97:40" pos:end="97:52"><name pos:start="97:40" pos:end="97:40">s</name><operator pos:start="97:41" pos:end="97:42">-&gt;</operator><name pos:start="97:43" pos:end="97:52">csize_mask</name></name><operator pos:start="97:53" pos:end="97:53">)</operator> <operator pos:start="97:55" pos:end="97:55">+</operator> <literal type="number" pos:start="97:57" pos:end="97:57">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="99:25" pos:end="99:57"><expr pos:start="99:25" pos:end="99:56"><name pos:start="99:25" pos:end="99:30">offset</name> <operator pos:start="99:32" pos:end="99:33">&amp;=</operator> <name pos:start="99:35" pos:end="99:56"><name pos:start="99:35" pos:end="99:35">s</name><operator pos:start="99:36" pos:end="99:37">-&gt;</operator><name pos:start="99:38" pos:end="99:56">cluster_offset_mask</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="101:25" pos:end="105:72"><expr pos:start="101:25" pos:end="105:71"><call pos:start="101:25" pos:end="105:71"><name pos:start="101:25" pos:end="101:37">inc_refcounts</name><argument_list pos:start="101:38" pos:end="105:71">(<argument pos:start="101:39" pos:end="101:40"><expr pos:start="101:39" pos:end="101:40"><name pos:start="101:39" pos:end="101:40">bs</name></expr></argument>, <argument pos:start="101:43" pos:end="101:56"><expr pos:start="101:43" pos:end="101:56"><name pos:start="101:43" pos:end="101:56">refcount_table</name></expr></argument>,

                                      <argument pos:start="103:39" pos:end="103:57"><expr pos:start="103:39" pos:end="103:57"><name pos:start="103:39" pos:end="103:57">refcount_table_size</name></expr></argument>,

                                      <argument pos:start="105:39" pos:end="105:51"><expr pos:start="105:39" pos:end="105:51"><name pos:start="105:39" pos:end="105:44">offset</name> <operator pos:start="105:46" pos:end="105:46">&amp;</operator> <operator pos:start="105:48" pos:end="105:48">~</operator><literal type="number" pos:start="105:49" pos:end="105:51">511</literal></expr></argument>, <argument pos:start="105:54" pos:end="105:70"><expr pos:start="105:54" pos:end="105:70"><name pos:start="105:54" pos:end="105:64">nb_csectors</name> <operator pos:start="105:66" pos:end="105:66">*</operator> <literal type="number" pos:start="105:68" pos:end="105:70">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="107:23" pos:end="131:21">else <block pos:start="107:28" pos:end="131:21">{<block_content pos:start="109:25" pos:end="129:63">

                        <if_stmt pos:start="109:25" pos:end="121:25"><if pos:start="109:25" pos:end="121:25">if <condition pos:start="109:28" pos:end="109:41">(<expr pos:start="109:29" pos:end="109:40"><name pos:start="109:29" pos:end="109:40">check_copied</name></expr>)</condition> <block pos:start="109:43" pos:end="121:25">{<block_content pos:start="111:29" pos:end="119:29">

                            <expr_stmt pos:start="111:29" pos:end="111:106"><expr pos:start="111:29" pos:end="111:105"><name pos:start="111:29" pos:end="111:36">refcount</name> <operator pos:start="111:38" pos:end="111:38">=</operator> <call pos:start="111:40" pos:end="111:105"><name pos:start="111:40" pos:end="111:51">get_refcount</name><argument_list pos:start="111:52" pos:end="111:105">(<argument pos:start="111:53" pos:end="111:54"><expr pos:start="111:53" pos:end="111:54"><name pos:start="111:53" pos:end="111:54">bs</name></expr></argument>, <argument pos:start="111:57" pos:end="111:104"><expr pos:start="111:57" pos:end="111:104"><operator pos:start="111:57" pos:end="111:57">(</operator><name pos:start="111:58" pos:end="111:63">offset</name> <operator pos:start="111:65" pos:end="111:65">&amp;</operator> <operator pos:start="111:67" pos:end="111:67">~</operator><name pos:start="111:68" pos:end="111:84">QCOW_OFLAG_COPIED</name><operator pos:start="111:85" pos:end="111:85">)</operator> <operator pos:start="111:87" pos:end="111:88">&gt;&gt;</operator> <name pos:start="111:90" pos:end="111:104"><name pos:start="111:90" pos:end="111:90">s</name><operator pos:start="111:91" pos:end="111:92">-&gt;</operator><name pos:start="111:93" pos:end="111:104">cluster_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="113:29" pos:end="119:29"><if pos:start="113:29" pos:end="119:29">if <condition pos:start="113:32" pos:end="113:87">(<expr pos:start="113:33" pos:end="113:86"><operator pos:start="113:33" pos:end="113:33">(</operator><name pos:start="113:34" pos:end="113:41">refcount</name> <operator pos:start="113:43" pos:end="113:44">==</operator> <literal type="number" pos:start="113:46" pos:end="113:46">1</literal><operator pos:start="113:47" pos:end="113:47">)</operator> <operator pos:start="113:49" pos:end="113:50">!=</operator> <operator pos:start="113:52" pos:end="113:52">(</operator><operator pos:start="113:53" pos:end="113:53">(</operator><name pos:start="113:54" pos:end="113:59">offset</name> <operator pos:start="113:61" pos:end="113:61">&amp;</operator> <name pos:start="113:63" pos:end="113:79">QCOW_OFLAG_COPIED</name><operator pos:start="113:80" pos:end="113:80">)</operator> <operator pos:start="113:82" pos:end="113:83">!=</operator> <literal type="number" pos:start="113:85" pos:end="113:85">0</literal><operator pos:start="113:86" pos:end="113:86">)</operator></expr>)</condition> <block pos:start="113:89" pos:end="119:29">{<block_content pos:start="115:33" pos:end="117:57">

                                <expr_stmt pos:start="115:33" pos:end="117:57"><expr pos:start="115:33" pos:end="117:56"><call pos:start="115:33" pos:end="117:56"><name pos:start="115:33" pos:end="115:38">printf</name><argument_list pos:start="115:39" pos:end="117:56">(<argument pos:start="115:40" pos:end="115:86"><expr pos:start="115:40" pos:end="115:86"><literal type="string" pos:start="115:40" pos:end="115:86">"ERROR OFLAG_COPIED: offset=%llx refcount=%d\n"</literal></expr></argument>,

                                       <argument pos:start="117:40" pos:end="117:45"><expr pos:start="117:40" pos:end="117:45"><name pos:start="117:40" pos:end="117:45">offset</name></expr></argument>, <argument pos:start="117:48" pos:end="117:55"><expr pos:start="117:48" pos:end="117:55"><name pos:start="117:48" pos:end="117:55">refcount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="123:25" pos:end="123:53"><expr pos:start="123:25" pos:end="123:52"><name pos:start="123:25" pos:end="123:30">offset</name> <operator pos:start="123:32" pos:end="123:33">&amp;=</operator> <operator pos:start="123:35" pos:end="123:35">~</operator><name pos:start="123:36" pos:end="123:52">QCOW_OFLAG_COPIED</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="125:25" pos:end="129:63"><expr pos:start="125:25" pos:end="129:62"><call pos:start="125:25" pos:end="129:62"><name pos:start="125:25" pos:end="125:37">inc_refcounts</name><argument_list pos:start="125:38" pos:end="129:62">(<argument pos:start="125:39" pos:end="125:40"><expr pos:start="125:39" pos:end="125:40"><name pos:start="125:39" pos:end="125:40">bs</name></expr></argument>, <argument pos:start="125:43" pos:end="125:56"><expr pos:start="125:43" pos:end="125:56"><name pos:start="125:43" pos:end="125:56">refcount_table</name></expr></argument>,

                                      <argument pos:start="127:39" pos:end="127:57"><expr pos:start="127:39" pos:end="127:57"><name pos:start="127:39" pos:end="127:57">refcount_table_size</name></expr></argument>,

                                      <argument pos:start="129:39" pos:end="129:44"><expr pos:start="129:39" pos:end="129:44"><name pos:start="129:39" pos:end="129:44">offset</name></expr></argument>, <argument pos:start="129:47" pos:end="129:61"><expr pos:start="129:47" pos:end="129:61"><name pos:start="129:47" pos:end="129:61"><name pos:start="129:47" pos:end="129:47">s</name><operator pos:start="129:48" pos:end="129:49">-&gt;</operator><name pos:start="129:50" pos:end="129:61">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="137:13" pos:end="143:43"><expr pos:start="137:13" pos:end="143:42"><call pos:start="137:13" pos:end="143:42"><name pos:start="137:13" pos:end="137:25">inc_refcounts</name><argument_list pos:start="137:26" pos:end="143:42">(<argument pos:start="137:27" pos:end="137:28"><expr pos:start="137:27" pos:end="137:28"><name pos:start="137:27" pos:end="137:28">bs</name></expr></argument>, <argument pos:start="137:31" pos:end="137:44"><expr pos:start="137:31" pos:end="137:44"><name pos:start="137:31" pos:end="137:44">refcount_table</name></expr></argument>,

                          <argument pos:start="139:27" pos:end="139:45"><expr pos:start="139:27" pos:end="139:45"><name pos:start="139:27" pos:end="139:45">refcount_table_size</name></expr></argument>,

                          <argument pos:start="141:27" pos:end="141:35"><expr pos:start="141:27" pos:end="141:35"><name pos:start="141:27" pos:end="141:35">l2_offset</name></expr></argument>,

                          <argument pos:start="143:27" pos:end="143:41"><expr pos:start="143:27" pos:end="143:41"><name pos:start="143:27" pos:end="143:41"><name pos:start="143:27" pos:end="143:27">s</name><operator pos:start="143:28" pos:end="143:29">-&gt;</operator><name pos:start="143:30" pos:end="143:41">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="149:5" pos:end="149:24"><expr pos:start="149:5" pos:end="149:23"><call pos:start="149:5" pos:end="149:23"><name pos:start="149:5" pos:end="149:13">qemu_free</name><argument_list pos:start="149:14" pos:end="149:23">(<argument pos:start="149:15" pos:end="149:22"><expr pos:start="149:15" pos:end="149:22"><name pos:start="149:15" pos:end="149:22">l1_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:24"><expr pos:start="151:5" pos:end="151:23"><call pos:start="151:5" pos:end="151:23"><name pos:start="151:5" pos:end="151:13">qemu_free</name><argument_list pos:start="151:14" pos:end="151:23">(<argument pos:start="151:15" pos:end="151:22"><expr pos:start="151:15" pos:end="151:22"><name pos:start="151:15" pos:end="151:22">l2_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="153:5" pos:end="153:13">return <expr pos:start="153:12" pos:end="153:12"><literal type="number" pos:start="153:12" pos:end="153:12">0</literal></expr>;</return>

 <label pos:start="155:2" pos:end="155:6"><name pos:start="155:2" pos:end="155:5">fail</name>:</label>

    <expr_stmt pos:start="157:5" pos:end="157:55"><expr pos:start="157:5" pos:end="157:54"><call pos:start="157:5" pos:end="157:54"><name pos:start="157:5" pos:end="157:10">printf</name><argument_list pos:start="157:11" pos:end="157:54">(<argument pos:start="157:12" pos:end="157:53"><expr pos:start="157:12" pos:end="157:53"><literal type="string" pos:start="157:12" pos:end="157:53">"ERROR: I/O error in check_refcounts_l1\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:24"><expr pos:start="159:5" pos:end="159:23"><call pos:start="159:5" pos:end="159:23"><name pos:start="159:5" pos:end="159:13">qemu_free</name><argument_list pos:start="159:14" pos:end="159:23">(<argument pos:start="159:15" pos:end="159:22"><expr pos:start="159:15" pos:end="159:22"><name pos:start="159:15" pos:end="159:22">l1_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:24"><expr pos:start="161:5" pos:end="161:23"><call pos:start="161:5" pos:end="161:23"><name pos:start="161:5" pos:end="161:13">qemu_free</name><argument_list pos:start="161:14" pos:end="161:23">(<argument pos:start="161:15" pos:end="161:22"><expr pos:start="161:15" pos:end="161:22"><name pos:start="161:15" pos:end="161:22">l2_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="163:5" pos:end="163:16">return <expr pos:start="163:12" pos:end="163:15"><operator pos:start="163:12" pos:end="163:12">-</operator><name pos:start="163:13" pos:end="163:15">EIO</name></expr>;</return>

</block_content>}</block></function>
</unit>
