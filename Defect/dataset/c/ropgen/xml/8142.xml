<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8142.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">s390_sclp_extint</name><parameter_list pos:start="1:22" pos:end="1:36">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:30"><name pos:start="1:23" pos:end="1:30">uint32_t</name></type> <name pos:start="1:32" pos:end="1:35">parm</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:5">

    <if_stmt pos:start="5:5" pos:end="17:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:22">(<expr pos:start="5:9" pos:end="5:21"><call pos:start="5:9" pos:end="5:21"><name pos:start="5:9" pos:end="5:19">kvm_enabled</name><argument_list pos:start="5:20" pos:end="5:21">()</argument_list></call></expr>)</condition> <block pos:start="5:24" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:41">

        <expr_stmt pos:start="7:9" pos:end="7:41"><expr pos:start="7:9" pos:end="7:40"><call pos:start="7:9" pos:end="7:40"><name pos:start="7:9" pos:end="7:34">kvm_s390_service_interrupt</name><argument_list pos:start="7:35" pos:end="7:40">(<argument pos:start="7:36" pos:end="7:39"><expr pos:start="7:36" pos:end="7:39"><name pos:start="7:36" pos:end="7:39">parm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="9:7" pos:end="17:5">else <block pos:start="9:12" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:56">

        <decl_stmt pos:start="11:9" pos:end="11:52"><decl pos:start="11:9" pos:end="11:51"><type pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:15">S390CPU</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:26">dummy_cpu</name> <init pos:start="11:28" pos:end="11:51">= <expr pos:start="11:30" pos:end="11:51"><call pos:start="11:30" pos:end="11:51"><name pos:start="11:30" pos:end="11:48">s390_cpu_addr2state</name><argument_list pos:start="11:49" pos:end="11:51">(<argument pos:start="11:50" pos:end="11:50"><expr pos:start="11:50" pos:end="11:50"><literal type="number" pos:start="11:50" pos:end="11:50">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="15:9" pos:end="15:56"><expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:22">cpu_inject_ext</name><argument_list pos:start="15:23" pos:end="15:55">(<argument pos:start="15:24" pos:end="15:32"><expr pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:32">dummy_cpu</name></expr></argument>, <argument pos:start="15:35" pos:end="15:45"><expr pos:start="15:35" pos:end="15:45"><name pos:start="15:35" pos:end="15:45">EXT_SERVICE</name></expr></argument>, <argument pos:start="15:48" pos:end="15:51"><expr pos:start="15:48" pos:end="15:51"><name pos:start="15:48" pos:end="15:51">parm</name></expr></argument>, <argument pos:start="15:54" pos:end="15:54"><expr pos:start="15:54" pos:end="15:54"><literal type="number" pos:start="15:54" pos:end="15:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
