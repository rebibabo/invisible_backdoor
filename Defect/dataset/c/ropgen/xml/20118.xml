<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20118.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mov_read_default</name><parameter_list pos:start="1:28" pos:end="1:73">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:38">MOVContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">c</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><name pos:start="1:44" pos:end="1:54">AVIOContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">pb</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:67">MOVAtom</name></type> <name pos:start="1:69" pos:end="1:72">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="135:1">{<block_content pos:start="5:5" pos:end="133:13">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:22">total_size</name> <init pos:start="5:24" pos:end="5:26">= <expr pos:start="5:26" pos:end="5:26"><literal type="number" pos:start="5:26" pos:end="5:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">MOVAtom</name></type> <name pos:start="7:13" pos:end="7:13">a</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:30"><if pos:start="13:5" pos:end="15:30">if <condition pos:start="13:8" pos:end="13:22">(<expr pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:12">atom</name><operator pos:start="13:13" pos:end="13:13">.</operator><name pos:start="13:14" pos:end="13:17">size</name></name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:30"><block_content pos:start="15:9" pos:end="15:30">

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:12">atom</name><operator pos:start="15:13" pos:end="15:13">.</operator><name pos:start="15:14" pos:end="15:17">size</name></name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:29">INT64_MAX</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <while pos:start="17:5" pos:end="123:5">while <condition pos:start="17:11" pos:end="17:56">(<expr pos:start="17:12" pos:end="17:55"><name pos:start="17:12" pos:end="17:21">total_size</name> <operator pos:start="17:23" pos:end="17:23">+</operator> <literal type="number" pos:start="17:25" pos:end="17:25">8</literal> <operator pos:start="17:27" pos:end="17:28">&lt;=</operator> <name pos:start="17:30" pos:end="17:38"><name pos:start="17:30" pos:end="17:33">atom</name><operator pos:start="17:34" pos:end="17:34">.</operator><name pos:start="17:35" pos:end="17:38">size</name></name> <operator pos:start="17:40" pos:end="17:41">&amp;&amp;</operator> <operator pos:start="17:43" pos:end="17:43">!</operator><call pos:start="17:44" pos:end="17:55"><name pos:start="17:44" pos:end="17:51">url_feof</name><argument_list pos:start="17:52" pos:end="17:55">(<argument pos:start="17:53" pos:end="17:54"><expr pos:start="17:53" pos:end="17:54"><name pos:start="17:53" pos:end="17:54">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:58" pos:end="123:5">{<block_content pos:start="19:9" pos:end="121:29">

        <function_decl pos:start="19:9" pos:end="19:64"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> (<modifier pos:start="19:14" pos:end="19:14">*</modifier><name pos:start="19:15" pos:end="19:19">parse</name>)<parameter_list pos:start="19:21" pos:end="19:56">(<parameter pos:start="19:22" pos:end="19:32"><decl pos:start="19:22" pos:end="19:32"><type pos:start="19:22" pos:end="19:32"><name pos:start="19:22" pos:end="19:31">MOVContext</name><modifier pos:start="19:32" pos:end="19:32">*</modifier></type></decl></parameter>, <parameter pos:start="19:35" pos:end="19:46"><decl pos:start="19:35" pos:end="19:46"><type pos:start="19:35" pos:end="19:46"><name pos:start="19:35" pos:end="19:45">AVIOContext</name><modifier pos:start="19:46" pos:end="19:46">*</modifier></type></decl></parameter>, <parameter pos:start="19:49" pos:end="19:55"><decl pos:start="19:49" pos:end="19:55"><type pos:start="19:49" pos:end="19:55"><name pos:start="19:49" pos:end="19:55">MOVAtom</name></type></decl></parameter>)</parameter_list> <init pos:start="19:58" pos:end="19:63">= <expr pos:start="19:60" pos:end="19:63"><name pos:start="19:60" pos:end="19:63">NULL</name></expr></init>;</function_decl>

        <expr_stmt pos:start="21:9" pos:end="21:27"><expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:9">a</name><operator pos:start="21:10" pos:end="21:10">.</operator><name pos:start="21:11" pos:end="21:14">size</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:26"><name pos:start="21:18" pos:end="21:21">atom</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:26">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:17"><expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:9">a</name><operator pos:start="23:10" pos:end="23:10">.</operator><name pos:start="23:11" pos:end="23:14">type</name></name><operator pos:start="23:15" pos:end="23:15">=</operator><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="41:9"><if pos:start="25:9" pos:end="41:9">if <condition pos:start="25:12" pos:end="25:27">(<expr pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:16">atom</name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:21">size</name></name> <operator pos:start="25:23" pos:end="25:24">&gt;=</operator> <literal type="number" pos:start="25:26" pos:end="25:26">8</literal></expr>)</condition> <block pos:start="25:29" pos:end="41:9">{<block_content pos:start="27:13" pos:end="39:13">

            <expr_stmt pos:start="27:13" pos:end="27:35"><expr pos:start="27:13" pos:end="27:34"><name pos:start="27:13" pos:end="27:18"><name pos:start="27:13" pos:end="27:13">a</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:18">size</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:34"><name pos:start="27:22" pos:end="27:30">avio_rb32</name><argument_list pos:start="27:31" pos:end="27:34">(<argument pos:start="27:32" pos:end="27:33"><expr pos:start="27:32" pos:end="27:33"><name pos:start="27:32" pos:end="27:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:35"><expr pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:13">a</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:18">type</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <call pos:start="29:22" pos:end="29:34"><name pos:start="29:22" pos:end="29:30">avio_rl32</name><argument_list pos:start="29:31" pos:end="29:34">(<argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><name pos:start="29:32" pos:end="29:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:28"><expr pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:22">total_size</name> <operator pos:start="31:24" pos:end="31:25">+=</operator> <literal type="number" pos:start="31:27" pos:end="31:27">8</literal></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="39:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:28">(<expr pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:17">a</name><operator pos:start="33:18" pos:end="33:18">.</operator><name pos:start="33:19" pos:end="33:22">size</name></name> <operator pos:start="33:24" pos:end="33:25">==</operator> <literal type="number" pos:start="33:27" pos:end="33:27">1</literal></expr>)</condition> <block pos:start="33:30" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:32"> <comment type="block" pos:start="33:32" pos:end="33:57">/* 64 bit extended size */</comment>

                <expr_stmt pos:start="35:17" pos:end="35:43"><expr pos:start="35:17" pos:end="35:42"><name pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:17">a</name><operator pos:start="35:18" pos:end="35:18">.</operator><name pos:start="35:19" pos:end="35:22">size</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="35:38"><name pos:start="35:26" pos:end="35:34">avio_rb64</name><argument_list pos:start="35:35" pos:end="35:38">(<argument pos:start="35:36" pos:end="35:37"><expr pos:start="35:36" pos:end="35:37"><name pos:start="35:36" pos:end="35:37">pb</name></expr></argument>)</argument_list></call> <operator pos:start="35:40" pos:end="35:40">-</operator> <literal type="number" pos:start="35:42" pos:end="35:42">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:32"><expr pos:start="37:17" pos:end="37:31"><name pos:start="37:17" pos:end="37:26">total_size</name> <operator pos:start="37:28" pos:end="37:29">+=</operator> <literal type="number" pos:start="37:31" pos:end="37:31">8</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="45:90"><expr pos:start="43:9" pos:end="45:89"><call pos:start="43:9" pos:end="45:89"><name pos:start="43:9" pos:end="43:15">av_dlog</name><argument_list pos:start="43:16" pos:end="45:89">(<argument pos:start="43:17" pos:end="43:21"><expr pos:start="43:17" pos:end="43:21"><name pos:start="43:17" pos:end="43:21"><name pos:start="43:17" pos:end="43:17">c</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:21">fc</name></name></expr></argument>, <argument pos:start="43:24" pos:end="43:92"><expr pos:start="43:24" pos:end="43:92"><literal type="string" pos:start="43:24" pos:end="43:62">"type: %08x '%.4s' parent:'%.4s' sz: %"</literal><name pos:start="43:63" pos:end="43:68">PRId64</name><literal type="string" pos:start="43:69" pos:end="43:72">" %"</literal><name pos:start="43:73" pos:end="43:78">PRId64</name><literal type="string" pos:start="43:79" pos:end="43:82">" %"</literal><name pos:start="43:83" pos:end="43:88">PRId64</name><literal type="string" pos:start="43:89" pos:end="43:92">"\n"</literal></expr></argument>,

                <argument pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:17">a</name><operator pos:start="45:18" pos:end="45:18">.</operator><name pos:start="45:19" pos:end="45:22">type</name></name></expr></argument>, <argument pos:start="45:25" pos:end="45:38"><expr pos:start="45:25" pos:end="45:38"><operator pos:start="45:25" pos:end="45:25">(</operator><name pos:start="45:26" pos:end="45:29">char</name><operator pos:start="45:30" pos:end="45:30">*</operator><operator pos:start="45:31" pos:end="45:31">)</operator><operator pos:start="45:32" pos:end="45:32">&amp;</operator><name pos:start="45:33" pos:end="45:38"><name pos:start="45:33" pos:end="45:33">a</name><operator pos:start="45:34" pos:end="45:34">.</operator><name pos:start="45:35" pos:end="45:38">type</name></name></expr></argument>, <argument pos:start="45:41" pos:end="45:57"><expr pos:start="45:41" pos:end="45:57"><operator pos:start="45:41" pos:end="45:41">(</operator><name pos:start="45:42" pos:end="45:45">char</name><operator pos:start="45:46" pos:end="45:46">*</operator><operator pos:start="45:47" pos:end="45:47">)</operator><operator pos:start="45:48" pos:end="45:48">&amp;</operator><name pos:start="45:49" pos:end="45:57"><name pos:start="45:49" pos:end="45:52">atom</name><operator pos:start="45:53" pos:end="45:53">.</operator><name pos:start="45:54" pos:end="45:57">type</name></name></expr></argument>, <argument pos:start="45:60" pos:end="45:65"><expr pos:start="45:60" pos:end="45:65"><name pos:start="45:60" pos:end="45:65"><name pos:start="45:60" pos:end="45:60">a</name><operator pos:start="45:61" pos:end="45:61">.</operator><name pos:start="45:62" pos:end="45:65">size</name></name></expr></argument>, <argument pos:start="45:68" pos:end="45:77"><expr pos:start="45:68" pos:end="45:77"><name pos:start="45:68" pos:end="45:77">total_size</name></expr></argument>, <argument pos:start="45:80" pos:end="45:88"><expr pos:start="45:80" pos:end="45:88"><name pos:start="45:80" pos:end="45:88"><name pos:start="45:80" pos:end="45:83">atom</name><operator pos:start="45:84" pos:end="45:84">.</operator><name pos:start="45:85" pos:end="45:88">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:24">(<expr pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:13">a</name><operator pos:start="47:14" pos:end="47:14">.</operator><name pos:start="47:15" pos:end="47:18">size</name></name> <operator pos:start="47:20" pos:end="47:21">==</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>)</condition> <block pos:start="47:26" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:22">

            <expr_stmt pos:start="49:13" pos:end="49:48"><expr pos:start="49:13" pos:end="49:47"><name pos:start="49:13" pos:end="49:18"><name pos:start="49:13" pos:end="49:13">a</name><operator pos:start="49:14" pos:end="49:14">.</operator><name pos:start="49:15" pos:end="49:18">size</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:30"><name pos:start="49:22" pos:end="49:25">atom</name><operator pos:start="49:26" pos:end="49:26">.</operator><name pos:start="49:27" pos:end="49:30">size</name></name> <operator pos:start="49:32" pos:end="49:32">-</operator> <name pos:start="49:34" pos:end="49:43">total_size</name> <operator pos:start="49:45" pos:end="49:45">+</operator> <literal type="number" pos:start="49:47" pos:end="49:47">8</literal></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="53:22"><if pos:start="51:13" pos:end="53:22">if <condition pos:start="51:16" pos:end="51:28">(<expr pos:start="51:17" pos:end="51:27"><name pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:17">a</name><operator pos:start="51:18" pos:end="51:18">.</operator><name pos:start="51:19" pos:end="51:22">size</name></name> <operator pos:start="51:24" pos:end="51:25">&lt;=</operator> <literal type="number" pos:start="51:27" pos:end="51:27">8</literal></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:22"><block_content pos:start="53:17" pos:end="53:22">

                <break pos:start="53:17" pos:end="53:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:20"><expr pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:9">a</name><operator pos:start="57:10" pos:end="57:10">.</operator><name pos:start="57:11" pos:end="57:14">size</name></name> <operator pos:start="57:16" pos:end="57:17">-=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:18"><if pos:start="59:9" pos:end="61:18">if <condition pos:start="59:12" pos:end="59:23">(<expr pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:18"><name pos:start="59:13" pos:end="59:13">a</name><operator pos:start="59:14" pos:end="59:14">.</operator><name pos:start="59:15" pos:end="59:18">size</name></name> <operator pos:start="59:20" pos:end="59:20">&lt;</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:18"><block_content pos:start="61:13" pos:end="61:18">

            <break pos:start="61:13" pos:end="61:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:55"><expr pos:start="63:9" pos:end="63:54"><name pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:9">a</name><operator pos:start="63:10" pos:end="63:10">.</operator><name pos:start="63:11" pos:end="63:14">size</name></name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:54"><name pos:start="63:18" pos:end="63:22">FFMIN</name><argument_list pos:start="63:23" pos:end="63:54">(<argument pos:start="63:24" pos:end="63:29"><expr pos:start="63:24" pos:end="63:29"><name pos:start="63:24" pos:end="63:29"><name pos:start="63:24" pos:end="63:24">a</name><operator pos:start="63:25" pos:end="63:25">.</operator><name pos:start="63:26" pos:end="63:29">size</name></name></expr></argument>, <argument pos:start="63:32" pos:end="63:53"><expr pos:start="63:32" pos:end="63:53"><name pos:start="63:32" pos:end="63:40"><name pos:start="63:32" pos:end="63:35">atom</name><operator pos:start="63:36" pos:end="63:36">.</operator><name pos:start="63:37" pos:end="63:40">size</name></name> <operator pos:start="63:42" pos:end="63:42">-</operator> <name pos:start="63:44" pos:end="63:53">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="67:9" pos:end="75:13">for <control pos:start="67:13" pos:end="67:57">(<init pos:start="67:14" pos:end="67:19"><expr pos:start="67:14" pos:end="67:18"><name pos:start="67:14" pos:end="67:14">i</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>;</init> <condition pos:start="67:21" pos:end="67:52"><expr pos:start="67:21" pos:end="67:51"><name pos:start="67:21" pos:end="67:46"><name pos:start="67:21" pos:end="67:43">mov_default_parse_table</name><index pos:start="67:44" pos:end="67:46">[<expr pos:start="67:45" pos:end="67:45"><name pos:start="67:45" pos:end="67:45">i</name></expr>]</index></name><operator pos:start="67:47" pos:end="67:47">.</operator><name pos:start="67:48" pos:end="67:51">type</name></expr>;</condition> <incr pos:start="67:54" pos:end="67:56"><expr pos:start="67:54" pos:end="67:56"><name pos:start="67:54" pos:end="67:54">i</name><operator pos:start="67:55" pos:end="67:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:13" pos:end="75:13"><block_content pos:start="69:13" pos:end="75:13">

            <if_stmt pos:start="69:13" pos:end="75:13"><if pos:start="69:13" pos:end="75:13">if <condition pos:start="69:16" pos:end="69:58">(<expr pos:start="69:17" pos:end="69:57"><name pos:start="69:17" pos:end="69:42"><name pos:start="69:17" pos:end="69:39">mov_default_parse_table</name><index pos:start="69:40" pos:end="69:42">[<expr pos:start="69:41" pos:end="69:41"><name pos:start="69:41" pos:end="69:41">i</name></expr>]</index></name><operator pos:start="69:43" pos:end="69:43">.</operator><name pos:start="69:44" pos:end="69:47">type</name> <operator pos:start="69:49" pos:end="69:50">==</operator> <name pos:start="69:52" pos:end="69:57"><name pos:start="69:52" pos:end="69:52">a</name><operator pos:start="69:53" pos:end="69:53">.</operator><name pos:start="69:54" pos:end="69:57">type</name></name></expr>)</condition> <block pos:start="69:60" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:22">

                <expr_stmt pos:start="71:17" pos:end="71:57"><expr pos:start="71:17" pos:end="71:56"><name pos:start="71:17" pos:end="71:21">parse</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <name pos:start="71:25" pos:end="71:50"><name pos:start="71:25" pos:end="71:47">mov_default_parse_table</name><index pos:start="71:48" pos:end="71:50">[<expr pos:start="71:49" pos:end="71:49"><name pos:start="71:49" pos:end="71:49">i</name></expr>]</index></name><operator pos:start="71:51" pos:end="71:51">.</operator><name pos:start="71:52" pos:end="71:56">parse</name></expr>;</expr_stmt>

                <break pos:start="73:17" pos:end="73:22">break;</break>

            </block_content>}</block></if></if_stmt></block_content></block></for>



        <comment type="line" pos:start="79:9" pos:end="79:33">// container is user data</comment>

        <if_stmt pos:start="81:9" pos:end="85:41"><if pos:start="81:9" pos:end="85:41">if <condition pos:start="81:12" pos:end="83:60">(<expr pos:start="81:13" pos:end="83:59"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:18">parse</name> <operator pos:start="81:20" pos:end="81:21">&amp;&amp;</operator> <operator pos:start="81:23" pos:end="81:23">(</operator><name pos:start="81:24" pos:end="81:32"><name pos:start="81:24" pos:end="81:27">atom</name><operator pos:start="81:28" pos:end="81:28">.</operator><name pos:start="81:29" pos:end="81:32">type</name></name> <operator pos:start="81:34" pos:end="81:35">==</operator> <call pos:start="81:37" pos:end="81:58"><name pos:start="81:37" pos:end="81:41">MKTAG</name><argument_list pos:start="81:42" pos:end="81:58">(<argument pos:start="81:43" pos:end="81:45"><expr pos:start="81:43" pos:end="81:45"><literal type="char" pos:start="81:43" pos:end="81:45">'u'</literal></expr></argument>,<argument pos:start="81:47" pos:end="81:49"><expr pos:start="81:47" pos:end="81:49"><literal type="char" pos:start="81:47" pos:end="81:49">'d'</literal></expr></argument>,<argument pos:start="81:51" pos:end="81:53"><expr pos:start="81:51" pos:end="81:53"><literal type="char" pos:start="81:51" pos:end="81:53">'t'</literal></expr></argument>,<argument pos:start="81:55" pos:end="81:57"><expr pos:start="81:55" pos:end="81:57"><literal type="char" pos:start="81:55" pos:end="81:57">'a'</literal></expr></argument>)</argument_list></call> <operator pos:start="81:60" pos:end="81:61">||</operator>

                       <name pos:start="83:24" pos:end="83:32"><name pos:start="83:24" pos:end="83:27">atom</name><operator pos:start="83:28" pos:end="83:28">.</operator><name pos:start="83:29" pos:end="83:32">type</name></name> <operator pos:start="83:34" pos:end="83:35">==</operator> <call pos:start="83:37" pos:end="83:58"><name pos:start="83:37" pos:end="83:41">MKTAG</name><argument_list pos:start="83:42" pos:end="83:58">(<argument pos:start="83:43" pos:end="83:45"><expr pos:start="83:43" pos:end="83:45"><literal type="char" pos:start="83:43" pos:end="83:45">'i'</literal></expr></argument>,<argument pos:start="83:47" pos:end="83:49"><expr pos:start="83:47" pos:end="83:49"><literal type="char" pos:start="83:47" pos:end="83:49">'l'</literal></expr></argument>,<argument pos:start="83:51" pos:end="83:53"><expr pos:start="83:51" pos:end="83:53"><literal type="char" pos:start="83:51" pos:end="83:53">'s'</literal></expr></argument>,<argument pos:start="83:55" pos:end="83:57"><expr pos:start="83:55" pos:end="83:57"><literal type="char" pos:start="83:55" pos:end="83:57">'t'</literal></expr></argument>)</argument_list></call><operator pos:start="83:59" pos:end="83:59">)</operator></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:41"><block_content pos:start="85:13" pos:end="85:41">

            <expr_stmt pos:start="85:13" pos:end="85:41"><expr pos:start="85:13" pos:end="85:40"><name pos:start="85:13" pos:end="85:17">parse</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:40">mov_read_udta_string</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="89:9" pos:end="117:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:19">(<expr pos:start="89:13" pos:end="89:18"><operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:18">parse</name></expr>)</condition> <block pos:start="89:21" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:34"> <comment type="block" pos:start="89:23" pos:end="89:48">/* skip leaf atoms data */</comment>

            <expr_stmt pos:start="91:13" pos:end="91:34"><expr pos:start="91:13" pos:end="91:33"><call pos:start="91:13" pos:end="91:33"><name pos:start="91:13" pos:end="91:21">avio_skip</name><argument_list pos:start="91:22" pos:end="91:33">(<argument pos:start="91:23" pos:end="91:24"><expr pos:start="91:23" pos:end="91:24"><name pos:start="91:23" pos:end="91:24">pb</name></expr></argument>, <argument pos:start="91:27" pos:end="91:32"><expr pos:start="91:27" pos:end="91:32"><name pos:start="91:27" pos:end="91:32"><name pos:start="91:27" pos:end="91:27">a</name><operator pos:start="91:28" pos:end="91:28">.</operator><name pos:start="91:29" pos:end="91:32">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="117:9">else <block pos:start="93:16" pos:end="117:9">{<block_content pos:start="95:13" pos:end="115:36">

            <decl_stmt pos:start="95:13" pos:end="95:46"><decl pos:start="95:13" pos:end="95:45"><type pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:19">int64_t</name></type> <name pos:start="95:21" pos:end="95:29">start_pos</name> <init pos:start="95:31" pos:end="95:45">= <expr pos:start="95:33" pos:end="95:45"><call pos:start="95:33" pos:end="95:45"><name pos:start="95:33" pos:end="95:41">avio_tell</name><argument_list pos:start="95:42" pos:end="95:45">(<argument pos:start="95:43" pos:end="95:44"><expr pos:start="95:43" pos:end="95:44"><name pos:start="95:43" pos:end="95:44">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="97:13" pos:end="97:25"><decl pos:start="97:13" pos:end="97:24"><type pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:19">int64_t</name></type> <name pos:start="97:21" pos:end="97:24">left</name></decl>;</decl_stmt>

            <decl_stmt pos:start="99:13" pos:end="99:38"><decl pos:start="99:13" pos:end="99:37"><type pos:start="99:13" pos:end="99:15"><name pos:start="99:13" pos:end="99:15">int</name></type> <name pos:start="99:17" pos:end="99:19">err</name> <init pos:start="99:21" pos:end="99:37">= <expr pos:start="99:23" pos:end="99:37"><call pos:start="99:23" pos:end="99:37"><name pos:start="99:23" pos:end="99:27">parse</name><argument_list pos:start="99:28" pos:end="99:37">(<argument pos:start="99:29" pos:end="99:29"><expr pos:start="99:29" pos:end="99:29"><name pos:start="99:29" pos:end="99:29">c</name></expr></argument>, <argument pos:start="99:32" pos:end="99:33"><expr pos:start="99:32" pos:end="99:33"><name pos:start="99:32" pos:end="99:33">pb</name></expr></argument>, <argument pos:start="99:36" pos:end="99:36"><expr pos:start="99:36" pos:end="99:36"><name pos:start="99:36" pos:end="99:36">a</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="101:13" pos:end="103:27"><if pos:start="101:13" pos:end="103:27">if <condition pos:start="101:16" pos:end="101:24">(<expr pos:start="101:17" pos:end="101:23"><name pos:start="101:17" pos:end="101:19">err</name> <operator pos:start="101:21" pos:end="101:21">&lt;</operator> <literal type="number" pos:start="101:23" pos:end="101:23">0</literal></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:27"><block_content pos:start="103:17" pos:end="103:27">

                <return pos:start="103:17" pos:end="103:27">return <expr pos:start="103:24" pos:end="103:26"><name pos:start="103:24" pos:end="103:26">err</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="105:13" pos:end="109:25"><if pos:start="105:13" pos:end="109:25">if <condition pos:start="105:16" pos:end="107:71">(<expr pos:start="105:17" pos:end="107:70"><name pos:start="105:17" pos:end="105:29"><name pos:start="105:17" pos:end="105:17">c</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:29">found_moov</name></name> <operator pos:start="105:31" pos:end="105:32">&amp;&amp;</operator> <name pos:start="105:34" pos:end="105:46"><name pos:start="105:34" pos:end="105:34">c</name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:46">found_mdat</name></name> <operator pos:start="105:48" pos:end="105:49">&amp;&amp;</operator>

                <operator pos:start="107:17" pos:end="107:17">(</operator><operator pos:start="107:18" pos:end="107:18">!</operator><name pos:start="107:19" pos:end="107:30"><name pos:start="107:19" pos:end="107:20">pb</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:30">seekable</name></name> <operator pos:start="107:32" pos:end="107:33">||</operator> <name pos:start="107:35" pos:end="107:43">start_pos</name> <operator pos:start="107:45" pos:end="107:45">+</operator> <name pos:start="107:47" pos:end="107:52"><name pos:start="107:47" pos:end="107:47">a</name><operator pos:start="107:48" pos:end="107:48">.</operator><name pos:start="107:49" pos:end="107:52">size</name></name> <operator pos:start="107:54" pos:end="107:55">==</operator> <call pos:start="107:57" pos:end="107:69"><name pos:start="107:57" pos:end="107:65">avio_size</name><argument_list pos:start="107:66" pos:end="107:69">(<argument pos:start="107:67" pos:end="107:68"><expr pos:start="107:67" pos:end="107:68"><name pos:start="107:67" pos:end="107:68">pb</name></expr></argument>)</argument_list></call><operator pos:start="107:70" pos:end="107:70">)</operator></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:25"><block_content pos:start="109:17" pos:end="109:25">

                <return pos:start="109:17" pos:end="109:25">return <expr pos:start="109:24" pos:end="109:24"><literal type="number" pos:start="109:24" pos:end="109:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:54"><expr pos:start="111:13" pos:end="111:53"><name pos:start="111:13" pos:end="111:16">left</name> <operator pos:start="111:18" pos:end="111:18">=</operator> <name pos:start="111:20" pos:end="111:25"><name pos:start="111:20" pos:end="111:20">a</name><operator pos:start="111:21" pos:end="111:21">.</operator><name pos:start="111:22" pos:end="111:25">size</name></name> <operator pos:start="111:27" pos:end="111:27">-</operator> <call pos:start="111:29" pos:end="111:41"><name pos:start="111:29" pos:end="111:37">avio_tell</name><argument_list pos:start="111:38" pos:end="111:41">(<argument pos:start="111:39" pos:end="111:40"><expr pos:start="111:39" pos:end="111:40"><name pos:start="111:39" pos:end="111:40">pb</name></expr></argument>)</argument_list></call> <operator pos:start="111:43" pos:end="111:43">+</operator> <name pos:start="111:45" pos:end="111:53">start_pos</name></expr>;</expr_stmt>

            <if_stmt pos:start="113:13" pos:end="115:36"><if pos:start="113:13" pos:end="115:36">if <condition pos:start="113:16" pos:end="113:25">(<expr pos:start="113:17" pos:end="113:24"><name pos:start="113:17" pos:end="113:20">left</name> <operator pos:start="113:22" pos:end="113:22">&gt;</operator> <literal type="number" pos:start="113:24" pos:end="113:24">0</literal></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:36"><block_content pos:start="115:17" pos:end="115:36"> <comment type="block" pos:start="113:27" pos:end="113:56">/* skip garbage at atom end */</comment>

                <expr_stmt pos:start="115:17" pos:end="115:36"><expr pos:start="115:17" pos:end="115:35"><call pos:start="115:17" pos:end="115:35"><name pos:start="115:17" pos:end="115:25">avio_skip</name><argument_list pos:start="115:26" pos:end="115:35">(<argument pos:start="115:27" pos:end="115:28"><expr pos:start="115:27" pos:end="115:28"><name pos:start="115:27" pos:end="115:28">pb</name></expr></argument>, <argument pos:start="115:31" pos:end="115:34"><expr pos:start="115:31" pos:end="115:34"><name pos:start="115:31" pos:end="115:34">left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:29"><expr pos:start="121:9" pos:end="121:28"><name pos:start="121:9" pos:end="121:18">total_size</name> <operator pos:start="121:20" pos:end="121:21">+=</operator> <name pos:start="121:23" pos:end="121:28"><name pos:start="121:23" pos:end="121:23">a</name><operator pos:start="121:24" pos:end="121:24">.</operator><name pos:start="121:25" pos:end="121:28">size</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="127:5" pos:end="129:46"><if pos:start="127:5" pos:end="129:46">if <condition pos:start="127:8" pos:end="127:54">(<expr pos:start="127:9" pos:end="127:53"><name pos:start="127:9" pos:end="127:18">total_size</name> <operator pos:start="127:20" pos:end="127:20">&lt;</operator> <name pos:start="127:22" pos:end="127:30"><name pos:start="127:22" pos:end="127:25">atom</name><operator pos:start="127:26" pos:end="127:26">.</operator><name pos:start="127:27" pos:end="127:30">size</name></name> <operator pos:start="127:32" pos:end="127:33">&amp;&amp;</operator> <name pos:start="127:35" pos:end="127:43"><name pos:start="127:35" pos:end="127:38">atom</name><operator pos:start="127:39" pos:end="127:39">.</operator><name pos:start="127:40" pos:end="127:43">size</name></name> <operator pos:start="127:45" pos:end="127:45">&lt;</operator> <literal type="number" pos:start="127:47" pos:end="127:53">0x7ffff</literal></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:46"><block_content pos:start="129:9" pos:end="129:46">

        <expr_stmt pos:start="129:9" pos:end="129:46"><expr pos:start="129:9" pos:end="129:45"><call pos:start="129:9" pos:end="129:45"><name pos:start="129:9" pos:end="129:17">avio_skip</name><argument_list pos:start="129:18" pos:end="129:45">(<argument pos:start="129:19" pos:end="129:20"><expr pos:start="129:19" pos:end="129:20"><name pos:start="129:19" pos:end="129:20">pb</name></expr></argument>, <argument pos:start="129:23" pos:end="129:44"><expr pos:start="129:23" pos:end="129:44"><name pos:start="129:23" pos:end="129:31"><name pos:start="129:23" pos:end="129:26">atom</name><operator pos:start="129:27" pos:end="129:27">.</operator><name pos:start="129:28" pos:end="129:31">size</name></name> <operator pos:start="129:33" pos:end="129:33">-</operator> <name pos:start="129:35" pos:end="129:44">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="133:5" pos:end="133:13">return <expr pos:start="133:12" pos:end="133:12"><literal type="number" pos:start="133:12" pos:end="133:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
