<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4251.c" pos:tabs="8"><macro pos:start="1:1" pos:end="9:34"><name pos:start="1:1" pos:end="1:25">yuv2rgb_full_1_c_template</name><argument_list pos:start="1:26" pos:end="9:34">(<argument pos:start="1:27" pos:end="1:39">SwsContext *c</argument>, <argument pos:start="1:42" pos:end="1:60">const int16_t *buf0</argument>,

                     <argument pos:start="3:22" pos:end="3:43">const int16_t *ubuf[<literal type="number" pos:start="3:42" pos:end="3:42">2</literal>]</argument>, <argument pos:start="3:46" pos:end="3:67">const int16_t *vbuf[<literal type="number" pos:start="3:66" pos:end="3:66">2</literal>]</argument>,

                     <argument pos:start="5:22" pos:end="5:41">const int16_t *abuf0</argument>, <argument pos:start="5:44" pos:end="5:56">uint8_t *dest</argument>, <argument pos:start="5:59" pos:end="5:66">int dstW</argument>,

                     <argument pos:start="7:22" pos:end="7:32">int uvalpha</argument>, <argument pos:start="7:35" pos:end="7:39">int y</argument>, <argument pos:start="7:42" pos:end="7:66">enum AVPixelFormat target</argument>,

                     <argument pos:start="9:22" pos:end="9:33">int hasAlpha</argument>)</argument_list></macro>

<block pos:start="11:1" pos:end="107:1">{<block_content pos:start="13:5" pos:end="105:35">

    <decl_stmt pos:start="13:5" pos:end="13:53"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">int16_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:24">ubuf0</name> <init pos:start="13:26" pos:end="13:34">= <expr pos:start="13:28" pos:end="13:34"><name pos:start="13:28" pos:end="13:34"><name pos:start="13:28" pos:end="13:31">ubuf</name><index pos:start="13:32" pos:end="13:34">[<expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="13:37" pos:end="13:52"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:42">vbuf0</name> <init pos:start="13:44" pos:end="13:52">= <expr pos:start="13:46" pos:end="13:52"><name pos:start="13:46" pos:end="13:52"><name pos:start="13:46" pos:end="13:49">vbuf</name><index pos:start="13:50" pos:end="13:52">[<expr pos:start="13:51" pos:end="13:51"><literal type="number" pos:start="13:51" pos:end="13:51">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:82"><decl pos:start="17:5" pos:end="17:81"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">step</name> <init pos:start="17:14" pos:end="17:81">= <expr pos:start="17:16" pos:end="17:81"><ternary pos:start="17:16" pos:end="17:81"><condition pos:start="17:16" pos:end="17:75"><expr pos:start="17:16" pos:end="17:73"><operator pos:start="17:16" pos:end="17:16">(</operator><name pos:start="17:17" pos:end="17:22">target</name> <operator pos:start="17:24" pos:end="17:25">==</operator> <name pos:start="17:27" pos:end="17:42">AV_PIX_FMT_RGB24</name> <operator pos:start="17:44" pos:end="17:45">||</operator> <name pos:start="17:47" pos:end="17:52">target</name> <operator pos:start="17:54" pos:end="17:55">==</operator> <name pos:start="17:57" pos:end="17:72">AV_PIX_FMT_BGR24</name><operator pos:start="17:73" pos:end="17:73">)</operator></expr> ?</condition><then pos:start="17:77" pos:end="17:77"> <expr pos:start="17:77" pos:end="17:77"><literal type="number" pos:start="17:77" pos:end="17:77">3</literal></expr> </then><else pos:start="17:79" pos:end="17:81">: <expr pos:start="17:81" pos:end="17:81"><literal type="number" pos:start="17:81" pos:end="17:81">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:11">err</name><index pos:start="19:12" pos:end="19:14">[<expr pos:start="19:13" pos:end="19:13"><literal type="number" pos:start="19:13" pos:end="19:13">4</literal></expr>]</index></name> <init pos:start="19:16" pos:end="19:20">= <expr pos:start="19:18" pos:end="19:20"><block pos:start="19:18" pos:end="19:20">{<expr pos:start="19:19" pos:end="19:19"><literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="27:17"><if pos:start="23:5" pos:end="27:17">if<condition pos:start="23:7" pos:end="25:70">(   <expr pos:start="23:11" pos:end="25:69"><name pos:start="23:11" pos:end="23:16">target</name> <operator pos:start="23:18" pos:end="23:19">==</operator> <name pos:start="23:21" pos:end="23:40">AV_PIX_FMT_BGR4_BYTE</name> <operator pos:start="23:42" pos:end="23:43">||</operator> <name pos:start="23:45" pos:end="23:50">target</name> <operator pos:start="23:52" pos:end="23:53">==</operator> <name pos:start="23:55" pos:end="23:74">AV_PIX_FMT_RGB4_BYTE</name>

       <operator pos:start="25:8" pos:end="25:9">||</operator> <name pos:start="25:11" pos:end="25:16">target</name> <operator pos:start="25:18" pos:end="25:19">==</operator> <name pos:start="25:21" pos:end="25:35">AV_PIX_FMT_BGR8</name>      <operator pos:start="25:42" pos:end="25:43">||</operator> <name pos:start="25:45" pos:end="25:50">target</name> <operator pos:start="25:52" pos:end="25:53">==</operator> <name pos:start="25:55" pos:end="25:69">AV_PIX_FMT_RGB8</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <expr_stmt pos:start="27:9" pos:end="27:17"><expr pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:12">step</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="97:5"><if pos:start="31:5" pos:end="63:5">if <condition pos:start="31:8" pos:end="31:23">(<expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:15">uvalpha</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:22">2048</literal></expr>)</condition> <block pos:start="31:25" pos:end="63:5">{<block_content pos:start="33:9" pos:end="61:9">

        <for pos:start="33:9" pos:end="61:9">for <control pos:start="33:13" pos:end="33:34">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">i</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:29"><expr pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:28">dstW</name></expr>;</condition> <incr pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:31">i</name><operator pos:start="33:32" pos:end="33:33">++</operator></expr></incr>)</control> <block pos:start="33:36" pos:end="61:9">{<block_content pos:start="35:13" pos:end="59:25">

            <decl_stmt pos:start="35:13" pos:end="35:33"><decl pos:start="35:13" pos:end="35:32"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:17">Y</name> <init pos:start="35:19" pos:end="35:32">= <expr pos:start="35:21" pos:end="35:32"><name pos:start="35:21" pos:end="35:27"><name pos:start="35:21" pos:end="35:24">buf0</name><index pos:start="35:25" pos:end="35:27">[<expr pos:start="35:26" pos:end="35:26"><name pos:start="35:26" pos:end="35:26">i</name></expr>]</index></name> <operator pos:start="35:29" pos:end="35:30">&lt;&lt;</operator> <literal type="number" pos:start="35:32" pos:end="35:32">2</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:47"><decl pos:start="37:13" pos:end="37:46"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:17">U</name> <init pos:start="37:19" pos:end="37:46">= <expr pos:start="37:21" pos:end="37:46"><operator pos:start="37:21" pos:end="37:21">(</operator><name pos:start="37:22" pos:end="37:29"><name pos:start="37:22" pos:end="37:26">ubuf0</name><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">i</name></expr>]</index></name> <operator pos:start="37:31" pos:end="37:31">-</operator> <operator pos:start="37:33" pos:end="37:33">(</operator><literal type="number" pos:start="37:34" pos:end="37:36">128</literal><operator pos:start="37:37" pos:end="37:38">&lt;&lt;</operator><literal type="number" pos:start="37:39" pos:end="37:39">7</literal><operator pos:start="37:40" pos:end="37:40">)</operator><operator pos:start="37:41" pos:end="37:41">)</operator> <operator pos:start="37:43" pos:end="37:44">&lt;&lt;</operator> <literal type="number" pos:start="37:46" pos:end="37:46">2</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:47"><decl pos:start="39:13" pos:end="39:46"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:17">V</name> <init pos:start="39:19" pos:end="39:46">= <expr pos:start="39:21" pos:end="39:46"><operator pos:start="39:21" pos:end="39:21">(</operator><name pos:start="39:22" pos:end="39:29"><name pos:start="39:22" pos:end="39:26">vbuf0</name><index pos:start="39:27" pos:end="39:29">[<expr pos:start="39:28" pos:end="39:28"><name pos:start="39:28" pos:end="39:28">i</name></expr>]</index></name> <operator pos:start="39:31" pos:end="39:31">-</operator> <operator pos:start="39:33" pos:end="39:33">(</operator><literal type="number" pos:start="39:34" pos:end="39:36">128</literal><operator pos:start="39:37" pos:end="39:38">&lt;&lt;</operator><literal type="number" pos:start="39:39" pos:end="39:39">7</literal><operator pos:start="39:40" pos:end="39:40">)</operator><operator pos:start="39:41" pos:end="39:41">)</operator> <operator pos:start="39:43" pos:end="39:44">&lt;&lt;</operator> <literal type="number" pos:start="39:46" pos:end="39:46">2</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:18"><decl pos:start="41:13" pos:end="41:17"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:17">A</name></decl>;</decl_stmt>



            <if_stmt pos:start="45:13" pos:end="53:13"><if pos:start="45:13" pos:end="53:13">if <condition pos:start="45:16" pos:end="45:25">(<expr pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:24">hasAlpha</name></expr>)</condition> <block pos:start="45:27" pos:end="53:13">{<block_content pos:start="47:17" pos:end="51:41">

                <expr_stmt pos:start="47:17" pos:end="47:41"><expr pos:start="47:17" pos:end="47:40"><name pos:start="47:17" pos:end="47:17">A</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <operator pos:start="47:21" pos:end="47:21">(</operator><name pos:start="47:22" pos:end="47:29"><name pos:start="47:22" pos:end="47:26">abuf0</name><index pos:start="47:27" pos:end="47:29">[<expr pos:start="47:28" pos:end="47:28"><name pos:start="47:28" pos:end="47:28">i</name></expr>]</index></name> <operator pos:start="47:31" pos:end="47:31">+</operator> <literal type="number" pos:start="47:33" pos:end="47:34">64</literal><operator pos:start="47:35" pos:end="47:35">)</operator> <operator pos:start="47:37" pos:end="47:38">&gt;&gt;</operator> <literal type="number" pos:start="47:40" pos:end="47:40">7</literal></expr>;</expr_stmt>

                <if_stmt pos:start="49:17" pos:end="51:41"><if pos:start="49:17" pos:end="51:41">if <condition pos:start="49:20" pos:end="49:30">(<expr pos:start="49:21" pos:end="49:29"><name pos:start="49:21" pos:end="49:21">A</name> <operator pos:start="49:23" pos:end="49:23">&amp;</operator> <literal type="number" pos:start="49:25" pos:end="49:29">0x100</literal></expr>)</condition><block type="pseudo" pos:start="51:21" pos:end="51:41"><block_content pos:start="51:21" pos:end="51:41">

                    <expr_stmt pos:start="51:21" pos:end="51:41"><expr pos:start="51:21" pos:end="51:40"><name pos:start="51:21" pos:end="51:21">A</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <call pos:start="51:25" pos:end="51:40"><name pos:start="51:25" pos:end="51:37">av_clip_uint8</name><argument_list pos:start="51:38" pos:end="51:40">(<argument pos:start="51:39" pos:end="51:39"><expr pos:start="51:39" pos:end="51:39"><name pos:start="51:39" pos:end="51:39">A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="57:13" pos:end="57:81"><expr pos:start="57:13" pos:end="57:80"><call pos:start="57:13" pos:end="57:80"><name pos:start="57:13" pos:end="57:30">yuv2rgb_write_full</name><argument_list pos:start="57:31" pos:end="57:80">(<argument pos:start="57:32" pos:end="57:32"><expr pos:start="57:32" pos:end="57:32"><name pos:start="57:32" pos:end="57:32">c</name></expr></argument>, <argument pos:start="57:35" pos:end="57:38"><expr pos:start="57:35" pos:end="57:38"><name pos:start="57:35" pos:end="57:38">dest</name></expr></argument>, <argument pos:start="57:41" pos:end="57:41"><expr pos:start="57:41" pos:end="57:41"><name pos:start="57:41" pos:end="57:41">i</name></expr></argument>, <argument pos:start="57:44" pos:end="57:44"><expr pos:start="57:44" pos:end="57:44"><name pos:start="57:44" pos:end="57:44">Y</name></expr></argument>, <argument pos:start="57:47" pos:end="57:47"><expr pos:start="57:47" pos:end="57:47"><name pos:start="57:47" pos:end="57:47">A</name></expr></argument>, <argument pos:start="57:50" pos:end="57:50"><expr pos:start="57:50" pos:end="57:50"><name pos:start="57:50" pos:end="57:50">U</name></expr></argument>, <argument pos:start="57:53" pos:end="57:53"><expr pos:start="57:53" pos:end="57:53"><name pos:start="57:53" pos:end="57:53">V</name></expr></argument>, <argument pos:start="57:56" pos:end="57:56"><expr pos:start="57:56" pos:end="57:56"><name pos:start="57:56" pos:end="57:56">y</name></expr></argument>, <argument pos:start="57:59" pos:end="57:64"><expr pos:start="57:59" pos:end="57:64"><name pos:start="57:59" pos:end="57:64">target</name></expr></argument>, <argument pos:start="57:67" pos:end="57:74"><expr pos:start="57:67" pos:end="57:74"><name pos:start="57:67" pos:end="57:74">hasAlpha</name></expr></argument>, <argument pos:start="57:77" pos:end="57:79"><expr pos:start="57:77" pos:end="57:79"><name pos:start="57:77" pos:end="57:79">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:25"><expr pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:16">dest</name> <operator pos:start="59:18" pos:end="59:19">+=</operator> <name pos:start="59:21" pos:end="59:24">step</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="97:5">else <block pos:start="63:12" pos:end="97:5">{<block_content pos:start="65:9" pos:end="95:9">

        <decl_stmt pos:start="65:9" pos:end="65:57"><decl pos:start="65:9" pos:end="65:38"><type pos:start="65:9" pos:end="65:23"><specifier pos:start="65:9" pos:end="65:13">const</specifier> <name pos:start="65:15" pos:end="65:21">int16_t</name> <modifier pos:start="65:23" pos:end="65:23">*</modifier></type><name pos:start="65:24" pos:end="65:28">ubuf1</name> <init pos:start="65:30" pos:end="65:38">= <expr pos:start="65:32" pos:end="65:38"><name pos:start="65:32" pos:end="65:38"><name pos:start="65:32" pos:end="65:35">ubuf</name><index pos:start="65:36" pos:end="65:38">[<expr pos:start="65:37" pos:end="65:37"><literal type="number" pos:start="65:37" pos:end="65:37">1</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="65:41" pos:end="65:56"><type ref="prev" pos:start="65:9" pos:end="65:23"><modifier pos:start="65:41" pos:end="65:41">*</modifier></type><name pos:start="65:42" pos:end="65:46">vbuf1</name> <init pos:start="65:48" pos:end="65:56">= <expr pos:start="65:50" pos:end="65:56"><name pos:start="65:50" pos:end="65:56"><name pos:start="65:50" pos:end="65:53">vbuf</name><index pos:start="65:54" pos:end="65:56">[<expr pos:start="65:55" pos:end="65:55"><literal type="number" pos:start="65:55" pos:end="65:55">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="67:9" pos:end="95:9">for <control pos:start="67:13" pos:end="67:34">(<init pos:start="67:14" pos:end="67:19"><expr pos:start="67:14" pos:end="67:18"><name pos:start="67:14" pos:end="67:14">i</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>;</init> <condition pos:start="67:21" pos:end="67:29"><expr pos:start="67:21" pos:end="67:28"><name pos:start="67:21" pos:end="67:21">i</name> <operator pos:start="67:23" pos:end="67:23">&lt;</operator> <name pos:start="67:25" pos:end="67:28">dstW</name></expr>;</condition> <incr pos:start="67:31" pos:end="67:33"><expr pos:start="67:31" pos:end="67:33"><name pos:start="67:31" pos:end="67:31">i</name><operator pos:start="67:32" pos:end="67:33">++</operator></expr></incr>)</control> <block pos:start="67:36" pos:end="95:9">{<block_content pos:start="69:13" pos:end="93:25">

            <decl_stmt pos:start="69:13" pos:end="69:33"><decl pos:start="69:13" pos:end="69:32"><type pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">int</name></type> <name pos:start="69:17" pos:end="69:17">Y</name> <init pos:start="69:19" pos:end="69:32">= <expr pos:start="69:21" pos:end="69:32"><name pos:start="69:21" pos:end="69:27"><name pos:start="69:21" pos:end="69:24">buf0</name><index pos:start="69:25" pos:end="69:27">[<expr pos:start="69:26" pos:end="69:26"><name pos:start="69:26" pos:end="69:26">i</name></expr>]</index></name> <operator pos:start="69:29" pos:end="69:30">&lt;&lt;</operator> <literal type="number" pos:start="69:32" pos:end="69:32">2</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="71:13" pos:end="71:58"><decl pos:start="71:13" pos:end="71:57"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:17">U</name> <init pos:start="71:19" pos:end="71:57">= <expr pos:start="71:21" pos:end="71:57"><operator pos:start="71:21" pos:end="71:21">(</operator><name pos:start="71:22" pos:end="71:29"><name pos:start="71:22" pos:end="71:26">ubuf0</name><index pos:start="71:27" pos:end="71:29">[<expr pos:start="71:28" pos:end="71:28"><name pos:start="71:28" pos:end="71:28">i</name></expr>]</index></name> <operator pos:start="71:31" pos:end="71:31">+</operator> <name pos:start="71:33" pos:end="71:40"><name pos:start="71:33" pos:end="71:37">ubuf1</name><index pos:start="71:38" pos:end="71:40">[<expr pos:start="71:39" pos:end="71:39"><name pos:start="71:39" pos:end="71:39">i</name></expr>]</index></name> <operator pos:start="71:42" pos:end="71:42">-</operator> <operator pos:start="71:44" pos:end="71:44">(</operator><literal type="number" pos:start="71:45" pos:end="71:47">128</literal><operator pos:start="71:48" pos:end="71:49">&lt;&lt;</operator><literal type="number" pos:start="71:50" pos:end="71:50">8</literal><operator pos:start="71:51" pos:end="71:51">)</operator><operator pos:start="71:52" pos:end="71:52">)</operator> <operator pos:start="71:54" pos:end="71:55">&lt;&lt;</operator> <literal type="number" pos:start="71:57" pos:end="71:57">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="73:13" pos:end="73:58"><decl pos:start="73:13" pos:end="73:57"><type pos:start="73:13" pos:end="73:15"><name pos:start="73:13" pos:end="73:15">int</name></type> <name pos:start="73:17" pos:end="73:17">V</name> <init pos:start="73:19" pos:end="73:57">= <expr pos:start="73:21" pos:end="73:57"><operator pos:start="73:21" pos:end="73:21">(</operator><name pos:start="73:22" pos:end="73:29"><name pos:start="73:22" pos:end="73:26">vbuf0</name><index pos:start="73:27" pos:end="73:29">[<expr pos:start="73:28" pos:end="73:28"><name pos:start="73:28" pos:end="73:28">i</name></expr>]</index></name> <operator pos:start="73:31" pos:end="73:31">+</operator> <name pos:start="73:33" pos:end="73:40"><name pos:start="73:33" pos:end="73:37">vbuf1</name><index pos:start="73:38" pos:end="73:40">[<expr pos:start="73:39" pos:end="73:39"><name pos:start="73:39" pos:end="73:39">i</name></expr>]</index></name> <operator pos:start="73:42" pos:end="73:42">-</operator> <operator pos:start="73:44" pos:end="73:44">(</operator><literal type="number" pos:start="73:45" pos:end="73:47">128</literal><operator pos:start="73:48" pos:end="73:49">&lt;&lt;</operator><literal type="number" pos:start="73:50" pos:end="73:50">8</literal><operator pos:start="73:51" pos:end="73:51">)</operator><operator pos:start="73:52" pos:end="73:52">)</operator> <operator pos:start="73:54" pos:end="73:55">&lt;&lt;</operator> <literal type="number" pos:start="73:57" pos:end="73:57">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="75:13" pos:end="75:18"><decl pos:start="75:13" pos:end="75:17"><type pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:15">int</name></type> <name pos:start="75:17" pos:end="75:17">A</name></decl>;</decl_stmt>



            <if_stmt pos:start="79:13" pos:end="87:13"><if pos:start="79:13" pos:end="87:13">if <condition pos:start="79:16" pos:end="79:25">(<expr pos:start="79:17" pos:end="79:24"><name pos:start="79:17" pos:end="79:24">hasAlpha</name></expr>)</condition> <block pos:start="79:27" pos:end="87:13">{<block_content pos:start="81:17" pos:end="85:41">

                <expr_stmt pos:start="81:17" pos:end="81:41"><expr pos:start="81:17" pos:end="81:40"><name pos:start="81:17" pos:end="81:17">A</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <operator pos:start="81:21" pos:end="81:21">(</operator><name pos:start="81:22" pos:end="81:29"><name pos:start="81:22" pos:end="81:26">abuf0</name><index pos:start="81:27" pos:end="81:29">[<expr pos:start="81:28" pos:end="81:28"><name pos:start="81:28" pos:end="81:28">i</name></expr>]</index></name> <operator pos:start="81:31" pos:end="81:31">+</operator> <literal type="number" pos:start="81:33" pos:end="81:34">64</literal><operator pos:start="81:35" pos:end="81:35">)</operator> <operator pos:start="81:37" pos:end="81:38">&gt;&gt;</operator> <literal type="number" pos:start="81:40" pos:end="81:40">7</literal></expr>;</expr_stmt>

                <if_stmt pos:start="83:17" pos:end="85:41"><if pos:start="83:17" pos:end="85:41">if <condition pos:start="83:20" pos:end="83:30">(<expr pos:start="83:21" pos:end="83:29"><name pos:start="83:21" pos:end="83:21">A</name> <operator pos:start="83:23" pos:end="83:23">&amp;</operator> <literal type="number" pos:start="83:25" pos:end="83:29">0x100</literal></expr>)</condition><block type="pseudo" pos:start="85:21" pos:end="85:41"><block_content pos:start="85:21" pos:end="85:41">

                    <expr_stmt pos:start="85:21" pos:end="85:41"><expr pos:start="85:21" pos:end="85:40"><name pos:start="85:21" pos:end="85:21">A</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <call pos:start="85:25" pos:end="85:40"><name pos:start="85:25" pos:end="85:37">av_clip_uint8</name><argument_list pos:start="85:38" pos:end="85:40">(<argument pos:start="85:39" pos:end="85:39"><expr pos:start="85:39" pos:end="85:39"><name pos:start="85:39" pos:end="85:39">A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="91:13" pos:end="91:81"><expr pos:start="91:13" pos:end="91:80"><call pos:start="91:13" pos:end="91:80"><name pos:start="91:13" pos:end="91:30">yuv2rgb_write_full</name><argument_list pos:start="91:31" pos:end="91:80">(<argument pos:start="91:32" pos:end="91:32"><expr pos:start="91:32" pos:end="91:32"><name pos:start="91:32" pos:end="91:32">c</name></expr></argument>, <argument pos:start="91:35" pos:end="91:38"><expr pos:start="91:35" pos:end="91:38"><name pos:start="91:35" pos:end="91:38">dest</name></expr></argument>, <argument pos:start="91:41" pos:end="91:41"><expr pos:start="91:41" pos:end="91:41"><name pos:start="91:41" pos:end="91:41">i</name></expr></argument>, <argument pos:start="91:44" pos:end="91:44"><expr pos:start="91:44" pos:end="91:44"><name pos:start="91:44" pos:end="91:44">Y</name></expr></argument>, <argument pos:start="91:47" pos:end="91:47"><expr pos:start="91:47" pos:end="91:47"><name pos:start="91:47" pos:end="91:47">A</name></expr></argument>, <argument pos:start="91:50" pos:end="91:50"><expr pos:start="91:50" pos:end="91:50"><name pos:start="91:50" pos:end="91:50">U</name></expr></argument>, <argument pos:start="91:53" pos:end="91:53"><expr pos:start="91:53" pos:end="91:53"><name pos:start="91:53" pos:end="91:53">V</name></expr></argument>, <argument pos:start="91:56" pos:end="91:56"><expr pos:start="91:56" pos:end="91:56"><name pos:start="91:56" pos:end="91:56">y</name></expr></argument>, <argument pos:start="91:59" pos:end="91:64"><expr pos:start="91:59" pos:end="91:64"><name pos:start="91:59" pos:end="91:64">target</name></expr></argument>, <argument pos:start="91:67" pos:end="91:74"><expr pos:start="91:67" pos:end="91:74"><name pos:start="91:67" pos:end="91:74">hasAlpha</name></expr></argument>, <argument pos:start="91:77" pos:end="91:79"><expr pos:start="91:77" pos:end="91:79"><name pos:start="91:77" pos:end="91:79">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:25"><expr pos:start="93:13" pos:end="93:24"><name pos:start="93:13" pos:end="93:16">dest</name> <operator pos:start="93:18" pos:end="93:19">+=</operator> <name pos:start="93:21" pos:end="93:24">step</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:35"><expr pos:start="101:5" pos:end="101:34"><name pos:start="101:5" pos:end="101:25"><name pos:start="101:5" pos:end="101:5">c</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:19">dither_error</name><index pos:start="101:20" pos:end="101:22">[<expr pos:start="101:21" pos:end="101:21"><literal type="number" pos:start="101:21" pos:end="101:21">0</literal></expr>]</index><index pos:start="101:23" pos:end="101:25">[<expr pos:start="101:24" pos:end="101:24"><name pos:start="101:24" pos:end="101:24">i</name></expr>]</index></name> <operator pos:start="101:27" pos:end="101:27">=</operator> <name pos:start="101:29" pos:end="101:34"><name pos:start="101:29" pos:end="101:31">err</name><index pos:start="101:32" pos:end="101:34">[<expr pos:start="101:33" pos:end="101:33"><literal type="number" pos:start="101:33" pos:end="101:33">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:35"><expr pos:start="103:5" pos:end="103:34"><name pos:start="103:5" pos:end="103:25"><name pos:start="103:5" pos:end="103:5">c</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:19">dither_error</name><index pos:start="103:20" pos:end="103:22">[<expr pos:start="103:21" pos:end="103:21"><literal type="number" pos:start="103:21" pos:end="103:21">1</literal></expr>]</index><index pos:start="103:23" pos:end="103:25">[<expr pos:start="103:24" pos:end="103:24"><name pos:start="103:24" pos:end="103:24">i</name></expr>]</index></name> <operator pos:start="103:27" pos:end="103:27">=</operator> <name pos:start="103:29" pos:end="103:34"><name pos:start="103:29" pos:end="103:31">err</name><index pos:start="103:32" pos:end="103:34">[<expr pos:start="103:33" pos:end="103:33"><literal type="number" pos:start="103:33" pos:end="103:33">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:25"><name pos:start="105:5" pos:end="105:5">c</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:19">dither_error</name><index pos:start="105:20" pos:end="105:22">[<expr pos:start="105:21" pos:end="105:21"><literal type="number" pos:start="105:21" pos:end="105:21">2</literal></expr>]</index><index pos:start="105:23" pos:end="105:25">[<expr pos:start="105:24" pos:end="105:24"><name pos:start="105:24" pos:end="105:24">i</name></expr>]</index></name> <operator pos:start="105:27" pos:end="105:27">=</operator> <name pos:start="105:29" pos:end="105:34"><name pos:start="105:29" pos:end="105:31">err</name><index pos:start="105:32" pos:end="105:34">[<expr pos:start="105:33" pos:end="105:33"><literal type="number" pos:start="105:33" pos:end="105:33">2</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block>
</unit>
