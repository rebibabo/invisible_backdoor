<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13200.c" pos:tabs="8"><function pos:start="1:1" pos:end="138:0"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int64_t</name></type> <name pos:start="1:9" pos:end="1:22">av_rescale_rnd</name><parameter_list pos:start="1:23" pos:end="1:76">(<parameter pos:start="1:24" pos:end="1:32"><decl pos:start="1:24" pos:end="1:32"><type pos:start="1:24" pos:end="1:32"><name pos:start="1:24" pos:end="1:30">int64_t</name></type> <name pos:start="1:32" pos:end="1:32">a</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:43"><decl pos:start="1:35" pos:end="1:43"><type pos:start="1:35" pos:end="1:43"><name pos:start="1:35" pos:end="1:41">int64_t</name></type> <name pos:start="1:43" pos:end="1:43">b</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:54"><decl pos:start="1:46" pos:end="1:54"><type pos:start="1:46" pos:end="1:54"><name pos:start="1:46" pos:end="1:52">int64_t</name></type> <name pos:start="1:54" pos:end="1:54">c</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:75"><decl pos:start="1:57" pos:end="1:75"><type pos:start="1:57" pos:end="1:75"><name pos:start="1:57" pos:end="1:71"><name pos:start="1:57" pos:end="1:60">enum</name> <name pos:start="1:62" pos:end="1:71">AVRounding</name></name></type> <name pos:start="1:73" pos:end="1:75">rnd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="138:0">{<block_content pos:start="5:5" pos:end="133:51">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:13">r</name> <init pos:start="5:15" pos:end="5:17">= <expr pos:start="5:17" pos:end="5:17"><literal type="number" pos:start="5:17" pos:end="5:17">0</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:22"><expr pos:start="7:5" pos:end="7:21"><call pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:14">av_assert2</name><argument_list pos:start="7:15" pos:end="7:21">(<argument pos:start="7:16" pos:end="7:20"><expr pos:start="7:16" pos:end="7:20"><name pos:start="7:16" pos:end="7:16">c</name> <operator pos:start="7:18" pos:end="7:18">&gt;</operator> <literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><call pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:14">av_assert2</name><argument_list pos:start="9:15" pos:end="9:21">(<argument pos:start="9:16" pos:end="9:20"><expr pos:start="9:16" pos:end="9:20"><name pos:start="9:16" pos:end="9:16">b</name> <operator pos:start="9:18" pos:end="9:19">&gt;=</operator><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:91"><expr pos:start="11:5" pos:end="11:90"><call pos:start="11:5" pos:end="11:90"><name pos:start="11:5" pos:end="11:14">av_assert2</name><argument_list pos:start="11:15" pos:end="11:90">(<argument pos:start="11:16" pos:end="11:89"><expr pos:start="11:16" pos:end="11:89"><operator pos:start="11:16" pos:end="11:16">(</operator><name pos:start="11:17" pos:end="11:24">unsigned</name><operator pos:start="11:25" pos:end="11:25">)</operator><operator pos:start="11:26" pos:end="11:26">(</operator><name pos:start="11:27" pos:end="11:29">rnd</name><operator pos:start="11:30" pos:end="11:30">&amp;</operator><operator pos:start="11:31" pos:end="11:31">~</operator><name pos:start="11:32" pos:end="11:51">AV_ROUND_PASS_MINMAX</name><operator pos:start="11:52" pos:end="11:52">)</operator><operator pos:start="11:53" pos:end="11:54">&lt;=</operator><literal type="number" pos:start="11:55" pos:end="11:55">5</literal> <operator pos:start="11:57" pos:end="11:58">&amp;&amp;</operator> <operator pos:start="11:60" pos:end="11:60">(</operator><name pos:start="11:61" pos:end="11:63">rnd</name><operator pos:start="11:64" pos:end="11:64">&amp;</operator><operator pos:start="11:65" pos:end="11:65">~</operator><name pos:start="11:66" pos:end="11:85">AV_ROUND_PASS_MINMAX</name><operator pos:start="11:86" pos:end="11:86">)</operator><operator pos:start="11:87" pos:end="11:88">!=</operator><literal type="number" pos:start="11:89" pos:end="11:89">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="17:25"><if pos:start="15:5" pos:end="17:25">if <condition pos:start="15:8" pos:end="15:105">(<expr pos:start="15:9" pos:end="15:104"><name pos:start="15:9" pos:end="15:9">c</name> <operator pos:start="15:11" pos:end="15:12">&lt;=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal> <operator pos:start="15:16" pos:end="15:17">||</operator> <name pos:start="15:19" pos:end="15:19">b</name> <operator pos:start="15:21" pos:end="15:21">&lt;</operator> <literal type="number" pos:start="15:23" pos:end="15:23">0</literal> <operator pos:start="15:25" pos:end="15:26">||</operator> <operator pos:start="15:28" pos:end="15:28">!</operator><operator pos:start="15:29" pos:end="15:29">(</operator><operator pos:start="15:30" pos:end="15:30">(</operator><name pos:start="15:31" pos:end="15:38">unsigned</name><operator pos:start="15:39" pos:end="15:39">)</operator><operator pos:start="15:40" pos:end="15:40">(</operator><name pos:start="15:41" pos:end="15:43">rnd</name><operator pos:start="15:44" pos:end="15:44">&amp;</operator><operator pos:start="15:45" pos:end="15:45">~</operator><name pos:start="15:46" pos:end="15:65">AV_ROUND_PASS_MINMAX</name><operator pos:start="15:66" pos:end="15:66">)</operator><operator pos:start="15:67" pos:end="15:68">&lt;=</operator><literal type="number" pos:start="15:69" pos:end="15:69">5</literal> <operator pos:start="15:71" pos:end="15:72">&amp;&amp;</operator> <operator pos:start="15:74" pos:end="15:74">(</operator><name pos:start="15:75" pos:end="15:77">rnd</name><operator pos:start="15:78" pos:end="15:78">&amp;</operator><operator pos:start="15:79" pos:end="15:79">~</operator><name pos:start="15:80" pos:end="15:99">AV_ROUND_PASS_MINMAX</name><operator pos:start="15:100" pos:end="15:100">)</operator><operator pos:start="15:101" pos:end="15:102">!=</operator><literal type="number" pos:start="15:103" pos:end="15:103">4</literal><operator pos:start="15:104" pos:end="15:104">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:25"><block_content pos:start="17:9" pos:end="17:25">

        <return pos:start="17:9" pos:end="17:25">return <expr pos:start="17:16" pos:end="17:24"><name pos:start="17:16" pos:end="17:24">INT64_MIN</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:11">rnd</name> <operator pos:start="21:13" pos:end="21:13">&amp;</operator> <name pos:start="21:15" pos:end="21:34">AV_ROUND_PASS_MINMAX</name></expr>)</condition> <block pos:start="21:37" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:36">

        <if_stmt pos:start="23:9" pos:end="25:21"><if pos:start="23:9" pos:end="25:21">if <condition pos:start="23:12" pos:end="23:45">(<expr pos:start="23:13" pos:end="23:44"><name pos:start="23:13" pos:end="23:13">a</name> <operator pos:start="23:15" pos:end="23:16">==</operator> <name pos:start="23:18" pos:end="23:26">INT64_MIN</name> <operator pos:start="23:28" pos:end="23:29">||</operator> <name pos:start="23:31" pos:end="23:31">a</name> <operator pos:start="23:33" pos:end="23:34">==</operator> <name pos:start="23:36" pos:end="23:44">INT64_MAX</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:21"><block_content pos:start="25:13" pos:end="25:21">

            <return pos:start="25:13" pos:end="25:21">return <expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">a</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:11">rnd</name> <operator pos:start="27:13" pos:end="27:14">-=</operator> <name pos:start="27:16" pos:end="27:35">AV_ROUND_PASS_MINMAX</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="35:94"><if pos:start="33:5" pos:end="35:94">if <condition pos:start="33:8" pos:end="33:14">(<expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">a</name> <operator pos:start="33:11" pos:end="33:11">&lt;</operator> <literal type="number" pos:start="33:13" pos:end="33:13">0</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:94"><block_content pos:start="35:9" pos:end="35:94">

        <return pos:start="35:9" pos:end="35:94">return <expr pos:start="35:16" pos:end="35:93"><operator pos:start="35:16" pos:end="35:16">-</operator><operator pos:start="35:17" pos:end="35:17">(</operator><name pos:start="35:18" pos:end="35:25">uint64_t</name><operator pos:start="35:26" pos:end="35:26">)</operator><call pos:start="35:27" pos:end="35:93"><name pos:start="35:27" pos:end="35:40">av_rescale_rnd</name><argument_list pos:start="35:41" pos:end="35:93">(<argument pos:start="35:42" pos:end="35:62"><expr pos:start="35:42" pos:end="35:62"><operator pos:start="35:42" pos:end="35:42">-</operator><call pos:start="35:43" pos:end="35:62"><name pos:start="35:43" pos:end="35:47">FFMAX</name><argument_list pos:start="35:48" pos:end="35:62">(<argument pos:start="35:49" pos:end="35:49"><expr pos:start="35:49" pos:end="35:49"><name pos:start="35:49" pos:end="35:49">a</name></expr></argument>, <argument pos:start="35:52" pos:end="35:61"><expr pos:start="35:52" pos:end="35:61"><operator pos:start="35:52" pos:end="35:52">-</operator><name pos:start="35:53" pos:end="35:61">INT64_MAX</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:65" pos:end="35:65"><expr pos:start="35:65" pos:end="35:65"><name pos:start="35:65" pos:end="35:65">b</name></expr></argument>, <argument pos:start="35:68" pos:end="35:68"><expr pos:start="35:68" pos:end="35:68"><name pos:start="35:68" pos:end="35:68">c</name></expr></argument>, <argument pos:start="35:71" pos:end="35:92"><expr pos:start="35:71" pos:end="35:92"><name pos:start="35:71" pos:end="35:73">rnd</name> <operator pos:start="35:75" pos:end="35:75">^</operator> <operator pos:start="35:77" pos:end="35:77">(</operator><operator pos:start="35:78" pos:end="35:78">(</operator><name pos:start="35:79" pos:end="35:81">rnd</name> <operator pos:start="35:83" pos:end="35:84">&gt;&gt;</operator> <literal type="number" pos:start="35:86" pos:end="35:86">1</literal><operator pos:start="35:87" pos:end="35:87">)</operator> <operator pos:start="35:89" pos:end="35:89">&amp;</operator> <literal type="number" pos:start="35:91" pos:end="35:91">1</literal><operator pos:start="35:92" pos:end="35:92">)</operator></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="45:18"><if pos:start="39:5" pos:end="41:18">if <condition pos:start="39:8" pos:end="39:33">(<expr pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:11">rnd</name> <operator pos:start="39:13" pos:end="39:14">==</operator> <name pos:start="39:16" pos:end="39:32">AV_ROUND_NEAR_INF</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <expr_stmt pos:start="41:9" pos:end="41:18"><expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:9">r</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:13">c</name> <operator pos:start="41:15" pos:end="41:15">/</operator> <literal type="number" pos:start="41:17" pos:end="41:17">2</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="43:5" pos:end="45:18">else if <condition pos:start="43:13" pos:end="43:21">(<expr pos:start="43:14" pos:end="43:20"><name pos:start="43:14" pos:end="43:16">rnd</name> <operator pos:start="43:18" pos:end="43:18">&amp;</operator> <literal type="number" pos:start="43:20" pos:end="43:20">1</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:18"><block_content pos:start="45:9" pos:end="45:18">

        <expr_stmt pos:start="45:9" pos:end="45:18"><expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:9">r</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <name pos:start="45:13" pos:end="45:13">c</name> <operator pos:start="45:15" pos:end="45:15">-</operator> <literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="124:0"><if pos:start="49:5" pos:end="69:5">if <condition pos:start="49:8" pos:end="49:37">(<expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:9">b</name> <operator pos:start="49:11" pos:end="49:12">&lt;=</operator> <name pos:start="49:14" pos:end="49:20">INT_MAX</name> <operator pos:start="49:22" pos:end="49:23">&amp;&amp;</operator> <name pos:start="49:25" pos:end="49:25">c</name> <operator pos:start="49:27" pos:end="49:28">&lt;=</operator> <name pos:start="49:30" pos:end="49:36">INT_MAX</name></expr>)</condition> <block pos:start="49:39" pos:end="69:5">{<block_content pos:start="51:9" pos:end="67:9">

        <if_stmt pos:start="51:9" pos:end="67:9"><if pos:start="51:9" pos:end="53:35">if <condition pos:start="51:12" pos:end="51:25">(<expr pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:13">a</name> <operator pos:start="51:15" pos:end="51:16">&lt;=</operator> <name pos:start="51:18" pos:end="51:24">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:35"><block_content pos:start="53:13" pos:end="53:35">

            <return pos:start="53:13" pos:end="53:35">return <expr pos:start="53:20" pos:end="53:34"><operator pos:start="53:20" pos:end="53:20">(</operator><name pos:start="53:21" pos:end="53:21">a</name> <operator pos:start="53:23" pos:end="53:23">*</operator> <name pos:start="53:25" pos:end="53:25">b</name> <operator pos:start="53:27" pos:end="53:27">+</operator> <name pos:start="53:29" pos:end="53:29">r</name><operator pos:start="53:30" pos:end="53:30">)</operator> <operator pos:start="53:32" pos:end="53:32">/</operator> <name pos:start="53:34" pos:end="53:34">c</name></expr>;</return></block_content></block></if>

        <else pos:start="55:9" pos:end="67:9">else <block pos:start="55:14" pos:end="67:9">{<block_content pos:start="57:13" pos:end="65:31">

            <decl_stmt pos:start="57:13" pos:end="57:31"><decl pos:start="57:13" pos:end="57:30"><type pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:19">int64_t</name></type> <name pos:start="57:21" pos:end="57:22">ad</name> <init pos:start="57:24" pos:end="57:30">= <expr pos:start="57:26" pos:end="57:30"><name pos:start="57:26" pos:end="57:26">a</name> <operator pos:start="57:28" pos:end="57:28">/</operator> <name pos:start="57:30" pos:end="57:30">c</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="59:13" pos:end="59:45"><decl pos:start="59:13" pos:end="59:44"><type pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:19">int64_t</name></type> <name pos:start="59:21" pos:end="59:22">a2</name> <init pos:start="59:24" pos:end="59:44">= <expr pos:start="59:26" pos:end="59:44"><operator pos:start="59:26" pos:end="59:26">(</operator><name pos:start="59:27" pos:end="59:27">a</name> <operator pos:start="59:29" pos:end="59:29">%</operator> <name pos:start="59:31" pos:end="59:31">c</name> <operator pos:start="59:33" pos:end="59:33">*</operator> <name pos:start="59:35" pos:end="59:35">b</name> <operator pos:start="59:37" pos:end="59:37">+</operator> <name pos:start="59:39" pos:end="59:39">r</name><operator pos:start="59:40" pos:end="59:40">)</operator> <operator pos:start="59:42" pos:end="59:42">/</operator> <name pos:start="59:44" pos:end="59:44">c</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="61:13" pos:end="63:33"><if pos:start="61:13" pos:end="63:33">if <condition pos:start="61:16" pos:end="61:61">(<expr pos:start="61:17" pos:end="61:60"><name pos:start="61:17" pos:end="61:18">ad</name> <operator pos:start="61:20" pos:end="61:21">&gt;=</operator> <name pos:start="61:23" pos:end="61:31">INT32_MAX</name> <operator pos:start="61:33" pos:end="61:34">&amp;&amp;</operator> <name pos:start="61:36" pos:end="61:37">ad</name> <operator pos:start="61:39" pos:end="61:39">&gt;</operator> <operator pos:start="61:41" pos:end="61:41">(</operator><name pos:start="61:42" pos:end="61:50">INT64_MAX</name> <operator pos:start="61:52" pos:end="61:52">-</operator> <name pos:start="61:54" pos:end="61:55">a2</name><operator pos:start="61:56" pos:end="61:56">)</operator> <operator pos:start="61:58" pos:end="61:58">/</operator> <name pos:start="61:60" pos:end="61:60">b</name></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:33"><block_content pos:start="63:17" pos:end="63:33">

                <return pos:start="63:17" pos:end="63:33">return <expr pos:start="63:24" pos:end="63:32"><name pos:start="63:24" pos:end="63:32">INT64_MIN</name></expr>;</return></block_content></block></if></if_stmt>

            <return pos:start="65:13" pos:end="65:31">return <expr pos:start="65:20" pos:end="65:30"><name pos:start="65:20" pos:end="65:21">ad</name> <operator pos:start="65:23" pos:end="65:23">*</operator> <name pos:start="65:25" pos:end="65:25">b</name> <operator pos:start="65:27" pos:end="65:27">+</operator> <name pos:start="65:29" pos:end="65:30">a2</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="124:0">else <block pos:start="69:12" pos:end="124:0">{<block_content pos:start="73:9" pos:end="119:18">

<cpp:if pos:start="71:1" pos:end="71:5">#<cpp:directive pos:start="71:2" pos:end="71:3">if</cpp:directive> <expr pos:start="71:5" pos:end="71:5"><literal type="number" pos:start="71:5" pos:end="71:5">1</literal></expr></cpp:if>

        <decl_stmt pos:start="73:9" pos:end="73:38"><decl pos:start="73:9" pos:end="73:37"><type pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:16">uint64_t</name></type> <name pos:start="73:18" pos:end="73:19">a0</name>  <init pos:start="73:22" pos:end="73:37">= <expr pos:start="73:24" pos:end="73:37"><name pos:start="73:24" pos:end="73:24">a</name> <operator pos:start="73:26" pos:end="73:26">&amp;</operator> <literal type="number" pos:start="73:28" pos:end="73:37">0xFFFFFFFF</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="75:9" pos:end="75:31"><decl pos:start="75:9" pos:end="75:30"><type pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:16">uint64_t</name></type> <name pos:start="75:18" pos:end="75:19">a1</name>  <init pos:start="75:22" pos:end="75:30">= <expr pos:start="75:24" pos:end="75:30"><name pos:start="75:24" pos:end="75:24">a</name> <operator pos:start="75:26" pos:end="75:27">&gt;&gt;</operator> <literal type="number" pos:start="75:29" pos:end="75:30">32</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="77:9" pos:end="77:38"><decl pos:start="77:9" pos:end="77:37"><type pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:16">uint64_t</name></type> <name pos:start="77:18" pos:end="77:19">b0</name>  <init pos:start="77:22" pos:end="77:37">= <expr pos:start="77:24" pos:end="77:37"><name pos:start="77:24" pos:end="77:24">b</name> <operator pos:start="77:26" pos:end="77:26">&amp;</operator> <literal type="number" pos:start="77:28" pos:end="77:37">0xFFFFFFFF</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:31"><decl pos:start="79:9" pos:end="79:30"><type pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:16">uint64_t</name></type> <name pos:start="79:18" pos:end="79:19">b1</name>  <init pos:start="79:22" pos:end="79:30">= <expr pos:start="79:24" pos:end="79:30"><name pos:start="79:24" pos:end="79:24">b</name> <operator pos:start="79:26" pos:end="79:27">&gt;&gt;</operator> <literal type="number" pos:start="79:29" pos:end="79:30">32</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:41"><decl pos:start="81:9" pos:end="81:40"><type pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:16">uint64_t</name></type> <name pos:start="81:18" pos:end="81:19">t1</name>  <init pos:start="81:22" pos:end="81:40">= <expr pos:start="81:24" pos:end="81:40"><name pos:start="81:24" pos:end="81:25">a0</name> <operator pos:start="81:27" pos:end="81:27">*</operator> <name pos:start="81:29" pos:end="81:30">b1</name> <operator pos:start="81:32" pos:end="81:32">+</operator> <name pos:start="81:34" pos:end="81:35">a1</name> <operator pos:start="81:37" pos:end="81:37">*</operator> <name pos:start="81:39" pos:end="81:40">b0</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="83:32"><decl pos:start="83:9" pos:end="83:31"><type pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:16">uint64_t</name></type> <name pos:start="83:18" pos:end="83:20">t1a</name> <init pos:start="83:22" pos:end="83:31">= <expr pos:start="83:24" pos:end="83:31"><name pos:start="83:24" pos:end="83:25">t1</name> <operator pos:start="83:27" pos:end="83:28">&lt;&lt;</operator> <literal type="number" pos:start="83:30" pos:end="83:31">32</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:14"><decl pos:start="85:9" pos:end="85:13"><type pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">int</name></type> <name pos:start="85:13" pos:end="85:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:28"><expr pos:start="89:9" pos:end="89:27"><name pos:start="89:9" pos:end="89:10">a0</name>  <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:16">a0</name> <operator pos:start="89:18" pos:end="89:18">*</operator> <name pos:start="89:20" pos:end="89:21">b0</name> <operator pos:start="89:23" pos:end="89:23">+</operator> <name pos:start="89:25" pos:end="89:27">t1a</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:48"><expr pos:start="91:9" pos:end="91:47"><name pos:start="91:9" pos:end="91:10">a1</name>  <operator pos:start="91:13" pos:end="91:13">=</operator> <name pos:start="91:15" pos:end="91:16">a1</name> <operator pos:start="91:18" pos:end="91:18">*</operator> <name pos:start="91:20" pos:end="91:21">b1</name> <operator pos:start="91:23" pos:end="91:23">+</operator> <operator pos:start="91:25" pos:end="91:25">(</operator><name pos:start="91:26" pos:end="91:27">t1</name> <operator pos:start="91:29" pos:end="91:30">&gt;&gt;</operator> <literal type="number" pos:start="91:32" pos:end="91:33">32</literal><operator pos:start="91:34" pos:end="91:34">)</operator> <operator pos:start="91:36" pos:end="91:36">+</operator> <operator pos:start="91:38" pos:end="91:38">(</operator><name pos:start="91:39" pos:end="91:40">a0</name> <operator pos:start="91:42" pos:end="91:42">&lt;</operator> <name pos:start="91:44" pos:end="91:46">t1a</name><operator pos:start="91:47" pos:end="91:47">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:16"><expr pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:10">a0</name> <operator pos:start="93:12" pos:end="93:13">+=</operator> <name pos:start="93:15" pos:end="93:15">r</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:21"><expr pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:10">a1</name> <operator pos:start="95:12" pos:end="95:13">+=</operator> <name pos:start="95:15" pos:end="95:16">a0</name> <operator pos:start="95:18" pos:end="95:18">&lt;</operator> <name pos:start="95:20" pos:end="95:20">r</name></expr>;</expr_stmt>



        <for pos:start="99:9" pos:end="113:9">for <control pos:start="99:13" pos:end="99:33">(<init pos:start="99:14" pos:end="99:20"><expr pos:start="99:14" pos:end="99:19"><name pos:start="99:14" pos:end="99:14">i</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <literal type="number" pos:start="99:18" pos:end="99:19">63</literal></expr>;</init> <condition pos:start="99:22" pos:end="99:28"><expr pos:start="99:22" pos:end="99:27"><name pos:start="99:22" pos:end="99:22">i</name> <operator pos:start="99:24" pos:end="99:25">&gt;=</operator> <literal type="number" pos:start="99:27" pos:end="99:27">0</literal></expr>;</condition> <incr pos:start="99:30" pos:end="99:32"><expr pos:start="99:30" pos:end="99:32"><name pos:start="99:30" pos:end="99:30">i</name><operator pos:start="99:31" pos:end="99:32">--</operator></expr></incr>)</control> <block pos:start="99:35" pos:end="113:9">{<block_content pos:start="101:13" pos:end="111:13">

            <expr_stmt pos:start="101:13" pos:end="101:39"><expr pos:start="101:13" pos:end="101:38"><name pos:start="101:13" pos:end="101:14">a1</name> <operator pos:start="101:16" pos:end="101:17">+=</operator> <name pos:start="101:19" pos:end="101:20">a1</name> <operator pos:start="101:22" pos:end="101:22">+</operator> <operator pos:start="101:24" pos:end="101:24">(</operator><operator pos:start="101:25" pos:end="101:25">(</operator><name pos:start="101:26" pos:end="101:27">a0</name> <operator pos:start="101:29" pos:end="101:30">&gt;&gt;</operator> <name pos:start="101:32" pos:end="101:32">i</name><operator pos:start="101:33" pos:end="101:33">)</operator> <operator pos:start="101:35" pos:end="101:35">&amp;</operator> <literal type="number" pos:start="101:37" pos:end="101:37">1</literal><operator pos:start="101:38" pos:end="101:38">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:21"><expr pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:14">t1</name> <operator pos:start="103:16" pos:end="103:17">+=</operator> <name pos:start="103:19" pos:end="103:20">t1</name></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="111:13"><if pos:start="105:13" pos:end="111:13">if <condition pos:start="105:16" pos:end="105:24">(<expr pos:start="105:17" pos:end="105:23"><name pos:start="105:17" pos:end="105:17">c</name> <operator pos:start="105:19" pos:end="105:20">&lt;=</operator> <name pos:start="105:22" pos:end="105:23">a1</name></expr>)</condition> <block pos:start="105:26" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:21">

                <expr_stmt pos:start="107:17" pos:end="107:24"><expr pos:start="107:17" pos:end="107:23"><name pos:start="107:17" pos:end="107:18">a1</name> <operator pos:start="107:20" pos:end="107:21">-=</operator> <name pos:start="107:23" pos:end="107:23">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:21"><expr pos:start="109:17" pos:end="109:20"><name pos:start="109:17" pos:end="109:18">t1</name><operator pos:start="109:19" pos:end="109:20">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="115:9" pos:end="117:29"><if pos:start="115:9" pos:end="117:29">if <condition pos:start="115:12" pos:end="115:27">(<expr pos:start="115:13" pos:end="115:26"><name pos:start="115:13" pos:end="115:14">t1</name> <operator pos:start="115:16" pos:end="115:16">&gt;</operator> <name pos:start="115:18" pos:end="115:26">INT64_MAX</name></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:29"><block_content pos:start="117:13" pos:end="117:29">

            <return pos:start="117:13" pos:end="117:29">return <expr pos:start="117:20" pos:end="117:28"><name pos:start="117:20" pos:end="117:28">INT64_MIN</name></expr>;</return></block_content></block></if></if_stmt>

        <return pos:start="119:9" pos:end="119:18">return <expr pos:start="119:16" pos:end="119:17"><name pos:start="119:16" pos:end="119:17">t1</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

<cpp:else pos:start="123:1" pos:end="123:5">#<cpp:directive pos:start="123:2" pos:end="123:5">else</cpp:directive></cpp:else>

        <decl_stmt pos:start="125:9" pos:end="125:21"><decl pos:start="125:9" pos:end="125:20"><type pos:start="125:9" pos:end="125:17"><name pos:start="125:9" pos:end="125:17">AVInteger</name></type> <name pos:start="125:19" pos:end="125:20">ai</name></decl>;</decl_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:48"><expr pos:start="127:9" pos:end="127:47"><name pos:start="127:9" pos:end="127:10">ai</name> <operator pos:start="127:12" pos:end="127:12">=</operator> <call pos:start="127:14" pos:end="127:47"><name pos:start="127:14" pos:end="127:21">av_mul_i</name><argument_list pos:start="127:22" pos:end="127:47">(<argument pos:start="127:23" pos:end="127:33"><expr pos:start="127:23" pos:end="127:33"><call pos:start="127:23" pos:end="127:33"><name pos:start="127:23" pos:end="127:30">av_int2i</name><argument_list pos:start="127:31" pos:end="127:33">(<argument pos:start="127:32" pos:end="127:32"><expr pos:start="127:32" pos:end="127:32"><name pos:start="127:32" pos:end="127:32">a</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="127:36" pos:end="127:46"><expr pos:start="127:36" pos:end="127:46"><call pos:start="127:36" pos:end="127:46"><name pos:start="127:36" pos:end="127:43">av_int2i</name><argument_list pos:start="127:44" pos:end="127:46">(<argument pos:start="127:45" pos:end="127:45"><expr pos:start="127:45" pos:end="127:45"><name pos:start="127:45" pos:end="127:45">b</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:39"><expr pos:start="129:9" pos:end="129:38"><name pos:start="129:9" pos:end="129:10">ai</name> <operator pos:start="129:12" pos:end="129:12">=</operator> <call pos:start="129:14" pos:end="129:38"><name pos:start="129:14" pos:end="129:21">av_add_i</name><argument_list pos:start="129:22" pos:end="129:38">(<argument pos:start="129:23" pos:end="129:24"><expr pos:start="129:23" pos:end="129:24"><name pos:start="129:23" pos:end="129:24">ai</name></expr></argument>, <argument pos:start="129:27" pos:end="129:37"><expr pos:start="129:27" pos:end="129:37"><call pos:start="129:27" pos:end="129:37"><name pos:start="129:27" pos:end="129:34">av_int2i</name><argument_list pos:start="129:35" pos:end="129:37">(<argument pos:start="129:36" pos:end="129:36"><expr pos:start="129:36" pos:end="129:36"><name pos:start="129:36" pos:end="129:36">r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="133:9" pos:end="133:51">return <expr pos:start="133:16" pos:end="133:50"><call pos:start="133:16" pos:end="133:50"><name pos:start="133:16" pos:end="133:23">av_i2int</name><argument_list pos:start="133:24" pos:end="133:50">(<argument pos:start="133:25" pos:end="133:49"><expr pos:start="133:25" pos:end="133:49"><call pos:start="133:25" pos:end="133:49"><name pos:start="133:25" pos:end="133:32">av_div_i</name><argument_list pos:start="133:33" pos:end="133:49">(<argument pos:start="133:34" pos:end="133:35"><expr pos:start="133:34" pos:end="133:35"><name pos:start="133:34" pos:end="133:35">ai</name></expr></argument>, <argument pos:start="133:38" pos:end="133:48"><expr pos:start="133:38" pos:end="133:48"><call pos:start="133:38" pos:end="133:48"><name pos:start="133:38" pos:end="133:45">av_int2i</name><argument_list pos:start="133:46" pos:end="133:48">(<argument pos:start="133:47" pos:end="133:47"><expr pos:start="133:47" pos:end="133:47"><name pos:start="133:47" pos:end="133:47">c</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></function>

<cpp:endif pos:start="137:1" pos:end="137:6">#<cpp:directive pos:start="137:2" pos:end="137:6">endif</cpp:directive></cpp:endif>

}
</unit>
