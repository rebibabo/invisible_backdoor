<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9160.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">slavio_timer_get_out</name><parameter_list pos:start="1:33" pos:end="1:54">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:52"><name pos:start="1:34" pos:end="1:50">SLAVIO_TIMERState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:56">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:16">diff</name></decl>, <decl pos:start="7:19" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:19" pos:end="7:23">ticks</name></decl>, <decl pos:start="7:26" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:26" pos:end="7:30">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">limit</name></decl>;</decl_stmt>



    <comment type="line" pos:start="13:5" pos:end="13:66">// There are three clock tick units: CPU ticks, register units</comment>

    <comment type="line" pos:start="15:5" pos:end="15:49">// (nanoseconds), and counter ticks (500 ns).</comment>

    <if_stmt pos:start="17:5" pos:end="23:58"><if pos:start="17:5" pos:end="19:29">if <condition pos:start="17:8" pos:end="17:35">(<expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:15">mode</name></name> <operator pos:start="17:17" pos:end="17:18">==</operator> <literal type="number" pos:start="17:20" pos:end="17:20">1</literal> <operator pos:start="17:22" pos:end="17:23">&amp;&amp;</operator> <name pos:start="17:25" pos:end="17:34"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:34">stopped</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:29"><block_content pos:start="19:9" pos:end="19:29">

	<expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:13">ticks</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:17">s</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:28">stop_time</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="21:5" pos:end="23:58">else<block type="pseudo" pos:start="23:9" pos:end="23:58"><block_content pos:start="23:9" pos:end="23:58">

	<expr_stmt pos:start="23:9" pos:end="23:58"><expr pos:start="23:9" pos:end="23:57"><name pos:start="23:9" pos:end="23:13">ticks</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:40"><name pos:start="23:17" pos:end="23:30">qemu_get_clock</name><argument_list pos:start="23:31" pos:end="23:40">(<argument pos:start="23:32" pos:end="23:39"><expr pos:start="23:32" pos:end="23:39"><name pos:start="23:32" pos:end="23:39">vm_clock</name></expr></argument>)</argument_list></call> <operator pos:start="23:42" pos:end="23:42">-</operator> <name pos:start="23:44" pos:end="23:57"><name pos:start="23:44" pos:end="23:44">s</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:57">tick_offset</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:7">out</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <operator pos:start="27:11" pos:end="27:11">(</operator><name pos:start="27:12" pos:end="27:16">ticks</name> <operator pos:start="27:18" pos:end="27:18">&gt;</operator> <name pos:start="27:20" pos:end="27:33"><name pos:start="27:20" pos:end="27:20">s</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:33">expire_time</name></name><operator pos:start="27:34" pos:end="27:34">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:32"><if pos:start="29:5" pos:end="31:32">if <condition pos:start="29:8" pos:end="29:12">(<expr pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">out</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:32"><block_content pos:start="31:9" pos:end="31:32">

	<expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:18">reached</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:31">0x80000000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="39:25"><if pos:start="33:5" pos:end="35:27">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:17"><name pos:start="33:10" pos:end="33:10">s</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:17">limit</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:27"><block_content pos:start="35:9" pos:end="35:27">

	<expr_stmt pos:start="35:9" pos:end="35:27"><expr pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:13">limit</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <literal type="number" pos:start="35:17" pos:end="35:26">0x7fffffff</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="37:5" pos:end="39:25">else<block type="pseudo" pos:start="39:9" pos:end="39:25"><block_content pos:start="39:9" pos:end="39:25">

	<expr_stmt pos:start="39:9" pos:end="39:25"><expr pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:13">limit</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:24"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:24">limit</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="line" pos:start="43:5" pos:end="43:46">// Convert register units to counter ticks</comment>

    <expr_stmt pos:start="45:5" pos:end="45:23"><expr pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:9">limit</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <name pos:start="45:13" pos:end="45:17">limit</name> <operator pos:start="45:19" pos:end="45:20">&gt;&gt;</operator> <literal type="number" pos:start="45:22" pos:end="45:22">9</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="49:5" pos:end="49:41">// Convert cpu ticks to counter ticks</comment>

    <expr_stmt pos:start="51:5" pos:end="51:73"><expr pos:start="51:5" pos:end="51:72"><name pos:start="51:5" pos:end="51:8">diff</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <call pos:start="51:12" pos:end="51:72"><name pos:start="51:12" pos:end="51:19">muldiv64</name><argument_list pos:start="51:20" pos:end="51:72">(<argument pos:start="51:21" pos:end="51:46"><expr pos:start="51:21" pos:end="51:46"><name pos:start="51:21" pos:end="51:25">ticks</name> <operator pos:start="51:27" pos:end="51:27">-</operator> <name pos:start="51:29" pos:end="51:46"><name pos:start="51:29" pos:end="51:29">s</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:46">count_load_time</name></name></expr></argument>, <argument pos:start="51:49" pos:end="51:56"><expr pos:start="51:49" pos:end="51:56"><name pos:start="51:49" pos:end="51:56">CNT_FREQ</name></expr></argument>, <argument pos:start="51:59" pos:end="51:71"><expr pos:start="51:59" pos:end="51:71"><name pos:start="51:59" pos:end="51:71">ticks_per_sec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="55:5" pos:end="55:64">// Calculate what the counter should be, convert to register</comment>

    <comment type="line" pos:start="57:5" pos:end="57:12">// units</comment>

    <expr_stmt pos:start="59:5" pos:end="59:25"><expr pos:start="59:5" pos:end="59:24"><name pos:start="59:5" pos:end="59:9">count</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <name pos:start="59:13" pos:end="59:16">diff</name> <operator pos:start="59:18" pos:end="59:18">%</operator> <name pos:start="59:20" pos:end="59:24">limit</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:12"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:12">count</name></name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:20">count</name> <operator pos:start="61:22" pos:end="61:23">&lt;&lt;</operator> <literal type="number" pos:start="61:25" pos:end="61:25">9</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:16">counthigh</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <name pos:start="63:20" pos:end="63:24">count</name> <operator pos:start="63:26" pos:end="63:27">&gt;&gt;</operator> <literal type="number" pos:start="63:29" pos:end="63:30">22</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="67:5" pos:end="67:52">// Expire time: CPU ticks left to next interrupt</comment>

    <comment type="line" pos:start="69:5" pos:end="69:51">// Convert remaining counter ticks to CPU ticks</comment>

    <expr_stmt pos:start="71:5" pos:end="71:78"><expr pos:start="71:5" pos:end="71:77"><name pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:18">expire_time</name></name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:26">ticks</name> <operator pos:start="71:28" pos:end="71:28">+</operator> <call pos:start="71:30" pos:end="71:77"><name pos:start="71:30" pos:end="71:37">muldiv64</name><argument_list pos:start="71:38" pos:end="71:77">(<argument pos:start="71:39" pos:end="71:51"><expr pos:start="71:39" pos:end="71:51"><name pos:start="71:39" pos:end="71:43">limit</name> <operator pos:start="71:45" pos:end="71:45">-</operator> <name pos:start="71:47" pos:end="71:51">count</name></expr></argument>, <argument pos:start="71:54" pos:end="71:66"><expr pos:start="71:54" pos:end="71:66"><name pos:start="71:54" pos:end="71:66">ticks_per_sec</name></expr></argument>, <argument pos:start="71:69" pos:end="71:76"><expr pos:start="71:69" pos:end="71:76"><name pos:start="71:69" pos:end="71:76">CNT_FREQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:232"><expr pos:start="75:5" pos:end="75:231"><call pos:start="75:5" pos:end="75:231"><name pos:start="75:5" pos:end="75:11">DPRINTF</name><argument_list pos:start="75:12" pos:end="75:231">(<argument pos:start="75:13" pos:end="75:109"><expr pos:start="75:13" pos:end="75:109"><literal type="string" pos:start="75:13" pos:end="75:44">"irq %d limit %d reached %d d %"</literal> <name pos:start="75:46" pos:end="75:51">PRId64</name> <literal type="string" pos:start="75:53" pos:end="75:78">" count %d s-&gt;c %x diff %"</literal> <name pos:start="75:80" pos:end="75:85">PRId64</name> <literal type="string" pos:start="75:87" pos:end="75:109">" stopped %d mode %d\n"</literal></expr></argument>, <argument pos:start="75:112" pos:end="75:117"><expr pos:start="75:112" pos:end="75:117"><name pos:start="75:112" pos:end="75:117"><name pos:start="75:112" pos:end="75:112">s</name><operator pos:start="75:113" pos:end="75:114">-&gt;</operator><name pos:start="75:115" pos:end="75:117">irq</name></name></expr></argument>, <argument pos:start="75:120" pos:end="75:124"><expr pos:start="75:120" pos:end="75:124"><name pos:start="75:120" pos:end="75:124">limit</name></expr></argument>, <argument pos:start="75:127" pos:end="75:140"><expr pos:start="75:127" pos:end="75:140"><ternary pos:start="75:127" pos:end="75:140"><condition pos:start="75:127" pos:end="75:137"><expr pos:start="75:127" pos:end="75:136"><name pos:start="75:127" pos:end="75:136"><name pos:start="75:127" pos:end="75:127">s</name><operator pos:start="75:128" pos:end="75:129">-&gt;</operator><name pos:start="75:130" pos:end="75:136">reached</name></name></expr>?</condition><then pos:start="75:138" pos:end="75:138"><expr pos:start="75:138" pos:end="75:138"><literal type="number" pos:start="75:138" pos:end="75:138">1</literal></expr></then><else pos:start="75:139" pos:end="75:140">:<expr pos:start="75:140" pos:end="75:140"><literal type="number" pos:start="75:140" pos:end="75:140">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="75:143" pos:end="75:168"><expr pos:start="75:143" pos:end="75:168"><operator pos:start="75:143" pos:end="75:143">(</operator><name pos:start="75:144" pos:end="75:148">ticks</name><operator pos:start="75:149" pos:end="75:149">-</operator><name pos:start="75:150" pos:end="75:167"><name pos:start="75:150" pos:end="75:150">s</name><operator pos:start="75:151" pos:end="75:152">-&gt;</operator><name pos:start="75:153" pos:end="75:167">count_load_time</name></name><operator pos:start="75:168" pos:end="75:168">)</operator></expr></argument>, <argument pos:start="75:171" pos:end="75:175"><expr pos:start="75:171" pos:end="75:175"><name pos:start="75:171" pos:end="75:175">count</name></expr></argument>, <argument pos:start="75:178" pos:end="75:185"><expr pos:start="75:178" pos:end="75:185"><name pos:start="75:178" pos:end="75:185"><name pos:start="75:178" pos:end="75:178">s</name><operator pos:start="75:179" pos:end="75:180">-&gt;</operator><name pos:start="75:181" pos:end="75:185">count</name></name></expr></argument>, <argument pos:start="75:188" pos:end="75:209"><expr pos:start="75:188" pos:end="75:209"><name pos:start="75:188" pos:end="75:201"><name pos:start="75:188" pos:end="75:188">s</name><operator pos:start="75:189" pos:end="75:190">-&gt;</operator><name pos:start="75:191" pos:end="75:201">expire_time</name></name> <operator pos:start="75:203" pos:end="75:203">-</operator> <name pos:start="75:205" pos:end="75:209">ticks</name></expr></argument>, <argument pos:start="75:212" pos:end="75:221"><expr pos:start="75:212" pos:end="75:221"><name pos:start="75:212" pos:end="75:221"><name pos:start="75:212" pos:end="75:212">s</name><operator pos:start="75:213" pos:end="75:214">-&gt;</operator><name pos:start="75:215" pos:end="75:221">stopped</name></name></expr></argument>, <argument pos:start="75:224" pos:end="75:230"><expr pos:start="75:224" pos:end="75:230"><name pos:start="75:224" pos:end="75:230"><name pos:start="75:224" pos:end="75:224">s</name><operator pos:start="75:225" pos:end="75:226">-&gt;</operator><name pos:start="75:227" pos:end="75:230">mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="81:56"><if pos:start="79:5" pos:end="81:56">if <condition pos:start="79:8" pos:end="79:21">(<expr pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:15">mode</name></name> <operator pos:start="79:17" pos:end="79:18">!=</operator> <literal type="number" pos:start="79:20" pos:end="79:20">1</literal></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:56"><block_content pos:start="81:9" pos:end="81:56">

	<expr_stmt pos:start="81:9" pos:end="81:56"><expr pos:start="81:9" pos:end="81:55"><call pos:start="81:9" pos:end="81:55"><name pos:start="81:9" pos:end="81:23">pic_set_irq_cpu</name><argument_list pos:start="81:24" pos:end="81:55">(<argument pos:start="81:25" pos:end="81:33"><expr pos:start="81:25" pos:end="81:33"><name pos:start="81:25" pos:end="81:33"><name pos:start="81:25" pos:end="81:25">s</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:33">intctl</name></name></expr></argument>, <argument pos:start="81:36" pos:end="81:41"><expr pos:start="81:36" pos:end="81:41"><name pos:start="81:36" pos:end="81:41"><name pos:start="81:36" pos:end="81:36">s</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:41">irq</name></name></expr></argument>, <argument pos:start="81:44" pos:end="81:46"><expr pos:start="81:44" pos:end="81:46"><name pos:start="81:44" pos:end="81:46">out</name></expr></argument>, <argument pos:start="81:49" pos:end="81:54"><expr pos:start="81:49" pos:end="81:54"><name pos:start="81:49" pos:end="81:54"><name pos:start="81:49" pos:end="81:49">s</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:54">cpu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
