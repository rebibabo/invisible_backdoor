<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14492.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">virtio_pci_config_write</name><parameter_list pos:start="1:36" pos:end="3:64">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:56">hwaddr</name></type> <name pos:start="1:58" pos:end="1:61">addr</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:48"><decl pos:start="3:37" pos:end="3:48"><type pos:start="3:37" pos:end="3:48"><name pos:start="3:37" pos:end="3:44">uint64_t</name></type> <name pos:start="3:46" pos:end="3:48">val</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:63"><decl pos:start="3:51" pos:end="3:63"><type pos:start="3:51" pos:end="3:63"><name pos:start="3:51" pos:end="3:58">unsigned</name></type> <name pos:start="3:60" pos:end="3:63">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:5">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtIOPCIProxy</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">proxy</name> <init pos:start="7:27" pos:end="7:34">= <expr pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:34">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:56"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:19">config</name> <init pos:start="9:21" pos:end="9:56">= <expr pos:start="9:23" pos:end="9:56"><call pos:start="9:23" pos:end="9:56"><name pos:start="9:23" pos:end="9:39">VIRTIO_PCI_CONFIG</name><argument_list pos:start="9:40" pos:end="9:56">(<argument pos:start="9:41" pos:end="9:55"><expr pos:start="9:41" pos:end="9:55"><operator pos:start="9:41" pos:end="9:41">&amp;</operator><name pos:start="9:42" pos:end="9:55"><name pos:start="9:42" pos:end="9:46">proxy</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:55">pci_dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:12">addr</name> <operator pos:start="11:14" pos:end="11:14">&lt;</operator> <name pos:start="11:16" pos:end="11:21">config</name></expr>)</condition> <block pos:start="11:24" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:46"><expr pos:start="13:9" pos:end="13:45"><call pos:start="13:9" pos:end="13:45"><name pos:start="13:9" pos:end="13:27">virtio_ioport_write</name><argument_list pos:start="13:28" pos:end="13:45">(<argument pos:start="13:29" pos:end="13:33"><expr pos:start="13:29" pos:end="13:33"><name pos:start="13:29" pos:end="13:33">proxy</name></expr></argument>, <argument pos:start="13:36" pos:end="13:39"><expr pos:start="13:36" pos:end="13:39"><name pos:start="13:36" pos:end="13:39">addr</name></expr></argument>, <argument pos:start="13:42" pos:end="13:44"><expr pos:start="13:42" pos:end="13:44"><name pos:start="13:42" pos:end="13:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:8">addr</name> <operator pos:start="19:10" pos:end="19:11">-=</operator> <name pos:start="19:13" pos:end="19:18">config</name></expr>;</expr_stmt>

    <comment type="block" pos:start="21:5" pos:end="27:7">/*

     * Virtio-PCI is odd. Ioports are LE but config space is target native

     * endian.

     */</comment>

    <switch pos:start="29:5" pos:end="61:5">switch <condition pos:start="29:12" pos:end="29:17">(<expr pos:start="29:13" pos:end="29:16"><name pos:start="29:13" pos:end="29:16">size</name></expr>)</condition> <block pos:start="29:19" pos:end="61:5">{<block_content pos:start="31:5" pos:end="59:14">

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">1</literal></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:53"><expr pos:start="33:9" pos:end="33:52"><call pos:start="33:9" pos:end="33:52"><name pos:start="33:9" pos:end="33:28">virtio_config_writeb</name><argument_list pos:start="33:29" pos:end="33:52">(<argument pos:start="33:30" pos:end="33:40"><expr pos:start="33:30" pos:end="33:40"><name pos:start="33:30" pos:end="33:40"><name pos:start="33:30" pos:end="33:34">proxy</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:40">vdev</name></name></expr></argument>, <argument pos:start="33:43" pos:end="33:46"><expr pos:start="33:43" pos:end="33:46"><name pos:start="33:43" pos:end="33:46">addr</name></expr></argument>, <argument pos:start="33:49" pos:end="33:51"><expr pos:start="33:49" pos:end="33:51"><name pos:start="33:49" pos:end="33:51">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">2</literal></expr>:</case>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:35">(<expr pos:start="39:13" pos:end="39:34"><call pos:start="39:13" pos:end="39:34"><name pos:start="39:13" pos:end="39:32">virtio_is_big_endian</name><argument_list pos:start="39:33" pos:end="39:34">()</argument_list></call></expr>)</condition> <block pos:start="39:37" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:31">

            <expr_stmt pos:start="41:13" pos:end="41:31"><expr pos:start="41:13" pos:end="41:30"><name pos:start="41:13" pos:end="41:15">val</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:25">bswap16</name><argument_list pos:start="41:26" pos:end="41:30">(<argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:53"><expr pos:start="45:9" pos:end="45:52"><call pos:start="45:9" pos:end="45:52"><name pos:start="45:9" pos:end="45:28">virtio_config_writew</name><argument_list pos:start="45:29" pos:end="45:52">(<argument pos:start="45:30" pos:end="45:40"><expr pos:start="45:30" pos:end="45:40"><name pos:start="45:30" pos:end="45:40"><name pos:start="45:30" pos:end="45:34">proxy</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:40">vdev</name></name></expr></argument>, <argument pos:start="45:43" pos:end="45:46"><expr pos:start="45:43" pos:end="45:46"><name pos:start="45:43" pos:end="45:46">addr</name></expr></argument>, <argument pos:start="45:49" pos:end="45:51"><expr pos:start="45:49" pos:end="45:51"><name pos:start="45:49" pos:end="45:51">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:11">case <expr pos:start="49:10" pos:end="49:10"><literal type="number" pos:start="49:10" pos:end="49:10">4</literal></expr>:</case>

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:35">(<expr pos:start="51:13" pos:end="51:34"><call pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:32">virtio_is_big_endian</name><argument_list pos:start="51:33" pos:end="51:34">()</argument_list></call></expr>)</condition> <block pos:start="51:37" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:31">

            <expr_stmt pos:start="53:13" pos:end="53:31"><expr pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:15">val</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:25">bswap32</name><argument_list pos:start="53:26" pos:end="53:30">(<argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:29">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:53"><expr pos:start="57:9" pos:end="57:52"><call pos:start="57:9" pos:end="57:52"><name pos:start="57:9" pos:end="57:28">virtio_config_writel</name><argument_list pos:start="57:29" pos:end="57:52">(<argument pos:start="57:30" pos:end="57:40"><expr pos:start="57:30" pos:end="57:40"><name pos:start="57:30" pos:end="57:40"><name pos:start="57:30" pos:end="57:34">proxy</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:40">vdev</name></name></expr></argument>, <argument pos:start="57:43" pos:end="57:46"><expr pos:start="57:43" pos:end="57:46"><name pos:start="57:43" pos:end="57:46">addr</name></expr></argument>, <argument pos:start="57:49" pos:end="57:51"><expr pos:start="57:49" pos:end="57:51"><name pos:start="57:49" pos:end="57:51">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
