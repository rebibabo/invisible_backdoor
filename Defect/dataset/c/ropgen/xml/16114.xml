<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16114.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">output_segment_list</name><parameter_list pos:start="1:32" pos:end="1:83">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:44">OutputStream</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">os</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><name pos:start="1:51" pos:end="1:61">AVIOContext</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">out</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:82"><decl pos:start="1:69" pos:end="1:82"><type pos:start="1:69" pos:end="1:82"><name pos:start="1:69" pos:end="1:79">DASHContext</name> <modifier pos:start="1:81" pos:end="1:81">*</modifier></type><name pos:start="1:82" pos:end="1:82">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:22">start_index</name> <init pos:start="5:24" pos:end="5:26">= <expr pos:start="5:26" pos:end="5:26"><literal type="number" pos:start="5:26" pos:end="5:26">0</literal></expr></init></decl>, <decl pos:start="5:29" pos:end="5:44"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:40">start_number</name> <init pos:start="5:42" pos:end="5:44">= <expr pos:start="5:44" pos:end="5:44"><literal type="number" pos:start="5:44" pos:end="5:44">1</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="13:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="7:23">(<expr pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:9">c</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:22">window_size</name></name></expr>)</condition> <block pos:start="7:25" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:68">

        <expr_stmt pos:start="9:9" pos:end="9:68"><expr pos:start="9:9" pos:end="9:67"><name pos:start="9:9" pos:end="9:19">start_index</name>  <operator pos:start="9:22" pos:end="9:22">=</operator> <call pos:start="9:24" pos:end="9:67"><name pos:start="9:24" pos:end="9:28">FFMAX</name><argument_list pos:start="9:29" pos:end="9:67">(<argument pos:start="9:30" pos:end="9:63"><expr pos:start="9:30" pos:end="9:63"><name pos:start="9:30" pos:end="9:44"><name pos:start="9:30" pos:end="9:31">os</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:44">nb_segments</name></name>   <operator pos:start="9:48" pos:end="9:48">-</operator> <name pos:start="9:50" pos:end="9:63"><name pos:start="9:50" pos:end="9:50">c</name><operator pos:start="9:51" pos:end="9:52">-&gt;</operator><name pos:start="9:53" pos:end="9:63">window_size</name></name></expr></argument>, <argument pos:start="9:66" pos:end="9:66"><expr pos:start="9:66" pos:end="9:66"><literal type="number" pos:start="9:66" pos:end="9:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:68"><expr pos:start="11:9" pos:end="11:67"><name pos:start="11:9" pos:end="11:20">start_number</name> <operator pos:start="11:22" pos:end="11:22">=</operator> <call pos:start="11:24" pos:end="11:67"><name pos:start="11:24" pos:end="11:28">FFMAX</name><argument_list pos:start="11:29" pos:end="11:67">(<argument pos:start="11:30" pos:end="11:63"><expr pos:start="11:30" pos:end="11:63"><name pos:start="11:30" pos:end="11:46"><name pos:start="11:30" pos:end="11:31">os</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:46">segment_index</name></name> <operator pos:start="11:48" pos:end="11:48">-</operator> <name pos:start="11:50" pos:end="11:63"><name pos:start="11:50" pos:end="11:50">c</name><operator pos:start="11:51" pos:end="11:52">-&gt;</operator><name pos:start="11:53" pos:end="11:63">window_size</name></name></expr></argument>, <argument pos:start="11:66" pos:end="11:66"><expr pos:start="11:66" pos:end="11:66"><literal type="number" pos:start="11:66" pos:end="11:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="107:5"><if pos:start="17:5" pos:end="67:5">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:23">use_template</name></name></expr>)</condition> <block pos:start="17:26" pos:end="67:5">{<block_content pos:start="19:9" pos:end="65:57">

        <decl_stmt pos:start="19:9" pos:end="19:92"><decl pos:start="19:9" pos:end="19:91"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:21">timescale</name> <init pos:start="19:23" pos:end="19:91">= <expr pos:start="19:25" pos:end="19:91"><ternary pos:start="19:25" pos:end="19:91"><condition pos:start="19:25" pos:end="19:41"><expr pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:25">c</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:39">use_timeline</name></name></expr> ?</condition><then pos:start="19:43" pos:end="19:76"> <expr pos:start="19:43" pos:end="19:76"><name pos:start="19:43" pos:end="19:61"><name pos:start="19:43" pos:end="19:44">os</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:49">ctx</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:58">streams</name><index pos:start="19:59" pos:end="19:61">[<expr pos:start="19:60" pos:end="19:60"><literal type="number" pos:start="19:60" pos:end="19:60">0</literal></expr>]</index></name><operator pos:start="19:62" pos:end="19:63">-&gt;</operator><name pos:start="19:64" pos:end="19:76"><name pos:start="19:64" pos:end="19:72">time_base</name><operator pos:start="19:73" pos:end="19:73">.</operator><name pos:start="19:74" pos:end="19:76">den</name></name></expr> </then><else pos:start="19:78" pos:end="19:91">: <expr pos:start="19:80" pos:end="19:91"><name pos:start="19:80" pos:end="19:91">AV_TIME_BASE</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:82"><expr pos:start="21:9" pos:end="21:81"><call pos:start="21:9" pos:end="21:81"><name pos:start="21:9" pos:end="21:19">avio_printf</name><argument_list pos:start="21:20" pos:end="21:81">(<argument pos:start="21:21" pos:end="21:23"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:23">out</name></expr></argument>, <argument pos:start="21:26" pos:end="21:69"><expr pos:start="21:26" pos:end="21:69"><literal type="string" pos:start="21:26" pos:end="21:69">"\t\t\t\t&lt;SegmentTemplate timescale=\"%d\" "</literal></expr></argument>, <argument pos:start="21:72" pos:end="21:80"><expr pos:start="21:72" pos:end="21:80"><name pos:start="21:72" pos:end="21:80">timescale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:67"><if pos:start="23:9" pos:end="25:67">if <condition pos:start="23:12" pos:end="23:29">(<expr pos:start="23:13" pos:end="23:28"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:28"><name pos:start="23:14" pos:end="23:14">c</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:28">use_timeline</name></name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:67"><block_content pos:start="25:13" pos:end="25:67">

            <expr_stmt pos:start="25:13" pos:end="25:67"><expr pos:start="25:13" pos:end="25:66"><call pos:start="25:13" pos:end="25:66"><name pos:start="25:13" pos:end="25:23">avio_printf</name><argument_list pos:start="25:24" pos:end="25:66">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">out</name></expr></argument>, <argument pos:start="25:30" pos:end="25:47"><expr pos:start="25:30" pos:end="25:47"><literal type="string" pos:start="25:30" pos:end="25:47">"duration=\"%d\" "</literal></expr></argument>, <argument pos:start="25:50" pos:end="25:65"><expr pos:start="25:50" pos:end="25:65"><name pos:start="25:50" pos:end="25:65"><name pos:start="25:50" pos:end="25:50">c</name><operator pos:start="25:51" pos:end="25:52">-&gt;</operator><name pos:start="25:53" pos:end="25:65">last_duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:158"><expr pos:start="27:9" pos:end="27:157"><call pos:start="27:9" pos:end="27:157"><name pos:start="27:9" pos:end="27:19">avio_printf</name><argument_list pos:start="27:20" pos:end="27:157">(<argument pos:start="27:21" pos:end="27:23"><expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:23">out</name></expr></argument>, <argument pos:start="27:26" pos:end="27:83"><expr pos:start="27:26" pos:end="27:83"><literal type="string" pos:start="27:26" pos:end="27:83">"initialization=\"%s\" media=\"%s\" startNumber=\"%d\"&gt;\n"</literal></expr></argument>, <argument pos:start="27:86" pos:end="27:101"><expr pos:start="27:86" pos:end="27:101"><name pos:start="27:86" pos:end="27:101"><name pos:start="27:86" pos:end="27:86">c</name><operator pos:start="27:87" pos:end="27:88">-&gt;</operator><name pos:start="27:89" pos:end="27:101">init_seg_name</name></name></expr></argument>, <argument pos:start="27:104" pos:end="27:120"><expr pos:start="27:104" pos:end="27:120"><name pos:start="27:104" pos:end="27:120"><name pos:start="27:104" pos:end="27:104">c</name><operator pos:start="27:105" pos:end="27:106">-&gt;</operator><name pos:start="27:107" pos:end="27:120">media_seg_name</name></name></expr></argument>, <argument pos:start="27:123" pos:end="27:156"><expr pos:start="27:123" pos:end="27:156"><ternary pos:start="27:123" pos:end="27:156"><condition pos:start="27:123" pos:end="27:139"><expr pos:start="27:123" pos:end="27:137"><name pos:start="27:123" pos:end="27:137"><name pos:start="27:123" pos:end="27:123">c</name><operator pos:start="27:124" pos:end="27:125">-&gt;</operator><name pos:start="27:126" pos:end="27:137">use_timeline</name></name></expr> ?</condition><then pos:start="27:141" pos:end="27:152"> <expr pos:start="27:141" pos:end="27:152"><name pos:start="27:141" pos:end="27:152">start_number</name></expr> </then><else pos:start="27:154" pos:end="27:156">: <expr pos:start="27:156" pos:end="27:156"><literal type="number" pos:start="27:156" pos:end="27:156">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="63:9"><if pos:start="29:9" pos:end="63:9">if <condition pos:start="29:12" pos:end="29:28">(<expr pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:13">c</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:27">use_timeline</name></name></expr>)</condition> <block pos:start="29:30" pos:end="63:9">{<block_content pos:start="31:13" pos:end="61:63">

            <expr_stmt pos:start="31:13" pos:end="31:62"><expr pos:start="31:13" pos:end="31:61"><call pos:start="31:13" pos:end="31:61"><name pos:start="31:13" pos:end="31:23">avio_printf</name><argument_list pos:start="31:24" pos:end="31:61">(<argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:27">out</name></expr></argument>, <argument pos:start="31:30" pos:end="31:60"><expr pos:start="31:30" pos:end="31:60"><literal type="string" pos:start="31:30" pos:end="31:60">"\t\t\t\t\t&lt;SegmentTimeline&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="33:13" pos:end="59:13">for <control pos:start="33:17" pos:end="33:56">(<init pos:start="33:18" pos:end="33:33"><expr pos:start="33:18" pos:end="33:32"><name pos:start="33:18" pos:end="33:18">i</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:32">start_index</name></expr>;</init> <condition pos:start="33:35" pos:end="33:54"><expr pos:start="33:35" pos:end="33:53"><name pos:start="33:35" pos:end="33:35">i</name> <operator pos:start="33:37" pos:end="33:37">&lt;</operator> <name pos:start="33:39" pos:end="33:53"><name pos:start="33:39" pos:end="33:40">os</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:53">nb_segments</name></name></expr>;</condition> <incr/>)</control> <block pos:start="33:58" pos:end="59:13">{<block_content pos:start="35:17" pos:end="57:32">

                <decl_stmt pos:start="35:17" pos:end="35:47"><decl pos:start="35:17" pos:end="35:46"><type pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:23">Segment</name> <modifier pos:start="35:25" pos:end="35:25">*</modifier></type><name pos:start="35:26" pos:end="35:28">seg</name> <init pos:start="35:30" pos:end="35:46">= <expr pos:start="35:32" pos:end="35:46"><name pos:start="35:32" pos:end="35:46"><name pos:start="35:32" pos:end="35:33">os</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:43">segments</name><index pos:start="35:44" pos:end="35:46">[<expr pos:start="35:45" pos:end="35:45"><name pos:start="35:45" pos:end="35:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="37:17" pos:end="37:31"><decl pos:start="37:17" pos:end="37:30"><type pos:start="37:17" pos:end="37:19"><name pos:start="37:17" pos:end="37:19">int</name></type> <name pos:start="37:21" pos:end="37:26">repeat</name> <init pos:start="37:28" pos:end="37:30">= <expr pos:start="37:30" pos:end="37:30"><literal type="number" pos:start="37:30" pos:end="37:30">0</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:52"><expr pos:start="39:17" pos:end="39:51"><call pos:start="39:17" pos:end="39:51"><name pos:start="39:17" pos:end="39:27">avio_printf</name><argument_list pos:start="39:28" pos:end="39:51">(<argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">out</name></expr></argument>, <argument pos:start="39:34" pos:end="39:50"><expr pos:start="39:34" pos:end="39:50"><literal type="string" pos:start="39:34" pos:end="39:50">"\t\t\t\t\t\t&lt;S "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="41:17" pos:end="43:68"><if pos:start="41:17" pos:end="43:68">if <condition pos:start="41:20" pos:end="41:37">(<expr pos:start="41:21" pos:end="41:36"><name pos:start="41:21" pos:end="41:21">i</name> <operator pos:start="41:23" pos:end="41:24">==</operator> <name pos:start="41:26" pos:end="41:36">start_index</name></expr>)</condition><block type="pseudo" pos:start="43:21" pos:end="43:68"><block_content pos:start="43:21" pos:end="43:68">

                    <expr_stmt pos:start="43:21" pos:end="43:68"><expr pos:start="43:21" pos:end="43:67"><call pos:start="43:21" pos:end="43:67"><name pos:start="43:21" pos:end="43:31">avio_printf</name><argument_list pos:start="43:32" pos:end="43:67">(<argument pos:start="43:33" pos:end="43:35"><expr pos:start="43:33" pos:end="43:35"><name pos:start="43:33" pos:end="43:35">out</name></expr></argument>, <argument pos:start="43:38" pos:end="43:55"><expr pos:start="43:38" pos:end="43:55"><literal type="string" pos:start="43:38" pos:end="43:44">"t=\"%"</literal><name pos:start="43:45" pos:end="43:50">PRId64</name><literal type="string" pos:start="43:51" pos:end="43:55">"\" "</literal></expr></argument>, <argument pos:start="43:58" pos:end="43:66"><expr pos:start="43:58" pos:end="43:66"><name pos:start="43:58" pos:end="43:66"><name pos:start="43:58" pos:end="43:60">seg</name><operator pos:start="43:61" pos:end="43:62">-&gt;</operator><name pos:start="43:63" pos:end="43:66">time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:61"><expr pos:start="45:17" pos:end="45:60"><call pos:start="45:17" pos:end="45:60"><name pos:start="45:17" pos:end="45:27">avio_printf</name><argument_list pos:start="45:28" pos:end="45:60">(<argument pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><name pos:start="45:29" pos:end="45:31">out</name></expr></argument>, <argument pos:start="45:34" pos:end="45:44"><expr pos:start="45:34" pos:end="45:44"><literal type="string" pos:start="45:34" pos:end="45:44">"d=\"%d\" "</literal></expr></argument>, <argument pos:start="45:47" pos:end="45:59"><expr pos:start="45:47" pos:end="45:59"><name pos:start="45:47" pos:end="45:59"><name pos:start="45:47" pos:end="45:49">seg</name><operator pos:start="45:50" pos:end="45:51">-&gt;</operator><name pos:start="45:52" pos:end="45:59">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <while pos:start="47:17" pos:end="49:29">while <condition pos:start="47:23" pos:end="47:115">(<expr pos:start="47:24" pos:end="47:114"><name pos:start="47:24" pos:end="47:24">i</name> <operator pos:start="47:26" pos:end="47:26">+</operator> <name pos:start="47:28" pos:end="47:33">repeat</name> <operator pos:start="47:35" pos:end="47:35">+</operator> <literal type="number" pos:start="47:37" pos:end="47:37">1</literal> <operator pos:start="47:39" pos:end="47:39">&lt;</operator> <name pos:start="47:41" pos:end="47:55"><name pos:start="47:41" pos:end="47:42">os</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:55">nb_segments</name></name> <operator pos:start="47:57" pos:end="47:58">&amp;&amp;</operator> <name pos:start="47:60" pos:end="47:87"><name pos:start="47:60" pos:end="47:61">os</name><operator pos:start="47:62" pos:end="47:63">-&gt;</operator><name pos:start="47:64" pos:end="47:71">segments</name><index pos:start="47:72" pos:end="47:87">[<expr pos:start="47:73" pos:end="47:86"><name pos:start="47:73" pos:end="47:73">i</name> <operator pos:start="47:75" pos:end="47:75">+</operator> <name pos:start="47:77" pos:end="47:82">repeat</name> <operator pos:start="47:84" pos:end="47:84">+</operator> <literal type="number" pos:start="47:86" pos:end="47:86">1</literal></expr>]</index></name><operator pos:start="47:88" pos:end="47:89">-&gt;</operator><name pos:start="47:90" pos:end="47:97">duration</name> <operator pos:start="47:99" pos:end="47:100">==</operator> <name pos:start="47:102" pos:end="47:114"><name pos:start="47:102" pos:end="47:104">seg</name><operator pos:start="47:105" pos:end="47:106">-&gt;</operator><name pos:start="47:107" pos:end="47:114">duration</name></name></expr>)</condition><block type="pseudo" pos:start="49:21" pos:end="49:29"><block_content pos:start="49:21" pos:end="49:29">

                    <expr_stmt pos:start="49:21" pos:end="49:29"><expr pos:start="49:21" pos:end="49:28"><name pos:start="49:21" pos:end="49:26">repeat</name><operator pos:start="49:27" pos:end="49:28">++</operator></expr>;</expr_stmt></block_content></block></while>

                <if_stmt pos:start="51:17" pos:end="53:58"><if pos:start="51:17" pos:end="53:58">if <condition pos:start="51:20" pos:end="51:31">(<expr pos:start="51:21" pos:end="51:30"><name pos:start="51:21" pos:end="51:26">repeat</name> <operator pos:start="51:28" pos:end="51:28">&gt;</operator> <literal type="number" pos:start="51:30" pos:end="51:30">0</literal></expr>)</condition><block type="pseudo" pos:start="53:21" pos:end="53:58"><block_content pos:start="53:21" pos:end="53:58">

                    <expr_stmt pos:start="53:21" pos:end="53:58"><expr pos:start="53:21" pos:end="53:57"><call pos:start="53:21" pos:end="53:57"><name pos:start="53:21" pos:end="53:31">avio_printf</name><argument_list pos:start="53:32" pos:end="53:57">(<argument pos:start="53:33" pos:end="53:35"><expr pos:start="53:33" pos:end="53:35"><name pos:start="53:33" pos:end="53:35">out</name></expr></argument>, <argument pos:start="53:38" pos:end="53:48"><expr pos:start="53:38" pos:end="53:48"><literal type="string" pos:start="53:38" pos:end="53:48">"r=\"%d\" "</literal></expr></argument>, <argument pos:start="53:51" pos:end="53:56"><expr pos:start="53:51" pos:end="53:56"><name pos:start="53:51" pos:end="53:56">repeat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:41"><expr pos:start="55:17" pos:end="55:40"><call pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:27">avio_printf</name><argument_list pos:start="55:28" pos:end="55:40">(<argument pos:start="55:29" pos:end="55:31"><expr pos:start="55:29" pos:end="55:31"><name pos:start="55:29" pos:end="55:31">out</name></expr></argument>, <argument pos:start="55:34" pos:end="55:39"><expr pos:start="55:34" pos:end="55:39"><literal type="string" pos:start="55:34" pos:end="55:39">"/&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:32"><expr pos:start="57:17" pos:end="57:31"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:20">+=</operator> <literal type="number" pos:start="57:22" pos:end="57:24">1</literal> <operator pos:start="57:24" pos:end="57:24">+</operator> <name pos:start="57:26" pos:end="57:31">repeat</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="61:13" pos:end="61:63"><expr pos:start="61:13" pos:end="61:62"><call pos:start="61:13" pos:end="61:62"><name pos:start="61:13" pos:end="61:23">avio_printf</name><argument_list pos:start="61:24" pos:end="61:62">(<argument pos:start="61:25" pos:end="61:27"><expr pos:start="61:25" pos:end="61:27"><name pos:start="61:25" pos:end="61:27">out</name></expr></argument>, <argument pos:start="61:30" pos:end="61:61"><expr pos:start="61:30" pos:end="61:61"><literal type="string" pos:start="61:30" pos:end="61:61">"\t\t\t\t\t&lt;/SegmentTimeline&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:57"><expr pos:start="65:9" pos:end="65:56"><call pos:start="65:9" pos:end="65:56"><name pos:start="65:9" pos:end="65:19">avio_printf</name><argument_list pos:start="65:20" pos:end="65:56">(<argument pos:start="65:21" pos:end="65:23"><expr pos:start="65:21" pos:end="65:23"><name pos:start="65:21" pos:end="65:23">out</name></expr></argument>, <argument pos:start="65:26" pos:end="65:55"><expr pos:start="65:26" pos:end="65:55"><literal type="string" pos:start="65:26" pos:end="65:55">"\t\t\t\t&lt;/SegmentTemplate&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="91:5">else if <condition pos:start="67:15" pos:end="67:30">(<expr pos:start="67:16" pos:end="67:29"><name pos:start="67:16" pos:end="67:29"><name pos:start="67:16" pos:end="67:16">c</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:29">single_file</name></name></expr>)</condition> <block pos:start="67:32" pos:end="91:5">{<block_content pos:start="69:9" pos:end="89:53">

        <expr_stmt pos:start="69:9" pos:end="69:74"><expr pos:start="69:9" pos:end="69:73"><call pos:start="69:9" pos:end="69:73"><name pos:start="69:9" pos:end="69:19">avio_printf</name><argument_list pos:start="69:20" pos:end="69:73">(<argument pos:start="69:21" pos:end="69:23"><expr pos:start="69:21" pos:end="69:23"><name pos:start="69:21" pos:end="69:23">out</name></expr></argument>, <argument pos:start="69:26" pos:end="69:58"><expr pos:start="69:26" pos:end="69:58"><literal type="string" pos:start="69:26" pos:end="69:58">"\t\t\t\t&lt;BaseURL&gt;%s&lt;/BaseURL&gt;\n"</literal></expr></argument>, <argument pos:start="69:61" pos:end="69:72"><expr pos:start="69:61" pos:end="69:72"><name pos:start="69:61" pos:end="69:72"><name pos:start="69:61" pos:end="69:62">os</name><operator pos:start="69:63" pos:end="69:64">-&gt;</operator><name pos:start="69:65" pos:end="69:72">initfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:150"><expr pos:start="71:9" pos:end="71:149"><call pos:start="71:9" pos:end="71:149"><name pos:start="71:9" pos:end="71:19">avio_printf</name><argument_list pos:start="71:20" pos:end="71:149">(<argument pos:start="71:21" pos:end="71:23"><expr pos:start="71:21" pos:end="71:23"><name pos:start="71:21" pos:end="71:23">out</name></expr></argument>, <argument pos:start="71:26" pos:end="71:102"><expr pos:start="71:26" pos:end="71:102"><literal type="string" pos:start="71:26" pos:end="71:102">"\t\t\t\t&lt;SegmentList timescale=\"%d\" duration=\"%d\" startNumber=\"%d\"&gt;\n"</literal></expr></argument>, <argument pos:start="71:105" pos:end="71:116"><expr pos:start="71:105" pos:end="71:116"><name pos:start="71:105" pos:end="71:116">AV_TIME_BASE</name></expr></argument>, <argument pos:start="71:119" pos:end="71:134"><expr pos:start="71:119" pos:end="71:134"><name pos:start="71:119" pos:end="71:134"><name pos:start="71:119" pos:end="71:119">c</name><operator pos:start="71:120" pos:end="71:121">-&gt;</operator><name pos:start="71:122" pos:end="71:134">last_duration</name></name></expr></argument>, <argument pos:start="71:137" pos:end="71:148"><expr pos:start="71:137" pos:end="71:148"><name pos:start="71:137" pos:end="71:148">start_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:157"><expr pos:start="73:9" pos:end="73:156"><call pos:start="73:9" pos:end="73:156"><name pos:start="73:9" pos:end="73:19">avio_printf</name><argument_list pos:start="73:20" pos:end="73:156">(<argument pos:start="73:21" pos:end="73:23"><expr pos:start="73:21" pos:end="73:23"><name pos:start="73:21" pos:end="73:23">out</name></expr></argument>, <argument pos:start="73:26" pos:end="73:87"><expr pos:start="73:26" pos:end="73:87"><literal type="string" pos:start="73:26" pos:end="73:62">"\t\t\t\t\t&lt;Initialization range=\"%"</literal><name pos:start="73:63" pos:end="73:68">PRId64</name><literal type="string" pos:start="73:69" pos:end="73:72">"-%"</literal><name pos:start="73:73" pos:end="73:78">PRId64</name><literal type="string" pos:start="73:79" pos:end="73:87">"\" /&gt;\n"</literal></expr></argument>, <argument pos:start="73:90" pos:end="73:107"><expr pos:start="73:90" pos:end="73:107"><name pos:start="73:90" pos:end="73:107"><name pos:start="73:90" pos:end="73:91">os</name><operator pos:start="73:92" pos:end="73:93">-&gt;</operator><name pos:start="73:94" pos:end="73:107">init_start_pos</name></name></expr></argument>, <argument pos:start="73:110" pos:end="73:155"><expr pos:start="73:110" pos:end="73:155"><name pos:start="73:110" pos:end="73:127"><name pos:start="73:110" pos:end="73:111">os</name><operator pos:start="73:112" pos:end="73:113">-&gt;</operator><name pos:start="73:114" pos:end="73:127">init_start_pos</name></name> <operator pos:start="73:129" pos:end="73:129">+</operator> <name pos:start="73:131" pos:end="73:151"><name pos:start="73:131" pos:end="73:132">os</name><operator pos:start="73:133" pos:end="73:134">-&gt;</operator><name pos:start="73:135" pos:end="73:151">init_range_length</name></name> <operator pos:start="73:153" pos:end="73:153">-</operator> <literal type="number" pos:start="73:155" pos:end="73:155">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="75:9" pos:end="87:9">for <control pos:start="75:13" pos:end="75:55">(<init pos:start="75:14" pos:end="75:29"><expr pos:start="75:14" pos:end="75:28"><name pos:start="75:14" pos:end="75:14">i</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:28">start_index</name></expr>;</init> <condition pos:start="75:31" pos:end="75:50"><expr pos:start="75:31" pos:end="75:49"><name pos:start="75:31" pos:end="75:31">i</name> <operator pos:start="75:33" pos:end="75:33">&lt;</operator> <name pos:start="75:35" pos:end="75:49"><name pos:start="75:35" pos:end="75:36">os</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:49">nb_segments</name></name></expr>;</condition> <incr pos:start="75:52" pos:end="75:54"><expr pos:start="75:52" pos:end="75:54"><name pos:start="75:52" pos:end="75:52">i</name><operator pos:start="75:53" pos:end="75:54">++</operator></expr></incr>)</control> <block pos:start="75:57" pos:end="87:9">{<block_content pos:start="77:13" pos:end="85:37">

            <decl_stmt pos:start="77:13" pos:end="77:43"><decl pos:start="77:13" pos:end="77:42"><type pos:start="77:13" pos:end="77:21"><name pos:start="77:13" pos:end="77:19">Segment</name> <modifier pos:start="77:21" pos:end="77:21">*</modifier></type><name pos:start="77:22" pos:end="77:24">seg</name> <init pos:start="77:26" pos:end="77:42">= <expr pos:start="77:28" pos:end="77:42"><name pos:start="77:28" pos:end="77:42"><name pos:start="77:28" pos:end="77:29">os</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:39">segments</name><index pos:start="77:40" pos:end="77:42">[<expr pos:start="77:41" pos:end="77:41"><name pos:start="77:41" pos:end="77:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:146"><expr pos:start="79:13" pos:end="79:145"><call pos:start="79:13" pos:end="79:145"><name pos:start="79:13" pos:end="79:23">avio_printf</name><argument_list pos:start="79:24" pos:end="79:145">(<argument pos:start="79:25" pos:end="79:27"><expr pos:start="79:25" pos:end="79:27"><name pos:start="79:25" pos:end="79:27">out</name></expr></argument>, <argument pos:start="79:30" pos:end="79:88"><expr pos:start="79:30" pos:end="79:88"><literal type="string" pos:start="79:30" pos:end="79:67">"\t\t\t\t\t&lt;SegmentURL mediaRange=\"%"</literal><name pos:start="79:68" pos:end="79:73">PRId64</name><literal type="string" pos:start="79:74" pos:end="79:77">"-%"</literal><name pos:start="79:78" pos:end="79:83">PRId64</name><literal type="string" pos:start="79:84" pos:end="79:88">"\" "</literal></expr></argument>, <argument pos:start="79:91" pos:end="79:104"><expr pos:start="79:91" pos:end="79:104"><name pos:start="79:91" pos:end="79:104"><name pos:start="79:91" pos:end="79:93">seg</name><operator pos:start="79:94" pos:end="79:95">-&gt;</operator><name pos:start="79:96" pos:end="79:104">start_pos</name></name></expr></argument>, <argument pos:start="79:107" pos:end="79:144"><expr pos:start="79:107" pos:end="79:144"><name pos:start="79:107" pos:end="79:120"><name pos:start="79:107" pos:end="79:109">seg</name><operator pos:start="79:110" pos:end="79:111">-&gt;</operator><name pos:start="79:112" pos:end="79:120">start_pos</name></name> <operator pos:start="79:122" pos:end="79:122">+</operator> <name pos:start="79:124" pos:end="79:140"><name pos:start="79:124" pos:end="79:126">seg</name><operator pos:start="79:127" pos:end="79:128">-&gt;</operator><name pos:start="79:129" pos:end="79:140">range_length</name></name> <operator pos:start="79:142" pos:end="79:142">-</operator> <literal type="number" pos:start="79:144" pos:end="79:144">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="83:128"><if pos:start="81:13" pos:end="83:128">if <condition pos:start="81:16" pos:end="81:34">(<expr pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:19">seg</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:33">index_length</name></name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:128"><block_content pos:start="83:17" pos:end="83:128">

                <expr_stmt pos:start="83:17" pos:end="83:128"><expr pos:start="83:17" pos:end="83:127"><call pos:start="83:17" pos:end="83:127"><name pos:start="83:17" pos:end="83:27">avio_printf</name><argument_list pos:start="83:28" pos:end="83:127">(<argument pos:start="83:29" pos:end="83:31"><expr pos:start="83:29" pos:end="83:31"><name pos:start="83:29" pos:end="83:31">out</name></expr></argument>, <argument pos:start="83:34" pos:end="83:70"><expr pos:start="83:34" pos:end="83:70"><literal type="string" pos:start="83:34" pos:end="83:49">"indexRange=\"%"</literal><name pos:start="83:50" pos:end="83:55">PRId64</name><literal type="string" pos:start="83:56" pos:end="83:59">"-%"</literal><name pos:start="83:60" pos:end="83:65">PRId64</name><literal type="string" pos:start="83:66" pos:end="83:70">"\" "</literal></expr></argument>, <argument pos:start="83:73" pos:end="83:86"><expr pos:start="83:73" pos:end="83:86"><name pos:start="83:73" pos:end="83:86"><name pos:start="83:73" pos:end="83:75">seg</name><operator pos:start="83:76" pos:end="83:77">-&gt;</operator><name pos:start="83:78" pos:end="83:86">start_pos</name></name></expr></argument>, <argument pos:start="83:89" pos:end="83:126"><expr pos:start="83:89" pos:end="83:126"><name pos:start="83:89" pos:end="83:102"><name pos:start="83:89" pos:end="83:91">seg</name><operator pos:start="83:92" pos:end="83:93">-&gt;</operator><name pos:start="83:94" pos:end="83:102">start_pos</name></name> <operator pos:start="83:104" pos:end="83:104">+</operator> <name pos:start="83:106" pos:end="83:122"><name pos:start="83:106" pos:end="83:108">seg</name><operator pos:start="83:109" pos:end="83:110">-&gt;</operator><name pos:start="83:111" pos:end="83:122">index_length</name></name> <operator pos:start="83:124" pos:end="83:124">-</operator> <literal type="number" pos:start="83:126" pos:end="83:126">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:37"><expr pos:start="85:13" pos:end="85:36"><call pos:start="85:13" pos:end="85:36"><name pos:start="85:13" pos:end="85:23">avio_printf</name><argument_list pos:start="85:24" pos:end="85:36">(<argument pos:start="85:25" pos:end="85:27"><expr pos:start="85:25" pos:end="85:27"><name pos:start="85:25" pos:end="85:27">out</name></expr></argument>, <argument pos:start="85:30" pos:end="85:35"><expr pos:start="85:30" pos:end="85:35"><literal type="string" pos:start="85:30" pos:end="85:35">"/&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="89:9" pos:end="89:53"><expr pos:start="89:9" pos:end="89:52"><call pos:start="89:9" pos:end="89:52"><name pos:start="89:9" pos:end="89:19">avio_printf</name><argument_list pos:start="89:20" pos:end="89:52">(<argument pos:start="89:21" pos:end="89:23"><expr pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:23">out</name></expr></argument>, <argument pos:start="89:26" pos:end="89:51"><expr pos:start="89:26" pos:end="89:51"><literal type="string" pos:start="89:26" pos:end="89:51">"\t\t\t\t&lt;/SegmentList&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="107:5">else <block pos:start="91:12" pos:end="107:5">{<block_content pos:start="93:9" pos:end="105:53">

        <expr_stmt pos:start="93:9" pos:end="93:150"><expr pos:start="93:9" pos:end="93:149"><call pos:start="93:9" pos:end="93:149"><name pos:start="93:9" pos:end="93:19">avio_printf</name><argument_list pos:start="93:20" pos:end="93:149">(<argument pos:start="93:21" pos:end="93:23"><expr pos:start="93:21" pos:end="93:23"><name pos:start="93:21" pos:end="93:23">out</name></expr></argument>, <argument pos:start="93:26" pos:end="93:102"><expr pos:start="93:26" pos:end="93:102"><literal type="string" pos:start="93:26" pos:end="93:102">"\t\t\t\t&lt;SegmentList timescale=\"%d\" duration=\"%d\" startNumber=\"%d\"&gt;\n"</literal></expr></argument>, <argument pos:start="93:105" pos:end="93:116"><expr pos:start="93:105" pos:end="93:116"><name pos:start="93:105" pos:end="93:116">AV_TIME_BASE</name></expr></argument>, <argument pos:start="93:119" pos:end="93:134"><expr pos:start="93:119" pos:end="93:134"><name pos:start="93:119" pos:end="93:134"><name pos:start="93:119" pos:end="93:119">c</name><operator pos:start="93:120" pos:end="93:121">-&gt;</operator><name pos:start="93:122" pos:end="93:134">last_duration</name></name></expr></argument>, <argument pos:start="93:137" pos:end="93:148"><expr pos:start="93:137" pos:end="93:148"><name pos:start="93:137" pos:end="93:148">start_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:90"><expr pos:start="95:9" pos:end="95:89"><call pos:start="95:9" pos:end="95:89"><name pos:start="95:9" pos:end="95:19">avio_printf</name><argument_list pos:start="95:20" pos:end="95:89">(<argument pos:start="95:21" pos:end="95:23"><expr pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:23">out</name></expr></argument>, <argument pos:start="95:26" pos:end="95:74"><expr pos:start="95:26" pos:end="95:74"><literal type="string" pos:start="95:26" pos:end="95:74">"\t\t\t\t\t&lt;Initialization sourceURL=\"%s\" /&gt;\n"</literal></expr></argument>, <argument pos:start="95:77" pos:end="95:88"><expr pos:start="95:77" pos:end="95:88"><name pos:start="95:77" pos:end="95:88"><name pos:start="95:77" pos:end="95:78">os</name><operator pos:start="95:79" pos:end="95:80">-&gt;</operator><name pos:start="95:81" pos:end="95:88">initfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="97:9" pos:end="103:9">for <control pos:start="97:13" pos:end="97:55">(<init pos:start="97:14" pos:end="97:29"><expr pos:start="97:14" pos:end="97:28"><name pos:start="97:14" pos:end="97:14">i</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <name pos:start="97:18" pos:end="97:28">start_index</name></expr>;</init> <condition pos:start="97:31" pos:end="97:50"><expr pos:start="97:31" pos:end="97:49"><name pos:start="97:31" pos:end="97:31">i</name> <operator pos:start="97:33" pos:end="97:33">&lt;</operator> <name pos:start="97:35" pos:end="97:49"><name pos:start="97:35" pos:end="97:36">os</name><operator pos:start="97:37" pos:end="97:38">-&gt;</operator><name pos:start="97:39" pos:end="97:49">nb_segments</name></name></expr>;</condition> <incr pos:start="97:52" pos:end="97:54"><expr pos:start="97:52" pos:end="97:54"><name pos:start="97:52" pos:end="97:52">i</name><operator pos:start="97:53" pos:end="97:54">++</operator></expr></incr>)</control> <block pos:start="97:57" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:83">

            <decl_stmt pos:start="99:13" pos:end="99:43"><decl pos:start="99:13" pos:end="99:42"><type pos:start="99:13" pos:end="99:21"><name pos:start="99:13" pos:end="99:19">Segment</name> <modifier pos:start="99:21" pos:end="99:21">*</modifier></type><name pos:start="99:22" pos:end="99:24">seg</name> <init pos:start="99:26" pos:end="99:42">= <expr pos:start="99:28" pos:end="99:42"><name pos:start="99:28" pos:end="99:42"><name pos:start="99:28" pos:end="99:29">os</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:39">segments</name><index pos:start="99:40" pos:end="99:42">[<expr pos:start="99:41" pos:end="99:41"><name pos:start="99:41" pos:end="99:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:83"><expr pos:start="101:13" pos:end="101:82"><call pos:start="101:13" pos:end="101:82"><name pos:start="101:13" pos:end="101:23">avio_printf</name><argument_list pos:start="101:24" pos:end="101:82">(<argument pos:start="101:25" pos:end="101:27"><expr pos:start="101:25" pos:end="101:27"><name pos:start="101:25" pos:end="101:27">out</name></expr></argument>, <argument pos:start="101:30" pos:end="101:70"><expr pos:start="101:30" pos:end="101:70"><literal type="string" pos:start="101:30" pos:end="101:70">"\t\t\t\t\t&lt;SegmentURL media=\"%s\" /&gt;\n"</literal></expr></argument>, <argument pos:start="101:73" pos:end="101:81"><expr pos:start="101:73" pos:end="101:81"><name pos:start="101:73" pos:end="101:81"><name pos:start="101:73" pos:end="101:75">seg</name><operator pos:start="101:76" pos:end="101:77">-&gt;</operator><name pos:start="101:78" pos:end="101:81">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="105:9" pos:end="105:53"><expr pos:start="105:9" pos:end="105:52"><call pos:start="105:9" pos:end="105:52"><name pos:start="105:9" pos:end="105:19">avio_printf</name><argument_list pos:start="105:20" pos:end="105:52">(<argument pos:start="105:21" pos:end="105:23"><expr pos:start="105:21" pos:end="105:23"><name pos:start="105:21" pos:end="105:23">out</name></expr></argument>, <argument pos:start="105:26" pos:end="105:51"><expr pos:start="105:26" pos:end="105:51"><literal type="string" pos:start="105:26" pos:end="105:51">"\t\t\t\t&lt;/SegmentList&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
