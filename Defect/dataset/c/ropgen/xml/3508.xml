<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3508.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">bdrv_query_image_info</name><parameter_list pos:start="1:27" pos:end="5:40">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:45"><decl pos:start="3:28" pos:end="3:45"><type pos:start="3:28" pos:end="3:45"><name pos:start="3:28" pos:end="3:36">ImageInfo</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier><modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:45">p_info</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:39"><decl pos:start="5:28" pos:end="5:39"><type pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:32">Error</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier><modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:39">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="169:1">{<block_content pos:start="9:5" pos:end="167:19">

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:16">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:32">backing_filename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:19">BlockDriverInfo</name></type> <name pos:start="13:21" pos:end="13:23">bdi</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">Error</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:14">err</name> <init pos:start="17:16" pos:end="17:21">= <expr pos:start="17:18" pos:end="17:21"><name pos:start="17:18" pos:end="17:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:13">ImageInfo</name> <modifier pos:start="19:15" pos:end="19:15">*</modifier></type><name pos:start="19:16" pos:end="19:19">info</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:8">size</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:29"><name pos:start="23:12" pos:end="23:25">bdrv_getlength</name><argument_list pos:start="23:26" pos:end="23:29">(<argument pos:start="23:27" pos:end="23:28"><expr pos:start="23:27" pos:end="23:28"><name pos:start="23:27" pos:end="23:28">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:12">size</name> <operator pos:start="25:14" pos:end="25:14">&lt;</operator> <literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>)</condition> <block pos:start="25:19" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:15">

        <expr_stmt pos:start="27:9" pos:end="29:51"><expr pos:start="27:9" pos:end="29:50"><call pos:start="27:9" pos:end="29:50"><name pos:start="27:9" pos:end="27:24">error_setg_errno</name><argument_list pos:start="27:25" pos:end="29:50">(<argument pos:start="27:26" pos:end="27:29"><expr pos:start="27:26" pos:end="27:29"><name pos:start="27:26" pos:end="27:29">errp</name></expr></argument>, <argument pos:start="27:32" pos:end="27:36"><expr pos:start="27:32" pos:end="27:36"><operator pos:start="27:32" pos:end="27:32">-</operator><name pos:start="27:33" pos:end="27:36">size</name></expr></argument>, <argument pos:start="27:39" pos:end="27:69"><expr pos:start="27:39" pos:end="27:69"><literal type="string" pos:start="27:39" pos:end="27:69">"Can't get size of device '%s'"</literal></expr></argument>,

                         <argument pos:start="29:26" pos:end="29:49"><expr pos:start="29:26" pos:end="29:49"><call pos:start="29:26" pos:end="29:49"><name pos:start="29:26" pos:end="29:45">bdrv_get_device_name</name><argument_list pos:start="29:46" pos:end="29:49">(<argument pos:start="29:47" pos:end="29:48"><expr pos:start="29:47" pos:end="29:48"><name pos:start="29:47" pos:end="29:48">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:32"><expr pos:start="37:5" pos:end="37:31"><name pos:start="37:5" pos:end="37:8">info</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:31"><name pos:start="37:12" pos:end="37:17">g_new0</name><argument_list pos:start="37:18" pos:end="37:31">(<argument pos:start="37:19" pos:end="37:27"><expr pos:start="37:19" pos:end="37:27"><name pos:start="37:19" pos:end="37:27">ImageInfo</name></expr></argument>, <argument pos:start="37:30" pos:end="37:30"><expr pos:start="37:30" pos:end="37:30"><literal type="number" pos:start="37:30" pos:end="37:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:51"><expr pos:start="39:5" pos:end="39:50"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:8">info</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:18">filename</name></name>        <operator pos:start="39:27" pos:end="39:27">=</operator> <call pos:start="39:29" pos:end="39:50"><name pos:start="39:29" pos:end="39:36">g_strdup</name><argument_list pos:start="39:37" pos:end="39:50">(<argument pos:start="39:38" pos:end="39:49"><expr pos:start="39:38" pos:end="39:49"><name pos:start="39:38" pos:end="39:49"><name pos:start="39:38" pos:end="39:39">bs</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:49">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:63"><expr pos:start="41:5" pos:end="41:62"><name pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:8">info</name><operator pos:start="41:9" pos:end="41:10">-&gt;</operator><name pos:start="41:11" pos:end="41:16">format</name></name>          <operator pos:start="41:27" pos:end="41:27">=</operator> <call pos:start="41:29" pos:end="41:62"><name pos:start="41:29" pos:end="41:36">g_strdup</name><argument_list pos:start="41:37" pos:end="41:62">(<argument pos:start="41:38" pos:end="41:61"><expr pos:start="41:38" pos:end="41:61"><call pos:start="41:38" pos:end="41:61"><name pos:start="41:38" pos:end="41:57">bdrv_get_format_name</name><argument_list pos:start="41:58" pos:end="41:61">(<argument pos:start="41:59" pos:end="41:60"><expr pos:start="41:59" pos:end="41:60"><name pos:start="41:59" pos:end="41:60">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:8">info</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:22">virtual_size</name></name>    <operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:32">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:61"><expr pos:start="45:5" pos:end="45:60"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:8">info</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:21">actual_size</name></name>     <operator pos:start="45:27" pos:end="45:27">=</operator> <call pos:start="45:29" pos:end="45:60"><name pos:start="45:29" pos:end="45:56">bdrv_get_allocated_file_size</name><argument_list pos:start="45:57" pos:end="45:60">(<argument pos:start="45:58" pos:end="45:59"><expr pos:start="45:58" pos:end="45:59"><name pos:start="45:58" pos:end="45:59">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:51"><expr pos:start="47:5" pos:end="47:50"><name pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:8">info</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:25">has_actual_size</name></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:45"><name pos:start="47:29" pos:end="47:32">info</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:45">actual_size</name></name> <operator pos:start="47:47" pos:end="47:48">&gt;=</operator> <literal type="number" pos:start="47:50" pos:end="47:50">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:30">(<expr pos:start="49:9" pos:end="49:29"><call pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:25">bdrv_is_encrypted</name><argument_list pos:start="49:26" pos:end="49:29">(<argument pos:start="49:27" pos:end="49:28"><expr pos:start="49:27" pos:end="49:28"><name pos:start="49:27" pos:end="49:28">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:32" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:35">

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:12">info</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:23">encrypted</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:30">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:35"><expr pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:12">info</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:27">has_encrypted</name></name> <operator pos:start="53:29" pos:end="53:29">=</operator> <name pos:start="53:31" pos:end="53:34">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="71:5"><if pos:start="57:5" pos:end="71:5">if <condition pos:start="57:8" pos:end="57:37">(<expr pos:start="57:9" pos:end="57:36"><call pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:21">bdrv_get_info</name><argument_list pos:start="57:22" pos:end="57:31">(<argument pos:start="57:23" pos:end="57:24"><expr pos:start="57:23" pos:end="57:24"><name pos:start="57:23" pos:end="57:24">bs</name></expr></argument>, <argument pos:start="57:27" pos:end="57:30"><expr pos:start="57:27" pos:end="57:30"><operator pos:start="57:27" pos:end="57:27">&amp;</operator><name pos:start="57:28" pos:end="57:30">bdi</name></expr></argument>)</argument_list></call> <operator pos:start="57:33" pos:end="57:34">&gt;=</operator> <literal type="number" pos:start="57:36" pos:end="57:36">0</literal></expr>)</condition> <block pos:start="57:39" pos:end="71:5">{<block_content pos:start="59:9" pos:end="69:36">

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:34">(<expr pos:start="59:13" pos:end="59:33"><name pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:15">bdi</name><operator pos:start="59:16" pos:end="59:16">.</operator><name pos:start="59:17" pos:end="59:28">cluster_size</name></name> <operator pos:start="59:30" pos:end="59:31">!=</operator> <literal type="number" pos:start="59:33" pos:end="59:33">0</literal></expr>)</condition> <block pos:start="59:36" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:42">

            <expr_stmt pos:start="61:13" pos:end="61:50"><expr pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:16">info</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:30">cluster_size</name></name> <operator pos:start="61:32" pos:end="61:32">=</operator> <name pos:start="61:34" pos:end="61:49"><name pos:start="61:34" pos:end="61:36">bdi</name><operator pos:start="61:37" pos:end="61:37">.</operator><name pos:start="61:38" pos:end="61:49">cluster_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:42"><expr pos:start="63:13" pos:end="63:41"><name pos:start="63:13" pos:end="63:34"><name pos:start="63:13" pos:end="63:16">info</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:34">has_cluster_size</name></name> <operator pos:start="63:36" pos:end="63:36">=</operator> <name pos:start="63:38" pos:end="63:41">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:40"><expr pos:start="67:9" pos:end="67:39"><name pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:12">info</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:24">dirty_flag</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:39"><name pos:start="67:28" pos:end="67:30">bdi</name><operator pos:start="67:31" pos:end="67:31">.</operator><name pos:start="67:32" pos:end="67:39">is_dirty</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:36"><expr pos:start="69:9" pos:end="69:35"><name pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:12">info</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:28">has_dirty_flag</name></name> <operator pos:start="69:30" pos:end="69:30">=</operator> <name pos:start="69:32" pos:end="69:35">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:59"><expr pos:start="73:5" pos:end="73:58"><name pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:8">info</name><operator pos:start="73:9" pos:end="73:10">-&gt;</operator><name pos:start="73:11" pos:end="73:25">format_specific</name></name>     <operator pos:start="73:31" pos:end="73:31">=</operator> <call pos:start="73:33" pos:end="73:58"><name pos:start="73:33" pos:end="73:54">bdrv_get_specific_info</name><argument_list pos:start="73:55" pos:end="73:58">(<argument pos:start="73:56" pos:end="73:57"><expr pos:start="73:56" pos:end="73:57"><name pos:start="73:56" pos:end="73:57">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:62"><expr pos:start="75:5" pos:end="75:61"><name pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:8">info</name><operator pos:start="75:9" pos:end="75:10">-&gt;</operator><name pos:start="75:11" pos:end="75:29">has_format_specific</name></name> <operator pos:start="75:31" pos:end="75:31">=</operator> <name pos:start="75:33" pos:end="75:53"><name pos:start="75:33" pos:end="75:36">info</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:53">format_specific</name></name> <operator pos:start="75:55" pos:end="75:56">!=</operator> <name pos:start="75:58" pos:end="75:61">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:40"><expr pos:start="79:5" pos:end="79:39"><name pos:start="79:5" pos:end="79:20">backing_filename</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:39"><name pos:start="79:24" pos:end="79:25">bs</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:39">backing_file</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="127:5"><if pos:start="81:5" pos:end="127:5">if <condition pos:start="81:8" pos:end="81:36">(<expr pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:24">backing_filename</name><index pos:start="81:25" pos:end="81:27">[<expr pos:start="81:26" pos:end="81:26"><literal type="number" pos:start="81:26" pos:end="81:26">0</literal></expr>]</index></name> <operator pos:start="81:29" pos:end="81:30">!=</operator> <literal type="char" pos:start="81:32" pos:end="81:35">'\0'</literal></expr>)</condition> <block pos:start="81:38" pos:end="127:5">{<block_content pos:start="83:9" pos:end="125:34">

        <decl_stmt pos:start="83:9" pos:end="83:50"><decl pos:start="83:9" pos:end="83:49"><type pos:start="83:9" pos:end="83:14"><name pos:start="83:9" pos:end="83:12">char</name> <modifier pos:start="83:14" pos:end="83:14">*</modifier></type><name pos:start="83:15" pos:end="83:31">backing_filename2</name> <init pos:start="83:33" pos:end="83:49">= <expr pos:start="83:35" pos:end="83:49"><call pos:start="83:35" pos:end="83:49"><name pos:start="83:35" pos:end="83:43">g_malloc0</name><argument_list pos:start="83:44" pos:end="83:49">(<argument pos:start="83:45" pos:end="83:48"><expr pos:start="83:45" pos:end="83:48"><literal type="number" pos:start="83:45" pos:end="83:48">1024</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:60"><expr pos:start="85:9" pos:end="85:59"><name pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:12">info</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:30">backing_filename</name></name> <operator pos:start="85:32" pos:end="85:32">=</operator> <call pos:start="85:34" pos:end="85:59"><name pos:start="85:34" pos:end="85:41">g_strdup</name><argument_list pos:start="85:42" pos:end="85:59">(<argument pos:start="85:43" pos:end="85:58"><expr pos:start="85:43" pos:end="85:58"><name pos:start="85:43" pos:end="85:58">backing_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:42"><expr pos:start="87:9" pos:end="87:41"><name pos:start="87:9" pos:end="87:34"><name pos:start="87:9" pos:end="87:12">info</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:34">has_backing_filename</name></name> <operator pos:start="87:36" pos:end="87:36">=</operator> <name pos:start="87:38" pos:end="87:41">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:74"><expr pos:start="89:9" pos:end="89:73"><call pos:start="89:9" pos:end="89:73"><name pos:start="89:9" pos:end="89:38">bdrv_get_full_backing_filename</name><argument_list pos:start="89:39" pos:end="89:73">(<argument pos:start="89:40" pos:end="89:41"><expr pos:start="89:40" pos:end="89:41"><name pos:start="89:40" pos:end="89:41">bs</name></expr></argument>, <argument pos:start="89:44" pos:end="89:60"><expr pos:start="89:44" pos:end="89:60"><name pos:start="89:44" pos:end="89:60">backing_filename2</name></expr></argument>, <argument pos:start="89:63" pos:end="89:66"><expr pos:start="89:63" pos:end="89:66"><literal type="number" pos:start="89:63" pos:end="89:66">1024</literal></expr></argument>, <argument pos:start="89:69" pos:end="89:72"><expr pos:start="89:69" pos:end="89:72"><operator pos:start="89:69" pos:end="89:69">&amp;</operator><name pos:start="89:70" pos:end="89:72">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="101:9"><if pos:start="91:9" pos:end="101:9">if <condition pos:start="91:12" pos:end="91:16">(<expr pos:start="91:13" pos:end="91:15"><name pos:start="91:13" pos:end="91:15">err</name></expr>)</condition> <block pos:start="91:18" pos:end="101:9">{<block_content pos:start="93:13" pos:end="99:19">

            <expr_stmt pos:start="93:13" pos:end="93:39"><expr pos:start="93:13" pos:end="93:38"><call pos:start="93:13" pos:end="93:38"><name pos:start="93:13" pos:end="93:27">error_propagate</name><argument_list pos:start="93:28" pos:end="93:38">(<argument pos:start="93:29" pos:end="93:32"><expr pos:start="93:29" pos:end="93:32"><name pos:start="93:29" pos:end="93:32">errp</name></expr></argument>, <argument pos:start="93:35" pos:end="93:37"><expr pos:start="93:35" pos:end="93:37"><name pos:start="93:35" pos:end="93:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:38"><expr pos:start="95:13" pos:end="95:37"><call pos:start="95:13" pos:end="95:37"><name pos:start="95:13" pos:end="95:31">qapi_free_ImageInfo</name><argument_list pos:start="95:32" pos:end="95:37">(<argument pos:start="95:33" pos:end="95:36"><expr pos:start="95:33" pos:end="95:36"><name pos:start="95:33" pos:end="95:36">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:38"><expr pos:start="97:13" pos:end="97:37"><call pos:start="97:13" pos:end="97:37"><name pos:start="97:13" pos:end="97:18">g_free</name><argument_list pos:start="97:19" pos:end="97:37">(<argument pos:start="97:20" pos:end="97:36"><expr pos:start="97:20" pos:end="97:36"><name pos:start="97:20" pos:end="97:36">backing_filename2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="99:13" pos:end="99:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="113:9"><if pos:start="105:9" pos:end="113:9">if <condition pos:start="105:12" pos:end="105:61">(<expr pos:start="105:13" pos:end="105:60"><call pos:start="105:13" pos:end="105:55"><name pos:start="105:13" pos:end="105:18">strcmp</name><argument_list pos:start="105:19" pos:end="105:55">(<argument pos:start="105:20" pos:end="105:35"><expr pos:start="105:20" pos:end="105:35"><name pos:start="105:20" pos:end="105:35">backing_filename</name></expr></argument>, <argument pos:start="105:38" pos:end="105:54"><expr pos:start="105:38" pos:end="105:54"><name pos:start="105:38" pos:end="105:54">backing_filename2</name></expr></argument>)</argument_list></call> <operator pos:start="105:57" pos:end="105:58">!=</operator> <literal type="number" pos:start="105:60" pos:end="105:60">0</literal></expr>)</condition> <block pos:start="105:63" pos:end="113:9">{<block_content pos:start="107:13" pos:end="111:51">

            <expr_stmt pos:start="107:13" pos:end="109:52"><expr pos:start="107:13" pos:end="109:51"><name pos:start="107:13" pos:end="107:39"><name pos:start="107:13" pos:end="107:16">info</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:39">full_backing_filename</name></name> <operator pos:start="107:41" pos:end="107:41">=</operator>

                        <call pos:start="109:25" pos:end="109:51"><name pos:start="109:25" pos:end="109:32">g_strdup</name><argument_list pos:start="109:33" pos:end="109:51">(<argument pos:start="109:34" pos:end="109:50"><expr pos:start="109:34" pos:end="109:50"><name pos:start="109:34" pos:end="109:50">backing_filename2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:51"><expr pos:start="111:13" pos:end="111:50"><name pos:start="111:13" pos:end="111:43"><name pos:start="111:13" pos:end="111:16">info</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:43">has_full_backing_filename</name></name> <operator pos:start="111:45" pos:end="111:45">=</operator> <name pos:start="111:47" pos:end="111:50">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="117:9" pos:end="123:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:34">(<expr pos:start="117:13" pos:end="117:33"><name pos:start="117:13" pos:end="117:33"><name pos:start="117:13" pos:end="117:14">bs</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:30">backing_format</name><index pos:start="117:31" pos:end="117:33">[<expr pos:start="117:32" pos:end="117:32"><literal type="number" pos:start="117:32" pos:end="117:32">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="117:36" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:53">

            <expr_stmt pos:start="119:13" pos:end="119:73"><expr pos:start="119:13" pos:end="119:72"><name pos:start="119:13" pos:end="119:41"><name pos:start="119:13" pos:end="119:16">info</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:41">backing_filename_format</name></name> <operator pos:start="119:43" pos:end="119:43">=</operator> <call pos:start="119:45" pos:end="119:72"><name pos:start="119:45" pos:end="119:52">g_strdup</name><argument_list pos:start="119:53" pos:end="119:72">(<argument pos:start="119:54" pos:end="119:71"><expr pos:start="119:54" pos:end="119:71"><name pos:start="119:54" pos:end="119:71"><name pos:start="119:54" pos:end="119:55">bs</name><operator pos:start="119:56" pos:end="119:57">-&gt;</operator><name pos:start="119:58" pos:end="119:71">backing_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:53"><expr pos:start="121:13" pos:end="121:52"><name pos:start="121:13" pos:end="121:45"><name pos:start="121:13" pos:end="121:16">info</name><operator pos:start="121:17" pos:end="121:18">-&gt;</operator><name pos:start="121:19" pos:end="121:45">has_backing_filename_format</name></name> <operator pos:start="121:47" pos:end="121:47">=</operator> <name pos:start="121:49" pos:end="121:52">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:34"><expr pos:start="125:9" pos:end="125:33"><call pos:start="125:9" pos:end="125:33"><name pos:start="125:9" pos:end="125:14">g_free</name><argument_list pos:start="125:15" pos:end="125:33">(<argument pos:start="125:16" pos:end="125:32"><expr pos:start="125:16" pos:end="125:32"><name pos:start="125:16" pos:end="125:32">backing_filename2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:68"><expr pos:start="131:5" pos:end="131:67"><name pos:start="131:5" pos:end="131:7">ret</name> <operator pos:start="131:9" pos:end="131:9">=</operator> <call pos:start="131:11" pos:end="131:67"><name pos:start="131:11" pos:end="131:39">bdrv_query_snapshot_info_list</name><argument_list pos:start="131:40" pos:end="131:67">(<argument pos:start="131:41" pos:end="131:42"><expr pos:start="131:41" pos:end="131:42"><name pos:start="131:41" pos:end="131:42">bs</name></expr></argument>, <argument pos:start="131:45" pos:end="131:60"><expr pos:start="131:45" pos:end="131:60"><operator pos:start="131:45" pos:end="131:45">&amp;</operator><name pos:start="131:46" pos:end="131:60"><name pos:start="131:46" pos:end="131:49">info</name><operator pos:start="131:50" pos:end="131:51">-&gt;</operator><name pos:start="131:52" pos:end="131:60">snapshots</name></name></expr></argument>, <argument pos:start="131:63" pos:end="131:66"><expr pos:start="131:63" pos:end="131:66"><operator pos:start="131:63" pos:end="131:63">&amp;</operator><name pos:start="131:64" pos:end="131:66">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="133:5" pos:end="163:5">switch <condition pos:start="133:12" pos:end="133:16">(<expr pos:start="133:13" pos:end="133:15"><name pos:start="133:13" pos:end="133:15">ret</name></expr>)</condition> <block pos:start="133:18" pos:end="163:5">{<block_content pos:start="135:5" pos:end="161:15">

    <case pos:start="135:5" pos:end="135:11">case <expr pos:start="135:10" pos:end="135:10"><literal type="number" pos:start="135:10" pos:end="135:10">0</literal></expr>:</case>

        <if_stmt pos:start="137:9" pos:end="141:9"><if pos:start="137:9" pos:end="141:9">if <condition pos:start="137:12" pos:end="137:28">(<expr pos:start="137:13" pos:end="137:27"><name pos:start="137:13" pos:end="137:27"><name pos:start="137:13" pos:end="137:16">info</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:27">snapshots</name></name></expr>)</condition> <block pos:start="137:30" pos:end="141:9">{<block_content pos:start="139:13" pos:end="139:39">

            <expr_stmt pos:start="139:13" pos:end="139:39"><expr pos:start="139:13" pos:end="139:38"><name pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:16">info</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:31">has_snapshots</name></name> <operator pos:start="139:33" pos:end="139:33">=</operator> <name pos:start="139:35" pos:end="139:38">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>

    <comment type="block" pos:start="145:5" pos:end="145:27">/* recoverable error */</comment>

    <case pos:start="147:5" pos:end="147:20">case <expr pos:start="147:10" pos:end="147:19"><operator pos:start="147:10" pos:end="147:10">-</operator><name pos:start="147:11" pos:end="147:19">ENOMEDIUM</name></expr>:</case>

    <case pos:start="149:5" pos:end="149:18">case <expr pos:start="149:10" pos:end="149:17"><operator pos:start="149:10" pos:end="149:10">-</operator><name pos:start="149:11" pos:end="149:17">ENOTSUP</name></expr>:</case>

        <expr_stmt pos:start="151:9" pos:end="151:24"><expr pos:start="151:9" pos:end="151:23"><call pos:start="151:9" pos:end="151:23"><name pos:start="151:9" pos:end="151:18">error_free</name><argument_list pos:start="151:19" pos:end="151:23">(<argument pos:start="151:20" pos:end="151:22"><expr pos:start="151:20" pos:end="151:22"><name pos:start="151:20" pos:end="151:22">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="153:9" pos:end="153:14">break;</break>

    <default pos:start="155:5" pos:end="155:12">default:</default>

        <expr_stmt pos:start="157:9" pos:end="157:35"><expr pos:start="157:9" pos:end="157:34"><call pos:start="157:9" pos:end="157:34"><name pos:start="157:9" pos:end="157:23">error_propagate</name><argument_list pos:start="157:24" pos:end="157:34">(<argument pos:start="157:25" pos:end="157:28"><expr pos:start="157:25" pos:end="157:28"><name pos:start="157:25" pos:end="157:28">errp</name></expr></argument>, <argument pos:start="157:31" pos:end="157:33"><expr pos:start="157:31" pos:end="157:33"><name pos:start="157:31" pos:end="157:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:34"><expr pos:start="159:9" pos:end="159:33"><call pos:start="159:9" pos:end="159:33"><name pos:start="159:9" pos:end="159:27">qapi_free_ImageInfo</name><argument_list pos:start="159:28" pos:end="159:33">(<argument pos:start="159:29" pos:end="159:32"><expr pos:start="159:29" pos:end="159:32"><name pos:start="159:29" pos:end="159:32">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="161:9" pos:end="161:15">return;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="167:5" pos:end="167:19"><expr pos:start="167:5" pos:end="167:18"><operator pos:start="167:5" pos:end="167:5">*</operator><name pos:start="167:6" pos:end="167:11">p_info</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <name pos:start="167:15" pos:end="167:18">info</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
