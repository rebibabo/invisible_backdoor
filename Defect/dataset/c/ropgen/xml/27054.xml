<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27054.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:31">allocate_cluster</name><parameter_list pos:start="1:32" pos:end="1:73">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:48">BlockDriverState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">bs</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:72"><decl pos:start="1:55" pos:end="1:72"><type pos:start="1:55" pos:end="1:72"><name pos:start="1:55" pos:end="1:61">int64_t</name></type> <name pos:start="1:63" pos:end="1:72">sector_num</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:73">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">BDRVParallelsState</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:25">s</name> <init pos:start="5:27" pos:end="5:38">= <expr pos:start="5:29" pos:end="5:38"><name pos:start="5:29" pos:end="5:38"><name pos:start="5:29" pos:end="5:30">bs</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:38">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">idx</name></decl>, <decl pos:start="7:19" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:19" pos:end="7:24">offset</name></decl>, <decl pos:start="7:27" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:27" pos:end="7:29">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:7">idx</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <name pos:start="15:11" pos:end="15:20">sector_num</name> <operator pos:start="15:22" pos:end="15:22">/</operator> <name pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:32">tracks</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:10">offset</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:23">sector_num</name> <operator pos:start="17:25" pos:end="17:25">%</operator> <name pos:start="17:27" pos:end="17:35"><name pos:start="17:27" pos:end="17:27">s</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:35">tracks</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:11">idx</name> <operator pos:start="21:13" pos:end="21:14">&gt;=</operator> <name pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:30">catalog_size</name></name></expr>)</condition> <block pos:start="21:33" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:23">

        <return pos:start="23:9" pos:end="23:23">return <expr pos:start="23:16" pos:end="23:22"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:36">(<expr pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:25">catalog_bitmap</name><index pos:start="27:26" pos:end="27:30">[<expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">idx</name></expr>]</index></name> <operator pos:start="27:32" pos:end="27:33">!=</operator> <literal type="number" pos:start="27:35" pos:end="27:35">0</literal></expr>)</condition> <block pos:start="27:38" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:77">

        <return pos:start="29:9" pos:end="29:77">return <expr pos:start="29:16" pos:end="29:76"><operator pos:start="29:16" pos:end="29:16">(</operator><name pos:start="29:17" pos:end="29:24">uint64_t</name><operator pos:start="29:25" pos:end="29:25">)</operator><name pos:start="29:26" pos:end="29:47"><name pos:start="29:26" pos:end="29:26">s</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:42">catalog_bitmap</name><index pos:start="29:43" pos:end="29:47">[<expr pos:start="29:44" pos:end="29:46"><name pos:start="29:44" pos:end="29:46">idx</name></expr>]</index></name> <operator pos:start="29:49" pos:end="29:49">*</operator> <name pos:start="29:51" pos:end="29:67"><name pos:start="29:51" pos:end="29:51">s</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:67">off_multiplier</name></name> <operator pos:start="29:69" pos:end="29:69">+</operator> <name pos:start="29:71" pos:end="29:76">offset</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:55"><expr pos:start="35:5" pos:end="35:54"><name pos:start="35:5" pos:end="35:7">pos</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:34"><name pos:start="35:11" pos:end="35:24">bdrv_getlength</name><argument_list pos:start="35:25" pos:end="35:34">(<argument pos:start="35:26" pos:end="35:33"><expr pos:start="35:26" pos:end="35:33"><name pos:start="35:26" pos:end="35:33"><name pos:start="35:26" pos:end="35:27">bs</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:33">file</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:36" pos:end="35:37">&gt;&gt;</operator> <name pos:start="35:39" pos:end="35:54">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:24">(<expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:23">has_truncate</name></name></expr>)</condition> <block pos:start="37:26" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:77">

        <expr_stmt pos:start="39:9" pos:end="39:77"><expr pos:start="39:9" pos:end="39:76"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:76"><name pos:start="39:15" pos:end="39:27">bdrv_truncate</name><argument_list pos:start="39:28" pos:end="39:76">(<argument pos:start="39:29" pos:end="39:36"><expr pos:start="39:29" pos:end="39:36"><name pos:start="39:29" pos:end="39:36"><name pos:start="39:29" pos:end="39:30">bs</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:36">file</name></name></expr></argument>, <argument pos:start="39:39" pos:end="39:75"><expr pos:start="39:39" pos:end="39:75"><operator pos:start="39:39" pos:end="39:39">(</operator><name pos:start="39:40" pos:end="39:42">pos</name> <operator pos:start="39:44" pos:end="39:44">+</operator> <name pos:start="39:46" pos:end="39:54"><name pos:start="39:46" pos:end="39:46">s</name><operator pos:start="39:47" pos:end="39:48">-&gt;</operator><name pos:start="39:49" pos:end="39:54">tracks</name></name><operator pos:start="39:55" pos:end="39:55">)</operator> <operator pos:start="39:57" pos:end="39:58">&lt;&lt;</operator> <name pos:start="39:60" pos:end="39:75">BDRV_SECTOR_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:61">

        <expr_stmt pos:start="43:9" pos:end="43:61"><expr pos:start="43:9" pos:end="43:60"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:60"><name pos:start="43:15" pos:end="43:31">bdrv_write_zeroes</name><argument_list pos:start="43:32" pos:end="43:60">(<argument pos:start="43:33" pos:end="43:40"><expr pos:start="43:33" pos:end="43:40"><name pos:start="43:33" pos:end="43:40"><name pos:start="43:33" pos:end="43:34">bs</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:40">file</name></name></expr></argument>, <argument pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><name pos:start="43:43" pos:end="43:45">pos</name></expr></argument>, <argument pos:start="43:48" pos:end="43:56"><expr pos:start="43:48" pos:end="43:56"><name pos:start="43:48" pos:end="43:56"><name pos:start="43:48" pos:end="43:48">s</name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:56">tracks</name></name></expr></argument>, <argument pos:start="43:59" pos:end="43:59"><expr pos:start="43:59" pos:end="43:59"><literal type="number" pos:start="43:59" pos:end="43:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">&lt;</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>)</condition> <block pos:start="47:18" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:19">

        <return pos:start="49:9" pos:end="49:19">return <expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:53"><expr pos:start="55:5" pos:end="55:52"><name pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:21">catalog_bitmap</name><index pos:start="55:22" pos:end="55:26">[<expr pos:start="55:23" pos:end="55:25"><name pos:start="55:23" pos:end="55:25">idx</name></expr>]</index></name> <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:32">pos</name> <operator pos:start="55:34" pos:end="55:34">/</operator> <name pos:start="55:36" pos:end="55:52"><name pos:start="55:36" pos:end="55:36">s</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:52">off_multiplier</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:46"><expr pos:start="59:5" pos:end="59:45"><name pos:start="59:5" pos:end="59:7">tmp</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <call pos:start="59:11" pos:end="59:45"><name pos:start="59:11" pos:end="59:21">cpu_to_le32</name><argument_list pos:start="59:22" pos:end="59:45">(<argument pos:start="59:23" pos:end="59:44"><expr pos:start="59:23" pos:end="59:44"><name pos:start="59:23" pos:end="59:44"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:39">catalog_bitmap</name><index pos:start="59:40" pos:end="59:44">[<expr pos:start="59:41" pos:end="59:43"><name pos:start="59:41" pos:end="59:43">idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="65:76"><expr pos:start="63:5" pos:end="65:75"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="65:75"><name pos:start="63:11" pos:end="63:21">bdrv_pwrite</name><argument_list pos:start="63:22" pos:end="65:75">(<argument pos:start="63:23" pos:end="63:30"><expr pos:start="63:23" pos:end="63:30"><name pos:start="63:23" pos:end="63:30"><name pos:start="63:23" pos:end="63:24">bs</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:30">file</name></name></expr></argument>,

            <argument pos:start="65:13" pos:end="65:55"><expr pos:start="65:13" pos:end="65:55"><sizeof pos:start="65:13" pos:end="65:35">sizeof<argument_list pos:start="65:19" pos:end="65:35">(<argument pos:start="65:20" pos:end="65:34"><expr pos:start="65:20" pos:end="65:34"><name pos:start="65:20" pos:end="65:34">ParallelsHeader</name></expr></argument>)</argument_list></sizeof> <operator pos:start="65:37" pos:end="65:37">+</operator> <name pos:start="65:39" pos:end="65:41">idx</name> <operator pos:start="65:43" pos:end="65:43">*</operator> <sizeof pos:start="65:45" pos:end="65:55">sizeof<argument_list pos:start="65:51" pos:end="65:55">(<argument pos:start="65:52" pos:end="65:54"><expr pos:start="65:52" pos:end="65:54"><name pos:start="65:52" pos:end="65:54">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="65:58" pos:end="65:61"><expr pos:start="65:58" pos:end="65:61"><operator pos:start="65:58" pos:end="65:58">&amp;</operator><name pos:start="65:59" pos:end="65:61">tmp</name></expr></argument>, <argument pos:start="65:64" pos:end="65:74"><expr pos:start="65:64" pos:end="65:74"><sizeof pos:start="65:64" pos:end="65:74">sizeof<argument_list pos:start="65:70" pos:end="65:74">(<argument pos:start="65:71" pos:end="65:73"><expr pos:start="65:71" pos:end="65:73"><name pos:start="65:71" pos:end="65:73">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:16">(<expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">&lt;</operator> <literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>)</condition> <block pos:start="67:18" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:19">

        <expr_stmt pos:start="69:9" pos:end="69:35"><expr pos:start="69:9" pos:end="69:34"><name pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:25">catalog_bitmap</name><index pos:start="69:26" pos:end="69:30">[<expr pos:start="69:27" pos:end="69:29"><name pos:start="69:27" pos:end="69:29">idx</name></expr>]</index></name> <operator pos:start="69:32" pos:end="69:32">=</operator> <literal type="number" pos:start="69:34" pos:end="69:34">0</literal></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:19">return <expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="75:5" pos:end="75:73">return <expr pos:start="75:12" pos:end="75:72"><operator pos:start="75:12" pos:end="75:12">(</operator><name pos:start="75:13" pos:end="75:20">uint64_t</name><operator pos:start="75:21" pos:end="75:21">)</operator><name pos:start="75:22" pos:end="75:43"><name pos:start="75:22" pos:end="75:22">s</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:38">catalog_bitmap</name><index pos:start="75:39" pos:end="75:43">[<expr pos:start="75:40" pos:end="75:42"><name pos:start="75:40" pos:end="75:42">idx</name></expr>]</index></name> <operator pos:start="75:45" pos:end="75:45">*</operator> <name pos:start="75:47" pos:end="75:63"><name pos:start="75:47" pos:end="75:47">s</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:63">off_multiplier</name></name> <operator pos:start="75:65" pos:end="75:65">+</operator> <name pos:start="75:67" pos:end="75:72">offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
