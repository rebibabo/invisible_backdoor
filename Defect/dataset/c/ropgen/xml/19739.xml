<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19739.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:29">local_readlink</name><parameter_list pos:start="1:30" pos:end="3:32">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:39">FsContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">fs_ctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:65"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:59">char</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">path</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:17"><decl pos:start="3:9" pos:end="3:17"><type pos:start="3:9" pos:end="3:17"><name pos:start="3:9" pos:end="3:12">char</name> <modifier pos:start="3:14" pos:end="3:14">*</modifier></type><name pos:start="3:15" pos:end="3:17">buf</name></decl></parameter>, <parameter pos:start="3:20" pos:end="3:31"><decl pos:start="3:20" pos:end="3:31"><type pos:start="3:20" pos:end="3:31"><name pos:start="3:20" pos:end="3:25">size_t</name></type> <name pos:start="3:27" pos:end="3:31">bufsz</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:17">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:17">tsize</name> <init pos:start="7:19" pos:end="7:22">= <expr pos:start="7:21" pos:end="7:22"><operator pos:start="7:21" pos:end="7:21">-</operator><literal type="number" pos:start="7:22" pos:end="7:22">1</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="35:5"><if pos:start="9:5" pos:end="31:5">if <condition pos:start="9:8" pos:end="9:35">(<expr pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:14">fs_ctx</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:21">fs_sm</name></name> <operator pos:start="9:23" pos:end="9:24">==</operator> <name pos:start="9:26" pos:end="9:34">SM_MAPPED</name></expr>)</condition> <block pos:start="9:37" pos:end="31:5">{<block_content pos:start="11:9" pos:end="29:21">

        <decl_stmt pos:start="11:9" pos:end="11:15"><decl pos:start="11:9" pos:end="11:14"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:14">fd</name></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:49"><expr pos:start="13:9" pos:end="13:48"><name pos:start="13:9" pos:end="13:10">fd</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:48"><name pos:start="13:14" pos:end="13:17">open</name><argument_list pos:start="13:18" pos:end="13:48">(<argument pos:start="13:19" pos:end="13:37"><expr pos:start="13:19" pos:end="13:37"><call pos:start="13:19" pos:end="13:37"><name pos:start="13:19" pos:end="13:23">rpath</name><argument_list pos:start="13:24" pos:end="13:37">(<argument pos:start="13:25" pos:end="13:30"><expr pos:start="13:25" pos:end="13:30"><name pos:start="13:25" pos:end="13:30">fs_ctx</name></expr></argument>, <argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">path</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:40" pos:end="13:47"><expr pos:start="13:40" pos:end="13:47"><name pos:start="13:40" pos:end="13:47">O_RDONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:21">(<expr pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:14">fd</name> <operator pos:start="15:16" pos:end="15:17">==</operator> <operator pos:start="15:19" pos:end="15:19">-</operator><literal type="number" pos:start="15:20" pos:end="15:20">1</literal></expr>)</condition> <block pos:start="15:23" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:22">

            <return pos:start="17:13" pos:end="17:22">return <expr pos:start="17:20" pos:end="17:21"><operator pos:start="17:20" pos:end="17:20">-</operator><literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <do pos:start="21:9" pos:end="25:48">do <block pos:start="21:12" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:49">

            <expr_stmt pos:start="23:13" pos:end="23:49"><expr pos:start="23:13" pos:end="23:48"><name pos:start="23:13" pos:end="23:17">tsize</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:48"><name pos:start="23:21" pos:end="23:24">read</name><argument_list pos:start="23:25" pos:end="23:48">(<argument pos:start="23:26" pos:end="23:27"><expr pos:start="23:26" pos:end="23:27"><name pos:start="23:26" pos:end="23:27">fd</name></expr></argument>, <argument pos:start="23:30" pos:end="23:40"><expr pos:start="23:30" pos:end="23:40"><operator pos:start="23:30" pos:end="23:30">(</operator><name pos:start="23:31" pos:end="23:34">void</name> <operator pos:start="23:36" pos:end="23:36">*</operator><operator pos:start="23:37" pos:end="23:37">)</operator><name pos:start="23:38" pos:end="23:40">buf</name></expr></argument>, <argument pos:start="23:43" pos:end="23:47"><expr pos:start="23:43" pos:end="23:47"><name pos:start="23:43" pos:end="23:47">bufsz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="25:17" pos:end="25:47">(<expr pos:start="25:18" pos:end="25:46"><name pos:start="25:18" pos:end="25:22">tsize</name> <operator pos:start="25:24" pos:end="25:25">==</operator> <operator pos:start="25:27" pos:end="25:27">-</operator><literal type="number" pos:start="25:28" pos:end="25:28">1</literal> <operator pos:start="25:30" pos:end="25:31">&amp;&amp;</operator> <name pos:start="25:33" pos:end="25:37">errno</name> <operator pos:start="25:39" pos:end="25:40">==</operator> <name pos:start="25:42" pos:end="25:46">EINTR</name></expr>)</condition>;</do>

        <expr_stmt pos:start="27:9" pos:end="27:18"><expr pos:start="27:9" pos:end="27:17"><call pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:13">close</name><argument_list pos:start="27:14" pos:end="27:17">(<argument pos:start="27:15" pos:end="27:16"><expr pos:start="27:15" pos:end="27:16"><name pos:start="27:15" pos:end="27:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:21">return <expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">tsize</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="35:5">else if <condition pos:start="31:15" pos:end="31:47">(<expr pos:start="31:16" pos:end="31:46"><name pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:21">fs_ctx</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:28">fs_sm</name></name> <operator pos:start="31:30" pos:end="31:31">==</operator> <name pos:start="31:33" pos:end="31:46">SM_PASSTHROUGH</name></expr>)</condition> <block pos:start="31:49" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:58">

        <expr_stmt pos:start="33:9" pos:end="33:58"><expr pos:start="33:9" pos:end="33:57"><name pos:start="33:9" pos:end="33:13">tsize</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:57"><name pos:start="33:17" pos:end="33:24">readlink</name><argument_list pos:start="33:25" pos:end="33:57">(<argument pos:start="33:26" pos:end="33:44"><expr pos:start="33:26" pos:end="33:44"><call pos:start="33:26" pos:end="33:44"><name pos:start="33:26" pos:end="33:30">rpath</name><argument_list pos:start="33:31" pos:end="33:44">(<argument pos:start="33:32" pos:end="33:37"><expr pos:start="33:32" pos:end="33:37"><name pos:start="33:32" pos:end="33:37">fs_ctx</name></expr></argument>, <argument pos:start="33:40" pos:end="33:43"><expr pos:start="33:40" pos:end="33:43"><name pos:start="33:40" pos:end="33:43">path</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:47" pos:end="33:49"><expr pos:start="33:47" pos:end="33:49"><name pos:start="33:47" pos:end="33:49">buf</name></expr></argument>, <argument pos:start="33:52" pos:end="33:56"><expr pos:start="33:52" pos:end="33:56"><name pos:start="33:52" pos:end="33:56">bufsz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="37:5" pos:end="37:17">return <expr pos:start="37:12" pos:end="37:16"><name pos:start="37:12" pos:end="37:16">tsize</name></expr>;</return>

</block_content>}</block></function>
</unit>
