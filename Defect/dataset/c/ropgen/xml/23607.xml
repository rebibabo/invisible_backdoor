<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23607.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">CURLState</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:33">curl_init_state</name><parameter_list pos:start="1:34" pos:end="1:51">(<parameter pos:start="1:35" pos:end="1:50"><decl pos:start="1:35" pos:end="1:50"><type pos:start="1:35" pos:end="1:49"><name pos:start="1:35" pos:end="1:47">BDRVCURLState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:17">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">CURLState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">state</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>;</decl_stmt>



    <do pos:start="11:5" pos:end="41:20">do <block pos:start="11:8" pos:end="41:5">{<block_content pos:start="13:9" pos:end="39:9">

        <for pos:start="13:9" pos:end="33:9">for <control pos:start="13:13" pos:end="13:41">(<init pos:start="13:14" pos:end="13:17"><expr pos:start="13:14" pos:end="13:16"><name pos:start="13:14" pos:end="13:14">i</name><operator pos:start="13:15" pos:end="13:15">=</operator><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</init> <condition pos:start="13:19" pos:end="13:36"><expr pos:start="13:19" pos:end="13:35"><name pos:start="13:19" pos:end="13:19">i</name><operator pos:start="13:20" pos:end="13:20">&lt;</operator><name pos:start="13:21" pos:end="13:35">CURL_NUM_STATES</name></expr>;</condition> <incr pos:start="13:38" pos:end="13:40"><expr pos:start="13:38" pos:end="13:40"><name pos:start="13:38" pos:end="13:38">i</name><operator pos:start="13:39" pos:end="13:40">++</operator></expr></incr>)</control> <block pos:start="13:43" pos:end="33:9">{<block_content pos:start="15:13" pos:end="31:18">

            <for pos:start="15:13" pos:end="19:29">for <control pos:start="15:17" pos:end="15:42">(<init pos:start="15:18" pos:end="15:21"><expr pos:start="15:18" pos:end="15:20"><name pos:start="15:18" pos:end="15:18">j</name><operator pos:start="15:19" pos:end="15:19">=</operator><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr>;</init> <condition pos:start="15:23" pos:end="15:37"><expr pos:start="15:23" pos:end="15:36"><name pos:start="15:23" pos:end="15:23">j</name><operator pos:start="15:24" pos:end="15:24">&lt;</operator><name pos:start="15:25" pos:end="15:36">CURL_NUM_ACB</name></expr>;</condition> <incr pos:start="15:39" pos:end="15:41"><expr pos:start="15:39" pos:end="15:41"><name pos:start="15:39" pos:end="15:39">j</name><operator pos:start="15:40" pos:end="15:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:17" pos:end="19:29"><block_content pos:start="17:17" pos:end="19:29">

                <if_stmt pos:start="17:17" pos:end="19:29"><if pos:start="17:17" pos:end="19:29">if <condition pos:start="17:20" pos:end="17:40">(<expr pos:start="17:21" pos:end="17:39"><name pos:start="17:21" pos:end="17:32"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:29">states</name><index pos:start="17:30" pos:end="17:32">[<expr pos:start="17:31" pos:end="17:31"><name pos:start="17:31" pos:end="17:31">i</name></expr>]</index></name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:39"><name pos:start="17:34" pos:end="17:36">acb</name><index pos:start="17:37" pos:end="17:39">[<expr pos:start="17:38" pos:end="17:38"><name pos:start="17:38" pos:end="17:38">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="19:21" pos:end="19:29"><block_content pos:start="19:21" pos:end="19:29">

                    <continue pos:start="19:21" pos:end="19:29">continue;</continue></block_content></block></if></if_stmt></block_content></block></for>

            <if_stmt pos:start="21:13" pos:end="23:25"><if pos:start="21:13" pos:end="23:25">if <condition pos:start="21:16" pos:end="21:36">(<expr pos:start="21:17" pos:end="21:35"><name pos:start="21:17" pos:end="21:28"><name pos:start="21:17" pos:end="21:17">s</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:25">states</name><index pos:start="21:26" pos:end="21:28">[<expr pos:start="21:27" pos:end="21:27"><name pos:start="21:27" pos:end="21:27">i</name></expr>]</index></name><operator pos:start="21:29" pos:end="21:29">.</operator><name pos:start="21:30" pos:end="21:35">in_use</name></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:25"><block_content pos:start="23:17" pos:end="23:25">

                <continue pos:start="23:17" pos:end="23:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="27:13" pos:end="27:34"><expr pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:17">state</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <operator pos:start="27:21" pos:end="27:21">&amp;</operator><name pos:start="27:22" pos:end="27:33"><name pos:start="27:22" pos:end="27:22">s</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:30">states</name><index pos:start="27:31" pos:end="27:33">[<expr pos:start="27:32" pos:end="27:32"><name pos:start="27:32" pos:end="27:32">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:30"><expr pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:17">state</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:25">in_use</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <literal type="number" pos:start="29:29" pos:end="29:29">1</literal></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></for>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:19">(<expr pos:start="35:13" pos:end="35:18"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:18">state</name></expr>)</condition> <block pos:start="35:21" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:28">

            <expr_stmt pos:start="37:13" pos:end="37:28"><expr pos:start="37:13" pos:end="37:27"><call pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:25">qemu_aio_wait</name><argument_list pos:start="37:26" pos:end="37:27">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while<condition pos:start="41:12" pos:end="41:19">(<expr pos:start="41:13" pos:end="41:18"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:18">state</name></expr>)</condition>;</do>



    <if_stmt pos:start="45:5" pos:end="111:5"><if pos:start="45:5" pos:end="111:5">if <condition pos:start="45:8" pos:end="45:21">(<expr pos:start="45:9" pos:end="45:20"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:20"><name pos:start="45:10" pos:end="45:14">state</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:20">curl</name></name></expr>)</condition> <block pos:start="45:23" pos:end="111:5">{<block_content pos:start="47:9" pos:end="110:0">

        <expr_stmt pos:start="47:9" pos:end="47:39"><expr pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:13">state</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:19">curl</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <call pos:start="47:23" pos:end="47:38"><name pos:start="47:23" pos:end="47:36">curl_easy_init</name><argument_list pos:start="47:37" pos:end="47:38">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:25">(<expr pos:start="49:13" pos:end="49:24"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:24"><name pos:start="49:14" pos:end="49:18">state</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:24">curl</name></name></expr>)</condition> <block pos:start="49:27" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:24">

            <return pos:start="51:13" pos:end="51:24">return <expr pos:start="51:20" pos:end="51:23"><name pos:start="51:20" pos:end="51:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:59"><expr pos:start="55:9" pos:end="55:58"><call pos:start="55:9" pos:end="55:58"><name pos:start="55:9" pos:end="55:24">curl_easy_setopt</name><argument_list pos:start="55:25" pos:end="55:58">(<argument pos:start="55:26" pos:end="55:36"><expr pos:start="55:26" pos:end="55:36"><name pos:start="55:26" pos:end="55:36"><name pos:start="55:26" pos:end="55:30">state</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:36">curl</name></name></expr></argument>, <argument pos:start="55:39" pos:end="55:49"><expr pos:start="55:39" pos:end="55:49"><name pos:start="55:39" pos:end="55:49">CURLOPT_URL</name></expr></argument>, <argument pos:start="55:52" pos:end="55:57"><expr pos:start="55:52" pos:end="55:57"><name pos:start="55:52" pos:end="55:57"><name pos:start="55:52" pos:end="55:52">s</name><operator pos:start="55:53" pos:end="55:54">-&gt;</operator><name pos:start="55:55" pos:end="55:57">url</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="59:46"><expr pos:start="57:9" pos:end="59:45"><call pos:start="57:9" pos:end="59:45"><name pos:start="57:9" pos:end="57:24">curl_easy_setopt</name><argument_list pos:start="57:25" pos:end="59:45">(<argument pos:start="57:26" pos:end="57:36"><expr pos:start="57:26" pos:end="57:36"><name pos:start="57:26" pos:end="57:36"><name pos:start="57:26" pos:end="57:30">state</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:36">curl</name></name></expr></argument>, <argument pos:start="57:39" pos:end="57:60"><expr pos:start="57:39" pos:end="57:60"><name pos:start="57:39" pos:end="57:60">CURLOPT_SSL_VERIFYPEER</name></expr></argument>,

                         <argument pos:start="59:26" pos:end="59:44"><expr pos:start="59:26" pos:end="59:44"><operator pos:start="59:26" pos:end="59:26">(</operator><name pos:start="59:27" pos:end="59:30">long</name><operator pos:start="59:31" pos:end="59:31">)</operator> <name pos:start="59:33" pos:end="59:44"><name pos:start="59:33" pos:end="59:33">s</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:44">sslverify</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:58"><expr pos:start="61:9" pos:end="61:57"><call pos:start="61:9" pos:end="61:57"><name pos:start="61:9" pos:end="61:24">curl_easy_setopt</name><argument_list pos:start="61:25" pos:end="61:57">(<argument pos:start="61:26" pos:end="61:36"><expr pos:start="61:26" pos:end="61:36"><name pos:start="61:26" pos:end="61:36"><name pos:start="61:26" pos:end="61:30">state</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:36">curl</name></name></expr></argument>, <argument pos:start="61:39" pos:end="61:53"><expr pos:start="61:39" pos:end="61:53"><name pos:start="61:39" pos:end="61:53">CURLOPT_TIMEOUT</name></expr></argument>, <argument pos:start="61:56" pos:end="61:56"><expr pos:start="61:56" pos:end="61:56"><literal type="number" pos:start="61:56" pos:end="61:56">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="65:47"><expr pos:start="63:9" pos:end="65:46"><call pos:start="63:9" pos:end="65:46"><name pos:start="63:9" pos:end="63:24">curl_easy_setopt</name><argument_list pos:start="63:25" pos:end="65:46">(<argument pos:start="63:26" pos:end="63:36"><expr pos:start="63:26" pos:end="63:36"><name pos:start="63:26" pos:end="63:36"><name pos:start="63:26" pos:end="63:30">state</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:36">curl</name></name></expr></argument>, <argument pos:start="63:39" pos:end="63:59"><expr pos:start="63:39" pos:end="63:59"><name pos:start="63:39" pos:end="63:59">CURLOPT_WRITEFUNCTION</name></expr></argument>,

                         <argument pos:start="65:26" pos:end="65:45"><expr pos:start="65:26" pos:end="65:45"><operator pos:start="65:26" pos:end="65:26">(</operator><name pos:start="65:27" pos:end="65:30">void</name> <operator pos:start="65:32" pos:end="65:32">*</operator><operator pos:start="65:33" pos:end="65:33">)</operator><name pos:start="65:34" pos:end="65:45">curl_read_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:72"><expr pos:start="67:9" pos:end="67:71"><call pos:start="67:9" pos:end="67:71"><name pos:start="67:9" pos:end="67:24">curl_easy_setopt</name><argument_list pos:start="67:25" pos:end="67:71">(<argument pos:start="67:26" pos:end="67:36"><expr pos:start="67:26" pos:end="67:36"><name pos:start="67:26" pos:end="67:36"><name pos:start="67:26" pos:end="67:30">state</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:36">curl</name></name></expr></argument>, <argument pos:start="67:39" pos:end="67:55"><expr pos:start="67:39" pos:end="67:55"><name pos:start="67:39" pos:end="67:55">CURLOPT_WRITEDATA</name></expr></argument>, <argument pos:start="67:58" pos:end="67:70"><expr pos:start="67:58" pos:end="67:70"><operator pos:start="67:58" pos:end="67:58">(</operator><name pos:start="67:59" pos:end="67:62">void</name> <operator pos:start="67:64" pos:end="67:64">*</operator><operator pos:start="67:65" pos:end="67:65">)</operator><name pos:start="67:66" pos:end="67:70">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:70"><expr pos:start="69:9" pos:end="69:69"><call pos:start="69:9" pos:end="69:69"><name pos:start="69:9" pos:end="69:24">curl_easy_setopt</name><argument_list pos:start="69:25" pos:end="69:69">(<argument pos:start="69:26" pos:end="69:36"><expr pos:start="69:26" pos:end="69:36"><name pos:start="69:26" pos:end="69:36"><name pos:start="69:26" pos:end="69:30">state</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:36">curl</name></name></expr></argument>, <argument pos:start="69:39" pos:end="69:53"><expr pos:start="69:39" pos:end="69:53"><name pos:start="69:39" pos:end="69:53">CURLOPT_PRIVATE</name></expr></argument>, <argument pos:start="69:56" pos:end="69:68"><expr pos:start="69:56" pos:end="69:68"><operator pos:start="69:56" pos:end="69:56">(</operator><name pos:start="69:57" pos:end="69:60">void</name> <operator pos:start="69:62" pos:end="69:62">*</operator><operator pos:start="69:63" pos:end="69:63">)</operator><name pos:start="69:64" pos:end="69:68">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:62"><expr pos:start="71:9" pos:end="71:61"><call pos:start="71:9" pos:end="71:61"><name pos:start="71:9" pos:end="71:24">curl_easy_setopt</name><argument_list pos:start="71:25" pos:end="71:61">(<argument pos:start="71:26" pos:end="71:36"><expr pos:start="71:26" pos:end="71:36"><name pos:start="71:26" pos:end="71:36"><name pos:start="71:26" pos:end="71:30">state</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:36">curl</name></name></expr></argument>, <argument pos:start="71:39" pos:end="71:57"><expr pos:start="71:39" pos:end="71:57"><name pos:start="71:39" pos:end="71:57">CURLOPT_AUTOREFERER</name></expr></argument>, <argument pos:start="71:60" pos:end="71:60"><expr pos:start="71:60" pos:end="71:60"><literal type="number" pos:start="71:60" pos:end="71:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:65"><expr pos:start="73:9" pos:end="73:64"><call pos:start="73:9" pos:end="73:64"><name pos:start="73:9" pos:end="73:24">curl_easy_setopt</name><argument_list pos:start="73:25" pos:end="73:64">(<argument pos:start="73:26" pos:end="73:36"><expr pos:start="73:26" pos:end="73:36"><name pos:start="73:26" pos:end="73:36"><name pos:start="73:26" pos:end="73:30">state</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:36">curl</name></name></expr></argument>, <argument pos:start="73:39" pos:end="73:60"><expr pos:start="73:39" pos:end="73:60"><name pos:start="73:39" pos:end="73:60">CURLOPT_FOLLOWLOCATION</name></expr></argument>, <argument pos:start="73:63" pos:end="73:63"><expr pos:start="73:63" pos:end="73:63"><literal type="number" pos:start="73:63" pos:end="73:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:59"><expr pos:start="75:9" pos:end="75:58"><call pos:start="75:9" pos:end="75:58"><name pos:start="75:9" pos:end="75:24">curl_easy_setopt</name><argument_list pos:start="75:25" pos:end="75:58">(<argument pos:start="75:26" pos:end="75:36"><expr pos:start="75:26" pos:end="75:36"><name pos:start="75:26" pos:end="75:36"><name pos:start="75:26" pos:end="75:30">state</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:36">curl</name></name></expr></argument>, <argument pos:start="75:39" pos:end="75:54"><expr pos:start="75:39" pos:end="75:54"><name pos:start="75:39" pos:end="75:54">CURLOPT_NOSIGNAL</name></expr></argument>, <argument pos:start="75:57" pos:end="75:57"><expr pos:start="75:57" pos:end="75:57"><literal type="number" pos:start="75:57" pos:end="75:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:74"><expr pos:start="77:9" pos:end="77:73"><call pos:start="77:9" pos:end="77:73"><name pos:start="77:9" pos:end="77:24">curl_easy_setopt</name><argument_list pos:start="77:25" pos:end="77:73">(<argument pos:start="77:26" pos:end="77:36"><expr pos:start="77:26" pos:end="77:36"><name pos:start="77:26" pos:end="77:36"><name pos:start="77:26" pos:end="77:30">state</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:36">curl</name></name></expr></argument>, <argument pos:start="77:39" pos:end="77:57"><expr pos:start="77:39" pos:end="77:57"><name pos:start="77:39" pos:end="77:57">CURLOPT_ERRORBUFFER</name></expr></argument>, <argument pos:start="77:60" pos:end="77:72"><expr pos:start="77:60" pos:end="77:72"><name pos:start="77:60" pos:end="77:72"><name pos:start="77:60" pos:end="77:64">state</name><operator pos:start="77:65" pos:end="77:66">-&gt;</operator><name pos:start="77:67" pos:end="77:72">errmsg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="96:0"><expr pos:start="79:9" pos:end="79:61"><call pos:start="79:9" pos:end="79:61"><name pos:start="79:9" pos:end="79:24">curl_easy_setopt</name><argument_list pos:start="79:25" pos:end="79:61">(<argument pos:start="79:26" pos:end="79:36"><expr pos:start="79:26" pos:end="79:36"><name pos:start="79:26" pos:end="79:36"><name pos:start="79:26" pos:end="79:30">state</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:36">curl</name></name></expr></argument>, <argument pos:start="79:39" pos:end="79:57"><expr pos:start="79:39" pos:end="79:57"><name pos:start="79:39" pos:end="79:57">CURLOPT_FAILONERROR</name></expr></argument>, <argument pos:start="79:60" pos:end="79:60"><expr pos:start="79:60" pos:end="79:60"><literal type="number" pos:start="79:60" pos:end="79:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="83:9" pos:end="93:11">/* Restrict supported protocols to avoid security issues in the more

         * obscure protocols.  For example, do not allow POP3/SMTP/IMAP see

         * CVE-2013-0249.

         *

         * Restricting protocols is only supported from 7.19.4 upwards.

         */</comment>

<cpp:if pos:start="95:1" pos:end="95:35">#<cpp:directive pos:start="95:2" pos:end="95:3">if</cpp:directive> <expr pos:start="95:5" pos:end="95:35"><name pos:start="95:5" pos:end="95:23">LIBCURL_VERSION_NUM</name> <operator pos:start="95:25" pos:end="95:26">&gt;=</operator> <literal type="number" pos:start="95:28" pos:end="95:35">0x071304</literal></expr></cpp:if>

        <expr_stmt pos:start="97:9" pos:end="97:68"><expr pos:start="97:9" pos:end="97:67"><call pos:start="97:9" pos:end="97:67"><name pos:start="97:9" pos:end="97:24">curl_easy_setopt</name><argument_list pos:start="97:25" pos:end="97:67">(<argument pos:start="97:26" pos:end="97:36"><expr pos:start="97:26" pos:end="97:36"><name pos:start="97:26" pos:end="97:36"><name pos:start="97:26" pos:end="97:30">state</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:36">curl</name></name></expr></argument>, <argument pos:start="97:39" pos:end="97:55"><expr pos:start="97:39" pos:end="97:55"><name pos:start="97:39" pos:end="97:55">CURLOPT_PROTOCOLS</name></expr></argument>, <argument pos:start="97:58" pos:end="97:66"><expr pos:start="97:58" pos:end="97:66"><name pos:start="97:58" pos:end="97:66">PROTOCOLS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="106:0"><expr pos:start="99:9" pos:end="99:73"><call pos:start="99:9" pos:end="99:73"><name pos:start="99:9" pos:end="99:24">curl_easy_setopt</name><argument_list pos:start="99:25" pos:end="99:73">(<argument pos:start="99:26" pos:end="99:36"><expr pos:start="99:26" pos:end="99:36"><name pos:start="99:26" pos:end="99:36"><name pos:start="99:26" pos:end="99:30">state</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:36">curl</name></name></expr></argument>, <argument pos:start="99:39" pos:end="99:61"><expr pos:start="99:39" pos:end="99:61"><name pos:start="99:39" pos:end="99:61">CURLOPT_REDIR_PROTOCOLS</name></expr></argument>, <argument pos:start="99:64" pos:end="99:72"><expr pos:start="99:64" pos:end="99:72"><name pos:start="99:64" pos:end="99:72">PROTOCOLS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="105:1" pos:end="105:20">#<cpp:directive pos:start="105:2" pos:end="105:6">ifdef</cpp:directive> <name pos:start="105:8" pos:end="105:20">DEBUG_VERBOSE</name></cpp:ifdef>

        <expr_stmt pos:start="107:9" pos:end="110:0"><expr pos:start="107:9" pos:end="107:57"><call pos:start="107:9" pos:end="107:57"><name pos:start="107:9" pos:end="107:24">curl_easy_setopt</name><argument_list pos:start="107:25" pos:end="107:57">(<argument pos:start="107:26" pos:end="107:36"><expr pos:start="107:26" pos:end="107:36"><name pos:start="107:26" pos:end="107:36"><name pos:start="107:26" pos:end="107:30">state</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:36">curl</name></name></expr></argument>, <argument pos:start="107:39" pos:end="107:53"><expr pos:start="107:39" pos:end="107:53"><name pos:start="107:39" pos:end="107:53">CURLOPT_VERBOSE</name></expr></argument>, <argument pos:start="107:56" pos:end="107:56"><expr pos:start="107:56" pos:end="107:56"><literal type="number" pos:start="107:56" pos:end="107:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:17"><expr pos:start="115:5" pos:end="115:16"><name pos:start="115:5" pos:end="115:12"><name pos:start="115:5" pos:end="115:9">state</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:12">s</name></name> <operator pos:start="115:14" pos:end="115:14">=</operator> <name pos:start="115:16" pos:end="115:16">s</name></expr>;</expr_stmt>



    <return pos:start="119:5" pos:end="119:17">return <expr pos:start="119:12" pos:end="119:16"><name pos:start="119:12" pos:end="119:16">state</name></expr>;</return>

</block_content>}</block></function>
</unit>
