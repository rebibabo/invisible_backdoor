<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25360.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:43">extract_common_blockdev_options</name><parameter_list pos:start="1:44" pos:end="5:61">(<parameter pos:start="1:45" pos:end="1:58"><decl pos:start="1:45" pos:end="1:58"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:52">QemuOpts</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">opts</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:75"><decl pos:start="1:61" pos:end="1:75"><type pos:start="1:61" pos:end="1:75"><name pos:start="1:61" pos:end="1:63">int</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:75">bdrv_flags</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:33"><decl pos:start="3:5" pos:end="3:33"><type pos:start="3:5" pos:end="3:33"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:14">char</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier><modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:33">throttling_group</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:63"><decl pos:start="3:36" pos:end="3:63"><type pos:start="3:36" pos:end="3:63"><name pos:start="3:36" pos:end="3:49">ThrottleConfig</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:63">throttle_cfg</name></decl></parameter>,

    <parameter pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:46"><name pos:start="5:5" pos:end="5:31">BlockdevDetectZeroesOptions</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier></type><name pos:start="5:34" pos:end="5:46">detect_zeroes</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:60"><decl pos:start="5:49" pos:end="5:60"><type pos:start="5:49" pos:end="5:60"><name pos:start="5:49" pos:end="5:53">Error</name> <modifier pos:start="5:55" pos:end="5:55">*</modifier><modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:60">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="195:1">{<block_content pos:start="9:5" pos:end="193:5">

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:23">discard</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:22">local_error</name> <init pos:start="11:24" pos:end="11:29">= <expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:19">aio</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="67:5"><if pos:start="17:5" pos:end="67:5">if <condition pos:start="17:8" pos:end="17:19">(<expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:18">bdrv_flags</name></expr>)</condition> <block pos:start="17:21" pos:end="67:5">{<block_content pos:start="19:9" pos:end="65:9">

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:57">(<expr pos:start="19:13" pos:end="19:56"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:56"><name pos:start="19:14" pos:end="19:30">qemu_opt_get_bool</name><argument_list pos:start="19:31" pos:end="19:56">(<argument pos:start="19:32" pos:end="19:35"><expr pos:start="19:32" pos:end="19:35"><name pos:start="19:32" pos:end="19:35">opts</name></expr></argument>, <argument pos:start="19:38" pos:end="19:48"><expr pos:start="19:38" pos:end="19:48"><literal type="string" pos:start="19:38" pos:end="19:48">"read-only"</literal></expr></argument>, <argument pos:start="19:51" pos:end="19:55"><expr pos:start="19:51" pos:end="19:55"><name pos:start="19:51" pos:end="19:55">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:59" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:39">

            <expr_stmt pos:start="21:13" pos:end="21:39"><expr pos:start="21:13" pos:end="21:38"><operator pos:start="21:13" pos:end="21:13">*</operator><name pos:start="21:14" pos:end="21:23">bdrv_flags</name> <operator pos:start="21:25" pos:end="21:26">|=</operator> <name pos:start="21:28" pos:end="21:38">BDRV_O_RDWR</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:59">(<expr pos:start="25:13" pos:end="25:58"><call pos:start="25:13" pos:end="25:58"><name pos:start="25:13" pos:end="25:29">qemu_opt_get_bool</name><argument_list pos:start="25:30" pos:end="25:58">(<argument pos:start="25:31" pos:end="25:34"><expr pos:start="25:31" pos:end="25:34"><name pos:start="25:31" pos:end="25:34">opts</name></expr></argument>, <argument pos:start="25:37" pos:end="25:50"><expr pos:start="25:37" pos:end="25:50"><literal type="string" pos:start="25:37" pos:end="25:50">"copy-on-read"</literal></expr></argument>, <argument pos:start="25:53" pos:end="25:57"><expr pos:start="25:53" pos:end="25:57"><name pos:start="25:53" pos:end="25:57">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:61" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:47">

            <expr_stmt pos:start="27:13" pos:end="27:47"><expr pos:start="27:13" pos:end="27:46"><operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:23">bdrv_flags</name> <operator pos:start="27:25" pos:end="27:26">|=</operator> <name pos:start="27:28" pos:end="27:46">BDRV_O_COPY_ON_READ</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="33:9" pos:end="43:9"><if pos:start="33:9" pos:end="43:9">if <condition pos:start="33:12" pos:end="33:62">(<expr pos:start="33:13" pos:end="33:61"><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:20">discard</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <call pos:start="33:24" pos:end="33:52"><name pos:start="33:24" pos:end="33:35">qemu_opt_get</name><argument_list pos:start="33:36" pos:end="33:52">(<argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">opts</name></expr></argument>, <argument pos:start="33:43" pos:end="33:51"><expr pos:start="33:43" pos:end="33:51"><literal type="string" pos:start="33:43" pos:end="33:51">"discard"</literal></expr></argument>)</argument_list></call><operator pos:start="33:53" pos:end="33:53">)</operator> <operator pos:start="33:55" pos:end="33:56">!=</operator> <name pos:start="33:58" pos:end="33:61">NULL</name></expr>)</condition> <block pos:start="33:64" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:13">

            <if_stmt pos:start="35:13" pos:end="41:13"><if pos:start="35:13" pos:end="41:13">if <condition pos:start="35:16" pos:end="35:67">(<expr pos:start="35:17" pos:end="35:66"><call pos:start="35:17" pos:end="35:61"><name pos:start="35:17" pos:end="35:40">bdrv_parse_discard_flags</name><argument_list pos:start="35:41" pos:end="35:61">(<argument pos:start="35:42" pos:end="35:48"><expr pos:start="35:42" pos:end="35:48"><name pos:start="35:42" pos:end="35:48">discard</name></expr></argument>, <argument pos:start="35:51" pos:end="35:60"><expr pos:start="35:51" pos:end="35:60"><name pos:start="35:51" pos:end="35:60">bdrv_flags</name></expr></argument>)</argument_list></call> <operator pos:start="35:63" pos:end="35:64">!=</operator> <literal type="number" pos:start="35:66" pos:end="35:66">0</literal></expr>)</condition> <block pos:start="35:69" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:23">

                <expr_stmt pos:start="37:17" pos:end="37:59"><expr pos:start="37:17" pos:end="37:58"><call pos:start="37:17" pos:end="37:58"><name pos:start="37:17" pos:end="37:26">error_setg</name><argument_list pos:start="37:27" pos:end="37:58">(<argument pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><name pos:start="37:28" pos:end="37:31">errp</name></expr></argument>, <argument pos:start="37:34" pos:end="37:57"><expr pos:start="37:34" pos:end="37:57"><literal type="string" pos:start="37:34" pos:end="37:57">"Invalid discard option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="39:17" pos:end="39:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="47:9" pos:end="65:9"><if pos:start="47:9" pos:end="65:9">if <condition pos:start="47:12" pos:end="47:54">(<expr pos:start="47:13" pos:end="47:53"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:16">aio</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:44"><name pos:start="47:20" pos:end="47:31">qemu_opt_get</name><argument_list pos:start="47:32" pos:end="47:44">(<argument pos:start="47:33" pos:end="47:36"><expr pos:start="47:33" pos:end="47:36"><name pos:start="47:33" pos:end="47:36">opts</name></expr></argument>, <argument pos:start="47:39" pos:end="47:43"><expr pos:start="47:39" pos:end="47:43"><literal type="string" pos:start="47:39" pos:end="47:43">"aio"</literal></expr></argument>)</argument_list></call><operator pos:start="47:45" pos:end="47:45">)</operator> <operator pos:start="47:47" pos:end="47:48">!=</operator> <name pos:start="47:50" pos:end="47:53">NULL</name></expr>)</condition> <block pos:start="47:56" pos:end="65:9">{<block_content pos:start="49:13" pos:end="63:13">

            <if_stmt pos:start="49:13" pos:end="63:13"><if pos:start="49:13" pos:end="53:13">if <condition pos:start="49:16" pos:end="49:39">(<expr pos:start="49:17" pos:end="49:38"><operator pos:start="49:17" pos:end="49:17">!</operator><call pos:start="49:18" pos:end="49:38"><name pos:start="49:18" pos:end="49:23">strcmp</name><argument_list pos:start="49:24" pos:end="49:38">(<argument pos:start="49:25" pos:end="49:27"><expr pos:start="49:25" pos:end="49:27"><name pos:start="49:25" pos:end="49:27">aio</name></expr></argument>, <argument pos:start="49:30" pos:end="49:37"><expr pos:start="49:30" pos:end="49:37"><literal type="string" pos:start="49:30" pos:end="49:37">"native"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:41" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:49">

                <expr_stmt pos:start="51:17" pos:end="51:49"><expr pos:start="51:17" pos:end="51:48"><operator pos:start="51:17" pos:end="51:17">*</operator><name pos:start="51:18" pos:end="51:27">bdrv_flags</name> <operator pos:start="51:29" pos:end="51:30">|=</operator> <name pos:start="51:32" pos:end="51:48">BDRV_O_NATIVE_AIO</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="53:15" pos:end="57:13">else if <condition pos:start="53:23" pos:end="53:47">(<expr pos:start="53:24" pos:end="53:46"><operator pos:start="53:24" pos:end="53:24">!</operator><call pos:start="53:25" pos:end="53:46"><name pos:start="53:25" pos:end="53:30">strcmp</name><argument_list pos:start="53:31" pos:end="53:46">(<argument pos:start="53:32" pos:end="53:34"><expr pos:start="53:32" pos:end="53:34"><name pos:start="53:32" pos:end="53:34">aio</name></expr></argument>, <argument pos:start="53:37" pos:end="53:45"><expr pos:start="53:37" pos:end="53:45"><literal type="string" pos:start="53:37" pos:end="53:45">"threads"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:49" pos:end="57:13">{<block_content>

                <comment type="block" pos:start="55:17" pos:end="55:41">/* this is the default */</comment>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="63:13">else <block pos:start="57:20" pos:end="63:13">{<block_content pos:start="59:16" pos:end="61:22">

               <expr_stmt pos:start="59:16" pos:end="59:54"><expr pos:start="59:16" pos:end="59:53"><call pos:start="59:16" pos:end="59:53"><name pos:start="59:16" pos:end="59:25">error_setg</name><argument_list pos:start="59:26" pos:end="59:53">(<argument pos:start="59:27" pos:end="59:30"><expr pos:start="59:27" pos:end="59:30"><name pos:start="59:27" pos:end="59:30">errp</name></expr></argument>, <argument pos:start="59:33" pos:end="59:52"><expr pos:start="59:33" pos:end="59:52"><literal type="string" pos:start="59:33" pos:end="59:52">"invalid aio option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

               <return pos:start="61:16" pos:end="61:22">return;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:29">/* disk I/O throttling */</comment>

    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:25">(<expr pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:24">throttling_group</name></expr>)</condition> <block pos:start="73:27" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:67">

        <expr_stmt pos:start="75:9" pos:end="75:67"><expr pos:start="75:9" pos:end="75:66"><operator pos:start="75:9" pos:end="75:9">*</operator><name pos:start="75:10" pos:end="75:25">throttling_group</name> <operator pos:start="75:27" pos:end="75:27">=</operator> <call pos:start="75:29" pos:end="75:66"><name pos:start="75:29" pos:end="75:40">qemu_opt_get</name><argument_list pos:start="75:41" pos:end="75:66">(<argument pos:start="75:42" pos:end="75:45"><expr pos:start="75:42" pos:end="75:45"><name pos:start="75:42" pos:end="75:45">opts</name></expr></argument>, <argument pos:start="75:48" pos:end="75:65"><expr pos:start="75:48" pos:end="75:65"><literal type="string" pos:start="75:48" pos:end="75:65">"throttling.group"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="149:5"><if pos:start="81:5" pos:end="149:5">if <condition pos:start="81:8" pos:end="81:21">(<expr pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:20">throttle_cfg</name></expr>)</condition> <block pos:start="81:23" pos:end="149:5">{<block_content pos:start="83:9" pos:end="147:9">

        <expr_stmt pos:start="83:9" pos:end="83:55"><expr pos:start="83:9" pos:end="83:54"><call pos:start="83:9" pos:end="83:54"><name pos:start="83:9" pos:end="83:14">memset</name><argument_list pos:start="83:15" pos:end="83:54">(<argument pos:start="83:16" pos:end="83:27"><expr pos:start="83:16" pos:end="83:27"><name pos:start="83:16" pos:end="83:27">throttle_cfg</name></expr></argument>, <argument pos:start="83:30" pos:end="83:30"><expr pos:start="83:30" pos:end="83:30"><literal type="number" pos:start="83:30" pos:end="83:30">0</literal></expr></argument>, <argument pos:start="83:33" pos:end="83:53"><expr pos:start="83:33" pos:end="83:53"><sizeof pos:start="83:33" pos:end="83:53">sizeof<argument_list pos:start="83:39" pos:end="83:53">(<argument pos:start="83:40" pos:end="83:52"><expr pos:start="83:40" pos:end="83:52"><operator pos:start="83:40" pos:end="83:40">*</operator><name pos:start="83:41" pos:end="83:52">throttle_cfg</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="87:65"><expr pos:start="85:9" pos:end="87:64"><name pos:start="85:9" pos:end="85:49"><name pos:start="85:9" pos:end="85:20">throttle_cfg</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:29">buckets</name><index pos:start="85:30" pos:end="85:49">[<expr pos:start="85:31" pos:end="85:48"><name pos:start="85:31" pos:end="85:48">THROTTLE_BPS_TOTAL</name></expr>]</index></name><operator pos:start="85:50" pos:end="85:50">.</operator><name pos:start="85:51" pos:end="85:53">avg</name> <operator pos:start="85:55" pos:end="85:55">=</operator>

            <call pos:start="87:13" pos:end="87:64"><name pos:start="87:13" pos:end="87:31">qemu_opt_get_number</name><argument_list pos:start="87:32" pos:end="87:64">(<argument pos:start="87:33" pos:end="87:36"><expr pos:start="87:33" pos:end="87:36"><name pos:start="87:33" pos:end="87:36">opts</name></expr></argument>, <argument pos:start="87:39" pos:end="87:60"><expr pos:start="87:39" pos:end="87:60"><literal type="string" pos:start="87:39" pos:end="87:60">"throttling.bps-total"</literal></expr></argument>, <argument pos:start="87:63" pos:end="87:63"><expr pos:start="87:63" pos:end="87:63"><literal type="number" pos:start="87:63" pos:end="87:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="91:64"><expr pos:start="89:9" pos:end="91:63"><name pos:start="89:9" pos:end="89:48"><name pos:start="89:9" pos:end="89:20">throttle_cfg</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:29">buckets</name><index pos:start="89:30" pos:end="89:48">[<expr pos:start="89:31" pos:end="89:47"><name pos:start="89:31" pos:end="89:47">THROTTLE_BPS_READ</name></expr>]</index></name><operator pos:start="89:49" pos:end="89:49">.</operator><name pos:start="89:50" pos:end="89:52">avg</name>  <operator pos:start="89:55" pos:end="89:55">=</operator>

            <call pos:start="91:13" pos:end="91:63"><name pos:start="91:13" pos:end="91:31">qemu_opt_get_number</name><argument_list pos:start="91:32" pos:end="91:63">(<argument pos:start="91:33" pos:end="91:36"><expr pos:start="91:33" pos:end="91:36"><name pos:start="91:33" pos:end="91:36">opts</name></expr></argument>, <argument pos:start="91:39" pos:end="91:59"><expr pos:start="91:39" pos:end="91:59"><literal type="string" pos:start="91:39" pos:end="91:59">"throttling.bps-read"</literal></expr></argument>, <argument pos:start="91:62" pos:end="91:62"><expr pos:start="91:62" pos:end="91:62"><literal type="number" pos:start="91:62" pos:end="91:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="95:65"><expr pos:start="93:9" pos:end="95:64"><name pos:start="93:9" pos:end="93:49"><name pos:start="93:9" pos:end="93:20">throttle_cfg</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:29">buckets</name><index pos:start="93:30" pos:end="93:49">[<expr pos:start="93:31" pos:end="93:48"><name pos:start="93:31" pos:end="93:48">THROTTLE_BPS_WRITE</name></expr>]</index></name><operator pos:start="93:50" pos:end="93:50">.</operator><name pos:start="93:51" pos:end="93:53">avg</name> <operator pos:start="93:55" pos:end="93:55">=</operator>

            <call pos:start="95:13" pos:end="95:64"><name pos:start="95:13" pos:end="95:31">qemu_opt_get_number</name><argument_list pos:start="95:32" pos:end="95:64">(<argument pos:start="95:33" pos:end="95:36"><expr pos:start="95:33" pos:end="95:36"><name pos:start="95:33" pos:end="95:36">opts</name></expr></argument>, <argument pos:start="95:39" pos:end="95:60"><expr pos:start="95:39" pos:end="95:60"><literal type="string" pos:start="95:39" pos:end="95:60">"throttling.bps-write"</literal></expr></argument>, <argument pos:start="95:63" pos:end="95:63"><expr pos:start="95:63" pos:end="95:63"><literal type="number" pos:start="95:63" pos:end="95:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="99:66"><expr pos:start="97:9" pos:end="99:65"><name pos:start="97:9" pos:end="97:49"><name pos:start="97:9" pos:end="97:20">throttle_cfg</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:29">buckets</name><index pos:start="97:30" pos:end="97:49">[<expr pos:start="97:31" pos:end="97:48"><name pos:start="97:31" pos:end="97:48">THROTTLE_OPS_TOTAL</name></expr>]</index></name><operator pos:start="97:50" pos:end="97:50">.</operator><name pos:start="97:51" pos:end="97:53">avg</name> <operator pos:start="97:55" pos:end="97:55">=</operator>

            <call pos:start="99:13" pos:end="99:65"><name pos:start="99:13" pos:end="99:31">qemu_opt_get_number</name><argument_list pos:start="99:32" pos:end="99:65">(<argument pos:start="99:33" pos:end="99:36"><expr pos:start="99:33" pos:end="99:36"><name pos:start="99:33" pos:end="99:36">opts</name></expr></argument>, <argument pos:start="99:39" pos:end="99:61"><expr pos:start="99:39" pos:end="99:61"><literal type="string" pos:start="99:39" pos:end="99:61">"throttling.iops-total"</literal></expr></argument>, <argument pos:start="99:64" pos:end="99:64"><expr pos:start="99:64" pos:end="99:64"><literal type="number" pos:start="99:64" pos:end="99:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="103:65"><expr pos:start="101:9" pos:end="103:64"><name pos:start="101:9" pos:end="101:48"><name pos:start="101:9" pos:end="101:20">throttle_cfg</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:29">buckets</name><index pos:start="101:30" pos:end="101:48">[<expr pos:start="101:31" pos:end="101:47"><name pos:start="101:31" pos:end="101:47">THROTTLE_OPS_READ</name></expr>]</index></name><operator pos:start="101:49" pos:end="101:49">.</operator><name pos:start="101:50" pos:end="101:52">avg</name> <operator pos:start="101:54" pos:end="101:54">=</operator>

            <call pos:start="103:13" pos:end="103:64"><name pos:start="103:13" pos:end="103:31">qemu_opt_get_number</name><argument_list pos:start="103:32" pos:end="103:64">(<argument pos:start="103:33" pos:end="103:36"><expr pos:start="103:33" pos:end="103:36"><name pos:start="103:33" pos:end="103:36">opts</name></expr></argument>, <argument pos:start="103:39" pos:end="103:60"><expr pos:start="103:39" pos:end="103:60"><literal type="string" pos:start="103:39" pos:end="103:60">"throttling.iops-read"</literal></expr></argument>, <argument pos:start="103:63" pos:end="103:63"><expr pos:start="103:63" pos:end="103:63"><literal type="number" pos:start="103:63" pos:end="103:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="107:66"><expr pos:start="105:9" pos:end="107:65"><name pos:start="105:9" pos:end="105:49"><name pos:start="105:9" pos:end="105:20">throttle_cfg</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:29">buckets</name><index pos:start="105:30" pos:end="105:49">[<expr pos:start="105:31" pos:end="105:48"><name pos:start="105:31" pos:end="105:48">THROTTLE_OPS_WRITE</name></expr>]</index></name><operator pos:start="105:50" pos:end="105:50">.</operator><name pos:start="105:51" pos:end="105:53">avg</name> <operator pos:start="105:55" pos:end="105:55">=</operator>

            <call pos:start="107:13" pos:end="107:65"><name pos:start="107:13" pos:end="107:31">qemu_opt_get_number</name><argument_list pos:start="107:32" pos:end="107:65">(<argument pos:start="107:33" pos:end="107:36"><expr pos:start="107:33" pos:end="107:36"><name pos:start="107:33" pos:end="107:36">opts</name></expr></argument>, <argument pos:start="107:39" pos:end="107:61"><expr pos:start="107:39" pos:end="107:61"><literal type="string" pos:start="107:39" pos:end="107:61">"throttling.iops-write"</literal></expr></argument>, <argument pos:start="107:64" pos:end="107:64"><expr pos:start="107:64" pos:end="107:64"><literal type="number" pos:start="107:64" pos:end="107:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="111:9" pos:end="113:69"><expr pos:start="111:9" pos:end="113:68"><name pos:start="111:9" pos:end="111:49"><name pos:start="111:9" pos:end="111:20">throttle_cfg</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:29">buckets</name><index pos:start="111:30" pos:end="111:49">[<expr pos:start="111:31" pos:end="111:48"><name pos:start="111:31" pos:end="111:48">THROTTLE_BPS_TOTAL</name></expr>]</index></name><operator pos:start="111:50" pos:end="111:50">.</operator><name pos:start="111:51" pos:end="111:53">max</name> <operator pos:start="111:55" pos:end="111:55">=</operator>

            <call pos:start="113:13" pos:end="113:68"><name pos:start="113:13" pos:end="113:31">qemu_opt_get_number</name><argument_list pos:start="113:32" pos:end="113:68">(<argument pos:start="113:33" pos:end="113:36"><expr pos:start="113:33" pos:end="113:36"><name pos:start="113:33" pos:end="113:36">opts</name></expr></argument>, <argument pos:start="113:39" pos:end="113:64"><expr pos:start="113:39" pos:end="113:64"><literal type="string" pos:start="113:39" pos:end="113:64">"throttling.bps-total-max"</literal></expr></argument>, <argument pos:start="113:67" pos:end="113:67"><expr pos:start="113:67" pos:end="113:67"><literal type="number" pos:start="113:67" pos:end="113:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="117:68"><expr pos:start="115:9" pos:end="117:67"><name pos:start="115:9" pos:end="115:48"><name pos:start="115:9" pos:end="115:20">throttle_cfg</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:29">buckets</name><index pos:start="115:30" pos:end="115:48">[<expr pos:start="115:31" pos:end="115:47"><name pos:start="115:31" pos:end="115:47">THROTTLE_BPS_READ</name></expr>]</index></name><operator pos:start="115:49" pos:end="115:49">.</operator><name pos:start="115:50" pos:end="115:52">max</name>  <operator pos:start="115:55" pos:end="115:55">=</operator>

            <call pos:start="117:13" pos:end="117:67"><name pos:start="117:13" pos:end="117:31">qemu_opt_get_number</name><argument_list pos:start="117:32" pos:end="117:67">(<argument pos:start="117:33" pos:end="117:36"><expr pos:start="117:33" pos:end="117:36"><name pos:start="117:33" pos:end="117:36">opts</name></expr></argument>, <argument pos:start="117:39" pos:end="117:63"><expr pos:start="117:39" pos:end="117:63"><literal type="string" pos:start="117:39" pos:end="117:63">"throttling.bps-read-max"</literal></expr></argument>, <argument pos:start="117:66" pos:end="117:66"><expr pos:start="117:66" pos:end="117:66"><literal type="number" pos:start="117:66" pos:end="117:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="121:69"><expr pos:start="119:9" pos:end="121:68"><name pos:start="119:9" pos:end="119:49"><name pos:start="119:9" pos:end="119:20">throttle_cfg</name><operator pos:start="119:21" pos:end="119:22">-&gt;</operator><name pos:start="119:23" pos:end="119:29">buckets</name><index pos:start="119:30" pos:end="119:49">[<expr pos:start="119:31" pos:end="119:48"><name pos:start="119:31" pos:end="119:48">THROTTLE_BPS_WRITE</name></expr>]</index></name><operator pos:start="119:50" pos:end="119:50">.</operator><name pos:start="119:51" pos:end="119:53">max</name> <operator pos:start="119:55" pos:end="119:55">=</operator>

            <call pos:start="121:13" pos:end="121:68"><name pos:start="121:13" pos:end="121:31">qemu_opt_get_number</name><argument_list pos:start="121:32" pos:end="121:68">(<argument pos:start="121:33" pos:end="121:36"><expr pos:start="121:33" pos:end="121:36"><name pos:start="121:33" pos:end="121:36">opts</name></expr></argument>, <argument pos:start="121:39" pos:end="121:64"><expr pos:start="121:39" pos:end="121:64"><literal type="string" pos:start="121:39" pos:end="121:64">"throttling.bps-write-max"</literal></expr></argument>, <argument pos:start="121:67" pos:end="121:67"><expr pos:start="121:67" pos:end="121:67"><literal type="number" pos:start="121:67" pos:end="121:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="125:70"><expr pos:start="123:9" pos:end="125:69"><name pos:start="123:9" pos:end="123:49"><name pos:start="123:9" pos:end="123:20">throttle_cfg</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:29">buckets</name><index pos:start="123:30" pos:end="123:49">[<expr pos:start="123:31" pos:end="123:48"><name pos:start="123:31" pos:end="123:48">THROTTLE_OPS_TOTAL</name></expr>]</index></name><operator pos:start="123:50" pos:end="123:50">.</operator><name pos:start="123:51" pos:end="123:53">max</name> <operator pos:start="123:55" pos:end="123:55">=</operator>

            <call pos:start="125:13" pos:end="125:69"><name pos:start="125:13" pos:end="125:31">qemu_opt_get_number</name><argument_list pos:start="125:32" pos:end="125:69">(<argument pos:start="125:33" pos:end="125:36"><expr pos:start="125:33" pos:end="125:36"><name pos:start="125:33" pos:end="125:36">opts</name></expr></argument>, <argument pos:start="125:39" pos:end="125:65"><expr pos:start="125:39" pos:end="125:65"><literal type="string" pos:start="125:39" pos:end="125:65">"throttling.iops-total-max"</literal></expr></argument>, <argument pos:start="125:68" pos:end="125:68"><expr pos:start="125:68" pos:end="125:68"><literal type="number" pos:start="125:68" pos:end="125:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="129:69"><expr pos:start="127:9" pos:end="129:68"><name pos:start="127:9" pos:end="127:48"><name pos:start="127:9" pos:end="127:20">throttle_cfg</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:29">buckets</name><index pos:start="127:30" pos:end="127:48">[<expr pos:start="127:31" pos:end="127:47"><name pos:start="127:31" pos:end="127:47">THROTTLE_OPS_READ</name></expr>]</index></name><operator pos:start="127:49" pos:end="127:49">.</operator><name pos:start="127:50" pos:end="127:52">max</name> <operator pos:start="127:54" pos:end="127:54">=</operator>

            <call pos:start="129:13" pos:end="129:68"><name pos:start="129:13" pos:end="129:31">qemu_opt_get_number</name><argument_list pos:start="129:32" pos:end="129:68">(<argument pos:start="129:33" pos:end="129:36"><expr pos:start="129:33" pos:end="129:36"><name pos:start="129:33" pos:end="129:36">opts</name></expr></argument>, <argument pos:start="129:39" pos:end="129:64"><expr pos:start="129:39" pos:end="129:64"><literal type="string" pos:start="129:39" pos:end="129:64">"throttling.iops-read-max"</literal></expr></argument>, <argument pos:start="129:67" pos:end="129:67"><expr pos:start="129:67" pos:end="129:67"><literal type="number" pos:start="129:67" pos:end="129:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="133:70"><expr pos:start="131:9" pos:end="133:69"><name pos:start="131:9" pos:end="131:49"><name pos:start="131:9" pos:end="131:20">throttle_cfg</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:29">buckets</name><index pos:start="131:30" pos:end="131:49">[<expr pos:start="131:31" pos:end="131:48"><name pos:start="131:31" pos:end="131:48">THROTTLE_OPS_WRITE</name></expr>]</index></name><operator pos:start="131:50" pos:end="131:50">.</operator><name pos:start="131:51" pos:end="131:53">max</name> <operator pos:start="131:55" pos:end="131:55">=</operator>

            <call pos:start="133:13" pos:end="133:69"><name pos:start="133:13" pos:end="133:31">qemu_opt_get_number</name><argument_list pos:start="133:32" pos:end="133:69">(<argument pos:start="133:33" pos:end="133:36"><expr pos:start="133:33" pos:end="133:36"><name pos:start="133:33" pos:end="133:36">opts</name></expr></argument>, <argument pos:start="133:39" pos:end="133:65"><expr pos:start="133:39" pos:end="133:65"><literal type="string" pos:start="133:39" pos:end="133:65">"throttling.iops-write-max"</literal></expr></argument>, <argument pos:start="133:68" pos:end="133:68"><expr pos:start="133:68" pos:end="133:68"><literal type="number" pos:start="133:68" pos:end="133:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="137:9" pos:end="139:65"><expr pos:start="137:9" pos:end="139:64"><name pos:start="137:9" pos:end="137:29"><name pos:start="137:9" pos:end="137:20">throttle_cfg</name><operator pos:start="137:21" pos:end="137:22">-&gt;</operator><name pos:start="137:23" pos:end="137:29">op_size</name></name> <operator pos:start="137:31" pos:end="137:31">=</operator>

            <call pos:start="139:13" pos:end="139:64"><name pos:start="139:13" pos:end="139:31">qemu_opt_get_number</name><argument_list pos:start="139:32" pos:end="139:64">(<argument pos:start="139:33" pos:end="139:36"><expr pos:start="139:33" pos:end="139:36"><name pos:start="139:33" pos:end="139:36">opts</name></expr></argument>, <argument pos:start="139:39" pos:end="139:60"><expr pos:start="139:39" pos:end="139:60"><literal type="string" pos:start="139:39" pos:end="139:60">"throttling.iops-size"</literal></expr></argument>, <argument pos:start="139:63" pos:end="139:63"><expr pos:start="139:63" pos:end="139:63"><literal type="number" pos:start="139:63" pos:end="139:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="143:9" pos:end="147:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:55">(<expr pos:start="143:13" pos:end="143:54"><operator pos:start="143:13" pos:end="143:13">!</operator><call pos:start="143:14" pos:end="143:54"><name pos:start="143:14" pos:end="143:34">check_throttle_config</name><argument_list pos:start="143:35" pos:end="143:54">(<argument pos:start="143:36" pos:end="143:47"><expr pos:start="143:36" pos:end="143:47"><name pos:start="143:36" pos:end="143:47">throttle_cfg</name></expr></argument>, <argument pos:start="143:50" pos:end="143:53"><expr pos:start="143:50" pos:end="143:53"><name pos:start="143:50" pos:end="143:53">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:57" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:19">

            <return pos:start="145:13" pos:end="145:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="153:5" pos:end="193:5"><if pos:start="153:5" pos:end="193:5">if <condition pos:start="153:8" pos:end="153:22">(<expr pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:21">detect_zeroes</name></expr>)</condition> <block pos:start="153:24" pos:end="193:5">{<block_content pos:start="155:9" pos:end="191:9">

        <expr_stmt pos:start="155:9" pos:end="165:42"><expr pos:start="155:9" pos:end="165:41"><operator pos:start="155:9" pos:end="155:9">*</operator><name pos:start="155:10" pos:end="155:22">detect_zeroes</name> <operator pos:start="155:24" pos:end="155:24">=</operator>

            <call pos:start="157:13" pos:end="165:41"><name pos:start="157:13" pos:end="157:27">qapi_enum_parse</name><argument_list pos:start="157:28" pos:end="165:41">(<argument pos:start="157:29" pos:end="157:62"><expr pos:start="157:29" pos:end="157:62"><name pos:start="157:29" pos:end="157:62">BlockdevDetectZeroesOptions_lookup</name></expr></argument>,

                            <argument pos:start="159:29" pos:end="159:63"><expr pos:start="159:29" pos:end="159:63"><call pos:start="159:29" pos:end="159:63"><name pos:start="159:29" pos:end="159:40">qemu_opt_get</name><argument_list pos:start="159:41" pos:end="159:63">(<argument pos:start="159:42" pos:end="159:45"><expr pos:start="159:42" pos:end="159:45"><name pos:start="159:42" pos:end="159:45">opts</name></expr></argument>, <argument pos:start="159:48" pos:end="159:62"><expr pos:start="159:48" pos:end="159:62"><literal type="string" pos:start="159:48" pos:end="159:62">"detect-zeroes"</literal></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="161:29" pos:end="161:63"><expr pos:start="161:29" pos:end="161:63"><name pos:start="161:29" pos:end="161:63">BLOCKDEV_DETECT_ZEROES_OPTIONS__MAX</name></expr></argument>,

                            <argument pos:start="163:29" pos:end="163:62"><expr pos:start="163:29" pos:end="163:62"><name pos:start="163:29" pos:end="163:62">BLOCKDEV_DETECT_ZEROES_OPTIONS_OFF</name></expr></argument>,

                            <argument pos:start="165:29" pos:end="165:40"><expr pos:start="165:29" pos:end="165:40"><operator pos:start="165:29" pos:end="165:29">&amp;</operator><name pos:start="165:30" pos:end="165:40">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="173:9"><if pos:start="167:9" pos:end="173:9">if <condition pos:start="167:12" pos:end="167:24">(<expr pos:start="167:13" pos:end="167:23"><name pos:start="167:13" pos:end="167:23">local_error</name></expr>)</condition> <block pos:start="167:26" pos:end="173:9">{<block_content pos:start="169:13" pos:end="171:19">

            <expr_stmt pos:start="169:13" pos:end="169:47"><expr pos:start="169:13" pos:end="169:46"><call pos:start="169:13" pos:end="169:46"><name pos:start="169:13" pos:end="169:27">error_propagate</name><argument_list pos:start="169:28" pos:end="169:46">(<argument pos:start="169:29" pos:end="169:32"><expr pos:start="169:29" pos:end="169:32"><name pos:start="169:29" pos:end="169:32">errp</name></expr></argument>, <argument pos:start="169:35" pos:end="169:45"><expr pos:start="169:35" pos:end="169:45"><name pos:start="169:35" pos:end="169:45">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="171:13" pos:end="171:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="177:9" pos:end="191:9"><if pos:start="177:9" pos:end="191:9">if <condition pos:start="177:12" pos:end="181:42">(<expr pos:start="177:13" pos:end="181:41"><name pos:start="177:13" pos:end="177:22">bdrv_flags</name> <operator pos:start="177:24" pos:end="177:25">&amp;&amp;</operator>

            <operator pos:start="179:13" pos:end="179:13">*</operator><name pos:start="179:14" pos:end="179:26">detect_zeroes</name> <operator pos:start="179:28" pos:end="179:29">==</operator> <name pos:start="179:31" pos:end="179:66">BLOCKDEV_DETECT_ZEROES_OPTIONS_UNMAP</name> <operator pos:start="179:68" pos:end="179:69">&amp;&amp;</operator>

            <operator pos:start="181:13" pos:end="181:13">!</operator><operator pos:start="181:14" pos:end="181:14">(</operator><operator pos:start="181:15" pos:end="181:15">*</operator><name pos:start="181:16" pos:end="181:25">bdrv_flags</name> <operator pos:start="181:27" pos:end="181:27">&amp;</operator> <name pos:start="181:29" pos:end="181:40">BDRV_O_UNMAP</name><operator pos:start="181:41" pos:end="181:41">)</operator></expr>)</condition>

        <block pos:start="183:9" pos:end="191:9">{<block_content pos:start="185:13" pos:end="189:19">

            <expr_stmt pos:start="185:13" pos:end="187:75"><expr pos:start="185:13" pos:end="187:74"><call pos:start="185:13" pos:end="187:74"><name pos:start="185:13" pos:end="185:22">error_setg</name><argument_list pos:start="185:23" pos:end="187:74">(<argument pos:start="185:24" pos:end="185:27"><expr pos:start="185:24" pos:end="185:27"><name pos:start="185:24" pos:end="185:27">errp</name></expr></argument>, <argument pos:start="185:30" pos:end="187:73"><expr pos:start="185:30" pos:end="187:73"><literal type="string" pos:start="185:30" pos:end="185:77">"setting detect-zeroes to unmap is not allowed "</literal>

                             <literal type="string" pos:start="187:30" pos:end="187:73">"without setting discard operation to unmap"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="189:13" pos:end="189:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
