<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3734.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">write_refcount_block</name><parameter_list pos:start="1:32" pos:end="1:53">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:48">BlockDriverState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:15">size</name> <init pos:start="7:17" pos:end="7:33">= <expr pos:start="7:19" pos:end="7:33"><name pos:start="7:19" pos:end="7:33"><name pos:start="7:19" pos:end="7:19">s</name><operator pos:start="7:20" pos:end="7:21">-&gt;</operator><name pos:start="7:22" pos:end="7:33">cluster_size</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:44">(<expr pos:start="11:9" pos:end="11:43"><name pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:38">refcount_block_cache_offset</name></name> <operator pos:start="11:40" pos:end="11:41">==</operator> <literal type="number" pos:start="11:43" pos:end="11:43">0</literal></expr>)</condition> <block pos:start="11:46" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><call pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:16">BLKDBG_EVENT</name><argument_list pos:start="19:17" pos:end="19:50">(<argument pos:start="19:18" pos:end="19:25"><expr pos:start="19:18" pos:end="19:25"><name pos:start="19:18" pos:end="19:25"><name pos:start="19:18" pos:end="19:19">bs</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:25">file</name></name></expr></argument>, <argument pos:start="19:28" pos:end="19:49"><expr pos:start="19:28" pos:end="19:49"><name pos:start="19:28" pos:end="19:49">BLKDBG_REFBLOCK_UPDATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="23:51">(<expr pos:start="21:9" pos:end="23:50"><call pos:start="21:9" pos:end="23:42"><name pos:start="21:9" pos:end="21:19">bdrv_pwrite</name><argument_list pos:start="21:20" pos:end="23:42">(<argument pos:start="21:21" pos:end="21:28"><expr pos:start="21:21" pos:end="21:28"><name pos:start="21:21" pos:end="21:28"><name pos:start="21:21" pos:end="21:22">bs</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:28">file</name></name></expr></argument>, <argument pos:start="21:31" pos:end="21:60"><expr pos:start="21:31" pos:end="21:60"><name pos:start="21:31" pos:end="21:60"><name pos:start="21:31" pos:end="21:31">s</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:60">refcount_block_cache_offset</name></name></expr></argument>,

            <argument pos:start="23:13" pos:end="23:35"><expr pos:start="23:13" pos:end="23:35"><name pos:start="23:13" pos:end="23:35"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:35">refcount_block_cache</name></name></expr></argument>, <argument pos:start="23:38" pos:end="23:41"><expr pos:start="23:38" pos:end="23:41"><name pos:start="23:38" pos:end="23:41">size</name></expr></argument>)</argument_list></call> <operator pos:start="23:44" pos:end="23:45">!=</operator> <name pos:start="23:47" pos:end="23:50">size</name></expr>)</condition>

    <block pos:start="25:5" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:20">

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><operator pos:start="27:16" pos:end="27:16">-</operator><name pos:start="27:17" pos:end="27:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
