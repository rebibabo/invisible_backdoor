<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22651.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">long</name></type> <name pos:start="1:13" pos:end="1:27">do_sigreturn_v2</name><parameter_list pos:start="1:28" pos:end="1:45">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:39">CPUARMState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:9" pos:end="53:17">

        <decl_stmt pos:start="5:9" pos:end="5:29"><decl pos:start="5:9" pos:end="5:28"><type pos:start="5:9" pos:end="5:17"><name pos:start="5:9" pos:end="5:17">abi_ulong</name></type> <name pos:start="5:19" pos:end="5:28">frame_addr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:34"><decl pos:start="7:9" pos:end="7:33"><type pos:start="7:9" pos:end="7:28"><name pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:14">struct</name> <name pos:start="7:16" pos:end="7:26">sigframe_v2</name></name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:33">frame</name></decl>;</decl_stmt>



	<comment type="block" pos:start="11:9" pos:end="19:11">/*

	 * Since we stacked the signal on a 64-bit boundary,

	 * then 'sp' should be word aligned here.  If it's

	 * not, then the user is trying to mess with us.

	 */</comment>

	<if_stmt pos:start="21:9" pos:end="23:30"><if pos:start="21:9" pos:end="23:30">if <condition pos:start="21:12" pos:end="21:30">(<expr pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:15">env</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:21">regs</name><index pos:start="21:22" pos:end="21:25">[<expr pos:start="21:23" pos:end="21:24"><literal type="number" pos:start="21:23" pos:end="21:24">13</literal></expr>]</index></name> <operator pos:start="21:27" pos:end="21:27">&amp;</operator> <literal type="number" pos:start="21:29" pos:end="21:29">7</literal></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:30"><block_content pos:start="23:17" pos:end="23:30">

		<goto pos:start="23:17" pos:end="23:30">goto <name pos:start="23:22" pos:end="23:29">badframe</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:18">frame_addr</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:34"><name pos:start="27:22" pos:end="27:24">env</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:30">regs</name><index pos:start="27:31" pos:end="27:34">[<expr pos:start="27:32" pos:end="27:33"><literal type="number" pos:start="27:32" pos:end="27:33">13</literal></expr>]</index></name></expr>;</expr_stmt>

	<if_stmt pos:start="29:9" pos:end="31:30"><if pos:start="29:9" pos:end="31:30">if <condition pos:start="29:12" pos:end="29:65">(<expr pos:start="29:13" pos:end="29:64"><operator pos:start="29:13" pos:end="29:13">!</operator><call pos:start="29:14" pos:end="29:64"><name pos:start="29:14" pos:end="29:29">lock_user_struct</name><argument_list pos:start="29:30" pos:end="29:64">(<argument pos:start="29:31" pos:end="29:41"><expr pos:start="29:31" pos:end="29:41"><name pos:start="29:31" pos:end="29:41">VERIFY_READ</name></expr></argument>, <argument pos:start="29:44" pos:end="29:48"><expr pos:start="29:44" pos:end="29:48"><name pos:start="29:44" pos:end="29:48">frame</name></expr></argument>, <argument pos:start="29:51" pos:end="29:60"><expr pos:start="29:51" pos:end="29:60"><name pos:start="29:51" pos:end="29:60">frame_addr</name></expr></argument>, <argument pos:start="29:63" pos:end="29:63"><expr pos:start="29:63" pos:end="29:63"><literal type="number" pos:start="29:63" pos:end="29:63">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:30"><block_content pos:start="31:17" pos:end="31:30">

                <goto pos:start="31:17" pos:end="31:30">goto <name pos:start="31:22" pos:end="31:29">badframe</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="35:9" pos:end="37:30"><if pos:start="35:9" pos:end="37:30">if <condition pos:start="35:12" pos:end="35:63">(<expr pos:start="35:13" pos:end="35:62"><call pos:start="35:13" pos:end="35:62"><name pos:start="35:13" pos:end="35:33">do_sigframe_return_v2</name><argument_list pos:start="35:34" pos:end="35:62">(<argument pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:37">env</name></expr></argument>, <argument pos:start="35:40" pos:end="35:49"><expr pos:start="35:40" pos:end="35:49"><name pos:start="35:40" pos:end="35:49">frame_addr</name></expr></argument>, <argument pos:start="35:52" pos:end="35:61"><expr pos:start="35:52" pos:end="35:61"><operator pos:start="35:52" pos:end="35:52">&amp;</operator><name pos:start="35:53" pos:end="35:61"><name pos:start="35:53" pos:end="35:57">frame</name><operator pos:start="35:58" pos:end="35:59">-&gt;</operator><name pos:start="35:60" pos:end="35:61">uc</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:30"><block_content pos:start="37:17" pos:end="37:30">

                <goto pos:start="37:17" pos:end="37:30">goto <name pos:start="37:22" pos:end="37:29">badframe</name>;</goto></block_content></block></if></if_stmt>



	<expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:26">unlock_user_struct</name><argument_list pos:start="41:27" pos:end="41:48">(<argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:32">frame</name></expr></argument>, <argument pos:start="41:35" pos:end="41:44"><expr pos:start="41:35" pos:end="41:44"><name pos:start="41:35" pos:end="41:44">frame_addr</name></expr></argument>, <argument pos:start="41:47" pos:end="41:47"><expr pos:start="41:47" pos:end="41:47"><literal type="number" pos:start="41:47" pos:end="41:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="43:9" pos:end="43:28">return <expr pos:start="43:16" pos:end="43:27"><name pos:start="43:16" pos:end="43:27"><name pos:start="43:16" pos:end="43:18">env</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:24">regs</name><index pos:start="43:25" pos:end="43:27">[<expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr>]</index></name></expr>;</return>



<label pos:start="47:1" pos:end="47:9"><name pos:start="47:1" pos:end="47:8">badframe</name>:</label>

	<expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><call pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:26">unlock_user_struct</name><argument_list pos:start="49:27" pos:end="49:48">(<argument pos:start="49:28" pos:end="49:32"><expr pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:32">frame</name></expr></argument>, <argument pos:start="49:35" pos:end="49:44"><expr pos:start="49:35" pos:end="49:44"><name pos:start="49:35" pos:end="49:44">frame_addr</name></expr></argument>, <argument pos:start="49:47" pos:end="49:47"><expr pos:start="49:47" pos:end="49:47"><literal type="number" pos:start="49:47" pos:end="49:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:50"><expr pos:start="51:9" pos:end="51:49"><call pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:17">force_sig</name><argument_list pos:start="51:18" pos:end="51:49">(<argument pos:start="51:19" pos:end="51:32"><expr pos:start="51:19" pos:end="51:32"><name pos:start="51:19" pos:end="51:32">TARGET_SIGSEGV</name></expr></argument> <comment type="block" pos:start="51:34" pos:end="51:48">/* , current */</comment>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
