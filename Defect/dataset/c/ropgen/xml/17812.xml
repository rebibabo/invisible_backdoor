<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17812.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">bitpacked_decode_yuv422p10</name><parameter_list pos:start="1:38" pos:end="3:54">(<parameter pos:start="1:39" pos:end="1:59"><decl pos:start="1:39" pos:end="1:59"><type pos:start="1:39" pos:end="1:59"><name pos:start="1:39" pos:end="1:52">AVCodecContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:75"><decl pos:start="1:62" pos:end="1:75"><type pos:start="1:62" pos:end="1:75"><name pos:start="1:62" pos:end="1:68">AVFrame</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:75">frame</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:53"><decl pos:start="3:39" pos:end="3:53"><type pos:start="3:39" pos:end="3:53"><name pos:start="3:39" pos:end="3:46">AVPacket</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:53">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:13">

    <decl_stmt pos:start="7:5" pos:end="7:80"><decl pos:start="7:5" pos:end="7:79"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:23">frame_size</name> <init pos:start="7:25" pos:end="7:79">= <expr pos:start="7:27" pos:end="7:79"><operator pos:start="7:27" pos:end="7:27">(</operator><name pos:start="7:28" pos:end="7:35">uint64_t</name><operator pos:start="7:36" pos:end="7:36">)</operator><name pos:start="7:37" pos:end="7:48"><name pos:start="7:37" pos:end="7:41">avctx</name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:48">width</name></name> <operator pos:start="7:50" pos:end="7:50">*</operator> <operator pos:start="7:52" pos:end="7:52">(</operator><name pos:start="7:53" pos:end="7:60">uint64_t</name><operator pos:start="7:61" pos:end="7:61">)</operator><name pos:start="7:62" pos:end="7:74"><name pos:start="7:62" pos:end="7:66">avctx</name><operator pos:start="7:67" pos:end="7:68">-&gt;</operator><name pos:start="7:69" pos:end="7:74">height</name></name> <operator pos:start="7:76" pos:end="7:76">*</operator> <literal type="number" pos:start="7:78" pos:end="7:79">20</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:24">packet_size</name> <init pos:start="9:26" pos:end="9:42">= <expr pos:start="9:28" pos:end="9:42"><name pos:start="9:28" pos:end="9:38"><name pos:start="9:28" pos:end="9:32">avpkt</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:38">size</name></name> <operator pos:start="9:40" pos:end="9:40">*</operator> <literal type="number" pos:start="9:42" pos:end="9:42">8</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">GetBitContext</name></type> <name pos:start="11:19" pos:end="11:20">bc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint16_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:15">y</name></decl>, <decl pos:start="13:18" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:14"><modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:19">u</name></decl>, <decl pos:start="13:22" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:14"><modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:23">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>, <decl pos:start="15:14" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:40"><name pos:start="19:11" pos:end="19:23">ff_get_buffer</name><argument_list pos:start="19:24" pos:end="19:40">(<argument pos:start="19:25" pos:end="19:29"><expr pos:start="19:25" pos:end="19:29"><name pos:start="19:25" pos:end="19:29">avctx</name></expr></argument>, <argument pos:start="19:32" pos:end="19:36"><expr pos:start="19:32" pos:end="19:36"><name pos:start="19:32" pos:end="19:36">frame</name></expr></argument>, <argument pos:start="19:39" pos:end="19:39"><expr pos:start="19:39" pos:end="19:39"><literal type="number" pos:start="19:39" pos:end="19:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:19"><if pos:start="21:5" pos:end="23:19">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:19"><block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:5">y</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:17">uint16_t</name><operator pos:start="27:18" pos:end="27:18">*</operator><operator pos:start="27:19" pos:end="27:19">)</operator><name pos:start="27:20" pos:end="27:33"><name pos:start="27:20" pos:end="27:24">frame</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:30">data</name><index pos:start="27:31" pos:end="27:33">[<expr pos:start="27:32" pos:end="27:32"><literal type="number" pos:start="27:32" pos:end="27:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:5">u</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:17">uint16_t</name><operator pos:start="29:18" pos:end="29:18">*</operator><operator pos:start="29:19" pos:end="29:19">)</operator><name pos:start="29:20" pos:end="29:33"><name pos:start="29:20" pos:end="29:24">frame</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:30">data</name><index pos:start="29:31" pos:end="29:33">[<expr pos:start="29:32" pos:end="29:32"><literal type="number" pos:start="29:32" pos:end="29:32">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:5">v</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:17">uint16_t</name><operator pos:start="31:18" pos:end="31:18">*</operator><operator pos:start="31:19" pos:end="31:19">)</operator><name pos:start="31:20" pos:end="31:33"><name pos:start="31:20" pos:end="31:24">frame</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:30">data</name><index pos:start="31:31" pos:end="31:33">[<expr pos:start="31:32" pos:end="31:32"><literal type="number" pos:start="31:32" pos:end="31:32">2</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:35"><if pos:start="35:5" pos:end="37:35">if <condition pos:start="35:8" pos:end="35:33">(<expr pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:18">frame_size</name> <operator pos:start="35:20" pos:end="35:20">&gt;</operator> <name pos:start="35:22" pos:end="35:32">packet_size</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:35"><block_content pos:start="37:9" pos:end="37:35">

        <return pos:start="37:9" pos:end="37:35">return <expr pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="43:36"><if pos:start="41:5" pos:end="43:36">if <condition pos:start="41:8" pos:end="41:25">(<expr pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:13">avctx</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:20">width</name></name> <operator pos:start="41:22" pos:end="41:22">%</operator> <literal type="number" pos:start="41:24" pos:end="41:24">2</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:36"><block_content pos:start="43:9" pos:end="43:36">

        <return pos:start="43:9" pos:end="43:36">return <expr pos:start="43:16" pos:end="43:35"><name pos:start="43:16" pos:end="43:35">AVERROR_PATCHWELCOME</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:77"><expr pos:start="47:5" pos:end="47:76"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:76"><name pos:start="47:11" pos:end="47:23">init_get_bits</name><argument_list pos:start="47:24" pos:end="47:76">(<argument pos:start="47:25" pos:end="47:27"><expr pos:start="47:25" pos:end="47:27"><operator pos:start="47:25" pos:end="47:25">&amp;</operator><name pos:start="47:26" pos:end="47:27">bc</name></expr></argument>, <argument pos:start="47:30" pos:end="47:40"><expr pos:start="47:30" pos:end="47:40"><name pos:start="47:30" pos:end="47:40"><name pos:start="47:30" pos:end="47:34">avpkt</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:40">data</name></name></expr></argument>, <argument pos:start="47:43" pos:end="47:75"><expr pos:start="47:43" pos:end="47:75"><name pos:start="47:43" pos:end="47:54"><name pos:start="47:43" pos:end="47:47">avctx</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:54">width</name></name> <operator pos:start="47:56" pos:end="47:56">*</operator> <name pos:start="47:58" pos:end="47:70"><name pos:start="47:58" pos:end="47:62">avctx</name><operator pos:start="47:63" pos:end="47:64">-&gt;</operator><name pos:start="47:65" pos:end="47:70">height</name></name> <operator pos:start="47:72" pos:end="47:72">*</operator> <literal type="number" pos:start="47:74" pos:end="47:75">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:19"><if pos:start="49:5" pos:end="51:19">if <condition pos:start="49:8" pos:end="49:12">(<expr pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">ret</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:19"><block_content pos:start="51:9" pos:end="51:19">

        <return pos:start="51:9" pos:end="51:19">return <expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="55:5" pos:end="77:5">for <control pos:start="55:9" pos:end="55:39">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:34"><expr pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:17">i</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <name pos:start="55:21" pos:end="55:33"><name pos:start="55:21" pos:end="55:25">avctx</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:33">height</name></name></expr>;</condition> <incr pos:start="55:36" pos:end="55:38"><expr pos:start="55:36" pos:end="55:38"><name pos:start="55:36" pos:end="55:36">i</name><operator pos:start="55:37" pos:end="55:38">++</operator></expr></incr>)</control> <block pos:start="55:41" pos:end="77:5">{<block_content pos:start="57:9" pos:end="75:9">

        <expr_stmt pos:start="57:9" pos:end="57:65"><expr pos:start="57:9" pos:end="57:64"><name pos:start="57:9" pos:end="57:9">y</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <operator pos:start="57:13" pos:end="57:13">(</operator><name pos:start="57:14" pos:end="57:21">uint16_t</name><operator pos:start="57:22" pos:end="57:22">*</operator><operator pos:start="57:23" pos:end="57:23">)</operator><operator pos:start="57:24" pos:end="57:24">(</operator><name pos:start="57:25" pos:end="57:38"><name pos:start="57:25" pos:end="57:29">frame</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:35">data</name><index pos:start="57:36" pos:end="57:38">[<expr pos:start="57:37" pos:end="57:37"><literal type="number" pos:start="57:37" pos:end="57:37">0</literal></expr>]</index></name> <operator pos:start="57:40" pos:end="57:40">+</operator> <name pos:start="57:42" pos:end="57:42">i</name> <operator pos:start="57:44" pos:end="57:44">*</operator> <name pos:start="57:46" pos:end="57:63"><name pos:start="57:46" pos:end="57:50">frame</name><operator pos:start="57:51" pos:end="57:52">-&gt;</operator><name pos:start="57:53" pos:end="57:60">linesize</name><index pos:start="57:61" pos:end="57:63">[<expr pos:start="57:62" pos:end="57:62"><literal type="number" pos:start="57:62" pos:end="57:62">0</literal></expr>]</index></name><operator pos:start="57:64" pos:end="57:64">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:65"><expr pos:start="59:9" pos:end="59:64"><name pos:start="59:9" pos:end="59:9">u</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:21">uint16_t</name><operator pos:start="59:22" pos:end="59:22">*</operator><operator pos:start="59:23" pos:end="59:23">)</operator><operator pos:start="59:24" pos:end="59:24">(</operator><name pos:start="59:25" pos:end="59:38"><name pos:start="59:25" pos:end="59:29">frame</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:35">data</name><index pos:start="59:36" pos:end="59:38">[<expr pos:start="59:37" pos:end="59:37"><literal type="number" pos:start="59:37" pos:end="59:37">1</literal></expr>]</index></name> <operator pos:start="59:40" pos:end="59:40">+</operator> <name pos:start="59:42" pos:end="59:42">i</name> <operator pos:start="59:44" pos:end="59:44">*</operator> <name pos:start="59:46" pos:end="59:63"><name pos:start="59:46" pos:end="59:50">frame</name><operator pos:start="59:51" pos:end="59:52">-&gt;</operator><name pos:start="59:53" pos:end="59:60">linesize</name><index pos:start="59:61" pos:end="59:63">[<expr pos:start="59:62" pos:end="59:62"><literal type="number" pos:start="59:62" pos:end="59:62">1</literal></expr>]</index></name><operator pos:start="59:64" pos:end="59:64">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:65"><expr pos:start="61:9" pos:end="61:64"><name pos:start="61:9" pos:end="61:9">v</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:21">uint16_t</name><operator pos:start="61:22" pos:end="61:22">*</operator><operator pos:start="61:23" pos:end="61:23">)</operator><operator pos:start="61:24" pos:end="61:24">(</operator><name pos:start="61:25" pos:end="61:38"><name pos:start="61:25" pos:end="61:29">frame</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:35">data</name><index pos:start="61:36" pos:end="61:38">[<expr pos:start="61:37" pos:end="61:37"><literal type="number" pos:start="61:37" pos:end="61:37">2</literal></expr>]</index></name> <operator pos:start="61:40" pos:end="61:40">+</operator> <name pos:start="61:42" pos:end="61:42">i</name> <operator pos:start="61:44" pos:end="61:44">*</operator> <name pos:start="61:46" pos:end="61:63"><name pos:start="61:46" pos:end="61:50">frame</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:60">linesize</name><index pos:start="61:61" pos:end="61:63">[<expr pos:start="61:62" pos:end="61:62"><literal type="number" pos:start="61:62" pos:end="61:62">2</literal></expr>]</index></name><operator pos:start="61:64" pos:end="61:64">)</operator></expr>;</expr_stmt>



        <for pos:start="65:9" pos:end="75:9">for <control pos:start="65:13" pos:end="65:49">(<init pos:start="65:14" pos:end="65:23"><decl pos:start="65:14" pos:end="65:22"><type pos:start="65:14" pos:end="65:16"><name pos:start="65:14" pos:end="65:16">int</name></type> <name pos:start="65:18" pos:end="65:18">j</name> <init pos:start="65:20" pos:end="65:22">= <expr pos:start="65:22" pos:end="65:22"><literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr></init></decl>;</init> <condition pos:start="65:25" pos:end="65:41"><expr pos:start="65:25" pos:end="65:40"><name pos:start="65:25" pos:end="65:25">j</name> <operator pos:start="65:27" pos:end="65:27">&lt;</operator> <name pos:start="65:29" pos:end="65:40"><name pos:start="65:29" pos:end="65:33">avctx</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:40">width</name></name></expr>;</condition> <incr pos:start="65:43" pos:end="65:48"><expr pos:start="65:43" pos:end="65:48"><name pos:start="65:43" pos:end="65:43">j</name> <operator pos:start="65:45" pos:end="65:46">+=</operator> <literal type="number" pos:start="65:48" pos:end="65:48">2</literal></expr></incr>)</control> <block pos:start="65:51" pos:end="75:9">{<block_content pos:start="67:13" pos:end="73:37">

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><operator pos:start="67:13" pos:end="67:13">*</operator><name pos:start="67:14" pos:end="67:14">u</name><operator pos:start="67:15" pos:end="67:16">++</operator> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="67:36"><name pos:start="67:20" pos:end="67:27">get_bits</name><argument_list pos:start="67:28" pos:end="67:36">(<argument pos:start="67:29" pos:end="67:31"><expr pos:start="67:29" pos:end="67:31"><operator pos:start="67:29" pos:end="67:29">&amp;</operator><name pos:start="67:30" pos:end="67:31">bc</name></expr></argument>, <argument pos:start="67:34" pos:end="67:35"><expr pos:start="67:34" pos:end="67:35"><literal type="number" pos:start="67:34" pos:end="67:35">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:37"><expr pos:start="69:13" pos:end="69:36"><operator pos:start="69:13" pos:end="69:13">*</operator><name pos:start="69:14" pos:end="69:14">y</name><operator pos:start="69:15" pos:end="69:16">++</operator> <operator pos:start="69:18" pos:end="69:18">=</operator> <call pos:start="69:20" pos:end="69:36"><name pos:start="69:20" pos:end="69:27">get_bits</name><argument_list pos:start="69:28" pos:end="69:36">(<argument pos:start="69:29" pos:end="69:31"><expr pos:start="69:29" pos:end="69:31"><operator pos:start="69:29" pos:end="69:29">&amp;</operator><name pos:start="69:30" pos:end="69:31">bc</name></expr></argument>, <argument pos:start="69:34" pos:end="69:35"><expr pos:start="69:34" pos:end="69:35"><literal type="number" pos:start="69:34" pos:end="69:35">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:37"><expr pos:start="71:13" pos:end="71:36"><operator pos:start="71:13" pos:end="71:13">*</operator><name pos:start="71:14" pos:end="71:14">v</name><operator pos:start="71:15" pos:end="71:16">++</operator> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="71:36"><name pos:start="71:20" pos:end="71:27">get_bits</name><argument_list pos:start="71:28" pos:end="71:36">(<argument pos:start="71:29" pos:end="71:31"><expr pos:start="71:29" pos:end="71:31"><operator pos:start="71:29" pos:end="71:29">&amp;</operator><name pos:start="71:30" pos:end="71:31">bc</name></expr></argument>, <argument pos:start="71:34" pos:end="71:35"><expr pos:start="71:34" pos:end="71:35"><literal type="number" pos:start="71:34" pos:end="71:35">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:37"><expr pos:start="73:13" pos:end="73:36"><operator pos:start="73:13" pos:end="73:13">*</operator><name pos:start="73:14" pos:end="73:14">y</name><operator pos:start="73:15" pos:end="73:16">++</operator> <operator pos:start="73:18" pos:end="73:18">=</operator> <call pos:start="73:20" pos:end="73:36"><name pos:start="73:20" pos:end="73:27">get_bits</name><argument_list pos:start="73:28" pos:end="73:36">(<argument pos:start="73:29" pos:end="73:31"><expr pos:start="73:29" pos:end="73:31"><operator pos:start="73:29" pos:end="73:29">&amp;</operator><name pos:start="73:30" pos:end="73:31">bc</name></expr></argument>, <argument pos:start="73:34" pos:end="73:35"><expr pos:start="73:34" pos:end="73:35"><literal type="number" pos:start="73:34" pos:end="73:35">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
