<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26501.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">rv10_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:45">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:55">data_size</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:44"><decl pos:start="5:30" pos:end="5:44"><type pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:37">AVPacket</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:44">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="125:1">{<block_content pos:start="9:5" pos:end="123:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">MpegEncContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:21">s</name> <init pos:start="13:23" pos:end="13:40">= <expr pos:start="13:25" pos:end="13:40"><name pos:start="13:25" pos:end="13:40"><name pos:start="13:25" pos:end="13:29">avctx</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:17">pict</name> <init pos:start="17:19" pos:end="17:24">= <expr pos:start="17:21" pos:end="17:24"><name pos:start="17:21" pos:end="17:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">slice_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:37"><decl pos:start="21:5" pos:end="21:36"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">uint8_t</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:29">slices_hdr</name> <init pos:start="21:31" pos:end="21:36">= <expr pos:start="21:33" pos:end="21:36"><name pos:start="21:33" pos:end="21:36">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:77"><expr pos:start="25:5" pos:end="25:76"><call pos:start="25:5" pos:end="25:76"><name pos:start="25:5" pos:end="25:11">av_dlog</name><argument_list pos:start="25:12" pos:end="25:76">(<argument pos:start="25:13" pos:end="25:17"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:17">avctx</name></expr></argument>, <argument pos:start="25:20" pos:end="25:44"><expr pos:start="25:20" pos:end="25:44"><literal type="string" pos:start="25:20" pos:end="25:44">"*****frame %d size=%d\n"</literal></expr></argument>, <argument pos:start="25:47" pos:end="25:65"><expr pos:start="25:47" pos:end="25:65"><name pos:start="25:47" pos:end="25:65"><name pos:start="25:47" pos:end="25:51">avctx</name><operator pos:start="25:52" pos:end="25:53">-&gt;</operator><name pos:start="25:54" pos:end="25:65">frame_number</name></name></expr></argument>, <argument pos:start="25:68" pos:end="25:75"><expr pos:start="25:68" pos:end="25:75"><name pos:start="25:68" pos:end="25:75">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:22">(<expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:16">buf_size</name> <operator pos:start="31:18" pos:end="31:19">==</operator> <literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>)</condition> <block pos:start="31:24" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="49:41"><if pos:start="39:5" pos:end="47:5">if<condition pos:start="39:7" pos:end="39:27">(<expr pos:start="39:8" pos:end="39:26"><operator pos:start="39:8" pos:end="39:8">!</operator><name pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:13">avctx</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:26">slice_count</name></name></expr>)</condition><block pos:start="39:28" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:31">

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:19">slice_count</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <operator pos:start="41:23" pos:end="41:23">(</operator><operator pos:start="41:24" pos:end="41:24">*</operator><name pos:start="41:25" pos:end="41:27">buf</name><operator pos:start="41:28" pos:end="41:29">++</operator><operator pos:start="41:30" pos:end="41:30">)</operator> <operator pos:start="41:32" pos:end="41:32">+</operator> <literal type="number" pos:start="41:34" pos:end="41:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:18">slices_hdr</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:24">buf</name> <operator pos:start="43:26" pos:end="43:26">+</operator> <literal type="number" pos:start="43:28" pos:end="43:28">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:11">buf</name> <operator pos:start="45:13" pos:end="45:14">+=</operator> <literal type="number" pos:start="45:16" pos:end="45:16">8</literal> <operator pos:start="45:18" pos:end="45:18">*</operator> <name pos:start="45:20" pos:end="45:30">slice_count</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="47:6" pos:end="49:41">else<block type="pseudo" pos:start="49:9" pos:end="49:41"><block_content pos:start="49:9" pos:end="49:41">

        <expr_stmt pos:start="49:9" pos:end="49:41"><expr pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:19">slice_count</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:40"><name pos:start="49:23" pos:end="49:27">avctx</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:40">slice_count</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="53:5" pos:end="85:5">for<control pos:start="53:8" pos:end="53:32">(<init pos:start="53:9" pos:end="53:12"><expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:9">i</name><operator pos:start="53:10" pos:end="53:10">=</operator><literal type="number" pos:start="53:11" pos:end="53:11">0</literal></expr>;</init> <condition pos:start="53:14" pos:end="53:27"><expr pos:start="53:14" pos:end="53:26"><name pos:start="53:14" pos:end="53:14">i</name><operator pos:start="53:15" pos:end="53:15">&lt;</operator><name pos:start="53:16" pos:end="53:26">slice_count</name></expr>;</condition> <incr pos:start="53:29" pos:end="53:31"><expr pos:start="53:29" pos:end="53:31"><name pos:start="53:29" pos:end="53:29">i</name><operator pos:start="53:30" pos:end="53:31">++</operator></expr></incr>)</control><block pos:start="53:33" pos:end="85:5">{<block_content pos:start="55:9" pos:end="83:16">

        <decl_stmt pos:start="55:9" pos:end="55:59"><decl pos:start="55:9" pos:end="55:58"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:18">offset</name><init pos:start="55:19" pos:end="55:58">= <expr pos:start="55:21" pos:end="55:58"><call pos:start="55:21" pos:end="55:58"><name pos:start="55:21" pos:end="55:36">get_slice_offset</name><argument_list pos:start="55:37" pos:end="55:58">(<argument pos:start="55:38" pos:end="55:42"><expr pos:start="55:38" pos:end="55:42"><name pos:start="55:38" pos:end="55:42">avctx</name></expr></argument>, <argument pos:start="55:45" pos:end="55:54"><expr pos:start="55:45" pos:end="55:54"><name pos:start="55:45" pos:end="55:54">slices_hdr</name></expr></argument>, <argument pos:start="55:57" pos:end="55:57"><expr pos:start="55:57" pos:end="55:57"><name pos:start="55:57" pos:end="55:57">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:24"><decl pos:start="57:9" pos:end="57:16"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:16">size</name></decl>, <decl pos:start="57:19" pos:end="57:23"><type ref="prev" pos:start="57:9" pos:end="57:11"/><name pos:start="57:19" pos:end="57:23">size2</name></decl>;</decl_stmt>



        <if_stmt pos:start="61:9" pos:end="67:68"><if pos:start="61:9" pos:end="63:36">if<condition pos:start="61:11" pos:end="61:30">(<expr pos:start="61:12" pos:end="61:29"><name pos:start="61:12" pos:end="61:12">i</name><operator pos:start="61:13" pos:end="61:13">+</operator><literal type="number" pos:start="61:14" pos:end="61:14">1</literal> <operator pos:start="61:16" pos:end="61:17">==</operator> <name pos:start="61:19" pos:end="61:29">slice_count</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:36"><block_content pos:start="63:13" pos:end="63:36">

            <expr_stmt pos:start="63:13" pos:end="63:36"><expr pos:start="63:13" pos:end="63:35"><name pos:start="63:13" pos:end="63:16">size</name><operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:26">buf_size</name> <operator pos:start="63:28" pos:end="63:28">-</operator> <name pos:start="63:30" pos:end="63:35">offset</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="65:9" pos:end="67:68">else<block type="pseudo" pos:start="67:13" pos:end="67:68"><block_content pos:start="67:13" pos:end="67:68">

            <expr_stmt pos:start="67:13" pos:end="67:68"><expr pos:start="67:13" pos:end="67:67"><name pos:start="67:13" pos:end="67:16">size</name><operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="67:58"><name pos:start="67:19" pos:end="67:34">get_slice_offset</name><argument_list pos:start="67:35" pos:end="67:58">(<argument pos:start="67:36" pos:end="67:40"><expr pos:start="67:36" pos:end="67:40"><name pos:start="67:36" pos:end="67:40">avctx</name></expr></argument>, <argument pos:start="67:43" pos:end="67:52"><expr pos:start="67:43" pos:end="67:52"><name pos:start="67:43" pos:end="67:52">slices_hdr</name></expr></argument>, <argument pos:start="67:55" pos:end="67:57"><expr pos:start="67:55" pos:end="67:57"><name pos:start="67:55" pos:end="67:55">i</name><operator pos:start="67:56" pos:end="67:56">+</operator><literal type="number" pos:start="67:57" pos:end="67:57">1</literal></expr></argument>)</argument_list></call> <operator pos:start="67:60" pos:end="67:60">-</operator> <name pos:start="67:62" pos:end="67:67">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="71:9" pos:end="77:69"><if pos:start="71:9" pos:end="73:37">if<condition pos:start="71:11" pos:end="71:30">(<expr pos:start="71:12" pos:end="71:29"><name pos:start="71:12" pos:end="71:12">i</name><operator pos:start="71:13" pos:end="71:13">+</operator><literal type="number" pos:start="71:14" pos:end="71:14">2</literal> <operator pos:start="71:16" pos:end="71:17">&gt;=</operator> <name pos:start="71:19" pos:end="71:29">slice_count</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:37"><block_content pos:start="73:13" pos:end="73:37">

            <expr_stmt pos:start="73:13" pos:end="73:37"><expr pos:start="73:13" pos:end="73:36"><name pos:start="73:13" pos:end="73:17">size2</name><operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:27">buf_size</name> <operator pos:start="73:29" pos:end="73:29">-</operator> <name pos:start="73:31" pos:end="73:36">offset</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="75:9" pos:end="77:69">else<block type="pseudo" pos:start="77:13" pos:end="77:69"><block_content pos:start="77:13" pos:end="77:69">

            <expr_stmt pos:start="77:13" pos:end="77:69"><expr pos:start="77:13" pos:end="77:68"><name pos:start="77:13" pos:end="77:17">size2</name><operator pos:start="77:18" pos:end="77:18">=</operator> <call pos:start="77:20" pos:end="77:59"><name pos:start="77:20" pos:end="77:35">get_slice_offset</name><argument_list pos:start="77:36" pos:end="77:59">(<argument pos:start="77:37" pos:end="77:41"><expr pos:start="77:37" pos:end="77:41"><name pos:start="77:37" pos:end="77:41">avctx</name></expr></argument>, <argument pos:start="77:44" pos:end="77:53"><expr pos:start="77:44" pos:end="77:53"><name pos:start="77:44" pos:end="77:53">slices_hdr</name></expr></argument>, <argument pos:start="77:56" pos:end="77:58"><expr pos:start="77:56" pos:end="77:58"><name pos:start="77:56" pos:end="77:56">i</name><operator pos:start="77:57" pos:end="77:57">+</operator><literal type="number" pos:start="77:58" pos:end="77:58">2</literal></expr></argument>)</argument_list></call> <operator pos:start="77:61" pos:end="77:61">-</operator> <name pos:start="77:63" pos:end="77:68">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="81:9" pos:end="83:16"><if pos:start="81:9" pos:end="83:16">if<condition pos:start="81:11" pos:end="81:71">(<expr pos:start="81:12" pos:end="81:70"><call pos:start="81:12" pos:end="81:61"><name pos:start="81:12" pos:end="81:29">rv10_decode_packet</name><argument_list pos:start="81:30" pos:end="81:61">(<argument pos:start="81:31" pos:end="81:35"><expr pos:start="81:31" pos:end="81:35"><name pos:start="81:31" pos:end="81:35">avctx</name></expr></argument>, <argument pos:start="81:38" pos:end="81:47"><expr pos:start="81:38" pos:end="81:47"><name pos:start="81:38" pos:end="81:40">buf</name><operator pos:start="81:41" pos:end="81:41">+</operator><name pos:start="81:42" pos:end="81:47">offset</name></expr></argument>, <argument pos:start="81:50" pos:end="81:53"><expr pos:start="81:50" pos:end="81:53"><name pos:start="81:50" pos:end="81:53">size</name></expr></argument>, <argument pos:start="81:56" pos:end="81:60"><expr pos:start="81:56" pos:end="81:60"><name pos:start="81:56" pos:end="81:60">size2</name></expr></argument>)</argument_list></call> <operator pos:start="81:63" pos:end="81:63">&gt;</operator> <literal type="number" pos:start="81:65" pos:end="81:65">8</literal><operator pos:start="81:66" pos:end="81:66">*</operator><name pos:start="81:67" pos:end="81:70">size</name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:16"><block_content pos:start="83:13" pos:end="83:16">

            <expr_stmt pos:start="83:13" pos:end="83:16"><expr pos:start="83:13" pos:end="83:15"><name pos:start="83:13" pos:end="83:13">i</name><operator pos:start="83:14" pos:end="83:15">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="89:5" pos:end="119:5"><if pos:start="89:5" pos:end="119:5">if<condition pos:start="89:7" pos:end="89:63">(<expr pos:start="89:8" pos:end="89:62"><name pos:start="89:8" pos:end="89:29"><name pos:start="89:8" pos:end="89:8">s</name><operator pos:start="89:9" pos:end="89:10">-&gt;</operator><name pos:start="89:11" pos:end="89:29">current_picture_ptr</name></name> <operator pos:start="89:31" pos:end="89:32">!=</operator> <name pos:start="89:34" pos:end="89:37">NULL</name> <operator pos:start="89:39" pos:end="89:40">&amp;&amp;</operator> <name pos:start="89:42" pos:end="89:48"><name pos:start="89:42" pos:end="89:42">s</name><operator pos:start="89:43" pos:end="89:44">-&gt;</operator><name pos:start="89:45" pos:end="89:48">mb_y</name></name><operator pos:start="89:49" pos:end="89:50">&gt;=</operator><name pos:start="89:51" pos:end="89:62"><name pos:start="89:51" pos:end="89:51">s</name><operator pos:start="89:52" pos:end="89:53">-&gt;</operator><name pos:start="89:54" pos:end="89:62">mb_height</name></name></expr>)</condition><block pos:start="89:64" pos:end="119:5">{<block_content pos:start="91:9" pos:end="117:37">

        <expr_stmt pos:start="91:9" pos:end="91:27"><expr pos:start="91:9" pos:end="91:26"><call pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:23">ff_er_frame_end</name><argument_list pos:start="91:24" pos:end="91:26">(<argument pos:start="91:25" pos:end="91:25"><expr pos:start="91:25" pos:end="91:25"><name pos:start="91:25" pos:end="91:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:25"><expr pos:start="93:9" pos:end="93:24"><call pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:21">MPV_frame_end</name><argument_list pos:start="93:22" pos:end="93:24">(<argument pos:start="93:23" pos:end="93:23"><expr pos:start="93:23" pos:end="93:23"><name pos:start="93:23" pos:end="93:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="97:9" pos:end="105:9"><if pos:start="97:9" pos:end="101:9">if <condition pos:start="97:12" pos:end="97:62">(<expr pos:start="97:13" pos:end="97:61"><name pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:24">pict_type</name></name> <operator pos:start="97:26" pos:end="97:27">==</operator> <name pos:start="97:29" pos:end="97:45">AV_PICTURE_TYPE_B</name> <operator pos:start="97:47" pos:end="97:48">||</operator> <name pos:start="97:50" pos:end="97:61"><name pos:start="97:50" pos:end="97:50">s</name><operator pos:start="97:51" pos:end="97:52">-&gt;</operator><name pos:start="97:53" pos:end="97:61">low_delay</name></name></expr>)</condition> <block pos:start="97:64" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:53">

            <expr_stmt pos:start="99:13" pos:end="99:53"><expr pos:start="99:13" pos:end="99:52"><operator pos:start="99:13" pos:end="99:13">*</operator><name pos:start="99:14" pos:end="99:17">pict</name><operator pos:start="99:18" pos:end="99:18">=</operator> <operator pos:start="99:20" pos:end="99:20">*</operator><operator pos:start="99:21" pos:end="99:21">(</operator><name pos:start="99:22" pos:end="99:28">AVFrame</name><operator pos:start="99:29" pos:end="99:29">*</operator><operator pos:start="99:30" pos:end="99:30">)</operator><name pos:start="99:31" pos:end="99:52"><name pos:start="99:31" pos:end="99:31">s</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:52">current_picture_ptr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="101:11" pos:end="105:9">else if <condition pos:start="101:19" pos:end="101:47">(<expr pos:start="101:20" pos:end="101:46"><name pos:start="101:20" pos:end="101:38"><name pos:start="101:20" pos:end="101:20">s</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:38">last_picture_ptr</name></name> <operator pos:start="101:40" pos:end="101:41">!=</operator> <name pos:start="101:43" pos:end="101:46">NULL</name></expr>)</condition> <block pos:start="101:49" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:50">

            <expr_stmt pos:start="103:13" pos:end="103:50"><expr pos:start="103:13" pos:end="103:49"><operator pos:start="103:13" pos:end="103:13">*</operator><name pos:start="103:14" pos:end="103:17">pict</name><operator pos:start="103:18" pos:end="103:18">=</operator> <operator pos:start="103:20" pos:end="103:20">*</operator><operator pos:start="103:21" pos:end="103:21">(</operator><name pos:start="103:22" pos:end="103:28">AVFrame</name><operator pos:start="103:29" pos:end="103:29">*</operator><operator pos:start="103:30" pos:end="103:30">)</operator><name pos:start="103:31" pos:end="103:49"><name pos:start="103:31" pos:end="103:31">s</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:49">last_picture_ptr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if<condition pos:start="109:11" pos:end="109:47">(<expr pos:start="109:12" pos:end="109:46"><name pos:start="109:12" pos:end="109:30"><name pos:start="109:12" pos:end="109:12">s</name><operator pos:start="109:13" pos:end="109:14">-&gt;</operator><name pos:start="109:15" pos:end="109:30">last_picture_ptr</name></name> <operator pos:start="109:32" pos:end="109:33">||</operator> <name pos:start="109:35" pos:end="109:46"><name pos:start="109:35" pos:end="109:35">s</name><operator pos:start="109:36" pos:end="109:37">-&gt;</operator><name pos:start="109:38" pos:end="109:46">low_delay</name></name></expr>)</condition><block pos:start="109:48" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:41">

            <expr_stmt pos:start="111:13" pos:end="111:41"><expr pos:start="111:13" pos:end="111:40"><operator pos:start="111:13" pos:end="111:13">*</operator><name pos:start="111:14" pos:end="111:22">data_size</name> <operator pos:start="111:24" pos:end="111:24">=</operator> <sizeof pos:start="111:26" pos:end="111:40">sizeof<argument_list pos:start="111:32" pos:end="111:40">(<argument pos:start="111:33" pos:end="111:39"><expr pos:start="111:33" pos:end="111:39"><name pos:start="111:33" pos:end="111:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:41"><expr pos:start="113:13" pos:end="113:40"><call pos:start="113:13" pos:end="113:40"><name pos:start="113:13" pos:end="113:31">ff_print_debug_info</name><argument_list pos:start="113:32" pos:end="113:40">(<argument pos:start="113:33" pos:end="113:33"><expr pos:start="113:33" pos:end="113:33"><name pos:start="113:33" pos:end="113:33">s</name></expr></argument>, <argument pos:start="113:36" pos:end="113:39"><expr pos:start="113:36" pos:end="113:39"><name pos:start="113:36" pos:end="113:39">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:37"><expr pos:start="117:9" pos:end="117:36"><name pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:30">current_picture_ptr</name></name><operator pos:start="117:31" pos:end="117:31">=</operator> <name pos:start="117:33" pos:end="117:36">NULL</name></expr>;</expr_stmt> <comment type="line" pos:start="117:39" pos:end="117:112">//so we can detect if frame_end wasnt called (find some nicer solution...)</comment>

    </block_content>}</block></if></if_stmt>



    <return pos:start="123:5" pos:end="123:20">return <expr pos:start="123:12" pos:end="123:19"><name pos:start="123:12" pos:end="123:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
