<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13309.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">visit_start_list</name><parameter_list pos:start="1:22" pos:end="3:48">(<parameter pos:start="1:23" pos:end="1:32"><decl pos:start="1:23" pos:end="1:32"><type pos:start="1:23" pos:end="1:32"><name pos:start="1:23" pos:end="1:29">Visitor</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:32">v</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:50"><decl pos:start="1:35" pos:end="1:50"><type pos:start="1:35" pos:end="1:50"><specifier pos:start="1:35" pos:end="1:39">const</specifier> <name pos:start="1:41" pos:end="1:44">char</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">name</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><name pos:start="1:53" pos:end="1:63">GenericList</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier><modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">list</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:33"><decl pos:start="3:23" pos:end="3:33"><type pos:start="3:23" pos:end="3:33"><name pos:start="3:23" pos:end="3:28">size_t</name></type> <name pos:start="3:30" pos:end="3:33">size</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:47"><decl pos:start="3:36" pos:end="3:47"><type pos:start="3:36" pos:end="3:47"><name pos:start="3:36" pos:end="3:40">Error</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier><modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:47">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="23:1">{<block_content pos:start="7:5" pos:end="21:31">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:49"><expr pos:start="11:5" pos:end="11:48"><call pos:start="11:5" pos:end="11:48"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:48">(<argument pos:start="11:12" pos:end="11:47"><expr pos:start="11:12" pos:end="11:47"><operator pos:start="11:12" pos:end="11:12">!</operator><name pos:start="11:13" pos:end="11:16">list</name> <operator pos:start="11:18" pos:end="11:19">||</operator> <name pos:start="11:21" pos:end="11:24">size</name> <operator pos:start="11:26" pos:end="11:27">&gt;=</operator> <sizeof pos:start="11:29" pos:end="11:47">sizeof<argument_list pos:start="11:35" pos:end="11:47">(<argument pos:start="11:36" pos:end="11:46"><expr pos:start="11:36" pos:end="11:46"><name pos:start="11:36" pos:end="11:46">GenericList</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><call pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:5">v</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:17">start_list</name></name><argument_list pos:start="13:18" pos:end="13:44">(<argument pos:start="13:19" pos:end="13:19"><expr pos:start="13:19" pos:end="13:19"><name pos:start="13:19" pos:end="13:19">v</name></expr></argument>, <argument pos:start="13:22" pos:end="13:25"><expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">name</name></expr></argument>, <argument pos:start="13:28" pos:end="13:31"><expr pos:start="13:28" pos:end="13:31"><name pos:start="13:28" pos:end="13:31">list</name></expr></argument>, <argument pos:start="13:34" pos:end="13:37"><expr pos:start="13:34" pos:end="13:37"><name pos:start="13:34" pos:end="13:37">size</name></expr></argument>, <argument pos:start="13:40" pos:end="13:43"><expr pos:start="13:40" pos:end="13:43"><operator pos:start="13:40" pos:end="13:40">&amp;</operator><name pos:start="13:41" pos:end="13:43">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:41">(<expr pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:12">list</name> <operator pos:start="15:14" pos:end="15:15">&amp;&amp;</operator> <name pos:start="15:17" pos:end="15:23"><name pos:start="15:17" pos:end="15:17">v</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:23">type</name></name> <operator pos:start="15:25" pos:end="15:26">==</operator> <name pos:start="15:28" pos:end="15:40">VISITOR_INPUT</name></expr>)</condition> <block pos:start="15:43" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:32">

        <expr_stmt pos:start="17:9" pos:end="17:32"><expr pos:start="17:9" pos:end="17:31"><call pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:14">assert</name><argument_list pos:start="17:15" pos:end="17:31">(<argument pos:start="17:16" pos:end="17:30"><expr pos:start="17:16" pos:end="17:30"><operator pos:start="17:16" pos:end="17:16">!</operator><operator pos:start="17:17" pos:end="17:17">(</operator><name pos:start="17:18" pos:end="17:20">err</name> <operator pos:start="17:22" pos:end="17:23">&amp;&amp;</operator> <operator pos:start="17:25" pos:end="17:25">*</operator><name pos:start="17:26" pos:end="17:29">list</name><operator pos:start="17:30" pos:end="17:30">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><call pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:19">error_propagate</name><argument_list pos:start="21:20" pos:end="21:30">(<argument pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:24"><name pos:start="21:21" pos:end="21:24">errp</name></expr></argument>, <argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
