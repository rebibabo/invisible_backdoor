<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4275.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:32">v9fs_synth_preadv</name><parameter_list pos:start="1:33" pos:end="5:58">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:42">FsContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:69"><decl pos:start="1:50" pos:end="1:69"><type pos:start="1:50" pos:end="1:69"><name pos:start="1:50" pos:end="1:65">V9fsFidOpenState</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:69">fs</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:56"><decl pos:start="3:34" pos:end="3:56"><type pos:start="3:34" pos:end="3:56"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:51"><name pos:start="3:40" pos:end="3:45">struct</name> <name pos:start="3:47" pos:end="3:51">iovec</name></name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:56">iov</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:43"><decl pos:start="5:34" pos:end="5:43"><type pos:start="5:34" pos:end="5:43"><name pos:start="5:34" pos:end="5:36">int</name></type> <name pos:start="5:38" pos:end="5:43">iovcnt</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:57"><decl pos:start="5:46" pos:end="5:57"><type pos:start="5:46" pos:end="5:57"><name pos:start="5:46" pos:end="5:50">off_t</name></type> <name pos:start="5:52" pos:end="5:57">offset</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="45:1">{<block_content pos:start="9:5" pos:end="43:17">

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:16">count</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>, <decl pos:start="9:23" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:28">rcount</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">V9fsSynthOpenState</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:34">synth_open</name> <init pos:start="11:36" pos:end="11:48">= <expr pos:start="11:38" pos:end="11:48"><name pos:start="11:38" pos:end="11:48"><name pos:start="11:38" pos:end="11:39">fs</name><operator pos:start="11:40" pos:end="11:41">-&gt;</operator><name pos:start="11:42" pos:end="11:48">private</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">V9fsSynthNode</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:23">node</name> <init pos:start="13:25" pos:end="13:42">= <expr pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:36">synth_open</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:42">node</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:26">(<expr pos:start="15:9" pos:end="15:25"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:25"><name pos:start="15:10" pos:end="15:13">node</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:19">attr</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:25">read</name></name></expr>)</condition> <block pos:start="15:28" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:18">

        <expr_stmt pos:start="17:9" pos:end="17:22"><expr pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:13">errno</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:21">EPERM</name></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="23:5" pos:end="41:5">for <control pos:start="23:9" pos:end="23:32">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:27"><expr pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:26">iovcnt</name></expr>;</condition> <incr pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:29">i</name><operator pos:start="23:30" pos:end="23:31">++</operator></expr></incr>)</control> <block pos:start="23:34" pos:end="41:5">{<block_content pos:start="25:9" pos:end="39:9">

        <expr_stmt pos:start="25:9" pos:end="27:57"><expr pos:start="25:9" pos:end="27:56"><name pos:start="25:9" pos:end="25:14">rcount</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="27:56"><name pos:start="25:18" pos:end="25:33"><name pos:start="25:18" pos:end="25:21">node</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:27">attr</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:33">read</name></name><argument_list pos:start="25:34" pos:end="27:56">(<argument pos:start="25:35" pos:end="25:49"><expr pos:start="25:35" pos:end="25:49"><name pos:start="25:35" pos:end="25:40"><name pos:start="25:35" pos:end="25:37">iov</name><index pos:start="25:38" pos:end="25:40">[<expr pos:start="25:39" pos:end="25:39"><name pos:start="25:39" pos:end="25:39">i</name></expr>]</index></name><operator pos:start="25:41" pos:end="25:41">.</operator><name pos:start="25:42" pos:end="25:49">iov_base</name></expr></argument>, <argument pos:start="25:52" pos:end="25:65"><expr pos:start="25:52" pos:end="25:65"><name pos:start="25:52" pos:end="25:57"><name pos:start="25:52" pos:end="25:54">iov</name><index pos:start="25:55" pos:end="25:57">[<expr pos:start="25:56" pos:end="25:56"><name pos:start="25:56" pos:end="25:56">i</name></expr>]</index></name><operator pos:start="25:58" pos:end="25:58">.</operator><name pos:start="25:59" pos:end="25:65">iov_len</name></expr></argument>,

                                  <argument pos:start="27:35" pos:end="27:40"><expr pos:start="27:35" pos:end="27:40"><name pos:start="27:35" pos:end="27:40">offset</name></expr></argument>, <argument pos:start="27:43" pos:end="27:55"><expr pos:start="27:43" pos:end="27:55"><name pos:start="27:43" pos:end="27:55"><name pos:start="27:43" pos:end="27:46">node</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:55">private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:14">offset</name> <operator pos:start="29:16" pos:end="29:17">+=</operator> <name pos:start="29:19" pos:end="29:24">rcount</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:13">count</name>  <operator pos:start="31:16" pos:end="31:17">+=</operator> <name pos:start="31:19" pos:end="31:24">rcount</name></expr>;</expr_stmt>

        <comment type="block" pos:start="33:9" pos:end="33:57">/* If we read less than requested. we are done */</comment>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:36">(<expr pos:start="35:13" pos:end="35:35"><name pos:start="35:13" pos:end="35:18">rcount</name> <operator pos:start="35:20" pos:end="35:20">&lt;</operator> <name pos:start="35:22" pos:end="35:27"><name pos:start="35:22" pos:end="35:24">iov</name><index pos:start="35:25" pos:end="35:27">[<expr pos:start="35:26" pos:end="35:26"><name pos:start="35:26" pos:end="35:26">i</name></expr>]</index></name><operator pos:start="35:28" pos:end="35:28">.</operator><name pos:start="35:29" pos:end="35:35">iov_len</name></expr>)</condition> <block pos:start="35:38" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:18">

            <break pos:start="37:13" pos:end="37:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="43:5" pos:end="43:17">return <expr pos:start="43:12" pos:end="43:16"><name pos:start="43:12" pos:end="43:16">count</name></expr>;</return>

</block_content>}</block></function>
</unit>
