<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4805.c" pos:tabs="8"><function pos:start="1:1" pos:end="245:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">pcm_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:55">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:35">uint8_t</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">buf</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="245:1">{<block_content pos:start="9:5" pos:end="243:21">

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">PCMDecode</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:16">s</name> <init pos:start="9:18" pos:end="9:35">= <expr pos:start="9:20" pos:end="9:35"><name pos:start="9:20" pos:end="9:35"><name pos:start="9:20" pos:end="9:24">avctx</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:35">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">c</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">short</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:18">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:16">src</name></decl>, <decl pos:start="15:19" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:37"><name pos:start="15:20" pos:end="15:23">src2</name><index pos:start="15:24" pos:end="15:37">[<expr pos:start="15:25" pos:end="15:36"><name pos:start="15:25" pos:end="15:36">MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:11">samples</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:18">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:14"><expr pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:7">src</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:13">buf</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:49"><expr pos:start="25:5" pos:end="25:48"><name pos:start="25:5" pos:end="25:5">n</name><operator pos:start="25:6" pos:end="25:6">=</operator> <call pos:start="25:8" pos:end="25:46"><name pos:start="25:8" pos:end="25:29">av_get_bits_per_sample</name><argument_list pos:start="25:30" pos:end="25:46">(<argument pos:start="25:31" pos:end="25:45"><expr pos:start="25:31" pos:end="25:45"><name pos:start="25:31" pos:end="25:45"><name pos:start="25:31" pos:end="25:35">avctx</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:45">codec_id</name></name></expr></argument>)</argument_list></call><operator pos:start="25:47" pos:end="25:47">/</operator><literal type="number" pos:start="25:48" pos:end="25:48">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if<condition pos:start="27:7" pos:end="27:61">(<expr pos:start="27:8" pos:end="27:60"><operator pos:start="27:8" pos:end="27:8">(</operator><name pos:start="27:9" pos:end="27:9">n</name> <operator pos:start="27:11" pos:end="27:12">&amp;&amp;</operator> <name pos:start="27:14" pos:end="27:21">buf_size</name> <operator pos:start="27:23" pos:end="27:23">%</operator> <name pos:start="27:25" pos:end="27:25">n</name><operator pos:start="27:26" pos:end="27:26">)</operator> <operator pos:start="27:28" pos:end="27:29">||</operator> <name pos:start="27:31" pos:end="27:45"><name pos:start="27:31" pos:end="27:35">avctx</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:45">channels</name></name> <operator pos:start="27:47" pos:end="27:47">&gt;</operator> <name pos:start="27:49" pos:end="27:60">MAX_CHANNELS</name></expr>)</condition><block pos:start="27:62" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:60"><expr pos:start="29:9" pos:end="29:59"><call pos:start="29:9" pos:end="29:59"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:59">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:58"><expr pos:start="29:37" pos:end="29:58"><literal type="string" pos:start="29:37" pos:end="29:58">"invalid PCM packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:44"><expr pos:start="37:5" pos:end="37:43"><name pos:start="37:5" pos:end="37:12">buf_size</name><operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:43"><name pos:start="37:15" pos:end="37:19">FFMIN</name><argument_list pos:start="37:20" pos:end="37:43">(<argument pos:start="37:21" pos:end="37:28"><expr pos:start="37:21" pos:end="37:28"><name pos:start="37:21" pos:end="37:28">buf_size</name></expr></argument>, <argument pos:start="37:31" pos:end="37:42"><expr pos:start="37:31" pos:end="37:42"><operator pos:start="37:31" pos:end="37:31">*</operator><name pos:start="37:32" pos:end="37:40">data_size</name><operator pos:start="37:41" pos:end="37:41">/</operator><literal type="number" pos:start="37:42" pos:end="37:42">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:17"><expr pos:start="39:5" pos:end="39:16"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:14">data_size</name><operator pos:start="39:15" pos:end="39:15">=</operator><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:5">n</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <name pos:start="43:9" pos:end="43:16">buf_size</name><operator pos:start="43:17" pos:end="43:17">/</operator><name pos:start="43:18" pos:end="43:32"><name pos:start="43:18" pos:end="43:22">avctx</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:32">channels</name></name></expr>;</expr_stmt>

    <for pos:start="45:5" pos:end="47:28">for<control pos:start="45:8" pos:end="45:34">(<init pos:start="45:9" pos:end="45:12"><expr pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:9">c</name><operator pos:start="45:10" pos:end="45:10">=</operator><literal type="number" pos:start="45:11" pos:end="45:11">0</literal></expr>;</init><condition pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:13">c</name><operator pos:start="45:14" pos:end="45:14">&lt;</operator><name pos:start="45:15" pos:end="45:29"><name pos:start="45:15" pos:end="45:19">avctx</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:29">channels</name></name></expr>;</condition><incr pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:31">c</name><operator pos:start="45:32" pos:end="45:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:9" pos:end="47:28"><block_content pos:start="47:9" pos:end="47:28">

        <expr_stmt pos:start="47:9" pos:end="47:28"><expr pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:12">src2</name><index pos:start="47:13" pos:end="47:15">[<expr pos:start="47:14" pos:end="47:14"><name pos:start="47:14" pos:end="47:14">c</name></expr>]</index></name> <operator pos:start="47:17" pos:end="47:17">=</operator> <operator pos:start="47:19" pos:end="47:19">&amp;</operator><name pos:start="47:20" pos:end="47:27"><name pos:start="47:20" pos:end="47:22">src</name><index pos:start="47:23" pos:end="47:27">[<expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:24">c</name><operator pos:start="47:25" pos:end="47:25">*</operator><name pos:start="47:26" pos:end="47:26">n</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <switch pos:start="51:5" pos:end="239:5">switch<condition pos:start="51:11" pos:end="51:28">(<expr pos:start="51:12" pos:end="51:27"><name pos:start="51:12" pos:end="51:27"><name pos:start="51:12" pos:end="51:16">avctx</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:23">codec</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:27">id</name></name></expr>)</condition> <block pos:start="51:30" pos:end="239:5">{<block_content pos:start="53:5" pos:end="237:18">

    <case pos:start="53:5" pos:end="53:28">case <expr pos:start="53:10" pos:end="53:27"><name pos:start="53:10" pos:end="53:27">CODEC_ID_PCM_S32LE</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:55"><expr pos:start="55:9" pos:end="55:54"><call pos:start="55:9" pos:end="55:54"><name pos:start="55:9" pos:end="55:19">decode_to16</name><argument_list pos:start="55:20" pos:end="55:54">(<argument pos:start="55:21" pos:end="55:21"><expr pos:start="55:21" pos:end="55:21"><literal type="number" pos:start="55:21" pos:end="55:21">4</literal></expr></argument>, <argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><literal type="number" pos:start="55:24" pos:end="55:24">1</literal></expr></argument>, <argument pos:start="55:27" pos:end="55:27"><expr pos:start="55:27" pos:end="55:27"><literal type="number" pos:start="55:27" pos:end="55:27">0</literal></expr></argument>, <argument pos:start="55:30" pos:end="55:33"><expr pos:start="55:30" pos:end="55:33"><operator pos:start="55:30" pos:end="55:30">&amp;</operator><name pos:start="55:31" pos:end="55:33">src</name></expr></argument>, <argument pos:start="55:36" pos:end="55:43"><expr pos:start="55:36" pos:end="55:43"><operator pos:start="55:36" pos:end="55:36">&amp;</operator><name pos:start="55:37" pos:end="55:43">samples</name></expr></argument>, <argument pos:start="55:46" pos:end="55:53"><expr pos:start="55:46" pos:end="55:53"><name pos:start="55:46" pos:end="55:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:28">case <expr pos:start="59:10" pos:end="59:27"><name pos:start="59:10" pos:end="59:27">CODEC_ID_PCM_S32BE</name></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:55"><expr pos:start="61:9" pos:end="61:54"><call pos:start="61:9" pos:end="61:54"><name pos:start="61:9" pos:end="61:19">decode_to16</name><argument_list pos:start="61:20" pos:end="61:54">(<argument pos:start="61:21" pos:end="61:21"><expr pos:start="61:21" pos:end="61:21"><literal type="number" pos:start="61:21" pos:end="61:21">4</literal></expr></argument>, <argument pos:start="61:24" pos:end="61:24"><expr pos:start="61:24" pos:end="61:24"><literal type="number" pos:start="61:24" pos:end="61:24">0</literal></expr></argument>, <argument pos:start="61:27" pos:end="61:27"><expr pos:start="61:27" pos:end="61:27"><literal type="number" pos:start="61:27" pos:end="61:27">0</literal></expr></argument>, <argument pos:start="61:30" pos:end="61:33"><expr pos:start="61:30" pos:end="61:33"><operator pos:start="61:30" pos:end="61:30">&amp;</operator><name pos:start="61:31" pos:end="61:33">src</name></expr></argument>, <argument pos:start="61:36" pos:end="61:43"><expr pos:start="61:36" pos:end="61:43"><operator pos:start="61:36" pos:end="61:36">&amp;</operator><name pos:start="61:37" pos:end="61:43">samples</name></expr></argument>, <argument pos:start="61:46" pos:end="61:53"><expr pos:start="61:46" pos:end="61:53"><name pos:start="61:46" pos:end="61:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:28">case <expr pos:start="65:10" pos:end="65:27"><name pos:start="65:10" pos:end="65:27">CODEC_ID_PCM_U32LE</name></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:55"><expr pos:start="67:9" pos:end="67:54"><call pos:start="67:9" pos:end="67:54"><name pos:start="67:9" pos:end="67:19">decode_to16</name><argument_list pos:start="67:20" pos:end="67:54">(<argument pos:start="67:21" pos:end="67:21"><expr pos:start="67:21" pos:end="67:21"><literal type="number" pos:start="67:21" pos:end="67:21">4</literal></expr></argument>, <argument pos:start="67:24" pos:end="67:24"><expr pos:start="67:24" pos:end="67:24"><literal type="number" pos:start="67:24" pos:end="67:24">1</literal></expr></argument>, <argument pos:start="67:27" pos:end="67:27"><expr pos:start="67:27" pos:end="67:27"><literal type="number" pos:start="67:27" pos:end="67:27">1</literal></expr></argument>, <argument pos:start="67:30" pos:end="67:33"><expr pos:start="67:30" pos:end="67:33"><operator pos:start="67:30" pos:end="67:30">&amp;</operator><name pos:start="67:31" pos:end="67:33">src</name></expr></argument>, <argument pos:start="67:36" pos:end="67:43"><expr pos:start="67:36" pos:end="67:43"><operator pos:start="67:36" pos:end="67:36">&amp;</operator><name pos:start="67:37" pos:end="67:43">samples</name></expr></argument>, <argument pos:start="67:46" pos:end="67:53"><expr pos:start="67:46" pos:end="67:53"><name pos:start="67:46" pos:end="67:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:28">case <expr pos:start="71:10" pos:end="71:27"><name pos:start="71:10" pos:end="71:27">CODEC_ID_PCM_U32BE</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:55"><expr pos:start="73:9" pos:end="73:54"><call pos:start="73:9" pos:end="73:54"><name pos:start="73:9" pos:end="73:19">decode_to16</name><argument_list pos:start="73:20" pos:end="73:54">(<argument pos:start="73:21" pos:end="73:21"><expr pos:start="73:21" pos:end="73:21"><literal type="number" pos:start="73:21" pos:end="73:21">4</literal></expr></argument>, <argument pos:start="73:24" pos:end="73:24"><expr pos:start="73:24" pos:end="73:24"><literal type="number" pos:start="73:24" pos:end="73:24">0</literal></expr></argument>, <argument pos:start="73:27" pos:end="73:27"><expr pos:start="73:27" pos:end="73:27"><literal type="number" pos:start="73:27" pos:end="73:27">1</literal></expr></argument>, <argument pos:start="73:30" pos:end="73:33"><expr pos:start="73:30" pos:end="73:33"><operator pos:start="73:30" pos:end="73:30">&amp;</operator><name pos:start="73:31" pos:end="73:33">src</name></expr></argument>, <argument pos:start="73:36" pos:end="73:43"><expr pos:start="73:36" pos:end="73:43"><operator pos:start="73:36" pos:end="73:36">&amp;</operator><name pos:start="73:37" pos:end="73:43">samples</name></expr></argument>, <argument pos:start="73:46" pos:end="73:53"><expr pos:start="73:46" pos:end="73:53"><name pos:start="73:46" pos:end="73:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:28">case <expr pos:start="77:10" pos:end="77:27"><name pos:start="77:10" pos:end="77:27">CODEC_ID_PCM_S24LE</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:55"><expr pos:start="79:9" pos:end="79:54"><call pos:start="79:9" pos:end="79:54"><name pos:start="79:9" pos:end="79:19">decode_to16</name><argument_list pos:start="79:20" pos:end="79:54">(<argument pos:start="79:21" pos:end="79:21"><expr pos:start="79:21" pos:end="79:21"><literal type="number" pos:start="79:21" pos:end="79:21">3</literal></expr></argument>, <argument pos:start="79:24" pos:end="79:24"><expr pos:start="79:24" pos:end="79:24"><literal type="number" pos:start="79:24" pos:end="79:24">1</literal></expr></argument>, <argument pos:start="79:27" pos:end="79:27"><expr pos:start="79:27" pos:end="79:27"><literal type="number" pos:start="79:27" pos:end="79:27">0</literal></expr></argument>, <argument pos:start="79:30" pos:end="79:33"><expr pos:start="79:30" pos:end="79:33"><operator pos:start="79:30" pos:end="79:30">&amp;</operator><name pos:start="79:31" pos:end="79:33">src</name></expr></argument>, <argument pos:start="79:36" pos:end="79:43"><expr pos:start="79:36" pos:end="79:43"><operator pos:start="79:36" pos:end="79:36">&amp;</operator><name pos:start="79:37" pos:end="79:43">samples</name></expr></argument>, <argument pos:start="79:46" pos:end="79:53"><expr pos:start="79:46" pos:end="79:53"><name pos:start="79:46" pos:end="79:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    <case pos:start="83:5" pos:end="83:28">case <expr pos:start="83:10" pos:end="83:27"><name pos:start="83:10" pos:end="83:27">CODEC_ID_PCM_S24BE</name></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="85:55"><expr pos:start="85:9" pos:end="85:54"><call pos:start="85:9" pos:end="85:54"><name pos:start="85:9" pos:end="85:19">decode_to16</name><argument_list pos:start="85:20" pos:end="85:54">(<argument pos:start="85:21" pos:end="85:21"><expr pos:start="85:21" pos:end="85:21"><literal type="number" pos:start="85:21" pos:end="85:21">3</literal></expr></argument>, <argument pos:start="85:24" pos:end="85:24"><expr pos:start="85:24" pos:end="85:24"><literal type="number" pos:start="85:24" pos:end="85:24">0</literal></expr></argument>, <argument pos:start="85:27" pos:end="85:27"><expr pos:start="85:27" pos:end="85:27"><literal type="number" pos:start="85:27" pos:end="85:27">0</literal></expr></argument>, <argument pos:start="85:30" pos:end="85:33"><expr pos:start="85:30" pos:end="85:33"><operator pos:start="85:30" pos:end="85:30">&amp;</operator><name pos:start="85:31" pos:end="85:33">src</name></expr></argument>, <argument pos:start="85:36" pos:end="85:43"><expr pos:start="85:36" pos:end="85:43"><operator pos:start="85:36" pos:end="85:36">&amp;</operator><name pos:start="85:37" pos:end="85:43">samples</name></expr></argument>, <argument pos:start="85:46" pos:end="85:53"><expr pos:start="85:46" pos:end="85:53"><name pos:start="85:46" pos:end="85:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:28">case <expr pos:start="89:10" pos:end="89:27"><name pos:start="89:10" pos:end="89:27">CODEC_ID_PCM_U24LE</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:55"><expr pos:start="91:9" pos:end="91:54"><call pos:start="91:9" pos:end="91:54"><name pos:start="91:9" pos:end="91:19">decode_to16</name><argument_list pos:start="91:20" pos:end="91:54">(<argument pos:start="91:21" pos:end="91:21"><expr pos:start="91:21" pos:end="91:21"><literal type="number" pos:start="91:21" pos:end="91:21">3</literal></expr></argument>, <argument pos:start="91:24" pos:end="91:24"><expr pos:start="91:24" pos:end="91:24"><literal type="number" pos:start="91:24" pos:end="91:24">1</literal></expr></argument>, <argument pos:start="91:27" pos:end="91:27"><expr pos:start="91:27" pos:end="91:27"><literal type="number" pos:start="91:27" pos:end="91:27">1</literal></expr></argument>, <argument pos:start="91:30" pos:end="91:33"><expr pos:start="91:30" pos:end="91:33"><operator pos:start="91:30" pos:end="91:30">&amp;</operator><name pos:start="91:31" pos:end="91:33">src</name></expr></argument>, <argument pos:start="91:36" pos:end="91:43"><expr pos:start="91:36" pos:end="91:43"><operator pos:start="91:36" pos:end="91:36">&amp;</operator><name pos:start="91:37" pos:end="91:43">samples</name></expr></argument>, <argument pos:start="91:46" pos:end="91:53"><expr pos:start="91:46" pos:end="91:53"><name pos:start="91:46" pos:end="91:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:28">case <expr pos:start="95:10" pos:end="95:27"><name pos:start="95:10" pos:end="95:27">CODEC_ID_PCM_U24BE</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:55"><expr pos:start="97:9" pos:end="97:54"><call pos:start="97:9" pos:end="97:54"><name pos:start="97:9" pos:end="97:19">decode_to16</name><argument_list pos:start="97:20" pos:end="97:54">(<argument pos:start="97:21" pos:end="97:21"><expr pos:start="97:21" pos:end="97:21"><literal type="number" pos:start="97:21" pos:end="97:21">3</literal></expr></argument>, <argument pos:start="97:24" pos:end="97:24"><expr pos:start="97:24" pos:end="97:24"><literal type="number" pos:start="97:24" pos:end="97:24">0</literal></expr></argument>, <argument pos:start="97:27" pos:end="97:27"><expr pos:start="97:27" pos:end="97:27"><literal type="number" pos:start="97:27" pos:end="97:27">1</literal></expr></argument>, <argument pos:start="97:30" pos:end="97:33"><expr pos:start="97:30" pos:end="97:33"><operator pos:start="97:30" pos:end="97:30">&amp;</operator><name pos:start="97:31" pos:end="97:33">src</name></expr></argument>, <argument pos:start="97:36" pos:end="97:43"><expr pos:start="97:36" pos:end="97:43"><operator pos:start="97:36" pos:end="97:36">&amp;</operator><name pos:start="97:37" pos:end="97:43">samples</name></expr></argument>, <argument pos:start="97:46" pos:end="97:53"><expr pos:start="97:46" pos:end="97:53"><name pos:start="97:46" pos:end="97:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:30">case <expr pos:start="101:10" pos:end="101:29"><name pos:start="101:10" pos:end="101:29">CODEC_ID_PCM_S24DAUD</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:25"><expr pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:9">n</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <name pos:start="103:13" pos:end="103:20">buf_size</name> <operator pos:start="103:22" pos:end="103:22">/</operator> <literal type="number" pos:start="103:24" pos:end="103:24">3</literal></expr>;</expr_stmt>

        <for pos:start="105:9" pos:end="115:9">for<control pos:start="105:12" pos:end="105:21">(<init pos:start="105:13" pos:end="105:13">;</init><condition pos:start="105:14" pos:end="105:17"><expr pos:start="105:14" pos:end="105:16"><name pos:start="105:14" pos:end="105:14">n</name><operator pos:start="105:15" pos:end="105:15">&gt;</operator><literal type="number" pos:start="105:16" pos:end="105:16">0</literal></expr>;</condition><incr pos:start="105:18" pos:end="105:20"><expr pos:start="105:18" pos:end="105:20"><name pos:start="105:18" pos:end="105:18">n</name><operator pos:start="105:19" pos:end="105:20">--</operator></expr></incr>)</control> <block pos:start="105:23" pos:end="115:9">{<block_content pos:start="107:11" pos:end="113:51">

          <decl_stmt pos:start="107:11" pos:end="107:49"><decl pos:start="107:11" pos:end="107:48"><type pos:start="107:11" pos:end="107:18"><name pos:start="107:11" pos:end="107:18">uint32_t</name></type> <name pos:start="107:20" pos:end="107:20">v</name> <init pos:start="107:22" pos:end="107:48">= <expr pos:start="107:24" pos:end="107:48"><call pos:start="107:24" pos:end="107:48"><name pos:start="107:24" pos:end="107:42">bytestream_get_be24</name><argument_list pos:start="107:43" pos:end="107:48">(<argument pos:start="107:44" pos:end="107:47"><expr pos:start="107:44" pos:end="107:47"><operator pos:start="107:44" pos:end="107:44">&amp;</operator><name pos:start="107:45" pos:end="107:47">src</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

          <expr_stmt pos:start="109:11" pos:end="109:18"><expr pos:start="109:11" pos:end="109:17"><name pos:start="109:11" pos:end="109:11">v</name> <operator pos:start="109:13" pos:end="109:15">&gt;&gt;=</operator> <literal type="number" pos:start="109:17" pos:end="109:17">4</literal></expr>;</expr_stmt> <comment type="line" pos:start="109:20" pos:end="109:41">// sync flags are here</comment>

          <expr_stmt pos:start="111:11" pos:end="113:51"><expr pos:start="111:11" pos:end="113:50"><operator pos:start="111:11" pos:end="111:11">*</operator><name pos:start="111:12" pos:end="111:18">samples</name><operator pos:start="111:19" pos:end="111:20">++</operator> <operator pos:start="111:22" pos:end="111:22">=</operator> <name pos:start="111:24" pos:end="111:50"><name pos:start="111:24" pos:end="111:33">ff_reverse</name><index pos:start="111:34" pos:end="111:50">[<expr pos:start="111:35" pos:end="111:49"><operator pos:start="111:35" pos:end="111:35">(</operator><name pos:start="111:36" pos:end="111:36">v</name> <operator pos:start="111:38" pos:end="111:39">&gt;&gt;</operator> <literal type="number" pos:start="111:41" pos:end="111:41">8</literal><operator pos:start="111:42" pos:end="111:42">)</operator> <operator pos:start="111:44" pos:end="111:44">&amp;</operator> <literal type="number" pos:start="111:46" pos:end="111:49">0xff</literal></expr>]</index></name> <operator pos:start="111:52" pos:end="111:52">+</operator>

                       <operator pos:start="113:24" pos:end="113:24">(</operator><name pos:start="113:25" pos:end="113:44"><name pos:start="113:25" pos:end="113:34">ff_reverse</name><index pos:start="113:35" pos:end="113:44">[<expr pos:start="113:36" pos:end="113:43"><name pos:start="113:36" pos:end="113:36">v</name> <operator pos:start="113:38" pos:end="113:38">&amp;</operator> <literal type="number" pos:start="113:40" pos:end="113:43">0xff</literal></expr>]</index></name> <operator pos:start="113:46" pos:end="113:47">&lt;&lt;</operator> <literal type="number" pos:start="113:49" pos:end="113:49">8</literal><operator pos:start="113:50" pos:end="113:50">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    <case pos:start="119:5" pos:end="119:28">case <expr pos:start="119:10" pos:end="119:27"><name pos:start="119:10" pos:end="119:27">CODEC_ID_PCM_S16LE</name></expr>:</case>

        <expr_stmt pos:start="121:9" pos:end="121:26"><expr pos:start="121:9" pos:end="121:25"><name pos:start="121:9" pos:end="121:9">n</name> <operator pos:start="121:11" pos:end="121:11">=</operator> <name pos:start="121:13" pos:end="121:20">buf_size</name> <operator pos:start="121:22" pos:end="121:23">&gt;&gt;</operator> <literal type="number" pos:start="121:25" pos:end="121:25">1</literal></expr>;</expr_stmt>

        <for pos:start="123:9" pos:end="127:9">for<control pos:start="123:12" pos:end="123:21">(<init pos:start="123:13" pos:end="123:13">;</init><condition pos:start="123:14" pos:end="123:17"><expr pos:start="123:14" pos:end="123:16"><name pos:start="123:14" pos:end="123:14">n</name><operator pos:start="123:15" pos:end="123:15">&gt;</operator><literal type="number" pos:start="123:16" pos:end="123:16">0</literal></expr>;</condition><incr pos:start="123:18" pos:end="123:20"><expr pos:start="123:18" pos:end="123:20"><name pos:start="123:18" pos:end="123:18">n</name><operator pos:start="123:19" pos:end="123:20">--</operator></expr></incr>)</control> <block pos:start="123:23" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:51">

            <expr_stmt pos:start="125:13" pos:end="125:51"><expr pos:start="125:13" pos:end="125:50"><operator pos:start="125:13" pos:end="125:13">*</operator><name pos:start="125:14" pos:end="125:20">samples</name><operator pos:start="125:21" pos:end="125:22">++</operator> <operator pos:start="125:24" pos:end="125:24">=</operator> <call pos:start="125:26" pos:end="125:50"><name pos:start="125:26" pos:end="125:44">bytestream_get_le16</name><argument_list pos:start="125:45" pos:end="125:50">(<argument pos:start="125:46" pos:end="125:49"><expr pos:start="125:46" pos:end="125:49"><operator pos:start="125:46" pos:end="125:46">&amp;</operator><name pos:start="125:47" pos:end="125:49">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    <case pos:start="131:5" pos:end="131:35">case <expr pos:start="131:10" pos:end="131:34"><name pos:start="131:10" pos:end="131:34">CODEC_ID_PCM_S16LE_PLANAR</name></expr>:</case>

        <for pos:start="133:9" pos:end="137:59">for<control pos:start="133:12" pos:end="133:26">(<init pos:start="133:13" pos:end="133:18"><expr pos:start="133:13" pos:end="133:17"><name pos:start="133:13" pos:end="133:13">n</name><operator pos:start="133:14" pos:end="133:16">&gt;&gt;=</operator><literal type="number" pos:start="133:17" pos:end="133:17">1</literal></expr>;</init><condition pos:start="133:19" pos:end="133:22"><expr pos:start="133:19" pos:end="133:21"><name pos:start="133:19" pos:end="133:19">n</name><operator pos:start="133:20" pos:end="133:20">&gt;</operator><literal type="number" pos:start="133:21" pos:end="133:21">0</literal></expr>;</condition><incr pos:start="133:23" pos:end="133:25"><expr pos:start="133:23" pos:end="133:25"><name pos:start="133:23" pos:end="133:23">n</name><operator pos:start="133:24" pos:end="133:25">--</operator></expr></incr>)</control><block type="pseudo" pos:start="135:13" pos:end="137:59"><block_content pos:start="135:13" pos:end="137:59">

            <for pos:start="135:13" pos:end="137:59">for<control pos:start="135:16" pos:end="135:42">(<init pos:start="135:17" pos:end="135:20"><expr pos:start="135:17" pos:end="135:19"><name pos:start="135:17" pos:end="135:17">c</name><operator pos:start="135:18" pos:end="135:18">=</operator><literal type="number" pos:start="135:19" pos:end="135:19">0</literal></expr>;</init><condition pos:start="135:21" pos:end="135:38"><expr pos:start="135:21" pos:end="135:37"><name pos:start="135:21" pos:end="135:21">c</name><operator pos:start="135:22" pos:end="135:22">&lt;</operator><name pos:start="135:23" pos:end="135:37"><name pos:start="135:23" pos:end="135:27">avctx</name><operator pos:start="135:28" pos:end="135:29">-&gt;</operator><name pos:start="135:30" pos:end="135:37">channels</name></name></expr>;</condition><incr pos:start="135:39" pos:end="135:41"><expr pos:start="135:39" pos:end="135:41"><name pos:start="135:39" pos:end="135:39">c</name><operator pos:start="135:40" pos:end="135:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="137:17" pos:end="137:59"><block_content pos:start="137:17" pos:end="137:59">

                <expr_stmt pos:start="137:17" pos:end="137:59"><expr pos:start="137:17" pos:end="137:58"><operator pos:start="137:17" pos:end="137:17">*</operator><name pos:start="137:18" pos:end="137:24">samples</name><operator pos:start="137:25" pos:end="137:26">++</operator> <operator pos:start="137:28" pos:end="137:28">=</operator> <call pos:start="137:30" pos:end="137:58"><name pos:start="137:30" pos:end="137:48">bytestream_get_le16</name><argument_list pos:start="137:49" pos:end="137:58">(<argument pos:start="137:50" pos:end="137:57"><expr pos:start="137:50" pos:end="137:57"><operator pos:start="137:50" pos:end="137:50">&amp;</operator><name pos:start="137:51" pos:end="137:57"><name pos:start="137:51" pos:end="137:54">src2</name><index pos:start="137:55" pos:end="137:57">[<expr pos:start="137:56" pos:end="137:56"><name pos:start="137:56" pos:end="137:56">c</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        <expr_stmt pos:start="139:9" pos:end="139:38"><expr pos:start="139:9" pos:end="139:37"><name pos:start="139:9" pos:end="139:11">src</name> <operator pos:start="139:13" pos:end="139:13">=</operator> <name pos:start="139:15" pos:end="139:37"><name pos:start="139:15" pos:end="139:18">src2</name><index pos:start="139:19" pos:end="139:37">[<expr pos:start="139:20" pos:end="139:36"><name pos:start="139:20" pos:end="139:34"><name pos:start="139:20" pos:end="139:24">avctx</name><operator pos:start="139:25" pos:end="139:26">-&gt;</operator><name pos:start="139:27" pos:end="139:34">channels</name></name><operator pos:start="139:35" pos:end="139:35">-</operator><literal type="number" pos:start="139:36" pos:end="139:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="141:9" pos:end="141:14">break;</break>

    <case pos:start="143:5" pos:end="143:28">case <expr pos:start="143:10" pos:end="143:27"><name pos:start="143:10" pos:end="143:27">CODEC_ID_PCM_S16BE</name></expr>:</case>

        <expr_stmt pos:start="145:9" pos:end="145:26"><expr pos:start="145:9" pos:end="145:25"><name pos:start="145:9" pos:end="145:9">n</name> <operator pos:start="145:11" pos:end="145:11">=</operator> <name pos:start="145:13" pos:end="145:20">buf_size</name> <operator pos:start="145:22" pos:end="145:23">&gt;&gt;</operator> <literal type="number" pos:start="145:25" pos:end="145:25">1</literal></expr>;</expr_stmt>

        <for pos:start="147:9" pos:end="151:9">for<control pos:start="147:12" pos:end="147:21">(<init pos:start="147:13" pos:end="147:13">;</init><condition pos:start="147:14" pos:end="147:17"><expr pos:start="147:14" pos:end="147:16"><name pos:start="147:14" pos:end="147:14">n</name><operator pos:start="147:15" pos:end="147:15">&gt;</operator><literal type="number" pos:start="147:16" pos:end="147:16">0</literal></expr>;</condition><incr pos:start="147:18" pos:end="147:20"><expr pos:start="147:18" pos:end="147:20"><name pos:start="147:18" pos:end="147:18">n</name><operator pos:start="147:19" pos:end="147:20">--</operator></expr></incr>)</control> <block pos:start="147:23" pos:end="151:9">{<block_content pos:start="149:13" pos:end="149:51">

            <expr_stmt pos:start="149:13" pos:end="149:51"><expr pos:start="149:13" pos:end="149:50"><operator pos:start="149:13" pos:end="149:13">*</operator><name pos:start="149:14" pos:end="149:20">samples</name><operator pos:start="149:21" pos:end="149:22">++</operator> <operator pos:start="149:24" pos:end="149:24">=</operator> <call pos:start="149:26" pos:end="149:50"><name pos:start="149:26" pos:end="149:44">bytestream_get_be16</name><argument_list pos:start="149:45" pos:end="149:50">(<argument pos:start="149:46" pos:end="149:49"><expr pos:start="149:46" pos:end="149:49"><operator pos:start="149:46" pos:end="149:46">&amp;</operator><name pos:start="149:47" pos:end="149:49">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="153:9" pos:end="153:14">break;</break>

    <case pos:start="155:5" pos:end="155:28">case <expr pos:start="155:10" pos:end="155:27"><name pos:start="155:10" pos:end="155:27">CODEC_ID_PCM_U16LE</name></expr>:</case>

        <expr_stmt pos:start="157:9" pos:end="157:26"><expr pos:start="157:9" pos:end="157:25"><name pos:start="157:9" pos:end="157:9">n</name> <operator pos:start="157:11" pos:end="157:11">=</operator> <name pos:start="157:13" pos:end="157:20">buf_size</name> <operator pos:start="157:22" pos:end="157:23">&gt;&gt;</operator> <literal type="number" pos:start="157:25" pos:end="157:25">1</literal></expr>;</expr_stmt>

        <for pos:start="159:9" pos:end="163:9">for<control pos:start="159:12" pos:end="159:21">(<init pos:start="159:13" pos:end="159:13">;</init><condition pos:start="159:14" pos:end="159:17"><expr pos:start="159:14" pos:end="159:16"><name pos:start="159:14" pos:end="159:14">n</name><operator pos:start="159:15" pos:end="159:15">&gt;</operator><literal type="number" pos:start="159:16" pos:end="159:16">0</literal></expr>;</condition><incr pos:start="159:18" pos:end="159:20"><expr pos:start="159:18" pos:end="159:20"><name pos:start="159:18" pos:end="159:18">n</name><operator pos:start="159:19" pos:end="159:20">--</operator></expr></incr>)</control> <block pos:start="159:23" pos:end="163:9">{<block_content pos:start="161:13" pos:end="161:60">

            <expr_stmt pos:start="161:13" pos:end="161:60"><expr pos:start="161:13" pos:end="161:59"><operator pos:start="161:13" pos:end="161:13">*</operator><name pos:start="161:14" pos:end="161:20">samples</name><operator pos:start="161:21" pos:end="161:22">++</operator> <operator pos:start="161:24" pos:end="161:24">=</operator> <call pos:start="161:26" pos:end="161:50"><name pos:start="161:26" pos:end="161:44">bytestream_get_le16</name><argument_list pos:start="161:45" pos:end="161:50">(<argument pos:start="161:46" pos:end="161:49"><expr pos:start="161:46" pos:end="161:49"><operator pos:start="161:46" pos:end="161:46">&amp;</operator><name pos:start="161:47" pos:end="161:49">src</name></expr></argument>)</argument_list></call> <operator pos:start="161:52" pos:end="161:52">-</operator> <literal type="number" pos:start="161:54" pos:end="161:59">0x8000</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:28">case <expr pos:start="167:10" pos:end="167:27"><name pos:start="167:10" pos:end="167:27">CODEC_ID_PCM_U16BE</name></expr>:</case>

        <expr_stmt pos:start="169:9" pos:end="169:26"><expr pos:start="169:9" pos:end="169:25"><name pos:start="169:9" pos:end="169:9">n</name> <operator pos:start="169:11" pos:end="169:11">=</operator> <name pos:start="169:13" pos:end="169:20">buf_size</name> <operator pos:start="169:22" pos:end="169:23">&gt;&gt;</operator> <literal type="number" pos:start="169:25" pos:end="169:25">1</literal></expr>;</expr_stmt>

        <for pos:start="171:9" pos:end="175:9">for<control pos:start="171:12" pos:end="171:21">(<init pos:start="171:13" pos:end="171:13">;</init><condition pos:start="171:14" pos:end="171:17"><expr pos:start="171:14" pos:end="171:16"><name pos:start="171:14" pos:end="171:14">n</name><operator pos:start="171:15" pos:end="171:15">&gt;</operator><literal type="number" pos:start="171:16" pos:end="171:16">0</literal></expr>;</condition><incr pos:start="171:18" pos:end="171:20"><expr pos:start="171:18" pos:end="171:20"><name pos:start="171:18" pos:end="171:18">n</name><operator pos:start="171:19" pos:end="171:20">--</operator></expr></incr>)</control> <block pos:start="171:23" pos:end="175:9">{<block_content pos:start="173:13" pos:end="173:60">

            <expr_stmt pos:start="173:13" pos:end="173:60"><expr pos:start="173:13" pos:end="173:59"><operator pos:start="173:13" pos:end="173:13">*</operator><name pos:start="173:14" pos:end="173:20">samples</name><operator pos:start="173:21" pos:end="173:22">++</operator> <operator pos:start="173:24" pos:end="173:24">=</operator> <call pos:start="173:26" pos:end="173:50"><name pos:start="173:26" pos:end="173:44">bytestream_get_be16</name><argument_list pos:start="173:45" pos:end="173:50">(<argument pos:start="173:46" pos:end="173:49"><expr pos:start="173:46" pos:end="173:49"><operator pos:start="173:46" pos:end="173:46">&amp;</operator><name pos:start="173:47" pos:end="173:49">src</name></expr></argument>)</argument_list></call> <operator pos:start="173:52" pos:end="173:52">-</operator> <literal type="number" pos:start="173:54" pos:end="173:59">0x8000</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    <case pos:start="179:5" pos:end="179:25">case <expr pos:start="179:10" pos:end="179:24"><name pos:start="179:10" pos:end="179:24">CODEC_ID_PCM_S8</name></expr>:</case>

        <expr_stmt pos:start="181:9" pos:end="181:21"><expr pos:start="181:9" pos:end="181:20"><name pos:start="181:9" pos:end="181:9">n</name> <operator pos:start="181:11" pos:end="181:11">=</operator> <name pos:start="181:13" pos:end="181:20">buf_size</name></expr>;</expr_stmt>

        <for pos:start="183:9" pos:end="187:9">for<control pos:start="183:12" pos:end="183:21">(<init pos:start="183:13" pos:end="183:13">;</init><condition pos:start="183:14" pos:end="183:17"><expr pos:start="183:14" pos:end="183:16"><name pos:start="183:14" pos:end="183:14">n</name><operator pos:start="183:15" pos:end="183:15">&gt;</operator><literal type="number" pos:start="183:16" pos:end="183:16">0</literal></expr>;</condition><incr pos:start="183:18" pos:end="183:20"><expr pos:start="183:18" pos:end="183:20"><name pos:start="183:18" pos:end="183:18">n</name><operator pos:start="183:19" pos:end="183:20">--</operator></expr></incr>)</control> <block pos:start="183:23" pos:end="187:9">{<block_content pos:start="185:13" pos:end="185:37">

            <expr_stmt pos:start="185:13" pos:end="185:37"><expr pos:start="185:13" pos:end="185:36"><operator pos:start="185:13" pos:end="185:13">*</operator><name pos:start="185:14" pos:end="185:20">samples</name><operator pos:start="185:21" pos:end="185:22">++</operator> <operator pos:start="185:24" pos:end="185:24">=</operator> <operator pos:start="185:26" pos:end="185:26">*</operator><name pos:start="185:27" pos:end="185:29">src</name><operator pos:start="185:30" pos:end="185:31">++</operator> <operator pos:start="185:33" pos:end="185:34">&lt;&lt;</operator> <literal type="number" pos:start="185:36" pos:end="185:36">8</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="189:9" pos:end="189:14">break;</break>

    <case pos:start="191:5" pos:end="191:25">case <expr pos:start="191:10" pos:end="191:24"><name pos:start="191:10" pos:end="191:24">CODEC_ID_PCM_U8</name></expr>:</case>

        <expr_stmt pos:start="193:9" pos:end="193:21"><expr pos:start="193:9" pos:end="193:20"><name pos:start="193:9" pos:end="193:9">n</name> <operator pos:start="193:11" pos:end="193:11">=</operator> <name pos:start="193:13" pos:end="193:20">buf_size</name></expr>;</expr_stmt>

        <for pos:start="195:9" pos:end="199:9">for<control pos:start="195:12" pos:end="195:21">(<init pos:start="195:13" pos:end="195:13">;</init><condition pos:start="195:14" pos:end="195:17"><expr pos:start="195:14" pos:end="195:16"><name pos:start="195:14" pos:end="195:14">n</name><operator pos:start="195:15" pos:end="195:15">&gt;</operator><literal type="number" pos:start="195:16" pos:end="195:16">0</literal></expr>;</condition><incr pos:start="195:18" pos:end="195:20"><expr pos:start="195:18" pos:end="195:20"><name pos:start="195:18" pos:end="195:18">n</name><operator pos:start="195:19" pos:end="195:20">--</operator></expr></incr>)</control> <block pos:start="195:23" pos:end="199:9">{<block_content pos:start="197:13" pos:end="197:50">

            <expr_stmt pos:start="197:13" pos:end="197:50"><expr pos:start="197:13" pos:end="197:49"><operator pos:start="197:13" pos:end="197:13">*</operator><name pos:start="197:14" pos:end="197:20">samples</name><operator pos:start="197:21" pos:end="197:22">++</operator> <operator pos:start="197:24" pos:end="197:24">=</operator> <operator pos:start="197:26" pos:end="197:26">(</operator><operator pos:start="197:27" pos:end="197:27">(</operator><name pos:start="197:28" pos:end="197:30">int</name><operator pos:start="197:31" pos:end="197:31">)</operator><operator pos:start="197:32" pos:end="197:32">*</operator><name pos:start="197:33" pos:end="197:35">src</name><operator pos:start="197:36" pos:end="197:37">++</operator> <operator pos:start="197:39" pos:end="197:39">-</operator> <literal type="number" pos:start="197:41" pos:end="197:43">128</literal><operator pos:start="197:44" pos:end="197:44">)</operator> <operator pos:start="197:46" pos:end="197:47">&lt;&lt;</operator> <literal type="number" pos:start="197:49" pos:end="197:49">8</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="201:9" pos:end="201:14">break;</break>

    <case pos:start="203:5" pos:end="203:27">case <expr pos:start="203:10" pos:end="203:26"><name pos:start="203:10" pos:end="203:26">CODEC_ID_PCM_ZORK</name></expr>:</case>

        <expr_stmt pos:start="205:9" pos:end="205:21"><expr pos:start="205:9" pos:end="205:20"><name pos:start="205:9" pos:end="205:9">n</name> <operator pos:start="205:11" pos:end="205:11">=</operator> <name pos:start="205:13" pos:end="205:20">buf_size</name></expr>;</expr_stmt>

        <for pos:start="207:9" pos:end="217:9">for<control pos:start="207:12" pos:end="207:21">(<init pos:start="207:13" pos:end="207:13">;</init><condition pos:start="207:14" pos:end="207:17"><expr pos:start="207:14" pos:end="207:16"><name pos:start="207:14" pos:end="207:14">n</name><operator pos:start="207:15" pos:end="207:15">&gt;</operator><literal type="number" pos:start="207:16" pos:end="207:16">0</literal></expr>;</condition><incr pos:start="207:18" pos:end="207:20"><expr pos:start="207:18" pos:end="207:20"><name pos:start="207:18" pos:end="207:18">n</name><operator pos:start="207:19" pos:end="207:20">--</operator></expr></incr>)</control> <block pos:start="207:23" pos:end="217:9">{<block_content pos:start="209:13" pos:end="215:32">

            <decl_stmt pos:start="209:13" pos:end="209:26"><decl pos:start="209:13" pos:end="209:25"><type pos:start="209:13" pos:end="209:15"><name pos:start="209:13" pos:end="209:15">int</name></type> <name pos:start="209:17" pos:end="209:17">x</name><init pos:start="209:18" pos:end="209:25">= <expr pos:start="209:20" pos:end="209:25"><operator pos:start="209:20" pos:end="209:20">*</operator><name pos:start="209:21" pos:end="209:23">src</name><operator pos:start="209:24" pos:end="209:25">++</operator></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="211:13" pos:end="213:29"><if pos:start="211:13" pos:end="211:30">if<condition pos:start="211:15" pos:end="211:21">(<expr pos:start="211:16" pos:end="211:20"><name pos:start="211:16" pos:end="211:16">x</name><operator pos:start="211:17" pos:end="211:17">&amp;</operator><literal type="number" pos:start="211:18" pos:end="211:20">128</literal></expr>)</condition><block type="pseudo" pos:start="211:23" pos:end="211:30"><block_content pos:start="211:23" pos:end="211:30"> <expr_stmt pos:start="211:23" pos:end="211:30"><expr pos:start="211:23" pos:end="211:29"><name pos:start="211:23" pos:end="211:23">x</name><operator pos:start="211:24" pos:end="211:25">-=</operator> <literal type="number" pos:start="211:27" pos:end="211:29">128</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="213:13" pos:end="213:29">else<block type="pseudo" pos:start="213:23" pos:end="213:29"><block_content pos:start="213:23" pos:end="213:29">      <expr_stmt pos:start="213:23" pos:end="213:29"><expr pos:start="213:23" pos:end="213:28"><name pos:start="213:23" pos:end="213:23">x</name> <operator pos:start="213:25" pos:end="213:25">=</operator> <operator pos:start="213:27" pos:end="213:27">-</operator><name pos:start="213:28" pos:end="213:28">x</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:32"><expr pos:start="215:13" pos:end="215:31"><operator pos:start="215:13" pos:end="215:13">*</operator><name pos:start="215:14" pos:end="215:20">samples</name><operator pos:start="215:21" pos:end="215:22">++</operator> <operator pos:start="215:24" pos:end="215:24">=</operator> <name pos:start="215:26" pos:end="215:26">x</name> <operator pos:start="215:28" pos:end="215:29">&lt;&lt;</operator> <literal type="number" pos:start="215:31" pos:end="215:31">8</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="219:9" pos:end="219:14">break;</break>

    <case pos:start="221:5" pos:end="221:27">case <expr pos:start="221:10" pos:end="221:26"><name pos:start="221:10" pos:end="221:26">CODEC_ID_PCM_ALAW</name></expr>:</case>

    <case pos:start="223:5" pos:end="223:28">case <expr pos:start="223:10" pos:end="223:27"><name pos:start="223:10" pos:end="223:27">CODEC_ID_PCM_MULAW</name></expr>:</case>

        <expr_stmt pos:start="225:9" pos:end="225:21"><expr pos:start="225:9" pos:end="225:20"><name pos:start="225:9" pos:end="225:9">n</name> <operator pos:start="225:11" pos:end="225:11">=</operator> <name pos:start="225:13" pos:end="225:20">buf_size</name></expr>;</expr_stmt>

        <for pos:start="227:9" pos:end="231:9">for<control pos:start="227:12" pos:end="227:21">(<init pos:start="227:13" pos:end="227:13">;</init><condition pos:start="227:14" pos:end="227:17"><expr pos:start="227:14" pos:end="227:16"><name pos:start="227:14" pos:end="227:14">n</name><operator pos:start="227:15" pos:end="227:15">&gt;</operator><literal type="number" pos:start="227:16" pos:end="227:16">0</literal></expr>;</condition><incr pos:start="227:18" pos:end="227:20"><expr pos:start="227:18" pos:end="227:20"><name pos:start="227:18" pos:end="227:18">n</name><operator pos:start="227:19" pos:end="227:20">--</operator></expr></incr>)</control> <block pos:start="227:23" pos:end="231:9">{<block_content pos:start="229:13" pos:end="229:42">

            <expr_stmt pos:start="229:13" pos:end="229:42"><expr pos:start="229:13" pos:end="229:41"><operator pos:start="229:13" pos:end="229:13">*</operator><name pos:start="229:14" pos:end="229:20">samples</name><operator pos:start="229:21" pos:end="229:22">++</operator> <operator pos:start="229:24" pos:end="229:24">=</operator> <name pos:start="229:26" pos:end="229:41"><name pos:start="229:26" pos:end="229:26">s</name><operator pos:start="229:27" pos:end="229:28">-&gt;</operator><name pos:start="229:29" pos:end="229:33">table</name><index pos:start="229:34" pos:end="229:41">[<expr pos:start="229:35" pos:end="229:40"><operator pos:start="229:35" pos:end="229:35">*</operator><name pos:start="229:36" pos:end="229:38">src</name><operator pos:start="229:39" pos:end="229:40">++</operator></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="233:9" pos:end="233:14">break;</break>

    <default pos:start="235:5" pos:end="235:12">default:</default>

        <return pos:start="237:9" pos:end="237:18">return <expr pos:start="237:16" pos:end="237:17"><operator pos:start="237:16" pos:end="237:16">-</operator><literal type="number" pos:start="237:17" pos:end="237:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="241:5" pos:end="241:54"><expr pos:start="241:5" pos:end="241:53"><operator pos:start="241:5" pos:end="241:5">*</operator><name pos:start="241:6" pos:end="241:14">data_size</name> <operator pos:start="241:16" pos:end="241:16">=</operator> <operator pos:start="241:18" pos:end="241:18">(</operator><name pos:start="241:19" pos:end="241:25">uint8_t</name> <operator pos:start="241:27" pos:end="241:27">*</operator><operator pos:start="241:28" pos:end="241:28">)</operator><name pos:start="241:29" pos:end="241:35">samples</name> <operator pos:start="241:37" pos:end="241:37">-</operator> <operator pos:start="241:39" pos:end="241:39">(</operator><name pos:start="241:40" pos:end="241:46">uint8_t</name> <operator pos:start="241:48" pos:end="241:48">*</operator><operator pos:start="241:49" pos:end="241:49">)</operator><name pos:start="241:50" pos:end="241:53">data</name></expr>;</expr_stmt>

    <return pos:start="243:5" pos:end="243:21">return <expr pos:start="243:12" pos:end="243:20"><name pos:start="243:12" pos:end="243:14">src</name> <operator pos:start="243:16" pos:end="243:16">-</operator> <name pos:start="243:18" pos:end="243:20">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
