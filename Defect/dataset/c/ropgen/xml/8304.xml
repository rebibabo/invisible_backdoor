<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8304.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">s390_cpu_full_reset</name><parameter_list pos:start="1:32" pos:end="1:44">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:42"><name pos:start="1:33" pos:end="1:40">CPUState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">S390CPU</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">cpu</name> <init pos:start="5:18" pos:end="5:30">= <expr pos:start="5:20" pos:end="5:30"><call pos:start="5:20" pos:end="5:30"><name pos:start="5:20" pos:end="5:27">S390_CPU</name><argument_list pos:start="5:28" pos:end="5:30">(<argument pos:start="5:29" pos:end="5:29"><expr pos:start="5:29" pos:end="5:29"><name pos:start="5:29" pos:end="5:29">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">S390CPUClass</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">scc</name> <init pos:start="7:23" pos:end="7:47">= <expr pos:start="7:25" pos:end="7:47"><call pos:start="7:25" pos:end="7:47"><name pos:start="7:25" pos:end="7:42">S390_CPU_GET_CLASS</name><argument_list pos:start="7:43" pos:end="7:47">(<argument pos:start="7:44" pos:end="7:46"><expr pos:start="7:44" pos:end="7:46"><name pos:start="7:44" pos:end="7:46">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">CPUS390XState</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">env</name> <init pos:start="9:24" pos:end="9:34">= <expr pos:start="9:26" pos:end="9:34"><operator pos:start="9:26" pos:end="9:26">&amp;</operator><name pos:start="9:27" pos:end="9:34"><name pos:start="9:27" pos:end="9:29">cpu</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:34">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><call pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:7">scc</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:21">parent_reset</name></name><argument_list pos:start="15:22" pos:end="15:24">(<argument pos:start="15:23" pos:end="15:23"><expr pos:start="15:23" pos:end="15:23"><name pos:start="15:23" pos:end="15:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:7">cpu</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:12">env</name><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:23">sigp_order</name></name> <operator pos:start="17:25" pos:end="17:25">=</operator> <literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:47"><expr pos:start="19:5" pos:end="19:46"><call pos:start="19:5" pos:end="19:46"><name pos:start="19:5" pos:end="19:22">s390_cpu_set_state</name><argument_list pos:start="19:23" pos:end="19:46">(<argument pos:start="19:24" pos:end="19:40"><expr pos:start="19:24" pos:end="19:40"><name pos:start="19:24" pos:end="19:40">CPU_STATE_STOPPED</name></expr></argument>, <argument pos:start="19:43" pos:end="19:45"><expr pos:start="19:43" pos:end="19:45"><name pos:start="19:43" pos:end="19:45">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:62"><expr pos:start="23:5" pos:end="23:61"><call pos:start="23:5" pos:end="23:61"><name pos:start="23:5" pos:end="23:10">memset</name><argument_list pos:start="23:11" pos:end="23:61">(<argument pos:start="23:12" pos:end="23:14"><expr pos:start="23:12" pos:end="23:14"><name pos:start="23:12" pos:end="23:14">env</name></expr></argument>, <argument pos:start="23:17" pos:end="23:17"><expr pos:start="23:17" pos:end="23:17"><literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr></argument>, <argument pos:start="23:20" pos:end="23:60"><expr pos:start="23:20" pos:end="23:60"><call pos:start="23:20" pos:end="23:60"><name pos:start="23:20" pos:end="23:27">offsetof</name><argument_list pos:start="23:28" pos:end="23:60">(<argument pos:start="23:29" pos:end="23:41"><expr pos:start="23:29" pos:end="23:41"><name pos:start="23:29" pos:end="23:41">CPUS390XState</name></expr></argument>, <argument pos:start="23:44" pos:end="23:59"><expr pos:start="23:44" pos:end="23:59"><name pos:start="23:44" pos:end="23:59">end_reset_fields</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:54">/* architectured initial values for CR 0 and 14 */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:7">env</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:14">cregs</name><index pos:start="29:15" pos:end="29:17">[<expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>]</index></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:29">CR0_RESET</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:7">env</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:14">cregs</name><index pos:start="31:15" pos:end="31:18">[<expr pos:start="31:16" pos:end="31:17"><literal type="number" pos:start="31:16" pos:end="31:17">14</literal></expr>]</index></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:31">CR14_RESET</name></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:73">/* architectured initial value for Breaking-Event-Address register */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:18"><expr pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:7">env</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:13">gbea</name></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:29"><expr pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:7">env</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:21">pfault_token</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <operator pos:start="41:25" pos:end="41:25">-</operator><literal type="number" pos:start="41:26" pos:end="41:28">1UL</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:24"><expr pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:7">env</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:18">ext_index</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <operator pos:start="43:22" pos:end="43:22">-</operator><literal type="number" pos:start="43:23" pos:end="43:23">1</literal></expr>;</expr_stmt>

    <for pos:start="45:5" pos:end="49:5">for <control pos:start="45:9" pos:end="45:51">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:46"><expr pos:start="45:17" pos:end="45:45"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <call pos:start="45:21" pos:end="45:45"><name pos:start="45:21" pos:end="45:30">ARRAY_SIZE</name><argument_list pos:start="45:31" pos:end="45:45">(<argument pos:start="45:32" pos:end="45:44"><expr pos:start="45:32" pos:end="45:44"><name pos:start="45:32" pos:end="45:44"><name pos:start="45:32" pos:end="45:34">env</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:44">io_index</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="45:48" pos:end="45:50"><expr pos:start="45:48" pos:end="45:50"><name pos:start="45:48" pos:end="45:48">i</name><operator pos:start="45:49" pos:end="45:50">++</operator></expr></incr>)</control> <block pos:start="45:53" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:30">

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:11">env</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:21">io_index</name><index pos:start="47:22" pos:end="47:24">[<expr pos:start="47:23" pos:end="47:23"><name pos:start="47:23" pos:end="47:23">i</name></expr>]</index></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <operator pos:start="47:28" pos:end="47:28">-</operator><literal type="number" pos:start="47:29" pos:end="47:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="51:5" pos:end="51:25"><expr pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:7">env</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:19">mchk_index</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <operator pos:start="51:23" pos:end="51:23">-</operator><literal type="number" pos:start="51:24" pos:end="51:24">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:60">/* tininess for underflow is detected before rounding */</comment>

    <expr_stmt pos:start="57:5" pos:end="59:48"><expr pos:start="57:5" pos:end="59:47"><call pos:start="57:5" pos:end="59:47"><name pos:start="57:5" pos:end="57:29">set_float_detect_tininess</name><argument_list pos:start="57:30" pos:end="59:47">(<argument pos:start="57:31" pos:end="57:60"><expr pos:start="57:31" pos:end="57:60"><name pos:start="57:31" pos:end="57:60">float_tininess_before_rounding</name></expr></argument>,

                              <argument pos:start="59:31" pos:end="59:46"><expr pos:start="59:31" pos:end="59:46"><operator pos:start="59:31" pos:end="59:31">&amp;</operator><name pos:start="59:32" pos:end="59:46"><name pos:start="59:32" pos:end="59:34">env</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:46">fpu_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:76">/* Reset state inside the kernel that we cannot access yet from QEMU. */</comment>

    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:22">(<expr pos:start="65:9" pos:end="65:21"><call pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:19">kvm_enabled</name><argument_list pos:start="65:20" pos:end="65:21">()</argument_list></call></expr>)</condition> <block pos:start="65:24" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:33">

        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><call pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:27">kvm_s390_reset_vcpu</name><argument_list pos:start="67:28" pos:end="67:32">(<argument pos:start="67:29" pos:end="67:31"><expr pos:start="67:29" pos:end="67:31"><name pos:start="67:29" pos:end="67:31">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
