<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27181.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">qcow2_snapshot_create</name><parameter_list pos:start="1:26" pos:end="1:74">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:73"><decl pos:start="1:49" pos:end="1:73"><type pos:start="1:49" pos:end="1:73"><name pos:start="1:49" pos:end="1:64">QEMUSnapshotInfo</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:73">sn_info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="241:1">{<block_content pos:start="5:5" pos:end="239:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">BDRVQcow2State</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:34">= <expr pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:26">bs</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">QCowSnapshot</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:35">new_snapshot_list</name> <init pos:start="7:37" pos:end="7:42">= <expr pos:start="7:39" pos:end="7:42"><name pos:start="7:39" pos:end="7:42">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">QCowSnapshot</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:35">old_snapshot_list</name> <init pos:start="9:37" pos:end="9:42">= <expr pos:start="9:39" pos:end="9:42"><name pos:start="9:39" pos:end="9:42">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">QCowSnapshot</name></type> <name pos:start="11:18" pos:end="11:20">sn1</name></decl>, <decl pos:start="11:23" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:16"><modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:25">sn</name> <init pos:start="11:27" pos:end="11:32">= <expr pos:start="11:29" pos:end="11:32"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:32">sn1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">uint64_t</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:22">l1_table</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:27">l1_table_offset</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:46">(<expr pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:23">nb_snapshots</name></name> <operator pos:start="21:25" pos:end="21:26">&gt;=</operator> <name pos:start="21:28" pos:end="21:45">QCOW_MAX_SNAPSHOTS</name></expr>)</condition> <block pos:start="21:48" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:22">

        <return pos:start="23:9" pos:end="23:22">return <expr pos:start="23:16" pos:end="23:21"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:21">EFBIG</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><call pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:10">memset</name><argument_list pos:start="29:11" pos:end="29:30">(<argument pos:start="29:12" pos:end="29:13"><expr pos:start="29:12" pos:end="29:13"><name pos:start="29:12" pos:end="29:13">sn</name></expr></argument>, <argument pos:start="29:16" pos:end="29:16"><expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr></argument>, <argument pos:start="29:19" pos:end="29:29"><expr pos:start="29:19" pos:end="29:29"><sizeof pos:start="29:19" pos:end="29:29">sizeof<argument_list pos:start="29:25" pos:end="29:29">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><operator pos:start="29:26" pos:end="29:26">*</operator><name pos:start="29:27" pos:end="29:28">sn</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:24">/* Generate an ID */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:71"><expr pos:start="35:5" pos:end="35:70"><call pos:start="35:5" pos:end="35:70"><name pos:start="35:5" pos:end="35:24">find_new_snapshot_id</name><argument_list pos:start="35:25" pos:end="35:70">(<argument pos:start="35:26" pos:end="35:27"><expr pos:start="35:26" pos:end="35:27"><name pos:start="35:26" pos:end="35:27">bs</name></expr></argument>, <argument pos:start="35:30" pos:end="35:44"><expr pos:start="35:30" pos:end="35:44"><name pos:start="35:30" pos:end="35:44"><name pos:start="35:30" pos:end="35:36">sn_info</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:44">id_str</name></name></expr></argument>, <argument pos:start="35:47" pos:end="35:69"><expr pos:start="35:47" pos:end="35:69"><sizeof pos:start="35:47" pos:end="35:69">sizeof<argument_list pos:start="35:53" pos:end="35:69">(<argument pos:start="35:54" pos:end="35:68"><expr pos:start="35:54" pos:end="35:68"><name pos:start="35:54" pos:end="35:68"><name pos:start="35:54" pos:end="35:60">sn_info</name><operator pos:start="35:61" pos:end="35:62">-&gt;</operator><name pos:start="35:63" pos:end="35:68">id_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:37">/* Check that the ID is unique */</comment>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:69">(<expr pos:start="41:9" pos:end="41:68"><call pos:start="41:9" pos:end="41:63"><name pos:start="41:9" pos:end="41:36">find_snapshot_by_id_and_name</name><argument_list pos:start="41:37" pos:end="41:63">(<argument pos:start="41:38" pos:end="41:39"><expr pos:start="41:38" pos:end="41:39"><name pos:start="41:38" pos:end="41:39">bs</name></expr></argument>, <argument pos:start="41:42" pos:end="41:56"><expr pos:start="41:42" pos:end="41:56"><name pos:start="41:42" pos:end="41:56"><name pos:start="41:42" pos:end="41:48">sn_info</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:56">id_str</name></name></expr></argument>, <argument pos:start="41:59" pos:end="41:62"><expr pos:start="41:59" pos:end="41:62"><name pos:start="41:59" pos:end="41:62">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="41:65" pos:end="41:66">&gt;=</operator> <literal type="number" pos:start="41:68" pos:end="41:68">0</literal></expr>)</condition> <block pos:start="41:71" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:23">

        <return pos:start="43:9" pos:end="43:23">return <expr pos:start="43:16" pos:end="43:22"><operator pos:start="43:16" pos:end="43:16">-</operator><name pos:start="43:17" pos:end="43:22">EEXIST</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:38">/* Populate sn with passed data */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:43"><expr pos:start="51:5" pos:end="51:42"><name pos:start="51:5" pos:end="51:14"><name pos:start="51:5" pos:end="51:6">sn</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:14">id_str</name></name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:42"><name pos:start="51:18" pos:end="51:25">g_strdup</name><argument_list pos:start="51:26" pos:end="51:42">(<argument pos:start="51:27" pos:end="51:41"><expr pos:start="51:27" pos:end="51:41"><name pos:start="51:27" pos:end="51:41"><name pos:start="51:27" pos:end="51:33">sn_info</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:41">id_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:6">sn</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:12">name</name></name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="53:38"><name pos:start="53:16" pos:end="53:23">g_strdup</name><argument_list pos:start="53:24" pos:end="53:38">(<argument pos:start="53:25" pos:end="53:37"><expr pos:start="53:25" pos:end="53:37"><name pos:start="53:25" pos:end="53:37"><name pos:start="53:25" pos:end="53:31">sn_info</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:37">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:57"><expr pos:start="57:5" pos:end="57:56"><name pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:6">sn</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:17">disk_size</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:37"><name pos:start="57:21" pos:end="57:22">bs</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:37">total_sectors</name></name> <operator pos:start="57:39" pos:end="57:39">*</operator> <name pos:start="57:41" pos:end="57:56">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:47"><expr pos:start="59:5" pos:end="59:46"><name pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:6">sn</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:21">vm_state_size</name></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <name pos:start="59:25" pos:end="59:46"><name pos:start="59:25" pos:end="59:31">sn_info</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:46">vm_state_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:37"><expr pos:start="61:5" pos:end="61:36"><name pos:start="61:5" pos:end="61:16"><name pos:start="61:5" pos:end="61:6">sn</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:16">date_sec</name></name> <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:36"><name pos:start="61:20" pos:end="61:26">sn_info</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:36">date_sec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:39"><expr pos:start="63:5" pos:end="63:38"><name pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:6">sn</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:17">date_nsec</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:38"><name pos:start="63:21" pos:end="63:27">sn_info</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:38">date_nsec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:47"><expr pos:start="65:5" pos:end="65:46"><name pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:6">sn</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:21">vm_clock_nsec</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:46"><name pos:start="65:25" pos:end="65:31">sn_info</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:46">vm_clock_nsec</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:79">/* Allocate the L1 table of the snapshot and copy the current one there. */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:78"><expr pos:start="71:5" pos:end="71:77"><name pos:start="71:5" pos:end="71:19">l1_table_offset</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <call pos:start="71:23" pos:end="71:77"><name pos:start="71:23" pos:end="71:42">qcow2_alloc_clusters</name><argument_list pos:start="71:43" pos:end="71:77">(<argument pos:start="71:44" pos:end="71:45"><expr pos:start="71:44" pos:end="71:45"><name pos:start="71:44" pos:end="71:45">bs</name></expr></argument>, <argument pos:start="71:48" pos:end="71:76"><expr pos:start="71:48" pos:end="71:76"><name pos:start="71:48" pos:end="71:57"><name pos:start="71:48" pos:end="71:48">s</name><operator pos:start="71:49" pos:end="71:50">-&gt;</operator><name pos:start="71:51" pos:end="71:57">l1_size</name></name> <operator pos:start="71:59" pos:end="71:59">*</operator> <sizeof pos:start="71:61" pos:end="71:76">sizeof<argument_list pos:start="71:67" pos:end="71:76">(<argument pos:start="71:68" pos:end="71:75"><expr pos:start="71:68" pos:end="71:75"><name pos:start="71:68" pos:end="71:75">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:28">(<expr pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:23">l1_table_offset</name> <operator pos:start="73:25" pos:end="73:25">&lt;</operator> <literal type="number" pos:start="73:27" pos:end="73:27">0</literal></expr>)</condition> <block pos:start="73:30" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:18">

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:29">l1_table_offset</name></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:18">goto <name pos:start="77:14" pos:end="77:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:42"><expr pos:start="83:5" pos:end="83:41"><name pos:start="83:5" pos:end="83:23"><name pos:start="83:5" pos:end="83:6">sn</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:23">l1_table_offset</name></name> <operator pos:start="83:25" pos:end="83:25">=</operator> <name pos:start="83:27" pos:end="83:41">l1_table_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:29"><expr pos:start="85:5" pos:end="85:28"><name pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:6">sn</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:15">l1_size</name></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <name pos:start="85:19" pos:end="85:28"><name pos:start="85:19" pos:end="85:19">s</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:28">l1_size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:47"><expr pos:start="89:5" pos:end="89:46"><name pos:start="89:5" pos:end="89:12">l1_table</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <call pos:start="89:16" pos:end="89:46"><name pos:start="89:16" pos:end="89:24">g_try_new</name><argument_list pos:start="89:25" pos:end="89:46">(<argument pos:start="89:26" pos:end="89:33"><expr pos:start="89:26" pos:end="89:33"><name pos:start="89:26" pos:end="89:33">uint64_t</name></expr></argument>, <argument pos:start="89:36" pos:end="89:45"><expr pos:start="89:36" pos:end="89:45"><name pos:start="89:36" pos:end="89:45"><name pos:start="89:36" pos:end="89:36">s</name><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:45">l1_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:39">(<expr pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:18"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:18">l1_size</name></name> <operator pos:start="91:20" pos:end="91:21">&amp;&amp;</operator> <name pos:start="91:23" pos:end="91:30">l1_table</name> <operator pos:start="91:32" pos:end="91:33">==</operator> <name pos:start="91:35" pos:end="91:38">NULL</name></expr>)</condition> <block pos:start="91:41" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:18">

        <expr_stmt pos:start="93:9" pos:end="93:22"><expr pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <operator pos:start="93:15" pos:end="93:15">-</operator><name pos:start="93:16" pos:end="93:21">ENOMEM</name></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:18">goto <name pos:start="95:14" pos:end="95:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="101:5" pos:end="105:5">for<control pos:start="101:8" pos:end="101:35">(<init pos:start="101:9" pos:end="101:14"><expr pos:start="101:9" pos:end="101:13"><name pos:start="101:9" pos:end="101:9">i</name> <operator pos:start="101:11" pos:end="101:11">=</operator> <literal type="number" pos:start="101:13" pos:end="101:13">0</literal></expr>;</init> <condition pos:start="101:16" pos:end="101:30"><expr pos:start="101:16" pos:end="101:29"><name pos:start="101:16" pos:end="101:16">i</name> <operator pos:start="101:18" pos:end="101:18">&lt;</operator> <name pos:start="101:20" pos:end="101:29"><name pos:start="101:20" pos:end="101:20">s</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:29">l1_size</name></name></expr>;</condition> <incr pos:start="101:32" pos:end="101:34"><expr pos:start="101:32" pos:end="101:34"><name pos:start="101:32" pos:end="101:32">i</name><operator pos:start="101:33" pos:end="101:34">++</operator></expr></incr>)</control> <block pos:start="101:37" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:50">

        <expr_stmt pos:start="103:9" pos:end="103:50"><expr pos:start="103:9" pos:end="103:49"><name pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:16">l1_table</name><index pos:start="103:17" pos:end="103:19">[<expr pos:start="103:18" pos:end="103:18"><name pos:start="103:18" pos:end="103:18">i</name></expr>]</index></name> <operator pos:start="103:21" pos:end="103:21">=</operator> <call pos:start="103:23" pos:end="103:49"><name pos:start="103:23" pos:end="103:33">cpu_to_be64</name><argument_list pos:start="103:34" pos:end="103:49">(<argument pos:start="103:35" pos:end="103:48"><expr pos:start="103:35" pos:end="103:48"><name pos:start="103:35" pos:end="103:48"><name pos:start="103:35" pos:end="103:35">s</name><operator pos:start="103:36" pos:end="103:37">-&gt;</operator><name pos:start="103:38" pos:end="103:45">l1_table</name><index pos:start="103:46" pos:end="103:48">[<expr pos:start="103:47" pos:end="103:47"><name pos:start="103:47" pos:end="103:47">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="109:5" pos:end="111:71"><expr pos:start="109:5" pos:end="111:70"><name pos:start="109:5" pos:end="109:7">ret</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="111:70"><name pos:start="109:11" pos:end="109:39">qcow2_pre_write_overlap_check</name><argument_list pos:start="109:40" pos:end="111:70">(<argument pos:start="109:41" pos:end="109:42"><expr pos:start="109:41" pos:end="109:42"><name pos:start="109:41" pos:end="109:42">bs</name></expr></argument>, <argument pos:start="109:45" pos:end="109:45"><expr pos:start="109:45" pos:end="109:45"><literal type="number" pos:start="109:45" pos:end="109:45">0</literal></expr></argument>, <argument pos:start="109:48" pos:end="109:66"><expr pos:start="109:48" pos:end="109:66"><name pos:start="109:48" pos:end="109:66"><name pos:start="109:48" pos:end="109:49">sn</name><operator pos:start="109:50" pos:end="109:51">-&gt;</operator><name pos:start="109:52" pos:end="109:66">l1_table_offset</name></name></expr></argument>,

                                        <argument pos:start="111:41" pos:end="111:69"><expr pos:start="111:41" pos:end="111:69"><name pos:start="111:41" pos:end="111:50"><name pos:start="111:41" pos:end="111:41">s</name><operator pos:start="111:42" pos:end="111:43">-&gt;</operator><name pos:start="111:44" pos:end="111:50">l1_size</name></name> <operator pos:start="111:52" pos:end="111:52">*</operator> <sizeof pos:start="111:54" pos:end="111:69">sizeof<argument_list pos:start="111:60" pos:end="111:69">(<argument pos:start="111:61" pos:end="111:68"><expr pos:start="111:61" pos:end="111:68"><name pos:start="111:61" pos:end="111:68">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:16">(<expr pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:11">ret</name> <operator pos:start="113:13" pos:end="113:13">&lt;</operator> <literal type="number" pos:start="113:15" pos:end="113:15">0</literal></expr>)</condition> <block pos:start="113:18" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:18">

        <goto pos:start="115:9" pos:end="115:18">goto <name pos:start="115:14" pos:end="115:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="123:53"><expr pos:start="121:5" pos:end="123:52"><name pos:start="121:5" pos:end="121:7">ret</name> <operator pos:start="121:9" pos:end="121:9">=</operator> <call pos:start="121:11" pos:end="123:52"><name pos:start="121:11" pos:end="121:21">bdrv_pwrite</name><argument_list pos:start="121:22" pos:end="123:52">(<argument pos:start="121:23" pos:end="121:30"><expr pos:start="121:23" pos:end="121:30"><name pos:start="121:23" pos:end="121:30"><name pos:start="121:23" pos:end="121:24">bs</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:30">file</name></name></expr></argument>, <argument pos:start="121:33" pos:end="121:51"><expr pos:start="121:33" pos:end="121:51"><name pos:start="121:33" pos:end="121:51"><name pos:start="121:33" pos:end="121:34">sn</name><operator pos:start="121:35" pos:end="121:36">-&gt;</operator><name pos:start="121:37" pos:end="121:51">l1_table_offset</name></name></expr></argument>, <argument pos:start="121:54" pos:end="121:61"><expr pos:start="121:54" pos:end="121:61"><name pos:start="121:54" pos:end="121:61">l1_table</name></expr></argument>,

                      <argument pos:start="123:23" pos:end="123:51"><expr pos:start="123:23" pos:end="123:51"><name pos:start="123:23" pos:end="123:32"><name pos:start="123:23" pos:end="123:23">s</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:32">l1_size</name></name> <operator pos:start="123:34" pos:end="123:34">*</operator> <sizeof pos:start="123:36" pos:end="123:51">sizeof<argument_list pos:start="123:42" pos:end="123:51">(<argument pos:start="123:43" pos:end="123:50"><expr pos:start="123:43" pos:end="123:50"><name pos:start="123:43" pos:end="123:50">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="129:5"><if pos:start="125:5" pos:end="129:5">if <condition pos:start="125:8" pos:end="125:16">(<expr pos:start="125:9" pos:end="125:15"><name pos:start="125:9" pos:end="125:11">ret</name> <operator pos:start="125:13" pos:end="125:13">&lt;</operator> <literal type="number" pos:start="125:15" pos:end="125:15">0</literal></expr>)</condition> <block pos:start="125:18" pos:end="129:5">{<block_content pos:start="127:9" pos:end="127:18">

        <goto pos:start="127:9" pos:end="127:18">goto <name pos:start="127:14" pos:end="127:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:21"><expr pos:start="133:5" pos:end="133:20"><call pos:start="133:5" pos:end="133:20"><name pos:start="133:5" pos:end="133:10">g_free</name><argument_list pos:start="133:11" pos:end="133:20">(<argument pos:start="133:12" pos:end="133:19"><expr pos:start="133:12" pos:end="133:19"><name pos:start="133:12" pos:end="133:19">l1_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:20"><expr pos:start="135:5" pos:end="135:19"><name pos:start="135:5" pos:end="135:12">l1_table</name> <operator pos:start="135:14" pos:end="135:14">=</operator> <name pos:start="135:16" pos:end="135:19">NULL</name></expr>;</expr_stmt>



    <comment type="block" pos:start="139:5" pos:end="147:7">/*

     * Increase the refcounts of all clusters and make sure everything is

     * stable on disk before updating the snapshot table to contain a pointer

     * to the new L1 table.

     */</comment>

    <expr_stmt pos:start="149:5" pos:end="149:80"><expr pos:start="149:5" pos:end="149:79"><name pos:start="149:5" pos:end="149:7">ret</name> <operator pos:start="149:9" pos:end="149:9">=</operator> <call pos:start="149:11" pos:end="149:79"><name pos:start="149:11" pos:end="149:40">qcow2_update_snapshot_refcount</name><argument_list pos:start="149:41" pos:end="149:79">(<argument pos:start="149:42" pos:end="149:43"><expr pos:start="149:42" pos:end="149:43"><name pos:start="149:42" pos:end="149:43">bs</name></expr></argument>, <argument pos:start="149:46" pos:end="149:63"><expr pos:start="149:46" pos:end="149:63"><name pos:start="149:46" pos:end="149:63"><name pos:start="149:46" pos:end="149:46">s</name><operator pos:start="149:47" pos:end="149:48">-&gt;</operator><name pos:start="149:49" pos:end="149:63">l1_table_offset</name></name></expr></argument>, <argument pos:start="149:66" pos:end="149:75"><expr pos:start="149:66" pos:end="149:75"><name pos:start="149:66" pos:end="149:75"><name pos:start="149:66" pos:end="149:66">s</name><operator pos:start="149:67" pos:end="149:68">-&gt;</operator><name pos:start="149:69" pos:end="149:75">l1_size</name></name></expr></argument>, <argument pos:start="149:78" pos:end="149:78"><expr pos:start="149:78" pos:end="149:78"><literal type="number" pos:start="149:78" pos:end="149:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="155:5"><if pos:start="151:5" pos:end="155:5">if <condition pos:start="151:8" pos:end="151:16">(<expr pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:11">ret</name> <operator pos:start="151:13" pos:end="151:13">&lt;</operator> <literal type="number" pos:start="151:15" pos:end="151:15">0</literal></expr>)</condition> <block pos:start="151:18" pos:end="155:5">{<block_content pos:start="153:9" pos:end="153:18">

        <goto pos:start="153:9" pos:end="153:18">goto <name pos:start="153:14" pos:end="153:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="159:5" pos:end="159:54">/* Append the new snapshot to the snapshot list */</comment>

    <expr_stmt pos:start="161:5" pos:end="161:65"><expr pos:start="161:5" pos:end="161:64"><name pos:start="161:5" pos:end="161:21">new_snapshot_list</name> <operator pos:start="161:23" pos:end="161:23">=</operator> <call pos:start="161:25" pos:end="161:64"><name pos:start="161:25" pos:end="161:29">g_new</name><argument_list pos:start="161:30" pos:end="161:64">(<argument pos:start="161:31" pos:end="161:42"><expr pos:start="161:31" pos:end="161:42"><name pos:start="161:31" pos:end="161:42">QCowSnapshot</name></expr></argument>, <argument pos:start="161:45" pos:end="161:63"><expr pos:start="161:45" pos:end="161:63"><name pos:start="161:45" pos:end="161:59"><name pos:start="161:45" pos:end="161:45">s</name><operator pos:start="161:46" pos:end="161:47">-&gt;</operator><name pos:start="161:48" pos:end="161:59">nb_snapshots</name></name> <operator pos:start="161:61" pos:end="161:61">+</operator> <literal type="number" pos:start="161:63" pos:end="161:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="171:5"><if pos:start="163:5" pos:end="171:5">if <condition pos:start="163:8" pos:end="163:21">(<expr pos:start="163:9" pos:end="163:20"><name pos:start="163:9" pos:end="163:20"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:20">snapshots</name></name></expr>)</condition> <block pos:start="163:23" pos:end="171:5">{<block_content pos:start="165:9" pos:end="169:41">

        <expr_stmt pos:start="165:9" pos:end="167:55"><expr pos:start="165:9" pos:end="167:54"><call pos:start="165:9" pos:end="167:54"><name pos:start="165:9" pos:end="165:14">memcpy</name><argument_list pos:start="165:15" pos:end="167:54">(<argument pos:start="165:16" pos:end="165:32"><expr pos:start="165:16" pos:end="165:32"><name pos:start="165:16" pos:end="165:32">new_snapshot_list</name></expr></argument>, <argument pos:start="165:35" pos:end="165:46"><expr pos:start="165:35" pos:end="165:46"><name pos:start="165:35" pos:end="165:46"><name pos:start="165:35" pos:end="165:35">s</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:46">snapshots</name></name></expr></argument>,

               <argument pos:start="167:16" pos:end="167:53"><expr pos:start="167:16" pos:end="167:53"><name pos:start="167:16" pos:end="167:30"><name pos:start="167:16" pos:end="167:16">s</name><operator pos:start="167:17" pos:end="167:18">-&gt;</operator><name pos:start="167:19" pos:end="167:30">nb_snapshots</name></name> <operator pos:start="167:32" pos:end="167:32">*</operator> <sizeof pos:start="167:34" pos:end="167:53">sizeof<argument_list pos:start="167:40" pos:end="167:53">(<argument pos:start="167:41" pos:end="167:52"><expr pos:start="167:41" pos:end="167:52"><name pos:start="167:41" pos:end="167:52">QCowSnapshot</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:41"><expr pos:start="169:9" pos:end="169:40"><name pos:start="169:9" pos:end="169:25">old_snapshot_list</name> <operator pos:start="169:27" pos:end="169:27">=</operator> <name pos:start="169:29" pos:end="169:40"><name pos:start="169:29" pos:end="169:29">s</name><operator pos:start="169:30" pos:end="169:31">-&gt;</operator><name pos:start="169:32" pos:end="169:40">snapshots</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:37"><expr pos:start="173:5" pos:end="173:36"><name pos:start="173:5" pos:end="173:16"><name pos:start="173:5" pos:end="173:5">s</name><operator pos:start="173:6" pos:end="173:7">-&gt;</operator><name pos:start="173:8" pos:end="173:16">snapshots</name></name> <operator pos:start="173:18" pos:end="173:18">=</operator> <name pos:start="173:20" pos:end="173:36">new_snapshot_list</name></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:42"><expr pos:start="175:5" pos:end="175:41"><name pos:start="175:5" pos:end="175:35"><name pos:start="175:5" pos:end="175:5">s</name><operator pos:start="175:6" pos:end="175:7">-&gt;</operator><name pos:start="175:8" pos:end="175:16">snapshots</name><index pos:start="175:17" pos:end="175:35">[<expr pos:start="175:18" pos:end="175:34"><name pos:start="175:18" pos:end="175:32"><name pos:start="175:18" pos:end="175:18">s</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:32">nb_snapshots</name></name><operator pos:start="175:33" pos:end="175:34">++</operator></expr>]</index></name> <operator pos:start="175:37" pos:end="175:37">=</operator> <operator pos:start="175:39" pos:end="175:39">*</operator><name pos:start="175:40" pos:end="175:41">sn</name></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:36"><expr pos:start="179:5" pos:end="179:35"><name pos:start="179:5" pos:end="179:7">ret</name> <operator pos:start="179:9" pos:end="179:9">=</operator> <call pos:start="179:11" pos:end="179:35"><name pos:start="179:11" pos:end="179:31">qcow2_write_snapshots</name><argument_list pos:start="179:32" pos:end="179:35">(<argument pos:start="179:33" pos:end="179:34"><expr pos:start="179:33" pos:end="179:34"><name pos:start="179:33" pos:end="179:34">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="181:5" pos:end="191:5"><if pos:start="181:5" pos:end="191:5">if <condition pos:start="181:8" pos:end="181:16">(<expr pos:start="181:9" pos:end="181:15"><name pos:start="181:9" pos:end="181:11">ret</name> <operator pos:start="181:13" pos:end="181:13">&lt;</operator> <literal type="number" pos:start="181:15" pos:end="181:15">0</literal></expr>)</condition> <block pos:start="181:18" pos:end="191:5">{<block_content pos:start="183:9" pos:end="189:18">

        <expr_stmt pos:start="183:9" pos:end="183:29"><expr pos:start="183:9" pos:end="183:28"><call pos:start="183:9" pos:end="183:28"><name pos:start="183:9" pos:end="183:14">g_free</name><argument_list pos:start="183:15" pos:end="183:28">(<argument pos:start="183:16" pos:end="183:27"><expr pos:start="183:16" pos:end="183:27"><name pos:start="183:16" pos:end="183:27"><name pos:start="183:16" pos:end="183:16">s</name><operator pos:start="183:17" pos:end="183:18">-&gt;</operator><name pos:start="183:19" pos:end="183:27">snapshots</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:41"><expr pos:start="185:9" pos:end="185:40"><name pos:start="185:9" pos:end="185:20"><name pos:start="185:9" pos:end="185:9">s</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:20">snapshots</name></name> <operator pos:start="185:22" pos:end="185:22">=</operator> <name pos:start="185:24" pos:end="185:40">old_snapshot_list</name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:26"><expr pos:start="187:9" pos:end="187:25"><name pos:start="187:9" pos:end="187:23"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:23">nb_snapshots</name></name><operator pos:start="187:24" pos:end="187:25">--</operator></expr>;</expr_stmt>

        <goto pos:start="189:9" pos:end="189:18">goto <name pos:start="189:14" pos:end="189:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:30"><expr pos:start="195:5" pos:end="195:29"><call pos:start="195:5" pos:end="195:29"><name pos:start="195:5" pos:end="195:10">g_free</name><argument_list pos:start="195:11" pos:end="195:29">(<argument pos:start="195:12" pos:end="195:28"><expr pos:start="195:12" pos:end="195:28"><name pos:start="195:12" pos:end="195:28">old_snapshot_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="199:5" pos:end="201:63">/* The VM state isn't needed any more in the active L1 table; in fact, it

     * hurts by causing expensive COW for the next snapshot. */</comment>

    <expr_stmt pos:start="203:5" pos:end="214:0"><expr pos:start="203:5" pos:end="209:54"><call pos:start="203:5" pos:end="209:54"><name pos:start="203:5" pos:end="203:26">qcow2_discard_clusters</name><argument_list pos:start="203:27" pos:end="209:54">(<argument pos:start="203:28" pos:end="203:29"><expr pos:start="203:28" pos:end="203:29"><name pos:start="203:28" pos:end="203:29">bs</name></expr></argument>, <argument pos:start="203:32" pos:end="203:55"><expr pos:start="203:32" pos:end="203:55"><call pos:start="203:32" pos:end="203:55"><name pos:start="203:32" pos:end="203:52">qcow2_vm_state_offset</name><argument_list pos:start="203:53" pos:end="203:55">(<argument pos:start="203:54" pos:end="203:54"><expr pos:start="203:54" pos:end="203:54"><name pos:start="203:54" pos:end="203:54">s</name></expr></argument>)</argument_list></call></expr></argument>,

                           <argument pos:start="205:28" pos:end="207:51"><expr pos:start="205:28" pos:end="207:51"><call pos:start="205:28" pos:end="205:75"><name pos:start="205:28" pos:end="205:39">align_offset</name><argument_list pos:start="205:40" pos:end="205:75">(<argument pos:start="205:41" pos:end="205:57"><expr pos:start="205:41" pos:end="205:57"><name pos:start="205:41" pos:end="205:57"><name pos:start="205:41" pos:end="205:42">sn</name><operator pos:start="205:43" pos:end="205:44">-&gt;</operator><name pos:start="205:45" pos:end="205:57">vm_state_size</name></name></expr></argument>, <argument pos:start="205:60" pos:end="205:74"><expr pos:start="205:60" pos:end="205:74"><name pos:start="205:60" pos:end="205:74"><name pos:start="205:60" pos:end="205:60">s</name><operator pos:start="205:61" pos:end="205:62">-&gt;</operator><name pos:start="205:63" pos:end="205:74">cluster_size</name></name></expr></argument>)</argument_list></call>

                                <operator pos:start="207:33" pos:end="207:34">&gt;&gt;</operator> <name pos:start="207:36" pos:end="207:51">BDRV_SECTOR_BITS</name></expr></argument>,

                           <argument pos:start="209:28" pos:end="209:46"><expr pos:start="209:28" pos:end="209:46"><name pos:start="209:28" pos:end="209:46">QCOW2_DISCARD_NEVER</name></expr></argument>, <argument pos:start="209:49" pos:end="209:53"><expr pos:start="209:49" pos:end="209:53"><name pos:start="209:49" pos:end="209:53">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="213:1" pos:end="213:18">#<cpp:directive pos:start="213:2" pos:end="213:6">ifdef</cpp:directive> <name pos:start="213:8" pos:end="213:18">DEBUG_ALLOC</name></cpp:ifdef>

    <block pos:start="215:5" pos:end="224:0">{<block_content pos:start="217:7" pos:end="219:44">

      <decl_stmt pos:start="217:7" pos:end="217:35"><decl pos:start="217:7" pos:end="217:34"><type pos:start="217:7" pos:end="217:21"><name pos:start="217:7" pos:end="217:21">BdrvCheckResult</name></type> <name pos:start="217:23" pos:end="217:28">result</name> <init pos:start="217:30" pos:end="217:34">= <expr pos:start="217:32" pos:end="217:34"><block pos:start="217:32" pos:end="217:34">{<expr pos:start="217:33" pos:end="217:33"><literal type="number" pos:start="217:33" pos:end="217:33">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

      <expr_stmt pos:start="219:7" pos:end="219:44"><expr pos:start="219:7" pos:end="219:43"><call pos:start="219:7" pos:end="219:43"><name pos:start="219:7" pos:end="219:27">qcow2_check_refcounts</name><argument_list pos:start="219:28" pos:end="219:43">(<argument pos:start="219:29" pos:end="219:30"><expr pos:start="219:29" pos:end="219:30"><name pos:start="219:29" pos:end="219:30">bs</name></expr></argument>, <argument pos:start="219:33" pos:end="219:39"><expr pos:start="219:33" pos:end="219:39"><operator pos:start="219:33" pos:end="219:33">&amp;</operator><name pos:start="219:34" pos:end="219:39">result</name></expr></argument>, <argument pos:start="219:42" pos:end="219:42"><expr pos:start="219:42" pos:end="219:42"><literal type="number" pos:start="219:42" pos:end="219:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:endif pos:start="223:1" pos:end="223:6">#<cpp:directive pos:start="223:2" pos:end="223:6">endif</cpp:directive></cpp:endif>

    <return pos:start="225:5" pos:end="225:13">return <expr pos:start="225:12" pos:end="225:12"><literal type="number" pos:start="225:12" pos:end="225:12">0</literal></expr>;</return>



<label pos:start="229:1" pos:end="229:5"><name pos:start="229:1" pos:end="229:4">fail</name>:</label>

    <expr_stmt pos:start="231:5" pos:end="231:23"><expr pos:start="231:5" pos:end="231:22"><call pos:start="231:5" pos:end="231:22"><name pos:start="231:5" pos:end="231:10">g_free</name><argument_list pos:start="231:11" pos:end="231:22">(<argument pos:start="231:12" pos:end="231:21"><expr pos:start="231:12" pos:end="231:21"><name pos:start="231:12" pos:end="231:21"><name pos:start="231:12" pos:end="231:13">sn</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:21">id_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:21"><expr pos:start="233:5" pos:end="233:20"><call pos:start="233:5" pos:end="233:20"><name pos:start="233:5" pos:end="233:10">g_free</name><argument_list pos:start="233:11" pos:end="233:20">(<argument pos:start="233:12" pos:end="233:19"><expr pos:start="233:12" pos:end="233:19"><name pos:start="233:12" pos:end="233:19"><name pos:start="233:12" pos:end="233:13">sn</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:19">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:21"><expr pos:start="235:5" pos:end="235:20"><call pos:start="235:5" pos:end="235:20"><name pos:start="235:5" pos:end="235:10">g_free</name><argument_list pos:start="235:11" pos:end="235:20">(<argument pos:start="235:12" pos:end="235:19"><expr pos:start="235:12" pos:end="235:19"><name pos:start="235:12" pos:end="235:19">l1_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="239:5" pos:end="239:15">return <expr pos:start="239:12" pos:end="239:14"><name pos:start="239:12" pos:end="239:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
