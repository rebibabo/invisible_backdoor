<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3480.c" pos:tabs="8"><function pos:start="1:1" pos:end="535:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mpeg_decode_slice</name><parameter_list pos:start="1:29" pos:end="3:63">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:43">MpegEncContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:56"><decl pos:start="1:49" pos:end="1:56"><type pos:start="1:49" pos:end="1:56"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:56">mb_y</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:48"><decl pos:start="3:30" pos:end="3:48"><type pos:start="3:30" pos:end="3:48"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier><modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">buf</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:62"><decl pos:start="3:51" pos:end="3:62"><type pos:start="3:51" pos:end="3:62"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:62">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="535:1">{<block_content pos:start="7:5" pos:end="533:13">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">avctx</name> <init pos:start="7:27" pos:end="7:36">= <expr pos:start="7:29" pos:end="7:36"><name pos:start="7:29" pos:end="7:36"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:36">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:20">lowres</name>      <init pos:start="9:27" pos:end="9:44">= <expr pos:start="9:29" pos:end="9:44"><name pos:start="9:29" pos:end="9:44"><name pos:start="9:29" pos:end="9:29">s</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:36">avctx</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:44">lowres</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:63"><decl pos:start="11:5" pos:end="11:62"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:23">field_pic</name>   <init pos:start="11:27" pos:end="11:62">= <expr pos:start="11:29" pos:end="11:62"><name pos:start="11:29" pos:end="11:48"><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:48">picture_structure</name></name> <operator pos:start="11:50" pos:end="11:51">!=</operator> <name pos:start="11:53" pos:end="11:62">PICT_FRAME</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:24"><expr pos:start="17:5" pos:end="19:23"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:18">resync_mb_x</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator>

    <name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:18">resync_mb_y</name></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <operator pos:start="19:22" pos:end="19:22">-</operator><literal type="number" pos:start="19:23" pos:end="19:23">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:14">av_assert0</name><argument_list pos:start="23:15" pos:end="23:35">(<argument pos:start="23:16" pos:end="23:34"><expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:19">mb_y</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <name pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:23">s</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:34">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><call pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:17">init_get_bits</name><argument_list pos:start="27:18" pos:end="27:45">(<argument pos:start="27:19" pos:end="27:24"><expr pos:start="27:19" pos:end="27:24"><operator pos:start="27:19" pos:end="27:19">&amp;</operator><name pos:start="27:20" pos:end="27:24"><name pos:start="27:20" pos:end="27:20">s</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:24">gb</name></name></expr></argument>, <argument pos:start="27:27" pos:end="27:30"><expr pos:start="27:27" pos:end="27:30"><operator pos:start="27:27" pos:end="27:27">*</operator><name pos:start="27:28" pos:end="27:30">buf</name></expr></argument>, <argument pos:start="27:33" pos:end="27:44"><expr pos:start="27:33" pos:end="27:44"><name pos:start="27:33" pos:end="27:40">buf_size</name> <operator pos:start="27:42" pos:end="27:42">*</operator> <literal type="number" pos:start="27:44" pos:end="27:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:29"><if pos:start="29:5" pos:end="31:29">if <condition pos:start="29:8" pos:end="29:72">(<expr pos:start="29:9" pos:end="29:71"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:19">codec_id</name></name> <operator pos:start="29:21" pos:end="29:22">!=</operator> <name pos:start="29:24" pos:end="29:45">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="29:47" pos:end="29:48">&amp;&amp;</operator> <name pos:start="29:50" pos:end="29:61"><name pos:start="29:50" pos:end="29:50">s</name><operator pos:start="29:51" pos:end="29:52">-&gt;</operator><name pos:start="29:53" pos:end="29:61">mb_height</name></name> <operator pos:start="29:63" pos:end="29:63">&gt;</operator> <literal type="number" pos:start="29:65" pos:end="29:68">2800</literal><operator pos:start="29:69" pos:end="29:69">/</operator><literal type="number" pos:start="29:70" pos:end="29:71">16</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:29"><block_content pos:start="31:9" pos:end="31:29">

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><call pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:17">skip_bits</name><argument_list pos:start="31:18" pos:end="31:28">(<argument pos:start="31:19" pos:end="31:24"><expr pos:start="31:19" pos:end="31:24"><operator pos:start="31:19" pos:end="31:19">&amp;</operator><name pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:24">gb</name></name></expr></argument>, <argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><call pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:26">ff_mpeg1_clean_buffers</name><argument_list pos:start="35:27" pos:end="35:29">(<argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><name pos:start="35:28" pos:end="35:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:21">interlaced_dct</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <literal type="number" pos:start="37:25" pos:end="37:25">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:13">qscale</name></name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:29"><name pos:start="41:17" pos:end="41:26">get_qscale</name><argument_list pos:start="41:27" pos:end="41:29">(<argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:23">(<expr pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:17">qscale</name></name> <operator pos:start="45:19" pos:end="45:20">==</operator> <literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>)</condition> <block pos:start="45:25" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:35">

        <expr_stmt pos:start="47:9" pos:end="47:56"><expr pos:start="47:9" pos:end="47:55"><call pos:start="47:9" pos:end="47:55"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:55">(<argument pos:start="47:16" pos:end="47:23"><expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:23">avctx</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:37"><expr pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:40" pos:end="47:54"><expr pos:start="47:40" pos:end="47:54"><literal type="string" pos:start="47:40" pos:end="47:54">"qscale == 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:35">return <expr pos:start="49:16" pos:end="49:34"><name pos:start="49:16" pos:end="49:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:26">/* extra slice info */</comment>

    <if_stmt pos:start="57:5" pos:end="59:35"><if pos:start="57:5" pos:end="59:35">if <condition pos:start="57:8" pos:end="57:42">(<expr pos:start="57:9" pos:end="57:41"><call pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:29">skip_1stop_8data_bits</name><argument_list pos:start="57:30" pos:end="57:37">(<argument pos:start="57:31" pos:end="57:36"><expr pos:start="57:31" pos:end="57:36"><operator pos:start="57:31" pos:end="57:31">&amp;</operator><name pos:start="57:32" pos:end="57:36"><name pos:start="57:32" pos:end="57:32">s</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:36">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="57:39" pos:end="57:39">&lt;</operator> <literal type="number" pos:start="57:41" pos:end="57:41">0</literal></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:35"><block_content pos:start="59:9" pos:end="59:35">

        <return pos:start="59:9" pos:end="59:35">return <expr pos:start="59:16" pos:end="59:34"><name pos:start="59:16" pos:end="59:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:16"><expr pos:start="63:5" pos:end="63:15"><name pos:start="63:5" pos:end="63:11"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:11">mb_x</name></name> <operator pos:start="63:13" pos:end="63:13">=</operator> <literal type="number" pos:start="63:15" pos:end="63:15">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="105:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:53">(<expr pos:start="67:9" pos:end="67:52"><name pos:start="67:9" pos:end="67:12">mb_y</name> <operator pos:start="67:14" pos:end="67:15">==</operator> <literal type="number" pos:start="67:17" pos:end="67:17">0</literal> <operator pos:start="67:19" pos:end="67:20">&amp;&amp;</operator> <name pos:start="67:22" pos:end="67:33"><name pos:start="67:22" pos:end="67:22">s</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:33">codec_tag</name></name> <operator pos:start="67:35" pos:end="67:36">==</operator> <call pos:start="67:38" pos:end="67:52"><name pos:start="67:38" pos:end="67:44">AV_RL32</name><argument_list pos:start="67:45" pos:end="67:52">(<argument pos:start="67:46" pos:end="67:51"><expr pos:start="67:46" pos:end="67:51"><literal type="string" pos:start="67:46" pos:end="67:51">"SLIF"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:55" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:27">

        <expr_stmt pos:start="69:9" pos:end="69:27"><expr pos:start="69:9" pos:end="69:26"><call pos:start="69:9" pos:end="69:26"><name pos:start="69:9" pos:end="69:18">skip_bits1</name><argument_list pos:start="69:19" pos:end="69:26">(<argument pos:start="69:20" pos:end="69:25"><expr pos:start="69:20" pos:end="69:25"><operator pos:start="69:20" pos:end="69:20">&amp;</operator><name pos:start="69:21" pos:end="69:25"><name pos:start="69:21" pos:end="69:21">s</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="105:5">else <block pos:start="71:12" pos:end="105:5">{<block_content pos:start="73:9" pos:end="103:9">

        <while pos:start="73:9" pos:end="103:9">while <condition pos:start="73:15" pos:end="73:41">(<expr pos:start="73:16" pos:end="73:40"><call pos:start="73:16" pos:end="73:36"><name pos:start="73:16" pos:end="73:28">get_bits_left</name><argument_list pos:start="73:29" pos:end="73:36">(<argument pos:start="73:30" pos:end="73:35"><expr pos:start="73:30" pos:end="73:35"><operator pos:start="73:30" pos:end="73:30">&amp;</operator><name pos:start="73:31" pos:end="73:35"><name pos:start="73:31" pos:end="73:31">s</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:35">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="73:38" pos:end="73:38">&gt;</operator> <literal type="number" pos:start="73:40" pos:end="73:40">0</literal></expr>)</condition> <block pos:start="73:43" pos:end="103:9">{<block_content pos:start="75:13" pos:end="101:13">

            <decl_stmt pos:start="75:13" pos:end="77:52"><decl pos:start="75:13" pos:end="77:51"><type pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:15">int</name></type> <name pos:start="75:17" pos:end="75:20">code</name> <init pos:start="75:22" pos:end="77:51">= <expr pos:start="75:24" pos:end="77:51"><call pos:start="75:24" pos:end="77:51"><name pos:start="75:24" pos:end="75:31">get_vlc2</name><argument_list pos:start="75:32" pos:end="77:51">(<argument pos:start="75:33" pos:end="75:38"><expr pos:start="75:33" pos:end="75:38"><operator pos:start="75:33" pos:end="75:33">&amp;</operator><name pos:start="75:34" pos:end="75:38"><name pos:start="75:34" pos:end="75:34">s</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:38">gb</name></name></expr></argument>, <argument pos:start="75:41" pos:end="75:59"><expr pos:start="75:41" pos:end="75:59"><name pos:start="75:41" pos:end="75:59"><name pos:start="75:41" pos:end="75:53">ff_mbincr_vlc</name><operator pos:start="75:54" pos:end="75:54">.</operator><name pos:start="75:55" pos:end="75:59">table</name></name></expr></argument>,

                                <argument pos:start="77:33" pos:end="77:47"><expr pos:start="77:33" pos:end="77:47"><name pos:start="77:33" pos:end="77:47">MBINCR_VLC_BITS</name></expr></argument>, <argument pos:start="77:50" pos:end="77:50"><expr pos:start="77:50" pos:end="77:50"><literal type="number" pos:start="77:50" pos:end="77:50">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="79:13" pos:end="85:13"><if pos:start="79:13" pos:end="85:13">if <condition pos:start="79:16" pos:end="79:25">(<expr pos:start="79:17" pos:end="79:24"><name pos:start="79:17" pos:end="79:20">code</name> <operator pos:start="79:22" pos:end="79:22">&lt;</operator> <literal type="number" pos:start="79:24" pos:end="79:24">0</literal></expr>)</condition> <block pos:start="79:27" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:43">

                <expr_stmt pos:start="81:17" pos:end="81:74"><expr pos:start="81:17" pos:end="81:73"><call pos:start="81:17" pos:end="81:73"><name pos:start="81:17" pos:end="81:22">av_log</name><argument_list pos:start="81:23" pos:end="81:73">(<argument pos:start="81:24" pos:end="81:31"><expr pos:start="81:24" pos:end="81:31"><name pos:start="81:24" pos:end="81:31"><name pos:start="81:24" pos:end="81:24">s</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:31">avctx</name></name></expr></argument>, <argument pos:start="81:34" pos:end="81:45"><expr pos:start="81:34" pos:end="81:45"><name pos:start="81:34" pos:end="81:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:48" pos:end="81:72"><expr pos:start="81:48" pos:end="81:72"><literal type="string" pos:start="81:48" pos:end="81:72">"first mb_incr damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="83:17" pos:end="83:43">return <expr pos:start="83:24" pos:end="83:42"><name pos:start="83:24" pos:end="83:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="87:13" pos:end="101:13"><if pos:start="87:13" pos:end="95:13">if <condition pos:start="87:16" pos:end="87:27">(<expr pos:start="87:17" pos:end="87:26"><name pos:start="87:17" pos:end="87:20">code</name> <operator pos:start="87:22" pos:end="87:23">&gt;=</operator> <literal type="number" pos:start="87:25" pos:end="87:26">33</literal></expr>)</condition> <block pos:start="87:29" pos:end="95:13">{<block_content pos:start="89:17" pos:end="91:34">

                <if_stmt pos:start="89:17" pos:end="91:34"><if pos:start="89:17" pos:end="91:34">if <condition pos:start="89:20" pos:end="89:31">(<expr pos:start="89:21" pos:end="89:30"><name pos:start="89:21" pos:end="89:24">code</name> <operator pos:start="89:26" pos:end="89:27">==</operator> <literal type="number" pos:start="89:29" pos:end="89:30">33</literal></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:34"><block_content pos:start="91:21" pos:end="91:34">

                    <expr_stmt pos:start="91:21" pos:end="91:34"><expr pos:start="91:21" pos:end="91:33"><name pos:start="91:21" pos:end="91:27"><name pos:start="91:21" pos:end="91:21">s</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:27">mb_x</name></name> <operator pos:start="91:29" pos:end="91:30">+=</operator> <literal type="number" pos:start="91:32" pos:end="91:33">33</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <comment type="block" pos:start="93:17" pos:end="93:56">/* otherwise, stuffing, nothing to do */</comment>

            </block_content>}</block></if> <else pos:start="95:15" pos:end="101:13">else <block pos:start="95:20" pos:end="101:13">{<block_content pos:start="97:17" pos:end="99:22">

                <expr_stmt pos:start="97:17" pos:end="97:32"><expr pos:start="97:17" pos:end="97:31"><name pos:start="97:17" pos:end="97:23"><name pos:start="97:17" pos:end="97:17">s</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:23">mb_x</name></name> <operator pos:start="97:25" pos:end="97:26">+=</operator> <name pos:start="97:28" pos:end="97:31">code</name></expr>;</expr_stmt>

                <break pos:start="99:17" pos:end="99:22">break;</break>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:42">(<expr pos:start="109:9" pos:end="109:41"><name pos:start="109:9" pos:end="109:15"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:15">mb_x</name></name> <operator pos:start="109:17" pos:end="109:18">&gt;=</operator> <operator pos:start="109:20" pos:end="109:20">(</operator><name pos:start="109:21" pos:end="109:28">unsigned</name><operator pos:start="109:29" pos:end="109:29">)</operator> <name pos:start="109:31" pos:end="109:41"><name pos:start="109:31" pos:end="109:31">s</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:41">mb_width</name></name></expr>)</condition> <block pos:start="109:44" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:35">

        <expr_stmt pos:start="111:9" pos:end="111:66"><expr pos:start="111:9" pos:end="111:65"><call pos:start="111:9" pos:end="111:65"><name pos:start="111:9" pos:end="111:14">av_log</name><argument_list pos:start="111:15" pos:end="111:65">(<argument pos:start="111:16" pos:end="111:23"><expr pos:start="111:16" pos:end="111:23"><name pos:start="111:16" pos:end="111:23"><name pos:start="111:16" pos:end="111:16">s</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:23">avctx</name></name></expr></argument>, <argument pos:start="111:26" pos:end="111:37"><expr pos:start="111:26" pos:end="111:37"><name pos:start="111:26" pos:end="111:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="111:40" pos:end="111:64"><expr pos:start="111:40" pos:end="111:64"><literal type="string" pos:start="111:40" pos:end="111:64">"initial skip overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="113:9" pos:end="113:35">return <expr pos:start="113:16" pos:end="113:34"><name pos:start="113:16" pos:end="113:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="141:5"><if pos:start="119:5" pos:end="141:5">if <condition pos:start="119:8" pos:end="119:55">(<expr pos:start="119:9" pos:end="119:54"><name pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:13">avctx</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:22">hwaccel</name></name> <operator pos:start="119:24" pos:end="119:25">&amp;&amp;</operator> <name pos:start="119:27" pos:end="119:54"><name pos:start="119:27" pos:end="119:31">avctx</name><operator pos:start="119:32" pos:end="119:33">-&gt;</operator><name pos:start="119:34" pos:end="119:40">hwaccel</name><operator pos:start="119:41" pos:end="119:42">-&gt;</operator><name pos:start="119:43" pos:end="119:54">decode_slice</name></name></expr>)</condition> <block pos:start="119:57" pos:end="141:5">{<block_content pos:start="121:9" pos:end="139:31">

        <decl_stmt pos:start="121:9" pos:end="121:54"><decl pos:start="121:9" pos:end="121:30"><type pos:start="121:9" pos:end="121:23"><specifier pos:start="121:9" pos:end="121:13">const</specifier> <name pos:start="121:15" pos:end="121:21">uint8_t</name> <modifier pos:start="121:23" pos:end="121:23">*</modifier></type><name pos:start="121:24" pos:end="121:30">buf_end</name></decl>, <decl pos:start="121:33" pos:end="121:53"><type ref="prev" pos:start="121:9" pos:end="121:23"><modifier pos:start="121:33" pos:end="121:33">*</modifier></type><name pos:start="121:34" pos:end="121:42">buf_start</name> <init pos:start="121:44" pos:end="121:53">= <expr pos:start="121:46" pos:end="121:53"><operator pos:start="121:46" pos:end="121:46">*</operator><name pos:start="121:47" pos:end="121:49">buf</name> <operator pos:start="121:51" pos:end="121:51">-</operator> <literal type="number" pos:start="121:53" pos:end="121:53">4</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="121:56" pos:end="121:79">/* include start_code */</comment>

        <decl_stmt pos:start="123:9" pos:end="123:28"><decl pos:start="123:9" pos:end="123:27"><type pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">int</name></type> <name pos:start="123:13" pos:end="123:22">start_code</name> <init pos:start="123:24" pos:end="123:27">= <expr pos:start="123:26" pos:end="123:27"><operator pos:start="123:26" pos:end="123:26">-</operator><literal type="number" pos:start="123:27" pos:end="123:27">1</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:86"><expr pos:start="125:9" pos:end="125:85"><name pos:start="125:9" pos:end="125:15">buf_end</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <call pos:start="125:19" pos:end="125:85"><name pos:start="125:19" pos:end="125:40">avpriv_find_start_code</name><argument_list pos:start="125:41" pos:end="125:85">(<argument pos:start="125:42" pos:end="125:54"><expr pos:start="125:42" pos:end="125:54"><name pos:start="125:42" pos:end="125:50">buf_start</name> <operator pos:start="125:52" pos:end="125:52">+</operator> <literal type="number" pos:start="125:54" pos:end="125:54">2</literal></expr></argument>, <argument pos:start="125:57" pos:end="125:71"><expr pos:start="125:57" pos:end="125:71"><operator pos:start="125:57" pos:end="125:57">*</operator><name pos:start="125:58" pos:end="125:60">buf</name> <operator pos:start="125:62" pos:end="125:62">+</operator> <name pos:start="125:64" pos:end="125:71">buf_size</name></expr></argument>, <argument pos:start="125:74" pos:end="125:84"><expr pos:start="125:74" pos:end="125:84"><operator pos:start="125:74" pos:end="125:74">&amp;</operator><name pos:start="125:75" pos:end="125:84">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="129:25"><if pos:start="127:9" pos:end="129:25">if <condition pos:start="127:12" pos:end="127:38">(<expr pos:start="127:13" pos:end="127:37"><name pos:start="127:13" pos:end="127:19">buf_end</name> <operator pos:start="127:21" pos:end="127:21">&lt;</operator> <operator pos:start="127:23" pos:end="127:23">*</operator><name pos:start="127:24" pos:end="127:26">buf</name> <operator pos:start="127:28" pos:end="127:28">+</operator> <name pos:start="127:30" pos:end="127:37">buf_size</name></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:25"><block_content pos:start="129:13" pos:end="129:25">

            <expr_stmt pos:start="129:13" pos:end="129:25"><expr pos:start="129:13" pos:end="129:24"><name pos:start="129:13" pos:end="129:19">buf_end</name> <operator pos:start="129:21" pos:end="129:22">-=</operator> <literal type="number" pos:start="129:24" pos:end="129:24">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:23"><expr pos:start="131:9" pos:end="131:22"><name pos:start="131:9" pos:end="131:15"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:15">mb_y</name></name> <operator pos:start="131:17" pos:end="131:17">=</operator> <name pos:start="131:19" pos:end="131:22">mb_y</name></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="135:38"><if pos:start="133:9" pos:end="135:38">if <condition pos:start="133:12" pos:end="133:84">(<expr pos:start="133:13" pos:end="133:83"><call pos:start="133:13" pos:end="133:79"><name pos:start="133:13" pos:end="133:40"><name pos:start="133:13" pos:end="133:17">avctx</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:26">hwaccel</name><operator pos:start="133:27" pos:end="133:28">-&gt;</operator><name pos:start="133:29" pos:end="133:40">decode_slice</name></name><argument_list pos:start="133:41" pos:end="133:79">(<argument pos:start="133:42" pos:end="133:46"><expr pos:start="133:42" pos:end="133:46"><name pos:start="133:42" pos:end="133:46">avctx</name></expr></argument>, <argument pos:start="133:49" pos:end="133:57"><expr pos:start="133:49" pos:end="133:57"><name pos:start="133:49" pos:end="133:57">buf_start</name></expr></argument>, <argument pos:start="133:60" pos:end="133:78"><expr pos:start="133:60" pos:end="133:78"><name pos:start="133:60" pos:end="133:66">buf_end</name> <operator pos:start="133:68" pos:end="133:68">-</operator> <name pos:start="133:70" pos:end="133:78">buf_start</name></expr></argument>)</argument_list></call> <operator pos:start="133:81" pos:end="133:81">&lt;</operator> <literal type="number" pos:start="133:83" pos:end="133:83">0</literal></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:38"><block_content pos:start="135:13" pos:end="135:38">

            <return pos:start="135:13" pos:end="135:38">return <expr pos:start="135:20" pos:end="135:37"><name pos:start="135:20" pos:end="135:37">DECODE_SLICE_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:23"><expr pos:start="137:9" pos:end="137:22"><operator pos:start="137:9" pos:end="137:9">*</operator><name pos:start="137:10" pos:end="137:12">buf</name> <operator pos:start="137:14" pos:end="137:14">=</operator> <name pos:start="137:16" pos:end="137:22">buf_end</name></expr>;</expr_stmt>

        <return pos:start="139:9" pos:end="139:31">return <expr pos:start="139:16" pos:end="139:30"><name pos:start="139:16" pos:end="139:30">DECODE_SLICE_OK</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:29"><expr pos:start="145:5" pos:end="145:28"><name pos:start="145:5" pos:end="145:18"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:18">resync_mb_x</name></name> <operator pos:start="145:20" pos:end="145:20">=</operator> <name pos:start="145:22" pos:end="145:28"><name pos:start="145:22" pos:end="145:22">s</name><operator pos:start="145:23" pos:end="145:24">-&gt;</operator><name pos:start="145:25" pos:end="145:28">mb_x</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:36"><expr pos:start="147:5" pos:end="147:35"><name pos:start="147:5" pos:end="147:18"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:18">resync_mb_y</name></name> <operator pos:start="147:20" pos:end="147:20">=</operator> <name pos:start="147:22" pos:end="147:28"><name pos:start="147:22" pos:end="147:22">s</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:28">mb_y</name></name> <operator pos:start="147:30" pos:end="147:30">=</operator> <name pos:start="147:32" pos:end="147:35">mb_y</name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:23"><expr pos:start="149:5" pos:end="149:22"><name pos:start="149:5" pos:end="149:18"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:18">mb_skip_run</name></name> <operator pos:start="149:20" pos:end="149:20">=</operator> <literal type="number" pos:start="149:22" pos:end="149:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:27"><expr pos:start="151:5" pos:end="151:26"><call pos:start="151:5" pos:end="151:26"><name pos:start="151:5" pos:end="151:23">ff_init_block_index</name><argument_list pos:start="151:24" pos:end="151:26">(<argument pos:start="151:25" pos:end="151:25"><expr pos:start="151:25" pos:end="151:25"><name pos:start="151:25" pos:end="151:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="155:5" pos:end="193:5"><if pos:start="155:5" pos:end="193:5">if <condition pos:start="155:8" pos:end="155:95">(<expr pos:start="155:9" pos:end="155:94"><name pos:start="155:9" pos:end="155:15"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:15">mb_y</name></name> <operator pos:start="155:17" pos:end="155:18">==</operator> <literal type="number" pos:start="155:20" pos:end="155:20">0</literal> <operator pos:start="155:22" pos:end="155:23">&amp;&amp;</operator> <name pos:start="155:25" pos:end="155:31"><name pos:start="155:25" pos:end="155:25">s</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:31">mb_x</name></name> <operator pos:start="155:33" pos:end="155:34">==</operator> <literal type="number" pos:start="155:36" pos:end="155:36">0</literal> <operator pos:start="155:38" pos:end="155:39">&amp;&amp;</operator> <operator pos:start="155:41" pos:end="155:41">(</operator><name pos:start="155:42" pos:end="155:55"><name pos:start="155:42" pos:end="155:42">s</name><operator pos:start="155:43" pos:end="155:44">-&gt;</operator><name pos:start="155:45" pos:end="155:55">first_field</name></name> <operator pos:start="155:57" pos:end="155:58">||</operator> <name pos:start="155:60" pos:end="155:79"><name pos:start="155:60" pos:end="155:60">s</name><operator pos:start="155:61" pos:end="155:62">-&gt;</operator><name pos:start="155:63" pos:end="155:79">picture_structure</name></name> <operator pos:start="155:81" pos:end="155:82">==</operator> <name pos:start="155:84" pos:end="155:93">PICT_FRAME</name><operator pos:start="155:94" pos:end="155:94">)</operator></expr>)</condition> <block pos:start="155:97" pos:end="193:5">{<block_content pos:start="157:9" pos:end="191:9">

        <if_stmt pos:start="157:9" pos:end="191:9"><if pos:start="157:9" pos:end="191:9">if <condition pos:start="157:12" pos:end="157:49">(<expr pos:start="157:13" pos:end="157:48"><name pos:start="157:13" pos:end="157:27"><name pos:start="157:13" pos:end="157:13">s</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:20">avctx</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator><name pos:start="157:23" pos:end="157:27">debug</name></name> <operator pos:start="157:29" pos:end="157:29">&amp;</operator> <name pos:start="157:31" pos:end="157:48">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="157:51" pos:end="191:9">{<block_content pos:start="159:13" pos:end="189:75">

            <expr_stmt pos:start="159:13" pos:end="189:75"><expr pos:start="159:13" pos:end="189:74"><call pos:start="159:13" pos:end="189:74"><name pos:start="159:13" pos:end="159:18">av_log</name><argument_list pos:start="159:19" pos:end="189:74">(<argument pos:start="159:20" pos:end="159:27"><expr pos:start="159:20" pos:end="159:27"><name pos:start="159:20" pos:end="159:27"><name pos:start="159:20" pos:end="159:20">s</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:27">avctx</name></name></expr></argument>, <argument pos:start="159:30" pos:end="159:41"><expr pos:start="159:30" pos:end="159:41"><name pos:start="159:30" pos:end="159:41">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="161:20" pos:end="161:118"><expr pos:start="161:20" pos:end="161:118"><literal type="string" pos:start="161:20" pos:end="161:118">"qp:%d fc:%2d%2d%2d%2d %s %s %s %s %s dc:%d pstruct:%d fdct:%d cmv:%d qtype:%d ivlc:%d rff:%d %s\n"</literal></expr></argument>,

                   <argument pos:start="163:20" pos:end="163:28"><expr pos:start="163:20" pos:end="163:28"><name pos:start="163:20" pos:end="163:28"><name pos:start="163:20" pos:end="163:20">s</name><operator pos:start="163:21" pos:end="163:22">-&gt;</operator><name pos:start="163:23" pos:end="163:28">qscale</name></name></expr></argument>,

                   <argument pos:start="165:20" pos:end="165:39"><expr pos:start="165:20" pos:end="165:39"><name pos:start="165:20" pos:end="165:39"><name pos:start="165:20" pos:end="165:20">s</name><operator pos:start="165:21" pos:end="165:22">-&gt;</operator><name pos:start="165:23" pos:end="165:33">mpeg_f_code</name><index pos:start="165:34" pos:end="165:36">[<expr pos:start="165:35" pos:end="165:35"><literal type="number" pos:start="165:35" pos:end="165:35">0</literal></expr>]</index><index pos:start="165:37" pos:end="165:39">[<expr pos:start="165:38" pos:end="165:38"><literal type="number" pos:start="165:38" pos:end="165:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:42" pos:end="165:61"><expr pos:start="165:42" pos:end="165:61"><name pos:start="165:42" pos:end="165:61"><name pos:start="165:42" pos:end="165:42">s</name><operator pos:start="165:43" pos:end="165:44">-&gt;</operator><name pos:start="165:45" pos:end="165:55">mpeg_f_code</name><index pos:start="165:56" pos:end="165:58">[<expr pos:start="165:57" pos:end="165:57"><literal type="number" pos:start="165:57" pos:end="165:57">0</literal></expr>]</index><index pos:start="165:59" pos:end="165:61">[<expr pos:start="165:60" pos:end="165:60"><literal type="number" pos:start="165:60" pos:end="165:60">1</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="167:20" pos:end="167:39"><expr pos:start="167:20" pos:end="167:39"><name pos:start="167:20" pos:end="167:39"><name pos:start="167:20" pos:end="167:20">s</name><operator pos:start="167:21" pos:end="167:22">-&gt;</operator><name pos:start="167:23" pos:end="167:33">mpeg_f_code</name><index pos:start="167:34" pos:end="167:36">[<expr pos:start="167:35" pos:end="167:35"><literal type="number" pos:start="167:35" pos:end="167:35">1</literal></expr>]</index><index pos:start="167:37" pos:end="167:39">[<expr pos:start="167:38" pos:end="167:38"><literal type="number" pos:start="167:38" pos:end="167:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="167:42" pos:end="167:61"><expr pos:start="167:42" pos:end="167:61"><name pos:start="167:42" pos:end="167:61"><name pos:start="167:42" pos:end="167:42">s</name><operator pos:start="167:43" pos:end="167:44">-&gt;</operator><name pos:start="167:45" pos:end="167:55">mpeg_f_code</name><index pos:start="167:56" pos:end="167:58">[<expr pos:start="167:57" pos:end="167:57"><literal type="number" pos:start="167:57" pos:end="167:57">1</literal></expr>]</index><index pos:start="167:59" pos:end="167:61">[<expr pos:start="167:60" pos:end="167:60"><literal type="number" pos:start="167:60" pos:end="167:60">1</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="169:20" pos:end="173:67"><expr pos:start="169:20" pos:end="173:67"><ternary pos:start="169:20" pos:end="173:67"><condition pos:start="169:20" pos:end="169:55"><expr pos:start="169:20" pos:end="169:53"><name pos:start="169:20" pos:end="169:31"><name pos:start="169:20" pos:end="169:20">s</name><operator pos:start="169:21" pos:end="169:22">-&gt;</operator><name pos:start="169:23" pos:end="169:31">pict_type</name></name>  <operator pos:start="169:34" pos:end="169:35">==</operator> <name pos:start="169:37" pos:end="169:53">AV_PICTURE_TYPE_I</name></expr> ?</condition><then pos:start="169:57" pos:end="169:59"> <expr pos:start="169:57" pos:end="169:59"><literal type="string" pos:start="169:57" pos:end="169:59">"I"</literal></expr> </then><else pos:start="169:61" pos:end="173:67">:

                   <expr pos:start="171:20" pos:end="173:67"><operator pos:start="171:20" pos:end="171:20">(</operator><ternary pos:start="171:21" pos:end="173:66"><condition pos:start="171:21" pos:end="171:55"><expr pos:start="171:21" pos:end="171:53"><name pos:start="171:21" pos:end="171:32"><name pos:start="171:21" pos:end="171:21">s</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:32">pict_type</name></name> <operator pos:start="171:34" pos:end="171:35">==</operator> <name pos:start="171:37" pos:end="171:53">AV_PICTURE_TYPE_P</name></expr> ?</condition><then pos:start="171:57" pos:end="171:59"> <expr pos:start="171:57" pos:end="171:59"><literal type="string" pos:start="171:57" pos:end="171:59">"P"</literal></expr> </then><else pos:start="171:61" pos:end="173:66">:

                   <expr pos:start="173:20" pos:end="173:66"><operator pos:start="173:20" pos:end="173:20">(</operator><ternary pos:start="173:21" pos:end="173:65"><condition pos:start="173:21" pos:end="173:55"><expr pos:start="173:21" pos:end="173:53"><name pos:start="173:21" pos:end="173:32"><name pos:start="173:21" pos:end="173:21">s</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:32">pict_type</name></name> <operator pos:start="173:34" pos:end="173:35">==</operator> <name pos:start="173:37" pos:end="173:53">AV_PICTURE_TYPE_B</name></expr> ?</condition><then pos:start="173:57" pos:end="173:59"> <expr pos:start="173:57" pos:end="173:59"><literal type="string" pos:start="173:57" pos:end="173:59">"B"</literal></expr> </then><else pos:start="173:61" pos:end="173:65">: <expr pos:start="173:63" pos:end="173:65"><literal type="string" pos:start="173:63" pos:end="173:65">"S"</literal></expr></else></ternary><operator pos:start="173:66" pos:end="173:66">)</operator></expr></else></ternary><operator pos:start="173:67" pos:end="173:67">)</operator></expr></else></ternary></expr></argument>,

                   <argument pos:start="175:20" pos:end="175:55"><expr pos:start="175:20" pos:end="175:55"><ternary pos:start="175:20" pos:end="175:55"><condition pos:start="175:20" pos:end="175:44"><expr pos:start="175:20" pos:end="175:42"><name pos:start="175:20" pos:end="175:42"><name pos:start="175:20" pos:end="175:20">s</name><operator pos:start="175:21" pos:end="175:22">-&gt;</operator><name pos:start="175:23" pos:end="175:42">progressive_sequence</name></name></expr> ?</condition><then pos:start="175:46" pos:end="175:49"> <expr pos:start="175:46" pos:end="175:49"><literal type="string" pos:start="175:46" pos:end="175:49">"ps"</literal></expr>  </then><else pos:start="175:52" pos:end="175:55">: <expr pos:start="175:54" pos:end="175:55"><literal type="string" pos:start="175:54" pos:end="175:55">""</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="177:20" pos:end="177:55"><expr pos:start="177:20" pos:end="177:55"><ternary pos:start="177:20" pos:end="177:55"><condition pos:start="177:20" pos:end="177:44"><expr pos:start="177:20" pos:end="177:39"><name pos:start="177:20" pos:end="177:39"><name pos:start="177:20" pos:end="177:20">s</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:39">progressive_frame</name></name></expr>    ?</condition><then pos:start="177:46" pos:end="177:49"> <expr pos:start="177:46" pos:end="177:49"><literal type="string" pos:start="177:46" pos:end="177:49">"pf"</literal></expr>  </then><else pos:start="177:52" pos:end="177:55">: <expr pos:start="177:54" pos:end="177:55"><literal type="string" pos:start="177:54" pos:end="177:55">""</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="179:20" pos:end="179:55"><expr pos:start="179:20" pos:end="179:55"><ternary pos:start="179:20" pos:end="179:55"><condition pos:start="179:20" pos:end="179:44"><expr pos:start="179:20" pos:end="179:36"><name pos:start="179:20" pos:end="179:36"><name pos:start="179:20" pos:end="179:20">s</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:36">alternate_scan</name></name></expr>       ?</condition><then pos:start="179:46" pos:end="179:50"> <expr pos:start="179:46" pos:end="179:50"><literal type="string" pos:start="179:46" pos:end="179:50">"alt"</literal></expr> </then><else pos:start="179:52" pos:end="179:55">: <expr pos:start="179:54" pos:end="179:55"><literal type="string" pos:start="179:54" pos:end="179:55">""</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="181:20" pos:end="181:55"><expr pos:start="181:20" pos:end="181:55"><ternary pos:start="181:20" pos:end="181:55"><condition pos:start="181:20" pos:end="181:44"><expr pos:start="181:20" pos:end="181:37"><name pos:start="181:20" pos:end="181:37"><name pos:start="181:20" pos:end="181:20">s</name><operator pos:start="181:21" pos:end="181:22">-&gt;</operator><name pos:start="181:23" pos:end="181:37">top_field_first</name></name></expr>      ?</condition><then pos:start="181:46" pos:end="181:50"> <expr pos:start="181:46" pos:end="181:50"><literal type="string" pos:start="181:46" pos:end="181:50">"top"</literal></expr> </then><else pos:start="181:52" pos:end="181:55">: <expr pos:start="181:54" pos:end="181:55"><literal type="string" pos:start="181:54" pos:end="181:55">""</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="183:20" pos:end="183:40"><expr pos:start="183:20" pos:end="183:40"><name pos:start="183:20" pos:end="183:40"><name pos:start="183:20" pos:end="183:20">s</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:40">intra_dc_precision</name></name></expr></argument>, <argument pos:start="183:43" pos:end="183:62"><expr pos:start="183:43" pos:end="183:62"><name pos:start="183:43" pos:end="183:62"><name pos:start="183:43" pos:end="183:43">s</name><operator pos:start="183:44" pos:end="183:45">-&gt;</operator><name pos:start="183:46" pos:end="183:62">picture_structure</name></name></expr></argument>,

                   <argument pos:start="185:20" pos:end="185:42"><expr pos:start="185:20" pos:end="185:42"><name pos:start="185:20" pos:end="185:42"><name pos:start="185:20" pos:end="185:20">s</name><operator pos:start="185:21" pos:end="185:22">-&gt;</operator><name pos:start="185:23" pos:end="185:42">frame_pred_frame_dct</name></name></expr></argument>, <argument pos:start="185:45" pos:end="185:73"><expr pos:start="185:45" pos:end="185:73"><name pos:start="185:45" pos:end="185:73"><name pos:start="185:45" pos:end="185:45">s</name><operator pos:start="185:46" pos:end="185:47">-&gt;</operator><name pos:start="185:48" pos:end="185:73">concealment_motion_vectors</name></name></expr></argument>,

                   <argument pos:start="187:20" pos:end="187:34"><expr pos:start="187:20" pos:end="187:34"><name pos:start="187:20" pos:end="187:34"><name pos:start="187:20" pos:end="187:20">s</name><operator pos:start="187:21" pos:end="187:22">-&gt;</operator><name pos:start="187:23" pos:end="187:34">q_scale_type</name></name></expr></argument>, <argument pos:start="187:37" pos:end="187:55"><expr pos:start="187:37" pos:end="187:55"><name pos:start="187:37" pos:end="187:55"><name pos:start="187:37" pos:end="187:37">s</name><operator pos:start="187:38" pos:end="187:39">-&gt;</operator><name pos:start="187:40" pos:end="187:55">intra_vlc_format</name></name></expr></argument>,

                   <argument pos:start="189:20" pos:end="189:40"><expr pos:start="189:20" pos:end="189:40"><name pos:start="189:20" pos:end="189:40"><name pos:start="189:20" pos:end="189:20">s</name><operator pos:start="189:21" pos:end="189:22">-&gt;</operator><name pos:start="189:23" pos:end="189:40">repeat_first_field</name></name></expr></argument>, <argument pos:start="189:43" pos:end="189:73"><expr pos:start="189:43" pos:end="189:73"><ternary pos:start="189:43" pos:end="189:73"><condition pos:start="189:43" pos:end="189:62"><expr pos:start="189:43" pos:end="189:60"><name pos:start="189:43" pos:end="189:60"><name pos:start="189:43" pos:end="189:43">s</name><operator pos:start="189:44" pos:end="189:45">-&gt;</operator><name pos:start="189:46" pos:end="189:60">chroma_420_type</name></name></expr> ?</condition><then pos:start="189:64" pos:end="189:68"> <expr pos:start="189:64" pos:end="189:68"><literal type="string" pos:start="189:64" pos:end="189:68">"420"</literal></expr> </then><else pos:start="189:70" pos:end="189:73">: <expr pos:start="189:72" pos:end="189:73"><literal type="string" pos:start="189:72" pos:end="189:73">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="197:5" pos:end="517:5">for <control pos:start="197:9" pos:end="197:12">(<init pos:start="197:10" pos:end="197:10">;</init><condition pos:start="197:11" pos:end="197:11">;</condition><incr/>)</control> <block pos:start="197:14" pos:end="517:5">{<block_content pos:start="201:9" pos:end="515:9">

        <comment type="line" pos:start="199:9" pos:end="199:47">// If 1, we memcpy blocks in xvmcvideo.</comment>

        <if_stmt pos:start="201:9" pos:end="203:34"><if pos:start="201:9" pos:end="203:34">if <condition pos:start="201:12" pos:end="201:88">(<expr pos:start="201:13" pos:end="201:87"><operator pos:start="201:13" pos:end="201:13">(</operator><name pos:start="201:14" pos:end="201:38">CONFIG_MPEG1_XVMC_HWACCEL</name> <operator pos:start="201:40" pos:end="201:41">||</operator> <name pos:start="201:43" pos:end="201:67">CONFIG_MPEG2_XVMC_HWACCEL</name><operator pos:start="201:68" pos:end="201:68">)</operator> <operator pos:start="201:70" pos:end="201:71">&amp;&amp;</operator> <name pos:start="201:73" pos:end="201:87"><name pos:start="201:73" pos:end="201:73">s</name><operator pos:start="201:74" pos:end="201:75">-&gt;</operator><name pos:start="201:76" pos:end="201:87">pack_pblocks</name></name></expr>)</condition><block type="pseudo" pos:start="203:13" pos:end="203:34"><block_content pos:start="203:13" pos:end="203:34">

            <expr_stmt pos:start="203:13" pos:end="203:34"><expr pos:start="203:13" pos:end="203:33"><call pos:start="203:13" pos:end="203:33"><name pos:start="203:13" pos:end="203:30">ff_xvmc_init_block</name><argument_list pos:start="203:31" pos:end="203:33">(<argument pos:start="203:32" pos:end="203:32"><expr pos:start="203:32" pos:end="203:32"><name pos:start="203:32" pos:end="203:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="203:36" pos:end="203:50">// set s-&gt;block</comment>



        <if_stmt pos:start="207:9" pos:end="209:23"><if pos:start="207:9" pos:end="209:23">if <condition pos:start="207:12" pos:end="207:52">(<expr pos:start="207:13" pos:end="207:51"><operator pos:start="207:13" pos:end="207:13">(</operator><name pos:start="207:14" pos:end="207:16">ret</name> <operator pos:start="207:18" pos:end="207:18">=</operator> <call pos:start="207:20" pos:end="207:46"><name pos:start="207:20" pos:end="207:33">mpeg_decode_mb</name><argument_list pos:start="207:34" pos:end="207:46">(<argument pos:start="207:35" pos:end="207:35"><expr pos:start="207:35" pos:end="207:35"><name pos:start="207:35" pos:end="207:35">s</name></expr></argument>, <argument pos:start="207:38" pos:end="207:45"><expr pos:start="207:38" pos:end="207:45"><name pos:start="207:38" pos:end="207:45"><name pos:start="207:38" pos:end="207:38">s</name><operator pos:start="207:39" pos:end="207:40">-&gt;</operator><name pos:start="207:41" pos:end="207:45">block</name></name></expr></argument>)</argument_list></call><operator pos:start="207:47" pos:end="207:47">)</operator> <operator pos:start="207:49" pos:end="207:49">&lt;</operator> <literal type="number" pos:start="207:51" pos:end="207:51">0</literal></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="209:23"><block_content pos:start="209:13" pos:end="209:23">

            <return pos:start="209:13" pos:end="209:23">return <expr pos:start="209:20" pos:end="209:22"><name pos:start="209:20" pos:end="209:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="line" pos:start="213:9" pos:end="213:78">// Note motion_val is normally NULL unless we want to extract the MVs.</comment>

        <if_stmt pos:start="215:9" pos:end="279:9"><if pos:start="215:9" pos:end="279:9">if <condition pos:start="215:12" pos:end="215:61">(<expr pos:start="215:13" pos:end="215:60"><name pos:start="215:13" pos:end="215:44"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:30">current_picture</name><operator pos:start="215:31" pos:end="215:31">.</operator><name pos:start="215:32" pos:end="215:41">motion_val</name><index pos:start="215:42" pos:end="215:44">[<expr pos:start="215:43" pos:end="215:43"><literal type="number" pos:start="215:43" pos:end="215:43">0</literal></expr>]</index></name> <operator pos:start="215:46" pos:end="215:47">&amp;&amp;</operator> <operator pos:start="215:49" pos:end="215:49">!</operator><name pos:start="215:50" pos:end="215:60"><name pos:start="215:50" pos:end="215:50">s</name><operator pos:start="215:51" pos:end="215:52">-&gt;</operator><name pos:start="215:53" pos:end="215:60">encoding</name></name></expr>)</condition> <block pos:start="215:63" pos:end="279:9">{<block_content pos:start="217:13" pos:end="277:13">

            <decl_stmt pos:start="217:13" pos:end="217:42"><decl pos:start="217:13" pos:end="217:41"><type pos:start="217:13" pos:end="217:21"><specifier pos:start="217:13" pos:end="217:17">const</specifier> <name pos:start="217:19" pos:end="217:21">int</name></type> <name pos:start="217:23" pos:end="217:26">wrap</name> <init pos:start="217:28" pos:end="217:41">= <expr pos:start="217:30" pos:end="217:41"><name pos:start="217:30" pos:end="217:41"><name pos:start="217:30" pos:end="217:30">s</name><operator pos:start="217:31" pos:end="217:32">-&gt;</operator><name pos:start="217:33" pos:end="217:41">b8_stride</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="219:13" pos:end="219:62"><decl pos:start="219:13" pos:end="219:61"><type pos:start="219:13" pos:end="219:15"><name pos:start="219:13" pos:end="219:15">int</name></type> <name pos:start="219:17" pos:end="219:18">xy</name>         <init pos:start="219:28" pos:end="219:61">= <expr pos:start="219:30" pos:end="219:61"><name pos:start="219:30" pos:end="219:36"><name pos:start="219:30" pos:end="219:30">s</name><operator pos:start="219:31" pos:end="219:32">-&gt;</operator><name pos:start="219:33" pos:end="219:36">mb_x</name></name> <operator pos:start="219:38" pos:end="219:38">*</operator> <literal type="number" pos:start="219:40" pos:end="219:42">2</literal> <operator pos:start="219:42" pos:end="219:42">+</operator> <name pos:start="219:44" pos:end="219:50"><name pos:start="219:44" pos:end="219:44">s</name><operator pos:start="219:45" pos:end="219:46">-&gt;</operator><name pos:start="219:47" pos:end="219:50">mb_y</name></name> <operator pos:start="219:52" pos:end="219:52">*</operator> <literal type="number" pos:start="219:54" pos:end="219:54">2</literal> <operator pos:start="219:56" pos:end="219:56">*</operator> <name pos:start="219:58" pos:end="219:61">wrap</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="221:13" pos:end="221:68"><decl pos:start="221:13" pos:end="221:67"><type pos:start="221:13" pos:end="221:15"><name pos:start="221:13" pos:end="221:15">int</name></type> <name pos:start="221:17" pos:end="221:21">b8_xy</name>      <init pos:start="221:28" pos:end="221:67">= <expr pos:start="221:30" pos:end="221:67"><literal type="number" pos:start="221:30" pos:end="221:30">4</literal> <operator pos:start="221:32" pos:end="221:32">*</operator> <operator pos:start="221:34" pos:end="221:34">(</operator><name pos:start="221:35" pos:end="221:41"><name pos:start="221:35" pos:end="221:35">s</name><operator pos:start="221:36" pos:end="221:37">-&gt;</operator><name pos:start="221:38" pos:end="221:41">mb_x</name></name> <operator pos:start="221:43" pos:end="221:43">+</operator> <name pos:start="221:45" pos:end="221:51"><name pos:start="221:45" pos:end="221:45">s</name><operator pos:start="221:46" pos:end="221:47">-&gt;</operator><name pos:start="221:48" pos:end="221:51">mb_y</name></name> <operator pos:start="221:53" pos:end="221:53">*</operator> <name pos:start="221:55" pos:end="221:66"><name pos:start="221:55" pos:end="221:55">s</name><operator pos:start="221:56" pos:end="221:57">-&gt;</operator><name pos:start="221:58" pos:end="221:66">mb_stride</name></name><operator pos:start="221:67" pos:end="221:67">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="223:13" pos:end="223:43"><decl pos:start="223:13" pos:end="223:24"><type pos:start="223:13" pos:end="223:15"><name pos:start="223:13" pos:end="223:15">int</name></type> <name pos:start="223:17" pos:end="223:24">motion_x</name></decl>, <decl pos:start="223:27" pos:end="223:34"><type ref="prev" pos:start="223:13" pos:end="223:15"/><name pos:start="223:27" pos:end="223:34">motion_y</name></decl>, <decl pos:start="223:37" pos:end="223:39"><type ref="prev" pos:start="223:13" pos:end="223:15"/><name pos:start="223:37" pos:end="223:39">dir</name></decl>, <decl pos:start="223:42" pos:end="223:42"><type ref="prev" pos:start="223:13" pos:end="223:15"/><name pos:start="223:42" pos:end="223:42">i</name></decl>;</decl_stmt>



            <for pos:start="227:13" pos:end="277:13">for <control pos:start="227:17" pos:end="227:35">(<init pos:start="227:18" pos:end="227:23"><expr pos:start="227:18" pos:end="227:22"><name pos:start="227:18" pos:end="227:18">i</name> <operator pos:start="227:20" pos:end="227:20">=</operator> <literal type="number" pos:start="227:22" pos:end="227:22">0</literal></expr>;</init> <condition pos:start="227:25" pos:end="227:30"><expr pos:start="227:25" pos:end="227:29"><name pos:start="227:25" pos:end="227:25">i</name> <operator pos:start="227:27" pos:end="227:27">&lt;</operator> <literal type="number" pos:start="227:29" pos:end="227:29">2</literal></expr>;</condition> <incr pos:start="227:32" pos:end="227:34"><expr pos:start="227:32" pos:end="227:34"><name pos:start="227:32" pos:end="227:32">i</name><operator pos:start="227:33" pos:end="227:34">++</operator></expr></incr>)</control> <block pos:start="227:37" pos:end="277:13">{<block_content pos:start="229:17" pos:end="275:27">

                <for pos:start="229:17" pos:end="271:17">for <control pos:start="229:21" pos:end="229:45">(<init pos:start="229:22" pos:end="229:29"><expr pos:start="229:22" pos:end="229:28"><name pos:start="229:22" pos:end="229:24">dir</name> <operator pos:start="229:26" pos:end="229:26">=</operator> <literal type="number" pos:start="229:28" pos:end="229:28">0</literal></expr>;</init> <condition pos:start="229:31" pos:end="229:38"><expr pos:start="229:31" pos:end="229:37"><name pos:start="229:31" pos:end="229:33">dir</name> <operator pos:start="229:35" pos:end="229:35">&lt;</operator> <literal type="number" pos:start="229:37" pos:end="229:37">2</literal></expr>;</condition> <incr pos:start="229:40" pos:end="229:44"><expr pos:start="229:40" pos:end="229:44"><name pos:start="229:40" pos:end="229:42">dir</name><operator pos:start="229:43" pos:end="229:44">++</operator></expr></incr>)</control> <block pos:start="229:47" pos:end="271:17">{<block_content pos:start="231:21" pos:end="269:61">

                    <if_stmt pos:start="231:21" pos:end="251:21"><if pos:start="231:21" pos:end="237:21">if <condition pos:start="231:24" pos:end="233:72">(<expr pos:start="231:25" pos:end="233:71"><name pos:start="231:25" pos:end="231:35"><name pos:start="231:25" pos:end="231:25">s</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:35">mb_intra</name></name> <operator pos:start="231:37" pos:end="231:38">||</operator>

                        <operator pos:start="233:25" pos:end="233:25">(</operator><name pos:start="233:26" pos:end="233:28">dir</name> <operator pos:start="233:30" pos:end="233:31">==</operator> <literal type="number" pos:start="233:33" pos:end="233:33">1</literal> <operator pos:start="233:35" pos:end="233:36">&amp;&amp;</operator> <name pos:start="233:38" pos:end="233:49"><name pos:start="233:38" pos:end="233:38">s</name><operator pos:start="233:39" pos:end="233:40">-&gt;</operator><name pos:start="233:41" pos:end="233:49">pict_type</name></name> <operator pos:start="233:51" pos:end="233:52">!=</operator> <name pos:start="233:54" pos:end="233:70">AV_PICTURE_TYPE_B</name><operator pos:start="233:71" pos:end="233:71">)</operator></expr>)</condition> <block pos:start="233:74" pos:end="237:21">{<block_content pos:start="235:25" pos:end="235:48">

                        <expr_stmt pos:start="235:25" pos:end="235:48"><expr pos:start="235:25" pos:end="235:47"><name pos:start="235:25" pos:end="235:32">motion_x</name> <operator pos:start="235:34" pos:end="235:34">=</operator> <name pos:start="235:36" pos:end="235:43">motion_y</name> <operator pos:start="235:45" pos:end="235:45">=</operator> <literal type="number" pos:start="235:47" pos:end="235:47">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="237:23" pos:end="245:21">else if <condition pos:start="237:31" pos:end="239:74">(<expr pos:start="237:32" pos:end="239:73"><name pos:start="237:32" pos:end="237:41"><name pos:start="237:32" pos:end="237:32">s</name><operator pos:start="237:33" pos:end="237:34">-&gt;</operator><name pos:start="237:35" pos:end="237:41">mv_type</name></name> <operator pos:start="237:43" pos:end="237:44">==</operator> <name pos:start="237:46" pos:end="237:58">MV_TYPE_16X16</name> <operator pos:start="237:60" pos:end="237:61">||</operator>

                               <operator pos:start="239:32" pos:end="239:32">(</operator><name pos:start="239:33" pos:end="239:42"><name pos:start="239:33" pos:end="239:33">s</name><operator pos:start="239:34" pos:end="239:35">-&gt;</operator><name pos:start="239:36" pos:end="239:42">mv_type</name></name> <operator pos:start="239:44" pos:end="239:45">==</operator> <name pos:start="239:47" pos:end="239:59">MV_TYPE_FIELD</name> <operator pos:start="239:61" pos:end="239:62">&amp;&amp;</operator> <name pos:start="239:64" pos:end="239:72">field_pic</name><operator pos:start="239:73" pos:end="239:73">)</operator></expr>)</condition> <block pos:start="239:76" pos:end="245:21">{<block_content pos:start="241:25" pos:end="243:52">

                        <expr_stmt pos:start="241:25" pos:end="241:52"><expr pos:start="241:25" pos:end="241:51"><name pos:start="241:25" pos:end="241:32">motion_x</name> <operator pos:start="241:34" pos:end="241:34">=</operator> <name pos:start="241:36" pos:end="241:51"><name pos:start="241:36" pos:end="241:36">s</name><operator pos:start="241:37" pos:end="241:38">-&gt;</operator><name pos:start="241:39" pos:end="241:40">mv</name><index pos:start="241:41" pos:end="241:45">[<expr pos:start="241:42" pos:end="241:44"><name pos:start="241:42" pos:end="241:44">dir</name></expr>]</index><index pos:start="241:46" pos:end="241:48">[<expr pos:start="241:47" pos:end="241:47"><literal type="number" pos:start="241:47" pos:end="241:47">0</literal></expr>]</index><index pos:start="241:49" pos:end="241:51">[<expr pos:start="241:50" pos:end="241:50"><literal type="number" pos:start="241:50" pos:end="241:50">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="243:25" pos:end="243:52"><expr pos:start="243:25" pos:end="243:51"><name pos:start="243:25" pos:end="243:32">motion_y</name> <operator pos:start="243:34" pos:end="243:34">=</operator> <name pos:start="243:36" pos:end="243:51"><name pos:start="243:36" pos:end="243:36">s</name><operator pos:start="243:37" pos:end="243:38">-&gt;</operator><name pos:start="243:39" pos:end="243:40">mv</name><index pos:start="243:41" pos:end="243:45">[<expr pos:start="243:42" pos:end="243:44"><name pos:start="243:42" pos:end="243:44">dir</name></expr>]</index><index pos:start="243:46" pos:end="243:48">[<expr pos:start="243:47" pos:end="243:47"><literal type="number" pos:start="243:47" pos:end="243:47">0</literal></expr>]</index><index pos:start="243:49" pos:end="243:51">[<expr pos:start="243:50" pos:end="243:50"><literal type="number" pos:start="243:50" pos:end="243:50">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="245:23" pos:end="251:21">else <block pos:start="245:28" pos:end="251:21">{<block_content pos:start="247:25" pos:end="249:52"> <comment type="block" pos:start="245:30" pos:end="245:101">/* if ((s-&gt;mv_type == MV_TYPE_FIELD) || (s-&gt;mv_type == MV_TYPE_16X8)) */</comment>

                        <expr_stmt pos:start="247:25" pos:end="247:52"><expr pos:start="247:25" pos:end="247:51"><name pos:start="247:25" pos:end="247:32">motion_x</name> <operator pos:start="247:34" pos:end="247:34">=</operator> <name pos:start="247:36" pos:end="247:51"><name pos:start="247:36" pos:end="247:36">s</name><operator pos:start="247:37" pos:end="247:38">-&gt;</operator><name pos:start="247:39" pos:end="247:40">mv</name><index pos:start="247:41" pos:end="247:45">[<expr pos:start="247:42" pos:end="247:44"><name pos:start="247:42" pos:end="247:44">dir</name></expr>]</index><index pos:start="247:46" pos:end="247:48">[<expr pos:start="247:47" pos:end="247:47"><name pos:start="247:47" pos:end="247:47">i</name></expr>]</index><index pos:start="247:49" pos:end="247:51">[<expr pos:start="247:50" pos:end="247:50"><literal type="number" pos:start="247:50" pos:end="247:50">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="249:25" pos:end="249:52"><expr pos:start="249:25" pos:end="249:51"><name pos:start="249:25" pos:end="249:32">motion_y</name> <operator pos:start="249:34" pos:end="249:34">=</operator> <name pos:start="249:36" pos:end="249:51"><name pos:start="249:36" pos:end="249:36">s</name><operator pos:start="249:37" pos:end="249:38">-&gt;</operator><name pos:start="249:39" pos:end="249:40">mv</name><index pos:start="249:41" pos:end="249:45">[<expr pos:start="249:42" pos:end="249:44"><name pos:start="249:42" pos:end="249:44">dir</name></expr>]</index><index pos:start="249:46" pos:end="249:48">[<expr pos:start="249:47" pos:end="249:47"><name pos:start="249:47" pos:end="249:47">i</name></expr>]</index><index pos:start="249:49" pos:end="249:51">[<expr pos:start="249:50" pos:end="249:50"><literal type="number" pos:start="249:50" pos:end="249:50">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <expr_stmt pos:start="255:21" pos:end="255:77"><expr pos:start="255:21" pos:end="255:76"><name pos:start="255:21" pos:end="255:61"><name pos:start="255:21" pos:end="255:21">s</name><operator pos:start="255:22" pos:end="255:23">-&gt;</operator><name pos:start="255:24" pos:end="255:38">current_picture</name><operator pos:start="255:39" pos:end="255:39">.</operator><name pos:start="255:40" pos:end="255:49">motion_val</name><index pos:start="255:50" pos:end="255:54">[<expr pos:start="255:51" pos:end="255:53"><name pos:start="255:51" pos:end="255:53">dir</name></expr>]</index><index pos:start="255:55" pos:end="255:58">[<expr pos:start="255:56" pos:end="255:57"><name pos:start="255:56" pos:end="255:57">xy</name></expr>]</index><index pos:start="255:59" pos:end="255:61">[<expr pos:start="255:60" pos:end="255:60"><literal type="number" pos:start="255:60" pos:end="255:60">0</literal></expr>]</index></name>     <operator pos:start="255:67" pos:end="255:67">=</operator> <name pos:start="255:69" pos:end="255:76">motion_x</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="257:21" pos:end="257:77"><expr pos:start="257:21" pos:end="257:76"><name pos:start="257:21" pos:end="257:61"><name pos:start="257:21" pos:end="257:21">s</name><operator pos:start="257:22" pos:end="257:23">-&gt;</operator><name pos:start="257:24" pos:end="257:38">current_picture</name><operator pos:start="257:39" pos:end="257:39">.</operator><name pos:start="257:40" pos:end="257:49">motion_val</name><index pos:start="257:50" pos:end="257:54">[<expr pos:start="257:51" pos:end="257:53"><name pos:start="257:51" pos:end="257:53">dir</name></expr>]</index><index pos:start="257:55" pos:end="257:58">[<expr pos:start="257:56" pos:end="257:57"><name pos:start="257:56" pos:end="257:57">xy</name></expr>]</index><index pos:start="257:59" pos:end="257:61">[<expr pos:start="257:60" pos:end="257:60"><literal type="number" pos:start="257:60" pos:end="257:60">1</literal></expr>]</index></name>     <operator pos:start="257:67" pos:end="257:67">=</operator> <name pos:start="257:69" pos:end="257:76">motion_y</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:77"><expr pos:start="259:21" pos:end="259:76"><name pos:start="259:21" pos:end="259:65"><name pos:start="259:21" pos:end="259:21">s</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:38">current_picture</name><operator pos:start="259:39" pos:end="259:39">.</operator><name pos:start="259:40" pos:end="259:49">motion_val</name><index pos:start="259:50" pos:end="259:54">[<expr pos:start="259:51" pos:end="259:53"><name pos:start="259:51" pos:end="259:53">dir</name></expr>]</index><index pos:start="259:55" pos:end="259:62">[<expr pos:start="259:56" pos:end="259:61"><name pos:start="259:56" pos:end="259:57">xy</name> <operator pos:start="259:59" pos:end="259:59">+</operator> <literal type="number" pos:start="259:61" pos:end="259:61">1</literal></expr>]</index><index pos:start="259:63" pos:end="259:65">[<expr pos:start="259:64" pos:end="259:64"><literal type="number" pos:start="259:64" pos:end="259:64">0</literal></expr>]</index></name> <operator pos:start="259:67" pos:end="259:67">=</operator> <name pos:start="259:69" pos:end="259:76">motion_x</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:77"><expr pos:start="261:21" pos:end="261:76"><name pos:start="261:21" pos:end="261:65"><name pos:start="261:21" pos:end="261:21">s</name><operator pos:start="261:22" pos:end="261:23">-&gt;</operator><name pos:start="261:24" pos:end="261:38">current_picture</name><operator pos:start="261:39" pos:end="261:39">.</operator><name pos:start="261:40" pos:end="261:49">motion_val</name><index pos:start="261:50" pos:end="261:54">[<expr pos:start="261:51" pos:end="261:53"><name pos:start="261:51" pos:end="261:53">dir</name></expr>]</index><index pos:start="261:55" pos:end="261:62">[<expr pos:start="261:56" pos:end="261:61"><name pos:start="261:56" pos:end="261:57">xy</name> <operator pos:start="261:59" pos:end="261:59">+</operator> <literal type="number" pos:start="261:61" pos:end="261:61">1</literal></expr>]</index><index pos:start="261:63" pos:end="261:65">[<expr pos:start="261:64" pos:end="261:64"><literal type="number" pos:start="261:64" pos:end="261:64">1</literal></expr>]</index></name> <operator pos:start="261:67" pos:end="261:67">=</operator> <name pos:start="261:69" pos:end="261:76">motion_y</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="263:21" pos:end="265:92"><expr pos:start="263:21" pos:end="265:91"><name pos:start="263:21" pos:end="263:61"><name pos:start="263:21" pos:end="263:21">s</name><operator pos:start="263:22" pos:end="263:23">-&gt;</operator><name pos:start="263:24" pos:end="263:38">current_picture</name><operator pos:start="263:39" pos:end="263:39">.</operator><name pos:start="263:40" pos:end="263:48">ref_index</name> <index pos:start="263:50" pos:end="263:54">[<expr pos:start="263:51" pos:end="263:53"><name pos:start="263:51" pos:end="263:53">dir</name></expr>]</index><index pos:start="263:55" pos:end="263:61">[<expr pos:start="263:56" pos:end="263:60"><name pos:start="263:56" pos:end="263:60">b8_xy</name></expr>]</index></name>     <operator pos:start="263:67" pos:end="263:67">=</operator>

                    <name pos:start="265:21" pos:end="265:65"><name pos:start="265:21" pos:end="265:21">s</name><operator pos:start="265:22" pos:end="265:23">-&gt;</operator><name pos:start="265:24" pos:end="265:38">current_picture</name><operator pos:start="265:39" pos:end="265:39">.</operator><name pos:start="265:40" pos:end="265:48">ref_index</name> <index pos:start="265:50" pos:end="265:54">[<expr pos:start="265:51" pos:end="265:53"><name pos:start="265:51" pos:end="265:53">dir</name></expr>]</index><index pos:start="265:55" pos:end="265:65">[<expr pos:start="265:56" pos:end="265:64"><name pos:start="265:56" pos:end="265:60">b8_xy</name> <operator pos:start="265:62" pos:end="265:62">+</operator> <literal type="number" pos:start="265:64" pos:end="265:64">1</literal></expr>]</index></name> <operator pos:start="265:67" pos:end="265:67">=</operator> <name pos:start="265:69" pos:end="265:91"><name pos:start="265:69" pos:end="265:69">s</name><operator pos:start="265:70" pos:end="265:71">-&gt;</operator><name pos:start="265:72" pos:end="265:83">field_select</name><index pos:start="265:84" pos:end="265:88">[<expr pos:start="265:85" pos:end="265:87"><name pos:start="265:85" pos:end="265:87">dir</name></expr>]</index><index pos:start="265:89" pos:end="265:91">[<expr pos:start="265:90" pos:end="265:90"><name pos:start="265:90" pos:end="265:90">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="267:21" pos:end="269:61"><expr pos:start="267:21" pos:end="269:60"><call pos:start="267:21" pos:end="269:60"><name pos:start="267:21" pos:end="267:30">av_assert2</name><argument_list pos:start="267:31" pos:end="269:60">(<argument pos:start="267:32" pos:end="269:59"><expr pos:start="267:32" pos:end="269:59"><name pos:start="267:32" pos:end="267:54"><name pos:start="267:32" pos:end="267:32">s</name><operator pos:start="267:33" pos:end="267:34">-&gt;</operator><name pos:start="267:35" pos:end="267:46">field_select</name><index pos:start="267:47" pos:end="267:51">[<expr pos:start="267:48" pos:end="267:50"><name pos:start="267:48" pos:end="267:50">dir</name></expr>]</index><index pos:start="267:52" pos:end="267:54">[<expr pos:start="267:53" pos:end="267:53"><name pos:start="267:53" pos:end="267:53">i</name></expr>]</index></name> <operator pos:start="267:56" pos:end="267:57">==</operator> <literal type="number" pos:start="267:59" pos:end="267:59">0</literal> <operator pos:start="267:61" pos:end="267:62">||</operator>

                               <name pos:start="269:32" pos:end="269:54"><name pos:start="269:32" pos:end="269:32">s</name><operator pos:start="269:33" pos:end="269:34">-&gt;</operator><name pos:start="269:35" pos:end="269:46">field_select</name><index pos:start="269:47" pos:end="269:51">[<expr pos:start="269:48" pos:end="269:50"><name pos:start="269:48" pos:end="269:50">dir</name></expr>]</index><index pos:start="269:52" pos:end="269:54">[<expr pos:start="269:53" pos:end="269:53"><name pos:start="269:53" pos:end="269:53">i</name></expr>]</index></name> <operator pos:start="269:56" pos:end="269:57">==</operator> <literal type="number" pos:start="269:59" pos:end="269:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="273:17" pos:end="273:30"><expr pos:start="273:17" pos:end="273:29"><name pos:start="273:17" pos:end="273:18">xy</name>    <operator pos:start="273:23" pos:end="273:24">+=</operator> <name pos:start="273:26" pos:end="273:29">wrap</name></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:27"><expr pos:start="275:17" pos:end="275:26"><name pos:start="275:17" pos:end="275:21">b8_xy</name> <operator pos:start="275:23" pos:end="275:24">+=</operator> <literal type="number" pos:start="275:26" pos:end="275:26">2</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="283:9" pos:end="283:35"><expr pos:start="283:9" pos:end="283:34"><name pos:start="283:9" pos:end="283:18"><name pos:start="283:9" pos:end="283:9">s</name><operator pos:start="283:10" pos:end="283:11">-&gt;</operator><name pos:start="283:12" pos:end="283:15">dest</name><index pos:start="283:16" pos:end="283:18">[<expr pos:start="283:17" pos:end="283:17"><literal type="number" pos:start="283:17" pos:end="283:17">0</literal></expr>]</index></name> <operator pos:start="283:20" pos:end="283:21">+=</operator> <literal type="number" pos:start="283:23" pos:end="283:24">16</literal> <operator pos:start="283:26" pos:end="283:27">&gt;&gt;</operator> <name pos:start="283:29" pos:end="283:34">lowres</name></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:57"><expr pos:start="285:9" pos:end="285:56"><name pos:start="285:9" pos:end="285:18"><name pos:start="285:9" pos:end="285:9">s</name><operator pos:start="285:10" pos:end="285:11">-&gt;</operator><name pos:start="285:12" pos:end="285:15">dest</name><index pos:start="285:16" pos:end="285:18">[<expr pos:start="285:17" pos:end="285:17"><literal type="number" pos:start="285:17" pos:end="285:17">1</literal></expr>]</index></name> <operator pos:start="285:20" pos:end="285:21">+=</operator><operator pos:start="285:22" pos:end="285:22">(</operator><literal type="number" pos:start="285:23" pos:end="285:24">16</literal> <operator pos:start="285:26" pos:end="285:27">&gt;&gt;</operator> <name pos:start="285:29" pos:end="285:34">lowres</name><operator pos:start="285:35" pos:end="285:35">)</operator> <operator pos:start="285:37" pos:end="285:38">&gt;&gt;</operator> <name pos:start="285:40" pos:end="285:56"><name pos:start="285:40" pos:end="285:40">s</name><operator pos:start="285:41" pos:end="285:42">-&gt;</operator><name pos:start="285:43" pos:end="285:56">chroma_x_shift</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:57"><expr pos:start="287:9" pos:end="287:56"><name pos:start="287:9" pos:end="287:18"><name pos:start="287:9" pos:end="287:9">s</name><operator pos:start="287:10" pos:end="287:11">-&gt;</operator><name pos:start="287:12" pos:end="287:15">dest</name><index pos:start="287:16" pos:end="287:18">[<expr pos:start="287:17" pos:end="287:17"><literal type="number" pos:start="287:17" pos:end="287:17">2</literal></expr>]</index></name> <operator pos:start="287:20" pos:end="287:21">+=</operator><operator pos:start="287:22" pos:end="287:22">(</operator><literal type="number" pos:start="287:23" pos:end="287:24">16</literal> <operator pos:start="287:26" pos:end="287:27">&gt;&gt;</operator> <name pos:start="287:29" pos:end="287:34">lowres</name><operator pos:start="287:35" pos:end="287:35">)</operator> <operator pos:start="287:37" pos:end="287:38">&gt;&gt;</operator> <name pos:start="287:40" pos:end="287:56"><name pos:start="287:40" pos:end="287:40">s</name><operator pos:start="287:41" pos:end="287:42">-&gt;</operator><name pos:start="287:43" pos:end="287:56">chroma_x_shift</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="291:9" pos:end="291:38"><expr pos:start="291:9" pos:end="291:37"><call pos:start="291:9" pos:end="291:37"><name pos:start="291:9" pos:end="291:24">ff_mpv_decode_mb</name><argument_list pos:start="291:25" pos:end="291:37">(<argument pos:start="291:26" pos:end="291:26"><expr pos:start="291:26" pos:end="291:26"><name pos:start="291:26" pos:end="291:26">s</name></expr></argument>, <argument pos:start="291:29" pos:end="291:36"><expr pos:start="291:29" pos:end="291:36"><name pos:start="291:29" pos:end="291:36"><name pos:start="291:29" pos:end="291:29">s</name><operator pos:start="291:30" pos:end="291:31">-&gt;</operator><name pos:start="291:32" pos:end="291:36">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="295:9" pos:end="395:9"><if pos:start="295:9" pos:end="395:9">if <condition pos:start="295:12" pos:end="295:37">(<expr pos:start="295:13" pos:end="295:36"><operator pos:start="295:13" pos:end="295:14">++</operator><name pos:start="295:15" pos:end="295:21"><name pos:start="295:15" pos:end="295:15">s</name><operator pos:start="295:16" pos:end="295:17">-&gt;</operator><name pos:start="295:18" pos:end="295:21">mb_x</name></name> <operator pos:start="295:23" pos:end="295:24">&gt;=</operator> <name pos:start="295:26" pos:end="295:36"><name pos:start="295:26" pos:end="295:26">s</name><operator pos:start="295:27" pos:end="295:28">-&gt;</operator><name pos:start="295:29" pos:end="295:36">mb_width</name></name></expr>)</condition> <block pos:start="295:39" pos:end="395:9">{<block_content pos:start="297:13" pos:end="393:35">

            <decl_stmt pos:start="297:13" pos:end="297:55"><decl pos:start="297:13" pos:end="297:54"><type pos:start="297:13" pos:end="297:21"><specifier pos:start="297:13" pos:end="297:17">const</specifier> <name pos:start="297:19" pos:end="297:21">int</name></type> <name pos:start="297:23" pos:end="297:29">mb_size</name> <init pos:start="297:31" pos:end="297:54">= <expr pos:start="297:33" pos:end="297:54"><literal type="number" pos:start="297:33" pos:end="297:34">16</literal> <operator pos:start="297:36" pos:end="297:37">&gt;&gt;</operator> <name pos:start="297:39" pos:end="297:54"><name pos:start="297:39" pos:end="297:39">s</name><operator pos:start="297:40" pos:end="297:41">-&gt;</operator><name pos:start="297:42" pos:end="297:46">avctx</name><operator pos:start="297:47" pos:end="297:48">-&gt;</operator><name pos:start="297:49" pos:end="297:54">lowres</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="301:13" pos:end="301:82"><expr pos:start="301:13" pos:end="301:81"><call pos:start="301:13" pos:end="301:81"><name pos:start="301:13" pos:end="301:35">ff_mpeg_draw_horiz_band</name><argument_list pos:start="301:36" pos:end="301:81">(<argument pos:start="301:37" pos:end="301:37"><expr pos:start="301:37" pos:end="301:37"><name pos:start="301:37" pos:end="301:37">s</name></expr></argument>, <argument pos:start="301:40" pos:end="301:71"><expr pos:start="301:40" pos:end="301:71"><name pos:start="301:40" pos:end="301:46">mb_size</name> <operator pos:start="301:48" pos:end="301:48">*</operator> <operator pos:start="301:50" pos:end="301:50">(</operator><name pos:start="301:51" pos:end="301:57"><name pos:start="301:51" pos:end="301:51">s</name><operator pos:start="301:52" pos:end="301:53">-&gt;</operator><name pos:start="301:54" pos:end="301:57">mb_y</name></name> <operator pos:start="301:59" pos:end="301:60">&gt;&gt;</operator> <name pos:start="301:62" pos:end="301:70">field_pic</name><operator pos:start="301:71" pos:end="301:71">)</operator></expr></argument>, <argument pos:start="301:74" pos:end="301:80"><expr pos:start="301:74" pos:end="301:80"><name pos:start="301:74" pos:end="301:80">mb_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:45"><expr pos:start="303:13" pos:end="303:44"><call pos:start="303:13" pos:end="303:44"><name pos:start="303:13" pos:end="303:41">ff_mpv_report_decode_progress</name><argument_list pos:start="303:42" pos:end="303:44">(<argument pos:start="303:43" pos:end="303:43"><expr pos:start="303:43" pos:end="303:43"><name pos:start="303:43" pos:end="303:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="307:13" pos:end="307:25"><expr pos:start="307:13" pos:end="307:24"><name pos:start="307:13" pos:end="307:19"><name pos:start="307:13" pos:end="307:13">s</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:19">mb_x</name></name>  <operator pos:start="307:22" pos:end="307:22">=</operator> <literal type="number" pos:start="307:24" pos:end="307:24">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:38"><expr pos:start="309:13" pos:end="309:37"><name pos:start="309:13" pos:end="309:19"><name pos:start="309:13" pos:end="309:13">s</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:19">mb_y</name></name> <operator pos:start="309:21" pos:end="309:22">+=</operator> <literal type="number" pos:start="309:24" pos:end="309:24">1</literal> <operator pos:start="309:26" pos:end="309:27">&lt;&lt;</operator> <name pos:start="309:29" pos:end="309:37">field_pic</name></expr>;</expr_stmt>



            <if_stmt pos:start="313:13" pos:end="367:13"><if pos:start="313:13" pos:end="367:13">if <condition pos:start="313:16" pos:end="313:40">(<expr pos:start="313:17" pos:end="313:39"><name pos:start="313:17" pos:end="313:23"><name pos:start="313:17" pos:end="313:17">s</name><operator pos:start="313:18" pos:end="313:19">-&gt;</operator><name pos:start="313:20" pos:end="313:23">mb_y</name></name> <operator pos:start="313:25" pos:end="313:26">&gt;=</operator> <name pos:start="313:28" pos:end="313:39"><name pos:start="313:28" pos:end="313:28">s</name><operator pos:start="313:29" pos:end="313:30">-&gt;</operator><name pos:start="313:31" pos:end="313:39">mb_height</name></name></expr>)</condition> <block pos:start="313:42" pos:end="367:13">{<block_content pos:start="315:17" pos:end="365:29">

                <decl_stmt pos:start="315:17" pos:end="315:51"><decl pos:start="315:17" pos:end="315:50"><type pos:start="315:17" pos:end="315:19"><name pos:start="315:17" pos:end="315:19">int</name></type> <name pos:start="315:21" pos:end="315:24">left</name>   <init pos:start="315:28" pos:end="315:50">= <expr pos:start="315:30" pos:end="315:50"><call pos:start="315:30" pos:end="315:50"><name pos:start="315:30" pos:end="315:42">get_bits_left</name><argument_list pos:start="315:43" pos:end="315:50">(<argument pos:start="315:44" pos:end="315:49"><expr pos:start="315:44" pos:end="315:49"><operator pos:start="315:44" pos:end="315:44">&amp;</operator><name pos:start="315:45" pos:end="315:49"><name pos:start="315:45" pos:end="315:45">s</name><operator pos:start="315:46" pos:end="315:47">-&gt;</operator><name pos:start="315:48" pos:end="315:49">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="317:17" pos:end="329:63"><decl pos:start="317:17" pos:end="327:54"><type pos:start="317:17" pos:end="317:19"><name pos:start="317:17" pos:end="317:19">int</name></type> <name pos:start="317:21" pos:end="317:26">is_d10</name> <init pos:start="317:28" pos:end="327:54">= <expr pos:start="317:30" pos:end="327:54"><name pos:start="317:30" pos:end="317:45"><name pos:start="317:30" pos:end="317:30">s</name><operator pos:start="317:31" pos:end="317:32">-&gt;</operator><name pos:start="317:33" pos:end="317:45">chroma_format</name></name> <operator pos:start="317:47" pos:end="317:48">==</operator> <literal type="number" pos:start="317:50" pos:end="317:50">2</literal> <operator pos:start="317:52" pos:end="317:53">&amp;&amp;</operator>

                             <name pos:start="319:30" pos:end="319:41"><name pos:start="319:30" pos:end="319:30">s</name><operator pos:start="319:31" pos:end="319:32">-&gt;</operator><name pos:start="319:33" pos:end="319:41">pict_type</name></name> <operator pos:start="319:43" pos:end="319:44">==</operator> <name pos:start="319:46" pos:end="319:62">AV_PICTURE_TYPE_I</name> <operator pos:start="319:64" pos:end="319:65">&amp;&amp;</operator>

                             <name pos:start="321:30" pos:end="321:43"><name pos:start="321:30" pos:end="321:34">avctx</name><operator pos:start="321:35" pos:end="321:36">-&gt;</operator><name pos:start="321:37" pos:end="321:43">profile</name></name> <operator pos:start="321:45" pos:end="321:46">==</operator> <literal type="number" pos:start="321:48" pos:end="321:48">0</literal> <operator pos:start="321:50" pos:end="321:51">&amp;&amp;</operator> <name pos:start="321:53" pos:end="321:64"><name pos:start="321:53" pos:end="321:57">avctx</name><operator pos:start="321:58" pos:end="321:59">-&gt;</operator><name pos:start="321:60" pos:end="321:64">level</name></name> <operator pos:start="321:66" pos:end="321:67">==</operator> <literal type="number" pos:start="321:69" pos:end="321:69">5</literal> <operator pos:start="321:71" pos:end="321:72">&amp;&amp;</operator>

                             <name pos:start="323:30" pos:end="323:50"><name pos:start="323:30" pos:end="323:30">s</name><operator pos:start="323:31" pos:end="323:32">-&gt;</operator><name pos:start="323:33" pos:end="323:50">intra_dc_precision</name></name> <operator pos:start="323:52" pos:end="323:53">==</operator> <literal type="number" pos:start="323:55" pos:end="323:55">2</literal> <operator pos:start="323:57" pos:end="323:58">&amp;&amp;</operator>

                             <name pos:start="325:30" pos:end="325:44"><name pos:start="325:30" pos:end="325:30">s</name><operator pos:start="325:31" pos:end="325:32">-&gt;</operator><name pos:start="325:33" pos:end="325:44">q_scale_type</name></name> <operator pos:start="325:46" pos:end="325:47">==</operator> <literal type="number" pos:start="325:49" pos:end="325:49">1</literal> <operator pos:start="325:51" pos:end="325:52">&amp;&amp;</operator> <name pos:start="325:54" pos:end="325:70"><name pos:start="325:54" pos:end="325:54">s</name><operator pos:start="325:55" pos:end="325:56">-&gt;</operator><name pos:start="325:57" pos:end="325:70">alternate_scan</name></name> <operator pos:start="325:72" pos:end="325:73">==</operator> <literal type="number" pos:start="325:75" pos:end="325:75">0</literal> <operator pos:start="325:77" pos:end="325:78">&amp;&amp;</operator>

                             <name pos:start="327:30" pos:end="327:49"><name pos:start="327:30" pos:end="327:30">s</name><operator pos:start="327:31" pos:end="327:32">-&gt;</operator><name pos:start="327:33" pos:end="327:49">progressive_frame</name></name> <operator pos:start="327:51" pos:end="327:52">==</operator> <literal type="number" pos:start="327:54" pos:end="327:54">0</literal></expr></init></decl>

                             <comment type="block" pos:start="329:30" pos:end="329:62">/* vbv_delay == 0xBBB || 0xE10 */</comment>;</decl_stmt>



                <if_stmt pos:start="333:17" pos:end="347:17"><if pos:start="333:17" pos:end="347:17">if <condition pos:start="333:20" pos:end="333:42">(<expr pos:start="333:21" pos:end="333:41"><name pos:start="333:21" pos:end="333:24">left</name> <operator pos:start="333:26" pos:end="333:27">&gt;=</operator> <literal type="number" pos:start="333:29" pos:end="333:30">32</literal> <operator pos:start="333:32" pos:end="333:33">&amp;&amp;</operator> <operator pos:start="333:35" pos:end="333:35">!</operator><name pos:start="333:36" pos:end="333:41">is_d10</name></expr>)</condition> <block pos:start="333:44" pos:end="347:17">{<block_content pos:start="335:21" pos:end="345:21">

                    <decl_stmt pos:start="335:21" pos:end="335:45"><decl pos:start="335:21" pos:end="335:44"><type pos:start="335:21" pos:end="335:33"><name pos:start="335:21" pos:end="335:33">GetBitContext</name></type> <name pos:start="335:35" pos:end="335:36">gb</name> <init pos:start="335:38" pos:end="335:44">= <expr pos:start="335:40" pos:end="335:44"><name pos:start="335:40" pos:end="335:44"><name pos:start="335:40" pos:end="335:40">s</name><operator pos:start="335:41" pos:end="335:42">-&gt;</operator><name pos:start="335:43" pos:end="335:44">gb</name></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="337:21" pos:end="337:40"><expr pos:start="337:21" pos:end="337:39"><call pos:start="337:21" pos:end="337:39"><name pos:start="337:21" pos:end="337:34">align_get_bits</name><argument_list pos:start="337:35" pos:end="337:39">(<argument pos:start="337:36" pos:end="337:38"><expr pos:start="337:36" pos:end="337:38"><operator pos:start="337:36" pos:end="337:36">&amp;</operator><name pos:start="337:37" pos:end="337:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="339:21" pos:end="345:21"><if pos:start="339:21" pos:end="345:21">if <condition pos:start="339:24" pos:end="339:55">(<expr pos:start="339:25" pos:end="339:54"><call pos:start="339:25" pos:end="339:42"><name pos:start="339:25" pos:end="339:33">show_bits</name><argument_list pos:start="339:34" pos:end="339:42">(<argument pos:start="339:35" pos:end="339:37"><expr pos:start="339:35" pos:end="339:37"><operator pos:start="339:35" pos:end="339:35">&amp;</operator><name pos:start="339:36" pos:end="339:37">gb</name></expr></argument>, <argument pos:start="339:40" pos:end="339:41"><expr pos:start="339:40" pos:end="339:41"><literal type="number" pos:start="339:40" pos:end="339:41">24</literal></expr></argument>)</argument_list></call> <operator pos:start="339:44" pos:end="339:45">==</operator> <literal type="number" pos:start="339:47" pos:end="339:54">0x060E2B</literal></expr>)</condition> <block pos:start="339:57" pos:end="345:21">{<block_content pos:start="341:25" pos:end="343:35">

                        <expr_stmt pos:start="341:25" pos:end="341:96"><expr pos:start="341:25" pos:end="341:95"><call pos:start="341:25" pos:end="341:95"><name pos:start="341:25" pos:end="341:30">av_log</name><argument_list pos:start="341:31" pos:end="341:95">(<argument pos:start="341:32" pos:end="341:36"><expr pos:start="341:32" pos:end="341:36"><name pos:start="341:32" pos:end="341:36">avctx</name></expr></argument>, <argument pos:start="341:39" pos:end="341:50"><expr pos:start="341:39" pos:end="341:50"><name pos:start="341:39" pos:end="341:50">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="341:53" pos:end="341:94"><expr pos:start="341:53" pos:end="341:94"><literal type="string" pos:start="341:53" pos:end="341:94">"Invalid MXF data found in video stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="343:25" pos:end="343:35"><expr pos:start="343:25" pos:end="343:34"><name pos:start="343:25" pos:end="343:30">is_d10</name> <operator pos:start="343:32" pos:end="343:32">=</operator> <literal type="number" pos:start="343:34" pos:end="343:34">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="351:17" pos:end="365:29"><if pos:start="351:17" pos:end="363:17">if <condition pos:start="351:20" pos:end="355:98">(<expr pos:start="351:21" pos:end="355:97"><name pos:start="351:21" pos:end="351:24">left</name> <operator pos:start="351:26" pos:end="351:26">&lt;</operator> <literal type="number" pos:start="351:28" pos:end="351:28">0</literal> <operator pos:start="351:30" pos:end="351:31">||</operator>

                    <operator pos:start="353:21" pos:end="353:21">(</operator><name pos:start="353:22" pos:end="353:25">left</name> <operator pos:start="353:27" pos:end="353:28">&amp;&amp;</operator> <call pos:start="353:30" pos:end="353:63"><name pos:start="353:30" pos:end="353:38">show_bits</name><argument_list pos:start="353:39" pos:end="353:63">(<argument pos:start="353:40" pos:end="353:45"><expr pos:start="353:40" pos:end="353:45"><operator pos:start="353:40" pos:end="353:40">&amp;</operator><name pos:start="353:41" pos:end="353:45"><name pos:start="353:41" pos:end="353:41">s</name><operator pos:start="353:42" pos:end="353:43">-&gt;</operator><name pos:start="353:44" pos:end="353:45">gb</name></name></expr></argument>, <argument pos:start="353:48" pos:end="353:62"><expr pos:start="353:48" pos:end="353:62"><call pos:start="353:48" pos:end="353:62"><name pos:start="353:48" pos:end="353:52">FFMIN</name><argument_list pos:start="353:53" pos:end="353:62">(<argument pos:start="353:54" pos:end="353:57"><expr pos:start="353:54" pos:end="353:57"><name pos:start="353:54" pos:end="353:57">left</name></expr></argument>, <argument pos:start="353:60" pos:end="353:61"><expr pos:start="353:60" pos:end="353:61"><literal type="number" pos:start="353:60" pos:end="353:61">23</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="353:65" pos:end="353:66">&amp;&amp;</operator> <operator pos:start="353:68" pos:end="353:68">!</operator><name pos:start="353:69" pos:end="353:74">is_d10</name><operator pos:start="353:75" pos:end="353:75">)</operator> <operator pos:start="353:77" pos:end="353:78">||</operator>

                    <operator pos:start="355:21" pos:end="355:21">(</operator><operator pos:start="355:22" pos:end="355:22">(</operator><name pos:start="355:23" pos:end="355:44"><name pos:start="355:23" pos:end="355:27">avctx</name><operator pos:start="355:28" pos:end="355:29">-&gt;</operator><name pos:start="355:30" pos:end="355:44">err_recognition</name></name> <operator pos:start="355:46" pos:end="355:46">&amp;</operator> <operator pos:start="355:48" pos:end="355:48">(</operator><name pos:start="355:49" pos:end="355:63">AV_EF_BITSTREAM</name> <operator pos:start="355:65" pos:end="355:65">|</operator> <name pos:start="355:67" pos:end="355:82">AV_EF_AGGRESSIVE</name><operator pos:start="355:83" pos:end="355:83">)</operator><operator pos:start="355:84" pos:end="355:84">)</operator> <operator pos:start="355:86" pos:end="355:87">&amp;&amp;</operator> <name pos:start="355:89" pos:end="355:92">left</name> <operator pos:start="355:94" pos:end="355:94">&gt;</operator> <literal type="number" pos:start="355:96" pos:end="355:96">8</literal><operator pos:start="355:97" pos:end="355:97">)</operator></expr>)</condition> <block pos:start="355:100" pos:end="363:17">{<block_content pos:start="357:21" pos:end="361:47">

                    <expr_stmt pos:start="357:21" pos:end="359:69"><expr pos:start="357:21" pos:end="359:68"><call pos:start="357:21" pos:end="359:68"><name pos:start="357:21" pos:end="357:26">av_log</name><argument_list pos:start="357:27" pos:end="359:68">(<argument pos:start="357:28" pos:end="357:32"><expr pos:start="357:28" pos:end="357:32"><name pos:start="357:28" pos:end="357:32">avctx</name></expr></argument>, <argument pos:start="357:35" pos:end="357:46"><expr pos:start="357:35" pos:end="357:46"><name pos:start="357:35" pos:end="357:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="357:49" pos:end="357:76"><expr pos:start="357:49" pos:end="357:76"><literal type="string" pos:start="357:49" pos:end="357:76">"end mismatch left=%d %0X\n"</literal></expr></argument>,

                           <argument pos:start="359:28" pos:end="359:31"><expr pos:start="359:28" pos:end="359:31"><name pos:start="359:28" pos:end="359:31">left</name></expr></argument>, <argument pos:start="359:34" pos:end="359:67"><expr pos:start="359:34" pos:end="359:67"><call pos:start="359:34" pos:end="359:67"><name pos:start="359:34" pos:end="359:42">show_bits</name><argument_list pos:start="359:43" pos:end="359:67">(<argument pos:start="359:44" pos:end="359:49"><expr pos:start="359:44" pos:end="359:49"><operator pos:start="359:44" pos:end="359:44">&amp;</operator><name pos:start="359:45" pos:end="359:49"><name pos:start="359:45" pos:end="359:45">s</name><operator pos:start="359:46" pos:end="359:47">-&gt;</operator><name pos:start="359:48" pos:end="359:49">gb</name></name></expr></argument>, <argument pos:start="359:52" pos:end="359:66"><expr pos:start="359:52" pos:end="359:66"><call pos:start="359:52" pos:end="359:66"><name pos:start="359:52" pos:end="359:56">FFMIN</name><argument_list pos:start="359:57" pos:end="359:66">(<argument pos:start="359:58" pos:end="359:61"><expr pos:start="359:58" pos:end="359:61"><name pos:start="359:58" pos:end="359:61">left</name></expr></argument>, <argument pos:start="359:64" pos:end="359:65"><expr pos:start="359:64" pos:end="359:65"><literal type="number" pos:start="359:64" pos:end="359:65">23</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="361:21" pos:end="361:47">return <expr pos:start="361:28" pos:end="361:46"><name pos:start="361:28" pos:end="361:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if> <else pos:start="363:19" pos:end="365:29">else<block type="pseudo" pos:start="365:21" pos:end="365:29"><block_content pos:start="365:21" pos:end="365:29">

                    <goto pos:start="365:21" pos:end="365:29">goto <name pos:start="365:26" pos:end="365:28">eos</name>;</goto></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="369:13" pos:end="369:78">// There are some files out there which are missing the last slice</comment>

            <comment type="line" pos:start="371:13" pos:end="371:73">// in cases where the slice is completely outside the visible</comment>

            <comment type="line" pos:start="373:13" pos:end="373:82">// area, we detect this here instead of running into the end expecting</comment>

            <comment type="line" pos:start="375:13" pos:end="375:24">// more data</comment>

            <if_stmt pos:start="377:13" pos:end="389:25"><if pos:start="377:13" pos:end="389:25">if <condition pos:start="377:16" pos:end="387:42">(<expr pos:start="377:17" pos:end="387:41"><name pos:start="377:17" pos:end="377:23"><name pos:start="377:17" pos:end="377:17">s</name><operator pos:start="377:18" pos:end="377:19">-&gt;</operator><name pos:start="377:20" pos:end="377:23">mb_y</name></name> <operator pos:start="377:25" pos:end="377:26">&gt;=</operator> <operator pos:start="377:28" pos:end="377:28">(</operator><operator pos:start="377:29" pos:end="377:29">(</operator><name pos:start="377:30" pos:end="377:38"><name pos:start="377:30" pos:end="377:30">s</name><operator pos:start="377:31" pos:end="377:32">-&gt;</operator><name pos:start="377:33" pos:end="377:38">height</name></name> <operator pos:start="377:40" pos:end="377:40">+</operator> <literal type="number" pos:start="377:42" pos:end="377:43">15</literal><operator pos:start="377:44" pos:end="377:44">)</operator> <operator pos:start="377:46" pos:end="377:47">&gt;&gt;</operator> <literal type="number" pos:start="377:49" pos:end="377:49">4</literal><operator pos:start="377:50" pos:end="377:50">)</operator> <operator pos:start="377:52" pos:end="377:53">&amp;&amp;</operator>

                <operator pos:start="379:17" pos:end="379:17">!</operator><name pos:start="379:18" pos:end="379:40"><name pos:start="379:18" pos:end="379:18">s</name><operator pos:start="379:19" pos:end="379:20">-&gt;</operator><name pos:start="379:21" pos:end="379:40">progressive_sequence</name></name> <operator pos:start="379:42" pos:end="379:43">&amp;&amp;</operator>

                <call pos:start="381:17" pos:end="381:37"><name pos:start="381:17" pos:end="381:29">get_bits_left</name><argument_list pos:start="381:30" pos:end="381:37">(<argument pos:start="381:31" pos:end="381:36"><expr pos:start="381:31" pos:end="381:36"><operator pos:start="381:31" pos:end="381:31">&amp;</operator><name pos:start="381:32" pos:end="381:36"><name pos:start="381:32" pos:end="381:32">s</name><operator pos:start="381:33" pos:end="381:34">-&gt;</operator><name pos:start="381:35" pos:end="381:36">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="381:39" pos:end="381:40">&lt;=</operator> <literal type="number" pos:start="381:42" pos:end="381:42">8</literal> <operator pos:start="381:44" pos:end="381:45">&amp;&amp;</operator>

                <call pos:start="383:17" pos:end="383:37"><name pos:start="383:17" pos:end="383:29">get_bits_left</name><argument_list pos:start="383:30" pos:end="383:37">(<argument pos:start="383:31" pos:end="383:36"><expr pos:start="383:31" pos:end="383:36"><operator pos:start="383:31" pos:end="383:31">&amp;</operator><name pos:start="383:32" pos:end="383:36"><name pos:start="383:32" pos:end="383:32">s</name><operator pos:start="383:33" pos:end="383:34">-&gt;</operator><name pos:start="383:35" pos:end="383:36">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="383:39" pos:end="383:40">&gt;=</operator> <literal type="number" pos:start="383:42" pos:end="383:42">0</literal> <operator pos:start="383:44" pos:end="383:45">&amp;&amp;</operator>

                <name pos:start="385:17" pos:end="385:30"><name pos:start="385:17" pos:end="385:17">s</name><operator pos:start="385:18" pos:end="385:19">-&gt;</operator><name pos:start="385:20" pos:end="385:30">mb_skip_run</name></name> <operator pos:start="385:32" pos:end="385:33">==</operator> <operator pos:start="385:35" pos:end="385:35">-</operator><literal type="number" pos:start="385:36" pos:end="385:36">1</literal> <operator pos:start="385:38" pos:end="385:39">&amp;&amp;</operator>

                <call pos:start="387:17" pos:end="387:36"><name pos:start="387:17" pos:end="387:25">show_bits</name><argument_list pos:start="387:26" pos:end="387:36">(<argument pos:start="387:27" pos:end="387:32"><expr pos:start="387:27" pos:end="387:32"><operator pos:start="387:27" pos:end="387:27">&amp;</operator><name pos:start="387:28" pos:end="387:32"><name pos:start="387:28" pos:end="387:28">s</name><operator pos:start="387:29" pos:end="387:30">-&gt;</operator><name pos:start="387:31" pos:end="387:32">gb</name></name></expr></argument>, <argument pos:start="387:35" pos:end="387:35"><expr pos:start="387:35" pos:end="387:35"><literal type="number" pos:start="387:35" pos:end="387:35">8</literal></expr></argument>)</argument_list></call> <operator pos:start="387:38" pos:end="387:39">==</operator> <literal type="number" pos:start="387:41" pos:end="387:41">0</literal></expr>)</condition><block type="pseudo" pos:start="389:17" pos:end="389:25"><block_content pos:start="389:17" pos:end="389:25">

                <goto pos:start="389:17" pos:end="389:25">goto <name pos:start="389:22" pos:end="389:24">eos</name>;</goto></block_content></block></if></if_stmt>



            <expr_stmt pos:start="393:13" pos:end="393:35"><expr pos:start="393:13" pos:end="393:34"><call pos:start="393:13" pos:end="393:34"><name pos:start="393:13" pos:end="393:31">ff_init_block_index</name><argument_list pos:start="393:32" pos:end="393:34">(<argument pos:start="393:33" pos:end="393:33"><expr pos:start="393:33" pos:end="393:33"><name pos:start="393:33" pos:end="393:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="399:9" pos:end="399:30">/* skip mb handling */</comment>

        <if_stmt pos:start="401:9" pos:end="515:9"><if pos:start="401:9" pos:end="515:9">if <condition pos:start="401:12" pos:end="401:33">(<expr pos:start="401:13" pos:end="401:32"><name pos:start="401:13" pos:end="401:26"><name pos:start="401:13" pos:end="401:13">s</name><operator pos:start="401:14" pos:end="401:15">-&gt;</operator><name pos:start="401:16" pos:end="401:26">mb_skip_run</name></name> <operator pos:start="401:28" pos:end="401:29">==</operator> <operator pos:start="401:31" pos:end="401:31">-</operator><literal type="number" pos:start="401:32" pos:end="401:32">1</literal></expr>)</condition> <block pos:start="401:35" pos:end="515:9">{<block_content pos:start="405:13" pos:end="513:13">

            <comment type="block" pos:start="403:13" pos:end="403:38">/* read increment again */</comment>

            <expr_stmt pos:start="405:13" pos:end="405:31"><expr pos:start="405:13" pos:end="405:30"><name pos:start="405:13" pos:end="405:26"><name pos:start="405:13" pos:end="405:13">s</name><operator pos:start="405:14" pos:end="405:15">-&gt;</operator><name pos:start="405:16" pos:end="405:26">mb_skip_run</name></name> <operator pos:start="405:28" pos:end="405:28">=</operator> <literal type="number" pos:start="405:30" pos:end="405:30">0</literal></expr>;</expr_stmt>

            <for pos:start="407:13" pos:end="451:13">for <control pos:start="407:17" pos:end="407:20">(<init pos:start="407:18" pos:end="407:18">;</init><condition pos:start="407:19" pos:end="407:19">;</condition><incr/>)</control> <block pos:start="407:22" pos:end="451:13">{<block_content pos:start="409:17" pos:end="449:17">

                <decl_stmt pos:start="409:17" pos:end="411:56"><decl pos:start="409:17" pos:end="411:55"><type pos:start="409:17" pos:end="409:19"><name pos:start="409:17" pos:end="409:19">int</name></type> <name pos:start="409:21" pos:end="409:24">code</name> <init pos:start="409:26" pos:end="411:55">= <expr pos:start="409:28" pos:end="411:55"><call pos:start="409:28" pos:end="411:55"><name pos:start="409:28" pos:end="409:35">get_vlc2</name><argument_list pos:start="409:36" pos:end="411:55">(<argument pos:start="409:37" pos:end="409:42"><expr pos:start="409:37" pos:end="409:42"><operator pos:start="409:37" pos:end="409:37">&amp;</operator><name pos:start="409:38" pos:end="409:42"><name pos:start="409:38" pos:end="409:38">s</name><operator pos:start="409:39" pos:end="409:40">-&gt;</operator><name pos:start="409:41" pos:end="409:42">gb</name></name></expr></argument>, <argument pos:start="409:45" pos:end="409:63"><expr pos:start="409:45" pos:end="409:63"><name pos:start="409:45" pos:end="409:63"><name pos:start="409:45" pos:end="409:57">ff_mbincr_vlc</name><operator pos:start="409:58" pos:end="409:58">.</operator><name pos:start="409:59" pos:end="409:63">table</name></name></expr></argument>,

                                    <argument pos:start="411:37" pos:end="411:51"><expr pos:start="411:37" pos:end="411:51"><name pos:start="411:37" pos:end="411:51">MBINCR_VLC_BITS</name></expr></argument>, <argument pos:start="411:54" pos:end="411:54"><expr pos:start="411:54" pos:end="411:54"><literal type="number" pos:start="411:54" pos:end="411:54">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="413:17" pos:end="419:17"><if pos:start="413:17" pos:end="419:17">if <condition pos:start="413:20" pos:end="413:29">(<expr pos:start="413:21" pos:end="413:28"><name pos:start="413:21" pos:end="413:24">code</name> <operator pos:start="413:26" pos:end="413:26">&lt;</operator> <literal type="number" pos:start="413:28" pos:end="413:28">0</literal></expr>)</condition> <block pos:start="413:31" pos:end="419:17">{<block_content pos:start="415:21" pos:end="417:47">

                    <expr_stmt pos:start="415:21" pos:end="415:72"><expr pos:start="415:21" pos:end="415:71"><call pos:start="415:21" pos:end="415:71"><name pos:start="415:21" pos:end="415:26">av_log</name><argument_list pos:start="415:27" pos:end="415:71">(<argument pos:start="415:28" pos:end="415:35"><expr pos:start="415:28" pos:end="415:35"><name pos:start="415:28" pos:end="415:35"><name pos:start="415:28" pos:end="415:28">s</name><operator pos:start="415:29" pos:end="415:30">-&gt;</operator><name pos:start="415:31" pos:end="415:35">avctx</name></name></expr></argument>, <argument pos:start="415:38" pos:end="415:49"><expr pos:start="415:38" pos:end="415:49"><name pos:start="415:38" pos:end="415:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="415:52" pos:end="415:70"><expr pos:start="415:52" pos:end="415:70"><literal type="string" pos:start="415:52" pos:end="415:70">"mb incr damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="417:21" pos:end="417:47">return <expr pos:start="417:28" pos:end="417:46"><name pos:start="417:28" pos:end="417:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="421:17" pos:end="449:17"><if pos:start="421:17" pos:end="443:17">if <condition pos:start="421:20" pos:end="421:31">(<expr pos:start="421:21" pos:end="421:30"><name pos:start="421:21" pos:end="421:24">code</name> <operator pos:start="421:26" pos:end="421:27">&gt;=</operator> <literal type="number" pos:start="421:29" pos:end="421:30">33</literal></expr>)</condition> <block pos:start="421:33" pos:end="443:17">{<block_content pos:start="423:21" pos:end="439:21">

                    <if_stmt pos:start="423:21" pos:end="439:21"><if pos:start="423:21" pos:end="427:21">if <condition pos:start="423:24" pos:end="423:35">(<expr pos:start="423:25" pos:end="423:34"><name pos:start="423:25" pos:end="423:28">code</name> <operator pos:start="423:30" pos:end="423:31">==</operator> <literal type="number" pos:start="423:33" pos:end="423:34">33</literal></expr>)</condition> <block pos:start="423:37" pos:end="427:21">{<block_content pos:start="425:25" pos:end="425:45">

                        <expr_stmt pos:start="425:25" pos:end="425:45"><expr pos:start="425:25" pos:end="425:44"><name pos:start="425:25" pos:end="425:38"><name pos:start="425:25" pos:end="425:25">s</name><operator pos:start="425:26" pos:end="425:27">-&gt;</operator><name pos:start="425:28" pos:end="425:38">mb_skip_run</name></name> <operator pos:start="425:40" pos:end="425:41">+=</operator> <literal type="number" pos:start="425:43" pos:end="425:44">33</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="427:23" pos:end="439:21">else if <condition pos:start="427:31" pos:end="427:42">(<expr pos:start="427:32" pos:end="427:41"><name pos:start="427:32" pos:end="427:35">code</name> <operator pos:start="427:37" pos:end="427:38">==</operator> <literal type="number" pos:start="427:40" pos:end="427:41">35</literal></expr>)</condition> <block pos:start="427:44" pos:end="439:21">{<block_content pos:start="429:25" pos:end="437:33">

                        <if_stmt pos:start="429:25" pos:end="435:25"><if pos:start="429:25" pos:end="435:25">if <condition pos:start="429:28" pos:end="429:78">(<expr pos:start="429:29" pos:end="429:77"><name pos:start="429:29" pos:end="429:42"><name pos:start="429:29" pos:end="429:29">s</name><operator pos:start="429:30" pos:end="429:31">-&gt;</operator><name pos:start="429:32" pos:end="429:42">mb_skip_run</name></name> <operator pos:start="429:44" pos:end="429:45">!=</operator> <literal type="number" pos:start="429:47" pos:end="429:47">0</literal> <operator pos:start="429:49" pos:end="429:50">||</operator> <call pos:start="429:52" pos:end="429:72"><name pos:start="429:52" pos:end="429:60">show_bits</name><argument_list pos:start="429:61" pos:end="429:72">(<argument pos:start="429:62" pos:end="429:67"><expr pos:start="429:62" pos:end="429:67"><operator pos:start="429:62" pos:end="429:62">&amp;</operator><name pos:start="429:63" pos:end="429:67"><name pos:start="429:63" pos:end="429:63">s</name><operator pos:start="429:64" pos:end="429:65">-&gt;</operator><name pos:start="429:66" pos:end="429:67">gb</name></name></expr></argument>, <argument pos:start="429:70" pos:end="429:71"><expr pos:start="429:70" pos:end="429:71"><literal type="number" pos:start="429:70" pos:end="429:71">15</literal></expr></argument>)</argument_list></call> <operator pos:start="429:74" pos:end="429:75">!=</operator> <literal type="number" pos:start="429:77" pos:end="429:77">0</literal></expr>)</condition> <block pos:start="429:80" pos:end="435:25">{<block_content pos:start="431:29" pos:end="433:55">

                            <expr_stmt pos:start="431:29" pos:end="431:79"><expr pos:start="431:29" pos:end="431:78"><call pos:start="431:29" pos:end="431:78"><name pos:start="431:29" pos:end="431:34">av_log</name><argument_list pos:start="431:35" pos:end="431:78">(<argument pos:start="431:36" pos:end="431:43"><expr pos:start="431:36" pos:end="431:43"><name pos:start="431:36" pos:end="431:43"><name pos:start="431:36" pos:end="431:36">s</name><operator pos:start="431:37" pos:end="431:38">-&gt;</operator><name pos:start="431:39" pos:end="431:43">avctx</name></name></expr></argument>, <argument pos:start="431:46" pos:end="431:57"><expr pos:start="431:46" pos:end="431:57"><name pos:start="431:46" pos:end="431:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="431:60" pos:end="431:77"><expr pos:start="431:60" pos:end="431:77"><literal type="string" pos:start="431:60" pos:end="431:77">"slice mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="433:29" pos:end="433:55">return <expr pos:start="433:36" pos:end="433:54"><name pos:start="433:36" pos:end="433:54">AVERROR_INVALIDDATA</name></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <goto pos:start="437:25" pos:end="437:33">goto <name pos:start="437:30" pos:end="437:32">eos</name>;</goto> <comment type="block" pos:start="437:35" pos:end="437:52">/* end of slice */</comment>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="441:21" pos:end="441:60">/* otherwise, stuffing, nothing to do */</comment>

                </block_content>}</block></if> <else pos:start="443:19" pos:end="449:17">else <block pos:start="443:24" pos:end="449:17">{<block_content pos:start="445:21" pos:end="447:26">

                    <expr_stmt pos:start="445:21" pos:end="445:43"><expr pos:start="445:21" pos:end="445:42"><name pos:start="445:21" pos:end="445:34"><name pos:start="445:21" pos:end="445:21">s</name><operator pos:start="445:22" pos:end="445:23">-&gt;</operator><name pos:start="445:24" pos:end="445:34">mb_skip_run</name></name> <operator pos:start="445:36" pos:end="445:37">+=</operator> <name pos:start="445:39" pos:end="445:42">code</name></expr>;</expr_stmt>

                    <break pos:start="447:21" pos:end="447:26">break;</break>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="453:13" pos:end="513:13"><if pos:start="453:13" pos:end="513:13">if <condition pos:start="453:16" pos:end="453:31">(<expr pos:start="453:17" pos:end="453:30"><name pos:start="453:17" pos:end="453:30"><name pos:start="453:17" pos:end="453:17">s</name><operator pos:start="453:18" pos:end="453:19">-&gt;</operator><name pos:start="453:20" pos:end="453:30">mb_skip_run</name></name></expr>)</condition> <block pos:start="453:33" pos:end="513:13">{<block_content pos:start="455:17" pos:end="511:17">

                <decl_stmt pos:start="455:17" pos:end="455:22"><decl pos:start="455:17" pos:end="455:21"><type pos:start="455:17" pos:end="455:19"><name pos:start="455:17" pos:end="455:19">int</name></type> <name pos:start="455:21" pos:end="455:21">i</name></decl>;</decl_stmt>

                <if_stmt pos:start="457:17" pos:end="465:17"><if pos:start="457:17" pos:end="465:17">if <condition pos:start="457:20" pos:end="457:54">(<expr pos:start="457:21" pos:end="457:53"><name pos:start="457:21" pos:end="457:32"><name pos:start="457:21" pos:end="457:21">s</name><operator pos:start="457:22" pos:end="457:23">-&gt;</operator><name pos:start="457:24" pos:end="457:32">pict_type</name></name> <operator pos:start="457:34" pos:end="457:35">==</operator> <name pos:start="457:37" pos:end="457:53">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="457:56" pos:end="465:17">{<block_content pos:start="459:21" pos:end="463:47">

                    <expr_stmt pos:start="459:21" pos:end="461:81"><expr pos:start="459:21" pos:end="461:80"><call pos:start="459:21" pos:end="461:80"><name pos:start="459:21" pos:end="459:26">av_log</name><argument_list pos:start="459:27" pos:end="461:80">(<argument pos:start="459:28" pos:end="459:35"><expr pos:start="459:28" pos:end="459:35"><name pos:start="459:28" pos:end="459:35"><name pos:start="459:28" pos:end="459:28">s</name><operator pos:start="459:29" pos:end="459:30">-&gt;</operator><name pos:start="459:31" pos:end="459:35">avctx</name></name></expr></argument>, <argument pos:start="459:38" pos:end="459:49"><expr pos:start="459:38" pos:end="459:49"><name pos:start="459:38" pos:end="459:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="461:28" pos:end="461:61"><expr pos:start="461:28" pos:end="461:61"><literal type="string" pos:start="461:28" pos:end="461:61">"skipped MB in I frame at %d %d\n"</literal></expr></argument>, <argument pos:start="461:64" pos:end="461:70"><expr pos:start="461:64" pos:end="461:70"><name pos:start="461:64" pos:end="461:70"><name pos:start="461:64" pos:end="461:64">s</name><operator pos:start="461:65" pos:end="461:66">-&gt;</operator><name pos:start="461:67" pos:end="461:70">mb_x</name></name></expr></argument>, <argument pos:start="461:73" pos:end="461:79"><expr pos:start="461:73" pos:end="461:79"><name pos:start="461:73" pos:end="461:79"><name pos:start="461:73" pos:end="461:73">s</name><operator pos:start="461:74" pos:end="461:75">-&gt;</operator><name pos:start="461:76" pos:end="461:79">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="463:21" pos:end="463:47">return <expr pos:start="463:28" pos:end="463:46"><name pos:start="463:28" pos:end="463:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="469:17" pos:end="469:29">/* skip mb */</comment>

                <expr_stmt pos:start="471:17" pos:end="471:32"><expr pos:start="471:17" pos:end="471:31"><name pos:start="471:17" pos:end="471:27"><name pos:start="471:17" pos:end="471:17">s</name><operator pos:start="471:18" pos:end="471:19">-&gt;</operator><name pos:start="471:20" pos:end="471:27">mb_intra</name></name> <operator pos:start="471:29" pos:end="471:29">=</operator> <literal type="number" pos:start="471:31" pos:end="471:31">0</literal></expr>;</expr_stmt>

                <for pos:start="473:17" pos:end="475:48">for <control pos:start="473:21" pos:end="473:40">(<init pos:start="473:22" pos:end="473:27"><expr pos:start="473:22" pos:end="473:26"><name pos:start="473:22" pos:end="473:22">i</name> <operator pos:start="473:24" pos:end="473:24">=</operator> <literal type="number" pos:start="473:26" pos:end="473:26">0</literal></expr>;</init> <condition pos:start="473:29" pos:end="473:35"><expr pos:start="473:29" pos:end="473:34"><name pos:start="473:29" pos:end="473:29">i</name> <operator pos:start="473:31" pos:end="473:31">&lt;</operator> <literal type="number" pos:start="473:33" pos:end="473:34">12</literal></expr>;</condition> <incr pos:start="473:37" pos:end="473:39"><expr pos:start="473:37" pos:end="473:39"><name pos:start="473:37" pos:end="473:37">i</name><operator pos:start="473:38" pos:end="473:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="475:21" pos:end="475:48"><block_content pos:start="475:21" pos:end="475:48">

                    <expr_stmt pos:start="475:21" pos:end="475:48"><expr pos:start="475:21" pos:end="475:47"><name pos:start="475:21" pos:end="475:42"><name pos:start="475:21" pos:end="475:21">s</name><operator pos:start="475:22" pos:end="475:23">-&gt;</operator><name pos:start="475:24" pos:end="475:39">block_last_index</name><index pos:start="475:40" pos:end="475:42">[<expr pos:start="475:41" pos:end="475:41"><name pos:start="475:41" pos:end="475:41">i</name></expr>]</index></name> <operator pos:start="475:44" pos:end="475:44">=</operator> <operator pos:start="475:46" pos:end="475:46">-</operator><literal type="number" pos:start="475:47" pos:end="475:47">1</literal></expr>;</expr_stmt></block_content></block></for>

                <if_stmt pos:start="477:17" pos:end="483:47"><if pos:start="477:17" pos:end="479:47">if <condition pos:start="477:20" pos:end="477:55">(<expr pos:start="477:21" pos:end="477:54"><name pos:start="477:21" pos:end="477:40"><name pos:start="477:21" pos:end="477:21">s</name><operator pos:start="477:22" pos:end="477:23">-&gt;</operator><name pos:start="477:24" pos:end="477:40">picture_structure</name></name> <operator pos:start="477:42" pos:end="477:43">==</operator> <name pos:start="477:45" pos:end="477:54">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="479:21" pos:end="479:47"><block_content pos:start="479:21" pos:end="479:47">

                    <expr_stmt pos:start="479:21" pos:end="479:47"><expr pos:start="479:21" pos:end="479:46"><name pos:start="479:21" pos:end="479:30"><name pos:start="479:21" pos:end="479:21">s</name><operator pos:start="479:22" pos:end="479:23">-&gt;</operator><name pos:start="479:24" pos:end="479:30">mv_type</name></name> <operator pos:start="479:32" pos:end="479:32">=</operator> <name pos:start="479:34" pos:end="479:46">MV_TYPE_16X16</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="481:17" pos:end="483:47">else<block type="pseudo" pos:start="483:21" pos:end="483:47"><block_content pos:start="483:21" pos:end="483:47">

                    <expr_stmt pos:start="483:21" pos:end="483:47"><expr pos:start="483:21" pos:end="483:46"><name pos:start="483:21" pos:end="483:30"><name pos:start="483:21" pos:end="483:21">s</name><operator pos:start="483:22" pos:end="483:23">-&gt;</operator><name pos:start="483:24" pos:end="483:30">mv_type</name></name> <operator pos:start="483:32" pos:end="483:32">=</operator> <name pos:start="483:34" pos:end="483:46">MV_TYPE_FIELD</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="485:17" pos:end="511:17"><if pos:start="485:17" pos:end="499:17">if <condition pos:start="485:20" pos:end="485:54">(<expr pos:start="485:21" pos:end="485:53"><name pos:start="485:21" pos:end="485:32"><name pos:start="485:21" pos:end="485:21">s</name><operator pos:start="485:22" pos:end="485:23">-&gt;</operator><name pos:start="485:24" pos:end="485:32">pict_type</name></name> <operator pos:start="485:34" pos:end="485:35">==</operator> <name pos:start="485:37" pos:end="485:53">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="485:56" pos:end="499:17">{<block_content pos:start="489:21" pos:end="497:75">

                    <comment type="block" pos:start="487:21" pos:end="487:66">/* if P type, zero motion vector is implied */</comment>

                    <expr_stmt pos:start="489:21" pos:end="489:59"><expr pos:start="489:21" pos:end="489:58"><name pos:start="489:21" pos:end="489:29"><name pos:start="489:21" pos:end="489:21">s</name><operator pos:start="489:22" pos:end="489:23">-&gt;</operator><name pos:start="489:24" pos:end="489:29">mv_dir</name></name>             <operator pos:start="489:43" pos:end="489:43">=</operator> <name pos:start="489:45" pos:end="489:58">MV_DIR_FORWARD</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="491:21" pos:end="491:68"><expr pos:start="491:21" pos:end="491:67"><name pos:start="491:21" pos:end="491:34"><name pos:start="491:21" pos:end="491:21">s</name><operator pos:start="491:22" pos:end="491:23">-&gt;</operator><name pos:start="491:24" pos:end="491:25">mv</name><index pos:start="491:26" pos:end="491:28">[<expr pos:start="491:27" pos:end="491:27"><literal type="number" pos:start="491:27" pos:end="491:27">0</literal></expr>]</index><index pos:start="491:29" pos:end="491:31">[<expr pos:start="491:30" pos:end="491:30"><literal type="number" pos:start="491:30" pos:end="491:30">0</literal></expr>]</index><index pos:start="491:32" pos:end="491:34">[<expr pos:start="491:33" pos:end="491:33"><literal type="number" pos:start="491:33" pos:end="491:33">0</literal></expr>]</index></name>        <operator pos:start="491:43" pos:end="491:43">=</operator> <name pos:start="491:45" pos:end="491:58"><name pos:start="491:45" pos:end="491:45">s</name><operator pos:start="491:46" pos:end="491:47">-&gt;</operator><name pos:start="491:48" pos:end="491:49">mv</name><index pos:start="491:50" pos:end="491:52">[<expr pos:start="491:51" pos:end="491:51"><literal type="number" pos:start="491:51" pos:end="491:51">0</literal></expr>]</index><index pos:start="491:53" pos:end="491:55">[<expr pos:start="491:54" pos:end="491:54"><literal type="number" pos:start="491:54" pos:end="491:54">0</literal></expr>]</index><index pos:start="491:56" pos:end="491:58">[<expr pos:start="491:57" pos:end="491:57"><literal type="number" pos:start="491:57" pos:end="491:57">1</literal></expr>]</index></name>      <operator pos:start="491:65" pos:end="491:65">=</operator> <literal type="number" pos:start="491:67" pos:end="491:67">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="493:21" pos:end="493:68"><expr pos:start="493:21" pos:end="493:67"><name pos:start="493:21" pos:end="493:39"><name pos:start="493:21" pos:end="493:21">s</name><operator pos:start="493:22" pos:end="493:23">-&gt;</operator><name pos:start="493:24" pos:end="493:30">last_mv</name><index pos:start="493:31" pos:end="493:33">[<expr pos:start="493:32" pos:end="493:32"><literal type="number" pos:start="493:32" pos:end="493:32">0</literal></expr>]</index><index pos:start="493:34" pos:end="493:36">[<expr pos:start="493:35" pos:end="493:35"><literal type="number" pos:start="493:35" pos:end="493:35">0</literal></expr>]</index><index pos:start="493:37" pos:end="493:39">[<expr pos:start="493:38" pos:end="493:38"><literal type="number" pos:start="493:38" pos:end="493:38">0</literal></expr>]</index></name>   <operator pos:start="493:43" pos:end="493:43">=</operator> <name pos:start="493:45" pos:end="493:63"><name pos:start="493:45" pos:end="493:45">s</name><operator pos:start="493:46" pos:end="493:47">-&gt;</operator><name pos:start="493:48" pos:end="493:54">last_mv</name><index pos:start="493:55" pos:end="493:57">[<expr pos:start="493:56" pos:end="493:56"><literal type="number" pos:start="493:56" pos:end="493:56">0</literal></expr>]</index><index pos:start="493:58" pos:end="493:60">[<expr pos:start="493:59" pos:end="493:59"><literal type="number" pos:start="493:59" pos:end="493:59">0</literal></expr>]</index><index pos:start="493:61" pos:end="493:63">[<expr pos:start="493:62" pos:end="493:62"><literal type="number" pos:start="493:62" pos:end="493:62">1</literal></expr>]</index></name> <operator pos:start="493:65" pos:end="493:65">=</operator> <literal type="number" pos:start="493:67" pos:end="493:67">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="495:21" pos:end="495:68"><expr pos:start="495:21" pos:end="495:67"><name pos:start="495:21" pos:end="495:39"><name pos:start="495:21" pos:end="495:21">s</name><operator pos:start="495:22" pos:end="495:23">-&gt;</operator><name pos:start="495:24" pos:end="495:30">last_mv</name><index pos:start="495:31" pos:end="495:33">[<expr pos:start="495:32" pos:end="495:32"><literal type="number" pos:start="495:32" pos:end="495:32">0</literal></expr>]</index><index pos:start="495:34" pos:end="495:36">[<expr pos:start="495:35" pos:end="495:35"><literal type="number" pos:start="495:35" pos:end="495:35">1</literal></expr>]</index><index pos:start="495:37" pos:end="495:39">[<expr pos:start="495:38" pos:end="495:38"><literal type="number" pos:start="495:38" pos:end="495:38">0</literal></expr>]</index></name>   <operator pos:start="495:43" pos:end="495:43">=</operator> <name pos:start="495:45" pos:end="495:63"><name pos:start="495:45" pos:end="495:45">s</name><operator pos:start="495:46" pos:end="495:47">-&gt;</operator><name pos:start="495:48" pos:end="495:54">last_mv</name><index pos:start="495:55" pos:end="495:57">[<expr pos:start="495:56" pos:end="495:56"><literal type="number" pos:start="495:56" pos:end="495:56">0</literal></expr>]</index><index pos:start="495:58" pos:end="495:60">[<expr pos:start="495:59" pos:end="495:59"><literal type="number" pos:start="495:59" pos:end="495:59">1</literal></expr>]</index><index pos:start="495:61" pos:end="495:63">[<expr pos:start="495:62" pos:end="495:62"><literal type="number" pos:start="495:62" pos:end="495:62">1</literal></expr>]</index></name> <operator pos:start="495:65" pos:end="495:65">=</operator> <literal type="number" pos:start="495:67" pos:end="495:67">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="497:21" pos:end="497:75"><expr pos:start="497:21" pos:end="497:74"><name pos:start="497:21" pos:end="497:41"><name pos:start="497:21" pos:end="497:21">s</name><operator pos:start="497:22" pos:end="497:23">-&gt;</operator><name pos:start="497:24" pos:end="497:35">field_select</name><index pos:start="497:36" pos:end="497:38">[<expr pos:start="497:37" pos:end="497:37"><literal type="number" pos:start="497:37" pos:end="497:37">0</literal></expr>]</index><index pos:start="497:39" pos:end="497:41">[<expr pos:start="497:40" pos:end="497:40"><literal type="number" pos:start="497:40" pos:end="497:40">0</literal></expr>]</index></name> <operator pos:start="497:43" pos:end="497:43">=</operator> <operator pos:start="497:45" pos:end="497:45">(</operator><name pos:start="497:46" pos:end="497:65"><name pos:start="497:46" pos:end="497:46">s</name><operator pos:start="497:47" pos:end="497:48">-&gt;</operator><name pos:start="497:49" pos:end="497:65">picture_structure</name></name> <operator pos:start="497:67" pos:end="497:67">-</operator> <literal type="number" pos:start="497:69" pos:end="497:69">1</literal><operator pos:start="497:70" pos:end="497:70">)</operator> <operator pos:start="497:72" pos:end="497:72">&amp;</operator> <literal type="number" pos:start="497:74" pos:end="497:74">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="499:19" pos:end="511:17">else <block pos:start="499:24" pos:end="511:17">{<block_content pos:start="503:21" pos:end="509:57">

                    <comment type="block" pos:start="501:21" pos:end="501:74">/* if B type, reuse previous vectors and directions */</comment>

                    <expr_stmt pos:start="503:21" pos:end="503:57"><expr pos:start="503:21" pos:end="503:56"><name pos:start="503:21" pos:end="503:34"><name pos:start="503:21" pos:end="503:21">s</name><operator pos:start="503:22" pos:end="503:23">-&gt;</operator><name pos:start="503:24" pos:end="503:25">mv</name><index pos:start="503:26" pos:end="503:28">[<expr pos:start="503:27" pos:end="503:27"><literal type="number" pos:start="503:27" pos:end="503:27">0</literal></expr>]</index><index pos:start="503:29" pos:end="503:31">[<expr pos:start="503:30" pos:end="503:30"><literal type="number" pos:start="503:30" pos:end="503:30">0</literal></expr>]</index><index pos:start="503:32" pos:end="503:34">[<expr pos:start="503:33" pos:end="503:33"><literal type="number" pos:start="503:33" pos:end="503:33">0</literal></expr>]</index></name> <operator pos:start="503:36" pos:end="503:36">=</operator> <name pos:start="503:38" pos:end="503:56"><name pos:start="503:38" pos:end="503:38">s</name><operator pos:start="503:39" pos:end="503:40">-&gt;</operator><name pos:start="503:41" pos:end="503:47">last_mv</name><index pos:start="503:48" pos:end="503:50">[<expr pos:start="503:49" pos:end="503:49"><literal type="number" pos:start="503:49" pos:end="503:49">0</literal></expr>]</index><index pos:start="503:51" pos:end="503:53">[<expr pos:start="503:52" pos:end="503:52"><literal type="number" pos:start="503:52" pos:end="503:52">0</literal></expr>]</index><index pos:start="503:54" pos:end="503:56">[<expr pos:start="503:55" pos:end="503:55"><literal type="number" pos:start="503:55" pos:end="503:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="505:21" pos:end="505:57"><expr pos:start="505:21" pos:end="505:56"><name pos:start="505:21" pos:end="505:34"><name pos:start="505:21" pos:end="505:21">s</name><operator pos:start="505:22" pos:end="505:23">-&gt;</operator><name pos:start="505:24" pos:end="505:25">mv</name><index pos:start="505:26" pos:end="505:28">[<expr pos:start="505:27" pos:end="505:27"><literal type="number" pos:start="505:27" pos:end="505:27">0</literal></expr>]</index><index pos:start="505:29" pos:end="505:31">[<expr pos:start="505:30" pos:end="505:30"><literal type="number" pos:start="505:30" pos:end="505:30">0</literal></expr>]</index><index pos:start="505:32" pos:end="505:34">[<expr pos:start="505:33" pos:end="505:33"><literal type="number" pos:start="505:33" pos:end="505:33">1</literal></expr>]</index></name> <operator pos:start="505:36" pos:end="505:36">=</operator> <name pos:start="505:38" pos:end="505:56"><name pos:start="505:38" pos:end="505:38">s</name><operator pos:start="505:39" pos:end="505:40">-&gt;</operator><name pos:start="505:41" pos:end="505:47">last_mv</name><index pos:start="505:48" pos:end="505:50">[<expr pos:start="505:49" pos:end="505:49"><literal type="number" pos:start="505:49" pos:end="505:49">0</literal></expr>]</index><index pos:start="505:51" pos:end="505:53">[<expr pos:start="505:52" pos:end="505:52"><literal type="number" pos:start="505:52" pos:end="505:52">0</literal></expr>]</index><index pos:start="505:54" pos:end="505:56">[<expr pos:start="505:55" pos:end="505:55"><literal type="number" pos:start="505:55" pos:end="505:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="507:21" pos:end="507:57"><expr pos:start="507:21" pos:end="507:56"><name pos:start="507:21" pos:end="507:34"><name pos:start="507:21" pos:end="507:21">s</name><operator pos:start="507:22" pos:end="507:23">-&gt;</operator><name pos:start="507:24" pos:end="507:25">mv</name><index pos:start="507:26" pos:end="507:28">[<expr pos:start="507:27" pos:end="507:27"><literal type="number" pos:start="507:27" pos:end="507:27">1</literal></expr>]</index><index pos:start="507:29" pos:end="507:31">[<expr pos:start="507:30" pos:end="507:30"><literal type="number" pos:start="507:30" pos:end="507:30">0</literal></expr>]</index><index pos:start="507:32" pos:end="507:34">[<expr pos:start="507:33" pos:end="507:33"><literal type="number" pos:start="507:33" pos:end="507:33">0</literal></expr>]</index></name> <operator pos:start="507:36" pos:end="507:36">=</operator> <name pos:start="507:38" pos:end="507:56"><name pos:start="507:38" pos:end="507:38">s</name><operator pos:start="507:39" pos:end="507:40">-&gt;</operator><name pos:start="507:41" pos:end="507:47">last_mv</name><index pos:start="507:48" pos:end="507:50">[<expr pos:start="507:49" pos:end="507:49"><literal type="number" pos:start="507:49" pos:end="507:49">1</literal></expr>]</index><index pos:start="507:51" pos:end="507:53">[<expr pos:start="507:52" pos:end="507:52"><literal type="number" pos:start="507:52" pos:end="507:52">0</literal></expr>]</index><index pos:start="507:54" pos:end="507:56">[<expr pos:start="507:55" pos:end="507:55"><literal type="number" pos:start="507:55" pos:end="507:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="509:21" pos:end="509:57"><expr pos:start="509:21" pos:end="509:56"><name pos:start="509:21" pos:end="509:34"><name pos:start="509:21" pos:end="509:21">s</name><operator pos:start="509:22" pos:end="509:23">-&gt;</operator><name pos:start="509:24" pos:end="509:25">mv</name><index pos:start="509:26" pos:end="509:28">[<expr pos:start="509:27" pos:end="509:27"><literal type="number" pos:start="509:27" pos:end="509:27">1</literal></expr>]</index><index pos:start="509:29" pos:end="509:31">[<expr pos:start="509:30" pos:end="509:30"><literal type="number" pos:start="509:30" pos:end="509:30">0</literal></expr>]</index><index pos:start="509:32" pos:end="509:34">[<expr pos:start="509:33" pos:end="509:33"><literal type="number" pos:start="509:33" pos:end="509:33">1</literal></expr>]</index></name> <operator pos:start="509:36" pos:end="509:36">=</operator> <name pos:start="509:38" pos:end="509:56"><name pos:start="509:38" pos:end="509:38">s</name><operator pos:start="509:39" pos:end="509:40">-&gt;</operator><name pos:start="509:41" pos:end="509:47">last_mv</name><index pos:start="509:48" pos:end="509:50">[<expr pos:start="509:49" pos:end="509:49"><literal type="number" pos:start="509:49" pos:end="509:49">1</literal></expr>]</index><index pos:start="509:51" pos:end="509:53">[<expr pos:start="509:52" pos:end="509:52"><literal type="number" pos:start="509:52" pos:end="509:52">0</literal></expr>]</index><index pos:start="509:54" pos:end="509:56">[<expr pos:start="509:55" pos:end="509:55"><literal type="number" pos:start="509:55" pos:end="509:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<label pos:start="519:1" pos:end="519:4"><name pos:start="519:1" pos:end="519:3">eos</name>:</label> <comment type="line" pos:start="519:6" pos:end="519:20">// end of slice</comment>

    <if_stmt pos:start="521:5" pos:end="527:5"><if pos:start="521:5" pos:end="527:5">if <condition pos:start="521:8" pos:end="521:34">(<expr pos:start="521:9" pos:end="521:33"><call pos:start="521:9" pos:end="521:29"><name pos:start="521:9" pos:end="521:21">get_bits_left</name><argument_list pos:start="521:22" pos:end="521:29">(<argument pos:start="521:23" pos:end="521:28"><expr pos:start="521:23" pos:end="521:28"><operator pos:start="521:23" pos:end="521:23">&amp;</operator><name pos:start="521:24" pos:end="521:28"><name pos:start="521:24" pos:end="521:24">s</name><operator pos:start="521:25" pos:end="521:26">-&gt;</operator><name pos:start="521:27" pos:end="521:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="521:31" pos:end="521:31">&lt;</operator> <literal type="number" pos:start="521:33" pos:end="521:33">0</literal></expr>)</condition> <block pos:start="521:36" pos:end="527:5">{<block_content pos:start="523:9" pos:end="525:35">

        <expr_stmt pos:start="523:9" pos:end="523:73"><expr pos:start="523:9" pos:end="523:72"><call pos:start="523:9" pos:end="523:72"><name pos:start="523:9" pos:end="523:14">av_log</name><argument_list pos:start="523:15" pos:end="523:72">(<argument pos:start="523:16" pos:end="523:16"><expr pos:start="523:16" pos:end="523:16"><name pos:start="523:16" pos:end="523:16">s</name></expr></argument>, <argument pos:start="523:19" pos:end="523:30"><expr pos:start="523:19" pos:end="523:30"><name pos:start="523:19" pos:end="523:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="523:33" pos:end="523:47"><expr pos:start="523:33" pos:end="523:47"><literal type="string" pos:start="523:33" pos:end="523:47">"overread %d\n"</literal></expr></argument>, <argument pos:start="523:50" pos:end="523:71"><expr pos:start="523:50" pos:end="523:71"><operator pos:start="523:50" pos:end="523:50">-</operator><call pos:start="523:51" pos:end="523:71"><name pos:start="523:51" pos:end="523:63">get_bits_left</name><argument_list pos:start="523:64" pos:end="523:71">(<argument pos:start="523:65" pos:end="523:70"><expr pos:start="523:65" pos:end="523:70"><operator pos:start="523:65" pos:end="523:65">&amp;</operator><name pos:start="523:66" pos:end="523:70"><name pos:start="523:66" pos:end="523:66">s</name><operator pos:start="523:67" pos:end="523:68">-&gt;</operator><name pos:start="523:69" pos:end="523:70">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="525:9" pos:end="525:35">return <expr pos:start="525:16" pos:end="525:34"><name pos:start="525:16" pos:end="525:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="529:5" pos:end="529:45"><expr pos:start="529:5" pos:end="529:44"><operator pos:start="529:5" pos:end="529:5">*</operator><name pos:start="529:6" pos:end="529:8">buf</name> <operator pos:start="529:10" pos:end="529:11">+=</operator> <operator pos:start="529:13" pos:end="529:13">(</operator><call pos:start="529:14" pos:end="529:35"><name pos:start="529:14" pos:end="529:27">get_bits_count</name><argument_list pos:start="529:28" pos:end="529:35">(<argument pos:start="529:29" pos:end="529:34"><expr pos:start="529:29" pos:end="529:34"><operator pos:start="529:29" pos:end="529:29">&amp;</operator><name pos:start="529:30" pos:end="529:34"><name pos:start="529:30" pos:end="529:30">s</name><operator pos:start="529:31" pos:end="529:32">-&gt;</operator><name pos:start="529:33" pos:end="529:34">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="529:37" pos:end="529:37">-</operator> <literal type="number" pos:start="529:39" pos:end="529:39">1</literal><operator pos:start="529:40" pos:end="529:40">)</operator> <operator pos:start="529:42" pos:end="529:42">/</operator> <literal type="number" pos:start="529:44" pos:end="529:44">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="531:5" pos:end="531:99"><expr pos:start="531:5" pos:end="531:98"><call pos:start="531:5" pos:end="531:98"><name pos:start="531:5" pos:end="531:11">ff_dlog</name><argument_list pos:start="531:12" pos:end="531:98">(<argument pos:start="531:13" pos:end="531:13"><expr pos:start="531:13" pos:end="531:13"><name pos:start="531:13" pos:end="531:13">s</name></expr></argument>, <argument pos:start="531:16" pos:end="531:47"><expr pos:start="531:16" pos:end="531:47"><literal type="string" pos:start="531:16" pos:end="531:47">"Slice start:%d %d  end:%d %d\n"</literal></expr></argument>, <argument pos:start="531:50" pos:end="531:63"><expr pos:start="531:50" pos:end="531:63"><name pos:start="531:50" pos:end="531:63"><name pos:start="531:50" pos:end="531:50">s</name><operator pos:start="531:51" pos:end="531:52">-&gt;</operator><name pos:start="531:53" pos:end="531:63">resync_mb_x</name></name></expr></argument>, <argument pos:start="531:66" pos:end="531:79"><expr pos:start="531:66" pos:end="531:79"><name pos:start="531:66" pos:end="531:79"><name pos:start="531:66" pos:end="531:66">s</name><operator pos:start="531:67" pos:end="531:68">-&gt;</operator><name pos:start="531:69" pos:end="531:79">resync_mb_y</name></name></expr></argument>, <argument pos:start="531:82" pos:end="531:88"><expr pos:start="531:82" pos:end="531:88"><name pos:start="531:82" pos:end="531:88"><name pos:start="531:82" pos:end="531:82">s</name><operator pos:start="531:83" pos:end="531:84">-&gt;</operator><name pos:start="531:85" pos:end="531:88">mb_x</name></name></expr></argument>, <argument pos:start="531:91" pos:end="531:97"><expr pos:start="531:91" pos:end="531:97"><name pos:start="531:91" pos:end="531:97"><name pos:start="531:91" pos:end="531:91">s</name><operator pos:start="531:92" pos:end="531:93">-&gt;</operator><name pos:start="531:94" pos:end="531:97">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="533:5" pos:end="533:13">return <expr pos:start="533:12" pos:end="533:12"><literal type="number" pos:start="533:12" pos:end="533:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
