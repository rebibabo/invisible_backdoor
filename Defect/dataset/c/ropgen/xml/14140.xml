<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14140.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:36">pci_assign_dev_load_option_rom</name><parameter_list pos:start="1:37" pos:end="7:59">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:46">PCIDevice</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dev</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><name pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:59">struct</name> <name pos:start="1:61" pos:end="1:66">Object</name></name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">owner</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:46"><decl pos:start="3:38" pos:end="3:46"><type pos:start="3:38" pos:end="3:46"><name pos:start="3:38" pos:end="3:40">int</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:46">size</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:67"><decl pos:start="3:49" pos:end="3:67"><type pos:start="3:49" pos:end="3:67"><name pos:start="3:49" pos:end="3:56">unsigned</name> <name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:67">domain</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:53"><decl pos:start="5:38" pos:end="5:53"><type pos:start="5:38" pos:end="5:53"><name pos:start="5:38" pos:end="5:45">unsigned</name> <name pos:start="5:47" pos:end="5:49">int</name></type> <name pos:start="5:51" pos:end="5:53">bus</name></decl></parameter>, <parameter pos:start="5:56" pos:end="5:72"><decl pos:start="5:56" pos:end="5:72"><type pos:start="5:56" pos:end="5:72"><name pos:start="5:56" pos:end="5:63">unsigned</name> <name pos:start="5:65" pos:end="5:67">int</name></type> <name pos:start="5:69" pos:end="5:72">slot</name></decl></parameter>,

                                     <parameter pos:start="7:38" pos:end="7:58"><decl pos:start="7:38" pos:end="7:58"><type pos:start="7:38" pos:end="7:58"><name pos:start="7:38" pos:end="7:45">unsigned</name> <name pos:start="7:47" pos:end="7:49">int</name></type> <name pos:start="7:51" pos:end="7:58">function</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="135:1">{<block_content pos:start="11:5" pos:end="133:15">

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:13">name</name><index pos:start="11:14" pos:end="11:17">[<expr pos:start="11:15" pos:end="11:16"><literal type="number" pos:start="11:15" pos:end="11:16">32</literal></expr>]</index></name></decl>, <decl pos:start="11:20" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:8"/><name pos:start="11:20" pos:end="11:31"><name pos:start="11:20" pos:end="11:27">rom_file</name><index pos:start="11:28" pos:end="11:31">[<expr pos:start="11:29" pos:end="11:30"><literal type="number" pos:start="11:29" pos:end="11:30">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">FILE</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:12">fp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:15">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:15">stat</name></name></type> <name pos:start="17:17" pos:end="17:18">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">void</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier></type><name pos:start="19:11" pos:end="19:13">ptr</name> <init pos:start="19:15" pos:end="19:20">= <expr pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:20">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:50">/* If loading ROM from file, pci handles it */</comment>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:38">(<expr pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:11">dev</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:20">romfile</name></name> <operator pos:start="25:22" pos:end="25:23">||</operator> <operator pos:start="25:25" pos:end="25:25">!</operator><name pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:28">dev</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:37">rom_bar</name></name></expr>)</condition> <block pos:start="25:40" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:20">

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="37:42"><expr pos:start="33:5" pos:end="37:41"><call pos:start="33:5" pos:end="37:41"><name pos:start="33:5" pos:end="33:12">snprintf</name><argument_list pos:start="33:13" pos:end="37:41">(<argument pos:start="33:14" pos:end="33:21"><expr pos:start="33:14" pos:end="33:21"><name pos:start="33:14" pos:end="33:21">rom_file</name></expr></argument>, <argument pos:start="33:24" pos:end="33:39"><expr pos:start="33:24" pos:end="33:39"><sizeof pos:start="33:24" pos:end="33:39">sizeof<argument_list pos:start="33:30" pos:end="33:39">(<argument pos:start="33:31" pos:end="33:38"><expr pos:start="33:31" pos:end="33:38"><name pos:start="33:31" pos:end="33:38">rom_file</name></expr></argument>)</argument_list></sizeof></expr></argument>,

             <argument pos:start="35:14" pos:end="35:59"><expr pos:start="35:14" pos:end="35:59"><literal type="string" pos:start="35:14" pos:end="35:59">"/sys/bus/pci/devices/%04x:%02x:%02x.%01x/rom"</literal></expr></argument>,

             <argument pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:19"><name pos:start="37:14" pos:end="37:19">domain</name></expr></argument>, <argument pos:start="37:22" pos:end="37:24"><expr pos:start="37:22" pos:end="37:24"><name pos:start="37:22" pos:end="37:24">bus</name></expr></argument>, <argument pos:start="37:27" pos:end="37:30"><expr pos:start="37:27" pos:end="37:30"><name pos:start="37:27" pos:end="37:30">slot</name></expr></argument>, <argument pos:start="37:33" pos:end="37:40"><expr pos:start="37:33" pos:end="37:40"><name pos:start="37:33" pos:end="37:40">function</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:28">(<expr pos:start="41:9" pos:end="41:27"><call pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:12">stat</name><argument_list pos:start="41:13" pos:end="41:27">(<argument pos:start="41:14" pos:end="41:21"><expr pos:start="41:14" pos:end="41:21"><name pos:start="41:14" pos:end="41:21">rom_file</name></expr></argument>, <argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><operator pos:start="41:24" pos:end="41:24">&amp;</operator><name pos:start="41:25" pos:end="41:26">st</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:30" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:20">

        <return pos:start="43:9" pos:end="43:20">return <expr pos:start="43:16" pos:end="43:19"><name pos:start="43:16" pos:end="43:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:31">(<expr pos:start="49:9" pos:end="49:30"><call pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:14">access</name><argument_list pos:start="49:15" pos:end="49:30">(<argument pos:start="49:16" pos:end="49:23"><expr pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:23">rom_file</name></expr></argument>, <argument pos:start="49:26" pos:end="49:29"><expr pos:start="49:26" pos:end="49:29"><name pos:start="49:26" pos:end="49:29">F_OK</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:33" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:20">

        <expr_stmt pos:start="51:9" pos:end="51:77"><expr pos:start="51:9" pos:end="51:76"><call pos:start="51:9" pos:end="51:76"><name pos:start="51:9" pos:end="51:20">error_report</name><argument_list pos:start="51:21" pos:end="51:76">(<argument pos:start="51:22" pos:end="51:65"><expr pos:start="51:22" pos:end="51:65"><literal type="string" pos:start="51:22" pos:end="51:65">"pci-assign: Insufficient privileges for %s"</literal></expr></argument>, <argument pos:start="51:68" pos:end="51:75"><expr pos:start="51:68" pos:end="51:75"><name pos:start="51:68" pos:end="51:75">rom_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:20">return <expr pos:start="53:16" pos:end="53:19"><name pos:start="53:16" pos:end="53:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:48">/* Write "1" to the ROM file to enable it */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:31"><expr pos:start="61:5" pos:end="61:30"><name pos:start="61:5" pos:end="61:6">fp</name> <operator pos:start="61:8" pos:end="61:8">=</operator> <call pos:start="61:10" pos:end="61:30"><name pos:start="61:10" pos:end="61:14">fopen</name><argument_list pos:start="61:15" pos:end="61:30">(<argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:23">rom_file</name></expr></argument>, <argument pos:start="61:26" pos:end="61:29"><expr pos:start="61:26" pos:end="61:29"><literal type="string" pos:start="61:26" pos:end="61:29">"r+"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:19">(<expr pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:10">fp</name> <operator pos:start="63:12" pos:end="63:13">==</operator> <name pos:start="63:15" pos:end="63:18">NULL</name></expr>)</condition> <block pos:start="63:21" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:20">

        <return pos:start="65:9" pos:end="65:20">return <expr pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:12"><expr pos:start="69:5" pos:end="69:11"><name pos:start="69:5" pos:end="69:7">val</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <literal type="number" pos:start="69:11" pos:end="69:11">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="75:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:36">(<expr pos:start="71:9" pos:end="71:35"><call pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:14">fwrite</name><argument_list pos:start="71:15" pos:end="71:30">(<argument pos:start="71:16" pos:end="71:19"><expr pos:start="71:16" pos:end="71:19"><operator pos:start="71:16" pos:end="71:16">&amp;</operator><name pos:start="71:17" pos:end="71:19">val</name></expr></argument>, <argument pos:start="71:22" pos:end="71:22"><expr pos:start="71:22" pos:end="71:22"><literal type="number" pos:start="71:22" pos:end="71:22">1</literal></expr></argument>, <argument pos:start="71:25" pos:end="71:25"><expr pos:start="71:25" pos:end="71:25"><literal type="number" pos:start="71:25" pos:end="71:25">1</literal></expr></argument>, <argument pos:start="71:28" pos:end="71:29"><expr pos:start="71:28" pos:end="71:29"><name pos:start="71:28" pos:end="71:29">fp</name></expr></argument>)</argument_list></call> <operator pos:start="71:32" pos:end="71:33">!=</operator> <literal type="number" pos:start="71:35" pos:end="71:35">1</literal></expr>)</condition> <block pos:start="71:38" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:23">

        <goto pos:start="73:9" pos:end="73:23">goto <name pos:start="73:14" pos:end="73:22">close_rom</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:27"><expr pos:start="77:5" pos:end="77:26"><call pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:9">fseek</name><argument_list pos:start="77:10" pos:end="77:26">(<argument pos:start="77:11" pos:end="77:12"><expr pos:start="77:11" pos:end="77:12"><name pos:start="77:11" pos:end="77:12">fp</name></expr></argument>, <argument pos:start="77:15" pos:end="77:15"><expr pos:start="77:15" pos:end="77:15"><literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr></argument>, <argument pos:start="77:18" pos:end="77:25"><expr pos:start="77:18" pos:end="77:25"><name pos:start="77:18" pos:end="77:25">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:71"><expr pos:start="81:5" pos:end="81:70"><call pos:start="81:5" pos:end="81:70"><name pos:start="81:5" pos:end="81:12">snprintf</name><argument_list pos:start="81:13" pos:end="81:70">(<argument pos:start="81:14" pos:end="81:17"><expr pos:start="81:14" pos:end="81:17"><name pos:start="81:14" pos:end="81:17">name</name></expr></argument>, <argument pos:start="81:20" pos:end="81:31"><expr pos:start="81:20" pos:end="81:31"><sizeof pos:start="81:20" pos:end="81:31">sizeof<argument_list pos:start="81:26" pos:end="81:31">(<argument pos:start="81:27" pos:end="81:30"><expr pos:start="81:27" pos:end="81:30"><name pos:start="81:27" pos:end="81:30">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="81:34" pos:end="81:41"><expr pos:start="81:34" pos:end="81:41"><literal type="string" pos:start="81:34" pos:end="81:41">"%s.rom"</literal></expr></argument>, <argument pos:start="81:44" pos:end="81:69"><expr pos:start="81:44" pos:end="81:69"><call pos:start="81:44" pos:end="81:69"><name pos:start="81:44" pos:end="81:62">object_get_typename</name><argument_list pos:start="81:63" pos:end="81:69">(<argument pos:start="81:64" pos:end="81:68"><expr pos:start="81:64" pos:end="81:68"><name pos:start="81:64" pos:end="81:68">owner</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:77"><expr pos:start="83:5" pos:end="83:76"><call pos:start="83:5" pos:end="83:76"><name pos:start="83:5" pos:end="83:26">memory_region_init_ram</name><argument_list pos:start="83:27" pos:end="83:76">(<argument pos:start="83:28" pos:end="83:36"><expr pos:start="83:28" pos:end="83:36"><operator pos:start="83:28" pos:end="83:28">&amp;</operator><name pos:start="83:29" pos:end="83:36"><name pos:start="83:29" pos:end="83:31">dev</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:36">rom</name></name></expr></argument>, <argument pos:start="83:39" pos:end="83:43"><expr pos:start="83:39" pos:end="83:43"><name pos:start="83:39" pos:end="83:43">owner</name></expr></argument>, <argument pos:start="83:46" pos:end="83:49"><expr pos:start="83:46" pos:end="83:49"><name pos:start="83:46" pos:end="83:49">name</name></expr></argument>, <argument pos:start="83:52" pos:end="83:61"><expr pos:start="83:52" pos:end="83:61"><name pos:start="83:52" pos:end="83:61"><name pos:start="83:52" pos:end="83:53">st</name><operator pos:start="83:54" pos:end="83:54">.</operator><name pos:start="83:55" pos:end="83:61">st_size</name></name></expr></argument>, <argument pos:start="83:64" pos:end="83:75"><expr pos:start="83:64" pos:end="83:75"><operator pos:start="83:64" pos:end="83:64">&amp;</operator><name pos:start="83:65" pos:end="83:75">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:48"><expr pos:start="85:5" pos:end="85:47"><call pos:start="85:5" pos:end="85:47"><name pos:start="85:5" pos:end="85:24">vmstate_register_ram</name><argument_list pos:start="85:25" pos:end="85:47">(<argument pos:start="85:26" pos:end="85:34"><expr pos:start="85:26" pos:end="85:34"><operator pos:start="85:26" pos:end="85:26">&amp;</operator><name pos:start="85:27" pos:end="85:34"><name pos:start="85:27" pos:end="85:29">dev</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:34">rom</name></name></expr></argument>, <argument pos:start="85:37" pos:end="85:46"><expr pos:start="85:37" pos:end="85:46"><operator pos:start="85:37" pos:end="85:37">&amp;</operator><name pos:start="85:38" pos:end="85:46"><name pos:start="85:38" pos:end="85:40">dev</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:46">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:47"><expr pos:start="87:5" pos:end="87:46"><name pos:start="87:5" pos:end="87:7">ptr</name> <operator pos:start="87:9" pos:end="87:9">=</operator> <call pos:start="87:11" pos:end="87:46"><name pos:start="87:11" pos:end="87:35">memory_region_get_ram_ptr</name><argument_list pos:start="87:36" pos:end="87:46">(<argument pos:start="87:37" pos:end="87:45"><expr pos:start="87:37" pos:end="87:45"><operator pos:start="87:37" pos:end="87:37">&amp;</operator><name pos:start="87:38" pos:end="87:45"><name pos:start="87:38" pos:end="87:40">dev</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:45">rom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:34"><expr pos:start="89:5" pos:end="89:33"><call pos:start="89:5" pos:end="89:33"><name pos:start="89:5" pos:end="89:10">memset</name><argument_list pos:start="89:11" pos:end="89:33">(<argument pos:start="89:12" pos:end="89:14"><expr pos:start="89:12" pos:end="89:14"><name pos:start="89:12" pos:end="89:14">ptr</name></expr></argument>, <argument pos:start="89:17" pos:end="89:20"><expr pos:start="89:17" pos:end="89:20"><literal type="number" pos:start="89:17" pos:end="89:20">0xff</literal></expr></argument>, <argument pos:start="89:23" pos:end="89:32"><expr pos:start="89:23" pos:end="89:32"><name pos:start="89:23" pos:end="89:32"><name pos:start="89:23" pos:end="89:24">st</name><operator pos:start="89:25" pos:end="89:25">.</operator><name pos:start="89:26" pos:end="89:32">st_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="105:5"><if pos:start="93:5" pos:end="105:5">if <condition pos:start="93:8" pos:end="93:39">(<expr pos:start="93:9" pos:end="93:38"><operator pos:start="93:9" pos:end="93:9">!</operator><call pos:start="93:10" pos:end="93:38"><name pos:start="93:10" pos:end="93:14">fread</name><argument_list pos:start="93:15" pos:end="93:38">(<argument pos:start="93:16" pos:end="93:18"><expr pos:start="93:16" pos:end="93:18"><name pos:start="93:16" pos:end="93:18">ptr</name></expr></argument>, <argument pos:start="93:21" pos:end="93:21"><expr pos:start="93:21" pos:end="93:21"><literal type="number" pos:start="93:21" pos:end="93:21">1</literal></expr></argument>, <argument pos:start="93:24" pos:end="93:33"><expr pos:start="93:24" pos:end="93:33"><name pos:start="93:24" pos:end="93:33"><name pos:start="93:24" pos:end="93:25">st</name><operator pos:start="93:26" pos:end="93:26">.</operator><name pos:start="93:27" pos:end="93:33">st_size</name></name></expr></argument>, <argument pos:start="93:36" pos:end="93:37"><expr pos:start="93:36" pos:end="93:37"><name pos:start="93:36" pos:end="93:37">fp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:41" pos:end="105:5">{<block_content pos:start="95:9" pos:end="103:23">

        <expr_stmt pos:start="95:9" pos:end="95:71"><expr pos:start="95:9" pos:end="95:70"><call pos:start="95:9" pos:end="95:70"><name pos:start="95:9" pos:end="95:20">error_report</name><argument_list pos:start="95:21" pos:end="95:70">(<argument pos:start="95:22" pos:end="95:59"><expr pos:start="95:22" pos:end="95:59"><literal type="string" pos:start="95:22" pos:end="95:59">"pci-assign: Cannot read from host %s"</literal></expr></argument>, <argument pos:start="95:62" pos:end="95:69"><expr pos:start="95:62" pos:end="95:69"><name pos:start="95:62" pos:end="95:69">rom_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="101:58"><expr pos:start="97:9" pos:end="101:57"><call pos:start="97:9" pos:end="101:57"><name pos:start="97:9" pos:end="97:20">error_printf</name><argument_list pos:start="97:21" pos:end="101:57">(<argument pos:start="97:22" pos:end="101:56"><expr pos:start="97:22" pos:end="101:56"><literal type="string" pos:start="97:22" pos:end="97:71">"Device option ROM contents are probably invalid "</literal>

                     <literal type="string" pos:start="99:22" pos:end="99:76">"(check dmesg).\nSkip option ROM probe with rombar=0, "</literal>

                     <literal type="string" pos:start="101:22" pos:end="101:56">"or load from file with romfile=\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="103:9" pos:end="103:23">goto <name pos:start="103:14" pos:end="103:22">close_rom</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:54"><expr pos:start="109:5" pos:end="109:53"><call pos:start="109:5" pos:end="109:53"><name pos:start="109:5" pos:end="109:20">pci_register_bar</name><argument_list pos:start="109:21" pos:end="109:53">(<argument pos:start="109:22" pos:end="109:24"><expr pos:start="109:22" pos:end="109:24"><name pos:start="109:22" pos:end="109:24">dev</name></expr></argument>, <argument pos:start="109:27" pos:end="109:38"><expr pos:start="109:27" pos:end="109:38"><name pos:start="109:27" pos:end="109:38">PCI_ROM_SLOT</name></expr></argument>, <argument pos:start="109:41" pos:end="109:41"><expr pos:start="109:41" pos:end="109:41"><literal type="number" pos:start="109:41" pos:end="109:41">0</literal></expr></argument>, <argument pos:start="109:44" pos:end="109:52"><expr pos:start="109:44" pos:end="109:52"><operator pos:start="109:44" pos:end="109:44">&amp;</operator><name pos:start="109:45" pos:end="109:52"><name pos:start="109:45" pos:end="109:47">dev</name><operator pos:start="109:48" pos:end="109:49">-&gt;</operator><name pos:start="109:50" pos:end="109:52">rom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:24"><expr pos:start="111:5" pos:end="111:23"><name pos:start="111:5" pos:end="111:16"><name pos:start="111:5" pos:end="111:7">dev</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:16">has_rom</name></name> <operator pos:start="111:18" pos:end="111:18">=</operator> <name pos:start="111:20" pos:end="111:23">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:23"><expr pos:start="113:5" pos:end="113:22"><operator pos:start="113:5" pos:end="113:5">*</operator><name pos:start="113:6" pos:end="113:9">size</name> <operator pos:start="113:11" pos:end="113:11">=</operator> <name pos:start="113:13" pos:end="113:22"><name pos:start="113:13" pos:end="113:14">st</name><operator pos:start="113:15" pos:end="113:15">.</operator><name pos:start="113:16" pos:end="113:22">st_size</name></name></expr>;</expr_stmt>

<label pos:start="115:1" pos:end="115:10"><name pos:start="115:1" pos:end="115:9">close_rom</name>:</label>

    <comment type="block" pos:start="117:5" pos:end="117:34">/* Write "0" to disable ROM */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:27"><expr pos:start="119:5" pos:end="119:26"><call pos:start="119:5" pos:end="119:26"><name pos:start="119:5" pos:end="119:9">fseek</name><argument_list pos:start="119:10" pos:end="119:26">(<argument pos:start="119:11" pos:end="119:12"><expr pos:start="119:11" pos:end="119:12"><name pos:start="119:11" pos:end="119:12">fp</name></expr></argument>, <argument pos:start="119:15" pos:end="119:15"><expr pos:start="119:15" pos:end="119:15"><literal type="number" pos:start="119:15" pos:end="119:15">0</literal></expr></argument>, <argument pos:start="119:18" pos:end="119:25"><expr pos:start="119:18" pos:end="119:25"><name pos:start="119:18" pos:end="119:25">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:12"><expr pos:start="121:5" pos:end="121:11"><name pos:start="121:5" pos:end="121:7">val</name> <operator pos:start="121:9" pos:end="121:9">=</operator> <literal type="number" pos:start="121:11" pos:end="121:11">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="127:5"><if pos:start="123:5" pos:end="127:5">if <condition pos:start="123:8" pos:end="123:32">(<expr pos:start="123:9" pos:end="123:31"><operator pos:start="123:9" pos:end="123:9">!</operator><call pos:start="123:10" pos:end="123:31"><name pos:start="123:10" pos:end="123:15">fwrite</name><argument_list pos:start="123:16" pos:end="123:31">(<argument pos:start="123:17" pos:end="123:20"><expr pos:start="123:17" pos:end="123:20"><operator pos:start="123:17" pos:end="123:17">&amp;</operator><name pos:start="123:18" pos:end="123:20">val</name></expr></argument>, <argument pos:start="123:23" pos:end="123:23"><expr pos:start="123:23" pos:end="123:23"><literal type="number" pos:start="123:23" pos:end="123:23">1</literal></expr></argument>, <argument pos:start="123:26" pos:end="123:26"><expr pos:start="123:26" pos:end="123:26"><literal type="number" pos:start="123:26" pos:end="123:26">1</literal></expr></argument>, <argument pos:start="123:29" pos:end="123:30"><expr pos:start="123:29" pos:end="123:30"><name pos:start="123:29" pos:end="123:30">fp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:34" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:62">

        <expr_stmt pos:start="125:9" pos:end="125:62"><expr pos:start="125:9" pos:end="125:61"><call pos:start="125:9" pos:end="125:61"><name pos:start="125:9" pos:end="125:13">DEBUG</name><argument_list pos:start="125:14" pos:end="125:61">(<argument pos:start="125:15" pos:end="125:20"><expr pos:start="125:15" pos:end="125:20"><literal type="string" pos:start="125:15" pos:end="125:20">"%s\n"</literal></expr></argument>, <argument pos:start="125:23" pos:end="125:60"><expr pos:start="125:23" pos:end="125:60"><literal type="string" pos:start="125:23" pos:end="125:60">"Failed to disable pci-sysfs rom file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:15"><expr pos:start="129:5" pos:end="129:14"><call pos:start="129:5" pos:end="129:14"><name pos:start="129:5" pos:end="129:10">fclose</name><argument_list pos:start="129:11" pos:end="129:14">(<argument pos:start="129:12" pos:end="129:13"><expr pos:start="129:12" pos:end="129:13"><name pos:start="129:12" pos:end="129:13">fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="133:5" pos:end="133:15">return <expr pos:start="133:12" pos:end="133:14"><name pos:start="133:12" pos:end="133:14">ptr</name></expr>;</return>

</block_content>}</block></function>
</unit>
