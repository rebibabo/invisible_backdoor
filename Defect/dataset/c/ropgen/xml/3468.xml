<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3468.c" pos:tabs="8"><function pos:start="1:1" pos:end="64:19"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">hid_keyboard_process_keycode</name><parameter_list pos:start="1:41" pos:end="1:54">(<parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:49">HIDState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">hs</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="64:19">{<block_content pos:start="3:5" pos:end="64:19">
    <decl_stmt pos:start="3:5" pos:end="3:33"><decl pos:start="3:5" pos:end="3:20"><type pos:start="3:5" pos:end="3:11"><name pos:start="3:5" pos:end="3:11">uint8_t</name></type> <name pos:start="3:13" pos:end="3:20">hid_code</name></decl>, <decl pos:start="3:23" pos:end="3:27"><type ref="prev" pos:start="3:5" pos:end="3:11"/><name pos:start="3:23" pos:end="3:27">index</name></decl>, <decl pos:start="3:30" pos:end="3:32"><type ref="prev" pos:start="3:5" pos:end="3:11"/><name pos:start="3:30" pos:end="3:32">key</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:25"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">i</name></decl>, <decl pos:start="4:12" pos:end="4:18"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:12" pos:end="4:18">keycode</name></decl>, <decl pos:start="4:21" pos:end="4:24"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:21" pos:end="4:24">slot</name></decl>;</decl_stmt>
    <if_stmt pos:start="5:5" pos:end="64:19"><if pos:start="5:5" pos:end="64:19">if <condition pos:start="5:8" pos:end="5:19">(<expr pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:13"><name pos:start="5:9" pos:end="5:10">hs</name><operator pos:start="5:11" pos:end="5:12">-&gt;</operator><name pos:start="5:13" pos:end="5:13">n</name></name> <operator pos:start="5:15" pos:end="5:16">==</operator> <literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr>)</condition> <block pos:start="5:21" pos:end="64:19">{<block_content pos:start="6:9" pos:end="64:19">
        <return pos:start="6:9" pos:end="6:15">return;</return>
    <expr_stmt pos:start="7:5" pos:end="7:33"><expr pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:8">slot</name> <operator pos:start="7:10" pos:end="7:10">=</operator> <name pos:start="7:12" pos:end="7:19"><name pos:start="7:12" pos:end="7:13">hs</name><operator pos:start="7:14" pos:end="7:15">-&gt;</operator><name pos:start="7:16" pos:end="7:19">head</name></name> <operator pos:start="7:21" pos:end="7:21">&amp;</operator> <name pos:start="7:23" pos:end="7:32">QUEUE_MASK</name></expr>;</expr_stmt> <expr_stmt pos:start="7:35" pos:end="7:55"><expr pos:start="7:35" pos:end="7:54"><call pos:start="7:35" pos:end="7:54"><name pos:start="7:35" pos:end="7:44">QUEUE_INCR</name><argument_list pos:start="7:45" pos:end="7:54">(<argument pos:start="7:46" pos:end="7:53"><expr pos:start="7:46" pos:end="7:53"><name pos:start="7:46" pos:end="7:53"><name pos:start="7:46" pos:end="7:47">hs</name><operator pos:start="7:48" pos:end="7:49">-&gt;</operator><name pos:start="7:50" pos:end="7:53">head</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="7:57" pos:end="7:64"><expr pos:start="7:57" pos:end="7:63"><name pos:start="7:57" pos:end="7:61"><name pos:start="7:57" pos:end="7:58">hs</name><operator pos:start="7:59" pos:end="7:60">-&gt;</operator><name pos:start="7:61" pos:end="7:61">n</name></name><operator pos:start="7:62" pos:end="7:63">--</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:37"><expr pos:start="8:5" pos:end="8:36"><name pos:start="8:5" pos:end="8:11">keycode</name> <operator pos:start="8:13" pos:end="8:13">=</operator> <name pos:start="8:15" pos:end="8:36"><name pos:start="8:15" pos:end="8:16">hs</name><operator pos:start="8:17" pos:end="8:18">-&gt;</operator><name pos:start="8:19" pos:end="8:21">kbd</name><operator pos:start="8:22" pos:end="8:22">.</operator><name pos:start="8:23" pos:end="8:30">keycodes</name><index pos:start="8:31" pos:end="8:36">[<expr pos:start="8:32" pos:end="8:35"><name pos:start="8:32" pos:end="8:35">slot</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:25"><expr pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:7">key</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <name pos:start="9:11" pos:end="9:17">keycode</name> <operator pos:start="9:19" pos:end="9:19">&amp;</operator> <literal type="number" pos:start="9:21" pos:end="9:24">0x7f</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:56"><expr pos:start="10:5" pos:end="10:55"><name pos:start="10:5" pos:end="10:9">index</name> <operator pos:start="10:11" pos:end="10:11">=</operator> <name pos:start="10:13" pos:end="10:15">key</name> <operator pos:start="10:17" pos:end="10:17">|</operator> <operator pos:start="10:19" pos:end="10:19">(</operator><operator pos:start="10:20" pos:end="10:20">(</operator><name pos:start="10:21" pos:end="10:37"><name pos:start="10:21" pos:end="10:22">hs</name><operator pos:start="10:23" pos:end="10:24">-&gt;</operator><name pos:start="10:25" pos:end="10:27">kbd</name><operator pos:start="10:28" pos:end="10:28">.</operator><name pos:start="10:29" pos:end="10:37">modifiers</name></name> <operator pos:start="10:39" pos:end="10:39">&amp;</operator> <operator pos:start="10:41" pos:end="10:41">(</operator><literal type="number" pos:start="10:42" pos:end="10:42">1</literal> <operator pos:start="10:44" pos:end="10:45">&lt;&lt;</operator> <literal type="number" pos:start="10:47" pos:end="10:47">8</literal><operator pos:start="10:48" pos:end="10:48">)</operator><operator pos:start="10:49" pos:end="10:49">)</operator> <operator pos:start="10:51" pos:end="10:52">&gt;&gt;</operator> <literal type="number" pos:start="10:54" pos:end="10:54">1</literal><operator pos:start="10:55" pos:end="10:55">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:12">hid_code</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:36"><name pos:start="11:16" pos:end="11:29">hid_usage_keys</name><index pos:start="11:30" pos:end="11:36">[<expr pos:start="11:31" pos:end="11:35"><name pos:start="11:31" pos:end="11:35">index</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:35"><expr pos:start="12:5" pos:end="12:34"><name pos:start="12:5" pos:end="12:21"><name pos:start="12:5" pos:end="12:6">hs</name><operator pos:start="12:7" pos:end="12:8">-&gt;</operator><name pos:start="12:9" pos:end="12:11">kbd</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:21">modifiers</name></name> <operator pos:start="12:23" pos:end="12:24">&amp;=</operator> <operator pos:start="12:26" pos:end="12:26">~</operator><operator pos:start="12:27" pos:end="12:27">(</operator><literal type="number" pos:start="12:28" pos:end="12:28">1</literal> <operator pos:start="12:30" pos:end="12:31">&lt;&lt;</operator> <literal type="number" pos:start="12:33" pos:end="12:33">8</literal><operator pos:start="12:34" pos:end="12:34">)</operator></expr>;</expr_stmt>
    <switch pos:start="13:5" pos:end="64:19">switch <condition pos:start="13:12" pos:end="13:21">(<expr pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:20">hid_code</name></expr>)</condition> <block pos:start="13:23" pos:end="64:19">{<block_content pos:start="14:5" pos:end="64:19">
    <case pos:start="14:5" pos:end="14:14">case <expr pos:start="14:10" pos:end="14:13"><literal type="number" pos:start="14:10" pos:end="14:13">0x00</literal></expr>:</case>
        <return pos:start="15:9" pos:end="15:15">return;</return>
    <case pos:start="16:5" pos:end="16:14">case <expr pos:start="16:10" pos:end="16:13"><literal type="number" pos:start="16:10" pos:end="16:13">0xe0</literal></expr>:</case>
        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><call pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:14">assert</name><argument_list pos:start="17:15" pos:end="17:27">(<argument pos:start="17:16" pos:end="17:26"><expr pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:18">key</name> <operator pos:start="17:20" pos:end="17:21">==</operator> <literal type="number" pos:start="17:23" pos:end="17:26">0x1d</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="18:9" pos:end="64:19"><if pos:start="18:9" pos:end="64:19">if <condition pos:start="18:12" pos:end="18:41">(<expr pos:start="18:13" pos:end="18:40"><name pos:start="18:13" pos:end="18:29"><name pos:start="18:13" pos:end="18:14">hs</name><operator pos:start="18:15" pos:end="18:16">-&gt;</operator><name pos:start="18:17" pos:end="18:19">kbd</name><operator pos:start="18:20" pos:end="18:20">.</operator><name pos:start="18:21" pos:end="18:29">modifiers</name></name> <operator pos:start="18:31" pos:end="18:31">&amp;</operator> <operator pos:start="18:33" pos:end="18:33">(</operator><literal type="number" pos:start="18:34" pos:end="18:34">1</literal> <operator pos:start="18:36" pos:end="18:37">&lt;&lt;</operator> <literal type="number" pos:start="18:39" pos:end="18:39">9</literal><operator pos:start="18:40" pos:end="18:40">)</operator></expr>)</condition> <block pos:start="18:43" pos:end="64:19">{<block_content pos:start="24:13" pos:end="64:19">
            <comment type="block" pos:start="19:13" pos:end="23:15">/* The hid_codes for the 0xe1/0x1d scancode sequence are 0xe9/0xe0.
             * Here we're processing the second hid_code.  By dropping bit 9
             * and setting bit 8, the scancode after 0x1d will access the
             * second half of the table.
             */</comment>
            <expr_stmt pos:start="24:13" pos:end="24:53"><expr pos:start="24:13" pos:end="24:52"><name pos:start="24:13" pos:end="24:29"><name pos:start="24:13" pos:end="24:14">hs</name><operator pos:start="24:15" pos:end="24:16">-&gt;</operator><name pos:start="24:17" pos:end="24:19">kbd</name><operator pos:start="24:20" pos:end="24:20">.</operator><name pos:start="24:21" pos:end="24:29">modifiers</name></name> <operator pos:start="24:31" pos:end="24:32">^=</operator> <operator pos:start="24:34" pos:end="24:34">(</operator><literal type="number" pos:start="24:35" pos:end="24:35">1</literal> <operator pos:start="24:37" pos:end="24:38">&lt;&lt;</operator> <literal type="number" pos:start="24:40" pos:end="24:40">8</literal><operator pos:start="24:41" pos:end="24:41">)</operator> <operator pos:start="24:43" pos:end="24:43">|</operator> <operator pos:start="24:45" pos:end="24:45">(</operator><literal type="number" pos:start="24:46" pos:end="24:46">1</literal> <operator pos:start="24:48" pos:end="24:49">&lt;&lt;</operator> <literal type="number" pos:start="24:51" pos:end="24:51">9</literal><operator pos:start="24:52" pos:end="24:52">)</operator></expr>;</expr_stmt>
            <return pos:start="25:13" pos:end="25:19">return;</return>
        <comment type="block" pos:start="26:9" pos:end="26:44">/* fall through to process Ctrl_L */</comment>
    <case pos:start="27:5" pos:end="27:23">case <expr pos:start="27:10" pos:end="27:22"><literal type="number" pos:start="27:10" pos:end="27:13">0xe1</literal> <operator pos:start="27:15" pos:end="27:17">...</operator> <literal type="number" pos:start="27:19" pos:end="27:22">0xe7</literal></expr>:</case>
        <comment type="block" pos:start="28:9" pos:end="30:11">/* Ctrl_L/Ctrl_R, Shift_L/Shift_R, Alt_L/Alt_R, Win_L/Win_R.
         * Handle releases here, or fall through to process presses.
         */</comment>
        <if_stmt pos:start="31:9" pos:end="64:19"><if pos:start="31:9" pos:end="64:19">if <condition pos:start="31:12" pos:end="31:31">(<expr pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:19">keycode</name> <operator pos:start="31:21" pos:end="31:21">&amp;</operator> <operator pos:start="31:23" pos:end="31:23">(</operator><literal type="number" pos:start="31:24" pos:end="31:24">1</literal> <operator pos:start="31:26" pos:end="31:27">&lt;&lt;</operator> <literal type="number" pos:start="31:29" pos:end="31:29">7</literal><operator pos:start="31:30" pos:end="31:30">)</operator></expr>)</condition> <block pos:start="31:33" pos:end="64:19">{<block_content pos:start="32:13" pos:end="64:19">
            <expr_stmt pos:start="32:13" pos:end="32:59"><expr pos:start="32:13" pos:end="32:58"><name pos:start="32:13" pos:end="32:29"><name pos:start="32:13" pos:end="32:14">hs</name><operator pos:start="32:15" pos:end="32:16">-&gt;</operator><name pos:start="32:17" pos:end="32:19">kbd</name><operator pos:start="32:20" pos:end="32:20">.</operator><name pos:start="32:21" pos:end="32:29">modifiers</name></name> <operator pos:start="32:31" pos:end="32:32">&amp;=</operator> <operator pos:start="32:34" pos:end="32:34">~</operator><operator pos:start="32:35" pos:end="32:35">(</operator><literal type="number" pos:start="32:36" pos:end="32:36">1</literal> <operator pos:start="32:38" pos:end="32:39">&lt;&lt;</operator> <operator pos:start="32:41" pos:end="32:41">(</operator><name pos:start="32:42" pos:end="32:49">hid_code</name> <operator pos:start="32:51" pos:end="32:51">&amp;</operator> <literal type="number" pos:start="32:53" pos:end="32:56">0x0f</literal><operator pos:start="32:57" pos:end="32:57">)</operator><operator pos:start="32:58" pos:end="32:58">)</operator></expr>;</expr_stmt>
            <return pos:start="33:13" pos:end="33:19">return;</return>
        <comment type="block" pos:start="34:9" pos:end="34:26">/* fall through */</comment>
    <case pos:start="35:5" pos:end="35:23">case <expr pos:start="35:10" pos:end="35:22"><literal type="number" pos:start="35:10" pos:end="35:13">0xe8</literal> <operator pos:start="35:15" pos:end="35:17">...</operator> <literal type="number" pos:start="35:19" pos:end="35:22">0xe9</literal></expr>:</case>
        <comment type="block" pos:start="36:9" pos:end="41:11">/* USB modifiers are just 1 byte long.  Bits 8 and 9 of
         * hs-&gt;kbd.modifiers implement a state machine that detects the
         * 0xe0 and 0xe1/0x1d sequences.  These bits do not follow the
         * usual rules where bit 7 marks released keys; they are cleared
         * elsewhere in the function as the state machine dictates.
         */</comment>
        <expr_stmt pos:start="42:9" pos:end="42:52"><expr pos:start="42:9" pos:end="42:51"><name pos:start="42:9" pos:end="42:25"><name pos:start="42:9" pos:end="42:10">hs</name><operator pos:start="42:11" pos:end="42:12">-&gt;</operator><name pos:start="42:13" pos:end="42:15">kbd</name><operator pos:start="42:16" pos:end="42:16">.</operator><name pos:start="42:17" pos:end="42:25">modifiers</name></name> <operator pos:start="42:27" pos:end="42:28">|=</operator> <literal type="number" pos:start="42:30" pos:end="42:30">1</literal> <operator pos:start="42:32" pos:end="42:33">&lt;&lt;</operator> <operator pos:start="42:35" pos:end="42:35">(</operator><name pos:start="42:36" pos:end="42:43">hid_code</name> <operator pos:start="42:45" pos:end="42:45">&amp;</operator> <literal type="number" pos:start="42:47" pos:end="42:50">0x0f</literal><operator pos:start="42:51" pos:end="42:51">)</operator></expr>;</expr_stmt>
        <return pos:start="43:9" pos:end="43:15">return;</return>
    <case pos:start="44:5" pos:end="44:23">case <expr pos:start="44:10" pos:end="44:22"><literal type="number" pos:start="44:10" pos:end="44:13">0xea</literal> <operator pos:start="44:15" pos:end="44:17">...</operator> <literal type="number" pos:start="44:19" pos:end="44:22">0xef</literal></expr>:</case>
        <expr_stmt pos:start="45:9" pos:end="45:16"><expr pos:start="45:9" pos:end="45:15"><call pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:13">abort</name><argument_list pos:start="45:14" pos:end="45:15">()</argument_list></call></expr>;</expr_stmt>
    <default pos:start="46:5" pos:end="46:12">default:</default>
        <break pos:start="47:9" pos:end="47:14">break;</break>
    <if_stmt pos:start="48:5" pos:end="64:19"><if pos:start="48:5" pos:end="64:19">if <condition pos:start="48:8" pos:end="48:27">(<expr pos:start="48:9" pos:end="48:26"><name pos:start="48:9" pos:end="48:15">keycode</name> <operator pos:start="48:17" pos:end="48:17">&amp;</operator> <operator pos:start="48:19" pos:end="48:19">(</operator><literal type="number" pos:start="48:20" pos:end="48:20">1</literal> <operator pos:start="48:22" pos:end="48:23">&lt;&lt;</operator> <literal type="number" pos:start="48:25" pos:end="48:25">7</literal><operator pos:start="48:26" pos:end="48:26">)</operator></expr>)</condition> <block pos:start="48:29" pos:end="64:19">{<block_content pos:start="49:9" pos:end="64:19">
        <for pos:start="49:9" pos:end="64:19">for <control pos:start="49:13" pos:end="49:47">(<init pos:start="49:14" pos:end="49:34"><expr pos:start="49:14" pos:end="49:33"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:29"><name pos:start="49:18" pos:end="49:19">hs</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:24">kbd</name><operator pos:start="49:25" pos:end="49:25">.</operator><name pos:start="49:26" pos:end="49:29">keys</name></name> <operator pos:start="49:31" pos:end="49:31">-</operator> <literal type="number" pos:start="49:33" pos:end="49:33">1</literal></expr>;</init> <condition pos:start="49:36" pos:end="49:42"><expr pos:start="49:36" pos:end="49:41"><name pos:start="49:36" pos:end="49:36">i</name> <operator pos:start="49:38" pos:end="49:39">&gt;=</operator> <literal type="number" pos:start="49:41" pos:end="49:41">0</literal></expr>;</condition> <incr pos:start="49:44" pos:end="49:46"><expr pos:start="49:44" pos:end="49:46"><name pos:start="49:44" pos:end="49:44">i</name><operator pos:start="49:45" pos:end="49:46">--</operator></expr></incr>)</control> <block pos:start="49:49" pos:end="64:19">{<block_content pos:start="50:13" pos:end="64:19">
            <if_stmt pos:start="50:13" pos:end="64:19"><if pos:start="50:13" pos:end="64:19">if <condition pos:start="50:16" pos:end="50:43">(<expr pos:start="50:17" pos:end="50:42"><name pos:start="50:17" pos:end="50:30"><name pos:start="50:17" pos:end="50:18">hs</name><operator pos:start="50:19" pos:end="50:20">-&gt;</operator><name pos:start="50:21" pos:end="50:23">kbd</name><operator pos:start="50:24" pos:end="50:24">.</operator><name pos:start="50:25" pos:end="50:27">key</name><index pos:start="50:28" pos:end="50:30">[<expr pos:start="50:29" pos:end="50:29"><name pos:start="50:29" pos:end="50:29">i</name></expr>]</index></name> <operator pos:start="50:32" pos:end="50:33">==</operator> <name pos:start="50:35" pos:end="50:42">hid_code</name></expr>)</condition> <block pos:start="50:45" pos:end="64:19">{<block_content pos:start="51:17" pos:end="64:19">
                <expr_stmt pos:start="51:17" pos:end="51:62"><expr pos:start="51:17" pos:end="51:61"><name pos:start="51:17" pos:end="51:30"><name pos:start="51:17" pos:end="51:18">hs</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:23">kbd</name><operator pos:start="51:24" pos:end="51:24">.</operator><name pos:start="51:25" pos:end="51:27">key</name><index pos:start="51:28" pos:end="51:30">[<expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">i</name></expr>]</index></name> <operator pos:start="51:32" pos:end="51:32">=</operator> <name pos:start="51:34" pos:end="51:61"><name pos:start="51:34" pos:end="51:35">hs</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:40">kbd</name><operator pos:start="51:41" pos:end="51:41">.</operator><name pos:start="51:42" pos:end="51:44">key</name><index pos:start="51:45" pos:end="51:61">[<expr pos:start="51:46" pos:end="51:60"><operator pos:start="51:46" pos:end="51:47">--</operator> <name pos:start="51:49" pos:end="51:60"><name pos:start="51:49" pos:end="51:50">hs</name><operator pos:start="51:51" pos:end="51:52">-&gt;</operator><name pos:start="51:53" pos:end="51:55">kbd</name><operator pos:start="51:56" pos:end="51:56">.</operator><name pos:start="51:57" pos:end="51:60">keys</name></name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="52:17" pos:end="52:49"><expr pos:start="52:17" pos:end="52:48"><name pos:start="52:17" pos:end="52:41"><name pos:start="52:17" pos:end="52:18">hs</name><operator pos:start="52:19" pos:end="52:20">-&gt;</operator><name pos:start="52:21" pos:end="52:23">kbd</name><operator pos:start="52:24" pos:end="52:24">.</operator><name pos:start="52:25" pos:end="52:27">key</name><index pos:start="52:28" pos:end="52:41">[<expr pos:start="52:29" pos:end="52:40"><name pos:start="52:29" pos:end="52:40"><name pos:start="52:29" pos:end="52:30">hs</name><operator pos:start="52:31" pos:end="52:32">-&gt;</operator><name pos:start="52:33" pos:end="52:35">kbd</name><operator pos:start="52:36" pos:end="52:36">.</operator><name pos:start="52:37" pos:end="52:40">keys</name></name></expr>]</index></name> <operator pos:start="52:43" pos:end="52:43">=</operator> <literal type="number" pos:start="52:45" pos:end="52:48">0x00</literal></expr>;</expr_stmt>
                <break pos:start="53:17" pos:end="53:22">break;</break>
        <if_stmt pos:start="54:9" pos:end="64:19"><if pos:start="54:9" pos:end="56:5">if <condition pos:start="54:12" pos:end="54:18">(<expr pos:start="54:13" pos:end="54:17"><name pos:start="54:13" pos:end="54:13">i</name> <operator pos:start="54:15" pos:end="54:15">&lt;</operator> <literal type="number" pos:start="54:17" pos:end="54:17">0</literal></expr>)</condition> <block pos:start="54:20" pos:end="56:5">{<block_content pos:start="55:13" pos:end="55:19">
            <return pos:start="55:13" pos:end="55:19">return;</return>
    </block_content>}</block></if> <else pos:start="56:7" pos:end="64:19">else <block pos:start="56:12" pos:end="64:19">{<block_content pos:start="57:9" pos:end="64:19">
        <for pos:start="57:9" pos:end="64:19">for <control pos:start="57:13" pos:end="57:47">(<init pos:start="57:14" pos:end="57:34"><expr pos:start="57:14" pos:end="57:33"><name pos:start="57:14" pos:end="57:14">i</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:29"><name pos:start="57:18" pos:end="57:19">hs</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:24">kbd</name><operator pos:start="57:25" pos:end="57:25">.</operator><name pos:start="57:26" pos:end="57:29">keys</name></name> <operator pos:start="57:31" pos:end="57:31">-</operator> <literal type="number" pos:start="57:33" pos:end="57:33">1</literal></expr>;</init> <condition pos:start="57:36" pos:end="57:42"><expr pos:start="57:36" pos:end="57:41"><name pos:start="57:36" pos:end="57:36">i</name> <operator pos:start="57:38" pos:end="57:39">&gt;=</operator> <literal type="number" pos:start="57:41" pos:end="57:41">0</literal></expr>;</condition> <incr pos:start="57:44" pos:end="57:46"><expr pos:start="57:44" pos:end="57:46"><name pos:start="57:44" pos:end="57:44">i</name><operator pos:start="57:45" pos:end="57:46">--</operator></expr></incr>)</control> <block pos:start="57:49" pos:end="64:19">{<block_content pos:start="58:13" pos:end="64:19">
            <if_stmt pos:start="58:13" pos:end="64:19"><if pos:start="58:13" pos:end="64:19">if <condition pos:start="58:16" pos:end="58:43">(<expr pos:start="58:17" pos:end="58:42"><name pos:start="58:17" pos:end="58:30"><name pos:start="58:17" pos:end="58:18">hs</name><operator pos:start="58:19" pos:end="58:20">-&gt;</operator><name pos:start="58:21" pos:end="58:23">kbd</name><operator pos:start="58:24" pos:end="58:24">.</operator><name pos:start="58:25" pos:end="58:27">key</name><index pos:start="58:28" pos:end="58:30">[<expr pos:start="58:29" pos:end="58:29"><name pos:start="58:29" pos:end="58:29">i</name></expr>]</index></name> <operator pos:start="58:32" pos:end="58:33">==</operator> <name pos:start="58:35" pos:end="58:42">hid_code</name></expr>)</condition> <block pos:start="58:45" pos:end="64:19">{<block_content pos:start="59:17" pos:end="64:19">
                <break pos:start="59:17" pos:end="59:22">break;</break>
        <if_stmt pos:start="60:9" pos:end="64:19"><if pos:start="60:9" pos:end="64:19">if <condition pos:start="60:12" pos:end="60:18">(<expr pos:start="60:13" pos:end="60:17"><name pos:start="60:13" pos:end="60:13">i</name> <operator pos:start="60:15" pos:end="60:15">&lt;</operator> <literal type="number" pos:start="60:17" pos:end="60:17">0</literal></expr>)</condition> <block pos:start="60:20" pos:end="64:19">{<block_content pos:start="61:13" pos:end="64:19">
            <if_stmt pos:start="61:13" pos:end="64:19"><if pos:start="61:13" pos:end="63:9">if <condition pos:start="61:16" pos:end="61:51">(<expr pos:start="61:17" pos:end="61:50"><name pos:start="61:17" pos:end="61:28"><name pos:start="61:17" pos:end="61:18">hs</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:23">kbd</name><operator pos:start="61:24" pos:end="61:24">.</operator><name pos:start="61:25" pos:end="61:28">keys</name></name> <operator pos:start="61:30" pos:end="61:30">&lt;</operator> <sizeof pos:start="61:32" pos:end="61:50">sizeof<argument_list pos:start="61:38" pos:end="61:50">(<argument pos:start="61:39" pos:end="61:49"><expr pos:start="61:39" pos:end="61:49"><name pos:start="61:39" pos:end="61:49"><name pos:start="61:39" pos:end="61:40">hs</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:45">kbd</name><operator pos:start="61:46" pos:end="61:46">.</operator><name pos:start="61:47" pos:end="61:49">key</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="61:53" pos:end="63:9">{<block_content pos:start="62:17" pos:end="62:55">
                <expr_stmt pos:start="62:17" pos:end="62:55"><expr pos:start="62:17" pos:end="62:54"><name pos:start="62:17" pos:end="62:43"><name pos:start="62:17" pos:end="62:18">hs</name><operator pos:start="62:19" pos:end="62:20">-&gt;</operator><name pos:start="62:21" pos:end="62:23">kbd</name><operator pos:start="62:24" pos:end="62:24">.</operator><name pos:start="62:25" pos:end="62:27">key</name><index pos:start="62:28" pos:end="62:43">[<expr pos:start="62:29" pos:end="62:42"><name pos:start="62:29" pos:end="62:40"><name pos:start="62:29" pos:end="62:30">hs</name><operator pos:start="62:31" pos:end="62:32">-&gt;</operator><name pos:start="62:33" pos:end="62:35">kbd</name><operator pos:start="62:36" pos:end="62:36">.</operator><name pos:start="62:37" pos:end="62:40">keys</name></name><operator pos:start="62:41" pos:end="62:42">++</operator></expr>]</index></name> <operator pos:start="62:45" pos:end="62:45">=</operator> <name pos:start="62:47" pos:end="62:54">hid_code</name></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="63:11" pos:end="64:19">else <block pos:start="63:16" pos:end="64:19">{<block_content pos:start="64:13" pos:end="64:19">
            <return pos:start="64:13" pos:end="64:19">return;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></function></unit>
