<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7640.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">colo_packet_compare_common</name><parameter_list pos:start="1:38" pos:end="1:77">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:44">Packet</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">ppkt</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:58">Packet</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">spkt</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:76"><decl pos:start="1:67" pos:end="1:76"><type pos:start="1:67" pos:end="1:76"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:76">offset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <if_stmt pos:start="5:5" pos:end="27:5"><if pos:start="5:5" pos:end="27:5">if <condition pos:start="5:8" pos:end="5:61">(<expr pos:start="5:9" pos:end="5:60"><call pos:start="5:9" pos:end="5:60"><name pos:start="5:9" pos:end="5:29">trace_event_get_state</name><argument_list pos:start="5:30" pos:end="5:60">(<argument pos:start="5:31" pos:end="5:59"><expr pos:start="5:31" pos:end="5:59"><name pos:start="5:31" pos:end="5:59">TRACE_COLO_COMPARE_MISCOMPARE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:63" pos:end="27:5">{<block_content pos:start="7:9" pos:end="25:59">

        <decl_stmt pos:start="7:9" pos:end="7:76"><decl pos:start="7:9" pos:end="7:27"><type pos:start="7:9" pos:end="7:12"><name pos:start="7:9" pos:end="7:12">char</name></type> <name pos:start="7:14" pos:end="7:27"><name pos:start="7:14" pos:end="7:23">pri_ip_src</name><index pos:start="7:24" pos:end="7:27">[<expr pos:start="7:25" pos:end="7:26"><literal type="number" pos:start="7:25" pos:end="7:26">20</literal></expr>]</index></name></decl>, <decl pos:start="7:30" pos:end="7:43"><type ref="prev" pos:start="7:9" pos:end="7:12"/><name pos:start="7:30" pos:end="7:43"><name pos:start="7:30" pos:end="7:39">pri_ip_dst</name><index pos:start="7:40" pos:end="7:43">[<expr pos:start="7:41" pos:end="7:42"><literal type="number" pos:start="7:41" pos:end="7:42">20</literal></expr>]</index></name></decl>, <decl pos:start="7:46" pos:end="7:59"><type ref="prev" pos:start="7:9" pos:end="7:12"/><name pos:start="7:46" pos:end="7:59"><name pos:start="7:46" pos:end="7:55">sec_ip_src</name><index pos:start="7:56" pos:end="7:59">[<expr pos:start="7:57" pos:end="7:58"><literal type="number" pos:start="7:57" pos:end="7:58">20</literal></expr>]</index></name></decl>, <decl pos:start="7:62" pos:end="7:75"><type ref="prev" pos:start="7:9" pos:end="7:12"/><name pos:start="7:62" pos:end="7:75"><name pos:start="7:62" pos:end="7:71">sec_ip_dst</name><index pos:start="7:72" pos:end="7:75">[<expr pos:start="7:73" pos:end="7:74"><literal type="number" pos:start="7:73" pos:end="7:74">20</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="11:9" pos:end="11:56"><expr pos:start="11:9" pos:end="11:55"><call pos:start="11:9" pos:end="11:55"><name pos:start="11:9" pos:end="11:14">strcpy</name><argument_list pos:start="11:15" pos:end="11:55">(<argument pos:start="11:16" pos:end="11:25"><expr pos:start="11:16" pos:end="11:25"><name pos:start="11:16" pos:end="11:25">pri_ip_src</name></expr></argument>, <argument pos:start="11:28" pos:end="11:54"><expr pos:start="11:28" pos:end="11:54"><call pos:start="11:28" pos:end="11:54"><name pos:start="11:28" pos:end="11:36">inet_ntoa</name><argument_list pos:start="11:37" pos:end="11:54">(<argument pos:start="11:38" pos:end="11:53"><expr pos:start="11:38" pos:end="11:53"><name pos:start="11:38" pos:end="11:53"><name pos:start="11:38" pos:end="11:41">ppkt</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:45">ip</name><operator pos:start="11:46" pos:end="11:47">-&gt;</operator><name pos:start="11:48" pos:end="11:53">ip_src</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:56"><expr pos:start="13:9" pos:end="13:55"><call pos:start="13:9" pos:end="13:55"><name pos:start="13:9" pos:end="13:14">strcpy</name><argument_list pos:start="13:15" pos:end="13:55">(<argument pos:start="13:16" pos:end="13:25"><expr pos:start="13:16" pos:end="13:25"><name pos:start="13:16" pos:end="13:25">pri_ip_dst</name></expr></argument>, <argument pos:start="13:28" pos:end="13:54"><expr pos:start="13:28" pos:end="13:54"><call pos:start="13:28" pos:end="13:54"><name pos:start="13:28" pos:end="13:36">inet_ntoa</name><argument_list pos:start="13:37" pos:end="13:54">(<argument pos:start="13:38" pos:end="13:53"><expr pos:start="13:38" pos:end="13:53"><name pos:start="13:38" pos:end="13:53"><name pos:start="13:38" pos:end="13:41">ppkt</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:45">ip</name><operator pos:start="13:46" pos:end="13:47">-&gt;</operator><name pos:start="13:48" pos:end="13:53">ip_dst</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:56"><expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:14">strcpy</name><argument_list pos:start="15:15" pos:end="15:55">(<argument pos:start="15:16" pos:end="15:25"><expr pos:start="15:16" pos:end="15:25"><name pos:start="15:16" pos:end="15:25">sec_ip_src</name></expr></argument>, <argument pos:start="15:28" pos:end="15:54"><expr pos:start="15:28" pos:end="15:54"><call pos:start="15:28" pos:end="15:54"><name pos:start="15:28" pos:end="15:36">inet_ntoa</name><argument_list pos:start="15:37" pos:end="15:54">(<argument pos:start="15:38" pos:end="15:53"><expr pos:start="15:38" pos:end="15:53"><name pos:start="15:38" pos:end="15:53"><name pos:start="15:38" pos:end="15:41">spkt</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:45">ip</name><operator pos:start="15:46" pos:end="15:47">-&gt;</operator><name pos:start="15:48" pos:end="15:53">ip_src</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:56"><expr pos:start="17:9" pos:end="17:55"><call pos:start="17:9" pos:end="17:55"><name pos:start="17:9" pos:end="17:14">strcpy</name><argument_list pos:start="17:15" pos:end="17:55">(<argument pos:start="17:16" pos:end="17:25"><expr pos:start="17:16" pos:end="17:25"><name pos:start="17:16" pos:end="17:25">sec_ip_dst</name></expr></argument>, <argument pos:start="17:28" pos:end="17:54"><expr pos:start="17:28" pos:end="17:54"><call pos:start="17:28" pos:end="17:54"><name pos:start="17:28" pos:end="17:36">inet_ntoa</name><argument_list pos:start="17:37" pos:end="17:54">(<argument pos:start="17:38" pos:end="17:53"><expr pos:start="17:38" pos:end="17:53"><name pos:start="17:38" pos:end="17:53"><name pos:start="17:38" pos:end="17:41">spkt</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:45">ip</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:53">ip_dst</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="21:9" pos:end="25:59"><expr pos:start="21:9" pos:end="25:58"><call pos:start="21:9" pos:end="25:58"><name pos:start="21:9" pos:end="21:34">trace_colo_compare_ip_info</name><argument_list pos:start="21:35" pos:end="25:58">(<argument pos:start="21:36" pos:end="21:45"><expr pos:start="21:36" pos:end="21:45"><name pos:start="21:36" pos:end="21:45"><name pos:start="21:36" pos:end="21:39">ppkt</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:45">size</name></name></expr></argument>, <argument pos:start="21:48" pos:end="21:57"><expr pos:start="21:48" pos:end="21:57"><name pos:start="21:48" pos:end="21:57">pri_ip_src</name></expr></argument>,

                                   <argument pos:start="23:36" pos:end="23:45"><expr pos:start="23:36" pos:end="23:45"><name pos:start="23:36" pos:end="23:45">pri_ip_dst</name></expr></argument>, <argument pos:start="23:48" pos:end="23:57"><expr pos:start="23:48" pos:end="23:57"><name pos:start="23:48" pos:end="23:57"><name pos:start="23:48" pos:end="23:51">spkt</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:57">size</name></name></expr></argument>,

                                   <argument pos:start="25:36" pos:end="25:45"><expr pos:start="25:36" pos:end="25:45"><name pos:start="25:36" pos:end="25:45">sec_ip_src</name></expr></argument>, <argument pos:start="25:48" pos:end="25:57"><expr pos:start="25:48" pos:end="25:57"><name pos:start="25:48" pos:end="25:57">sec_ip_dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:10">offset</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <name pos:start="31:14" pos:end="31:31"><name pos:start="31:14" pos:end="31:17">ppkt</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:31">vnet_hdr_len</name></name> <operator pos:start="31:33" pos:end="31:33">+</operator> <name pos:start="31:35" pos:end="31:40">offset</name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="49:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:33">(<expr pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:12">ppkt</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:18">size</name></name> <operator pos:start="35:20" pos:end="35:21">==</operator> <name pos:start="35:23" pos:end="35:32"><name pos:start="35:23" pos:end="35:26">spkt</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:32">size</name></name></expr>)</condition> <block pos:start="35:35" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:43">

        <return pos:start="37:9" pos:end="41:43">return <expr pos:start="37:16" pos:end="41:42"><call pos:start="37:16" pos:end="41:42"><name pos:start="37:16" pos:end="37:21">memcmp</name><argument_list pos:start="37:22" pos:end="41:42">(<argument pos:start="37:23" pos:end="37:41"><expr pos:start="37:23" pos:end="37:41"><name pos:start="37:23" pos:end="37:32"><name pos:start="37:23" pos:end="37:26">ppkt</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:32">data</name></name> <operator pos:start="37:34" pos:end="37:34">+</operator> <name pos:start="37:36" pos:end="37:41">offset</name></expr></argument>,

                      <argument pos:start="39:23" pos:end="39:41"><expr pos:start="39:23" pos:end="39:41"><name pos:start="39:23" pos:end="39:32"><name pos:start="39:23" pos:end="39:26">spkt</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:32">data</name></name> <operator pos:start="39:34" pos:end="39:34">+</operator> <name pos:start="39:36" pos:end="39:41">offset</name></expr></argument>,

                      <argument pos:start="41:23" pos:end="41:41"><expr pos:start="41:23" pos:end="41:41"><name pos:start="41:23" pos:end="41:32"><name pos:start="41:23" pos:end="41:26">spkt</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:32">size</name></name> <operator pos:start="41:34" pos:end="41:34">-</operator> <name pos:start="41:36" pos:end="41:41">offset</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="49:5">else <block pos:start="43:12" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:68"><expr pos:start="45:9" pos:end="45:67"><call pos:start="45:9" pos:end="45:67"><name pos:start="45:9" pos:end="45:31">trace_colo_compare_main</name><argument_list pos:start="45:32" pos:end="45:67">(<argument pos:start="45:33" pos:end="45:66"><expr pos:start="45:33" pos:end="45:66"><literal type="string" pos:start="45:33" pos:end="45:66">"Net packet size are not the same"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
