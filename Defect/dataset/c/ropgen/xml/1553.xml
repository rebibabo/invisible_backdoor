<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1553.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:39">slavio_serial_mem_readb</name><parameter_list pos:start="1:40" pos:end="1:78">(<parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:44">void</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:52">opaque</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:77"><decl pos:start="1:55" pos:end="1:77"><type pos:start="1:55" pos:end="1:77"><name pos:start="1:55" pos:end="1:72">target_phys_addr_t</name></type> <name pos:start="1:74" pos:end="1:77">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SerialState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">ser</name> <init pos:start="5:22" pos:end="5:29">= <expr pos:start="5:24" pos:end="5:29"><name pos:start="5:24" pos:end="5:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ChannelState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">saddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">channel</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:9">saddr</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:17">addr</name> <operator pos:start="17:19" pos:end="17:19">&amp;</operator> <literal type="number" pos:start="17:21" pos:end="17:21">3</literal><operator pos:start="17:22" pos:end="17:22">)</operator> <operator pos:start="17:24" pos:end="17:25">&gt;&gt;</operator> <literal type="number" pos:start="17:27" pos:end="17:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:11">channel</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <operator pos:start="19:15" pos:end="19:15">(</operator><name pos:start="19:16" pos:end="19:19">addr</name> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <name pos:start="19:23" pos:end="19:36">SERIAL_MAXADDR</name><operator pos:start="19:37" pos:end="19:37">)</operator> <operator pos:start="19:39" pos:end="19:40">&gt;&gt;</operator> <literal type="number" pos:start="19:42" pos:end="19:42">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:5">s</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <operator pos:start="21:9" pos:end="21:9">&amp;</operator><name pos:start="21:10" pos:end="21:26"><name pos:start="21:10" pos:end="21:12">ser</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:17">chn</name><index pos:start="21:18" pos:end="21:26">[<expr pos:start="21:19" pos:end="21:25"><name pos:start="21:19" pos:end="21:25">channel</name></expr>]</index></name></expr>;</expr_stmt>

    <switch pos:start="23:5" pos:end="57:5">switch <condition pos:start="23:12" pos:end="23:18">(<expr pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:17">saddr</name></expr>)</condition> <block pos:start="23:20" pos:end="57:5">{<block_content pos:start="25:5" pos:end="55:14">

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">0</literal></expr>:</case>

	<expr_stmt pos:start="27:9" pos:end="27:94"><expr pos:start="27:9" pos:end="27:93"><call pos:start="27:9" pos:end="27:93"><name pos:start="27:9" pos:end="27:19">SER_DPRINTF</name><argument_list pos:start="27:20" pos:end="27:93">(<argument pos:start="27:21" pos:end="27:56"><expr pos:start="27:21" pos:end="27:56"><literal type="string" pos:start="27:21" pos:end="27:56">"Read channel %c, reg[%d] = %2.2x\n"</literal></expr></argument>, <argument pos:start="27:59" pos:end="27:66"><expr pos:start="27:59" pos:end="27:66"><call pos:start="27:59" pos:end="27:66"><name pos:start="27:59" pos:end="27:63">CHN_C</name><argument_list pos:start="27:64" pos:end="27:66">(<argument pos:start="27:65" pos:end="27:65"><expr pos:start="27:65" pos:end="27:65"><name pos:start="27:65" pos:end="27:65">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:69" pos:end="27:74"><expr pos:start="27:69" pos:end="27:74"><name pos:start="27:69" pos:end="27:74"><name pos:start="27:69" pos:end="27:69">s</name><operator pos:start="27:70" pos:end="27:71">-&gt;</operator><name pos:start="27:72" pos:end="27:74">reg</name></name></expr></argument>, <argument pos:start="27:77" pos:end="27:92"><expr pos:start="27:77" pos:end="27:92"><name pos:start="27:77" pos:end="27:92"><name pos:start="27:77" pos:end="27:77">s</name><operator pos:start="27:78" pos:end="27:79">-&gt;</operator><name pos:start="27:80" pos:end="27:84">rregs</name><index pos:start="27:85" pos:end="27:92">[<expr pos:start="27:86" pos:end="27:91"><name pos:start="27:86" pos:end="27:91"><name pos:start="27:86" pos:end="27:86">s</name><operator pos:start="27:87" pos:end="27:88">-&gt;</operator><name pos:start="27:89" pos:end="27:91">reg</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:30"><name pos:start="29:15" pos:end="29:15">s</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:22">rregs</name><index pos:start="29:23" pos:end="29:30">[<expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:24">s</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:29">reg</name></name></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="31:9" pos:end="31:19"><expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:14">reg</name></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</expr_stmt>

	<return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return>

    <case pos:start="35:5" pos:end="35:11">case <expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">1</literal></expr>:</case>

	<expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:16">rregs</name><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>]</index></name> <operator pos:start="37:21" pos:end="37:22">&amp;=</operator> <operator pos:start="37:24" pos:end="37:24">~</operator><literal type="number" pos:start="37:25" pos:end="37:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:21"><expr pos:start="39:9" pos:end="39:20"><call pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:17">clr_rxint</name><argument_list pos:start="39:18" pos:end="39:20">(<argument pos:start="39:19" pos:end="39:19"><expr pos:start="39:19" pos:end="39:19"><name pos:start="39:19" pos:end="39:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="41:9" pos:end="47:24"><if pos:start="41:9" pos:end="43:31">if <condition pos:start="41:12" pos:end="41:47">(<expr pos:start="41:13" pos:end="41:46"><name pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:19">type</name></name> <operator pos:start="41:21" pos:end="41:22">==</operator> <name pos:start="41:24" pos:end="41:26">kbd</name> <operator pos:start="41:28" pos:end="41:29">||</operator> <name pos:start="41:31" pos:end="41:37"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:37">type</name></name> <operator pos:start="41:39" pos:end="41:40">==</operator> <name pos:start="41:42" pos:end="41:46">mouse</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:31"><block_content pos:start="43:13" pos:end="43:31">

	    <expr_stmt pos:start="43:13" pos:end="43:31"><expr pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:15">ret</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:27">get_queue</name><argument_list pos:start="43:28" pos:end="43:30">(<argument pos:start="43:29" pos:end="43:29"><expr pos:start="43:29" pos:end="43:29"><name pos:start="43:29" pos:end="43:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

	<else pos:start="45:9" pos:end="47:24">else<block type="pseudo" pos:start="47:13" pos:end="47:24"><block_content pos:start="47:13" pos:end="47:24">

	    <expr_stmt pos:start="47:13" pos:end="47:24"><expr pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:23"><name pos:start="47:19" pos:end="47:19">s</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:23">rx</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

	<expr_stmt pos:start="49:9" pos:end="49:63"><expr pos:start="49:9" pos:end="49:62"><call pos:start="49:9" pos:end="49:62"><name pos:start="49:9" pos:end="49:19">SER_DPRINTF</name><argument_list pos:start="49:20" pos:end="49:62">(<argument pos:start="49:21" pos:end="49:46"><expr pos:start="49:21" pos:end="49:46"><literal type="string" pos:start="49:21" pos:end="49:46">"Read channel %c, ch %d\n"</literal></expr></argument>, <argument pos:start="49:49" pos:end="49:56"><expr pos:start="49:49" pos:end="49:56"><call pos:start="49:49" pos:end="49:56"><name pos:start="49:49" pos:end="49:53">CHN_C</name><argument_list pos:start="49:54" pos:end="49:56">(<argument pos:start="49:55" pos:end="49:55"><expr pos:start="49:55" pos:end="49:55"><name pos:start="49:55" pos:end="49:55">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:59" pos:end="49:61"><expr pos:start="49:59" pos:end="49:61"><name pos:start="49:59" pos:end="49:61">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="51:9" pos:end="51:19">return <expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">ret</name></expr>;</return>

    <default pos:start="53:5" pos:end="53:12">default:</default>

	<break pos:start="55:9" pos:end="55:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
