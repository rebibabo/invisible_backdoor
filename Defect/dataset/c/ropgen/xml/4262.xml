<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4262.c" pos:tabs="8"><function pos:start="1:1" pos:end="267:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">wv_read_block_header</name><parameter_list pos:start="1:32" pos:end="1:70">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:47">AVFormatContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">ctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><name pos:start="1:55" pos:end="1:65">AVIOContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:69">pb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="267:1">{<block_content pos:start="5:5" pos:end="265:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">WVContext</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">wc</name> <init pos:start="5:19" pos:end="5:34">= <expr pos:start="5:21" pos:end="5:34"><name pos:start="5:21" pos:end="5:34"><name pos:start="5:21" pos:end="5:23">ctx</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">rate</name></decl>, <decl pos:start="9:15" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:17">bpp</name></decl>, <decl pos:start="9:20" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:23">chan</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:19">chmask</name></decl>, <decl pos:start="11:22" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:22" pos:end="11:26">flags</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:6">wc</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:11">pos</name></name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:27"><name pos:start="15:15" pos:end="15:23">avio_tell</name><argument_list pos:start="15:24" pos:end="15:27">(<argument pos:start="15:25" pos:end="15:26"><expr pos:start="15:25" pos:end="15:26"><name pos:start="15:25" pos:end="15:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:58">/* don't return bogus packets with the ape tag data */</comment>

    <if_stmt pos:start="21:5" pos:end="23:27"><if pos:start="21:5" pos:end="23:27">if <condition pos:start="21:8" pos:end="21:56">(<expr pos:start="21:9" pos:end="21:55"><name pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:10">wc</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:24">apetag_start</name></name> <operator pos:start="21:26" pos:end="21:27">&amp;&amp;</operator> <name pos:start="21:29" pos:end="21:35"><name pos:start="21:29" pos:end="21:30">wc</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:35">pos</name></name> <operator pos:start="21:37" pos:end="21:38">&gt;=</operator> <name pos:start="21:40" pos:end="21:55"><name pos:start="21:40" pos:end="21:41">wc</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:55">apetag_start</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:27"><block_content pos:start="23:9" pos:end="23:27">

        <return pos:start="23:9" pos:end="23:27">return <expr pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:58"><expr pos:start="27:5" pos:end="27:57"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:57"><name pos:start="27:11" pos:end="27:19">avio_read</name><argument_list pos:start="27:20" pos:end="27:57">(<argument pos:start="27:21" pos:end="27:22"><expr pos:start="27:21" pos:end="27:22"><name pos:start="27:21" pos:end="27:22">pb</name></expr></argument>, <argument pos:start="27:25" pos:end="27:40"><expr pos:start="27:25" pos:end="27:40"><name pos:start="27:25" pos:end="27:40"><name pos:start="27:25" pos:end="27:26">wc</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:40">block_header</name></name></expr></argument>, <argument pos:start="27:43" pos:end="27:56"><expr pos:start="27:43" pos:end="27:56"><name pos:start="27:43" pos:end="27:56">WV_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:45"><if pos:start="29:5" pos:end="31:45">if <condition pos:start="29:8" pos:end="29:30">(<expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:14">!=</operator> <name pos:start="29:16" pos:end="29:29">WV_HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:45"><block_content pos:start="31:9" pos:end="31:45">

        <return pos:start="31:9" pos:end="31:45">return <expr pos:start="31:16" pos:end="31:44"><ternary pos:start="31:16" pos:end="31:44"><condition pos:start="31:16" pos:end="31:26"><expr pos:start="31:16" pos:end="31:24"><operator pos:start="31:16" pos:end="31:16">(</operator><name pos:start="31:17" pos:end="31:19">ret</name> <operator pos:start="31:21" pos:end="31:21">&lt;</operator> <literal type="number" pos:start="31:23" pos:end="31:23">0</literal><operator pos:start="31:24" pos:end="31:24">)</operator></expr> ?</condition><then pos:start="31:28" pos:end="31:30"> <expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:30">ret</name></expr> </then><else pos:start="31:32" pos:end="31:44">: <expr pos:start="31:34" pos:end="31:44"><name pos:start="31:34" pos:end="31:44">AVERROR_EOF</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:60"><expr pos:start="35:5" pos:end="35:59"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:59"><name pos:start="35:11" pos:end="35:28">ff_wv_parse_header</name><argument_list pos:start="35:29" pos:end="35:59">(<argument pos:start="35:30" pos:end="35:40"><expr pos:start="35:30" pos:end="35:40"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:40"><name pos:start="35:31" pos:end="35:32">wc</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:40">header</name></name></expr></argument>, <argument pos:start="35:43" pos:end="35:58"><expr pos:start="35:43" pos:end="35:58"><name pos:start="35:43" pos:end="35:58"><name pos:start="35:43" pos:end="35:44">wc</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:58">block_header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">&lt;</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>)</condition> <block pos:start="37:18" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:19">

        <expr_stmt pos:start="39:9" pos:end="39:61"><expr pos:start="39:9" pos:end="39:60"><call pos:start="39:9" pos:end="39:60"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:60">(<argument pos:start="39:16" pos:end="39:18"><expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">ctx</name></expr></argument>, <argument pos:start="39:21" pos:end="39:32"><expr pos:start="39:21" pos:end="39:32"><name pos:start="39:21" pos:end="39:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:35" pos:end="39:59"><expr pos:start="39:35" pos:end="39:59"><literal type="string" pos:start="39:35" pos:end="39:59">"Invalid block header.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:19">return <expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:65">(<expr pos:start="47:9" pos:end="47:64"><name pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:10">wc</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:18">header</name><operator pos:start="47:19" pos:end="47:19">.</operator><name pos:start="47:20" pos:end="47:26">version</name></name> <operator pos:start="47:28" pos:end="47:28">&lt;</operator> <literal type="number" pos:start="47:30" pos:end="47:34">0x402</literal> <operator pos:start="47:36" pos:end="47:37">||</operator> <name pos:start="47:39" pos:end="47:56"><name pos:start="47:39" pos:end="47:40">wc</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:48">header</name><operator pos:start="47:49" pos:end="47:49">.</operator><name pos:start="47:50" pos:end="47:56">version</name></name> <operator pos:start="47:58" pos:end="47:58">&gt;</operator> <literal type="number" pos:start="47:60" pos:end="47:64">0x410</literal></expr>)</condition> <block pos:start="47:67" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:36">

        <expr_stmt pos:start="49:9" pos:end="49:84"><expr pos:start="49:9" pos:end="49:83"><call pos:start="49:9" pos:end="49:83"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:83">(<argument pos:start="49:16" pos:end="49:18"><expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">ctx</name></expr></argument>, <argument pos:start="49:21" pos:end="49:32"><expr pos:start="49:21" pos:end="49:32"><name pos:start="49:21" pos:end="49:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:35" pos:end="49:62"><expr pos:start="49:35" pos:end="49:62"><literal type="string" pos:start="49:35" pos:end="49:62">"Unsupported version %03X\n"</literal></expr></argument>, <argument pos:start="49:65" pos:end="49:82"><expr pos:start="49:65" pos:end="49:82"><name pos:start="49:65" pos:end="49:82"><name pos:start="49:65" pos:end="49:66">wc</name><operator pos:start="49:67" pos:end="49:68">-&gt;</operator><name pos:start="49:69" pos:end="49:74">header</name><operator pos:start="49:75" pos:end="49:75">.</operator><name pos:start="49:76" pos:end="49:82">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:36">return <expr pos:start="51:16" pos:end="51:35"><name pos:start="51:16" pos:end="51:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="59:31">/* Blocks with zero samples don't contain actual audio information

     * and should be ignored */</comment>

    <if_stmt pos:start="61:5" pos:end="63:17"><if pos:start="61:5" pos:end="63:17">if <condition pos:start="61:8" pos:end="61:28">(<expr pos:start="61:9" pos:end="61:27"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:27"><name pos:start="61:10" pos:end="61:11">wc</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:19">header</name><operator pos:start="61:20" pos:end="61:20">.</operator><name pos:start="61:21" pos:end="61:27">samples</name></name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:17"><block_content pos:start="63:9" pos:end="63:17">

        <return pos:start="63:9" pos:end="63:17">return <expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="line" pos:start="65:5" pos:end="65:18">// parse flags</comment>

    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:9">flags</name>  <operator pos:start="67:12" pos:end="67:12">=</operator> <name pos:start="67:14" pos:end="67:29"><name pos:start="67:14" pos:end="67:15">wc</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:23">header</name><operator pos:start="67:24" pos:end="67:24">.</operator><name pos:start="67:25" pos:end="67:29">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:36"><expr pos:start="69:5" pos:end="69:35"><name pos:start="69:5" pos:end="69:7">bpp</name>    <operator pos:start="69:12" pos:end="69:12">=</operator> <operator pos:start="69:14" pos:end="69:14">(</operator><operator pos:start="69:15" pos:end="69:15">(</operator><name pos:start="69:16" pos:end="69:20">flags</name> <operator pos:start="69:22" pos:end="69:22">&amp;</operator> <literal type="number" pos:start="69:24" pos:end="69:24">3</literal><operator pos:start="69:25" pos:end="69:25">)</operator> <operator pos:start="69:27" pos:end="69:27">+</operator> <literal type="number" pos:start="69:29" pos:end="69:29">1</literal><operator pos:start="69:30" pos:end="69:30">)</operator> <operator pos:start="69:32" pos:end="69:33">&lt;&lt;</operator> <literal type="number" pos:start="69:35" pos:end="69:35">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:36"><expr pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:8">chan</name>   <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="number" pos:start="71:14" pos:end="71:16">1</literal> <operator pos:start="71:16" pos:end="71:16">+</operator> <operator pos:start="71:18" pos:end="71:18">!</operator><operator pos:start="71:19" pos:end="71:19">(</operator><name pos:start="71:20" pos:end="71:24">flags</name> <operator pos:start="71:26" pos:end="71:26">&amp;</operator> <name pos:start="71:28" pos:end="71:34">WV_MONO</name><operator pos:start="71:35" pos:end="71:35">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:71"><expr pos:start="73:5" pos:end="73:70"><name pos:start="73:5" pos:end="73:10">chmask</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <ternary pos:start="73:14" pos:end="73:70"><condition pos:start="73:14" pos:end="73:30"><expr pos:start="73:14" pos:end="73:28"><name pos:start="73:14" pos:end="73:18">flags</name> <operator pos:start="73:20" pos:end="73:20">&amp;</operator> <name pos:start="73:22" pos:end="73:28">WV_MONO</name></expr> ?</condition><then pos:start="73:32" pos:end="73:48"> <expr pos:start="73:32" pos:end="73:48"><name pos:start="73:32" pos:end="73:48">AV_CH_LAYOUT_MONO</name></expr> </then><else pos:start="73:50" pos:end="73:70">: <expr pos:start="73:52" pos:end="73:70"><name pos:start="73:52" pos:end="73:70">AV_CH_LAYOUT_STEREO</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:43"><expr pos:start="75:5" pos:end="75:42"><name pos:start="75:5" pos:end="75:8">rate</name>   <operator pos:start="75:12" pos:end="75:12">=</operator> <name pos:start="75:14" pos:end="75:42"><name pos:start="75:14" pos:end="75:21">wv_rates</name><index pos:start="75:22" pos:end="75:42">[<expr pos:start="75:23" pos:end="75:41"><operator pos:start="75:23" pos:end="75:23">(</operator><name pos:start="75:24" pos:end="75:28">flags</name> <operator pos:start="75:30" pos:end="75:31">&gt;&gt;</operator> <literal type="number" pos:start="75:33" pos:end="75:34">23</literal><operator pos:start="75:35" pos:end="75:35">)</operator> <operator pos:start="75:37" pos:end="75:37">&amp;</operator> <literal type="number" pos:start="75:39" pos:end="75:41">0xF</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:65"><expr pos:start="77:5" pos:end="77:64"><name pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:6">wc</name><operator pos:start="77:7" pos:end="77:8">-&gt;</operator><name pos:start="77:9" pos:end="77:20">multichannel</name></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <operator pos:start="77:24" pos:end="77:24">!</operator><operator pos:start="77:25" pos:end="77:25">(</operator><name pos:start="77:26" pos:end="77:43"><name pos:start="77:26" pos:end="77:27">wc</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:35">header</name><operator pos:start="77:36" pos:end="77:36">.</operator><name pos:start="77:37" pos:end="77:43">initial</name></name> <operator pos:start="77:45" pos:end="77:46">&amp;&amp;</operator> <name pos:start="77:48" pos:end="77:63"><name pos:start="77:48" pos:end="77:49">wc</name><operator pos:start="77:50" pos:end="77:51">-&gt;</operator><name pos:start="77:52" pos:end="77:57">header</name><operator pos:start="77:58" pos:end="77:58">.</operator><name pos:start="77:59" pos:end="77:63">final</name></name><operator pos:start="77:64" pos:end="77:64">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:25">(<expr pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:10">wc</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:24">multichannel</name></name></expr>)</condition> <block pos:start="79:27" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:28">

        <expr_stmt pos:start="81:9" pos:end="81:26"><expr pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:12">chan</name>   <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:25"><name pos:start="81:18" pos:end="81:19">wc</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:25">chan</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:28"><expr pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:14">chmask</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <name pos:start="83:18" pos:end="83:27"><name pos:start="83:18" pos:end="83:19">wc</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:27">chmask</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="209:5"><if pos:start="87:5" pos:end="209:5">if <condition pos:start="87:8" pos:end="87:51">(<expr pos:start="87:9" pos:end="87:50"><operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:13">rate</name> <operator pos:start="87:15" pos:end="87:16">==</operator> <operator pos:start="87:18" pos:end="87:18">-</operator><literal type="number" pos:start="87:19" pos:end="87:19">1</literal> <operator pos:start="87:21" pos:end="87:22">||</operator> <operator pos:start="87:24" pos:end="87:24">!</operator><name pos:start="87:25" pos:end="87:28">chan</name><operator pos:start="87:29" pos:end="87:29">)</operator> <operator pos:start="87:31" pos:end="87:32">&amp;&amp;</operator> <operator pos:start="87:34" pos:end="87:34">!</operator><name pos:start="87:35" pos:end="87:50"><name pos:start="87:35" pos:end="87:36">wc</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:50">block_parsed</name></name></expr>)</condition> <block pos:start="87:53" pos:end="209:5">{<block_content pos:start="89:9" pos:end="207:66">

        <decl_stmt pos:start="89:9" pos:end="89:65"><decl pos:start="89:9" pos:end="89:64"><type pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:15">int64_t</name></type> <name pos:start="89:17" pos:end="89:25">block_end</name> <init pos:start="89:27" pos:end="89:64">= <expr pos:start="89:29" pos:end="89:64"><call pos:start="89:29" pos:end="89:41"><name pos:start="89:29" pos:end="89:37">avio_tell</name><argument_list pos:start="89:38" pos:end="89:41">(<argument pos:start="89:39" pos:end="89:40"><expr pos:start="89:39" pos:end="89:40"><name pos:start="89:39" pos:end="89:40">pb</name></expr></argument>)</argument_list></call> <operator pos:start="89:43" pos:end="89:43">+</operator> <name pos:start="89:45" pos:end="89:64"><name pos:start="89:45" pos:end="89:46">wc</name><operator pos:start="89:47" pos:end="89:48">-&gt;</operator><name pos:start="89:49" pos:end="89:54">header</name><operator pos:start="89:55" pos:end="89:55">.</operator><name pos:start="89:56" pos:end="89:64">blocksize</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="91:9" pos:end="99:9"><if pos:start="91:9" pos:end="99:9">if <condition pos:start="91:12" pos:end="91:26">(<expr pos:start="91:13" pos:end="91:25"><operator pos:start="91:13" pos:end="91:13">!</operator><name pos:start="91:14" pos:end="91:25"><name pos:start="91:14" pos:end="91:15">pb</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:25">seekable</name></name></expr>)</condition> <block pos:start="91:28" pos:end="99:9">{<block_content pos:start="93:13" pos:end="97:39">

            <expr_stmt pos:start="93:13" pos:end="95:63"><expr pos:start="93:13" pos:end="95:62"><call pos:start="93:13" pos:end="95:62"><name pos:start="93:13" pos:end="93:18">av_log</name><argument_list pos:start="93:19" pos:end="95:62">(<argument pos:start="93:20" pos:end="93:22"><expr pos:start="93:20" pos:end="93:22"><name pos:start="93:20" pos:end="93:22">ctx</name></expr></argument>, <argument pos:start="93:25" pos:end="93:36"><expr pos:start="93:25" pos:end="93:36"><name pos:start="93:25" pos:end="93:36">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="95:20" pos:end="95:61"><expr pos:start="95:20" pos:end="95:61"><literal type="string" pos:start="95:20" pos:end="95:61">"Cannot determine additional parameters\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:39">return <expr pos:start="97:20" pos:end="97:38"><name pos:start="97:20" pos:end="97:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <while pos:start="101:9" pos:end="195:9">while <condition pos:start="101:15" pos:end="101:41">(<expr pos:start="101:16" pos:end="101:40"><call pos:start="101:16" pos:end="101:28"><name pos:start="101:16" pos:end="101:24">avio_tell</name><argument_list pos:start="101:25" pos:end="101:28">(<argument pos:start="101:26" pos:end="101:27"><expr pos:start="101:26" pos:end="101:27"><name pos:start="101:26" pos:end="101:27">pb</name></expr></argument>)</argument_list></call> <operator pos:start="101:30" pos:end="101:30">&lt;</operator> <name pos:start="101:32" pos:end="101:40">block_end</name></expr>)</condition> <block pos:start="101:43" pos:end="195:9">{<block_content pos:start="103:13" pos:end="193:33">

            <decl_stmt pos:start="103:13" pos:end="103:25"><decl pos:start="103:13" pos:end="103:18"><type pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">int</name></type> <name pos:start="103:17" pos:end="103:18">id</name></decl>, <decl pos:start="103:21" pos:end="103:24"><type ref="prev" pos:start="103:13" pos:end="103:15"/><name pos:start="103:21" pos:end="103:24">size</name></decl>;</decl_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:31"><expr pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:14">id</name>   <operator pos:start="105:18" pos:end="105:18">=</operator> <call pos:start="105:20" pos:end="105:30"><name pos:start="105:20" pos:end="105:26">avio_r8</name><argument_list pos:start="105:27" pos:end="105:30">(<argument pos:start="105:28" pos:end="105:29"><expr pos:start="105:28" pos:end="105:29"><name pos:start="105:28" pos:end="105:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:61"><expr pos:start="107:13" pos:end="107:60"><name pos:start="107:13" pos:end="107:16">size</name> <operator pos:start="107:18" pos:end="107:18">=</operator> <ternary pos:start="107:20" pos:end="107:60"><condition pos:start="107:20" pos:end="107:32"><expr pos:start="107:20" pos:end="107:30"><operator pos:start="107:20" pos:end="107:20">(</operator><name pos:start="107:21" pos:end="107:22">id</name> <operator pos:start="107:24" pos:end="107:24">&amp;</operator> <literal type="number" pos:start="107:26" pos:end="107:29">0x80</literal><operator pos:start="107:30" pos:end="107:30">)</operator></expr> ?</condition><then pos:start="107:34" pos:end="107:46"> <expr pos:start="107:34" pos:end="107:46"><call pos:start="107:34" pos:end="107:46"><name pos:start="107:34" pos:end="107:42">avio_rl24</name><argument_list pos:start="107:43" pos:end="107:46">(<argument pos:start="107:44" pos:end="107:45"><expr pos:start="107:44" pos:end="107:45"><name pos:start="107:44" pos:end="107:45">pb</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="107:48" pos:end="107:60">: <expr pos:start="107:50" pos:end="107:60"><call pos:start="107:50" pos:end="107:60"><name pos:start="107:50" pos:end="107:56">avio_r8</name><argument_list pos:start="107:57" pos:end="107:60">(<argument pos:start="107:58" pos:end="107:59"><expr pos:start="107:58" pos:end="107:59"><name pos:start="107:58" pos:end="107:59">pb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:23"><expr pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:16">size</name> <operator pos:start="109:18" pos:end="109:20">&lt;&lt;=</operator> <literal type="number" pos:start="109:22" pos:end="109:22">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="113:23"><if pos:start="111:13" pos:end="113:23">if <condition pos:start="111:16" pos:end="111:26">(<expr pos:start="111:17" pos:end="111:25"><name pos:start="111:17" pos:end="111:18">id</name> <operator pos:start="111:20" pos:end="111:20">&amp;</operator> <literal type="number" pos:start="111:22" pos:end="111:25">0x40</literal></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:23"><block_content pos:start="113:17" pos:end="113:23">

                <expr_stmt pos:start="113:17" pos:end="113:23"><expr pos:start="113:17" pos:end="113:22"><name pos:start="113:17" pos:end="113:20">size</name><operator pos:start="113:21" pos:end="113:22">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <switch pos:start="115:13" pos:end="189:13">switch <condition pos:start="115:20" pos:end="115:30">(<expr pos:start="115:21" pos:end="115:29"><name pos:start="115:21" pos:end="115:22">id</name> <operator pos:start="115:24" pos:end="115:24">&amp;</operator> <literal type="number" pos:start="115:26" pos:end="115:29">0x3F</literal></expr>)</condition> <block pos:start="115:32" pos:end="189:13">{<block_content pos:start="117:13" pos:end="187:36">

            <case pos:start="117:13" pos:end="117:21">case <expr pos:start="117:18" pos:end="117:20"><literal type="number" pos:start="117:18" pos:end="117:20">0xD</literal></expr>:</case>

                <if_stmt pos:start="119:17" pos:end="127:17"><if pos:start="119:17" pos:end="127:17">if <condition pos:start="119:20" pos:end="119:30">(<expr pos:start="119:21" pos:end="119:29"><name pos:start="119:21" pos:end="119:24">size</name> <operator pos:start="119:26" pos:end="119:27">&lt;=</operator> <literal type="number" pos:start="119:29" pos:end="119:29">1</literal></expr>)</condition> <block pos:start="119:32" pos:end="127:17">{<block_content pos:start="121:21" pos:end="125:47">

                    <expr_stmt pos:start="121:21" pos:end="123:65"><expr pos:start="121:21" pos:end="123:64"><call pos:start="121:21" pos:end="123:64"><name pos:start="121:21" pos:end="121:26">av_log</name><argument_list pos:start="121:27" pos:end="123:64">(<argument pos:start="121:28" pos:end="121:30"><expr pos:start="121:28" pos:end="121:30"><name pos:start="121:28" pos:end="121:30">ctx</name></expr></argument>, <argument pos:start="121:33" pos:end="121:44"><expr pos:start="121:33" pos:end="121:44"><name pos:start="121:33" pos:end="121:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="123:28" pos:end="123:63"><expr pos:start="123:28" pos:end="123:63"><literal type="string" pos:start="123:28" pos:end="123:63">"Insufficient channel information\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="125:21" pos:end="125:47">return <expr pos:start="125:28" pos:end="125:46"><name pos:start="125:28" pos:end="125:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:35"><expr pos:start="129:17" pos:end="129:34"><name pos:start="129:17" pos:end="129:20">chan</name> <operator pos:start="129:22" pos:end="129:22">=</operator> <call pos:start="129:24" pos:end="129:34"><name pos:start="129:24" pos:end="129:30">avio_r8</name><argument_list pos:start="129:31" pos:end="129:34">(<argument pos:start="129:32" pos:end="129:33"><expr pos:start="129:32" pos:end="129:33"><name pos:start="129:32" pos:end="129:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="131:17" pos:end="175:17">switch <condition pos:start="131:24" pos:end="131:33">(<expr pos:start="131:25" pos:end="131:32"><name pos:start="131:25" pos:end="131:28">size</name> <operator pos:start="131:30" pos:end="131:30">-</operator> <literal type="number" pos:start="131:32" pos:end="131:32">2</literal></expr>)</condition> <block pos:start="131:35" pos:end="175:17">{<block_content pos:start="133:17" pos:end="173:47">

                <case pos:start="133:17" pos:end="133:23">case <expr pos:start="133:22" pos:end="133:22"><literal type="number" pos:start="133:22" pos:end="133:22">0</literal></expr>:</case>

                    <expr_stmt pos:start="135:21" pos:end="135:41"><expr pos:start="135:21" pos:end="135:40"><name pos:start="135:21" pos:end="135:26">chmask</name> <operator pos:start="135:28" pos:end="135:28">=</operator> <call pos:start="135:30" pos:end="135:40"><name pos:start="135:30" pos:end="135:36">avio_r8</name><argument_list pos:start="135:37" pos:end="135:40">(<argument pos:start="135:38" pos:end="135:39"><expr pos:start="135:38" pos:end="135:39"><name pos:start="135:38" pos:end="135:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="137:21" pos:end="137:26">break;</break>

                <case pos:start="139:17" pos:end="139:23">case <expr pos:start="139:22" pos:end="139:22"><literal type="number" pos:start="139:22" pos:end="139:22">1</literal></expr>:</case>

                    <expr_stmt pos:start="141:21" pos:end="141:43"><expr pos:start="141:21" pos:end="141:42"><name pos:start="141:21" pos:end="141:26">chmask</name> <operator pos:start="141:28" pos:end="141:28">=</operator> <call pos:start="141:30" pos:end="141:42"><name pos:start="141:30" pos:end="141:38">avio_rl16</name><argument_list pos:start="141:39" pos:end="141:42">(<argument pos:start="141:40" pos:end="141:41"><expr pos:start="141:40" pos:end="141:41"><name pos:start="141:40" pos:end="141:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="143:21" pos:end="143:26">break;</break>

                <case pos:start="145:17" pos:end="145:23">case <expr pos:start="145:22" pos:end="145:22"><literal type="number" pos:start="145:22" pos:end="145:22">2</literal></expr>:</case>

                    <expr_stmt pos:start="147:21" pos:end="147:43"><expr pos:start="147:21" pos:end="147:42"><name pos:start="147:21" pos:end="147:26">chmask</name> <operator pos:start="147:28" pos:end="147:28">=</operator> <call pos:start="147:30" pos:end="147:42"><name pos:start="147:30" pos:end="147:38">avio_rl24</name><argument_list pos:start="147:39" pos:end="147:42">(<argument pos:start="147:40" pos:end="147:41"><expr pos:start="147:40" pos:end="147:41"><name pos:start="147:40" pos:end="147:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="149:21" pos:end="149:26">break;</break>

                <case pos:start="151:17" pos:end="151:23">case <expr pos:start="151:22" pos:end="151:22"><literal type="number" pos:start="151:22" pos:end="151:22">3</literal></expr>:</case>

                    <expr_stmt pos:start="153:21" pos:end="153:43"><expr pos:start="153:21" pos:end="153:42"><name pos:start="153:21" pos:end="153:26">chmask</name> <operator pos:start="153:28" pos:end="153:28">=</operator> <call pos:start="153:30" pos:end="153:42"><name pos:start="153:30" pos:end="153:38">avio_rl32</name><argument_list pos:start="153:39" pos:end="153:42">(<argument pos:start="153:40" pos:end="153:41"><expr pos:start="153:40" pos:end="153:41"><name pos:start="153:40" pos:end="153:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="155:21" pos:end="155:26">break;</break>

                <case pos:start="157:17" pos:end="157:23">case <expr pos:start="157:22" pos:end="157:22"><literal type="number" pos:start="157:22" pos:end="157:22">5</literal></expr>:</case>

                    <expr_stmt pos:start="159:21" pos:end="159:37"><expr pos:start="159:21" pos:end="159:36"><call pos:start="159:21" pos:end="159:36"><name pos:start="159:21" pos:end="159:29">avio_skip</name><argument_list pos:start="159:30" pos:end="159:36">(<argument pos:start="159:31" pos:end="159:32"><expr pos:start="159:31" pos:end="159:32"><name pos:start="159:31" pos:end="159:32">pb</name></expr></argument>, <argument pos:start="159:35" pos:end="159:35"><expr pos:start="159:35" pos:end="159:35"><literal type="number" pos:start="159:35" pos:end="159:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="161:21" pos:end="161:54"><expr pos:start="161:21" pos:end="161:53"><name pos:start="161:21" pos:end="161:24">chan</name>  <operator pos:start="161:27" pos:end="161:28">|=</operator> <operator pos:start="161:30" pos:end="161:30">(</operator><call pos:start="161:31" pos:end="161:41"><name pos:start="161:31" pos:end="161:37">avio_r8</name><argument_list pos:start="161:38" pos:end="161:41">(<argument pos:start="161:39" pos:end="161:40"><expr pos:start="161:39" pos:end="161:40"><name pos:start="161:39" pos:end="161:40">pb</name></expr></argument>)</argument_list></call> <operator pos:start="161:43" pos:end="161:43">&amp;</operator> <literal type="number" pos:start="161:45" pos:end="161:47">0xF</literal><operator pos:start="161:48" pos:end="161:48">)</operator> <operator pos:start="161:50" pos:end="161:51">&lt;&lt;</operator> <literal type="number" pos:start="161:53" pos:end="161:53">8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="163:21" pos:end="163:43"><expr pos:start="163:21" pos:end="163:42"><name pos:start="163:21" pos:end="163:26">chmask</name> <operator pos:start="163:28" pos:end="163:28">=</operator> <call pos:start="163:30" pos:end="163:42"><name pos:start="163:30" pos:end="163:38">avio_rl24</name><argument_list pos:start="163:39" pos:end="163:42">(<argument pos:start="163:40" pos:end="163:41"><expr pos:start="163:40" pos:end="163:41"><name pos:start="163:40" pos:end="163:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="165:21" pos:end="165:26">break;</break>

                <default pos:start="167:17" pos:end="167:24">default:</default>

                    <expr_stmt pos:start="169:21" pos:end="171:67"><expr pos:start="169:21" pos:end="171:66"><call pos:start="169:21" pos:end="171:66"><name pos:start="169:21" pos:end="169:26">av_log</name><argument_list pos:start="169:27" pos:end="171:66">(<argument pos:start="169:28" pos:end="169:30"><expr pos:start="169:28" pos:end="169:30"><name pos:start="169:28" pos:end="169:30">ctx</name></expr></argument>, <argument pos:start="169:33" pos:end="169:44"><expr pos:start="169:33" pos:end="169:44"><name pos:start="169:33" pos:end="169:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="171:28" pos:end="171:59"><expr pos:start="171:28" pos:end="171:59"><literal type="string" pos:start="171:28" pos:end="171:59">"Invalid channel info size %d\n"</literal></expr></argument>, <argument pos:start="171:62" pos:end="171:65"><expr pos:start="171:62" pos:end="171:65"><name pos:start="171:62" pos:end="171:65">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="173:21" pos:end="173:47">return <expr pos:start="173:28" pos:end="173:46"><name pos:start="173:28" pos:end="173:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></switch>

                <break pos:start="177:17" pos:end="177:22">break;</break>

            <case pos:start="179:13" pos:end="179:22">case <expr pos:start="179:18" pos:end="179:21"><literal type="number" pos:start="179:18" pos:end="179:21">0x27</literal></expr>:</case>

                <expr_stmt pos:start="181:17" pos:end="181:37"><expr pos:start="181:17" pos:end="181:36"><name pos:start="181:17" pos:end="181:20">rate</name> <operator pos:start="181:22" pos:end="181:22">=</operator> <call pos:start="181:24" pos:end="181:36"><name pos:start="181:24" pos:end="181:32">avio_rl24</name><argument_list pos:start="181:33" pos:end="181:36">(<argument pos:start="181:34" pos:end="181:35"><expr pos:start="181:34" pos:end="181:35"><name pos:start="181:34" pos:end="181:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="183:17" pos:end="183:22">break;</break>

            <default pos:start="185:13" pos:end="185:20">default:</default>

                <expr_stmt pos:start="187:17" pos:end="187:36"><expr pos:start="187:17" pos:end="187:35"><call pos:start="187:17" pos:end="187:35"><name pos:start="187:17" pos:end="187:25">avio_skip</name><argument_list pos:start="187:26" pos:end="187:35">(<argument pos:start="187:27" pos:end="187:28"><expr pos:start="187:27" pos:end="187:28"><name pos:start="187:27" pos:end="187:28">pb</name></expr></argument>, <argument pos:start="187:31" pos:end="187:34"><expr pos:start="187:31" pos:end="187:34"><name pos:start="187:31" pos:end="187:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <if_stmt pos:start="191:13" pos:end="193:33"><if pos:start="191:13" pos:end="193:33">if <condition pos:start="191:16" pos:end="191:26">(<expr pos:start="191:17" pos:end="191:25"><name pos:start="191:17" pos:end="191:18">id</name> <operator pos:start="191:20" pos:end="191:20">&amp;</operator> <literal type="number" pos:start="191:22" pos:end="191:25">0x40</literal></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:33"><block_content pos:start="193:17" pos:end="193:33">

                <expr_stmt pos:start="193:17" pos:end="193:33"><expr pos:start="193:17" pos:end="193:32"><call pos:start="193:17" pos:end="193:32"><name pos:start="193:17" pos:end="193:25">avio_skip</name><argument_list pos:start="193:26" pos:end="193:32">(<argument pos:start="193:27" pos:end="193:28"><expr pos:start="193:27" pos:end="193:28"><name pos:start="193:27" pos:end="193:28">pb</name></expr></argument>, <argument pos:start="193:31" pos:end="193:31"><expr pos:start="193:31" pos:end="193:31"><literal type="number" pos:start="193:31" pos:end="193:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="197:9" pos:end="205:9"><if pos:start="197:9" pos:end="205:9">if <condition pos:start="197:12" pos:end="197:23">(<expr pos:start="197:13" pos:end="197:22"><name pos:start="197:13" pos:end="197:16">rate</name> <operator pos:start="197:18" pos:end="197:19">==</operator> <operator pos:start="197:21" pos:end="197:21">-</operator><literal type="number" pos:start="197:22" pos:end="197:22">1</literal></expr>)</condition> <block pos:start="197:25" pos:end="205:9">{<block_content pos:start="199:13" pos:end="203:39">

            <expr_stmt pos:start="199:13" pos:end="201:62"><expr pos:start="199:13" pos:end="201:61"><call pos:start="199:13" pos:end="201:61"><name pos:start="199:13" pos:end="199:18">av_log</name><argument_list pos:start="199:19" pos:end="201:61">(<argument pos:start="199:20" pos:end="199:22"><expr pos:start="199:20" pos:end="199:22"><name pos:start="199:20" pos:end="199:22">ctx</name></expr></argument>, <argument pos:start="199:25" pos:end="199:36"><expr pos:start="199:25" pos:end="199:36"><name pos:start="199:25" pos:end="199:36">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="201:20" pos:end="201:60"><expr pos:start="201:20" pos:end="201:60"><literal type="string" pos:start="201:20" pos:end="201:60">"Cannot determine custom sampling rate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="203:13" pos:end="203:39">return <expr pos:start="203:20" pos:end="203:38"><name pos:start="203:20" pos:end="203:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:66"><expr pos:start="207:9" pos:end="207:65"><call pos:start="207:9" pos:end="207:65"><name pos:start="207:9" pos:end="207:17">avio_seek</name><argument_list pos:start="207:18" pos:end="207:65">(<argument pos:start="207:19" pos:end="207:20"><expr pos:start="207:19" pos:end="207:20"><name pos:start="207:19" pos:end="207:20">pb</name></expr></argument>, <argument pos:start="207:23" pos:end="207:54"><expr pos:start="207:23" pos:end="207:54"><name pos:start="207:23" pos:end="207:31">block_end</name> <operator pos:start="207:33" pos:end="207:33">-</operator> <name pos:start="207:35" pos:end="207:54"><name pos:start="207:35" pos:end="207:36">wc</name><operator pos:start="207:37" pos:end="207:38">-&gt;</operator><name pos:start="207:39" pos:end="207:44">header</name><operator pos:start="207:45" pos:end="207:45">.</operator><name pos:start="207:46" pos:end="207:54">blocksize</name></name></expr></argument>, <argument pos:start="207:57" pos:end="207:64"><expr pos:start="207:57" pos:end="207:64"><name pos:start="207:57" pos:end="207:64">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="211:5" pos:end="213:25"><if pos:start="211:5" pos:end="213:25">if <condition pos:start="211:8" pos:end="211:17">(<expr pos:start="211:9" pos:end="211:16"><operator pos:start="211:9" pos:end="211:9">!</operator><name pos:start="211:10" pos:end="211:16"><name pos:start="211:10" pos:end="211:11">wc</name><operator pos:start="211:12" pos:end="211:13">-&gt;</operator><name pos:start="211:14" pos:end="211:16">bpp</name></name></expr>)</condition><block type="pseudo" pos:start="213:9" pos:end="213:25"><block_content pos:start="213:9" pos:end="213:25">

        <expr_stmt pos:start="213:9" pos:end="213:25"><expr pos:start="213:9" pos:end="213:24"><name pos:start="213:9" pos:end="213:15"><name pos:start="213:9" pos:end="213:10">wc</name><operator pos:start="213:11" pos:end="213:12">-&gt;</operator><name pos:start="213:13" pos:end="213:15">bpp</name></name>    <operator pos:start="213:20" pos:end="213:20">=</operator> <name pos:start="213:22" pos:end="213:24">bpp</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="215:5" pos:end="217:26"><if pos:start="215:5" pos:end="217:26">if <condition pos:start="215:8" pos:end="215:18">(<expr pos:start="215:9" pos:end="215:17"><operator pos:start="215:9" pos:end="215:9">!</operator><name pos:start="215:10" pos:end="215:17"><name pos:start="215:10" pos:end="215:11">wc</name><operator pos:start="215:12" pos:end="215:13">-&gt;</operator><name pos:start="215:14" pos:end="215:17">chan</name></name></expr>)</condition><block type="pseudo" pos:start="217:9" pos:end="217:26"><block_content pos:start="217:9" pos:end="217:26">

        <expr_stmt pos:start="217:9" pos:end="217:26"><expr pos:start="217:9" pos:end="217:25"><name pos:start="217:9" pos:end="217:16"><name pos:start="217:9" pos:end="217:10">wc</name><operator pos:start="217:11" pos:end="217:12">-&gt;</operator><name pos:start="217:13" pos:end="217:16">chan</name></name>   <operator pos:start="217:20" pos:end="217:20">=</operator> <name pos:start="217:22" pos:end="217:25">chan</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="219:5" pos:end="221:28"><if pos:start="219:5" pos:end="221:28">if <condition pos:start="219:8" pos:end="219:20">(<expr pos:start="219:9" pos:end="219:19"><operator pos:start="219:9" pos:end="219:9">!</operator><name pos:start="219:10" pos:end="219:19"><name pos:start="219:10" pos:end="219:11">wc</name><operator pos:start="219:12" pos:end="219:13">-&gt;</operator><name pos:start="219:14" pos:end="219:19">chmask</name></name></expr>)</condition><block type="pseudo" pos:start="221:9" pos:end="221:28"><block_content pos:start="221:9" pos:end="221:28">

        <expr_stmt pos:start="221:9" pos:end="221:28"><expr pos:start="221:9" pos:end="221:27"><name pos:start="221:9" pos:end="221:18"><name pos:start="221:9" pos:end="221:10">wc</name><operator pos:start="221:11" pos:end="221:12">-&gt;</operator><name pos:start="221:13" pos:end="221:18">chmask</name></name> <operator pos:start="221:20" pos:end="221:20">=</operator> <name pos:start="221:22" pos:end="221:27">chmask</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="223:5" pos:end="225:26"><if pos:start="223:5" pos:end="225:26">if <condition pos:start="223:8" pos:end="223:18">(<expr pos:start="223:9" pos:end="223:17"><operator pos:start="223:9" pos:end="223:9">!</operator><name pos:start="223:10" pos:end="223:17"><name pos:start="223:10" pos:end="223:11">wc</name><operator pos:start="223:12" pos:end="223:13">-&gt;</operator><name pos:start="223:14" pos:end="223:17">rate</name></name></expr>)</condition><block type="pseudo" pos:start="225:9" pos:end="225:26"><block_content pos:start="225:9" pos:end="225:26">

        <expr_stmt pos:start="225:9" pos:end="225:26"><expr pos:start="225:9" pos:end="225:25"><name pos:start="225:9" pos:end="225:16"><name pos:start="225:9" pos:end="225:10">wc</name><operator pos:start="225:11" pos:end="225:12">-&gt;</operator><name pos:start="225:13" pos:end="225:16">rate</name></name>   <operator pos:start="225:20" pos:end="225:20">=</operator> <name pos:start="225:22" pos:end="225:25">rate</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="229:5" pos:end="239:5"><if pos:start="229:5" pos:end="239:5">if <condition pos:start="229:8" pos:end="229:32">(<expr pos:start="229:9" pos:end="229:31"><name pos:start="229:9" pos:end="229:13">flags</name> <operator pos:start="229:15" pos:end="229:16">&amp;&amp;</operator> <name pos:start="229:18" pos:end="229:20">bpp</name> <operator pos:start="229:22" pos:end="229:23">!=</operator> <name pos:start="229:25" pos:end="229:31"><name pos:start="229:25" pos:end="229:26">wc</name><operator pos:start="229:27" pos:end="229:28">-&gt;</operator><name pos:start="229:29" pos:end="229:31">bpp</name></name></expr>)</condition> <block pos:start="229:34" pos:end="239:5">{<block_content pos:start="231:9" pos:end="237:35">

        <expr_stmt pos:start="231:9" pos:end="235:29"><expr pos:start="231:9" pos:end="235:28"><call pos:start="231:9" pos:end="235:28"><name pos:start="231:9" pos:end="231:14">av_log</name><argument_list pos:start="231:15" pos:end="235:28">(<argument pos:start="231:16" pos:end="231:18"><expr pos:start="231:16" pos:end="231:18"><name pos:start="231:16" pos:end="231:18">ctx</name></expr></argument>, <argument pos:start="231:21" pos:end="231:32"><expr pos:start="231:21" pos:end="231:32"><name pos:start="231:21" pos:end="231:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="233:16" pos:end="233:75"><expr pos:start="233:16" pos:end="233:75"><literal type="string" pos:start="233:16" pos:end="233:75">"Bits per sample differ, this block: %i, header block: %i\n"</literal></expr></argument>,

               <argument pos:start="235:16" pos:end="235:18"><expr pos:start="235:16" pos:end="235:18"><name pos:start="235:16" pos:end="235:18">bpp</name></expr></argument>, <argument pos:start="235:21" pos:end="235:27"><expr pos:start="235:21" pos:end="235:27"><name pos:start="235:21" pos:end="235:27"><name pos:start="235:21" pos:end="235:22">wc</name><operator pos:start="235:23" pos:end="235:24">-&gt;</operator><name pos:start="235:25" pos:end="235:27">bpp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="237:9" pos:end="237:35">return <expr pos:start="237:16" pos:end="237:34"><name pos:start="237:16" pos:end="237:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="241:5" pos:end="251:5"><if pos:start="241:5" pos:end="251:5">if <condition pos:start="241:8" pos:end="241:55">(<expr pos:start="241:9" pos:end="241:54"><name pos:start="241:9" pos:end="241:13">flags</name> <operator pos:start="241:15" pos:end="241:16">&amp;&amp;</operator> <operator pos:start="241:18" pos:end="241:18">!</operator><name pos:start="241:19" pos:end="241:34"><name pos:start="241:19" pos:end="241:20">wc</name><operator pos:start="241:21" pos:end="241:22">-&gt;</operator><name pos:start="241:23" pos:end="241:34">multichannel</name></name> <operator pos:start="241:36" pos:end="241:37">&amp;&amp;</operator> <name pos:start="241:39" pos:end="241:42">chan</name> <operator pos:start="241:44" pos:end="241:45">!=</operator> <name pos:start="241:47" pos:end="241:54"><name pos:start="241:47" pos:end="241:48">wc</name><operator pos:start="241:49" pos:end="241:50">-&gt;</operator><name pos:start="241:51" pos:end="241:54">chan</name></name></expr>)</condition> <block pos:start="241:57" pos:end="251:5">{<block_content pos:start="243:9" pos:end="249:35">

        <expr_stmt pos:start="243:9" pos:end="247:31"><expr pos:start="243:9" pos:end="247:30"><call pos:start="243:9" pos:end="247:30"><name pos:start="243:9" pos:end="243:14">av_log</name><argument_list pos:start="243:15" pos:end="247:30">(<argument pos:start="243:16" pos:end="243:18"><expr pos:start="243:16" pos:end="243:18"><name pos:start="243:16" pos:end="243:18">ctx</name></expr></argument>, <argument pos:start="243:21" pos:end="243:32"><expr pos:start="243:21" pos:end="243:32"><name pos:start="243:21" pos:end="243:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="245:16" pos:end="245:68"><expr pos:start="245:16" pos:end="245:68"><literal type="string" pos:start="245:16" pos:end="245:68">"Channels differ, this block: %i, header block: %i\n"</literal></expr></argument>,

               <argument pos:start="247:16" pos:end="247:19"><expr pos:start="247:16" pos:end="247:19"><name pos:start="247:16" pos:end="247:19">chan</name></expr></argument>, <argument pos:start="247:22" pos:end="247:29"><expr pos:start="247:22" pos:end="247:29"><name pos:start="247:22" pos:end="247:29"><name pos:start="247:22" pos:end="247:23">wc</name><operator pos:start="247:24" pos:end="247:25">-&gt;</operator><name pos:start="247:26" pos:end="247:29">chan</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="249:9" pos:end="249:35">return <expr pos:start="249:16" pos:end="249:34"><name pos:start="249:16" pos:end="249:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="253:5" pos:end="263:5"><if pos:start="253:5" pos:end="263:5">if <condition pos:start="253:8" pos:end="253:48">(<expr pos:start="253:9" pos:end="253:47"><name pos:start="253:9" pos:end="253:13">flags</name> <operator pos:start="253:15" pos:end="253:16">&amp;&amp;</operator> <name pos:start="253:18" pos:end="253:21">rate</name> <operator pos:start="253:23" pos:end="253:24">!=</operator> <operator pos:start="253:26" pos:end="253:26">-</operator><literal type="number" pos:start="253:27" pos:end="253:27">1</literal> <operator pos:start="253:29" pos:end="253:30">&amp;&amp;</operator> <name pos:start="253:32" pos:end="253:35">rate</name> <operator pos:start="253:37" pos:end="253:38">!=</operator> <name pos:start="253:40" pos:end="253:47"><name pos:start="253:40" pos:end="253:41">wc</name><operator pos:start="253:42" pos:end="253:43">-&gt;</operator><name pos:start="253:44" pos:end="253:47">rate</name></name></expr>)</condition> <block pos:start="253:50" pos:end="263:5">{<block_content pos:start="255:9" pos:end="261:35">

        <expr_stmt pos:start="255:9" pos:end="259:31"><expr pos:start="255:9" pos:end="259:30"><call pos:start="255:9" pos:end="259:30"><name pos:start="255:9" pos:end="255:14">av_log</name><argument_list pos:start="255:15" pos:end="259:30">(<argument pos:start="255:16" pos:end="255:18"><expr pos:start="255:16" pos:end="255:18"><name pos:start="255:16" pos:end="255:18">ctx</name></expr></argument>, <argument pos:start="255:21" pos:end="255:32"><expr pos:start="255:21" pos:end="255:32"><name pos:start="255:21" pos:end="255:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="257:16" pos:end="257:73"><expr pos:start="257:16" pos:end="257:73"><literal type="string" pos:start="257:16" pos:end="257:73">"Sampling rate differ, this block: %i, header block: %i\n"</literal></expr></argument>,

               <argument pos:start="259:16" pos:end="259:19"><expr pos:start="259:16" pos:end="259:19"><name pos:start="259:16" pos:end="259:19">rate</name></expr></argument>, <argument pos:start="259:22" pos:end="259:29"><expr pos:start="259:22" pos:end="259:29"><name pos:start="259:22" pos:end="259:29"><name pos:start="259:22" pos:end="259:23">wc</name><operator pos:start="259:24" pos:end="259:25">-&gt;</operator><name pos:start="259:26" pos:end="259:29">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="261:9" pos:end="261:35">return <expr pos:start="261:16" pos:end="261:34"><name pos:start="261:16" pos:end="261:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="265:5" pos:end="265:13">return <expr pos:start="265:12" pos:end="265:12"><literal type="number" pos:start="265:12" pos:end="265:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
