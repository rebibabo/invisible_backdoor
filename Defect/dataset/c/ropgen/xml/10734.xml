<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10734.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:12"><specifier pos:start="1:1" pos:end="1:5">const</specifier> <name pos:start="1:7" pos:end="1:10">char</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:31">cpu_parse_cpu_model</name><parameter_list pos:start="1:32" pos:end="1:76">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:42">char</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:52">typename</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:75"><decl pos:start="1:55" pos:end="1:75"><type pos:start="1:55" pos:end="1:75"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:75">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:20">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">ObjectClass</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUClass</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:9">gchar</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier><modifier pos:start="11:12" pos:end="11:12">*</modifier></type><name pos:start="11:13" pos:end="11:24">model_pieces</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:24">cpu_type</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:16">model_pieces</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:48"><name pos:start="17:20" pos:end="17:29">g_strsplit</name><argument_list pos:start="17:30" pos:end="17:48">(<argument pos:start="17:31" pos:end="17:39"><expr pos:start="17:31" pos:end="17:39"><name pos:start="17:31" pos:end="17:39">cpu_model</name></expr></argument>, <argument pos:start="17:42" pos:end="17:44"><expr pos:start="17:42" pos:end="17:44"><literal type="string" pos:start="17:42" pos:end="17:44">","</literal></expr></argument>, <argument pos:start="17:47" pos:end="17:47"><expr pos:start="17:47" pos:end="17:47"><literal type="number" pos:start="17:47" pos:end="17:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:6">oc</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:53"><name pos:start="21:10" pos:end="21:26">cpu_class_by_name</name><argument_list pos:start="21:27" pos:end="21:53">(<argument pos:start="21:28" pos:end="21:35"><expr pos:start="21:28" pos:end="21:35"><name pos:start="21:28" pos:end="21:35">typename</name></expr></argument>, <argument pos:start="21:38" pos:end="21:52"><expr pos:start="21:38" pos:end="21:52"><name pos:start="21:38" pos:end="21:52"><name pos:start="21:38" pos:end="21:49">model_pieces</name><index pos:start="21:50" pos:end="21:52">[<expr pos:start="21:51" pos:end="21:51"><literal type="number" pos:start="21:51" pos:end="21:51">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:10">oc</name> <operator pos:start="23:12" pos:end="23:13">==</operator> <name pos:start="23:15" pos:end="23:18">NULL</name></expr>)</condition> <block pos:start="23:21" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:20">

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><call pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:18">g_strfreev</name><argument_list pos:start="25:19" pos:end="25:32">(<argument pos:start="25:20" pos:end="25:31"><expr pos:start="25:20" pos:end="25:31"><name pos:start="25:20" pos:end="25:31">model_pieces</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:12">cpu_type</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:40"><name pos:start="33:16" pos:end="33:36">object_class_get_name</name><argument_list pos:start="33:37" pos:end="33:40">(<argument pos:start="33:38" pos:end="33:39"><expr pos:start="33:38" pos:end="33:39"><name pos:start="33:38" pos:end="33:39">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:6">cc</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:18">CPU_CLASS</name><argument_list pos:start="35:19" pos:end="35:22">(<argument pos:start="35:20" pos:end="35:21"><expr pos:start="35:20" pos:end="35:21"><name pos:start="35:20" pos:end="35:21">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:56"><expr pos:start="37:5" pos:end="37:55"><call pos:start="37:5" pos:end="37:55"><name pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:6">cc</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:22">parse_features</name></name><argument_list pos:start="37:23" pos:end="37:55">(<argument pos:start="37:24" pos:end="37:31"><expr pos:start="37:24" pos:end="37:31"><name pos:start="37:24" pos:end="37:31">cpu_type</name></expr></argument>, <argument pos:start="37:34" pos:end="37:48"><expr pos:start="37:34" pos:end="37:48"><name pos:start="37:34" pos:end="37:48"><name pos:start="37:34" pos:end="37:45">model_pieces</name><index pos:start="37:46" pos:end="37:48">[<expr pos:start="37:47" pos:end="37:47"><literal type="number" pos:start="37:47" pos:end="37:47">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="37:51" pos:end="37:54"><expr pos:start="37:51" pos:end="37:54"><operator pos:start="37:51" pos:end="37:51">&amp;</operator><name pos:start="37:52" pos:end="37:54">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><call pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:14">g_strfreev</name><argument_list pos:start="39:15" pos:end="39:28">(<argument pos:start="39:16" pos:end="39:27"><expr pos:start="39:16" pos:end="39:27"><name pos:start="39:16" pos:end="39:27">model_pieces</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:20">(<expr pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:11">err</name> <operator pos:start="41:13" pos:end="41:14">!=</operator> <name pos:start="41:16" pos:end="41:19">NULL</name></expr>)</condition> <block pos:start="41:22" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:20">

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><call pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:24">error_report_err</name><argument_list pos:start="43:25" pos:end="43:29">(<argument pos:start="43:26" pos:end="43:28"><expr pos:start="43:26" pos:end="43:28"><name pos:start="43:26" pos:end="43:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:20">return <expr pos:start="45:16" pos:end="45:19"><name pos:start="45:16" pos:end="45:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="49:5" pos:end="49:20">return <expr pos:start="49:12" pos:end="49:19"><name pos:start="49:12" pos:end="49:19">cpu_type</name></expr>;</return>

</block_content>}</block></function>
</unit>
