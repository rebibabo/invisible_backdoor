<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23976.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">recover</name><parameter_list pos:start="1:19" pos:end="1:56">(<parameter pos:start="1:20" pos:end="1:34"><decl pos:start="1:20" pos:end="1:34"><type pos:start="1:20" pos:end="1:34"><name pos:start="1:20" pos:end="1:29">WtvContext</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">wtv</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:55"><decl pos:start="1:37" pos:end="1:55"><type pos:start="1:37" pos:end="1:55"><name pos:start="1:37" pos:end="1:44">uint64_t</name></type> <name pos:start="1:46" pos:end="1:55">broken_pos</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:25">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:29">= <expr pos:start="5:23" pos:end="5:29"><name pos:start="5:23" pos:end="5:29"><name pos:start="5:23" pos:end="5:25">wtv</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <for pos:start="9:5" pos:end="25:6">for <control pos:start="9:9" pos:end="9:47">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:42"><expr pos:start="9:17" pos:end="9:41"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:41"><name pos:start="9:21" pos:end="9:23">wtv</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:41">nb_index_entries</name></name></expr>;</condition> <incr pos:start="9:44" pos:end="9:46"><expr pos:start="9:44" pos:end="9:46"><name pos:start="9:44" pos:end="9:44">i</name><operator pos:start="9:45" pos:end="9:46">++</operator></expr></incr>)</control> <block pos:start="9:49" pos:end="25:6">{<block_content pos:start="11:9" pos:end="23:10">

        <if_stmt pos:start="11:9" pos:end="23:10"><if pos:start="11:9" pos:end="23:10">if <condition pos:start="11:12" pos:end="11:51">(<expr pos:start="11:13" pos:end="11:50"><name pos:start="11:13" pos:end="11:33"><name pos:start="11:13" pos:end="11:15">wtv</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:30">index_entries</name><index pos:start="11:31" pos:end="11:33">[<expr pos:start="11:32" pos:end="11:32"><name pos:start="11:32" pos:end="11:32">i</name></expr>]</index></name><operator pos:start="11:34" pos:end="11:34">.</operator><name pos:start="11:35" pos:end="11:37">pos</name> <operator pos:start="11:39" pos:end="11:39">&gt;</operator> <name pos:start="11:41" pos:end="11:50">broken_pos</name></expr>)</condition> <block pos:start="11:53" pos:end="23:10">{<block_content pos:start="13:13" pos:end="21:21">

            <decl_stmt pos:start="13:13" pos:end="13:73"><decl pos:start="13:13" pos:end="13:72"><type pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:15">int</name></type> <name pos:start="13:17" pos:end="13:19">ret</name> <init pos:start="13:21" pos:end="13:72">= <expr pos:start="13:23" pos:end="13:72"><call pos:start="13:23" pos:end="13:72"><name pos:start="13:23" pos:end="13:31">avio_seek</name><argument_list pos:start="13:32" pos:end="13:72">(<argument pos:start="13:33" pos:end="13:34"><expr pos:start="13:33" pos:end="13:34"><name pos:start="13:33" pos:end="13:34">pb</name></expr></argument>, <argument pos:start="13:37" pos:end="13:61"><expr pos:start="13:37" pos:end="13:61"><name pos:start="13:37" pos:end="13:57"><name pos:start="13:37" pos:end="13:39">wtv</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:54">index_entries</name><index pos:start="13:55" pos:end="13:57">[<expr pos:start="13:56" pos:end="13:56"><name pos:start="13:56" pos:end="13:56">i</name></expr>]</index></name><operator pos:start="13:58" pos:end="13:58">.</operator><name pos:start="13:59" pos:end="13:61">pos</name></expr></argument>, <argument pos:start="13:64" pos:end="13:71"><expr pos:start="13:64" pos:end="13:71"><name pos:start="13:64" pos:end="13:71">SEEK_SET</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="15:13" pos:end="17:27"><if pos:start="15:13" pos:end="17:27">if <condition pos:start="15:16" pos:end="15:24">(<expr pos:start="15:17" pos:end="15:23"><name pos:start="15:17" pos:end="15:19">ret</name> <operator pos:start="15:21" pos:end="15:21">&lt;</operator> <literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>)</condition><block type="pseudo" pos:start="17:17" pos:end="17:27"><block_content pos:start="17:17" pos:end="17:27">

                <return pos:start="17:17" pos:end="17:27">return <expr pos:start="17:24" pos:end="17:26"><name pos:start="17:24" pos:end="17:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:55"><expr pos:start="19:13" pos:end="19:54"><name pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:15">wtv</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:20">pts</name></name> <operator pos:start="19:22" pos:end="19:22">=</operator> <name pos:start="19:24" pos:end="19:44"><name pos:start="19:24" pos:end="19:26">wtv</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:41">index_entries</name><index pos:start="19:42" pos:end="19:44">[<expr pos:start="19:43" pos:end="19:43"><name pos:start="19:43" pos:end="19:43">i</name></expr>]</index></name><operator pos:start="19:45" pos:end="19:45">.</operator><name pos:start="19:46" pos:end="19:54">timestamp</name></expr>;</expr_stmt>

            <return pos:start="21:13" pos:end="21:21">return <expr pos:start="21:20" pos:end="21:20"><literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>;</return>

         </block_content>}</block></if></if_stmt>

     </block_content>}</block></for>

     <return pos:start="27:6" pos:end="27:25">return <expr pos:start="27:13" pos:end="27:24"><call pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:19">AVERROR</name><argument_list pos:start="27:20" pos:end="27:24">(<argument pos:start="27:21" pos:end="27:23"><expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:23">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
