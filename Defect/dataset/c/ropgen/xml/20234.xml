<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20234.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">restore_native_fp_fxrstor</name><parameter_list pos:start="1:38" pos:end="1:52">(<parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:46">CPUState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:45">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">fpxstate</name></name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">fp</name> <init pos:start="5:25" pos:end="5:31">= <expr pos:start="5:27" pos:end="5:31"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:31">fpx1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">fptag</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:6">fp</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:12">fpuc</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:24"><name pos:start="11:16" pos:end="11:18">env</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:24">fpuc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:64"><expr pos:start="13:5" pos:end="13:63"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:6">fp</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:12">fpus</name></name> <operator pos:start="13:14" pos:end="13:14">=</operator> <operator pos:start="13:16" pos:end="13:16">(</operator><name pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:19">env</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:25">fpus</name></name> <operator pos:start="13:27" pos:end="13:27">&amp;</operator> <operator pos:start="13:29" pos:end="13:29">~</operator><literal type="number" pos:start="13:30" pos:end="13:35">0x3800</literal><operator pos:start="13:36" pos:end="13:36">)</operator> <operator pos:start="13:38" pos:end="13:38">|</operator> <operator pos:start="13:40" pos:end="13:40">(</operator><name pos:start="13:41" pos:end="13:50"><name pos:start="13:41" pos:end="13:43">env</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:50">fpstt</name></name> <operator pos:start="13:52" pos:end="13:52">&amp;</operator> <literal type="number" pos:start="13:54" pos:end="13:56">0x7</literal><operator pos:start="13:57" pos:end="13:57">)</operator> <operator pos:start="13:59" pos:end="13:60">&lt;&lt;</operator> <literal type="number" pos:start="13:62" pos:end="13:63">11</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:14"><expr pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:9">fptag</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="19:39">for<control pos:start="17:8" pos:end="17:26">(<init pos:start="17:9" pos:end="17:14"><expr pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:9">i</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <literal type="number" pos:start="17:13" pos:end="17:13">0</literal></expr>;</init> <condition pos:start="17:16" pos:end="17:21"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:16">i</name> <operator pos:start="17:18" pos:end="17:18">&lt;</operator> <literal type="number" pos:start="17:20" pos:end="17:20">8</literal></expr>;</condition> <incr pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:23">i</name><operator pos:start="17:24" pos:end="17:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:9" pos:end="19:39"><block_content pos:start="19:9" pos:end="19:39">

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:13">fptag</name> <operator pos:start="19:15" pos:end="19:16">|=</operator> <operator pos:start="19:18" pos:end="19:18">(</operator><name pos:start="19:19" pos:end="19:32"><name pos:start="19:19" pos:end="19:21">env</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:29">fptags</name><index pos:start="19:30" pos:end="19:32">[<expr pos:start="19:31" pos:end="19:31"><name pos:start="19:31" pos:end="19:31">i</name></expr>]</index></name> <operator pos:start="19:34" pos:end="19:35">&lt;&lt;</operator> <name pos:start="19:37" pos:end="19:37">i</name><operator pos:start="19:38" pos:end="19:38">)</operator></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:6">fp</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:13">fptag</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:21">fptag</name> <operator pos:start="21:23" pos:end="21:23">^</operator> <literal type="number" pos:start="21:25" pos:end="21:28">0xff</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:5">j</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:18">fpstt</name></name></expr>;</expr_stmt>

    <for pos:start="27:5" pos:end="33:5">for<control pos:start="27:8" pos:end="27:25">(<init pos:start="27:9" pos:end="27:14"><expr pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:9">i</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <literal type="number" pos:start="27:13" pos:end="27:13">0</literal></expr>;</init><condition pos:start="27:15" pos:end="27:20"><expr pos:start="27:15" pos:end="27:19"><name pos:start="27:15" pos:end="27:15">i</name> <operator pos:start="27:17" pos:end="27:17">&lt;</operator> <literal type="number" pos:start="27:19" pos:end="27:19">8</literal></expr>;</condition> <incr pos:start="27:22" pos:end="27:24"><expr pos:start="27:22" pos:end="27:24"><name pos:start="27:22" pos:end="27:22">i</name><operator pos:start="27:23" pos:end="27:24">++</operator></expr></incr>)</control> <block pos:start="27:27" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:24">

        <expr_stmt pos:start="29:9" pos:end="29:60"><expr pos:start="29:9" pos:end="29:59"><call pos:start="29:9" pos:end="29:59"><name pos:start="29:9" pos:end="29:14">memcpy</name><argument_list pos:start="29:15" pos:end="29:59">(<argument pos:start="29:16" pos:end="29:35"><expr pos:start="29:16" pos:end="29:35"><operator pos:start="29:16" pos:end="29:16">&amp;</operator><name pos:start="29:17" pos:end="29:35"><name pos:start="29:17" pos:end="29:18">fp</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:27">fpregs1</name><index pos:start="29:28" pos:end="29:35">[<expr pos:start="29:29" pos:end="29:34"><name pos:start="29:29" pos:end="29:29">i</name> <operator pos:start="29:31" pos:end="29:31">*</operator> <literal type="number" pos:start="29:33" pos:end="29:34">16</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:38" pos:end="29:54"><expr pos:start="29:38" pos:end="29:54"><operator pos:start="29:38" pos:end="29:38">&amp;</operator><name pos:start="29:39" pos:end="29:52"><name pos:start="29:39" pos:end="29:41">env</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:49">fpregs</name><index pos:start="29:50" pos:end="29:52">[<expr pos:start="29:51" pos:end="29:51"><name pos:start="29:51" pos:end="29:51">j</name></expr>]</index></name><operator pos:start="29:53" pos:end="29:53">.</operator><name pos:start="29:54" pos:end="29:54">d</name></expr></argument>, <argument pos:start="29:57" pos:end="29:58"><expr pos:start="29:57" pos:end="29:58"><literal type="number" pos:start="29:57" pos:end="29:58">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:24"><expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:9">j</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:14">j</name> <operator pos:start="31:16" pos:end="31:16">+</operator> <literal type="number" pos:start="31:18" pos:end="31:18">1</literal><operator pos:start="31:19" pos:end="31:19">)</operator> <operator pos:start="31:21" pos:end="31:21">&amp;</operator> <literal type="number" pos:start="31:23" pos:end="31:23">7</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="35:5" pos:end="45:5"><if pos:start="35:5" pos:end="45:5">if <condition pos:start="35:8" pos:end="35:40">(<expr pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:11">env</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:27">cpuid_features</name></name> <operator pos:start="35:29" pos:end="35:29">&amp;</operator> <name pos:start="35:31" pos:end="35:39">CPUID_SSE</name></expr>)</condition> <block pos:start="35:42" pos:end="45:5">{<block_content pos:start="37:9" pos:end="43:62">

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:10">fp</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:17">mxcsr</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:30"><name pos:start="37:21" pos:end="37:23">env</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:30">mxcsr</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="39:9" pos:end="39:48">/* XXX: check if DAZ is not available */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:32"><expr pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:10">fp</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:22">mxcsr_mask</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <literal type="number" pos:start="41:26" pos:end="41:31">0xffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:62"><expr pos:start="43:9" pos:end="43:61"><call pos:start="43:9" pos:end="43:61"><name pos:start="43:9" pos:end="43:14">memcpy</name><argument_list pos:start="43:15" pos:end="43:61">(<argument pos:start="43:16" pos:end="43:27"><expr pos:start="43:16" pos:end="43:27"><name pos:start="43:16" pos:end="43:27"><name pos:start="43:16" pos:end="43:17">fp</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:27">xmm_regs</name></name></expr></argument>, <argument pos:start="43:30" pos:end="43:42"><expr pos:start="43:30" pos:end="43:42"><name pos:start="43:30" pos:end="43:42"><name pos:start="43:30" pos:end="43:32">env</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:42">xmm_regs</name></name></expr></argument>, <argument pos:start="43:45" pos:end="43:60"><expr pos:start="43:45" pos:end="43:60"><name pos:start="43:45" pos:end="43:55">CPU_NB_REGS</name> <operator pos:start="43:57" pos:end="43:57">*</operator> <literal type="number" pos:start="43:59" pos:end="43:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <asm pos:start="47:5" pos:end="47:45">asm <specifier pos:start="47:9" pos:end="47:16">volatile</specifier> ("fxrstor %0" : "=m" (*fp));</asm>

</block_content>}</block></function>
</unit>
