<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13881.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:36">set_allocation_state</name><parameter_list pos:start="1:37" pos:end="3:66">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:58"><name pos:start="1:38" pos:end="1:53">sPAPRDRConnector</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">drc</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:65"><decl pos:start="3:38" pos:end="3:65"><type pos:start="3:38" pos:end="3:65"><name pos:start="3:38" pos:end="3:59">sPAPRDRAllocationState</name></type> <name pos:start="3:61" pos:end="3:65">state</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:28">

    <decl_stmt pos:start="7:5" pos:end="7:68"><decl pos:start="7:5" pos:end="7:67"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">sPAPRDRConnectorClass</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:31">drck</name> <init pos:start="7:33" pos:end="7:67">= <expr pos:start="7:35" pos:end="7:67"><call pos:start="7:35" pos:end="7:67"><name pos:start="7:35" pos:end="7:62">SPAPR_DR_CONNECTOR_GET_CLASS</name><argument_list pos:start="7:63" pos:end="7:67">(<argument pos:start="7:64" pos:end="7:66"><expr pos:start="7:64" pos:end="7:66"><name pos:start="7:64" pos:end="7:66">drc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:73"><expr pos:start="11:5" pos:end="11:72"><call pos:start="11:5" pos:end="11:72"><name pos:start="11:5" pos:end="11:12">DPRINTFN</name><argument_list pos:start="11:13" pos:end="11:72">(<argument pos:start="11:14" pos:end="11:48"><expr pos:start="11:14" pos:end="11:48"><literal type="string" pos:start="11:14" pos:end="11:48">"drc: %x, set_allocation_state: %x"</literal></expr></argument>, <argument pos:start="11:51" pos:end="11:64"><expr pos:start="11:51" pos:end="11:64"><call pos:start="11:51" pos:end="11:64"><name pos:start="11:51" pos:end="11:59">get_index</name><argument_list pos:start="11:60" pos:end="11:64">(<argument pos:start="11:61" pos:end="11:63"><expr pos:start="11:61" pos:end="11:63"><name pos:start="11:61" pos:end="11:63">drc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="11:67" pos:end="11:71"><expr pos:start="11:67" pos:end="11:71"><name pos:start="11:67" pos:end="11:71">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="33:5"><if pos:start="15:5" pos:end="33:5">if <condition pos:start="15:8" pos:end="15:50">(<expr pos:start="15:9" pos:end="15:49"><name pos:start="15:9" pos:end="15:13">state</name> <operator pos:start="15:15" pos:end="15:16">==</operator> <name pos:start="15:18" pos:end="15:49">SPAPR_DR_ALLOCATION_STATE_USABLE</name></expr>)</condition> <block pos:start="15:52" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:9">

        <comment type="block" pos:start="17:9" pos:end="25:11">/* if there's no resource/device associated with the DRC, there's

         * no way for us to put it in an allocation state consistent with

         * being 'USABLE'. PAPR 2.7, 13.5.3.4 documents that this should

         * result in an RTAS return code of -3 / "no such indicator"

         */</comment>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:22">(<expr pos:start="27:13" pos:end="27:21"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:21"><name pos:start="27:14" pos:end="27:16">drc</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:21">dev</name></name></expr>)</condition> <block pos:start="27:24" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:46">

            <return pos:start="29:13" pos:end="29:46">return <expr pos:start="29:20" pos:end="29:45"><name pos:start="29:20" pos:end="29:45">RTAS_OUT_NO_SUCH_INDICATOR</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="55:5"><if pos:start="37:5" pos:end="55:5">if <condition pos:start="37:8" pos:end="37:49">(<expr pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:11">drc</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:17">type</name></name> <operator pos:start="37:19" pos:end="37:20">!=</operator> <name pos:start="37:22" pos:end="37:48">SPAPR_DR_CONNECTOR_TYPE_PCI</name></expr>)</condition> <block pos:start="37:51" pos:end="55:5">{<block_content pos:start="39:9" pos:end="53:9">

        <expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:11">drc</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:29">allocation_state</name></name> <operator pos:start="39:31" pos:end="39:31">=</operator> <name pos:start="39:33" pos:end="39:37">state</name></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="53:9"><if pos:start="41:9" pos:end="53:9">if <condition pos:start="41:12" pos:end="43:72">(<expr pos:start="41:13" pos:end="43:71"><name pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:15">drc</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:33">awaiting_release</name></name> <operator pos:start="41:35" pos:end="41:36">&amp;&amp;</operator>

            <name pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:15">drc</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:33">allocation_state</name></name> <operator pos:start="43:35" pos:end="43:36">==</operator> <name pos:start="43:38" pos:end="43:71">SPAPR_DR_ALLOCATION_STATE_UNUSABLE</name></expr>)</condition> <block pos:start="43:74" pos:end="53:9">{<block_content pos:start="45:13" pos:end="49:54">

            <expr_stmt pos:start="45:13" pos:end="45:50"><expr pos:start="45:13" pos:end="45:49"><call pos:start="45:13" pos:end="45:49"><name pos:start="45:13" pos:end="45:20">DPRINTFN</name><argument_list pos:start="45:21" pos:end="45:49">(<argument pos:start="45:22" pos:end="45:48"><expr pos:start="45:22" pos:end="45:48"><literal type="string" pos:start="45:22" pos:end="45:48">"finalizing device removal"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="49:54"><expr pos:start="47:13" pos:end="49:53"><call pos:start="47:13" pos:end="49:53"><name pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:16">drck</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:24">detach</name></name><argument_list pos:start="47:25" pos:end="49:53">(<argument pos:start="47:26" pos:end="47:28"><expr pos:start="47:26" pos:end="47:28"><name pos:start="47:26" pos:end="47:28">drc</name></expr></argument>, <argument pos:start="47:31" pos:end="47:46"><expr pos:start="47:31" pos:end="47:46"><call pos:start="47:31" pos:end="47:46"><name pos:start="47:31" pos:end="47:36">DEVICE</name><argument_list pos:start="47:37" pos:end="47:46">(<argument pos:start="47:38" pos:end="47:45"><expr pos:start="47:38" pos:end="47:45"><name pos:start="47:38" pos:end="47:45"><name pos:start="47:38" pos:end="47:40">drc</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:45">dev</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:49" pos:end="47:62"><expr pos:start="47:49" pos:end="47:62"><name pos:start="47:49" pos:end="47:62"><name pos:start="47:49" pos:end="47:51">drc</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:62">detach_cb</name></name></expr></argument>,

                         <argument pos:start="49:26" pos:end="49:46"><expr pos:start="49:26" pos:end="49:46"><name pos:start="49:26" pos:end="49:46"><name pos:start="49:26" pos:end="49:28">drc</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:46">detach_cb_opaque</name></name></expr></argument>, <argument pos:start="49:49" pos:end="49:52"><expr pos:start="49:49" pos:end="49:52"><name pos:start="49:49" pos:end="49:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:28">return <expr pos:start="57:12" pos:end="57:27"><name pos:start="57:12" pos:end="57:27">RTAS_OUT_SUCCESS</name></expr>;</return>

</block_content>}</block></function></unit>
