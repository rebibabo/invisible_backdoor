<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15205.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">parse_picture</name><parameter_list pos:start="1:25" pos:end="1:72">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">buf</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:71">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="225:1">{<block_content pos:start="5:5" pos:end="221:15">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:21"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:19">CodecMime</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:25">mime</name> <init pos:start="5:27" pos:end="5:46">= <expr pos:start="5:29" pos:end="5:46"><name pos:start="5:29" pos:end="5:46">ff_id3v2_mime_tags</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:8">enum</name>  <name pos:start="7:11" pos:end="7:17">CodecID</name></name></type>      <name pos:start="7:24" pos:end="7:25">id</name> <init pos:start="7:27" pos:end="7:41">= <expr pos:start="7:29" pos:end="7:41"><name pos:start="7:29" pos:end="7:41">CODEC_ID_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:20">mimetype</name><index pos:start="9:21" pos:end="9:24">[<expr pos:start="9:22" pos:end="9:23"><literal type="number" pos:start="9:22" pos:end="9:23">64</literal></expr>]</index></name></decl>, <decl pos:start="9:27" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:11"><modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:31">desc</name> <init pos:start="9:33" pos:end="9:38">= <expr pos:start="9:35" pos:end="9:38"><name pos:start="9:35" pos:end="9:38">NULL</name></expr></init></decl>, <decl pos:start="9:41" pos:end="9:52"><type ref="prev" pos:start="9:5" pos:end="9:11"><modifier pos:start="9:41" pos:end="9:41">*</modifier></type><name pos:start="9:42" pos:end="9:45">data</name> <init pos:start="9:47" pos:end="9:52">= <expr pos:start="9:49" pos:end="9:52"><name pos:start="9:49" pos:end="9:52">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">AVIOContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">pb</name> <init pos:start="11:21" pos:end="11:26">= <expr pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">type</name></decl>, <decl pos:start="15:15" pos:end="15:19"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:19">width</name></decl>, <decl pos:start="15:22" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:22" pos:end="15:27">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">len</name></decl>, <decl pos:start="17:14" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:14" pos:end="17:16">ret</name> <init pos:start="17:18" pos:end="17:20">= <expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:6">st</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:37"><name pos:start="21:10" pos:end="21:28">avformat_new_stream</name><argument_list pos:start="21:29" pos:end="21:37">(<argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><name pos:start="21:30" pos:end="21:30">s</name></expr></argument>, <argument pos:start="21:33" pos:end="21:36"><expr pos:start="21:33" pos:end="21:36"><name pos:start="21:33" pos:end="21:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:31"><if pos:start="23:5" pos:end="25:31">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:11">st</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:70"><expr pos:start="29:5" pos:end="29:69"><name pos:start="29:5" pos:end="29:6">pb</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:69"><name pos:start="29:10" pos:end="29:27">avio_alloc_context</name><argument_list pos:start="29:28" pos:end="29:69">(<argument pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:31">buf</name></expr></argument>, <argument pos:start="29:34" pos:end="29:41"><expr pos:start="29:34" pos:end="29:41"><name pos:start="29:34" pos:end="29:41">buf_size</name></expr></argument>, <argument pos:start="29:44" pos:end="29:44"><expr pos:start="29:44" pos:end="29:44"><literal type="number" pos:start="29:44" pos:end="29:44">0</literal></expr></argument>, <argument pos:start="29:47" pos:end="29:50"><expr pos:start="29:47" pos:end="29:50"><name pos:start="29:47" pos:end="29:50">NULL</name></expr></argument>, <argument pos:start="29:53" pos:end="29:56"><expr pos:start="29:53" pos:end="29:56"><name pos:start="29:53" pos:end="29:56">NULL</name></expr></argument>, <argument pos:start="29:59" pos:end="29:62"><expr pos:start="29:59" pos:end="29:62"><name pos:start="29:59" pos:end="29:62">NULL</name></expr></argument>, <argument pos:start="29:65" pos:end="29:68"><expr pos:start="29:65" pos:end="29:68"><name pos:start="29:65" pos:end="29:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="33:31"><if pos:start="31:5" pos:end="33:31">if <condition pos:start="31:8" pos:end="31:12">(<expr pos:start="31:9" pos:end="31:11"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:11">pb</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:31"><block_content pos:start="33:9" pos:end="33:31">

        <return pos:start="33:9" pos:end="33:31">return <expr pos:start="33:16" pos:end="33:30"><call pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:22">AVERROR</name><argument_list pos:start="33:23" pos:end="33:30">(<argument pos:start="33:24" pos:end="33:29"><expr pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:31">/* read the picture type */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:30"><expr pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:8">type</name>      <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:29"><name pos:start="39:17" pos:end="39:25">avio_rb32</name><argument_list pos:start="39:26" pos:end="39:29">(<argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><name pos:start="39:27" pos:end="39:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:67">(<expr pos:start="41:9" pos:end="41:66"><name pos:start="41:9" pos:end="41:12">type</name> <operator pos:start="41:14" pos:end="41:15">&gt;=</operator> <call pos:start="41:17" pos:end="41:54"><name pos:start="41:17" pos:end="41:30">FF_ARRAY_ELEMS</name><argument_list pos:start="41:31" pos:end="41:54">(<argument pos:start="41:32" pos:end="41:53"><expr pos:start="41:32" pos:end="41:53"><name pos:start="41:32" pos:end="41:53">ff_id3v2_picture_types</name></expr></argument>)</argument_list></call> <operator pos:start="41:56" pos:end="41:57">||</operator> <name pos:start="41:59" pos:end="41:62">type</name> <operator pos:start="41:64" pos:end="41:64">&lt;</operator> <literal type="number" pos:start="41:66" pos:end="41:66">0</literal></expr>)</condition> <block pos:start="41:69" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:18">

        <expr_stmt pos:start="43:9" pos:end="43:69"><expr pos:start="43:9" pos:end="43:68"><call pos:start="43:9" pos:end="43:68"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:68">(<argument pos:start="43:16" pos:end="43:16"><expr pos:start="43:16" pos:end="43:16"><name pos:start="43:16" pos:end="43:16">s</name></expr></argument>, <argument pos:start="43:19" pos:end="43:30"><expr pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:33" pos:end="43:61"><expr pos:start="43:33" pos:end="43:61"><literal type="string" pos:start="43:33" pos:end="43:61">"Invalid picture type: %d.\n"</literal></expr></argument>, <argument pos:start="43:64" pos:end="43:67"><expr pos:start="43:64" pos:end="43:67"><name pos:start="43:64" pos:end="43:67">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:18">goto <name pos:start="47:14" pos:end="47:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:26">/* picture mimetype */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:25"><expr pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:7">len</name>  <operator pos:start="55:10" pos:end="55:10">=</operator> <call pos:start="55:12" pos:end="55:24"><name pos:start="55:12" pos:end="55:20">avio_rb32</name><argument_list pos:start="55:21" pos:end="55:24">(<argument pos:start="55:22" pos:end="55:23"><expr pos:start="55:22" pos:end="55:23"><name pos:start="55:22" pos:end="55:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="69:5"><if pos:start="57:5" pos:end="69:5">if <condition pos:start="57:8" pos:end="59:73">(<expr pos:start="57:9" pos:end="59:72"><name pos:start="57:9" pos:end="57:11">len</name> <operator pos:start="57:13" pos:end="57:14">&lt;=</operator> <literal type="number" pos:start="57:16" pos:end="57:16">0</literal> <operator pos:start="57:18" pos:end="57:19">||</operator>

        <call pos:start="59:9" pos:end="59:65"><name pos:start="59:9" pos:end="59:17">avio_read</name><argument_list pos:start="59:18" pos:end="59:65">(<argument pos:start="59:19" pos:end="59:20"><expr pos:start="59:19" pos:end="59:20"><name pos:start="59:19" pos:end="59:20">pb</name></expr></argument>, <argument pos:start="59:23" pos:end="59:30"><expr pos:start="59:23" pos:end="59:30"><name pos:start="59:23" pos:end="59:30">mimetype</name></expr></argument>, <argument pos:start="59:33" pos:end="59:64"><expr pos:start="59:33" pos:end="59:64"><call pos:start="59:33" pos:end="59:64"><name pos:start="59:33" pos:end="59:37">FFMIN</name><argument_list pos:start="59:38" pos:end="59:64">(<argument pos:start="59:39" pos:end="59:41"><expr pos:start="59:39" pos:end="59:41"><name pos:start="59:39" pos:end="59:41">len</name></expr></argument>, <argument pos:start="59:44" pos:end="59:63"><expr pos:start="59:44" pos:end="59:63"><sizeof pos:start="59:44" pos:end="59:59">sizeof<argument_list pos:start="59:50" pos:end="59:59">(<argument pos:start="59:51" pos:end="59:58"><expr pos:start="59:51" pos:end="59:58"><name pos:start="59:51" pos:end="59:58">mimetype</name></expr></argument>)</argument_list></sizeof> <operator pos:start="59:61" pos:end="59:61">-</operator> <literal type="number" pos:start="59:63" pos:end="59:63">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="59:67" pos:end="59:68">!=</operator> <name pos:start="59:70" pos:end="59:72">len</name></expr>)</condition> <block pos:start="59:75" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:18">

        <expr_stmt pos:start="61:9" pos:end="63:29"><expr pos:start="61:9" pos:end="63:28"><call pos:start="61:9" pos:end="63:28"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="63:28">(<argument pos:start="61:16" pos:end="61:16"><expr pos:start="61:16" pos:end="61:16"><name pos:start="61:16" pos:end="61:16">s</name></expr></argument>, <argument pos:start="61:19" pos:end="61:30"><expr pos:start="61:19" pos:end="61:30"><name pos:start="61:19" pos:end="61:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:33" pos:end="63:27"><expr pos:start="61:33" pos:end="63:27"><literal type="string" pos:start="61:33" pos:end="61:75">"Could not read mimetype from an attached "</literal>

               <literal type="string" pos:start="63:16" pos:end="63:27">"picture.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:34"><expr pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="67:9" pos:end="67:18">goto <name pos:start="67:14" pos:end="67:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:22"><expr pos:start="71:5" pos:end="71:21"><name pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:12">mimetype</name><index pos:start="71:13" pos:end="71:17">[<expr pos:start="71:14" pos:end="71:16"><name pos:start="71:14" pos:end="71:16">len</name></expr>]</index></name> <operator pos:start="71:19" pos:end="71:19">=</operator> <literal type="number" pos:start="71:21" pos:end="71:21">0</literal></expr>;</expr_stmt>



    <while pos:start="75:5" pos:end="87:5">while <condition pos:start="75:11" pos:end="75:37">(<expr pos:start="75:12" pos:end="75:36"><name pos:start="75:12" pos:end="75:19"><name pos:start="75:12" pos:end="75:15">mime</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:19">id</name></name> <operator pos:start="75:21" pos:end="75:22">!=</operator> <name pos:start="75:24" pos:end="75:36">CODEC_ID_NONE</name></expr>)</condition> <block pos:start="75:39" pos:end="87:5">{<block_content pos:start="77:9" pos:end="85:15">

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:60">(<expr pos:start="77:13" pos:end="77:59"><operator pos:start="77:13" pos:end="77:13">!</operator><call pos:start="77:14" pos:end="77:59"><name pos:start="77:14" pos:end="77:20">strncmp</name><argument_list pos:start="77:21" pos:end="77:59">(<argument pos:start="77:22" pos:end="77:30"><expr pos:start="77:22" pos:end="77:30"><name pos:start="77:22" pos:end="77:30"><name pos:start="77:22" pos:end="77:25">mime</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:30">str</name></name></expr></argument>, <argument pos:start="77:33" pos:end="77:40"><expr pos:start="77:33" pos:end="77:40"><name pos:start="77:33" pos:end="77:40">mimetype</name></expr></argument>, <argument pos:start="77:43" pos:end="77:58"><expr pos:start="77:43" pos:end="77:58"><sizeof pos:start="77:43" pos:end="77:58">sizeof<argument_list pos:start="77:49" pos:end="77:58">(<argument pos:start="77:50" pos:end="77:57"><expr pos:start="77:50" pos:end="77:57"><name pos:start="77:50" pos:end="77:57">mimetype</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:62" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:18">

            <expr_stmt pos:start="79:13" pos:end="79:26"><expr pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:14">id</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <name pos:start="79:18" pos:end="79:25"><name pos:start="79:18" pos:end="79:21">mime</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:25">id</name></name></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:15"><expr pos:start="85:9" pos:end="85:14"><name pos:start="85:9" pos:end="85:12">mime</name><operator pos:start="85:13" pos:end="85:14">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="89:5" pos:end="99:5"><if pos:start="89:5" pos:end="99:5">if <condition pos:start="89:8" pos:end="89:28">(<expr pos:start="89:9" pos:end="89:27"><name pos:start="89:9" pos:end="89:10">id</name> <operator pos:start="89:12" pos:end="89:13">==</operator> <name pos:start="89:15" pos:end="89:27">CODEC_ID_NONE</name></expr>)</condition> <block pos:start="89:30" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:18">

        <expr_stmt pos:start="91:9" pos:end="93:25"><expr pos:start="91:9" pos:end="93:24"><call pos:start="91:9" pos:end="93:24"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="93:24">(<argument pos:start="91:16" pos:end="91:16"><expr pos:start="91:16" pos:end="91:16"><name pos:start="91:16" pos:end="91:16">s</name></expr></argument>, <argument pos:start="91:19" pos:end="91:30"><expr pos:start="91:19" pos:end="91:30"><name pos:start="91:19" pos:end="91:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:33" pos:end="91:74"><expr pos:start="91:33" pos:end="91:74"><literal type="string" pos:start="91:33" pos:end="91:74">"Unknown attached picture mimetype: %s.\n"</literal></expr></argument>,

               <argument pos:start="93:16" pos:end="93:23"><expr pos:start="93:16" pos:end="93:23"><name pos:start="93:16" pos:end="93:23">mimetype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:34"><expr pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <name pos:start="95:15" pos:end="95:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="97:9" pos:end="97:18">goto <name pos:start="97:14" pos:end="97:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:29">/* picture description */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:24"><expr pos:start="105:5" pos:end="105:23"><name pos:start="105:5" pos:end="105:7">len</name> <operator pos:start="105:9" pos:end="105:9">=</operator> <call pos:start="105:11" pos:end="105:23"><name pos:start="105:11" pos:end="105:19">avio_rb32</name><argument_list pos:start="105:20" pos:end="105:23">(<argument pos:start="105:21" pos:end="105:22"><expr pos:start="105:21" pos:end="105:22"><name pos:start="105:21" pos:end="105:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="129:5"><if pos:start="107:5" pos:end="129:5">if <condition pos:start="107:8" pos:end="107:16">(<expr pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:11">len</name> <operator pos:start="107:13" pos:end="107:13">&gt;</operator> <literal type="number" pos:start="107:15" pos:end="107:15">0</literal></expr>)</condition> <block pos:start="107:18" pos:end="129:5">{<block_content pos:start="109:9" pos:end="127:22">

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:41">(<expr pos:start="109:13" pos:end="109:40"><operator pos:start="109:13" pos:end="109:13">!</operator><operator pos:start="109:14" pos:end="109:14">(</operator><name pos:start="109:15" pos:end="109:18">desc</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <call pos:start="109:22" pos:end="109:39"><name pos:start="109:22" pos:end="109:30">av_malloc</name><argument_list pos:start="109:31" pos:end="109:39">(<argument pos:start="109:32" pos:end="109:38"><expr pos:start="109:32" pos:end="109:38"><name pos:start="109:32" pos:end="109:34">len</name> <operator pos:start="109:36" pos:end="109:36">+</operator> <literal type="number" pos:start="109:38" pos:end="109:38">1</literal></expr></argument>)</argument_list></call><operator pos:start="109:40" pos:end="109:40">)</operator></expr>)</condition> <block pos:start="109:43" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:22">

            <expr_stmt pos:start="111:13" pos:end="111:34"><expr pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:15">ret</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <call pos:start="111:19" pos:end="111:33"><name pos:start="111:19" pos:end="111:25">AVERROR</name><argument_list pos:start="111:26" pos:end="111:33">(<argument pos:start="111:27" pos:end="111:32"><expr pos:start="111:27" pos:end="111:32"><name pos:start="111:27" pos:end="111:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="113:13" pos:end="113:22">goto <name pos:start="113:18" pos:end="113:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="119:9" pos:end="125:9"><if pos:start="119:9" pos:end="125:9">if <condition pos:start="119:12" pos:end="119:44">(<expr pos:start="119:13" pos:end="119:43"><call pos:start="119:13" pos:end="119:36"><name pos:start="119:13" pos:end="119:21">avio_read</name><argument_list pos:start="119:22" pos:end="119:36">(<argument pos:start="119:23" pos:end="119:24"><expr pos:start="119:23" pos:end="119:24"><name pos:start="119:23" pos:end="119:24">pb</name></expr></argument>, <argument pos:start="119:27" pos:end="119:30"><expr pos:start="119:27" pos:end="119:30"><name pos:start="119:27" pos:end="119:30">desc</name></expr></argument>, <argument pos:start="119:33" pos:end="119:35"><expr pos:start="119:33" pos:end="119:35"><name pos:start="119:33" pos:end="119:35">len</name></expr></argument>)</argument_list></call> <operator pos:start="119:38" pos:end="119:39">!=</operator> <name pos:start="119:41" pos:end="119:43">len</name></expr>)</condition> <block pos:start="119:46" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:22">

            <expr_stmt pos:start="121:13" pos:end="121:31"><expr pos:start="121:13" pos:end="121:30"><name pos:start="121:13" pos:end="121:15">ret</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <call pos:start="121:19" pos:end="121:30"><name pos:start="121:19" pos:end="121:25">AVERROR</name><argument_list pos:start="121:26" pos:end="121:30">(<argument pos:start="121:27" pos:end="121:29"><expr pos:start="121:27" pos:end="121:29"><name pos:start="121:27" pos:end="121:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="123:13" pos:end="123:22">goto <name pos:start="123:18" pos:end="123:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:22"><expr pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:17"><name pos:start="127:9" pos:end="127:12">desc</name><index pos:start="127:13" pos:end="127:17">[<expr pos:start="127:14" pos:end="127:16"><name pos:start="127:14" pos:end="127:16">len</name></expr>]</index></name> <operator pos:start="127:19" pos:end="127:19">=</operator> <literal type="number" pos:start="127:21" pos:end="127:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="133:5" pos:end="133:26">/* picture metadata */</comment>

    <expr_stmt pos:start="135:5" pos:end="135:27"><expr pos:start="135:5" pos:end="135:26"><name pos:start="135:5" pos:end="135:9">width</name>  <operator pos:start="135:12" pos:end="135:12">=</operator> <call pos:start="135:14" pos:end="135:26"><name pos:start="135:14" pos:end="135:22">avio_rb32</name><argument_list pos:start="135:23" pos:end="135:26">(<argument pos:start="135:24" pos:end="135:25"><expr pos:start="135:24" pos:end="135:25"><name pos:start="135:24" pos:end="135:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:27"><expr pos:start="137:5" pos:end="137:26"><name pos:start="137:5" pos:end="137:10">height</name> <operator pos:start="137:12" pos:end="137:12">=</operator> <call pos:start="137:14" pos:end="137:26"><name pos:start="137:14" pos:end="137:22">avio_rb32</name><argument_list pos:start="137:23" pos:end="137:26">(<argument pos:start="137:24" pos:end="137:25"><expr pos:start="137:24" pos:end="137:25"><name pos:start="137:24" pos:end="137:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:21"><expr pos:start="139:5" pos:end="139:20"><call pos:start="139:5" pos:end="139:20"><name pos:start="139:5" pos:end="139:13">avio_skip</name><argument_list pos:start="139:14" pos:end="139:20">(<argument pos:start="139:15" pos:end="139:16"><expr pos:start="139:15" pos:end="139:16"><name pos:start="139:15" pos:end="139:16">pb</name></expr></argument>, <argument pos:start="139:19" pos:end="139:19"><expr pos:start="139:19" pos:end="139:19"><literal type="number" pos:start="139:19" pos:end="139:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="143:5" pos:end="143:22">/* picture data */</comment>

    <expr_stmt pos:start="145:5" pos:end="145:24"><expr pos:start="145:5" pos:end="145:23"><name pos:start="145:5" pos:end="145:7">len</name> <operator pos:start="145:9" pos:end="145:9">=</operator> <call pos:start="145:11" pos:end="145:23"><name pos:start="145:11" pos:end="145:19">avio_rb32</name><argument_list pos:start="145:20" pos:end="145:23">(<argument pos:start="145:21" pos:end="145:22"><expr pos:start="145:21" pos:end="145:22"><name pos:start="145:21" pos:end="145:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="147:5" pos:end="153:5"><if pos:start="147:5" pos:end="153:5">if <condition pos:start="147:8" pos:end="147:17">(<expr pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:11">len</name> <operator pos:start="147:13" pos:end="147:14">&lt;=</operator> <literal type="number" pos:start="147:16" pos:end="147:16">0</literal></expr>)</condition> <block pos:start="147:19" pos:end="153:5">{<block_content pos:start="149:9" pos:end="151:18">

        <expr_stmt pos:start="149:9" pos:end="149:34"><expr pos:start="149:9" pos:end="149:33"><name pos:start="149:9" pos:end="149:11">ret</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <name pos:start="149:15" pos:end="149:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="151:9" pos:end="151:18">goto <name pos:start="151:14" pos:end="151:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="155:5" pos:end="161:5"><if pos:start="155:5" pos:end="161:5">if <condition pos:start="155:8" pos:end="155:33">(<expr pos:start="155:9" pos:end="155:32"><operator pos:start="155:9" pos:end="155:9">!</operator><operator pos:start="155:10" pos:end="155:10">(</operator><name pos:start="155:11" pos:end="155:14">data</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <call pos:start="155:18" pos:end="155:31"><name pos:start="155:18" pos:end="155:26">av_malloc</name><argument_list pos:start="155:27" pos:end="155:31">(<argument pos:start="155:28" pos:end="155:30"><expr pos:start="155:28" pos:end="155:30"><name pos:start="155:28" pos:end="155:30">len</name></expr></argument>)</argument_list></call><operator pos:start="155:32" pos:end="155:32">)</operator></expr>)</condition> <block pos:start="155:35" pos:end="161:5">{<block_content pos:start="157:9" pos:end="159:18">

        <expr_stmt pos:start="157:9" pos:end="157:30"><expr pos:start="157:9" pos:end="157:29"><name pos:start="157:9" pos:end="157:11">ret</name> <operator pos:start="157:13" pos:end="157:13">=</operator> <call pos:start="157:15" pos:end="157:29"><name pos:start="157:15" pos:end="157:21">AVERROR</name><argument_list pos:start="157:22" pos:end="157:29">(<argument pos:start="157:23" pos:end="157:28"><expr pos:start="157:23" pos:end="157:28"><name pos:start="157:23" pos:end="157:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="159:9" pos:end="159:18">goto <name pos:start="159:14" pos:end="159:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="163:5" pos:end="169:5"><if pos:start="163:5" pos:end="169:5">if <condition pos:start="163:8" pos:end="163:40">(<expr pos:start="163:9" pos:end="163:39"><call pos:start="163:9" pos:end="163:32"><name pos:start="163:9" pos:end="163:17">avio_read</name><argument_list pos:start="163:18" pos:end="163:32">(<argument pos:start="163:19" pos:end="163:20"><expr pos:start="163:19" pos:end="163:20"><name pos:start="163:19" pos:end="163:20">pb</name></expr></argument>, <argument pos:start="163:23" pos:end="163:26"><expr pos:start="163:23" pos:end="163:26"><name pos:start="163:23" pos:end="163:26">data</name></expr></argument>, <argument pos:start="163:29" pos:end="163:31"><expr pos:start="163:29" pos:end="163:31"><name pos:start="163:29" pos:end="163:31">len</name></expr></argument>)</argument_list></call> <operator pos:start="163:34" pos:end="163:35">!=</operator> <name pos:start="163:37" pos:end="163:39">len</name></expr>)</condition> <block pos:start="163:42" pos:end="169:5">{<block_content pos:start="165:9" pos:end="167:18">

        <expr_stmt pos:start="165:9" pos:end="165:27"><expr pos:start="165:9" pos:end="165:26"><name pos:start="165:9" pos:end="165:11">ret</name> <operator pos:start="165:13" pos:end="165:13">=</operator> <call pos:start="165:15" pos:end="165:26"><name pos:start="165:15" pos:end="165:21">AVERROR</name><argument_list pos:start="165:22" pos:end="165:26">(<argument pos:start="165:23" pos:end="165:25"><expr pos:start="165:23" pos:end="165:25"><name pos:start="165:23" pos:end="165:25">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="167:9" pos:end="167:18">goto <name pos:start="167:14" pos:end="167:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:38"><expr pos:start="173:5" pos:end="173:37"><call pos:start="173:5" pos:end="173:37"><name pos:start="173:5" pos:end="173:18">av_init_packet</name><argument_list pos:start="173:19" pos:end="173:37">(<argument pos:start="173:20" pos:end="173:36"><expr pos:start="173:20" pos:end="173:36"><operator pos:start="173:20" pos:end="173:20">&amp;</operator><name pos:start="173:21" pos:end="173:36"><name pos:start="173:21" pos:end="173:22">st</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:36">attached_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:41"><expr pos:start="175:5" pos:end="175:40"><name pos:start="175:5" pos:end="175:25"><name pos:start="175:5" pos:end="175:6">st</name><operator pos:start="175:7" pos:end="175:8">-&gt;</operator><name pos:start="175:9" pos:end="175:20">attached_pic</name><operator pos:start="175:21" pos:end="175:21">.</operator><name pos:start="175:22" pos:end="175:25">data</name></name>         <operator pos:start="175:35" pos:end="175:35">=</operator> <name pos:start="175:37" pos:end="175:40">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:40"><expr pos:start="177:5" pos:end="177:39"><name pos:start="177:5" pos:end="177:25"><name pos:start="177:5" pos:end="177:6">st</name><operator pos:start="177:7" pos:end="177:8">-&gt;</operator><name pos:start="177:9" pos:end="177:20">attached_pic</name><operator pos:start="177:21" pos:end="177:21">.</operator><name pos:start="177:22" pos:end="177:25">size</name></name>         <operator pos:start="177:35" pos:end="177:35">=</operator> <name pos:start="177:37" pos:end="177:39">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:55"><expr pos:start="179:5" pos:end="179:54"><name pos:start="179:5" pos:end="179:29"><name pos:start="179:5" pos:end="179:6">st</name><operator pos:start="179:7" pos:end="179:8">-&gt;</operator><name pos:start="179:9" pos:end="179:20">attached_pic</name><operator pos:start="179:21" pos:end="179:21">.</operator><name pos:start="179:22" pos:end="179:29">destruct</name></name>     <operator pos:start="179:35" pos:end="179:35">=</operator> <name pos:start="179:37" pos:end="179:54">av_destruct_packet</name></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:46"><expr pos:start="181:5" pos:end="181:45"><name pos:start="181:5" pos:end="181:33"><name pos:start="181:5" pos:end="181:6">st</name><operator pos:start="181:7" pos:end="181:8">-&gt;</operator><name pos:start="181:9" pos:end="181:20">attached_pic</name><operator pos:start="181:21" pos:end="181:21">.</operator><name pos:start="181:22" pos:end="181:33">stream_index</name></name> <operator pos:start="181:35" pos:end="181:35">=</operator> <name pos:start="181:37" pos:end="181:45"><name pos:start="181:37" pos:end="181:38">st</name><operator pos:start="181:39" pos:end="181:40">-&gt;</operator><name pos:start="181:41" pos:end="181:45">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:52"><expr pos:start="183:5" pos:end="183:51"><name pos:start="183:5" pos:end="183:26"><name pos:start="183:5" pos:end="183:6">st</name><operator pos:start="183:7" pos:end="183:8">-&gt;</operator><name pos:start="183:9" pos:end="183:20">attached_pic</name><operator pos:start="183:21" pos:end="183:21">.</operator><name pos:start="183:22" pos:end="183:26">flags</name></name>       <operator pos:start="183:34" pos:end="183:35">|=</operator> <name pos:start="183:37" pos:end="183:51">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:56"><expr pos:start="187:5" pos:end="187:55"><name pos:start="187:5" pos:end="187:19"><name pos:start="187:5" pos:end="187:6">st</name><operator pos:start="187:7" pos:end="187:8">-&gt;</operator><name pos:start="187:9" pos:end="187:19">disposition</name></name>      <operator pos:start="187:26" pos:end="187:27">|=</operator> <name pos:start="187:29" pos:end="187:55">AV_DISPOSITION_ATTACHED_PIC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:47"><expr pos:start="189:5" pos:end="189:46"><name pos:start="189:5" pos:end="189:25"><name pos:start="189:5" pos:end="189:6">st</name><operator pos:start="189:7" pos:end="189:8">-&gt;</operator><name pos:start="189:9" pos:end="189:13">codec</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:25">codec_type</name></name> <operator pos:start="189:27" pos:end="189:27">=</operator> <name pos:start="189:29" pos:end="189:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:31"><expr pos:start="191:5" pos:end="191:30"><name pos:start="191:5" pos:end="191:23"><name pos:start="191:5" pos:end="191:6">st</name><operator pos:start="191:7" pos:end="191:8">-&gt;</operator><name pos:start="191:9" pos:end="191:13">codec</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:23">codec_id</name></name>   <operator pos:start="191:27" pos:end="191:27">=</operator> <name pos:start="191:29" pos:end="191:30">id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:34"><expr pos:start="193:5" pos:end="193:33"><name pos:start="193:5" pos:end="193:20"><name pos:start="193:5" pos:end="193:6">st</name><operator pos:start="193:7" pos:end="193:8">-&gt;</operator><name pos:start="193:9" pos:end="193:13">codec</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:20">width</name></name>      <operator pos:start="193:27" pos:end="193:27">=</operator> <name pos:start="193:29" pos:end="193:33">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:35"><expr pos:start="195:5" pos:end="195:34"><name pos:start="195:5" pos:end="195:21"><name pos:start="195:5" pos:end="195:6">st</name><operator pos:start="195:7" pos:end="195:8">-&gt;</operator><name pos:start="195:9" pos:end="195:13">codec</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:21">height</name></name>     <operator pos:start="195:27" pos:end="195:27">=</operator> <name pos:start="195:29" pos:end="195:34">height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:75"><expr pos:start="197:5" pos:end="197:74"><call pos:start="197:5" pos:end="197:74"><name pos:start="197:5" pos:end="197:15">av_dict_set</name><argument_list pos:start="197:16" pos:end="197:74">(<argument pos:start="197:17" pos:end="197:29"><expr pos:start="197:17" pos:end="197:29"><operator pos:start="197:17" pos:end="197:17">&amp;</operator><name pos:start="197:18" pos:end="197:29"><name pos:start="197:18" pos:end="197:19">st</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:29">metadata</name></name></expr></argument>, <argument pos:start="197:32" pos:end="197:40"><expr pos:start="197:32" pos:end="197:40"><literal type="string" pos:start="197:32" pos:end="197:40">"comment"</literal></expr></argument>, <argument pos:start="197:43" pos:end="197:70"><expr pos:start="197:43" pos:end="197:70"><name pos:start="197:43" pos:end="197:70"><name pos:start="197:43" pos:end="197:64">ff_id3v2_picture_types</name><index pos:start="197:65" pos:end="197:70">[<expr pos:start="197:66" pos:end="197:69"><name pos:start="197:66" pos:end="197:69">type</name></expr>]</index></name></expr></argument>, <argument pos:start="197:73" pos:end="197:73"><expr pos:start="197:73" pos:end="197:73"><literal type="number" pos:start="197:73" pos:end="197:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="199:5" pos:end="201:77"><if pos:start="199:5" pos:end="201:77">if <condition pos:start="199:8" pos:end="199:13">(<expr pos:start="199:9" pos:end="199:12"><name pos:start="199:9" pos:end="199:12">desc</name></expr>)</condition><block type="pseudo" pos:start="201:9" pos:end="201:77"><block_content pos:start="201:9" pos:end="201:77">

        <expr_stmt pos:start="201:9" pos:end="201:77"><expr pos:start="201:9" pos:end="201:76"><call pos:start="201:9" pos:end="201:76"><name pos:start="201:9" pos:end="201:19">av_dict_set</name><argument_list pos:start="201:20" pos:end="201:76">(<argument pos:start="201:21" pos:end="201:33"><expr pos:start="201:21" pos:end="201:33"><operator pos:start="201:21" pos:end="201:21">&amp;</operator><name pos:start="201:22" pos:end="201:33"><name pos:start="201:22" pos:end="201:23">st</name><operator pos:start="201:24" pos:end="201:25">-&gt;</operator><name pos:start="201:26" pos:end="201:33">metadata</name></name></expr></argument>, <argument pos:start="201:36" pos:end="201:42"><expr pos:start="201:36" pos:end="201:42"><literal type="string" pos:start="201:36" pos:end="201:42">"title"</literal></expr></argument>,   <argument pos:start="201:47" pos:end="201:50"><expr pos:start="201:47" pos:end="201:50"><name pos:start="201:47" pos:end="201:50">desc</name></expr></argument>, <argument pos:start="201:53" pos:end="201:75"><expr pos:start="201:53" pos:end="201:75"><name pos:start="201:53" pos:end="201:75">AV_DICT_DONT_STRDUP_VAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:18"><expr pos:start="205:5" pos:end="205:17"><call pos:start="205:5" pos:end="205:17"><name pos:start="205:5" pos:end="205:12">av_freep</name><argument_list pos:start="205:13" pos:end="205:17">(<argument pos:start="205:14" pos:end="205:16"><expr pos:start="205:14" pos:end="205:16"><operator pos:start="205:14" pos:end="205:14">&amp;</operator><name pos:start="205:15" pos:end="205:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="209:5" pos:end="209:13">return <expr pos:start="209:12" pos:end="209:12"><literal type="number" pos:start="209:12" pos:end="209:12">0</literal></expr>;</return>



<label pos:start="213:1" pos:end="213:5"><name pos:start="213:1" pos:end="213:4">fail</name>:</label>

    <expr_stmt pos:start="215:5" pos:end="215:20"><expr pos:start="215:5" pos:end="215:19"><call pos:start="215:5" pos:end="215:19"><name pos:start="215:5" pos:end="215:12">av_freep</name><argument_list pos:start="215:13" pos:end="215:19">(<argument pos:start="215:14" pos:end="215:18"><expr pos:start="215:14" pos:end="215:18"><operator pos:start="215:14" pos:end="215:14">&amp;</operator><name pos:start="215:15" pos:end="215:18">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:20"><expr pos:start="217:5" pos:end="217:19"><call pos:start="217:5" pos:end="217:19"><name pos:start="217:5" pos:end="217:12">av_freep</name><argument_list pos:start="217:13" pos:end="217:19">(<argument pos:start="217:14" pos:end="217:18"><expr pos:start="217:14" pos:end="217:18"><operator pos:start="217:14" pos:end="217:14">&amp;</operator><name pos:start="217:15" pos:end="217:18">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:18"><expr pos:start="219:5" pos:end="219:17"><call pos:start="219:5" pos:end="219:17"><name pos:start="219:5" pos:end="219:12">av_freep</name><argument_list pos:start="219:13" pos:end="219:17">(<argument pos:start="219:14" pos:end="219:16"><expr pos:start="219:14" pos:end="219:16"><operator pos:start="219:14" pos:end="219:14">&amp;</operator><name pos:start="219:15" pos:end="219:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="221:5" pos:end="221:15">return <expr pos:start="221:12" pos:end="221:14"><name pos:start="221:12" pos:end="221:14">ret</name></expr>;</return>



</block_content>}</block></function>
</unit>
