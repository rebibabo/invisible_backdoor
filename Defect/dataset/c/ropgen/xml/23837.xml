<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23837.c" pos:tabs="8"><function pos:start="1:1" pos:end="319:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">OutputStream</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:37">new_video_stream</name><parameter_list pos:start="1:38" pos:end="1:95">(<parameter pos:start="1:39" pos:end="1:55"><decl pos:start="1:39" pos:end="1:55"><type pos:start="1:39" pos:end="1:55"><name pos:start="1:39" pos:end="1:52">OptionsContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">o</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:76"><decl pos:start="1:58" pos:end="1:76"><type pos:start="1:58" pos:end="1:76"><name pos:start="1:58" pos:end="1:72">AVFormatContext</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:76">oc</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:94"><decl pos:start="1:79" pos:end="1:94"><type pos:start="1:79" pos:end="1:94"><name pos:start="1:79" pos:end="1:81">int</name></type> <name pos:start="1:83" pos:end="1:94">source_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="319:1">{<block_content pos:start="5:5" pos:end="317:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">OutputStream</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:29">video_enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:20">frame_rate</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>, <decl pos:start="11:30" pos:end="11:55"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:48">frame_aspect_ratio</name> <init pos:start="11:50" pos:end="11:55">= <expr pos:start="11:52" pos:end="11:55"><name pos:start="11:52" pos:end="11:55">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:69"><expr pos:start="15:5" pos:end="15:68"><name pos:start="15:5" pos:end="15:7">ost</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:68"><name pos:start="15:11" pos:end="15:27">new_output_stream</name><argument_list pos:start="15:28" pos:end="15:68">(<argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">o</name></expr></argument>, <argument pos:start="15:32" pos:end="15:33"><expr pos:start="15:32" pos:end="15:33"><name pos:start="15:32" pos:end="15:33">oc</name></expr></argument>, <argument pos:start="15:36" pos:end="15:53"><expr pos:start="15:36" pos:end="15:53"><name pos:start="15:36" pos:end="15:53">AVMEDIA_TYPE_VIDEO</name></expr></argument>, <argument pos:start="15:56" pos:end="15:67"><expr pos:start="15:56" pos:end="15:67"><name pos:start="15:56" pos:end="15:67">source_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:6">st</name>  <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:17"><name pos:start="17:11" pos:end="17:13">ost</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:17">st</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:13">video_enc</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:19">ost</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:28">enc_ctx</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:63"><expr pos:start="23:5" pos:end="23:62"><call pos:start="23:5" pos:end="23:62"><name pos:start="23:5" pos:end="23:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="23:25" pos:end="23:62">(<argument pos:start="23:26" pos:end="23:36"><expr pos:start="23:26" pos:end="23:36"><name pos:start="23:26" pos:end="23:36">frame_rates</name></expr></argument>, <argument pos:start="23:39" pos:end="23:41"><expr pos:start="23:39" pos:end="23:41"><name pos:start="23:39" pos:end="23:41">str</name></expr></argument>, <argument pos:start="23:44" pos:end="23:53"><expr pos:start="23:44" pos:end="23:53"><name pos:start="23:44" pos:end="23:53">frame_rate</name></expr></argument>, <argument pos:start="23:56" pos:end="23:57"><expr pos:start="23:56" pos:end="23:57"><name pos:start="23:56" pos:end="23:57">oc</name></expr></argument>, <argument pos:start="23:60" pos:end="23:61"><expr pos:start="23:60" pos:end="23:61"><name pos:start="23:60" pos:end="23:61">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:76">(<expr pos:start="25:9" pos:end="25:75"><name pos:start="25:9" pos:end="25:18">frame_rate</name> <operator pos:start="25:20" pos:end="25:21">&amp;&amp;</operator> <call pos:start="25:23" pos:end="25:71"><name pos:start="25:23" pos:end="25:41">av_parse_video_rate</name><argument_list pos:start="25:42" pos:end="25:71">(<argument pos:start="25:43" pos:end="25:58"><expr pos:start="25:43" pos:end="25:58"><operator pos:start="25:43" pos:end="25:43">&amp;</operator><name pos:start="25:44" pos:end="25:58"><name pos:start="25:44" pos:end="25:46">ost</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:58">frame_rate</name></name></expr></argument>, <argument pos:start="25:61" pos:end="25:70"><expr pos:start="25:61" pos:end="25:70"><name pos:start="25:61" pos:end="25:70">frame_rate</name></expr></argument>)</argument_list></call> <operator pos:start="25:73" pos:end="25:73">&lt;</operator> <literal type="number" pos:start="25:75" pos:end="25:75">0</literal></expr>)</condition> <block pos:start="25:78" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:24">

        <expr_stmt pos:start="27:9" pos:end="27:80"><expr pos:start="27:9" pos:end="27:79"><call pos:start="27:9" pos:end="27:79"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:79">(<argument pos:start="27:16" pos:end="27:19"><expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr></argument>, <argument pos:start="27:22" pos:end="27:33"><expr pos:start="27:22" pos:end="27:33"><name pos:start="27:22" pos:end="27:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="27:36" pos:end="27:66"><expr pos:start="27:36" pos:end="27:66"><literal type="string" pos:start="27:36" pos:end="27:66">"Invalid framerate value: %s\n"</literal></expr></argument>, <argument pos:start="27:69" pos:end="27:78"><expr pos:start="27:69" pos:end="27:78"><name pos:start="27:69" pos:end="27:78">frame_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:24"><expr pos:start="29:9" pos:end="29:23"><call pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:20">exit_program</name><argument_list pos:start="29:21" pos:end="29:23">(<argument pos:start="29:22" pos:end="29:22"><expr pos:start="29:22" pos:end="29:22"><literal type="number" pos:start="29:22" pos:end="29:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="35:95"><if pos:start="33:5" pos:end="35:95">if <condition pos:start="33:8" pos:end="33:61">(<expr pos:start="33:9" pos:end="33:60"><name pos:start="33:9" pos:end="33:18">frame_rate</name> <operator pos:start="33:20" pos:end="33:21">&amp;&amp;</operator> <name pos:start="33:23" pos:end="33:39">video_sync_method</name> <operator pos:start="33:41" pos:end="33:42">==</operator> <name pos:start="33:44" pos:end="33:60">VSYNC_PASSTHROUGH</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:95"><block_content pos:start="35:9" pos:end="35:95">

        <expr_stmt pos:start="35:9" pos:end="35:95"><expr pos:start="35:9" pos:end="35:94"><call pos:start="35:9" pos:end="35:94"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:94">(<argument pos:start="35:16" pos:end="35:19"><expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">NULL</name></expr></argument>, <argument pos:start="35:22" pos:end="35:33"><expr pos:start="35:22" pos:end="35:33"><name pos:start="35:22" pos:end="35:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:36" pos:end="35:93"><expr pos:start="35:36" pos:end="35:93"><literal type="string" pos:start="35:36" pos:end="35:93">"Using -vsync 0 and -r can produce invalid output files\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:79"><expr pos:start="39:5" pos:end="39:78"><call pos:start="39:5" pos:end="39:78"><name pos:start="39:5" pos:end="39:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="39:25" pos:end="39:78">(<argument pos:start="39:26" pos:end="39:44"><expr pos:start="39:26" pos:end="39:44"><name pos:start="39:26" pos:end="39:44">frame_aspect_ratios</name></expr></argument>, <argument pos:start="39:47" pos:end="39:49"><expr pos:start="39:47" pos:end="39:49"><name pos:start="39:47" pos:end="39:49">str</name></expr></argument>, <argument pos:start="39:52" pos:end="39:69"><expr pos:start="39:52" pos:end="39:69"><name pos:start="39:52" pos:end="39:69">frame_aspect_ratio</name></expr></argument>, <argument pos:start="39:72" pos:end="39:73"><expr pos:start="39:72" pos:end="39:73"><name pos:start="39:72" pos:end="39:73">oc</name></expr></argument>, <argument pos:start="39:76" pos:end="39:77"><expr pos:start="39:76" pos:end="39:77"><name pos:start="39:76" pos:end="39:77">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="57:5"><if pos:start="41:5" pos:end="57:5">if <condition pos:start="41:8" pos:end="41:27">(<expr pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:26">frame_aspect_ratio</name></expr>)</condition> <block pos:start="41:29" pos:end="57:5">{<block_content pos:start="43:9" pos:end="55:36">

        <decl_stmt pos:start="43:9" pos:end="43:21"><decl pos:start="43:9" pos:end="43:20"><type pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:18">AVRational</name></type> <name pos:start="43:20" pos:end="43:20">q</name></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="53:9"><if pos:start="45:9" pos:end="53:9">if <condition pos:start="45:12" pos:end="47:37">(<expr pos:start="45:13" pos:end="47:36"><call pos:start="45:13" pos:end="45:64"><name pos:start="45:13" pos:end="45:26">av_parse_ratio</name><argument_list pos:start="45:27" pos:end="45:64">(<argument pos:start="45:28" pos:end="45:29"><expr pos:start="45:28" pos:end="45:29"><operator pos:start="45:28" pos:end="45:28">&amp;</operator><name pos:start="45:29" pos:end="45:29">q</name></expr></argument>, <argument pos:start="45:32" pos:end="45:49"><expr pos:start="45:32" pos:end="45:49"><name pos:start="45:32" pos:end="45:49">frame_aspect_ratio</name></expr></argument>, <argument pos:start="45:52" pos:end="45:54"><expr pos:start="45:52" pos:end="45:54"><literal type="number" pos:start="45:52" pos:end="45:54">255</literal></expr></argument>, <argument pos:start="45:57" pos:end="45:57"><expr pos:start="45:57" pos:end="45:57"><literal type="number" pos:start="45:57" pos:end="45:57">0</literal></expr></argument>, <argument pos:start="45:60" pos:end="45:63"><expr pos:start="45:60" pos:end="45:63"><name pos:start="45:60" pos:end="45:63">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="45:66" pos:end="45:66">&lt;</operator> <literal type="number" pos:start="45:68" pos:end="45:68">0</literal> <operator pos:start="45:70" pos:end="45:71">||</operator>

            <name pos:start="47:13" pos:end="47:17"><name pos:start="47:13" pos:end="47:13">q</name><operator pos:start="47:14" pos:end="47:14">.</operator><name pos:start="47:15" pos:end="47:17">num</name></name> <operator pos:start="47:19" pos:end="47:20">&lt;=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal> <operator pos:start="47:24" pos:end="47:25">||</operator> <name pos:start="47:27" pos:end="47:31"><name pos:start="47:27" pos:end="47:27">q</name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:31">den</name></name> <operator pos:start="47:33" pos:end="47:34">&lt;=</operator> <literal type="number" pos:start="47:36" pos:end="47:36">0</literal></expr>)</condition> <block pos:start="47:39" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:28">

            <expr_stmt pos:start="49:13" pos:end="49:89"><expr pos:start="49:13" pos:end="49:88"><call pos:start="49:13" pos:end="49:88"><name pos:start="49:13" pos:end="49:18">av_log</name><argument_list pos:start="49:19" pos:end="49:88">(<argument pos:start="49:20" pos:end="49:23"><expr pos:start="49:20" pos:end="49:23"><name pos:start="49:20" pos:end="49:23">NULL</name></expr></argument>, <argument pos:start="49:26" pos:end="49:37"><expr pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="49:40" pos:end="49:67"><expr pos:start="49:40" pos:end="49:67"><literal type="string" pos:start="49:40" pos:end="49:67">"Invalid aspect ratio: %s\n"</literal></expr></argument>, <argument pos:start="49:70" pos:end="49:87"><expr pos:start="49:70" pos:end="49:87"><name pos:start="49:70" pos:end="49:87">frame_aspect_ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><call pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:24">exit_program</name><argument_list pos:start="51:25" pos:end="51:27">(<argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:36"><expr pos:start="55:9" pos:end="55:35"><name pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:11">ost</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:31">frame_aspect_ratio</name></name> <operator pos:start="55:33" pos:end="55:33">=</operator> <name pos:start="55:35" pos:end="55:35">q</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:75"><expr pos:start="61:5" pos:end="61:74"><call pos:start="61:5" pos:end="61:74"><name pos:start="61:5" pos:end="61:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="61:25" pos:end="61:74">(<argument pos:start="61:26" pos:end="61:39"><expr pos:start="61:26" pos:end="61:39"><name pos:start="61:26" pos:end="61:39">filter_scripts</name></expr></argument>, <argument pos:start="61:42" pos:end="61:44"><expr pos:start="61:42" pos:end="61:44"><name pos:start="61:42" pos:end="61:44">str</name></expr></argument>, <argument pos:start="61:47" pos:end="61:65"><expr pos:start="61:47" pos:end="61:65"><name pos:start="61:47" pos:end="61:65"><name pos:start="61:47" pos:end="61:49">ost</name><operator pos:start="61:50" pos:end="61:51">-&gt;</operator><name pos:start="61:52" pos:end="61:65">filters_script</name></name></expr></argument>, <argument pos:start="61:68" pos:end="61:69"><expr pos:start="61:68" pos:end="61:69"><name pos:start="61:68" pos:end="61:69">oc</name></expr></argument>, <argument pos:start="61:72" pos:end="61:73"><expr pos:start="61:72" pos:end="61:73"><name pos:start="61:72" pos:end="61:73">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:75"><expr pos:start="63:5" pos:end="63:74"><call pos:start="63:5" pos:end="63:74"><name pos:start="63:5" pos:end="63:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="63:25" pos:end="63:74">(<argument pos:start="63:26" pos:end="63:32"><expr pos:start="63:26" pos:end="63:32"><name pos:start="63:26" pos:end="63:32">filters</name></expr></argument>,        <argument pos:start="63:42" pos:end="63:44"><expr pos:start="63:42" pos:end="63:44"><name pos:start="63:42" pos:end="63:44">str</name></expr></argument>, <argument pos:start="63:47" pos:end="63:58"><expr pos:start="63:47" pos:end="63:58"><name pos:start="63:47" pos:end="63:58"><name pos:start="63:47" pos:end="63:49">ost</name><operator pos:start="63:50" pos:end="63:51">-&gt;</operator><name pos:start="63:52" pos:end="63:58">filters</name></name></expr></argument>,        <argument pos:start="63:68" pos:end="63:69"><expr pos:start="63:68" pos:end="63:69"><name pos:start="63:68" pos:end="63:69">oc</name></expr></argument>, <argument pos:start="63:72" pos:end="63:73"><expr pos:start="63:72" pos:end="63:73"><name pos:start="63:72" pos:end="63:73">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="307:5"><if pos:start="67:5" pos:end="303:5">if <condition pos:start="67:8" pos:end="67:26">(<expr pos:start="67:9" pos:end="67:25"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:25"><name pos:start="67:10" pos:end="67:12">ost</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:25">stream_copy</name></name></expr>)</condition> <block pos:start="67:28" pos:end="303:5">{<block_content pos:start="69:9" pos:end="301:28">

        <decl_stmt pos:start="69:9" pos:end="69:29"><decl pos:start="69:9" pos:end="69:28"><type pos:start="69:9" pos:end="69:20"><specifier pos:start="69:9" pos:end="69:13">const</specifier> <name pos:start="69:15" pos:end="69:18">char</name> <modifier pos:start="69:20" pos:end="69:20">*</modifier></type><name pos:start="69:21" pos:end="69:21">p</name> <init pos:start="69:23" pos:end="69:28">= <expr pos:start="69:25" pos:end="69:28"><name pos:start="69:25" pos:end="69:28">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:32"><decl pos:start="71:9" pos:end="71:31"><type pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:12">char</name> <modifier pos:start="71:14" pos:end="71:14">*</modifier></type><name pos:start="71:15" pos:end="71:24">frame_size</name> <init pos:start="71:26" pos:end="71:31">= <expr pos:start="71:28" pos:end="71:31"><name pos:start="71:28" pos:end="71:31">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:35"><decl pos:start="73:9" pos:end="73:34"><type pos:start="73:9" pos:end="73:14"><name pos:start="73:9" pos:end="73:12">char</name> <modifier pos:start="73:14" pos:end="73:14">*</modifier></type><name pos:start="73:15" pos:end="73:27">frame_pix_fmt</name> <init pos:start="73:29" pos:end="73:34">= <expr pos:start="73:31" pos:end="73:34"><name pos:start="73:31" pos:end="73:34">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="75:9" pos:end="75:56"><decl pos:start="75:9" pos:end="75:33"><type pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:12">char</name> <modifier pos:start="75:14" pos:end="75:14">*</modifier></type><name pos:start="75:15" pos:end="75:26">intra_matrix</name> <init pos:start="75:28" pos:end="75:33">= <expr pos:start="75:30" pos:end="75:33"><name pos:start="75:30" pos:end="75:33">NULL</name></expr></init></decl>, <decl pos:start="75:36" pos:end="75:55"><type ref="prev" pos:start="75:9" pos:end="75:14"><modifier pos:start="75:36" pos:end="75:36">*</modifier></type><name pos:start="75:37" pos:end="75:48">inter_matrix</name> <init pos:start="75:50" pos:end="75:55">= <expr pos:start="75:52" pos:end="75:55"><name pos:start="75:52" pos:end="75:55">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="77:9" pos:end="77:41"><decl pos:start="77:9" pos:end="77:40"><type pos:start="77:9" pos:end="77:14"><name pos:start="77:9" pos:end="77:12">char</name> <modifier pos:start="77:14" pos:end="77:14">*</modifier></type><name pos:start="77:15" pos:end="77:33">chroma_intra_matrix</name> <init pos:start="77:35" pos:end="77:40">= <expr pos:start="77:37" pos:end="77:40"><name pos:start="77:37" pos:end="77:40">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:24"><decl pos:start="79:9" pos:end="79:23"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:19">do_pass</name> <init pos:start="79:21" pos:end="79:23">= <expr pos:start="79:23" pos:end="79:23"><literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:14"><decl pos:start="81:9" pos:end="81:13"><type pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">int</name></type> <name pos:start="81:13" pos:end="81:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:67"><expr pos:start="85:9" pos:end="85:66"><call pos:start="85:9" pos:end="85:66"><name pos:start="85:9" pos:end="85:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="85:29" pos:end="85:66">(<argument pos:start="85:30" pos:end="85:40"><expr pos:start="85:30" pos:end="85:40"><name pos:start="85:30" pos:end="85:40">frame_sizes</name></expr></argument>, <argument pos:start="85:43" pos:end="85:45"><expr pos:start="85:43" pos:end="85:45"><name pos:start="85:43" pos:end="85:45">str</name></expr></argument>, <argument pos:start="85:48" pos:end="85:57"><expr pos:start="85:48" pos:end="85:57"><name pos:start="85:48" pos:end="85:57">frame_size</name></expr></argument>, <argument pos:start="85:60" pos:end="85:61"><expr pos:start="85:60" pos:end="85:61"><name pos:start="85:60" pos:end="85:61">oc</name></expr></argument>, <argument pos:start="85:64" pos:end="85:65"><expr pos:start="85:64" pos:end="85:65"><name pos:start="85:64" pos:end="85:65">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="93:9"><if pos:start="87:9" pos:end="93:9">if <condition pos:start="87:12" pos:end="87:101">(<expr pos:start="87:13" pos:end="87:100"><name pos:start="87:13" pos:end="87:22">frame_size</name> <operator pos:start="87:24" pos:end="87:25">&amp;&amp;</operator> <call pos:start="87:27" pos:end="87:96"><name pos:start="87:27" pos:end="87:45">av_parse_video_size</name><argument_list pos:start="87:46" pos:end="87:96">(<argument pos:start="87:47" pos:end="87:63"><expr pos:start="87:47" pos:end="87:63"><operator pos:start="87:47" pos:end="87:47">&amp;</operator><name pos:start="87:48" pos:end="87:63"><name pos:start="87:48" pos:end="87:56">video_enc</name><operator pos:start="87:57" pos:end="87:58">-&gt;</operator><name pos:start="87:59" pos:end="87:63">width</name></name></expr></argument>, <argument pos:start="87:66" pos:end="87:83"><expr pos:start="87:66" pos:end="87:83"><operator pos:start="87:66" pos:end="87:66">&amp;</operator><name pos:start="87:67" pos:end="87:83"><name pos:start="87:67" pos:end="87:75">video_enc</name><operator pos:start="87:76" pos:end="87:77">-&gt;</operator><name pos:start="87:78" pos:end="87:83">height</name></name></expr></argument>, <argument pos:start="87:86" pos:end="87:95"><expr pos:start="87:86" pos:end="87:95"><name pos:start="87:86" pos:end="87:95">frame_size</name></expr></argument>)</argument_list></call> <operator pos:start="87:98" pos:end="87:98">&lt;</operator> <literal type="number" pos:start="87:100" pos:end="87:100">0</literal></expr>)</condition> <block pos:start="87:103" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:28">

            <expr_stmt pos:start="89:13" pos:end="89:80"><expr pos:start="89:13" pos:end="89:79"><call pos:start="89:13" pos:end="89:79"><name pos:start="89:13" pos:end="89:18">av_log</name><argument_list pos:start="89:19" pos:end="89:79">(<argument pos:start="89:20" pos:end="89:23"><expr pos:start="89:20" pos:end="89:23"><name pos:start="89:20" pos:end="89:23">NULL</name></expr></argument>, <argument pos:start="89:26" pos:end="89:37"><expr pos:start="89:26" pos:end="89:37"><name pos:start="89:26" pos:end="89:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="89:40" pos:end="89:66"><expr pos:start="89:40" pos:end="89:66"><literal type="string" pos:start="89:40" pos:end="89:66">"Invalid frame size: %s.\n"</literal></expr></argument>, <argument pos:start="89:69" pos:end="89:78"><expr pos:start="89:69" pos:end="89:78"><name pos:start="89:69" pos:end="89:78">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:28"><expr pos:start="91:13" pos:end="91:27"><call pos:start="91:13" pos:end="91:27"><name pos:start="91:13" pos:end="91:24">exit_program</name><argument_list pos:start="91:25" pos:end="91:27">(<argument pos:start="91:26" pos:end="91:26"><expr pos:start="91:26" pos:end="91:26"><literal type="number" pos:start="91:26" pos:end="91:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:67"><expr pos:start="97:9" pos:end="97:66"><name pos:start="97:9" pos:end="97:38"><name pos:start="97:9" pos:end="97:17">video_enc</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:38">bits_per_raw_sample</name></name> <operator pos:start="97:40" pos:end="97:40">=</operator> <name pos:start="97:42" pos:end="97:66">frame_bits_per_raw_sample</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:73"><expr pos:start="99:9" pos:end="99:72"><call pos:start="99:9" pos:end="99:72"><name pos:start="99:9" pos:end="99:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="99:29" pos:end="99:72">(<argument pos:start="99:30" pos:end="99:43"><expr pos:start="99:30" pos:end="99:43"><name pos:start="99:30" pos:end="99:43">frame_pix_fmts</name></expr></argument>, <argument pos:start="99:46" pos:end="99:48"><expr pos:start="99:46" pos:end="99:48"><name pos:start="99:46" pos:end="99:48">str</name></expr></argument>, <argument pos:start="99:51" pos:end="99:63"><expr pos:start="99:51" pos:end="99:63"><name pos:start="99:51" pos:end="99:63">frame_pix_fmt</name></expr></argument>, <argument pos:start="99:66" pos:end="99:67"><expr pos:start="99:66" pos:end="99:67"><name pos:start="99:66" pos:end="99:67">oc</name></expr></argument>, <argument pos:start="99:70" pos:end="99:71"><expr pos:start="99:70" pos:end="99:71"><name pos:start="99:70" pos:end="99:71">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="109:9"><if pos:start="101:9" pos:end="109:9">if <condition pos:start="101:12" pos:end="101:51">(<expr pos:start="101:13" pos:end="101:50"><name pos:start="101:13" pos:end="101:25">frame_pix_fmt</name> <operator pos:start="101:27" pos:end="101:28">&amp;&amp;</operator> <operator pos:start="101:30" pos:end="101:30">*</operator><name pos:start="101:31" pos:end="101:43">frame_pix_fmt</name> <operator pos:start="101:45" pos:end="101:46">==</operator> <literal type="char" pos:start="101:48" pos:end="101:50">'+'</literal></expr>)</condition> <block pos:start="101:53" pos:end="109:9">{<block_content pos:start="103:13" pos:end="107:37">

            <expr_stmt pos:start="103:13" pos:end="103:34"><expr pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:29"><name pos:start="103:13" pos:end="103:15">ost</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:29">keep_pix_fmt</name></name> <operator pos:start="103:31" pos:end="103:31">=</operator> <literal type="number" pos:start="103:33" pos:end="103:33">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="107:37"><if pos:start="105:13" pos:end="107:37">if <condition pos:start="105:16" pos:end="105:34">(<expr pos:start="105:17" pos:end="105:33"><operator pos:start="105:17" pos:end="105:17">!</operator><operator pos:start="105:18" pos:end="105:18">*</operator><operator pos:start="105:19" pos:end="105:20">++</operator><name pos:start="105:21" pos:end="105:33">frame_pix_fmt</name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:37"><block_content pos:start="107:17" pos:end="107:37">

                <expr_stmt pos:start="107:17" pos:end="107:37"><expr pos:start="107:17" pos:end="107:36"><name pos:start="107:17" pos:end="107:29">frame_pix_fmt</name> <operator pos:start="107:31" pos:end="107:31">=</operator> <name pos:start="107:33" pos:end="107:36">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="111:9" pos:end="117:9"><if pos:start="111:9" pos:end="117:9">if <condition pos:start="111:12" pos:end="111:101">(<expr pos:start="111:13" pos:end="111:100"><name pos:start="111:13" pos:end="111:25">frame_pix_fmt</name> <operator pos:start="111:27" pos:end="111:28">&amp;&amp;</operator> <operator pos:start="111:30" pos:end="111:30">(</operator><name pos:start="111:31" pos:end="111:48"><name pos:start="111:31" pos:end="111:39">video_enc</name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:48">pix_fmt</name></name> <operator pos:start="111:50" pos:end="111:50">=</operator> <call pos:start="111:52" pos:end="111:80"><name pos:start="111:52" pos:end="111:65">av_get_pix_fmt</name><argument_list pos:start="111:66" pos:end="111:80">(<argument pos:start="111:67" pos:end="111:79"><expr pos:start="111:67" pos:end="111:79"><name pos:start="111:67" pos:end="111:79">frame_pix_fmt</name></expr></argument>)</argument_list></call><operator pos:start="111:81" pos:end="111:81">)</operator> <operator pos:start="111:83" pos:end="111:84">==</operator> <name pos:start="111:86" pos:end="111:100">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="111:103" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:28">

            <expr_stmt pos:start="113:13" pos:end="113:95"><expr pos:start="113:13" pos:end="113:94"><call pos:start="113:13" pos:end="113:94"><name pos:start="113:13" pos:end="113:18">av_log</name><argument_list pos:start="113:19" pos:end="113:94">(<argument pos:start="113:20" pos:end="113:23"><expr pos:start="113:20" pos:end="113:23"><name pos:start="113:20" pos:end="113:23">NULL</name></expr></argument>, <argument pos:start="113:26" pos:end="113:37"><expr pos:start="113:26" pos:end="113:37"><name pos:start="113:26" pos:end="113:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="113:40" pos:end="113:78"><expr pos:start="113:40" pos:end="113:78"><literal type="string" pos:start="113:40" pos:end="113:78">"Unknown pixel format requested: %s.\n"</literal></expr></argument>, <argument pos:start="113:81" pos:end="113:93"><expr pos:start="113:81" pos:end="113:93"><name pos:start="113:81" pos:end="113:93">frame_pix_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:28"><expr pos:start="115:13" pos:end="115:27"><call pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:24">exit_program</name><argument_list pos:start="115:25" pos:end="115:27">(<argument pos:start="115:26" pos:end="115:26"><expr pos:start="115:26" pos:end="115:26"><literal type="number" pos:start="115:26" pos:end="115:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:65"><expr pos:start="119:9" pos:end="119:64"><name pos:start="119:9" pos:end="119:31"><name pos:start="119:9" pos:end="119:10">st</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:31">sample_aspect_ratio</name></name> <operator pos:start="119:33" pos:end="119:33">=</operator> <name pos:start="119:35" pos:end="119:64"><name pos:start="119:35" pos:end="119:43">video_enc</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:64">sample_aspect_ratio</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="123:9" pos:end="125:36"><if pos:start="123:9" pos:end="125:36">if <condition pos:start="123:12" pos:end="123:23">(<expr pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:22">intra_only</name></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:36"><block_content pos:start="125:13" pos:end="125:36">

            <expr_stmt pos:start="125:13" pos:end="125:36"><expr pos:start="125:13" pos:end="125:35"><name pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:21">video_enc</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:31">gop_size</name></name> <operator pos:start="125:33" pos:end="125:33">=</operator> <literal type="number" pos:start="125:35" pos:end="125:35">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:72"><expr pos:start="127:9" pos:end="127:71"><call pos:start="127:9" pos:end="127:71"><name pos:start="127:9" pos:end="127:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="127:29" pos:end="127:71">(<argument pos:start="127:30" pos:end="127:43"><expr pos:start="127:30" pos:end="127:43"><name pos:start="127:30" pos:end="127:43">intra_matrices</name></expr></argument>, <argument pos:start="127:46" pos:end="127:48"><expr pos:start="127:46" pos:end="127:48"><name pos:start="127:46" pos:end="127:48">str</name></expr></argument>, <argument pos:start="127:51" pos:end="127:62"><expr pos:start="127:51" pos:end="127:62"><name pos:start="127:51" pos:end="127:62">intra_matrix</name></expr></argument>, <argument pos:start="127:65" pos:end="127:66"><expr pos:start="127:65" pos:end="127:66"><name pos:start="127:65" pos:end="127:66">oc</name></expr></argument>, <argument pos:start="127:69" pos:end="127:70"><expr pos:start="127:69" pos:end="127:70"><name pos:start="127:69" pos:end="127:70">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="141:9"><if pos:start="129:9" pos:end="141:9">if <condition pos:start="129:12" pos:end="129:25">(<expr pos:start="129:13" pos:end="129:24"><name pos:start="129:13" pos:end="129:24">intra_matrix</name></expr>)</condition> <block pos:start="129:27" pos:end="141:9">{<block_content pos:start="131:13" pos:end="139:71">

            <if_stmt pos:start="131:13" pos:end="137:13"><if pos:start="131:13" pos:end="137:13">if <condition pos:start="131:16" pos:end="131:95">(<expr pos:start="131:17" pos:end="131:94"><operator pos:start="131:17" pos:end="131:17">!</operator><operator pos:start="131:18" pos:end="131:18">(</operator><name pos:start="131:19" pos:end="131:41"><name pos:start="131:19" pos:end="131:27">video_enc</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:41">intra_matrix</name></name> <operator pos:start="131:43" pos:end="131:43">=</operator> <call pos:start="131:45" pos:end="131:93"><name pos:start="131:45" pos:end="131:54">av_mallocz</name><argument_list pos:start="131:55" pos:end="131:93">(<argument pos:start="131:56" pos:end="131:92"><expr pos:start="131:56" pos:end="131:92"><sizeof pos:start="131:56" pos:end="131:87">sizeof<argument_list pos:start="131:62" pos:end="131:87">(<argument pos:start="131:63" pos:end="131:86"><expr pos:start="131:63" pos:end="131:86"><operator pos:start="131:63" pos:end="131:63">*</operator><name pos:start="131:64" pos:end="131:86"><name pos:start="131:64" pos:end="131:72">video_enc</name><operator pos:start="131:73" pos:end="131:74">-&gt;</operator><name pos:start="131:75" pos:end="131:86">intra_matrix</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="131:89" pos:end="131:89">*</operator> <literal type="number" pos:start="131:91" pos:end="131:92">64</literal></expr></argument>)</argument_list></call><operator pos:start="131:94" pos:end="131:94">)</operator></expr>)</condition> <block pos:start="131:97" pos:end="137:13">{<block_content pos:start="133:17" pos:end="135:32">

                <expr_stmt pos:start="133:17" pos:end="133:92"><expr pos:start="133:17" pos:end="133:91"><call pos:start="133:17" pos:end="133:91"><name pos:start="133:17" pos:end="133:22">av_log</name><argument_list pos:start="133:23" pos:end="133:91">(<argument pos:start="133:24" pos:end="133:27"><expr pos:start="133:24" pos:end="133:27"><name pos:start="133:24" pos:end="133:27">NULL</name></expr></argument>, <argument pos:start="133:30" pos:end="133:41"><expr pos:start="133:30" pos:end="133:41"><name pos:start="133:30" pos:end="133:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="133:44" pos:end="133:90"><expr pos:start="133:44" pos:end="133:90"><literal type="string" pos:start="133:44" pos:end="133:90">"Could not allocate memory for intra matrix.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:32"><expr pos:start="135:17" pos:end="135:31"><call pos:start="135:17" pos:end="135:31"><name pos:start="135:17" pos:end="135:28">exit_program</name><argument_list pos:start="135:29" pos:end="135:31">(<argument pos:start="135:30" pos:end="135:30"><expr pos:start="135:30" pos:end="135:30"><literal type="number" pos:start="135:30" pos:end="135:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:71"><expr pos:start="139:13" pos:end="139:70"><call pos:start="139:13" pos:end="139:70"><name pos:start="139:13" pos:end="139:31">parse_matrix_coeffs</name><argument_list pos:start="139:32" pos:end="139:70">(<argument pos:start="139:33" pos:end="139:55"><expr pos:start="139:33" pos:end="139:55"><name pos:start="139:33" pos:end="139:55"><name pos:start="139:33" pos:end="139:41">video_enc</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:55">intra_matrix</name></name></expr></argument>, <argument pos:start="139:58" pos:end="139:69"><expr pos:start="139:58" pos:end="139:69"><name pos:start="139:58" pos:end="139:69">intra_matrix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:86"><expr pos:start="143:9" pos:end="143:85"><call pos:start="143:9" pos:end="143:85"><name pos:start="143:9" pos:end="143:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="143:29" pos:end="143:85">(<argument pos:start="143:30" pos:end="143:50"><expr pos:start="143:30" pos:end="143:50"><name pos:start="143:30" pos:end="143:50">chroma_intra_matrices</name></expr></argument>, <argument pos:start="143:53" pos:end="143:55"><expr pos:start="143:53" pos:end="143:55"><name pos:start="143:53" pos:end="143:55">str</name></expr></argument>, <argument pos:start="143:58" pos:end="143:76"><expr pos:start="143:58" pos:end="143:76"><name pos:start="143:58" pos:end="143:76">chroma_intra_matrix</name></expr></argument>, <argument pos:start="143:79" pos:end="143:80"><expr pos:start="143:79" pos:end="143:80"><name pos:start="143:79" pos:end="143:80">oc</name></expr></argument>, <argument pos:start="143:83" pos:end="143:84"><expr pos:start="143:83" pos:end="143:84"><name pos:start="143:83" pos:end="143:84">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="145:9" pos:end="161:9"><if pos:start="145:9" pos:end="161:9">if <condition pos:start="145:12" pos:end="145:32">(<expr pos:start="145:13" pos:end="145:31"><name pos:start="145:13" pos:end="145:31">chroma_intra_matrix</name></expr>)</condition> <block pos:start="145:34" pos:end="161:9">{<block_content pos:start="147:13" pos:end="159:56">

            <decl_stmt pos:start="147:13" pos:end="147:83"><decl pos:start="147:13" pos:end="147:82"><type pos:start="147:13" pos:end="147:22"><name pos:start="147:13" pos:end="147:20">uint16_t</name> <modifier pos:start="147:22" pos:end="147:22">*</modifier></type><name pos:start="147:23" pos:end="147:23">p</name> <init pos:start="147:25" pos:end="147:82">= <expr pos:start="147:27" pos:end="147:82"><call pos:start="147:27" pos:end="147:82"><name pos:start="147:27" pos:end="147:36">av_mallocz</name><argument_list pos:start="147:37" pos:end="147:82">(<argument pos:start="147:38" pos:end="147:81"><expr pos:start="147:38" pos:end="147:81"><sizeof pos:start="147:38" pos:end="147:76">sizeof<argument_list pos:start="147:44" pos:end="147:76">(<argument pos:start="147:45" pos:end="147:75"><expr pos:start="147:45" pos:end="147:75"><operator pos:start="147:45" pos:end="147:45">*</operator><name pos:start="147:46" pos:end="147:75"><name pos:start="147:46" pos:end="147:54">video_enc</name><operator pos:start="147:55" pos:end="147:56">-&gt;</operator><name pos:start="147:57" pos:end="147:75">chroma_intra_matrix</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="147:78" pos:end="147:78">*</operator> <literal type="number" pos:start="147:80" pos:end="147:81">64</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="149:13" pos:end="155:13"><if pos:start="149:13" pos:end="155:13">if <condition pos:start="149:16" pos:end="149:19">(<expr pos:start="149:17" pos:end="149:18"><operator pos:start="149:17" pos:end="149:17">!</operator><name pos:start="149:18" pos:end="149:18">p</name></expr>)</condition> <block pos:start="149:21" pos:end="155:13">{<block_content pos:start="151:17" pos:end="153:32">

                <expr_stmt pos:start="151:17" pos:end="151:92"><expr pos:start="151:17" pos:end="151:91"><call pos:start="151:17" pos:end="151:91"><name pos:start="151:17" pos:end="151:22">av_log</name><argument_list pos:start="151:23" pos:end="151:91">(<argument pos:start="151:24" pos:end="151:27"><expr pos:start="151:24" pos:end="151:27"><name pos:start="151:24" pos:end="151:27">NULL</name></expr></argument>, <argument pos:start="151:30" pos:end="151:41"><expr pos:start="151:30" pos:end="151:41"><name pos:start="151:30" pos:end="151:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="151:44" pos:end="151:90"><expr pos:start="151:44" pos:end="151:90"><literal type="string" pos:start="151:44" pos:end="151:90">"Could not allocate memory for intra matrix.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:32"><expr pos:start="153:17" pos:end="153:31"><call pos:start="153:17" pos:end="153:31"><name pos:start="153:17" pos:end="153:28">exit_program</name><argument_list pos:start="153:29" pos:end="153:31">(<argument pos:start="153:30" pos:end="153:30"><expr pos:start="153:30" pos:end="153:30"><literal type="number" pos:start="153:30" pos:end="153:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:59"><expr pos:start="157:13" pos:end="157:58"><call pos:start="157:13" pos:end="157:58"><name pos:start="157:13" pos:end="157:44">av_codec_set_chroma_intra_matrix</name><argument_list pos:start="157:45" pos:end="157:58">(<argument pos:start="157:46" pos:end="157:54"><expr pos:start="157:46" pos:end="157:54"><name pos:start="157:46" pos:end="157:54">video_enc</name></expr></argument>, <argument pos:start="157:57" pos:end="157:57"><expr pos:start="157:57" pos:end="157:57"><name pos:start="157:57" pos:end="157:57">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:56"><expr pos:start="159:13" pos:end="159:55"><call pos:start="159:13" pos:end="159:55"><name pos:start="159:13" pos:end="159:31">parse_matrix_coeffs</name><argument_list pos:start="159:32" pos:end="159:55">(<argument pos:start="159:33" pos:end="159:33"><expr pos:start="159:33" pos:end="159:33"><name pos:start="159:33" pos:end="159:33">p</name></expr></argument>, <argument pos:start="159:36" pos:end="159:54"><expr pos:start="159:36" pos:end="159:54"><name pos:start="159:36" pos:end="159:54">chroma_intra_matrix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:72"><expr pos:start="163:9" pos:end="163:71"><call pos:start="163:9" pos:end="163:71"><name pos:start="163:9" pos:end="163:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="163:29" pos:end="163:71">(<argument pos:start="163:30" pos:end="163:43"><expr pos:start="163:30" pos:end="163:43"><name pos:start="163:30" pos:end="163:43">inter_matrices</name></expr></argument>, <argument pos:start="163:46" pos:end="163:48"><expr pos:start="163:46" pos:end="163:48"><name pos:start="163:46" pos:end="163:48">str</name></expr></argument>, <argument pos:start="163:51" pos:end="163:62"><expr pos:start="163:51" pos:end="163:62"><name pos:start="163:51" pos:end="163:62">inter_matrix</name></expr></argument>, <argument pos:start="163:65" pos:end="163:66"><expr pos:start="163:65" pos:end="163:66"><name pos:start="163:65" pos:end="163:66">oc</name></expr></argument>, <argument pos:start="163:69" pos:end="163:70"><expr pos:start="163:69" pos:end="163:70"><name pos:start="163:69" pos:end="163:70">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="177:9"><if pos:start="165:9" pos:end="177:9">if <condition pos:start="165:12" pos:end="165:25">(<expr pos:start="165:13" pos:end="165:24"><name pos:start="165:13" pos:end="165:24">inter_matrix</name></expr>)</condition> <block pos:start="165:27" pos:end="177:9">{<block_content pos:start="167:13" pos:end="175:71">

            <if_stmt pos:start="167:13" pos:end="173:13"><if pos:start="167:13" pos:end="173:13">if <condition pos:start="167:16" pos:end="167:95">(<expr pos:start="167:17" pos:end="167:94"><operator pos:start="167:17" pos:end="167:17">!</operator><operator pos:start="167:18" pos:end="167:18">(</operator><name pos:start="167:19" pos:end="167:41"><name pos:start="167:19" pos:end="167:27">video_enc</name><operator pos:start="167:28" pos:end="167:29">-&gt;</operator><name pos:start="167:30" pos:end="167:41">inter_matrix</name></name> <operator pos:start="167:43" pos:end="167:43">=</operator> <call pos:start="167:45" pos:end="167:93"><name pos:start="167:45" pos:end="167:54">av_mallocz</name><argument_list pos:start="167:55" pos:end="167:93">(<argument pos:start="167:56" pos:end="167:92"><expr pos:start="167:56" pos:end="167:92"><sizeof pos:start="167:56" pos:end="167:87">sizeof<argument_list pos:start="167:62" pos:end="167:87">(<argument pos:start="167:63" pos:end="167:86"><expr pos:start="167:63" pos:end="167:86"><operator pos:start="167:63" pos:end="167:63">*</operator><name pos:start="167:64" pos:end="167:86"><name pos:start="167:64" pos:end="167:72">video_enc</name><operator pos:start="167:73" pos:end="167:74">-&gt;</operator><name pos:start="167:75" pos:end="167:86">inter_matrix</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="167:89" pos:end="167:89">*</operator> <literal type="number" pos:start="167:91" pos:end="167:92">64</literal></expr></argument>)</argument_list></call><operator pos:start="167:94" pos:end="167:94">)</operator></expr>)</condition> <block pos:start="167:97" pos:end="173:13">{<block_content pos:start="169:17" pos:end="171:32">

                <expr_stmt pos:start="169:17" pos:end="169:92"><expr pos:start="169:17" pos:end="169:91"><call pos:start="169:17" pos:end="169:91"><name pos:start="169:17" pos:end="169:22">av_log</name><argument_list pos:start="169:23" pos:end="169:91">(<argument pos:start="169:24" pos:end="169:27"><expr pos:start="169:24" pos:end="169:27"><name pos:start="169:24" pos:end="169:27">NULL</name></expr></argument>, <argument pos:start="169:30" pos:end="169:41"><expr pos:start="169:30" pos:end="169:41"><name pos:start="169:30" pos:end="169:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="169:44" pos:end="169:90"><expr pos:start="169:44" pos:end="169:90"><literal type="string" pos:start="169:44" pos:end="169:90">"Could not allocate memory for inter matrix.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:32"><expr pos:start="171:17" pos:end="171:31"><call pos:start="171:17" pos:end="171:31"><name pos:start="171:17" pos:end="171:28">exit_program</name><argument_list pos:start="171:29" pos:end="171:31">(<argument pos:start="171:30" pos:end="171:30"><expr pos:start="171:30" pos:end="171:30"><literal type="number" pos:start="171:30" pos:end="171:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:71"><expr pos:start="175:13" pos:end="175:70"><call pos:start="175:13" pos:end="175:70"><name pos:start="175:13" pos:end="175:31">parse_matrix_coeffs</name><argument_list pos:start="175:32" pos:end="175:70">(<argument pos:start="175:33" pos:end="175:55"><expr pos:start="175:33" pos:end="175:55"><name pos:start="175:33" pos:end="175:55"><name pos:start="175:33" pos:end="175:41">video_enc</name><operator pos:start="175:42" pos:end="175:43">-&gt;</operator><name pos:start="175:44" pos:end="175:55">inter_matrix</name></name></expr></argument>, <argument pos:start="175:58" pos:end="175:69"><expr pos:start="175:58" pos:end="175:69"><name pos:start="175:58" pos:end="175:69">inter_matrix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="181:9" pos:end="181:59"><expr pos:start="181:9" pos:end="181:58"><call pos:start="181:9" pos:end="181:58"><name pos:start="181:9" pos:end="181:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="181:29" pos:end="181:58">(<argument pos:start="181:30" pos:end="181:41"><expr pos:start="181:30" pos:end="181:41"><name pos:start="181:30" pos:end="181:41">rc_overrides</name></expr></argument>, <argument pos:start="181:44" pos:end="181:46"><expr pos:start="181:44" pos:end="181:46"><name pos:start="181:44" pos:end="181:46">str</name></expr></argument>, <argument pos:start="181:49" pos:end="181:49"><expr pos:start="181:49" pos:end="181:49"><name pos:start="181:49" pos:end="181:49">p</name></expr></argument>, <argument pos:start="181:52" pos:end="181:53"><expr pos:start="181:52" pos:end="181:53"><name pos:start="181:52" pos:end="181:53">oc</name></expr></argument>, <argument pos:start="181:56" pos:end="181:57"><expr pos:start="181:56" pos:end="181:57"><name pos:start="181:56" pos:end="181:57">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="183:9" pos:end="229:9">for <control pos:start="183:13" pos:end="183:27">(<init pos:start="183:14" pos:end="183:19"><expr pos:start="183:14" pos:end="183:18"><name pos:start="183:14" pos:end="183:14">i</name> <operator pos:start="183:16" pos:end="183:16">=</operator> <literal type="number" pos:start="183:18" pos:end="183:18">0</literal></expr>;</init> <condition pos:start="183:21" pos:end="183:22"><expr pos:start="183:21" pos:end="183:21"><name pos:start="183:21" pos:end="183:21">p</name></expr>;</condition> <incr pos:start="183:24" pos:end="183:26"><expr pos:start="183:24" pos:end="183:26"><name pos:start="183:24" pos:end="183:24">i</name><operator pos:start="183:25" pos:end="183:26">++</operator></expr></incr>)</control> <block pos:start="183:29" pos:end="229:9">{<block_content pos:start="185:13" pos:end="227:23">

            <decl_stmt pos:start="185:13" pos:end="185:30"><decl pos:start="185:13" pos:end="185:21"><type pos:start="185:13" pos:end="185:15"><name pos:start="185:13" pos:end="185:15">int</name></type> <name pos:start="185:17" pos:end="185:21">start</name></decl>, <decl pos:start="185:24" pos:end="185:26"><type ref="prev" pos:start="185:13" pos:end="185:15"/><name pos:start="185:24" pos:end="185:26">end</name></decl>, <decl pos:start="185:29" pos:end="185:29"><type ref="prev" pos:start="185:13" pos:end="185:15"/><name pos:start="185:29" pos:end="185:29">q</name></decl>;</decl_stmt>

            <decl_stmt pos:start="187:13" pos:end="187:60"><decl pos:start="187:13" pos:end="187:59"><type pos:start="187:13" pos:end="187:15"><name pos:start="187:13" pos:end="187:15">int</name></type> <name pos:start="187:17" pos:end="187:17">e</name> <init pos:start="187:19" pos:end="187:59">= <expr pos:start="187:21" pos:end="187:59"><call pos:start="187:21" pos:end="187:59"><name pos:start="187:21" pos:end="187:26">sscanf</name><argument_list pos:start="187:27" pos:end="187:59">(<argument pos:start="187:28" pos:end="187:28"><expr pos:start="187:28" pos:end="187:28"><name pos:start="187:28" pos:end="187:28">p</name></expr></argument>, <argument pos:start="187:31" pos:end="187:40"><expr pos:start="187:31" pos:end="187:40"><literal type="string" pos:start="187:31" pos:end="187:40">"%d,%d,%d"</literal></expr></argument>, <argument pos:start="187:43" pos:end="187:48"><expr pos:start="187:43" pos:end="187:48"><operator pos:start="187:43" pos:end="187:43">&amp;</operator><name pos:start="187:44" pos:end="187:48">start</name></expr></argument>, <argument pos:start="187:51" pos:end="187:54"><expr pos:start="187:51" pos:end="187:54"><operator pos:start="187:51" pos:end="187:51">&amp;</operator><name pos:start="187:52" pos:end="187:54">end</name></expr></argument>, <argument pos:start="187:57" pos:end="187:58"><expr pos:start="187:57" pos:end="187:58"><operator pos:start="187:57" pos:end="187:57">&amp;</operator><name pos:start="187:58" pos:end="187:58">q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="189:13" pos:end="195:13"><if pos:start="189:13" pos:end="195:13">if <condition pos:start="189:16" pos:end="189:23">(<expr pos:start="189:17" pos:end="189:22"><name pos:start="189:17" pos:end="189:17">e</name> <operator pos:start="189:19" pos:end="189:20">!=</operator> <literal type="number" pos:start="189:22" pos:end="189:22">3</literal></expr>)</condition> <block pos:start="189:25" pos:end="195:13">{<block_content pos:start="191:17" pos:end="193:32">

                <expr_stmt pos:start="191:17" pos:end="191:74"><expr pos:start="191:17" pos:end="191:73"><call pos:start="191:17" pos:end="191:73"><name pos:start="191:17" pos:end="191:22">av_log</name><argument_list pos:start="191:23" pos:end="191:73">(<argument pos:start="191:24" pos:end="191:27"><expr pos:start="191:24" pos:end="191:27"><name pos:start="191:24" pos:end="191:27">NULL</name></expr></argument>, <argument pos:start="191:30" pos:end="191:41"><expr pos:start="191:30" pos:end="191:41"><name pos:start="191:30" pos:end="191:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="191:44" pos:end="191:72"><expr pos:start="191:44" pos:end="191:72"><literal type="string" pos:start="191:44" pos:end="191:72">"error parsing rc_override\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:32"><expr pos:start="193:17" pos:end="193:31"><call pos:start="193:17" pos:end="193:31"><name pos:start="193:17" pos:end="193:28">exit_program</name><argument_list pos:start="193:29" pos:end="193:31">(<argument pos:start="193:30" pos:end="193:30"><expr pos:start="193:30" pos:end="193:30"><literal type="number" pos:start="193:30" pos:end="193:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="197:13" pos:end="197:39">/* FIXME realloc failure */</comment>

            <expr_stmt pos:start="199:13" pos:end="203:60"><expr pos:start="199:13" pos:end="203:59"><name pos:start="199:13" pos:end="199:34"><name pos:start="199:13" pos:end="199:21">video_enc</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:34">rc_override</name></name> <operator pos:start="199:36" pos:end="199:36">=</operator>

                <call pos:start="201:17" pos:end="203:59"><name pos:start="201:17" pos:end="201:32">av_realloc_array</name><argument_list pos:start="201:33" pos:end="203:59">(<argument pos:start="201:34" pos:end="201:55"><expr pos:start="201:34" pos:end="201:55"><name pos:start="201:34" pos:end="201:55"><name pos:start="201:34" pos:end="201:42">video_enc</name><operator pos:start="201:43" pos:end="201:44">-&gt;</operator><name pos:start="201:45" pos:end="201:55">rc_override</name></name></expr></argument>,

                                 <argument pos:start="203:34" pos:end="203:38"><expr pos:start="203:34" pos:end="203:38"><name pos:start="203:34" pos:end="203:34">i</name> <operator pos:start="203:36" pos:end="203:36">+</operator> <literal type="number" pos:start="203:38" pos:end="203:38">1</literal></expr></argument>, <argument pos:start="203:41" pos:end="203:58"><expr pos:start="203:41" pos:end="203:58"><sizeof pos:start="203:41" pos:end="203:58">sizeof<argument_list pos:start="203:47" pos:end="203:58">(<argument pos:start="203:48" pos:end="203:57"><expr pos:start="203:48" pos:end="203:57"><name pos:start="203:48" pos:end="203:57">RcOverride</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:58"><expr pos:start="205:13" pos:end="205:57"><name pos:start="205:13" pos:end="205:37"><name pos:start="205:13" pos:end="205:21">video_enc</name><operator pos:start="205:22" pos:end="205:23">-&gt;</operator><name pos:start="205:24" pos:end="205:34">rc_override</name><index pos:start="205:35" pos:end="205:37">[<expr pos:start="205:36" pos:end="205:36"><name pos:start="205:36" pos:end="205:36">i</name></expr>]</index></name><operator pos:start="205:38" pos:end="205:38">.</operator><name pos:start="205:39" pos:end="205:49">start_frame</name> <operator pos:start="205:51" pos:end="205:51">=</operator> <name pos:start="205:53" pos:end="205:57">start</name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:56"><expr pos:start="207:13" pos:end="207:55"><name pos:start="207:13" pos:end="207:37"><name pos:start="207:13" pos:end="207:21">video_enc</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:34">rc_override</name><index pos:start="207:35" pos:end="207:37">[<expr pos:start="207:36" pos:end="207:36"><name pos:start="207:36" pos:end="207:36">i</name></expr>]</index></name><operator pos:start="207:38" pos:end="207:38">.</operator><name pos:start="207:39" pos:end="207:47">end_frame</name>   <operator pos:start="207:51" pos:end="207:51">=</operator> <name pos:start="207:53" pos:end="207:55">end</name></expr>;</expr_stmt>

            <if_stmt pos:start="209:13" pos:end="223:13"><if pos:start="209:13" pos:end="215:13">if <condition pos:start="209:16" pos:end="209:22">(<expr pos:start="209:17" pos:end="209:21"><name pos:start="209:17" pos:end="209:17">q</name> <operator pos:start="209:19" pos:end="209:19">&gt;</operator> <literal type="number" pos:start="209:21" pos:end="209:21">0</literal></expr>)</condition> <block pos:start="209:24" pos:end="215:13">{<block_content pos:start="211:17" pos:end="213:63">

                <expr_stmt pos:start="211:17" pos:end="211:61"><expr pos:start="211:17" pos:end="211:60"><name pos:start="211:17" pos:end="211:41"><name pos:start="211:17" pos:end="211:25">video_enc</name><operator pos:start="211:26" pos:end="211:27">-&gt;</operator><name pos:start="211:28" pos:end="211:38">rc_override</name><index pos:start="211:39" pos:end="211:41">[<expr pos:start="211:40" pos:end="211:40"><name pos:start="211:40" pos:end="211:40">i</name></expr>]</index></name><operator pos:start="211:42" pos:end="211:42">.</operator><name pos:start="211:43" pos:end="211:48">qscale</name>         <operator pos:start="211:58" pos:end="211:58">=</operator> <name pos:start="211:60" pos:end="211:60">q</name></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:63"><expr pos:start="213:17" pos:end="213:62"><name pos:start="213:17" pos:end="213:41"><name pos:start="213:17" pos:end="213:25">video_enc</name><operator pos:start="213:26" pos:end="213:27">-&gt;</operator><name pos:start="213:28" pos:end="213:38">rc_override</name><index pos:start="213:39" pos:end="213:41">[<expr pos:start="213:40" pos:end="213:40"><name pos:start="213:40" pos:end="213:40">i</name></expr>]</index></name><operator pos:start="213:42" pos:end="213:42">.</operator><name pos:start="213:43" pos:end="213:56">quality_factor</name> <operator pos:start="213:58" pos:end="213:58">=</operator> <literal type="number" pos:start="213:60" pos:end="213:62">1.0</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="217:13" pos:end="223:13">else <block pos:start="217:18" pos:end="223:13">{<block_content pos:start="219:17" pos:end="221:68">

                <expr_stmt pos:start="219:17" pos:end="219:61"><expr pos:start="219:17" pos:end="219:60"><name pos:start="219:17" pos:end="219:41"><name pos:start="219:17" pos:end="219:25">video_enc</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:38">rc_override</name><index pos:start="219:39" pos:end="219:41">[<expr pos:start="219:40" pos:end="219:40"><name pos:start="219:40" pos:end="219:40">i</name></expr>]</index></name><operator pos:start="219:42" pos:end="219:42">.</operator><name pos:start="219:43" pos:end="219:48">qscale</name>         <operator pos:start="219:58" pos:end="219:58">=</operator> <literal type="number" pos:start="219:60" pos:end="219:60">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:68"><expr pos:start="221:17" pos:end="221:67"><name pos:start="221:17" pos:end="221:41"><name pos:start="221:17" pos:end="221:25">video_enc</name><operator pos:start="221:26" pos:end="221:27">-&gt;</operator><name pos:start="221:28" pos:end="221:38">rc_override</name><index pos:start="221:39" pos:end="221:41">[<expr pos:start="221:40" pos:end="221:40"><name pos:start="221:40" pos:end="221:40">i</name></expr>]</index></name><operator pos:start="221:42" pos:end="221:42">.</operator><name pos:start="221:43" pos:end="221:56">quality_factor</name> <operator pos:start="221:58" pos:end="221:58">=</operator> <operator pos:start="221:60" pos:end="221:60">-</operator><name pos:start="221:61" pos:end="221:61">q</name><operator pos:start="221:62" pos:end="221:62">/</operator><literal type="number" pos:start="221:63" pos:end="221:67">100.0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:31"><expr pos:start="225:13" pos:end="225:30"><name pos:start="225:13" pos:end="225:13">p</name> <operator pos:start="225:15" pos:end="225:15">=</operator> <call pos:start="225:17" pos:end="225:30"><name pos:start="225:17" pos:end="225:22">strchr</name><argument_list pos:start="225:23" pos:end="225:30">(<argument pos:start="225:24" pos:end="225:24"><expr pos:start="225:24" pos:end="225:24"><name pos:start="225:24" pos:end="225:24">p</name></expr></argument>, <argument pos:start="225:27" pos:end="225:29"><expr pos:start="225:27" pos:end="225:29"><literal type="char" pos:start="225:27" pos:end="225:29">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="227:13" pos:end="227:23"><if pos:start="227:13" pos:end="227:23">if <condition pos:start="227:16" pos:end="227:18">(<expr pos:start="227:17" pos:end="227:17"><name pos:start="227:17" pos:end="227:17">p</name></expr>)</condition><block type="pseudo" pos:start="227:20" pos:end="227:23"><block_content pos:start="227:20" pos:end="227:23"> <expr_stmt pos:start="227:20" pos:end="227:23"><expr pos:start="227:20" pos:end="227:22"><name pos:start="227:20" pos:end="227:20">p</name><operator pos:start="227:21" pos:end="227:22">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="231:9" pos:end="231:41"><expr pos:start="231:9" pos:end="231:40"><name pos:start="231:9" pos:end="231:36"><name pos:start="231:9" pos:end="231:17">video_enc</name><operator pos:start="231:18" pos:end="231:19">-&gt;</operator><name pos:start="231:20" pos:end="231:36">rc_override_count</name></name> <operator pos:start="231:38" pos:end="231:38">=</operator> <name pos:start="231:40" pos:end="231:40">i</name></expr>;</expr_stmt>



        <if_stmt pos:start="235:9" pos:end="237:47"><if pos:start="235:9" pos:end="237:47">if <condition pos:start="235:12" pos:end="235:20">(<expr pos:start="235:13" pos:end="235:19"><name pos:start="235:13" pos:end="235:19">do_psnr</name></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:47"><block_content pos:start="237:13" pos:end="237:47">

            <expr_stmt pos:start="237:13" pos:end="237:47"><expr pos:start="237:13" pos:end="237:46"><name pos:start="237:13" pos:end="237:28"><name pos:start="237:13" pos:end="237:21">video_enc</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:28">flags</name></name><operator pos:start="237:29" pos:end="237:30">|=</operator> <name pos:start="237:32" pos:end="237:46">CODEC_FLAG_PSNR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="241:9" pos:end="241:27">/* two pass mode */</comment>

        <expr_stmt pos:start="243:9" pos:end="243:55"><expr pos:start="243:9" pos:end="243:54"><call pos:start="243:9" pos:end="243:54"><name pos:start="243:9" pos:end="243:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="243:29" pos:end="243:54">(<argument pos:start="243:30" pos:end="243:33"><expr pos:start="243:30" pos:end="243:33"><name pos:start="243:30" pos:end="243:33">pass</name></expr></argument>, <argument pos:start="243:36" pos:end="243:36"><expr pos:start="243:36" pos:end="243:36"><name pos:start="243:36" pos:end="243:36">i</name></expr></argument>, <argument pos:start="243:39" pos:end="243:45"><expr pos:start="243:39" pos:end="243:45"><name pos:start="243:39" pos:end="243:45">do_pass</name></expr></argument>, <argument pos:start="243:48" pos:end="243:49"><expr pos:start="243:48" pos:end="243:49"><name pos:start="243:48" pos:end="243:49">oc</name></expr></argument>, <argument pos:start="243:52" pos:end="243:53"><expr pos:start="243:52" pos:end="243:53"><name pos:start="243:52" pos:end="243:53">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="245:9" pos:end="263:9"><if pos:start="245:9" pos:end="263:9">if <condition pos:start="245:12" pos:end="245:20">(<expr pos:start="245:13" pos:end="245:19"><name pos:start="245:13" pos:end="245:19">do_pass</name></expr>)</condition> <block pos:start="245:22" pos:end="263:9">{<block_content pos:start="247:13" pos:end="261:13">

            <if_stmt pos:start="247:13" pos:end="253:13"><if pos:start="247:13" pos:end="253:13">if <condition pos:start="247:16" pos:end="247:28">(<expr pos:start="247:17" pos:end="247:27"><name pos:start="247:17" pos:end="247:23">do_pass</name> <operator pos:start="247:25" pos:end="247:25">&amp;</operator> <literal type="number" pos:start="247:27" pos:end="247:27">1</literal></expr>)</condition> <block pos:start="247:30" pos:end="253:13">{<block_content pos:start="249:17" pos:end="251:83">

                <expr_stmt pos:start="249:17" pos:end="249:53"><expr pos:start="249:17" pos:end="249:52"><name pos:start="249:17" pos:end="249:32"><name pos:start="249:17" pos:end="249:25">video_enc</name><operator pos:start="249:26" pos:end="249:27">-&gt;</operator><name pos:start="249:28" pos:end="249:32">flags</name></name> <operator pos:start="249:34" pos:end="249:35">|=</operator> <name pos:start="249:37" pos:end="249:52">CODEC_FLAG_PASS1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:83"><expr pos:start="251:17" pos:end="251:82"><call pos:start="251:17" pos:end="251:82"><name pos:start="251:17" pos:end="251:27">av_dict_set</name><argument_list pos:start="251:28" pos:end="251:82">(<argument pos:start="251:29" pos:end="251:46"><expr pos:start="251:29" pos:end="251:46"><operator pos:start="251:29" pos:end="251:29">&amp;</operator><name pos:start="251:30" pos:end="251:46"><name pos:start="251:30" pos:end="251:32">ost</name><operator pos:start="251:33" pos:end="251:34">-&gt;</operator><name pos:start="251:35" pos:end="251:46">encoder_opts</name></name></expr></argument>, <argument pos:start="251:49" pos:end="251:55"><expr pos:start="251:49" pos:end="251:55"><literal type="string" pos:start="251:49" pos:end="251:55">"flags"</literal></expr></argument>, <argument pos:start="251:58" pos:end="251:65"><expr pos:start="251:58" pos:end="251:65"><literal type="string" pos:start="251:58" pos:end="251:65">"+pass1"</literal></expr></argument>, <argument pos:start="251:68" pos:end="251:81"><expr pos:start="251:68" pos:end="251:81"><name pos:start="251:68" pos:end="251:81">AV_DICT_APPEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="255:13" pos:end="261:13"><if pos:start="255:13" pos:end="261:13">if <condition pos:start="255:16" pos:end="255:28">(<expr pos:start="255:17" pos:end="255:27"><name pos:start="255:17" pos:end="255:23">do_pass</name> <operator pos:start="255:25" pos:end="255:25">&amp;</operator> <literal type="number" pos:start="255:27" pos:end="255:27">2</literal></expr>)</condition> <block pos:start="255:30" pos:end="261:13">{<block_content pos:start="257:17" pos:end="259:83">

                <expr_stmt pos:start="257:17" pos:end="257:53"><expr pos:start="257:17" pos:end="257:52"><name pos:start="257:17" pos:end="257:32"><name pos:start="257:17" pos:end="257:25">video_enc</name><operator pos:start="257:26" pos:end="257:27">-&gt;</operator><name pos:start="257:28" pos:end="257:32">flags</name></name> <operator pos:start="257:34" pos:end="257:35">|=</operator> <name pos:start="257:37" pos:end="257:52">CODEC_FLAG_PASS2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="259:17" pos:end="259:83"><expr pos:start="259:17" pos:end="259:82"><call pos:start="259:17" pos:end="259:82"><name pos:start="259:17" pos:end="259:27">av_dict_set</name><argument_list pos:start="259:28" pos:end="259:82">(<argument pos:start="259:29" pos:end="259:46"><expr pos:start="259:29" pos:end="259:46"><operator pos:start="259:29" pos:end="259:29">&amp;</operator><name pos:start="259:30" pos:end="259:46"><name pos:start="259:30" pos:end="259:32">ost</name><operator pos:start="259:33" pos:end="259:34">-&gt;</operator><name pos:start="259:35" pos:end="259:46">encoder_opts</name></name></expr></argument>, <argument pos:start="259:49" pos:end="259:55"><expr pos:start="259:49" pos:end="259:55"><literal type="string" pos:start="259:49" pos:end="259:55">"flags"</literal></expr></argument>, <argument pos:start="259:58" pos:end="259:65"><expr pos:start="259:58" pos:end="259:65"><literal type="string" pos:start="259:58" pos:end="259:65">"+pass2"</literal></expr></argument>, <argument pos:start="259:68" pos:end="259:81"><expr pos:start="259:68" pos:end="259:81"><name pos:start="259:68" pos:end="259:81">AV_DICT_APPEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="267:9" pos:end="267:77"><expr pos:start="267:9" pos:end="267:76"><call pos:start="267:9" pos:end="267:76"><name pos:start="267:9" pos:end="267:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="267:29" pos:end="267:76">(<argument pos:start="267:30" pos:end="267:41"><expr pos:start="267:30" pos:end="267:41"><name pos:start="267:30" pos:end="267:41">passlogfiles</name></expr></argument>, <argument pos:start="267:44" pos:end="267:46"><expr pos:start="267:44" pos:end="267:46"><name pos:start="267:44" pos:end="267:46">str</name></expr></argument>, <argument pos:start="267:49" pos:end="267:67"><expr pos:start="267:49" pos:end="267:67"><name pos:start="267:49" pos:end="267:67"><name pos:start="267:49" pos:end="267:51">ost</name><operator pos:start="267:52" pos:end="267:53">-&gt;</operator><name pos:start="267:54" pos:end="267:67">logfile_prefix</name></name></expr></argument>, <argument pos:start="267:70" pos:end="267:71"><expr pos:start="267:70" pos:end="267:71"><name pos:start="267:70" pos:end="267:71">oc</name></expr></argument>, <argument pos:start="267:74" pos:end="267:75"><expr pos:start="267:74" pos:end="267:75"><name pos:start="267:74" pos:end="267:75">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="269:9" pos:end="273:28"><if pos:start="269:9" pos:end="273:28">if <condition pos:start="269:12" pos:end="271:68">(<expr pos:start="269:13" pos:end="271:67"><name pos:start="269:13" pos:end="269:31"><name pos:start="269:13" pos:end="269:15">ost</name><operator pos:start="269:16" pos:end="269:17">-&gt;</operator><name pos:start="269:18" pos:end="269:31">logfile_prefix</name></name> <operator pos:start="269:33" pos:end="269:34">&amp;&amp;</operator>

            <operator pos:start="271:13" pos:end="271:13">!</operator><operator pos:start="271:14" pos:end="271:14">(</operator><name pos:start="271:15" pos:end="271:33"><name pos:start="271:15" pos:end="271:17">ost</name><operator pos:start="271:18" pos:end="271:19">-&gt;</operator><name pos:start="271:20" pos:end="271:33">logfile_prefix</name></name> <operator pos:start="271:35" pos:end="271:35">=</operator> <call pos:start="271:37" pos:end="271:66"><name pos:start="271:37" pos:end="271:45">av_strdup</name><argument_list pos:start="271:46" pos:end="271:66">(<argument pos:start="271:47" pos:end="271:65"><expr pos:start="271:47" pos:end="271:65"><name pos:start="271:47" pos:end="271:65"><name pos:start="271:47" pos:end="271:49">ost</name><operator pos:start="271:50" pos:end="271:51">-&gt;</operator><name pos:start="271:52" pos:end="271:65">logfile_prefix</name></name></expr></argument>)</argument_list></call><operator pos:start="271:67" pos:end="271:67">)</operator></expr>)</condition><block type="pseudo" pos:start="273:13" pos:end="273:28"><block_content pos:start="273:13" pos:end="273:28">

            <expr_stmt pos:start="273:13" pos:end="273:28"><expr pos:start="273:13" pos:end="273:27"><call pos:start="273:13" pos:end="273:27"><name pos:start="273:13" pos:end="273:24">exit_program</name><argument_list pos:start="273:25" pos:end="273:27">(<argument pos:start="273:26" pos:end="273:26"><expr pos:start="273:26" pos:end="273:26"><literal type="number" pos:start="273:26" pos:end="273:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="277:9" pos:end="277:84"><expr pos:start="277:9" pos:end="277:83"><call pos:start="277:9" pos:end="277:83"><name pos:start="277:9" pos:end="277:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="277:29" pos:end="277:83">(<argument pos:start="277:30" pos:end="277:46"><expr pos:start="277:30" pos:end="277:46"><name pos:start="277:30" pos:end="277:46">forced_key_frames</name></expr></argument>, <argument pos:start="277:49" pos:end="277:51"><expr pos:start="277:49" pos:end="277:51"><name pos:start="277:49" pos:end="277:51">str</name></expr></argument>, <argument pos:start="277:54" pos:end="277:74"><expr pos:start="277:54" pos:end="277:74"><name pos:start="277:54" pos:end="277:74"><name pos:start="277:54" pos:end="277:56">ost</name><operator pos:start="277:57" pos:end="277:58">-&gt;</operator><name pos:start="277:59" pos:end="277:74">forced_keyframes</name></name></expr></argument>, <argument pos:start="277:77" pos:end="277:78"><expr pos:start="277:77" pos:end="277:78"><name pos:start="277:77" pos:end="277:78">oc</name></expr></argument>, <argument pos:start="277:81" pos:end="277:82"><expr pos:start="277:81" pos:end="277:82"><name pos:start="277:81" pos:end="277:82">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="279:9" pos:end="281:69"><if pos:start="279:9" pos:end="281:69">if <condition pos:start="279:12" pos:end="279:34">(<expr pos:start="279:13" pos:end="279:33"><name pos:start="279:13" pos:end="279:33"><name pos:start="279:13" pos:end="279:15">ost</name><operator pos:start="279:16" pos:end="279:17">-&gt;</operator><name pos:start="279:18" pos:end="279:33">forced_keyframes</name></name></expr>)</condition><block type="pseudo" pos:start="281:13" pos:end="281:69"><block_content pos:start="281:13" pos:end="281:69">

            <expr_stmt pos:start="281:13" pos:end="281:69"><expr pos:start="281:13" pos:end="281:68"><name pos:start="281:13" pos:end="281:33"><name pos:start="281:13" pos:end="281:15">ost</name><operator pos:start="281:16" pos:end="281:17">-&gt;</operator><name pos:start="281:18" pos:end="281:33">forced_keyframes</name></name> <operator pos:start="281:35" pos:end="281:35">=</operator> <call pos:start="281:37" pos:end="281:68"><name pos:start="281:37" pos:end="281:45">av_strdup</name><argument_list pos:start="281:46" pos:end="281:68">(<argument pos:start="281:47" pos:end="281:67"><expr pos:start="281:47" pos:end="281:67"><name pos:start="281:47" pos:end="281:67"><name pos:start="281:47" pos:end="281:49">ost</name><operator pos:start="281:50" pos:end="281:51">-&gt;</operator><name pos:start="281:52" pos:end="281:67">forced_keyframes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="285:9" pos:end="285:67"><expr pos:start="285:9" pos:end="285:66"><call pos:start="285:9" pos:end="285:66"><name pos:start="285:9" pos:end="285:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="285:29" pos:end="285:66">(<argument pos:start="285:30" pos:end="285:38"><expr pos:start="285:30" pos:end="285:38"><name pos:start="285:30" pos:end="285:38">force_fps</name></expr></argument>, <argument pos:start="285:41" pos:end="285:41"><expr pos:start="285:41" pos:end="285:41"><name pos:start="285:41" pos:end="285:41">i</name></expr></argument>, <argument pos:start="285:44" pos:end="285:57"><expr pos:start="285:44" pos:end="285:57"><name pos:start="285:44" pos:end="285:57"><name pos:start="285:44" pos:end="285:46">ost</name><operator pos:start="285:47" pos:end="285:48">-&gt;</operator><name pos:start="285:49" pos:end="285:57">force_fps</name></name></expr></argument>, <argument pos:start="285:60" pos:end="285:61"><expr pos:start="285:60" pos:end="285:61"><name pos:start="285:60" pos:end="285:61">oc</name></expr></argument>, <argument pos:start="285:64" pos:end="285:65"><expr pos:start="285:64" pos:end="285:65"><name pos:start="285:64" pos:end="285:65">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="289:9" pos:end="289:34"><expr pos:start="289:9" pos:end="289:33"><name pos:start="289:9" pos:end="289:28"><name pos:start="289:9" pos:end="289:11">ost</name><operator pos:start="289:12" pos:end="289:13">-&gt;</operator><name pos:start="289:14" pos:end="289:28">top_field_first</name></name> <operator pos:start="289:30" pos:end="289:30">=</operator> <operator pos:start="289:32" pos:end="289:32">-</operator><literal type="number" pos:start="289:33" pos:end="289:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:79"><expr pos:start="291:9" pos:end="291:78"><call pos:start="291:9" pos:end="291:78"><name pos:start="291:9" pos:end="291:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="291:29" pos:end="291:78">(<argument pos:start="291:30" pos:end="291:44"><expr pos:start="291:30" pos:end="291:44"><name pos:start="291:30" pos:end="291:44">top_field_first</name></expr></argument>, <argument pos:start="291:47" pos:end="291:47"><expr pos:start="291:47" pos:end="291:47"><name pos:start="291:47" pos:end="291:47">i</name></expr></argument>, <argument pos:start="291:50" pos:end="291:69"><expr pos:start="291:50" pos:end="291:69"><name pos:start="291:50" pos:end="291:69"><name pos:start="291:50" pos:end="291:52">ost</name><operator pos:start="291:53" pos:end="291:54">-&gt;</operator><name pos:start="291:55" pos:end="291:69">top_field_first</name></name></expr></argument>, <argument pos:start="291:72" pos:end="291:73"><expr pos:start="291:72" pos:end="291:73"><name pos:start="291:72" pos:end="291:73">oc</name></expr></argument>, <argument pos:start="291:76" pos:end="291:77"><expr pos:start="291:76" pos:end="291:77"><name pos:start="291:76" pos:end="291:77">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





        <expr_stmt pos:start="297:9" pos:end="297:52"><expr pos:start="297:9" pos:end="297:51"><name pos:start="297:9" pos:end="297:21"><name pos:start="297:9" pos:end="297:11">ost</name><operator pos:start="297:12" pos:end="297:13">-&gt;</operator><name pos:start="297:14" pos:end="297:21">avfilter</name></name> <operator pos:start="297:23" pos:end="297:23">=</operator> <call pos:start="297:25" pos:end="297:51"><name pos:start="297:25" pos:end="297:39">get_ost_filters</name><argument_list pos:start="297:40" pos:end="297:51">(<argument pos:start="297:41" pos:end="297:41"><expr pos:start="297:41" pos:end="297:41"><name pos:start="297:41" pos:end="297:41">o</name></expr></argument>, <argument pos:start="297:44" pos:end="297:45"><expr pos:start="297:44" pos:end="297:45"><name pos:start="297:44" pos:end="297:45">oc</name></expr></argument>, <argument pos:start="297:48" pos:end="297:50"><expr pos:start="297:48" pos:end="297:50"><name pos:start="297:48" pos:end="297:50">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="299:9" pos:end="301:28"><if pos:start="299:9" pos:end="301:28">if <condition pos:start="299:12" pos:end="299:27">(<expr pos:start="299:13" pos:end="299:26"><operator pos:start="299:13" pos:end="299:13">!</operator><name pos:start="299:14" pos:end="299:26"><name pos:start="299:14" pos:end="299:16">ost</name><operator pos:start="299:17" pos:end="299:18">-&gt;</operator><name pos:start="299:19" pos:end="299:26">avfilter</name></name></expr>)</condition><block type="pseudo" pos:start="301:13" pos:end="301:28"><block_content pos:start="301:13" pos:end="301:28">

            <expr_stmt pos:start="301:13" pos:end="301:28"><expr pos:start="301:13" pos:end="301:27"><call pos:start="301:13" pos:end="301:27"><name pos:start="301:13" pos:end="301:24">exit_program</name><argument_list pos:start="301:25" pos:end="301:27">(<argument pos:start="301:26" pos:end="301:26"><expr pos:start="301:26" pos:end="301:26"><literal type="number" pos:start="301:26" pos:end="301:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="303:7" pos:end="307:5">else <block pos:start="303:12" pos:end="307:5">{<block_content pos:start="305:9" pos:end="305:99">

        <expr_stmt pos:start="305:9" pos:end="305:99"><expr pos:start="305:9" pos:end="305:98"><call pos:start="305:9" pos:end="305:98"><name pos:start="305:9" pos:end="305:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="305:29" pos:end="305:98">(<argument pos:start="305:30" pos:end="305:54"><expr pos:start="305:30" pos:end="305:54"><name pos:start="305:30" pos:end="305:54">copy_initial_nonkeyframes</name></expr></argument>, <argument pos:start="305:57" pos:end="305:57"><expr pos:start="305:57" pos:end="305:57"><name pos:start="305:57" pos:end="305:57">i</name></expr></argument>, <argument pos:start="305:60" pos:end="305:89"><expr pos:start="305:60" pos:end="305:89"><name pos:start="305:60" pos:end="305:89"><name pos:start="305:60" pos:end="305:62">ost</name><operator pos:start="305:63" pos:end="305:64">-&gt;</operator><name pos:start="305:65" pos:end="305:89">copy_initial_nonkeyframes</name></name></expr></argument>, <argument pos:start="305:92" pos:end="305:93"><expr pos:start="305:92" pos:end="305:93"><name pos:start="305:92" pos:end="305:93">oc</name></expr></argument> ,<argument pos:start="305:96" pos:end="305:97"><expr pos:start="305:96" pos:end="305:97"><name pos:start="305:96" pos:end="305:97">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="311:5" pos:end="313:65"><if pos:start="311:5" pos:end="313:65">if <condition pos:start="311:8" pos:end="311:25">(<expr pos:start="311:9" pos:end="311:24"><name pos:start="311:9" pos:end="311:24"><name pos:start="311:9" pos:end="311:11">ost</name><operator pos:start="311:12" pos:end="311:13">-&gt;</operator><name pos:start="311:14" pos:end="311:24">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="313:9" pos:end="313:65"><block_content pos:start="313:9" pos:end="313:65">

        <expr_stmt pos:start="313:9" pos:end="313:65"><expr pos:start="313:9" pos:end="313:64"><call pos:start="313:9" pos:end="313:64"><name pos:start="313:9" pos:end="313:32">check_streamcopy_filters</name><argument_list pos:start="313:33" pos:end="313:64">(<argument pos:start="313:34" pos:end="313:34"><expr pos:start="313:34" pos:end="313:34"><name pos:start="313:34" pos:end="313:34">o</name></expr></argument>, <argument pos:start="313:37" pos:end="313:38"><expr pos:start="313:37" pos:end="313:38"><name pos:start="313:37" pos:end="313:38">oc</name></expr></argument>, <argument pos:start="313:41" pos:end="313:43"><expr pos:start="313:41" pos:end="313:43"><name pos:start="313:41" pos:end="313:43">ost</name></expr></argument>, <argument pos:start="313:46" pos:end="313:63"><expr pos:start="313:46" pos:end="313:63"><name pos:start="313:46" pos:end="313:63">AVMEDIA_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="317:5" pos:end="317:15">return <expr pos:start="317:12" pos:end="317:14"><name pos:start="317:12" pos:end="317:14">ost</name></expr>;</return>

</block_content>}</block></function>
</unit>
