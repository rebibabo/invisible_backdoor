<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22925.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">_decode_exponents</name><parameter_list pos:start="1:29" pos:end="1:99">(<parameter pos:start="1:30" pos:end="1:39"><decl pos:start="1:30" pos:end="1:39"><type pos:start="1:30" pos:end="1:39"><name pos:start="1:30" pos:end="1:32">int</name></type> <name pos:start="1:34" pos:end="1:39">expstr</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:50"><decl pos:start="1:42" pos:end="1:50"><type pos:start="1:42" pos:end="1:50"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:50">ngrps</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:66"><decl pos:start="1:53" pos:end="1:66"><type pos:start="1:53" pos:end="1:66"><name pos:start="1:53" pos:end="1:59">uint8_t</name></type> <name pos:start="1:61" pos:end="1:66">absexp</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:82"><decl pos:start="1:69" pos:end="1:82"><type pos:start="1:69" pos:end="1:82"><name pos:start="1:69" pos:end="1:75">uint8_t</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:82">gexps</name></decl></parameter>, <parameter pos:start="1:85" pos:end="1:98"><decl pos:start="1:85" pos:end="1:98"><type pos:start="1:85" pos:end="1:98"><name pos:start="1:85" pos:end="1:91">uint8_t</name> <modifier pos:start="1:93" pos:end="1:93">*</modifier></type><name pos:start="1:94" pos:end="1:98">dexps</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">exps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name> <init pos:start="7:11" pos:end="7:13">= <expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="85:5">while <condition pos:start="11:11" pos:end="11:19">(<expr pos:start="11:12" pos:end="11:18"><name pos:start="11:12" pos:end="11:16">ngrps</name><operator pos:start="11:17" pos:end="11:18">--</operator></expr>)</condition> <block pos:start="11:21" pos:end="85:5">{<block_content pos:start="13:9" pos:end="83:9">

        <expr_stmt pos:start="13:9" pos:end="13:26"><expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:12">exps</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:25"><name pos:start="13:16" pos:end="13:20">gexps</name><index pos:start="13:21" pos:end="13:25">[<expr pos:start="13:22" pos:end="13:24"><name pos:start="13:22" pos:end="13:22">i</name><operator pos:start="13:23" pos:end="13:24">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:30"><expr pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:14">absexp</name> <operator pos:start="17:16" pos:end="17:17">+=</operator> <name pos:start="17:19" pos:end="17:29"><name pos:start="17:19" pos:end="17:23">exp_1</name><index pos:start="17:24" pos:end="17:29">[<expr pos:start="17:25" pos:end="17:28"><name pos:start="17:25" pos:end="17:28">exps</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><call pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:14">assert</name><argument_list pos:start="19:15" pos:end="19:28">(<argument pos:start="19:16" pos:end="19:27"><expr pos:start="19:16" pos:end="19:27"><name pos:start="19:16" pos:end="19:21">absexp</name> <operator pos:start="19:23" pos:end="19:24">&lt;=</operator> <literal type="number" pos:start="19:26" pos:end="19:27">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="21:9" pos:end="37:9">switch <condition pos:start="21:16" pos:end="21:23">(<expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">expstr</name></expr>)</condition> <block pos:start="21:25" pos:end="37:9">{<block_content pos:start="23:13" pos:end="35:36">

            <case pos:start="23:13" pos:end="23:32">case <expr pos:start="23:18" pos:end="23:31"><name pos:start="23:18" pos:end="23:31">AC3_EXPSTR_D45</name></expr>:</case>

                <expr_stmt pos:start="25:17" pos:end="25:36"><expr pos:start="25:17" pos:end="25:35"><operator pos:start="25:17" pos:end="25:17">*</operator><operator pos:start="25:18" pos:end="25:18">(</operator><name pos:start="25:19" pos:end="25:23">dexps</name><operator pos:start="25:24" pos:end="25:25">++</operator><operator pos:start="25:26" pos:end="25:26">)</operator> <operator pos:start="25:28" pos:end="25:28">=</operator> <name pos:start="25:30" pos:end="25:35">absexp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:36"><expr pos:start="27:17" pos:end="27:35"><operator pos:start="27:17" pos:end="27:17">*</operator><operator pos:start="27:18" pos:end="27:18">(</operator><name pos:start="27:19" pos:end="27:23">dexps</name><operator pos:start="27:24" pos:end="27:25">++</operator><operator pos:start="27:26" pos:end="27:26">)</operator> <operator pos:start="27:28" pos:end="27:28">=</operator> <name pos:start="27:30" pos:end="27:35">absexp</name></expr>;</expr_stmt>

            <case pos:start="29:13" pos:end="29:32">case <expr pos:start="29:18" pos:end="29:31"><name pos:start="29:18" pos:end="29:31">AC3_EXPSTR_D25</name></expr>:</case>

                <expr_stmt pos:start="31:17" pos:end="31:36"><expr pos:start="31:17" pos:end="31:35"><operator pos:start="31:17" pos:end="31:17">*</operator><operator pos:start="31:18" pos:end="31:18">(</operator><name pos:start="31:19" pos:end="31:23">dexps</name><operator pos:start="31:24" pos:end="31:25">++</operator><operator pos:start="31:26" pos:end="31:26">)</operator> <operator pos:start="31:28" pos:end="31:28">=</operator> <name pos:start="31:30" pos:end="31:35">absexp</name></expr>;</expr_stmt>

            <case pos:start="33:13" pos:end="33:32">case <expr pos:start="33:18" pos:end="33:31"><name pos:start="33:18" pos:end="33:31">AC3_EXPSTR_D15</name></expr>:</case>

                <expr_stmt pos:start="35:17" pos:end="35:36"><expr pos:start="35:17" pos:end="35:35"><operator pos:start="35:17" pos:end="35:17">*</operator><operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:23">dexps</name><operator pos:start="35:24" pos:end="35:25">++</operator><operator pos:start="35:26" pos:end="35:26">)</operator> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:35">absexp</name></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:14">absexp</name> <operator pos:start="39:16" pos:end="39:17">+=</operator> <name pos:start="39:19" pos:end="39:29"><name pos:start="39:19" pos:end="39:23">exp_2</name><index pos:start="39:24" pos:end="39:29">[<expr pos:start="39:25" pos:end="39:28"><name pos:start="39:25" pos:end="39:28">exps</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:29"><expr pos:start="41:9" pos:end="41:28"><call pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:14">assert</name><argument_list pos:start="41:15" pos:end="41:28">(<argument pos:start="41:16" pos:end="41:27"><expr pos:start="41:16" pos:end="41:27"><name pos:start="41:16" pos:end="41:21">absexp</name> <operator pos:start="41:23" pos:end="41:24">&lt;=</operator> <literal type="number" pos:start="41:26" pos:end="41:27">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="43:9" pos:end="59:9">switch <condition pos:start="43:16" pos:end="43:23">(<expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:22">expstr</name></expr>)</condition> <block pos:start="43:25" pos:end="59:9">{<block_content pos:start="45:13" pos:end="57:36">

            <case pos:start="45:13" pos:end="45:32">case <expr pos:start="45:18" pos:end="45:31"><name pos:start="45:18" pos:end="45:31">AC3_EXPSTR_D45</name></expr>:</case>

                <expr_stmt pos:start="47:17" pos:end="47:36"><expr pos:start="47:17" pos:end="47:35"><operator pos:start="47:17" pos:end="47:17">*</operator><operator pos:start="47:18" pos:end="47:18">(</operator><name pos:start="47:19" pos:end="47:23">dexps</name><operator pos:start="47:24" pos:end="47:25">++</operator><operator pos:start="47:26" pos:end="47:26">)</operator> <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:35">absexp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:36"><expr pos:start="49:17" pos:end="49:35"><operator pos:start="49:17" pos:end="49:17">*</operator><operator pos:start="49:18" pos:end="49:18">(</operator><name pos:start="49:19" pos:end="49:23">dexps</name><operator pos:start="49:24" pos:end="49:25">++</operator><operator pos:start="49:26" pos:end="49:26">)</operator> <operator pos:start="49:28" pos:end="49:28">=</operator> <name pos:start="49:30" pos:end="49:35">absexp</name></expr>;</expr_stmt>

            <case pos:start="51:13" pos:end="51:32">case <expr pos:start="51:18" pos:end="51:31"><name pos:start="51:18" pos:end="51:31">AC3_EXPSTR_D25</name></expr>:</case>

                <expr_stmt pos:start="53:17" pos:end="53:36"><expr pos:start="53:17" pos:end="53:35"><operator pos:start="53:17" pos:end="53:17">*</operator><operator pos:start="53:18" pos:end="53:18">(</operator><name pos:start="53:19" pos:end="53:23">dexps</name><operator pos:start="53:24" pos:end="53:25">++</operator><operator pos:start="53:26" pos:end="53:26">)</operator> <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:35">absexp</name></expr>;</expr_stmt>

            <case pos:start="55:13" pos:end="55:32">case <expr pos:start="55:18" pos:end="55:31"><name pos:start="55:18" pos:end="55:31">AC3_EXPSTR_D15</name></expr>:</case>

                <expr_stmt pos:start="57:17" pos:end="57:36"><expr pos:start="57:17" pos:end="57:35"><operator pos:start="57:17" pos:end="57:17">*</operator><operator pos:start="57:18" pos:end="57:18">(</operator><name pos:start="57:19" pos:end="57:23">dexps</name><operator pos:start="57:24" pos:end="57:25">++</operator><operator pos:start="57:26" pos:end="57:26">)</operator> <operator pos:start="57:28" pos:end="57:28">=</operator> <name pos:start="57:30" pos:end="57:35">absexp</name></expr>;</expr_stmt>

        </block_content>}</block></switch>



        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:14">absexp</name> <operator pos:start="63:16" pos:end="63:17">+=</operator> <name pos:start="63:19" pos:end="63:29"><name pos:start="63:19" pos:end="63:23">exp_3</name><index pos:start="63:24" pos:end="63:29">[<expr pos:start="63:25" pos:end="63:28"><name pos:start="63:25" pos:end="63:28">exps</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:29"><expr pos:start="65:9" pos:end="65:28"><call pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:14">assert</name><argument_list pos:start="65:15" pos:end="65:28">(<argument pos:start="65:16" pos:end="65:27"><expr pos:start="65:16" pos:end="65:27"><name pos:start="65:16" pos:end="65:21">absexp</name> <operator pos:start="65:23" pos:end="65:24">&lt;=</operator> <literal type="number" pos:start="65:26" pos:end="65:27">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="67:9" pos:end="83:9">switch <condition pos:start="67:16" pos:end="67:23">(<expr pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:22">expstr</name></expr>)</condition> <block pos:start="67:25" pos:end="83:9">{<block_content pos:start="69:13" pos:end="81:36">

            <case pos:start="69:13" pos:end="69:32">case <expr pos:start="69:18" pos:end="69:31"><name pos:start="69:18" pos:end="69:31">AC3_EXPSTR_D45</name></expr>:</case>

                <expr_stmt pos:start="71:17" pos:end="71:36"><expr pos:start="71:17" pos:end="71:35"><operator pos:start="71:17" pos:end="71:17">*</operator><operator pos:start="71:18" pos:end="71:18">(</operator><name pos:start="71:19" pos:end="71:23">dexps</name><operator pos:start="71:24" pos:end="71:25">++</operator><operator pos:start="71:26" pos:end="71:26">)</operator> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:35">absexp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:36"><expr pos:start="73:17" pos:end="73:35"><operator pos:start="73:17" pos:end="73:17">*</operator><operator pos:start="73:18" pos:end="73:18">(</operator><name pos:start="73:19" pos:end="73:23">dexps</name><operator pos:start="73:24" pos:end="73:25">++</operator><operator pos:start="73:26" pos:end="73:26">)</operator> <operator pos:start="73:28" pos:end="73:28">=</operator> <name pos:start="73:30" pos:end="73:35">absexp</name></expr>;</expr_stmt>

            <case pos:start="75:13" pos:end="75:32">case <expr pos:start="75:18" pos:end="75:31"><name pos:start="75:18" pos:end="75:31">AC3_EXPSTR_D25</name></expr>:</case>

                <expr_stmt pos:start="77:17" pos:end="77:36"><expr pos:start="77:17" pos:end="77:35"><operator pos:start="77:17" pos:end="77:17">*</operator><operator pos:start="77:18" pos:end="77:18">(</operator><name pos:start="77:19" pos:end="77:23">dexps</name><operator pos:start="77:24" pos:end="77:25">++</operator><operator pos:start="77:26" pos:end="77:26">)</operator> <operator pos:start="77:28" pos:end="77:28">=</operator> <name pos:start="77:30" pos:end="77:35">absexp</name></expr>;</expr_stmt>

            <case pos:start="79:13" pos:end="79:32">case <expr pos:start="79:18" pos:end="79:31"><name pos:start="79:18" pos:end="79:31">AC3_EXPSTR_D15</name></expr>:</case>

                <expr_stmt pos:start="81:17" pos:end="81:36"><expr pos:start="81:17" pos:end="81:35"><operator pos:start="81:17" pos:end="81:17">*</operator><operator pos:start="81:18" pos:end="81:18">(</operator><name pos:start="81:19" pos:end="81:23">dexps</name><operator pos:start="81:24" pos:end="81:25">++</operator><operator pos:start="81:26" pos:end="81:26">)</operator> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:35">absexp</name></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
