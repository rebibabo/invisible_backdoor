<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16631.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">virtio_serial_device_realize</name><parameter_list pos:start="1:41" pos:end="1:72">(<parameter pos:start="1:42" pos:end="1:57"><decl pos:start="1:42" pos:end="1:57"><type pos:start="1:42" pos:end="1:57"><name pos:start="1:42" pos:end="1:52">DeviceState</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">dev</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:64">Error</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier><modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:56">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VirtIODevice</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">vdev</name> <init pos:start="5:24" pos:end="5:43">= <expr pos:start="5:26" pos:end="5:43"><call pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">VIRTIO_DEVICE</name><argument_list pos:start="5:39" pos:end="5:43">(<argument pos:start="5:40" pos:end="5:42"><expr pos:start="5:40" pos:end="5:42"><name pos:start="5:40" pos:end="5:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIOSerial</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">vser</name> <init pos:start="7:24" pos:end="7:43">= <expr pos:start="7:26" pos:end="7:43"><call pos:start="7:26" pos:end="7:43"><name pos:start="7:26" pos:end="7:38">VIRTIO_SERIAL</name><argument_list pos:start="7:39" pos:end="7:43">(<argument pos:start="7:40" pos:end="7:42"><expr pos:start="7:40" pos:end="7:42"><name pos:start="7:40" pos:end="7:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:14">i</name></decl>, <decl pos:start="9:17" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:17" pos:end="9:35">max_supported_ports</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:43">(<expr pos:start="13:9" pos:end="13:42"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:42"><name pos:start="13:10" pos:end="13:13">vser</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:21">serial</name><operator pos:start="13:22" pos:end="13:22">.</operator><name pos:start="13:23" pos:end="13:42">max_virtserial_ports</name></name></expr>)</condition> <block pos:start="13:45" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:73"><expr pos:start="15:9" pos:end="15:72"><call pos:start="15:9" pos:end="15:72"><name pos:start="15:9" pos:end="15:18">error_setg</name><argument_list pos:start="15:19" pos:end="15:72">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">errp</name></expr></argument>, <argument pos:start="15:26" pos:end="15:71"><expr pos:start="15:26" pos:end="15:71"><literal type="string" pos:start="15:26" pos:end="15:71">"Maximum number of serial ports not specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:73">/* Each port takes 2 queues, and one pair is for the control queue */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:51"><expr pos:start="25:5" pos:end="25:50"><name pos:start="25:5" pos:end="25:23">max_supported_ports</name> <operator pos:start="25:25" pos:end="25:25">=</operator> <name pos:start="25:27" pos:end="25:42">VIRTIO_QUEUE_MAX</name> <operator pos:start="25:44" pos:end="25:44">/</operator> <literal type="number" pos:start="25:46" pos:end="25:48">2</literal> <operator pos:start="25:48" pos:end="25:48">-</operator> <literal type="number" pos:start="25:50" pos:end="25:50">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:64">(<expr pos:start="29:9" pos:end="29:63"><name pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:12">vser</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:20">serial</name><operator pos:start="29:21" pos:end="29:21">.</operator><name pos:start="29:22" pos:end="29:41">max_virtserial_ports</name></name> <operator pos:start="29:43" pos:end="29:43">&gt;</operator> <name pos:start="29:45" pos:end="29:63">max_supported_ports</name></expr>)</condition> <block pos:start="29:66" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:15">

        <expr_stmt pos:start="31:9" pos:end="31:77"><expr pos:start="31:9" pos:end="31:76"><call pos:start="31:9" pos:end="31:76"><name pos:start="31:9" pos:end="31:18">error_setg</name><argument_list pos:start="31:19" pos:end="31:76">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">errp</name></expr></argument>, <argument pos:start="31:26" pos:end="31:54"><expr pos:start="31:26" pos:end="31:54"><literal type="string" pos:start="31:26" pos:end="31:54">"maximum ports supported: %u"</literal></expr></argument>, <argument pos:start="31:57" pos:end="31:75"><expr pos:start="31:57" pos:end="31:75"><name pos:start="31:57" pos:end="31:75">max_supported_ports</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:60">/* We don't support emergency write, skip it for now. */</comment>

    <comment type="block" pos:start="41:5" pos:end="41:56">/* TODO: cleaner fix, depending on host features. */</comment>

    <expr_stmt pos:start="43:5" pos:end="45:66"><expr pos:start="43:5" pos:end="45:65"><call pos:start="43:5" pos:end="45:65"><name pos:start="43:5" pos:end="43:15">virtio_init</name><argument_list pos:start="43:16" pos:end="45:65">(<argument pos:start="43:17" pos:end="43:20"><expr pos:start="43:17" pos:end="43:20"><name pos:start="43:17" pos:end="43:20">vdev</name></expr></argument>, <argument pos:start="43:23" pos:end="43:37"><expr pos:start="43:23" pos:end="43:37"><literal type="string" pos:start="43:23" pos:end="43:37">"virtio-serial"</literal></expr></argument>, <argument pos:start="43:40" pos:end="43:56"><expr pos:start="43:40" pos:end="43:56"><name pos:start="43:40" pos:end="43:56">VIRTIO_ID_CONSOLE</name></expr></argument>,

                <argument pos:start="45:17" pos:end="45:64"><expr pos:start="45:17" pos:end="45:64"><call pos:start="45:17" pos:end="45:64"><name pos:start="45:17" pos:end="45:24">offsetof</name><argument_list pos:start="45:25" pos:end="45:64">(<argument pos:start="45:26" pos:end="45:53"><expr pos:start="45:26" pos:end="45:53">struct <name pos:start="45:33" pos:end="45:53">virtio_console_config</name></expr></argument>, <argument pos:start="45:56" pos:end="45:63"><expr pos:start="45:56" pos:end="45:63"><name pos:start="45:56" pos:end="45:63">emerg_wr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:79">/* Spawn a new virtio-serial bus on which the ports will ride as devices */</comment>

    <expr_stmt pos:start="51:5" pos:end="53:45"><expr pos:start="51:5" pos:end="53:44"><call pos:start="51:5" pos:end="53:44"><name pos:start="51:5" pos:end="51:23">qbus_create_inplace</name><argument_list pos:start="51:24" pos:end="53:44">(<argument pos:start="51:25" pos:end="51:34"><expr pos:start="51:25" pos:end="51:34"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:34"><name pos:start="51:26" pos:end="51:29">vser</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:34">bus</name></name></expr></argument>, <argument pos:start="51:37" pos:end="51:53"><expr pos:start="51:37" pos:end="51:53"><sizeof pos:start="51:37" pos:end="51:53">sizeof<argument_list pos:start="51:43" pos:end="51:53">(<argument pos:start="51:44" pos:end="51:52"><expr pos:start="51:44" pos:end="51:52"><name pos:start="51:44" pos:end="51:52"><name pos:start="51:44" pos:end="51:47">vser</name><operator pos:start="51:48" pos:end="51:49">-&gt;</operator><name pos:start="51:50" pos:end="51:52">bus</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="51:56" pos:end="51:77"><expr pos:start="51:56" pos:end="51:77"><name pos:start="51:56" pos:end="51:77">TYPE_VIRTIO_SERIAL_BUS</name></expr></argument>,

                        <argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">dev</name></expr></argument>, <argument pos:start="53:30" pos:end="53:43"><expr pos:start="53:30" pos:end="53:43"><name pos:start="53:30" pos:end="53:43"><name pos:start="53:30" pos:end="53:33">vdev</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:43">bus_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:66"><expr pos:start="55:5" pos:end="55:65"><call pos:start="55:5" pos:end="55:65"><name pos:start="55:5" pos:end="55:28">qbus_set_hotplug_handler</name><argument_list pos:start="55:29" pos:end="55:65">(<argument pos:start="55:30" pos:end="55:44"><expr pos:start="55:30" pos:end="55:44"><call pos:start="55:30" pos:end="55:44"><name pos:start="55:30" pos:end="55:32">BUS</name><argument_list pos:start="55:33" pos:end="55:44">(<argument pos:start="55:34" pos:end="55:43"><expr pos:start="55:34" pos:end="55:43"><operator pos:start="55:34" pos:end="55:34">&amp;</operator><name pos:start="55:35" pos:end="55:43"><name pos:start="55:35" pos:end="55:38">vser</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:43">bus</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:47" pos:end="55:58"><expr pos:start="55:47" pos:end="55:58"><call pos:start="55:47" pos:end="55:58"><name pos:start="55:47" pos:end="55:52">DEVICE</name><argument_list pos:start="55:53" pos:end="55:58">(<argument pos:start="55:54" pos:end="55:57"><expr pos:start="55:54" pos:end="55:57"><name pos:start="55:54" pos:end="55:57">vser</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:61" pos:end="55:64"><expr pos:start="55:61" pos:end="55:64"><name pos:start="55:61" pos:end="55:64">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:26"><expr pos:start="57:5" pos:end="57:25"><name pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:8">vser</name><operator pos:start="57:9" pos:end="57:10">-&gt;</operator><name pos:start="57:11" pos:end="57:13">bus</name><operator pos:start="57:14" pos:end="57:14">.</operator><name pos:start="57:15" pos:end="57:18">vser</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:25">vser</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><call pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:15">QTAILQ_INIT</name><argument_list pos:start="59:16" pos:end="59:29">(<argument pos:start="59:17" pos:end="59:28"><expr pos:start="59:17" pos:end="59:28"><operator pos:start="59:17" pos:end="59:17">&amp;</operator><name pos:start="59:18" pos:end="59:28"><name pos:start="59:18" pos:end="59:21">vser</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:28">ports</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:63"><expr pos:start="63:5" pos:end="63:62"><name pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:8">vser</name><operator pos:start="63:9" pos:end="63:10">-&gt;</operator><name pos:start="63:11" pos:end="63:13">bus</name><operator pos:start="63:14" pos:end="63:14">.</operator><name pos:start="63:15" pos:end="63:26">max_nr_ports</name></name> <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:62"><name pos:start="63:30" pos:end="63:33">vser</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:41">serial</name><operator pos:start="63:42" pos:end="63:42">.</operator><name pos:start="63:43" pos:end="63:62">max_virtserial_ports</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="67:49"><expr pos:start="65:5" pos:end="67:48"><name pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:8">vser</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:14">ivqs</name></name> <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="67:48"><name pos:start="65:18" pos:end="65:25">g_malloc</name><argument_list pos:start="65:26" pos:end="67:48">(<argument pos:start="65:27" pos:end="67:47"><expr pos:start="65:27" pos:end="67:47"><name pos:start="65:27" pos:end="65:59"><name pos:start="65:27" pos:end="65:30">vser</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:38">serial</name><operator pos:start="65:39" pos:end="65:39">.</operator><name pos:start="65:40" pos:end="65:59">max_virtserial_ports</name></name>

                          <operator pos:start="67:27" pos:end="67:27">*</operator> <sizeof pos:start="67:29" pos:end="67:47">sizeof<argument_list pos:start="67:35" pos:end="67:47">(<argument pos:start="67:36" pos:end="67:46"><expr pos:start="67:36" pos:end="67:46"><name pos:start="67:36" pos:end="67:44">VirtQueue</name> <operator pos:start="67:46" pos:end="67:46">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="71:49"><expr pos:start="69:5" pos:end="71:48"><name pos:start="69:5" pos:end="69:14"><name pos:start="69:5" pos:end="69:8">vser</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:14">ovqs</name></name> <operator pos:start="69:16" pos:end="69:16">=</operator> <call pos:start="69:18" pos:end="71:48"><name pos:start="69:18" pos:end="69:25">g_malloc</name><argument_list pos:start="69:26" pos:end="71:48">(<argument pos:start="69:27" pos:end="71:47"><expr pos:start="69:27" pos:end="71:47"><name pos:start="69:27" pos:end="69:59"><name pos:start="69:27" pos:end="69:30">vser</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:38">serial</name><operator pos:start="69:39" pos:end="69:39">.</operator><name pos:start="69:40" pos:end="69:59">max_virtserial_ports</name></name>

                          <operator pos:start="71:27" pos:end="71:27">*</operator> <sizeof pos:start="71:29" pos:end="71:47">sizeof<argument_list pos:start="71:35" pos:end="71:47">(<argument pos:start="71:36" pos:end="71:46"><expr pos:start="71:36" pos:end="71:46"><name pos:start="71:36" pos:end="71:44">VirtQueue</name> <operator pos:start="71:46" pos:end="71:46">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:78">/* Add a queue for host to guest transfers for port 0 (backward compat) */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:62"><expr pos:start="77:5" pos:end="77:61"><name pos:start="77:5" pos:end="77:17"><name pos:start="77:5" pos:end="77:8">vser</name><operator pos:start="77:9" pos:end="77:10">-&gt;</operator><name pos:start="77:11" pos:end="77:14">ivqs</name><index pos:start="77:15" pos:end="77:17">[<expr pos:start="77:16" pos:end="77:16"><literal type="number" pos:start="77:16" pos:end="77:16">0</literal></expr>]</index></name> <operator pos:start="77:19" pos:end="77:19">=</operator> <call pos:start="77:21" pos:end="77:61"><name pos:start="77:21" pos:end="77:36">virtio_add_queue</name><argument_list pos:start="77:37" pos:end="77:61">(<argument pos:start="77:38" pos:end="77:41"><expr pos:start="77:38" pos:end="77:41"><name pos:start="77:38" pos:end="77:41">vdev</name></expr></argument>, <argument pos:start="77:44" pos:end="77:46"><expr pos:start="77:44" pos:end="77:46"><literal type="number" pos:start="77:44" pos:end="77:46">128</literal></expr></argument>, <argument pos:start="77:49" pos:end="77:60"><expr pos:start="77:49" pos:end="77:60"><name pos:start="77:49" pos:end="77:60">handle_input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="79:5" pos:end="79:78">/* Add a queue for guest to host transfers for port 0 (backward compat) */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:63"><expr pos:start="81:5" pos:end="81:62"><name pos:start="81:5" pos:end="81:17"><name pos:start="81:5" pos:end="81:8">vser</name><operator pos:start="81:9" pos:end="81:10">-&gt;</operator><name pos:start="81:11" pos:end="81:14">ovqs</name><index pos:start="81:15" pos:end="81:17">[<expr pos:start="81:16" pos:end="81:16"><literal type="number" pos:start="81:16" pos:end="81:16">0</literal></expr>]</index></name> <operator pos:start="81:19" pos:end="81:19">=</operator> <call pos:start="81:21" pos:end="81:62"><name pos:start="81:21" pos:end="81:36">virtio_add_queue</name><argument_list pos:start="81:37" pos:end="81:62">(<argument pos:start="81:38" pos:end="81:41"><expr pos:start="81:38" pos:end="81:41"><name pos:start="81:38" pos:end="81:41">vdev</name></expr></argument>, <argument pos:start="81:44" pos:end="81:46"><expr pos:start="81:44" pos:end="81:46"><literal type="number" pos:start="81:44" pos:end="81:46">128</literal></expr></argument>, <argument pos:start="81:49" pos:end="81:61"><expr pos:start="81:49" pos:end="81:61"><name pos:start="81:49" pos:end="81:61">handle_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="85:5" pos:end="93:58">/* TODO: host to guest notifications can get dropped

     * if the queue fills up. Implement queueing in host,

     * this might also make it possible to reduce the control

     * queue size: as guest preposts buffers there,

     * this will save 4Kbyte of guest memory per entry. */</comment>



    <comment type="block" pos:start="97:5" pos:end="97:38">/* control queue: host to guest */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:57"><expr pos:start="99:5" pos:end="99:56"><name pos:start="99:5" pos:end="99:15"><name pos:start="99:5" pos:end="99:8">vser</name><operator pos:start="99:9" pos:end="99:10">-&gt;</operator><name pos:start="99:11" pos:end="99:15">c_ivq</name></name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="99:56"><name pos:start="99:19" pos:end="99:34">virtio_add_queue</name><argument_list pos:start="99:35" pos:end="99:56">(<argument pos:start="99:36" pos:end="99:39"><expr pos:start="99:36" pos:end="99:39"><name pos:start="99:36" pos:end="99:39">vdev</name></expr></argument>, <argument pos:start="99:42" pos:end="99:43"><expr pos:start="99:42" pos:end="99:43"><literal type="number" pos:start="99:42" pos:end="99:43">32</literal></expr></argument>, <argument pos:start="99:46" pos:end="99:55"><expr pos:start="99:46" pos:end="99:55"><name pos:start="99:46" pos:end="99:55">control_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="101:5" pos:end="101:38">/* control queue: guest to host */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:58"><expr pos:start="103:5" pos:end="103:57"><name pos:start="103:5" pos:end="103:15"><name pos:start="103:5" pos:end="103:8">vser</name><operator pos:start="103:9" pos:end="103:10">-&gt;</operator><name pos:start="103:11" pos:end="103:15">c_ovq</name></name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:57"><name pos:start="103:19" pos:end="103:34">virtio_add_queue</name><argument_list pos:start="103:35" pos:end="103:57">(<argument pos:start="103:36" pos:end="103:39"><expr pos:start="103:36" pos:end="103:39"><name pos:start="103:36" pos:end="103:39">vdev</name></expr></argument>, <argument pos:start="103:42" pos:end="103:43"><expr pos:start="103:42" pos:end="103:43"><literal type="number" pos:start="103:42" pos:end="103:43">32</literal></expr></argument>, <argument pos:start="103:46" pos:end="103:56"><expr pos:start="103:46" pos:end="103:56"><name pos:start="103:46" pos:end="103:56">control_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="107:5" pos:end="117:5">for <control pos:start="107:9" pos:end="107:48">(<init pos:start="107:10" pos:end="107:15"><expr pos:start="107:10" pos:end="107:14"><name pos:start="107:10" pos:end="107:10">i</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <literal type="number" pos:start="107:14" pos:end="107:14">1</literal></expr>;</init> <condition pos:start="107:17" pos:end="107:43"><expr pos:start="107:17" pos:end="107:42"><name pos:start="107:17" pos:end="107:17">i</name> <operator pos:start="107:19" pos:end="107:19">&lt;</operator> <name pos:start="107:21" pos:end="107:42"><name pos:start="107:21" pos:end="107:24">vser</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:29">bus</name><operator pos:start="107:30" pos:end="107:30">.</operator><name pos:start="107:31" pos:end="107:42">max_nr_ports</name></name></expr>;</condition> <incr pos:start="107:45" pos:end="107:47"><expr pos:start="107:45" pos:end="107:47"><name pos:start="107:45" pos:end="107:45">i</name><operator pos:start="107:46" pos:end="107:47">++</operator></expr></incr>)</control> <block pos:start="107:50" pos:end="117:5">{<block_content pos:start="111:9" pos:end="115:67">

        <comment type="block" pos:start="109:9" pos:end="109:62">/* Add a per-port queue for host to guest transfers */</comment>

        <expr_stmt pos:start="111:9" pos:end="111:66"><expr pos:start="111:9" pos:end="111:65"><name pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:12">vser</name><operator pos:start="111:13" pos:end="111:14">-&gt;</operator><name pos:start="111:15" pos:end="111:18">ivqs</name><index pos:start="111:19" pos:end="111:21">[<expr pos:start="111:20" pos:end="111:20"><name pos:start="111:20" pos:end="111:20">i</name></expr>]</index></name> <operator pos:start="111:23" pos:end="111:23">=</operator> <call pos:start="111:25" pos:end="111:65"><name pos:start="111:25" pos:end="111:40">virtio_add_queue</name><argument_list pos:start="111:41" pos:end="111:65">(<argument pos:start="111:42" pos:end="111:45"><expr pos:start="111:42" pos:end="111:45"><name pos:start="111:42" pos:end="111:45">vdev</name></expr></argument>, <argument pos:start="111:48" pos:end="111:50"><expr pos:start="111:48" pos:end="111:50"><literal type="number" pos:start="111:48" pos:end="111:50">128</literal></expr></argument>, <argument pos:start="111:53" pos:end="111:64"><expr pos:start="111:53" pos:end="111:64"><name pos:start="111:53" pos:end="111:64">handle_input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="113:9" pos:end="113:61">/* Add a per-per queue for guest to host transfers */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:67"><expr pos:start="115:9" pos:end="115:66"><name pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:12">vser</name><operator pos:start="115:13" pos:end="115:14">-&gt;</operator><name pos:start="115:15" pos:end="115:18">ovqs</name><index pos:start="115:19" pos:end="115:21">[<expr pos:start="115:20" pos:end="115:20"><name pos:start="115:20" pos:end="115:20">i</name></expr>]</index></name> <operator pos:start="115:23" pos:end="115:23">=</operator> <call pos:start="115:25" pos:end="115:66"><name pos:start="115:25" pos:end="115:40">virtio_add_queue</name><argument_list pos:start="115:41" pos:end="115:66">(<argument pos:start="115:42" pos:end="115:45"><expr pos:start="115:42" pos:end="115:45"><name pos:start="115:42" pos:end="115:45">vdev</name></expr></argument>, <argument pos:start="115:48" pos:end="115:50"><expr pos:start="115:48" pos:end="115:50"><literal type="number" pos:start="115:48" pos:end="115:50">128</literal></expr></argument>, <argument pos:start="115:53" pos:end="115:65"><expr pos:start="115:53" pos:end="115:65"><name pos:start="115:53" pos:end="115:65">handle_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="121:5" pos:end="123:38"><expr pos:start="121:5" pos:end="123:37"><name pos:start="121:5" pos:end="121:19"><name pos:start="121:5" pos:end="121:8">vser</name><operator pos:start="121:9" pos:end="121:10">-&gt;</operator><name pos:start="121:11" pos:end="121:19">ports_map</name></name> <operator pos:start="121:21" pos:end="121:21">=</operator> <call pos:start="121:23" pos:end="123:37"><name pos:start="121:23" pos:end="121:31">g_malloc0</name><argument_list pos:start="121:32" pos:end="123:37">(<argument pos:start="121:33" pos:end="123:36"><expr pos:start="121:33" pos:end="123:36"><operator pos:start="121:33" pos:end="121:33">(</operator><operator pos:start="121:34" pos:end="121:34">(</operator><name pos:start="121:35" pos:end="121:67"><name pos:start="121:35" pos:end="121:38">vser</name><operator pos:start="121:39" pos:end="121:40">-&gt;</operator><name pos:start="121:41" pos:end="121:46">serial</name><operator pos:start="121:47" pos:end="121:47">.</operator><name pos:start="121:48" pos:end="121:67">max_virtserial_ports</name></name> <operator pos:start="121:69" pos:end="121:69">+</operator> <literal type="number" pos:start="121:71" pos:end="121:72">31</literal><operator pos:start="121:73" pos:end="121:73">)</operator> <operator pos:start="121:75" pos:end="121:75">/</operator> <literal type="number" pos:start="121:77" pos:end="121:78">32</literal><operator pos:start="121:79" pos:end="121:79">)</operator>

        <operator pos:start="123:9" pos:end="123:9">*</operator> <sizeof pos:start="123:11" pos:end="123:36">sizeof<argument_list pos:start="123:17" pos:end="123:36">(<argument pos:start="123:18" pos:end="123:35"><expr pos:start="123:18" pos:end="123:35"><name pos:start="123:18" pos:end="123:35"><name pos:start="123:18" pos:end="123:21">vser</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:32">ports_map</name><index pos:start="123:33" pos:end="123:35">[<expr pos:start="123:34" pos:end="123:34"><literal type="number" pos:start="123:34" pos:end="123:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="125:5" pos:end="131:7">/*

     * Reserve location 0 for a console port for backward compat

     * (old kernel, new qemu)

     */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:29"><expr pos:start="133:5" pos:end="133:28"><call pos:start="133:5" pos:end="133:28"><name pos:start="133:5" pos:end="133:19">mark_port_added</name><argument_list pos:start="133:20" pos:end="133:28">(<argument pos:start="133:21" pos:end="133:24"><expr pos:start="133:21" pos:end="133:24"><name pos:start="133:21" pos:end="133:24">vser</name></expr></argument>, <argument pos:start="133:27" pos:end="133:27"><expr pos:start="133:27" pos:end="133:27"><literal type="number" pos:start="133:27" pos:end="133:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:27"><expr pos:start="137:5" pos:end="137:26"><name pos:start="137:5" pos:end="137:19"><name pos:start="137:5" pos:end="137:8">vser</name><operator pos:start="137:9" pos:end="137:10">-&gt;</operator><name pos:start="137:11" pos:end="137:19">post_load</name></name> <operator pos:start="137:21" pos:end="137:21">=</operator> <name pos:start="137:23" pos:end="137:26">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:56"><expr pos:start="141:5" pos:end="141:55"><call pos:start="141:5" pos:end="141:55"><name pos:start="141:5" pos:end="141:21">QLIST_INSERT_HEAD</name><argument_list pos:start="141:22" pos:end="141:55">(<argument pos:start="141:23" pos:end="141:42"><expr pos:start="141:23" pos:end="141:42"><operator pos:start="141:23" pos:end="141:23">&amp;</operator><name pos:start="141:24" pos:end="141:42"><name pos:start="141:24" pos:end="141:34">vserdevices</name><operator pos:start="141:35" pos:end="141:35">.</operator><name pos:start="141:36" pos:end="141:42">devices</name></name></expr></argument>, <argument pos:start="141:45" pos:end="141:48"><expr pos:start="141:45" pos:end="141:48"><name pos:start="141:45" pos:end="141:48">vser</name></expr></argument>, <argument pos:start="141:51" pos:end="141:54"><expr pos:start="141:51" pos:end="141:54"><name pos:start="141:51" pos:end="141:54">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
