<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9718.c" pos:tabs="8"><function pos:start="1:1" pos:end="10:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">vqf_probe</name><parameter_list pos:start="1:21" pos:end="1:47">(<parameter pos:start="1:22" pos:end="1:46"><decl pos:start="1:22" pos:end="1:46"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:32">AVProbeData</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:46">probe_packet</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="10:1">{<block_content pos:start="3:5" pos:end="9:35">
    <if_stmt pos:start="3:5" pos:end="4:17"><if pos:start="3:5" pos:end="4:17">if <condition pos:start="3:8" pos:end="3:61">(<expr pos:start="3:9" pos:end="3:60"><call pos:start="3:9" pos:end="3:34"><name pos:start="3:9" pos:end="3:15">AV_RL32</name><argument_list pos:start="3:16" pos:end="3:34">(<argument pos:start="3:17" pos:end="3:33"><expr pos:start="3:17" pos:end="3:33"><name pos:start="3:17" pos:end="3:33"><name pos:start="3:17" pos:end="3:28">probe_packet</name><operator pos:start="3:29" pos:end="3:30">-&gt;</operator><name pos:start="3:31" pos:end="3:33">buf</name></name></expr></argument>)</argument_list></call> <operator pos:start="3:36" pos:end="3:37">!=</operator> <call pos:start="3:39" pos:end="3:60"><name pos:start="3:39" pos:end="3:43">MKTAG</name><argument_list pos:start="3:44" pos:end="3:60">(<argument pos:start="3:45" pos:end="3:47"><expr pos:start="3:45" pos:end="3:47"><literal type="char" pos:start="3:45" pos:end="3:47">'T'</literal></expr></argument>,<argument pos:start="3:49" pos:end="3:51"><expr pos:start="3:49" pos:end="3:51"><literal type="char" pos:start="3:49" pos:end="3:51">'W'</literal></expr></argument>,<argument pos:start="3:53" pos:end="3:55"><expr pos:start="3:53" pos:end="3:55"><literal type="char" pos:start="3:53" pos:end="3:55">'I'</literal></expr></argument>,<argument pos:start="3:57" pos:end="3:59"><expr pos:start="3:57" pos:end="3:59"><literal type="char" pos:start="3:57" pos:end="3:59">'N'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4:9" pos:end="4:17"><block_content pos:start="4:9" pos:end="4:17">
        <return pos:start="4:9" pos:end="4:17">return <expr pos:start="4:16" pos:end="4:16"><literal type="number" pos:start="4:16" pos:end="4:16">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="5:5" pos:end="6:33"><if pos:start="5:5" pos:end="6:33">if <condition pos:start="5:8" pos:end="5:54">(<expr pos:start="5:9" pos:end="5:53"><operator pos:start="5:9" pos:end="5:9">!</operator><call pos:start="5:10" pos:end="5:53"><name pos:start="5:10" pos:end="5:15">memcmp</name><argument_list pos:start="5:16" pos:end="5:53">(<argument pos:start="5:17" pos:end="5:37"><expr pos:start="5:17" pos:end="5:37"><name pos:start="5:17" pos:end="5:33"><name pos:start="5:17" pos:end="5:28">probe_packet</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:33">buf</name></name> <operator pos:start="5:35" pos:end="5:35">+</operator> <literal type="number" pos:start="5:37" pos:end="5:37">4</literal></expr></argument>, <argument pos:start="5:40" pos:end="5:49"><expr pos:start="5:40" pos:end="5:49"><literal type="string" pos:start="5:40" pos:end="5:49">"97012000"</literal></expr></argument>, <argument pos:start="5:52" pos:end="5:52"><expr pos:start="5:52" pos:end="5:52"><literal type="number" pos:start="5:52" pos:end="5:52">8</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="6:9" pos:end="6:33"><block_content pos:start="6:9" pos:end="6:33">
        <return pos:start="6:9" pos:end="6:33">return <expr pos:start="6:16" pos:end="6:32"><name pos:start="6:16" pos:end="6:32">AVPROBE_SCORE_MAX</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="7:5" pos:end="8:33"><if pos:start="7:5" pos:end="8:33">if <condition pos:start="7:8" pos:end="7:54">(<expr pos:start="7:9" pos:end="7:53"><operator pos:start="7:9" pos:end="7:9">!</operator><call pos:start="7:10" pos:end="7:53"><name pos:start="7:10" pos:end="7:15">memcmp</name><argument_list pos:start="7:16" pos:end="7:53">(<argument pos:start="7:17" pos:end="7:37"><expr pos:start="7:17" pos:end="7:37"><name pos:start="7:17" pos:end="7:33"><name pos:start="7:17" pos:end="7:28">probe_packet</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:33">buf</name></name> <operator pos:start="7:35" pos:end="7:35">+</operator> <literal type="number" pos:start="7:37" pos:end="7:37">4</literal></expr></argument>, <argument pos:start="7:40" pos:end="7:49"><expr pos:start="7:40" pos:end="7:49"><literal type="string" pos:start="7:40" pos:end="7:49">"00052200"</literal></expr></argument>, <argument pos:start="7:52" pos:end="7:52"><expr pos:start="7:52" pos:end="7:52"><literal type="number" pos:start="7:52" pos:end="7:52">8</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="8:9" pos:end="8:33"><block_content pos:start="8:9" pos:end="8:33">
        <return pos:start="8:9" pos:end="8:33">return <expr pos:start="8:16" pos:end="8:32"><name pos:start="8:16" pos:end="8:32">AVPROBE_SCORE_MAX</name></expr>;</return></block_content></block></if></if_stmt>
    <return pos:start="9:5" pos:end="9:35">return <expr pos:start="9:12" pos:end="9:34"><name pos:start="9:12" pos:end="9:34">AVPROBE_SCORE_EXTENSION</name></expr>;</return>
</block_content>}</block></function></unit>
