<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12731.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">raw_init_decoder</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:13">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">RawVideoContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:28">context</name> <init pos:start="5:30" pos:end="5:47">= <expr pos:start="5:32" pos:end="5:47"><name pos:start="5:32" pos:end="5:47"><name pos:start="5:32" pos:end="5:36">avctx</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:47">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:30"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:28">AVPixFmtDescriptor</name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:34">desc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><call pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:20">ff_bswapdsp_init</name><argument_list pos:start="11:21" pos:end="11:37">(<argument pos:start="11:22" pos:end="11:36"><expr pos:start="11:22" pos:end="11:36"><operator pos:start="11:22" pos:end="11:22">&amp;</operator><name pos:start="11:23" pos:end="11:36"><name pos:start="11:23" pos:end="11:29">context</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:36">bbdsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="37:68"><if pos:start="15:5" pos:end="21:68">if <condition pos:start="15:8" pos:end="17:54">(   <expr pos:start="15:12" pos:end="17:53"><name pos:start="15:12" pos:end="15:27"><name pos:start="15:12" pos:end="15:16">avctx</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:27">codec_tag</name></name> <operator pos:start="15:29" pos:end="15:30">==</operator> <call pos:start="15:32" pos:end="15:53"><name pos:start="15:32" pos:end="15:36">MKTAG</name><argument_list pos:start="15:37" pos:end="15:53">(<argument pos:start="15:38" pos:end="15:40"><expr pos:start="15:38" pos:end="15:40"><literal type="char" pos:start="15:38" pos:end="15:40">'r'</literal></expr></argument>,<argument pos:start="15:42" pos:end="15:44"><expr pos:start="15:42" pos:end="15:44"><literal type="char" pos:start="15:42" pos:end="15:44">'a'</literal></expr></argument>,<argument pos:start="15:46" pos:end="15:48"><expr pos:start="15:46" pos:end="15:48"><literal type="char" pos:start="15:46" pos:end="15:48">'w'</literal></expr></argument>,<argument pos:start="15:50" pos:end="15:52"><expr pos:start="15:50" pos:end="15:52"><literal type="char" pos:start="15:50" pos:end="15:52">' '</literal></expr></argument>)</argument_list></call>

        <operator pos:start="17:9" pos:end="17:10">||</operator> <name pos:start="17:12" pos:end="17:27"><name pos:start="17:12" pos:end="17:16">avctx</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:27">codec_tag</name></name> <operator pos:start="17:29" pos:end="17:30">==</operator> <call pos:start="17:32" pos:end="17:53"><name pos:start="17:32" pos:end="17:36">MKTAG</name><argument_list pos:start="17:37" pos:end="17:53">(<argument pos:start="17:38" pos:end="17:40"><expr pos:start="17:38" pos:end="17:40"><literal type="char" pos:start="17:38" pos:end="17:40">'N'</literal></expr></argument>,<argument pos:start="17:42" pos:end="17:44"><expr pos:start="17:42" pos:end="17:44"><literal type="char" pos:start="17:42" pos:end="17:44">'O'</literal></expr></argument>,<argument pos:start="17:46" pos:end="17:48"><expr pos:start="17:46" pos:end="17:48"><literal type="char" pos:start="17:46" pos:end="17:48">'1'</literal></expr></argument>,<argument pos:start="17:50" pos:end="17:52"><expr pos:start="17:50" pos:end="17:52"><literal type="char" pos:start="17:50" pos:end="17:52">'6'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="21:68"><block_content pos:start="19:9" pos:end="21:68">

        <expr_stmt pos:start="19:9" pos:end="21:68"><expr pos:start="19:9" pos:end="21:67"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:13">avctx</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:22">pix_fmt</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <call pos:start="19:26" pos:end="21:67"><name pos:start="19:26" pos:end="19:44">avpriv_find_pix_fmt</name><argument_list pos:start="19:45" pos:end="21:67">(<argument pos:start="19:46" pos:end="19:67"><expr pos:start="19:46" pos:end="19:67"><name pos:start="19:46" pos:end="19:67">avpriv_pix_fmt_bps_mov</name></expr></argument>,

                                      <argument pos:start="21:39" pos:end="21:66"><expr pos:start="21:39" pos:end="21:66"><name pos:start="21:39" pos:end="21:66"><name pos:start="21:39" pos:end="21:43">avctx</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:66">bits_per_coded_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="23:5" pos:end="27:68">else if <condition pos:start="23:13" pos:end="23:59">(<expr pos:start="23:14" pos:end="23:58"><name pos:start="23:14" pos:end="23:29"><name pos:start="23:14" pos:end="23:18">avctx</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:29">codec_tag</name></name> <operator pos:start="23:31" pos:end="23:32">==</operator> <call pos:start="23:34" pos:end="23:58"><name pos:start="23:34" pos:end="23:38">MKTAG</name><argument_list pos:start="23:39" pos:end="23:58">(<argument pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><literal type="char" pos:start="23:40" pos:end="23:42">'W'</literal></expr></argument>, <argument pos:start="23:45" pos:end="23:47"><expr pos:start="23:45" pos:end="23:47"><literal type="char" pos:start="23:45" pos:end="23:47">'R'</literal></expr></argument>, <argument pos:start="23:50" pos:end="23:52"><expr pos:start="23:50" pos:end="23:52"><literal type="char" pos:start="23:50" pos:end="23:52">'A'</literal></expr></argument>, <argument pos:start="23:55" pos:end="23:57"><expr pos:start="23:55" pos:end="23:57"><literal type="char" pos:start="23:55" pos:end="23:57">'W'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="27:68"><block_content pos:start="25:9" pos:end="27:68">

        <expr_stmt pos:start="25:9" pos:end="27:68"><expr pos:start="25:9" pos:end="27:67"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">pix_fmt</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="27:67"><name pos:start="25:26" pos:end="25:44">avpriv_find_pix_fmt</name><argument_list pos:start="25:45" pos:end="27:67">(<argument pos:start="25:46" pos:end="25:67"><expr pos:start="25:46" pos:end="25:67"><name pos:start="25:46" pos:end="25:67">avpriv_pix_fmt_bps_avi</name></expr></argument>,

                                      <argument pos:start="27:39" pos:end="27:66"><expr pos:start="27:39" pos:end="27:66"><name pos:start="27:39" pos:end="27:66"><name pos:start="27:39" pos:end="27:43">avctx</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:66">bits_per_coded_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="29:5" pos:end="31:84">else if <condition pos:start="29:13" pos:end="29:88">(<expr pos:start="29:14" pos:end="29:87"><name pos:start="29:14" pos:end="29:29"><name pos:start="29:14" pos:end="29:18">avctx</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:29">codec_tag</name></name> <operator pos:start="29:31" pos:end="29:32">&amp;&amp;</operator> <operator pos:start="29:34" pos:end="29:34">(</operator><name pos:start="29:35" pos:end="29:50"><name pos:start="29:35" pos:end="29:39">avctx</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:50">codec_tag</name></name> <operator pos:start="29:52" pos:end="29:52">&amp;</operator> <literal type="number" pos:start="29:54" pos:end="29:61">0xFFFFFF</literal><operator pos:start="29:62" pos:end="29:62">)</operator> <operator pos:start="29:64" pos:end="29:65">!=</operator> <call pos:start="29:67" pos:end="29:87"><name pos:start="29:67" pos:end="29:71">MKTAG</name><argument_list pos:start="29:72" pos:end="29:87">(<argument pos:start="29:73" pos:end="29:75"><expr pos:start="29:73" pos:end="29:75"><literal type="char" pos:start="29:73" pos:end="29:75">'B'</literal></expr></argument>,<argument pos:start="29:77" pos:end="29:79"><expr pos:start="29:77" pos:end="29:79"><literal type="char" pos:start="29:77" pos:end="29:79">'I'</literal></expr></argument>,<argument pos:start="29:81" pos:end="29:83"><expr pos:start="29:81" pos:end="29:83"><literal type="char" pos:start="29:81" pos:end="29:83">'T'</literal></expr></argument>, <argument pos:start="29:86" pos:end="29:86"><expr pos:start="29:86" pos:end="29:86"><literal type="number" pos:start="29:86" pos:end="29:86">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:84"><block_content pos:start="31:9" pos:end="31:84">

        <expr_stmt pos:start="31:9" pos:end="31:84"><expr pos:start="31:9" pos:end="31:83"><name pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:13">avctx</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:22">pix_fmt</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <call pos:start="31:26" pos:end="31:83"><name pos:start="31:26" pos:end="31:44">avpriv_find_pix_fmt</name><argument_list pos:start="31:45" pos:end="31:83">(<argument pos:start="31:46" pos:end="31:64"><expr pos:start="31:46" pos:end="31:64"><name pos:start="31:46" pos:end="31:64">ff_raw_pix_fmt_tags</name></expr></argument>, <argument pos:start="31:67" pos:end="31:82"><expr pos:start="31:67" pos:end="31:82"><name pos:start="31:67" pos:end="31:82"><name pos:start="31:67" pos:end="31:71">avctx</name><operator pos:start="31:72" pos:end="31:73">-&gt;</operator><name pos:start="31:74" pos:end="31:82">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="33:5" pos:end="37:68">else if <condition pos:start="33:13" pos:end="33:79">(<expr pos:start="33:14" pos:end="33:78"><name pos:start="33:14" pos:end="33:27"><name pos:start="33:14" pos:end="33:18">avctx</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:27">pix_fmt</name></name> <operator pos:start="33:29" pos:end="33:30">==</operator> <name pos:start="33:32" pos:end="33:46">AV_PIX_FMT_NONE</name> <operator pos:start="33:48" pos:end="33:49">&amp;&amp;</operator> <name pos:start="33:51" pos:end="33:78"><name pos:start="33:51" pos:end="33:55">avctx</name><operator pos:start="33:56" pos:end="33:57">-&gt;</operator><name pos:start="33:58" pos:end="33:78">bits_per_coded_sample</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="37:68"><block_content pos:start="35:9" pos:end="37:68">

        <expr_stmt pos:start="35:9" pos:end="37:68"><expr pos:start="35:9" pos:end="37:67"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:22">pix_fmt</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="37:67"><name pos:start="35:26" pos:end="35:44">avpriv_find_pix_fmt</name><argument_list pos:start="35:45" pos:end="37:67">(<argument pos:start="35:46" pos:end="35:67"><expr pos:start="35:46" pos:end="35:67"><name pos:start="35:46" pos:end="35:67">avpriv_pix_fmt_bps_avi</name></expr></argument>,

                                      <argument pos:start="37:39" pos:end="37:66"><expr pos:start="37:39" pos:end="37:66"><name pos:start="37:39" pos:end="37:66"><name pos:start="37:39" pos:end="37:43">avctx</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:66">bits_per_coded_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:8">desc</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <call pos:start="41:12" pos:end="41:46"><name pos:start="41:12" pos:end="41:30">av_pix_fmt_desc_get</name><argument_list pos:start="41:31" pos:end="41:46">(<argument pos:start="41:32" pos:end="41:45"><expr pos:start="41:32" pos:end="41:45"><name pos:start="41:32" pos:end="41:45"><name pos:start="41:32" pos:end="41:36">avctx</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:45">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:14">(<expr pos:start="43:9" pos:end="43:13"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:13">desc</name></expr>)</condition> <block pos:start="43:16" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:31">

        <expr_stmt pos:start="45:9" pos:end="45:63"><expr pos:start="45:9" pos:end="45:62"><call pos:start="45:9" pos:end="45:62"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:62">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:61"><expr pos:start="45:37" pos:end="45:61"><literal type="string" pos:start="45:37" pos:end="45:61">"Invalid pixel format.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:31">return <expr pos:start="47:16" pos:end="47:30"><call pos:start="47:16" pos:end="47:30"><name pos:start="47:16" pos:end="47:22">AVERROR</name><argument_list pos:start="47:23" pos:end="47:30">(<argument pos:start="47:24" pos:end="47:29"><expr pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="69:5"><if pos:start="53:5" pos:end="69:5">if <condition pos:start="53:8" pos:end="53:72">(<expr pos:start="53:9" pos:end="53:71"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:12">desc</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:19">flags</name></name> <operator pos:start="53:21" pos:end="53:21">&amp;</operator> <operator pos:start="53:23" pos:end="53:23">(</operator><name pos:start="53:24" pos:end="53:42">AV_PIX_FMT_FLAG_PAL</name> <operator pos:start="53:44" pos:end="53:44">|</operator> <name pos:start="53:46" pos:end="53:70">AV_PIX_FMT_FLAG_PSEUDOPAL</name><operator pos:start="53:71" pos:end="53:71">)</operator></expr>)</condition> <block pos:start="53:74" pos:end="69:5">{<block_content pos:start="55:9" pos:end="67:62">

        <expr_stmt pos:start="55:9" pos:end="55:59"><expr pos:start="55:9" pos:end="55:58"><name pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:15">context</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:24">palette</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <call pos:start="55:28" pos:end="55:58"><name pos:start="55:28" pos:end="55:42">av_buffer_alloc</name><argument_list pos:start="55:43" pos:end="55:58">(<argument pos:start="55:44" pos:end="55:57"><expr pos:start="55:44" pos:end="55:57"><name pos:start="55:44" pos:end="55:57">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="59:35"><if pos:start="57:9" pos:end="59:35">if <condition pos:start="57:12" pos:end="57:30">(<expr pos:start="57:13" pos:end="57:29"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:29"><name pos:start="57:14" pos:end="57:20">context</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:29">palette</name></name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:35"><block_content pos:start="59:13" pos:end="59:35">

            <return pos:start="59:13" pos:end="59:35">return <expr pos:start="59:20" pos:end="59:34"><call pos:start="59:20" pos:end="59:34"><name pos:start="59:20" pos:end="59:26">AVERROR</name><argument_list pos:start="59:27" pos:end="59:34">(<argument pos:start="59:28" pos:end="59:33"><expr pos:start="59:28" pos:end="59:33"><name pos:start="59:28" pos:end="59:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="67:62"><if pos:start="61:9" pos:end="63:90">if <condition pos:start="61:12" pos:end="61:52">(<expr pos:start="61:13" pos:end="61:51"><name pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:16">desc</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:23">flags</name></name> <operator pos:start="61:25" pos:end="61:25">&amp;</operator> <name pos:start="61:27" pos:end="61:51">AV_PIX_FMT_FLAG_PSEUDOPAL</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:90"><block_content pos:start="63:13" pos:end="63:90">

            <expr_stmt pos:start="63:13" pos:end="63:90"><expr pos:start="63:13" pos:end="63:89"><call pos:start="63:13" pos:end="63:89"><name pos:start="63:13" pos:end="63:38">avpriv_set_systematic_pal2</name><argument_list pos:start="63:39" pos:end="63:89">(<argument pos:start="63:40" pos:end="63:72"><expr pos:start="63:40" pos:end="63:72"><operator pos:start="63:40" pos:end="63:40">(</operator><name pos:start="63:41" pos:end="63:48">uint32_t</name><operator pos:start="63:49" pos:end="63:49">*</operator><operator pos:start="63:50" pos:end="63:50">)</operator><name pos:start="63:51" pos:end="63:72"><name pos:start="63:51" pos:end="63:57">context</name><operator pos:start="63:58" pos:end="63:59">-&gt;</operator><name pos:start="63:60" pos:end="63:66">palette</name><operator pos:start="63:67" pos:end="63:68">-&gt;</operator><name pos:start="63:69" pos:end="63:72">data</name></name></expr></argument>, <argument pos:start="63:75" pos:end="63:88"><expr pos:start="63:75" pos:end="63:88"><name pos:start="63:75" pos:end="63:88"><name pos:start="63:75" pos:end="63:79">avctx</name><operator pos:start="63:80" pos:end="63:81">-&gt;</operator><name pos:start="63:82" pos:end="63:88">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="65:9" pos:end="67:62">else<block type="pseudo" pos:start="67:13" pos:end="67:62"><block_content pos:start="67:13" pos:end="67:62">

            <expr_stmt pos:start="67:13" pos:end="67:62"><expr pos:start="67:13" pos:end="67:61"><call pos:start="67:13" pos:end="67:61"><name pos:start="67:13" pos:end="67:18">memset</name><argument_list pos:start="67:19" pos:end="67:61">(<argument pos:start="67:20" pos:end="67:41"><expr pos:start="67:20" pos:end="67:41"><name pos:start="67:20" pos:end="67:41"><name pos:start="67:20" pos:end="67:26">context</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:35">palette</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:41">data</name></name></expr></argument>, <argument pos:start="67:44" pos:end="67:44"><expr pos:start="67:44" pos:end="67:44"><literal type="number" pos:start="67:44" pos:end="67:44">0</literal></expr></argument>, <argument pos:start="67:47" pos:end="67:60"><expr pos:start="67:47" pos:end="67:60"><name pos:start="67:47" pos:end="67:60">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="83:26"><if pos:start="73:5" pos:end="83:26">if <condition pos:start="73:8" pos:end="81:51">(<expr pos:start="73:9" pos:end="81:50"><operator pos:start="73:9" pos:end="73:9">(</operator><name pos:start="73:10" pos:end="73:30"><name pos:start="73:10" pos:end="73:14">avctx</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:30">extradata_size</name></name> <operator pos:start="73:32" pos:end="73:33">&gt;=</operator> <literal type="number" pos:start="73:35" pos:end="73:35">9</literal> <operator pos:start="73:37" pos:end="73:38">&amp;&amp;</operator>

         <operator pos:start="75:10" pos:end="75:10">!</operator><call pos:start="75:11" pos:end="75:77"><name pos:start="75:11" pos:end="75:16">memcmp</name><argument_list pos:start="75:17" pos:end="75:77">(<argument pos:start="75:18" pos:end="75:61"><expr pos:start="75:18" pos:end="75:61"><name pos:start="75:18" pos:end="75:33"><name pos:start="75:18" pos:end="75:22">avctx</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:33">extradata</name></name> <operator pos:start="75:35" pos:end="75:35">+</operator> <name pos:start="75:37" pos:end="75:57"><name pos:start="75:37" pos:end="75:41">avctx</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:57">extradata_size</name></name> <operator pos:start="75:59" pos:end="75:59">-</operator> <literal type="number" pos:start="75:61" pos:end="75:61">9</literal></expr></argument>, <argument pos:start="75:64" pos:end="75:73"><expr pos:start="75:64" pos:end="75:73"><literal type="string" pos:start="75:64" pos:end="75:73">"BottomUp"</literal></expr></argument>, <argument pos:start="75:76" pos:end="75:76"><expr pos:start="75:76" pos:end="75:76"><literal type="number" pos:start="75:76" pos:end="75:76">9</literal></expr></argument>)</argument_list></call><operator pos:start="75:78" pos:end="75:78">)</operator> <operator pos:start="75:80" pos:end="75:81">||</operator>

        <name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:13">avctx</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:24">codec_tag</name></name> <operator pos:start="77:26" pos:end="77:27">==</operator> <call pos:start="77:29" pos:end="77:50"><name pos:start="77:29" pos:end="77:33">MKTAG</name><argument_list pos:start="77:34" pos:end="77:50">(<argument pos:start="77:35" pos:end="77:37"><expr pos:start="77:35" pos:end="77:37"><literal type="char" pos:start="77:35" pos:end="77:37">'c'</literal></expr></argument>,<argument pos:start="77:39" pos:end="77:41"><expr pos:start="77:39" pos:end="77:41"><literal type="char" pos:start="77:39" pos:end="77:41">'y'</literal></expr></argument>,<argument pos:start="77:43" pos:end="77:45"><expr pos:start="77:43" pos:end="77:45"><literal type="char" pos:start="77:43" pos:end="77:45">'u'</literal></expr></argument>,<argument pos:start="77:47" pos:end="77:49"><expr pos:start="77:47" pos:end="77:49"><literal type="char" pos:start="77:47" pos:end="77:49">'v'</literal></expr></argument>)</argument_list></call> <operator pos:start="77:52" pos:end="77:53">||</operator>

        <name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:13">avctx</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:24">codec_tag</name></name> <operator pos:start="79:26" pos:end="79:27">==</operator> <call pos:start="79:29" pos:end="79:45"><name pos:start="79:29" pos:end="79:33">MKTAG</name><argument_list pos:start="79:34" pos:end="79:45">(<argument pos:start="79:35" pos:end="79:35"><expr pos:start="79:35" pos:end="79:35"><literal type="number" pos:start="79:35" pos:end="79:35">3</literal></expr></argument>, <argument pos:start="79:38" pos:end="79:38"><expr pos:start="79:38" pos:end="79:38"><literal type="number" pos:start="79:38" pos:end="79:38">0</literal></expr></argument>, <argument pos:start="79:41" pos:end="79:41"><expr pos:start="79:41" pos:end="79:41"><literal type="number" pos:start="79:41" pos:end="79:41">0</literal></expr></argument>, <argument pos:start="79:44" pos:end="79:44"><expr pos:start="79:44" pos:end="79:44"><literal type="number" pos:start="79:44" pos:end="79:44">0</literal></expr></argument>)</argument_list></call> <operator pos:start="79:47" pos:end="79:48">||</operator>

        <name pos:start="81:9" pos:end="81:24"><name pos:start="81:9" pos:end="81:13">avctx</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:24">codec_tag</name></name> <operator pos:start="81:26" pos:end="81:27">==</operator> <call pos:start="81:29" pos:end="81:50"><name pos:start="81:29" pos:end="81:33">MKTAG</name><argument_list pos:start="81:34" pos:end="81:50">(<argument pos:start="81:35" pos:end="81:37"><expr pos:start="81:35" pos:end="81:37"><literal type="char" pos:start="81:35" pos:end="81:37">'W'</literal></expr></argument>,<argument pos:start="81:39" pos:end="81:41"><expr pos:start="81:39" pos:end="81:41"><literal type="char" pos:start="81:39" pos:end="81:41">'R'</literal></expr></argument>,<argument pos:start="81:43" pos:end="81:45"><expr pos:start="81:43" pos:end="81:45"><literal type="char" pos:start="81:43" pos:end="81:45">'A'</literal></expr></argument>,<argument pos:start="81:47" pos:end="81:49"><expr pos:start="81:47" pos:end="81:49"><literal type="char" pos:start="81:47" pos:end="81:49">'W'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:26"><block_content pos:start="83:9" pos:end="83:26">

        <expr_stmt pos:start="83:9" pos:end="83:26"><expr pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:15">context</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:21">flip</name></name> <operator pos:start="83:23" pos:end="83:23">=</operator> <literal type="number" pos:start="83:25" pos:end="83:25">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="91:29"><if pos:start="87:5" pos:end="91:29">if <condition pos:start="87:8" pos:end="89:47">(<expr pos:start="87:9" pos:end="89:46"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:13">avctx</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:24">codec_tag</name></name> <operator pos:start="87:26" pos:end="87:27">==</operator> <call pos:start="87:29" pos:end="87:43"><name pos:start="87:29" pos:end="87:35">AV_RL32</name><argument_list pos:start="87:36" pos:end="87:43">(<argument pos:start="87:37" pos:end="87:42"><expr pos:start="87:37" pos:end="87:42"><literal type="string" pos:start="87:37" pos:end="87:42">"yuv2"</literal></expr></argument>)</argument_list></call> <operator pos:start="87:45" pos:end="87:46">&amp;&amp;</operator>

        <name pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:13">avctx</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:22">pix_fmt</name></name>   <operator pos:start="89:26" pos:end="89:27">==</operator> <name pos:start="89:29" pos:end="89:46">AV_PIX_FMT_YUYV422</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:29"><block_content pos:start="91:9" pos:end="91:29">

        <expr_stmt pos:start="91:9" pos:end="91:29"><expr pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:15">context</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:24">is_yuv2</name></name> <operator pos:start="91:26" pos:end="91:26">=</operator> <literal type="number" pos:start="91:28" pos:end="91:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
