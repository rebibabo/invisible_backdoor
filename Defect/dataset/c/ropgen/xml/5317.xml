<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5317.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:28">ff_fft_init_x86</name><parameter_list pos:start="1:29" pos:end="1:43">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:39">FFTContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="10:0"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">cpu_flags</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><call pos:start="5:21" pos:end="5:38"><name pos:start="5:21" pos:end="5:36">av_get_cpu_flags</name><argument_list pos:start="5:37" pos:end="5:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="9:1" pos:end="9:15">#<cpp:directive pos:start="9:2" pos:end="9:3">if</cpp:directive> <expr pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15">ARCH_X86_32</name></expr></cpp:if>

    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="21:5">if <condition pos:start="11:8" pos:end="11:37">(<expr pos:start="11:9" pos:end="11:36"><call pos:start="11:9" pos:end="11:36"><name pos:start="11:9" pos:end="11:25">EXTERNAL_AMD3DNOW</name><argument_list pos:start="11:26" pos:end="11:36">(<argument pos:start="11:27" pos:end="11:35"><expr pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:35">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:39" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:42">

        <comment type="block" pos:start="13:9" pos:end="13:31">/* 3DNow! for K6-2/3 */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:44"><expr pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:21">imdct_calc</name></name> <operator pos:start="15:23" pos:end="15:23">=</operator> <name pos:start="15:25" pos:end="15:43">ff_imdct_calc_3dnow</name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:44"><expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:21">imdct_half</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <name pos:start="17:25" pos:end="17:43">ff_imdct_half_3dnow</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:42"><expr pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:19">fft_calc</name></name>   <operator pos:start="19:23" pos:end="19:23">=</operator> <name pos:start="19:25" pos:end="19:41">ff_fft_calc_3dnow</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="36:0"><if pos:start="23:5" pos:end="36:0">if <condition pos:start="23:8" pos:end="23:40">(<expr pos:start="23:9" pos:end="23:39"><call pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:28">EXTERNAL_AMD3DNOWEXT</name><argument_list pos:start="23:29" pos:end="23:39">(<argument pos:start="23:30" pos:end="23:38"><expr pos:start="23:30" pos:end="23:38"><name pos:start="23:30" pos:end="23:38">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:42" pos:end="36:0">{<block_content pos:start="27:9" pos:end="31:45">

        <comment type="block" pos:start="25:9" pos:end="25:28">/* 3DNowEx for K7 */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:47"><expr pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:21">imdct_calc</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:46">ff_imdct_calc_3dnowext</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:21">imdct_half</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:46">ff_imdct_half_3dnowext</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:45"><expr pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:19">fft_calc</name></name>   <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:44">ff_fft_calc_3dnowext</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="37:5" pos:end="51:5"><if pos:start="37:5" pos:end="51:5">if <condition pos:start="37:8" pos:end="37:32">(<expr pos:start="37:9" pos:end="37:31"><call pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:20">EXTERNAL_SSE</name><argument_list pos:start="37:21" pos:end="37:31">(<argument pos:start="37:22" pos:end="37:30"><expr pos:start="37:22" pos:end="37:30"><name pos:start="37:22" pos:end="37:30">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:34" pos:end="51:5">{<block_content pos:start="41:9" pos:end="49:51">

        <comment type="block" pos:start="39:9" pos:end="39:30">/* SSE for P3/P4/K8 */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:43"><expr pos:start="41:9" pos:end="41:42"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:21">imdct_calc</name></name>  <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:42">ff_imdct_calc_sse</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:43"><expr pos:start="43:9" pos:end="43:42"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:21">imdct_half</name></name>  <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:42">ff_imdct_half_sse</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:44"><expr pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:22">fft_permute</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:43">ff_fft_permute_sse</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:41"><expr pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:19">fft_calc</name></name>    <operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:40">ff_fft_calc_sse</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:51"><expr pos:start="49:9" pos:end="49:50"><name pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:26">fft_permutation</name></name> <operator pos:start="49:28" pos:end="49:28">=</operator> <name pos:start="49:30" pos:end="49:50">FF_FFT_PERM_SWAP_LSBS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="63:5"><if pos:start="53:5" pos:end="63:5">if <condition pos:start="53:8" pos:end="53:49">(<expr pos:start="53:9" pos:end="53:48"><call pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:20">EXTERNAL_AVX</name><argument_list pos:start="53:21" pos:end="53:31">(<argument pos:start="53:22" pos:end="53:30"><expr pos:start="53:22" pos:end="53:30"><name pos:start="53:22" pos:end="53:30">cpu_flags</name></expr></argument>)</argument_list></call> <operator pos:start="53:33" pos:end="53:34">&amp;&amp;</operator> <name pos:start="53:36" pos:end="53:43"><name pos:start="53:36" pos:end="53:36">s</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:43">nbits</name></name> <operator pos:start="53:45" pos:end="53:46">&gt;=</operator> <literal type="number" pos:start="53:48" pos:end="53:48">5</literal></expr>)</condition> <block pos:start="53:51" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:45">

        <comment type="block" pos:start="55:9" pos:end="55:24">/* AVX for SB */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:47"><expr pos:start="57:9" pos:end="57:46"><name pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:21">imdct_half</name></name>      <operator pos:start="57:28" pos:end="57:28">=</operator> <name pos:start="57:30" pos:end="57:46">ff_imdct_half_avx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:45"><expr pos:start="59:9" pos:end="59:44"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:19">fft_calc</name></name>        <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:44">ff_fft_calc_avx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:45"><expr pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:26">fft_permutation</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:44">FF_FFT_PERM_AVX</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
