<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10329.c" pos:tabs="8"><function pos:start="1:1" pos:end="245:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">pmac_ide_atapi_transfer_cb</name><parameter_list pos:start="1:39" pos:end="1:61">(<parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:43">void</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">opaque</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:60"><decl pos:start="1:54" pos:end="1:60"><type pos:start="1:54" pos:end="1:60"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:60">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="245:1">{<block_content pos:start="5:5" pos:end="243:24">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">DBDMA_io</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">io</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MACIOIDEState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">m</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">io</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">IDEState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:15">s</name> <init pos:start="9:17" pos:end="9:43">= <expr pos:start="9:19" pos:end="9:43"><call pos:start="9:19" pos:end="9:43"><name pos:start="9:19" pos:end="9:34">idebus_active_if</name><argument_list pos:start="9:35" pos:end="9:43">(<argument pos:start="9:36" pos:end="9:42"><expr pos:start="9:36" pos:end="9:42"><operator pos:start="9:36" pos:end="9:36">&amp;</operator><name pos:start="9:37" pos:end="9:42"><name pos:start="9:37" pos:end="9:37">m</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:42">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">unaligned</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="27:5"><if pos:start="15:5" pos:end="27:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">&lt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition> <block pos:start="15:18" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:18">

        <expr_stmt pos:start="17:9" pos:end="17:24"><expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:9">m</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:16">aiocb</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:23">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><call pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:27">qemu_sglist_destroy</name><argument_list pos:start="19:28" pos:end="19:35">(<argument pos:start="19:29" pos:end="19:34"><expr pos:start="19:29" pos:end="19:34"><operator pos:start="19:29" pos:end="19:29">&amp;</operator><name pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:30">s</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:34">sg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><call pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:26">ide_atapi_io_error</name><argument_list pos:start="21:27" pos:end="21:34">(<argument pos:start="21:28" pos:end="21:28"><expr pos:start="21:28" pos:end="21:28"><name pos:start="21:28" pos:end="21:28">s</name></expr></argument>, <argument pos:start="21:31" pos:end="21:33"><expr pos:start="21:31" pos:end="21:33"><name pos:start="21:31" pos:end="21:33">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:10">io</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:25">remainder_len</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <literal type="number" pos:start="23:29" pos:end="23:29">0</literal></expr>;</expr_stmt>

        <goto pos:start="25:9" pos:end="25:18">goto <name pos:start="25:14" pos:end="25:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="43:5"><if pos:start="31:5" pos:end="43:5">if <condition pos:start="31:8" pos:end="31:23">(<expr pos:start="31:9" pos:end="31:22"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:22"><name pos:start="31:10" pos:end="31:10">m</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:22">dma_active</name></name></expr>)</condition> <block pos:start="31:25" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:15">

        <expr_stmt pos:start="33:9" pos:end="35:54"><expr pos:start="33:9" pos:end="35:53"><call pos:start="33:9" pos:end="35:53"><name pos:start="33:9" pos:end="33:21">MACIO_DPRINTF</name><argument_list pos:start="33:22" pos:end="35:53">(<argument pos:start="33:23" pos:end="33:59"><expr pos:start="33:23" pos:end="33:59"><literal type="string" pos:start="33:23" pos:end="33:59">"waiting for data (%#x - %#x - %x)\n"</literal></expr></argument>,

                      <argument pos:start="35:23" pos:end="35:32"><expr pos:start="35:23" pos:end="35:32"><name pos:start="35:23" pos:end="35:32"><name pos:start="35:23" pos:end="35:23">s</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:32">nsector</name></name></expr></argument>, <argument pos:start="35:35" pos:end="35:41"><expr pos:start="35:35" pos:end="35:41"><name pos:start="35:35" pos:end="35:41"><name pos:start="35:35" pos:end="35:36">io</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:41">len</name></name></expr></argument>, <argument pos:start="35:44" pos:end="35:52"><expr pos:start="35:44" pos:end="35:52"><name pos:start="35:44" pos:end="35:52"><name pos:start="35:44" pos:end="35:44">s</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:52">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="37:9" pos:end="37:71">/* data not ready yet, wait for the channel to get restarted */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:10">io</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:22">processing</name></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <name pos:start="39:26" pos:end="39:30">false</name></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:63"><expr pos:start="47:5" pos:end="47:62"><call pos:start="47:5" pos:end="47:62"><name pos:start="47:5" pos:end="47:17">MACIO_DPRINTF</name><argument_list pos:start="47:18" pos:end="47:62">(<argument pos:start="47:19" pos:end="47:42"><expr pos:start="47:19" pos:end="47:42"><literal type="string" pos:start="47:19" pos:end="47:42">"io_buffer_size = %#x\n"</literal></expr></argument>, <argument pos:start="47:45" pos:end="47:61"><expr pos:start="47:45" pos:end="47:61"><name pos:start="47:45" pos:end="47:61"><name pos:start="47:45" pos:end="47:45">s</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:61">io_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="69:5"><if pos:start="51:5" pos:end="69:5">if <condition pos:start="51:8" pos:end="51:30">(<expr pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:25">io_buffer_size</name></name> <operator pos:start="51:27" pos:end="51:27">&gt;</operator> <literal type="number" pos:start="51:29" pos:end="51:29">0</literal></expr>)</condition> <block pos:start="51:32" pos:end="69:5">{<block_content pos:start="53:9" pos:end="67:36">

        <expr_stmt pos:start="53:9" pos:end="53:24"><expr pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:9">m</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:16">aiocb</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:23">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:36"><expr pos:start="55:9" pos:end="55:35"><call pos:start="55:9" pos:end="55:35"><name pos:start="55:9" pos:end="55:27">qemu_sglist_destroy</name><argument_list pos:start="55:28" pos:end="55:35">(<argument pos:start="55:29" pos:end="55:34"><expr pos:start="55:29" pos:end="55:34"><operator pos:start="55:29" pos:end="55:29">&amp;</operator><name pos:start="55:30" pos:end="55:34"><name pos:start="55:30" pos:end="55:30">s</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:34">sg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:53"><expr pos:start="59:9" pos:end="59:52"><name pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:31">packet_transfer_size</name></name> <operator pos:start="59:33" pos:end="59:34">-=</operator> <name pos:start="59:36" pos:end="59:52"><name pos:start="59:36" pos:end="59:36">s</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:52">io_buffer_size</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:48"><expr pos:start="63:9" pos:end="63:47"><name pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:26">io_buffer_index</name></name> <operator pos:start="63:28" pos:end="63:29">+=</operator> <name pos:start="63:31" pos:end="63:47"><name pos:start="63:31" pos:end="63:31">s</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:47">io_buffer_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:43"><expr pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:14"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:14">lba</name></name> <operator pos:start="65:16" pos:end="65:17">+=</operator> <name pos:start="65:19" pos:end="65:36"><name pos:start="65:19" pos:end="65:19">s</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:36">io_buffer_index</name></name> <operator pos:start="65:38" pos:end="65:39">&gt;&gt;</operator> <literal type="number" pos:start="65:41" pos:end="65:42">11</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:36"><expr pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:26">io_buffer_index</name></name> <operator pos:start="67:28" pos:end="67:29">&amp;=</operator> <literal type="number" pos:start="67:31" pos:end="67:35">0x7ff</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:62"><expr pos:start="73:5" pos:end="73:61"><name pos:start="73:5" pos:end="73:21"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:21">io_buffer_size</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <call pos:start="73:25" pos:end="73:61"><name pos:start="73:25" pos:end="73:27">MIN</name><argument_list pos:start="73:28" pos:end="73:61">(<argument pos:start="73:29" pos:end="73:35"><expr pos:start="73:29" pos:end="73:35"><name pos:start="73:29" pos:end="73:35"><name pos:start="73:29" pos:end="73:30">io</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:35">len</name></name></expr></argument>, <argument pos:start="73:38" pos:end="73:60"><expr pos:start="73:38" pos:end="73:60"><name pos:start="73:38" pos:end="73:60"><name pos:start="73:38" pos:end="73:38">s</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:60">packet_transfer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="79:52"><expr pos:start="77:5" pos:end="79:51"><call pos:start="77:5" pos:end="79:51"><name pos:start="77:5" pos:end="77:17">MACIO_DPRINTF</name><argument_list pos:start="77:18" pos:end="79:51">(<argument pos:start="77:19" pos:end="77:56"><expr pos:start="77:19" pos:end="77:56"><literal type="string" pos:start="77:19" pos:end="77:56">"remainder: %d io-&gt;len: %d size: %d\n"</literal></expr></argument>, <argument pos:start="77:59" pos:end="77:75"><expr pos:start="77:59" pos:end="77:75"><name pos:start="77:59" pos:end="77:75"><name pos:start="77:59" pos:end="77:60">io</name><operator pos:start="77:61" pos:end="77:62">-&gt;</operator><name pos:start="77:63" pos:end="77:75">remainder_len</name></name></expr></argument>,

                  <argument pos:start="79:19" pos:end="79:25"><expr pos:start="79:19" pos:end="79:25"><name pos:start="79:19" pos:end="79:25"><name pos:start="79:19" pos:end="79:20">io</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:25">len</name></name></expr></argument>, <argument pos:start="79:28" pos:end="79:50"><expr pos:start="79:28" pos:end="79:50"><name pos:start="79:28" pos:end="79:50"><name pos:start="79:28" pos:end="79:28">s</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:50">packet_transfer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="117:5"><if pos:start="81:5" pos:end="117:5">if <condition pos:start="81:8" pos:end="81:37">(<expr pos:start="81:9" pos:end="81:36"><name pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:10">io</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:25">remainder_len</name></name> <operator pos:start="81:27" pos:end="81:28">&amp;&amp;</operator> <name pos:start="81:30" pos:end="81:36"><name pos:start="81:30" pos:end="81:31">io</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:36">len</name></name></expr>)</condition> <block pos:start="81:39" pos:end="117:5">{<block_content pos:start="85:9" pos:end="115:15">

        <comment type="block" pos:start="83:9" pos:end="83:59">/* guest wants the rest of its previous transfer */</comment>

        <decl_stmt pos:start="85:9" pos:end="85:60"><decl pos:start="85:9" pos:end="85:59"><type pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">int</name></type> <name pos:start="85:13" pos:end="85:25">remainder_len</name> <init pos:start="85:27" pos:end="85:59">= <expr pos:start="85:29" pos:end="85:59"><call pos:start="85:29" pos:end="85:59"><name pos:start="85:29" pos:end="85:31">MIN</name><argument_list pos:start="85:32" pos:end="85:59">(<argument pos:start="85:33" pos:end="85:49"><expr pos:start="85:33" pos:end="85:49"><name pos:start="85:33" pos:end="85:49"><name pos:start="85:33" pos:end="85:34">io</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:49">remainder_len</name></name></expr></argument>, <argument pos:start="85:52" pos:end="85:58"><expr pos:start="85:52" pos:end="85:58"><name pos:start="85:52" pos:end="85:58"><name pos:start="85:52" pos:end="85:53">io</name><operator pos:start="85:54" pos:end="85:55">-&gt;</operator><name pos:start="85:56" pos:end="85:58">len</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:69"><expr pos:start="89:9" pos:end="89:68"><call pos:start="89:9" pos:end="89:68"><name pos:start="89:9" pos:end="89:21">MACIO_DPRINTF</name><argument_list pos:start="89:22" pos:end="89:68">(<argument pos:start="89:23" pos:end="89:52"><expr pos:start="89:23" pos:end="89:52"><literal type="string" pos:start="89:23" pos:end="89:52">"copying remainder %d bytes\n"</literal></expr></argument>, <argument pos:start="89:55" pos:end="89:67"><expr pos:start="89:55" pos:end="89:67"><name pos:start="89:55" pos:end="89:67">remainder_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="95:64"><expr pos:start="93:9" pos:end="95:63"><call pos:start="93:9" pos:end="95:63"><name pos:start="93:9" pos:end="93:33">cpu_physical_memory_write</name><argument_list pos:start="93:34" pos:end="95:63">(<argument pos:start="93:35" pos:end="93:42"><expr pos:start="93:35" pos:end="93:42"><name pos:start="93:35" pos:end="93:42"><name pos:start="93:35" pos:end="93:36">io</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:42">addr</name></name></expr></argument>, <argument pos:start="93:45" pos:end="95:47"><expr pos:start="93:45" pos:end="95:47"><name pos:start="93:45" pos:end="93:57"><name pos:start="93:45" pos:end="93:46">io</name><operator pos:start="93:47" pos:end="93:48">-&gt;</operator><name pos:start="93:49" pos:end="93:57">remainder</name></name> <operator pos:start="93:59" pos:end="93:59">+</operator> <literal type="number" pos:start="93:61" pos:end="93:67">0x200</literal> <operator pos:start="93:67" pos:end="93:67">-</operator>

                                  <name pos:start="95:35" pos:end="95:47">remainder_len</name></expr></argument>, <argument pos:start="95:50" pos:end="95:62"><expr pos:start="95:50" pos:end="95:62"><name pos:start="95:50" pos:end="95:62">remainder_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:34"><expr pos:start="99:9" pos:end="99:33"><name pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:10">io</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:16">addr</name></name> <operator pos:start="99:18" pos:end="99:19">+=</operator> <name pos:start="99:21" pos:end="99:33">remainder_len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:33"><expr pos:start="101:9" pos:end="101:32"><name pos:start="101:9" pos:end="101:15"><name pos:start="101:9" pos:end="101:10">io</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:15">len</name></name> <operator pos:start="101:17" pos:end="101:18">-=</operator> <name pos:start="101:20" pos:end="101:32">remainder_len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:42"><expr pos:start="103:9" pos:end="103:41"><name pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:25">io_buffer_size</name></name> <operator pos:start="103:27" pos:end="103:27">=</operator> <name pos:start="103:29" pos:end="103:41">remainder_len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:43"><expr pos:start="105:9" pos:end="105:42"><name pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:10">io</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:25">remainder_len</name></name> <operator pos:start="105:27" pos:end="105:28">-=</operator> <name pos:start="105:30" pos:end="105:42">remainder_len</name></expr>;</expr_stmt>

        <comment type="block" pos:start="107:9" pos:end="107:65">/* treat remainder as individual transfer, start again */</comment>

        <expr_stmt pos:start="109:9" pos:end="111:48"><expr pos:start="109:9" pos:end="111:47"><call pos:start="109:9" pos:end="111:47"><name pos:start="109:9" pos:end="109:24">qemu_sglist_init</name><argument_list pos:start="109:25" pos:end="111:47">(<argument pos:start="109:26" pos:end="109:31"><expr pos:start="109:26" pos:end="109:31"><operator pos:start="109:26" pos:end="109:26">&amp;</operator><name pos:start="109:27" pos:end="109:31"><name pos:start="109:27" pos:end="109:27">s</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:31">sg</name></name></expr></argument>, <argument pos:start="109:34" pos:end="109:42"><expr pos:start="109:34" pos:end="109:42"><call pos:start="109:34" pos:end="109:42"><name pos:start="109:34" pos:end="109:39">DEVICE</name><argument_list pos:start="109:40" pos:end="109:42">(<argument pos:start="109:41" pos:end="109:41"><expr pos:start="109:41" pos:end="109:41"><name pos:start="109:41" pos:end="109:41">m</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:45" pos:end="109:73"><expr pos:start="109:45" pos:end="109:73"><name pos:start="109:45" pos:end="109:51"><name pos:start="109:45" pos:end="109:46">io</name><operator pos:start="109:47" pos:end="109:48">-&gt;</operator><name pos:start="109:49" pos:end="109:51">len</name></name> <operator pos:start="109:53" pos:end="109:53">/</operator> <name pos:start="109:55" pos:end="109:69">MACIO_PAGE_SIZE</name> <operator pos:start="109:71" pos:end="109:71">+</operator> <literal type="number" pos:start="109:73" pos:end="109:73">1</literal></expr></argument>,

                         <argument pos:start="111:26" pos:end="111:46"><expr pos:start="111:26" pos:end="111:46"><operator pos:start="111:26" pos:end="111:26">&amp;</operator><name pos:start="111:27" pos:end="111:46">address_space_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:46"><expr pos:start="113:9" pos:end="113:45"><call pos:start="113:9" pos:end="113:45"><name pos:start="113:9" pos:end="113:34">pmac_ide_atapi_transfer_cb</name><argument_list pos:start="113:35" pos:end="113:45">(<argument pos:start="113:36" pos:end="113:41"><expr pos:start="113:36" pos:end="113:41"><name pos:start="113:36" pos:end="113:41">opaque</name></expr></argument>, <argument pos:start="113:44" pos:end="113:44"><expr pos:start="113:44" pos:end="113:44"><literal type="number" pos:start="113:44" pos:end="113:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="115:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="129:5"><if pos:start="121:5" pos:end="129:5">if <condition pos:start="121:8" pos:end="121:33">(<expr pos:start="121:9" pos:end="121:32"><operator pos:start="121:9" pos:end="121:9">!</operator><name pos:start="121:10" pos:end="121:32"><name pos:start="121:10" pos:end="121:10">s</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:32">packet_transfer_size</name></name></expr>)</condition> <block pos:start="121:35" pos:end="129:5">{<block_content pos:start="123:9" pos:end="127:30">

        <expr_stmt pos:start="123:9" pos:end="123:43"><expr pos:start="123:9" pos:end="123:42"><call pos:start="123:9" pos:end="123:42"><name pos:start="123:9" pos:end="123:21">MACIO_DPRINTF</name><argument_list pos:start="123:22" pos:end="123:42">(<argument pos:start="123:23" pos:end="123:41"><expr pos:start="123:23" pos:end="123:41"><literal type="string" pos:start="123:23" pos:end="123:41">"end of transfer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:28"><expr pos:start="125:9" pos:end="125:27"><call pos:start="125:9" pos:end="125:27"><name pos:start="125:9" pos:end="125:24">ide_atapi_cmd_ok</name><argument_list pos:start="125:25" pos:end="125:27">(<argument pos:start="125:26" pos:end="125:26"><expr pos:start="125:26" pos:end="125:26"><name pos:start="125:26" pos:end="125:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:30"><expr pos:start="127:9" pos:end="127:29"><name pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:9">m</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:21">dma_active</name></name> <operator pos:start="127:23" pos:end="127:23">=</operator> <name pos:start="127:25" pos:end="127:29">false</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="133:5" pos:end="139:5"><if pos:start="133:5" pos:end="139:5">if <condition pos:start="133:8" pos:end="133:21">(<expr pos:start="133:9" pos:end="133:20"><name pos:start="133:9" pos:end="133:15"><name pos:start="133:9" pos:end="133:10">io</name><operator pos:start="133:11" pos:end="133:12">-&gt;</operator><name pos:start="133:13" pos:end="133:15">len</name></name> <operator pos:start="133:17" pos:end="133:18">==</operator> <literal type="number" pos:start="133:20" pos:end="133:20">0</literal></expr>)</condition> <block pos:start="133:23" pos:end="139:5">{<block_content pos:start="135:9" pos:end="137:18">

        <expr_stmt pos:start="135:9" pos:end="135:38"><expr pos:start="135:9" pos:end="135:37"><call pos:start="135:9" pos:end="135:37"><name pos:start="135:9" pos:end="135:21">MACIO_DPRINTF</name><argument_list pos:start="135:22" pos:end="135:37">(<argument pos:start="135:23" pos:end="135:36"><expr pos:start="135:23" pos:end="135:36"><literal type="string" pos:start="135:23" pos:end="135:36">"end of DMA\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="137:9" pos:end="137:18">goto <name pos:start="137:14" pos:end="137:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="143:5" pos:end="143:30">/* launch next transfer */</comment>



    <comment type="block" pos:start="147:5" pos:end="149:61">/* handle unaligned accesses first, get them over with and only do the

       remaining bulk transfer using our async DMA helpers */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:32"><expr pos:start="151:5" pos:end="151:31"><name pos:start="151:5" pos:end="151:13">unaligned</name> <operator pos:start="151:15" pos:end="151:15">=</operator> <name pos:start="151:17" pos:end="151:23"><name pos:start="151:17" pos:end="151:18">io</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:23">len</name></name> <operator pos:start="151:25" pos:end="151:25">&amp;</operator> <literal type="number" pos:start="151:27" pos:end="151:31">0x1ff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="177:5"><if pos:start="153:5" pos:end="177:5">if <condition pos:start="153:8" pos:end="153:18">(<expr pos:start="153:9" pos:end="153:17"><name pos:start="153:9" pos:end="153:17">unaligned</name></expr>)</condition> <block pos:start="153:20" pos:end="177:5">{<block_content pos:start="155:9" pos:end="175:29">

        <decl_stmt pos:start="155:9" pos:end="155:67"><decl pos:start="155:9" pos:end="155:66"><type pos:start="155:9" pos:end="155:11"><name pos:start="155:9" pos:end="155:11">int</name></type> <name pos:start="155:13" pos:end="155:22">sector_num</name> <init pos:start="155:24" pos:end="155:66">= <expr pos:start="155:26" pos:end="155:66"><operator pos:start="155:26" pos:end="155:26">(</operator><name pos:start="155:27" pos:end="155:32"><name pos:start="155:27" pos:end="155:27">s</name><operator pos:start="155:28" pos:end="155:29">-&gt;</operator><name pos:start="155:30" pos:end="155:32">lba</name></name> <operator pos:start="155:34" pos:end="155:35">&lt;&lt;</operator> <literal type="number" pos:start="155:37" pos:end="155:37">2</literal><operator pos:start="155:38" pos:end="155:38">)</operator> <operator pos:start="155:40" pos:end="155:40">+</operator> <operator pos:start="155:42" pos:end="155:42">(</operator><name pos:start="155:43" pos:end="155:60"><name pos:start="155:43" pos:end="155:43">s</name><operator pos:start="155:44" pos:end="155:45">-&gt;</operator><name pos:start="155:46" pos:end="155:60">io_buffer_index</name></name> <operator pos:start="155:62" pos:end="155:63">&gt;&gt;</operator> <literal type="number" pos:start="155:65" pos:end="155:65">9</literal><operator pos:start="155:66" pos:end="155:66">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="157:9" pos:end="157:35"><decl pos:start="157:9" pos:end="157:34"><type pos:start="157:9" pos:end="157:11"><name pos:start="157:9" pos:end="157:11">int</name></type> <name pos:start="157:13" pos:end="157:19">nsector</name> <init pos:start="157:21" pos:end="157:34">= <expr pos:start="157:23" pos:end="157:34"><name pos:start="157:23" pos:end="157:29"><name pos:start="157:23" pos:end="157:24">io</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:29">len</name></name> <operator pos:start="157:31" pos:end="157:32">&gt;&gt;</operator> <literal type="number" pos:start="157:34" pos:end="157:34">9</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="161:9" pos:end="163:65"><expr pos:start="161:9" pos:end="163:64"><call pos:start="161:9" pos:end="163:64"><name pos:start="161:9" pos:end="161:21">MACIO_DPRINTF</name><argument_list pos:start="161:22" pos:end="163:64">(<argument pos:start="161:23" pos:end="161:76"><expr pos:start="161:23" pos:end="161:76"><literal type="string" pos:start="161:23" pos:end="161:59">"precopying unaligned %d bytes to %#"</literal> <name pos:start="161:61" pos:end="161:71">HWADDR_PRIx</name> <literal type="string" pos:start="161:73" pos:end="161:76">"\n"</literal></expr></argument>,

                      <argument pos:start="163:23" pos:end="163:31"><expr pos:start="163:23" pos:end="163:31"><name pos:start="163:23" pos:end="163:31">unaligned</name></expr></argument>, <argument pos:start="163:34" pos:end="163:63"><expr pos:start="163:34" pos:end="163:63"><name pos:start="163:34" pos:end="163:41"><name pos:start="163:34" pos:end="163:35">io</name><operator pos:start="163:36" pos:end="163:37">-&gt;</operator><name pos:start="163:38" pos:end="163:41">addr</name></name> <operator pos:start="163:43" pos:end="163:43">+</operator> <name pos:start="163:45" pos:end="163:51"><name pos:start="163:45" pos:end="163:46">io</name><operator pos:start="163:47" pos:end="163:48">-&gt;</operator><name pos:start="163:49" pos:end="163:51">len</name></name> <operator pos:start="163:53" pos:end="163:53">-</operator> <name pos:start="163:55" pos:end="163:63">unaligned</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:65"><expr pos:start="167:9" pos:end="167:64"><call pos:start="167:9" pos:end="167:64"><name pos:start="167:9" pos:end="167:17">bdrv_read</name><argument_list pos:start="167:18" pos:end="167:64">(<argument pos:start="167:19" pos:end="167:23"><expr pos:start="167:19" pos:end="167:23"><name pos:start="167:19" pos:end="167:23"><name pos:start="167:19" pos:end="167:19">s</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:23">bs</name></name></expr></argument>, <argument pos:start="167:26" pos:end="167:45"><expr pos:start="167:26" pos:end="167:45"><name pos:start="167:26" pos:end="167:35">sector_num</name> <operator pos:start="167:37" pos:end="167:37">+</operator> <name pos:start="167:39" pos:end="167:45">nsector</name></expr></argument>, <argument pos:start="167:48" pos:end="167:60"><expr pos:start="167:48" pos:end="167:60"><name pos:start="167:48" pos:end="167:60"><name pos:start="167:48" pos:end="167:49">io</name><operator pos:start="167:50" pos:end="167:51">-&gt;</operator><name pos:start="167:52" pos:end="167:60">remainder</name></name></expr></argument>, <argument pos:start="167:63" pos:end="167:63"><expr pos:start="167:63" pos:end="167:63"><literal type="number" pos:start="167:63" pos:end="167:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="171:60"><expr pos:start="169:9" pos:end="171:59"><call pos:start="169:9" pos:end="171:59"><name pos:start="169:9" pos:end="169:33">cpu_physical_memory_write</name><argument_list pos:start="169:34" pos:end="171:59">(<argument pos:start="169:35" pos:end="169:64"><expr pos:start="169:35" pos:end="169:64"><name pos:start="169:35" pos:end="169:42"><name pos:start="169:35" pos:end="169:36">io</name><operator pos:start="169:37" pos:end="169:38">-&gt;</operator><name pos:start="169:39" pos:end="169:42">addr</name></name> <operator pos:start="169:44" pos:end="169:44">+</operator> <name pos:start="169:46" pos:end="169:52"><name pos:start="169:46" pos:end="169:47">io</name><operator pos:start="169:48" pos:end="169:49">-&gt;</operator><name pos:start="169:50" pos:end="169:52">len</name></name> <operator pos:start="169:54" pos:end="169:54">-</operator> <name pos:start="169:56" pos:end="169:64">unaligned</name></expr></argument>,

                                  <argument pos:start="171:35" pos:end="171:47"><expr pos:start="171:35" pos:end="171:47"><name pos:start="171:35" pos:end="171:47"><name pos:start="171:35" pos:end="171:36">io</name><operator pos:start="171:37" pos:end="171:38">-&gt;</operator><name pos:start="171:39" pos:end="171:47">remainder</name></name></expr></argument>, <argument pos:start="171:50" pos:end="171:58"><expr pos:start="171:50" pos:end="171:58"><name pos:start="171:50" pos:end="171:58">unaligned</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="175:9" pos:end="175:29"><expr pos:start="175:9" pos:end="175:28"><name pos:start="175:9" pos:end="175:15"><name pos:start="175:9" pos:end="175:10">io</name><operator pos:start="175:11" pos:end="175:12">-&gt;</operator><name pos:start="175:13" pos:end="175:15">len</name></name> <operator pos:start="175:17" pos:end="175:18">-=</operator> <name pos:start="175:20" pos:end="175:28">unaligned</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:46"><expr pos:start="181:5" pos:end="181:45"><call pos:start="181:5" pos:end="181:45"><name pos:start="181:5" pos:end="181:17">MACIO_DPRINTF</name><argument_list pos:start="181:18" pos:end="181:45">(<argument pos:start="181:19" pos:end="181:35"><expr pos:start="181:19" pos:end="181:35"><literal type="string" pos:start="181:19" pos:end="181:35">"io-&gt;len = %#x\n"</literal></expr></argument>, <argument pos:start="181:38" pos:end="181:44"><expr pos:start="181:38" pos:end="181:44"><name pos:start="181:38" pos:end="181:44"><name pos:start="181:38" pos:end="181:39">io</name><operator pos:start="181:40" pos:end="181:41">-&gt;</operator><name pos:start="181:42" pos:end="181:44">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="185:5" pos:end="187:44"><expr pos:start="185:5" pos:end="187:43"><call pos:start="185:5" pos:end="187:43"><name pos:start="185:5" pos:end="185:20">qemu_sglist_init</name><argument_list pos:start="185:21" pos:end="187:43">(<argument pos:start="185:22" pos:end="185:27"><expr pos:start="185:22" pos:end="185:27"><operator pos:start="185:22" pos:end="185:22">&amp;</operator><name pos:start="185:23" pos:end="185:27"><name pos:start="185:23" pos:end="185:23">s</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:27">sg</name></name></expr></argument>, <argument pos:start="185:30" pos:end="185:38"><expr pos:start="185:30" pos:end="185:38"><call pos:start="185:30" pos:end="185:38"><name pos:start="185:30" pos:end="185:35">DEVICE</name><argument_list pos:start="185:36" pos:end="185:38">(<argument pos:start="185:37" pos:end="185:37"><expr pos:start="185:37" pos:end="185:37"><name pos:start="185:37" pos:end="185:37">m</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="185:41" pos:end="185:69"><expr pos:start="185:41" pos:end="185:69"><name pos:start="185:41" pos:end="185:47"><name pos:start="185:41" pos:end="185:42">io</name><operator pos:start="185:43" pos:end="185:44">-&gt;</operator><name pos:start="185:45" pos:end="185:47">len</name></name> <operator pos:start="185:49" pos:end="185:49">/</operator> <name pos:start="185:51" pos:end="185:65">MACIO_PAGE_SIZE</name> <operator pos:start="185:67" pos:end="185:67">+</operator> <literal type="number" pos:start="185:69" pos:end="185:69">1</literal></expr></argument>,

                     <argument pos:start="187:22" pos:end="187:42"><expr pos:start="187:22" pos:end="187:42"><operator pos:start="187:22" pos:end="187:22">&amp;</operator><name pos:start="187:23" pos:end="187:42">address_space_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:47"><expr pos:start="189:5" pos:end="189:46"><call pos:start="189:5" pos:end="189:46"><name pos:start="189:5" pos:end="189:19">qemu_sglist_add</name><argument_list pos:start="189:20" pos:end="189:46">(<argument pos:start="189:21" pos:end="189:26"><expr pos:start="189:21" pos:end="189:26"><operator pos:start="189:21" pos:end="189:21">&amp;</operator><name pos:start="189:22" pos:end="189:26"><name pos:start="189:22" pos:end="189:22">s</name><operator pos:start="189:23" pos:end="189:24">-&gt;</operator><name pos:start="189:25" pos:end="189:26">sg</name></name></expr></argument>, <argument pos:start="189:29" pos:end="189:36"><expr pos:start="189:29" pos:end="189:36"><name pos:start="189:29" pos:end="189:36"><name pos:start="189:29" pos:end="189:30">io</name><operator pos:start="189:31" pos:end="189:32">-&gt;</operator><name pos:start="189:33" pos:end="189:36">addr</name></name></expr></argument>, <argument pos:start="189:39" pos:end="189:45"><expr pos:start="189:39" pos:end="189:45"><name pos:start="189:39" pos:end="189:45"><name pos:start="189:39" pos:end="189:40">io</name><operator pos:start="189:41" pos:end="189:42">-&gt;</operator><name pos:start="189:43" pos:end="189:45">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:34"><expr pos:start="191:5" pos:end="191:33"><name pos:start="191:5" pos:end="191:12"><name pos:start="191:5" pos:end="191:6">io</name><operator pos:start="191:7" pos:end="191:8">-&gt;</operator><name pos:start="191:9" pos:end="191:12">addr</name></name> <operator pos:start="191:14" pos:end="191:15">+=</operator> <name pos:start="191:17" pos:end="191:33"><name pos:start="191:17" pos:end="191:17">s</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:33">io_buffer_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="195:57"><expr pos:start="193:5" pos:end="195:56"><name pos:start="193:5" pos:end="193:21"><name pos:start="193:5" pos:end="193:6">io</name><operator pos:start="193:7" pos:end="193:8">-&gt;</operator><name pos:start="193:9" pos:end="193:21">remainder_len</name></name> <operator pos:start="193:23" pos:end="193:23">=</operator> <call pos:start="193:25" pos:end="195:56"><name pos:start="193:25" pos:end="193:27">MIN</name><argument_list pos:start="193:28" pos:end="195:56">(<argument pos:start="193:29" pos:end="193:71"><expr pos:start="193:29" pos:end="193:71"><name pos:start="193:29" pos:end="193:51"><name pos:start="193:29" pos:end="193:29">s</name><operator pos:start="193:30" pos:end="193:31">-&gt;</operator><name pos:start="193:32" pos:end="193:51">packet_transfer_size</name></name> <operator pos:start="193:53" pos:end="193:53">-</operator> <name pos:start="193:55" pos:end="193:71"><name pos:start="193:55" pos:end="193:55">s</name><operator pos:start="193:56" pos:end="193:57">-&gt;</operator><name pos:start="193:58" pos:end="193:71">io_buffer_size</name></name></expr></argument>,

                            <argument pos:start="195:29" pos:end="195:55"><expr pos:start="195:29" pos:end="195:55"><operator pos:start="195:29" pos:end="195:29">(</operator><literal type="number" pos:start="195:30" pos:end="195:36">0x200</literal> <operator pos:start="195:36" pos:end="195:36">-</operator> <name pos:start="195:38" pos:end="195:46">unaligned</name><operator pos:start="195:47" pos:end="195:47">)</operator> <operator pos:start="195:49" pos:end="195:49">&amp;</operator> <literal type="number" pos:start="195:51" pos:end="195:55">0x1ff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:63"><expr pos:start="197:5" pos:end="197:62"><call pos:start="197:5" pos:end="197:62"><name pos:start="197:5" pos:end="197:17">MACIO_DPRINTF</name><argument_list pos:start="197:18" pos:end="197:62">(<argument pos:start="197:19" pos:end="197:42"><expr pos:start="197:19" pos:end="197:42"><literal type="string" pos:start="197:19" pos:end="197:42">"set remainder to: %d\n"</literal></expr></argument>, <argument pos:start="197:45" pos:end="197:61"><expr pos:start="197:45" pos:end="197:61"><name pos:start="197:45" pos:end="197:61"><name pos:start="197:45" pos:end="197:46">io</name><operator pos:start="197:47" pos:end="197:48">-&gt;</operator><name pos:start="197:49" pos:end="197:61">remainder_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="201:5" pos:end="203:40">/* We would read no data from the block layer, thus not get a callback.

       Just fake completion manually. */</comment>

    <if_stmt pos:start="205:5" pos:end="211:5"><if pos:start="205:5" pos:end="211:5">if <condition pos:start="205:8" pos:end="205:17">(<expr pos:start="205:9" pos:end="205:16"><operator pos:start="205:9" pos:end="205:9">!</operator><name pos:start="205:10" pos:end="205:16"><name pos:start="205:10" pos:end="205:11">io</name><operator pos:start="205:12" pos:end="205:13">-&gt;</operator><name pos:start="205:14" pos:end="205:16">len</name></name></expr>)</condition> <block pos:start="205:19" pos:end="211:5">{<block_content pos:start="207:9" pos:end="209:15">

        <expr_stmt pos:start="207:9" pos:end="207:46"><expr pos:start="207:9" pos:end="207:45"><call pos:start="207:9" pos:end="207:45"><name pos:start="207:9" pos:end="207:34">pmac_ide_atapi_transfer_cb</name><argument_list pos:start="207:35" pos:end="207:45">(<argument pos:start="207:36" pos:end="207:41"><expr pos:start="207:36" pos:end="207:41"><name pos:start="207:36" pos:end="207:41">opaque</name></expr></argument>, <argument pos:start="207:44" pos:end="207:44"><expr pos:start="207:44" pos:end="207:44"><literal type="number" pos:start="207:44" pos:end="207:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="209:9" pos:end="209:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:16"><expr pos:start="215:5" pos:end="215:15"><name pos:start="215:5" pos:end="215:11"><name pos:start="215:5" pos:end="215:6">io</name><operator pos:start="215:7" pos:end="215:8">-&gt;</operator><name pos:start="215:9" pos:end="215:11">len</name></name> <operator pos:start="215:13" pos:end="215:13">=</operator> <literal type="number" pos:start="215:15" pos:end="215:15">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="219:5" pos:end="223:55"><expr pos:start="219:5" pos:end="223:54"><call pos:start="219:5" pos:end="223:54"><name pos:start="219:5" pos:end="219:17">MACIO_DPRINTF</name><argument_list pos:start="219:18" pos:end="223:54">(<argument pos:start="219:19" pos:end="219:55"><expr pos:start="219:19" pos:end="219:55"><literal type="string" pos:start="219:19" pos:end="219:55">"sector_num=%d size=%d, cmd_cmd=%d\n"</literal></expr></argument>,

                  <argument pos:start="221:19" pos:end="221:59"><expr pos:start="221:19" pos:end="221:59"><operator pos:start="221:19" pos:end="221:19">(</operator><name pos:start="221:20" pos:end="221:25"><name pos:start="221:20" pos:end="221:20">s</name><operator pos:start="221:21" pos:end="221:22">-&gt;</operator><name pos:start="221:23" pos:end="221:25">lba</name></name> <operator pos:start="221:27" pos:end="221:28">&lt;&lt;</operator> <literal type="number" pos:start="221:30" pos:end="221:30">2</literal><operator pos:start="221:31" pos:end="221:31">)</operator> <operator pos:start="221:33" pos:end="221:33">+</operator> <operator pos:start="221:35" pos:end="221:35">(</operator><name pos:start="221:36" pos:end="221:53"><name pos:start="221:36" pos:end="221:36">s</name><operator pos:start="221:37" pos:end="221:38">-&gt;</operator><name pos:start="221:39" pos:end="221:53">io_buffer_index</name></name> <operator pos:start="221:55" pos:end="221:56">&gt;&gt;</operator> <literal type="number" pos:start="221:58" pos:end="221:58">9</literal><operator pos:start="221:59" pos:end="221:59">)</operator></expr></argument>,

                  <argument pos:start="223:19" pos:end="223:41"><expr pos:start="223:19" pos:end="223:41"><name pos:start="223:19" pos:end="223:41"><name pos:start="223:19" pos:end="223:19">s</name><operator pos:start="223:20" pos:end="223:21">-&gt;</operator><name pos:start="223:22" pos:end="223:41">packet_transfer_size</name></name></expr></argument>, <argument pos:start="223:44" pos:end="223:53"><expr pos:start="223:44" pos:end="223:53"><name pos:start="223:44" pos:end="223:53"><name pos:start="223:44" pos:end="223:44">s</name><operator pos:start="223:45" pos:end="223:46">-&gt;</operator><name pos:start="223:47" pos:end="223:53">dma_cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="227:5" pos:end="231:61"><expr pos:start="227:5" pos:end="231:60"><name pos:start="227:5" pos:end="227:12"><name pos:start="227:5" pos:end="227:5">m</name><operator pos:start="227:6" pos:end="227:7">-&gt;</operator><name pos:start="227:8" pos:end="227:12">aiocb</name></name> <operator pos:start="227:14" pos:end="227:14">=</operator> <call pos:start="227:16" pos:end="231:60"><name pos:start="227:16" pos:end="227:28">dma_bdrv_read</name><argument_list pos:start="227:29" pos:end="231:60">(<argument pos:start="227:30" pos:end="227:34"><expr pos:start="227:30" pos:end="227:34"><name pos:start="227:30" pos:end="227:34"><name pos:start="227:30" pos:end="227:30">s</name><operator pos:start="227:31" pos:end="227:32">-&gt;</operator><name pos:start="227:33" pos:end="227:34">bs</name></name></expr></argument>, <argument pos:start="227:37" pos:end="227:42"><expr pos:start="227:37" pos:end="227:42"><operator pos:start="227:37" pos:end="227:37">&amp;</operator><name pos:start="227:38" pos:end="227:42"><name pos:start="227:38" pos:end="227:38">s</name><operator pos:start="227:39" pos:end="227:40">-&gt;</operator><name pos:start="227:41" pos:end="227:42">sg</name></name></expr></argument>,

                             <argument pos:start="229:30" pos:end="229:79"><expr pos:start="229:30" pos:end="229:79"><operator pos:start="229:30" pos:end="229:30">(</operator><name pos:start="229:31" pos:end="229:37">int64_t</name><operator pos:start="229:38" pos:end="229:38">)</operator><operator pos:start="229:39" pos:end="229:39">(</operator><name pos:start="229:40" pos:end="229:45"><name pos:start="229:40" pos:end="229:40">s</name><operator pos:start="229:41" pos:end="229:42">-&gt;</operator><name pos:start="229:43" pos:end="229:45">lba</name></name> <operator pos:start="229:47" pos:end="229:48">&lt;&lt;</operator> <literal type="number" pos:start="229:50" pos:end="229:50">2</literal><operator pos:start="229:51" pos:end="229:51">)</operator> <operator pos:start="229:53" pos:end="229:53">+</operator> <operator pos:start="229:55" pos:end="229:55">(</operator><name pos:start="229:56" pos:end="229:73"><name pos:start="229:56" pos:end="229:56">s</name><operator pos:start="229:57" pos:end="229:58">-&gt;</operator><name pos:start="229:59" pos:end="229:73">io_buffer_index</name></name> <operator pos:start="229:75" pos:end="229:76">&gt;&gt;</operator> <literal type="number" pos:start="229:78" pos:end="229:78">9</literal><operator pos:start="229:79" pos:end="229:79">)</operator></expr></argument>,

                             <argument pos:start="231:30" pos:end="231:55"><expr pos:start="231:30" pos:end="231:55"><name pos:start="231:30" pos:end="231:55">pmac_ide_atapi_transfer_cb</name></expr></argument>, <argument pos:start="231:58" pos:end="231:59"><expr pos:start="231:58" pos:end="231:59"><name pos:start="231:58" pos:end="231:59">io</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="233:5" pos:end="233:11">return;</return>



<label pos:start="237:1" pos:end="237:5"><name pos:start="237:1" pos:end="237:4">done</name>:</label>

    <expr_stmt pos:start="239:5" pos:end="239:32"><expr pos:start="239:5" pos:end="239:31"><call pos:start="239:5" pos:end="239:31"><name pos:start="239:5" pos:end="239:17">MACIO_DPRINTF</name><argument_list pos:start="239:18" pos:end="239:31">(<argument pos:start="239:19" pos:end="239:30"><expr pos:start="239:19" pos:end="239:30"><literal type="string" pos:start="239:19" pos:end="239:30">"done DMA\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:53"><expr pos:start="241:5" pos:end="241:52"><call pos:start="241:5" pos:end="241:52"><name pos:start="241:5" pos:end="241:19">block_acct_done</name><argument_list pos:start="241:20" pos:end="241:52">(<argument pos:start="241:21" pos:end="241:41"><expr pos:start="241:21" pos:end="241:41"><call pos:start="241:21" pos:end="241:41"><name pos:start="241:21" pos:end="241:34">bdrv_get_stats</name><argument_list pos:start="241:35" pos:end="241:41">(<argument pos:start="241:36" pos:end="241:40"><expr pos:start="241:36" pos:end="241:40"><name pos:start="241:36" pos:end="241:40"><name pos:start="241:36" pos:end="241:36">s</name><operator pos:start="241:37" pos:end="241:38">-&gt;</operator><name pos:start="241:39" pos:end="241:40">bs</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="241:44" pos:end="241:51"><expr pos:start="241:44" pos:end="241:51"><operator pos:start="241:44" pos:end="241:44">&amp;</operator><name pos:start="241:45" pos:end="241:51"><name pos:start="241:45" pos:end="241:45">s</name><operator pos:start="241:46" pos:end="241:47">-&gt;</operator><name pos:start="241:48" pos:end="241:51">acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:24"><expr pos:start="243:5" pos:end="243:23"><call pos:start="243:5" pos:end="243:23"><name pos:start="243:5" pos:end="243:15"><name pos:start="243:5" pos:end="243:6">io</name><operator pos:start="243:7" pos:end="243:8">-&gt;</operator><name pos:start="243:9" pos:end="243:15">dma_end</name></name><argument_list pos:start="243:16" pos:end="243:23">(<argument pos:start="243:17" pos:end="243:22"><expr pos:start="243:17" pos:end="243:22"><name pos:start="243:17" pos:end="243:22">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
