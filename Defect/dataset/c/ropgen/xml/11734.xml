<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11734.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">convert_matrix</name><parameter_list pos:start="1:27" pos:end="1:93">(<parameter pos:start="1:28" pos:end="1:36"><decl pos:start="1:28" pos:end="1:36"><type pos:start="1:28" pos:end="1:36"><name pos:start="1:28" pos:end="1:30">int</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:36">qmat</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:44">UINT16</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:52">qmat16</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:80"><decl pos:start="1:55" pos:end="1:80"><type pos:start="1:55" pos:end="1:80"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:66">UINT16</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:80">quant_matrix</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:92"><decl pos:start="1:83" pos:end="1:92"><type pos:start="1:83" pos:end="1:92"><name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:92">qscale</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="49:5"><if pos:start="9:5" pos:end="29:5">if <condition pos:start="9:8" pos:end="9:35">(<expr pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:15">av_fdct</name> <operator pos:start="9:17" pos:end="9:18">==</operator> <name pos:start="9:20" pos:end="9:34">jpeg_fdct_ifast</name></expr>)</condition> <block pos:start="9:37" pos:end="29:5">{<block_content pos:start="11:9" pos:end="27:9">

        <for pos:start="11:9" pos:end="27:9">for<control pos:start="11:12" pos:end="11:25">(<init pos:start="11:13" pos:end="11:16"><expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:13">i</name><operator pos:start="11:14" pos:end="11:14">=</operator><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>;</init><condition pos:start="11:17" pos:end="11:21"><expr pos:start="11:17" pos:end="11:20"><name pos:start="11:17" pos:end="11:17">i</name><operator pos:start="11:18" pos:end="11:18">&lt;</operator><literal type="number" pos:start="11:19" pos:end="11:20">64</literal></expr>;</condition><incr pos:start="11:22" pos:end="11:24"><expr pos:start="11:22" pos:end="11:24"><name pos:start="11:22" pos:end="11:22">i</name><operator pos:start="11:23" pos:end="11:24">++</operator></expr></incr>)</control> <block pos:start="11:27" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:89">

            <comment type="block" pos:start="13:13" pos:end="13:56">/* 16 &lt;= qscale * quant_matrix[i] &lt;= 7905 */</comment>

            <comment type="block" pos:start="15:13" pos:end="15:97">/* 19952         &lt;= aanscales[i] * qscale * quant_matrix[i]           &lt;= 249205026 */</comment>

            <comment type="block" pos:start="17:13" pos:end="17:105">/* (1&lt;&lt;36)/19952 &gt;= (1&lt;&lt;36)/(aanscales[i] * qscale * quant_matrix[i]) &gt;= (1&lt;&lt;36)/249205026 */</comment>

            <comment type="block" pos:start="19:13" pos:end="19:91">/* 3444240       &gt;= (1&lt;&lt;36)/(aanscales[i] * qscale * quant_matrix[i]) &gt;= 275 */</comment>

            

            <expr_stmt pos:start="23:13" pos:end="25:89"><expr pos:start="23:13" pos:end="25:88"><name pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:16">qmat</name><index pos:start="23:17" pos:end="23:37">[<expr pos:start="23:18" pos:end="23:36"><call pos:start="23:18" pos:end="23:36"><name pos:start="23:18" pos:end="23:33">block_permute_op</name><argument_list pos:start="23:34" pos:end="23:36">(<argument pos:start="23:35" pos:end="23:35"><expr pos:start="23:35" pos:end="23:35"><name pos:start="23:35" pos:end="23:35">i</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="23:39" pos:end="23:39">=</operator> <operator pos:start="23:41" pos:end="23:41">(</operator><name pos:start="23:42" pos:end="23:44">int</name><operator pos:start="23:45" pos:end="23:45">)</operator><operator pos:start="23:46" pos:end="23:46">(</operator><operator pos:start="23:47" pos:end="23:47">(</operator><call pos:start="23:48" pos:end="23:58"><name pos:start="23:48" pos:end="23:55">UINT64_C</name><argument_list pos:start="23:56" pos:end="23:58">(<argument pos:start="23:57" pos:end="23:57"><expr pos:start="23:57" pos:end="23:57"><literal type="number" pos:start="23:57" pos:end="23:57">1</literal></expr></argument>)</argument_list></call> <operator pos:start="23:60" pos:end="23:61">&lt;&lt;</operator> <operator pos:start="23:63" pos:end="23:63">(</operator><name pos:start="23:64" pos:end="23:73">QMAT_SHIFT</name> <operator pos:start="23:75" pos:end="23:75">+</operator> <literal type="number" pos:start="23:77" pos:end="23:78">11</literal><operator pos:start="23:79" pos:end="23:79">)</operator><operator pos:start="23:80" pos:end="23:80">)</operator> <operator pos:start="23:82" pos:end="23:82">/</operator> 

                            <operator pos:start="25:29" pos:end="25:29">(</operator><name pos:start="25:30" pos:end="25:41"><name pos:start="25:30" pos:end="25:38">aanscales</name><index pos:start="25:39" pos:end="25:41">[<expr pos:start="25:40" pos:end="25:40"><name pos:start="25:40" pos:end="25:40">i</name></expr>]</index></name> <operator pos:start="25:43" pos:end="25:43">*</operator> <name pos:start="25:45" pos:end="25:50">qscale</name> <operator pos:start="25:52" pos:end="25:52">*</operator> <name pos:start="25:54" pos:end="25:86"><name pos:start="25:54" pos:end="25:65">quant_matrix</name><index pos:start="25:66" pos:end="25:86">[<expr pos:start="25:67" pos:end="25:85"><call pos:start="25:67" pos:end="25:85"><name pos:start="25:67" pos:end="25:82">block_permute_op</name><argument_list pos:start="25:83" pos:end="25:85">(<argument pos:start="25:84" pos:end="25:84"><expr pos:start="25:84" pos:end="25:84"><name pos:start="25:84" pos:end="25:84">i</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="25:87" pos:end="25:87">)</operator><operator pos:start="25:88" pos:end="25:88">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="49:5">else <block pos:start="29:12" pos:end="49:5">{<block_content pos:start="31:9" pos:end="47:9">

        <for pos:start="31:9" pos:end="47:9">for<control pos:start="31:12" pos:end="31:25">(<init pos:start="31:13" pos:end="31:16"><expr pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:13">i</name><operator pos:start="31:14" pos:end="31:14">=</operator><literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>;</init><condition pos:start="31:17" pos:end="31:21"><expr pos:start="31:17" pos:end="31:20"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:18">&lt;</operator><literal type="number" pos:start="31:19" pos:end="31:20">64</literal></expr>;</condition><incr pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:22">i</name><operator pos:start="31:23" pos:end="31:24">++</operator></expr></incr>)</control> <block pos:start="31:27" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:93">

            <comment type="block" pos:start="33:13" pos:end="41:14">/* We can safely suppose that 16 &lt;= quant_matrix[i] &lt;= 255

               So 16           &lt;= qscale * quant_matrix[i]             &lt;= 7905

               so (1&lt;&lt;19) / 16 &gt;= (1&lt;&lt;19) / (qscale * quant_matrix[i]) &gt;= (1&lt;&lt;19) / 7905

               so 32768        &gt;= (1&lt;&lt;19) / (qscale * quant_matrix[i]) &gt;= 67

            */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:75"><expr pos:start="43:13" pos:end="43:74"><name pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:16">qmat</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><name pos:start="43:18" pos:end="43:18">i</name></expr>]</index></name>   <operator pos:start="43:23" pos:end="43:23">=</operator> <operator pos:start="43:25" pos:end="43:25">(</operator><literal type="number" pos:start="43:26" pos:end="43:26">1</literal> <operator pos:start="43:28" pos:end="43:29">&lt;&lt;</operator> <name pos:start="43:31" pos:end="43:44">QMAT_SHIFT_MMX</name><operator pos:start="43:45" pos:end="43:45">)</operator> <operator pos:start="43:47" pos:end="43:47">/</operator> <operator pos:start="43:49" pos:end="43:49">(</operator><name pos:start="43:50" pos:end="43:55">qscale</name> <operator pos:start="43:57" pos:end="43:57">*</operator> <name pos:start="43:59" pos:end="43:73"><name pos:start="43:59" pos:end="43:70">quant_matrix</name><index pos:start="43:71" pos:end="43:73">[<expr pos:start="43:72" pos:end="43:72"><name pos:start="43:72" pos:end="43:72">i</name></expr>]</index></name><operator pos:start="43:74" pos:end="43:74">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:93"><expr pos:start="45:13" pos:end="45:92"><name pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:18">qmat16</name><index pos:start="45:19" pos:end="45:21">[<expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">i</name></expr>]</index></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <operator pos:start="45:25" pos:end="45:25">(</operator><literal type="number" pos:start="45:26" pos:end="45:26">1</literal> <operator pos:start="45:28" pos:end="45:29">&lt;&lt;</operator> <name pos:start="45:31" pos:end="45:44">QMAT_SHIFT_MMX</name><operator pos:start="45:45" pos:end="45:45">)</operator> <operator pos:start="45:47" pos:end="45:47">/</operator> <operator pos:start="45:49" pos:end="45:49">(</operator><name pos:start="45:50" pos:end="45:55">qscale</name> <operator pos:start="45:57" pos:end="45:57">*</operator> <name pos:start="45:59" pos:end="45:91"><name pos:start="45:59" pos:end="45:70">quant_matrix</name><index pos:start="45:71" pos:end="45:91">[<expr pos:start="45:72" pos:end="45:90"><call pos:start="45:72" pos:end="45:90"><name pos:start="45:72" pos:end="45:87">block_permute_op</name><argument_list pos:start="45:88" pos:end="45:90">(<argument pos:start="45:89" pos:end="45:89"><expr pos:start="45:89" pos:end="45:89"><name pos:start="45:89" pos:end="45:89">i</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="45:92" pos:end="45:92">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
