<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4628.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">qemu_put_byte</name><parameter_list pos:start="1:19" pos:end="1:38">(<parameter pos:start="1:20" pos:end="1:30"><decl pos:start="1:20" pos:end="1:30"><type pos:start="1:20" pos:end="1:30"><name pos:start="1:20" pos:end="1:27">QEMUFile</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:30">f</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:37"><decl pos:start="1:33" pos:end="1:37"><type pos:start="1:33" pos:end="1:37"><name pos:start="1:33" pos:end="1:35">int</name></type> <name pos:start="1:37" pos:end="1:37">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:5">

    <if_stmt pos:start="5:5" pos:end="13:5"><if pos:start="5:5" pos:end="13:5">if <condition pos:start="5:8" pos:end="5:63">(<expr pos:start="5:9" pos:end="5:62"><operator pos:start="5:9" pos:end="5:9">!</operator><name pos:start="5:10" pos:end="5:22"><name pos:start="5:10" pos:end="5:10">f</name><operator pos:start="5:11" pos:end="5:12">-&gt;</operator><name pos:start="5:13" pos:end="5:22">last_error</name></name> <operator pos:start="5:24" pos:end="5:25">&amp;&amp;</operator> <name pos:start="5:27" pos:end="5:37"><name pos:start="5:27" pos:end="5:27">f</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:37">is_write</name></name> <operator pos:start="5:39" pos:end="5:40">==</operator> <literal type="number" pos:start="5:42" pos:end="5:42">0</literal> <operator pos:start="5:44" pos:end="5:45">&amp;&amp;</operator> <name pos:start="5:47" pos:end="5:58"><name pos:start="5:47" pos:end="5:47">f</name><operator pos:start="5:48" pos:end="5:49">-&gt;</operator><name pos:start="5:50" pos:end="5:58">buf_index</name></name> <operator pos:start="5:60" pos:end="5:60">&gt;</operator> <literal type="number" pos:start="5:62" pos:end="5:62">0</literal></expr>)</condition> <block pos:start="5:65" pos:end="13:5">{<block_content pos:start="7:9" pos:end="11:16">

        <expr_stmt pos:start="7:9" pos:end="9:81"><expr pos:start="7:9" pos:end="9:80"><call pos:start="7:9" pos:end="9:80"><name pos:start="7:9" pos:end="7:15">fprintf</name><argument_list pos:start="7:16" pos:end="9:80">(<argument pos:start="7:17" pos:end="7:22"><expr pos:start="7:17" pos:end="7:22"><name pos:start="7:17" pos:end="7:22">stderr</name></expr></argument>,

                <argument pos:start="9:17" pos:end="9:79"><expr pos:start="9:17" pos:end="9:79"><literal type="string" pos:start="9:17" pos:end="9:79">"Attempted to write to buffer while read buffer is not empty\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:16"><expr pos:start="11:9" pos:end="11:15"><call pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:13">abort</name><argument_list pos:start="11:14" pos:end="11:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:5">f</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:10">buf</name><index pos:start="17:11" pos:end="17:26">[<expr pos:start="17:12" pos:end="17:25"><name pos:start="17:12" pos:end="17:23"><name pos:start="17:12" pos:end="17:12">f</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:23">buf_index</name></name><operator pos:start="17:24" pos:end="17:25">++</operator></expr>]</index></name> <operator pos:start="17:28" pos:end="17:28">=</operator> <name pos:start="17:30" pos:end="17:30">v</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:5">f</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:15">is_write</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <literal type="number" pos:start="19:19" pos:end="19:19">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:36">(<expr pos:start="21:9" pos:end="21:35"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:9">f</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:20">buf_index</name></name> <operator pos:start="21:22" pos:end="21:23">&gt;=</operator> <name pos:start="21:25" pos:end="21:35">IO_BUF_SIZE</name></expr>)</condition> <block pos:start="21:38" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:39">

        <decl_stmt pos:start="23:9" pos:end="23:33"><decl pos:start="23:9" pos:end="23:32"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:15">ret</name> <init pos:start="23:17" pos:end="23:32">= <expr pos:start="23:19" pos:end="23:32"><call pos:start="23:19" pos:end="23:32"><name pos:start="23:19" pos:end="23:29">qemu_fflush</name><argument_list pos:start="23:30" pos:end="23:32">(<argument pos:start="23:31" pos:end="23:31"><expr pos:start="23:31" pos:end="23:31"><name pos:start="23:31" pos:end="23:31">f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><call pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:30">qemu_file_set_if_error</name><argument_list pos:start="25:31" pos:end="25:38">(<argument pos:start="25:32" pos:end="25:32"><expr pos:start="25:32" pos:end="25:32"><name pos:start="25:32" pos:end="25:32">f</name></expr></argument>, <argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:37">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
