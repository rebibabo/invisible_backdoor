<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18273.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">os_host_main_loop_wait</name><parameter_list pos:start="1:34" pos:end="1:51">(<parameter pos:start="1:35" pos:end="1:50"><decl pos:start="1:35" pos:end="1:50"><type pos:start="1:35" pos:end="1:42"><name pos:start="1:35" pos:end="1:42">uint32_t</name></type> <name pos:start="1:44" pos:end="1:50">timeout</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:59"><expr pos:start="9:5" pos:end="9:58"><call pos:start="9:5" pos:end="9:58"><name pos:start="9:5" pos:end="9:20">glib_select_fill</name><argument_list pos:start="9:21" pos:end="9:58">(<argument pos:start="9:22" pos:end="9:26"><expr pos:start="9:22" pos:end="9:26"><operator pos:start="9:22" pos:end="9:22">&amp;</operator><name pos:start="9:23" pos:end="9:26">nfds</name></expr></argument>, <argument pos:start="9:29" pos:end="9:33"><expr pos:start="9:29" pos:end="9:33"><operator pos:start="9:29" pos:end="9:29">&amp;</operator><name pos:start="9:30" pos:end="9:33">rfds</name></expr></argument>, <argument pos:start="9:36" pos:end="9:40"><expr pos:start="9:36" pos:end="9:40"><operator pos:start="9:36" pos:end="9:36">&amp;</operator><name pos:start="9:37" pos:end="9:40">wfds</name></expr></argument>, <argument pos:start="9:43" pos:end="9:47"><expr pos:start="9:43" pos:end="9:47"><operator pos:start="9:43" pos:end="9:43">&amp;</operator><name pos:start="9:44" pos:end="9:47">xfds</name></expr></argument>, <argument pos:start="9:50" pos:end="9:57"><expr pos:start="9:50" pos:end="9:57"><operator pos:start="9:50" pos:end="9:50">&amp;</operator><name pos:start="9:51" pos:end="9:57">timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:15">timeout</name> <operator pos:start="13:17" pos:end="13:17">&gt;</operator> <literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>)</condition> <block pos:start="13:22" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:37">

        <expr_stmt pos:start="15:9" pos:end="15:37"><expr pos:start="15:9" pos:end="15:36"><call pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:34">qemu_mutex_unlock_iothread</name><argument_list pos:start="15:35" pos:end="15:36">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="25:7">/* We'll eventually drop fd_set completely.  But for now we still have

     * *_fill() and *_poll() functions that use rfds/wfds/xfds.

     */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><call pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:24">gpollfds_from_select</name><argument_list pos:start="27:25" pos:end="27:26">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:68"><expr pos:start="31:5" pos:end="31:67"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:67"><name pos:start="31:11" pos:end="31:16">g_poll</name><argument_list pos:start="31:17" pos:end="31:67">(<argument pos:start="31:18" pos:end="31:42"><expr pos:start="31:18" pos:end="31:42"><operator pos:start="31:18" pos:end="31:18">(</operator><name pos:start="31:19" pos:end="31:25">GPollFD</name> <operator pos:start="31:27" pos:end="31:27">*</operator><operator pos:start="31:28" pos:end="31:28">)</operator><name pos:start="31:29" pos:end="31:42"><name pos:start="31:29" pos:end="31:36">gpollfds</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:42">data</name></name></expr></argument>, <argument pos:start="31:45" pos:end="31:57"><expr pos:start="31:45" pos:end="31:57"><name pos:start="31:45" pos:end="31:57"><name pos:start="31:45" pos:end="31:52">gpollfds</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:57">len</name></name></expr></argument>, <argument pos:start="31:60" pos:end="31:66"><expr pos:start="31:60" pos:end="31:66"><name pos:start="31:60" pos:end="31:66">timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><call pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:22">gpollfds_to_select</name><argument_list pos:start="35:23" pos:end="35:27">(<argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:20">(<expr pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:15">timeout</name> <operator pos:start="39:17" pos:end="39:17">&gt;</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition> <block pos:start="39:22" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:35">

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><call pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:32">qemu_mutex_lock_iothread</name><argument_list pos:start="41:33" pos:end="41:34">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><call pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:20">glib_select_poll</name><argument_list pos:start="47:21" pos:end="47:52">(<argument pos:start="47:22" pos:end="47:26"><expr pos:start="47:22" pos:end="47:26"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:26">rfds</name></expr></argument>, <argument pos:start="47:29" pos:end="47:33"><expr pos:start="47:29" pos:end="47:33"><operator pos:start="47:29" pos:end="47:29">&amp;</operator><name pos:start="47:30" pos:end="47:33">wfds</name></expr></argument>, <argument pos:start="47:36" pos:end="47:40"><expr pos:start="47:36" pos:end="47:40"><operator pos:start="47:36" pos:end="47:36">&amp;</operator><name pos:start="47:37" pos:end="47:40">xfds</name></expr></argument>, <argument pos:start="47:43" pos:end="47:51"><expr pos:start="47:43" pos:end="47:51"><operator pos:start="47:43" pos:end="47:43">(</operator><name pos:start="47:44" pos:end="47:46">ret</name> <operator pos:start="47:48" pos:end="47:48">&lt;</operator> <literal type="number" pos:start="47:50" pos:end="47:50">0</literal><operator pos:start="47:51" pos:end="47:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
