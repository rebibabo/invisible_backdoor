<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17042.c" pos:tabs="8"><function pos:start="1:1" pos:end="11:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">double</name></type> <name pos:start="1:15" pos:end="1:25">tget_double</name><parameter_list pos:start="1:26" pos:end="1:52">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:39">uint8_t</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier><modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">p</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:51"><decl pos:start="1:46" pos:end="1:51"><type pos:start="1:46" pos:end="1:51"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:51">le</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="11:1">{<block_content pos:start="5:5" pos:end="9:17">

    <decl_stmt pos:start="5:5" pos:end="5:60"><decl pos:start="5:5" pos:end="5:59"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:14">av_alias64</name></type> <name pos:start="5:16" pos:end="5:16">i</name> <init pos:start="5:18" pos:end="5:59">= <expr pos:start="5:20" pos:end="5:59"><block pos:start="5:20" pos:end="5:59">{ <expr pos:start="5:22" pos:end="5:58"><operator pos:start="5:22" pos:end="5:22">.</operator><name pos:start="5:23" pos:end="5:25">u64</name> <operator pos:start="5:27" pos:end="5:27">=</operator> <name pos:start="5:29" pos:end="5:30">le</name> <operator pos:start="5:32" pos:end="5:32">?</operator> <call pos:start="5:34" pos:end="5:44"><name pos:start="5:34" pos:end="5:40">AV_RL64</name><argument_list pos:start="5:41" pos:end="5:44">(<argument pos:start="5:42" pos:end="5:43"><expr pos:start="5:42" pos:end="5:43"><operator pos:start="5:42" pos:end="5:42">*</operator><name pos:start="5:43" pos:end="5:43">p</name></expr></argument>)</argument_list></call> <operator pos:start="5:46" pos:end="5:46">:</operator> <macro pos:start="5:48" pos:end="5:58"><name pos:start="5:48" pos:end="5:54">AV_RB64</name><argument_list pos:start="5:55" pos:end="5:58">(<argument pos:start="5:56" pos:end="5:57">*p</argument>)</argument_list></macro></expr>}</block></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:12"><expr pos:start="7:5" pos:end="7:11"><operator pos:start="7:5" pos:end="7:5">*</operator><name pos:start="7:6" pos:end="7:6">p</name> <operator pos:start="7:8" pos:end="7:9">+=</operator> <literal type="number" pos:start="7:11" pos:end="7:11">8</literal></expr>;</expr_stmt>

    <return pos:start="9:5" pos:end="9:17">return <expr pos:start="9:12" pos:end="9:16"><name pos:start="9:12" pos:end="9:16"><name pos:start="9:12" pos:end="9:12">i</name><operator pos:start="9:13" pos:end="9:13">.</operator><name pos:start="9:14" pos:end="9:16">f64</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
