<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18047.c" pos:tabs="8"><function pos:start="1:1" pos:end="491:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">mpc8544_load_device_tree</name><parameter_list pos:start="1:36" pos:end="11:63">(<parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:47">CPUPPCState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">env</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:59"><decl pos:start="3:37" pos:end="3:59"><type pos:start="3:37" pos:end="3:59"><name pos:start="3:37" pos:end="3:54">target_phys_addr_t</name></type> <name pos:start="3:56" pos:end="3:59">addr</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:62"><decl pos:start="5:37" pos:end="5:62"><type pos:start="5:37" pos:end="5:62"><name pos:start="5:37" pos:end="5:54">target_phys_addr_t</name></type> <name pos:start="5:56" pos:end="5:62">ramsize</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:66"><decl pos:start="7:37" pos:end="7:66"><type pos:start="7:37" pos:end="7:66"><name pos:start="7:37" pos:end="7:54">target_phys_addr_t</name></type> <name pos:start="7:56" pos:end="7:66">initrd_base</name></decl></parameter>,

                                    <parameter pos:start="9:37" pos:end="9:66"><decl pos:start="9:37" pos:end="9:66"><type pos:start="9:37" pos:end="9:66"><name pos:start="9:37" pos:end="9:54">target_phys_addr_t</name></type> <name pos:start="9:56" pos:end="9:66">initrd_size</name></decl></parameter>,

                                    <parameter pos:start="11:37" pos:end="11:62"><decl pos:start="11:37" pos:end="11:62"><type pos:start="11:37" pos:end="11:62"><specifier pos:start="11:37" pos:end="11:41">const</specifier> <name pos:start="11:43" pos:end="11:46">char</name> <modifier pos:start="11:48" pos:end="11:48">*</modifier></type><name pos:start="11:49" pos:end="11:62">kernel_cmdline</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="491:1">{<block_content pos:start="15:5" pos:end="489:15">

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:16">= <expr pos:start="15:15" pos:end="15:16"><operator pos:start="15:15" pos:end="15:15">-</operator><literal type="number" pos:start="15:16" pos:end="15:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:60"><decl pos:start="17:5" pos:end="17:59"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:31"><name pos:start="17:14" pos:end="17:29">mem_reg_property</name><index pos:start="17:30" pos:end="17:31">[]</index></name> <init pos:start="17:33" pos:end="17:59">= <expr pos:start="17:35" pos:end="17:59"><block pos:start="17:35" pos:end="17:59">{<expr pos:start="17:36" pos:end="17:36"><literal type="number" pos:start="17:36" pos:end="17:36">0</literal></expr>, <macro pos:start="17:39" pos:end="17:58"><name pos:start="17:39" pos:end="17:49">cpu_to_be32</name><argument_list pos:start="17:50" pos:end="17:58">(<argument pos:start="17:51" pos:end="17:57">ramsize</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">fdt_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:14"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">void</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:13">fdt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">uint8_t</name></type> <name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:21">hypercall</name><index pos:start="23:22" pos:end="23:25">[<expr pos:start="23:23" pos:end="23:24"><literal type="number" pos:start="23:23" pos:end="23:24">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:36"><decl pos:start="25:5" pos:end="25:35"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint32_t</name></type> <name pos:start="25:14" pos:end="25:23">clock_freq</name> <init pos:start="25:25" pos:end="25:35">= <expr pos:start="25:27" pos:end="25:35"><literal type="number" pos:start="25:27" pos:end="25:35">400000000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:33"><decl pos:start="27:5" pos:end="27:32"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint32_t</name></type> <name pos:start="27:14" pos:end="27:20">tb_freq</name> <init pos:start="27:22" pos:end="27:32">= <expr pos:start="27:24" pos:end="27:32"><literal type="number" pos:start="27:24" pos:end="27:32">400000000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:10"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:47"><decl pos:start="31:5" pos:end="31:46"><type pos:start="31:5" pos:end="31:8"><name pos:start="31:5" pos:end="31:8">char</name></type> <name pos:start="31:10" pos:end="31:21"><name pos:start="31:10" pos:end="31:19">compatible</name><index pos:start="31:20" pos:end="31:21">[]</index></name> <init pos:start="31:23" pos:end="31:46">= <expr pos:start="31:25" pos:end="31:46"><literal type="string" pos:start="31:25" pos:end="31:46">"MPC8544DS\0MPC85xxDS"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:31"><decl pos:start="33:5" pos:end="33:30"><type pos:start="33:5" pos:end="33:8"><name pos:start="33:5" pos:end="33:8">char</name></type> <name pos:start="33:10" pos:end="33:16"><name pos:start="33:10" pos:end="33:14">model</name><index pos:start="33:15" pos:end="33:16">[]</index></name> <init pos:start="33:18" pos:end="33:30">= <expr pos:start="33:20" pos:end="33:30"><literal type="string" pos:start="33:20" pos:end="33:30">"MPC8544DS"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:18"><decl pos:start="35:5" pos:end="35:17"><type pos:start="35:5" pos:end="35:8"><name pos:start="35:5" pos:end="35:8">char</name></type> <name pos:start="35:10" pos:end="35:17"><name pos:start="35:10" pos:end="35:12">soc</name><index pos:start="35:13" pos:end="35:17">[<expr pos:start="35:14" pos:end="35:16"><literal type="number" pos:start="35:14" pos:end="35:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:19"><decl pos:start="37:5" pos:end="37:18"><type pos:start="37:5" pos:end="37:8"><name pos:start="37:5" pos:end="37:8">char</name></type> <name pos:start="37:10" pos:end="37:18"><name pos:start="37:10" pos:end="37:13">ser0</name><index pos:start="37:14" pos:end="37:18">[<expr pos:start="37:15" pos:end="37:17"><literal type="number" pos:start="37:15" pos:end="37:17">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:19"><decl pos:start="39:5" pos:end="39:18"><type pos:start="39:5" pos:end="39:8"><name pos:start="39:5" pos:end="39:8">char</name></type> <name pos:start="39:10" pos:end="39:18"><name pos:start="39:10" pos:end="39:13">ser1</name><index pos:start="39:14" pos:end="39:18">[<expr pos:start="39:15" pos:end="39:17"><literal type="number" pos:start="39:15" pos:end="39:17">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:19"><decl pos:start="41:5" pos:end="41:18"><type pos:start="41:5" pos:end="41:8"><name pos:start="41:5" pos:end="41:8">char</name></type> <name pos:start="41:10" pos:end="41:18"><name pos:start="41:10" pos:end="41:13">mpic</name><index pos:start="41:14" pos:end="41:18">[<expr pos:start="41:15" pos:end="41:17"><literal type="number" pos:start="41:15" pos:end="41:17">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:21"><decl pos:start="43:5" pos:end="43:20"><type pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:12">uint32_t</name></type> <name pos:start="43:14" pos:end="43:20">mpic_ph</name></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:20"><decl pos:start="45:5" pos:end="45:19"><type pos:start="45:5" pos:end="45:8"><name pos:start="45:5" pos:end="45:8">char</name></type> <name pos:start="45:10" pos:end="45:19"><name pos:start="45:10" pos:end="45:14">gutil</name><index pos:start="45:15" pos:end="45:19">[<expr pos:start="45:16" pos:end="45:18"><literal type="number" pos:start="45:16" pos:end="45:18">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:18"><decl pos:start="47:5" pos:end="47:17"><type pos:start="47:5" pos:end="47:8"><name pos:start="47:5" pos:end="47:8">char</name></type> <name pos:start="47:10" pos:end="47:17"><name pos:start="47:10" pos:end="47:12">pci</name><index pos:start="47:13" pos:end="47:17">[<expr pos:start="47:14" pos:end="47:16"><literal type="number" pos:start="47:14" pos:end="47:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:28"><decl pos:start="49:5" pos:end="49:27"><type pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:12">uint32_t</name></type> <name pos:start="49:14" pos:end="49:27"><name pos:start="49:14" pos:end="49:20">pci_map</name><index pos:start="49:21" pos:end="49:27">[<expr pos:start="49:22" pos:end="49:26"><literal type="number" pos:start="49:22" pos:end="49:22">7</literal> <operator pos:start="49:24" pos:end="49:24">*</operator> <literal type="number" pos:start="49:26" pos:end="49:26">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="55:47"><decl pos:start="51:5" pos:end="55:46"><type pos:start="51:5" pos:end="51:12"><name pos:start="51:5" pos:end="51:12">uint32_t</name></type> <name pos:start="51:14" pos:end="51:27"><name pos:start="51:14" pos:end="51:23">pci_ranges</name><index pos:start="51:24" pos:end="51:27">[<expr pos:start="51:25" pos:end="51:26"><literal type="number" pos:start="51:25" pos:end="51:26">12</literal></expr>]</index></name> <init pos:start="51:29" pos:end="55:46">= <expr pos:start="51:31" pos:end="55:46"><block pos:start="51:31" pos:end="55:46">{ <expr pos:start="51:33" pos:end="51:41"><literal type="number" pos:start="51:33" pos:end="51:41">0x2000000</literal></expr>, <expr pos:start="51:44" pos:end="51:46"><literal type="number" pos:start="51:44" pos:end="51:46">0x0</literal></expr>, <expr pos:start="51:49" pos:end="51:58"><literal type="number" pos:start="51:49" pos:end="51:58">0xc0000000</literal></expr>, <expr pos:start="51:61" pos:end="51:70"><literal type="number" pos:start="51:61" pos:end="51:70">0xc0000000</literal></expr>, <expr pos:start="51:73" pos:end="51:75"><literal type="number" pos:start="51:73" pos:end="51:75">0x0</literal></expr>,

                                <expr pos:start="53:33" pos:end="53:42"><literal type="number" pos:start="53:33" pos:end="53:42">0x20000000</literal></expr>, <expr pos:start="53:45" pos:end="53:53"><literal type="number" pos:start="53:45" pos:end="53:53">0x1000000</literal></expr>, <expr pos:start="53:56" pos:end="53:58"><literal type="number" pos:start="53:56" pos:end="53:58">0x0</literal></expr>, <expr pos:start="53:61" pos:end="53:63"><literal type="number" pos:start="53:61" pos:end="53:63">0x0</literal></expr>, <expr pos:start="53:66" pos:end="53:75"><literal type="number" pos:start="53:66" pos:end="53:75">0xe1000000</literal></expr>,

                                <expr pos:start="55:33" pos:end="55:35"><literal type="number" pos:start="55:33" pos:end="55:35">0x0</literal></expr>, <expr pos:start="55:38" pos:end="55:44"><literal type="number" pos:start="55:38" pos:end="55:44">0x10000</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="57:27"><decl pos:start="57:5" pos:end="57:26"><type pos:start="57:5" pos:end="57:14"><name pos:start="57:5" pos:end="57:12">QemuOpts</name> <modifier pos:start="57:14" pos:end="57:14">*</modifier></type><name pos:start="57:15" pos:end="57:26">machine_opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="59:5" pos:end="59:31"><decl pos:start="59:5" pos:end="59:30"><type pos:start="59:5" pos:end="59:16"><specifier pos:start="59:5" pos:end="59:9">const</specifier> <name pos:start="59:11" pos:end="59:14">char</name> <modifier pos:start="59:16" pos:end="59:16">*</modifier></type><name pos:start="59:17" pos:end="59:23">dumpdtb</name> <init pos:start="59:25" pos:end="59:30">= <expr pos:start="59:27" pos:end="59:30"><name pos:start="59:27" pos:end="59:30">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:40"><expr pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:7">fdt</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:39"><name pos:start="63:11" pos:end="63:28">create_device_tree</name><argument_list pos:start="63:29" pos:end="63:39">(<argument pos:start="63:30" pos:end="63:38"><expr pos:start="63:30" pos:end="63:38"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:38">fdt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:20">(<expr pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:11">fdt</name> <operator pos:start="65:13" pos:end="65:14">==</operator> <name pos:start="65:16" pos:end="65:19">NULL</name></expr>)</condition> <block pos:start="65:22" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:17">

        <goto pos:start="67:9" pos:end="67:17">goto <name pos:start="67:14" pos:end="67:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:43">/* Manipulate device tree in memory. */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:58"><expr pos:start="75:5" pos:end="75:57"><call pos:start="75:5" pos:end="75:57"><name pos:start="75:5" pos:end="75:31">qemu_devtree_setprop_string</name><argument_list pos:start="75:32" pos:end="75:57">(<argument pos:start="75:33" pos:end="75:35"><expr pos:start="75:33" pos:end="75:35"><name pos:start="75:33" pos:end="75:35">fdt</name></expr></argument>, <argument pos:start="75:38" pos:end="75:40"><expr pos:start="75:38" pos:end="75:40"><literal type="string" pos:start="75:38" pos:end="75:40">"/"</literal></expr></argument>, <argument pos:start="75:43" pos:end="75:49"><expr pos:start="75:43" pos:end="75:49"><literal type="string" pos:start="75:43" pos:end="75:49">"model"</literal></expr></argument>, <argument pos:start="75:52" pos:end="75:56"><expr pos:start="75:52" pos:end="75:56"><name pos:start="75:52" pos:end="75:56">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="79:45"><expr pos:start="77:5" pos:end="79:44"><call pos:start="77:5" pos:end="79:44"><name pos:start="77:5" pos:end="77:24">qemu_devtree_setprop</name><argument_list pos:start="77:25" pos:end="79:44">(<argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">fdt</name></expr></argument>, <argument pos:start="77:31" pos:end="77:33"><expr pos:start="77:31" pos:end="77:33"><literal type="string" pos:start="77:31" pos:end="77:33">"/"</literal></expr></argument>, <argument pos:start="77:36" pos:end="77:47"><expr pos:start="77:36" pos:end="77:47"><literal type="string" pos:start="77:36" pos:end="77:47">"compatible"</literal></expr></argument>, <argument pos:start="77:50" pos:end="77:59"><expr pos:start="77:50" pos:end="77:59"><name pos:start="77:50" pos:end="77:59">compatible</name></expr></argument>,

                         <argument pos:start="79:26" pos:end="79:43"><expr pos:start="79:26" pos:end="79:43"><sizeof pos:start="79:26" pos:end="79:43">sizeof<argument_list pos:start="79:32" pos:end="79:43">(<argument pos:start="79:33" pos:end="79:42"><expr pos:start="79:33" pos:end="79:42"><name pos:start="79:33" pos:end="79:42">compatible</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:61"><expr pos:start="81:5" pos:end="81:60"><call pos:start="81:5" pos:end="81:60"><name pos:start="81:5" pos:end="81:29">qemu_devtree_setprop_cell</name><argument_list pos:start="81:30" pos:end="81:60">(<argument pos:start="81:31" pos:end="81:33"><expr pos:start="81:31" pos:end="81:33"><name pos:start="81:31" pos:end="81:33">fdt</name></expr></argument>, <argument pos:start="81:36" pos:end="81:38"><expr pos:start="81:36" pos:end="81:38"><literal type="string" pos:start="81:36" pos:end="81:38">"/"</literal></expr></argument>, <argument pos:start="81:41" pos:end="81:56"><expr pos:start="81:41" pos:end="81:56"><literal type="string" pos:start="81:41" pos:end="81:56">"#address-cells"</literal></expr></argument>, <argument pos:start="81:59" pos:end="81:59"><expr pos:start="81:59" pos:end="81:59"><literal type="number" pos:start="81:59" pos:end="81:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:58"><expr pos:start="83:5" pos:end="83:57"><call pos:start="83:5" pos:end="83:57"><name pos:start="83:5" pos:end="83:29">qemu_devtree_setprop_cell</name><argument_list pos:start="83:30" pos:end="83:57">(<argument pos:start="83:31" pos:end="83:33"><expr pos:start="83:31" pos:end="83:33"><name pos:start="83:31" pos:end="83:33">fdt</name></expr></argument>, <argument pos:start="83:36" pos:end="83:38"><expr pos:start="83:36" pos:end="83:38"><literal type="string" pos:start="83:36" pos:end="83:38">"/"</literal></expr></argument>, <argument pos:start="83:41" pos:end="83:53"><expr pos:start="83:41" pos:end="83:53"><literal type="string" pos:start="83:41" pos:end="83:53">"#size-cells"</literal></expr></argument>, <argument pos:start="83:56" pos:end="83:56"><expr pos:start="83:56" pos:end="83:56"><literal type="number" pos:start="83:56" pos:end="83:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:45"><expr pos:start="87:5" pos:end="87:44"><call pos:start="87:5" pos:end="87:44"><name pos:start="87:5" pos:end="87:28">qemu_devtree_add_subnode</name><argument_list pos:start="87:29" pos:end="87:44">(<argument pos:start="87:30" pos:end="87:32"><expr pos:start="87:30" pos:end="87:32"><name pos:start="87:30" pos:end="87:32">fdt</name></expr></argument>, <argument pos:start="87:35" pos:end="87:43"><expr pos:start="87:35" pos:end="87:43"><literal type="string" pos:start="87:35" pos:end="87:43">"/memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:73"><expr pos:start="89:5" pos:end="89:72"><call pos:start="89:5" pos:end="89:72"><name pos:start="89:5" pos:end="89:31">qemu_devtree_setprop_string</name><argument_list pos:start="89:32" pos:end="89:72">(<argument pos:start="89:33" pos:end="89:35"><expr pos:start="89:33" pos:end="89:35"><name pos:start="89:33" pos:end="89:35">fdt</name></expr></argument>, <argument pos:start="89:38" pos:end="89:46"><expr pos:start="89:38" pos:end="89:46"><literal type="string" pos:start="89:38" pos:end="89:46">"/memory"</literal></expr></argument>, <argument pos:start="89:49" pos:end="89:61"><expr pos:start="89:49" pos:end="89:61"><literal type="string" pos:start="89:49" pos:end="89:61">"device_type"</literal></expr></argument>, <argument pos:start="89:64" pos:end="89:71"><expr pos:start="89:64" pos:end="89:71"><literal type="string" pos:start="89:64" pos:end="89:71">"memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="93:51"><expr pos:start="91:5" pos:end="93:50"><call pos:start="91:5" pos:end="93:50"><name pos:start="91:5" pos:end="91:24">qemu_devtree_setprop</name><argument_list pos:start="91:25" pos:end="93:50">(<argument pos:start="91:26" pos:end="91:28"><expr pos:start="91:26" pos:end="91:28"><name pos:start="91:26" pos:end="91:28">fdt</name></expr></argument>, <argument pos:start="91:31" pos:end="91:39"><expr pos:start="91:31" pos:end="91:39"><literal type="string" pos:start="91:31" pos:end="91:39">"/memory"</literal></expr></argument>, <argument pos:start="91:42" pos:end="91:46"><expr pos:start="91:42" pos:end="91:46"><literal type="string" pos:start="91:42" pos:end="91:46">"reg"</literal></expr></argument>, <argument pos:start="91:49" pos:end="91:64"><expr pos:start="91:49" pos:end="91:64"><name pos:start="91:49" pos:end="91:64">mem_reg_property</name></expr></argument>,

                         <argument pos:start="93:26" pos:end="93:49"><expr pos:start="93:26" pos:end="93:49"><sizeof pos:start="93:26" pos:end="93:49">sizeof<argument_list pos:start="93:32" pos:end="93:49">(<argument pos:start="93:33" pos:end="93:48"><expr pos:start="93:33" pos:end="93:48"><name pos:start="93:33" pos:end="93:48">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:45"><expr pos:start="97:5" pos:end="97:44"><call pos:start="97:5" pos:end="97:44"><name pos:start="97:5" pos:end="97:28">qemu_devtree_add_subnode</name><argument_list pos:start="97:29" pos:end="97:44">(<argument pos:start="97:30" pos:end="97:32"><expr pos:start="97:30" pos:end="97:32"><name pos:start="97:30" pos:end="97:32">fdt</name></expr></argument>, <argument pos:start="97:35" pos:end="97:43"><expr pos:start="97:35" pos:end="97:43"><literal type="string" pos:start="97:35" pos:end="97:43">"/chosen"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="123:5"><if pos:start="99:5" pos:end="123:5">if <condition pos:start="99:8" pos:end="99:20">(<expr pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:19">initrd_size</name></expr>)</condition> <block pos:start="99:22" pos:end="123:5">{<block_content pos:start="101:9" pos:end="121:9">

        <expr_stmt pos:start="101:9" pos:end="103:53"><expr pos:start="101:9" pos:end="103:52"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="103:52"><name pos:start="101:15" pos:end="101:39">qemu_devtree_setprop_cell</name><argument_list pos:start="101:40" pos:end="103:52">(<argument pos:start="101:41" pos:end="101:43"><expr pos:start="101:41" pos:end="101:43"><name pos:start="101:41" pos:end="101:43">fdt</name></expr></argument>, <argument pos:start="101:46" pos:end="101:54"><expr pos:start="101:46" pos:end="101:54"><literal type="string" pos:start="101:46" pos:end="101:54">"/chosen"</literal></expr></argument>, <argument pos:start="101:57" pos:end="101:76"><expr pos:start="101:57" pos:end="101:76"><literal type="string" pos:start="101:57" pos:end="101:76">"linux,initrd-start"</literal></expr></argument>,

                                        <argument pos:start="103:41" pos:end="103:51"><expr pos:start="103:41" pos:end="103:51"><name pos:start="103:41" pos:end="103:51">initrd_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:20">(<expr pos:start="105:13" pos:end="105:19"><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:17">&lt;</operator> <literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr>)</condition> <block pos:start="105:22" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:73">

            <expr_stmt pos:start="107:13" pos:end="107:73"><expr pos:start="107:13" pos:end="107:72"><call pos:start="107:13" pos:end="107:72"><name pos:start="107:13" pos:end="107:19">fprintf</name><argument_list pos:start="107:20" pos:end="107:72">(<argument pos:start="107:21" pos:end="107:26"><expr pos:start="107:21" pos:end="107:26"><name pos:start="107:21" pos:end="107:26">stderr</name></expr></argument>, <argument pos:start="107:29" pos:end="107:71"><expr pos:start="107:29" pos:end="107:71"><literal type="string" pos:start="107:29" pos:end="107:71">"couldn't set /chosen/linux,initrd-start\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="115:69"><expr pos:start="113:9" pos:end="115:68"><name pos:start="113:9" pos:end="113:11">ret</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="115:68"><name pos:start="113:15" pos:end="113:39">qemu_devtree_setprop_cell</name><argument_list pos:start="113:40" pos:end="115:68">(<argument pos:start="113:41" pos:end="113:43"><expr pos:start="113:41" pos:end="113:43"><name pos:start="113:41" pos:end="113:43">fdt</name></expr></argument>, <argument pos:start="113:46" pos:end="113:54"><expr pos:start="113:46" pos:end="113:54"><literal type="string" pos:start="113:46" pos:end="113:54">"/chosen"</literal></expr></argument>, <argument pos:start="113:57" pos:end="113:74"><expr pos:start="113:57" pos:end="113:74"><literal type="string" pos:start="113:57" pos:end="113:74">"linux,initrd-end"</literal></expr></argument>,

                                        <argument pos:start="115:41" pos:end="115:67"><expr pos:start="115:41" pos:end="115:67"><operator pos:start="115:41" pos:end="115:41">(</operator><name pos:start="115:42" pos:end="115:52">initrd_base</name> <operator pos:start="115:54" pos:end="115:54">+</operator> <name pos:start="115:56" pos:end="115:66">initrd_size</name><operator pos:start="115:67" pos:end="115:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="121:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:20">(<expr pos:start="117:13" pos:end="117:19"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">&lt;</operator> <literal type="number" pos:start="117:19" pos:end="117:19">0</literal></expr>)</condition> <block pos:start="117:22" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:71">

            <expr_stmt pos:start="119:13" pos:end="119:71"><expr pos:start="119:13" pos:end="119:70"><call pos:start="119:13" pos:end="119:70"><name pos:start="119:13" pos:end="119:19">fprintf</name><argument_list pos:start="119:20" pos:end="119:70">(<argument pos:start="119:21" pos:end="119:26"><expr pos:start="119:21" pos:end="119:26"><name pos:start="119:21" pos:end="119:26">stderr</name></expr></argument>, <argument pos:start="119:29" pos:end="119:69"><expr pos:start="119:29" pos:end="119:69"><literal type="string" pos:start="119:29" pos:end="119:69">"couldn't set /chosen/linux,initrd-end\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="129:54"><expr pos:start="127:5" pos:end="129:53"><name pos:start="127:5" pos:end="127:7">ret</name> <operator pos:start="127:9" pos:end="127:9">=</operator> <call pos:start="127:11" pos:end="129:53"><name pos:start="127:11" pos:end="127:37">qemu_devtree_setprop_string</name><argument_list pos:start="127:38" pos:end="129:53">(<argument pos:start="127:39" pos:end="127:41"><expr pos:start="127:39" pos:end="127:41"><name pos:start="127:39" pos:end="127:41">fdt</name></expr></argument>, <argument pos:start="127:44" pos:end="127:52"><expr pos:start="127:44" pos:end="127:52"><literal type="string" pos:start="127:44" pos:end="127:52">"/chosen"</literal></expr></argument>, <argument pos:start="127:55" pos:end="127:64"><expr pos:start="127:55" pos:end="127:64"><literal type="string" pos:start="127:55" pos:end="127:64">"bootargs"</literal></expr></argument>,

                                      <argument pos:start="129:39" pos:end="129:52"><expr pos:start="129:39" pos:end="129:52"><name pos:start="129:39" pos:end="129:52">kernel_cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="133:59"><if pos:start="131:5" pos:end="133:59">if <condition pos:start="131:8" pos:end="131:16">(<expr pos:start="131:9" pos:end="131:15"><name pos:start="131:9" pos:end="131:11">ret</name> <operator pos:start="131:13" pos:end="131:13">&lt;</operator> <literal type="number" pos:start="131:15" pos:end="131:15">0</literal></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:59"><block_content pos:start="133:9" pos:end="133:59">

        <expr_stmt pos:start="133:9" pos:end="133:59"><expr pos:start="133:9" pos:end="133:58"><call pos:start="133:9" pos:end="133:58"><name pos:start="133:9" pos:end="133:15">fprintf</name><argument_list pos:start="133:16" pos:end="133:58">(<argument pos:start="133:17" pos:end="133:22"><expr pos:start="133:17" pos:end="133:22"><name pos:start="133:17" pos:end="133:22">stderr</name></expr></argument>, <argument pos:start="133:25" pos:end="133:57"><expr pos:start="133:25" pos:end="133:57"><literal type="string" pos:start="133:25" pos:end="133:57">"couldn't set /chosen/bootargs\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="137:5" pos:end="161:5"><if pos:start="137:5" pos:end="161:5">if <condition pos:start="137:8" pos:end="137:22">(<expr pos:start="137:9" pos:end="137:21"><call pos:start="137:9" pos:end="137:21"><name pos:start="137:9" pos:end="137:19">kvm_enabled</name><argument_list pos:start="137:20" pos:end="137:21">()</argument_list></call></expr>)</condition> <block pos:start="137:24" pos:end="161:5">{<block_content pos:start="141:9" pos:end="159:59">

        <comment type="block" pos:start="139:9" pos:end="139:41">/* Read out host's frequencies */</comment>

        <expr_stmt pos:start="141:9" pos:end="141:44"><expr pos:start="141:9" pos:end="141:43"><name pos:start="141:9" pos:end="141:18">clock_freq</name> <operator pos:start="141:20" pos:end="141:20">=</operator> <call pos:start="141:22" pos:end="141:43"><name pos:start="141:22" pos:end="141:41">kvmppc_get_clockfreq</name><argument_list pos:start="141:42" pos:end="141:43">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:38"><expr pos:start="143:9" pos:end="143:37"><name pos:start="143:9" pos:end="143:15">tb_freq</name> <operator pos:start="143:17" pos:end="143:17">=</operator> <call pos:start="143:19" pos:end="143:37"><name pos:start="143:19" pos:end="143:35">kvmppc_get_tbfreq</name><argument_list pos:start="143:36" pos:end="143:37">()</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="147:9" pos:end="147:46">/* indicate KVM hypercall interface */</comment>

        <expr_stmt pos:start="149:9" pos:end="149:53"><expr pos:start="149:9" pos:end="149:52"><call pos:start="149:9" pos:end="149:52"><name pos:start="149:9" pos:end="149:32">qemu_devtree_add_subnode</name><argument_list pos:start="149:33" pos:end="149:52">(<argument pos:start="149:34" pos:end="149:36"><expr pos:start="149:34" pos:end="149:36"><name pos:start="149:34" pos:end="149:36">fdt</name></expr></argument>, <argument pos:start="149:39" pos:end="149:51"><expr pos:start="149:39" pos:end="149:51"><literal type="string" pos:start="149:39" pos:end="149:51">"/hypervisor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="153:49"><expr pos:start="151:9" pos:end="153:48"><call pos:start="151:9" pos:end="153:48"><name pos:start="151:9" pos:end="151:35">qemu_devtree_setprop_string</name><argument_list pos:start="151:36" pos:end="153:48">(<argument pos:start="151:37" pos:end="151:39"><expr pos:start="151:37" pos:end="151:39"><name pos:start="151:37" pos:end="151:39">fdt</name></expr></argument>, <argument pos:start="151:42" pos:end="151:54"><expr pos:start="151:42" pos:end="151:54"><literal type="string" pos:start="151:42" pos:end="151:54">"/hypervisor"</literal></expr></argument>, <argument pos:start="151:57" pos:end="151:68"><expr pos:start="151:57" pos:end="151:68"><literal type="string" pos:start="151:57" pos:end="151:68">"compatible"</literal></expr></argument>,

                                    <argument pos:start="153:37" pos:end="153:47"><expr pos:start="153:37" pos:end="153:47"><literal type="string" pos:start="153:37" pos:end="153:47">"linux,kvm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:64"><expr pos:start="155:9" pos:end="155:63"><call pos:start="155:9" pos:end="155:63"><name pos:start="155:9" pos:end="155:28">kvmppc_get_hypercall</name><argument_list pos:start="155:29" pos:end="155:63">(<argument pos:start="155:30" pos:end="155:32"><expr pos:start="155:30" pos:end="155:32"><name pos:start="155:30" pos:end="155:32">env</name></expr></argument>, <argument pos:start="155:35" pos:end="155:43"><expr pos:start="155:35" pos:end="155:43"><name pos:start="155:35" pos:end="155:43">hypercall</name></expr></argument>, <argument pos:start="155:46" pos:end="155:62"><expr pos:start="155:46" pos:end="155:62"><sizeof pos:start="155:46" pos:end="155:62">sizeof<argument_list pos:start="155:52" pos:end="155:62">(<argument pos:start="155:53" pos:end="155:61"><expr pos:start="155:53" pos:end="155:61"><name pos:start="155:53" pos:end="155:61">hypercall</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="159:59"><expr pos:start="157:9" pos:end="159:58"><call pos:start="157:9" pos:end="159:58"><name pos:start="157:9" pos:end="157:28">qemu_devtree_setprop</name><argument_list pos:start="157:29" pos:end="159:58">(<argument pos:start="157:30" pos:end="157:32"><expr pos:start="157:30" pos:end="157:32"><name pos:start="157:30" pos:end="157:32">fdt</name></expr></argument>, <argument pos:start="157:35" pos:end="157:47"><expr pos:start="157:35" pos:end="157:47"><literal type="string" pos:start="157:35" pos:end="157:47">"/hypervisor"</literal></expr></argument>, <argument pos:start="157:50" pos:end="157:69"><expr pos:start="157:50" pos:end="157:69"><literal type="string" pos:start="157:50" pos:end="157:69">"hcall-instructions"</literal></expr></argument>,

                             <argument pos:start="159:30" pos:end="159:38"><expr pos:start="159:30" pos:end="159:38"><name pos:start="159:30" pos:end="159:38">hypercall</name></expr></argument>, <argument pos:start="159:41" pos:end="159:57"><expr pos:start="159:41" pos:end="159:57"><sizeof pos:start="159:41" pos:end="159:57">sizeof<argument_list pos:start="159:47" pos:end="159:57">(<argument pos:start="159:48" pos:end="159:56"><expr pos:start="159:48" pos:end="159:56"><name pos:start="159:48" pos:end="159:56">hypercall</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="165:5" pos:end="165:26">/* Create CPU nodes */</comment>

    <expr_stmt pos:start="167:5" pos:end="167:43"><expr pos:start="167:5" pos:end="167:42"><call pos:start="167:5" pos:end="167:42"><name pos:start="167:5" pos:end="167:28">qemu_devtree_add_subnode</name><argument_list pos:start="167:29" pos:end="167:42">(<argument pos:start="167:30" pos:end="167:32"><expr pos:start="167:30" pos:end="167:32"><name pos:start="167:30" pos:end="167:32">fdt</name></expr></argument>, <argument pos:start="167:35" pos:end="167:41"><expr pos:start="167:35" pos:end="167:41"><literal type="string" pos:start="167:35" pos:end="167:41">"/cpus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:65"><expr pos:start="169:5" pos:end="169:64"><call pos:start="169:5" pos:end="169:64"><name pos:start="169:5" pos:end="169:29">qemu_devtree_setprop_cell</name><argument_list pos:start="169:30" pos:end="169:64">(<argument pos:start="169:31" pos:end="169:33"><expr pos:start="169:31" pos:end="169:33"><name pos:start="169:31" pos:end="169:33">fdt</name></expr></argument>, <argument pos:start="169:36" pos:end="169:42"><expr pos:start="169:36" pos:end="169:42"><literal type="string" pos:start="169:36" pos:end="169:42">"/cpus"</literal></expr></argument>, <argument pos:start="169:45" pos:end="169:60"><expr pos:start="169:45" pos:end="169:60"><literal type="string" pos:start="169:45" pos:end="169:60">"#address-cells"</literal></expr></argument>, <argument pos:start="169:63" pos:end="169:63"><expr pos:start="169:63" pos:end="169:63"><literal type="number" pos:start="169:63" pos:end="169:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:62"><expr pos:start="171:5" pos:end="171:61"><call pos:start="171:5" pos:end="171:61"><name pos:start="171:5" pos:end="171:29">qemu_devtree_setprop_cell</name><argument_list pos:start="171:30" pos:end="171:61">(<argument pos:start="171:31" pos:end="171:33"><expr pos:start="171:31" pos:end="171:33"><name pos:start="171:31" pos:end="171:33">fdt</name></expr></argument>, <argument pos:start="171:36" pos:end="171:42"><expr pos:start="171:36" pos:end="171:42"><literal type="string" pos:start="171:36" pos:end="171:42">"/cpus"</literal></expr></argument>, <argument pos:start="171:45" pos:end="171:57"><expr pos:start="171:45" pos:end="171:57"><literal type="string" pos:start="171:45" pos:end="171:57">"#size-cells"</literal></expr></argument>, <argument pos:start="171:60" pos:end="171:60"><expr pos:start="171:60" pos:end="171:60"><literal type="number" pos:start="171:60" pos:end="171:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="175:5" pos:end="177:50">/* We need to generate the cpu nodes in reverse order, so Linux can pick

       the first node as boot node and be happy */</comment>

    <for pos:start="179:5" pos:end="249:5">for <control pos:start="179:9" pos:end="179:39">(<init pos:start="179:10" pos:end="179:26"><expr pos:start="179:10" pos:end="179:25"><name pos:start="179:10" pos:end="179:10">i</name> <operator pos:start="179:12" pos:end="179:12">=</operator> <name pos:start="179:14" pos:end="179:21">smp_cpus</name> <operator pos:start="179:23" pos:end="179:23">-</operator> <literal type="number" pos:start="179:25" pos:end="179:25">1</literal></expr>;</init> <condition pos:start="179:28" pos:end="179:34"><expr pos:start="179:28" pos:end="179:33"><name pos:start="179:28" pos:end="179:28">i</name> <operator pos:start="179:30" pos:end="179:31">&gt;=</operator> <literal type="number" pos:start="179:33" pos:end="179:33">0</literal></expr>;</condition> <incr pos:start="179:36" pos:end="179:38"><expr pos:start="179:36" pos:end="179:38"><name pos:start="179:36" pos:end="179:36">i</name><operator pos:start="179:37" pos:end="179:38">--</operator></expr></incr>)</control> <block pos:start="179:41" pos:end="249:5">{<block_content pos:start="181:9" pos:end="247:9">

        <decl_stmt pos:start="181:9" pos:end="181:27"><decl pos:start="181:9" pos:end="181:26"><type pos:start="181:9" pos:end="181:12"><name pos:start="181:9" pos:end="181:12">char</name></type> <name pos:start="181:14" pos:end="181:26"><name pos:start="181:14" pos:end="181:21">cpu_name</name><index pos:start="181:22" pos:end="181:26">[<expr pos:start="181:23" pos:end="181:25"><literal type="number" pos:start="181:23" pos:end="181:25">128</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="183:9" pos:end="183:67"><decl pos:start="183:9" pos:end="183:66"><type pos:start="183:9" pos:end="183:16"><name pos:start="183:9" pos:end="183:16">uint64_t</name></type> <name pos:start="183:18" pos:end="183:33">cpu_release_addr</name> <init pos:start="183:35" pos:end="183:66">= <expr pos:start="183:37" pos:end="183:66"><name pos:start="183:37" pos:end="183:53">MPC8544_SPIN_BASE</name> <operator pos:start="183:55" pos:end="183:55">+</operator> <operator pos:start="183:57" pos:end="183:57">(</operator><name pos:start="183:58" pos:end="183:58">i</name> <operator pos:start="183:60" pos:end="183:60">*</operator> <literal type="number" pos:start="183:62" pos:end="183:65">0x20</literal><operator pos:start="183:66" pos:end="183:66">)</operator></expr></init></decl>;</decl_stmt>



        <for pos:start="187:9" pos:end="195:9">for <control pos:start="187:13" pos:end="187:63">(<init pos:start="187:14" pos:end="187:29"><expr pos:start="187:14" pos:end="187:28"><name pos:start="187:14" pos:end="187:16">env</name> <operator pos:start="187:18" pos:end="187:18">=</operator> <name pos:start="187:20" pos:end="187:28">first_cpu</name></expr>;</init> <condition pos:start="187:31" pos:end="187:42"><expr pos:start="187:31" pos:end="187:41"><name pos:start="187:31" pos:end="187:33">env</name> <operator pos:start="187:35" pos:end="187:36">!=</operator> <name pos:start="187:38" pos:end="187:41">NULL</name></expr>;</condition> <incr pos:start="187:44" pos:end="187:62"><expr pos:start="187:44" pos:end="187:62"><name pos:start="187:44" pos:end="187:46">env</name> <operator pos:start="187:48" pos:end="187:48">=</operator> <name pos:start="187:50" pos:end="187:62"><name pos:start="187:50" pos:end="187:52">env</name><operator pos:start="187:53" pos:end="187:54">-&gt;</operator><name pos:start="187:55" pos:end="187:62">next_cpu</name></name></expr></incr>)</control> <block pos:start="187:65" pos:end="195:9">{<block_content pos:start="189:13" pos:end="193:13">

            <if_stmt pos:start="189:13" pos:end="193:13"><if pos:start="189:13" pos:end="193:13">if <condition pos:start="189:16" pos:end="189:36">(<expr pos:start="189:17" pos:end="189:35"><name pos:start="189:17" pos:end="189:30"><name pos:start="189:17" pos:end="189:19">env</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:30">cpu_index</name></name> <operator pos:start="189:32" pos:end="189:33">==</operator> <name pos:start="189:35" pos:end="189:35">i</name></expr>)</condition> <block pos:start="189:38" pos:end="193:13">{<block_content pos:start="191:17" pos:end="191:22">

                <break pos:start="191:17" pos:end="191:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="199:9" pos:end="203:9"><if pos:start="199:9" pos:end="203:9">if <condition pos:start="199:12" pos:end="199:17">(<expr pos:start="199:13" pos:end="199:16"><operator pos:start="199:13" pos:end="199:13">!</operator><name pos:start="199:14" pos:end="199:16">env</name></expr>)</condition> <block pos:start="199:19" pos:end="203:9">{<block_content pos:start="201:13" pos:end="201:21">

            <continue pos:start="201:13" pos:end="201:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="207:9" pos:end="207:86"><expr pos:start="207:9" pos:end="207:85"><call pos:start="207:9" pos:end="207:85"><name pos:start="207:9" pos:end="207:16">snprintf</name><argument_list pos:start="207:17" pos:end="207:85">(<argument pos:start="207:18" pos:end="207:25"><expr pos:start="207:18" pos:end="207:25"><name pos:start="207:18" pos:end="207:25">cpu_name</name></expr></argument>, <argument pos:start="207:28" pos:end="207:43"><expr pos:start="207:28" pos:end="207:43"><sizeof pos:start="207:28" pos:end="207:43">sizeof<argument_list pos:start="207:34" pos:end="207:43">(<argument pos:start="207:35" pos:end="207:42"><expr pos:start="207:35" pos:end="207:42"><name pos:start="207:35" pos:end="207:42">cpu_name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="207:46" pos:end="207:68"><expr pos:start="207:46" pos:end="207:68"><literal type="string" pos:start="207:46" pos:end="207:68">"/cpus/PowerPC,8544@%x"</literal></expr></argument>, <argument pos:start="207:71" pos:end="207:84"><expr pos:start="207:71" pos:end="207:84"><name pos:start="207:71" pos:end="207:84"><name pos:start="207:71" pos:end="207:73">env</name><operator pos:start="207:74" pos:end="207:75">-&gt;</operator><name pos:start="207:76" pos:end="207:84">cpu_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:48"><expr pos:start="209:9" pos:end="209:47"><call pos:start="209:9" pos:end="209:47"><name pos:start="209:9" pos:end="209:32">qemu_devtree_add_subnode</name><argument_list pos:start="209:33" pos:end="209:47">(<argument pos:start="209:34" pos:end="209:36"><expr pos:start="209:34" pos:end="209:36"><name pos:start="209:34" pos:end="209:36">fdt</name></expr></argument>, <argument pos:start="209:39" pos:end="209:46"><expr pos:start="209:39" pos:end="209:46"><name pos:start="209:39" pos:end="209:46">cpu_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:80"><expr pos:start="211:9" pos:end="211:79"><call pos:start="211:9" pos:end="211:79"><name pos:start="211:9" pos:end="211:33">qemu_devtree_setprop_cell</name><argument_list pos:start="211:34" pos:end="211:79">(<argument pos:start="211:35" pos:end="211:37"><expr pos:start="211:35" pos:end="211:37"><name pos:start="211:35" pos:end="211:37">fdt</name></expr></argument>, <argument pos:start="211:40" pos:end="211:47"><expr pos:start="211:40" pos:end="211:47"><name pos:start="211:40" pos:end="211:47">cpu_name</name></expr></argument>, <argument pos:start="211:50" pos:end="211:66"><expr pos:start="211:50" pos:end="211:66"><literal type="string" pos:start="211:50" pos:end="211:66">"clock-frequency"</literal></expr></argument>, <argument pos:start="211:69" pos:end="211:78"><expr pos:start="211:69" pos:end="211:78"><name pos:start="211:69" pos:end="211:78">clock_freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:80"><expr pos:start="213:9" pos:end="213:79"><call pos:start="213:9" pos:end="213:79"><name pos:start="213:9" pos:end="213:33">qemu_devtree_setprop_cell</name><argument_list pos:start="213:34" pos:end="213:79">(<argument pos:start="213:35" pos:end="213:37"><expr pos:start="213:35" pos:end="213:37"><name pos:start="213:35" pos:end="213:37">fdt</name></expr></argument>, <argument pos:start="213:40" pos:end="213:47"><expr pos:start="213:40" pos:end="213:47"><name pos:start="213:40" pos:end="213:47">cpu_name</name></expr></argument>, <argument pos:start="213:50" pos:end="213:69"><expr pos:start="213:50" pos:end="213:69"><literal type="string" pos:start="213:50" pos:end="213:69">"timebase-frequency"</literal></expr></argument>, <argument pos:start="213:72" pos:end="213:78"><expr pos:start="213:72" pos:end="213:78"><name pos:start="213:72" pos:end="213:78">tb_freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:73"><expr pos:start="215:9" pos:end="215:72"><call pos:start="215:9" pos:end="215:72"><name pos:start="215:9" pos:end="215:35">qemu_devtree_setprop_string</name><argument_list pos:start="215:36" pos:end="215:72">(<argument pos:start="215:37" pos:end="215:39"><expr pos:start="215:37" pos:end="215:39"><name pos:start="215:37" pos:end="215:39">fdt</name></expr></argument>, <argument pos:start="215:42" pos:end="215:49"><expr pos:start="215:42" pos:end="215:49"><name pos:start="215:42" pos:end="215:49">cpu_name</name></expr></argument>, <argument pos:start="215:52" pos:end="215:64"><expr pos:start="215:52" pos:end="215:64"><literal type="string" pos:start="215:52" pos:end="215:64">"device_type"</literal></expr></argument>, <argument pos:start="215:67" pos:end="215:71"><expr pos:start="215:67" pos:end="215:71"><literal type="string" pos:start="215:67" pos:end="215:71">"cpu"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:72"><expr pos:start="217:9" pos:end="217:71"><call pos:start="217:9" pos:end="217:71"><name pos:start="217:9" pos:end="217:33">qemu_devtree_setprop_cell</name><argument_list pos:start="217:34" pos:end="217:71">(<argument pos:start="217:35" pos:end="217:37"><expr pos:start="217:35" pos:end="217:37"><name pos:start="217:35" pos:end="217:37">fdt</name></expr></argument>, <argument pos:start="217:40" pos:end="217:47"><expr pos:start="217:40" pos:end="217:47"><name pos:start="217:40" pos:end="217:47">cpu_name</name></expr></argument>, <argument pos:start="217:50" pos:end="217:54"><expr pos:start="217:50" pos:end="217:54"><literal type="string" pos:start="217:50" pos:end="217:54">"reg"</literal></expr></argument>, <argument pos:start="217:57" pos:end="217:70"><expr pos:start="217:57" pos:end="217:70"><name pos:start="217:57" pos:end="217:70"><name pos:start="217:57" pos:end="217:59">env</name><operator pos:start="217:60" pos:end="217:61">-&gt;</operator><name pos:start="217:62" pos:end="217:70">cpu_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="221:57"><expr pos:start="219:9" pos:end="221:56"><call pos:start="219:9" pos:end="221:56"><name pos:start="219:9" pos:end="219:33">qemu_devtree_setprop_cell</name><argument_list pos:start="219:34" pos:end="221:56">(<argument pos:start="219:35" pos:end="219:37"><expr pos:start="219:35" pos:end="219:37"><name pos:start="219:35" pos:end="219:37">fdt</name></expr></argument>, <argument pos:start="219:40" pos:end="219:47"><expr pos:start="219:40" pos:end="219:47"><name pos:start="219:40" pos:end="219:47">cpu_name</name></expr></argument>, <argument pos:start="219:50" pos:end="219:68"><expr pos:start="219:50" pos:end="219:68"><literal type="string" pos:start="219:50" pos:end="219:68">"d-cache-line-size"</literal></expr></argument>,

                                  <argument pos:start="221:35" pos:end="221:55"><expr pos:start="221:35" pos:end="221:55"><name pos:start="221:35" pos:end="221:55"><name pos:start="221:35" pos:end="221:37">env</name><operator pos:start="221:38" pos:end="221:39">-&gt;</operator><name pos:start="221:40" pos:end="221:55">dcache_line_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="225:57"><expr pos:start="223:9" pos:end="225:56"><call pos:start="223:9" pos:end="225:56"><name pos:start="223:9" pos:end="223:33">qemu_devtree_setprop_cell</name><argument_list pos:start="223:34" pos:end="225:56">(<argument pos:start="223:35" pos:end="223:37"><expr pos:start="223:35" pos:end="223:37"><name pos:start="223:35" pos:end="223:37">fdt</name></expr></argument>, <argument pos:start="223:40" pos:end="223:47"><expr pos:start="223:40" pos:end="223:47"><name pos:start="223:40" pos:end="223:47">cpu_name</name></expr></argument>, <argument pos:start="223:50" pos:end="223:68"><expr pos:start="223:50" pos:end="223:68"><literal type="string" pos:start="223:50" pos:end="223:68">"i-cache-line-size"</literal></expr></argument>,

                                  <argument pos:start="225:35" pos:end="225:55"><expr pos:start="225:35" pos:end="225:55"><name pos:start="225:35" pos:end="225:55"><name pos:start="225:35" pos:end="225:37">env</name><operator pos:start="225:38" pos:end="225:39">-&gt;</operator><name pos:start="225:40" pos:end="225:55">icache_line_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:73"><expr pos:start="227:9" pos:end="227:72"><call pos:start="227:9" pos:end="227:72"><name pos:start="227:9" pos:end="227:33">qemu_devtree_setprop_cell</name><argument_list pos:start="227:34" pos:end="227:72">(<argument pos:start="227:35" pos:end="227:37"><expr pos:start="227:35" pos:end="227:37"><name pos:start="227:35" pos:end="227:37">fdt</name></expr></argument>, <argument pos:start="227:40" pos:end="227:47"><expr pos:start="227:40" pos:end="227:47"><name pos:start="227:40" pos:end="227:47">cpu_name</name></expr></argument>, <argument pos:start="227:50" pos:end="227:63"><expr pos:start="227:50" pos:end="227:63"><literal type="string" pos:start="227:50" pos:end="227:63">"d-cache-size"</literal></expr></argument>, <argument pos:start="227:66" pos:end="227:71"><expr pos:start="227:66" pos:end="227:71"><literal type="number" pos:start="227:66" pos:end="227:71">0x8000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:73"><expr pos:start="229:9" pos:end="229:72"><call pos:start="229:9" pos:end="229:72"><name pos:start="229:9" pos:end="229:33">qemu_devtree_setprop_cell</name><argument_list pos:start="229:34" pos:end="229:72">(<argument pos:start="229:35" pos:end="229:37"><expr pos:start="229:35" pos:end="229:37"><name pos:start="229:35" pos:end="229:37">fdt</name></expr></argument>, <argument pos:start="229:40" pos:end="229:47"><expr pos:start="229:40" pos:end="229:47"><name pos:start="229:40" pos:end="229:47">cpu_name</name></expr></argument>, <argument pos:start="229:50" pos:end="229:63"><expr pos:start="229:50" pos:end="229:63"><literal type="string" pos:start="229:50" pos:end="229:63">"i-cache-size"</literal></expr></argument>, <argument pos:start="229:66" pos:end="229:71"><expr pos:start="229:66" pos:end="229:71"><literal type="number" pos:start="229:66" pos:end="229:71">0x8000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:69"><expr pos:start="231:9" pos:end="231:68"><call pos:start="231:9" pos:end="231:68"><name pos:start="231:9" pos:end="231:33">qemu_devtree_setprop_cell</name><argument_list pos:start="231:34" pos:end="231:68">(<argument pos:start="231:35" pos:end="231:37"><expr pos:start="231:35" pos:end="231:37"><name pos:start="231:35" pos:end="231:37">fdt</name></expr></argument>, <argument pos:start="231:40" pos:end="231:47"><expr pos:start="231:40" pos:end="231:47"><name pos:start="231:40" pos:end="231:47">cpu_name</name></expr></argument>, <argument pos:start="231:50" pos:end="231:64"><expr pos:start="231:50" pos:end="231:64"><literal type="string" pos:start="231:50" pos:end="231:64">"bus-frequency"</literal></expr></argument>, <argument pos:start="231:67" pos:end="231:67"><expr pos:start="231:67" pos:end="231:67"><literal type="number" pos:start="231:67" pos:end="231:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="233:9" pos:end="247:9"><if pos:start="233:9" pos:end="243:9">if <condition pos:start="233:12" pos:end="233:27">(<expr pos:start="233:13" pos:end="233:26"><name pos:start="233:13" pos:end="233:26"><name pos:start="233:13" pos:end="233:15">env</name><operator pos:start="233:16" pos:end="233:17">-&gt;</operator><name pos:start="233:18" pos:end="233:26">cpu_index</name></name></expr>)</condition> <block pos:start="233:29" pos:end="243:9">{<block_content pos:start="235:13" pos:end="241:55">

            <expr_stmt pos:start="235:13" pos:end="235:77"><expr pos:start="235:13" pos:end="235:76"><call pos:start="235:13" pos:end="235:76"><name pos:start="235:13" pos:end="235:39">qemu_devtree_setprop_string</name><argument_list pos:start="235:40" pos:end="235:76">(<argument pos:start="235:41" pos:end="235:43"><expr pos:start="235:41" pos:end="235:43"><name pos:start="235:41" pos:end="235:43">fdt</name></expr></argument>, <argument pos:start="235:46" pos:end="235:53"><expr pos:start="235:46" pos:end="235:53"><name pos:start="235:46" pos:end="235:53">cpu_name</name></expr></argument>, <argument pos:start="235:56" pos:end="235:63"><expr pos:start="235:56" pos:end="235:63"><literal type="string" pos:start="235:56" pos:end="235:63">"status"</literal></expr></argument>, <argument pos:start="235:66" pos:end="235:75"><expr pos:start="235:66" pos:end="235:75"><literal type="string" pos:start="235:66" pos:end="235:75">"disabled"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:86"><expr pos:start="237:13" pos:end="237:85"><call pos:start="237:13" pos:end="237:85"><name pos:start="237:13" pos:end="237:39">qemu_devtree_setprop_string</name><argument_list pos:start="237:40" pos:end="237:85">(<argument pos:start="237:41" pos:end="237:43"><expr pos:start="237:41" pos:end="237:43"><name pos:start="237:41" pos:end="237:43">fdt</name></expr></argument>, <argument pos:start="237:46" pos:end="237:53"><expr pos:start="237:46" pos:end="237:53"><name pos:start="237:46" pos:end="237:53">cpu_name</name></expr></argument>, <argument pos:start="237:56" pos:end="237:70"><expr pos:start="237:56" pos:end="237:70"><literal type="string" pos:start="237:56" pos:end="237:70">"enable-method"</literal></expr></argument>, <argument pos:start="237:73" pos:end="237:84"><expr pos:start="237:73" pos:end="237:84"><literal type="string" pos:start="237:73" pos:end="237:84">"spin-table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="241:55"><expr pos:start="239:13" pos:end="241:54"><call pos:start="239:13" pos:end="241:54"><name pos:start="239:13" pos:end="239:36">qemu_devtree_setprop_u64</name><argument_list pos:start="239:37" pos:end="241:54">(<argument pos:start="239:38" pos:end="239:40"><expr pos:start="239:38" pos:end="239:40"><name pos:start="239:38" pos:end="239:40">fdt</name></expr></argument>, <argument pos:start="239:43" pos:end="239:50"><expr pos:start="239:43" pos:end="239:50"><name pos:start="239:43" pos:end="239:50">cpu_name</name></expr></argument>, <argument pos:start="239:53" pos:end="239:70"><expr pos:start="239:53" pos:end="239:70"><literal type="string" pos:start="239:53" pos:end="239:70">"cpu-release-addr"</literal></expr></argument>,

                                     <argument pos:start="241:38" pos:end="241:53"><expr pos:start="241:38" pos:end="241:53"><name pos:start="241:38" pos:end="241:53">cpu_release_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="243:11" pos:end="247:9">else <block pos:start="243:16" pos:end="247:9">{<block_content pos:start="245:13" pos:end="245:73">

            <expr_stmt pos:start="245:13" pos:end="245:73"><expr pos:start="245:13" pos:end="245:72"><call pos:start="245:13" pos:end="245:72"><name pos:start="245:13" pos:end="245:39">qemu_devtree_setprop_string</name><argument_list pos:start="245:40" pos:end="245:72">(<argument pos:start="245:41" pos:end="245:43"><expr pos:start="245:41" pos:end="245:43"><name pos:start="245:41" pos:end="245:43">fdt</name></expr></argument>, <argument pos:start="245:46" pos:end="245:53"><expr pos:start="245:46" pos:end="245:53"><name pos:start="245:46" pos:end="245:53">cpu_name</name></expr></argument>, <argument pos:start="245:56" pos:end="245:63"><expr pos:start="245:56" pos:end="245:63"><literal type="string" pos:start="245:56" pos:end="245:63">"status"</literal></expr></argument>, <argument pos:start="245:66" pos:end="245:71"><expr pos:start="245:66" pos:end="245:71"><literal type="string" pos:start="245:66" pos:end="245:71">"okay"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="253:5" pos:end="253:46"><expr pos:start="253:5" pos:end="253:45"><call pos:start="253:5" pos:end="253:45"><name pos:start="253:5" pos:end="253:28">qemu_devtree_add_subnode</name><argument_list pos:start="253:29" pos:end="253:45">(<argument pos:start="253:30" pos:end="253:32"><expr pos:start="253:30" pos:end="253:32"><name pos:start="253:30" pos:end="253:32">fdt</name></expr></argument>, <argument pos:start="253:35" pos:end="253:44"><expr pos:start="253:35" pos:end="253:44"><literal type="string" pos:start="253:35" pos:end="253:44">"/aliases"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="255:5" pos:end="255:65">/* XXX These should go into their respective devices' code */</comment>

    <expr_stmt pos:start="257:5" pos:end="257:68"><expr pos:start="257:5" pos:end="257:67"><call pos:start="257:5" pos:end="257:67"><name pos:start="257:5" pos:end="257:12">snprintf</name><argument_list pos:start="257:13" pos:end="257:67">(<argument pos:start="257:14" pos:end="257:16"><expr pos:start="257:14" pos:end="257:16"><name pos:start="257:14" pos:end="257:16">soc</name></expr></argument>, <argument pos:start="257:19" pos:end="257:29"><expr pos:start="257:19" pos:end="257:29"><sizeof pos:start="257:19" pos:end="257:29">sizeof<argument_list pos:start="257:25" pos:end="257:29">(<argument pos:start="257:26" pos:end="257:28"><expr pos:start="257:26" pos:end="257:28"><name pos:start="257:26" pos:end="257:28">soc</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="257:32" pos:end="257:44"><expr pos:start="257:32" pos:end="257:44"><literal type="string" pos:start="257:32" pos:end="257:44">"/soc8544@%x"</literal></expr></argument>, <argument pos:start="257:47" pos:end="257:66"><expr pos:start="257:47" pos:end="257:66"><name pos:start="257:47" pos:end="257:66">MPC8544_CCSRBAR_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:39"><expr pos:start="259:5" pos:end="259:38"><call pos:start="259:5" pos:end="259:38"><name pos:start="259:5" pos:end="259:28">qemu_devtree_add_subnode</name><argument_list pos:start="259:29" pos:end="259:38">(<argument pos:start="259:30" pos:end="259:32"><expr pos:start="259:30" pos:end="259:32"><name pos:start="259:30" pos:end="259:32">fdt</name></expr></argument>, <argument pos:start="259:35" pos:end="259:37"><expr pos:start="259:35" pos:end="259:37"><name pos:start="259:35" pos:end="259:37">soc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:64"><expr pos:start="261:5" pos:end="261:63"><call pos:start="261:5" pos:end="261:63"><name pos:start="261:5" pos:end="261:31">qemu_devtree_setprop_string</name><argument_list pos:start="261:32" pos:end="261:63">(<argument pos:start="261:33" pos:end="261:35"><expr pos:start="261:33" pos:end="261:35"><name pos:start="261:33" pos:end="261:35">fdt</name></expr></argument>, <argument pos:start="261:38" pos:end="261:40"><expr pos:start="261:38" pos:end="261:40"><name pos:start="261:38" pos:end="261:40">soc</name></expr></argument>, <argument pos:start="261:43" pos:end="261:55"><expr pos:start="261:43" pos:end="261:55"><literal type="string" pos:start="261:43" pos:end="261:55">"device_type"</literal></expr></argument>, <argument pos:start="261:58" pos:end="261:62"><expr pos:start="261:58" pos:end="261:62"><literal type="string" pos:start="261:58" pos:end="261:62">"soc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:70"><expr pos:start="263:5" pos:end="263:69"><call pos:start="263:5" pos:end="263:69"><name pos:start="263:5" pos:end="263:31">qemu_devtree_setprop_string</name><argument_list pos:start="263:32" pos:end="263:69">(<argument pos:start="263:33" pos:end="263:35"><expr pos:start="263:33" pos:end="263:35"><name pos:start="263:33" pos:end="263:35">fdt</name></expr></argument>, <argument pos:start="263:38" pos:end="263:40"><expr pos:start="263:38" pos:end="263:40"><name pos:start="263:38" pos:end="263:40">soc</name></expr></argument>, <argument pos:start="263:43" pos:end="263:54"><expr pos:start="263:43" pos:end="263:54"><literal type="string" pos:start="263:43" pos:end="263:54">"compatible"</literal></expr></argument>, <argument pos:start="263:57" pos:end="263:68"><expr pos:start="263:57" pos:end="263:68"><literal type="string" pos:start="263:57" pos:end="263:68">"simple-bus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:61"><expr pos:start="265:5" pos:end="265:60"><call pos:start="265:5" pos:end="265:60"><name pos:start="265:5" pos:end="265:29">qemu_devtree_setprop_cell</name><argument_list pos:start="265:30" pos:end="265:60">(<argument pos:start="265:31" pos:end="265:33"><expr pos:start="265:31" pos:end="265:33"><name pos:start="265:31" pos:end="265:33">fdt</name></expr></argument>, <argument pos:start="265:36" pos:end="265:38"><expr pos:start="265:36" pos:end="265:38"><name pos:start="265:36" pos:end="265:38">soc</name></expr></argument>, <argument pos:start="265:41" pos:end="265:56"><expr pos:start="265:41" pos:end="265:56"><literal type="string" pos:start="265:41" pos:end="265:56">"#address-cells"</literal></expr></argument>, <argument pos:start="265:59" pos:end="265:59"><expr pos:start="265:59" pos:end="265:59"><literal type="number" pos:start="265:59" pos:end="265:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:58"><expr pos:start="267:5" pos:end="267:57"><call pos:start="267:5" pos:end="267:57"><name pos:start="267:5" pos:end="267:29">qemu_devtree_setprop_cell</name><argument_list pos:start="267:30" pos:end="267:57">(<argument pos:start="267:31" pos:end="267:33"><expr pos:start="267:31" pos:end="267:33"><name pos:start="267:31" pos:end="267:33">fdt</name></expr></argument>, <argument pos:start="267:36" pos:end="267:38"><expr pos:start="267:36" pos:end="267:38"><name pos:start="267:36" pos:end="267:38">soc</name></expr></argument>, <argument pos:start="267:41" pos:end="267:53"><expr pos:start="267:41" pos:end="267:53"><literal type="string" pos:start="267:41" pos:end="267:53">"#size-cells"</literal></expr></argument>, <argument pos:start="267:56" pos:end="267:56"><expr pos:start="267:56" pos:end="267:56"><literal type="number" pos:start="267:56" pos:end="267:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="269:5" pos:end="271:53"><expr pos:start="269:5" pos:end="271:52"><call pos:start="269:5" pos:end="271:52"><name pos:start="269:5" pos:end="269:30">qemu_devtree_setprop_cells</name><argument_list pos:start="269:31" pos:end="271:52">(<argument pos:start="269:32" pos:end="269:34"><expr pos:start="269:32" pos:end="269:34"><name pos:start="269:32" pos:end="269:34">fdt</name></expr></argument>, <argument pos:start="269:37" pos:end="269:39"><expr pos:start="269:37" pos:end="269:39"><name pos:start="269:37" pos:end="269:39">soc</name></expr></argument>, <argument pos:start="269:42" pos:end="269:49"><expr pos:start="269:42" pos:end="269:49"><literal type="string" pos:start="269:42" pos:end="269:49">"ranges"</literal></expr></argument>, <argument pos:start="269:52" pos:end="269:54"><expr pos:start="269:52" pos:end="269:54"><literal type="number" pos:start="269:52" pos:end="269:54">0x0</literal></expr></argument>, <argument pos:start="269:57" pos:end="269:76"><expr pos:start="269:57" pos:end="269:76"><name pos:start="269:57" pos:end="269:76">MPC8544_CCSRBAR_BASE</name></expr></argument>,

                               <argument pos:start="271:32" pos:end="271:51"><expr pos:start="271:32" pos:end="271:51"><name pos:start="271:32" pos:end="271:51">MPC8544_CCSRBAR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="273:5" pos:end="275:56"><expr pos:start="273:5" pos:end="275:55"><call pos:start="273:5" pos:end="275:55"><name pos:start="273:5" pos:end="273:30">qemu_devtree_setprop_cells</name><argument_list pos:start="273:31" pos:end="275:55">(<argument pos:start="273:32" pos:end="273:34"><expr pos:start="273:32" pos:end="273:34"><name pos:start="273:32" pos:end="273:34">fdt</name></expr></argument>, <argument pos:start="273:37" pos:end="273:39"><expr pos:start="273:37" pos:end="273:39"><name pos:start="273:37" pos:end="273:39">soc</name></expr></argument>, <argument pos:start="273:42" pos:end="273:46"><expr pos:start="273:42" pos:end="273:46"><literal type="string" pos:start="273:42" pos:end="273:46">"reg"</literal></expr></argument>, <argument pos:start="273:49" pos:end="273:68"><expr pos:start="273:49" pos:end="273:68"><name pos:start="273:49" pos:end="273:68">MPC8544_CCSRBAR_BASE</name></expr></argument>,

                               <argument pos:start="275:32" pos:end="275:54"><expr pos:start="275:32" pos:end="275:54"><name pos:start="275:32" pos:end="275:54">MPC8544_CCSRBAR_REGSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="277:5" pos:end="277:47">/* XXX should contain a reasonable value */</comment>

    <expr_stmt pos:start="279:5" pos:end="279:60"><expr pos:start="279:5" pos:end="279:59"><call pos:start="279:5" pos:end="279:59"><name pos:start="279:5" pos:end="279:29">qemu_devtree_setprop_cell</name><argument_list pos:start="279:30" pos:end="279:59">(<argument pos:start="279:31" pos:end="279:33"><expr pos:start="279:31" pos:end="279:33"><name pos:start="279:31" pos:end="279:33">fdt</name></expr></argument>, <argument pos:start="279:36" pos:end="279:38"><expr pos:start="279:36" pos:end="279:38"><name pos:start="279:36" pos:end="279:38">soc</name></expr></argument>, <argument pos:start="279:41" pos:end="279:55"><expr pos:start="279:41" pos:end="279:55"><literal type="string" pos:start="279:41" pos:end="279:55">"bus-frequency"</literal></expr></argument>, <argument pos:start="279:58" pos:end="279:58"><expr pos:start="279:58" pos:end="279:58"><literal type="number" pos:start="279:58" pos:end="279:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="283:5" pos:end="285:60"><expr pos:start="283:5" pos:end="285:59"><call pos:start="283:5" pos:end="285:59"><name pos:start="283:5" pos:end="283:12">snprintf</name><argument_list pos:start="283:13" pos:end="285:59">(<argument pos:start="283:14" pos:end="283:17"><expr pos:start="283:14" pos:end="283:17"><name pos:start="283:14" pos:end="283:17">mpic</name></expr></argument>, <argument pos:start="283:20" pos:end="283:31"><expr pos:start="283:20" pos:end="283:31"><sizeof pos:start="283:20" pos:end="283:31">sizeof<argument_list pos:start="283:26" pos:end="283:31">(<argument pos:start="283:27" pos:end="283:30"><expr pos:start="283:27" pos:end="283:30"><name pos:start="283:27" pos:end="283:30">mpic</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="283:34" pos:end="283:44"><expr pos:start="283:34" pos:end="283:44"><literal type="string" pos:start="283:34" pos:end="283:44">"%s/pic@%x"</literal></expr></argument>, <argument pos:start="283:47" pos:end="283:49"><expr pos:start="283:47" pos:end="283:49"><name pos:start="283:47" pos:end="283:49">soc</name></expr></argument>,

             <argument pos:start="285:14" pos:end="285:58"><expr pos:start="285:14" pos:end="285:58"><name pos:start="285:14" pos:end="285:35">MPC8544_MPIC_REGS_BASE</name> <operator pos:start="285:37" pos:end="285:37">-</operator> <name pos:start="285:39" pos:end="285:58">MPC8544_CCSRBAR_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:40"><expr pos:start="287:5" pos:end="287:39"><call pos:start="287:5" pos:end="287:39"><name pos:start="287:5" pos:end="287:28">qemu_devtree_add_subnode</name><argument_list pos:start="287:29" pos:end="287:39">(<argument pos:start="287:30" pos:end="287:32"><expr pos:start="287:30" pos:end="287:32"><name pos:start="287:30" pos:end="287:32">fdt</name></expr></argument>, <argument pos:start="287:35" pos:end="287:38"><expr pos:start="287:35" pos:end="287:38"><name pos:start="287:35" pos:end="287:38">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="289:70"><expr pos:start="289:5" pos:end="289:69"><call pos:start="289:5" pos:end="289:69"><name pos:start="289:5" pos:end="289:31">qemu_devtree_setprop_string</name><argument_list pos:start="289:32" pos:end="289:69">(<argument pos:start="289:33" pos:end="289:35"><expr pos:start="289:33" pos:end="289:35"><name pos:start="289:33" pos:end="289:35">fdt</name></expr></argument>, <argument pos:start="289:38" pos:end="289:41"><expr pos:start="289:38" pos:end="289:41"><name pos:start="289:38" pos:end="289:41">mpic</name></expr></argument>, <argument pos:start="289:44" pos:end="289:56"><expr pos:start="289:44" pos:end="289:56"><literal type="string" pos:start="289:44" pos:end="289:56">"device_type"</literal></expr></argument>, <argument pos:start="289:59" pos:end="289:68"><expr pos:start="289:59" pos:end="289:68"><literal type="string" pos:start="289:59" pos:end="289:68">"open-pic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="291:5" pos:end="291:74"><expr pos:start="291:5" pos:end="291:73"><call pos:start="291:5" pos:end="291:73"><name pos:start="291:5" pos:end="291:31">qemu_devtree_setprop_string</name><argument_list pos:start="291:32" pos:end="291:73">(<argument pos:start="291:33" pos:end="291:35"><expr pos:start="291:33" pos:end="291:35"><name pos:start="291:33" pos:end="291:35">fdt</name></expr></argument>, <argument pos:start="291:38" pos:end="291:41"><expr pos:start="291:38" pos:end="291:41"><name pos:start="291:38" pos:end="291:41">mpic</name></expr></argument>, <argument pos:start="291:44" pos:end="291:55"><expr pos:start="291:44" pos:end="291:55"><literal type="string" pos:start="291:44" pos:end="291:55">"compatible"</literal></expr></argument>, <argument pos:start="291:58" pos:end="291:72"><expr pos:start="291:58" pos:end="291:72"><literal type="string" pos:start="291:58" pos:end="291:72">"chrp,open-pic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="295:62"><expr pos:start="293:5" pos:end="295:61"><call pos:start="293:5" pos:end="295:61"><name pos:start="293:5" pos:end="293:30">qemu_devtree_setprop_cells</name><argument_list pos:start="293:31" pos:end="295:61">(<argument pos:start="293:32" pos:end="293:34"><expr pos:start="293:32" pos:end="293:34"><name pos:start="293:32" pos:end="293:34">fdt</name></expr></argument>, <argument pos:start="293:37" pos:end="293:40"><expr pos:start="293:37" pos:end="293:40"><name pos:start="293:37" pos:end="293:40">mpic</name></expr></argument>, <argument pos:start="293:43" pos:end="293:47"><expr pos:start="293:43" pos:end="293:47"><literal type="string" pos:start="293:43" pos:end="293:47">"reg"</literal></expr></argument>, <argument pos:start="293:50" pos:end="295:51"><expr pos:start="293:50" pos:end="295:51"><name pos:start="293:50" pos:end="293:71">MPC8544_MPIC_REGS_BASE</name> <operator pos:start="293:73" pos:end="293:73">-</operator>

                               <name pos:start="295:32" pos:end="295:51">MPC8544_CCSRBAR_BASE</name></expr></argument>, <argument pos:start="295:54" pos:end="295:60"><expr pos:start="295:54" pos:end="295:60"><literal type="number" pos:start="295:54" pos:end="295:60">0x40000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:62"><expr pos:start="297:5" pos:end="297:61"><call pos:start="297:5" pos:end="297:61"><name pos:start="297:5" pos:end="297:29">qemu_devtree_setprop_cell</name><argument_list pos:start="297:30" pos:end="297:61">(<argument pos:start="297:31" pos:end="297:33"><expr pos:start="297:31" pos:end="297:33"><name pos:start="297:31" pos:end="297:33">fdt</name></expr></argument>, <argument pos:start="297:36" pos:end="297:39"><expr pos:start="297:36" pos:end="297:39"><name pos:start="297:36" pos:end="297:39">mpic</name></expr></argument>, <argument pos:start="297:42" pos:end="297:57"><expr pos:start="297:42" pos:end="297:57"><literal type="string" pos:start="297:42" pos:end="297:57">"#address-cells"</literal></expr></argument>, <argument pos:start="297:60" pos:end="297:60"><expr pos:start="297:60" pos:end="297:60"><literal type="number" pos:start="297:60" pos:end="297:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:64"><expr pos:start="299:5" pos:end="299:63"><call pos:start="299:5" pos:end="299:63"><name pos:start="299:5" pos:end="299:29">qemu_devtree_setprop_cell</name><argument_list pos:start="299:30" pos:end="299:63">(<argument pos:start="299:31" pos:end="299:33"><expr pos:start="299:31" pos:end="299:33"><name pos:start="299:31" pos:end="299:33">fdt</name></expr></argument>, <argument pos:start="299:36" pos:end="299:39"><expr pos:start="299:36" pos:end="299:39"><name pos:start="299:36" pos:end="299:39">mpic</name></expr></argument>, <argument pos:start="299:42" pos:end="299:59"><expr pos:start="299:42" pos:end="299:59"><literal type="string" pos:start="299:42" pos:end="299:59">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="299:62" pos:end="299:62"><expr pos:start="299:62" pos:end="299:62"><literal type="number" pos:start="299:62" pos:end="299:62">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="301:5" pos:end="301:46"><expr pos:start="301:5" pos:end="301:45"><name pos:start="301:5" pos:end="301:11">mpic_ph</name> <operator pos:start="301:13" pos:end="301:13">=</operator> <call pos:start="301:15" pos:end="301:45"><name pos:start="301:15" pos:end="301:40">qemu_devtree_alloc_phandle</name><argument_list pos:start="301:41" pos:end="301:45">(<argument pos:start="301:42" pos:end="301:44"><expr pos:start="301:42" pos:end="301:44"><name pos:start="301:42" pos:end="301:44">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:61"><expr pos:start="303:5" pos:end="303:60"><call pos:start="303:5" pos:end="303:60"><name pos:start="303:5" pos:end="303:29">qemu_devtree_setprop_cell</name><argument_list pos:start="303:30" pos:end="303:60">(<argument pos:start="303:31" pos:end="303:33"><expr pos:start="303:31" pos:end="303:33"><name pos:start="303:31" pos:end="303:33">fdt</name></expr></argument>, <argument pos:start="303:36" pos:end="303:39"><expr pos:start="303:36" pos:end="303:39"><name pos:start="303:36" pos:end="303:39">mpic</name></expr></argument>, <argument pos:start="303:42" pos:end="303:50"><expr pos:start="303:42" pos:end="303:50"><literal type="string" pos:start="303:42" pos:end="303:50">"phandle"</literal></expr></argument>, <argument pos:start="303:53" pos:end="303:59"><expr pos:start="303:53" pos:end="303:59"><name pos:start="303:53" pos:end="303:59">mpic_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:67"><expr pos:start="305:5" pos:end="305:66"><call pos:start="305:5" pos:end="305:66"><name pos:start="305:5" pos:end="305:29">qemu_devtree_setprop_cell</name><argument_list pos:start="305:30" pos:end="305:66">(<argument pos:start="305:31" pos:end="305:33"><expr pos:start="305:31" pos:end="305:33"><name pos:start="305:31" pos:end="305:33">fdt</name></expr></argument>, <argument pos:start="305:36" pos:end="305:39"><expr pos:start="305:36" pos:end="305:39"><name pos:start="305:36" pos:end="305:39">mpic</name></expr></argument>, <argument pos:start="305:42" pos:end="305:56"><expr pos:start="305:42" pos:end="305:56"><literal type="string" pos:start="305:42" pos:end="305:56">"linux,phandle"</literal></expr></argument>, <argument pos:start="305:59" pos:end="305:65"><expr pos:start="305:59" pos:end="305:65"><name pos:start="305:59" pos:end="305:65">mpic_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:69"><expr pos:start="307:5" pos:end="307:68"><call pos:start="307:5" pos:end="307:68"><name pos:start="307:5" pos:end="307:24">qemu_devtree_setprop</name><argument_list pos:start="307:25" pos:end="307:68">(<argument pos:start="307:26" pos:end="307:28"><expr pos:start="307:26" pos:end="307:28"><name pos:start="307:26" pos:end="307:28">fdt</name></expr></argument>, <argument pos:start="307:31" pos:end="307:34"><expr pos:start="307:31" pos:end="307:34"><name pos:start="307:31" pos:end="307:34">mpic</name></expr></argument>, <argument pos:start="307:37" pos:end="307:58"><expr pos:start="307:37" pos:end="307:58"><literal type="string" pos:start="307:37" pos:end="307:58">"interrupt-controller"</literal></expr></argument>, <argument pos:start="307:61" pos:end="307:64"><expr pos:start="307:61" pos:end="307:64"><name pos:start="307:61" pos:end="307:64">NULL</name></expr></argument>, <argument pos:start="307:67" pos:end="307:67"><expr pos:start="307:67" pos:end="307:67"><literal type="number" pos:start="307:67" pos:end="307:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="311:5" pos:end="319:7">/*

     * We have to generate ser1 first, because Linux takes the first

     * device it finds in the dt as serial output device. And we generate

     * devices in reverse order to the dt.

     */</comment>

    <expr_stmt pos:start="321:5" pos:end="323:63"><expr pos:start="321:5" pos:end="323:62"><call pos:start="321:5" pos:end="323:62"><name pos:start="321:5" pos:end="321:12">snprintf</name><argument_list pos:start="321:13" pos:end="323:62">(<argument pos:start="321:14" pos:end="321:17"><expr pos:start="321:14" pos:end="321:17"><name pos:start="321:14" pos:end="321:17">ser1</name></expr></argument>, <argument pos:start="321:20" pos:end="321:31"><expr pos:start="321:20" pos:end="321:31"><sizeof pos:start="321:20" pos:end="321:31">sizeof<argument_list pos:start="321:26" pos:end="321:31">(<argument pos:start="321:27" pos:end="321:30"><expr pos:start="321:27" pos:end="321:30"><name pos:start="321:27" pos:end="321:30">ser1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="321:34" pos:end="321:47"><expr pos:start="321:34" pos:end="321:47"><literal type="string" pos:start="321:34" pos:end="321:47">"%s/serial@%x"</literal></expr></argument>, <argument pos:start="321:50" pos:end="321:52"><expr pos:start="321:50" pos:end="321:52"><name pos:start="321:50" pos:end="321:52">soc</name></expr></argument>,

             <argument pos:start="323:14" pos:end="323:61"><expr pos:start="323:14" pos:end="323:61"><name pos:start="323:14" pos:end="323:38">MPC8544_SERIAL1_REGS_BASE</name> <operator pos:start="323:40" pos:end="323:40">-</operator> <name pos:start="323:42" pos:end="323:61">MPC8544_CCSRBAR_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:40"><expr pos:start="325:5" pos:end="325:39"><call pos:start="325:5" pos:end="325:39"><name pos:start="325:5" pos:end="325:28">qemu_devtree_add_subnode</name><argument_list pos:start="325:29" pos:end="325:39">(<argument pos:start="325:30" pos:end="325:32"><expr pos:start="325:30" pos:end="325:32"><name pos:start="325:30" pos:end="325:32">fdt</name></expr></argument>, <argument pos:start="325:35" pos:end="325:38"><expr pos:start="325:35" pos:end="325:38"><name pos:start="325:35" pos:end="325:38">ser1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:68"><expr pos:start="327:5" pos:end="327:67"><call pos:start="327:5" pos:end="327:67"><name pos:start="327:5" pos:end="327:31">qemu_devtree_setprop_string</name><argument_list pos:start="327:32" pos:end="327:67">(<argument pos:start="327:33" pos:end="327:35"><expr pos:start="327:33" pos:end="327:35"><name pos:start="327:33" pos:end="327:35">fdt</name></expr></argument>, <argument pos:start="327:38" pos:end="327:41"><expr pos:start="327:38" pos:end="327:41"><name pos:start="327:38" pos:end="327:41">ser1</name></expr></argument>, <argument pos:start="327:44" pos:end="327:56"><expr pos:start="327:44" pos:end="327:56"><literal type="string" pos:start="327:44" pos:end="327:56">"device_type"</literal></expr></argument>, <argument pos:start="327:59" pos:end="327:66"><expr pos:start="327:59" pos:end="327:66"><literal type="string" pos:start="327:59" pos:end="327:66">"serial"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="329:5" pos:end="329:68"><expr pos:start="329:5" pos:end="329:67"><call pos:start="329:5" pos:end="329:67"><name pos:start="329:5" pos:end="329:31">qemu_devtree_setprop_string</name><argument_list pos:start="329:32" pos:end="329:67">(<argument pos:start="329:33" pos:end="329:35"><expr pos:start="329:33" pos:end="329:35"><name pos:start="329:33" pos:end="329:35">fdt</name></expr></argument>, <argument pos:start="329:38" pos:end="329:41"><expr pos:start="329:38" pos:end="329:41"><name pos:start="329:38" pos:end="329:41">ser1</name></expr></argument>, <argument pos:start="329:44" pos:end="329:55"><expr pos:start="329:44" pos:end="329:55"><literal type="string" pos:start="329:44" pos:end="329:55">"compatible"</literal></expr></argument>, <argument pos:start="329:58" pos:end="329:66"><expr pos:start="329:58" pos:end="329:66"><literal type="string" pos:start="329:58" pos:end="329:66">"ns16550"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="333:60"><expr pos:start="331:5" pos:end="333:59"><call pos:start="331:5" pos:end="333:59"><name pos:start="331:5" pos:end="331:30">qemu_devtree_setprop_cells</name><argument_list pos:start="331:31" pos:end="333:59">(<argument pos:start="331:32" pos:end="331:34"><expr pos:start="331:32" pos:end="331:34"><name pos:start="331:32" pos:end="331:34">fdt</name></expr></argument>, <argument pos:start="331:37" pos:end="331:40"><expr pos:start="331:37" pos:end="331:40"><name pos:start="331:37" pos:end="331:40">ser1</name></expr></argument>, <argument pos:start="331:43" pos:end="331:47"><expr pos:start="331:43" pos:end="331:47"><literal type="string" pos:start="331:43" pos:end="331:47">"reg"</literal></expr></argument>, <argument pos:start="331:50" pos:end="333:51"><expr pos:start="331:50" pos:end="333:51"><name pos:start="331:50" pos:end="331:74">MPC8544_SERIAL1_REGS_BASE</name> <operator pos:start="331:76" pos:end="331:76">-</operator>

                               <name pos:start="333:32" pos:end="333:51">MPC8544_CCSRBAR_BASE</name></expr></argument>, <argument pos:start="333:54" pos:end="333:58"><expr pos:start="333:54" pos:end="333:58"><literal type="number" pos:start="333:54" pos:end="333:58">0x100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:58"><expr pos:start="335:5" pos:end="335:57"><call pos:start="335:5" pos:end="335:57"><name pos:start="335:5" pos:end="335:29">qemu_devtree_setprop_cell</name><argument_list pos:start="335:30" pos:end="335:57">(<argument pos:start="335:31" pos:end="335:33"><expr pos:start="335:31" pos:end="335:33"><name pos:start="335:31" pos:end="335:33">fdt</name></expr></argument>, <argument pos:start="335:36" pos:end="335:39"><expr pos:start="335:36" pos:end="335:39"><name pos:start="335:36" pos:end="335:39">ser1</name></expr></argument>, <argument pos:start="335:42" pos:end="335:53"><expr pos:start="335:42" pos:end="335:53"><literal type="string" pos:start="335:42" pos:end="335:53">"cell-index"</literal></expr></argument>, <argument pos:start="335:56" pos:end="335:56"><expr pos:start="335:56" pos:end="335:56"><literal type="number" pos:start="335:56" pos:end="335:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="337:63"><expr pos:start="337:5" pos:end="337:62"><call pos:start="337:5" pos:end="337:62"><name pos:start="337:5" pos:end="337:29">qemu_devtree_setprop_cell</name><argument_list pos:start="337:30" pos:end="337:62">(<argument pos:start="337:31" pos:end="337:33"><expr pos:start="337:31" pos:end="337:33"><name pos:start="337:31" pos:end="337:33">fdt</name></expr></argument>, <argument pos:start="337:36" pos:end="337:39"><expr pos:start="337:36" pos:end="337:39"><name pos:start="337:36" pos:end="337:39">ser1</name></expr></argument>, <argument pos:start="337:42" pos:end="337:58"><expr pos:start="337:42" pos:end="337:58"><literal type="string" pos:start="337:42" pos:end="337:58">"clock-frequency"</literal></expr></argument>, <argument pos:start="337:61" pos:end="337:61"><expr pos:start="337:61" pos:end="337:61"><literal type="number" pos:start="337:61" pos:end="337:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="339:5" pos:end="339:63"><expr pos:start="339:5" pos:end="339:62"><call pos:start="339:5" pos:end="339:62"><name pos:start="339:5" pos:end="339:30">qemu_devtree_setprop_cells</name><argument_list pos:start="339:31" pos:end="339:62">(<argument pos:start="339:32" pos:end="339:34"><expr pos:start="339:32" pos:end="339:34"><name pos:start="339:32" pos:end="339:34">fdt</name></expr></argument>, <argument pos:start="339:37" pos:end="339:40"><expr pos:start="339:37" pos:end="339:40"><name pos:start="339:37" pos:end="339:40">ser1</name></expr></argument>, <argument pos:start="339:43" pos:end="339:54"><expr pos:start="339:43" pos:end="339:54"><literal type="string" pos:start="339:43" pos:end="339:54">"interrupts"</literal></expr></argument>, <argument pos:start="339:57" pos:end="339:58"><expr pos:start="339:57" pos:end="339:58"><literal type="number" pos:start="339:57" pos:end="339:58">42</literal></expr></argument>, <argument pos:start="339:61" pos:end="339:61"><expr pos:start="339:61" pos:end="339:61"><literal type="number" pos:start="339:61" pos:end="339:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="341:5" pos:end="341:70"><expr pos:start="341:5" pos:end="341:69"><call pos:start="341:5" pos:end="341:69"><name pos:start="341:5" pos:end="341:32">qemu_devtree_setprop_phandle</name><argument_list pos:start="341:33" pos:end="341:69">(<argument pos:start="341:34" pos:end="341:36"><expr pos:start="341:34" pos:end="341:36"><name pos:start="341:34" pos:end="341:36">fdt</name></expr></argument>, <argument pos:start="341:39" pos:end="341:42"><expr pos:start="341:39" pos:end="341:42"><name pos:start="341:39" pos:end="341:42">ser1</name></expr></argument>, <argument pos:start="341:45" pos:end="341:62"><expr pos:start="341:45" pos:end="341:62"><literal type="string" pos:start="341:45" pos:end="341:62">"interrupt-parent"</literal></expr></argument>, <argument pos:start="341:65" pos:end="341:68"><expr pos:start="341:65" pos:end="341:68"><name pos:start="341:65" pos:end="341:68">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:66"><expr pos:start="343:5" pos:end="343:65"><call pos:start="343:5" pos:end="343:65"><name pos:start="343:5" pos:end="343:31">qemu_devtree_setprop_string</name><argument_list pos:start="343:32" pos:end="343:65">(<argument pos:start="343:33" pos:end="343:35"><expr pos:start="343:33" pos:end="343:35"><name pos:start="343:33" pos:end="343:35">fdt</name></expr></argument>, <argument pos:start="343:38" pos:end="343:47"><expr pos:start="343:38" pos:end="343:47"><literal type="string" pos:start="343:38" pos:end="343:47">"/aliases"</literal></expr></argument>, <argument pos:start="343:50" pos:end="343:58"><expr pos:start="343:50" pos:end="343:58"><literal type="string" pos:start="343:50" pos:end="343:58">"serial1"</literal></expr></argument>, <argument pos:start="343:61" pos:end="343:64"><expr pos:start="343:61" pos:end="343:64"><name pos:start="343:61" pos:end="343:64">ser1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="347:5" pos:end="349:63"><expr pos:start="347:5" pos:end="349:62"><call pos:start="347:5" pos:end="349:62"><name pos:start="347:5" pos:end="347:12">snprintf</name><argument_list pos:start="347:13" pos:end="349:62">(<argument pos:start="347:14" pos:end="347:17"><expr pos:start="347:14" pos:end="347:17"><name pos:start="347:14" pos:end="347:17">ser0</name></expr></argument>, <argument pos:start="347:20" pos:end="347:31"><expr pos:start="347:20" pos:end="347:31"><sizeof pos:start="347:20" pos:end="347:31">sizeof<argument_list pos:start="347:26" pos:end="347:31">(<argument pos:start="347:27" pos:end="347:30"><expr pos:start="347:27" pos:end="347:30"><name pos:start="347:27" pos:end="347:30">ser0</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="347:34" pos:end="347:47"><expr pos:start="347:34" pos:end="347:47"><literal type="string" pos:start="347:34" pos:end="347:47">"%s/serial@%x"</literal></expr></argument>, <argument pos:start="347:50" pos:end="347:52"><expr pos:start="347:50" pos:end="347:52"><name pos:start="347:50" pos:end="347:52">soc</name></expr></argument>,

             <argument pos:start="349:14" pos:end="349:61"><expr pos:start="349:14" pos:end="349:61"><name pos:start="349:14" pos:end="349:38">MPC8544_SERIAL0_REGS_BASE</name> <operator pos:start="349:40" pos:end="349:40">-</operator> <name pos:start="349:42" pos:end="349:61">MPC8544_CCSRBAR_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="351:5" pos:end="351:40"><expr pos:start="351:5" pos:end="351:39"><call pos:start="351:5" pos:end="351:39"><name pos:start="351:5" pos:end="351:28">qemu_devtree_add_subnode</name><argument_list pos:start="351:29" pos:end="351:39">(<argument pos:start="351:30" pos:end="351:32"><expr pos:start="351:30" pos:end="351:32"><name pos:start="351:30" pos:end="351:32">fdt</name></expr></argument>, <argument pos:start="351:35" pos:end="351:38"><expr pos:start="351:35" pos:end="351:38"><name pos:start="351:35" pos:end="351:38">ser0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="353:5" pos:end="353:68"><expr pos:start="353:5" pos:end="353:67"><call pos:start="353:5" pos:end="353:67"><name pos:start="353:5" pos:end="353:31">qemu_devtree_setprop_string</name><argument_list pos:start="353:32" pos:end="353:67">(<argument pos:start="353:33" pos:end="353:35"><expr pos:start="353:33" pos:end="353:35"><name pos:start="353:33" pos:end="353:35">fdt</name></expr></argument>, <argument pos:start="353:38" pos:end="353:41"><expr pos:start="353:38" pos:end="353:41"><name pos:start="353:38" pos:end="353:41">ser0</name></expr></argument>, <argument pos:start="353:44" pos:end="353:56"><expr pos:start="353:44" pos:end="353:56"><literal type="string" pos:start="353:44" pos:end="353:56">"device_type"</literal></expr></argument>, <argument pos:start="353:59" pos:end="353:66"><expr pos:start="353:59" pos:end="353:66"><literal type="string" pos:start="353:59" pos:end="353:66">"serial"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="355:5" pos:end="355:68"><expr pos:start="355:5" pos:end="355:67"><call pos:start="355:5" pos:end="355:67"><name pos:start="355:5" pos:end="355:31">qemu_devtree_setprop_string</name><argument_list pos:start="355:32" pos:end="355:67">(<argument pos:start="355:33" pos:end="355:35"><expr pos:start="355:33" pos:end="355:35"><name pos:start="355:33" pos:end="355:35">fdt</name></expr></argument>, <argument pos:start="355:38" pos:end="355:41"><expr pos:start="355:38" pos:end="355:41"><name pos:start="355:38" pos:end="355:41">ser0</name></expr></argument>, <argument pos:start="355:44" pos:end="355:55"><expr pos:start="355:44" pos:end="355:55"><literal type="string" pos:start="355:44" pos:end="355:55">"compatible"</literal></expr></argument>, <argument pos:start="355:58" pos:end="355:66"><expr pos:start="355:58" pos:end="355:66"><literal type="string" pos:start="355:58" pos:end="355:66">"ns16550"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="357:5" pos:end="359:60"><expr pos:start="357:5" pos:end="359:59"><call pos:start="357:5" pos:end="359:59"><name pos:start="357:5" pos:end="357:30">qemu_devtree_setprop_cells</name><argument_list pos:start="357:31" pos:end="359:59">(<argument pos:start="357:32" pos:end="357:34"><expr pos:start="357:32" pos:end="357:34"><name pos:start="357:32" pos:end="357:34">fdt</name></expr></argument>, <argument pos:start="357:37" pos:end="357:40"><expr pos:start="357:37" pos:end="357:40"><name pos:start="357:37" pos:end="357:40">ser0</name></expr></argument>, <argument pos:start="357:43" pos:end="357:47"><expr pos:start="357:43" pos:end="357:47"><literal type="string" pos:start="357:43" pos:end="357:47">"reg"</literal></expr></argument>, <argument pos:start="357:50" pos:end="359:51"><expr pos:start="357:50" pos:end="359:51"><name pos:start="357:50" pos:end="357:74">MPC8544_SERIAL0_REGS_BASE</name> <operator pos:start="357:76" pos:end="357:76">-</operator>

                               <name pos:start="359:32" pos:end="359:51">MPC8544_CCSRBAR_BASE</name></expr></argument>, <argument pos:start="359:54" pos:end="359:58"><expr pos:start="359:54" pos:end="359:58"><literal type="number" pos:start="359:54" pos:end="359:58">0x100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="361:5" pos:end="361:58"><expr pos:start="361:5" pos:end="361:57"><call pos:start="361:5" pos:end="361:57"><name pos:start="361:5" pos:end="361:29">qemu_devtree_setprop_cell</name><argument_list pos:start="361:30" pos:end="361:57">(<argument pos:start="361:31" pos:end="361:33"><expr pos:start="361:31" pos:end="361:33"><name pos:start="361:31" pos:end="361:33">fdt</name></expr></argument>, <argument pos:start="361:36" pos:end="361:39"><expr pos:start="361:36" pos:end="361:39"><name pos:start="361:36" pos:end="361:39">ser0</name></expr></argument>, <argument pos:start="361:42" pos:end="361:53"><expr pos:start="361:42" pos:end="361:53"><literal type="string" pos:start="361:42" pos:end="361:53">"cell-index"</literal></expr></argument>, <argument pos:start="361:56" pos:end="361:56"><expr pos:start="361:56" pos:end="361:56"><literal type="number" pos:start="361:56" pos:end="361:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="363:5" pos:end="363:63"><expr pos:start="363:5" pos:end="363:62"><call pos:start="363:5" pos:end="363:62"><name pos:start="363:5" pos:end="363:29">qemu_devtree_setprop_cell</name><argument_list pos:start="363:30" pos:end="363:62">(<argument pos:start="363:31" pos:end="363:33"><expr pos:start="363:31" pos:end="363:33"><name pos:start="363:31" pos:end="363:33">fdt</name></expr></argument>, <argument pos:start="363:36" pos:end="363:39"><expr pos:start="363:36" pos:end="363:39"><name pos:start="363:36" pos:end="363:39">ser0</name></expr></argument>, <argument pos:start="363:42" pos:end="363:58"><expr pos:start="363:42" pos:end="363:58"><literal type="string" pos:start="363:42" pos:end="363:58">"clock-frequency"</literal></expr></argument>, <argument pos:start="363:61" pos:end="363:61"><expr pos:start="363:61" pos:end="363:61"><literal type="number" pos:start="363:61" pos:end="363:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="365:5" pos:end="365:63"><expr pos:start="365:5" pos:end="365:62"><call pos:start="365:5" pos:end="365:62"><name pos:start="365:5" pos:end="365:30">qemu_devtree_setprop_cells</name><argument_list pos:start="365:31" pos:end="365:62">(<argument pos:start="365:32" pos:end="365:34"><expr pos:start="365:32" pos:end="365:34"><name pos:start="365:32" pos:end="365:34">fdt</name></expr></argument>, <argument pos:start="365:37" pos:end="365:40"><expr pos:start="365:37" pos:end="365:40"><name pos:start="365:37" pos:end="365:40">ser0</name></expr></argument>, <argument pos:start="365:43" pos:end="365:54"><expr pos:start="365:43" pos:end="365:54"><literal type="string" pos:start="365:43" pos:end="365:54">"interrupts"</literal></expr></argument>, <argument pos:start="365:57" pos:end="365:58"><expr pos:start="365:57" pos:end="365:58"><literal type="number" pos:start="365:57" pos:end="365:58">42</literal></expr></argument>, <argument pos:start="365:61" pos:end="365:61"><expr pos:start="365:61" pos:end="365:61"><literal type="number" pos:start="365:61" pos:end="365:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="367:5" pos:end="367:70"><expr pos:start="367:5" pos:end="367:69"><call pos:start="367:5" pos:end="367:69"><name pos:start="367:5" pos:end="367:32">qemu_devtree_setprop_phandle</name><argument_list pos:start="367:33" pos:end="367:69">(<argument pos:start="367:34" pos:end="367:36"><expr pos:start="367:34" pos:end="367:36"><name pos:start="367:34" pos:end="367:36">fdt</name></expr></argument>, <argument pos:start="367:39" pos:end="367:42"><expr pos:start="367:39" pos:end="367:42"><name pos:start="367:39" pos:end="367:42">ser0</name></expr></argument>, <argument pos:start="367:45" pos:end="367:62"><expr pos:start="367:45" pos:end="367:62"><literal type="string" pos:start="367:45" pos:end="367:62">"interrupt-parent"</literal></expr></argument>, <argument pos:start="367:65" pos:end="367:68"><expr pos:start="367:65" pos:end="367:68"><name pos:start="367:65" pos:end="367:68">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="369:5" pos:end="369:66"><expr pos:start="369:5" pos:end="369:65"><call pos:start="369:5" pos:end="369:65"><name pos:start="369:5" pos:end="369:31">qemu_devtree_setprop_string</name><argument_list pos:start="369:32" pos:end="369:65">(<argument pos:start="369:33" pos:end="369:35"><expr pos:start="369:33" pos:end="369:35"><name pos:start="369:33" pos:end="369:35">fdt</name></expr></argument>, <argument pos:start="369:38" pos:end="369:47"><expr pos:start="369:38" pos:end="369:47"><literal type="string" pos:start="369:38" pos:end="369:47">"/aliases"</literal></expr></argument>, <argument pos:start="369:50" pos:end="369:58"><expr pos:start="369:50" pos:end="369:58"><literal type="string" pos:start="369:50" pos:end="369:58">"serial0"</literal></expr></argument>, <argument pos:start="369:61" pos:end="369:64"><expr pos:start="369:61" pos:end="369:64"><name pos:start="369:61" pos:end="369:64">ser0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="371:5" pos:end="371:75"><expr pos:start="371:5" pos:end="371:74"><call pos:start="371:5" pos:end="371:74"><name pos:start="371:5" pos:end="371:31">qemu_devtree_setprop_string</name><argument_list pos:start="371:32" pos:end="371:74">(<argument pos:start="371:33" pos:end="371:35"><expr pos:start="371:33" pos:end="371:35"><name pos:start="371:33" pos:end="371:35">fdt</name></expr></argument>, <argument pos:start="371:38" pos:end="371:46"><expr pos:start="371:38" pos:end="371:46"><literal type="string" pos:start="371:38" pos:end="371:46">"/chosen"</literal></expr></argument>, <argument pos:start="371:49" pos:end="371:67"><expr pos:start="371:49" pos:end="371:67"><literal type="string" pos:start="371:49" pos:end="371:67">"linux,stdout-path"</literal></expr></argument>, <argument pos:start="371:70" pos:end="371:73"><expr pos:start="371:70" pos:end="371:73"><name pos:start="371:70" pos:end="371:73">ser0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="375:5" pos:end="377:55"><expr pos:start="375:5" pos:end="377:54"><call pos:start="375:5" pos:end="377:54"><name pos:start="375:5" pos:end="375:12">snprintf</name><argument_list pos:start="375:13" pos:end="377:54">(<argument pos:start="375:14" pos:end="375:18"><expr pos:start="375:14" pos:end="375:18"><name pos:start="375:14" pos:end="375:18">gutil</name></expr></argument>, <argument pos:start="375:21" pos:end="375:33"><expr pos:start="375:21" pos:end="375:33"><sizeof pos:start="375:21" pos:end="375:33">sizeof<argument_list pos:start="375:27" pos:end="375:33">(<argument pos:start="375:28" pos:end="375:32"><expr pos:start="375:28" pos:end="375:32"><name pos:start="375:28" pos:end="375:32">gutil</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="375:36" pos:end="375:59"><expr pos:start="375:36" pos:end="375:59"><literal type="string" pos:start="375:36" pos:end="375:59">"%s/global-utilities@%x"</literal></expr></argument>, <argument pos:start="375:62" pos:end="375:64"><expr pos:start="375:62" pos:end="375:64"><name pos:start="375:62" pos:end="375:64">soc</name></expr></argument>,

             <argument pos:start="377:14" pos:end="377:53"><expr pos:start="377:14" pos:end="377:53"><name pos:start="377:14" pos:end="377:30">MPC8544_UTIL_BASE</name> <operator pos:start="377:32" pos:end="377:32">-</operator> <name pos:start="377:34" pos:end="377:53">MPC8544_CCSRBAR_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="379:5" pos:end="379:41"><expr pos:start="379:5" pos:end="379:40"><call pos:start="379:5" pos:end="379:40"><name pos:start="379:5" pos:end="379:28">qemu_devtree_add_subnode</name><argument_list pos:start="379:29" pos:end="379:40">(<argument pos:start="379:30" pos:end="379:32"><expr pos:start="379:30" pos:end="379:32"><name pos:start="379:30" pos:end="379:32">fdt</name></expr></argument>, <argument pos:start="379:35" pos:end="379:39"><expr pos:start="379:35" pos:end="379:39"><name pos:start="379:35" pos:end="379:39">gutil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="381:5" pos:end="381:78"><expr pos:start="381:5" pos:end="381:77"><call pos:start="381:5" pos:end="381:77"><name pos:start="381:5" pos:end="381:31">qemu_devtree_setprop_string</name><argument_list pos:start="381:32" pos:end="381:77">(<argument pos:start="381:33" pos:end="381:35"><expr pos:start="381:33" pos:end="381:35"><name pos:start="381:33" pos:end="381:35">fdt</name></expr></argument>, <argument pos:start="381:38" pos:end="381:42"><expr pos:start="381:38" pos:end="381:42"><name pos:start="381:38" pos:end="381:42">gutil</name></expr></argument>, <argument pos:start="381:45" pos:end="381:56"><expr pos:start="381:45" pos:end="381:56"><literal type="string" pos:start="381:45" pos:end="381:56">"compatible"</literal></expr></argument>, <argument pos:start="381:59" pos:end="381:76"><expr pos:start="381:59" pos:end="381:76"><literal type="string" pos:start="381:59" pos:end="381:76">"fsl,mpc8544-guts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="383:5" pos:end="385:61"><expr pos:start="383:5" pos:end="385:60"><call pos:start="383:5" pos:end="385:60"><name pos:start="383:5" pos:end="383:30">qemu_devtree_setprop_cells</name><argument_list pos:start="383:31" pos:end="385:60">(<argument pos:start="383:32" pos:end="383:34"><expr pos:start="383:32" pos:end="383:34"><name pos:start="383:32" pos:end="383:34">fdt</name></expr></argument>, <argument pos:start="383:37" pos:end="383:41"><expr pos:start="383:37" pos:end="383:41"><name pos:start="383:37" pos:end="383:41">gutil</name></expr></argument>, <argument pos:start="383:44" pos:end="383:48"><expr pos:start="383:44" pos:end="383:48"><literal type="string" pos:start="383:44" pos:end="383:48">"reg"</literal></expr></argument>, <argument pos:start="383:51" pos:end="385:51"><expr pos:start="383:51" pos:end="385:51"><name pos:start="383:51" pos:end="383:67">MPC8544_UTIL_BASE</name> <operator pos:start="383:69" pos:end="383:69">-</operator>

                               <name pos:start="385:32" pos:end="385:51">MPC8544_CCSRBAR_BASE</name></expr></argument>, <argument pos:start="385:54" pos:end="385:59"><expr pos:start="385:54" pos:end="385:59"><literal type="number" pos:start="385:54" pos:end="385:59">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="387:5" pos:end="387:63"><expr pos:start="387:5" pos:end="387:62"><call pos:start="387:5" pos:end="387:62"><name pos:start="387:5" pos:end="387:24">qemu_devtree_setprop</name><argument_list pos:start="387:25" pos:end="387:62">(<argument pos:start="387:26" pos:end="387:28"><expr pos:start="387:26" pos:end="387:28"><name pos:start="387:26" pos:end="387:28">fdt</name></expr></argument>, <argument pos:start="387:31" pos:end="387:35"><expr pos:start="387:31" pos:end="387:35"><name pos:start="387:31" pos:end="387:35">gutil</name></expr></argument>, <argument pos:start="387:38" pos:end="387:52"><expr pos:start="387:38" pos:end="387:52"><literal type="string" pos:start="387:38" pos:end="387:52">"fsl,has-rstcr"</literal></expr></argument>, <argument pos:start="387:55" pos:end="387:58"><expr pos:start="387:55" pos:end="387:58"><name pos:start="387:55" pos:end="387:58">NULL</name></expr></argument>, <argument pos:start="387:61" pos:end="387:61"><expr pos:start="387:61" pos:end="387:61"><literal type="number" pos:start="387:61" pos:end="387:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="391:5" pos:end="391:65"><expr pos:start="391:5" pos:end="391:64"><call pos:start="391:5" pos:end="391:64"><name pos:start="391:5" pos:end="391:12">snprintf</name><argument_list pos:start="391:13" pos:end="391:64">(<argument pos:start="391:14" pos:end="391:16"><expr pos:start="391:14" pos:end="391:16"><name pos:start="391:14" pos:end="391:16">pci</name></expr></argument>, <argument pos:start="391:19" pos:end="391:29"><expr pos:start="391:19" pos:end="391:29"><sizeof pos:start="391:19" pos:end="391:29">sizeof<argument_list pos:start="391:25" pos:end="391:29">(<argument pos:start="391:26" pos:end="391:28"><expr pos:start="391:26" pos:end="391:28"><name pos:start="391:26" pos:end="391:28">pci</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="391:32" pos:end="391:40"><expr pos:start="391:32" pos:end="391:40"><literal type="string" pos:start="391:32" pos:end="391:40">"/pci@%x"</literal></expr></argument>, <argument pos:start="391:43" pos:end="391:63"><expr pos:start="391:43" pos:end="391:63"><name pos:start="391:43" pos:end="391:63">MPC8544_PCI_REGS_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="393:5" pos:end="393:39"><expr pos:start="393:5" pos:end="393:38"><call pos:start="393:5" pos:end="393:38"><name pos:start="393:5" pos:end="393:28">qemu_devtree_add_subnode</name><argument_list pos:start="393:29" pos:end="393:38">(<argument pos:start="393:30" pos:end="393:32"><expr pos:start="393:30" pos:end="393:32"><name pos:start="393:30" pos:end="393:32">fdt</name></expr></argument>, <argument pos:start="393:35" pos:end="393:37"><expr pos:start="393:35" pos:end="393:37"><name pos:start="393:35" pos:end="393:37">pci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="395:5" pos:end="395:57"><expr pos:start="395:5" pos:end="395:56"><call pos:start="395:5" pos:end="395:56"><name pos:start="395:5" pos:end="395:29">qemu_devtree_setprop_cell</name><argument_list pos:start="395:30" pos:end="395:56">(<argument pos:start="395:31" pos:end="395:33"><expr pos:start="395:31" pos:end="395:33"><name pos:start="395:31" pos:end="395:33">fdt</name></expr></argument>, <argument pos:start="395:36" pos:end="395:38"><expr pos:start="395:36" pos:end="395:38"><name pos:start="395:36" pos:end="395:38">pci</name></expr></argument>, <argument pos:start="395:41" pos:end="395:52"><expr pos:start="395:41" pos:end="395:52"><literal type="string" pos:start="395:41" pos:end="395:52">"cell-index"</literal></expr></argument>, <argument pos:start="395:55" pos:end="395:55"><expr pos:start="395:55" pos:end="395:55"><literal type="number" pos:start="395:55" pos:end="395:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="397:5" pos:end="397:75"><expr pos:start="397:5" pos:end="397:74"><call pos:start="397:5" pos:end="397:74"><name pos:start="397:5" pos:end="397:31">qemu_devtree_setprop_string</name><argument_list pos:start="397:32" pos:end="397:74">(<argument pos:start="397:33" pos:end="397:35"><expr pos:start="397:33" pos:end="397:35"><name pos:start="397:33" pos:end="397:35">fdt</name></expr></argument>, <argument pos:start="397:38" pos:end="397:40"><expr pos:start="397:38" pos:end="397:40"><name pos:start="397:38" pos:end="397:40">pci</name></expr></argument>, <argument pos:start="397:43" pos:end="397:54"><expr pos:start="397:43" pos:end="397:54"><literal type="string" pos:start="397:43" pos:end="397:54">"compatible"</literal></expr></argument>, <argument pos:start="397:57" pos:end="397:73"><expr pos:start="397:57" pos:end="397:73"><literal type="string" pos:start="397:57" pos:end="397:73">"fsl,mpc8540-pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="399:5" pos:end="399:64"><expr pos:start="399:5" pos:end="399:63"><call pos:start="399:5" pos:end="399:63"><name pos:start="399:5" pos:end="399:31">qemu_devtree_setprop_string</name><argument_list pos:start="399:32" pos:end="399:63">(<argument pos:start="399:33" pos:end="399:35"><expr pos:start="399:33" pos:end="399:35"><name pos:start="399:33" pos:end="399:35">fdt</name></expr></argument>, <argument pos:start="399:38" pos:end="399:40"><expr pos:start="399:38" pos:end="399:40"><name pos:start="399:38" pos:end="399:40">pci</name></expr></argument>, <argument pos:start="399:43" pos:end="399:55"><expr pos:start="399:43" pos:end="399:55"><literal type="string" pos:start="399:43" pos:end="399:55">"device_type"</literal></expr></argument>, <argument pos:start="399:58" pos:end="399:62"><expr pos:start="399:58" pos:end="399:62"><literal type="string" pos:start="399:58" pos:end="399:62">"pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="401:5" pos:end="403:41"><expr pos:start="401:5" pos:end="403:40"><call pos:start="401:5" pos:end="403:40"><name pos:start="401:5" pos:end="401:30">qemu_devtree_setprop_cells</name><argument_list pos:start="401:31" pos:end="403:40">(<argument pos:start="401:32" pos:end="401:34"><expr pos:start="401:32" pos:end="401:34"><name pos:start="401:32" pos:end="401:34">fdt</name></expr></argument>, <argument pos:start="401:37" pos:end="401:39"><expr pos:start="401:37" pos:end="401:39"><name pos:start="401:37" pos:end="401:39">pci</name></expr></argument>, <argument pos:start="401:42" pos:end="401:61"><expr pos:start="401:42" pos:end="401:61"><literal type="string" pos:start="401:42" pos:end="401:61">"interrupt-map-mask"</literal></expr></argument>, <argument pos:start="401:64" pos:end="401:69"><expr pos:start="401:64" pos:end="401:69"><literal type="number" pos:start="401:64" pos:end="401:69">0xf800</literal></expr></argument>, <argument pos:start="401:72" pos:end="401:74"><expr pos:start="401:72" pos:end="401:74"><literal type="number" pos:start="401:72" pos:end="401:74">0x0</literal></expr></argument>,

                               <argument pos:start="403:32" pos:end="403:34"><expr pos:start="403:32" pos:end="403:34"><literal type="number" pos:start="403:32" pos:end="403:34">0x0</literal></expr></argument>, <argument pos:start="403:37" pos:end="403:39"><expr pos:start="403:37" pos:end="403:39"><literal type="number" pos:start="403:37" pos:end="403:39">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="405:5" pos:end="405:70"><expr pos:start="405:5" pos:end="405:69"><call pos:start="405:5" pos:end="405:69"><name pos:start="405:5" pos:end="405:18">pci_map_create</name><argument_list pos:start="405:19" pos:end="405:69">(<argument pos:start="405:20" pos:end="405:22"><expr pos:start="405:20" pos:end="405:22"><name pos:start="405:20" pos:end="405:22">fdt</name></expr></argument>, <argument pos:start="405:25" pos:end="405:31"><expr pos:start="405:25" pos:end="405:31"><name pos:start="405:25" pos:end="405:31">pci_map</name></expr></argument>, <argument pos:start="405:34" pos:end="405:68"><expr pos:start="405:34" pos:end="405:68"><call pos:start="405:34" pos:end="405:68"><name pos:start="405:34" pos:end="405:57">qemu_devtree_get_phandle</name><argument_list pos:start="405:58" pos:end="405:68">(<argument pos:start="405:59" pos:end="405:61"><expr pos:start="405:59" pos:end="405:61"><name pos:start="405:59" pos:end="405:61">fdt</name></expr></argument>, <argument pos:start="405:64" pos:end="405:67"><expr pos:start="405:64" pos:end="405:67"><name pos:start="405:64" pos:end="405:67">mpic</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="407:5" pos:end="407:78"><expr pos:start="407:5" pos:end="407:77"><call pos:start="407:5" pos:end="407:77"><name pos:start="407:5" pos:end="407:24">qemu_devtree_setprop</name><argument_list pos:start="407:25" pos:end="407:77">(<argument pos:start="407:26" pos:end="407:28"><expr pos:start="407:26" pos:end="407:28"><name pos:start="407:26" pos:end="407:28">fdt</name></expr></argument>, <argument pos:start="407:31" pos:end="407:33"><expr pos:start="407:31" pos:end="407:33"><name pos:start="407:31" pos:end="407:33">pci</name></expr></argument>, <argument pos:start="407:36" pos:end="407:50"><expr pos:start="407:36" pos:end="407:50"><literal type="string" pos:start="407:36" pos:end="407:50">"interrupt-map"</literal></expr></argument>, <argument pos:start="407:53" pos:end="407:59"><expr pos:start="407:53" pos:end="407:59"><name pos:start="407:53" pos:end="407:59">pci_map</name></expr></argument>, <argument pos:start="407:62" pos:end="407:76"><expr pos:start="407:62" pos:end="407:76"><sizeof pos:start="407:62" pos:end="407:76">sizeof<argument_list pos:start="407:68" pos:end="407:76">(<argument pos:start="407:69" pos:end="407:75"><expr pos:start="407:69" pos:end="407:75"><name pos:start="407:69" pos:end="407:75">pci_map</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="409:5" pos:end="409:69"><expr pos:start="409:5" pos:end="409:68"><call pos:start="409:5" pos:end="409:68"><name pos:start="409:5" pos:end="409:32">qemu_devtree_setprop_phandle</name><argument_list pos:start="409:33" pos:end="409:68">(<argument pos:start="409:34" pos:end="409:36"><expr pos:start="409:34" pos:end="409:36"><name pos:start="409:34" pos:end="409:36">fdt</name></expr></argument>, <argument pos:start="409:39" pos:end="409:41"><expr pos:start="409:39" pos:end="409:41"><name pos:start="409:39" pos:end="409:41">pci</name></expr></argument>, <argument pos:start="409:44" pos:end="409:61"><expr pos:start="409:44" pos:end="409:61"><literal type="string" pos:start="409:44" pos:end="409:61">"interrupt-parent"</literal></expr></argument>, <argument pos:start="409:64" pos:end="409:67"><expr pos:start="409:64" pos:end="409:67"><name pos:start="409:64" pos:end="409:67">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="411:5" pos:end="411:62"><expr pos:start="411:5" pos:end="411:61"><call pos:start="411:5" pos:end="411:61"><name pos:start="411:5" pos:end="411:30">qemu_devtree_setprop_cells</name><argument_list pos:start="411:31" pos:end="411:61">(<argument pos:start="411:32" pos:end="411:34"><expr pos:start="411:32" pos:end="411:34"><name pos:start="411:32" pos:end="411:34">fdt</name></expr></argument>, <argument pos:start="411:37" pos:end="411:39"><expr pos:start="411:37" pos:end="411:39"><name pos:start="411:37" pos:end="411:39">pci</name></expr></argument>, <argument pos:start="411:42" pos:end="411:53"><expr pos:start="411:42" pos:end="411:53"><literal type="string" pos:start="411:42" pos:end="411:53">"interrupts"</literal></expr></argument>, <argument pos:start="411:56" pos:end="411:57"><expr pos:start="411:56" pos:end="411:57"><literal type="number" pos:start="411:56" pos:end="411:57">24</literal></expr></argument>, <argument pos:start="411:60" pos:end="411:60"><expr pos:start="411:60" pos:end="411:60"><literal type="number" pos:start="411:60" pos:end="411:60">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="413:5" pos:end="413:62"><expr pos:start="413:5" pos:end="413:61"><call pos:start="413:5" pos:end="413:61"><name pos:start="413:5" pos:end="413:30">qemu_devtree_setprop_cells</name><argument_list pos:start="413:31" pos:end="413:61">(<argument pos:start="413:32" pos:end="413:34"><expr pos:start="413:32" pos:end="413:34"><name pos:start="413:32" pos:end="413:34">fdt</name></expr></argument>, <argument pos:start="413:37" pos:end="413:39"><expr pos:start="413:37" pos:end="413:39"><name pos:start="413:37" pos:end="413:39">pci</name></expr></argument>, <argument pos:start="413:42" pos:end="413:52"><expr pos:start="413:42" pos:end="413:52"><literal type="string" pos:start="413:42" pos:end="413:52">"bus-range"</literal></expr></argument>, <argument pos:start="413:55" pos:end="413:55"><expr pos:start="413:55" pos:end="413:55"><literal type="number" pos:start="413:55" pos:end="413:55">0</literal></expr></argument>, <argument pos:start="413:58" pos:end="413:60"><expr pos:start="413:58" pos:end="413:60"><literal type="number" pos:start="413:58" pos:end="413:60">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="415:5" pos:end="419:5">for <control pos:start="415:9" pos:end="415:28">(<init pos:start="415:10" pos:end="415:15"><expr pos:start="415:10" pos:end="415:14"><name pos:start="415:10" pos:end="415:10">i</name> <operator pos:start="415:12" pos:end="415:12">=</operator> <literal type="number" pos:start="415:14" pos:end="415:14">0</literal></expr>;</init> <condition pos:start="415:17" pos:end="415:23"><expr pos:start="415:17" pos:end="415:22"><name pos:start="415:17" pos:end="415:17">i</name> <operator pos:start="415:19" pos:end="415:19">&lt;</operator> <literal type="number" pos:start="415:21" pos:end="415:22">12</literal></expr>;</condition> <incr pos:start="415:25" pos:end="415:27"><expr pos:start="415:25" pos:end="415:27"><name pos:start="415:25" pos:end="415:25">i</name><operator pos:start="415:26" pos:end="415:27">++</operator></expr></incr>)</control> <block pos:start="415:30" pos:end="419:5">{<block_content pos:start="417:9" pos:end="417:51">

        <expr_stmt pos:start="417:9" pos:end="417:51"><expr pos:start="417:9" pos:end="417:50"><name pos:start="417:9" pos:end="417:21"><name pos:start="417:9" pos:end="417:18">pci_ranges</name><index pos:start="417:19" pos:end="417:21">[<expr pos:start="417:20" pos:end="417:20"><name pos:start="417:20" pos:end="417:20">i</name></expr>]</index></name> <operator pos:start="417:23" pos:end="417:23">=</operator> <call pos:start="417:25" pos:end="417:50"><name pos:start="417:25" pos:end="417:35">cpu_to_be32</name><argument_list pos:start="417:36" pos:end="417:50">(<argument pos:start="417:37" pos:end="417:49"><expr pos:start="417:37" pos:end="417:49"><name pos:start="417:37" pos:end="417:49"><name pos:start="417:37" pos:end="417:46">pci_ranges</name><index pos:start="417:47" pos:end="417:49">[<expr pos:start="417:48" pos:end="417:48"><name pos:start="417:48" pos:end="417:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="421:5" pos:end="421:77"><expr pos:start="421:5" pos:end="421:76"><call pos:start="421:5" pos:end="421:76"><name pos:start="421:5" pos:end="421:24">qemu_devtree_setprop</name><argument_list pos:start="421:25" pos:end="421:76">(<argument pos:start="421:26" pos:end="421:28"><expr pos:start="421:26" pos:end="421:28"><name pos:start="421:26" pos:end="421:28">fdt</name></expr></argument>, <argument pos:start="421:31" pos:end="421:33"><expr pos:start="421:31" pos:end="421:33"><name pos:start="421:31" pos:end="421:33">pci</name></expr></argument>, <argument pos:start="421:36" pos:end="421:43"><expr pos:start="421:36" pos:end="421:43"><literal type="string" pos:start="421:36" pos:end="421:43">"ranges"</literal></expr></argument>, <argument pos:start="421:46" pos:end="421:55"><expr pos:start="421:46" pos:end="421:55"><name pos:start="421:46" pos:end="421:55">pci_ranges</name></expr></argument>, <argument pos:start="421:58" pos:end="421:75"><expr pos:start="421:58" pos:end="421:75"><sizeof pos:start="421:58" pos:end="421:75">sizeof<argument_list pos:start="421:64" pos:end="421:75">(<argument pos:start="421:65" pos:end="421:74"><expr pos:start="421:65" pos:end="421:74"><name pos:start="421:65" pos:end="421:74">pci_ranges</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="423:5" pos:end="425:39"><expr pos:start="423:5" pos:end="425:38"><call pos:start="423:5" pos:end="425:38"><name pos:start="423:5" pos:end="423:30">qemu_devtree_setprop_cells</name><argument_list pos:start="423:31" pos:end="425:38">(<argument pos:start="423:32" pos:end="423:34"><expr pos:start="423:32" pos:end="423:34"><name pos:start="423:32" pos:end="423:34">fdt</name></expr></argument>, <argument pos:start="423:37" pos:end="423:39"><expr pos:start="423:37" pos:end="423:39"><name pos:start="423:37" pos:end="423:39">pci</name></expr></argument>, <argument pos:start="423:42" pos:end="423:46"><expr pos:start="423:42" pos:end="423:46"><literal type="string" pos:start="423:42" pos:end="423:46">"reg"</literal></expr></argument>, <argument pos:start="423:49" pos:end="423:69"><expr pos:start="423:49" pos:end="423:69"><name pos:start="423:49" pos:end="423:69">MPC8544_PCI_REGS_BASE</name></expr></argument>,

                               <argument pos:start="425:32" pos:end="425:37"><expr pos:start="425:32" pos:end="425:37"><literal type="number" pos:start="425:32" pos:end="425:37">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="427:5" pos:end="427:69"><expr pos:start="427:5" pos:end="427:68"><call pos:start="427:5" pos:end="427:68"><name pos:start="427:5" pos:end="427:29">qemu_devtree_setprop_cell</name><argument_list pos:start="427:30" pos:end="427:68">(<argument pos:start="427:31" pos:end="427:33"><expr pos:start="427:31" pos:end="427:33"><name pos:start="427:31" pos:end="427:33">fdt</name></expr></argument>, <argument pos:start="427:36" pos:end="427:38"><expr pos:start="427:36" pos:end="427:38"><name pos:start="427:36" pos:end="427:38">pci</name></expr></argument>, <argument pos:start="427:41" pos:end="427:57"><expr pos:start="427:41" pos:end="427:57"><literal type="string" pos:start="427:41" pos:end="427:57">"clock-frequency"</literal></expr></argument>, <argument pos:start="427:60" pos:end="427:67"><expr pos:start="427:60" pos:end="427:67"><literal type="number" pos:start="427:60" pos:end="427:67">66666666</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="429:5" pos:end="429:63"><expr pos:start="429:5" pos:end="429:62"><call pos:start="429:5" pos:end="429:62"><name pos:start="429:5" pos:end="429:29">qemu_devtree_setprop_cell</name><argument_list pos:start="429:30" pos:end="429:62">(<argument pos:start="429:31" pos:end="429:33"><expr pos:start="429:31" pos:end="429:33"><name pos:start="429:31" pos:end="429:33">fdt</name></expr></argument>, <argument pos:start="429:36" pos:end="429:38"><expr pos:start="429:36" pos:end="429:38"><name pos:start="429:36" pos:end="429:38">pci</name></expr></argument>, <argument pos:start="429:41" pos:end="429:58"><expr pos:start="429:41" pos:end="429:58"><literal type="string" pos:start="429:41" pos:end="429:58">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="429:61" pos:end="429:61"><expr pos:start="429:61" pos:end="429:61"><literal type="number" pos:start="429:61" pos:end="429:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="431:5" pos:end="431:58"><expr pos:start="431:5" pos:end="431:57"><call pos:start="431:5" pos:end="431:57"><name pos:start="431:5" pos:end="431:29">qemu_devtree_setprop_cell</name><argument_list pos:start="431:30" pos:end="431:57">(<argument pos:start="431:31" pos:end="431:33"><expr pos:start="431:31" pos:end="431:33"><name pos:start="431:31" pos:end="431:33">fdt</name></expr></argument>, <argument pos:start="431:36" pos:end="431:38"><expr pos:start="431:36" pos:end="431:38"><name pos:start="431:36" pos:end="431:38">pci</name></expr></argument>, <argument pos:start="431:41" pos:end="431:53"><expr pos:start="431:41" pos:end="431:53"><literal type="string" pos:start="431:41" pos:end="431:53">"#size-cells"</literal></expr></argument>, <argument pos:start="431:56" pos:end="431:56"><expr pos:start="431:56" pos:end="431:56"><literal type="number" pos:start="431:56" pos:end="431:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="433:5" pos:end="433:61"><expr pos:start="433:5" pos:end="433:60"><call pos:start="433:5" pos:end="433:60"><name pos:start="433:5" pos:end="433:29">qemu_devtree_setprop_cell</name><argument_list pos:start="433:30" pos:end="433:60">(<argument pos:start="433:31" pos:end="433:33"><expr pos:start="433:31" pos:end="433:33"><name pos:start="433:31" pos:end="433:33">fdt</name></expr></argument>, <argument pos:start="433:36" pos:end="433:38"><expr pos:start="433:36" pos:end="433:38"><name pos:start="433:36" pos:end="433:38">pci</name></expr></argument>, <argument pos:start="433:41" pos:end="433:56"><expr pos:start="433:41" pos:end="433:56"><literal type="string" pos:start="433:41" pos:end="433:56">"#address-cells"</literal></expr></argument>, <argument pos:start="433:59" pos:end="433:59"><expr pos:start="433:59" pos:end="433:59"><literal type="number" pos:start="433:59" pos:end="433:59">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="435:5" pos:end="435:62"><expr pos:start="435:5" pos:end="435:61"><call pos:start="435:5" pos:end="435:61"><name pos:start="435:5" pos:end="435:31">qemu_devtree_setprop_string</name><argument_list pos:start="435:32" pos:end="435:61">(<argument pos:start="435:33" pos:end="435:35"><expr pos:start="435:33" pos:end="435:35"><name pos:start="435:33" pos:end="435:35">fdt</name></expr></argument>, <argument pos:start="435:38" pos:end="435:47"><expr pos:start="435:38" pos:end="435:47"><literal type="string" pos:start="435:38" pos:end="435:47">"/aliases"</literal></expr></argument>, <argument pos:start="435:50" pos:end="435:55"><expr pos:start="435:50" pos:end="435:55"><literal type="string" pos:start="435:50" pos:end="435:55">"pci0"</literal></expr></argument>, <argument pos:start="435:58" pos:end="435:60"><expr pos:start="435:58" pos:end="435:60"><name pos:start="435:58" pos:end="435:60">pci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="439:5" pos:end="439:64"><expr pos:start="439:5" pos:end="439:63"><name pos:start="439:5" pos:end="439:16">machine_opts</name> <operator pos:start="439:18" pos:end="439:18">=</operator> <call pos:start="439:20" pos:end="439:63"><name pos:start="439:20" pos:end="439:33">qemu_opts_find</name><argument_list pos:start="439:34" pos:end="439:63">(<argument pos:start="439:35" pos:end="439:59"><expr pos:start="439:35" pos:end="439:59"><call pos:start="439:35" pos:end="439:59"><name pos:start="439:35" pos:end="439:48">qemu_find_opts</name><argument_list pos:start="439:49" pos:end="439:59">(<argument pos:start="439:50" pos:end="439:58"><expr pos:start="439:50" pos:end="439:58"><literal type="string" pos:start="439:50" pos:end="439:58">"machine"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="439:62" pos:end="439:62"><expr pos:start="439:62" pos:end="439:62"><literal type="number" pos:start="439:62" pos:end="439:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="441:5" pos:end="445:5"><if pos:start="441:5" pos:end="445:5">if <condition pos:start="441:8" pos:end="441:21">(<expr pos:start="441:9" pos:end="441:20"><name pos:start="441:9" pos:end="441:20">machine_opts</name></expr>)</condition> <block pos:start="441:23" pos:end="445:5">{<block_content pos:start="443:9" pos:end="443:56">

        <expr_stmt pos:start="443:9" pos:end="443:56"><expr pos:start="443:9" pos:end="443:55"><name pos:start="443:9" pos:end="443:15">dumpdtb</name> <operator pos:start="443:17" pos:end="443:17">=</operator> <call pos:start="443:19" pos:end="443:55"><name pos:start="443:19" pos:end="443:30">qemu_opt_get</name><argument_list pos:start="443:31" pos:end="443:55">(<argument pos:start="443:32" pos:end="443:43"><expr pos:start="443:32" pos:end="443:43"><name pos:start="443:32" pos:end="443:43">machine_opts</name></expr></argument>, <argument pos:start="443:46" pos:end="443:54"><expr pos:start="443:46" pos:end="443:54"><literal type="string" pos:start="443:46" pos:end="443:54">"dumpdtb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="447:5" pos:end="467:5"><if pos:start="447:5" pos:end="467:5">if <condition pos:start="447:8" pos:end="447:16">(<expr pos:start="447:9" pos:end="447:15"><name pos:start="447:9" pos:end="447:15">dumpdtb</name></expr>)</condition> <block pos:start="447:18" pos:end="467:5">{<block_content pos:start="451:9" pos:end="465:16">

        <comment type="block" pos:start="449:9" pos:end="449:45">/* Dump the dtb to a file and quit */</comment>

        <decl_stmt pos:start="451:9" pos:end="451:39"><decl pos:start="451:9" pos:end="451:38"><type pos:start="451:9" pos:end="451:14"><name pos:start="451:9" pos:end="451:12">FILE</name> <modifier pos:start="451:14" pos:end="451:14">*</modifier></type><name pos:start="451:15" pos:end="451:15">f</name> <init pos:start="451:17" pos:end="451:38">= <expr pos:start="451:19" pos:end="451:38"><call pos:start="451:19" pos:end="451:38"><name pos:start="451:19" pos:end="451:23">fopen</name><argument_list pos:start="451:24" pos:end="451:38">(<argument pos:start="451:25" pos:end="451:31"><expr pos:start="451:25" pos:end="451:31"><name pos:start="451:25" pos:end="451:31">dumpdtb</name></expr></argument>, <argument pos:start="451:34" pos:end="451:37"><expr pos:start="451:34" pos:end="451:37"><literal type="string" pos:start="451:34" pos:end="451:37">"wb"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="453:9" pos:end="453:19"><decl pos:start="453:9" pos:end="453:18"><type pos:start="453:9" pos:end="453:14"><name pos:start="453:9" pos:end="453:14">size_t</name></type> <name pos:start="453:16" pos:end="453:18">len</name></decl>;</decl_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:42"><expr pos:start="455:9" pos:end="455:41"><name pos:start="455:9" pos:end="455:11">len</name> <operator pos:start="455:13" pos:end="455:13">=</operator> <call pos:start="455:15" pos:end="455:41"><name pos:start="455:15" pos:end="455:20">fwrite</name><argument_list pos:start="455:21" pos:end="455:41">(<argument pos:start="455:22" pos:end="455:24"><expr pos:start="455:22" pos:end="455:24"><name pos:start="455:22" pos:end="455:24">fdt</name></expr></argument>, <argument pos:start="455:27" pos:end="455:34"><expr pos:start="455:27" pos:end="455:34"><name pos:start="455:27" pos:end="455:34">fdt_size</name></expr></argument>, <argument pos:start="455:37" pos:end="455:37"><expr pos:start="455:37" pos:end="455:37"><literal type="number" pos:start="455:37" pos:end="455:37">1</literal></expr></argument>, <argument pos:start="455:40" pos:end="455:40"><expr pos:start="455:40" pos:end="455:40"><name pos:start="455:40" pos:end="455:40">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="457:9" pos:end="457:18"><expr pos:start="457:9" pos:end="457:17"><call pos:start="457:9" pos:end="457:17"><name pos:start="457:9" pos:end="457:14">fclose</name><argument_list pos:start="457:15" pos:end="457:17">(<argument pos:start="457:16" pos:end="457:16"><expr pos:start="457:16" pos:end="457:16"><name pos:start="457:16" pos:end="457:16">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="459:9" pos:end="463:9"><if pos:start="459:9" pos:end="463:9">if <condition pos:start="459:12" pos:end="459:28">(<expr pos:start="459:13" pos:end="459:27"><name pos:start="459:13" pos:end="459:15">len</name> <operator pos:start="459:17" pos:end="459:18">!=</operator> <name pos:start="459:20" pos:end="459:27">fdt_size</name></expr>)</condition> <block pos:start="459:30" pos:end="463:9">{<block_content pos:start="461:13" pos:end="461:20">

            <expr_stmt pos:start="461:13" pos:end="461:20"><expr pos:start="461:13" pos:end="461:19"><call pos:start="461:13" pos:end="461:19"><name pos:start="461:13" pos:end="461:16">exit</name><argument_list pos:start="461:17" pos:end="461:19">(<argument pos:start="461:18" pos:end="461:18"><expr pos:start="461:18" pos:end="461:18"><literal type="number" pos:start="461:18" pos:end="461:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="465:9" pos:end="465:16"><expr pos:start="465:9" pos:end="465:15"><call pos:start="465:9" pos:end="465:15"><name pos:start="465:9" pos:end="465:12">exit</name><argument_list pos:start="465:13" pos:end="465:15">(<argument pos:start="465:14" pos:end="465:14"><expr pos:start="465:14" pos:end="465:14"><literal type="number" pos:start="465:14" pos:end="465:14">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="471:5" pos:end="471:75"><expr pos:start="471:5" pos:end="471:74"><name pos:start="471:5" pos:end="471:7">ret</name> <operator pos:start="471:9" pos:end="471:9">=</operator> <call pos:start="471:11" pos:end="471:74"><name pos:start="471:11" pos:end="471:28">rom_add_blob_fixed</name><argument_list pos:start="471:29" pos:end="471:74">(<argument pos:start="471:30" pos:end="471:52"><expr pos:start="471:30" pos:end="471:52"><name pos:start="471:30" pos:end="471:52">BINARY_DEVICE_TREE_FILE</name></expr></argument>, <argument pos:start="471:55" pos:end="471:57"><expr pos:start="471:55" pos:end="471:57"><name pos:start="471:55" pos:end="471:57">fdt</name></expr></argument>, <argument pos:start="471:60" pos:end="471:67"><expr pos:start="471:60" pos:end="471:67"><name pos:start="471:60" pos:end="471:67">fdt_size</name></expr></argument>, <argument pos:start="471:70" pos:end="471:73"><expr pos:start="471:70" pos:end="471:73"><name pos:start="471:70" pos:end="471:73">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="473:5" pos:end="477:5"><if pos:start="473:5" pos:end="477:5">if <condition pos:start="473:8" pos:end="473:16">(<expr pos:start="473:9" pos:end="473:15"><name pos:start="473:9" pos:end="473:11">ret</name> <operator pos:start="473:13" pos:end="473:13">&lt;</operator> <literal type="number" pos:start="473:15" pos:end="473:15">0</literal></expr>)</condition> <block pos:start="473:18" pos:end="477:5">{<block_content pos:start="475:9" pos:end="475:17">

        <goto pos:start="475:9" pos:end="475:17">goto <name pos:start="475:14" pos:end="475:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="479:5" pos:end="479:16"><expr pos:start="479:5" pos:end="479:15"><call pos:start="479:5" pos:end="479:15"><name pos:start="479:5" pos:end="479:10">g_free</name><argument_list pos:start="479:11" pos:end="479:15">(<argument pos:start="479:12" pos:end="479:14"><expr pos:start="479:12" pos:end="479:14"><name pos:start="479:12" pos:end="479:14">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="481:5" pos:end="481:19"><expr pos:start="481:5" pos:end="481:18"><name pos:start="481:5" pos:end="481:7">ret</name> <operator pos:start="481:9" pos:end="481:9">=</operator> <name pos:start="481:11" pos:end="481:18">fdt_size</name></expr>;</expr_stmt>



<label pos:start="485:1" pos:end="485:4"><name pos:start="485:1" pos:end="485:3">out</name>:</label>



    <return pos:start="489:5" pos:end="489:15">return <expr pos:start="489:12" pos:end="489:14"><name pos:start="489:12" pos:end="489:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
