<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24367.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">write_reftable_entry</name><parameter_list pos:start="1:32" pos:end="1:67">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:48">BlockDriverState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">bs</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:66">rt_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:39"><name pos:start="7:14" pos:end="7:16">buf</name><index pos:start="7:17" pos:end="7:39">[<expr pos:start="7:18" pos:end="7:38"><name pos:start="7:18" pos:end="7:38">RT_ENTRIES_PER_SECTOR</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">rt_start_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:61"><expr pos:start="15:5" pos:end="15:60"><name pos:start="15:5" pos:end="15:18">rt_start_index</name> <operator pos:start="15:20" pos:end="15:20">=</operator> <name pos:start="15:22" pos:end="15:29">rt_index</name> <operator pos:start="15:31" pos:end="15:31">&amp;</operator> <operator pos:start="15:33" pos:end="15:33">~</operator><operator pos:start="15:34" pos:end="15:34">(</operator><name pos:start="15:35" pos:end="15:55">RT_ENTRIES_PER_SECTOR</name> <operator pos:start="15:57" pos:end="15:57">-</operator> <literal type="number" pos:start="15:59" pos:end="15:59">1</literal><operator pos:start="15:60" pos:end="15:60">)</operator></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="21:5">for <control pos:start="17:9" pos:end="17:47">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:42"><expr pos:start="17:17" pos:end="17:41"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:41">RT_ENTRIES_PER_SECTOR</name></expr>;</condition> <incr pos:start="17:44" pos:end="17:46"><expr pos:start="17:44" pos:end="17:46"><name pos:start="17:44" pos:end="17:44">i</name><operator pos:start="17:45" pos:end="17:46">++</operator></expr></incr>)</control> <block pos:start="17:49" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:68">

        <expr_stmt pos:start="19:9" pos:end="19:68"><expr pos:start="19:9" pos:end="19:67"><name pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:11">buf</name><index pos:start="19:12" pos:end="19:14">[<expr pos:start="19:13" pos:end="19:13"><name pos:start="19:13" pos:end="19:13">i</name></expr>]</index></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:67"><name pos:start="19:18" pos:end="19:28">cpu_to_be64</name><argument_list pos:start="19:29" pos:end="19:67">(<argument pos:start="19:30" pos:end="19:66"><expr pos:start="19:30" pos:end="19:66"><name pos:start="19:30" pos:end="19:66"><name pos:start="19:30" pos:end="19:30">s</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:46">refcount_table</name><index pos:start="19:47" pos:end="19:66">[<expr pos:start="19:48" pos:end="19:65"><name pos:start="19:48" pos:end="19:61">rt_start_index</name> <operator pos:start="19:63" pos:end="19:63">+</operator> <name pos:start="19:65" pos:end="19:65">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="25:5" pos:end="31:25"><expr pos:start="25:5" pos:end="31:24"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="31:24"><name pos:start="25:11" pos:end="25:39">qcow2_pre_write_overlap_check</name><argument_list pos:start="25:40" pos:end="31:24">(<argument pos:start="25:41" pos:end="25:42"><expr pos:start="25:41" pos:end="25:42"><name pos:start="25:41" pos:end="25:42">bs</name></expr></argument>,

            <argument pos:start="27:13" pos:end="27:55"><expr pos:start="27:13" pos:end="27:55"><name pos:start="27:13" pos:end="27:28">QCOW2_OL_DEFAULT</name> <operator pos:start="27:30" pos:end="27:30">&amp;</operator> <operator pos:start="27:32" pos:end="27:32">~</operator><name pos:start="27:33" pos:end="27:55">QCOW2_OL_REFCOUNT_TABLE</name></expr></argument>,

            <argument pos:start="29:13" pos:end="29:72"><expr pos:start="29:13" pos:end="29:72"><name pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:36">refcount_table_offset</name></name> <operator pos:start="29:38" pos:end="29:38">+</operator> <name pos:start="29:40" pos:end="29:53">rt_start_index</name> <operator pos:start="29:55" pos:end="29:55">*</operator> <sizeof pos:start="29:57" pos:end="29:72">sizeof<argument_list pos:start="29:63" pos:end="29:72">(<argument pos:start="29:64" pos:end="29:71"><expr pos:start="29:64" pos:end="29:71"><name pos:start="29:64" pos:end="29:71">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>,

            <argument pos:start="31:13" pos:end="31:23"><expr pos:start="31:13" pos:end="31:23"><sizeof pos:start="31:13" pos:end="31:23">sizeof<argument_list pos:start="31:19" pos:end="31:23">(<argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>)</condition> <block pos:start="33:18" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:19">

        <return pos:start="35:9" pos:end="35:19">return <expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:51"><expr pos:start="41:5" pos:end="41:50"><call pos:start="41:5" pos:end="41:50"><name pos:start="41:5" pos:end="41:16">BLKDBG_EVENT</name><argument_list pos:start="41:17" pos:end="41:50">(<argument pos:start="41:18" pos:end="41:25"><expr pos:start="41:18" pos:end="41:25"><name pos:start="41:18" pos:end="41:25"><name pos:start="41:18" pos:end="41:19">bs</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:25">file</name></name></expr></argument>, <argument pos:start="41:28" pos:end="41:49"><expr pos:start="41:28" pos:end="41:49"><name pos:start="41:28" pos:end="41:49">BLKDBG_REFTABLE_UPDATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:65"><expr pos:start="43:5" pos:end="45:64"><name pos:start="43:5" pos:end="43:7">ret</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="45:64"><name pos:start="43:11" pos:end="43:26">bdrv_pwrite_sync</name><argument_list pos:start="43:27" pos:end="45:64">(<argument pos:start="43:28" pos:end="43:35"><expr pos:start="43:28" pos:end="43:35"><name pos:start="43:28" pos:end="43:35"><name pos:start="43:28" pos:end="43:29">bs</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:35">file</name></name></expr></argument>, <argument pos:start="43:38" pos:end="45:45"><expr pos:start="43:38" pos:end="45:45"><name pos:start="43:38" pos:end="43:61"><name pos:start="43:38" pos:end="43:38">s</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:61">refcount_table_offset</name></name> <operator pos:start="43:63" pos:end="43:63">+</operator>

            <name pos:start="45:13" pos:end="45:26">rt_start_index</name> <operator pos:start="45:28" pos:end="45:28">*</operator> <sizeof pos:start="45:30" pos:end="45:45">sizeof<argument_list pos:start="45:36" pos:end="45:45">(<argument pos:start="45:37" pos:end="45:44"><expr pos:start="45:37" pos:end="45:44"><name pos:start="45:37" pos:end="45:44">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:48" pos:end="45:50"><expr pos:start="45:48" pos:end="45:50"><name pos:start="45:48" pos:end="45:50">buf</name></expr></argument>, <argument pos:start="45:53" pos:end="45:63"><expr pos:start="45:53" pos:end="45:63"><sizeof pos:start="45:53" pos:end="45:63">sizeof<argument_list pos:start="45:59" pos:end="45:63">(<argument pos:start="45:60" pos:end="45:62"><expr pos:start="45:60" pos:end="45:62"><name pos:start="45:60" pos:end="45:62">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">&lt;</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>)</condition> <block pos:start="47:18" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:19">

        <return pos:start="49:9" pos:end="49:19">return <expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
