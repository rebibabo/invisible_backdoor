<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23738.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:41">qio_channel_websock_writev</name><parameter_list pos:start="1:42" pos:end="11:55">(<parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:52">QIOChannel</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">ioc</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:65"><decl pos:start="3:43" pos:end="3:65"><type pos:start="3:43" pos:end="3:65"><specifier pos:start="3:43" pos:end="3:47">const</specifier> <name pos:start="3:49" pos:end="3:60"><name pos:start="3:49" pos:end="3:54">struct</name> <name pos:start="3:56" pos:end="3:60">iovec</name></name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:65">iov</name></decl></parameter>,

                                          <parameter pos:start="5:43" pos:end="5:53"><decl pos:start="5:43" pos:end="5:53"><type pos:start="5:43" pos:end="5:53"><name pos:start="5:43" pos:end="5:48">size_t</name></type> <name pos:start="5:50" pos:end="5:53">niov</name></decl></parameter>,

                                          <parameter pos:start="7:43" pos:end="7:50"><decl pos:start="7:43" pos:end="7:50"><type pos:start="7:43" pos:end="7:50"><name pos:start="7:43" pos:end="7:45">int</name> <modifier pos:start="7:47" pos:end="7:47">*</modifier></type><name pos:start="7:48" pos:end="7:50">fds</name></decl></parameter>,

                                          <parameter pos:start="9:43" pos:end="9:53"><decl pos:start="9:43" pos:end="9:53"><type pos:start="9:43" pos:end="9:53"><name pos:start="9:43" pos:end="9:48">size_t</name></type> <name pos:start="9:50" pos:end="9:53">nfds</name></decl></parameter>,

                                          <parameter pos:start="11:43" pos:end="11:54"><decl pos:start="11:43" pos:end="11:54"><type pos:start="11:43" pos:end="11:54"><name pos:start="11:43" pos:end="11:47">Error</name> <modifier pos:start="11:49" pos:end="11:49">*</modifier><modifier pos:start="11:50" pos:end="11:50">*</modifier></type><name pos:start="11:51" pos:end="11:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="109:1">{<block_content pos:start="15:5" pos:end="107:16">

    <decl_stmt pos:start="15:5" pos:end="15:55"><decl pos:start="15:5" pos:end="15:54"><type pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:21">QIOChannelWebsock</name> <modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:27">wioc</name> <init pos:start="15:29" pos:end="15:54">= <expr pos:start="15:31" pos:end="15:54"><call pos:start="15:31" pos:end="15:54"><name pos:start="15:31" pos:end="15:49">QIO_CHANNEL_WEBSOCK</name><argument_list pos:start="15:50" pos:end="15:54">(<argument pos:start="15:51" pos:end="15:53"><expr pos:start="15:51" pos:end="15:53"><name pos:start="15:51" pos:end="15:53">ioc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:12">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">ssize_t</name></type> <name pos:start="19:13" pos:end="19:16">done</name> <init pos:start="19:18" pos:end="19:20">= <expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">ssize_t</name></type> <name pos:start="21:13" pos:end="21:15">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:12">wioc</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:20">io_err</name></name></expr>)</condition> <block pos:start="25:23" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:13">errp</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:40"><name pos:start="27:17" pos:end="27:26">error_copy</name><argument_list pos:start="27:27" pos:end="27:40">(<argument pos:start="27:28" pos:end="27:39"><expr pos:start="27:28" pos:end="27:39"><name pos:start="27:28" pos:end="27:39"><name pos:start="27:28" pos:end="27:31">wioc</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:39">io_err</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:21">(<expr pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:12">wioc</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:20">io_eof</name></name></expr>)</condition> <block pos:start="35:23" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><call pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:18">error_setg</name><argument_list pos:start="37:19" pos:end="37:45">(<argument pos:start="37:20" pos:end="37:23"><expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">errp</name></expr></argument>, <argument pos:start="37:26" pos:end="37:29"><expr pos:start="37:26" pos:end="37:29"><literal type="string" pos:start="37:26" pos:end="37:29">"%s"</literal></expr></argument>, <argument pos:start="37:32" pos:end="37:44"><expr pos:start="37:32" pos:end="37:44"><literal type="string" pos:start="37:32" pos:end="37:44">"Broken pipe"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="45:5" pos:end="75:5">for <control pos:start="45:9" pos:end="45:30">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:25"><expr pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:24">niov</name></expr>;</condition> <incr pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:27">i</name><operator pos:start="45:28" pos:end="45:29">++</operator></expr></incr>)</control> <block pos:start="45:32" pos:end="75:5">{<block_content pos:start="47:9" pos:end="73:9">

        <decl_stmt pos:start="47:9" pos:end="47:37"><decl pos:start="47:9" pos:end="47:36"><type pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:14">size_t</name></type> <name pos:start="47:16" pos:end="47:19">want</name> <init pos:start="47:21" pos:end="47:36">= <expr pos:start="47:23" pos:end="47:36"><name pos:start="47:23" pos:end="47:28"><name pos:start="47:23" pos:end="47:25">iov</name><index pos:start="47:26" pos:end="47:28">[<expr pos:start="47:27" pos:end="47:27"><name pos:start="47:27" pos:end="47:27">i</name></expr>]</index></name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:36">iov_len</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:77">(<expr pos:start="49:13" pos:end="49:76"><operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:17">want</name> <operator pos:start="49:19" pos:end="49:19">+</operator> <name pos:start="49:21" pos:end="49:42"><name pos:start="49:21" pos:end="49:24">wioc</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:35">rawoutput</name><operator pos:start="49:36" pos:end="49:36">.</operator><name pos:start="49:37" pos:end="49:42">offset</name></name><operator pos:start="49:43" pos:end="49:43">)</operator> <operator pos:start="49:45" pos:end="49:45">&gt;</operator> <name pos:start="49:47" pos:end="49:76">QIO_CHANNEL_WEBSOCK_MAX_BUFFER</name></expr>)</condition> <block pos:start="49:79" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:77">

            <expr_stmt pos:start="51:13" pos:end="51:77"><expr pos:start="51:13" pos:end="51:76"><name pos:start="51:13" pos:end="51:16">want</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <operator pos:start="51:20" pos:end="51:20">(</operator><name pos:start="51:21" pos:end="51:50">QIO_CHANNEL_WEBSOCK_MAX_BUFFER</name> <operator pos:start="51:52" pos:end="51:52">-</operator> <name pos:start="51:54" pos:end="51:75"><name pos:start="51:54" pos:end="51:57">wioc</name><operator pos:start="51:58" pos:end="51:59">-&gt;</operator><name pos:start="51:60" pos:end="51:68">rawoutput</name><operator pos:start="51:69" pos:end="51:69">.</operator><name pos:start="51:70" pos:end="51:75">offset</name></name><operator pos:start="51:76" pos:end="51:76">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:22">(<expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:16">want</name> <operator pos:start="55:18" pos:end="55:19">==</operator> <literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>)</condition> <block pos:start="55:24" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:22">

            <goto pos:start="57:13" pos:end="57:22">goto <name pos:start="57:18" pos:end="57:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:47"><expr pos:start="63:9" pos:end="63:46"><call pos:start="63:9" pos:end="63:46"><name pos:start="63:9" pos:end="63:22">buffer_reserve</name><argument_list pos:start="63:23" pos:end="63:46">(<argument pos:start="63:24" pos:end="63:39"><expr pos:start="63:24" pos:end="63:39"><operator pos:start="63:24" pos:end="63:24">&amp;</operator><name pos:start="63:25" pos:end="63:39"><name pos:start="63:25" pos:end="63:28">wioc</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:39">rawoutput</name></name></expr></argument>, <argument pos:start="63:42" pos:end="63:45"><expr pos:start="63:42" pos:end="63:45"><name pos:start="63:42" pos:end="63:45">want</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:63"><expr pos:start="65:9" pos:end="65:62"><call pos:start="65:9" pos:end="65:62"><name pos:start="65:9" pos:end="65:21">buffer_append</name><argument_list pos:start="65:22" pos:end="65:62">(<argument pos:start="65:23" pos:end="65:38"><expr pos:start="65:23" pos:end="65:38"><operator pos:start="65:23" pos:end="65:23">&amp;</operator><name pos:start="65:24" pos:end="65:38"><name pos:start="65:24" pos:end="65:27">wioc</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:38">rawoutput</name></name></expr></argument>, <argument pos:start="65:41" pos:end="65:55"><expr pos:start="65:41" pos:end="65:55"><name pos:start="65:41" pos:end="65:46"><name pos:start="65:41" pos:end="65:43">iov</name><index pos:start="65:44" pos:end="65:46">[<expr pos:start="65:45" pos:end="65:45"><name pos:start="65:45" pos:end="65:45">i</name></expr>]</index></name><operator pos:start="65:47" pos:end="65:47">.</operator><name pos:start="65:48" pos:end="65:55">iov_base</name></expr></argument>, <argument pos:start="65:58" pos:end="65:61"><expr pos:start="65:58" pos:end="65:61"><name pos:start="65:58" pos:end="65:61">want</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:21"><expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:12">done</name> <operator pos:start="67:14" pos:end="67:15">+=</operator> <name pos:start="67:17" pos:end="67:20">want</name></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:34">(<expr pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:16">want</name> <operator pos:start="69:18" pos:end="69:18">&lt;</operator> <name pos:start="69:20" pos:end="69:25"><name pos:start="69:20" pos:end="69:22">iov</name><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">i</name></expr>]</index></name><operator pos:start="69:26" pos:end="69:26">.</operator><name pos:start="69:27" pos:end="69:33">iov_len</name></expr>)</condition> <block pos:start="69:36" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:18">

            <break pos:start="71:13" pos:end="71:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



 <label pos:start="79:2" pos:end="79:6"><name pos:start="79:2" pos:end="79:5">done</name>:</label>

    <expr_stmt pos:start="81:5" pos:end="81:53"><expr pos:start="81:5" pos:end="81:52"><name pos:start="81:5" pos:end="81:7">ret</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <call pos:start="81:11" pos:end="81:52"><name pos:start="81:11" pos:end="81:40">qio_channel_websock_write_wire</name><argument_list pos:start="81:41" pos:end="81:52">(<argument pos:start="81:42" pos:end="81:45"><expr pos:start="81:42" pos:end="81:45"><name pos:start="81:42" pos:end="81:45">wioc</name></expr></argument>, <argument pos:start="81:48" pos:end="81:51"><expr pos:start="81:48" pos:end="81:51"><name pos:start="81:48" pos:end="81:51">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="91:5"><if pos:start="83:5" pos:end="91:5">if <condition pos:start="83:8" pos:end="85:37">(<expr pos:start="83:9" pos:end="85:36"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">&lt;</operator> <literal type="number" pos:start="83:15" pos:end="83:15">0</literal> <operator pos:start="83:17" pos:end="83:18">&amp;&amp;</operator>

        <name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:14">!=</operator> <name pos:start="85:16" pos:end="85:36">QIO_CHANNEL_ERR_BLOCK</name></expr>)</condition> <block pos:start="85:39" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:18">

        <expr_stmt pos:start="87:9" pos:end="87:46"><expr pos:start="87:9" pos:end="87:45"><call pos:start="87:9" pos:end="87:45"><name pos:start="87:9" pos:end="87:39">qio_channel_websock_unset_watch</name><argument_list pos:start="87:40" pos:end="87:45">(<argument pos:start="87:41" pos:end="87:44"><expr pos:start="87:41" pos:end="87:44"><name pos:start="87:41" pos:end="87:44">wioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:18">return <expr pos:start="89:16" pos:end="89:17"><operator pos:start="89:16" pos:end="89:16">-</operator><literal type="number" pos:start="89:17" pos:end="89:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:40"><expr pos:start="95:5" pos:end="95:39"><call pos:start="95:5" pos:end="95:39"><name pos:start="95:5" pos:end="95:33">qio_channel_websock_set_watch</name><argument_list pos:start="95:34" pos:end="95:39">(<argument pos:start="95:35" pos:end="95:38"><expr pos:start="95:35" pos:end="95:38"><name pos:start="95:35" pos:end="95:38">wioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="103:5"><if pos:start="99:5" pos:end="103:5">if <condition pos:start="99:8" pos:end="99:18">(<expr pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:12">done</name> <operator pos:start="99:14" pos:end="99:15">==</operator> <literal type="number" pos:start="99:17" pos:end="99:17">0</literal></expr>)</condition> <block pos:start="99:20" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:37">

        <return pos:start="101:9" pos:end="101:37">return <expr pos:start="101:16" pos:end="101:36"><name pos:start="101:16" pos:end="101:36">QIO_CHANNEL_ERR_BLOCK</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="107:5" pos:end="107:16">return <expr pos:start="107:12" pos:end="107:15"><name pos:start="107:12" pos:end="107:15">done</name></expr>;</return>

</block_content>}</block></function>
</unit>
