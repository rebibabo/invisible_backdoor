<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10806.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">ffmal_update_format</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:43">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">MMALDecodeContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">ctx</name> <init pos:start="5:28" pos:end="5:45">= <expr pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:34">avctx</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">MMAL_STATUS_T</name></type> <name pos:start="7:19" pos:end="7:24">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">MMAL_COMPONENT_T</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:29">decoder</name> <init pos:start="11:31" pos:end="11:44">= <expr pos:start="11:33" pos:end="11:44"><name pos:start="11:33" pos:end="11:44"><name pos:start="11:33" pos:end="11:35">ctx</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:44">decoder</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:62"><decl pos:start="13:5" pos:end="13:61"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">MMAL_ES_FORMAT_T</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:32">format_out</name> <init pos:start="13:34" pos:end="13:61">= <expr pos:start="13:36" pos:end="13:61"><name pos:start="13:36" pos:end="13:53"><name pos:start="13:36" pos:end="13:42">decoder</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:50">output</name><index pos:start="13:51" pos:end="13:53">[<expr pos:start="13:52" pos:end="13:52"><literal type="number" pos:start="13:52" pos:end="13:52">0</literal></expr>]</index></name><operator pos:start="13:54" pos:end="13:55">-&gt;</operator><name pos:start="13:56" pos:end="13:61">format</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><call pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:24">ffmmal_poolref_unref</name><argument_list pos:start="17:25" pos:end="17:39">(<argument pos:start="17:26" pos:end="17:38"><expr pos:start="17:26" pos:end="17:38"><name pos:start="17:26" pos:end="17:38"><name pos:start="17:26" pos:end="17:28">ctx</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:38">pool_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:62">(<expr pos:start="19:9" pos:end="19:61"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:23"><name pos:start="19:11" pos:end="19:13">ctx</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:23">pool_out</name></name> <operator pos:start="19:25" pos:end="19:25">=</operator> <call pos:start="19:27" pos:end="19:60"><name pos:start="19:27" pos:end="19:36">av_mallocz</name><argument_list pos:start="19:37" pos:end="19:60">(<argument pos:start="19:38" pos:end="19:59"><expr pos:start="19:38" pos:end="19:59"><sizeof pos:start="19:38" pos:end="19:59">sizeof<argument_list pos:start="19:44" pos:end="19:59">(<argument pos:start="19:45" pos:end="19:58"><expr pos:start="19:45" pos:end="19:58"><operator pos:start="19:45" pos:end="19:45">*</operator><name pos:start="19:46" pos:end="19:58"><name pos:start="19:46" pos:end="19:48">ctx</name><operator pos:start="19:49" pos:end="19:50">-&gt;</operator><name pos:start="19:51" pos:end="19:58">pool_out</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="19:61" pos:end="19:61">)</operator></expr>)</condition> <block pos:start="19:64" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:29"><name pos:start="21:15" pos:end="21:21">AVERROR</name><argument_list pos:start="21:22" pos:end="21:29">(<argument pos:start="21:23" pos:end="21:28"><expr pos:start="21:23" pos:end="21:28"><name pos:start="21:23" pos:end="21:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><call pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:16">atomic_store</name><argument_list pos:start="27:17" pos:end="27:45">(<argument pos:start="27:18" pos:end="27:41"><expr pos:start="27:18" pos:end="27:41"><operator pos:start="27:18" pos:end="27:18">&amp;</operator><name pos:start="27:19" pos:end="27:41"><name pos:start="27:19" pos:end="27:21">ctx</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:31">pool_out</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:41">refcount</name></name></expr></argument>, <argument pos:start="27:44" pos:end="27:44"><expr pos:start="27:44" pos:end="27:44"><literal type="number" pos:start="27:44" pos:end="27:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:18"><if pos:start="31:5" pos:end="33:18">if <condition pos:start="31:8" pos:end="31:20">(<expr pos:start="31:9" pos:end="31:19"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:19">format_out</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18">

        <goto pos:start="33:9" pos:end="33:18">goto <name pos:start="33:14" pos:end="33:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:120">(<expr pos:start="37:9" pos:end="37:119"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:15">status</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:118"><name pos:start="37:19" pos:end="37:48">mmal_port_parameter_set_uint32</name><argument_list pos:start="37:49" pos:end="37:118">(<argument pos:start="37:50" pos:end="37:67"><expr pos:start="37:50" pos:end="37:67"><name pos:start="37:50" pos:end="37:67"><name pos:start="37:50" pos:end="37:56">decoder</name><operator pos:start="37:57" pos:end="37:58">-&gt;</operator><name pos:start="37:59" pos:end="37:64">output</name><index pos:start="37:65" pos:end="37:67">[<expr pos:start="37:66" pos:end="37:66"><literal type="number" pos:start="37:66" pos:end="37:66">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="37:70" pos:end="37:97"><expr pos:start="37:70" pos:end="37:97"><name pos:start="37:70" pos:end="37:97">MMAL_PARAMETER_EXTRA_BUFFERS</name></expr></argument>, <argument pos:start="37:100" pos:end="37:117"><expr pos:start="37:100" pos:end="37:117"><name pos:start="37:100" pos:end="37:117"><name pos:start="37:100" pos:end="37:102">ctx</name><operator pos:start="37:103" pos:end="37:104">-&gt;</operator><name pos:start="37:105" pos:end="37:117">extra_buffers</name></name></expr></argument>)</argument_list></call><operator pos:start="37:119" pos:end="37:119">)</operator></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="45:18"><if pos:start="43:5" pos:end="45:18">if <condition pos:start="43:8" pos:end="43:119">(<expr pos:start="43:9" pos:end="43:118"><operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:15">status</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:117"><name pos:start="43:19" pos:end="43:49">mmal_port_parameter_set_boolean</name><argument_list pos:start="43:50" pos:end="43:117">(<argument pos:start="43:51" pos:end="43:68"><expr pos:start="43:51" pos:end="43:68"><name pos:start="43:51" pos:end="43:68"><name pos:start="43:51" pos:end="43:57">decoder</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:65">output</name><index pos:start="43:66" pos:end="43:68">[<expr pos:start="43:67" pos:end="43:67"><literal type="number" pos:start="43:67" pos:end="43:67">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="43:71" pos:end="43:113"><expr pos:start="43:71" pos:end="43:113"><name pos:start="43:71" pos:end="43:113">MMAL_PARAMETER_VIDEO_INTERPOLATE_TIMESTAMPS</name></expr></argument>, <argument pos:start="43:116" pos:end="43:116"><expr pos:start="43:116" pos:end="43:116"><literal type="number" pos:start="43:116" pos:end="43:116">0</literal></expr></argument>)</argument_list></call><operator pos:start="43:118" pos:end="43:118">)</operator></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:18"><block_content pos:start="45:9" pos:end="45:18">

        <goto pos:start="45:9" pos:end="45:18">goto <name pos:start="45:14" pos:end="45:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:42">(<expr pos:start="49:9" pos:end="49:41"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:13">avctx</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:22">pix_fmt</name></name> <operator pos:start="49:24" pos:end="49:25">==</operator> <name pos:start="49:27" pos:end="49:41">AV_PIX_FMT_MMAL</name></expr>)</condition> <block pos:start="49:44" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:52">

        <expr_stmt pos:start="51:9" pos:end="51:52"><expr pos:start="51:9" pos:end="51:51"><name pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:18">format_out</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:28">encoding</name></name> <operator pos:start="51:30" pos:end="51:30">=</operator> <name pos:start="51:32" pos:end="51:51">MMAL_ENCODING_OPAQUE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="57:5">else <block pos:start="53:12" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:81">

        <expr_stmt pos:start="55:9" pos:end="55:81"><expr pos:start="55:9" pos:end="55:80"><name pos:start="55:9" pos:end="55:36"><name pos:start="55:9" pos:end="55:18">format_out</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:36">encoding_variant</name></name> <operator pos:start="55:38" pos:end="55:38">=</operator> <name pos:start="55:40" pos:end="55:59"><name pos:start="55:40" pos:end="55:49">format_out</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:59">encoding</name></name> <operator pos:start="55:61" pos:end="55:61">=</operator> <name pos:start="55:63" pos:end="55:80">MMAL_ENCODING_I420</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="61:5" pos:end="63:18"><if pos:start="61:5" pos:end="63:18">if <condition pos:start="61:8" pos:end="61:63">(<expr pos:start="61:9" pos:end="61:62"><operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:15">status</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:61"><name pos:start="61:19" pos:end="61:41">mmal_port_format_commit</name><argument_list pos:start="61:42" pos:end="61:61">(<argument pos:start="61:43" pos:end="61:60"><expr pos:start="61:43" pos:end="61:60"><name pos:start="61:43" pos:end="61:60"><name pos:start="61:43" pos:end="61:49">decoder</name><operator pos:start="61:50" pos:end="61:51">-&gt;</operator><name pos:start="61:52" pos:end="61:57">output</name><index pos:start="61:58" pos:end="61:60">[<expr pos:start="61:59" pos:end="61:59"><literal type="number" pos:start="61:59" pos:end="61:59">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="61:62" pos:end="61:62">)</operator></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:18"><block_content pos:start="63:9" pos:end="63:18">

        <goto pos:start="63:9" pos:end="63:18">goto <name pos:start="63:14" pos:end="63:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="71:18"><if pos:start="67:5" pos:end="71:18">if <condition pos:start="67:8" pos:end="69:111">(<expr pos:start="67:9" pos:end="69:110"><operator pos:start="67:9" pos:end="67:9">(</operator><name pos:start="67:10" pos:end="67:12">ret</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <call pos:start="67:16" pos:end="69:105"><name pos:start="67:16" pos:end="67:32">ff_set_dimensions</name><argument_list pos:start="67:33" pos:end="69:105">(<argument pos:start="67:34" pos:end="67:38"><expr pos:start="67:34" pos:end="67:38"><name pos:start="67:34" pos:end="67:38">avctx</name></expr></argument>, <argument pos:start="67:41" pos:end="67:103"><expr pos:start="67:41" pos:end="67:103"><name pos:start="67:41" pos:end="67:68"><name pos:start="67:41" pos:end="67:50">format_out</name><operator pos:start="67:51" pos:end="67:52">-&gt;</operator><name pos:start="67:53" pos:end="67:54">es</name><operator pos:start="67:55" pos:end="67:56">-&gt;</operator><name pos:start="67:57" pos:end="67:61">video</name><operator pos:start="67:62" pos:end="67:62">.</operator><name pos:start="67:63" pos:end="67:66">crop</name><operator pos:start="67:67" pos:end="67:67">.</operator><name pos:start="67:68" pos:end="67:68">x</name></name> <operator pos:start="67:70" pos:end="67:70">+</operator> <name pos:start="67:72" pos:end="67:103"><name pos:start="67:72" pos:end="67:81">format_out</name><operator pos:start="67:82" pos:end="67:83">-&gt;</operator><name pos:start="67:84" pos:end="67:85">es</name><operator pos:start="67:86" pos:end="67:87">-&gt;</operator><name pos:start="67:88" pos:end="67:92">video</name><operator pos:start="67:93" pos:end="67:93">.</operator><name pos:start="67:94" pos:end="67:97">crop</name><operator pos:start="67:98" pos:end="67:98">.</operator><name pos:start="67:99" pos:end="67:103">width</name></name></expr></argument>,

                                        <argument pos:start="69:41" pos:end="69:104"><expr pos:start="69:41" pos:end="69:104"><name pos:start="69:41" pos:end="69:68"><name pos:start="69:41" pos:end="69:50">format_out</name><operator pos:start="69:51" pos:end="69:52">-&gt;</operator><name pos:start="69:53" pos:end="69:54">es</name><operator pos:start="69:55" pos:end="69:56">-&gt;</operator><name pos:start="69:57" pos:end="69:61">video</name><operator pos:start="69:62" pos:end="69:62">.</operator><name pos:start="69:63" pos:end="69:66">crop</name><operator pos:start="69:67" pos:end="69:67">.</operator><name pos:start="69:68" pos:end="69:68">y</name></name> <operator pos:start="69:70" pos:end="69:70">+</operator> <name pos:start="69:72" pos:end="69:104"><name pos:start="69:72" pos:end="69:81">format_out</name><operator pos:start="69:82" pos:end="69:83">-&gt;</operator><name pos:start="69:84" pos:end="69:85">es</name><operator pos:start="69:86" pos:end="69:87">-&gt;</operator><name pos:start="69:88" pos:end="69:92">video</name><operator pos:start="69:93" pos:end="69:93">.</operator><name pos:start="69:94" pos:end="69:97">crop</name><operator pos:start="69:98" pos:end="69:98">.</operator><name pos:start="69:99" pos:end="69:104">height</name></name></expr></argument>)</argument_list></call><operator pos:start="69:106" pos:end="69:106">)</operator> <operator pos:start="69:108" pos:end="69:108">&lt;</operator> <literal type="number" pos:start="69:110" pos:end="69:110">0</literal></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:18"><block_content pos:start="71:9" pos:end="71:18">

        <goto pos:start="71:9" pos:end="71:18">goto <name pos:start="71:14" pos:end="71:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:71">(<expr pos:start="75:9" pos:end="75:70"><name pos:start="75:9" pos:end="75:37"><name pos:start="75:9" pos:end="75:18">format_out</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:22">es</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:29">video</name><operator pos:start="75:30" pos:end="75:30">.</operator><name pos:start="75:31" pos:end="75:33">par</name><operator pos:start="75:34" pos:end="75:34">.</operator><name pos:start="75:35" pos:end="75:37">num</name></name> <operator pos:start="75:39" pos:end="75:40">&amp;&amp;</operator> <name pos:start="75:42" pos:end="75:70"><name pos:start="75:42" pos:end="75:51">format_out</name><operator pos:start="75:52" pos:end="75:53">-&gt;</operator><name pos:start="75:54" pos:end="75:55">es</name><operator pos:start="75:56" pos:end="75:57">-&gt;</operator><name pos:start="75:58" pos:end="75:62">video</name><operator pos:start="75:63" pos:end="75:63">.</operator><name pos:start="75:64" pos:end="75:66">par</name><operator pos:start="75:67" pos:end="75:67">.</operator><name pos:start="75:68" pos:end="75:70">den</name></name></expr>)</condition> <block pos:start="75:73" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:71">

        <expr_stmt pos:start="77:9" pos:end="77:71"><expr pos:start="77:9" pos:end="77:70"><name pos:start="77:9" pos:end="77:38"><name pos:start="77:9" pos:end="77:13">avctx</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:34">sample_aspect_ratio</name><operator pos:start="77:35" pos:end="77:35">.</operator><name pos:start="77:36" pos:end="77:38">num</name></name> <operator pos:start="77:40" pos:end="77:40">=</operator> <name pos:start="77:42" pos:end="77:70"><name pos:start="77:42" pos:end="77:51">format_out</name><operator pos:start="77:52" pos:end="77:53">-&gt;</operator><name pos:start="77:54" pos:end="77:55">es</name><operator pos:start="77:56" pos:end="77:57">-&gt;</operator><name pos:start="77:58" pos:end="77:62">video</name><operator pos:start="77:63" pos:end="77:63">.</operator><name pos:start="77:64" pos:end="77:66">par</name><operator pos:start="77:67" pos:end="77:67">.</operator><name pos:start="77:68" pos:end="77:70">num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:71"><expr pos:start="79:9" pos:end="79:70"><name pos:start="79:9" pos:end="79:38"><name pos:start="79:9" pos:end="79:13">avctx</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:34">sample_aspect_ratio</name><operator pos:start="79:35" pos:end="79:35">.</operator><name pos:start="79:36" pos:end="79:38">den</name></name> <operator pos:start="79:40" pos:end="79:40">=</operator> <name pos:start="79:42" pos:end="79:70"><name pos:start="79:42" pos:end="79:51">format_out</name><operator pos:start="79:52" pos:end="79:53">-&gt;</operator><name pos:start="79:54" pos:end="79:55">es</name><operator pos:start="79:56" pos:end="79:57">-&gt;</operator><name pos:start="79:58" pos:end="79:62">video</name><operator pos:start="79:63" pos:end="79:63">.</operator><name pos:start="79:64" pos:end="79:66">par</name><operator pos:start="79:67" pos:end="79:67">.</operator><name pos:start="79:68" pos:end="79:70">den</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:80"><expr pos:start="85:5" pos:end="85:79"><name pos:start="85:5" pos:end="85:21"><name pos:start="85:5" pos:end="85:9">avctx</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:21">colorspace</name></name> <operator pos:start="85:23" pos:end="85:23">=</operator> <call pos:start="85:25" pos:end="85:79"><name pos:start="85:25" pos:end="85:44">ffmmal_csp_to_av_csp</name><argument_list pos:start="85:45" pos:end="85:79">(<argument pos:start="85:46" pos:end="85:78"><expr pos:start="85:46" pos:end="85:78"><name pos:start="85:46" pos:end="85:78"><name pos:start="85:46" pos:end="85:55">format_out</name><operator pos:start="85:56" pos:end="85:57">-&gt;</operator><name pos:start="85:58" pos:end="85:59">es</name><operator pos:start="85:60" pos:end="85:61">-&gt;</operator><name pos:start="85:62" pos:end="85:66">video</name><operator pos:start="85:67" pos:end="85:67">.</operator><name pos:start="85:68" pos:end="85:78">color_space</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="91:96"><expr pos:start="89:5" pos:end="91:95"><name pos:start="89:5" pos:end="89:22"><name pos:start="89:5" pos:end="89:11">decoder</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:19">output</name><index pos:start="89:20" pos:end="89:22">[<expr pos:start="89:21" pos:end="89:21"><literal type="number" pos:start="89:21" pos:end="89:21">0</literal></expr>]</index></name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:35">buffer_size</name> <operator pos:start="89:37" pos:end="89:37">=</operator>

        <call pos:start="91:9" pos:end="91:95"><name pos:start="91:9" pos:end="91:13">FFMAX</name><argument_list pos:start="91:14" pos:end="91:95">(<argument pos:start="91:15" pos:end="91:49"><expr pos:start="91:15" pos:end="91:49"><name pos:start="91:15" pos:end="91:32"><name pos:start="91:15" pos:end="91:21">decoder</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:29">output</name><index pos:start="91:30" pos:end="91:32">[<expr pos:start="91:31" pos:end="91:31"><literal type="number" pos:start="91:31" pos:end="91:31">0</literal></expr>]</index></name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:49">buffer_size_min</name></expr></argument>, <argument pos:start="91:52" pos:end="91:94"><expr pos:start="91:52" pos:end="91:94"><name pos:start="91:52" pos:end="91:69"><name pos:start="91:52" pos:end="91:58">decoder</name><operator pos:start="91:59" pos:end="91:60">-&gt;</operator><name pos:start="91:61" pos:end="91:66">output</name><index pos:start="91:67" pos:end="91:69">[<expr pos:start="91:68" pos:end="91:68"><literal type="number" pos:start="91:68" pos:end="91:68">0</literal></expr>]</index></name><operator pos:start="91:70" pos:end="91:71">-&gt;</operator><name pos:start="91:72" pos:end="91:94">buffer_size_recommended</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="95:115"><expr pos:start="93:5" pos:end="95:114"><name pos:start="93:5" pos:end="93:22"><name pos:start="93:5" pos:end="93:11">decoder</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:19">output</name><index pos:start="93:20" pos:end="93:22">[<expr pos:start="93:21" pos:end="93:21"><literal type="number" pos:start="93:21" pos:end="93:21">0</literal></expr>]</index></name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:34">buffer_num</name> <operator pos:start="93:36" pos:end="93:36">=</operator>

        <call pos:start="95:9" pos:end="95:93"><name pos:start="95:9" pos:end="95:13">FFMAX</name><argument_list pos:start="95:14" pos:end="95:93">(<argument pos:start="95:15" pos:end="95:48"><expr pos:start="95:15" pos:end="95:48"><name pos:start="95:15" pos:end="95:32"><name pos:start="95:15" pos:end="95:21">decoder</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:29">output</name><index pos:start="95:30" pos:end="95:32">[<expr pos:start="95:31" pos:end="95:31"><literal type="number" pos:start="95:31" pos:end="95:31">0</literal></expr>]</index></name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:48">buffer_num_min</name></expr></argument>, <argument pos:start="95:51" pos:end="95:92"><expr pos:start="95:51" pos:end="95:92"><name pos:start="95:51" pos:end="95:68"><name pos:start="95:51" pos:end="95:57">decoder</name><operator pos:start="95:58" pos:end="95:59">-&gt;</operator><name pos:start="95:60" pos:end="95:65">output</name><index pos:start="95:66" pos:end="95:68">[<expr pos:start="95:67" pos:end="95:67"><literal type="number" pos:start="95:67" pos:end="95:67">0</literal></expr>]</index></name><operator pos:start="95:69" pos:end="95:70">-&gt;</operator><name pos:start="95:71" pos:end="95:92">buffer_num_recommended</name></expr></argument>)</argument_list></call> <operator pos:start="95:95" pos:end="95:95">+</operator> <name pos:start="95:97" pos:end="95:114"><name pos:start="95:97" pos:end="95:99">ctx</name><operator pos:start="95:100" pos:end="95:101">-&gt;</operator><name pos:start="95:102" pos:end="95:114">extra_buffers</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="99:76"><expr pos:start="97:5" pos:end="99:75"><name pos:start="97:5" pos:end="97:23"><name pos:start="97:5" pos:end="97:7">ctx</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:17">pool_out</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:23">pool</name></name> <operator pos:start="97:25" pos:end="97:25">=</operator> <call pos:start="97:27" pos:end="99:75"><name pos:start="97:27" pos:end="97:42">mmal_pool_create</name><argument_list pos:start="97:43" pos:end="99:75">(<argument pos:start="97:44" pos:end="97:73"><expr pos:start="97:44" pos:end="97:73"><name pos:start="97:44" pos:end="97:61"><name pos:start="97:44" pos:end="97:50">decoder</name><operator pos:start="97:51" pos:end="97:52">-&gt;</operator><name pos:start="97:53" pos:end="97:58">output</name><index pos:start="97:59" pos:end="97:61">[<expr pos:start="97:60" pos:end="97:60"><literal type="number" pos:start="97:60" pos:end="97:60">0</literal></expr>]</index></name><operator pos:start="97:62" pos:end="97:63">-&gt;</operator><name pos:start="97:64" pos:end="97:73">buffer_num</name></expr></argument>,

                                           <argument pos:start="99:44" pos:end="99:74"><expr pos:start="99:44" pos:end="99:74"><name pos:start="99:44" pos:end="99:61"><name pos:start="99:44" pos:end="99:50">decoder</name><operator pos:start="99:51" pos:end="99:52">-&gt;</operator><name pos:start="99:53" pos:end="99:58">output</name><index pos:start="99:59" pos:end="99:61">[<expr pos:start="99:60" pos:end="99:60"><literal type="number" pos:start="99:60" pos:end="99:60">0</literal></expr>]</index></name><operator pos:start="99:62" pos:end="99:63">-&gt;</operator><name pos:start="99:64" pos:end="99:74">buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:29">(<expr pos:start="101:9" pos:end="101:28"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:28"><name pos:start="101:10" pos:end="101:12">ctx</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:22">pool_out</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:28">pool</name></name></expr>)</condition> <block pos:start="101:31" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:18">

        <expr_stmt pos:start="103:9" pos:end="103:30"><expr pos:start="103:9" pos:end="103:29"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="103:29"><name pos:start="103:15" pos:end="103:21">AVERROR</name><argument_list pos:start="103:22" pos:end="103:29">(<argument pos:start="103:23" pos:end="103:28"><expr pos:start="103:23" pos:end="103:28"><name pos:start="103:23" pos:end="103:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="105:9" pos:end="105:18">goto <name pos:start="105:14" pos:end="105:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>



<label pos:start="115:1" pos:end="115:5"><name pos:start="115:1" pos:end="115:4">fail</name>:</label>

    <return pos:start="117:5" pos:end="117:43">return <expr pos:start="117:12" pos:end="117:42"><ternary pos:start="117:12" pos:end="117:42"><condition pos:start="117:12" pos:end="117:20"><expr pos:start="117:12" pos:end="117:18"><name pos:start="117:12" pos:end="117:14">ret</name> <operator pos:start="117:16" pos:end="117:16">&lt;</operator> <literal type="number" pos:start="117:18" pos:end="117:18">0</literal></expr> ?</condition><then pos:start="117:22" pos:end="117:24"> <expr pos:start="117:22" pos:end="117:24"><name pos:start="117:22" pos:end="117:24">ret</name></expr> </then><else pos:start="117:26" pos:end="117:42">: <expr pos:start="117:28" pos:end="117:42"><name pos:start="117:28" pos:end="117:42">AVERROR_UNKNOWN</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
