<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4481.c" pos:tabs="8"><function pos:start="1:1" pos:end="46:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:26">bdrv_all_can_snapshot</name><parameter_list pos:start="1:27" pos:end="1:59">(<parameter pos:start="1:28" pos:end="1:58"><decl pos:start="1:28" pos:end="1:58"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier><modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:58">first_bad_bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="46:1">{<block_content pos:start="5:5" pos:end="44:14">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">bool</name></type> <name pos:start="5:10" pos:end="5:11">ok</name> <init pos:start="5:13" pos:end="5:18">= <expr pos:start="5:15" pos:end="5:18"><name pos:start="5:15" pos:end="5:18">true</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:20">BdrvNextIterator</name></type> <name pos:start="9:22" pos:end="9:23">it</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="36:5">for <control pos:start="13:9" pos:end="13:55">(<init pos:start="13:10" pos:end="13:30"><expr pos:start="13:10" pos:end="13:29"><name pos:start="13:10" pos:end="13:11">bs</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:29"><name pos:start="13:15" pos:end="13:24">bdrv_first</name><argument_list pos:start="13:25" pos:end="13:29">(<argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:28">it</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:33"><name pos:start="13:32" pos:end="13:33">bs</name></expr>;</condition> <incr pos:start="13:36" pos:end="13:54"><expr pos:start="13:36" pos:end="13:54"><name pos:start="13:36" pos:end="13:37">bs</name> <operator pos:start="13:39" pos:end="13:39">=</operator> <call pos:start="13:41" pos:end="13:54"><name pos:start="13:41" pos:end="13:49">bdrv_next</name><argument_list pos:start="13:50" pos:end="13:54">(<argument pos:start="13:51" pos:end="13:53"><expr pos:start="13:51" pos:end="13:53"><operator pos:start="13:51" pos:end="13:51">&amp;</operator><name pos:start="13:52" pos:end="13:53">it</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="13:57" pos:end="36:5">{<block_content pos:start="15:9" pos:end="34:9">

        <decl_stmt pos:start="15:9" pos:end="15:51"><decl pos:start="15:9" pos:end="15:50"><type pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:18">AioContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:23">ctx</name> <init pos:start="15:25" pos:end="15:50">= <expr pos:start="15:27" pos:end="15:50"><call pos:start="15:27" pos:end="15:50"><name pos:start="15:27" pos:end="15:46">bdrv_get_aio_context</name><argument_list pos:start="15:47" pos:end="15:50">(<argument pos:start="15:48" pos:end="15:49"><expr pos:start="15:48" pos:end="15:49"><name pos:start="15:48" pos:end="15:49">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:33"><expr pos:start="19:9" pos:end="19:32"><call pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:27">aio_context_acquire</name><argument_list pos:start="19:28" pos:end="19:32">(<argument pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:59">(<expr pos:start="21:13" pos:end="21:58"><call pos:start="21:13" pos:end="21:32"><name pos:start="21:13" pos:end="21:28">bdrv_is_inserted</name><argument_list pos:start="21:29" pos:end="21:32">(<argument pos:start="21:30" pos:end="21:31"><expr pos:start="21:30" pos:end="21:31"><name pos:start="21:30" pos:end="21:31">bs</name></expr></argument>)</argument_list></call> <operator pos:start="21:34" pos:end="21:35">&amp;&amp;</operator> <operator pos:start="21:37" pos:end="21:37">!</operator><call pos:start="21:38" pos:end="21:58"><name pos:start="21:38" pos:end="21:54">bdrv_is_read_only</name><argument_list pos:start="21:55" pos:end="21:58">(<argument pos:start="21:56" pos:end="21:57"><expr pos:start="21:56" pos:end="21:57"><name pos:start="21:56" pos:end="21:57">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:61" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:39">

            <expr_stmt pos:start="23:13" pos:end="23:39"><expr pos:start="23:13" pos:end="23:38"><name pos:start="23:13" pos:end="23:14">ok</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:38"><name pos:start="23:18" pos:end="23:34">bdrv_can_snapshot</name><argument_list pos:start="23:35" pos:end="23:38">(<argument pos:start="23:36" pos:end="23:37"><expr pos:start="23:36" pos:end="23:37"><name pos:start="23:36" pos:end="23:37">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><call pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:27">aio_context_release</name><argument_list pos:start="27:28" pos:end="27:32">(<argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="34:9"><if pos:start="29:9" pos:end="34:9">if <condition pos:start="29:12" pos:end="29:16">(<expr pos:start="29:13" pos:end="29:15"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:15">ok</name></expr>)</condition> <block pos:start="29:18" pos:end="34:9">{<block_content pos:start="32:13" pos:end="32:22">


            <goto pos:start="32:13" pos:end="32:22">goto <name pos:start="32:18" pos:end="32:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



<label pos:start="40:1" pos:end="40:5"><name pos:start="40:1" pos:end="40:4">fail</name>:</label>

    <expr_stmt pos:start="42:5" pos:end="42:23"><expr pos:start="42:5" pos:end="42:22"><operator pos:start="42:5" pos:end="42:5">*</operator><name pos:start="42:6" pos:end="42:17">first_bad_bs</name> <operator pos:start="42:19" pos:end="42:19">=</operator> <name pos:start="42:21" pos:end="42:22">bs</name></expr>;</expr_stmt>

    <return pos:start="44:5" pos:end="44:14">return <expr pos:start="44:12" pos:end="44:13"><name pos:start="44:12" pos:end="44:13">ok</name></expr>;</return>

</block_content>}</block></function></unit>
