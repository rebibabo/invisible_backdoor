<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11564.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:30">ff_mpv_common_init</name><parameter_list pos:start="1:31" pos:end="1:49">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">MpegEncContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="209:1">{<block_content pos:start="5:5" pos:end="207:14">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="11:47"><decl pos:start="7:5" pos:end="11:46"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">nb_slices</name> <init pos:start="7:19" pos:end="11:46">= <expr pos:start="7:21" pos:end="11:46"><ternary pos:start="7:21" pos:end="11:46"><condition pos:start="7:21" pos:end="9:70"><expr pos:start="7:21" pos:end="9:68"><operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:33">HAVE_THREADS</name> <operator pos:start="7:35" pos:end="7:36">&amp;&amp;</operator>

                     <name pos:start="9:22" pos:end="9:49"><name pos:start="9:22" pos:end="9:22">s</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:29">avctx</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:49">active_thread_type</name></name> <operator pos:start="9:51" pos:end="9:51">&amp;</operator> <name pos:start="9:53" pos:end="9:67">FF_THREAD_SLICE</name><operator pos:start="9:68" pos:end="9:68">)</operator></expr> ?</condition><then pos:start="11:21" pos:end="11:42">

                    <expr pos:start="11:21" pos:end="11:42"><name pos:start="11:21" pos:end="11:42"><name pos:start="11:21" pos:end="11:21">s</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:28">avctx</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:42">thread_count</name></name></expr> </then><else pos:start="11:44" pos:end="11:46">: <expr pos:start="11:46" pos:end="11:46"><literal type="number" pos:start="11:46" pos:end="11:46">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:37"><if pos:start="15:5" pos:end="17:37">if <condition pos:start="15:8" pos:end="15:40">(<expr pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:19">encoding</name></name> <operator pos:start="15:21" pos:end="15:22">&amp;&amp;</operator> <name pos:start="15:24" pos:end="15:39"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:31">avctx</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:39">slices</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:37"><block_content pos:start="17:9" pos:end="17:37">

        <expr_stmt pos:start="17:9" pos:end="17:37"><expr pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:17">nb_slices</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:36"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:28">avctx</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:36">slices</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="27:45"><if pos:start="21:5" pos:end="23:49">if <condition pos:start="21:8" pos:end="21:74">(<expr pos:start="21:9" pos:end="21:73"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:19">codec_id</name></name> <operator pos:start="21:21" pos:end="21:22">==</operator> <name pos:start="21:24" pos:end="21:45">AV_CODEC_ID_MPEG2VIDEO</name> <operator pos:start="21:47" pos:end="21:48">&amp;&amp;</operator> <operator pos:start="21:50" pos:end="21:50">!</operator><name pos:start="21:51" pos:end="21:73"><name pos:start="21:51" pos:end="21:51">s</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:73">progressive_sequence</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:49"><block_content pos:start="23:9" pos:end="23:49">

        <expr_stmt pos:start="23:9" pos:end="23:49"><expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">mb_height</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <operator pos:start="23:24" pos:end="23:24">(</operator><name pos:start="23:25" pos:end="23:33"><name pos:start="23:25" pos:end="23:25">s</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:33">height</name></name> <operator pos:start="23:35" pos:end="23:35">+</operator> <literal type="number" pos:start="23:37" pos:end="23:38">31</literal><operator pos:start="23:39" pos:end="23:39">)</operator> <operator pos:start="23:41" pos:end="23:41">/</operator> <literal type="number" pos:start="23:43" pos:end="23:44">32</literal> <operator pos:start="23:46" pos:end="23:46">*</operator> <literal type="number" pos:start="23:48" pos:end="23:48">2</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="25:5" pos:end="27:45">else<block type="pseudo" pos:start="27:9" pos:end="27:45"><block_content pos:start="27:9" pos:end="27:45">

        <expr_stmt pos:start="27:9" pos:end="27:45"><expr pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:20">mb_height</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <operator pos:start="27:24" pos:end="27:24">(</operator><name pos:start="27:25" pos:end="27:33"><name pos:start="27:25" pos:end="27:25">s</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:33">height</name></name> <operator pos:start="27:35" pos:end="27:35">+</operator> <literal type="number" pos:start="27:37" pos:end="27:38">15</literal><operator pos:start="27:39" pos:end="27:39">)</operator> <operator pos:start="27:41" pos:end="27:41">/</operator> <literal type="number" pos:start="27:43" pos:end="27:44">16</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:45">(<expr pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">avctx</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:25">pix_fmt</name></name> <operator pos:start="31:27" pos:end="31:28">==</operator> <name pos:start="31:30" pos:end="31:44">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="31:47" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:18">

        <expr_stmt pos:start="33:9" pos:end="35:66"><expr pos:start="33:9" pos:end="35:65"><call pos:start="33:9" pos:end="35:65"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="35:65">(<argument pos:start="33:16" pos:end="33:23"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:23">avctx</name></name></expr></argument>, <argument pos:start="33:26" pos:end="33:37"><expr pos:start="33:26" pos:end="33:37"><name pos:start="33:26" pos:end="33:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="35:16" pos:end="35:64"><expr pos:start="35:16" pos:end="35:64"><literal type="string" pos:start="35:16" pos:end="35:64">"decoding to AV_PIX_FMT_NONE is not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="61:5"><if pos:start="43:5" pos:end="61:5">if <condition pos:start="43:8" pos:end="43:78">(<expr pos:start="43:9" pos:end="43:77"><name pos:start="43:9" pos:end="43:17">nb_slices</name> <operator pos:start="43:19" pos:end="43:19">&gt;</operator> <name pos:start="43:21" pos:end="43:31">MAX_THREADS</name> <operator pos:start="43:33" pos:end="43:34">||</operator> <operator pos:start="43:36" pos:end="43:36">(</operator><name pos:start="43:37" pos:end="43:45">nb_slices</name> <operator pos:start="43:47" pos:end="43:47">&gt;</operator> <name pos:start="43:49" pos:end="43:60"><name pos:start="43:49" pos:end="43:49">s</name><operator pos:start="43:50" pos:end="43:51">-&gt;</operator><name pos:start="43:52" pos:end="43:60">mb_height</name></name> <operator pos:start="43:62" pos:end="43:63">&amp;&amp;</operator> <name pos:start="43:65" pos:end="43:76"><name pos:start="43:65" pos:end="43:65">s</name><operator pos:start="43:66" pos:end="43:67">-&gt;</operator><name pos:start="43:68" pos:end="43:76">mb_height</name></name><operator pos:start="43:77" pos:end="43:77">)</operator></expr>)</condition> <block pos:start="43:80" pos:end="61:5">{<block_content pos:start="45:9" pos:end="59:31">

        <decl_stmt pos:start="45:9" pos:end="45:23"><decl pos:start="45:9" pos:end="45:22"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:22">max_slices</name></decl>;</decl_stmt>

        <if_stmt pos:start="47:9" pos:end="53:37"><if pos:start="47:9" pos:end="49:58">if <condition pos:start="47:12" pos:end="47:25">(<expr pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:24">mb_height</name></name></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:58"><block_content pos:start="49:13" pos:end="49:58">

            <expr_stmt pos:start="49:13" pos:end="49:58"><expr pos:start="49:13" pos:end="49:57"><name pos:start="49:13" pos:end="49:22">max_slices</name> <operator pos:start="49:24" pos:end="49:24">=</operator> <call pos:start="49:26" pos:end="49:57"><name pos:start="49:26" pos:end="49:30">FFMIN</name><argument_list pos:start="49:31" pos:end="49:57">(<argument pos:start="49:32" pos:end="49:42"><expr pos:start="49:32" pos:end="49:42"><name pos:start="49:32" pos:end="49:42">MAX_THREADS</name></expr></argument>, <argument pos:start="49:45" pos:end="49:56"><expr pos:start="49:45" pos:end="49:56"><name pos:start="49:45" pos:end="49:56"><name pos:start="49:45" pos:end="49:45">s</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:56">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="51:9" pos:end="53:37">else<block type="pseudo" pos:start="53:13" pos:end="53:37"><block_content pos:start="53:13" pos:end="53:37">

            <expr_stmt pos:start="53:13" pos:end="53:37"><expr pos:start="53:13" pos:end="53:36"><name pos:start="53:13" pos:end="53:22">max_slices</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:36">MAX_THREADS</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="57:59"><expr pos:start="55:9" pos:end="57:58"><call pos:start="55:9" pos:end="57:58"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="57:58">(<argument pos:start="55:16" pos:end="55:23"><expr pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:16">s</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:23">avctx</name></name></expr></argument>, <argument pos:start="55:26" pos:end="55:39"><expr pos:start="55:26" pos:end="55:39"><name pos:start="55:26" pos:end="55:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="55:42" pos:end="57:34"><expr pos:start="55:42" pos:end="57:34"><literal type="string" pos:start="55:42" pos:end="55:72">"too many threads/slices (%d),"</literal>

               <literal type="string" pos:start="57:16" pos:end="57:34">" reducing to %d\n"</literal></expr></argument>, <argument pos:start="57:37" pos:end="57:45"><expr pos:start="57:37" pos:end="57:45"><name pos:start="57:37" pos:end="57:45">nb_slices</name></expr></argument>, <argument pos:start="57:48" pos:end="57:57"><expr pos:start="57:48" pos:end="57:57"><name pos:start="57:48" pos:end="57:57">max_slices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:17">nb_slices</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <name pos:start="59:21" pos:end="59:30">max_slices</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="69:18"><if pos:start="65:5" pos:end="69:18">if <condition pos:start="65:8" pos:end="67:62">(<expr pos:start="65:9" pos:end="67:61"><operator pos:start="65:9" pos:end="65:9">(</operator><name pos:start="65:10" pos:end="65:17"><name pos:start="65:10" pos:end="65:10">s</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:17">width</name></name> <operator pos:start="65:19" pos:end="65:20">||</operator> <name pos:start="65:22" pos:end="65:30"><name pos:start="65:22" pos:end="65:22">s</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:30">height</name></name><operator pos:start="65:31" pos:end="65:31">)</operator> <operator pos:start="65:33" pos:end="65:34">&amp;&amp;</operator>

        <call pos:start="67:9" pos:end="67:61"><name pos:start="67:9" pos:end="67:27">av_image_check_size</name><argument_list pos:start="67:28" pos:end="67:61">(<argument pos:start="67:29" pos:end="67:36"><expr pos:start="67:29" pos:end="67:36"><name pos:start="67:29" pos:end="67:36"><name pos:start="67:29" pos:end="67:29">s</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:36">width</name></name></expr></argument>, <argument pos:start="67:39" pos:end="67:47"><expr pos:start="67:39" pos:end="67:47"><name pos:start="67:39" pos:end="67:47"><name pos:start="67:39" pos:end="67:39">s</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:47">height</name></name></expr></argument>, <argument pos:start="67:50" pos:end="67:50"><expr pos:start="67:50" pos:end="67:50"><literal type="number" pos:start="67:50" pos:end="67:50">0</literal></expr></argument>, <argument pos:start="67:53" pos:end="67:60"><expr pos:start="67:53" pos:end="67:60"><name pos:start="67:53" pos:end="67:60"><name pos:start="67:53" pos:end="67:53">s</name><operator pos:start="67:54" pos:end="67:55">-&gt;</operator><name pos:start="67:56" pos:end="67:60">avctx</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:18"><block_content pos:start="69:9" pos:end="69:18">

        <return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:16"><expr pos:start="73:5" pos:end="73:15"><call pos:start="73:5" pos:end="73:15"><name pos:start="73:5" pos:end="73:12">dct_init</name><argument_list pos:start="73:13" pos:end="73:15">(<argument pos:start="73:14" pos:end="73:14"><expr pos:start="73:14" pos:end="73:14"><name pos:start="73:14" pos:end="73:14">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:27">/* set chroma shifts */</comment>

    <expr_stmt pos:start="79:5" pos:end="83:54"><expr pos:start="79:5" pos:end="83:53"><call pos:start="79:5" pos:end="83:53"><name pos:start="79:5" pos:end="79:33">avcodec_get_chroma_sub_sample</name><argument_list pos:start="79:34" pos:end="83:53">(<argument pos:start="79:35" pos:end="79:51"><expr pos:start="79:35" pos:end="79:51"><name pos:start="79:35" pos:end="79:51"><name pos:start="79:35" pos:end="79:35">s</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:42">avctx</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:51">pix_fmt</name></name></expr></argument>,

                                  <argument pos:start="81:35" pos:end="81:52"><expr pos:start="81:35" pos:end="81:52"><operator pos:start="81:35" pos:end="81:35">&amp;</operator><name pos:start="81:36" pos:end="81:52"><name pos:start="81:36" pos:end="81:36">s</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:52">chroma_x_shift</name></name></expr></argument>,

                                  <argument pos:start="83:35" pos:end="83:52"><expr pos:start="83:35" pos:end="83:52"><operator pos:start="83:35" pos:end="83:35">&amp;</operator><name pos:start="83:36" pos:end="83:52"><name pos:start="83:36" pos:end="83:36">s</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:52">chroma_y_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="89:5" pos:end="91:65"><expr pos:start="89:5" pos:end="91:64"><call pos:start="89:5" pos:end="91:64"><name pos:start="89:5" pos:end="89:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="89:22" pos:end="91:64">(<argument pos:start="89:23" pos:end="89:30"><expr pos:start="89:23" pos:end="89:30"><name pos:start="89:23" pos:end="89:30"><name pos:start="89:23" pos:end="89:23">s</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:30">avctx</name></name></expr></argument>, <argument pos:start="89:33" pos:end="89:42"><expr pos:start="89:33" pos:end="89:42"><name pos:start="89:33" pos:end="89:42"><name pos:start="89:33" pos:end="89:33">s</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:42">picture</name></name></expr></argument>,

                      <argument pos:start="91:23" pos:end="91:57"><expr pos:start="91:23" pos:end="91:57"><name pos:start="91:23" pos:end="91:39">MAX_PICTURE_COUNT</name> <operator pos:start="91:41" pos:end="91:41">*</operator> <sizeof pos:start="91:43" pos:end="91:57">sizeof<argument_list pos:start="91:49" pos:end="91:57">(<argument pos:start="91:50" pos:end="91:56"><expr pos:start="91:50" pos:end="91:56"><name pos:start="91:50" pos:end="91:56">Picture</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="91:60" pos:end="91:63"><expr pos:start="91:60" pos:end="91:63"><name pos:start="91:60" pos:end="91:63">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="93:5" pos:end="101:5">for <control pos:start="93:9" pos:end="93:43">(<init pos:start="93:10" pos:end="93:15"><expr pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">i</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>;</init> <condition pos:start="93:17" pos:end="93:38"><expr pos:start="93:17" pos:end="93:37"><name pos:start="93:17" pos:end="93:17">i</name> <operator pos:start="93:19" pos:end="93:19">&lt;</operator> <name pos:start="93:21" pos:end="93:37">MAX_PICTURE_COUNT</name></expr>;</condition> <incr pos:start="93:40" pos:end="93:42"><expr pos:start="93:40" pos:end="93:42"><name pos:start="93:40" pos:end="93:40">i</name><operator pos:start="93:41" pos:end="93:42">++</operator></expr></incr>)</control> <block pos:start="93:45" pos:end="101:5">{<block_content pos:start="95:9" pos:end="99:22">

        <expr_stmt pos:start="95:9" pos:end="95:43"><expr pos:start="95:9" pos:end="95:42"><name pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:18">picture</name><index pos:start="95:19" pos:end="95:21">[<expr pos:start="95:20" pos:end="95:20"><name pos:start="95:20" pos:end="95:20">i</name></expr>]</index></name><operator pos:start="95:22" pos:end="95:22">.</operator><name pos:start="95:23" pos:end="95:23">f</name> <operator pos:start="95:25" pos:end="95:25">=</operator> <call pos:start="95:27" pos:end="95:42"><name pos:start="95:27" pos:end="95:40">av_frame_alloc</name><argument_list pos:start="95:41" pos:end="95:42">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="99:22"><if pos:start="97:9" pos:end="99:22">if <condition pos:start="97:12" pos:end="97:29">(<expr pos:start="97:13" pos:end="97:28"><operator pos:start="97:13" pos:end="97:13">!</operator><name pos:start="97:14" pos:end="97:26"><name pos:start="97:14" pos:end="97:14">s</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:23">picture</name><index pos:start="97:24" pos:end="97:26">[<expr pos:start="97:25" pos:end="97:25"><name pos:start="97:25" pos:end="97:25">i</name></expr>]</index></name><operator pos:start="97:27" pos:end="97:27">.</operator><name pos:start="97:28" pos:end="97:28">f</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:22"><block_content pos:start="99:13" pos:end="99:22">

            <goto pos:start="99:13" pos:end="99:22">goto <name pos:start="99:18" pos:end="99:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="103:5" pos:end="103:57"><expr pos:start="103:5" pos:end="103:56"><call pos:start="103:5" pos:end="103:56"><name pos:start="103:5" pos:end="103:10">memset</name><argument_list pos:start="103:11" pos:end="103:56">(<argument pos:start="103:12" pos:end="103:27"><expr pos:start="103:12" pos:end="103:27"><operator pos:start="103:12" pos:end="103:12">&amp;</operator><name pos:start="103:13" pos:end="103:27"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:27">next_picture</name></name></expr></argument>, <argument pos:start="103:30" pos:end="103:30"><expr pos:start="103:30" pos:end="103:30"><literal type="number" pos:start="103:30" pos:end="103:30">0</literal></expr></argument>, <argument pos:start="103:33" pos:end="103:55"><expr pos:start="103:33" pos:end="103:55"><sizeof pos:start="103:33" pos:end="103:55">sizeof<argument_list pos:start="103:39" pos:end="103:55">(<argument pos:start="103:40" pos:end="103:54"><expr pos:start="103:40" pos:end="103:54"><name pos:start="103:40" pos:end="103:54"><name pos:start="103:40" pos:end="103:40">s</name><operator pos:start="103:41" pos:end="103:42">-&gt;</operator><name pos:start="103:43" pos:end="103:54">next_picture</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:57"><expr pos:start="105:5" pos:end="105:56"><call pos:start="105:5" pos:end="105:56"><name pos:start="105:5" pos:end="105:10">memset</name><argument_list pos:start="105:11" pos:end="105:56">(<argument pos:start="105:12" pos:end="105:27"><expr pos:start="105:12" pos:end="105:27"><operator pos:start="105:12" pos:end="105:12">&amp;</operator><name pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:27">last_picture</name></name></expr></argument>, <argument pos:start="105:30" pos:end="105:30"><expr pos:start="105:30" pos:end="105:30"><literal type="number" pos:start="105:30" pos:end="105:30">0</literal></expr></argument>, <argument pos:start="105:33" pos:end="105:55"><expr pos:start="105:33" pos:end="105:55"><sizeof pos:start="105:33" pos:end="105:55">sizeof<argument_list pos:start="105:39" pos:end="105:55">(<argument pos:start="105:40" pos:end="105:54"><expr pos:start="105:40" pos:end="105:54"><name pos:start="105:40" pos:end="105:54"><name pos:start="105:40" pos:end="105:40">s</name><operator pos:start="105:41" pos:end="105:42">-&gt;</operator><name pos:start="105:43" pos:end="105:54">last_picture</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:63"><expr pos:start="107:5" pos:end="107:62"><call pos:start="107:5" pos:end="107:62"><name pos:start="107:5" pos:end="107:10">memset</name><argument_list pos:start="107:11" pos:end="107:62">(<argument pos:start="107:12" pos:end="107:30"><expr pos:start="107:12" pos:end="107:30"><operator pos:start="107:12" pos:end="107:12">&amp;</operator><name pos:start="107:13" pos:end="107:30"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:30">current_picture</name></name></expr></argument>, <argument pos:start="107:33" pos:end="107:33"><expr pos:start="107:33" pos:end="107:33"><literal type="number" pos:start="107:33" pos:end="107:33">0</literal></expr></argument>, <argument pos:start="107:36" pos:end="107:61"><expr pos:start="107:36" pos:end="107:61"><sizeof pos:start="107:36" pos:end="107:61">sizeof<argument_list pos:start="107:42" pos:end="107:61">(<argument pos:start="107:43" pos:end="107:60"><expr pos:start="107:43" pos:end="107:60"><name pos:start="107:43" pos:end="107:60"><name pos:start="107:43" pos:end="107:43">s</name><operator pos:start="107:44" pos:end="107:45">-&gt;</operator><name pos:start="107:46" pos:end="107:60">current_picture</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:55"><expr pos:start="109:5" pos:end="109:54"><call pos:start="109:5" pos:end="109:54"><name pos:start="109:5" pos:end="109:10">memset</name><argument_list pos:start="109:11" pos:end="109:54">(<argument pos:start="109:12" pos:end="109:26"><expr pos:start="109:12" pos:end="109:26"><operator pos:start="109:12" pos:end="109:12">&amp;</operator><name pos:start="109:13" pos:end="109:26"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:26">new_picture</name></name></expr></argument>, <argument pos:start="109:29" pos:end="109:29"><expr pos:start="109:29" pos:end="109:29"><literal type="number" pos:start="109:29" pos:end="109:29">0</literal></expr></argument>, <argument pos:start="109:32" pos:end="109:53"><expr pos:start="109:32" pos:end="109:53"><sizeof pos:start="109:32" pos:end="109:53">sizeof<argument_list pos:start="109:38" pos:end="109:53">(<argument pos:start="109:39" pos:end="109:52"><expr pos:start="109:39" pos:end="109:52"><name pos:start="109:39" pos:end="109:52"><name pos:start="109:39" pos:end="109:39">s</name><operator pos:start="109:40" pos:end="109:41">-&gt;</operator><name pos:start="109:42" pos:end="109:52">new_picture</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:41"><expr pos:start="111:5" pos:end="111:40"><name pos:start="111:5" pos:end="111:21"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:19">next_picture</name><operator pos:start="111:20" pos:end="111:20">.</operator><name pos:start="111:21" pos:end="111:21">f</name></name> <operator pos:start="111:23" pos:end="111:23">=</operator> <call pos:start="111:25" pos:end="111:40"><name pos:start="111:25" pos:end="111:38">av_frame_alloc</name><argument_list pos:start="111:39" pos:end="111:40">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="115:18"><if pos:start="113:5" pos:end="115:18">if <condition pos:start="113:8" pos:end="113:27">(<expr pos:start="113:9" pos:end="113:26"><operator pos:start="113:9" pos:end="113:9">!</operator><name pos:start="113:10" pos:end="113:26"><name pos:start="113:10" pos:end="113:10">s</name><operator pos:start="113:11" pos:end="113:12">-&gt;</operator><name pos:start="113:13" pos:end="113:24">next_picture</name><operator pos:start="113:25" pos:end="113:25">.</operator><name pos:start="113:26" pos:end="113:26">f</name></name></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:18"><block_content pos:start="115:9" pos:end="115:18">

        <goto pos:start="115:9" pos:end="115:18">goto <name pos:start="115:14" pos:end="115:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:41"><expr pos:start="117:5" pos:end="117:40"><name pos:start="117:5" pos:end="117:21"><name pos:start="117:5" pos:end="117:5">s</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:19">last_picture</name><operator pos:start="117:20" pos:end="117:20">.</operator><name pos:start="117:21" pos:end="117:21">f</name></name> <operator pos:start="117:23" pos:end="117:23">=</operator> <call pos:start="117:25" pos:end="117:40"><name pos:start="117:25" pos:end="117:38">av_frame_alloc</name><argument_list pos:start="117:39" pos:end="117:40">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="121:18"><if pos:start="119:5" pos:end="121:18">if <condition pos:start="119:8" pos:end="119:27">(<expr pos:start="119:9" pos:end="119:26"><operator pos:start="119:9" pos:end="119:9">!</operator><name pos:start="119:10" pos:end="119:26"><name pos:start="119:10" pos:end="119:10">s</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:24">last_picture</name><operator pos:start="119:25" pos:end="119:25">.</operator><name pos:start="119:26" pos:end="119:26">f</name></name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:18"><block_content pos:start="121:9" pos:end="121:18">

        <goto pos:start="121:9" pos:end="121:18">goto <name pos:start="121:14" pos:end="121:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:44"><expr pos:start="123:5" pos:end="123:43"><name pos:start="123:5" pos:end="123:24"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:22">current_picture</name><operator pos:start="123:23" pos:end="123:23">.</operator><name pos:start="123:24" pos:end="123:24">f</name></name> <operator pos:start="123:26" pos:end="123:26">=</operator> <call pos:start="123:28" pos:end="123:43"><name pos:start="123:28" pos:end="123:41">av_frame_alloc</name><argument_list pos:start="123:42" pos:end="123:43">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="127:18"><if pos:start="125:5" pos:end="127:18">if <condition pos:start="125:8" pos:end="125:30">(<expr pos:start="125:9" pos:end="125:29"><operator pos:start="125:9" pos:end="125:9">!</operator><name pos:start="125:10" pos:end="125:29"><name pos:start="125:10" pos:end="125:10">s</name><operator pos:start="125:11" pos:end="125:12">-&gt;</operator><name pos:start="125:13" pos:end="125:27">current_picture</name><operator pos:start="125:28" pos:end="125:28">.</operator><name pos:start="125:29" pos:end="125:29">f</name></name></expr>)</condition><block type="pseudo" pos:start="127:9" pos:end="127:18"><block_content pos:start="127:9" pos:end="127:18">

        <goto pos:start="127:9" pos:end="127:18">goto <name pos:start="127:14" pos:end="127:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:40"><expr pos:start="129:5" pos:end="129:39"><name pos:start="129:5" pos:end="129:20"><name pos:start="129:5" pos:end="129:5">s</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:18">new_picture</name><operator pos:start="129:19" pos:end="129:19">.</operator><name pos:start="129:20" pos:end="129:20">f</name></name> <operator pos:start="129:22" pos:end="129:22">=</operator> <call pos:start="129:24" pos:end="129:39"><name pos:start="129:24" pos:end="129:37">av_frame_alloc</name><argument_list pos:start="129:38" pos:end="129:39">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="133:18"><if pos:start="131:5" pos:end="133:18">if <condition pos:start="131:8" pos:end="131:26">(<expr pos:start="131:9" pos:end="131:25"><operator pos:start="131:9" pos:end="131:9">!</operator><name pos:start="131:10" pos:end="131:25"><name pos:start="131:10" pos:end="131:10">s</name><operator pos:start="131:11" pos:end="131:12">-&gt;</operator><name pos:start="131:13" pos:end="131:23">new_picture</name><operator pos:start="131:24" pos:end="131:24">.</operator><name pos:start="131:25" pos:end="131:25">f</name></name></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:18"><block_content pos:start="133:9" pos:end="133:18">

        <goto pos:start="133:9" pos:end="133:18">goto <name pos:start="133:14" pos:end="133:17">fail</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="137:9" pos:end="139:22"><if pos:start="137:9" pos:end="139:22">if <condition pos:start="137:12" pos:end="137:34">(<expr pos:start="137:13" pos:end="137:33"><call pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:30">init_context_frame</name><argument_list pos:start="137:31" pos:end="137:33">(<argument pos:start="137:32" pos:end="137:32"><expr pos:start="137:32" pos:end="137:32"><name pos:start="137:32" pos:end="137:32">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:22"><block_content pos:start="139:13" pos:end="139:22">

            <goto pos:start="139:13" pos:end="139:22">goto <name pos:start="139:18" pos:end="139:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:36"><expr pos:start="143:9" pos:end="143:35"><name pos:start="143:9" pos:end="143:30"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:24">parse_context</name><operator pos:start="143:25" pos:end="143:25">.</operator><name pos:start="143:26" pos:end="143:30">state</name></name> <operator pos:start="143:32" pos:end="143:32">=</operator> <operator pos:start="143:34" pos:end="143:34">-</operator><literal type="number" pos:start="143:35" pos:end="143:35">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:35"><expr pos:start="147:9" pos:end="147:34"><name pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:30">context_initialized</name></name> <operator pos:start="147:32" pos:end="147:32">=</operator> <literal type="number" pos:start="147:34" pos:end="147:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:35"><expr pos:start="149:9" pos:end="149:34"><name pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:25">thread_context</name><index pos:start="149:26" pos:end="149:28">[<expr pos:start="149:27" pos:end="149:27"><literal type="number" pos:start="149:27" pos:end="149:27">0</literal></expr>]</index></name>   <operator pos:start="149:32" pos:end="149:32">=</operator> <name pos:start="149:34" pos:end="149:34">s</name></expr>;</expr_stmt>



<comment type="line" pos:start="153:1" pos:end="153:35">//     if (s-&gt;width &amp;&amp; s-&gt;height) {</comment>

        <if_stmt pos:start="155:9" pos:end="193:9"><if pos:start="155:9" pos:end="183:9">if <condition pos:start="155:12" pos:end="155:26">(<expr pos:start="155:13" pos:end="155:25"><name pos:start="155:13" pos:end="155:21">nb_slices</name> <operator pos:start="155:23" pos:end="155:23">&gt;</operator> <literal type="number" pos:start="155:25" pos:end="155:25">1</literal></expr>)</condition> <block pos:start="155:28" pos:end="183:9">{<block_content pos:start="157:13" pos:end="181:13">

            <for pos:start="157:13" pos:end="163:13">for <control pos:start="157:17" pos:end="157:43">(<init pos:start="157:18" pos:end="157:23"><expr pos:start="157:18" pos:end="157:22"><name pos:start="157:18" pos:end="157:18">i</name> <operator pos:start="157:20" pos:end="157:20">=</operator> <literal type="number" pos:start="157:22" pos:end="157:22">1</literal></expr>;</init> <condition pos:start="157:25" pos:end="157:38"><expr pos:start="157:25" pos:end="157:37"><name pos:start="157:25" pos:end="157:25">i</name> <operator pos:start="157:27" pos:end="157:27">&lt;</operator> <name pos:start="157:29" pos:end="157:37">nb_slices</name></expr>;</condition> <incr pos:start="157:40" pos:end="157:42"><expr pos:start="157:40" pos:end="157:42"><name pos:start="157:40" pos:end="157:40">i</name><operator pos:start="157:41" pos:end="157:42">++</operator></expr></incr>)</control> <block pos:start="157:45" pos:end="163:13">{<block_content pos:start="159:17" pos:end="161:72">

                <expr_stmt pos:start="159:17" pos:end="159:73"><expr pos:start="159:17" pos:end="159:72"><name pos:start="159:17" pos:end="159:36"><name pos:start="159:17" pos:end="159:17">s</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:33">thread_context</name><index pos:start="159:34" pos:end="159:36">[<expr pos:start="159:35" pos:end="159:35"><name pos:start="159:35" pos:end="159:35">i</name></expr>]</index></name> <operator pos:start="159:38" pos:end="159:38">=</operator> <call pos:start="159:40" pos:end="159:72"><name pos:start="159:40" pos:end="159:48">av_malloc</name><argument_list pos:start="159:49" pos:end="159:72">(<argument pos:start="159:50" pos:end="159:71"><expr pos:start="159:50" pos:end="159:71"><sizeof pos:start="159:50" pos:end="159:71">sizeof<argument_list pos:start="159:56" pos:end="159:71">(<argument pos:start="159:57" pos:end="159:70"><expr pos:start="159:57" pos:end="159:70"><name pos:start="159:57" pos:end="159:70">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:72"><expr pos:start="161:17" pos:end="161:71"><call pos:start="161:17" pos:end="161:71"><name pos:start="161:17" pos:end="161:22">memcpy</name><argument_list pos:start="161:23" pos:end="161:71">(<argument pos:start="161:24" pos:end="161:43"><expr pos:start="161:24" pos:end="161:43"><name pos:start="161:24" pos:end="161:43"><name pos:start="161:24" pos:end="161:24">s</name><operator pos:start="161:25" pos:end="161:26">-&gt;</operator><name pos:start="161:27" pos:end="161:40">thread_context</name><index pos:start="161:41" pos:end="161:43">[<expr pos:start="161:42" pos:end="161:42"><name pos:start="161:42" pos:end="161:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="161:46" pos:end="161:46"><expr pos:start="161:46" pos:end="161:46"><name pos:start="161:46" pos:end="161:46">s</name></expr></argument>, <argument pos:start="161:49" pos:end="161:70"><expr pos:start="161:49" pos:end="161:70"><sizeof pos:start="161:49" pos:end="161:70">sizeof<argument_list pos:start="161:55" pos:end="161:70">(<argument pos:start="161:56" pos:end="161:69"><expr pos:start="161:56" pos:end="161:69"><name pos:start="161:56" pos:end="161:69">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <for pos:start="167:13" pos:end="181:13">for <control pos:start="167:17" pos:end="167:43">(<init pos:start="167:18" pos:end="167:23"><expr pos:start="167:18" pos:end="167:22"><name pos:start="167:18" pos:end="167:18">i</name> <operator pos:start="167:20" pos:end="167:20">=</operator> <literal type="number" pos:start="167:22" pos:end="167:22">0</literal></expr>;</init> <condition pos:start="167:25" pos:end="167:38"><expr pos:start="167:25" pos:end="167:37"><name pos:start="167:25" pos:end="167:25">i</name> <operator pos:start="167:27" pos:end="167:27">&lt;</operator> <name pos:start="167:29" pos:end="167:37">nb_slices</name></expr>;</condition> <incr pos:start="167:40" pos:end="167:42"><expr pos:start="167:40" pos:end="167:42"><name pos:start="167:40" pos:end="167:40">i</name><operator pos:start="167:41" pos:end="167:42">++</operator></expr></incr>)</control> <block pos:start="167:45" pos:end="181:13">{<block_content pos:start="169:17" pos:end="179:77">

                <if_stmt pos:start="169:17" pos:end="171:30"><if pos:start="169:17" pos:end="171:30">if <condition pos:start="169:20" pos:end="169:69">(<expr pos:start="169:21" pos:end="169:68"><call pos:start="169:21" pos:end="169:64"><name pos:start="169:21" pos:end="169:42">init_duplicate_context</name><argument_list pos:start="169:43" pos:end="169:64">(<argument pos:start="169:44" pos:end="169:63"><expr pos:start="169:44" pos:end="169:63"><name pos:start="169:44" pos:end="169:63"><name pos:start="169:44" pos:end="169:44">s</name><operator pos:start="169:45" pos:end="169:46">-&gt;</operator><name pos:start="169:47" pos:end="169:60">thread_context</name><index pos:start="169:61" pos:end="169:63">[<expr pos:start="169:62" pos:end="169:62"><name pos:start="169:62" pos:end="169:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="169:66" pos:end="169:66">&lt;</operator> <literal type="number" pos:start="169:68" pos:end="169:68">0</literal></expr>)</condition><block type="pseudo" pos:start="171:21" pos:end="171:30"><block_content pos:start="171:21" pos:end="171:30">

                    <goto pos:start="171:21" pos:end="171:30">goto <name pos:start="171:26" pos:end="171:29">fail</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="173:21" pos:end="175:73"><expr pos:start="173:21" pos:end="175:72"><name pos:start="173:21" pos:end="173:40"><name pos:start="173:21" pos:end="173:21">s</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:37">thread_context</name><index pos:start="173:38" pos:end="173:40">[<expr pos:start="173:39" pos:end="173:39"><name pos:start="173:39" pos:end="173:39">i</name></expr>]</index></name><operator pos:start="173:41" pos:end="173:42">-&gt;</operator><name pos:start="173:43" pos:end="173:52">start_mb_y</name> <operator pos:start="173:54" pos:end="173:54">=</operator>

                        <operator pos:start="175:25" pos:end="175:25">(</operator><name pos:start="175:26" pos:end="175:37"><name pos:start="175:26" pos:end="175:26">s</name><operator pos:start="175:27" pos:end="175:28">-&gt;</operator><name pos:start="175:29" pos:end="175:37">mb_height</name></name> <operator pos:start="175:39" pos:end="175:39">*</operator> <operator pos:start="175:41" pos:end="175:41">(</operator><name pos:start="175:42" pos:end="175:42">i</name><operator pos:start="175:43" pos:end="175:43">)</operator> <operator pos:start="175:45" pos:end="175:45">+</operator> <name pos:start="175:47" pos:end="175:55">nb_slices</name> <operator pos:start="175:57" pos:end="175:57">/</operator> <literal type="number" pos:start="175:59" pos:end="175:59">2</literal><operator pos:start="175:60" pos:end="175:60">)</operator> <operator pos:start="175:62" pos:end="175:62">/</operator> <name pos:start="175:64" pos:end="175:72">nb_slices</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="177:21" pos:end="179:77"><expr pos:start="177:21" pos:end="179:76"><name pos:start="177:21" pos:end="177:40"><name pos:start="177:21" pos:end="177:21">s</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:37">thread_context</name><index pos:start="177:38" pos:end="177:40">[<expr pos:start="177:39" pos:end="177:39"><name pos:start="177:39" pos:end="177:39">i</name></expr>]</index></name><operator pos:start="177:41" pos:end="177:42">-&gt;</operator><name pos:start="177:43" pos:end="177:50">end_mb_y</name>   <operator pos:start="177:54" pos:end="177:54">=</operator>

                        <operator pos:start="179:25" pos:end="179:25">(</operator><name pos:start="179:26" pos:end="179:37"><name pos:start="179:26" pos:end="179:26">s</name><operator pos:start="179:27" pos:end="179:28">-&gt;</operator><name pos:start="179:29" pos:end="179:37">mb_height</name></name> <operator pos:start="179:39" pos:end="179:39">*</operator> <operator pos:start="179:41" pos:end="179:41">(</operator><name pos:start="179:42" pos:end="179:42">i</name> <operator pos:start="179:44" pos:end="179:44">+</operator> <literal type="number" pos:start="179:46" pos:end="179:46">1</literal><operator pos:start="179:47" pos:end="179:47">)</operator> <operator pos:start="179:49" pos:end="179:49">+</operator> <name pos:start="179:51" pos:end="179:59">nb_slices</name> <operator pos:start="179:61" pos:end="179:61">/</operator> <literal type="number" pos:start="179:63" pos:end="179:63">2</literal><operator pos:start="179:64" pos:end="179:64">)</operator> <operator pos:start="179:66" pos:end="179:66">/</operator> <name pos:start="179:68" pos:end="179:76">nb_slices</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="183:11" pos:end="193:9">else <block pos:start="183:16" pos:end="193:9">{<block_content pos:start="185:13" pos:end="191:41">

            <if_stmt pos:start="185:13" pos:end="187:26"><if pos:start="185:13" pos:end="187:26">if <condition pos:start="185:16" pos:end="185:46">(<expr pos:start="185:17" pos:end="185:45"><call pos:start="185:17" pos:end="185:41"><name pos:start="185:17" pos:end="185:38">init_duplicate_context</name><argument_list pos:start="185:39" pos:end="185:41">(<argument pos:start="185:40" pos:end="185:40"><expr pos:start="185:40" pos:end="185:40"><name pos:start="185:40" pos:end="185:40">s</name></expr></argument>)</argument_list></call> <operator pos:start="185:43" pos:end="185:43">&lt;</operator> <literal type="number" pos:start="185:45" pos:end="185:45">0</literal></expr>)</condition><block type="pseudo" pos:start="187:17" pos:end="187:26"><block_content pos:start="187:17" pos:end="187:26">

                <goto pos:start="187:17" pos:end="187:26">goto <name pos:start="187:22" pos:end="187:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:30"><expr pos:start="189:13" pos:end="189:29"><name pos:start="189:13" pos:end="189:25"><name pos:start="189:13" pos:end="189:13">s</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:25">start_mb_y</name></name> <operator pos:start="189:27" pos:end="189:27">=</operator> <literal type="number" pos:start="189:29" pos:end="189:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:41"><expr pos:start="191:13" pos:end="191:40"><name pos:start="191:13" pos:end="191:23"><name pos:start="191:13" pos:end="191:13">s</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:23">end_mb_y</name></name>   <operator pos:start="191:27" pos:end="191:27">=</operator> <name pos:start="191:29" pos:end="191:40"><name pos:start="191:29" pos:end="191:29">s</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:40">mb_height</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:43"><expr pos:start="195:9" pos:end="195:42"><name pos:start="195:9" pos:end="195:30"><name pos:start="195:9" pos:end="195:9">s</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:30">slice_context_count</name></name> <operator pos:start="195:32" pos:end="195:32">=</operator> <name pos:start="195:34" pos:end="195:42">nb_slices</name></expr>;</expr_stmt>

<comment type="line" pos:start="197:1" pos:end="197:8">//     }</comment>



    <return pos:start="201:5" pos:end="201:13">return <expr pos:start="201:12" pos:end="201:12"><literal type="number" pos:start="201:12" pos:end="201:12">0</literal></expr>;</return>

 <label pos:start="203:2" pos:end="203:6"><name pos:start="203:2" pos:end="203:5">fail</name>:</label>

    <expr_stmt pos:start="205:5" pos:end="205:25"><expr pos:start="205:5" pos:end="205:24"><call pos:start="205:5" pos:end="205:24"><name pos:start="205:5" pos:end="205:21">ff_mpv_common_end</name><argument_list pos:start="205:22" pos:end="205:24">(<argument pos:start="205:23" pos:end="205:23"><expr pos:start="205:23" pos:end="205:23"><name pos:start="205:23" pos:end="205:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="207:5" pos:end="207:14">return <expr pos:start="207:12" pos:end="207:13"><operator pos:start="207:12" pos:end="207:12">-</operator><literal type="number" pos:start="207:13" pos:end="207:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
