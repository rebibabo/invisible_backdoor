<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5257.c" pos:tabs="8"><function pos:start="1:1" pos:end="1151:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:30">ff_MPV_encode_init</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1151:1">{<block_content pos:start="5:5" pos:end="1149:27">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><call pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:23">MPV_encode_defaults</name><argument_list pos:start="11:24" pos:end="11:26">(<argument pos:start="11:25" pos:end="11:25"><expr pos:start="11:25" pos:end="11:25"><name pos:start="11:25" pos:end="11:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="15:5" pos:end="63:5">switch <condition pos:start="15:12" pos:end="15:28">(<expr pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:17">avctx</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:27">codec_id</name></name></expr>)</condition> <block pos:start="15:30" pos:end="63:5">{<block_content pos:start="17:5" pos:end="61:9">

    <case pos:start="17:5" pos:end="17:32">case <expr pos:start="17:10" pos:end="17:31"><name pos:start="17:10" pos:end="17:31">AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <if_stmt pos:start="19:9" pos:end="29:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="21:49">(<expr pos:start="19:13" pos:end="21:48"><name pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:17">avctx</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:26">pix_fmt</name></name> <operator pos:start="19:28" pos:end="19:29">!=</operator> <name pos:start="19:31" pos:end="19:48">AV_PIX_FMT_YUV420P</name> <operator pos:start="19:50" pos:end="19:51">&amp;&amp;</operator>

            <name pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:17">avctx</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:26">pix_fmt</name></name> <operator pos:start="21:28" pos:end="21:29">!=</operator> <name pos:start="21:31" pos:end="21:48">AV_PIX_FMT_YUV422P</name></expr>)</condition> <block pos:start="21:51" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:22">

            <expr_stmt pos:start="23:13" pos:end="25:61"><expr pos:start="23:13" pos:end="25:60"><call pos:start="23:13" pos:end="25:60"><name pos:start="23:13" pos:end="23:18">av_log</name><argument_list pos:start="23:19" pos:end="25:60">(<argument pos:start="23:20" pos:end="23:24"><expr pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:24">avctx</name></expr></argument>, <argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="25:20" pos:end="25:59"><expr pos:start="25:20" pos:end="25:59"><literal type="string" pos:start="25:20" pos:end="25:59">"only YUV420 and YUV422 are supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:22">return <expr pos:start="27:20" pos:end="27:21"><operator pos:start="27:20" pos:end="27:20">-</operator><literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:27">case <expr pos:start="33:10" pos:end="33:26"><name pos:start="33:10" pos:end="33:26">AV_CODEC_ID_MJPEG</name></expr>:</case>

        <if_stmt pos:start="35:9" pos:end="49:9"><if pos:start="35:9" pos:end="49:9">if <condition pos:start="35:12" pos:end="43:70">(<expr pos:start="35:13" pos:end="43:69"><name pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:17">avctx</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:26">pix_fmt</name></name> <operator pos:start="35:28" pos:end="35:29">!=</operator> <name pos:start="35:31" pos:end="35:49">AV_PIX_FMT_YUVJ420P</name> <operator pos:start="35:51" pos:end="35:52">&amp;&amp;</operator>

            <name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:17">avctx</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:26">pix_fmt</name></name> <operator pos:start="37:28" pos:end="37:29">!=</operator> <name pos:start="37:31" pos:end="37:49">AV_PIX_FMT_YUVJ422P</name> <operator pos:start="37:51" pos:end="37:52">&amp;&amp;</operator>

            <operator pos:start="39:13" pos:end="39:13">(</operator><operator pos:start="39:14" pos:end="39:14">(</operator><name pos:start="39:15" pos:end="39:28"><name pos:start="39:15" pos:end="39:19">avctx</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:28">pix_fmt</name></name> <operator pos:start="39:30" pos:end="39:31">!=</operator> <name pos:start="39:33" pos:end="39:50">AV_PIX_FMT_YUV420P</name> <operator pos:start="39:52" pos:end="39:53">&amp;&amp;</operator>

              <name pos:start="41:15" pos:end="41:28"><name pos:start="41:15" pos:end="41:19">avctx</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:28">pix_fmt</name></name> <operator pos:start="41:30" pos:end="41:31">!=</operator> <name pos:start="41:33" pos:end="41:50">AV_PIX_FMT_YUV422P</name><operator pos:start="41:51" pos:end="41:51">)</operator> <operator pos:start="41:53" pos:end="41:54">||</operator>

             <name pos:start="43:14" pos:end="43:41"><name pos:start="43:14" pos:end="43:18">avctx</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:41">strict_std_compliance</name></name> <operator pos:start="43:43" pos:end="43:43">&gt;</operator> <name pos:start="43:45" pos:end="43:68">FF_COMPLIANCE_UNOFFICIAL</name><operator pos:start="43:69" pos:end="43:69">)</operator></expr>)</condition> <block pos:start="43:72" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:22">

            <expr_stmt pos:start="45:13" pos:end="45:78"><expr pos:start="45:13" pos:end="45:77"><call pos:start="45:13" pos:end="45:77"><name pos:start="45:13" pos:end="45:18">av_log</name><argument_list pos:start="45:19" pos:end="45:77">(<argument pos:start="45:20" pos:end="45:24"><expr pos:start="45:20" pos:end="45:24"><name pos:start="45:20" pos:end="45:24">avctx</name></expr></argument>, <argument pos:start="45:27" pos:end="45:38"><expr pos:start="45:27" pos:end="45:38"><name pos:start="45:27" pos:end="45:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:41" pos:end="45:76"><expr pos:start="45:41" pos:end="45:76"><literal type="string" pos:start="45:41" pos:end="45:76">"colorspace not supported in jpeg\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:22">return <expr pos:start="47:20" pos:end="47:21"><operator pos:start="47:20" pos:end="47:20">-</operator><literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <default pos:start="53:5" pos:end="53:12">default:</default>

        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:49">(<expr pos:start="55:13" pos:end="55:48"><name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:17">avctx</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:26">pix_fmt</name></name> <operator pos:start="55:28" pos:end="55:29">!=</operator> <name pos:start="55:31" pos:end="55:48">AV_PIX_FMT_YUV420P</name></expr>)</condition> <block pos:start="55:51" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:22">

            <expr_stmt pos:start="57:13" pos:end="57:70"><expr pos:start="57:13" pos:end="57:69"><call pos:start="57:13" pos:end="57:69"><name pos:start="57:13" pos:end="57:18">av_log</name><argument_list pos:start="57:19" pos:end="57:69">(<argument pos:start="57:20" pos:end="57:24"><expr pos:start="57:20" pos:end="57:24"><name pos:start="57:20" pos:end="57:24">avctx</name></expr></argument>, <argument pos:start="57:27" pos:end="57:38"><expr pos:start="57:27" pos:end="57:38"><name pos:start="57:27" pos:end="57:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:41" pos:end="57:68"><expr pos:start="57:41" pos:end="57:68"><literal type="string" pos:start="57:41" pos:end="57:68">"only YUV420 is supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:22">return <expr pos:start="59:20" pos:end="59:21"><operator pos:start="59:20" pos:end="59:20">-</operator><literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></switch>



    <switch pos:start="67:5" pos:end="87:5">switch <condition pos:start="67:12" pos:end="67:27">(<expr pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:17">avctx</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:26">pix_fmt</name></name></expr>)</condition> <block pos:start="67:29" pos:end="87:5">{<block_content pos:start="69:5" pos:end="85:14">

    <case pos:start="69:5" pos:end="69:29">case <expr pos:start="69:10" pos:end="69:28"><name pos:start="69:10" pos:end="69:28">AV_PIX_FMT_YUVJ422P</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:28">case <expr pos:start="71:10" pos:end="71:27"><name pos:start="71:10" pos:end="71:27">AV_PIX_FMT_YUV422P</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:24">chroma_format</name></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:37">CHROMA_422</name></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:29">case <expr pos:start="77:10" pos:end="77:28"><name pos:start="77:10" pos:end="77:28">AV_PIX_FMT_YUVJ420P</name></expr>:</case>

    <case pos:start="79:5" pos:end="79:28">case <expr pos:start="79:10" pos:end="79:27"><name pos:start="79:10" pos:end="79:27">AV_PIX_FMT_YUV420P</name></expr>:</case>

    <default pos:start="81:5" pos:end="81:12">default:</default>

        <expr_stmt pos:start="83:9" pos:end="83:38"><expr pos:start="83:9" pos:end="83:37"><name pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:24">chroma_format</name></name> <operator pos:start="83:26" pos:end="83:26">=</operator> <name pos:start="83:28" pos:end="83:37">CHROMA_420</name></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="91:5" pos:end="91:34"><expr pos:start="91:5" pos:end="91:33"><name pos:start="91:5" pos:end="91:15"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:15">bit_rate</name></name> <operator pos:start="91:17" pos:end="91:17">=</operator> <name pos:start="91:19" pos:end="91:33"><name pos:start="91:19" pos:end="91:23">avctx</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:33">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:31"><expr pos:start="93:5" pos:end="93:30"><name pos:start="93:5" pos:end="93:12"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:12">width</name></name>    <operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:30"><name pos:start="93:19" pos:end="93:23">avctx</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:30">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:32"><expr pos:start="95:5" pos:end="95:31"><name pos:start="95:5" pos:end="95:13"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:13">height</name></name>   <operator pos:start="95:17" pos:end="95:17">=</operator> <name pos:start="95:19" pos:end="95:31"><name pos:start="95:19" pos:end="95:23">avctx</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:31">height</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="107:5"><if pos:start="97:5" pos:end="107:5">if <condition pos:start="97:8" pos:end="99:66">(<expr pos:start="97:9" pos:end="99:65"><name pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:13">avctx</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:23">gop_size</name></name> <operator pos:start="97:25" pos:end="97:25">&gt;</operator> <literal type="number" pos:start="97:27" pos:end="97:29">600</literal> <operator pos:start="97:31" pos:end="97:32">&amp;&amp;</operator>

        <name pos:start="99:9" pos:end="99:36"><name pos:start="99:9" pos:end="99:13">avctx</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:36">strict_std_compliance</name></name> <operator pos:start="99:38" pos:end="99:38">&gt;</operator> <name pos:start="99:40" pos:end="99:65">FF_COMPLIANCE_EXPERIMENTAL</name></expr>)</condition> <block pos:start="99:68" pos:end="107:5">{<block_content pos:start="101:9" pos:end="105:30">

        <expr_stmt pos:start="101:9" pos:end="103:73"><expr pos:start="101:9" pos:end="103:72"><call pos:start="101:9" pos:end="103:72"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="103:72">(<argument pos:start="101:16" pos:end="101:20"><expr pos:start="101:16" pos:end="101:20"><name pos:start="101:16" pos:end="101:20">avctx</name></expr></argument>, <argument pos:start="101:23" pos:end="101:34"><expr pos:start="101:23" pos:end="101:34"><name pos:start="101:23" pos:end="101:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="103:16" pos:end="103:71"><expr pos:start="103:16" pos:end="103:71"><literal type="string" pos:start="103:16" pos:end="103:71">"Warning keyframe interval too large! reducing it ...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:30"><expr pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:23"><name pos:start="105:9" pos:end="105:13">avctx</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:23">gop_size</name></name> <operator pos:start="105:25" pos:end="105:25">=</operator> <literal type="number" pos:start="105:27" pos:end="105:29">600</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:38"><expr pos:start="109:5" pos:end="109:37"><name pos:start="109:5" pos:end="109:15"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:15">gop_size</name></name>     <operator pos:start="109:21" pos:end="109:21">=</operator> <name pos:start="109:23" pos:end="109:37"><name pos:start="109:23" pos:end="109:27">avctx</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:37">gop_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:28"><expr pos:start="111:5" pos:end="111:27"><name pos:start="111:5" pos:end="111:12"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:12">avctx</name></name>        <operator pos:start="111:21" pos:end="111:21">=</operator> <name pos:start="111:23" pos:end="111:27">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:35"><expr pos:start="113:5" pos:end="113:34"><name pos:start="113:5" pos:end="113:12"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:12">flags</name></name>        <operator pos:start="113:21" pos:end="113:21">=</operator> <name pos:start="113:23" pos:end="113:34"><name pos:start="113:23" pos:end="113:27">avctx</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:34">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:36"><expr pos:start="115:5" pos:end="115:35"><name pos:start="115:5" pos:end="115:13"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:13">flags2</name></name>       <operator pos:start="115:21" pos:end="115:21">=</operator> <name pos:start="115:23" pos:end="115:35"><name pos:start="115:23" pos:end="115:27">avctx</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:35">flags2</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="123:5"><if pos:start="117:5" pos:end="123:5">if <condition pos:start="117:8" pos:end="117:43">(<expr pos:start="117:9" pos:end="117:42"><name pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:13">avctx</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:27">max_b_frames</name></name> <operator pos:start="117:29" pos:end="117:29">&gt;</operator> <name pos:start="117:31" pos:end="117:42">MAX_B_FRAMES</name></expr>)</condition> <block pos:start="117:45" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:41">

        <expr_stmt pos:start="119:9" pos:end="121:41"><expr pos:start="119:9" pos:end="121:40"><call pos:start="119:9" pos:end="121:40"><name pos:start="119:9" pos:end="119:14">av_log</name><argument_list pos:start="119:15" pos:end="121:40">(<argument pos:start="119:16" pos:end="119:20"><expr pos:start="119:16" pos:end="119:20"><name pos:start="119:16" pos:end="119:20">avctx</name></expr></argument>, <argument pos:start="119:23" pos:end="119:34"><expr pos:start="119:23" pos:end="119:34"><name pos:start="119:23" pos:end="119:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:37" pos:end="121:25"><expr pos:start="119:37" pos:end="121:25"><literal type="string" pos:start="119:37" pos:end="119:75">"Too many B-frames requested, maximum "</literal>

               <literal type="string" pos:start="121:16" pos:end="121:25">"is %d.\n"</literal></expr></argument>, <argument pos:start="121:28" pos:end="121:39"><expr pos:start="121:28" pos:end="121:39"><name pos:start="121:28" pos:end="121:39">MAX_B_FRAMES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:42"><expr pos:start="125:5" pos:end="125:41"><name pos:start="125:5" pos:end="125:19"><name pos:start="125:5" pos:end="125:5">s</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:19">max_b_frames</name></name> <operator pos:start="125:21" pos:end="125:21">=</operator> <name pos:start="125:23" pos:end="125:41"><name pos:start="125:23" pos:end="125:27">avctx</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:41">max_b_frames</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:39"><expr pos:start="127:5" pos:end="127:38"><name pos:start="127:5" pos:end="127:15"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:15">codec_id</name></name>     <operator pos:start="127:21" pos:end="127:21">=</operator> <name pos:start="127:23" pos:end="127:38"><name pos:start="127:23" pos:end="127:27">avctx</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:34">codec</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:38">id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:60"><expr pos:start="129:5" pos:end="129:59"><name pos:start="129:5" pos:end="129:28"><name pos:start="129:5" pos:end="129:5">s</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:28">strict_std_compliance</name></name> <operator pos:start="129:30" pos:end="129:30">=</operator> <name pos:start="129:32" pos:end="129:59"><name pos:start="129:32" pos:end="129:36">avctx</name><operator pos:start="129:37" pos:end="129:38">-&gt;</operator><name pos:start="129:39" pos:end="129:59">strict_std_compliance</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:66"><expr pos:start="131:5" pos:end="131:65"><name pos:start="131:5" pos:end="131:21"><name pos:start="131:5" pos:end="131:5">s</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:21">quarter_sample</name></name>     <operator pos:start="131:27" pos:end="131:27">=</operator> <operator pos:start="131:29" pos:end="131:29">(</operator><name pos:start="131:30" pos:end="131:41"><name pos:start="131:30" pos:end="131:34">avctx</name><operator pos:start="131:35" pos:end="131:36">-&gt;</operator><name pos:start="131:37" pos:end="131:41">flags</name></name> <operator pos:start="131:43" pos:end="131:43">&amp;</operator> <name pos:start="131:45" pos:end="131:59">CODEC_FLAG_QPEL</name><operator pos:start="131:60" pos:end="131:60">)</operator> <operator pos:start="131:62" pos:end="131:63">!=</operator> <literal type="number" pos:start="131:65" pos:end="131:65">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:46"><expr pos:start="133:5" pos:end="133:45"><name pos:start="133:5" pos:end="133:17"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:17">mpeg_quant</name></name>         <operator pos:start="133:27" pos:end="133:27">=</operator> <name pos:start="133:29" pos:end="133:45"><name pos:start="133:29" pos:end="133:33">avctx</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:45">mpeg_quant</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:54"><expr pos:start="135:5" pos:end="135:53"><name pos:start="135:5" pos:end="135:15"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:15">rtp_mode</name></name>           <operator pos:start="135:27" pos:end="135:27">=</operator> <operator pos:start="135:29" pos:end="135:29">!</operator><operator pos:start="135:30" pos:end="135:30">!</operator><name pos:start="135:31" pos:end="135:53"><name pos:start="135:31" pos:end="135:35">avctx</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:53">rtp_payload_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:54"><expr pos:start="137:5" pos:end="137:53"><name pos:start="137:5" pos:end="137:25"><name pos:start="137:5" pos:end="137:5">s</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:25">intra_dc_precision</name></name> <operator pos:start="137:27" pos:end="137:27">=</operator> <name pos:start="137:29" pos:end="137:53"><name pos:start="137:29" pos:end="137:33">avctx</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:53">intra_dc_precision</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:43"><expr pos:start="139:5" pos:end="139:42"><name pos:start="139:5" pos:end="139:25"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:25">user_specified_pts</name></name> <operator pos:start="139:27" pos:end="139:27">=</operator> <name pos:start="139:29" pos:end="139:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <if_stmt pos:start="143:5" pos:end="153:5"><if pos:start="143:5" pos:end="149:5">if <condition pos:start="143:8" pos:end="143:25">(<expr pos:start="143:9" pos:end="143:24"><name pos:start="143:9" pos:end="143:19"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:19">gop_size</name></name> <operator pos:start="143:21" pos:end="143:22">&lt;=</operator> <literal type="number" pos:start="143:24" pos:end="143:24">1</literal></expr>)</condition> <block pos:start="143:27" pos:end="149:5">{<block_content pos:start="145:9" pos:end="147:27">

        <expr_stmt pos:start="145:9" pos:end="145:26"><expr pos:start="145:9" pos:end="145:25"><name pos:start="145:9" pos:end="145:21"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:21">intra_only</name></name> <operator pos:start="145:23" pos:end="145:23">=</operator> <literal type="number" pos:start="145:25" pos:end="145:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:27"><expr pos:start="147:9" pos:end="147:26"><name pos:start="147:9" pos:end="147:19"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:19">gop_size</name></name>   <operator pos:start="147:23" pos:end="147:23">=</operator> <literal type="number" pos:start="147:25" pos:end="147:26">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="149:7" pos:end="153:5">else <block pos:start="149:12" pos:end="153:5">{<block_content pos:start="151:9" pos:end="151:26">

        <expr_stmt pos:start="151:9" pos:end="151:26"><expr pos:start="151:9" pos:end="151:25"><name pos:start="151:9" pos:end="151:21"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:21">intra_only</name></name> <operator pos:start="151:23" pos:end="151:23">=</operator> <literal type="number" pos:start="151:25" pos:end="151:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:36"><expr pos:start="157:5" pos:end="157:35"><name pos:start="157:5" pos:end="157:16"><name pos:start="157:5" pos:end="157:5">s</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:16">me_method</name></name> <operator pos:start="157:18" pos:end="157:18">=</operator> <name pos:start="157:20" pos:end="157:35"><name pos:start="157:20" pos:end="157:24">avctx</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:35">me_method</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:22">/* Fixed QSCALE */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:59"><expr pos:start="163:5" pos:end="163:58"><name pos:start="163:5" pos:end="163:19"><name pos:start="163:5" pos:end="163:5">s</name><operator pos:start="163:6" pos:end="163:7">-&gt;</operator><name pos:start="163:8" pos:end="163:19">fixed_qscale</name></name> <operator pos:start="163:21" pos:end="163:21">=</operator> <operator pos:start="163:23" pos:end="163:23">!</operator><operator pos:start="163:24" pos:end="163:24">!</operator><operator pos:start="163:25" pos:end="163:25">(</operator><name pos:start="163:26" pos:end="163:37"><name pos:start="163:26" pos:end="163:30">avctx</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:37">flags</name></name> <operator pos:start="163:39" pos:end="163:39">&amp;</operator> <name pos:start="163:41" pos:end="163:57">CODEC_FLAG_QSCALE</name><operator pos:start="163:58" pos:end="163:58">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="167:5" pos:end="181:41"><expr pos:start="167:5" pos:end="181:40"><name pos:start="167:5" pos:end="167:21"><name pos:start="167:5" pos:end="167:5">s</name><operator pos:start="167:6" pos:end="167:7">-&gt;</operator><name pos:start="167:8" pos:end="167:21">adaptive_quant</name></name> <operator pos:start="167:23" pos:end="167:23">=</operator> <operator pos:start="167:25" pos:end="167:25">(</operator><name pos:start="167:26" pos:end="167:47"><name pos:start="167:26" pos:end="167:26">s</name><operator pos:start="167:27" pos:end="167:28">-&gt;</operator><name pos:start="167:29" pos:end="167:33">avctx</name><operator pos:start="167:34" pos:end="167:35">-&gt;</operator><name pos:start="167:36" pos:end="167:47">lumi_masking</name></name> <operator pos:start="167:49" pos:end="167:50">||</operator>

                         <name pos:start="169:26" pos:end="169:47"><name pos:start="169:26" pos:end="169:26">s</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:33">avctx</name><operator pos:start="169:34" pos:end="169:35">-&gt;</operator><name pos:start="169:36" pos:end="169:47">dark_masking</name></name> <operator pos:start="169:49" pos:end="169:50">||</operator>

                         <name pos:start="171:26" pos:end="171:56"><name pos:start="171:26" pos:end="171:26">s</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:33">avctx</name><operator pos:start="171:34" pos:end="171:35">-&gt;</operator><name pos:start="171:36" pos:end="171:56">temporal_cplx_masking</name></name> <operator pos:start="171:58" pos:end="171:59">||</operator>

                         <name pos:start="173:26" pos:end="173:55"><name pos:start="173:26" pos:end="173:26">s</name><operator pos:start="173:27" pos:end="173:28">-&gt;</operator><name pos:start="173:29" pos:end="173:33">avctx</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:55">spatial_cplx_masking</name></name>  <operator pos:start="173:58" pos:end="173:59">||</operator>

                         <name pos:start="175:26" pos:end="175:44"><name pos:start="175:26" pos:end="175:26">s</name><operator pos:start="175:27" pos:end="175:28">-&gt;</operator><name pos:start="175:29" pos:end="175:33">avctx</name><operator pos:start="175:34" pos:end="175:35">-&gt;</operator><name pos:start="175:36" pos:end="175:44">p_masking</name></name>      <operator pos:start="175:51" pos:end="175:52">||</operator>

                         <name pos:start="177:26" pos:end="177:49"><name pos:start="177:26" pos:end="177:26">s</name><operator pos:start="177:27" pos:end="177:28">-&gt;</operator><name pos:start="177:29" pos:end="177:33">avctx</name><operator pos:start="177:34" pos:end="177:35">-&gt;</operator><name pos:start="177:36" pos:end="177:49">border_masking</name></name> <operator pos:start="177:51" pos:end="177:52">||</operator>

                         <operator pos:start="179:26" pos:end="179:26">(</operator><name pos:start="179:27" pos:end="179:38"><name pos:start="179:27" pos:end="179:27">s</name><operator pos:start="179:28" pos:end="179:29">-&gt;</operator><name pos:start="179:30" pos:end="179:38">mpv_flags</name></name> <operator pos:start="179:40" pos:end="179:40">&amp;</operator> <name pos:start="179:42" pos:end="179:58">FF_MPV_FLAG_QP_RD</name><operator pos:start="179:59" pos:end="179:59">)</operator><operator pos:start="179:60" pos:end="179:60">)</operator> <operator pos:start="179:62" pos:end="179:63">&amp;&amp;</operator>

                        <operator pos:start="181:25" pos:end="181:25">!</operator><name pos:start="181:26" pos:end="181:40"><name pos:start="181:26" pos:end="181:26">s</name><operator pos:start="181:27" pos:end="181:28">-&gt;</operator><name pos:start="181:29" pos:end="181:40">fixed_qscale</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:64"><expr pos:start="185:5" pos:end="185:63"><name pos:start="185:5" pos:end="185:18"><name pos:start="185:5" pos:end="185:5">s</name><operator pos:start="185:6" pos:end="185:7">-&gt;</operator><name pos:start="185:8" pos:end="185:18">loop_filter</name></name>      <operator pos:start="185:25" pos:end="185:25">=</operator> <operator pos:start="185:27" pos:end="185:27">!</operator><operator pos:start="185:28" pos:end="185:28">!</operator><operator pos:start="185:29" pos:end="185:29">(</operator><name pos:start="185:30" pos:end="185:37"><name pos:start="185:30" pos:end="185:30">s</name><operator pos:start="185:31" pos:end="185:32">-&gt;</operator><name pos:start="185:33" pos:end="185:37">flags</name></name> <operator pos:start="185:39" pos:end="185:39">&amp;</operator> <name pos:start="185:41" pos:end="185:62">CODEC_FLAG_LOOP_FILTER</name><operator pos:start="185:63" pos:end="185:63">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="189:5" pos:end="199:5"><if pos:start="189:5" pos:end="199:5">if <condition pos:start="189:8" pos:end="189:53">(<expr pos:start="189:9" pos:end="189:52"><name pos:start="189:9" pos:end="189:26"><name pos:start="189:9" pos:end="189:13">avctx</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:26">rc_max_rate</name></name> <operator pos:start="189:28" pos:end="189:29">&amp;&amp;</operator> <operator pos:start="189:31" pos:end="189:31">!</operator><name pos:start="189:32" pos:end="189:52"><name pos:start="189:32" pos:end="189:36">avctx</name><operator pos:start="189:37" pos:end="189:38">-&gt;</operator><name pos:start="189:39" pos:end="189:52">rc_buffer_size</name></name></expr>)</condition> <block pos:start="189:55" pos:end="199:5">{<block_content pos:start="191:9" pos:end="197:18">

        <expr_stmt pos:start="191:9" pos:end="195:56"><expr pos:start="191:9" pos:end="195:55"><call pos:start="191:9" pos:end="195:55"><name pos:start="191:9" pos:end="191:14">av_log</name><argument_list pos:start="191:15" pos:end="195:55">(<argument pos:start="191:16" pos:end="191:20"><expr pos:start="191:16" pos:end="191:20"><name pos:start="191:16" pos:end="191:20">avctx</name></expr></argument>, <argument pos:start="191:23" pos:end="191:34"><expr pos:start="191:23" pos:end="191:34"><name pos:start="191:23" pos:end="191:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="193:16" pos:end="195:54"><expr pos:start="193:16" pos:end="195:54"><literal type="string" pos:start="193:16" pos:end="193:46">"a vbv buffer size is needed, "</literal>

               <literal type="string" pos:start="195:16" pos:end="195:54">"for encoding with a maximum bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="197:9" pos:end="197:18">return <expr pos:start="197:16" pos:end="197:17"><operator pos:start="197:16" pos:end="197:16">-</operator><literal type="number" pos:start="197:17" pos:end="197:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="203:5" pos:end="209:5"><if pos:start="203:5" pos:end="209:5">if <condition pos:start="203:8" pos:end="203:71">(<expr pos:start="203:9" pos:end="203:70"><name pos:start="203:9" pos:end="203:26"><name pos:start="203:9" pos:end="203:13">avctx</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:26">rc_min_rate</name></name> <operator pos:start="203:28" pos:end="203:29">&amp;&amp;</operator> <name pos:start="203:31" pos:end="203:48"><name pos:start="203:31" pos:end="203:35">avctx</name><operator pos:start="203:36" pos:end="203:37">-&gt;</operator><name pos:start="203:38" pos:end="203:48">rc_max_rate</name></name> <operator pos:start="203:50" pos:end="203:51">!=</operator> <name pos:start="203:53" pos:end="203:70"><name pos:start="203:53" pos:end="203:57">avctx</name><operator pos:start="203:58" pos:end="203:59">-&gt;</operator><name pos:start="203:60" pos:end="203:70">rc_min_rate</name></name></expr>)</condition> <block pos:start="203:73" pos:end="209:5">{<block_content pos:start="205:9" pos:end="207:85">

        <expr_stmt pos:start="205:9" pos:end="207:85"><expr pos:start="205:9" pos:end="207:84"><call pos:start="205:9" pos:end="207:84"><name pos:start="205:9" pos:end="205:14">av_log</name><argument_list pos:start="205:15" pos:end="207:84">(<argument pos:start="205:16" pos:end="205:20"><expr pos:start="205:16" pos:end="205:20"><name pos:start="205:16" pos:end="205:20">avctx</name></expr></argument>, <argument pos:start="205:23" pos:end="205:33"><expr pos:start="205:23" pos:end="205:33"><name pos:start="205:23" pos:end="205:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="207:16" pos:end="207:83"><expr pos:start="207:16" pos:end="207:83"><literal type="string" pos:start="207:16" pos:end="207:83">"Warning min_rate &gt; 0 but min_rate != max_rate isn't recommended!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="213:5" pos:end="219:5"><if pos:start="213:5" pos:end="219:5">if <condition pos:start="213:8" pos:end="213:67">(<expr pos:start="213:9" pos:end="213:66"><name pos:start="213:9" pos:end="213:26"><name pos:start="213:9" pos:end="213:13">avctx</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:26">rc_min_rate</name></name> <operator pos:start="213:28" pos:end="213:29">&amp;&amp;</operator> <name pos:start="213:31" pos:end="213:48"><name pos:start="213:31" pos:end="213:35">avctx</name><operator pos:start="213:36" pos:end="213:37">-&gt;</operator><name pos:start="213:38" pos:end="213:48">rc_min_rate</name></name> <operator pos:start="213:50" pos:end="213:50">&gt;</operator> <name pos:start="213:52" pos:end="213:66"><name pos:start="213:52" pos:end="213:56">avctx</name><operator pos:start="213:57" pos:end="213:58">-&gt;</operator><name pos:start="213:59" pos:end="213:66">bit_rate</name></name></expr>)</condition> <block pos:start="213:69" pos:end="219:5">{<block_content pos:start="215:9" pos:end="217:18">

        <expr_stmt pos:start="215:9" pos:end="215:67"><expr pos:start="215:9" pos:end="215:66"><call pos:start="215:9" pos:end="215:66"><name pos:start="215:9" pos:end="215:14">av_log</name><argument_list pos:start="215:15" pos:end="215:66">(<argument pos:start="215:16" pos:end="215:20"><expr pos:start="215:16" pos:end="215:20"><name pos:start="215:16" pos:end="215:20">avctx</name></expr></argument>, <argument pos:start="215:23" pos:end="215:34"><expr pos:start="215:23" pos:end="215:34"><name pos:start="215:23" pos:end="215:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="215:37" pos:end="215:65"><expr pos:start="215:37" pos:end="215:65"><literal type="string" pos:start="215:37" pos:end="215:65">"bitrate below min bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="217:9" pos:end="217:18">return <expr pos:start="217:16" pos:end="217:17"><operator pos:start="217:16" pos:end="217:16">-</operator><literal type="number" pos:start="217:17" pos:end="217:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="223:5" pos:end="229:5"><if pos:start="223:5" pos:end="229:5">if <condition pos:start="223:8" pos:end="223:67">(<expr pos:start="223:9" pos:end="223:66"><name pos:start="223:9" pos:end="223:26"><name pos:start="223:9" pos:end="223:13">avctx</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:26">rc_max_rate</name></name> <operator pos:start="223:28" pos:end="223:29">&amp;&amp;</operator> <name pos:start="223:31" pos:end="223:48"><name pos:start="223:31" pos:end="223:35">avctx</name><operator pos:start="223:36" pos:end="223:37">-&gt;</operator><name pos:start="223:38" pos:end="223:48">rc_max_rate</name></name> <operator pos:start="223:50" pos:end="223:50">&lt;</operator> <name pos:start="223:52" pos:end="223:66"><name pos:start="223:52" pos:end="223:56">avctx</name><operator pos:start="223:57" pos:end="223:58">-&gt;</operator><name pos:start="223:59" pos:end="223:66">bit_rate</name></name></expr>)</condition> <block pos:start="223:69" pos:end="229:5">{<block_content pos:start="225:9" pos:end="227:18">

        <expr_stmt pos:start="225:9" pos:end="225:66"><expr pos:start="225:9" pos:end="225:65"><call pos:start="225:9" pos:end="225:65"><name pos:start="225:9" pos:end="225:14">av_log</name><argument_list pos:start="225:15" pos:end="225:65">(<argument pos:start="225:16" pos:end="225:20"><expr pos:start="225:16" pos:end="225:20"><name pos:start="225:16" pos:end="225:20">avctx</name></expr></argument>, <argument pos:start="225:23" pos:end="225:33"><expr pos:start="225:23" pos:end="225:33"><name pos:start="225:23" pos:end="225:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="225:36" pos:end="225:64"><expr pos:start="225:36" pos:end="225:64"><literal type="string" pos:start="225:36" pos:end="225:64">"bitrate above max bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="227:9" pos:end="227:18">return <expr pos:start="227:16" pos:end="227:17"><operator pos:start="227:16" pos:end="227:16">-</operator><literal type="number" pos:start="227:17" pos:end="227:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="233:5" pos:end="243:5"><if pos:start="233:5" pos:end="243:5">if <condition pos:start="233:8" pos:end="237:49">(<expr pos:start="233:9" pos:end="237:48"><name pos:start="233:9" pos:end="233:26"><name pos:start="233:9" pos:end="233:13">avctx</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:26">rc_max_rate</name></name> <operator pos:start="233:28" pos:end="233:29">&amp;&amp;</operator>

        <name pos:start="235:9" pos:end="235:26"><name pos:start="235:9" pos:end="235:13">avctx</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:26">rc_max_rate</name></name> <operator pos:start="235:28" pos:end="235:29">==</operator> <name pos:start="235:31" pos:end="235:45"><name pos:start="235:31" pos:end="235:35">avctx</name><operator pos:start="235:36" pos:end="235:37">-&gt;</operator><name pos:start="235:38" pos:end="235:45">bit_rate</name></name> <operator pos:start="235:47" pos:end="235:48">&amp;&amp;</operator>

        <name pos:start="237:9" pos:end="237:26"><name pos:start="237:9" pos:end="237:13">avctx</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:26">rc_max_rate</name></name> <operator pos:start="237:28" pos:end="237:29">!=</operator> <name pos:start="237:31" pos:end="237:48"><name pos:start="237:31" pos:end="237:35">avctx</name><operator pos:start="237:36" pos:end="237:37">-&gt;</operator><name pos:start="237:38" pos:end="237:48">rc_min_rate</name></name></expr>)</condition> <block pos:start="237:51" pos:end="243:5">{<block_content pos:start="239:9" pos:end="241:67">

        <expr_stmt pos:start="239:9" pos:end="241:67"><expr pos:start="239:9" pos:end="241:66"><call pos:start="239:9" pos:end="241:66"><name pos:start="239:9" pos:end="239:14">av_log</name><argument_list pos:start="239:15" pos:end="241:66">(<argument pos:start="239:16" pos:end="239:20"><expr pos:start="239:16" pos:end="239:20"><name pos:start="239:16" pos:end="239:20">avctx</name></expr></argument>, <argument pos:start="239:23" pos:end="239:33"><expr pos:start="239:23" pos:end="239:33"><name pos:start="239:23" pos:end="239:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="241:16" pos:end="241:65"><expr pos:start="241:16" pos:end="241:65"><literal type="string" pos:start="241:16" pos:end="241:65">"impossible bitrate constraints, this will fail\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="247:5" pos:end="257:5"><if pos:start="247:5" pos:end="257:5">if <condition pos:start="247:8" pos:end="251:66">(<expr pos:start="247:9" pos:end="251:65"><name pos:start="247:9" pos:end="247:29"><name pos:start="247:9" pos:end="247:13">avctx</name><operator pos:start="247:14" pos:end="247:15">-&gt;</operator><name pos:start="247:16" pos:end="247:29">rc_buffer_size</name></name> <operator pos:start="247:31" pos:end="247:32">&amp;&amp;</operator>

        <name pos:start="249:9" pos:end="249:23"><name pos:start="249:9" pos:end="249:13">avctx</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:23">bit_rate</name></name> <operator pos:start="249:25" pos:end="249:25">*</operator> <operator pos:start="249:27" pos:end="249:27">(</operator><name pos:start="249:28" pos:end="249:34">int64_t</name><operator pos:start="249:35" pos:end="249:35">)</operator><name pos:start="249:36" pos:end="249:55"><name pos:start="249:36" pos:end="249:40">avctx</name><operator pos:start="249:41" pos:end="249:42">-&gt;</operator><name pos:start="249:43" pos:end="249:51">time_base</name><operator pos:start="249:52" pos:end="249:52">.</operator><name pos:start="249:53" pos:end="249:55">num</name></name> <operator pos:start="249:57" pos:end="249:57">&gt;</operator>

            <name pos:start="251:13" pos:end="251:33"><name pos:start="251:13" pos:end="251:17">avctx</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:33">rc_buffer_size</name></name> <operator pos:start="251:35" pos:end="251:35">*</operator> <operator pos:start="251:37" pos:end="251:37">(</operator><name pos:start="251:38" pos:end="251:44">int64_t</name><operator pos:start="251:45" pos:end="251:45">)</operator><name pos:start="251:46" pos:end="251:65"><name pos:start="251:46" pos:end="251:50">avctx</name><operator pos:start="251:51" pos:end="251:52">-&gt;</operator><name pos:start="251:53" pos:end="251:61">time_base</name><operator pos:start="251:62" pos:end="251:62">.</operator><name pos:start="251:63" pos:end="251:65">den</name></name></expr>)</condition> <block pos:start="251:68" pos:end="257:5">{<block_content pos:start="253:9" pos:end="255:18">

        <expr_stmt pos:start="253:9" pos:end="253:74"><expr pos:start="253:9" pos:end="253:73"><call pos:start="253:9" pos:end="253:73"><name pos:start="253:9" pos:end="253:14">av_log</name><argument_list pos:start="253:15" pos:end="253:73">(<argument pos:start="253:16" pos:end="253:20"><expr pos:start="253:16" pos:end="253:20"><name pos:start="253:16" pos:end="253:20">avctx</name></expr></argument>, <argument pos:start="253:23" pos:end="253:34"><expr pos:start="253:23" pos:end="253:34"><name pos:start="253:23" pos:end="253:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="253:37" pos:end="253:72"><expr pos:start="253:37" pos:end="253:72"><literal type="string" pos:start="253:37" pos:end="253:72">"VBV buffer too small for bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="255:9" pos:end="255:18">return <expr pos:start="255:16" pos:end="255:17"><operator pos:start="255:16" pos:end="255:16">-</operator><literal type="number" pos:start="255:17" pos:end="255:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="261:5" pos:end="273:5"><if pos:start="261:5" pos:end="273:5">if <condition pos:start="261:8" pos:end="265:38">(<expr pos:start="261:9" pos:end="265:37"><operator pos:start="261:9" pos:end="261:9">!</operator><name pos:start="261:10" pos:end="261:24"><name pos:start="261:10" pos:end="261:10">s</name><operator pos:start="261:11" pos:end="261:12">-&gt;</operator><name pos:start="261:13" pos:end="261:24">fixed_qscale</name></name> <operator pos:start="261:26" pos:end="261:27">&amp;&amp;</operator>

        <name pos:start="263:9" pos:end="263:23"><name pos:start="263:9" pos:end="263:13">avctx</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:23">bit_rate</name></name> <operator pos:start="263:25" pos:end="263:25">*</operator> <call pos:start="263:27" pos:end="263:50"><name pos:start="263:27" pos:end="263:32">av_q2d</name><argument_list pos:start="263:33" pos:end="263:50">(<argument pos:start="263:34" pos:end="263:49"><expr pos:start="263:34" pos:end="263:49"><name pos:start="263:34" pos:end="263:49"><name pos:start="263:34" pos:end="263:38">avctx</name><operator pos:start="263:39" pos:end="263:40">-&gt;</operator><name pos:start="263:41" pos:end="263:49">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="263:52" pos:end="263:52">&gt;</operator>

            <name pos:start="265:13" pos:end="265:37"><name pos:start="265:13" pos:end="265:17">avctx</name><operator pos:start="265:18" pos:end="265:19">-&gt;</operator><name pos:start="265:20" pos:end="265:37">bit_rate_tolerance</name></name></expr>)</condition> <block pos:start="265:40" pos:end="273:5">{<block_content pos:start="267:9" pos:end="271:18">

        <expr_stmt pos:start="267:9" pos:end="269:60"><expr pos:start="267:9" pos:end="269:59"><call pos:start="267:9" pos:end="269:59"><name pos:start="267:9" pos:end="267:14">av_log</name><argument_list pos:start="267:15" pos:end="269:59">(<argument pos:start="267:16" pos:end="267:20"><expr pos:start="267:16" pos:end="267:20"><name pos:start="267:16" pos:end="267:20">avctx</name></expr></argument>, <argument pos:start="267:23" pos:end="267:34"><expr pos:start="267:23" pos:end="267:34"><name pos:start="267:23" pos:end="267:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="269:16" pos:end="269:58"><expr pos:start="269:16" pos:end="269:58"><literal type="string" pos:start="269:16" pos:end="269:58">"bitrate tolerance too small for bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="271:9" pos:end="271:18">return <expr pos:start="271:16" pos:end="271:17"><operator pos:start="271:16" pos:end="271:16">-</operator><literal type="number" pos:start="271:17" pos:end="271:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="277:5" pos:end="295:5"><if pos:start="277:5" pos:end="295:5">if <condition pos:start="277:8" pos:end="287:45">(<expr pos:start="277:9" pos:end="287:44"><name pos:start="277:9" pos:end="277:29"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:16">avctx</name><operator pos:start="277:17" pos:end="277:18">-&gt;</operator><name pos:start="277:19" pos:end="277:29">rc_max_rate</name></name> <operator pos:start="277:31" pos:end="277:32">&amp;&amp;</operator>

        <name pos:start="279:9" pos:end="279:29"><name pos:start="279:9" pos:end="279:9">s</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:16">avctx</name><operator pos:start="279:17" pos:end="279:18">-&gt;</operator><name pos:start="279:19" pos:end="279:29">rc_min_rate</name></name> <operator pos:start="279:31" pos:end="279:32">==</operator> <name pos:start="279:34" pos:end="279:54"><name pos:start="279:34" pos:end="279:34">s</name><operator pos:start="279:35" pos:end="279:36">-&gt;</operator><name pos:start="279:37" pos:end="279:41">avctx</name><operator pos:start="279:42" pos:end="279:43">-&gt;</operator><name pos:start="279:44" pos:end="279:54">rc_max_rate</name></name> <operator pos:start="279:56" pos:end="279:57">&amp;&amp;</operator>

        <operator pos:start="281:9" pos:end="281:9">(</operator><name pos:start="281:10" pos:end="281:20"><name pos:start="281:10" pos:end="281:10">s</name><operator pos:start="281:11" pos:end="281:12">-&gt;</operator><name pos:start="281:13" pos:end="281:20">codec_id</name></name> <operator pos:start="281:22" pos:end="281:23">==</operator> <name pos:start="281:25" pos:end="281:46">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="281:48" pos:end="281:49">||</operator>

         <name pos:start="283:10" pos:end="283:20"><name pos:start="283:10" pos:end="283:10">s</name><operator pos:start="283:11" pos:end="283:12">-&gt;</operator><name pos:start="283:13" pos:end="283:20">codec_id</name></name> <operator pos:start="283:22" pos:end="283:23">==</operator> <name pos:start="283:25" pos:end="283:46">AV_CODEC_ID_MPEG2VIDEO</name><operator pos:start="283:47" pos:end="283:47">)</operator> <operator pos:start="283:49" pos:end="283:50">&amp;&amp;</operator>

        <literal type="number" pos:start="285:9" pos:end="285:15">90000LL</literal> <operator pos:start="285:17" pos:end="285:17">*</operator> <operator pos:start="285:19" pos:end="285:19">(</operator><name pos:start="285:20" pos:end="285:40"><name pos:start="285:20" pos:end="285:24">avctx</name><operator pos:start="285:25" pos:end="285:26">-&gt;</operator><name pos:start="285:27" pos:end="285:40">rc_buffer_size</name></name> <operator pos:start="285:42" pos:end="285:42">-</operator> <literal type="number" pos:start="285:44" pos:end="285:44">1</literal><operator pos:start="285:45" pos:end="285:45">)</operator> <operator pos:start="285:47" pos:end="285:47">&gt;</operator>

            <name pos:start="287:13" pos:end="287:33"><name pos:start="287:13" pos:end="287:13">s</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:20">avctx</name><operator pos:start="287:21" pos:end="287:22">-&gt;</operator><name pos:start="287:23" pos:end="287:33">rc_max_rate</name></name> <operator pos:start="287:35" pos:end="287:35">*</operator> <literal type="number" pos:start="287:37" pos:end="287:44">0xFFFFLL</literal></expr>)</condition> <block pos:start="287:47" pos:end="295:5">{<block_content pos:start="289:9" pos:end="293:77">

        <expr_stmt pos:start="289:9" pos:end="293:77"><expr pos:start="289:9" pos:end="293:76"><call pos:start="289:9" pos:end="293:76"><name pos:start="289:9" pos:end="289:14">av_log</name><argument_list pos:start="289:15" pos:end="293:76">(<argument pos:start="289:16" pos:end="289:20"><expr pos:start="289:16" pos:end="289:20"><name pos:start="289:16" pos:end="289:20">avctx</name></expr></argument>, <argument pos:start="289:23" pos:end="289:33"><expr pos:start="289:23" pos:end="289:33"><name pos:start="289:23" pos:end="289:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="291:16" pos:end="293:75"><expr pos:start="291:16" pos:end="293:75"><literal type="string" pos:start="291:16" pos:end="291:71">"Warning vbv_delay will be set to 0xFFFF (=VBR) as the "</literal>

               <literal type="string" pos:start="293:16" pos:end="293:75">"specified vbv buffer is too large for the given bitrate!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="299:5" pos:end="309:5"><if pos:start="299:5" pos:end="309:5">if <condition pos:start="299:8" pos:end="303:40">(<expr pos:start="299:9" pos:end="303:39"><operator pos:start="299:9" pos:end="299:9">(</operator><name pos:start="299:10" pos:end="299:17"><name pos:start="299:10" pos:end="299:10">s</name><operator pos:start="299:11" pos:end="299:12">-&gt;</operator><name pos:start="299:13" pos:end="299:17">flags</name></name> <operator pos:start="299:19" pos:end="299:19">&amp;</operator> <name pos:start="299:21" pos:end="299:34">CODEC_FLAG_4MV</name><operator pos:start="299:35" pos:end="299:35">)</operator>  <operator pos:start="299:38" pos:end="299:39">&amp;&amp;</operator> <name pos:start="299:41" pos:end="299:51"><name pos:start="299:41" pos:end="299:41">s</name><operator pos:start="299:42" pos:end="299:43">-&gt;</operator><name pos:start="299:44" pos:end="299:51">codec_id</name></name> <operator pos:start="299:53" pos:end="299:54">!=</operator> <name pos:start="299:56" pos:end="299:72">AV_CODEC_ID_MPEG4</name> <operator pos:start="299:74" pos:end="299:75">&amp;&amp;</operator>

        <name pos:start="301:9" pos:end="301:19"><name pos:start="301:9" pos:end="301:9">s</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:19">codec_id</name></name> <operator pos:start="301:21" pos:end="301:22">!=</operator> <name pos:start="301:24" pos:end="301:39">AV_CODEC_ID_H263</name> <operator pos:start="301:41" pos:end="301:42">&amp;&amp;</operator> <name pos:start="301:44" pos:end="301:54"><name pos:start="301:44" pos:end="301:44">s</name><operator pos:start="301:45" pos:end="301:46">-&gt;</operator><name pos:start="301:47" pos:end="301:54">codec_id</name></name> <operator pos:start="301:56" pos:end="301:57">!=</operator> <name pos:start="301:59" pos:end="301:75">AV_CODEC_ID_H263P</name> <operator pos:start="301:77" pos:end="301:78">&amp;&amp;</operator>

        <name pos:start="303:9" pos:end="303:19"><name pos:start="303:9" pos:end="303:9">s</name><operator pos:start="303:10" pos:end="303:11">-&gt;</operator><name pos:start="303:12" pos:end="303:19">codec_id</name></name> <operator pos:start="303:21" pos:end="303:22">!=</operator> <name pos:start="303:24" pos:end="303:39">AV_CODEC_ID_FLV1</name></expr>)</condition> <block pos:start="303:42" pos:end="309:5">{<block_content pos:start="305:9" pos:end="307:18">

        <expr_stmt pos:start="305:9" pos:end="305:68"><expr pos:start="305:9" pos:end="305:67"><call pos:start="305:9" pos:end="305:67"><name pos:start="305:9" pos:end="305:14">av_log</name><argument_list pos:start="305:15" pos:end="305:67">(<argument pos:start="305:16" pos:end="305:20"><expr pos:start="305:16" pos:end="305:20"><name pos:start="305:16" pos:end="305:20">avctx</name></expr></argument>, <argument pos:start="305:23" pos:end="305:34"><expr pos:start="305:23" pos:end="305:34"><name pos:start="305:23" pos:end="305:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="305:37" pos:end="305:66"><expr pos:start="305:37" pos:end="305:66"><literal type="string" pos:start="305:37" pos:end="305:66">"4MV not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="307:9" pos:end="307:18">return <expr pos:start="307:16" pos:end="307:17"><operator pos:start="307:16" pos:end="307:16">-</operator><literal type="number" pos:start="307:17" pos:end="307:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="313:5" pos:end="321:5"><if pos:start="313:5" pos:end="321:5">if <condition pos:start="313:8" pos:end="313:66">(<expr pos:start="313:9" pos:end="313:65"><name pos:start="313:9" pos:end="313:15"><name pos:start="313:9" pos:end="313:9">s</name><operator pos:start="313:10" pos:end="313:11">-&gt;</operator><name pos:start="313:12" pos:end="313:15">obmc</name></name> <operator pos:start="313:17" pos:end="313:18">&amp;&amp;</operator> <name pos:start="313:20" pos:end="313:40"><name pos:start="313:20" pos:end="313:20">s</name><operator pos:start="313:21" pos:end="313:22">-&gt;</operator><name pos:start="313:23" pos:end="313:27">avctx</name><operator pos:start="313:28" pos:end="313:29">-&gt;</operator><name pos:start="313:30" pos:end="313:40">mb_decision</name></name> <operator pos:start="313:42" pos:end="313:43">!=</operator> <name pos:start="313:45" pos:end="313:65">FF_MB_DECISION_SIMPLE</name></expr>)</condition> <block pos:start="313:68" pos:end="321:5">{<block_content pos:start="315:9" pos:end="319:18">

        <expr_stmt pos:start="315:9" pos:end="317:67"><expr pos:start="315:9" pos:end="317:66"><call pos:start="315:9" pos:end="317:66"><name pos:start="315:9" pos:end="315:14">av_log</name><argument_list pos:start="315:15" pos:end="317:66">(<argument pos:start="315:16" pos:end="315:20"><expr pos:start="315:16" pos:end="315:20"><name pos:start="315:16" pos:end="315:20">avctx</name></expr></argument>, <argument pos:start="315:23" pos:end="315:34"><expr pos:start="315:23" pos:end="315:34"><name pos:start="315:23" pos:end="315:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="317:16" pos:end="317:65"><expr pos:start="317:16" pos:end="317:65"><literal type="string" pos:start="317:16" pos:end="317:65">"OBMC is only supported with simple mb decision\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="319:9" pos:end="319:18">return <expr pos:start="319:16" pos:end="319:17"><operator pos:start="319:16" pos:end="319:16">-</operator><literal type="number" pos:start="319:17" pos:end="319:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="325:5" pos:end="331:5"><if pos:start="325:5" pos:end="331:5">if <condition pos:start="325:8" pos:end="325:62">(<expr pos:start="325:9" pos:end="325:61"><name pos:start="325:9" pos:end="325:25"><name pos:start="325:9" pos:end="325:9">s</name><operator pos:start="325:10" pos:end="325:11">-&gt;</operator><name pos:start="325:12" pos:end="325:25">quarter_sample</name></name> <operator pos:start="325:27" pos:end="325:28">&amp;&amp;</operator> <name pos:start="325:30" pos:end="325:40"><name pos:start="325:30" pos:end="325:30">s</name><operator pos:start="325:31" pos:end="325:32">-&gt;</operator><name pos:start="325:33" pos:end="325:40">codec_id</name></name> <operator pos:start="325:42" pos:end="325:43">!=</operator> <name pos:start="325:45" pos:end="325:61">AV_CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="325:64" pos:end="331:5">{<block_content pos:start="327:9" pos:end="329:18">

        <expr_stmt pos:start="327:9" pos:end="327:69"><expr pos:start="327:9" pos:end="327:68"><call pos:start="327:9" pos:end="327:68"><name pos:start="327:9" pos:end="327:14">av_log</name><argument_list pos:start="327:15" pos:end="327:68">(<argument pos:start="327:16" pos:end="327:20"><expr pos:start="327:16" pos:end="327:20"><name pos:start="327:16" pos:end="327:20">avctx</name></expr></argument>, <argument pos:start="327:23" pos:end="327:34"><expr pos:start="327:23" pos:end="327:34"><name pos:start="327:23" pos:end="327:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="327:37" pos:end="327:67"><expr pos:start="327:37" pos:end="327:67"><literal type="string" pos:start="327:37" pos:end="327:67">"qpel not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="329:9" pos:end="329:18">return <expr pos:start="329:16" pos:end="329:17"><operator pos:start="329:16" pos:end="329:16">-</operator><literal type="number" pos:start="329:17" pos:end="329:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="335:5" pos:end="347:5"><if pos:start="335:5" pos:end="347:5">if <condition pos:start="335:8" pos:end="341:46">(<expr pos:start="335:9" pos:end="341:45"><name pos:start="335:9" pos:end="335:23"><name pos:start="335:9" pos:end="335:9">s</name><operator pos:start="335:10" pos:end="335:11">-&gt;</operator><name pos:start="335:12" pos:end="335:23">max_b_frames</name></name>                    <operator pos:start="335:44" pos:end="335:45">&amp;&amp;</operator>

        <name pos:start="337:9" pos:end="337:19"><name pos:start="337:9" pos:end="337:9">s</name><operator pos:start="337:10" pos:end="337:11">-&gt;</operator><name pos:start="337:12" pos:end="337:19">codec_id</name></name> <operator pos:start="337:21" pos:end="337:22">!=</operator> <name pos:start="337:24" pos:end="337:40">AV_CODEC_ID_MPEG4</name>      <operator pos:start="337:47" pos:end="337:48">&amp;&amp;</operator>

        <name pos:start="339:9" pos:end="339:19"><name pos:start="339:9" pos:end="339:9">s</name><operator pos:start="339:10" pos:end="339:11">-&gt;</operator><name pos:start="339:12" pos:end="339:19">codec_id</name></name> <operator pos:start="339:21" pos:end="339:22">!=</operator> <name pos:start="339:24" pos:end="339:45">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="339:47" pos:end="339:48">&amp;&amp;</operator>

        <name pos:start="341:9" pos:end="341:19"><name pos:start="341:9" pos:end="341:9">s</name><operator pos:start="341:10" pos:end="341:11">-&gt;</operator><name pos:start="341:12" pos:end="341:19">codec_id</name></name> <operator pos:start="341:21" pos:end="341:22">!=</operator> <name pos:start="341:24" pos:end="341:45">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="341:48" pos:end="347:5">{<block_content pos:start="343:9" pos:end="345:18">

        <expr_stmt pos:start="343:9" pos:end="343:73"><expr pos:start="343:9" pos:end="343:72"><call pos:start="343:9" pos:end="343:72"><name pos:start="343:9" pos:end="343:14">av_log</name><argument_list pos:start="343:15" pos:end="343:72">(<argument pos:start="343:16" pos:end="343:20"><expr pos:start="343:16" pos:end="343:20"><name pos:start="343:16" pos:end="343:20">avctx</name></expr></argument>, <argument pos:start="343:23" pos:end="343:34"><expr pos:start="343:23" pos:end="343:34"><name pos:start="343:23" pos:end="343:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="343:37" pos:end="343:71"><expr pos:start="343:37" pos:end="343:71"><literal type="string" pos:start="343:37" pos:end="343:71">"b frames not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="345:9" pos:end="345:18">return <expr pos:start="345:16" pos:end="345:17"><operator pos:start="345:16" pos:end="345:16">-</operator><literal type="number" pos:start="345:17" pos:end="345:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="351:5" pos:end="369:5"><if pos:start="351:5" pos:end="369:5">if <condition pos:start="351:8" pos:end="359:47">(<expr pos:start="351:9" pos:end="359:46"><operator pos:start="351:9" pos:end="351:9">(</operator><name pos:start="351:10" pos:end="351:20"><name pos:start="351:10" pos:end="351:10">s</name><operator pos:start="351:11" pos:end="351:12">-&gt;</operator><name pos:start="351:13" pos:end="351:20">codec_id</name></name> <operator pos:start="351:22" pos:end="351:23">==</operator> <name pos:start="351:25" pos:end="351:41">AV_CODEC_ID_MPEG4</name> <operator pos:start="351:43" pos:end="351:44">||</operator>

         <name pos:start="353:10" pos:end="353:20"><name pos:start="353:10" pos:end="353:10">s</name><operator pos:start="353:11" pos:end="353:12">-&gt;</operator><name pos:start="353:13" pos:end="353:20">codec_id</name></name> <operator pos:start="353:22" pos:end="353:23">==</operator> <name pos:start="353:25" pos:end="353:40">AV_CODEC_ID_H263</name>  <operator pos:start="353:43" pos:end="353:44">||</operator>

         <name pos:start="355:10" pos:end="355:20"><name pos:start="355:10" pos:end="355:10">s</name><operator pos:start="355:11" pos:end="355:12">-&gt;</operator><name pos:start="355:13" pos:end="355:20">codec_id</name></name> <operator pos:start="355:22" pos:end="355:23">==</operator> <name pos:start="355:25" pos:end="355:41">AV_CODEC_ID_H263P</name><operator pos:start="355:42" pos:end="355:42">)</operator> <operator pos:start="355:44" pos:end="355:45">&amp;&amp;</operator>

        <operator pos:start="357:9" pos:end="357:9">(</operator><name pos:start="357:10" pos:end="357:39"><name pos:start="357:10" pos:end="357:14">avctx</name><operator pos:start="357:15" pos:end="357:16">-&gt;</operator><name pos:start="357:17" pos:end="357:35">sample_aspect_ratio</name><operator pos:start="357:36" pos:end="357:36">.</operator><name pos:start="357:37" pos:end="357:39">num</name></name> <operator pos:start="357:41" pos:end="357:41">&gt;</operator> <literal type="number" pos:start="357:43" pos:end="357:45">255</literal> <operator pos:start="357:47" pos:end="357:48">||</operator>

         <name pos:start="359:10" pos:end="359:39"><name pos:start="359:10" pos:end="359:14">avctx</name><operator pos:start="359:15" pos:end="359:16">-&gt;</operator><name pos:start="359:17" pos:end="359:35">sample_aspect_ratio</name><operator pos:start="359:36" pos:end="359:36">.</operator><name pos:start="359:37" pos:end="359:39">den</name></name> <operator pos:start="359:41" pos:end="359:41">&gt;</operator> <literal type="number" pos:start="359:43" pos:end="359:45">255</literal><operator pos:start="359:46" pos:end="359:46">)</operator></expr>)</condition> <block pos:start="359:49" pos:end="369:5">{<block_content pos:start="361:9" pos:end="367:18">

        <expr_stmt pos:start="361:9" pos:end="365:79"><expr pos:start="361:9" pos:end="365:78"><call pos:start="361:9" pos:end="365:78"><name pos:start="361:9" pos:end="361:14">av_log</name><argument_list pos:start="361:15" pos:end="365:78">(<argument pos:start="361:16" pos:end="361:20"><expr pos:start="361:16" pos:end="361:20"><name pos:start="361:16" pos:end="361:20">avctx</name></expr></argument>, <argument pos:start="361:23" pos:end="361:34"><expr pos:start="361:23" pos:end="361:34"><name pos:start="361:23" pos:end="361:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="363:16" pos:end="363:69"><expr pos:start="363:16" pos:end="363:69"><literal type="string" pos:start="363:16" pos:end="363:69">"Invalid pixel aspect ratio %i/%i, limit is 255/255\n"</literal></expr></argument>,

               <argument pos:start="365:16" pos:end="365:45"><expr pos:start="365:16" pos:end="365:45"><name pos:start="365:16" pos:end="365:45"><name pos:start="365:16" pos:end="365:20">avctx</name><operator pos:start="365:21" pos:end="365:22">-&gt;</operator><name pos:start="365:23" pos:end="365:41">sample_aspect_ratio</name><operator pos:start="365:42" pos:end="365:42">.</operator><name pos:start="365:43" pos:end="365:45">num</name></name></expr></argument>, <argument pos:start="365:48" pos:end="365:77"><expr pos:start="365:48" pos:end="365:77"><name pos:start="365:48" pos:end="365:77"><name pos:start="365:48" pos:end="365:52">avctx</name><operator pos:start="365:53" pos:end="365:54">-&gt;</operator><name pos:start="365:55" pos:end="365:73">sample_aspect_ratio</name><operator pos:start="365:74" pos:end="365:74">.</operator><name pos:start="365:75" pos:end="365:77">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="367:9" pos:end="367:18">return <expr pos:start="367:16" pos:end="367:17"><operator pos:start="367:16" pos:end="367:16">-</operator><literal type="number" pos:start="367:17" pos:end="367:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="373:5" pos:end="381:5"><if pos:start="373:5" pos:end="381:5">if <condition pos:start="373:8" pos:end="375:82">(<expr pos:start="373:9" pos:end="375:81"><operator pos:start="373:9" pos:end="373:9">(</operator><name pos:start="373:10" pos:end="373:17"><name pos:start="373:10" pos:end="373:10">s</name><operator pos:start="373:11" pos:end="373:12">-&gt;</operator><name pos:start="373:13" pos:end="373:17">flags</name></name> <operator pos:start="373:19" pos:end="373:19">&amp;</operator> <operator pos:start="373:21" pos:end="373:21">(</operator><name pos:start="373:22" pos:end="373:46">CODEC_FLAG_INTERLACED_DCT</name> <operator pos:start="373:48" pos:end="373:48">|</operator> <name pos:start="373:50" pos:end="373:73">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="373:74" pos:end="373:74">)</operator><operator pos:start="373:75" pos:end="373:75">)</operator> <operator pos:start="373:77" pos:end="373:78">&amp;&amp;</operator>

        <name pos:start="375:9" pos:end="375:19"><name pos:start="375:9" pos:end="375:9">s</name><operator pos:start="375:10" pos:end="375:11">-&gt;</operator><name pos:start="375:12" pos:end="375:19">codec_id</name></name> <operator pos:start="375:21" pos:end="375:22">!=</operator> <name pos:start="375:24" pos:end="375:40">AV_CODEC_ID_MPEG4</name> <operator pos:start="375:42" pos:end="375:43">&amp;&amp;</operator> <name pos:start="375:45" pos:end="375:55"><name pos:start="375:45" pos:end="375:45">s</name><operator pos:start="375:46" pos:end="375:47">-&gt;</operator><name pos:start="375:48" pos:end="375:55">codec_id</name></name> <operator pos:start="375:57" pos:end="375:58">!=</operator> <name pos:start="375:60" pos:end="375:81">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="375:84" pos:end="381:5">{<block_content pos:start="377:9" pos:end="379:18">

        <expr_stmt pos:start="377:9" pos:end="377:76"><expr pos:start="377:9" pos:end="377:75"><call pos:start="377:9" pos:end="377:75"><name pos:start="377:9" pos:end="377:14">av_log</name><argument_list pos:start="377:15" pos:end="377:75">(<argument pos:start="377:16" pos:end="377:20"><expr pos:start="377:16" pos:end="377:20"><name pos:start="377:16" pos:end="377:20">avctx</name></expr></argument>, <argument pos:start="377:23" pos:end="377:34"><expr pos:start="377:23" pos:end="377:34"><name pos:start="377:23" pos:end="377:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="377:37" pos:end="377:74"><expr pos:start="377:37" pos:end="377:74"><literal type="string" pos:start="377:37" pos:end="377:74">"interlacing not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="379:9" pos:end="379:18">return <expr pos:start="379:16" pos:end="379:17"><operator pos:start="379:16" pos:end="379:16">-</operator><literal type="number" pos:start="379:17" pos:end="379:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="385:5" pos:end="385:32">// FIXME mpeg2 uses that too</comment>

    <if_stmt pos:start="387:5" pos:end="395:5"><if pos:start="387:5" pos:end="395:5">if <condition pos:start="387:8" pos:end="387:58">(<expr pos:start="387:9" pos:end="387:57"><name pos:start="387:9" pos:end="387:21"><name pos:start="387:9" pos:end="387:9">s</name><operator pos:start="387:10" pos:end="387:11">-&gt;</operator><name pos:start="387:12" pos:end="387:21">mpeg_quant</name></name> <operator pos:start="387:23" pos:end="387:24">&amp;&amp;</operator> <name pos:start="387:26" pos:end="387:36"><name pos:start="387:26" pos:end="387:26">s</name><operator pos:start="387:27" pos:end="387:28">-&gt;</operator><name pos:start="387:29" pos:end="387:36">codec_id</name></name> <operator pos:start="387:38" pos:end="387:39">!=</operator> <name pos:start="387:41" pos:end="387:57">AV_CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="387:60" pos:end="395:5">{<block_content pos:start="389:9" pos:end="393:18">

        <expr_stmt pos:start="389:9" pos:end="391:68"><expr pos:start="389:9" pos:end="391:67"><call pos:start="389:9" pos:end="391:67"><name pos:start="389:9" pos:end="389:14">av_log</name><argument_list pos:start="389:15" pos:end="391:67">(<argument pos:start="389:16" pos:end="389:20"><expr pos:start="389:16" pos:end="389:20"><name pos:start="389:16" pos:end="389:20">avctx</name></expr></argument>, <argument pos:start="389:23" pos:end="389:34"><expr pos:start="389:23" pos:end="389:34"><name pos:start="389:23" pos:end="389:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="391:16" pos:end="391:66"><expr pos:start="391:16" pos:end="391:66"><literal type="string" pos:start="391:16" pos:end="391:66">"mpeg2 style quantization not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="393:9" pos:end="393:18">return <expr pos:start="393:16" pos:end="393:17"><operator pos:start="393:16" pos:end="393:16">-</operator><literal type="number" pos:start="393:17" pos:end="393:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="399:5" pos:end="405:5"><if pos:start="399:5" pos:end="405:5">if <condition pos:start="399:8" pos:end="399:63">(<expr pos:start="399:9" pos:end="399:62"><operator pos:start="399:9" pos:end="399:9">(</operator><name pos:start="399:10" pos:end="399:21"><name pos:start="399:10" pos:end="399:10">s</name><operator pos:start="399:11" pos:end="399:12">-&gt;</operator><name pos:start="399:13" pos:end="399:21">mpv_flags</name></name> <operator pos:start="399:23" pos:end="399:23">&amp;</operator> <name pos:start="399:25" pos:end="399:42">FF_MPV_FLAG_CBP_RD</name><operator pos:start="399:43" pos:end="399:43">)</operator> <operator pos:start="399:45" pos:end="399:46">&amp;&amp;</operator> <operator pos:start="399:48" pos:end="399:48">!</operator><name pos:start="399:49" pos:end="399:62"><name pos:start="399:49" pos:end="399:53">avctx</name><operator pos:start="399:54" pos:end="399:55">-&gt;</operator><name pos:start="399:56" pos:end="399:62">trellis</name></name></expr>)</condition> <block pos:start="399:65" pos:end="405:5">{<block_content pos:start="401:9" pos:end="403:18">

        <expr_stmt pos:start="401:9" pos:end="401:68"><expr pos:start="401:9" pos:end="401:67"><call pos:start="401:9" pos:end="401:67"><name pos:start="401:9" pos:end="401:14">av_log</name><argument_list pos:start="401:15" pos:end="401:67">(<argument pos:start="401:16" pos:end="401:20"><expr pos:start="401:16" pos:end="401:20"><name pos:start="401:16" pos:end="401:20">avctx</name></expr></argument>, <argument pos:start="401:23" pos:end="401:34"><expr pos:start="401:23" pos:end="401:34"><name pos:start="401:23" pos:end="401:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="401:37" pos:end="401:66"><expr pos:start="401:37" pos:end="401:66"><literal type="string" pos:start="401:37" pos:end="401:66">"CBP RD needs trellis quant\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="403:9" pos:end="403:18">return <expr pos:start="403:16" pos:end="403:17"><operator pos:start="403:16" pos:end="403:16">-</operator><literal type="number" pos:start="403:17" pos:end="403:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="409:5" pos:end="417:5"><if pos:start="409:5" pos:end="417:5">if <condition pos:start="409:8" pos:end="411:51">(<expr pos:start="409:9" pos:end="411:50"><operator pos:start="409:9" pos:end="409:9">(</operator><name pos:start="409:10" pos:end="409:21"><name pos:start="409:10" pos:end="409:10">s</name><operator pos:start="409:11" pos:end="409:12">-&gt;</operator><name pos:start="409:13" pos:end="409:21">mpv_flags</name></name> <operator pos:start="409:23" pos:end="409:23">&amp;</operator> <name pos:start="409:25" pos:end="409:41">FF_MPV_FLAG_QP_RD</name><operator pos:start="409:42" pos:end="409:42">)</operator> <operator pos:start="409:44" pos:end="409:45">&amp;&amp;</operator>

        <name pos:start="411:9" pos:end="411:29"><name pos:start="411:9" pos:end="411:9">s</name><operator pos:start="411:10" pos:end="411:11">-&gt;</operator><name pos:start="411:12" pos:end="411:16">avctx</name><operator pos:start="411:17" pos:end="411:18">-&gt;</operator><name pos:start="411:19" pos:end="411:29">mb_decision</name></name> <operator pos:start="411:31" pos:end="411:32">!=</operator> <name pos:start="411:34" pos:end="411:50">FF_MB_DECISION_RD</name></expr>)</condition> <block pos:start="411:53" pos:end="417:5">{<block_content pos:start="413:9" pos:end="415:18">

        <expr_stmt pos:start="413:9" pos:end="413:59"><expr pos:start="413:9" pos:end="413:58"><call pos:start="413:9" pos:end="413:58"><name pos:start="413:9" pos:end="413:14">av_log</name><argument_list pos:start="413:15" pos:end="413:58">(<argument pos:start="413:16" pos:end="413:20"><expr pos:start="413:16" pos:end="413:20"><name pos:start="413:16" pos:end="413:20">avctx</name></expr></argument>, <argument pos:start="413:23" pos:end="413:34"><expr pos:start="413:23" pos:end="413:34"><name pos:start="413:23" pos:end="413:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="413:37" pos:end="413:57"><expr pos:start="413:37" pos:end="413:57"><literal type="string" pos:start="413:37" pos:end="413:57">"QP RD needs mbd=2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="415:9" pos:end="415:18">return <expr pos:start="415:16" pos:end="415:17"><operator pos:start="415:16" pos:end="415:16">-</operator><literal type="number" pos:start="415:17" pos:end="415:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="421:5" pos:end="433:5"><if pos:start="421:5" pos:end="433:5">if <condition pos:start="421:8" pos:end="423:43">(<expr pos:start="421:9" pos:end="423:42"><name pos:start="421:9" pos:end="421:39"><name pos:start="421:9" pos:end="421:9">s</name><operator pos:start="421:10" pos:end="421:11">-&gt;</operator><name pos:start="421:12" pos:end="421:16">avctx</name><operator pos:start="421:17" pos:end="421:18">-&gt;</operator><name pos:start="421:19" pos:end="421:39">scenechange_threshold</name></name> <operator pos:start="421:41" pos:end="421:41">&lt;</operator> <literal type="number" pos:start="421:43" pos:end="421:52">1000000000</literal> <operator pos:start="421:54" pos:end="421:55">&amp;&amp;</operator>

        <operator pos:start="423:9" pos:end="423:9">(</operator><name pos:start="423:10" pos:end="423:17"><name pos:start="423:10" pos:end="423:10">s</name><operator pos:start="423:11" pos:end="423:12">-&gt;</operator><name pos:start="423:13" pos:end="423:17">flags</name></name> <operator pos:start="423:19" pos:end="423:19">&amp;</operator> <name pos:start="423:21" pos:end="423:41">CODEC_FLAG_CLOSED_GOP</name><operator pos:start="423:42" pos:end="423:42">)</operator></expr>)</condition> <block pos:start="423:45" pos:end="433:5">{<block_content pos:start="425:9" pos:end="431:18">

        <expr_stmt pos:start="425:9" pos:end="429:48"><expr pos:start="425:9" pos:end="429:47"><call pos:start="425:9" pos:end="429:47"><name pos:start="425:9" pos:end="425:14">av_log</name><argument_list pos:start="425:15" pos:end="429:47">(<argument pos:start="425:16" pos:end="425:20"><expr pos:start="425:16" pos:end="425:20"><name pos:start="425:16" pos:end="425:20">avctx</name></expr></argument>, <argument pos:start="425:23" pos:end="425:34"><expr pos:start="425:23" pos:end="425:34"><name pos:start="425:23" pos:end="425:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="427:16" pos:end="429:46"><expr pos:start="427:16" pos:end="429:46"><literal type="string" pos:start="427:16" pos:end="427:79">"closed gop with scene change detection are not supported yet, "</literal>

               <literal type="string" pos:start="429:16" pos:end="429:46">"set threshold to 1000000000\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="431:9" pos:end="431:18">return <expr pos:start="431:16" pos:end="431:17"><operator pos:start="431:16" pos:end="431:16">-</operator><literal type="number" pos:start="431:17" pos:end="431:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="437:5" pos:end="459:5"><if pos:start="437:5" pos:end="459:5">if <condition pos:start="437:8" pos:end="437:40">(<expr pos:start="437:9" pos:end="437:39"><name pos:start="437:9" pos:end="437:16"><name pos:start="437:9" pos:end="437:9">s</name><operator pos:start="437:10" pos:end="437:11">-&gt;</operator><name pos:start="437:12" pos:end="437:16">flags</name></name> <operator pos:start="437:18" pos:end="437:18">&amp;</operator> <name pos:start="437:20" pos:end="437:39">CODEC_FLAG_LOW_DELAY</name></expr>)</condition> <block pos:start="437:42" pos:end="459:5">{<block_content pos:start="439:9" pos:end="457:9">

        <if_stmt pos:start="439:9" pos:end="447:9"><if pos:start="439:9" pos:end="447:9">if <condition pos:start="439:12" pos:end="439:50">(<expr pos:start="439:13" pos:end="439:49"><name pos:start="439:13" pos:end="439:23"><name pos:start="439:13" pos:end="439:13">s</name><operator pos:start="439:14" pos:end="439:15">-&gt;</operator><name pos:start="439:16" pos:end="439:23">codec_id</name></name> <operator pos:start="439:25" pos:end="439:26">!=</operator> <name pos:start="439:28" pos:end="439:49">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="439:52" pos:end="447:9">{<block_content pos:start="441:13" pos:end="445:22">

            <expr_stmt pos:start="441:13" pos:end="443:69"><expr pos:start="441:13" pos:end="443:68"><call pos:start="441:13" pos:end="443:68"><name pos:start="441:13" pos:end="441:18">av_log</name><argument_list pos:start="441:19" pos:end="443:68">(<argument pos:start="441:20" pos:end="441:24"><expr pos:start="441:20" pos:end="441:24"><name pos:start="441:20" pos:end="441:24">avctx</name></expr></argument>, <argument pos:start="441:27" pos:end="441:38"><expr pos:start="441:27" pos:end="441:38"><name pos:start="441:27" pos:end="441:38">AV_LOG_ERROR</name></expr></argument>,

                  <argument pos:start="443:19" pos:end="443:67"><expr pos:start="443:19" pos:end="443:67"><literal type="string" pos:start="443:19" pos:end="443:67">"low delay forcing is only available for mpeg2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="445:13" pos:end="445:22">return <expr pos:start="445:20" pos:end="445:21"><operator pos:start="445:20" pos:end="445:20">-</operator><literal type="number" pos:start="445:21" pos:end="445:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="449:9" pos:end="457:9"><if pos:start="449:9" pos:end="457:9">if <condition pos:start="449:12" pos:end="449:33">(<expr pos:start="449:13" pos:end="449:32"><name pos:start="449:13" pos:end="449:27"><name pos:start="449:13" pos:end="449:13">s</name><operator pos:start="449:14" pos:end="449:15">-&gt;</operator><name pos:start="449:16" pos:end="449:27">max_b_frames</name></name> <operator pos:start="449:29" pos:end="449:30">!=</operator> <literal type="number" pos:start="449:32" pos:end="449:32">0</literal></expr>)</condition> <block pos:start="449:35" pos:end="457:9">{<block_content pos:start="451:13" pos:end="455:22">

            <expr_stmt pos:start="451:13" pos:end="453:63"><expr pos:start="451:13" pos:end="453:62"><call pos:start="451:13" pos:end="453:62"><name pos:start="451:13" pos:end="451:18">av_log</name><argument_list pos:start="451:19" pos:end="453:62">(<argument pos:start="451:20" pos:end="451:24"><expr pos:start="451:20" pos:end="451:24"><name pos:start="451:20" pos:end="451:24">avctx</name></expr></argument>, <argument pos:start="451:27" pos:end="451:38"><expr pos:start="451:27" pos:end="451:38"><name pos:start="451:27" pos:end="451:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="453:20" pos:end="453:61"><expr pos:start="453:20" pos:end="453:61"><literal type="string" pos:start="453:20" pos:end="453:61">"b frames cannot be used with low delay\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="455:13" pos:end="455:22">return <expr pos:start="455:20" pos:end="455:21"><operator pos:start="455:20" pos:end="455:20">-</operator><literal type="number" pos:start="455:21" pos:end="455:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="463:5" pos:end="475:5"><if pos:start="463:5" pos:end="475:5">if <condition pos:start="463:8" pos:end="463:29">(<expr pos:start="463:9" pos:end="463:28"><name pos:start="463:9" pos:end="463:23"><name pos:start="463:9" pos:end="463:9">s</name><operator pos:start="463:10" pos:end="463:11">-&gt;</operator><name pos:start="463:12" pos:end="463:23">q_scale_type</name></name> <operator pos:start="463:25" pos:end="463:26">==</operator> <literal type="number" pos:start="463:28" pos:end="463:28">1</literal></expr>)</condition> <block pos:start="463:31" pos:end="475:5">{<block_content pos:start="465:9" pos:end="473:9">

        <if_stmt pos:start="465:9" pos:end="473:9"><if pos:start="465:9" pos:end="473:9">if <condition pos:start="465:12" pos:end="465:29">(<expr pos:start="465:13" pos:end="465:28"><name pos:start="465:13" pos:end="465:23"><name pos:start="465:13" pos:end="465:17">avctx</name><operator pos:start="465:18" pos:end="465:19">-&gt;</operator><name pos:start="465:20" pos:end="465:23">qmax</name></name> <operator pos:start="465:25" pos:end="465:25">&gt;</operator> <literal type="number" pos:start="465:27" pos:end="465:28">12</literal></expr>)</condition> <block pos:start="465:31" pos:end="473:9">{<block_content pos:start="467:13" pos:end="471:22">

            <expr_stmt pos:start="467:13" pos:end="469:76"><expr pos:start="467:13" pos:end="469:75"><call pos:start="467:13" pos:end="469:75"><name pos:start="467:13" pos:end="467:18">av_log</name><argument_list pos:start="467:19" pos:end="469:75">(<argument pos:start="467:20" pos:end="467:24"><expr pos:start="467:20" pos:end="467:24"><name pos:start="467:20" pos:end="467:24">avctx</name></expr></argument>, <argument pos:start="467:27" pos:end="467:38"><expr pos:start="467:27" pos:end="467:38"><name pos:start="467:27" pos:end="467:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="469:20" pos:end="469:74"><expr pos:start="469:20" pos:end="469:74"><literal type="string" pos:start="469:20" pos:end="469:74">"non linear quant only supports qmax &lt;= 12 currently\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="471:13" pos:end="471:22">return <expr pos:start="471:20" pos:end="471:21"><operator pos:start="471:20" pos:end="471:20">-</operator><literal type="number" pos:start="471:21" pos:end="471:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="479:5" pos:end="495:5"><if pos:start="479:5" pos:end="495:5">if <condition pos:start="479:8" pos:end="487:43">(<expr pos:start="479:9" pos:end="487:42"><name pos:start="479:9" pos:end="479:30"><name pos:start="479:9" pos:end="479:9">s</name><operator pos:start="479:10" pos:end="479:11">-&gt;</operator><name pos:start="479:12" pos:end="479:16">avctx</name><operator pos:start="479:17" pos:end="479:18">-&gt;</operator><name pos:start="479:19" pos:end="479:30">thread_count</name></name> <operator pos:start="479:32" pos:end="479:32">&gt;</operator> <literal type="number" pos:start="479:34" pos:end="479:34">1</literal>         <operator pos:start="479:44" pos:end="479:45">&amp;&amp;</operator>

        <name pos:start="481:9" pos:end="481:19"><name pos:start="481:9" pos:end="481:9">s</name><operator pos:start="481:10" pos:end="481:11">-&gt;</operator><name pos:start="481:12" pos:end="481:19">codec_id</name></name> <operator pos:start="481:21" pos:end="481:22">!=</operator> <name pos:start="481:24" pos:end="481:40">AV_CODEC_ID_MPEG4</name>      <operator pos:start="481:47" pos:end="481:48">&amp;&amp;</operator>

        <name pos:start="483:9" pos:end="483:19"><name pos:start="483:9" pos:end="483:9">s</name><operator pos:start="483:10" pos:end="483:11">-&gt;</operator><name pos:start="483:12" pos:end="483:19">codec_id</name></name> <operator pos:start="483:21" pos:end="483:22">!=</operator> <name pos:start="483:24" pos:end="483:45">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="483:47" pos:end="483:48">&amp;&amp;</operator>

        <name pos:start="485:9" pos:end="485:19"><name pos:start="485:9" pos:end="485:9">s</name><operator pos:start="485:10" pos:end="485:11">-&gt;</operator><name pos:start="485:12" pos:end="485:19">codec_id</name></name> <operator pos:start="485:21" pos:end="485:22">!=</operator> <name pos:start="485:24" pos:end="485:45">AV_CODEC_ID_MPEG2VIDEO</name> <operator pos:start="485:47" pos:end="485:48">&amp;&amp;</operator>

        <operator pos:start="487:9" pos:end="487:9">(</operator><name pos:start="487:10" pos:end="487:20"><name pos:start="487:10" pos:end="487:10">s</name><operator pos:start="487:11" pos:end="487:12">-&gt;</operator><name pos:start="487:13" pos:end="487:20">codec_id</name></name> <operator pos:start="487:22" pos:end="487:23">!=</operator> <name pos:start="487:25" pos:end="487:41">AV_CODEC_ID_H263P</name><operator pos:start="487:42" pos:end="487:42">)</operator></expr>)</condition> <block pos:start="487:45" pos:end="495:5">{<block_content pos:start="489:9" pos:end="493:18">

        <expr_stmt pos:start="489:9" pos:end="491:67"><expr pos:start="489:9" pos:end="491:66"><call pos:start="489:9" pos:end="491:66"><name pos:start="489:9" pos:end="489:14">av_log</name><argument_list pos:start="489:15" pos:end="491:66">(<argument pos:start="489:16" pos:end="489:20"><expr pos:start="489:16" pos:end="489:20"><name pos:start="489:16" pos:end="489:20">avctx</name></expr></argument>, <argument pos:start="489:23" pos:end="489:34"><expr pos:start="489:23" pos:end="489:34"><name pos:start="489:23" pos:end="489:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="491:16" pos:end="491:65"><expr pos:start="491:16" pos:end="491:65"><literal type="string" pos:start="491:16" pos:end="491:65">"multi threaded encoding not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="493:9" pos:end="493:18">return <expr pos:start="493:16" pos:end="493:17"><operator pos:start="493:16" pos:end="493:16">-</operator><literal type="number" pos:start="493:17" pos:end="493:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="499:5" pos:end="509:5"><if pos:start="499:5" pos:end="509:5">if <condition pos:start="499:8" pos:end="499:35">(<expr pos:start="499:9" pos:end="499:34"><name pos:start="499:9" pos:end="499:30"><name pos:start="499:9" pos:end="499:9">s</name><operator pos:start="499:10" pos:end="499:11">-&gt;</operator><name pos:start="499:12" pos:end="499:16">avctx</name><operator pos:start="499:17" pos:end="499:18">-&gt;</operator><name pos:start="499:19" pos:end="499:30">thread_count</name></name> <operator pos:start="499:32" pos:end="499:32">&lt;</operator> <literal type="number" pos:start="499:34" pos:end="499:34">1</literal></expr>)</condition> <block pos:start="499:37" pos:end="509:5">{<block_content pos:start="501:9" pos:end="507:18">

        <expr_stmt pos:start="501:9" pos:end="505:34"><expr pos:start="501:9" pos:end="505:33"><call pos:start="501:9" pos:end="505:33"><name pos:start="501:9" pos:end="501:14">av_log</name><argument_list pos:start="501:15" pos:end="505:33">(<argument pos:start="501:16" pos:end="501:20"><expr pos:start="501:16" pos:end="501:20"><name pos:start="501:16" pos:end="501:20">avctx</name></expr></argument>, <argument pos:start="501:23" pos:end="501:34"><expr pos:start="501:23" pos:end="501:34"><name pos:start="501:23" pos:end="501:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="503:16" pos:end="505:32"><expr pos:start="503:16" pos:end="505:32"><literal type="string" pos:start="503:16" pos:end="503:74">"automatic thread number detection not supported by codec,"</literal>

               <literal type="string" pos:start="505:16" pos:end="505:32">"patch welcome\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="507:9" pos:end="507:18">return <expr pos:start="507:16" pos:end="507:17"><operator pos:start="507:16" pos:end="507:16">-</operator><literal type="number" pos:start="507:17" pos:end="507:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="513:5" pos:end="515:24"><if pos:start="513:5" pos:end="515:24">if <condition pos:start="513:8" pos:end="513:35">(<expr pos:start="513:9" pos:end="513:34"><name pos:start="513:9" pos:end="513:30"><name pos:start="513:9" pos:end="513:9">s</name><operator pos:start="513:10" pos:end="513:11">-&gt;</operator><name pos:start="513:12" pos:end="513:16">avctx</name><operator pos:start="513:17" pos:end="513:18">-&gt;</operator><name pos:start="513:19" pos:end="513:30">thread_count</name></name> <operator pos:start="513:32" pos:end="513:32">&gt;</operator> <literal type="number" pos:start="513:34" pos:end="513:34">1</literal></expr>)</condition><block type="pseudo" pos:start="515:9" pos:end="515:24"><block_content pos:start="515:9" pos:end="515:24">

        <expr_stmt pos:start="515:9" pos:end="515:24"><expr pos:start="515:9" pos:end="515:23"><name pos:start="515:9" pos:end="515:19"><name pos:start="515:9" pos:end="515:9">s</name><operator pos:start="515:10" pos:end="515:11">-&gt;</operator><name pos:start="515:12" pos:end="515:19">rtp_mode</name></name> <operator pos:start="515:21" pos:end="515:21">=</operator> <literal type="number" pos:start="515:23" pos:end="515:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="519:5" pos:end="525:5"><if pos:start="519:5" pos:end="525:5">if <condition pos:start="519:8" pos:end="519:55">(<expr pos:start="519:9" pos:end="519:54"><operator pos:start="519:9" pos:end="519:9">!</operator><name pos:start="519:10" pos:end="519:29"><name pos:start="519:10" pos:end="519:14">avctx</name><operator pos:start="519:15" pos:end="519:16">-&gt;</operator><name pos:start="519:17" pos:end="519:25">time_base</name><operator pos:start="519:26" pos:end="519:26">.</operator><name pos:start="519:27" pos:end="519:29">den</name></name> <operator pos:start="519:31" pos:end="519:32">||</operator> <operator pos:start="519:34" pos:end="519:34">!</operator><name pos:start="519:35" pos:end="519:54"><name pos:start="519:35" pos:end="519:39">avctx</name><operator pos:start="519:40" pos:end="519:41">-&gt;</operator><name pos:start="519:42" pos:end="519:50">time_base</name><operator pos:start="519:51" pos:end="519:51">.</operator><name pos:start="519:52" pos:end="519:54">num</name></name></expr>)</condition> <block pos:start="519:57" pos:end="525:5">{<block_content pos:start="521:9" pos:end="523:18">

        <expr_stmt pos:start="521:9" pos:end="521:59"><expr pos:start="521:9" pos:end="521:58"><call pos:start="521:9" pos:end="521:58"><name pos:start="521:9" pos:end="521:14">av_log</name><argument_list pos:start="521:15" pos:end="521:58">(<argument pos:start="521:16" pos:end="521:20"><expr pos:start="521:16" pos:end="521:20"><name pos:start="521:16" pos:end="521:20">avctx</name></expr></argument>, <argument pos:start="521:23" pos:end="521:34"><expr pos:start="521:23" pos:end="521:34"><name pos:start="521:23" pos:end="521:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="521:37" pos:end="521:57"><expr pos:start="521:37" pos:end="521:57"><literal type="string" pos:start="521:37" pos:end="521:57">"framerate not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="523:9" pos:end="523:18">return <expr pos:start="523:16" pos:end="523:17"><operator pos:start="523:16" pos:end="523:16">-</operator><literal type="number" pos:start="523:17" pos:end="523:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="529:5" pos:end="529:33"><expr pos:start="529:5" pos:end="529:32"><name pos:start="529:5" pos:end="529:5">i</name> <operator pos:start="529:7" pos:end="529:7">=</operator> <operator pos:start="529:9" pos:end="529:9">(</operator><name pos:start="529:10" pos:end="529:16">INT_MAX</name> <operator pos:start="529:18" pos:end="529:18">/</operator> <literal type="number" pos:start="529:20" pos:end="529:22">2</literal> <operator pos:start="529:22" pos:end="529:22">+</operator> <literal type="number" pos:start="529:24" pos:end="529:26">128</literal><operator pos:start="529:27" pos:end="529:27">)</operator> <operator pos:start="529:29" pos:end="529:30">&gt;&gt;</operator> <literal type="number" pos:start="529:32" pos:end="529:32">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="531:5" pos:end="539:5"><if pos:start="531:5" pos:end="539:5">if <condition pos:start="531:8" pos:end="531:33">(<expr pos:start="531:9" pos:end="531:32"><name pos:start="531:9" pos:end="531:27"><name pos:start="531:9" pos:end="531:13">avctx</name><operator pos:start="531:14" pos:end="531:15">-&gt;</operator><name pos:start="531:16" pos:end="531:27">mb_threshold</name></name> <operator pos:start="531:29" pos:end="531:30">&gt;=</operator> <name pos:start="531:32" pos:end="531:32">i</name></expr>)</condition> <block pos:start="531:35" pos:end="539:5">{<block_content pos:start="533:9" pos:end="537:18">

        <expr_stmt pos:start="533:9" pos:end="535:22"><expr pos:start="533:9" pos:end="535:21"><call pos:start="533:9" pos:end="535:21"><name pos:start="533:9" pos:end="533:14">av_log</name><argument_list pos:start="533:15" pos:end="535:21">(<argument pos:start="533:16" pos:end="533:20"><expr pos:start="533:16" pos:end="533:20"><name pos:start="533:16" pos:end="533:20">avctx</name></expr></argument>, <argument pos:start="533:23" pos:end="533:34"><expr pos:start="533:23" pos:end="533:34"><name pos:start="533:23" pos:end="533:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="533:37" pos:end="533:73"><expr pos:start="533:37" pos:end="533:73"><literal type="string" pos:start="533:37" pos:end="533:73">"mb_threshold too large, max is %d\n"</literal></expr></argument>,

               <argument pos:start="535:16" pos:end="535:20"><expr pos:start="535:16" pos:end="535:20"><name pos:start="535:16" pos:end="535:16">i</name> <operator pos:start="535:18" pos:end="535:18">-</operator> <literal type="number" pos:start="535:20" pos:end="535:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="537:9" pos:end="537:18">return <expr pos:start="537:16" pos:end="537:17"><operator pos:start="537:16" pos:end="537:16">-</operator><literal type="number" pos:start="537:17" pos:end="537:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="543:5" pos:end="551:5"><if pos:start="543:5" pos:end="551:5">if <condition pos:start="543:8" pos:end="543:69">(<expr pos:start="543:9" pos:end="543:68"><name pos:start="543:9" pos:end="543:31"><name pos:start="543:9" pos:end="543:13">avctx</name><operator pos:start="543:14" pos:end="543:15">-&gt;</operator><name pos:start="543:16" pos:end="543:31">b_frame_strategy</name></name> <operator pos:start="543:33" pos:end="543:34">&amp;&amp;</operator> <operator pos:start="543:36" pos:end="543:36">(</operator><name pos:start="543:37" pos:end="543:48"><name pos:start="543:37" pos:end="543:41">avctx</name><operator pos:start="543:42" pos:end="543:43">-&gt;</operator><name pos:start="543:44" pos:end="543:48">flags</name></name> <operator pos:start="543:50" pos:end="543:50">&amp;</operator> <name pos:start="543:52" pos:end="543:67">CODEC_FLAG_PASS2</name><operator pos:start="543:68" pos:end="543:68">)</operator></expr>)</condition> <block pos:start="543:71" pos:end="551:5">{<block_content pos:start="545:9" pos:end="549:36">

        <expr_stmt pos:start="545:9" pos:end="547:73"><expr pos:start="545:9" pos:end="547:72"><call pos:start="545:9" pos:end="547:72"><name pos:start="545:9" pos:end="545:14">av_log</name><argument_list pos:start="545:15" pos:end="547:72">(<argument pos:start="545:16" pos:end="545:20"><expr pos:start="545:16" pos:end="545:20"><name pos:start="545:16" pos:end="545:20">avctx</name></expr></argument>, <argument pos:start="545:23" pos:end="545:33"><expr pos:start="545:23" pos:end="545:33"><name pos:start="545:23" pos:end="545:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="547:16" pos:end="547:71"><expr pos:start="547:16" pos:end="547:71"><literal type="string" pos:start="547:16" pos:end="547:71">"notice: b_frame_strategy only affects the first pass\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="549:9" pos:end="549:36"><expr pos:start="549:9" pos:end="549:35"><name pos:start="549:9" pos:end="549:31"><name pos:start="549:9" pos:end="549:13">avctx</name><operator pos:start="549:14" pos:end="549:15">-&gt;</operator><name pos:start="549:16" pos:end="549:31">b_frame_strategy</name></name> <operator pos:start="549:33" pos:end="549:33">=</operator> <literal type="number" pos:start="549:35" pos:end="549:35">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="555:5" pos:end="555:59"><expr pos:start="555:5" pos:end="555:58"><name pos:start="555:5" pos:end="555:5">i</name> <operator pos:start="555:7" pos:end="555:7">=</operator> <call pos:start="555:9" pos:end="555:58"><name pos:start="555:9" pos:end="555:14">av_gcd</name><argument_list pos:start="555:15" pos:end="555:58">(<argument pos:start="555:16" pos:end="555:35"><expr pos:start="555:16" pos:end="555:35"><name pos:start="555:16" pos:end="555:35"><name pos:start="555:16" pos:end="555:20">avctx</name><operator pos:start="555:21" pos:end="555:22">-&gt;</operator><name pos:start="555:23" pos:end="555:31">time_base</name><operator pos:start="555:32" pos:end="555:32">.</operator><name pos:start="555:33" pos:end="555:35">den</name></name></expr></argument>, <argument pos:start="555:38" pos:end="555:57"><expr pos:start="555:38" pos:end="555:57"><name pos:start="555:38" pos:end="555:57"><name pos:start="555:38" pos:end="555:42">avctx</name><operator pos:start="555:43" pos:end="555:44">-&gt;</operator><name pos:start="555:45" pos:end="555:53">time_base</name><operator pos:start="555:54" pos:end="555:54">.</operator><name pos:start="555:55" pos:end="555:57">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="557:5" pos:end="567:5"><if pos:start="557:5" pos:end="567:5">if <condition pos:start="557:8" pos:end="557:14">(<expr pos:start="557:9" pos:end="557:13"><name pos:start="557:9" pos:end="557:9">i</name> <operator pos:start="557:11" pos:end="557:11">&gt;</operator> <literal type="number" pos:start="557:13" pos:end="557:13">1</literal></expr>)</condition> <block pos:start="557:16" pos:end="567:5">{<block_content pos:start="559:9" pos:end="563:34">

        <expr_stmt pos:start="559:9" pos:end="559:79"><expr pos:start="559:9" pos:end="559:78"><call pos:start="559:9" pos:end="559:78"><name pos:start="559:9" pos:end="559:14">av_log</name><argument_list pos:start="559:15" pos:end="559:78">(<argument pos:start="559:16" pos:end="559:20"><expr pos:start="559:16" pos:end="559:20"><name pos:start="559:16" pos:end="559:20">avctx</name></expr></argument>, <argument pos:start="559:23" pos:end="559:33"><expr pos:start="559:23" pos:end="559:33"><name pos:start="559:23" pos:end="559:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="559:36" pos:end="559:77"><expr pos:start="559:36" pos:end="559:77"><literal type="string" pos:start="559:36" pos:end="559:77">"removing common factors from framerate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="561:9" pos:end="561:34"><expr pos:start="561:9" pos:end="561:33"><name pos:start="561:9" pos:end="561:28"><name pos:start="561:9" pos:end="561:13">avctx</name><operator pos:start="561:14" pos:end="561:15">-&gt;</operator><name pos:start="561:16" pos:end="561:24">time_base</name><operator pos:start="561:25" pos:end="561:25">.</operator><name pos:start="561:26" pos:end="561:28">den</name></name> <operator pos:start="561:30" pos:end="561:31">/=</operator> <name pos:start="561:33" pos:end="561:33">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="563:9" pos:end="563:34"><expr pos:start="563:9" pos:end="563:33"><name pos:start="563:9" pos:end="563:28"><name pos:start="563:9" pos:end="563:13">avctx</name><operator pos:start="563:14" pos:end="563:15">-&gt;</operator><name pos:start="563:16" pos:end="563:24">time_base</name><operator pos:start="563:25" pos:end="563:25">.</operator><name pos:start="563:26" pos:end="563:28">num</name></name> <operator pos:start="563:30" pos:end="563:31">/=</operator> <name pos:start="563:33" pos:end="563:33">i</name></expr>;</expr_stmt>

        <comment type="line" pos:start="565:9" pos:end="565:20">//return -1;</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="571:5" pos:end="589:5"><if pos:start="571:5" pos:end="581:5">if <condition pos:start="571:8" pos:end="573:82">(<expr pos:start="571:9" pos:end="573:81"><name pos:start="571:9" pos:end="571:21"><name pos:start="571:9" pos:end="571:9">s</name><operator pos:start="571:10" pos:end="571:11">-&gt;</operator><name pos:start="571:12" pos:end="571:21">mpeg_quant</name></name> <operator pos:start="571:23" pos:end="571:24">||</operator> <name pos:start="571:26" pos:end="571:36"><name pos:start="571:26" pos:end="571:26">s</name><operator pos:start="571:27" pos:end="571:28">-&gt;</operator><name pos:start="571:29" pos:end="571:36">codec_id</name></name> <operator pos:start="571:38" pos:end="571:39">==</operator> <name pos:start="571:41" pos:end="571:62">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="571:64" pos:end="571:65">||</operator>

        <name pos:start="573:9" pos:end="573:19"><name pos:start="573:9" pos:end="573:9">s</name><operator pos:start="573:10" pos:end="573:11">-&gt;</operator><name pos:start="573:12" pos:end="573:19">codec_id</name></name> <operator pos:start="573:21" pos:end="573:22">==</operator> <name pos:start="573:24" pos:end="573:45">AV_CODEC_ID_MPEG2VIDEO</name> <operator pos:start="573:47" pos:end="573:48">||</operator> <name pos:start="573:50" pos:end="573:60"><name pos:start="573:50" pos:end="573:50">s</name><operator pos:start="573:51" pos:end="573:52">-&gt;</operator><name pos:start="573:53" pos:end="573:60">codec_id</name></name> <operator pos:start="573:62" pos:end="573:63">==</operator> <name pos:start="573:65" pos:end="573:81">AV_CODEC_ID_MJPEG</name></expr>)</condition> <block pos:start="573:84" pos:end="581:5">{<block_content pos:start="577:9" pos:end="579:32">

        <comment type="line" pos:start="575:9" pos:end="575:30">// (a + x * 3 / 8) / x</comment>

        <expr_stmt pos:start="577:9" pos:end="577:58"><expr pos:start="577:9" pos:end="577:57"><name pos:start="577:9" pos:end="577:27"><name pos:start="577:9" pos:end="577:9">s</name><operator pos:start="577:10" pos:end="577:11">-&gt;</operator><name pos:start="577:12" pos:end="577:27">intra_quant_bias</name></name> <operator pos:start="577:29" pos:end="577:29">=</operator> <literal type="number" pos:start="577:31" pos:end="577:31">3</literal> <operator pos:start="577:33" pos:end="577:34">&lt;&lt;</operator> <operator pos:start="577:36" pos:end="577:36">(</operator><name pos:start="577:37" pos:end="577:52">QUANT_BIAS_SHIFT</name> <operator pos:start="577:54" pos:end="577:54">-</operator> <literal type="number" pos:start="577:56" pos:end="577:56">3</literal><operator pos:start="577:57" pos:end="577:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="579:9" pos:end="579:32"><expr pos:start="579:9" pos:end="579:31"><name pos:start="579:9" pos:end="579:27"><name pos:start="579:9" pos:end="579:9">s</name><operator pos:start="579:10" pos:end="579:11">-&gt;</operator><name pos:start="579:12" pos:end="579:27">inter_quant_bias</name></name> <operator pos:start="579:29" pos:end="579:29">=</operator> <literal type="number" pos:start="579:31" pos:end="579:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="581:7" pos:end="589:5">else <block pos:start="581:12" pos:end="589:5">{<block_content pos:start="583:9" pos:end="587:61">

        <expr_stmt pos:start="583:9" pos:end="583:32"><expr pos:start="583:9" pos:end="583:31"><name pos:start="583:9" pos:end="583:27"><name pos:start="583:9" pos:end="583:9">s</name><operator pos:start="583:10" pos:end="583:11">-&gt;</operator><name pos:start="583:12" pos:end="583:27">intra_quant_bias</name></name> <operator pos:start="583:29" pos:end="583:29">=</operator> <literal type="number" pos:start="583:31" pos:end="583:31">0</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="585:9" pos:end="585:26">// (a - x / 4) / x</comment>

        <expr_stmt pos:start="587:9" pos:end="587:61"><expr pos:start="587:9" pos:end="587:60"><name pos:start="587:9" pos:end="587:27"><name pos:start="587:9" pos:end="587:9">s</name><operator pos:start="587:10" pos:end="587:11">-&gt;</operator><name pos:start="587:12" pos:end="587:27">inter_quant_bias</name></name> <operator pos:start="587:29" pos:end="587:29">=</operator> <operator pos:start="587:31" pos:end="587:31">-</operator><operator pos:start="587:32" pos:end="587:32">(</operator><literal type="number" pos:start="587:33" pos:end="587:33">1</literal> <operator pos:start="587:35" pos:end="587:36">&lt;&lt;</operator> <operator pos:start="587:38" pos:end="587:38">(</operator><name pos:start="587:39" pos:end="587:54">QUANT_BIAS_SHIFT</name> <operator pos:start="587:56" pos:end="587:56">-</operator> <literal type="number" pos:start="587:58" pos:end="587:58">2</literal><operator pos:start="587:59" pos:end="587:59">)</operator><operator pos:start="587:60" pos:end="587:60">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="593:5" pos:end="595:54"><if pos:start="593:5" pos:end="595:54">if <condition pos:start="593:8" pos:end="593:57">(<expr pos:start="593:9" pos:end="593:56"><name pos:start="593:9" pos:end="593:31"><name pos:start="593:9" pos:end="593:13">avctx</name><operator pos:start="593:14" pos:end="593:15">-&gt;</operator><name pos:start="593:16" pos:end="593:31">intra_quant_bias</name></name> <operator pos:start="593:33" pos:end="593:34">!=</operator> <name pos:start="593:36" pos:end="593:56">FF_DEFAULT_QUANT_BIAS</name></expr>)</condition><block type="pseudo" pos:start="595:9" pos:end="595:54"><block_content pos:start="595:9" pos:end="595:54">

        <expr_stmt pos:start="595:9" pos:end="595:54"><expr pos:start="595:9" pos:end="595:53"><name pos:start="595:9" pos:end="595:27"><name pos:start="595:9" pos:end="595:9">s</name><operator pos:start="595:10" pos:end="595:11">-&gt;</operator><name pos:start="595:12" pos:end="595:27">intra_quant_bias</name></name> <operator pos:start="595:29" pos:end="595:29">=</operator> <name pos:start="595:31" pos:end="595:53"><name pos:start="595:31" pos:end="595:35">avctx</name><operator pos:start="595:36" pos:end="595:37">-&gt;</operator><name pos:start="595:38" pos:end="595:53">intra_quant_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="597:5" pos:end="599:54"><if pos:start="597:5" pos:end="599:54">if <condition pos:start="597:8" pos:end="597:57">(<expr pos:start="597:9" pos:end="597:56"><name pos:start="597:9" pos:end="597:31"><name pos:start="597:9" pos:end="597:13">avctx</name><operator pos:start="597:14" pos:end="597:15">-&gt;</operator><name pos:start="597:16" pos:end="597:31">inter_quant_bias</name></name> <operator pos:start="597:33" pos:end="597:34">!=</operator> <name pos:start="597:36" pos:end="597:56">FF_DEFAULT_QUANT_BIAS</name></expr>)</condition><block type="pseudo" pos:start="599:9" pos:end="599:54"><block_content pos:start="599:9" pos:end="599:54">

        <expr_stmt pos:start="599:9" pos:end="599:54"><expr pos:start="599:9" pos:end="599:53"><name pos:start="599:9" pos:end="599:27"><name pos:start="599:9" pos:end="599:9">s</name><operator pos:start="599:10" pos:end="599:11">-&gt;</operator><name pos:start="599:12" pos:end="599:27">inter_quant_bias</name></name> <operator pos:start="599:29" pos:end="599:29">=</operator> <name pos:start="599:31" pos:end="599:53"><name pos:start="599:31" pos:end="599:35">avctx</name><operator pos:start="599:36" pos:end="599:37">-&gt;</operator><name pos:start="599:38" pos:end="599:53">inter_quant_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="603:5" pos:end="619:5"><if pos:start="603:5" pos:end="619:5">if <condition pos:start="603:8" pos:end="605:48">(<expr pos:start="603:9" pos:end="605:47"><name pos:start="603:9" pos:end="603:23"><name pos:start="603:9" pos:end="603:13">avctx</name><operator pos:start="603:14" pos:end="603:15">-&gt;</operator><name pos:start="603:16" pos:end="603:23">codec_id</name></name> <operator pos:start="603:25" pos:end="603:26">==</operator> <name pos:start="603:28" pos:end="603:44">AV_CODEC_ID_MPEG4</name> <operator pos:start="603:46" pos:end="603:47">&amp;&amp;</operator>

        <name pos:start="605:9" pos:end="605:31"><name pos:start="605:9" pos:end="605:9">s</name><operator pos:start="605:10" pos:end="605:11">-&gt;</operator><name pos:start="605:12" pos:end="605:16">avctx</name><operator pos:start="605:17" pos:end="605:18">-&gt;</operator><name pos:start="605:19" pos:end="605:27">time_base</name><operator pos:start="605:28" pos:end="605:28">.</operator><name pos:start="605:29" pos:end="605:31">den</name></name> <operator pos:start="605:33" pos:end="605:33">&gt;</operator> <operator pos:start="605:35" pos:end="605:35">(</operator><literal type="number" pos:start="605:36" pos:end="605:36">1</literal> <operator pos:start="605:38" pos:end="605:39">&lt;&lt;</operator> <literal type="number" pos:start="605:41" pos:end="605:42">16</literal><operator pos:start="605:43" pos:end="605:43">)</operator> <operator pos:start="605:45" pos:end="605:45">-</operator> <literal type="number" pos:start="605:47" pos:end="605:47">1</literal></expr>)</condition> <block pos:start="605:50" pos:end="619:5">{<block_content pos:start="607:9" pos:end="617:18">

        <expr_stmt pos:start="607:9" pos:end="615:30"><expr pos:start="607:9" pos:end="615:29"><call pos:start="607:9" pos:end="615:29"><name pos:start="607:9" pos:end="607:14">av_log</name><argument_list pos:start="607:15" pos:end="615:29">(<argument pos:start="607:16" pos:end="607:20"><expr pos:start="607:16" pos:end="607:20"><name pos:start="607:16" pos:end="607:20">avctx</name></expr></argument>, <argument pos:start="607:23" pos:end="607:34"><expr pos:start="607:23" pos:end="607:34"><name pos:start="607:23" pos:end="607:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="609:16" pos:end="613:24"><expr pos:start="609:16" pos:end="613:24"><literal type="string" pos:start="609:16" pos:end="609:66">"timebase %d/%d not supported by MPEG 4 standard, "</literal>

               <literal type="string" pos:start="611:16" pos:end="611:73">"the maximum admitted value for the timebase denominator "</literal>

               <literal type="string" pos:start="613:16" pos:end="613:24">"is %d\n"</literal></expr></argument>, <argument pos:start="613:27" pos:end="613:49"><expr pos:start="613:27" pos:end="613:49"><name pos:start="613:27" pos:end="613:49"><name pos:start="613:27" pos:end="613:27">s</name><operator pos:start="613:28" pos:end="613:29">-&gt;</operator><name pos:start="613:30" pos:end="613:34">avctx</name><operator pos:start="613:35" pos:end="613:36">-&gt;</operator><name pos:start="613:37" pos:end="613:45">time_base</name><operator pos:start="613:46" pos:end="613:46">.</operator><name pos:start="613:47" pos:end="613:49">num</name></name></expr></argument>, <argument pos:start="613:52" pos:end="613:74"><expr pos:start="613:52" pos:end="613:74"><name pos:start="613:52" pos:end="613:74"><name pos:start="613:52" pos:end="613:52">s</name><operator pos:start="613:53" pos:end="613:54">-&gt;</operator><name pos:start="613:55" pos:end="613:59">avctx</name><operator pos:start="613:60" pos:end="613:61">-&gt;</operator><name pos:start="613:62" pos:end="613:70">time_base</name><operator pos:start="613:71" pos:end="613:71">.</operator><name pos:start="613:72" pos:end="613:74">den</name></name></expr></argument>,

               <argument pos:start="615:16" pos:end="615:28"><expr pos:start="615:16" pos:end="615:28"><operator pos:start="615:16" pos:end="615:16">(</operator><literal type="number" pos:start="615:17" pos:end="615:17">1</literal> <operator pos:start="615:19" pos:end="615:20">&lt;&lt;</operator> <literal type="number" pos:start="615:22" pos:end="615:23">16</literal><operator pos:start="615:24" pos:end="615:24">)</operator> <operator pos:start="615:26" pos:end="615:26">-</operator> <literal type="number" pos:start="615:28" pos:end="615:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="617:9" pos:end="617:18">return <expr pos:start="617:16" pos:end="617:17"><operator pos:start="617:16" pos:end="617:16">-</operator><literal type="number" pos:start="617:17" pos:end="617:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="621:5" pos:end="621:70"><expr pos:start="621:5" pos:end="621:69"><name pos:start="621:5" pos:end="621:26"><name pos:start="621:5" pos:end="621:5">s</name><operator pos:start="621:6" pos:end="621:7">-&gt;</operator><name pos:start="621:8" pos:end="621:26">time_increment_bits</name></name> <operator pos:start="621:28" pos:end="621:28">=</operator> <call pos:start="621:30" pos:end="621:65"><name pos:start="621:30" pos:end="621:36">av_log2</name><argument_list pos:start="621:37" pos:end="621:65">(<argument pos:start="621:38" pos:end="621:64"><expr pos:start="621:38" pos:end="621:64"><name pos:start="621:38" pos:end="621:60"><name pos:start="621:38" pos:end="621:38">s</name><operator pos:start="621:39" pos:end="621:40">-&gt;</operator><name pos:start="621:41" pos:end="621:45">avctx</name><operator pos:start="621:46" pos:end="621:47">-&gt;</operator><name pos:start="621:48" pos:end="621:56">time_base</name><operator pos:start="621:57" pos:end="621:57">.</operator><name pos:start="621:58" pos:end="621:60">den</name></name> <operator pos:start="621:62" pos:end="621:62">-</operator> <literal type="number" pos:start="621:64" pos:end="621:64">1</literal></expr></argument>)</argument_list></call> <operator pos:start="621:67" pos:end="621:67">+</operator> <literal type="number" pos:start="621:69" pos:end="621:69">1</literal></expr>;</expr_stmt>



    <switch pos:start="625:5" pos:end="889:5">switch <condition pos:start="625:12" pos:end="625:29">(<expr pos:start="625:13" pos:end="625:28"><name pos:start="625:13" pos:end="625:28"><name pos:start="625:13" pos:end="625:17">avctx</name><operator pos:start="625:18" pos:end="625:19">-&gt;</operator><name pos:start="625:20" pos:end="625:24">codec</name><operator pos:start="625:25" pos:end="625:26">-&gt;</operator><name pos:start="625:27" pos:end="625:28">id</name></name></expr>)</condition> <block pos:start="625:31" pos:end="889:5">{<block_content pos:start="627:5" pos:end="887:18">

    <case pos:start="627:5" pos:end="627:32">case <expr pos:start="627:10" pos:end="627:31"><name pos:start="627:10" pos:end="627:31">AV_CODEC_ID_MPEG1VIDEO</name></expr>:</case>

        <expr_stmt pos:start="629:9" pos:end="629:34"><expr pos:start="629:9" pos:end="629:33"><name pos:start="629:9" pos:end="629:21"><name pos:start="629:9" pos:end="629:9">s</name><operator pos:start="629:10" pos:end="629:11">-&gt;</operator><name pos:start="629:12" pos:end="629:21">out_format</name></name> <operator pos:start="629:23" pos:end="629:23">=</operator> <name pos:start="629:25" pos:end="629:33">FMT_MPEG1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="631:9" pos:end="631:60"><expr pos:start="631:9" pos:end="631:59"><name pos:start="631:9" pos:end="631:20"><name pos:start="631:9" pos:end="631:9">s</name><operator pos:start="631:10" pos:end="631:11">-&gt;</operator><name pos:start="631:12" pos:end="631:20">low_delay</name></name>  <operator pos:start="631:23" pos:end="631:23">=</operator> <operator pos:start="631:25" pos:end="631:25">!</operator><operator pos:start="631:26" pos:end="631:26">!</operator><operator pos:start="631:27" pos:end="631:27">(</operator><name pos:start="631:28" pos:end="631:35"><name pos:start="631:28" pos:end="631:28">s</name><operator pos:start="631:29" pos:end="631:30">-&gt;</operator><name pos:start="631:31" pos:end="631:35">flags</name></name> <operator pos:start="631:37" pos:end="631:37">&amp;</operator> <name pos:start="631:39" pos:end="631:58">CODEC_FLAG_LOW_DELAY</name><operator pos:start="631:59" pos:end="631:59">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="633:9" pos:end="633:65"><expr pos:start="633:9" pos:end="633:64"><name pos:start="633:9" pos:end="633:20"><name pos:start="633:9" pos:end="633:13">avctx</name><operator pos:start="633:14" pos:end="633:15">-&gt;</operator><name pos:start="633:16" pos:end="633:20">delay</name></name>  <operator pos:start="633:23" pos:end="633:23">=</operator> <ternary pos:start="633:25" pos:end="633:64"><condition pos:start="633:25" pos:end="633:38"><expr pos:start="633:25" pos:end="633:36"><name pos:start="633:25" pos:end="633:36"><name pos:start="633:25" pos:end="633:25">s</name><operator pos:start="633:26" pos:end="633:27">-&gt;</operator><name pos:start="633:28" pos:end="633:36">low_delay</name></name></expr> ?</condition><then pos:start="633:40" pos:end="633:40"> <expr pos:start="633:40" pos:end="633:40"><literal type="number" pos:start="633:40" pos:end="633:40">0</literal></expr> </then><else pos:start="633:42" pos:end="633:64">: <expr pos:start="633:44" pos:end="633:64"><operator pos:start="633:44" pos:end="633:44">(</operator><name pos:start="633:45" pos:end="633:59"><name pos:start="633:45" pos:end="633:45">s</name><operator pos:start="633:46" pos:end="633:47">-&gt;</operator><name pos:start="633:48" pos:end="633:59">max_b_frames</name></name> <operator pos:start="633:61" pos:end="633:61">+</operator> <literal type="number" pos:start="633:63" pos:end="633:63">1</literal><operator pos:start="633:64" pos:end="633:64">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="635:9" pos:end="635:14">break;</break>

    <case pos:start="637:5" pos:end="637:32">case <expr pos:start="637:10" pos:end="637:31"><name pos:start="637:10" pos:end="637:31">AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <expr_stmt pos:start="639:9" pos:end="639:34"><expr pos:start="639:9" pos:end="639:33"><name pos:start="639:9" pos:end="639:21"><name pos:start="639:9" pos:end="639:9">s</name><operator pos:start="639:10" pos:end="639:11">-&gt;</operator><name pos:start="639:12" pos:end="639:21">out_format</name></name> <operator pos:start="639:23" pos:end="639:23">=</operator> <name pos:start="639:25" pos:end="639:33">FMT_MPEG1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="641:9" pos:end="641:60"><expr pos:start="641:9" pos:end="641:59"><name pos:start="641:9" pos:end="641:20"><name pos:start="641:9" pos:end="641:9">s</name><operator pos:start="641:10" pos:end="641:11">-&gt;</operator><name pos:start="641:12" pos:end="641:20">low_delay</name></name>  <operator pos:start="641:23" pos:end="641:23">=</operator> <operator pos:start="641:25" pos:end="641:25">!</operator><operator pos:start="641:26" pos:end="641:26">!</operator><operator pos:start="641:27" pos:end="641:27">(</operator><name pos:start="641:28" pos:end="641:35"><name pos:start="641:28" pos:end="641:28">s</name><operator pos:start="641:29" pos:end="641:30">-&gt;</operator><name pos:start="641:31" pos:end="641:35">flags</name></name> <operator pos:start="641:37" pos:end="641:37">&amp;</operator> <name pos:start="641:39" pos:end="641:58">CODEC_FLAG_LOW_DELAY</name><operator pos:start="641:59" pos:end="641:59">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="643:9" pos:end="643:65"><expr pos:start="643:9" pos:end="643:64"><name pos:start="643:9" pos:end="643:20"><name pos:start="643:9" pos:end="643:13">avctx</name><operator pos:start="643:14" pos:end="643:15">-&gt;</operator><name pos:start="643:16" pos:end="643:20">delay</name></name>  <operator pos:start="643:23" pos:end="643:23">=</operator> <ternary pos:start="643:25" pos:end="643:64"><condition pos:start="643:25" pos:end="643:38"><expr pos:start="643:25" pos:end="643:36"><name pos:start="643:25" pos:end="643:36"><name pos:start="643:25" pos:end="643:25">s</name><operator pos:start="643:26" pos:end="643:27">-&gt;</operator><name pos:start="643:28" pos:end="643:36">low_delay</name></name></expr> ?</condition><then pos:start="643:40" pos:end="643:40"> <expr pos:start="643:40" pos:end="643:40"><literal type="number" pos:start="643:40" pos:end="643:40">0</literal></expr> </then><else pos:start="643:42" pos:end="643:64">: <expr pos:start="643:44" pos:end="643:64"><operator pos:start="643:44" pos:end="643:44">(</operator><name pos:start="643:45" pos:end="643:59"><name pos:start="643:45" pos:end="643:45">s</name><operator pos:start="643:46" pos:end="643:47">-&gt;</operator><name pos:start="643:48" pos:end="643:59">max_b_frames</name></name> <operator pos:start="643:61" pos:end="643:61">+</operator> <literal type="number" pos:start="643:63" pos:end="643:63">1</literal><operator pos:start="643:64" pos:end="643:64">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="645:9" pos:end="645:26"><expr pos:start="645:9" pos:end="645:25"><name pos:start="645:9" pos:end="645:19"><name pos:start="645:9" pos:end="645:9">s</name><operator pos:start="645:10" pos:end="645:11">-&gt;</operator><name pos:start="645:12" pos:end="645:19">rtp_mode</name></name>   <operator pos:start="645:23" pos:end="645:23">=</operator> <literal type="number" pos:start="645:25" pos:end="645:25">1</literal></expr>;</expr_stmt>

        <break pos:start="647:9" pos:end="647:14">break;</break>

    <case pos:start="649:5" pos:end="649:27">case <expr pos:start="649:10" pos:end="649:26"><name pos:start="649:10" pos:end="649:26">AV_CODEC_ID_MJPEG</name></expr>:</case>

        <expr_stmt pos:start="651:9" pos:end="651:34"><expr pos:start="651:9" pos:end="651:33"><name pos:start="651:9" pos:end="651:21"><name pos:start="651:9" pos:end="651:9">s</name><operator pos:start="651:10" pos:end="651:11">-&gt;</operator><name pos:start="651:12" pos:end="651:21">out_format</name></name> <operator pos:start="651:23" pos:end="651:23">=</operator> <name pos:start="651:25" pos:end="651:33">FMT_MJPEG</name></expr>;</expr_stmt>

        <expr_stmt pos:start="653:9" pos:end="653:26"><expr pos:start="653:9" pos:end="653:25"><name pos:start="653:9" pos:end="653:21"><name pos:start="653:9" pos:end="653:9">s</name><operator pos:start="653:10" pos:end="653:11">-&gt;</operator><name pos:start="653:12" pos:end="653:21">intra_only</name></name> <operator pos:start="653:23" pos:end="653:23">=</operator> <literal type="number" pos:start="653:25" pos:end="653:25">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="653:28" pos:end="653:58">/* force intra only for jpeg */</comment>

        <if_stmt pos:start="655:9" pos:end="659:22"><if pos:start="655:9" pos:end="659:22">if <condition pos:start="655:12" pos:end="657:40">(<expr pos:start="655:13" pos:end="657:39"><operator pos:start="655:13" pos:end="655:13">!</operator><name pos:start="655:14" pos:end="655:33">CONFIG_MJPEG_ENCODER</name> <operator pos:start="655:35" pos:end="655:36">||</operator>

            <call pos:start="657:13" pos:end="657:35"><name pos:start="657:13" pos:end="657:32">ff_mjpeg_encode_init</name><argument_list pos:start="657:33" pos:end="657:35">(<argument pos:start="657:34" pos:end="657:34"><expr pos:start="657:34" pos:end="657:34"><name pos:start="657:34" pos:end="657:34">s</name></expr></argument>)</argument_list></call> <operator pos:start="657:37" pos:end="657:37">&lt;</operator> <literal type="number" pos:start="657:39" pos:end="657:39">0</literal></expr>)</condition><block type="pseudo" pos:start="659:13" pos:end="659:22"><block_content pos:start="659:13" pos:end="659:22">

            <return pos:start="659:13" pos:end="659:22">return <expr pos:start="659:20" pos:end="659:21"><operator pos:start="659:20" pos:end="659:20">-</operator><literal type="number" pos:start="659:21" pos:end="659:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="661:9" pos:end="661:25"><expr pos:start="661:9" pos:end="661:24"><name pos:start="661:9" pos:end="661:20"><name pos:start="661:9" pos:end="661:13">avctx</name><operator pos:start="661:14" pos:end="661:15">-&gt;</operator><name pos:start="661:16" pos:end="661:20">delay</name></name> <operator pos:start="661:22" pos:end="661:22">=</operator> <literal type="number" pos:start="661:24" pos:end="661:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="663:9" pos:end="663:25"><expr pos:start="663:9" pos:end="663:24"><name pos:start="663:9" pos:end="663:20"><name pos:start="663:9" pos:end="663:9">s</name><operator pos:start="663:10" pos:end="663:11">-&gt;</operator><name pos:start="663:12" pos:end="663:20">low_delay</name></name> <operator pos:start="663:22" pos:end="663:22">=</operator> <literal type="number" pos:start="663:24" pos:end="663:24">1</literal></expr>;</expr_stmt>

        <break pos:start="665:9" pos:end="665:14">break;</break>

    <case pos:start="667:5" pos:end="667:26">case <expr pos:start="667:10" pos:end="667:25"><name pos:start="667:10" pos:end="667:25">AV_CODEC_ID_H261</name></expr>:</case>

        <if_stmt pos:start="669:9" pos:end="671:22"><if pos:start="669:9" pos:end="671:22">if <condition pos:start="669:12" pos:end="669:33">(<expr pos:start="669:13" pos:end="669:32"><operator pos:start="669:13" pos:end="669:13">!</operator><name pos:start="669:14" pos:end="669:32">CONFIG_H261_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="671:13" pos:end="671:22"><block_content pos:start="671:13" pos:end="671:22">

            <return pos:start="671:13" pos:end="671:22">return <expr pos:start="671:20" pos:end="671:21"><operator pos:start="671:20" pos:end="671:20">-</operator><literal type="number" pos:start="671:21" pos:end="671:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="673:9" pos:end="685:9"><if pos:start="673:9" pos:end="685:9">if <condition pos:start="673:12" pos:end="673:64">(<expr pos:start="673:13" pos:end="673:63"><call pos:start="673:13" pos:end="673:59"><name pos:start="673:13" pos:end="673:38">ff_h261_get_picture_format</name><argument_list pos:start="673:39" pos:end="673:59">(<argument pos:start="673:40" pos:end="673:47"><expr pos:start="673:40" pos:end="673:47"><name pos:start="673:40" pos:end="673:47"><name pos:start="673:40" pos:end="673:40">s</name><operator pos:start="673:41" pos:end="673:42">-&gt;</operator><name pos:start="673:43" pos:end="673:47">width</name></name></expr></argument>, <argument pos:start="673:50" pos:end="673:58"><expr pos:start="673:50" pos:end="673:58"><name pos:start="673:50" pos:end="673:58"><name pos:start="673:50" pos:end="673:50">s</name><operator pos:start="673:51" pos:end="673:52">-&gt;</operator><name pos:start="673:53" pos:end="673:58">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="673:61" pos:end="673:61">&lt;</operator> <literal type="number" pos:start="673:63" pos:end="673:63">0</literal></expr>)</condition> <block pos:start="673:66" pos:end="685:9">{<block_content pos:start="675:13" pos:end="683:22">

            <expr_stmt pos:start="675:13" pos:end="681:41"><expr pos:start="675:13" pos:end="681:40"><call pos:start="675:13" pos:end="681:40"><name pos:start="675:13" pos:end="675:18">av_log</name><argument_list pos:start="675:19" pos:end="681:40">(<argument pos:start="675:20" pos:end="675:24"><expr pos:start="675:20" pos:end="675:24"><name pos:start="675:20" pos:end="675:24">avctx</name></expr></argument>, <argument pos:start="675:27" pos:end="675:38"><expr pos:start="675:27" pos:end="675:38"><name pos:start="675:27" pos:end="675:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="677:20" pos:end="679:69"><expr pos:start="677:20" pos:end="679:69"><literal type="string" pos:start="677:20" pos:end="677:78">"The specified picture size of %dx%d is not valid for the "</literal>

                   <literal type="string" pos:start="679:20" pos:end="679:69">"H.261 codec.\nValid sizes are 176x144, 352x288\n"</literal></expr></argument>,

                    <argument pos:start="681:21" pos:end="681:28"><expr pos:start="681:21" pos:end="681:28"><name pos:start="681:21" pos:end="681:28"><name pos:start="681:21" pos:end="681:21">s</name><operator pos:start="681:22" pos:end="681:23">-&gt;</operator><name pos:start="681:24" pos:end="681:28">width</name></name></expr></argument>, <argument pos:start="681:31" pos:end="681:39"><expr pos:start="681:31" pos:end="681:39"><name pos:start="681:31" pos:end="681:39"><name pos:start="681:31" pos:end="681:31">s</name><operator pos:start="681:32" pos:end="681:33">-&gt;</operator><name pos:start="681:34" pos:end="681:39">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="683:13" pos:end="683:22">return <expr pos:start="683:20" pos:end="683:21"><operator pos:start="683:20" pos:end="683:20">-</operator><literal type="number" pos:start="683:21" pos:end="683:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="687:9" pos:end="687:33"><expr pos:start="687:9" pos:end="687:32"><name pos:start="687:9" pos:end="687:21"><name pos:start="687:9" pos:end="687:9">s</name><operator pos:start="687:10" pos:end="687:11">-&gt;</operator><name pos:start="687:12" pos:end="687:21">out_format</name></name> <operator pos:start="687:23" pos:end="687:23">=</operator> <name pos:start="687:25" pos:end="687:32">FMT_H261</name></expr>;</expr_stmt>

        <expr_stmt pos:start="689:9" pos:end="689:26"><expr pos:start="689:9" pos:end="689:25"><name pos:start="689:9" pos:end="689:20"><name pos:start="689:9" pos:end="689:13">avctx</name><operator pos:start="689:14" pos:end="689:15">-&gt;</operator><name pos:start="689:16" pos:end="689:20">delay</name></name>  <operator pos:start="689:23" pos:end="689:23">=</operator> <literal type="number" pos:start="689:25" pos:end="689:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="691:9" pos:end="691:26"><expr pos:start="691:9" pos:end="691:25"><name pos:start="691:9" pos:end="691:20"><name pos:start="691:9" pos:end="691:9">s</name><operator pos:start="691:10" pos:end="691:11">-&gt;</operator><name pos:start="691:12" pos:end="691:20">low_delay</name></name>  <operator pos:start="691:23" pos:end="691:23">=</operator> <literal type="number" pos:start="691:25" pos:end="691:25">1</literal></expr>;</expr_stmt>

        <break pos:start="693:9" pos:end="693:14">break;</break>

    <case pos:start="695:5" pos:end="695:26">case <expr pos:start="695:10" pos:end="695:25"><name pos:start="695:10" pos:end="695:25">AV_CODEC_ID_H263</name></expr>:</case>

        <if_stmt pos:start="697:9" pos:end="699:18"><if pos:start="697:9" pos:end="699:18">if <condition pos:start="697:12" pos:end="697:33">(<expr pos:start="697:13" pos:end="697:32"><operator pos:start="697:13" pos:end="697:13">!</operator><name pos:start="697:14" pos:end="697:32">CONFIG_H263_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="699:9" pos:end="699:18"><block_content pos:start="699:9" pos:end="699:18">

        <return pos:start="699:9" pos:end="699:18">return <expr pos:start="699:16" pos:end="699:17"><operator pos:start="699:16" pos:end="699:16">-</operator><literal type="number" pos:start="699:17" pos:end="699:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="701:9" pos:end="717:9"><if pos:start="701:9" pos:end="717:9">if <condition pos:start="701:12" pos:end="703:55">(<expr pos:start="701:13" pos:end="703:54"><call pos:start="701:13" pos:end="703:49"><name pos:start="701:13" pos:end="701:28">ff_match_2uint16</name><argument_list pos:start="701:29" pos:end="703:49">(<argument pos:start="701:30" pos:end="701:43"><expr pos:start="701:30" pos:end="701:43"><name pos:start="701:30" pos:end="701:43">ff_h263_format</name></expr></argument>, <argument pos:start="701:46" pos:end="701:75"><expr pos:start="701:46" pos:end="701:75"><call pos:start="701:46" pos:end="701:75"><name pos:start="701:46" pos:end="701:59">FF_ARRAY_ELEMS</name><argument_list pos:start="701:60" pos:end="701:75">(<argument pos:start="701:61" pos:end="701:74"><expr pos:start="701:61" pos:end="701:74"><name pos:start="701:61" pos:end="701:74">ff_h263_format</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="703:30" pos:end="703:37"><expr pos:start="703:30" pos:end="703:37"><name pos:start="703:30" pos:end="703:37"><name pos:start="703:30" pos:end="703:30">s</name><operator pos:start="703:31" pos:end="703:32">-&gt;</operator><name pos:start="703:33" pos:end="703:37">width</name></name></expr></argument>, <argument pos:start="703:40" pos:end="703:48"><expr pos:start="703:40" pos:end="703:48"><name pos:start="703:40" pos:end="703:48"><name pos:start="703:40" pos:end="703:40">s</name><operator pos:start="703:41" pos:end="703:42">-&gt;</operator><name pos:start="703:43" pos:end="703:48">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="703:51" pos:end="703:52">==</operator> <literal type="number" pos:start="703:54" pos:end="703:54">8</literal></expr>)</condition> <block pos:start="703:57" pos:end="717:9">{<block_content pos:start="705:13" pos:end="715:22">

            <expr_stmt pos:start="705:13" pos:end="713:57"><expr pos:start="705:13" pos:end="713:56"><call pos:start="705:13" pos:end="713:56"><name pos:start="705:13" pos:end="705:18">av_log</name><argument_list pos:start="705:19" pos:end="713:56">(<argument pos:start="705:20" pos:end="705:24"><expr pos:start="705:20" pos:end="705:24"><name pos:start="705:20" pos:end="705:24">avctx</name></expr></argument>, <argument pos:start="705:27" pos:end="705:37"><expr pos:start="705:27" pos:end="705:37"><name pos:start="705:27" pos:end="705:37">AV_LOG_INFO</name></expr></argument>,

                   <argument pos:start="707:20" pos:end="713:34"><expr pos:start="707:20" pos:end="713:34"><literal type="string" pos:start="707:20" pos:end="707:74">"The specified picture size of %dx%d is not valid for "</literal>

                   <literal type="string" pos:start="709:20" pos:end="709:72">"the H.263 codec.\nValid sizes are 128x96, 176x144, "</literal>

                   <literal type="string" pos:start="711:20" pos:end="711:53">"352x288, 704x576, and 1408x1152."</literal>

                   <literal type="string" pos:start="713:20" pos:end="713:34">"Try H.263+.\n"</literal></expr></argument>, <argument pos:start="713:37" pos:end="713:44"><expr pos:start="713:37" pos:end="713:44"><name pos:start="713:37" pos:end="713:44"><name pos:start="713:37" pos:end="713:37">s</name><operator pos:start="713:38" pos:end="713:39">-&gt;</operator><name pos:start="713:40" pos:end="713:44">width</name></name></expr></argument>, <argument pos:start="713:47" pos:end="713:55"><expr pos:start="713:47" pos:end="713:55"><name pos:start="713:47" pos:end="713:55"><name pos:start="713:47" pos:end="713:47">s</name><operator pos:start="713:48" pos:end="713:49">-&gt;</operator><name pos:start="713:50" pos:end="713:55">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="715:13" pos:end="715:22">return <expr pos:start="715:20" pos:end="715:21"><operator pos:start="715:20" pos:end="715:20">-</operator><literal type="number" pos:start="715:21" pos:end="715:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="719:9" pos:end="719:33"><expr pos:start="719:9" pos:end="719:32"><name pos:start="719:9" pos:end="719:21"><name pos:start="719:9" pos:end="719:9">s</name><operator pos:start="719:10" pos:end="719:11">-&gt;</operator><name pos:start="719:12" pos:end="719:21">out_format</name></name> <operator pos:start="719:23" pos:end="719:23">=</operator> <name pos:start="719:25" pos:end="719:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="721:9" pos:end="721:26"><expr pos:start="721:9" pos:end="721:25"><name pos:start="721:9" pos:end="721:20"><name pos:start="721:9" pos:end="721:13">avctx</name><operator pos:start="721:14" pos:end="721:15">-&gt;</operator><name pos:start="721:16" pos:end="721:20">delay</name></name>  <operator pos:start="721:23" pos:end="721:23">=</operator> <literal type="number" pos:start="721:25" pos:end="721:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="723:9" pos:end="723:26"><expr pos:start="723:9" pos:end="723:25"><name pos:start="723:9" pos:end="723:20"><name pos:start="723:9" pos:end="723:9">s</name><operator pos:start="723:10" pos:end="723:11">-&gt;</operator><name pos:start="723:12" pos:end="723:20">low_delay</name></name>  <operator pos:start="723:23" pos:end="723:23">=</operator> <literal type="number" pos:start="723:25" pos:end="723:25">1</literal></expr>;</expr_stmt>

        <break pos:start="725:9" pos:end="725:14">break;</break>

    <case pos:start="727:5" pos:end="727:27">case <expr pos:start="727:10" pos:end="727:26"><name pos:start="727:10" pos:end="727:26">AV_CODEC_ID_H263P</name></expr>:</case>

        <expr_stmt pos:start="729:9" pos:end="729:33"><expr pos:start="729:9" pos:end="729:32"><name pos:start="729:9" pos:end="729:21"><name pos:start="729:9" pos:end="729:9">s</name><operator pos:start="729:10" pos:end="729:11">-&gt;</operator><name pos:start="729:12" pos:end="729:21">out_format</name></name> <operator pos:start="729:23" pos:end="729:23">=</operator> <name pos:start="729:25" pos:end="729:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="731:9" pos:end="731:26"><expr pos:start="731:9" pos:end="731:25"><name pos:start="731:9" pos:end="731:20"><name pos:start="731:9" pos:end="731:9">s</name><operator pos:start="731:10" pos:end="731:11">-&gt;</operator><name pos:start="731:12" pos:end="731:20">h263_plus</name></name>  <operator pos:start="731:23" pos:end="731:23">=</operator> <literal type="number" pos:start="731:25" pos:end="731:25">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="733:9" pos:end="733:16">/* Fx */</comment>

        <expr_stmt pos:start="735:9" pos:end="735:73"><expr pos:start="735:9" pos:end="735:72"><name pos:start="735:9" pos:end="735:19"><name pos:start="735:9" pos:end="735:9">s</name><operator pos:start="735:10" pos:end="735:11">-&gt;</operator><name pos:start="735:12" pos:end="735:19">h263_aic</name></name>        <operator pos:start="735:28" pos:end="735:28">=</operator> <ternary pos:start="735:30" pos:end="735:72"><condition pos:start="735:30" pos:end="735:66"><expr pos:start="735:30" pos:end="735:64"><operator pos:start="735:30" pos:end="735:30">(</operator><name pos:start="735:31" pos:end="735:42"><name pos:start="735:31" pos:end="735:35">avctx</name><operator pos:start="735:36" pos:end="735:37">-&gt;</operator><name pos:start="735:38" pos:end="735:42">flags</name></name> <operator pos:start="735:44" pos:end="735:44">&amp;</operator> <name pos:start="735:46" pos:end="735:63">CODEC_FLAG_AC_PRED</name><operator pos:start="735:64" pos:end="735:64">)</operator></expr> ?</condition><then pos:start="735:68" pos:end="735:68"> <expr pos:start="735:68" pos:end="735:68"><literal type="number" pos:start="735:68" pos:end="735:68">1</literal></expr> </then><else pos:start="735:70" pos:end="735:72">: <expr pos:start="735:72" pos:end="735:72"><literal type="number" pos:start="735:72" pos:end="735:72">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="737:9" pos:end="737:41"><expr pos:start="737:9" pos:end="737:40"><name pos:start="737:9" pos:end="737:25"><name pos:start="737:9" pos:end="737:9">s</name><operator pos:start="737:10" pos:end="737:11">-&gt;</operator><name pos:start="737:12" pos:end="737:25">modified_quant</name></name>  <operator pos:start="737:28" pos:end="737:28">=</operator> <name pos:start="737:30" pos:end="737:40"><name pos:start="737:30" pos:end="737:30">s</name><operator pos:start="737:31" pos:end="737:32">-&gt;</operator><name pos:start="737:33" pos:end="737:40">h263_aic</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="739:9" pos:end="739:77"><expr pos:start="739:9" pos:end="739:76"><name pos:start="739:9" pos:end="739:22"><name pos:start="739:9" pos:end="739:9">s</name><operator pos:start="739:10" pos:end="739:11">-&gt;</operator><name pos:start="739:12" pos:end="739:22">loop_filter</name></name>     <operator pos:start="739:28" pos:end="739:28">=</operator> <ternary pos:start="739:30" pos:end="739:76"><condition pos:start="739:30" pos:end="739:70"><expr pos:start="739:30" pos:end="739:68"><operator pos:start="739:30" pos:end="739:30">(</operator><name pos:start="739:31" pos:end="739:42"><name pos:start="739:31" pos:end="739:35">avctx</name><operator pos:start="739:36" pos:end="739:37">-&gt;</operator><name pos:start="739:38" pos:end="739:42">flags</name></name> <operator pos:start="739:44" pos:end="739:44">&amp;</operator> <name pos:start="739:46" pos:end="739:67">CODEC_FLAG_LOOP_FILTER</name><operator pos:start="739:68" pos:end="739:68">)</operator></expr> ?</condition><then pos:start="739:72" pos:end="739:72"> <expr pos:start="739:72" pos:end="739:72"><literal type="number" pos:start="739:72" pos:end="739:72">1</literal></expr> </then><else pos:start="739:74" pos:end="739:76">: <expr pos:start="739:76" pos:end="739:76"><literal type="number" pos:start="739:76" pos:end="739:76">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="741:9" pos:end="741:69"><expr pos:start="741:9" pos:end="741:68"><name pos:start="741:9" pos:end="741:26"><name pos:start="741:9" pos:end="741:9">s</name><operator pos:start="741:10" pos:end="741:11">-&gt;</operator><name pos:start="741:12" pos:end="741:26">unrestricted_mv</name></name> <operator pos:start="741:28" pos:end="741:28">=</operator> <name pos:start="741:30" pos:end="741:36"><name pos:start="741:30" pos:end="741:30">s</name><operator pos:start="741:31" pos:end="741:32">-&gt;</operator><name pos:start="741:33" pos:end="741:36">obmc</name></name> <operator pos:start="741:38" pos:end="741:39">||</operator> <name pos:start="741:41" pos:end="741:54"><name pos:start="741:41" pos:end="741:41">s</name><operator pos:start="741:42" pos:end="741:43">-&gt;</operator><name pos:start="741:44" pos:end="741:54">loop_filter</name></name> <operator pos:start="741:56" pos:end="741:57">||</operator> <name pos:start="741:59" pos:end="741:68"><name pos:start="741:59" pos:end="741:59">s</name><operator pos:start="741:60" pos:end="741:61">-&gt;</operator><name pos:start="741:62" pos:end="741:68">umvplus</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="745:9" pos:end="745:17">/* /Fx */</comment>

        <comment type="block" pos:start="747:9" pos:end="747:39">/* These are just to be sure */</comment>

        <expr_stmt pos:start="749:9" pos:end="749:25"><expr pos:start="749:9" pos:end="749:24"><name pos:start="749:9" pos:end="749:20"><name pos:start="749:9" pos:end="749:13">avctx</name><operator pos:start="749:14" pos:end="749:15">-&gt;</operator><name pos:start="749:16" pos:end="749:20">delay</name></name> <operator pos:start="749:22" pos:end="749:22">=</operator> <literal type="number" pos:start="749:24" pos:end="749:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="751:9" pos:end="751:25"><expr pos:start="751:9" pos:end="751:24"><name pos:start="751:9" pos:end="751:20"><name pos:start="751:9" pos:end="751:9">s</name><operator pos:start="751:10" pos:end="751:11">-&gt;</operator><name pos:start="751:12" pos:end="751:20">low_delay</name></name> <operator pos:start="751:22" pos:end="751:22">=</operator> <literal type="number" pos:start="751:24" pos:end="751:24">1</literal></expr>;</expr_stmt>

        <break pos:start="753:9" pos:end="753:14">break;</break>

    <case pos:start="755:5" pos:end="755:26">case <expr pos:start="755:10" pos:end="755:25"><name pos:start="755:10" pos:end="755:25">AV_CODEC_ID_FLV1</name></expr>:</case>

        <expr_stmt pos:start="757:9" pos:end="757:38"><expr pos:start="757:9" pos:end="757:37"><name pos:start="757:9" pos:end="757:21"><name pos:start="757:9" pos:end="757:9">s</name><operator pos:start="757:10" pos:end="757:11">-&gt;</operator><name pos:start="757:12" pos:end="757:21">out_format</name></name>      <operator pos:start="757:28" pos:end="757:28">=</operator> <name pos:start="757:30" pos:end="757:37">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="759:9" pos:end="759:31"><expr pos:start="759:9" pos:end="759:30"><name pos:start="759:9" pos:end="759:19"><name pos:start="759:9" pos:end="759:9">s</name><operator pos:start="759:10" pos:end="759:11">-&gt;</operator><name pos:start="759:12" pos:end="759:19">h263_flv</name></name>        <operator pos:start="759:28" pos:end="759:28">=</operator> <literal type="number" pos:start="759:30" pos:end="759:30">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="759:33" pos:end="759:62">/* format = 1; 11-bit codes */</comment>

        <expr_stmt pos:start="761:9" pos:end="761:31"><expr pos:start="761:9" pos:end="761:30"><name pos:start="761:9" pos:end="761:26"><name pos:start="761:9" pos:end="761:9">s</name><operator pos:start="761:10" pos:end="761:11">-&gt;</operator><name pos:start="761:12" pos:end="761:26">unrestricted_mv</name></name> <operator pos:start="761:28" pos:end="761:28">=</operator> <literal type="number" pos:start="761:30" pos:end="761:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="763:9" pos:end="763:25"><expr pos:start="763:9" pos:end="763:24"><name pos:start="763:9" pos:end="763:19"><name pos:start="763:9" pos:end="763:9">s</name><operator pos:start="763:10" pos:end="763:11">-&gt;</operator><name pos:start="763:12" pos:end="763:19">rtp_mode</name></name>  <operator pos:start="763:22" pos:end="763:22">=</operator> <literal type="number" pos:start="763:24" pos:end="763:24">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="763:27" pos:end="763:47">/* don't allow GOB */</comment>

        <expr_stmt pos:start="765:9" pos:end="765:25"><expr pos:start="765:9" pos:end="765:24"><name pos:start="765:9" pos:end="765:20"><name pos:start="765:9" pos:end="765:13">avctx</name><operator pos:start="765:14" pos:end="765:15">-&gt;</operator><name pos:start="765:16" pos:end="765:20">delay</name></name> <operator pos:start="765:22" pos:end="765:22">=</operator> <literal type="number" pos:start="765:24" pos:end="765:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="767:9" pos:end="767:25"><expr pos:start="767:9" pos:end="767:24"><name pos:start="767:9" pos:end="767:20"><name pos:start="767:9" pos:end="767:9">s</name><operator pos:start="767:10" pos:end="767:11">-&gt;</operator><name pos:start="767:12" pos:end="767:20">low_delay</name></name> <operator pos:start="767:22" pos:end="767:22">=</operator> <literal type="number" pos:start="767:24" pos:end="767:24">1</literal></expr>;</expr_stmt>

        <break pos:start="769:9" pos:end="769:14">break;</break>

    <case pos:start="771:5" pos:end="771:26">case <expr pos:start="771:10" pos:end="771:25"><name pos:start="771:10" pos:end="771:25">AV_CODEC_ID_RV10</name></expr>:</case>

        <expr_stmt pos:start="773:9" pos:end="773:33"><expr pos:start="773:9" pos:end="773:32"><name pos:start="773:9" pos:end="773:21"><name pos:start="773:9" pos:end="773:9">s</name><operator pos:start="773:10" pos:end="773:11">-&gt;</operator><name pos:start="773:12" pos:end="773:21">out_format</name></name> <operator pos:start="773:23" pos:end="773:23">=</operator> <name pos:start="773:25" pos:end="773:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="775:9" pos:end="775:26"><expr pos:start="775:9" pos:end="775:25"><name pos:start="775:9" pos:end="775:20"><name pos:start="775:9" pos:end="775:13">avctx</name><operator pos:start="775:14" pos:end="775:15">-&gt;</operator><name pos:start="775:16" pos:end="775:20">delay</name></name>  <operator pos:start="775:23" pos:end="775:23">=</operator> <literal type="number" pos:start="775:25" pos:end="775:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="777:9" pos:end="777:26"><expr pos:start="777:9" pos:end="777:25"><name pos:start="777:9" pos:end="777:20"><name pos:start="777:9" pos:end="777:9">s</name><operator pos:start="777:10" pos:end="777:11">-&gt;</operator><name pos:start="777:12" pos:end="777:20">low_delay</name></name>  <operator pos:start="777:23" pos:end="777:23">=</operator> <literal type="number" pos:start="777:25" pos:end="777:25">1</literal></expr>;</expr_stmt>

        <break pos:start="779:9" pos:end="779:14">break;</break>

    <case pos:start="781:5" pos:end="781:26">case <expr pos:start="781:10" pos:end="781:25"><name pos:start="781:10" pos:end="781:25">AV_CODEC_ID_RV20</name></expr>:</case>

        <expr_stmt pos:start="783:9" pos:end="783:38"><expr pos:start="783:9" pos:end="783:37"><name pos:start="783:9" pos:end="783:21"><name pos:start="783:9" pos:end="783:9">s</name><operator pos:start="783:10" pos:end="783:11">-&gt;</operator><name pos:start="783:12" pos:end="783:21">out_format</name></name>      <operator pos:start="783:28" pos:end="783:28">=</operator> <name pos:start="783:30" pos:end="783:37">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="785:9" pos:end="785:31"><expr pos:start="785:9" pos:end="785:30"><name pos:start="785:9" pos:end="785:20"><name pos:start="785:9" pos:end="785:13">avctx</name><operator pos:start="785:14" pos:end="785:15">-&gt;</operator><name pos:start="785:16" pos:end="785:20">delay</name></name>       <operator pos:start="785:28" pos:end="785:28">=</operator> <literal type="number" pos:start="785:30" pos:end="785:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="787:9" pos:end="787:31"><expr pos:start="787:9" pos:end="787:30"><name pos:start="787:9" pos:end="787:20"><name pos:start="787:9" pos:end="787:9">s</name><operator pos:start="787:10" pos:end="787:11">-&gt;</operator><name pos:start="787:12" pos:end="787:20">low_delay</name></name>       <operator pos:start="787:28" pos:end="787:28">=</operator> <literal type="number" pos:start="787:30" pos:end="787:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="789:9" pos:end="789:31"><expr pos:start="789:9" pos:end="789:30"><name pos:start="789:9" pos:end="789:25"><name pos:start="789:9" pos:end="789:9">s</name><operator pos:start="789:10" pos:end="789:11">-&gt;</operator><name pos:start="789:12" pos:end="789:25">modified_quant</name></name>  <operator pos:start="789:28" pos:end="789:28">=</operator> <literal type="number" pos:start="789:30" pos:end="789:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="791:9" pos:end="791:31"><expr pos:start="791:9" pos:end="791:30"><name pos:start="791:9" pos:end="791:19"><name pos:start="791:9" pos:end="791:9">s</name><operator pos:start="791:10" pos:end="791:11">-&gt;</operator><name pos:start="791:12" pos:end="791:19">h263_aic</name></name>        <operator pos:start="791:28" pos:end="791:28">=</operator> <literal type="number" pos:start="791:30" pos:end="791:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="793:9" pos:end="793:31"><expr pos:start="793:9" pos:end="793:30"><name pos:start="793:9" pos:end="793:20"><name pos:start="793:9" pos:end="793:9">s</name><operator pos:start="793:10" pos:end="793:11">-&gt;</operator><name pos:start="793:12" pos:end="793:20">h263_plus</name></name>       <operator pos:start="793:28" pos:end="793:28">=</operator> <literal type="number" pos:start="793:30" pos:end="793:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="795:9" pos:end="795:31"><expr pos:start="795:9" pos:end="795:30"><name pos:start="795:9" pos:end="795:22"><name pos:start="795:9" pos:end="795:9">s</name><operator pos:start="795:10" pos:end="795:11">-&gt;</operator><name pos:start="795:12" pos:end="795:22">loop_filter</name></name>     <operator pos:start="795:28" pos:end="795:28">=</operator> <literal type="number" pos:start="795:30" pos:end="795:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="797:9" pos:end="797:31"><expr pos:start="797:9" pos:end="797:30"><name pos:start="797:9" pos:end="797:26"><name pos:start="797:9" pos:end="797:9">s</name><operator pos:start="797:10" pos:end="797:11">-&gt;</operator><name pos:start="797:12" pos:end="797:26">unrestricted_mv</name></name> <operator pos:start="797:28" pos:end="797:28">=</operator> <literal type="number" pos:start="797:30" pos:end="797:30">0</literal></expr>;</expr_stmt>

        <break pos:start="799:9" pos:end="799:14">break;</break>

    <case pos:start="801:5" pos:end="801:27">case <expr pos:start="801:10" pos:end="801:26"><name pos:start="801:10" pos:end="801:26">AV_CODEC_ID_MPEG4</name></expr>:</case>

        <expr_stmt pos:start="803:9" pos:end="803:38"><expr pos:start="803:9" pos:end="803:37"><name pos:start="803:9" pos:end="803:21"><name pos:start="803:9" pos:end="803:9">s</name><operator pos:start="803:10" pos:end="803:11">-&gt;</operator><name pos:start="803:12" pos:end="803:21">out_format</name></name>      <operator pos:start="803:28" pos:end="803:28">=</operator> <name pos:start="803:30" pos:end="803:37">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="805:9" pos:end="805:31"><expr pos:start="805:9" pos:end="805:30"><name pos:start="805:9" pos:end="805:20"><name pos:start="805:9" pos:end="805:9">s</name><operator pos:start="805:10" pos:end="805:11">-&gt;</operator><name pos:start="805:12" pos:end="805:20">h263_pred</name></name>       <operator pos:start="805:28" pos:end="805:28">=</operator> <literal type="number" pos:start="805:30" pos:end="805:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="807:9" pos:end="807:31"><expr pos:start="807:9" pos:end="807:30"><name pos:start="807:9" pos:end="807:26"><name pos:start="807:9" pos:end="807:9">s</name><operator pos:start="807:10" pos:end="807:11">-&gt;</operator><name pos:start="807:12" pos:end="807:26">unrestricted_mv</name></name> <operator pos:start="807:28" pos:end="807:28">=</operator> <literal type="number" pos:start="807:30" pos:end="807:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="809:9" pos:end="809:53"><expr pos:start="809:9" pos:end="809:52"><name pos:start="809:9" pos:end="809:20"><name pos:start="809:9" pos:end="809:9">s</name><operator pos:start="809:10" pos:end="809:11">-&gt;</operator><name pos:start="809:12" pos:end="809:20">low_delay</name></name>       <operator pos:start="809:28" pos:end="809:28">=</operator> <ternary pos:start="809:30" pos:end="809:52"><condition pos:start="809:30" pos:end="809:46"><expr pos:start="809:30" pos:end="809:44"><name pos:start="809:30" pos:end="809:44"><name pos:start="809:30" pos:end="809:30">s</name><operator pos:start="809:31" pos:end="809:32">-&gt;</operator><name pos:start="809:33" pos:end="809:44">max_b_frames</name></name></expr> ?</condition><then pos:start="809:48" pos:end="809:48"> <expr pos:start="809:48" pos:end="809:48"><literal type="number" pos:start="809:48" pos:end="809:48">0</literal></expr> </then><else pos:start="809:50" pos:end="809:52">: <expr pos:start="809:52" pos:end="809:52"><literal type="number" pos:start="809:52" pos:end="809:52">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="811:9" pos:end="811:70"><expr pos:start="811:9" pos:end="811:69"><name pos:start="811:9" pos:end="811:20"><name pos:start="811:9" pos:end="811:13">avctx</name><operator pos:start="811:14" pos:end="811:15">-&gt;</operator><name pos:start="811:16" pos:end="811:20">delay</name></name>       <operator pos:start="811:28" pos:end="811:28">=</operator> <ternary pos:start="811:30" pos:end="811:69"><condition pos:start="811:30" pos:end="811:43"><expr pos:start="811:30" pos:end="811:41"><name pos:start="811:30" pos:end="811:41"><name pos:start="811:30" pos:end="811:30">s</name><operator pos:start="811:31" pos:end="811:32">-&gt;</operator><name pos:start="811:33" pos:end="811:41">low_delay</name></name></expr> ?</condition><then pos:start="811:45" pos:end="811:45"> <expr pos:start="811:45" pos:end="811:45"><literal type="number" pos:start="811:45" pos:end="811:45">0</literal></expr> </then><else pos:start="811:47" pos:end="811:69">: <expr pos:start="811:49" pos:end="811:69"><operator pos:start="811:49" pos:end="811:49">(</operator><name pos:start="811:50" pos:end="811:64"><name pos:start="811:50" pos:end="811:50">s</name><operator pos:start="811:51" pos:end="811:52">-&gt;</operator><name pos:start="811:53" pos:end="811:64">max_b_frames</name></name> <operator pos:start="811:66" pos:end="811:66">+</operator> <literal type="number" pos:start="811:68" pos:end="811:68">1</literal><operator pos:start="811:69" pos:end="811:69">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="813:9" pos:end="813:14">break;</break>

    <case pos:start="815:5" pos:end="815:31">case <expr pos:start="815:10" pos:end="815:30"><name pos:start="815:10" pos:end="815:30">AV_CODEC_ID_MSMPEG4V2</name></expr>:</case>

        <expr_stmt pos:start="817:9" pos:end="817:38"><expr pos:start="817:9" pos:end="817:37"><name pos:start="817:9" pos:end="817:21"><name pos:start="817:9" pos:end="817:9">s</name><operator pos:start="817:10" pos:end="817:11">-&gt;</operator><name pos:start="817:12" pos:end="817:21">out_format</name></name>      <operator pos:start="817:28" pos:end="817:28">=</operator> <name pos:start="817:30" pos:end="817:37">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="819:9" pos:end="819:31"><expr pos:start="819:9" pos:end="819:30"><name pos:start="819:9" pos:end="819:20"><name pos:start="819:9" pos:end="819:9">s</name><operator pos:start="819:10" pos:end="819:11">-&gt;</operator><name pos:start="819:12" pos:end="819:20">h263_pred</name></name>       <operator pos:start="819:28" pos:end="819:28">=</operator> <literal type="number" pos:start="819:30" pos:end="819:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="821:9" pos:end="821:31"><expr pos:start="821:9" pos:end="821:30"><name pos:start="821:9" pos:end="821:26"><name pos:start="821:9" pos:end="821:9">s</name><operator pos:start="821:10" pos:end="821:11">-&gt;</operator><name pos:start="821:12" pos:end="821:26">unrestricted_mv</name></name> <operator pos:start="821:28" pos:end="821:28">=</operator> <literal type="number" pos:start="821:30" pos:end="821:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="823:9" pos:end="823:31"><expr pos:start="823:9" pos:end="823:30"><name pos:start="823:9" pos:end="823:26"><name pos:start="823:9" pos:end="823:9">s</name><operator pos:start="823:10" pos:end="823:11">-&gt;</operator><name pos:start="823:12" pos:end="823:26">msmpeg4_version</name></name> <operator pos:start="823:28" pos:end="823:28">=</operator> <literal type="number" pos:start="823:30" pos:end="823:30">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="825:9" pos:end="825:31"><expr pos:start="825:9" pos:end="825:30"><name pos:start="825:9" pos:end="825:20"><name pos:start="825:9" pos:end="825:13">avctx</name><operator pos:start="825:14" pos:end="825:15">-&gt;</operator><name pos:start="825:16" pos:end="825:20">delay</name></name>       <operator pos:start="825:28" pos:end="825:28">=</operator> <literal type="number" pos:start="825:30" pos:end="825:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="827:9" pos:end="827:31"><expr pos:start="827:9" pos:end="827:30"><name pos:start="827:9" pos:end="827:20"><name pos:start="827:9" pos:end="827:9">s</name><operator pos:start="827:10" pos:end="827:11">-&gt;</operator><name pos:start="827:12" pos:end="827:20">low_delay</name></name>       <operator pos:start="827:28" pos:end="827:28">=</operator> <literal type="number" pos:start="827:30" pos:end="827:30">1</literal></expr>;</expr_stmt>

        <break pos:start="829:9" pos:end="829:14">break;</break>

    <case pos:start="831:5" pos:end="831:31">case <expr pos:start="831:10" pos:end="831:30"><name pos:start="831:10" pos:end="831:30">AV_CODEC_ID_MSMPEG4V3</name></expr>:</case>

        <expr_stmt pos:start="833:9" pos:end="833:40"><expr pos:start="833:9" pos:end="833:39"><name pos:start="833:9" pos:end="833:21"><name pos:start="833:9" pos:end="833:9">s</name><operator pos:start="833:10" pos:end="833:11">-&gt;</operator><name pos:start="833:12" pos:end="833:21">out_format</name></name>        <operator pos:start="833:30" pos:end="833:30">=</operator> <name pos:start="833:32" pos:end="833:39">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="835:9" pos:end="835:33"><expr pos:start="835:9" pos:end="835:32"><name pos:start="835:9" pos:end="835:20"><name pos:start="835:9" pos:end="835:9">s</name><operator pos:start="835:10" pos:end="835:11">-&gt;</operator><name pos:start="835:12" pos:end="835:20">h263_pred</name></name>         <operator pos:start="835:30" pos:end="835:30">=</operator> <literal type="number" pos:start="835:32" pos:end="835:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="837:9" pos:end="837:33"><expr pos:start="837:9" pos:end="837:32"><name pos:start="837:9" pos:end="837:26"><name pos:start="837:9" pos:end="837:9">s</name><operator pos:start="837:10" pos:end="837:11">-&gt;</operator><name pos:start="837:12" pos:end="837:26">unrestricted_mv</name></name>   <operator pos:start="837:30" pos:end="837:30">=</operator> <literal type="number" pos:start="837:32" pos:end="837:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="839:9" pos:end="839:33"><expr pos:start="839:9" pos:end="839:32"><name pos:start="839:9" pos:end="839:26"><name pos:start="839:9" pos:end="839:9">s</name><operator pos:start="839:10" pos:end="839:11">-&gt;</operator><name pos:start="839:12" pos:end="839:26">msmpeg4_version</name></name>   <operator pos:start="839:30" pos:end="839:30">=</operator> <literal type="number" pos:start="839:32" pos:end="839:32">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="841:9" pos:end="841:33"><expr pos:start="841:9" pos:end="841:32"><name pos:start="841:9" pos:end="841:28"><name pos:start="841:9" pos:end="841:9">s</name><operator pos:start="841:10" pos:end="841:11">-&gt;</operator><name pos:start="841:12" pos:end="841:28">flipflop_rounding</name></name> <operator pos:start="841:30" pos:end="841:30">=</operator> <literal type="number" pos:start="841:32" pos:end="841:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="843:9" pos:end="843:33"><expr pos:start="843:9" pos:end="843:32"><name pos:start="843:9" pos:end="843:20"><name pos:start="843:9" pos:end="843:13">avctx</name><operator pos:start="843:14" pos:end="843:15">-&gt;</operator><name pos:start="843:16" pos:end="843:20">delay</name></name>         <operator pos:start="843:30" pos:end="843:30">=</operator> <literal type="number" pos:start="843:32" pos:end="843:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="845:9" pos:end="845:33"><expr pos:start="845:9" pos:end="845:32"><name pos:start="845:9" pos:end="845:20"><name pos:start="845:9" pos:end="845:9">s</name><operator pos:start="845:10" pos:end="845:11">-&gt;</operator><name pos:start="845:12" pos:end="845:20">low_delay</name></name>         <operator pos:start="845:30" pos:end="845:30">=</operator> <literal type="number" pos:start="845:32" pos:end="845:32">1</literal></expr>;</expr_stmt>

        <break pos:start="847:9" pos:end="847:14">break;</break>

    <case pos:start="849:5" pos:end="849:26">case <expr pos:start="849:10" pos:end="849:25"><name pos:start="849:10" pos:end="849:25">AV_CODEC_ID_WMV1</name></expr>:</case>

        <expr_stmt pos:start="851:9" pos:end="851:40"><expr pos:start="851:9" pos:end="851:39"><name pos:start="851:9" pos:end="851:21"><name pos:start="851:9" pos:end="851:9">s</name><operator pos:start="851:10" pos:end="851:11">-&gt;</operator><name pos:start="851:12" pos:end="851:21">out_format</name></name>        <operator pos:start="851:30" pos:end="851:30">=</operator> <name pos:start="851:32" pos:end="851:39">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="853:9" pos:end="853:33"><expr pos:start="853:9" pos:end="853:32"><name pos:start="853:9" pos:end="853:20"><name pos:start="853:9" pos:end="853:9">s</name><operator pos:start="853:10" pos:end="853:11">-&gt;</operator><name pos:start="853:12" pos:end="853:20">h263_pred</name></name>         <operator pos:start="853:30" pos:end="853:30">=</operator> <literal type="number" pos:start="853:32" pos:end="853:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="855:9" pos:end="855:33"><expr pos:start="855:9" pos:end="855:32"><name pos:start="855:9" pos:end="855:26"><name pos:start="855:9" pos:end="855:9">s</name><operator pos:start="855:10" pos:end="855:11">-&gt;</operator><name pos:start="855:12" pos:end="855:26">unrestricted_mv</name></name>   <operator pos:start="855:30" pos:end="855:30">=</operator> <literal type="number" pos:start="855:32" pos:end="855:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="857:9" pos:end="857:33"><expr pos:start="857:9" pos:end="857:32"><name pos:start="857:9" pos:end="857:26"><name pos:start="857:9" pos:end="857:9">s</name><operator pos:start="857:10" pos:end="857:11">-&gt;</operator><name pos:start="857:12" pos:end="857:26">msmpeg4_version</name></name>   <operator pos:start="857:30" pos:end="857:30">=</operator> <literal type="number" pos:start="857:32" pos:end="857:32">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="859:9" pos:end="859:33"><expr pos:start="859:9" pos:end="859:32"><name pos:start="859:9" pos:end="859:28"><name pos:start="859:9" pos:end="859:9">s</name><operator pos:start="859:10" pos:end="859:11">-&gt;</operator><name pos:start="859:12" pos:end="859:28">flipflop_rounding</name></name> <operator pos:start="859:30" pos:end="859:30">=</operator> <literal type="number" pos:start="859:32" pos:end="859:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="861:9" pos:end="861:33"><expr pos:start="861:9" pos:end="861:32"><name pos:start="861:9" pos:end="861:20"><name pos:start="861:9" pos:end="861:13">avctx</name><operator pos:start="861:14" pos:end="861:15">-&gt;</operator><name pos:start="861:16" pos:end="861:20">delay</name></name>         <operator pos:start="861:30" pos:end="861:30">=</operator> <literal type="number" pos:start="861:32" pos:end="861:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="863:9" pos:end="863:33"><expr pos:start="863:9" pos:end="863:32"><name pos:start="863:9" pos:end="863:20"><name pos:start="863:9" pos:end="863:9">s</name><operator pos:start="863:10" pos:end="863:11">-&gt;</operator><name pos:start="863:12" pos:end="863:20">low_delay</name></name>         <operator pos:start="863:30" pos:end="863:30">=</operator> <literal type="number" pos:start="863:32" pos:end="863:32">1</literal></expr>;</expr_stmt>

        <break pos:start="865:9" pos:end="865:14">break;</break>

    <case pos:start="867:5" pos:end="867:26">case <expr pos:start="867:10" pos:end="867:25"><name pos:start="867:10" pos:end="867:25">AV_CODEC_ID_WMV2</name></expr>:</case>

        <expr_stmt pos:start="869:9" pos:end="869:40"><expr pos:start="869:9" pos:end="869:39"><name pos:start="869:9" pos:end="869:21"><name pos:start="869:9" pos:end="869:9">s</name><operator pos:start="869:10" pos:end="869:11">-&gt;</operator><name pos:start="869:12" pos:end="869:21">out_format</name></name>        <operator pos:start="869:30" pos:end="869:30">=</operator> <name pos:start="869:32" pos:end="869:39">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="871:9" pos:end="871:33"><expr pos:start="871:9" pos:end="871:32"><name pos:start="871:9" pos:end="871:20"><name pos:start="871:9" pos:end="871:9">s</name><operator pos:start="871:10" pos:end="871:11">-&gt;</operator><name pos:start="871:12" pos:end="871:20">h263_pred</name></name>         <operator pos:start="871:30" pos:end="871:30">=</operator> <literal type="number" pos:start="871:32" pos:end="871:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="873:9" pos:end="873:33"><expr pos:start="873:9" pos:end="873:32"><name pos:start="873:9" pos:end="873:26"><name pos:start="873:9" pos:end="873:9">s</name><operator pos:start="873:10" pos:end="873:11">-&gt;</operator><name pos:start="873:12" pos:end="873:26">unrestricted_mv</name></name>   <operator pos:start="873:30" pos:end="873:30">=</operator> <literal type="number" pos:start="873:32" pos:end="873:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="875:9" pos:end="875:33"><expr pos:start="875:9" pos:end="875:32"><name pos:start="875:9" pos:end="875:26"><name pos:start="875:9" pos:end="875:9">s</name><operator pos:start="875:10" pos:end="875:11">-&gt;</operator><name pos:start="875:12" pos:end="875:26">msmpeg4_version</name></name>   <operator pos:start="875:30" pos:end="875:30">=</operator> <literal type="number" pos:start="875:32" pos:end="875:32">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="877:9" pos:end="877:33"><expr pos:start="877:9" pos:end="877:32"><name pos:start="877:9" pos:end="877:28"><name pos:start="877:9" pos:end="877:9">s</name><operator pos:start="877:10" pos:end="877:11">-&gt;</operator><name pos:start="877:12" pos:end="877:28">flipflop_rounding</name></name> <operator pos:start="877:30" pos:end="877:30">=</operator> <literal type="number" pos:start="877:32" pos:end="877:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="879:9" pos:end="879:33"><expr pos:start="879:9" pos:end="879:32"><name pos:start="879:9" pos:end="879:20"><name pos:start="879:9" pos:end="879:13">avctx</name><operator pos:start="879:14" pos:end="879:15">-&gt;</operator><name pos:start="879:16" pos:end="879:20">delay</name></name>         <operator pos:start="879:30" pos:end="879:30">=</operator> <literal type="number" pos:start="879:32" pos:end="879:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="881:9" pos:end="881:33"><expr pos:start="881:9" pos:end="881:32"><name pos:start="881:9" pos:end="881:20"><name pos:start="881:9" pos:end="881:9">s</name><operator pos:start="881:10" pos:end="881:11">-&gt;</operator><name pos:start="881:12" pos:end="881:20">low_delay</name></name>         <operator pos:start="881:30" pos:end="881:30">=</operator> <literal type="number" pos:start="881:32" pos:end="881:32">1</literal></expr>;</expr_stmt>

        <break pos:start="883:9" pos:end="883:14">break;</break>

    <default pos:start="885:5" pos:end="885:12">default:</default>

        <return pos:start="887:9" pos:end="887:18">return <expr pos:start="887:16" pos:end="887:17"><operator pos:start="887:16" pos:end="887:16">-</operator><literal type="number" pos:start="887:17" pos:end="887:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="893:5" pos:end="893:40"><expr pos:start="893:5" pos:end="893:39"><name pos:start="893:5" pos:end="893:23"><name pos:start="893:5" pos:end="893:9">avctx</name><operator pos:start="893:10" pos:end="893:11">-&gt;</operator><name pos:start="893:12" pos:end="893:23">has_b_frames</name></name> <operator pos:start="893:25" pos:end="893:25">=</operator> <operator pos:start="893:27" pos:end="893:27">!</operator><name pos:start="893:28" pos:end="893:39"><name pos:start="893:28" pos:end="893:28">s</name><operator pos:start="893:29" pos:end="893:30">-&gt;</operator><name pos:start="893:31" pos:end="893:39">low_delay</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="897:5" pos:end="897:20"><expr pos:start="897:5" pos:end="897:19"><name pos:start="897:5" pos:end="897:15"><name pos:start="897:5" pos:end="897:5">s</name><operator pos:start="897:6" pos:end="897:7">-&gt;</operator><name pos:start="897:8" pos:end="897:15">encoding</name></name> <operator pos:start="897:17" pos:end="897:17">=</operator> <literal type="number" pos:start="897:19" pos:end="897:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="901:5" pos:end="907:51"><expr pos:start="901:5" pos:end="907:50"><name pos:start="901:5" pos:end="901:24"><name pos:start="901:5" pos:end="901:5">s</name><operator pos:start="901:6" pos:end="901:7">-&gt;</operator><name pos:start="901:8" pos:end="901:24">progressive_frame</name></name>    <operator pos:start="901:29" pos:end="901:29">=</operator>

    <name pos:start="903:5" pos:end="903:27"><name pos:start="903:5" pos:end="903:5">s</name><operator pos:start="903:6" pos:end="903:7">-&gt;</operator><name pos:start="903:8" pos:end="903:27">progressive_sequence</name></name> <operator pos:start="903:29" pos:end="903:29">=</operator> <operator pos:start="903:31" pos:end="903:31">!</operator><operator pos:start="903:32" pos:end="903:32">(</operator><name pos:start="903:33" pos:end="903:44"><name pos:start="903:33" pos:end="903:37">avctx</name><operator pos:start="903:38" pos:end="903:39">-&gt;</operator><name pos:start="903:40" pos:end="903:44">flags</name></name> <operator pos:start="903:46" pos:end="903:46">&amp;</operator> <operator pos:start="903:48" pos:end="903:48">(</operator><name pos:start="903:49" pos:end="903:73">CODEC_FLAG_INTERLACED_DCT</name> <operator pos:start="903:75" pos:end="903:75">|</operator>

                                                <name pos:start="905:49" pos:end="905:72">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="905:73" pos:end="905:73">)</operator> <operator pos:start="905:75" pos:end="905:76">||</operator>

                                <name pos:start="907:33" pos:end="907:49"><name pos:start="907:33" pos:end="907:33">s</name><operator pos:start="907:34" pos:end="907:35">-&gt;</operator><name pos:start="907:36" pos:end="907:49">alternate_scan</name></name><operator pos:start="907:50" pos:end="907:50">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="911:5" pos:end="911:14">/* init */</comment>

    <if_stmt pos:start="913:5" pos:end="915:18"><if pos:start="913:5" pos:end="915:18">if <condition pos:start="913:8" pos:end="913:34">(<expr pos:start="913:9" pos:end="913:33"><call pos:start="913:9" pos:end="913:29"><name pos:start="913:9" pos:end="913:26">ff_MPV_common_init</name><argument_list pos:start="913:27" pos:end="913:29">(<argument pos:start="913:28" pos:end="913:28"><expr pos:start="913:28" pos:end="913:28"><name pos:start="913:28" pos:end="913:28">s</name></expr></argument>)</argument_list></call> <operator pos:start="913:31" pos:end="913:31">&lt;</operator> <literal type="number" pos:start="913:33" pos:end="913:33">0</literal></expr>)</condition><block type="pseudo" pos:start="915:9" pos:end="915:18"><block_content pos:start="915:9" pos:end="915:18">

        <return pos:start="915:9" pos:end="915:18">return <expr pos:start="915:16" pos:end="915:17"><operator pos:start="915:16" pos:end="915:16">-</operator><literal type="number" pos:start="915:17" pos:end="915:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="919:5" pos:end="921:34"><if pos:start="919:5" pos:end="921:34">if <condition pos:start="919:8" pos:end="919:17">(<expr pos:start="919:9" pos:end="919:16"><name pos:start="919:9" pos:end="919:16">ARCH_X86</name></expr>)</condition><block type="pseudo" pos:start="921:9" pos:end="921:34"><block_content pos:start="921:9" pos:end="921:34">

        <expr_stmt pos:start="921:9" pos:end="921:34"><expr pos:start="921:9" pos:end="921:33"><call pos:start="921:9" pos:end="921:33"><name pos:start="921:9" pos:end="921:30">ff_MPV_encode_init_x86</name><argument_list pos:start="921:31" pos:end="921:33">(<argument pos:start="921:32" pos:end="921:32"><expr pos:start="921:32" pos:end="921:32"><name pos:start="921:32" pos:end="921:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="925:5" pos:end="925:50"><expr pos:start="925:5" pos:end="925:49"><name pos:start="925:5" pos:end="925:25"><name pos:start="925:5" pos:end="925:5">s</name><operator pos:start="925:6" pos:end="925:7">-&gt;</operator><name pos:start="925:8" pos:end="925:12">avctx</name><operator pos:start="925:13" pos:end="925:14">-&gt;</operator><name pos:start="925:15" pos:end="925:25">coded_frame</name></name> <operator pos:start="925:27" pos:end="925:27">=</operator> <operator pos:start="925:29" pos:end="925:29">&amp;</operator><name pos:start="925:30" pos:end="925:49"><name pos:start="925:30" pos:end="925:30">s</name><operator pos:start="925:31" pos:end="925:32">-&gt;</operator><name pos:start="925:33" pos:end="925:47">current_picture</name><operator pos:start="925:48" pos:end="925:48">.</operator><name pos:start="925:49" pos:end="925:49">f</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="929:5" pos:end="937:5"><if pos:start="929:5" pos:end="937:5">if <condition pos:start="929:8" pos:end="929:27">(<expr pos:start="929:9" pos:end="929:26"><name pos:start="929:9" pos:end="929:26"><name pos:start="929:9" pos:end="929:9">s</name><operator pos:start="929:10" pos:end="929:11">-&gt;</operator><name pos:start="929:12" pos:end="929:26">msmpeg4_version</name></name></expr>)</condition> <block pos:start="929:29" pos:end="937:5">{<block_content pos:start="931:9" pos:end="935:65">

        <expr_stmt pos:start="931:9" pos:end="935:65"><expr pos:start="931:9" pos:end="935:64"><call pos:start="931:9" pos:end="935:64"><name pos:start="931:9" pos:end="931:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="931:26" pos:end="935:64">(<argument pos:start="931:27" pos:end="931:34"><expr pos:start="931:27" pos:end="931:34"><name pos:start="931:27" pos:end="931:34"><name pos:start="931:27" pos:end="931:27">s</name><operator pos:start="931:28" pos:end="931:29">-&gt;</operator><name pos:start="931:30" pos:end="931:34">avctx</name></name></expr></argument>, <argument pos:start="931:37" pos:end="931:47"><expr pos:start="931:37" pos:end="931:47"><name pos:start="931:37" pos:end="931:47"><name pos:start="931:37" pos:end="931:37">s</name><operator pos:start="931:38" pos:end="931:39">-&gt;</operator><name pos:start="931:40" pos:end="931:47">ac_stats</name></name></expr></argument>,

                          <argument pos:start="933:27" pos:end="935:57"><expr pos:start="933:27" pos:end="935:57"><literal type="number" pos:start="933:27" pos:end="933:27">2</literal> <operator pos:start="933:29" pos:end="933:29">*</operator> <literal type="number" pos:start="933:31" pos:end="933:31">2</literal> <operator pos:start="933:33" pos:end="933:33">*</operator> <operator pos:start="933:35" pos:end="933:35">(</operator><name pos:start="933:36" pos:end="933:44">MAX_LEVEL</name> <operator pos:start="933:46" pos:end="933:46">+</operator> <literal type="number" pos:start="933:48" pos:end="933:48">1</literal><operator pos:start="933:49" pos:end="933:49">)</operator> <operator pos:start="933:51" pos:end="933:51">*</operator>

                          <operator pos:start="935:27" pos:end="935:27">(</operator><name pos:start="935:28" pos:end="935:34">MAX_RUN</name> <operator pos:start="935:36" pos:end="935:36">+</operator> <literal type="number" pos:start="935:38" pos:end="935:38">1</literal><operator pos:start="935:39" pos:end="935:39">)</operator> <operator pos:start="935:41" pos:end="935:41">*</operator> <literal type="number" pos:start="935:43" pos:end="935:43">2</literal> <operator pos:start="935:45" pos:end="935:45">*</operator> <sizeof pos:start="935:47" pos:end="935:57">sizeof<argument_list pos:start="935:53" pos:end="935:57">(<argument pos:start="935:54" pos:end="935:56"><expr pos:start="935:54" pos:end="935:56"><name pos:start="935:54" pos:end="935:56">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="935:60" pos:end="935:63"><expr pos:start="935:60" pos:end="935:63"><name pos:start="935:60" pos:end="935:63">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="939:5" pos:end="939:64"><expr pos:start="939:5" pos:end="939:63"><call pos:start="939:5" pos:end="939:63"><name pos:start="939:5" pos:end="939:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="939:22" pos:end="939:63">(<argument pos:start="939:23" pos:end="939:30"><expr pos:start="939:23" pos:end="939:30"><name pos:start="939:23" pos:end="939:30"><name pos:start="939:23" pos:end="939:23">s</name><operator pos:start="939:24" pos:end="939:25">-&gt;</operator><name pos:start="939:26" pos:end="939:30">avctx</name></name></expr></argument>, <argument pos:start="939:33" pos:end="939:51"><expr pos:start="939:33" pos:end="939:51"><name pos:start="939:33" pos:end="939:51"><name pos:start="939:33" pos:end="939:33">s</name><operator pos:start="939:34" pos:end="939:35">-&gt;</operator><name pos:start="939:36" pos:end="939:40">avctx</name><operator pos:start="939:41" pos:end="939:42">-&gt;</operator><name pos:start="939:43" pos:end="939:51">stats_out</name></name></expr></argument>, <argument pos:start="939:54" pos:end="939:56"><expr pos:start="939:54" pos:end="939:56"><literal type="number" pos:start="939:54" pos:end="939:56">256</literal></expr></argument>, <argument pos:start="939:59" pos:end="939:62"><expr pos:start="939:59" pos:end="939:62"><name pos:start="939:59" pos:end="939:62">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="943:5" pos:end="943:82"><expr pos:start="943:5" pos:end="943:81"><call pos:start="943:5" pos:end="943:81"><name pos:start="943:5" pos:end="943:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="943:22" pos:end="943:81">(<argument pos:start="943:23" pos:end="943:30"><expr pos:start="943:23" pos:end="943:30"><name pos:start="943:23" pos:end="943:30"><name pos:start="943:23" pos:end="943:23">s</name><operator pos:start="943:24" pos:end="943:25">-&gt;</operator><name pos:start="943:26" pos:end="943:30">avctx</name></name></expr></argument>, <argument pos:start="943:33" pos:end="943:49"><expr pos:start="943:33" pos:end="943:49"><name pos:start="943:33" pos:end="943:49"><name pos:start="943:33" pos:end="943:33">s</name><operator pos:start="943:34" pos:end="943:35">-&gt;</operator><name pos:start="943:36" pos:end="943:49">q_intra_matrix</name></name></expr></argument>,   <argument pos:start="943:54" pos:end="943:74"><expr pos:start="943:54" pos:end="943:74"><literal type="number" pos:start="943:54" pos:end="943:55">64</literal> <operator pos:start="943:57" pos:end="943:57">*</operator> <literal type="number" pos:start="943:59" pos:end="943:60">32</literal> <operator pos:start="943:62" pos:end="943:62">*</operator> <sizeof pos:start="943:64" pos:end="943:74">sizeof<argument_list pos:start="943:70" pos:end="943:74">(<argument pos:start="943:71" pos:end="943:73"><expr pos:start="943:71" pos:end="943:73"><name pos:start="943:71" pos:end="943:73">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="943:77" pos:end="943:80"><expr pos:start="943:77" pos:end="943:80"><name pos:start="943:77" pos:end="943:80">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="945:5" pos:end="945:82"><expr pos:start="945:5" pos:end="945:81"><call pos:start="945:5" pos:end="945:81"><name pos:start="945:5" pos:end="945:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="945:22" pos:end="945:81">(<argument pos:start="945:23" pos:end="945:30"><expr pos:start="945:23" pos:end="945:30"><name pos:start="945:23" pos:end="945:30"><name pos:start="945:23" pos:end="945:23">s</name><operator pos:start="945:24" pos:end="945:25">-&gt;</operator><name pos:start="945:26" pos:end="945:30">avctx</name></name></expr></argument>, <argument pos:start="945:33" pos:end="945:49"><expr pos:start="945:33" pos:end="945:49"><name pos:start="945:33" pos:end="945:49"><name pos:start="945:33" pos:end="945:33">s</name><operator pos:start="945:34" pos:end="945:35">-&gt;</operator><name pos:start="945:36" pos:end="945:49">q_inter_matrix</name></name></expr></argument>,   <argument pos:start="945:54" pos:end="945:74"><expr pos:start="945:54" pos:end="945:74"><literal type="number" pos:start="945:54" pos:end="945:55">64</literal> <operator pos:start="945:57" pos:end="945:57">*</operator> <literal type="number" pos:start="945:59" pos:end="945:60">32</literal> <operator pos:start="945:62" pos:end="945:62">*</operator> <sizeof pos:start="945:64" pos:end="945:74">sizeof<argument_list pos:start="945:70" pos:end="945:74">(<argument pos:start="945:71" pos:end="945:73"><expr pos:start="945:71" pos:end="945:73"><name pos:start="945:71" pos:end="945:73">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="945:77" pos:end="945:80"><expr pos:start="945:77" pos:end="945:80"><name pos:start="945:77" pos:end="945:80">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="947:5" pos:end="947:91"><expr pos:start="947:5" pos:end="947:90"><call pos:start="947:5" pos:end="947:90"><name pos:start="947:5" pos:end="947:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="947:22" pos:end="947:90">(<argument pos:start="947:23" pos:end="947:30"><expr pos:start="947:23" pos:end="947:30"><name pos:start="947:23" pos:end="947:30"><name pos:start="947:23" pos:end="947:23">s</name><operator pos:start="947:24" pos:end="947:25">-&gt;</operator><name pos:start="947:26" pos:end="947:30">avctx</name></name></expr></argument>, <argument pos:start="947:33" pos:end="947:51"><expr pos:start="947:33" pos:end="947:51"><name pos:start="947:33" pos:end="947:51"><name pos:start="947:33" pos:end="947:33">s</name><operator pos:start="947:34" pos:end="947:35">-&gt;</operator><name pos:start="947:36" pos:end="947:51">q_intra_matrix16</name></name></expr></argument>, <argument pos:start="947:54" pos:end="947:83"><expr pos:start="947:54" pos:end="947:83"><literal type="number" pos:start="947:54" pos:end="947:55">64</literal> <operator pos:start="947:57" pos:end="947:57">*</operator> <literal type="number" pos:start="947:59" pos:end="947:60">32</literal> <operator pos:start="947:62" pos:end="947:62">*</operator> <literal type="number" pos:start="947:64" pos:end="947:64">2</literal> <operator pos:start="947:66" pos:end="947:66">*</operator> <sizeof pos:start="947:68" pos:end="947:83">sizeof<argument_list pos:start="947:74" pos:end="947:83">(<argument pos:start="947:75" pos:end="947:82"><expr pos:start="947:75" pos:end="947:82"><name pos:start="947:75" pos:end="947:82">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="947:86" pos:end="947:89"><expr pos:start="947:86" pos:end="947:89"><name pos:start="947:86" pos:end="947:89">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="949:5" pos:end="949:91"><expr pos:start="949:5" pos:end="949:90"><call pos:start="949:5" pos:end="949:90"><name pos:start="949:5" pos:end="949:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="949:22" pos:end="949:90">(<argument pos:start="949:23" pos:end="949:30"><expr pos:start="949:23" pos:end="949:30"><name pos:start="949:23" pos:end="949:30"><name pos:start="949:23" pos:end="949:23">s</name><operator pos:start="949:24" pos:end="949:25">-&gt;</operator><name pos:start="949:26" pos:end="949:30">avctx</name></name></expr></argument>, <argument pos:start="949:33" pos:end="949:51"><expr pos:start="949:33" pos:end="949:51"><name pos:start="949:33" pos:end="949:51"><name pos:start="949:33" pos:end="949:33">s</name><operator pos:start="949:34" pos:end="949:35">-&gt;</operator><name pos:start="949:36" pos:end="949:51">q_inter_matrix16</name></name></expr></argument>, <argument pos:start="949:54" pos:end="949:83"><expr pos:start="949:54" pos:end="949:83"><literal type="number" pos:start="949:54" pos:end="949:55">64</literal> <operator pos:start="949:57" pos:end="949:57">*</operator> <literal type="number" pos:start="949:59" pos:end="949:60">32</literal> <operator pos:start="949:62" pos:end="949:62">*</operator> <literal type="number" pos:start="949:64" pos:end="949:64">2</literal> <operator pos:start="949:66" pos:end="949:66">*</operator> <sizeof pos:start="949:68" pos:end="949:83">sizeof<argument_list pos:start="949:74" pos:end="949:83">(<argument pos:start="949:75" pos:end="949:82"><expr pos:start="949:75" pos:end="949:82"><name pos:start="949:75" pos:end="949:82">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="949:86" pos:end="949:89"><expr pos:start="949:86" pos:end="949:89"><name pos:start="949:86" pos:end="949:89">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="951:5" pos:end="953:67"><expr pos:start="951:5" pos:end="953:66"><call pos:start="951:5" pos:end="953:66"><name pos:start="951:5" pos:end="951:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="951:22" pos:end="953:66">(<argument pos:start="951:23" pos:end="951:30"><expr pos:start="951:23" pos:end="951:30"><name pos:start="951:23" pos:end="951:30"><name pos:start="951:23" pos:end="951:23">s</name><operator pos:start="951:24" pos:end="951:25">-&gt;</operator><name pos:start="951:26" pos:end="951:30">avctx</name></name></expr></argument>, <argument pos:start="951:33" pos:end="951:48"><expr pos:start="951:33" pos:end="951:48"><name pos:start="951:33" pos:end="951:48"><name pos:start="951:33" pos:end="951:33">s</name><operator pos:start="951:34" pos:end="951:35">-&gt;</operator><name pos:start="951:36" pos:end="951:48">input_picture</name></name></expr></argument>,

                      <argument pos:start="953:23" pos:end="953:59"><expr pos:start="953:23" pos:end="953:59"><name pos:start="953:23" pos:end="953:39">MAX_PICTURE_COUNT</name> <operator pos:start="953:41" pos:end="953:41">*</operator> <sizeof pos:start="953:43" pos:end="953:59">sizeof<argument_list pos:start="953:49" pos:end="953:59">(<argument pos:start="953:50" pos:end="953:58"><expr pos:start="953:50" pos:end="953:58"><name pos:start="953:50" pos:end="953:56">Picture</name> <operator pos:start="953:58" pos:end="953:58">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="953:62" pos:end="953:65"><expr pos:start="953:62" pos:end="953:65"><name pos:start="953:62" pos:end="953:65">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="955:5" pos:end="957:67"><expr pos:start="955:5" pos:end="957:66"><call pos:start="955:5" pos:end="957:66"><name pos:start="955:5" pos:end="955:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="955:22" pos:end="957:66">(<argument pos:start="955:23" pos:end="955:30"><expr pos:start="955:23" pos:end="955:30"><name pos:start="955:23" pos:end="955:30"><name pos:start="955:23" pos:end="955:23">s</name><operator pos:start="955:24" pos:end="955:25">-&gt;</operator><name pos:start="955:26" pos:end="955:30">avctx</name></name></expr></argument>, <argument pos:start="955:33" pos:end="955:58"><expr pos:start="955:33" pos:end="955:58"><name pos:start="955:33" pos:end="955:58"><name pos:start="955:33" pos:end="955:33">s</name><operator pos:start="955:34" pos:end="955:35">-&gt;</operator><name pos:start="955:36" pos:end="955:58">reordered_input_picture</name></name></expr></argument>,

                      <argument pos:start="957:23" pos:end="957:59"><expr pos:start="957:23" pos:end="957:59"><name pos:start="957:23" pos:end="957:39">MAX_PICTURE_COUNT</name> <operator pos:start="957:41" pos:end="957:41">*</operator> <sizeof pos:start="957:43" pos:end="957:59">sizeof<argument_list pos:start="957:49" pos:end="957:59">(<argument pos:start="957:50" pos:end="957:58"><expr pos:start="957:50" pos:end="957:58"><name pos:start="957:50" pos:end="957:56">Picture</name> <operator pos:start="957:58" pos:end="957:58">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="957:62" pos:end="957:65"><expr pos:start="957:62" pos:end="957:65"><name pos:start="957:62" pos:end="957:65">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="961:5" pos:end="967:5"><if pos:start="961:5" pos:end="967:5">if <condition pos:start="961:8" pos:end="961:34">(<expr pos:start="961:9" pos:end="961:33"><name pos:start="961:9" pos:end="961:33"><name pos:start="961:9" pos:end="961:9">s</name><operator pos:start="961:10" pos:end="961:11">-&gt;</operator><name pos:start="961:12" pos:end="961:16">avctx</name><operator pos:start="961:17" pos:end="961:18">-&gt;</operator><name pos:start="961:19" pos:end="961:33">noise_reduction</name></name></expr>)</condition> <block pos:start="961:36" pos:end="967:5">{<block_content pos:start="963:9" pos:end="965:59">

        <expr_stmt pos:start="963:9" pos:end="965:59"><expr pos:start="963:9" pos:end="965:58"><call pos:start="963:9" pos:end="965:58"><name pos:start="963:9" pos:end="963:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="963:26" pos:end="965:58">(<argument pos:start="963:27" pos:end="963:34"><expr pos:start="963:27" pos:end="963:34"><name pos:start="963:27" pos:end="963:34"><name pos:start="963:27" pos:end="963:27">s</name><operator pos:start="963:28" pos:end="963:29">-&gt;</operator><name pos:start="963:30" pos:end="963:34">avctx</name></name></expr></argument>, <argument pos:start="963:37" pos:end="963:49"><expr pos:start="963:37" pos:end="963:49"><name pos:start="963:37" pos:end="963:49"><name pos:start="963:37" pos:end="963:37">s</name><operator pos:start="963:38" pos:end="963:39">-&gt;</operator><name pos:start="963:40" pos:end="963:49">dct_offset</name></name></expr></argument>,

                          <argument pos:start="965:27" pos:end="965:51"><expr pos:start="965:27" pos:end="965:51"><literal type="number" pos:start="965:27" pos:end="965:27">2</literal> <operator pos:start="965:29" pos:end="965:29">*</operator> <literal type="number" pos:start="965:31" pos:end="965:32">64</literal> <operator pos:start="965:34" pos:end="965:34">*</operator> <sizeof pos:start="965:36" pos:end="965:51">sizeof<argument_list pos:start="965:42" pos:end="965:51">(<argument pos:start="965:43" pos:end="965:50"><expr pos:start="965:43" pos:end="965:50"><name pos:start="965:43" pos:end="965:50">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="965:54" pos:end="965:57"><expr pos:start="965:54" pos:end="965:57"><name pos:start="965:54" pos:end="965:57">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="971:5" pos:end="973:37"><if pos:start="971:5" pos:end="973:37">if <condition pos:start="971:8" pos:end="971:28">(<expr pos:start="971:9" pos:end="971:27"><name pos:start="971:9" pos:end="971:27">CONFIG_H263_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="973:9" pos:end="973:37"><block_content pos:start="973:9" pos:end="973:37">

        <expr_stmt pos:start="973:9" pos:end="973:37"><expr pos:start="973:9" pos:end="973:36"><call pos:start="973:9" pos:end="973:36"><name pos:start="973:9" pos:end="973:23">ff_h263dsp_init</name><argument_list pos:start="973:24" pos:end="973:36">(<argument pos:start="973:25" pos:end="973:35"><expr pos:start="973:25" pos:end="973:35"><operator pos:start="973:25" pos:end="973:25">&amp;</operator><name pos:start="973:26" pos:end="973:35"><name pos:start="973:26" pos:end="973:26">s</name><operator pos:start="973:27" pos:end="973:28">-&gt;</operator><name pos:start="973:29" pos:end="973:35">h263dsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="975:5" pos:end="977:44"><if pos:start="975:5" pos:end="977:44">if <condition pos:start="975:8" pos:end="975:25">(<expr pos:start="975:9" pos:end="975:24"><operator pos:start="975:9" pos:end="975:9">!</operator><name pos:start="975:10" pos:end="975:24"><name pos:start="975:10" pos:end="975:10">s</name><operator pos:start="975:11" pos:end="975:12">-&gt;</operator><name pos:start="975:13" pos:end="975:24">dct_quantize</name></name></expr>)</condition><block type="pseudo" pos:start="977:9" pos:end="977:44"><block_content pos:start="977:9" pos:end="977:44">

        <expr_stmt pos:start="977:9" pos:end="977:44"><expr pos:start="977:9" pos:end="977:43"><name pos:start="977:9" pos:end="977:23"><name pos:start="977:9" pos:end="977:9">s</name><operator pos:start="977:10" pos:end="977:11">-&gt;</operator><name pos:start="977:12" pos:end="977:23">dct_quantize</name></name> <operator pos:start="977:25" pos:end="977:25">=</operator> <name pos:start="977:27" pos:end="977:43">ff_dct_quantize_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="979:5" pos:end="981:40"><if pos:start="979:5" pos:end="981:40">if <condition pos:start="979:8" pos:end="979:24">(<expr pos:start="979:9" pos:end="979:23"><operator pos:start="979:9" pos:end="979:9">!</operator><name pos:start="979:10" pos:end="979:23"><name pos:start="979:10" pos:end="979:10">s</name><operator pos:start="979:11" pos:end="979:12">-&gt;</operator><name pos:start="979:13" pos:end="979:23">denoise_dct</name></name></expr>)</condition><block type="pseudo" pos:start="981:9" pos:end="981:40"><block_content pos:start="981:9" pos:end="981:40">

        <expr_stmt pos:start="981:9" pos:end="981:40"><expr pos:start="981:9" pos:end="981:39"><name pos:start="981:9" pos:end="981:22"><name pos:start="981:9" pos:end="981:9">s</name><operator pos:start="981:10" pos:end="981:11">-&gt;</operator><name pos:start="981:12" pos:end="981:22">denoise_dct</name></name>  <operator pos:start="981:25" pos:end="981:25">=</operator> <name pos:start="981:27" pos:end="981:39">denoise_dct_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="983:5" pos:end="983:43"><expr pos:start="983:5" pos:end="983:42"><name pos:start="983:5" pos:end="983:24"><name pos:start="983:5" pos:end="983:5">s</name><operator pos:start="983:6" pos:end="983:7">-&gt;</operator><name pos:start="983:8" pos:end="983:24">fast_dct_quantize</name></name> <operator pos:start="983:26" pos:end="983:26">=</operator> <name pos:start="983:28" pos:end="983:42"><name pos:start="983:28" pos:end="983:28">s</name><operator pos:start="983:29" pos:end="983:30">-&gt;</operator><name pos:start="983:31" pos:end="983:42">dct_quantize</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="985:5" pos:end="987:50"><if pos:start="985:5" pos:end="987:50">if <condition pos:start="985:8" pos:end="985:23">(<expr pos:start="985:9" pos:end="985:22"><name pos:start="985:9" pos:end="985:22"><name pos:start="985:9" pos:end="985:13">avctx</name><operator pos:start="985:14" pos:end="985:15">-&gt;</operator><name pos:start="985:16" pos:end="985:22">trellis</name></name></expr>)</condition><block type="pseudo" pos:start="987:9" pos:end="987:50"><block_content pos:start="987:9" pos:end="987:50">

        <expr_stmt pos:start="987:9" pos:end="987:50"><expr pos:start="987:9" pos:end="987:49"><name pos:start="987:9" pos:end="987:23"><name pos:start="987:9" pos:end="987:9">s</name><operator pos:start="987:10" pos:end="987:11">-&gt;</operator><name pos:start="987:12" pos:end="987:23">dct_quantize</name></name>  <operator pos:start="987:26" pos:end="987:26">=</operator> <name pos:start="987:28" pos:end="987:49">dct_quantize_trellis_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="991:5" pos:end="993:61"><if pos:start="991:5" pos:end="993:61">if <condition pos:start="991:8" pos:end="991:75">(<expr pos:start="991:9" pos:end="991:74"><operator pos:start="991:9" pos:end="991:9">(</operator><name pos:start="991:10" pos:end="991:29">CONFIG_H263P_ENCODER</name> <operator pos:start="991:31" pos:end="991:32">||</operator> <name pos:start="991:34" pos:end="991:52">CONFIG_RV20_ENCODER</name><operator pos:start="991:53" pos:end="991:53">)</operator> <operator pos:start="991:55" pos:end="991:56">&amp;&amp;</operator> <name pos:start="991:58" pos:end="991:74"><name pos:start="991:58" pos:end="991:58">s</name><operator pos:start="991:59" pos:end="991:60">-&gt;</operator><name pos:start="991:61" pos:end="991:74">modified_quant</name></name></expr>)</condition><block type="pseudo" pos:start="993:9" pos:end="993:61"><block_content pos:start="993:9" pos:end="993:61">

        <expr_stmt pos:start="993:9" pos:end="993:61"><expr pos:start="993:9" pos:end="993:60"><name pos:start="993:9" pos:end="993:30"><name pos:start="993:9" pos:end="993:9">s</name><operator pos:start="993:10" pos:end="993:11">-&gt;</operator><name pos:start="993:12" pos:end="993:30">chroma_qscale_table</name></name> <operator pos:start="993:32" pos:end="993:32">=</operator> <name pos:start="993:34" pos:end="993:60">ff_h263_chroma_qscale_table</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="997:5" pos:end="997:27"><expr pos:start="997:5" pos:end="997:26"><name pos:start="997:5" pos:end="997:22"><name pos:start="997:5" pos:end="997:5">s</name><operator pos:start="997:6" pos:end="997:7">-&gt;</operator><name pos:start="997:8" pos:end="997:22">quant_precision</name></name> <operator pos:start="997:24" pos:end="997:24">=</operator> <literal type="number" pos:start="997:26" pos:end="997:26">5</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="1001:5" pos:end="1001:63"><expr pos:start="1001:5" pos:end="1001:62"><call pos:start="1001:5" pos:end="1001:62"><name pos:start="1001:5" pos:end="1001:14">ff_set_cmp</name><argument_list pos:start="1001:15" pos:end="1001:62">(<argument pos:start="1001:16" pos:end="1001:22"><expr pos:start="1001:16" pos:end="1001:22"><operator pos:start="1001:16" pos:end="1001:16">&amp;</operator><name pos:start="1001:17" pos:end="1001:22"><name pos:start="1001:17" pos:end="1001:17">s</name><operator pos:start="1001:18" pos:end="1001:19">-&gt;</operator><name pos:start="1001:20" pos:end="1001:22">dsp</name></name></expr></argument>, <argument pos:start="1001:25" pos:end="1001:40"><expr pos:start="1001:25" pos:end="1001:40"><name pos:start="1001:25" pos:end="1001:40"><name pos:start="1001:25" pos:end="1001:25">s</name><operator pos:start="1001:26" pos:end="1001:27">-&gt;</operator><name pos:start="1001:28" pos:end="1001:30">dsp</name><operator pos:start="1001:31" pos:end="1001:31">.</operator><name pos:start="1001:32" pos:end="1001:40">ildct_cmp</name></name></expr></argument>, <argument pos:start="1001:43" pos:end="1001:61"><expr pos:start="1001:43" pos:end="1001:61"><name pos:start="1001:43" pos:end="1001:61"><name pos:start="1001:43" pos:end="1001:43">s</name><operator pos:start="1001:44" pos:end="1001:45">-&gt;</operator><name pos:start="1001:46" pos:end="1001:50">avctx</name><operator pos:start="1001:51" pos:end="1001:52">-&gt;</operator><name pos:start="1001:53" pos:end="1001:61">ildct_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1003:5" pos:end="1003:73"><expr pos:start="1003:5" pos:end="1003:72"><call pos:start="1003:5" pos:end="1003:72"><name pos:start="1003:5" pos:end="1003:14">ff_set_cmp</name><argument_list pos:start="1003:15" pos:end="1003:72">(<argument pos:start="1003:16" pos:end="1003:22"><expr pos:start="1003:16" pos:end="1003:22"><operator pos:start="1003:16" pos:end="1003:16">&amp;</operator><name pos:start="1003:17" pos:end="1003:22"><name pos:start="1003:17" pos:end="1003:17">s</name><operator pos:start="1003:18" pos:end="1003:19">-&gt;</operator><name pos:start="1003:20" pos:end="1003:22">dsp</name></name></expr></argument>, <argument pos:start="1003:25" pos:end="1003:45"><expr pos:start="1003:25" pos:end="1003:45"><name pos:start="1003:25" pos:end="1003:45"><name pos:start="1003:25" pos:end="1003:25">s</name><operator pos:start="1003:26" pos:end="1003:27">-&gt;</operator><name pos:start="1003:28" pos:end="1003:30">dsp</name><operator pos:start="1003:31" pos:end="1003:31">.</operator><name pos:start="1003:32" pos:end="1003:45">frame_skip_cmp</name></name></expr></argument>, <argument pos:start="1003:48" pos:end="1003:71"><expr pos:start="1003:48" pos:end="1003:71"><name pos:start="1003:48" pos:end="1003:71"><name pos:start="1003:48" pos:end="1003:48">s</name><operator pos:start="1003:49" pos:end="1003:50">-&gt;</operator><name pos:start="1003:51" pos:end="1003:55">avctx</name><operator pos:start="1003:56" pos:end="1003:57">-&gt;</operator><name pos:start="1003:58" pos:end="1003:71">frame_skip_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1007:5" pos:end="1009:31"><if pos:start="1007:5" pos:end="1009:31">if <condition pos:start="1007:8" pos:end="1007:57">(<expr pos:start="1007:9" pos:end="1007:56"><name pos:start="1007:9" pos:end="1007:27">CONFIG_H261_ENCODER</name> <operator pos:start="1007:29" pos:end="1007:30">&amp;&amp;</operator> <name pos:start="1007:32" pos:end="1007:44"><name pos:start="1007:32" pos:end="1007:32">s</name><operator pos:start="1007:33" pos:end="1007:34">-&gt;</operator><name pos:start="1007:35" pos:end="1007:44">out_format</name></name> <operator pos:start="1007:46" pos:end="1007:47">==</operator> <name pos:start="1007:49" pos:end="1007:56">FMT_H261</name></expr>)</condition><block type="pseudo" pos:start="1009:9" pos:end="1009:31"><block_content pos:start="1009:9" pos:end="1009:31">

        <expr_stmt pos:start="1009:9" pos:end="1009:31"><expr pos:start="1009:9" pos:end="1009:30"><call pos:start="1009:9" pos:end="1009:30"><name pos:start="1009:9" pos:end="1009:27">ff_h261_encode_init</name><argument_list pos:start="1009:28" pos:end="1009:30">(<argument pos:start="1009:29" pos:end="1009:29"><expr pos:start="1009:29" pos:end="1009:29"><name pos:start="1009:29" pos:end="1009:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1011:5" pos:end="1013:31"><if pos:start="1011:5" pos:end="1013:31">if <condition pos:start="1011:8" pos:end="1011:57">(<expr pos:start="1011:9" pos:end="1011:56"><name pos:start="1011:9" pos:end="1011:27">CONFIG_H263_ENCODER</name> <operator pos:start="1011:29" pos:end="1011:30">&amp;&amp;</operator> <name pos:start="1011:32" pos:end="1011:44"><name pos:start="1011:32" pos:end="1011:32">s</name><operator pos:start="1011:33" pos:end="1011:34">-&gt;</operator><name pos:start="1011:35" pos:end="1011:44">out_format</name></name> <operator pos:start="1011:46" pos:end="1011:47">==</operator> <name pos:start="1011:49" pos:end="1011:56">FMT_H263</name></expr>)</condition><block type="pseudo" pos:start="1013:9" pos:end="1013:31"><block_content pos:start="1013:9" pos:end="1013:31">

        <expr_stmt pos:start="1013:9" pos:end="1013:31"><expr pos:start="1013:9" pos:end="1013:30"><call pos:start="1013:9" pos:end="1013:30"><name pos:start="1013:9" pos:end="1013:27">ff_h263_encode_init</name><argument_list pos:start="1013:28" pos:end="1013:30">(<argument pos:start="1013:29" pos:end="1013:29"><expr pos:start="1013:29" pos:end="1013:29"><name pos:start="1013:29" pos:end="1013:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1015:5" pos:end="1017:34"><if pos:start="1015:5" pos:end="1017:34">if <condition pos:start="1015:8" pos:end="1015:53">(<expr pos:start="1015:9" pos:end="1015:52"><name pos:start="1015:9" pos:end="1015:30">CONFIG_MSMPEG4_ENCODER</name> <operator pos:start="1015:32" pos:end="1015:33">&amp;&amp;</operator> <name pos:start="1015:35" pos:end="1015:52"><name pos:start="1015:35" pos:end="1015:35">s</name><operator pos:start="1015:36" pos:end="1015:37">-&gt;</operator><name pos:start="1015:38" pos:end="1015:52">msmpeg4_version</name></name></expr>)</condition><block type="pseudo" pos:start="1017:9" pos:end="1017:34"><block_content pos:start="1017:9" pos:end="1017:34">

        <expr_stmt pos:start="1017:9" pos:end="1017:34"><expr pos:start="1017:9" pos:end="1017:33"><call pos:start="1017:9" pos:end="1017:33"><name pos:start="1017:9" pos:end="1017:30">ff_msmpeg4_encode_init</name><argument_list pos:start="1017:31" pos:end="1017:33">(<argument pos:start="1017:32" pos:end="1017:32"><expr pos:start="1017:32" pos:end="1017:32"><name pos:start="1017:32" pos:end="1017:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1019:5" pos:end="1023:32"><if pos:start="1019:5" pos:end="1023:32">if <condition pos:start="1019:8" pos:end="1021:38">(<expr pos:start="1019:9" pos:end="1021:37"><operator pos:start="1019:9" pos:end="1019:9">(</operator><name pos:start="1019:10" pos:end="1019:34">CONFIG_MPEG1VIDEO_ENCODER</name> <operator pos:start="1019:36" pos:end="1019:37">||</operator> <name pos:start="1019:39" pos:end="1019:63">CONFIG_MPEG2VIDEO_ENCODER</name><operator pos:start="1019:64" pos:end="1019:64">)</operator>

        <operator pos:start="1021:9" pos:end="1021:10">&amp;&amp;</operator> <name pos:start="1021:12" pos:end="1021:24"><name pos:start="1021:12" pos:end="1021:12">s</name><operator pos:start="1021:13" pos:end="1021:14">-&gt;</operator><name pos:start="1021:15" pos:end="1021:24">out_format</name></name> <operator pos:start="1021:26" pos:end="1021:27">==</operator> <name pos:start="1021:29" pos:end="1021:37">FMT_MPEG1</name></expr>)</condition><block type="pseudo" pos:start="1023:9" pos:end="1023:32"><block_content pos:start="1023:9" pos:end="1023:32">

        <expr_stmt pos:start="1023:9" pos:end="1023:32"><expr pos:start="1023:9" pos:end="1023:31"><call pos:start="1023:9" pos:end="1023:31"><name pos:start="1023:9" pos:end="1023:28">ff_mpeg1_encode_init</name><argument_list pos:start="1023:29" pos:end="1023:31">(<argument pos:start="1023:30" pos:end="1023:30"><expr pos:start="1023:30" pos:end="1023:30"><name pos:start="1023:30" pos:end="1023:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="1027:5" pos:end="1027:23">/* init q matrix */</comment>

    <for pos:start="1029:5" pos:end="1065:5">for <control pos:start="1029:9" pos:end="1029:28">(<init pos:start="1029:10" pos:end="1029:15"><expr pos:start="1029:10" pos:end="1029:14"><name pos:start="1029:10" pos:end="1029:10">i</name> <operator pos:start="1029:12" pos:end="1029:12">=</operator> <literal type="number" pos:start="1029:14" pos:end="1029:14">0</literal></expr>;</init> <condition pos:start="1029:17" pos:end="1029:23"><expr pos:start="1029:17" pos:end="1029:22"><name pos:start="1029:17" pos:end="1029:17">i</name> <operator pos:start="1029:19" pos:end="1029:19">&lt;</operator> <literal type="number" pos:start="1029:21" pos:end="1029:22">64</literal></expr>;</condition> <incr pos:start="1029:25" pos:end="1029:27"><expr pos:start="1029:25" pos:end="1029:27"><name pos:start="1029:25" pos:end="1029:25">i</name><operator pos:start="1029:26" pos:end="1029:27">++</operator></expr></incr>)</control> <block pos:start="1029:30" pos:end="1065:5">{<block_content pos:start="1031:9" pos:end="1063:59">

        <decl_stmt pos:start="1031:9" pos:end="1031:43"><decl pos:start="1031:9" pos:end="1031:42"><type pos:start="1031:9" pos:end="1031:11"><name pos:start="1031:9" pos:end="1031:11">int</name></type> <name pos:start="1031:13" pos:end="1031:13">j</name> <init pos:start="1031:15" pos:end="1031:42">= <expr pos:start="1031:17" pos:end="1031:42"><name pos:start="1031:17" pos:end="1031:42"><name pos:start="1031:17" pos:end="1031:17">s</name><operator pos:start="1031:18" pos:end="1031:19">-&gt;</operator><name pos:start="1031:20" pos:end="1031:22">dsp</name><operator pos:start="1031:23" pos:end="1031:23">.</operator><name pos:start="1031:24" pos:end="1031:39">idct_permutation</name><index pos:start="1031:40" pos:end="1031:42">[<expr pos:start="1031:41" pos:end="1031:41"><name pos:start="1031:41" pos:end="1031:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="1033:9" pos:end="1055:9"><if pos:start="1033:9" pos:end="1041:9">if <condition pos:start="1033:12" pos:end="1035:26">(<expr pos:start="1033:13" pos:end="1035:25"><name pos:start="1033:13" pos:end="1033:32">CONFIG_MPEG4_ENCODER</name> <operator pos:start="1033:34" pos:end="1033:35">&amp;&amp;</operator> <name pos:start="1033:37" pos:end="1033:47"><name pos:start="1033:37" pos:end="1033:37">s</name><operator pos:start="1033:38" pos:end="1033:39">-&gt;</operator><name pos:start="1033:40" pos:end="1033:47">codec_id</name></name> <operator pos:start="1033:49" pos:end="1033:50">==</operator> <name pos:start="1033:52" pos:end="1033:68">AV_CODEC_ID_MPEG4</name> <operator pos:start="1033:70" pos:end="1033:71">&amp;&amp;</operator>

            <name pos:start="1035:13" pos:end="1035:25"><name pos:start="1035:13" pos:end="1035:13">s</name><operator pos:start="1035:14" pos:end="1035:15">-&gt;</operator><name pos:start="1035:16" pos:end="1035:25">mpeg_quant</name></name></expr>)</condition> <block pos:start="1035:28" pos:end="1041:9">{<block_content pos:start="1037:13" pos:end="1039:70">

            <expr_stmt pos:start="1037:13" pos:end="1037:66"><expr pos:start="1037:13" pos:end="1037:65"><name pos:start="1037:13" pos:end="1037:30"><name pos:start="1037:13" pos:end="1037:13">s</name><operator pos:start="1037:14" pos:end="1037:15">-&gt;</operator><name pos:start="1037:16" pos:end="1037:27">intra_matrix</name><index pos:start="1037:28" pos:end="1037:30">[<expr pos:start="1037:29" pos:end="1037:29"><name pos:start="1037:29" pos:end="1037:29">j</name></expr>]</index></name> <operator pos:start="1037:32" pos:end="1037:32">=</operator> <name pos:start="1037:34" pos:end="1037:65"><name pos:start="1037:34" pos:end="1037:62">ff_mpeg4_default_intra_matrix</name><index pos:start="1037:63" pos:end="1037:65">[<expr pos:start="1037:64" pos:end="1037:64"><name pos:start="1037:64" pos:end="1037:64">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1039:13" pos:end="1039:70"><expr pos:start="1039:13" pos:end="1039:69"><name pos:start="1039:13" pos:end="1039:30"><name pos:start="1039:13" pos:end="1039:13">s</name><operator pos:start="1039:14" pos:end="1039:15">-&gt;</operator><name pos:start="1039:16" pos:end="1039:27">inter_matrix</name><index pos:start="1039:28" pos:end="1039:30">[<expr pos:start="1039:29" pos:end="1039:29"><name pos:start="1039:29" pos:end="1039:29">j</name></expr>]</index></name> <operator pos:start="1039:32" pos:end="1039:32">=</operator> <name pos:start="1039:34" pos:end="1039:69"><name pos:start="1039:34" pos:end="1039:66">ff_mpeg4_default_non_intra_matrix</name><index pos:start="1039:67" pos:end="1039:69">[<expr pos:start="1039:68" pos:end="1039:68"><name pos:start="1039:68" pos:end="1039:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="1041:11" pos:end="1047:9">else if <condition pos:start="1041:19" pos:end="1041:74">(<expr pos:start="1041:20" pos:end="1041:73"><name pos:start="1041:20" pos:end="1041:32"><name pos:start="1041:20" pos:end="1041:20">s</name><operator pos:start="1041:21" pos:end="1041:22">-&gt;</operator><name pos:start="1041:23" pos:end="1041:32">out_format</name></name> <operator pos:start="1041:34" pos:end="1041:35">==</operator> <name pos:start="1041:37" pos:end="1041:44">FMT_H263</name> <operator pos:start="1041:46" pos:end="1041:47">||</operator> <name pos:start="1041:49" pos:end="1041:61"><name pos:start="1041:49" pos:end="1041:49">s</name><operator pos:start="1041:50" pos:end="1041:51">-&gt;</operator><name pos:start="1041:52" pos:end="1041:61">out_format</name></name> <operator pos:start="1041:63" pos:end="1041:64">==</operator> <name pos:start="1041:66" pos:end="1041:73">FMT_H261</name></expr>)</condition> <block pos:start="1041:76" pos:end="1047:9">{<block_content pos:start="1043:13" pos:end="1045:70">

            <expr_stmt pos:start="1043:13" pos:end="1045:70"><expr pos:start="1043:13" pos:end="1045:69"><name pos:start="1043:13" pos:end="1043:30"><name pos:start="1043:13" pos:end="1043:13">s</name><operator pos:start="1043:14" pos:end="1043:15">-&gt;</operator><name pos:start="1043:16" pos:end="1043:27">intra_matrix</name><index pos:start="1043:28" pos:end="1043:30">[<expr pos:start="1043:29" pos:end="1043:29"><name pos:start="1043:29" pos:end="1043:29">j</name></expr>]</index></name> <operator pos:start="1043:32" pos:end="1043:32">=</operator>

            <name pos:start="1045:13" pos:end="1045:30"><name pos:start="1045:13" pos:end="1045:13">s</name><operator pos:start="1045:14" pos:end="1045:15">-&gt;</operator><name pos:start="1045:16" pos:end="1045:27">inter_matrix</name><index pos:start="1045:28" pos:end="1045:30">[<expr pos:start="1045:29" pos:end="1045:29"><name pos:start="1045:29" pos:end="1045:29">j</name></expr>]</index></name> <operator pos:start="1045:32" pos:end="1045:32">=</operator> <name pos:start="1045:34" pos:end="1045:69"><name pos:start="1045:34" pos:end="1045:66">ff_mpeg1_default_non_intra_matrix</name><index pos:start="1045:67" pos:end="1045:69">[<expr pos:start="1045:68" pos:end="1045:68"><name pos:start="1045:68" pos:end="1045:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1047:11" pos:end="1055:9">else <block pos:start="1047:16" pos:end="1055:9">{<block_content pos:start="1051:13" pos:end="1053:70">

            <comment type="block" pos:start="1049:13" pos:end="1049:25">/* mpeg1/2 */</comment>

            <expr_stmt pos:start="1051:13" pos:end="1051:66"><expr pos:start="1051:13" pos:end="1051:65"><name pos:start="1051:13" pos:end="1051:30"><name pos:start="1051:13" pos:end="1051:13">s</name><operator pos:start="1051:14" pos:end="1051:15">-&gt;</operator><name pos:start="1051:16" pos:end="1051:27">intra_matrix</name><index pos:start="1051:28" pos:end="1051:30">[<expr pos:start="1051:29" pos:end="1051:29"><name pos:start="1051:29" pos:end="1051:29">j</name></expr>]</index></name> <operator pos:start="1051:32" pos:end="1051:32">=</operator> <name pos:start="1051:34" pos:end="1051:65"><name pos:start="1051:34" pos:end="1051:62">ff_mpeg1_default_intra_matrix</name><index pos:start="1051:63" pos:end="1051:65">[<expr pos:start="1051:64" pos:end="1051:64"><name pos:start="1051:64" pos:end="1051:64">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1053:13" pos:end="1053:70"><expr pos:start="1053:13" pos:end="1053:69"><name pos:start="1053:13" pos:end="1053:30"><name pos:start="1053:13" pos:end="1053:13">s</name><operator pos:start="1053:14" pos:end="1053:15">-&gt;</operator><name pos:start="1053:16" pos:end="1053:27">inter_matrix</name><index pos:start="1053:28" pos:end="1053:30">[<expr pos:start="1053:29" pos:end="1053:29"><name pos:start="1053:29" pos:end="1053:29">j</name></expr>]</index></name> <operator pos:start="1053:32" pos:end="1053:32">=</operator> <name pos:start="1053:34" pos:end="1053:69"><name pos:start="1053:34" pos:end="1053:66">ff_mpeg1_default_non_intra_matrix</name><index pos:start="1053:67" pos:end="1053:69">[<expr pos:start="1053:68" pos:end="1053:68"><name pos:start="1053:68" pos:end="1053:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="1057:9" pos:end="1059:59"><if pos:start="1057:9" pos:end="1059:59">if <condition pos:start="1057:12" pos:end="1057:35">(<expr pos:start="1057:13" pos:end="1057:34"><name pos:start="1057:13" pos:end="1057:34"><name pos:start="1057:13" pos:end="1057:13">s</name><operator pos:start="1057:14" pos:end="1057:15">-&gt;</operator><name pos:start="1057:16" pos:end="1057:20">avctx</name><operator pos:start="1057:21" pos:end="1057:22">-&gt;</operator><name pos:start="1057:23" pos:end="1057:34">intra_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="1059:13" pos:end="1059:59"><block_content pos:start="1059:13" pos:end="1059:59">

            <expr_stmt pos:start="1059:13" pos:end="1059:59"><expr pos:start="1059:13" pos:end="1059:58"><name pos:start="1059:13" pos:end="1059:30"><name pos:start="1059:13" pos:end="1059:13">s</name><operator pos:start="1059:14" pos:end="1059:15">-&gt;</operator><name pos:start="1059:16" pos:end="1059:27">intra_matrix</name><index pos:start="1059:28" pos:end="1059:30">[<expr pos:start="1059:29" pos:end="1059:29"><name pos:start="1059:29" pos:end="1059:29">j</name></expr>]</index></name> <operator pos:start="1059:32" pos:end="1059:32">=</operator> <name pos:start="1059:34" pos:end="1059:58"><name pos:start="1059:34" pos:end="1059:34">s</name><operator pos:start="1059:35" pos:end="1059:36">-&gt;</operator><name pos:start="1059:37" pos:end="1059:41">avctx</name><operator pos:start="1059:42" pos:end="1059:43">-&gt;</operator><name pos:start="1059:44" pos:end="1059:55">intra_matrix</name><index pos:start="1059:56" pos:end="1059:58">[<expr pos:start="1059:57" pos:end="1059:57"><name pos:start="1059:57" pos:end="1059:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="1061:9" pos:end="1063:59"><if pos:start="1061:9" pos:end="1063:59">if <condition pos:start="1061:12" pos:end="1061:35">(<expr pos:start="1061:13" pos:end="1061:34"><name pos:start="1061:13" pos:end="1061:34"><name pos:start="1061:13" pos:end="1061:13">s</name><operator pos:start="1061:14" pos:end="1061:15">-&gt;</operator><name pos:start="1061:16" pos:end="1061:20">avctx</name><operator pos:start="1061:21" pos:end="1061:22">-&gt;</operator><name pos:start="1061:23" pos:end="1061:34">inter_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="1063:13" pos:end="1063:59"><block_content pos:start="1063:13" pos:end="1063:59">

            <expr_stmt pos:start="1063:13" pos:end="1063:59"><expr pos:start="1063:13" pos:end="1063:58"><name pos:start="1063:13" pos:end="1063:30"><name pos:start="1063:13" pos:end="1063:13">s</name><operator pos:start="1063:14" pos:end="1063:15">-&gt;</operator><name pos:start="1063:16" pos:end="1063:27">inter_matrix</name><index pos:start="1063:28" pos:end="1063:30">[<expr pos:start="1063:29" pos:end="1063:29"><name pos:start="1063:29" pos:end="1063:29">j</name></expr>]</index></name> <operator pos:start="1063:32" pos:end="1063:32">=</operator> <name pos:start="1063:34" pos:end="1063:58"><name pos:start="1063:34" pos:end="1063:34">s</name><operator pos:start="1063:35" pos:end="1063:36">-&gt;</operator><name pos:start="1063:37" pos:end="1063:41">avctx</name><operator pos:start="1063:42" pos:end="1063:43">-&gt;</operator><name pos:start="1063:44" pos:end="1063:55">inter_matrix</name><index pos:start="1063:56" pos:end="1063:58">[<expr pos:start="1063:57" pos:end="1063:57"><name pos:start="1063:57" pos:end="1063:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1069:5" pos:end="1069:27">/* precompute matrix */</comment>

    <comment type="block" pos:start="1071:5" pos:end="1071:55">/* for mjpeg, we do include qscale in the matrix */</comment>

    <if_stmt pos:start="1073:5" pos:end="1087:5"><if pos:start="1073:5" pos:end="1087:5">if <condition pos:start="1073:8" pos:end="1073:35">(<expr pos:start="1073:9" pos:end="1073:34"><name pos:start="1073:9" pos:end="1073:21"><name pos:start="1073:9" pos:end="1073:9">s</name><operator pos:start="1073:10" pos:end="1073:11">-&gt;</operator><name pos:start="1073:12" pos:end="1073:21">out_format</name></name> <operator pos:start="1073:23" pos:end="1073:24">!=</operator> <name pos:start="1073:26" pos:end="1073:34">FMT_MJPEG</name></expr>)</condition> <block pos:start="1073:37" pos:end="1087:5">{<block_content pos:start="1075:9" pos:end="1085:33">

        <expr_stmt pos:start="1075:9" pos:end="1079:33"><expr pos:start="1075:9" pos:end="1079:32"><call pos:start="1075:9" pos:end="1079:32"><name pos:start="1075:9" pos:end="1075:25">ff_convert_matrix</name><argument_list pos:start="1075:26" pos:end="1079:32">(<argument pos:start="1075:27" pos:end="1075:33"><expr pos:start="1075:27" pos:end="1075:33"><operator pos:start="1075:27" pos:end="1075:27">&amp;</operator><name pos:start="1075:28" pos:end="1075:33"><name pos:start="1075:28" pos:end="1075:28">s</name><operator pos:start="1075:29" pos:end="1075:30">-&gt;</operator><name pos:start="1075:31" pos:end="1075:33">dsp</name></name></expr></argument>, <argument pos:start="1075:36" pos:end="1075:52"><expr pos:start="1075:36" pos:end="1075:52"><name pos:start="1075:36" pos:end="1075:52"><name pos:start="1075:36" pos:end="1075:36">s</name><operator pos:start="1075:37" pos:end="1075:38">-&gt;</operator><name pos:start="1075:39" pos:end="1075:52">q_intra_matrix</name></name></expr></argument>, <argument pos:start="1075:55" pos:end="1075:73"><expr pos:start="1075:55" pos:end="1075:73"><name pos:start="1075:55" pos:end="1075:73"><name pos:start="1075:55" pos:end="1075:55">s</name><operator pos:start="1075:56" pos:end="1075:57">-&gt;</operator><name pos:start="1075:58" pos:end="1075:73">q_intra_matrix16</name></name></expr></argument>,

                          <argument pos:start="1077:27" pos:end="1077:41"><expr pos:start="1077:27" pos:end="1077:41"><name pos:start="1077:27" pos:end="1077:41"><name pos:start="1077:27" pos:end="1077:27">s</name><operator pos:start="1077:28" pos:end="1077:29">-&gt;</operator><name pos:start="1077:30" pos:end="1077:41">intra_matrix</name></name></expr></argument>, <argument pos:start="1077:44" pos:end="1077:62"><expr pos:start="1077:44" pos:end="1077:62"><name pos:start="1077:44" pos:end="1077:62"><name pos:start="1077:44" pos:end="1077:44">s</name><operator pos:start="1077:45" pos:end="1077:46">-&gt;</operator><name pos:start="1077:47" pos:end="1077:62">intra_quant_bias</name></name></expr></argument>, <argument pos:start="1077:65" pos:end="1077:75"><expr pos:start="1077:65" pos:end="1077:75"><name pos:start="1077:65" pos:end="1077:75"><name pos:start="1077:65" pos:end="1077:69">avctx</name><operator pos:start="1077:70" pos:end="1077:71">-&gt;</operator><name pos:start="1077:72" pos:end="1077:75">qmin</name></name></expr></argument>,

                          <argument pos:start="1079:27" pos:end="1079:28"><expr pos:start="1079:27" pos:end="1079:28"><literal type="number" pos:start="1079:27" pos:end="1079:28">31</literal></expr></argument>, <argument pos:start="1079:31" pos:end="1079:31"><expr pos:start="1079:31" pos:end="1079:31"><literal type="number" pos:start="1079:31" pos:end="1079:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1081:9" pos:end="1085:33"><expr pos:start="1081:9" pos:end="1085:32"><call pos:start="1081:9" pos:end="1085:32"><name pos:start="1081:9" pos:end="1081:25">ff_convert_matrix</name><argument_list pos:start="1081:26" pos:end="1085:32">(<argument pos:start="1081:27" pos:end="1081:33"><expr pos:start="1081:27" pos:end="1081:33"><operator pos:start="1081:27" pos:end="1081:27">&amp;</operator><name pos:start="1081:28" pos:end="1081:33"><name pos:start="1081:28" pos:end="1081:28">s</name><operator pos:start="1081:29" pos:end="1081:30">-&gt;</operator><name pos:start="1081:31" pos:end="1081:33">dsp</name></name></expr></argument>, <argument pos:start="1081:36" pos:end="1081:52"><expr pos:start="1081:36" pos:end="1081:52"><name pos:start="1081:36" pos:end="1081:52"><name pos:start="1081:36" pos:end="1081:36">s</name><operator pos:start="1081:37" pos:end="1081:38">-&gt;</operator><name pos:start="1081:39" pos:end="1081:52">q_inter_matrix</name></name></expr></argument>, <argument pos:start="1081:55" pos:end="1081:73"><expr pos:start="1081:55" pos:end="1081:73"><name pos:start="1081:55" pos:end="1081:73"><name pos:start="1081:55" pos:end="1081:55">s</name><operator pos:start="1081:56" pos:end="1081:57">-&gt;</operator><name pos:start="1081:58" pos:end="1081:73">q_inter_matrix16</name></name></expr></argument>,

                          <argument pos:start="1083:27" pos:end="1083:41"><expr pos:start="1083:27" pos:end="1083:41"><name pos:start="1083:27" pos:end="1083:41"><name pos:start="1083:27" pos:end="1083:27">s</name><operator pos:start="1083:28" pos:end="1083:29">-&gt;</operator><name pos:start="1083:30" pos:end="1083:41">inter_matrix</name></name></expr></argument>, <argument pos:start="1083:44" pos:end="1083:62"><expr pos:start="1083:44" pos:end="1083:62"><name pos:start="1083:44" pos:end="1083:62"><name pos:start="1083:44" pos:end="1083:44">s</name><operator pos:start="1083:45" pos:end="1083:46">-&gt;</operator><name pos:start="1083:47" pos:end="1083:62">inter_quant_bias</name></name></expr></argument>, <argument pos:start="1083:65" pos:end="1083:75"><expr pos:start="1083:65" pos:end="1083:75"><name pos:start="1083:65" pos:end="1083:75"><name pos:start="1083:65" pos:end="1083:69">avctx</name><operator pos:start="1083:70" pos:end="1083:71">-&gt;</operator><name pos:start="1083:72" pos:end="1083:75">qmin</name></name></expr></argument>,

                          <argument pos:start="1085:27" pos:end="1085:28"><expr pos:start="1085:27" pos:end="1085:28"><literal type="number" pos:start="1085:27" pos:end="1085:28">31</literal></expr></argument>, <argument pos:start="1085:31" pos:end="1085:31"><expr pos:start="1085:31" pos:end="1085:31"><literal type="number" pos:start="1085:31" pos:end="1085:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1091:5" pos:end="1098:0"><if pos:start="1091:5" pos:end="1098:0">if <condition pos:start="1091:8" pos:end="1091:36">(<expr pos:start="1091:9" pos:end="1091:35"><call pos:start="1091:9" pos:end="1091:31"><name pos:start="1091:9" pos:end="1091:28">ff_rate_control_init</name><argument_list pos:start="1091:29" pos:end="1091:31">(<argument pos:start="1091:30" pos:end="1091:30"><expr pos:start="1091:30" pos:end="1091:30"><name pos:start="1091:30" pos:end="1091:30">s</name></expr></argument>)</argument_list></call> <operator pos:start="1091:33" pos:end="1091:33">&lt;</operator> <literal type="number" pos:start="1091:35" pos:end="1091:35">0</literal></expr>)</condition><block type="pseudo" pos:start="1093:9" pos:end="1098:0"><block_content pos:start="1093:9" pos:end="1098:0">

        <return pos:start="1093:9" pos:end="1098:0">return <expr pos:start="1093:16" pos:end="1093:17"><operator pos:start="1093:16" pos:end="1093:16">-</operator><literal type="number" pos:start="1093:17" pos:end="1093:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="1097:1" pos:end="1097:21">#<cpp:directive pos:start="1097:2" pos:end="1097:3">if</cpp:directive> <expr pos:start="1097:5" pos:end="1097:21"><name pos:start="1097:5" pos:end="1097:21">FF_API_ERROR_RATE</name></expr></cpp:if>

    <macro pos:start="1099:5" pos:end="1099:35"><name pos:start="1099:5" pos:end="1099:35">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="1101:5" pos:end="1103:42"><if pos:start="1101:5" pos:end="1103:42">if <condition pos:start="1101:8" pos:end="1101:26">(<expr pos:start="1101:9" pos:end="1101:25"><name pos:start="1101:9" pos:end="1101:25"><name pos:start="1101:9" pos:end="1101:13">avctx</name><operator pos:start="1101:14" pos:end="1101:15">-&gt;</operator><name pos:start="1101:16" pos:end="1101:25">error_rate</name></name></expr>)</condition><block type="pseudo" pos:start="1103:9" pos:end="1103:42"><block_content pos:start="1103:9" pos:end="1103:42">

        <expr_stmt pos:start="1103:9" pos:end="1103:42"><expr pos:start="1103:9" pos:end="1103:41"><name pos:start="1103:9" pos:end="1103:21"><name pos:start="1103:9" pos:end="1103:9">s</name><operator pos:start="1103:10" pos:end="1103:11">-&gt;</operator><name pos:start="1103:12" pos:end="1103:21">error_rate</name></name> <operator pos:start="1103:23" pos:end="1103:23">=</operator> <name pos:start="1103:25" pos:end="1103:41"><name pos:start="1103:25" pos:end="1103:29">avctx</name><operator pos:start="1103:30" pos:end="1103:31">-&gt;</operator><name pos:start="1103:32" pos:end="1103:41">error_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1105:5" pos:end="1108:0"><expr pos:start="1105:5" pos:end="1105:34"><name pos:start="1105:5" pos:end="1105:34">FF_ENABLE_DEPRECATION_WARNINGS</name></expr>;</expr_stmt>

<cpp:endif pos:start="1107:1" pos:end="1107:6">#<cpp:directive pos:start="1107:2" pos:end="1107:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="1111:5" pos:end="1139:5"><if pos:start="1111:5" pos:end="1139:5">if <condition pos:start="1111:8" pos:end="1111:37">(<expr pos:start="1111:9" pos:end="1111:36"><name pos:start="1111:9" pos:end="1111:31"><name pos:start="1111:9" pos:end="1111:13">avctx</name><operator pos:start="1111:14" pos:end="1111:15">-&gt;</operator><name pos:start="1111:16" pos:end="1111:31">b_frame_strategy</name></name> <operator pos:start="1111:33" pos:end="1111:34">==</operator> <literal type="number" pos:start="1111:36" pos:end="1111:36">2</literal></expr>)</condition> <block pos:start="1111:39" pos:end="1139:5">{<block_content pos:start="1113:9" pos:end="1137:9">

        <for pos:start="1113:9" pos:end="1137:9">for <control pos:start="1113:13" pos:end="1113:49">(<init pos:start="1113:14" pos:end="1113:19"><expr pos:start="1113:14" pos:end="1113:18"><name pos:start="1113:14" pos:end="1113:14">i</name> <operator pos:start="1113:16" pos:end="1113:16">=</operator> <literal type="number" pos:start="1113:18" pos:end="1113:18">0</literal></expr>;</init> <condition pos:start="1113:21" pos:end="1113:44"><expr pos:start="1113:21" pos:end="1113:43"><name pos:start="1113:21" pos:end="1113:21">i</name> <operator pos:start="1113:23" pos:end="1113:23">&lt;</operator> <name pos:start="1113:25" pos:end="1113:39"><name pos:start="1113:25" pos:end="1113:25">s</name><operator pos:start="1113:26" pos:end="1113:27">-&gt;</operator><name pos:start="1113:28" pos:end="1113:39">max_b_frames</name></name> <operator pos:start="1113:41" pos:end="1113:41">+</operator> <literal type="number" pos:start="1113:43" pos:end="1113:43">2</literal></expr>;</condition> <incr pos:start="1113:46" pos:end="1113:48"><expr pos:start="1113:46" pos:end="1113:48"><name pos:start="1113:46" pos:end="1113:46">i</name><operator pos:start="1113:47" pos:end="1113:48">++</operator></expr></incr>)</control> <block pos:start="1113:51" pos:end="1137:9">{<block_content pos:start="1115:13" pos:end="1135:27">

            <expr_stmt pos:start="1115:13" pos:end="1115:48"><expr pos:start="1115:13" pos:end="1115:47"><name pos:start="1115:13" pos:end="1115:28"><name pos:start="1115:13" pos:end="1115:13">s</name><operator pos:start="1115:14" pos:end="1115:15">-&gt;</operator><name pos:start="1115:16" pos:end="1115:25">tmp_frames</name><index pos:start="1115:26" pos:end="1115:28">[<expr pos:start="1115:27" pos:end="1115:27"><name pos:start="1115:27" pos:end="1115:27">i</name></expr>]</index></name> <operator pos:start="1115:30" pos:end="1115:30">=</operator> <call pos:start="1115:32" pos:end="1115:47"><name pos:start="1115:32" pos:end="1115:45">av_frame_alloc</name><argument_list pos:start="1115:46" pos:end="1115:47">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1117:13" pos:end="1119:39"><if pos:start="1117:13" pos:end="1119:39">if <condition pos:start="1117:16" pos:end="1117:34">(<expr pos:start="1117:17" pos:end="1117:33"><operator pos:start="1117:17" pos:end="1117:17">!</operator><name pos:start="1117:18" pos:end="1117:33"><name pos:start="1117:18" pos:end="1117:18">s</name><operator pos:start="1117:19" pos:end="1117:20">-&gt;</operator><name pos:start="1117:21" pos:end="1117:30">tmp_frames</name><index pos:start="1117:31" pos:end="1117:33">[<expr pos:start="1117:32" pos:end="1117:32"><name pos:start="1117:32" pos:end="1117:32">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1119:17" pos:end="1119:39"><block_content pos:start="1119:17" pos:end="1119:39">

                <return pos:start="1119:17" pos:end="1119:39">return <expr pos:start="1119:24" pos:end="1119:38"><call pos:start="1119:24" pos:end="1119:38"><name pos:start="1119:24" pos:end="1119:30">AVERROR</name><argument_list pos:start="1119:31" pos:end="1119:38">(<argument pos:start="1119:32" pos:end="1119:37"><expr pos:start="1119:32" pos:end="1119:37"><name pos:start="1119:32" pos:end="1119:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="1123:13" pos:end="1123:58"><expr pos:start="1123:13" pos:end="1123:57"><name pos:start="1123:13" pos:end="1123:28"><name pos:start="1123:13" pos:end="1123:13">s</name><operator pos:start="1123:14" pos:end="1123:15">-&gt;</operator><name pos:start="1123:16" pos:end="1123:25">tmp_frames</name><index pos:start="1123:26" pos:end="1123:28">[<expr pos:start="1123:27" pos:end="1123:27"><name pos:start="1123:27" pos:end="1123:27">i</name></expr>]</index></name><operator pos:start="1123:29" pos:end="1123:30">-&gt;</operator><name pos:start="1123:31" pos:end="1123:36">format</name> <operator pos:start="1123:38" pos:end="1123:38">=</operator> <name pos:start="1123:40" pos:end="1123:57">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

            <expr_stmt pos:start="1125:13" pos:end="1125:69"><expr pos:start="1125:13" pos:end="1125:68"><name pos:start="1125:13" pos:end="1125:28"><name pos:start="1125:13" pos:end="1125:13">s</name><operator pos:start="1125:14" pos:end="1125:15">-&gt;</operator><name pos:start="1125:16" pos:end="1125:25">tmp_frames</name><index pos:start="1125:26" pos:end="1125:28">[<expr pos:start="1125:27" pos:end="1125:27"><name pos:start="1125:27" pos:end="1125:27">i</name></expr>]</index></name><operator pos:start="1125:29" pos:end="1125:30">-&gt;</operator><name pos:start="1125:31" pos:end="1125:35">width</name>  <operator pos:start="1125:38" pos:end="1125:38">=</operator> <name pos:start="1125:40" pos:end="1125:47"><name pos:start="1125:40" pos:end="1125:40">s</name><operator pos:start="1125:41" pos:end="1125:42">-&gt;</operator><name pos:start="1125:43" pos:end="1125:47">width</name></name>  <operator pos:start="1125:50" pos:end="1125:51">&gt;&gt;</operator> <name pos:start="1125:53" pos:end="1125:68"><name pos:start="1125:53" pos:end="1125:57">avctx</name><operator pos:start="1125:58" pos:end="1125:59">-&gt;</operator><name pos:start="1125:60" pos:end="1125:68">brd_scale</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1127:13" pos:end="1127:69"><expr pos:start="1127:13" pos:end="1127:68"><name pos:start="1127:13" pos:end="1127:28"><name pos:start="1127:13" pos:end="1127:13">s</name><operator pos:start="1127:14" pos:end="1127:15">-&gt;</operator><name pos:start="1127:16" pos:end="1127:25">tmp_frames</name><index pos:start="1127:26" pos:end="1127:28">[<expr pos:start="1127:27" pos:end="1127:27"><name pos:start="1127:27" pos:end="1127:27">i</name></expr>]</index></name><operator pos:start="1127:29" pos:end="1127:30">-&gt;</operator><name pos:start="1127:31" pos:end="1127:36">height</name> <operator pos:start="1127:38" pos:end="1127:38">=</operator> <name pos:start="1127:40" pos:end="1127:48"><name pos:start="1127:40" pos:end="1127:40">s</name><operator pos:start="1127:41" pos:end="1127:42">-&gt;</operator><name pos:start="1127:43" pos:end="1127:48">height</name></name> <operator pos:start="1127:50" pos:end="1127:51">&gt;&gt;</operator> <name pos:start="1127:53" pos:end="1127:68"><name pos:start="1127:53" pos:end="1127:57">avctx</name><operator pos:start="1127:58" pos:end="1127:59">-&gt;</operator><name pos:start="1127:60" pos:end="1127:68">brd_scale</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="1131:13" pos:end="1131:60"><expr pos:start="1131:13" pos:end="1131:59"><name pos:start="1131:13" pos:end="1131:15">ret</name> <operator pos:start="1131:17" pos:end="1131:17">=</operator> <call pos:start="1131:19" pos:end="1131:59"><name pos:start="1131:19" pos:end="1131:37">av_frame_get_buffer</name><argument_list pos:start="1131:38" pos:end="1131:59">(<argument pos:start="1131:39" pos:end="1131:54"><expr pos:start="1131:39" pos:end="1131:54"><name pos:start="1131:39" pos:end="1131:54"><name pos:start="1131:39" pos:end="1131:39">s</name><operator pos:start="1131:40" pos:end="1131:41">-&gt;</operator><name pos:start="1131:42" pos:end="1131:51">tmp_frames</name><index pos:start="1131:52" pos:end="1131:54">[<expr pos:start="1131:53" pos:end="1131:53"><name pos:start="1131:53" pos:end="1131:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="1131:57" pos:end="1131:58"><expr pos:start="1131:57" pos:end="1131:58"><literal type="number" pos:start="1131:57" pos:end="1131:58">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1133:13" pos:end="1135:27"><if pos:start="1133:13" pos:end="1135:27">if <condition pos:start="1133:16" pos:end="1133:24">(<expr pos:start="1133:17" pos:end="1133:23"><name pos:start="1133:17" pos:end="1133:19">ret</name> <operator pos:start="1133:21" pos:end="1133:21">&lt;</operator> <literal type="number" pos:start="1133:23" pos:end="1133:23">0</literal></expr>)</condition><block type="pseudo" pos:start="1135:17" pos:end="1135:27"><block_content pos:start="1135:17" pos:end="1135:27">

                <return pos:start="1135:17" pos:end="1135:27">return <expr pos:start="1135:24" pos:end="1135:26"><name pos:start="1135:24" pos:end="1135:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="1143:5" pos:end="1143:13">return <expr pos:start="1143:12" pos:end="1143:12"><literal type="number" pos:start="1143:12" pos:end="1143:12">0</literal></expr>;</return>

<label pos:start="1145:1" pos:end="1145:5"><name pos:start="1145:1" pos:end="1145:4">fail</name>:</label>

    <expr_stmt pos:start="1147:5" pos:end="1147:29"><expr pos:start="1147:5" pos:end="1147:28"><call pos:start="1147:5" pos:end="1147:28"><name pos:start="1147:5" pos:end="1147:21">ff_MPV_encode_end</name><argument_list pos:start="1147:22" pos:end="1147:28">(<argument pos:start="1147:23" pos:end="1147:27"><expr pos:start="1147:23" pos:end="1147:27"><name pos:start="1147:23" pos:end="1147:27">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="1149:5" pos:end="1149:27">return <expr pos:start="1149:12" pos:end="1149:26"><name pos:start="1149:12" pos:end="1149:26">AVERROR_UNKNOWN</name></expr>;</return>

</block_content>}</block></function>
</unit>
