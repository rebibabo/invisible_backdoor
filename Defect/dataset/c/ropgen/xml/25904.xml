<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25904.c" pos:tabs="8"><function pos:start="1:1" pos:end="10:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">bdrv_pwrite</name><parameter_list pos:start="1:16" pos:end="2:45">(<parameter pos:start="1:17" pos:end="1:36"><decl pos:start="1:17" pos:end="1:36"><type pos:start="1:17" pos:end="1:36"><name pos:start="1:17" pos:end="1:32">BlockDriverState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">bs</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:45">int64_t</name></type> <name pos:start="1:47" pos:end="1:52">offset</name></decl></parameter>,
                <parameter pos:start="2:17" pos:end="2:32"><decl pos:start="2:17" pos:end="2:32"><type pos:start="2:17" pos:end="2:32"><specifier pos:start="2:17" pos:end="2:21">const</specifier> <name pos:start="2:23" pos:end="2:26">void</name> <modifier pos:start="2:28" pos:end="2:28">*</modifier></type><name pos:start="2:29" pos:end="2:32">buf1</name></decl></parameter>, <parameter pos:start="2:35" pos:end="2:44"><decl pos:start="2:35" pos:end="2:44"><type pos:start="2:35" pos:end="2:44"><name pos:start="2:35" pos:end="2:37">int</name></type> <name pos:start="2:39" pos:end="2:44">count1</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="10:1">{<block_content pos:start="4:5" pos:end="9:54">
    <decl_stmt pos:start="4:5" pos:end="4:31"><decl pos:start="4:5" pos:end="4:30"><type pos:start="4:5" pos:end="4:17"><name pos:start="4:5" pos:end="4:15">BlockDriver</name> <modifier pos:start="4:17" pos:end="4:17">*</modifier></type><name pos:start="4:18" pos:end="4:20">drv</name> <init pos:start="4:22" pos:end="4:30">= <expr pos:start="4:24" pos:end="4:30"><name pos:start="4:24" pos:end="4:30"><name pos:start="4:24" pos:end="4:25">bs</name><operator pos:start="4:26" pos:end="4:27">-&gt;</operator><name pos:start="4:28" pos:end="4:30">drv</name></name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="5:5" pos:end="6:26"><if pos:start="5:5" pos:end="6:26">if <condition pos:start="5:8" pos:end="5:13">(<expr pos:start="5:9" pos:end="5:12"><operator pos:start="5:9" pos:end="5:9">!</operator><name pos:start="5:10" pos:end="5:12">drv</name></expr>)</condition><block type="pseudo" pos:start="6:9" pos:end="6:26"><block_content pos:start="6:9" pos:end="6:26">
        <return pos:start="6:9" pos:end="6:26">return <expr pos:start="6:16" pos:end="6:25"><operator pos:start="6:16" pos:end="6:16">-</operator><name pos:start="6:17" pos:end="6:25">ENOMEDIUM</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="7:5" pos:end="8:56"><if pos:start="7:5" pos:end="8:56">if <condition pos:start="7:8" pos:end="7:26">(<expr pos:start="7:9" pos:end="7:25"><operator pos:start="7:9" pos:end="7:9">!</operator><name pos:start="7:10" pos:end="7:25"><name pos:start="7:10" pos:end="7:12">drv</name><operator pos:start="7:13" pos:end="7:14">-&gt;</operator><name pos:start="7:15" pos:end="7:25">bdrv_pwrite</name></name></expr>)</condition><block type="pseudo" pos:start="8:9" pos:end="8:56"><block_content pos:start="8:9" pos:end="8:56">
        <return pos:start="8:9" pos:end="8:56">return <expr pos:start="8:16" pos:end="8:55"><call pos:start="8:16" pos:end="8:55"><name pos:start="8:16" pos:end="8:29">bdrv_pwrite_em</name><argument_list pos:start="8:30" pos:end="8:55">(<argument pos:start="8:31" pos:end="8:32"><expr pos:start="8:31" pos:end="8:32"><name pos:start="8:31" pos:end="8:32">bs</name></expr></argument>, <argument pos:start="8:35" pos:end="8:40"><expr pos:start="8:35" pos:end="8:40"><name pos:start="8:35" pos:end="8:40">offset</name></expr></argument>, <argument pos:start="8:43" pos:end="8:46"><expr pos:start="8:43" pos:end="8:46"><name pos:start="8:43" pos:end="8:46">buf1</name></expr></argument>, <argument pos:start="8:49" pos:end="8:54"><expr pos:start="8:49" pos:end="8:54"><name pos:start="8:49" pos:end="8:54">count1</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <return pos:start="9:5" pos:end="9:54">return <expr pos:start="9:12" pos:end="9:53"><call pos:start="9:12" pos:end="9:53"><name pos:start="9:12" pos:end="9:27"><name pos:start="9:12" pos:end="9:14">drv</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:27">bdrv_pwrite</name></name><argument_list pos:start="9:28" pos:end="9:53">(<argument pos:start="9:29" pos:end="9:30"><expr pos:start="9:29" pos:end="9:30"><name pos:start="9:29" pos:end="9:30">bs</name></expr></argument>, <argument pos:start="9:33" pos:end="9:38"><expr pos:start="9:33" pos:end="9:38"><name pos:start="9:33" pos:end="9:38">offset</name></expr></argument>, <argument pos:start="9:41" pos:end="9:44"><expr pos:start="9:41" pos:end="9:44"><name pos:start="9:41" pos:end="9:44">buf1</name></expr></argument>, <argument pos:start="9:47" pos:end="9:52"><expr pos:start="9:47" pos:end="9:52"><name pos:start="9:47" pos:end="9:52">count1</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function></unit>
