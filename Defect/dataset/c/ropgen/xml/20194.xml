<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20194.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">slirp_input</name><parameter_list pos:start="1:17" pos:end="1:63">(<parameter pos:start="1:18" pos:end="1:29"><decl pos:start="1:18" pos:end="1:29"><type pos:start="1:18" pos:end="1:29"><name pos:start="1:18" pos:end="1:22">Slirp</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:29">slirp</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:44">uint8_t</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">pkt</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:62"><decl pos:start="1:52" pos:end="1:62"><type pos:start="1:52" pos:end="1:62"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:62">pkt_len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:15">mbuf</name></name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">m</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">proto</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:27">(<expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:15">pkt_len</name> <operator pos:start="11:17" pos:end="11:17">&lt;</operator> <name pos:start="11:19" pos:end="11:26">ETH_HLEN</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:9">proto</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:42"><name pos:start="17:13" pos:end="17:17">ntohs</name><argument_list pos:start="17:18" pos:end="17:42">(<argument pos:start="17:19" pos:end="17:41"><expr pos:start="17:19" pos:end="17:41"><operator pos:start="17:19" pos:end="17:19">*</operator><operator pos:start="17:20" pos:end="17:20">(</operator><name pos:start="17:21" pos:end="17:28">uint16_t</name> <operator pos:start="17:30" pos:end="17:30">*</operator><operator pos:start="17:31" pos:end="17:31">)</operator><operator pos:start="17:32" pos:end="17:32">(</operator><name pos:start="17:33" pos:end="17:35">pkt</name> <operator pos:start="17:37" pos:end="17:37">+</operator> <literal type="number" pos:start="17:39" pos:end="17:40">12</literal><operator pos:start="17:41" pos:end="17:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="63:5">switch<condition pos:start="19:11" pos:end="19:17">(<expr pos:start="19:12" pos:end="19:16"><name pos:start="19:12" pos:end="19:16">proto</name></expr>)</condition> <block pos:start="19:19" pos:end="63:5">{<block_content pos:start="21:5" pos:end="61:14">

    <case pos:start="21:5" pos:end="21:19">case <expr pos:start="21:10" pos:end="21:18"><name pos:start="21:10" pos:end="21:18">ETH_P_ARP</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:39"><expr pos:start="23:9" pos:end="23:38"><call pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:17">arp_input</name><argument_list pos:start="23:18" pos:end="23:38">(<argument pos:start="23:19" pos:end="23:23"><expr pos:start="23:19" pos:end="23:23"><name pos:start="23:19" pos:end="23:23">slirp</name></expr></argument>, <argument pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><name pos:start="23:26" pos:end="23:28">pkt</name></expr></argument>, <argument pos:start="23:31" pos:end="23:37"><expr pos:start="23:31" pos:end="23:37"><name pos:start="23:31" pos:end="23:37">pkt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:18">case <expr pos:start="27:10" pos:end="27:17"><name pos:start="27:10" pos:end="27:17">ETH_P_IP</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:9">m</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:17">m_get</name><argument_list pos:start="29:18" pos:end="29:24">(<argument pos:start="29:19" pos:end="29:23"><expr pos:start="29:19" pos:end="29:23"><name pos:start="29:19" pos:end="29:23">slirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:19"><if pos:start="31:9" pos:end="33:19">if <condition pos:start="31:12" pos:end="31:15">(<expr pos:start="31:13" pos:end="31:14"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:14">m</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:19"><block_content pos:start="33:13" pos:end="33:19">

            <return pos:start="33:13" pos:end="33:19">return;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="35:9" pos:end="35:49">/* Note: we add to align the IP header */</comment>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:40">(<expr pos:start="37:13" pos:end="37:39"><call pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:22">M_FREEROOM</name><argument_list pos:start="37:23" pos:end="37:25">(<argument pos:start="37:24" pos:end="37:24"><expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">m</name></expr></argument>)</argument_list></call> <operator pos:start="37:27" pos:end="37:27">&lt;</operator> <name pos:start="37:29" pos:end="37:35">pkt_len</name> <operator pos:start="37:37" pos:end="37:37">+</operator> <literal type="number" pos:start="37:39" pos:end="37:39">2</literal></expr>)</condition> <block pos:start="37:42" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:34">

            <expr_stmt pos:start="39:13" pos:end="39:34"><expr pos:start="39:13" pos:end="39:33"><call pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:17">m_inc</name><argument_list pos:start="39:18" pos:end="39:33">(<argument pos:start="39:19" pos:end="39:19"><expr pos:start="39:19" pos:end="39:19"><name pos:start="39:19" pos:end="39:19">m</name></expr></argument>, <argument pos:start="39:22" pos:end="39:32"><expr pos:start="39:22" pos:end="39:32"><name pos:start="39:22" pos:end="39:28">pkt_len</name> <operator pos:start="39:30" pos:end="39:30">+</operator> <literal type="number" pos:start="39:32" pos:end="39:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:9">m</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:16">m_len</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:26">pkt_len</name> <operator pos:start="43:28" pos:end="43:28">+</operator> <literal type="number" pos:start="43:30" pos:end="43:30">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:44"><expr pos:start="45:9" pos:end="45:43"><call pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:14">memcpy</name><argument_list pos:start="45:15" pos:end="45:43">(<argument pos:start="45:16" pos:end="45:28"><expr pos:start="45:16" pos:end="45:28"><name pos:start="45:16" pos:end="45:24"><name pos:start="45:16" pos:end="45:16">m</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:24">m_data</name></name> <operator pos:start="45:26" pos:end="45:26">+</operator> <literal type="number" pos:start="45:28" pos:end="45:28">2</literal></expr></argument>, <argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">pkt</name></expr></argument>, <argument pos:start="45:36" pos:end="45:42"><expr pos:start="45:36" pos:end="45:42"><name pos:start="45:36" pos:end="45:42">pkt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:9">m</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:17">m_data</name></name> <operator pos:start="49:19" pos:end="49:20">+=</operator> <literal type="number" pos:start="49:22" pos:end="49:24">2</literal> <operator pos:start="49:24" pos:end="49:24">+</operator> <name pos:start="49:26" pos:end="49:33">ETH_HLEN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:33"><expr pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:9">m</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:16">m_len</name></name> <operator pos:start="51:18" pos:end="51:19">-=</operator> <literal type="number" pos:start="51:21" pos:end="51:23">2</literal> <operator pos:start="51:23" pos:end="51:23">+</operator> <name pos:start="51:25" pos:end="51:32">ETH_HLEN</name></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:20"><expr pos:start="55:9" pos:end="55:19"><call pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:16">ip_input</name><argument_list pos:start="55:17" pos:end="55:19">(<argument pos:start="55:18" pos:end="55:18"><expr pos:start="55:18" pos:end="55:18"><name pos:start="55:18" pos:end="55:18">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <default pos:start="59:5" pos:end="59:12">default:</default>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
