<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15777.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:21">DisplaySurface</name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:50">qemu_create_message_surface</name><parameter_list pos:start="1:51" pos:end="3:67">(<parameter pos:start="1:52" pos:end="1:56"><decl pos:start="1:52" pos:end="1:56"><type pos:start="1:52" pos:end="1:56"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:56">w</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:63"><decl pos:start="1:59" pos:end="1:63"><type pos:start="1:59" pos:end="1:63"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:63">h</name></decl></parameter>,

                                                   <parameter pos:start="3:52" pos:end="3:66"><decl pos:start="3:52" pos:end="3:66"><type pos:start="3:52" pos:end="3:66"><specifier pos:start="3:52" pos:end="3:56">const</specifier> <name pos:start="3:58" pos:end="3:61">char</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:66">msg</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:19">

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:62"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">DisplaySurface</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:27">surface</name> <init pos:start="7:29" pos:end="7:62">= <expr pos:start="7:31" pos:end="7:62"><call pos:start="7:31" pos:end="7:62"><name pos:start="7:31" pos:end="7:56">qemu_create_displaysurface</name><argument_list pos:start="7:57" pos:end="7:62">(<argument pos:start="7:58" pos:end="7:58"><expr pos:start="7:58" pos:end="7:58"><name pos:start="7:58" pos:end="7:58">w</name></expr></argument>, <argument pos:start="7:61" pos:end="7:61"><expr pos:start="7:61" pos:end="7:61"><name pos:start="7:61" pos:end="7:61">h</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:18">pixman_color_t</name></type> <name pos:start="9:20" pos:end="9:21">bg</name> <init pos:start="9:23" pos:end="9:55">= <expr pos:start="9:25" pos:end="9:55"><name pos:start="9:25" pos:end="9:55"><name pos:start="9:25" pos:end="9:39">color_table_rgb</name><index pos:start="9:40" pos:end="9:42">[<expr pos:start="9:41" pos:end="9:41"><literal type="number" pos:start="9:41" pos:end="9:41">0</literal></expr>]</index><index pos:start="9:43" pos:end="9:55">[<expr pos:start="9:44" pos:end="9:54"><name pos:start="9:44" pos:end="9:54">COLOR_BLACK</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18">pixman_color_t</name></type> <name pos:start="11:20" pos:end="11:21">fg</name> <init pos:start="11:23" pos:end="11:55">= <expr pos:start="11:25" pos:end="11:55"><name pos:start="11:25" pos:end="11:55"><name pos:start="11:25" pos:end="11:39">color_table_rgb</name><index pos:start="11:40" pos:end="11:42">[<expr pos:start="11:41" pos:end="11:41"><literal type="number" pos:start="11:41" pos:end="11:41">0</literal></expr>]</index><index pos:start="11:43" pos:end="11:55">[<expr pos:start="11:44" pos:end="11:54"><name pos:start="11:44" pos:end="11:54">COLOR_WHITE</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">pixman_image_t</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:25">glyph</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">len</name></decl>, <decl pos:start="15:14" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:14">x</name></decl>, <decl pos:start="15:17" pos:end="15:17"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:17">y</name></decl>, <decl pos:start="15:20" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:20" pos:end="15:20">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:7">len</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:21"><name pos:start="19:11" pos:end="19:16">strlen</name><argument_list pos:start="19:17" pos:end="19:21">(<argument pos:start="19:18" pos:end="19:20"><expr pos:start="19:18" pos:end="19:20"><name pos:start="19:18" pos:end="19:20">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:5">x</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:10">w</name> <operator pos:start="21:12" pos:end="21:12">/</operator> <name pos:start="21:14" pos:end="21:23">FONT_WIDTH</name>  <operator pos:start="21:26" pos:end="21:26">-</operator> <name pos:start="21:28" pos:end="21:30">len</name><operator pos:start="21:31" pos:end="21:31">)</operator> <operator pos:start="21:33" pos:end="21:33">/</operator> <literal type="number" pos:start="21:35" pos:end="21:35">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:5">y</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:10">h</name> <operator pos:start="23:12" pos:end="23:12">/</operator> <name pos:start="23:14" pos:end="23:24">FONT_HEIGHT</name> <operator pos:start="23:26" pos:end="23:26">-</operator> <literal type="number" pos:start="23:28" pos:end="23:28">1</literal><operator pos:start="23:29" pos:end="23:29">)</operator>   <operator pos:start="23:33" pos:end="23:33">/</operator> <literal type="number" pos:start="23:35" pos:end="23:35">2</literal></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="35:5">for <control pos:start="25:9" pos:end="25:29">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:24"><expr pos:start="25:17" pos:end="25:23"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:23">len</name></expr>;</condition> <incr pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:26">i</name><operator pos:start="25:27" pos:end="25:28">++</operator></expr></incr>)</control> <block pos:start="25:31" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:39">

        <expr_stmt pos:start="27:9" pos:end="27:79"><expr pos:start="27:9" pos:end="27:78"><name pos:start="27:9" pos:end="27:13">glyph</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:78"><name pos:start="27:17" pos:end="27:46">qemu_pixman_glyph_from_vgafont</name><argument_list pos:start="27:47" pos:end="27:78">(<argument pos:start="27:48" pos:end="27:58"><expr pos:start="27:48" pos:end="27:58"><name pos:start="27:48" pos:end="27:58">FONT_HEIGHT</name></expr></argument>, <argument pos:start="27:61" pos:end="27:69"><expr pos:start="27:61" pos:end="27:69"><name pos:start="27:61" pos:end="27:69">vgafont16</name></expr></argument>, <argument pos:start="27:72" pos:end="27:77"><expr pos:start="27:72" pos:end="27:77"><name pos:start="27:72" pos:end="27:77"><name pos:start="27:72" pos:end="27:74">msg</name><index pos:start="27:75" pos:end="27:77">[<expr pos:start="27:76" pos:end="27:76"><name pos:start="27:76" pos:end="27:76">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="31:66"><expr pos:start="29:9" pos:end="31:65"><call pos:start="29:9" pos:end="31:65"><name pos:start="29:9" pos:end="29:32">qemu_pixman_glyph_render</name><argument_list pos:start="29:33" pos:end="31:65">(<argument pos:start="29:34" pos:end="29:38"><expr pos:start="29:34" pos:end="29:38"><name pos:start="29:34" pos:end="29:38">glyph</name></expr></argument>, <argument pos:start="29:41" pos:end="29:54"><expr pos:start="29:41" pos:end="29:54"><name pos:start="29:41" pos:end="29:54"><name pos:start="29:41" pos:end="29:47">surface</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:54">image</name></name></expr></argument>, <argument pos:start="29:57" pos:end="29:59"><expr pos:start="29:57" pos:end="29:59"><operator pos:start="29:57" pos:end="29:57">&amp;</operator><name pos:start="29:58" pos:end="29:59">fg</name></expr></argument>, <argument pos:start="29:62" pos:end="29:64"><expr pos:start="29:62" pos:end="29:64"><operator pos:start="29:62" pos:end="29:62">&amp;</operator><name pos:start="29:63" pos:end="29:64">bg</name></expr></argument>,

                                 <argument pos:start="31:34" pos:end="31:36"><expr pos:start="31:34" pos:end="31:36"><name pos:start="31:34" pos:end="31:34">x</name><operator pos:start="31:35" pos:end="31:35">+</operator><name pos:start="31:36" pos:end="31:36">i</name></expr></argument>, <argument pos:start="31:39" pos:end="31:39"><expr pos:start="31:39" pos:end="31:39"><name pos:start="31:39" pos:end="31:39">y</name></expr></argument>, <argument pos:start="31:42" pos:end="31:51"><expr pos:start="31:42" pos:end="31:51"><name pos:start="31:42" pos:end="31:51">FONT_WIDTH</name></expr></argument>, <argument pos:start="31:54" pos:end="31:64"><expr pos:start="31:54" pos:end="31:64"><name pos:start="31:54" pos:end="31:64">FONT_HEIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><call pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:31">qemu_pixman_image_unref</name><argument_list pos:start="33:32" pos:end="33:38">(<argument pos:start="33:33" pos:end="33:37"><expr pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:37">glyph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="37:5" pos:end="37:19">return <expr pos:start="37:12" pos:end="37:18"><name pos:start="37:12" pos:end="37:18">surface</name></expr>;</return>

</block_content>}</block></function>
</unit>
