<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21808.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name> <name pos:start="1:16" pos:end="1:27">coroutine_fn</name></type> <name pos:start="1:29" pos:end="1:52">bdrv_co_get_block_status</name><parameter_list pos:start="1:53" pos:end="7:77">(<parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><name pos:start="1:54" pos:end="1:69">BlockDriverState</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:73">bs</name></decl></parameter>,

                                                     <parameter pos:start="3:54" pos:end="3:71"><decl pos:start="3:54" pos:end="3:71"><type pos:start="3:54" pos:end="3:71"><name pos:start="3:54" pos:end="3:60">int64_t</name></type> <name pos:start="3:62" pos:end="3:71">sector_num</name></decl></parameter>,

                                                     <parameter pos:start="5:54" pos:end="5:67"><decl pos:start="5:54" pos:end="5:67"><type pos:start="5:54" pos:end="5:67"><name pos:start="5:54" pos:end="5:56">int</name></type> <name pos:start="5:58" pos:end="5:67">nb_sectors</name></decl></parameter>, <parameter pos:start="5:70" pos:end="5:78"><decl pos:start="5:70" pos:end="5:78"><type pos:start="5:70" pos:end="5:78"><name pos:start="5:70" pos:end="5:72">int</name> <modifier pos:start="5:74" pos:end="5:74">*</modifier></type><name pos:start="5:75" pos:end="5:78">pnum</name></decl></parameter>,

                                                     <parameter pos:start="7:54" pos:end="7:76"><decl pos:start="7:54" pos:end="7:76"><type pos:start="7:54" pos:end="7:76"><name pos:start="7:54" pos:end="7:69">BlockDriverState</name> <modifier pos:start="7:71" pos:end="7:71">*</modifier><modifier pos:start="7:72" pos:end="7:72">*</modifier></type><name pos:start="7:73" pos:end="7:76">file</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="201:1">{<block_content pos:start="11:5" pos:end="199:15">

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:25">total_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:13">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:15">ret</name></decl>, <decl pos:start="15:18" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:18" pos:end="15:21">ret2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:40"><expr pos:start="19:5" pos:end="19:39"><name pos:start="19:5" pos:end="19:17">total_sectors</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:39"><name pos:start="19:21" pos:end="19:35">bdrv_nb_sectors</name><argument_list pos:start="19:36" pos:end="19:39">(<argument pos:start="19:37" pos:end="19:38"><expr pos:start="19:37" pos:end="19:38"><name pos:start="19:37" pos:end="19:38">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:21">total_sectors</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr>)</condition> <block pos:start="21:28" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:29">

        <return pos:start="23:9" pos:end="23:29">return <expr pos:start="23:16" pos:end="23:28"><name pos:start="23:16" pos:end="23:28">total_sectors</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:36">(<expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:18">sector_num</name> <operator pos:start="29:20" pos:end="29:21">&gt;=</operator> <name pos:start="29:23" pos:end="29:35">total_sectors</name></expr>)</condition> <block pos:start="29:38" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:30">

        <expr_stmt pos:start="31:9" pos:end="31:18"><expr pos:start="31:9" pos:end="31:17"><operator pos:start="31:9" pos:end="31:9">*</operator><name pos:start="31:10" pos:end="31:13">pnum</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:30">return <expr pos:start="33:16" pos:end="33:29"><name pos:start="33:16" pos:end="33:29">BDRV_BLOCK_EOF</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:5">n</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <name pos:start="39:9" pos:end="39:21">total_sectors</name> <operator pos:start="39:23" pos:end="39:23">-</operator> <name pos:start="39:25" pos:end="39:34">sector_num</name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:23">(<expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:9">n</name> <operator pos:start="41:11" pos:end="41:11">&lt;</operator> <name pos:start="41:13" pos:end="41:22">nb_sectors</name></expr>)</condition> <block pos:start="41:25" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:23">

        <expr_stmt pos:start="43:9" pos:end="43:23"><expr pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:18">nb_sectors</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:22">n</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="69:5"><if pos:start="49:5" pos:end="69:5">if <condition pos:start="49:8" pos:end="49:43">(<expr pos:start="49:9" pos:end="49:42"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:42"><name pos:start="49:10" pos:end="49:11">bs</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:16">drv</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:42">bdrv_co_get_block_status</name></name></expr>)</condition> <block pos:start="49:45" pos:end="69:5">{<block_content pos:start="51:9" pos:end="67:19">

        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><operator pos:start="51:9" pos:end="51:9">*</operator><name pos:start="51:10" pos:end="51:13">pnum</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:26">nb_sectors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:53"><expr pos:start="53:9" pos:end="53:52"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:29">BDRV_BLOCK_DATA</name> <operator pos:start="53:31" pos:end="53:31">|</operator> <name pos:start="53:33" pos:end="53:52">BDRV_BLOCK_ALLOCATED</name></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:53">(<expr pos:start="55:13" pos:end="55:52"><name pos:start="55:13" pos:end="55:22">sector_num</name> <operator pos:start="55:24" pos:end="55:24">+</operator> <name pos:start="55:26" pos:end="55:35">nb_sectors</name> <operator pos:start="55:37" pos:end="55:38">==</operator> <name pos:start="55:40" pos:end="55:52">total_sectors</name></expr>)</condition> <block pos:start="55:55" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:34">

            <expr_stmt pos:start="57:13" pos:end="57:34"><expr pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:18">|=</operator> <name pos:start="57:20" pos:end="57:33">BDRV_BLOCK_EOF</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:35">(<expr pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:14">bs</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:19">drv</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:34">protocol_name</name></name></expr>)</condition> <block pos:start="61:37" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:77">

            <expr_stmt pos:start="63:13" pos:end="63:77"><expr pos:start="63:13" pos:end="63:76"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:18">|=</operator> <name pos:start="63:20" pos:end="63:42">BDRV_BLOCK_OFFSET_VALID</name> <operator pos:start="63:44" pos:end="63:44">|</operator> <operator pos:start="63:46" pos:end="63:46">(</operator><name pos:start="63:47" pos:end="63:56">sector_num</name> <operator pos:start="63:58" pos:end="63:58">*</operator> <name pos:start="63:60" pos:end="63:75">BDRV_SECTOR_SIZE</name><operator pos:start="63:76" pos:end="63:76">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="67:9" pos:end="67:19">return <expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:17"><expr pos:start="73:5" pos:end="73:16"><operator pos:start="73:5" pos:end="73:5">*</operator><name pos:start="73:6" pos:end="73:9">file</name> <operator pos:start="73:11" pos:end="73:11">=</operator> <name pos:start="73:13" pos:end="73:16">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:27"><expr pos:start="75:5" pos:end="75:26"><call pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:22">bdrv_inc_in_flight</name><argument_list pos:start="75:23" pos:end="75:26">(<argument pos:start="75:24" pos:end="75:25"><expr pos:start="75:24" pos:end="75:25"><name pos:start="75:24" pos:end="75:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="79:50"><expr pos:start="77:5" pos:end="79:49"><name pos:start="77:5" pos:end="77:7">ret</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="79:49"><name pos:start="77:11" pos:end="77:43"><name pos:start="77:11" pos:end="77:12">bs</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:17">drv</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:43">bdrv_co_get_block_status</name></name><argument_list pos:start="77:44" pos:end="79:49">(<argument pos:start="77:45" pos:end="77:46"><expr pos:start="77:45" pos:end="77:46"><name pos:start="77:45" pos:end="77:46">bs</name></expr></argument>, <argument pos:start="77:49" pos:end="77:58"><expr pos:start="77:49" pos:end="77:58"><name pos:start="77:49" pos:end="77:58">sector_num</name></expr></argument>, <argument pos:start="77:61" pos:end="77:70"><expr pos:start="77:61" pos:end="77:70"><name pos:start="77:61" pos:end="77:70">nb_sectors</name></expr></argument>, <argument pos:start="77:73" pos:end="77:76"><expr pos:start="77:73" pos:end="77:76"><name pos:start="77:73" pos:end="77:76">pnum</name></expr></argument>,

                                            <argument pos:start="79:45" pos:end="79:48"><expr pos:start="79:45" pos:end="79:48"><name pos:start="79:45" pos:end="79:48">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="87:5"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:16">(<expr pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">&lt;</operator> <literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr>)</condition> <block pos:start="81:18" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:17">

        <expr_stmt pos:start="83:9" pos:end="83:18"><expr pos:start="83:9" pos:end="83:17"><operator pos:start="83:9" pos:end="83:9">*</operator><name pos:start="83:10" pos:end="83:13">pnum</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <literal type="number" pos:start="83:17" pos:end="83:17">0</literal></expr>;</expr_stmt>

        <goto pos:start="85:9" pos:end="85:17">goto <name pos:start="85:14" pos:end="85:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="101:5"><if pos:start="91:5" pos:end="101:5">if <condition pos:start="91:8" pos:end="91:29">(<expr pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">&amp;</operator> <name pos:start="91:15" pos:end="91:28">BDRV_BLOCK_RAW</name></expr>)</condition> <block pos:start="91:31" pos:end="101:5">{<block_content pos:start="93:9" pos:end="99:17">

        <expr_stmt pos:start="93:9" pos:end="93:46"><expr pos:start="93:9" pos:end="93:45"><call pos:start="93:9" pos:end="93:45"><name pos:start="93:9" pos:end="93:14">assert</name><argument_list pos:start="93:15" pos:end="93:45">(<argument pos:start="93:16" pos:end="93:44"><expr pos:start="93:16" pos:end="93:44"><name pos:start="93:16" pos:end="93:18">ret</name> <operator pos:start="93:20" pos:end="93:20">&amp;</operator> <name pos:start="93:22" pos:end="93:44">BDRV_BLOCK_OFFSET_VALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="97:58"><expr pos:start="95:9" pos:end="97:57"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="97:57"><name pos:start="95:15" pos:end="95:38">bdrv_co_get_block_status</name><argument_list pos:start="95:39" pos:end="97:57">(<argument pos:start="95:40" pos:end="95:44"><expr pos:start="95:40" pos:end="95:44"><operator pos:start="95:40" pos:end="95:40">*</operator><name pos:start="95:41" pos:end="95:44">file</name></expr></argument>, <argument pos:start="95:47" pos:end="95:69"><expr pos:start="95:47" pos:end="95:69"><name pos:start="95:47" pos:end="95:49">ret</name> <operator pos:start="95:51" pos:end="95:52">&gt;&gt;</operator> <name pos:start="95:54" pos:end="95:69">BDRV_SECTOR_BITS</name></expr></argument>,

                                       <argument pos:start="97:40" pos:end="97:44"><expr pos:start="97:40" pos:end="97:44"><operator pos:start="97:40" pos:end="97:40">*</operator><name pos:start="97:41" pos:end="97:44">pnum</name></expr></argument>, <argument pos:start="97:47" pos:end="97:50"><expr pos:start="97:47" pos:end="97:50"><name pos:start="97:47" pos:end="97:50">pnum</name></expr></argument>, <argument pos:start="97:53" pos:end="97:56"><expr pos:start="97:53" pos:end="97:56"><name pos:start="97:53" pos:end="97:56">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="99:9" pos:end="99:17">goto <name pos:start="99:14" pos:end="99:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="129:5"><if pos:start="105:5" pos:end="109:5">if <condition pos:start="105:8" pos:end="105:50">(<expr pos:start="105:9" pos:end="105:49"><name pos:start="105:9" pos:end="105:11">ret</name> <operator pos:start="105:13" pos:end="105:13">&amp;</operator> <operator pos:start="105:15" pos:end="105:15">(</operator><name pos:start="105:16" pos:end="105:30">BDRV_BLOCK_DATA</name> <operator pos:start="105:32" pos:end="105:32">|</operator> <name pos:start="105:34" pos:end="105:48">BDRV_BLOCK_ZERO</name><operator pos:start="105:49" pos:end="105:49">)</operator></expr>)</condition> <block pos:start="105:52" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:36">

        <expr_stmt pos:start="107:9" pos:end="107:36"><expr pos:start="107:9" pos:end="107:35"><name pos:start="107:9" pos:end="107:11">ret</name> <operator pos:start="107:13" pos:end="107:14">|=</operator> <name pos:start="107:16" pos:end="107:35">BDRV_BLOCK_ALLOCATED</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="109:7" pos:end="129:5">else <block pos:start="109:12" pos:end="129:5">{<block_content pos:start="111:9" pos:end="127:9">

        <if_stmt pos:start="111:9" pos:end="127:9"><if pos:start="111:9" pos:end="115:9">if <condition pos:start="111:12" pos:end="111:49">(<expr pos:start="111:13" pos:end="111:48"><call pos:start="111:13" pos:end="111:48"><name pos:start="111:13" pos:end="111:44">bdrv_unallocated_blocks_are_zero</name><argument_list pos:start="111:45" pos:end="111:48">(<argument pos:start="111:46" pos:end="111:47"><expr pos:start="111:46" pos:end="111:47"><name pos:start="111:46" pos:end="111:47">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:51" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:35">

            <expr_stmt pos:start="113:13" pos:end="113:35"><expr pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:15">ret</name> <operator pos:start="113:17" pos:end="113:18">|=</operator> <name pos:start="113:20" pos:end="113:34">BDRV_BLOCK_ZERO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="115:11" pos:end="127:9">else if <condition pos:start="115:19" pos:end="115:31">(<expr pos:start="115:20" pos:end="115:30"><name pos:start="115:20" pos:end="115:30"><name pos:start="115:20" pos:end="115:21">bs</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:30">backing</name></name></expr>)</condition> <block pos:start="115:33" pos:end="127:9">{<block_content pos:start="117:13" pos:end="125:13">

            <decl_stmt pos:start="117:13" pos:end="117:52"><decl pos:start="117:13" pos:end="117:51"><type pos:start="117:13" pos:end="117:30"><name pos:start="117:13" pos:end="117:28">BlockDriverState</name> <modifier pos:start="117:30" pos:end="117:30">*</modifier></type><name pos:start="117:31" pos:end="117:33">bs2</name> <init pos:start="117:35" pos:end="117:51">= <expr pos:start="117:37" pos:end="117:51"><name pos:start="117:37" pos:end="117:51"><name pos:start="117:37" pos:end="117:38">bs</name><operator pos:start="117:39" pos:end="117:40">-&gt;</operator><name pos:start="117:41" pos:end="117:47">backing</name><operator pos:start="117:48" pos:end="117:49">-&gt;</operator><name pos:start="117:50" pos:end="117:51">bs</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="119:13" pos:end="119:55"><decl pos:start="119:13" pos:end="119:54"><type pos:start="119:13" pos:end="119:19"><name pos:start="119:13" pos:end="119:19">int64_t</name></type> <name pos:start="119:21" pos:end="119:31">nb_sectors2</name> <init pos:start="119:33" pos:end="119:54">= <expr pos:start="119:35" pos:end="119:54"><call pos:start="119:35" pos:end="119:54"><name pos:start="119:35" pos:end="119:49">bdrv_nb_sectors</name><argument_list pos:start="119:50" pos:end="119:54">(<argument pos:start="119:51" pos:end="119:53"><expr pos:start="119:51" pos:end="119:53"><name pos:start="119:51" pos:end="119:53">bs2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="121:13" pos:end="125:13"><if pos:start="121:13" pos:end="125:13">if <condition pos:start="121:16" pos:end="121:62">(<expr pos:start="121:17" pos:end="121:61"><name pos:start="121:17" pos:end="121:27">nb_sectors2</name> <operator pos:start="121:29" pos:end="121:30">&gt;=</operator> <literal type="number" pos:start="121:32" pos:end="121:32">0</literal> <operator pos:start="121:34" pos:end="121:35">&amp;&amp;</operator> <name pos:start="121:37" pos:end="121:46">sector_num</name> <operator pos:start="121:48" pos:end="121:49">&gt;=</operator> <name pos:start="121:51" pos:end="121:61">nb_sectors2</name></expr>)</condition> <block pos:start="121:64" pos:end="125:13">{<block_content pos:start="123:17" pos:end="123:39">

                <expr_stmt pos:start="123:17" pos:end="123:39"><expr pos:start="123:17" pos:end="123:38"><name pos:start="123:17" pos:end="123:19">ret</name> <operator pos:start="123:21" pos:end="123:22">|=</operator> <name pos:start="123:24" pos:end="123:38">BDRV_BLOCK_ZERO</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="133:5" pos:end="185:5"><if pos:start="133:5" pos:end="185:5">if <condition pos:start="133:8" pos:end="137:40">(<expr pos:start="133:9" pos:end="137:39"><operator pos:start="133:9" pos:end="133:9">*</operator><name pos:start="133:10" pos:end="133:13">file</name> <operator pos:start="133:15" pos:end="133:16">&amp;&amp;</operator> <operator pos:start="133:18" pos:end="133:18">*</operator><name pos:start="133:19" pos:end="133:22">file</name> <operator pos:start="133:24" pos:end="133:25">!=</operator> <name pos:start="133:27" pos:end="133:28">bs</name> <operator pos:start="133:30" pos:end="133:31">&amp;&amp;</operator>

        <operator pos:start="135:9" pos:end="135:9">(</operator><name pos:start="135:10" pos:end="135:12">ret</name> <operator pos:start="135:14" pos:end="135:14">&amp;</operator> <name pos:start="135:16" pos:end="135:30">BDRV_BLOCK_DATA</name><operator pos:start="135:31" pos:end="135:31">)</operator> <operator pos:start="135:33" pos:end="135:34">&amp;&amp;</operator> <operator pos:start="135:36" pos:end="135:36">!</operator><operator pos:start="135:37" pos:end="135:37">(</operator><name pos:start="135:38" pos:end="135:40">ret</name> <operator pos:start="135:42" pos:end="135:42">&amp;</operator> <name pos:start="135:44" pos:end="135:58">BDRV_BLOCK_ZERO</name><operator pos:start="135:59" pos:end="135:59">)</operator> <operator pos:start="135:61" pos:end="135:62">&amp;&amp;</operator>

        <operator pos:start="137:9" pos:end="137:9">(</operator><name pos:start="137:10" pos:end="137:12">ret</name> <operator pos:start="137:14" pos:end="137:14">&amp;</operator> <name pos:start="137:16" pos:end="137:38">BDRV_BLOCK_OFFSET_VALID</name><operator pos:start="137:39" pos:end="137:39">)</operator></expr>)</condition> <block pos:start="137:42" pos:end="185:5">{<block_content pos:start="139:9" pos:end="183:9">

        <decl_stmt pos:start="139:9" pos:end="139:32"><decl pos:start="139:9" pos:end="139:31"><type pos:start="139:9" pos:end="139:26"><name pos:start="139:9" pos:end="139:24">BlockDriverState</name> <modifier pos:start="139:26" pos:end="139:26">*</modifier></type><name pos:start="139:27" pos:end="139:31">file2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="141:9" pos:end="141:22"><decl pos:start="141:9" pos:end="141:21"><type pos:start="141:9" pos:end="141:11"><name pos:start="141:9" pos:end="141:11">int</name></type> <name pos:start="141:13" pos:end="141:21">file_pnum</name></decl>;</decl_stmt>



        <expr_stmt pos:start="145:9" pos:end="147:67"><expr pos:start="145:9" pos:end="147:66"><name pos:start="145:9" pos:end="145:12">ret2</name> <operator pos:start="145:14" pos:end="145:14">=</operator> <call pos:start="145:16" pos:end="147:66"><name pos:start="145:16" pos:end="145:39">bdrv_co_get_block_status</name><argument_list pos:start="145:40" pos:end="147:66">(<argument pos:start="145:41" pos:end="145:45"><expr pos:start="145:41" pos:end="145:45"><operator pos:start="145:41" pos:end="145:41">*</operator><name pos:start="145:42" pos:end="145:45">file</name></expr></argument>, <argument pos:start="145:48" pos:end="145:70"><expr pos:start="145:48" pos:end="145:70"><name pos:start="145:48" pos:end="145:50">ret</name> <operator pos:start="145:52" pos:end="145:53">&gt;&gt;</operator> <name pos:start="145:55" pos:end="145:70">BDRV_SECTOR_BITS</name></expr></argument>,

                                        <argument pos:start="147:41" pos:end="147:45"><expr pos:start="147:41" pos:end="147:45"><operator pos:start="147:41" pos:end="147:41">*</operator><name pos:start="147:42" pos:end="147:45">pnum</name></expr></argument>, <argument pos:start="147:48" pos:end="147:57"><expr pos:start="147:48" pos:end="147:57"><operator pos:start="147:48" pos:end="147:48">&amp;</operator><name pos:start="147:49" pos:end="147:57">file_pnum</name></expr></argument>, <argument pos:start="147:60" pos:end="147:65"><expr pos:start="147:60" pos:end="147:65"><operator pos:start="147:60" pos:end="147:60">&amp;</operator><name pos:start="147:61" pos:end="147:65">file2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="183:9"><if pos:start="149:9" pos:end="183:9">if <condition pos:start="149:12" pos:end="149:22">(<expr pos:start="149:13" pos:end="149:21"><name pos:start="149:13" pos:end="149:16">ret2</name> <operator pos:start="149:18" pos:end="149:19">&gt;=</operator> <literal type="number" pos:start="149:21" pos:end="149:21">0</literal></expr>)</condition> <block pos:start="149:24" pos:end="183:9">{<block_content pos:start="157:13" pos:end="181:13">

            <comment type="block" pos:start="151:13" pos:end="155:15">/* Ignore errors.  This is just providing extra information, it

             * is useful but not necessary.

             */</comment>

            <if_stmt pos:start="157:13" pos:end="181:13"><if pos:start="157:13" pos:end="173:13">if <condition pos:start="157:16" pos:end="159:55">(<expr pos:start="157:17" pos:end="159:54"><name pos:start="157:17" pos:end="157:20">ret2</name> <operator pos:start="157:22" pos:end="157:22">&amp;</operator> <name pos:start="157:24" pos:end="157:37">BDRV_BLOCK_EOF</name> <operator pos:start="157:39" pos:end="157:40">&amp;&amp;</operator>

                <operator pos:start="159:17" pos:end="159:17">(</operator><operator pos:start="159:18" pos:end="159:18">!</operator><name pos:start="159:19" pos:end="159:27">file_pnum</name> <operator pos:start="159:29" pos:end="159:30">||</operator> <name pos:start="159:32" pos:end="159:35">ret2</name> <operator pos:start="159:37" pos:end="159:37">&amp;</operator> <name pos:start="159:39" pos:end="159:53">BDRV_BLOCK_ZERO</name><operator pos:start="159:54" pos:end="159:54">)</operator></expr>)</condition> <block pos:start="159:57" pos:end="173:13">{<block_content pos:start="171:17" pos:end="171:39">

                <comment type="block" pos:start="161:17" pos:end="169:19">/*

                 * It is valid for the format block driver to read

                 * beyond the end of the underlying file's current

                 * size; such areas read as zero.

                 */</comment>

                <expr_stmt pos:start="171:17" pos:end="171:39"><expr pos:start="171:17" pos:end="171:38"><name pos:start="171:17" pos:end="171:19">ret</name> <operator pos:start="171:21" pos:end="171:22">|=</operator> <name pos:start="171:24" pos:end="171:38">BDRV_BLOCK_ZERO</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="173:15" pos:end="181:13">else <block pos:start="173:20" pos:end="181:13">{<block_content pos:start="177:17" pos:end="179:48">

                <comment type="block" pos:start="175:17" pos:end="175:80">/* Limit request to the range reported by the protocol driver */</comment>

                <expr_stmt pos:start="177:17" pos:end="177:34"><expr pos:start="177:17" pos:end="177:33"><operator pos:start="177:17" pos:end="177:17">*</operator><name pos:start="177:18" pos:end="177:21">pnum</name> <operator pos:start="177:23" pos:end="177:23">=</operator> <name pos:start="177:25" pos:end="177:33">file_pnum</name></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:48"><expr pos:start="179:17" pos:end="179:47"><name pos:start="179:17" pos:end="179:19">ret</name> <operator pos:start="179:21" pos:end="179:22">|=</operator> <operator pos:start="179:24" pos:end="179:24">(</operator><name pos:start="179:25" pos:end="179:28">ret2</name> <operator pos:start="179:30" pos:end="179:30">&amp;</operator> <name pos:start="179:32" pos:end="179:46">BDRV_BLOCK_ZERO</name><operator pos:start="179:47" pos:end="179:47">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="189:1" pos:end="189:4"><name pos:start="189:1" pos:end="189:3">out</name>:</label>

    <expr_stmt pos:start="191:5" pos:end="191:27"><expr pos:start="191:5" pos:end="191:26"><call pos:start="191:5" pos:end="191:26"><name pos:start="191:5" pos:end="191:22">bdrv_dec_in_flight</name><argument_list pos:start="191:23" pos:end="191:26">(<argument pos:start="191:24" pos:end="191:25"><expr pos:start="191:24" pos:end="191:25"><name pos:start="191:24" pos:end="191:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="193:5" pos:end="197:5"><if pos:start="193:5" pos:end="197:5">if <condition pos:start="193:8" pos:end="193:56">(<expr pos:start="193:9" pos:end="193:55"><name pos:start="193:9" pos:end="193:11">ret</name> <operator pos:start="193:13" pos:end="193:14">&gt;=</operator> <literal type="number" pos:start="193:16" pos:end="193:16">0</literal> <operator pos:start="193:18" pos:end="193:19">&amp;&amp;</operator> <name pos:start="193:21" pos:end="193:30">sector_num</name> <operator pos:start="193:32" pos:end="193:32">+</operator> <operator pos:start="193:34" pos:end="193:34">*</operator><name pos:start="193:35" pos:end="193:38">pnum</name> <operator pos:start="193:40" pos:end="193:41">==</operator> <name pos:start="193:43" pos:end="193:55">total_sectors</name></expr>)</condition> <block pos:start="193:58" pos:end="197:5">{<block_content pos:start="195:9" pos:end="195:30">

        <expr_stmt pos:start="195:9" pos:end="195:30"><expr pos:start="195:9" pos:end="195:29"><name pos:start="195:9" pos:end="195:11">ret</name> <operator pos:start="195:13" pos:end="195:14">|=</operator> <name pos:start="195:16" pos:end="195:29">BDRV_BLOCK_EOF</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="199:5" pos:end="199:15">return <expr pos:start="199:12" pos:end="199:14"><name pos:start="199:12" pos:end="199:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
