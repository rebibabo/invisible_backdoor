<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23438.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">hls_slice_data_wpp</name><parameter_list pos:start="1:30" pos:end="1:77">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:41">HEVCContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">nal</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:76"><decl pos:start="1:67" pos:end="1:76"><type pos:start="1:67" pos:end="1:76"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:76">length</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="49:15">{<block_content pos:start="3:5" pos:end="49:15">
    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:22"><name pos:start="3:5" pos:end="3:20">HEVCLocalContext</name> <modifier pos:start="3:22" pos:end="3:22">*</modifier></type><name pos:start="3:23" pos:end="3:24">lc</name> <init pos:start="3:26" pos:end="3:36">= <expr pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:28">s</name><operator pos:start="3:29" pos:end="3:30">-&gt;</operator><name pos:start="3:31" pos:end="3:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:79"><decl pos:start="4:5" pos:end="4:78"><type pos:start="4:5" pos:end="4:9"><name pos:start="4:5" pos:end="4:7">int</name> <modifier pos:start="4:9" pos:end="4:9">*</modifier></type><name pos:start="4:10" pos:end="4:12">ret</name> <init pos:start="4:14" pos:end="4:78">= <expr pos:start="4:16" pos:end="4:78"><call pos:start="4:16" pos:end="4:78"><name pos:start="4:16" pos:end="4:30">av_malloc_array</name><argument_list pos:start="4:31" pos:end="4:78">(<argument pos:start="4:32" pos:end="4:64"><expr pos:start="4:32" pos:end="4:64"><name pos:start="4:32" pos:end="4:60"><name pos:start="4:32" pos:end="4:32">s</name><operator pos:start="4:33" pos:end="4:34">-&gt;</operator><name pos:start="4:35" pos:end="4:36">sh</name><operator pos:start="4:37" pos:end="4:37">.</operator><name pos:start="4:38" pos:end="4:60">num_entry_point_offsets</name></name> <operator pos:start="4:62" pos:end="4:62">+</operator> <literal type="number" pos:start="4:64" pos:end="4:64">1</literal></expr></argument>, <argument pos:start="4:67" pos:end="4:77"><expr pos:start="4:67" pos:end="4:77"><sizeof pos:start="4:67" pos:end="4:77">sizeof<argument_list pos:start="4:73" pos:end="4:77">(<argument pos:start="4:74" pos:end="4:76"><expr pos:start="4:74" pos:end="4:76"><name pos:start="4:74" pos:end="4:76">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:79"><decl pos:start="5:5" pos:end="5:78"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:7">int</name> <modifier pos:start="5:9" pos:end="5:9">*</modifier></type><name pos:start="5:10" pos:end="5:12">arg</name> <init pos:start="5:14" pos:end="5:78">= <expr pos:start="5:16" pos:end="5:78"><call pos:start="5:16" pos:end="5:78"><name pos:start="5:16" pos:end="5:30">av_malloc_array</name><argument_list pos:start="5:31" pos:end="5:78">(<argument pos:start="5:32" pos:end="5:64"><expr pos:start="5:32" pos:end="5:64"><name pos:start="5:32" pos:end="5:60"><name pos:start="5:32" pos:end="5:32">s</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:36">sh</name><operator pos:start="5:37" pos:end="5:37">.</operator><name pos:start="5:38" pos:end="5:60">num_entry_point_offsets</name></name> <operator pos:start="5:62" pos:end="5:62">+</operator> <literal type="number" pos:start="5:64" pos:end="5:64">1</literal></expr></argument>, <argument pos:start="5:67" pos:end="5:77"><expr pos:start="5:67" pos:end="5:77"><sizeof pos:start="5:67" pos:end="5:77">sizeof<argument_list pos:start="5:73" pos:end="5:77">(<argument pos:start="5:74" pos:end="5:76"><expr pos:start="5:74" pos:end="5:76"><name pos:start="5:74" pos:end="5:76">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:15"><decl pos:start="6:5" pos:end="6:14"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:14">offset</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">startheader</name></decl>, <decl pos:start="7:22" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:25">cmpt</name> <init pos:start="7:27" pos:end="7:29">= <expr pos:start="7:29" pos:end="7:29"><literal type="number" pos:start="7:29" pos:end="7:29">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:22"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">i</name></decl>, <decl pos:start="8:12" pos:end="8:12"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:12" pos:end="8:12">j</name></decl>, <decl pos:start="8:15" pos:end="8:21"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:15" pos:end="8:17">res</name> <init pos:start="8:19" pos:end="8:21">= <expr pos:start="8:21" pos:end="8:21"><literal type="number" pos:start="8:21" pos:end="8:21">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="9:5" pos:end="49:15"><if pos:start="9:5" pos:end="49:15">if <condition pos:start="9:8" pos:end="9:21">(<expr pos:start="9:9" pos:end="9:20"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:20"><name pos:start="9:10" pos:end="9:10">s</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:17">sList</name><index pos:start="9:18" pos:end="9:20">[<expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="9:23" pos:end="49:15">{<block_content pos:start="10:9" pos:end="49:15">
        <expr_stmt pos:start="10:9" pos:end="10:70"><expr pos:start="10:9" pos:end="10:69"><call pos:start="10:9" pos:end="10:69"><name pos:start="10:9" pos:end="10:24">ff_alloc_entries</name><argument_list pos:start="10:25" pos:end="10:69">(<argument pos:start="10:26" pos:end="10:33"><expr pos:start="10:26" pos:end="10:33"><name pos:start="10:26" pos:end="10:33"><name pos:start="10:26" pos:end="10:26">s</name><operator pos:start="10:27" pos:end="10:28">-&gt;</operator><name pos:start="10:29" pos:end="10:33">avctx</name></name></expr></argument>, <argument pos:start="10:36" pos:end="10:68"><expr pos:start="10:36" pos:end="10:68"><name pos:start="10:36" pos:end="10:64"><name pos:start="10:36" pos:end="10:36">s</name><operator pos:start="10:37" pos:end="10:38">-&gt;</operator><name pos:start="10:39" pos:end="10:40">sh</name><operator pos:start="10:41" pos:end="10:41">.</operator><name pos:start="10:42" pos:end="10:64">num_entry_point_offsets</name></name> <operator pos:start="10:66" pos:end="10:66">+</operator> <literal type="number" pos:start="10:68" pos:end="10:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="11:9" pos:end="49:15">for <control pos:start="11:13" pos:end="11:47">(<init pos:start="11:14" pos:end="11:19"><expr pos:start="11:14" pos:end="11:18"><name pos:start="11:14" pos:end="11:14">i</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <literal type="number" pos:start="11:18" pos:end="11:18">1</literal></expr>;</init> <condition pos:start="11:21" pos:end="11:42"><expr pos:start="11:21" pos:end="11:41"><name pos:start="11:21" pos:end="11:21">i</name> <operator pos:start="11:23" pos:end="11:23">&lt;</operator> <name pos:start="11:25" pos:end="11:41"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:41">threads_number</name></name></expr>;</condition> <incr pos:start="11:44" pos:end="11:46"><expr pos:start="11:44" pos:end="11:46"><name pos:start="11:44" pos:end="11:44">i</name><operator pos:start="11:45" pos:end="11:46">++</operator></expr></incr>)</control> <block pos:start="11:49" pos:end="49:15">{<block_content pos:start="12:13" pos:end="49:15">
            <expr_stmt pos:start="12:13" pos:end="12:57"><expr pos:start="12:13" pos:end="12:56"><name pos:start="12:13" pos:end="12:23"><name pos:start="12:13" pos:end="12:13">s</name><operator pos:start="12:14" pos:end="12:15">-&gt;</operator><name pos:start="12:16" pos:end="12:20">sList</name><index pos:start="12:21" pos:end="12:23">[<expr pos:start="12:22" pos:end="12:22"><name pos:start="12:22" pos:end="12:22">i</name></expr>]</index></name> <operator pos:start="12:25" pos:end="12:25">=</operator> <call pos:start="12:27" pos:end="12:56"><name pos:start="12:27" pos:end="12:35">av_malloc</name><argument_list pos:start="12:36" pos:end="12:56">(<argument pos:start="12:37" pos:end="12:55"><expr pos:start="12:37" pos:end="12:55"><sizeof pos:start="12:37" pos:end="12:55">sizeof<argument_list pos:start="12:43" pos:end="12:55">(<argument pos:start="12:44" pos:end="12:54"><expr pos:start="12:44" pos:end="12:54"><name pos:start="12:44" pos:end="12:54">HEVCContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:56"><expr pos:start="13:13" pos:end="13:55"><call pos:start="13:13" pos:end="13:55"><name pos:start="13:13" pos:end="13:18">memcpy</name><argument_list pos:start="13:19" pos:end="13:55">(<argument pos:start="13:20" pos:end="13:30"><expr pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:27">sList</name><index pos:start="13:28" pos:end="13:30">[<expr pos:start="13:29" pos:end="13:29"><name pos:start="13:29" pos:end="13:29">i</name></expr>]</index></name></expr></argument>, <argument pos:start="13:33" pos:end="13:33"><expr pos:start="13:33" pos:end="13:33"><name pos:start="13:33" pos:end="13:33">s</name></expr></argument>, <argument pos:start="13:36" pos:end="13:54"><expr pos:start="13:36" pos:end="13:54"><sizeof pos:start="13:36" pos:end="13:54">sizeof<argument_list pos:start="13:42" pos:end="13:54">(<argument pos:start="13:43" pos:end="13:53"><expr pos:start="13:43" pos:end="13:53"><name pos:start="13:43" pos:end="13:53">HEVCContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:68"><expr pos:start="14:13" pos:end="14:67"><name pos:start="14:13" pos:end="14:28"><name pos:start="14:13" pos:end="14:13">s</name><operator pos:start="14:14" pos:end="14:15">-&gt;</operator><name pos:start="14:16" pos:end="14:25">HEVClcList</name><index pos:start="14:26" pos:end="14:28">[<expr pos:start="14:27" pos:end="14:27"><name pos:start="14:27" pos:end="14:27">i</name></expr>]</index></name> <operator pos:start="14:30" pos:end="14:30">=</operator> <call pos:start="14:32" pos:end="14:67"><name pos:start="14:32" pos:end="14:41">av_mallocz</name><argument_list pos:start="14:42" pos:end="14:67">(<argument pos:start="14:43" pos:end="14:66"><expr pos:start="14:43" pos:end="14:66"><sizeof pos:start="14:43" pos:end="14:66">sizeof<argument_list pos:start="14:49" pos:end="14:66">(<argument pos:start="14:50" pos:end="14:65"><expr pos:start="14:50" pos:end="14:65"><name pos:start="14:50" pos:end="14:65">HEVCLocalContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:51"><expr pos:start="15:13" pos:end="15:50"><name pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:20">sList</name><index pos:start="15:21" pos:end="15:23">[<expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">i</name></expr>]</index></name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:31">HEVClc</name> <operator pos:start="15:33" pos:end="15:33">=</operator> <name pos:start="15:35" pos:end="15:50"><name pos:start="15:35" pos:end="15:35">s</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:47">HEVClcList</name><index pos:start="15:48" pos:end="15:50">[<expr pos:start="15:49" pos:end="15:49"><name pos:start="15:49" pos:end="15:49">i</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:33"><expr pos:start="16:5" pos:end="16:32"><name pos:start="16:5" pos:end="16:10">offset</name> <operator pos:start="16:12" pos:end="16:12">=</operator> <operator pos:start="16:14" pos:end="16:14">(</operator><name pos:start="16:15" pos:end="16:26"><name pos:start="16:15" pos:end="16:16">lc</name><operator pos:start="16:17" pos:end="16:18">-&gt;</operator><name pos:start="16:19" pos:end="16:20">gb</name><operator pos:start="16:21" pos:end="16:21">.</operator><name pos:start="16:22" pos:end="16:26">index</name></name> <operator pos:start="16:28" pos:end="16:29">&gt;&gt;</operator> <literal type="number" pos:start="16:31" pos:end="16:31">3</literal><operator pos:start="16:32" pos:end="16:32">)</operator></expr>;</expr_stmt>
    <for pos:start="17:5" pos:end="49:15">for <control pos:start="17:9" pos:end="17:104">(<init pos:start="17:10" pos:end="17:77"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">j</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr><operator pos:start="17:15" pos:end="17:15">,</operator> <expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:20">cmpt</name> <operator pos:start="17:22" pos:end="17:22">=</operator> <literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr><operator pos:start="17:25" pos:end="17:25">,</operator> <expr pos:start="17:27" pos:end="17:76"><name pos:start="17:27" pos:end="17:37">startheader</name> <operator pos:start="17:39" pos:end="17:39">=</operator> <name pos:start="17:41" pos:end="17:46">offset</name> <operator pos:start="17:48" pos:end="17:48">+</operator> <name pos:start="17:50" pos:end="17:76"><name pos:start="17:50" pos:end="17:50">s</name><operator pos:start="17:51" pos:end="17:52">-&gt;</operator><name pos:start="17:53" pos:end="17:54">sh</name><operator pos:start="17:55" pos:end="17:55">.</operator><name pos:start="17:56" pos:end="17:73">entry_point_offset</name><index pos:start="17:74" pos:end="17:76">[<expr pos:start="17:75" pos:end="17:75"><literal type="number" pos:start="17:75" pos:end="17:75">0</literal></expr>]</index></name></expr>;</init> <condition pos:start="17:79" pos:end="17:99"><expr pos:start="17:79" pos:end="17:98"><name pos:start="17:79" pos:end="17:79">j</name> <operator pos:start="17:81" pos:end="17:81">&lt;</operator> <name pos:start="17:83" pos:end="17:98"><name pos:start="17:83" pos:end="17:83">s</name><operator pos:start="17:84" pos:end="17:85">-&gt;</operator><name pos:start="17:86" pos:end="17:98">skipped_bytes</name></name></expr>;</condition> <incr pos:start="17:101" pos:end="17:103"><expr pos:start="17:101" pos:end="17:103"><name pos:start="17:101" pos:end="17:101">j</name><operator pos:start="17:102" pos:end="17:103">++</operator></expr></incr>)</control> <block pos:start="17:106" pos:end="49:15">{<block_content pos:start="18:9" pos:end="49:15">
        <if_stmt pos:start="18:9" pos:end="49:15"><if pos:start="18:9" pos:end="49:15">if <condition pos:start="18:12" pos:end="18:87">(<expr pos:start="18:13" pos:end="18:86"><name pos:start="18:13" pos:end="18:35"><name pos:start="18:13" pos:end="18:13">s</name><operator pos:start="18:14" pos:end="18:15">-&gt;</operator><name pos:start="18:16" pos:end="18:32">skipped_bytes_pos</name><index pos:start="18:33" pos:end="18:35">[<expr pos:start="18:34" pos:end="18:34"><name pos:start="18:34" pos:end="18:34">j</name></expr>]</index></name> <operator pos:start="18:37" pos:end="18:38">&gt;=</operator> <name pos:start="18:40" pos:end="18:45">offset</name> <operator pos:start="18:47" pos:end="18:48">&amp;&amp;</operator> <name pos:start="18:50" pos:end="18:72"><name pos:start="18:50" pos:end="18:50">s</name><operator pos:start="18:51" pos:end="18:52">-&gt;</operator><name pos:start="18:53" pos:end="18:69">skipped_bytes_pos</name><index pos:start="18:70" pos:end="18:72">[<expr pos:start="18:71" pos:end="18:71"><name pos:start="18:71" pos:end="18:71">j</name></expr>]</index></name> <operator pos:start="18:74" pos:end="18:74">&lt;</operator> <name pos:start="18:76" pos:end="18:86">startheader</name></expr>)</condition> <block pos:start="18:89" pos:end="49:15">{<block_content pos:start="19:13" pos:end="49:15">
            <expr_stmt pos:start="19:13" pos:end="19:26"><expr pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:23">startheader</name><operator pos:start="19:24" pos:end="19:25">--</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:19"><expr pos:start="20:13" pos:end="20:18"><name pos:start="20:13" pos:end="20:16">cmpt</name><operator pos:start="20:17" pos:end="20:18">++</operator></expr>;</expr_stmt>
    <for pos:start="21:5" pos:end="49:15">for <control pos:start="21:9" pos:end="21:55">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">1</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:50"><expr pos:start="21:17" pos:end="21:49"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:49"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:25">sh</name><operator pos:start="21:26" pos:end="21:26">.</operator><name pos:start="21:27" pos:end="21:49">num_entry_point_offsets</name></name></expr>;</condition> <incr pos:start="21:52" pos:end="21:54"><expr pos:start="21:52" pos:end="21:54"><name pos:start="21:52" pos:end="21:52">i</name><operator pos:start="21:53" pos:end="21:54">++</operator></expr></incr>)</control> <block pos:start="21:57" pos:end="49:15">{<block_content pos:start="22:9" pos:end="49:15">
        <expr_stmt pos:start="22:9" pos:end="22:59"><expr pos:start="22:9" pos:end="22:58"><name pos:start="22:9" pos:end="22:14">offset</name> <operator pos:start="22:16" pos:end="22:17">+=</operator> <operator pos:start="22:19" pos:end="22:19">(</operator><name pos:start="22:20" pos:end="22:50"><name pos:start="22:20" pos:end="22:20">s</name><operator pos:start="22:21" pos:end="22:22">-&gt;</operator><name pos:start="22:23" pos:end="22:24">sh</name><operator pos:start="22:25" pos:end="22:25">.</operator><name pos:start="22:26" pos:end="22:43">entry_point_offset</name><index pos:start="22:44" pos:end="22:50">[<expr pos:start="22:45" pos:end="22:49"><name pos:start="22:45" pos:end="22:45">i</name> <operator pos:start="22:47" pos:end="22:47">-</operator> <literal type="number" pos:start="22:49" pos:end="22:49">1</literal></expr>]</index></name> <operator pos:start="22:52" pos:end="22:52">-</operator> <name pos:start="22:54" pos:end="22:57">cmpt</name><operator pos:start="22:58" pos:end="22:58">)</operator></expr>;</expr_stmt>
        <for pos:start="23:9" pos:end="49:15">for <control pos:start="23:13" pos:end="24:70">(<init pos:start="23:14" pos:end="24:43"><expr pos:start="23:14" pos:end="23:18"><name pos:start="23:14" pos:end="23:14">j</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr><operator pos:start="23:19" pos:end="23:19">,</operator> <expr pos:start="23:21" pos:end="23:28"><name pos:start="23:21" pos:end="23:24">cmpt</name> <operator pos:start="23:26" pos:end="23:26">=</operator> <literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr><operator pos:start="23:29" pos:end="23:29">,</operator> <expr pos:start="23:31" pos:end="24:42"><name pos:start="23:31" pos:end="23:41">startheader</name> <operator pos:start="23:43" pos:end="23:43">=</operator> <name pos:start="23:45" pos:end="23:50">offset</name>
             <operator pos:start="24:14" pos:end="24:14">+</operator> <name pos:start="24:16" pos:end="24:42"><name pos:start="24:16" pos:end="24:16">s</name><operator pos:start="24:17" pos:end="24:18">-&gt;</operator><name pos:start="24:19" pos:end="24:20">sh</name><operator pos:start="24:21" pos:end="24:21">.</operator><name pos:start="24:22" pos:end="24:39">entry_point_offset</name><index pos:start="24:40" pos:end="24:42">[<expr pos:start="24:41" pos:end="24:41"><name pos:start="24:41" pos:end="24:41">i</name></expr>]</index></name></expr>;</init> <condition pos:start="24:45" pos:end="24:65"><expr pos:start="24:45" pos:end="24:64"><name pos:start="24:45" pos:end="24:45">j</name> <operator pos:start="24:47" pos:end="24:47">&lt;</operator> <name pos:start="24:49" pos:end="24:64"><name pos:start="24:49" pos:end="24:49">s</name><operator pos:start="24:50" pos:end="24:51">-&gt;</operator><name pos:start="24:52" pos:end="24:64">skipped_bytes</name></name></expr>;</condition> <incr pos:start="24:67" pos:end="24:69"><expr pos:start="24:67" pos:end="24:69"><name pos:start="24:67" pos:end="24:67">j</name><operator pos:start="24:68" pos:end="24:69">++</operator></expr></incr>)</control> <block pos:start="24:72" pos:end="49:15">{<block_content pos:start="25:13" pos:end="49:15">
            <if_stmt pos:start="25:13" pos:end="49:15"><if pos:start="25:13" pos:end="49:15">if <condition pos:start="25:16" pos:end="25:91">(<expr pos:start="25:17" pos:end="25:90"><name pos:start="25:17" pos:end="25:39"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:36">skipped_bytes_pos</name><index pos:start="25:37" pos:end="25:39">[<expr pos:start="25:38" pos:end="25:38"><name pos:start="25:38" pos:end="25:38">j</name></expr>]</index></name> <operator pos:start="25:41" pos:end="25:42">&gt;=</operator> <name pos:start="25:44" pos:end="25:49">offset</name> <operator pos:start="25:51" pos:end="25:52">&amp;&amp;</operator> <name pos:start="25:54" pos:end="25:76"><name pos:start="25:54" pos:end="25:54">s</name><operator pos:start="25:55" pos:end="25:56">-&gt;</operator><name pos:start="25:57" pos:end="25:73">skipped_bytes_pos</name><index pos:start="25:74" pos:end="25:76">[<expr pos:start="25:75" pos:end="25:75"><name pos:start="25:75" pos:end="25:75">j</name></expr>]</index></name> <operator pos:start="25:78" pos:end="25:78">&lt;</operator> <name pos:start="25:80" pos:end="25:90">startheader</name></expr>)</condition> <block pos:start="25:93" pos:end="49:15">{<block_content pos:start="26:17" pos:end="49:15">
                <expr_stmt pos:start="26:17" pos:end="26:30"><expr pos:start="26:17" pos:end="26:29"><name pos:start="26:17" pos:end="26:27">startheader</name><operator pos:start="26:28" pos:end="26:29">--</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="27:17" pos:end="27:23"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:20">cmpt</name><operator pos:start="27:21" pos:end="27:22">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:63"><expr pos:start="28:9" pos:end="28:62"><name pos:start="28:9" pos:end="28:25"><name pos:start="28:9" pos:end="28:9">s</name><operator pos:start="28:10" pos:end="28:11">-&gt;</operator><name pos:start="28:12" pos:end="28:13">sh</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:18">size</name><index pos:start="28:19" pos:end="28:25">[<expr pos:start="28:20" pos:end="28:24"><name pos:start="28:20" pos:end="28:20">i</name> <operator pos:start="28:22" pos:end="28:22">-</operator> <literal type="number" pos:start="28:24" pos:end="28:24">1</literal></expr>]</index></name> <operator pos:start="28:27" pos:end="28:27">=</operator> <name pos:start="28:29" pos:end="28:55"><name pos:start="28:29" pos:end="28:29">s</name><operator pos:start="28:30" pos:end="28:31">-&gt;</operator><name pos:start="28:32" pos:end="28:33">sh</name><operator pos:start="28:34" pos:end="28:34">.</operator><name pos:start="28:35" pos:end="28:52">entry_point_offset</name><index pos:start="28:53" pos:end="28:55">[<expr pos:start="28:54" pos:end="28:54"><name pos:start="28:54" pos:end="28:54">i</name></expr>]</index></name> <operator pos:start="28:57" pos:end="28:57">-</operator> <name pos:start="28:59" pos:end="28:62">cmpt</name></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:13">sh</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:20">offset</name><index pos:start="29:21" pos:end="29:27">[<expr pos:start="29:22" pos:end="29:26"><name pos:start="29:22" pos:end="29:22">i</name> <operator pos:start="29:24" pos:end="29:24">-</operator> <literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr>]</index></name> <operator pos:start="29:29" pos:end="29:29">=</operator> <name pos:start="29:31" pos:end="29:36">offset</name></expr>;</expr_stmt>
    <if_stmt pos:start="30:5" pos:end="49:15"><if pos:start="30:5" pos:end="49:15">if <condition pos:start="30:8" pos:end="30:43">(<expr pos:start="30:9" pos:end="30:42"><name pos:start="30:9" pos:end="30:37"><name pos:start="30:9" pos:end="30:9">s</name><operator pos:start="30:10" pos:end="30:11">-&gt;</operator><name pos:start="30:12" pos:end="30:13">sh</name><operator pos:start="30:14" pos:end="30:14">.</operator><name pos:start="30:15" pos:end="30:37">num_entry_point_offsets</name></name> <operator pos:start="30:39" pos:end="30:40">!=</operator> <literal type="number" pos:start="30:42" pos:end="30:42">0</literal></expr>)</condition> <block pos:start="30:45" pos:end="49:15">{<block_content pos:start="31:9" pos:end="49:15">
        <expr_stmt pos:start="31:9" pos:end="31:85"><expr pos:start="31:9" pos:end="31:84"><name pos:start="31:9" pos:end="31:14">offset</name> <operator pos:start="31:16" pos:end="31:17">+=</operator> <name pos:start="31:19" pos:end="31:77"><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:23">sh</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:42">entry_point_offset</name><index pos:start="31:43" pos:end="31:77">[<expr pos:start="31:44" pos:end="31:76"><name pos:start="31:44" pos:end="31:72"><name pos:start="31:44" pos:end="31:44">s</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:48">sh</name><operator pos:start="31:49" pos:end="31:49">.</operator><name pos:start="31:50" pos:end="31:72">num_entry_point_offsets</name></name> <operator pos:start="31:74" pos:end="31:74">-</operator> <literal type="number" pos:start="31:76" pos:end="31:76">1</literal></expr>]</index></name> <operator pos:start="31:79" pos:end="31:79">-</operator> <name pos:start="31:81" pos:end="31:84">cmpt</name></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:72"><expr pos:start="32:9" pos:end="32:71"><name pos:start="32:9" pos:end="32:53"><name pos:start="32:9" pos:end="32:9">s</name><operator pos:start="32:10" pos:end="32:11">-&gt;</operator><name pos:start="32:12" pos:end="32:13">sh</name><operator pos:start="32:14" pos:end="32:14">.</operator><name pos:start="32:15" pos:end="32:18">size</name><index pos:start="32:19" pos:end="32:53">[<expr pos:start="32:20" pos:end="32:52"><name pos:start="32:20" pos:end="32:48"><name pos:start="32:20" pos:end="32:20">s</name><operator pos:start="32:21" pos:end="32:22">-&gt;</operator><name pos:start="32:23" pos:end="32:24">sh</name><operator pos:start="32:25" pos:end="32:25">.</operator><name pos:start="32:26" pos:end="32:48">num_entry_point_offsets</name></name> <operator pos:start="32:50" pos:end="32:50">-</operator> <literal type="number" pos:start="32:52" pos:end="32:52">1</literal></expr>]</index></name> <operator pos:start="32:55" pos:end="32:55">=</operator> <name pos:start="32:57" pos:end="32:62">length</name> <operator pos:start="32:64" pos:end="32:64">-</operator> <name pos:start="32:66" pos:end="32:71">offset</name></expr>;</expr_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:55"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:13">sh</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:20">offset</name><index pos:start="33:21" pos:end="33:55">[<expr pos:start="33:22" pos:end="33:54"><name pos:start="33:22" pos:end="33:50"><name pos:start="33:22" pos:end="33:22">s</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:26">sh</name><operator pos:start="33:27" pos:end="33:27">.</operator><name pos:start="33:28" pos:end="33:50">num_entry_point_offsets</name></name> <operator pos:start="33:52" pos:end="33:52">-</operator> <literal type="number" pos:start="33:54" pos:end="33:54">1</literal></expr>]</index></name> <operator pos:start="33:57" pos:end="33:57">=</operator> <name pos:start="33:59" pos:end="33:64">offset</name></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:18"><expr pos:start="34:5" pos:end="34:17"><name pos:start="34:5" pos:end="34:11"><name pos:start="34:5" pos:end="34:5">s</name><operator pos:start="34:6" pos:end="34:7">-&gt;</operator><name pos:start="34:8" pos:end="34:11">data</name></name> <operator pos:start="34:13" pos:end="34:13">=</operator> <name pos:start="34:15" pos:end="34:17">nal</name></expr>;</expr_stmt>
    <for pos:start="35:5" pos:end="49:15">for <control pos:start="35:9" pos:end="35:43">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">1</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:38"><expr pos:start="35:17" pos:end="35:37"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:37"><name pos:start="35:21" pos:end="35:21">s</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:37">threads_number</name></name></expr>;</condition> <incr pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><name pos:start="35:40" pos:end="35:40">i</name><operator pos:start="35:41" pos:end="35:42">++</operator></expr></incr>)</control> <block pos:start="35:45" pos:end="49:15">{<block_content pos:start="36:9" pos:end="49:15">
        <expr_stmt pos:start="36:9" pos:end="36:48"><expr pos:start="36:9" pos:end="36:47"><name pos:start="36:9" pos:end="36:19"><name pos:start="36:9" pos:end="36:9">s</name><operator pos:start="36:10" pos:end="36:11">-&gt;</operator><name pos:start="36:12" pos:end="36:16">sList</name><index pos:start="36:17" pos:end="36:19">[<expr pos:start="36:18" pos:end="36:18"><name pos:start="36:18" pos:end="36:18">i</name></expr>]</index></name><operator pos:start="36:20" pos:end="36:21">-&gt;</operator><name pos:start="36:22" pos:end="36:43"><name pos:start="36:22" pos:end="36:27">HEVClc</name><operator pos:start="36:28" pos:end="36:29">-&gt;</operator><name pos:start="36:30" pos:end="36:43">first_qp_group</name></name> <operator pos:start="36:45" pos:end="36:45">=</operator> <literal type="number" pos:start="36:47" pos:end="36:47">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="37:9" pos:end="37:62"><expr pos:start="37:9" pos:end="37:61"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:16">sList</name><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><name pos:start="37:18" pos:end="37:18">i</name></expr>]</index></name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:33"><name pos:start="37:22" pos:end="37:27">HEVClc</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:33">qp_y</name></name> <operator pos:start="37:35" pos:end="37:35">=</operator> <name pos:start="37:37" pos:end="37:47"><name pos:start="37:37" pos:end="37:37">s</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:44">sList</name><index pos:start="37:45" pos:end="37:47">[<expr pos:start="37:46" pos:end="37:46"><literal type="number" pos:start="37:46" pos:end="37:46">0</literal></expr>]</index></name><operator pos:start="37:48" pos:end="37:49">-&gt;</operator><name pos:start="37:50" pos:end="37:61"><name pos:start="37:50" pos:end="37:55">HEVClc</name><operator pos:start="37:56" pos:end="37:57">-&gt;</operator><name pos:start="37:58" pos:end="37:61">qp_y</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:52"><expr pos:start="38:9" pos:end="38:51"><call pos:start="38:9" pos:end="38:51"><name pos:start="38:9" pos:end="38:14">memcpy</name><argument_list pos:start="38:15" pos:end="38:51">(<argument pos:start="38:16" pos:end="38:26"><expr pos:start="38:16" pos:end="38:26"><name pos:start="38:16" pos:end="38:26"><name pos:start="38:16" pos:end="38:16">s</name><operator pos:start="38:17" pos:end="38:18">-&gt;</operator><name pos:start="38:19" pos:end="38:23">sList</name><index pos:start="38:24" pos:end="38:26">[<expr pos:start="38:25" pos:end="38:25"><name pos:start="38:25" pos:end="38:25">i</name></expr>]</index></name></expr></argument>, <argument pos:start="38:29" pos:end="38:29"><expr pos:start="38:29" pos:end="38:29"><name pos:start="38:29" pos:end="38:29">s</name></expr></argument>, <argument pos:start="38:32" pos:end="38:50"><expr pos:start="38:32" pos:end="38:50"><sizeof pos:start="38:32" pos:end="38:50">sizeof<argument_list pos:start="38:38" pos:end="38:50">(<argument pos:start="38:39" pos:end="38:49"><expr pos:start="38:39" pos:end="38:49"><name pos:start="38:39" pos:end="38:49">HEVCContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="39:9" pos:end="39:47"><expr pos:start="39:9" pos:end="39:46"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:16">sList</name><index pos:start="39:17" pos:end="39:19">[<expr pos:start="39:18" pos:end="39:18"><name pos:start="39:18" pos:end="39:18">i</name></expr>]</index></name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:27">HEVClc</name> <operator pos:start="39:29" pos:end="39:29">=</operator> <name pos:start="39:31" pos:end="39:46"><name pos:start="39:31" pos:end="39:31">s</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:43">HEVClcList</name><index pos:start="39:44" pos:end="39:46">[<expr pos:start="39:45" pos:end="39:45"><name pos:start="39:45" pos:end="39:45">i</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:42"><expr pos:start="40:5" pos:end="40:41"><call pos:start="40:5" pos:end="40:41"><name pos:start="40:5" pos:end="40:25">avpriv_atomic_int_set</name><argument_list pos:start="40:26" pos:end="40:41">(<argument pos:start="40:27" pos:end="40:37"><expr pos:start="40:27" pos:end="40:37"><operator pos:start="40:27" pos:end="40:27">&amp;</operator><name pos:start="40:28" pos:end="40:37"><name pos:start="40:28" pos:end="40:28">s</name><operator pos:start="40:29" pos:end="40:30">-&gt;</operator><name pos:start="40:31" pos:end="40:37">wpp_err</name></name></expr></argument>, <argument pos:start="40:40" pos:end="40:40"><expr pos:start="40:40" pos:end="40:40"><literal type="number" pos:start="40:40" pos:end="40:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><call pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:20">ff_reset_entries</name><argument_list pos:start="41:21" pos:end="41:30">(<argument pos:start="41:22" pos:end="41:29"><expr pos:start="41:22" pos:end="41:29"><name pos:start="41:22" pos:end="41:29"><name pos:start="41:22" pos:end="41:22">s</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:29">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="42:5" pos:end="49:15">for <control pos:start="42:9" pos:end="42:56">(<init pos:start="42:10" pos:end="42:15"><expr pos:start="42:10" pos:end="42:14"><name pos:start="42:10" pos:end="42:10">i</name> <operator pos:start="42:12" pos:end="42:12">=</operator> <literal type="number" pos:start="42:14" pos:end="42:14">0</literal></expr>;</init> <condition pos:start="42:17" pos:end="42:51"><expr pos:start="42:17" pos:end="42:50"><name pos:start="42:17" pos:end="42:17">i</name> <operator pos:start="42:19" pos:end="42:20">&lt;=</operator> <name pos:start="42:22" pos:end="42:50"><name pos:start="42:22" pos:end="42:22">s</name><operator pos:start="42:23" pos:end="42:24">-&gt;</operator><name pos:start="42:25" pos:end="42:26">sh</name><operator pos:start="42:27" pos:end="42:27">.</operator><name pos:start="42:28" pos:end="42:50">num_entry_point_offsets</name></name></expr>;</condition> <incr pos:start="42:53" pos:end="42:55"><expr pos:start="42:53" pos:end="42:55"><name pos:start="42:53" pos:end="42:53">i</name><operator pos:start="42:54" pos:end="42:55">++</operator></expr></incr>)</control> <block pos:start="42:58" pos:end="49:15">{<block_content pos:start="43:9" pos:end="49:15">
        <expr_stmt pos:start="43:9" pos:end="43:19"><expr pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:11">arg</name><index pos:start="43:12" pos:end="43:14">[<expr pos:start="43:13" pos:end="43:13"><name pos:start="43:13" pos:end="43:13">i</name></expr>]</index></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:18">i</name></expr>;</expr_stmt>
        <expr_stmt pos:start="44:9" pos:end="44:19"><expr pos:start="44:9" pos:end="44:18"><name pos:start="44:9" pos:end="44:14"><name pos:start="44:9" pos:end="44:11">ret</name><index pos:start="44:12" pos:end="44:14">[<expr pos:start="44:13" pos:end="44:13"><name pos:start="44:13" pos:end="44:13">i</name></expr>]</index></name> <operator pos:start="44:16" pos:end="44:16">=</operator> <literal type="number" pos:start="44:18" pos:end="44:18">0</literal></expr>;</expr_stmt>
    <if_stmt pos:start="45:5" pos:end="46:113"><if pos:start="45:5" pos:end="46:113">if <condition pos:start="45:8" pos:end="45:49">(<expr pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:14">pps</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:48">entropy_coding_sync_enabled_flag</name></name></expr>)</condition><block type="pseudo" pos:start="46:9" pos:end="46:113"><block_content pos:start="46:9" pos:end="46:113">
        <expr_stmt pos:start="46:9" pos:end="46:113"><expr pos:start="46:9" pos:end="46:112"><call pos:start="46:9" pos:end="46:112"><name pos:start="46:9" pos:end="46:26"><name pos:start="46:9" pos:end="46:9">s</name><operator pos:start="46:10" pos:end="46:11">-&gt;</operator><name pos:start="46:12" pos:end="46:16">avctx</name><operator pos:start="46:17" pos:end="46:18">-&gt;</operator><name pos:start="46:19" pos:end="46:26">execute2</name></name><argument_list pos:start="46:27" pos:end="46:112">(<argument pos:start="46:28" pos:end="46:35"><expr pos:start="46:28" pos:end="46:35"><name pos:start="46:28" pos:end="46:35"><name pos:start="46:28" pos:end="46:28">s</name><operator pos:start="46:29" pos:end="46:30">-&gt;</operator><name pos:start="46:31" pos:end="46:35">avctx</name></name></expr></argument>, <argument pos:start="46:38" pos:end="46:66"><expr pos:start="46:38" pos:end="46:66"><operator pos:start="46:38" pos:end="46:38">(</operator><name pos:start="46:39" pos:end="46:42">void</name> <operator pos:start="46:44" pos:end="46:44">*</operator><operator pos:start="46:45" pos:end="46:45">)</operator> <name pos:start="46:47" pos:end="46:66">hls_decode_entry_wpp</name></expr></argument>, <argument pos:start="46:69" pos:end="46:71"><expr pos:start="46:69" pos:end="46:71"><name pos:start="46:69" pos:end="46:71">arg</name></expr></argument>, <argument pos:start="46:74" pos:end="46:76"><expr pos:start="46:74" pos:end="46:76"><name pos:start="46:74" pos:end="46:76">ret</name></expr></argument>, <argument pos:start="46:79" pos:end="46:111"><expr pos:start="46:79" pos:end="46:111"><name pos:start="46:79" pos:end="46:107"><name pos:start="46:79" pos:end="46:79">s</name><operator pos:start="46:80" pos:end="46:81">-&gt;</operator><name pos:start="46:82" pos:end="46:83">sh</name><operator pos:start="46:84" pos:end="46:84">.</operator><name pos:start="46:85" pos:end="46:107">num_entry_point_offsets</name></name> <operator pos:start="46:109" pos:end="46:109">+</operator> <literal type="number" pos:start="46:111" pos:end="46:111">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <for pos:start="47:5" pos:end="48:22">for <control pos:start="47:9" pos:end="47:56">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:51"><expr pos:start="47:17" pos:end="47:50"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:20">&lt;=</operator> <name pos:start="47:22" pos:end="47:50"><name pos:start="47:22" pos:end="47:22">s</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:26">sh</name><operator pos:start="47:27" pos:end="47:27">.</operator><name pos:start="47:28" pos:end="47:50">num_entry_point_offsets</name></name></expr>;</condition> <incr pos:start="47:53" pos:end="47:55"><expr pos:start="47:53" pos:end="47:55"><name pos:start="47:53" pos:end="47:53">i</name><operator pos:start="47:54" pos:end="47:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="48:9" pos:end="48:22"><block_content pos:start="48:9" pos:end="48:22">
        <expr_stmt pos:start="48:9" pos:end="48:22"><expr pos:start="48:9" pos:end="48:21"><name pos:start="48:9" pos:end="48:11">res</name> <operator pos:start="48:13" pos:end="48:14">+=</operator> <name pos:start="48:16" pos:end="48:21"><name pos:start="48:16" pos:end="48:18">ret</name><index pos:start="48:19" pos:end="48:21">[<expr pos:start="48:20" pos:end="48:20"><name pos:start="48:20" pos:end="48:20">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">res</name></expr>;</return></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></unit>
