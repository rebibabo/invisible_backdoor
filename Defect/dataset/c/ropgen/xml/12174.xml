<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12174.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:21"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">pnv_chip_realize</name><parameter_list pos:start="1:29" pos:end="1:60">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">DeviceState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:52">Error</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier><modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">errp</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="35:21">{<block_content pos:start="3:5" pos:end="35:21">
    <decl_stmt pos:start="3:5" pos:end="3:34"><decl pos:start="3:5" pos:end="3:33"><type pos:start="3:5" pos:end="3:13"><name pos:start="3:5" pos:end="3:11">PnvChip</name> <modifier pos:start="3:13" pos:end="3:13">*</modifier></type><name pos:start="3:14" pos:end="3:17">chip</name> <init pos:start="3:19" pos:end="3:33">= <expr pos:start="3:21" pos:end="3:33"><call pos:start="3:21" pos:end="3:33"><name pos:start="3:21" pos:end="3:28">PNV_CHIP</name><argument_list pos:start="3:29" pos:end="3:33">(<argument pos:start="3:30" pos:end="3:32"><expr pos:start="3:30" pos:end="3:32"><name pos:start="3:30" pos:end="3:32">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:24"><decl pos:start="4:5" pos:end="4:23"><type pos:start="4:5" pos:end="4:11"><name pos:start="4:5" pos:end="4:9">Error</name> <modifier pos:start="4:11" pos:end="4:11">*</modifier></type><name pos:start="4:12" pos:end="4:16">error</name> <init pos:start="4:18" pos:end="4:23">= <expr pos:start="4:20" pos:end="4:23"><name pos:start="4:20" pos:end="4:23">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">PnvChipClass</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">pcc</name> <init pos:start="5:23" pos:end="5:48">= <expr pos:start="5:25" pos:end="5:48"><call pos:start="5:25" pos:end="5:48"><name pos:start="5:25" pos:end="5:42">PNV_CHIP_GET_CLASS</name><argument_list pos:start="5:43" pos:end="5:48">(<argument pos:start="5:44" pos:end="5:47"><expr pos:start="5:44" pos:end="5:47"><name pos:start="5:44" pos:end="5:47">chip</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:55"><decl pos:start="6:5" pos:end="6:54"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:8">char</name> <modifier pos:start="6:10" pos:end="6:10">*</modifier></type><name pos:start="6:11" pos:end="6:18">typename</name> <init pos:start="6:20" pos:end="6:54">= <expr pos:start="6:22" pos:end="6:54"><call pos:start="6:22" pos:end="6:54"><name pos:start="6:22" pos:end="6:38">pnv_core_typename</name><argument_list pos:start="6:39" pos:end="6:54">(<argument pos:start="6:40" pos:end="6:53"><expr pos:start="6:40" pos:end="6:53"><name pos:start="6:40" pos:end="6:53"><name pos:start="6:40" pos:end="6:42">pcc</name><operator pos:start="6:43" pos:end="6:44">-&gt;</operator><name pos:start="6:45" pos:end="6:53">cpu_model</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:62"><decl pos:start="7:5" pos:end="7:61"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:19">typesize</name> <init pos:start="7:21" pos:end="7:61">= <expr pos:start="7:23" pos:end="7:61"><call pos:start="7:23" pos:end="7:61"><name pos:start="7:23" pos:end="7:51">object_type_get_instance_size</name><argument_list pos:start="7:52" pos:end="7:61">(<argument pos:start="7:53" pos:end="7:60"><expr pos:start="7:53" pos:end="7:60"><name pos:start="7:53" pos:end="7:60">typename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:21"><decl pos:start="8:5" pos:end="8:9"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">i</name></decl>, <decl pos:start="8:12" pos:end="8:20"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:12" pos:end="8:20">core_hwid</name></decl>;</decl_stmt>
    <if_stmt pos:start="9:5" pos:end="35:21"><if pos:start="9:5" pos:end="35:21">if <condition pos:start="9:8" pos:end="9:40">(<expr pos:start="9:9" pos:end="9:39"><operator pos:start="9:9" pos:end="9:9">!</operator><call pos:start="9:10" pos:end="9:39"><name pos:start="9:10" pos:end="9:29">object_class_by_name</name><argument_list pos:start="9:30" pos:end="9:39">(<argument pos:start="9:31" pos:end="9:38"><expr pos:start="9:31" pos:end="9:38"><name pos:start="9:31" pos:end="9:38">typename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:42" pos:end="35:21">{<block_content pos:start="10:9" pos:end="35:21">
        <expr_stmt pos:start="10:9" pos:end="10:75"><expr pos:start="10:9" pos:end="10:74"><call pos:start="10:9" pos:end="10:74"><name pos:start="10:9" pos:end="10:18">error_setg</name><argument_list pos:start="10:19" pos:end="10:74">(<argument pos:start="10:20" pos:end="10:23"><expr pos:start="10:20" pos:end="10:23"><name pos:start="10:20" pos:end="10:23">errp</name></expr></argument>, <argument pos:start="10:26" pos:end="10:63"><expr pos:start="10:26" pos:end="10:63"><literal type="string" pos:start="10:26" pos:end="10:63">"Unable to find PowerNV CPU Core '%s'"</literal></expr></argument>, <argument pos:start="10:66" pos:end="10:73"><expr pos:start="10:66" pos:end="10:73"><name pos:start="10:66" pos:end="10:73">typename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="11:5" pos:end="11:15">/* Cores */</comment>
    <expr_stmt pos:start="12:5" pos:end="12:41"><expr pos:start="12:5" pos:end="12:40"><call pos:start="12:5" pos:end="12:40"><name pos:start="12:5" pos:end="12:26">pnv_chip_core_sanitize</name><argument_list pos:start="12:27" pos:end="12:40">(<argument pos:start="12:28" pos:end="12:31"><expr pos:start="12:28" pos:end="12:31"><name pos:start="12:28" pos:end="12:31">chip</name></expr></argument>, <argument pos:start="12:34" pos:end="12:39"><expr pos:start="12:34" pos:end="12:39"><operator pos:start="12:34" pos:end="12:34">&amp;</operator><name pos:start="12:35" pos:end="12:39">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:55"><expr pos:start="13:5" pos:end="13:54"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:8">chip</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:15">cores</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <call pos:start="13:19" pos:end="13:54"><name pos:start="13:19" pos:end="13:27">g_malloc0</name><argument_list pos:start="13:28" pos:end="13:54">(<argument pos:start="13:29" pos:end="13:53"><expr pos:start="13:29" pos:end="13:53"><name pos:start="13:29" pos:end="13:36">typesize</name> <operator pos:start="13:38" pos:end="13:38">*</operator> <name pos:start="13:40" pos:end="13:53"><name pos:start="13:40" pos:end="13:43">chip</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:53">nr_cores</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="14:5" pos:end="35:21">for <control pos:start="14:9" pos:end="15:50">(<init pos:start="14:10" pos:end="14:30"><expr pos:start="14:10" pos:end="14:14"><name pos:start="14:10" pos:end="14:10">i</name> <operator pos:start="14:12" pos:end="14:12">=</operator> <literal type="number" pos:start="14:14" pos:end="14:14">0</literal></expr><operator pos:start="14:15" pos:end="14:15">,</operator> <expr pos:start="14:17" pos:end="14:29"><name pos:start="14:17" pos:end="14:25">core_hwid</name> <operator pos:start="14:27" pos:end="14:27">=</operator> <literal type="number" pos:start="14:29" pos:end="14:29">0</literal></expr>;</init> <condition pos:start="14:32" pos:end="15:37"><expr pos:start="14:32" pos:end="15:36"><operator pos:start="14:32" pos:end="14:32">(</operator><name pos:start="14:33" pos:end="14:41">core_hwid</name> <operator pos:start="14:43" pos:end="14:43">&lt;</operator> <sizeof pos:start="14:45" pos:end="14:68">sizeof<argument_list pos:start="14:51" pos:end="14:68">(<argument pos:start="14:52" pos:end="14:67"><expr pos:start="14:52" pos:end="14:67"><name pos:start="14:52" pos:end="14:67"><name pos:start="14:52" pos:end="14:55">chip</name><operator pos:start="14:56" pos:end="14:57">-&gt;</operator><name pos:start="14:58" pos:end="14:67">cores_mask</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="14:70" pos:end="14:70">*</operator> <literal type="number" pos:start="14:72" pos:end="14:72">8</literal><operator pos:start="14:73" pos:end="14:73">)</operator>
             <operator pos:start="15:14" pos:end="15:15">&amp;&amp;</operator> <operator pos:start="15:17" pos:end="15:17">(</operator><name pos:start="15:18" pos:end="15:18">i</name> <operator pos:start="15:20" pos:end="15:20">&lt;</operator> <name pos:start="15:22" pos:end="15:35"><name pos:start="15:22" pos:end="15:25">chip</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:35">nr_cores</name></name><operator pos:start="15:36" pos:end="15:36">)</operator></expr>;</condition> <incr pos:start="15:39" pos:end="15:49"><expr pos:start="15:39" pos:end="15:49"><name pos:start="15:39" pos:end="15:47">core_hwid</name><operator pos:start="15:48" pos:end="15:49">++</operator></expr></incr>)</control> <block pos:start="15:52" pos:end="35:21">{<block_content pos:start="16:9" pos:end="35:21">
        <decl_stmt pos:start="16:9" pos:end="16:27"><decl pos:start="16:9" pos:end="16:26"><type pos:start="16:9" pos:end="16:12"><name pos:start="16:9" pos:end="16:12">char</name></type> <name pos:start="16:14" pos:end="16:26"><name pos:start="16:14" pos:end="16:22">core_name</name><index pos:start="16:23" pos:end="16:26">[<expr pos:start="16:24" pos:end="16:25"><literal type="number" pos:start="16:24" pos:end="16:25">32</literal></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="17:9" pos:end="17:52"><decl pos:start="17:9" pos:end="17:51"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:12">void</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:22">pnv_core</name> <init pos:start="17:24" pos:end="17:51">= <expr pos:start="17:26" pos:end="17:51"><name pos:start="17:26" pos:end="17:36"><name pos:start="17:26" pos:end="17:29">chip</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:36">cores</name></name> <operator pos:start="17:38" pos:end="17:38">+</operator> <name pos:start="17:40" pos:end="17:40">i</name> <operator pos:start="17:42" pos:end="17:42">*</operator> <name pos:start="17:44" pos:end="17:51">typesize</name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="18:9" pos:end="35:21"><if pos:start="18:9" pos:end="35:21">if <condition pos:start="18:12" pos:end="18:54">(<expr pos:start="18:13" pos:end="18:53"><operator pos:start="18:13" pos:end="18:13">!</operator><operator pos:start="18:14" pos:end="18:14">(</operator><name pos:start="18:15" pos:end="18:30"><name pos:start="18:15" pos:end="18:18">chip</name><operator pos:start="18:19" pos:end="18:20">-&gt;</operator><name pos:start="18:21" pos:end="18:30">cores_mask</name></name> <operator pos:start="18:32" pos:end="18:32">&amp;</operator> <operator pos:start="18:34" pos:end="18:34">(</operator><literal type="number" pos:start="18:35" pos:end="18:38">1ull</literal> <operator pos:start="18:40" pos:end="18:41">&lt;&lt;</operator> <name pos:start="18:43" pos:end="18:51">core_hwid</name><operator pos:start="18:52" pos:end="18:52">)</operator><operator pos:start="18:53" pos:end="18:53">)</operator></expr>)</condition> <block pos:start="18:56" pos:end="35:21">{<block_content pos:start="19:13" pos:end="35:21">
            <continue pos:start="19:13" pos:end="19:21">continue;</continue>
        <expr_stmt pos:start="20:9" pos:end="20:56"><expr pos:start="20:9" pos:end="20:55"><call pos:start="20:9" pos:end="20:55"><name pos:start="20:9" pos:end="20:25">object_initialize</name><argument_list pos:start="20:26" pos:end="20:55">(<argument pos:start="20:27" pos:end="20:34"><expr pos:start="20:27" pos:end="20:34"><name pos:start="20:27" pos:end="20:34">pnv_core</name></expr></argument>, <argument pos:start="20:37" pos:end="20:44"><expr pos:start="20:37" pos:end="20:44"><name pos:start="20:37" pos:end="20:44">typesize</name></expr></argument>, <argument pos:start="20:47" pos:end="20:54"><expr pos:start="20:47" pos:end="20:54"><name pos:start="20:47" pos:end="20:54">typename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:70"><expr pos:start="21:9" pos:end="21:69"><call pos:start="21:9" pos:end="21:69"><name pos:start="21:9" pos:end="21:16">snprintf</name><argument_list pos:start="21:17" pos:end="21:69">(<argument pos:start="21:18" pos:end="21:26"><expr pos:start="21:18" pos:end="21:26"><name pos:start="21:18" pos:end="21:26">core_name</name></expr></argument>, <argument pos:start="21:29" pos:end="21:45"><expr pos:start="21:29" pos:end="21:45"><sizeof pos:start="21:29" pos:end="21:45">sizeof<argument_list pos:start="21:35" pos:end="21:45">(<argument pos:start="21:36" pos:end="21:44"><expr pos:start="21:36" pos:end="21:44"><name pos:start="21:36" pos:end="21:44">core_name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="21:48" pos:end="21:57"><expr pos:start="21:48" pos:end="21:57"><literal type="string" pos:start="21:48" pos:end="21:57">"core[%d]"</literal></expr></argument>, <argument pos:start="21:60" pos:end="21:68"><expr pos:start="21:60" pos:end="21:68"><name pos:start="21:60" pos:end="21:68">core_hwid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="23:48"><expr pos:start="22:9" pos:end="23:47"><call pos:start="22:9" pos:end="23:47"><name pos:start="22:9" pos:end="22:33">object_property_add_child</name><argument_list pos:start="22:34" pos:end="23:47">(<argument pos:start="22:35" pos:end="22:46"><expr pos:start="22:35" pos:end="22:46"><call pos:start="22:35" pos:end="22:46"><name pos:start="22:35" pos:end="22:40">OBJECT</name><argument_list pos:start="22:41" pos:end="22:46">(<argument pos:start="22:42" pos:end="22:45"><expr pos:start="22:42" pos:end="22:45"><name pos:start="22:42" pos:end="22:45">chip</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="22:49" pos:end="22:57"><expr pos:start="22:49" pos:end="22:57"><name pos:start="22:49" pos:end="22:57">core_name</name></expr></argument>, <argument pos:start="22:60" pos:end="22:75"><expr pos:start="22:60" pos:end="22:75"><call pos:start="22:60" pos:end="22:75"><name pos:start="22:60" pos:end="22:65">OBJECT</name><argument_list pos:start="22:66" pos:end="22:75">(<argument pos:start="22:67" pos:end="22:74"><expr pos:start="22:67" pos:end="22:74"><name pos:start="22:67" pos:end="22:74">pnv_core</name></expr></argument>)</argument_list></call></expr></argument>,
                                  <argument pos:start="23:35" pos:end="23:46"><expr pos:start="23:35" pos:end="23:46"><operator pos:start="23:35" pos:end="23:35">&amp;</operator><name pos:start="23:36" pos:end="23:46">error_fatal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="25:46"><expr pos:start="24:9" pos:end="25:45"><call pos:start="24:9" pos:end="25:45"><name pos:start="24:9" pos:end="24:31">object_property_set_int</name><argument_list pos:start="24:32" pos:end="25:45">(<argument pos:start="24:33" pos:end="24:48"><expr pos:start="24:33" pos:end="24:48"><call pos:start="24:33" pos:end="24:48"><name pos:start="24:33" pos:end="24:38">OBJECT</name><argument_list pos:start="24:39" pos:end="24:48">(<argument pos:start="24:40" pos:end="24:47"><expr pos:start="24:40" pos:end="24:47"><name pos:start="24:40" pos:end="24:47">pnv_core</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="24:51" pos:end="24:61"><expr pos:start="24:51" pos:end="24:61"><name pos:start="24:51" pos:end="24:61">smp_threads</name></expr></argument>, <argument pos:start="24:64" pos:end="24:75"><expr pos:start="24:64" pos:end="24:75"><literal type="string" pos:start="24:64" pos:end="24:75">"nr-threads"</literal></expr></argument>,
                                <argument pos:start="25:33" pos:end="25:44"><expr pos:start="25:33" pos:end="25:44"><operator pos:start="25:33" pos:end="25:33">&amp;</operator><name pos:start="25:34" pos:end="25:44">error_fatal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="26:9" pos:end="27:69"><expr pos:start="26:9" pos:end="27:68"><call pos:start="26:9" pos:end="27:68"><name pos:start="26:9" pos:end="26:31">object_property_set_int</name><argument_list pos:start="26:32" pos:end="27:68">(<argument pos:start="26:33" pos:end="26:48"><expr pos:start="26:33" pos:end="26:48"><call pos:start="26:33" pos:end="26:48"><name pos:start="26:33" pos:end="26:38">OBJECT</name><argument_list pos:start="26:39" pos:end="26:48">(<argument pos:start="26:40" pos:end="26:47"><expr pos:start="26:40" pos:end="26:47"><name pos:start="26:40" pos:end="26:47">pnv_core</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="26:51" pos:end="26:59"><expr pos:start="26:51" pos:end="26:59"><name pos:start="26:51" pos:end="26:59">core_hwid</name></expr></argument>,
                                <argument pos:start="27:33" pos:end="27:53"><expr pos:start="27:33" pos:end="27:53"><name pos:start="27:33" pos:end="27:53">CPU_CORE_PROP_CORE_ID</name></expr></argument>, <argument pos:start="27:56" pos:end="27:67"><expr pos:start="27:56" pos:end="27:67"><operator pos:start="27:56" pos:end="27:56">&amp;</operator><name pos:start="27:57" pos:end="27:67">error_fatal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="30:53"><expr pos:start="28:9" pos:end="30:52"><call pos:start="28:9" pos:end="30:52"><name pos:start="28:9" pos:end="28:31">object_property_set_int</name><argument_list pos:start="28:32" pos:end="30:52">(<argument pos:start="28:33" pos:end="28:48"><expr pos:start="28:33" pos:end="28:48"><call pos:start="28:33" pos:end="28:48"><name pos:start="28:33" pos:end="28:38">OBJECT</name><argument_list pos:start="28:39" pos:end="28:48">(<argument pos:start="28:40" pos:end="28:47"><expr pos:start="28:40" pos:end="28:47"><name pos:start="28:40" pos:end="28:47">pnv_core</name></expr></argument>)</argument_list></call></expr></argument>,
                                <argument pos:start="29:33" pos:end="29:62"><expr pos:start="29:33" pos:end="29:62"><call pos:start="29:33" pos:end="29:62"><name pos:start="29:33" pos:end="29:45"><name pos:start="29:33" pos:end="29:35">pcc</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:45">core_pir</name></name><argument_list pos:start="29:46" pos:end="29:62">(<argument pos:start="29:47" pos:end="29:50"><expr pos:start="29:47" pos:end="29:50"><name pos:start="29:47" pos:end="29:50">chip</name></expr></argument>, <argument pos:start="29:53" pos:end="29:61"><expr pos:start="29:53" pos:end="29:61"><name pos:start="29:53" pos:end="29:61">core_hwid</name></expr></argument>)</argument_list></call></expr></argument>,
                                <argument pos:start="30:33" pos:end="30:37"><expr pos:start="30:33" pos:end="30:37"><literal type="string" pos:start="30:33" pos:end="30:37">"pir"</literal></expr></argument>, <argument pos:start="30:40" pos:end="30:51"><expr pos:start="30:40" pos:end="30:51"><operator pos:start="30:40" pos:end="30:40">&amp;</operator><name pos:start="30:41" pos:end="30:51">error_fatal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="31:9" pos:end="32:47"><expr pos:start="31:9" pos:end="32:46"><call pos:start="31:9" pos:end="32:46"><name pos:start="31:9" pos:end="31:32">object_property_set_bool</name><argument_list pos:start="31:33" pos:end="32:46">(<argument pos:start="31:34" pos:end="31:49"><expr pos:start="31:34" pos:end="31:49"><call pos:start="31:34" pos:end="31:49"><name pos:start="31:34" pos:end="31:39">OBJECT</name><argument_list pos:start="31:40" pos:end="31:49">(<argument pos:start="31:41" pos:end="31:48"><expr pos:start="31:41" pos:end="31:48"><name pos:start="31:41" pos:end="31:48">pnv_core</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:52" pos:end="31:55"><expr pos:start="31:52" pos:end="31:55"><name pos:start="31:52" pos:end="31:55">true</name></expr></argument>, <argument pos:start="31:58" pos:end="31:67"><expr pos:start="31:58" pos:end="31:67"><literal type="string" pos:start="31:58" pos:end="31:67">"realized"</literal></expr></argument>,
                                 <argument pos:start="32:34" pos:end="32:45"><expr pos:start="32:34" pos:end="32:45"><operator pos:start="32:34" pos:end="32:34">&amp;</operator><name pos:start="32:35" pos:end="32:45">error_fatal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><call pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:20">object_unref</name><argument_list pos:start="33:21" pos:end="33:38">(<argument pos:start="33:22" pos:end="33:37"><expr pos:start="33:22" pos:end="33:37"><call pos:start="33:22" pos:end="33:37"><name pos:start="33:22" pos:end="33:27">OBJECT</name><argument_list pos:start="33:28" pos:end="33:37">(<argument pos:start="33:29" pos:end="33:36"><expr pos:start="33:29" pos:end="33:36"><name pos:start="33:29" pos:end="33:36">pnv_core</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:12"><expr pos:start="34:9" pos:end="34:11"><name pos:start="34:9" pos:end="34:9">i</name><operator pos:start="34:10" pos:end="34:11">++</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><call pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:10">g_free</name><argument_list pos:start="35:11" pos:end="35:20">(<argument pos:start="35:12" pos:end="35:19"><expr pos:start="35:12" pos:end="35:19"><name pos:start="35:12" pos:end="35:19">typename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></unit>
