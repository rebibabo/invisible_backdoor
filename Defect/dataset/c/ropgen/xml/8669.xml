<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8669.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">x86_cpudef_setup</name><parameter_list pos:start="1:22" pos:end="1:27">(<parameter pos:start="1:23" pos:end="1:26"><decl pos:start="1:23" pos:end="1:26"><type pos:start="1:23" pos:end="1:26"><name pos:start="1:23" pos:end="1:26">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:80"><decl pos:start="7:5" pos:end="7:79"><type pos:start="7:5" pos:end="7:23"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:21">char</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:44"><name pos:start="7:24" pos:end="7:42">model_with_versions</name><index pos:start="7:43" pos:end="7:44">[]</index></name> <init pos:start="7:46" pos:end="7:79">= <expr pos:start="7:48" pos:end="7:79"><block pos:start="7:48" pos:end="7:79">{ <expr pos:start="7:50" pos:end="7:57"><literal type="string" pos:start="7:50" pos:end="7:57">"qemu32"</literal></expr>, <expr pos:start="7:60" pos:end="7:67"><literal type="string" pos:start="7:60" pos:end="7:67">"qemu64"</literal></expr>, <expr pos:start="7:70" pos:end="7:77"><literal type="string" pos:start="7:70" pos:end="7:77">"athlon"</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="39:5">for <control pos:start="11:9" pos:end="11:54">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:49"><expr pos:start="11:17" pos:end="11:48"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <call pos:start="11:21" pos:end="11:48"><name pos:start="11:21" pos:end="11:30">ARRAY_SIZE</name><argument_list pos:start="11:31" pos:end="11:48">(<argument pos:start="11:32" pos:end="11:47"><expr pos:start="11:32" pos:end="11:47"><name pos:start="11:32" pos:end="11:47">builtin_x86_defs</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="11:51" pos:end="11:53"><expr pos:start="11:51" pos:end="11:53"><operator pos:start="11:51" pos:end="11:52">++</operator><name pos:start="11:53" pos:end="11:53">i</name></expr></incr>)</control> <block pos:start="11:56" pos:end="39:5">{<block_content pos:start="13:9" pos:end="37:9">

        <decl_stmt pos:start="13:9" pos:end="13:53"><decl pos:start="13:9" pos:end="13:52"><type pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:24">X86CPUDefinition</name> <modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:29">def</name> <init pos:start="13:31" pos:end="13:52">= <expr pos:start="13:33" pos:end="13:52"><operator pos:start="13:33" pos:end="13:33">&amp;</operator><name pos:start="13:34" pos:end="13:52"><name pos:start="13:34" pos:end="13:49">builtin_x86_defs</name><index pos:start="13:50" pos:end="13:52">[<expr pos:start="13:51" pos:end="13:51"><name pos:start="13:51" pos:end="13:51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="17:9" pos:end="17:52">/* Look for specific "cpudef" models that */</comment>

        <comment type="block" pos:start="19:9" pos:end="19:48">/* have the QEMU version in .model_id */</comment>

        <for pos:start="21:9" pos:end="37:9">for <control pos:start="21:13" pos:end="21:61">(<init pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:14">j</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</init> <condition pos:start="21:21" pos:end="21:56"><expr pos:start="21:21" pos:end="21:55"><name pos:start="21:21" pos:end="21:21">j</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <call pos:start="21:25" pos:end="21:55"><name pos:start="21:25" pos:end="21:34">ARRAY_SIZE</name><argument_list pos:start="21:35" pos:end="21:55">(<argument pos:start="21:36" pos:end="21:54"><expr pos:start="21:36" pos:end="21:54"><name pos:start="21:36" pos:end="21:54">model_with_versions</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="21:58" pos:end="21:60"><expr pos:start="21:58" pos:end="21:60"><name pos:start="21:58" pos:end="21:58">j</name><operator pos:start="21:59" pos:end="21:60">++</operator></expr></incr>)</control> <block pos:start="21:63" pos:end="37:9">{<block_content pos:start="23:13" pos:end="35:13">

            <if_stmt pos:start="23:13" pos:end="35:13"><if pos:start="23:13" pos:end="35:13">if <condition pos:start="23:16" pos:end="23:63">(<expr pos:start="23:17" pos:end="23:62"><call pos:start="23:17" pos:end="23:57"><name pos:start="23:17" pos:end="23:22">strcmp</name><argument_list pos:start="23:23" pos:end="23:57">(<argument pos:start="23:24" pos:end="23:45"><expr pos:start="23:24" pos:end="23:45"><name pos:start="23:24" pos:end="23:45"><name pos:start="23:24" pos:end="23:42">model_with_versions</name><index pos:start="23:43" pos:end="23:45">[<expr pos:start="23:44" pos:end="23:44"><name pos:start="23:44" pos:end="23:44">j</name></expr>]</index></name></expr></argument>, <argument pos:start="23:48" pos:end="23:56"><expr pos:start="23:48" pos:end="23:56"><name pos:start="23:48" pos:end="23:56"><name pos:start="23:48" pos:end="23:50">def</name><operator pos:start="23:51" pos:end="23:52">-&gt;</operator><name pos:start="23:53" pos:end="23:56">name</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:59" pos:end="23:60">==</operator> <literal type="number" pos:start="23:62" pos:end="23:62">0</literal></expr>)</condition> <block pos:start="23:65" pos:end="35:13">{<block_content pos:start="25:17" pos:end="33:22">

                <expr_stmt pos:start="25:17" pos:end="27:53"><expr pos:start="25:17" pos:end="27:52"><call pos:start="25:17" pos:end="27:52"><name pos:start="25:17" pos:end="25:23">pstrcpy</name><argument_list pos:start="25:24" pos:end="27:52">(<argument pos:start="25:25" pos:end="25:37"><expr pos:start="25:25" pos:end="25:37"><name pos:start="25:25" pos:end="25:37"><name pos:start="25:25" pos:end="25:27">def</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:37">model_id</name></name></expr></argument>, <argument pos:start="25:40" pos:end="25:60"><expr pos:start="25:40" pos:end="25:60"><sizeof pos:start="25:40" pos:end="25:60">sizeof<argument_list pos:start="25:46" pos:end="25:60">(<argument pos:start="25:47" pos:end="25:59"><expr pos:start="25:47" pos:end="25:59"><name pos:start="25:47" pos:end="25:59"><name pos:start="25:47" pos:end="25:49">def</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:59">model_id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                        <argument pos:start="27:25" pos:end="27:51"><expr pos:start="27:25" pos:end="27:51"><literal type="string" pos:start="27:25" pos:end="27:51">"QEMU Virtual CPU version "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="31:44"><expr pos:start="29:17" pos:end="31:43"><call pos:start="29:17" pos:end="31:43"><name pos:start="29:17" pos:end="29:23">pstrcat</name><argument_list pos:start="29:24" pos:end="31:43">(<argument pos:start="29:25" pos:end="29:37"><expr pos:start="29:25" pos:end="29:37"><name pos:start="29:25" pos:end="29:37"><name pos:start="29:25" pos:end="29:27">def</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:37">model_id</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:60"><expr pos:start="29:40" pos:end="29:60"><sizeof pos:start="29:40" pos:end="29:60">sizeof<argument_list pos:start="29:46" pos:end="29:60">(<argument pos:start="29:47" pos:end="29:59"><expr pos:start="29:47" pos:end="29:59"><name pos:start="29:47" pos:end="29:59"><name pos:start="29:47" pos:end="29:49">def</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:59">model_id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                        <argument pos:start="31:25" pos:end="31:42"><expr pos:start="31:25" pos:end="31:42"><call pos:start="31:25" pos:end="31:42"><name pos:start="31:25" pos:end="31:40">qemu_get_version</name><argument_list pos:start="31:41" pos:end="31:42">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="33:17" pos:end="33:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
