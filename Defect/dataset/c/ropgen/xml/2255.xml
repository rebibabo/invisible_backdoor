<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2255.c" pos:tabs="8"><function pos:start="1:1" pos:end="50:16"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">check_refcounts_l1</name><parameter_list pos:start="1:30" pos:end="5:47">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:46">BlockDriverState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">bs</name></decl></parameter>,
                              <parameter pos:start="2:31" pos:end="2:54"><decl pos:start="2:31" pos:end="2:54"><type pos:start="2:31" pos:end="2:54"><name pos:start="2:31" pos:end="2:38">uint16_t</name> <modifier pos:start="2:40" pos:end="2:40">*</modifier></type><name pos:start="2:41" pos:end="2:54">refcount_table</name></decl></parameter>,
                              <parameter pos:start="3:31" pos:end="3:53"><decl pos:start="3:31" pos:end="3:53"><type pos:start="3:31" pos:end="3:53"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:53">refcount_table_size</name></decl></parameter>,
                              <parameter pos:start="4:31" pos:end="4:53"><decl pos:start="4:31" pos:end="4:53"><type pos:start="4:31" pos:end="4:53"><name pos:start="4:31" pos:end="4:37">int64_t</name></type> <name pos:start="4:39" pos:end="4:53">l1_table_offset</name></decl></parameter>, <parameter pos:start="4:56" pos:end="4:66"><decl pos:start="4:56" pos:end="4:66"><type pos:start="4:56" pos:end="4:66"><name pos:start="4:56" pos:end="4:58">int</name></type> <name pos:start="4:60" pos:end="4:66">l1_size</name></decl></parameter>,
                              <parameter pos:start="5:31" pos:end="5:46"><decl pos:start="5:31" pos:end="5:46"><type pos:start="5:31" pos:end="5:46"><name pos:start="5:31" pos:end="5:33">int</name></type> <name pos:start="5:35" pos:end="5:46">check_copied</name></decl></parameter>)</parameter_list>
<block pos:start="6:1" pos:end="50:16">{<block_content pos:start="7:5" pos:end="50:16">
    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:44"><decl pos:start="8:5" pos:end="8:22"><type pos:start="8:5" pos:end="8:14"><name pos:start="8:5" pos:end="8:12">uint64_t</name> <modifier pos:start="8:14" pos:end="8:14">*</modifier></type><name pos:start="8:15" pos:end="8:22">l1_table</name></decl>, <decl pos:start="8:25" pos:end="8:33"><type ref="prev" pos:start="8:5" pos:end="8:14"/><name pos:start="8:25" pos:end="8:33">l2_offset</name></decl>, <decl pos:start="8:36" pos:end="8:43"><type ref="prev" pos:start="8:5" pos:end="8:14"/><name pos:start="8:36" pos:end="8:43">l1_size2</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:19">refcount</name></decl>, <decl pos:start="9:22" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:24">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:19"><decl pos:start="10:5" pos:end="10:18"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:14">errors</name> <init pos:start="10:16" pos:end="10:18">= <expr pos:start="10:18" pos:end="10:18"><literal type="number" pos:start="10:18" pos:end="10:18">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:42"><expr pos:start="11:5" pos:end="11:41"><name pos:start="11:5" pos:end="11:12">l1_size2</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:22">l1_size</name> <operator pos:start="11:24" pos:end="11:24">*</operator> <sizeof pos:start="11:26" pos:end="11:41">sizeof<argument_list pos:start="11:32" pos:end="11:41">(<argument pos:start="11:33" pos:end="11:40"><expr pos:start="11:33" pos:end="11:40"><name pos:start="11:33" pos:end="11:40">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
    <comment type="block" pos:start="12:5" pos:end="12:31">/* Mark L1 table as used */</comment>
    <expr_stmt pos:start="13:5" pos:end="14:45"><expr pos:start="13:5" pos:end="14:44"><name pos:start="13:5" pos:end="13:10">errors</name> <operator pos:start="13:12" pos:end="13:13">+=</operator> <call pos:start="13:15" pos:end="14:44"><name pos:start="13:15" pos:end="13:27">inc_refcounts</name><argument_list pos:start="13:28" pos:end="14:44">(<argument pos:start="13:29" pos:end="13:30"><expr pos:start="13:29" pos:end="13:30"><name pos:start="13:29" pos:end="13:30">bs</name></expr></argument>, <argument pos:start="13:33" pos:end="13:46"><expr pos:start="13:33" pos:end="13:46"><name pos:start="13:33" pos:end="13:46">refcount_table</name></expr></argument>, <argument pos:start="13:49" pos:end="13:67"><expr pos:start="13:49" pos:end="13:67"><name pos:start="13:49" pos:end="13:67">refcount_table_size</name></expr></argument>,
                  <argument pos:start="14:19" pos:end="14:33"><expr pos:start="14:19" pos:end="14:33"><name pos:start="14:19" pos:end="14:33">l1_table_offset</name></expr></argument>, <argument pos:start="14:36" pos:end="14:43"><expr pos:start="14:36" pos:end="14:43"><name pos:start="14:36" pos:end="14:43">l1_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="15:5" pos:end="15:41">/* Read L1 table entries from disk */</comment>
    <expr_stmt pos:start="16:5" pos:end="16:37"><expr pos:start="16:5" pos:end="16:36"><name pos:start="16:5" pos:end="16:12">l1_table</name> <operator pos:start="16:14" pos:end="16:14">=</operator> <call pos:start="16:16" pos:end="16:36"><name pos:start="16:16" pos:end="16:26">qemu_malloc</name><argument_list pos:start="16:27" pos:end="16:36">(<argument pos:start="16:28" pos:end="16:35"><expr pos:start="16:28" pos:end="16:35"><name pos:start="16:28" pos:end="16:35">l1_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="18:51">(<expr pos:start="17:9" pos:end="18:50"><call pos:start="17:9" pos:end="18:38"><name pos:start="17:9" pos:end="17:18">bdrv_pread</name><argument_list pos:start="17:19" pos:end="18:38">(<argument pos:start="17:20" pos:end="17:24"><expr pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:20">s</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:24">hd</name></name></expr></argument>, <argument pos:start="17:27" pos:end="17:41"><expr pos:start="17:27" pos:end="17:41"><name pos:start="17:27" pos:end="17:41">l1_table_offset</name></expr></argument>,
                   <argument pos:start="18:20" pos:end="18:27"><expr pos:start="18:20" pos:end="18:27"><name pos:start="18:20" pos:end="18:27">l1_table</name></expr></argument>, <argument pos:start="18:30" pos:end="18:37"><expr pos:start="18:30" pos:end="18:37"><name pos:start="18:30" pos:end="18:37">l1_size2</name></expr></argument>)</argument_list></call> <operator pos:start="18:40" pos:end="18:41">!=</operator> <name pos:start="18:43" pos:end="18:50">l1_size2</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">
        <goto pos:start="19:9" pos:end="19:18">goto <name pos:start="19:14" pos:end="19:17">fail</name>;</goto></block_content></block></if></if_stmt>
    <for pos:start="20:5" pos:end="21:35">for<control pos:start="20:8" pos:end="20:31">(<init pos:start="20:9" pos:end="20:14"><expr pos:start="20:9" pos:end="20:13"><name pos:start="20:9" pos:end="20:9">i</name> <operator pos:start="20:11" pos:end="20:11">=</operator> <literal type="number" pos:start="20:13" pos:end="20:13">0</literal></expr>;</init><condition pos:start="20:15" pos:end="20:26"><expr pos:start="20:15" pos:end="20:25"><name pos:start="20:15" pos:end="20:15">i</name> <operator pos:start="20:17" pos:end="20:17">&lt;</operator> <name pos:start="20:19" pos:end="20:25">l1_size</name></expr>;</condition> <incr pos:start="20:28" pos:end="20:30"><expr pos:start="20:28" pos:end="20:30"><name pos:start="20:28" pos:end="20:28">i</name><operator pos:start="20:29" pos:end="20:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:9" pos:end="21:35"><block_content pos:start="21:9" pos:end="21:35">
        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><call pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:20">be64_to_cpus</name><argument_list pos:start="21:21" pos:end="21:34">(<argument pos:start="21:22" pos:end="21:33"><expr pos:start="21:22" pos:end="21:33"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:33"><name pos:start="21:23" pos:end="21:30">l1_table</name><index pos:start="21:31" pos:end="21:33">[<expr pos:start="21:32" pos:end="21:32"><name pos:start="21:32" pos:end="21:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <comment type="block" pos:start="22:5" pos:end="22:30">/* Do the actual checks */</comment>
    <for pos:start="23:5" pos:end="50:16">for<control pos:start="23:8" pos:end="23:32">(<init pos:start="23:9" pos:end="23:14"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">i</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>;</init> <condition pos:start="23:16" pos:end="23:27"><expr pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:16">i</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <name pos:start="23:20" pos:end="23:26">l1_size</name></expr>;</condition> <incr pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:29">i</name><operator pos:start="23:30" pos:end="23:31">++</operator></expr></incr>)</control> <block pos:start="23:34" pos:end="50:16">{<block_content pos:start="24:9" pos:end="50:16">
        <expr_stmt pos:start="24:9" pos:end="24:32"><expr pos:start="24:9" pos:end="24:31"><name pos:start="24:9" pos:end="24:17">l2_offset</name> <operator pos:start="24:19" pos:end="24:19">=</operator> <name pos:start="24:21" pos:end="24:31"><name pos:start="24:21" pos:end="24:28">l1_table</name><index pos:start="24:29" pos:end="24:31">[<expr pos:start="24:30" pos:end="24:30"><name pos:start="24:30" pos:end="24:30">i</name></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="25:9" pos:end="50:16"><if pos:start="25:9" pos:end="50:16">if <condition pos:start="25:12" pos:end="25:22">(<expr pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:21">l2_offset</name></expr>)</condition> <block pos:start="25:24" pos:end="50:16">{<block_content pos:start="27:13" pos:end="50:16">
            <comment type="block" pos:start="26:13" pos:end="26:65">/* QCOW_OFLAG_COPIED must be set iff refcount == 1 */</comment>
            <if_stmt pos:start="27:13" pos:end="50:16"><if pos:start="27:13" pos:end="50:16">if <condition pos:start="27:16" pos:end="27:29">(<expr pos:start="27:17" pos:end="27:28"><name pos:start="27:17" pos:end="27:28">check_copied</name></expr>)</condition> <block pos:start="27:31" pos:end="50:16">{<block_content pos:start="28:17" pos:end="50:16">
                <expr_stmt pos:start="28:17" pos:end="29:40"><expr pos:start="28:17" pos:end="29:39"><name pos:start="28:17" pos:end="28:24">refcount</name> <operator pos:start="28:26" pos:end="28:26">=</operator> <call pos:start="28:28" pos:end="29:39"><name pos:start="28:28" pos:end="28:39">get_refcount</name><argument_list pos:start="28:40" pos:end="29:39">(<argument pos:start="28:41" pos:end="28:42"><expr pos:start="28:41" pos:end="28:42"><name pos:start="28:41" pos:end="28:42">bs</name></expr></argument>, <argument pos:start="28:45" pos:end="29:38"><expr pos:start="28:45" pos:end="29:38"><operator pos:start="28:45" pos:end="28:45">(</operator><name pos:start="28:46" pos:end="28:54">l2_offset</name> <operator pos:start="28:56" pos:end="28:56">&amp;</operator> <operator pos:start="28:58" pos:end="28:58">~</operator><name pos:start="28:59" pos:end="28:75">QCOW_OFLAG_COPIED</name><operator pos:start="28:76" pos:end="28:76">)</operator>
                    <operator pos:start="29:21" pos:end="29:22">&gt;&gt;</operator> <name pos:start="29:24" pos:end="29:38"><name pos:start="29:24" pos:end="29:24">s</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:38">cluster_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="30:17" pos:end="50:16"><if pos:start="30:17" pos:end="50:16">if <condition pos:start="30:20" pos:end="30:78">(<expr pos:start="30:21" pos:end="30:77"><operator pos:start="30:21" pos:end="30:21">(</operator><name pos:start="30:22" pos:end="30:29">refcount</name> <operator pos:start="30:31" pos:end="30:32">==</operator> <literal type="number" pos:start="30:34" pos:end="30:34">1</literal><operator pos:start="30:35" pos:end="30:35">)</operator> <operator pos:start="30:37" pos:end="30:38">!=</operator> <operator pos:start="30:40" pos:end="30:40">(</operator><operator pos:start="30:41" pos:end="30:41">(</operator><name pos:start="30:42" pos:end="30:50">l2_offset</name> <operator pos:start="30:52" pos:end="30:52">&amp;</operator> <name pos:start="30:54" pos:end="30:70">QCOW_OFLAG_COPIED</name><operator pos:start="30:71" pos:end="30:71">)</operator> <operator pos:start="30:73" pos:end="30:74">!=</operator> <literal type="number" pos:start="30:76" pos:end="30:76">0</literal><operator pos:start="30:77" pos:end="30:77">)</operator></expr>)</condition> <block pos:start="30:80" pos:end="50:16">{<block_content pos:start="31:21" pos:end="50:16">
                    <expr_stmt pos:start="31:21" pos:end="32:63"><expr pos:start="31:21" pos:end="32:62"><call pos:start="31:21" pos:end="32:62"><name pos:start="31:21" pos:end="31:27">fprintf</name><argument_list pos:start="31:28" pos:end="32:62">(<argument pos:start="31:29" pos:end="31:34"><expr pos:start="31:29" pos:end="31:34"><name pos:start="31:29" pos:end="31:34">stderr</name></expr></argument>, <argument pos:start="31:37" pos:end="32:40"><expr pos:start="31:37" pos:end="32:40"><literal type="string" pos:start="31:37" pos:end="31:69">"ERROR OFLAG_COPIED: l2_offset=%"</literal> <name pos:start="31:71" pos:end="31:76">PRIx64</name>
                        <literal type="string" pos:start="32:25" pos:end="32:40">" refcount=%d\n"</literal></expr></argument>, <argument pos:start="32:43" pos:end="32:51"><expr pos:start="32:43" pos:end="32:51"><name pos:start="32:43" pos:end="32:51">l2_offset</name></expr></argument>, <argument pos:start="32:54" pos:end="32:61"><expr pos:start="32:54" pos:end="32:61"><name pos:start="32:54" pos:end="32:61">refcount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:start="33:13" pos:end="33:39">/* Mark L2 table as used */</comment>
            <expr_stmt pos:start="34:13" pos:end="34:44"><expr pos:start="34:13" pos:end="34:43"><name pos:start="34:13" pos:end="34:21">l2_offset</name> <operator pos:start="34:23" pos:end="34:24">&amp;=</operator> <operator pos:start="34:26" pos:end="34:26">~</operator><name pos:start="34:27" pos:end="34:43">QCOW_OFLAG_COPIED</name></expr>;</expr_stmt>
            <expr_stmt pos:start="35:13" pos:end="38:43"><expr pos:start="35:13" pos:end="38:42"><name pos:start="35:13" pos:end="35:18">errors</name> <operator pos:start="35:20" pos:end="35:21">+=</operator> <call pos:start="35:23" pos:end="38:42"><name pos:start="35:23" pos:end="35:35">inc_refcounts</name><argument_list pos:start="35:36" pos:end="38:42">(<argument pos:start="35:37" pos:end="35:38"><expr pos:start="35:37" pos:end="35:38"><name pos:start="35:37" pos:end="35:38">bs</name></expr></argument>, <argument pos:start="35:41" pos:end="35:54"><expr pos:start="35:41" pos:end="35:54"><name pos:start="35:41" pos:end="35:54">refcount_table</name></expr></argument>,
                          <argument pos:start="36:27" pos:end="36:45"><expr pos:start="36:27" pos:end="36:45"><name pos:start="36:27" pos:end="36:45">refcount_table_size</name></expr></argument>,
                          <argument pos:start="37:27" pos:end="37:35"><expr pos:start="37:27" pos:end="37:35"><name pos:start="37:27" pos:end="37:35">l2_offset</name></expr></argument>,
                          <argument pos:start="38:27" pos:end="38:41"><expr pos:start="38:27" pos:end="38:41"><name pos:start="38:27" pos:end="38:41"><name pos:start="38:27" pos:end="38:27">s</name><operator pos:start="38:28" pos:end="38:29">-&gt;</operator><name pos:start="38:30" pos:end="38:41">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:start="39:13" pos:end="39:46">/* Process and check L2 entries */</comment>
            <expr_stmt pos:start="40:13" pos:end="41:41"><expr pos:start="40:13" pos:end="41:40"><name pos:start="40:13" pos:end="40:15">ret</name> <operator pos:start="40:17" pos:end="40:17">=</operator> <call pos:start="40:19" pos:end="41:40"><name pos:start="40:19" pos:end="40:36">check_refcounts_l2</name><argument_list pos:start="40:37" pos:end="41:40">(<argument pos:start="40:38" pos:end="40:39"><expr pos:start="40:38" pos:end="40:39"><name pos:start="40:38" pos:end="40:39">bs</name></expr></argument>, <argument pos:start="40:42" pos:end="40:55"><expr pos:start="40:42" pos:end="40:55"><name pos:start="40:42" pos:end="40:55">refcount_table</name></expr></argument>, <argument pos:start="40:58" pos:end="40:76"><expr pos:start="40:58" pos:end="40:76"><name pos:start="40:58" pos:end="40:76">refcount_table_size</name></expr></argument>,
                <argument pos:start="41:17" pos:end="41:25"><expr pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:25">l2_offset</name></expr></argument>, <argument pos:start="41:28" pos:end="41:39"><expr pos:start="41:28" pos:end="41:39"><name pos:start="41:28" pos:end="41:39">check_copied</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="42:13" pos:end="50:16"><if pos:start="42:13" pos:end="50:16">if <condition pos:start="42:16" pos:end="42:24">(<expr pos:start="42:17" pos:end="42:23"><name pos:start="42:17" pos:end="42:19">ret</name> <operator pos:start="42:21" pos:end="42:21">&lt;</operator> <literal type="number" pos:start="42:23" pos:end="42:23">0</literal></expr>)</condition> <block pos:start="42:26" pos:end="50:16">{<block_content pos:start="43:17" pos:end="50:16">
                <goto pos:start="43:17" pos:end="43:26">goto <name pos:start="43:22" pos:end="43:25">fail</name>;</goto>
            <expr_stmt pos:start="44:13" pos:end="44:26"><expr pos:start="44:13" pos:end="44:25"><name pos:start="44:13" pos:end="44:18">errors</name> <operator pos:start="44:20" pos:end="44:21">+=</operator> <name pos:start="44:23" pos:end="44:25">ret</name></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><call pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:13">qemu_free</name><argument_list pos:start="45:14" pos:end="45:23">(<argument pos:start="45:15" pos:end="45:22"><expr pos:start="45:15" pos:end="45:22"><name pos:start="45:15" pos:end="45:22">l1_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="46:5" pos:end="46:18">return <expr pos:start="46:12" pos:end="46:17"><name pos:start="46:12" pos:end="46:17">errors</name></expr>;</return>
<label pos:start="47:1" pos:end="47:5"><name pos:start="47:1" pos:end="47:4">fail</name>:</label>
    <expr_stmt pos:start="48:5" pos:end="48:64"><expr pos:start="48:5" pos:end="48:63"><call pos:start="48:5" pos:end="48:63"><name pos:start="48:5" pos:end="48:11">fprintf</name><argument_list pos:start="48:12" pos:end="48:63">(<argument pos:start="48:13" pos:end="48:18"><expr pos:start="48:13" pos:end="48:18"><name pos:start="48:13" pos:end="48:18">stderr</name></expr></argument>, <argument pos:start="48:21" pos:end="48:62"><expr pos:start="48:21" pos:end="48:62"><literal type="string" pos:start="48:21" pos:end="48:62">"ERROR: I/O error in check_refcounts_l1\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><call pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:13">qemu_free</name><argument_list pos:start="49:14" pos:end="49:23">(<argument pos:start="49:15" pos:end="49:22"><expr pos:start="49:15" pos:end="49:22"><name pos:start="49:15" pos:end="49:22">l1_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="50:5" pos:end="50:16">return <expr pos:start="50:12" pos:end="50:15"><operator pos:start="50:12" pos:end="50:12">-</operator><name pos:start="50:13" pos:end="50:15">EIO</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></function></unit>
