<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25701.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">scsi_disk_emulate_mode_sense</name><parameter_list pos:start="1:40" pos:end="1:72">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:51">SCSIDiskReq</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">r</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:71">outbuf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="187:1">{<block_content pos:start="5:5" pos:end="185:18">

    <decl_stmt pos:start="5:5" pos:end="5:66"><decl pos:start="5:5" pos:end="5:65"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SCSIDiskState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:65">= <expr pos:start="5:24" pos:end="5:65"><call pos:start="5:24" pos:end="5:65"><name pos:start="5:24" pos:end="5:32">DO_UPCAST</name><argument_list pos:start="5:33" pos:end="5:65">(<argument pos:start="5:34" pos:end="5:46"><expr pos:start="5:34" pos:end="5:46"><name pos:start="5:34" pos:end="5:46">SCSIDiskState</name></expr></argument>, <argument pos:start="5:49" pos:end="5:52"><expr pos:start="5:49" pos:end="5:52"><name pos:start="5:49" pos:end="5:52">qdev</name></expr></argument>, <argument pos:start="5:55" pos:end="5:64"><expr pos:start="5:55" pos:end="5:64"><name pos:start="5:55" pos:end="5:64"><name pos:start="5:55" pos:end="5:55">r</name><operator pos:start="5:56" pos:end="5:57">-&gt;</operator><name pos:start="5:58" pos:end="5:60">req</name><operator pos:start="5:61" pos:end="5:61">.</operator><name pos:start="5:62" pos:end="5:64">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:23">nb_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:12">dbd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">page</name></decl>, <decl pos:start="11:15" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:20">buflen</name></decl>, <decl pos:start="11:23" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:25">ret</name></decl>, <decl pos:start="11:28" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:28" pos:end="11:39">page_control</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:30">dev_specific_param</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:7">dbd</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <operator pos:start="19:11" pos:end="19:11">(</operator><name pos:start="19:12" pos:end="19:28"><name pos:start="19:12" pos:end="19:12">r</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:17">req</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:21">cmd</name><operator pos:start="19:22" pos:end="19:22">.</operator><name pos:start="19:23" pos:end="19:25">buf</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><literal type="number" pos:start="19:27" pos:end="19:27">1</literal></expr>]</index></name> <operator pos:start="19:30" pos:end="19:30">&amp;</operator> <literal type="number" pos:start="19:32" pos:end="19:34">0x8</literal><operator pos:start="19:35" pos:end="19:35">)</operator> <operator pos:start="19:37" pos:end="19:38">!=</operator> <literal type="number" pos:start="19:40" pos:end="19:40">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:8">page</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <name pos:start="21:12" pos:end="21:28"><name pos:start="21:12" pos:end="21:12">r</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:17">req</name><operator pos:start="21:18" pos:end="21:18">.</operator><name pos:start="21:19" pos:end="21:21">cmd</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:25">buf</name><index pos:start="21:26" pos:end="21:28">[<expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">2</literal></expr>]</index></name> <operator pos:start="21:30" pos:end="21:30">&amp;</operator> <literal type="number" pos:start="21:32" pos:end="21:35">0x3f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:16">page_control</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <operator pos:start="23:20" pos:end="23:20">(</operator><name pos:start="23:21" pos:end="23:37"><name pos:start="23:21" pos:end="23:21">r</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:26">req</name><operator pos:start="23:27" pos:end="23:27">.</operator><name pos:start="23:28" pos:end="23:30">cmd</name><operator pos:start="23:31" pos:end="23:31">.</operator><name pos:start="23:32" pos:end="23:34">buf</name><index pos:start="23:35" pos:end="23:37">[<expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">2</literal></expr>]</index></name> <operator pos:start="23:39" pos:end="23:39">&amp;</operator> <literal type="number" pos:start="23:41" pos:end="23:44">0xc0</literal><operator pos:start="23:45" pos:end="23:45">)</operator> <operator pos:start="23:47" pos:end="23:48">&gt;&gt;</operator> <literal type="number" pos:start="23:50" pos:end="23:50">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:89"><expr pos:start="25:5" pos:end="27:88"><call pos:start="25:5" pos:end="27:88"><name pos:start="25:5" pos:end="25:11">DPRINTF</name><argument_list pos:start="25:12" pos:end="27:88">(<argument pos:start="25:13" pos:end="25:67"><expr pos:start="25:13" pos:end="25:67"><literal type="string" pos:start="25:13" pos:end="25:67">"Mode Sense(%d) (page %d, xfer %zd, page_control %d)\n"</literal></expr></argument>,

        <argument pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:50"><ternary pos:start="27:9" pos:end="27:50"><condition pos:start="27:9" pos:end="27:43"><expr pos:start="27:9" pos:end="27:41"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:26"><name pos:start="27:10" pos:end="27:10">r</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:15">req</name><operator pos:start="27:16" pos:end="27:16">.</operator><name pos:start="27:17" pos:end="27:19">cmd</name><operator pos:start="27:20" pos:end="27:20">.</operator><name pos:start="27:21" pos:end="27:23">buf</name><index pos:start="27:24" pos:end="27:26">[<expr pos:start="27:25" pos:end="27:25"><literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr>]</index></name> <operator pos:start="27:28" pos:end="27:29">==</operator> <name pos:start="27:31" pos:end="27:40">MODE_SENSE</name><operator pos:start="27:41" pos:end="27:41">)</operator></expr> ?</condition><then pos:start="27:45" pos:end="27:45"> <expr pos:start="27:45" pos:end="27:45"><literal type="number" pos:start="27:45" pos:end="27:45">6</literal></expr> </then><else pos:start="27:47" pos:end="27:50">: <expr pos:start="27:49" pos:end="27:50"><literal type="number" pos:start="27:49" pos:end="27:50">10</literal></expr></else></ternary></expr></argument>, <argument pos:start="27:53" pos:end="27:56"><expr pos:start="27:53" pos:end="27:56"><name pos:start="27:53" pos:end="27:56">page</name></expr></argument>, <argument pos:start="27:59" pos:end="27:73"><expr pos:start="27:59" pos:end="27:73"><name pos:start="27:59" pos:end="27:73"><name pos:start="27:59" pos:end="27:59">r</name><operator pos:start="27:60" pos:end="27:61">-&gt;</operator><name pos:start="27:62" pos:end="27:64">req</name><operator pos:start="27:65" pos:end="27:65">.</operator><name pos:start="27:66" pos:end="27:68">cmd</name><operator pos:start="27:69" pos:end="27:69">.</operator><name pos:start="27:70" pos:end="27:73">xfer</name></name></expr></argument>, <argument pos:start="27:76" pos:end="27:87"><expr pos:start="27:76" pos:end="27:87"><name pos:start="27:76" pos:end="27:87">page_control</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><call pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:10">memset</name><argument_list pos:start="29:11" pos:end="29:38">(<argument pos:start="29:12" pos:end="29:17"><expr pos:start="29:12" pos:end="29:17"><name pos:start="29:12" pos:end="29:17">outbuf</name></expr></argument>, <argument pos:start="29:20" pos:end="29:20"><expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr></argument>, <argument pos:start="29:23" pos:end="29:37"><expr pos:start="29:23" pos:end="29:37"><name pos:start="29:23" pos:end="29:37"><name pos:start="29:23" pos:end="29:23">r</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:28">req</name><operator pos:start="29:29" pos:end="29:29">.</operator><name pos:start="29:30" pos:end="29:32">cmd</name><operator pos:start="29:33" pos:end="29:33">.</operator><name pos:start="29:34" pos:end="29:37">xfer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:15"><expr pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:5">p</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <name pos:start="31:9" pos:end="31:14">outbuf</name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="55:5"><if pos:start="35:5" pos:end="45:5">if <condition pos:start="35:8" pos:end="35:34">(<expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:15">qdev</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:20">type</name></name> <operator pos:start="35:22" pos:end="35:23">==</operator> <name pos:start="35:25" pos:end="35:33">TYPE_DISK</name></expr>)</condition> <block pos:start="35:36" pos:end="45:5">{<block_content pos:start="37:9" pos:end="43:9">

        <expr_stmt pos:start="37:9" pos:end="37:80"><expr pos:start="37:9" pos:end="37:79"><name pos:start="37:9" pos:end="37:26">dev_specific_param</name> <operator pos:start="37:28" pos:end="37:28">=</operator> <ternary pos:start="37:30" pos:end="37:79"><condition pos:start="37:30" pos:end="37:70"><expr pos:start="37:30" pos:end="37:68"><name pos:start="37:30" pos:end="37:40"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:40">features</name></name> <operator pos:start="37:42" pos:end="37:42">&amp;</operator> <operator pos:start="37:44" pos:end="37:44">(</operator><literal type="number" pos:start="37:45" pos:end="37:45">1</literal> <operator pos:start="37:47" pos:end="37:48">&lt;&lt;</operator> <name pos:start="37:50" pos:end="37:67">SCSI_DISK_F_DPOFUA</name><operator pos:start="37:68" pos:end="37:68">)</operator></expr> ?</condition><then pos:start="37:72" pos:end="37:75"> <expr pos:start="37:72" pos:end="37:75"><literal type="number" pos:start="37:72" pos:end="37:75">0x10</literal></expr> </then><else pos:start="37:77" pos:end="37:79">: <expr pos:start="37:79" pos:end="37:79"><literal type="number" pos:start="37:79" pos:end="37:79">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:47">(<expr pos:start="39:13" pos:end="39:46"><call pos:start="39:13" pos:end="39:46"><name pos:start="39:13" pos:end="39:29">bdrv_is_read_only</name><argument_list pos:start="39:30" pos:end="39:46">(<argument pos:start="39:31" pos:end="39:45"><expr pos:start="39:31" pos:end="39:45"><name pos:start="39:31" pos:end="39:45"><name pos:start="39:31" pos:end="39:31">s</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:37">qdev</name><operator pos:start="39:38" pos:end="39:38">.</operator><name pos:start="39:39" pos:end="39:42">conf</name><operator pos:start="39:43" pos:end="39:43">.</operator><name pos:start="39:44" pos:end="39:45">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:49" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:39">

            <expr_stmt pos:start="41:13" pos:end="41:39"><expr pos:start="41:13" pos:end="41:38"><name pos:start="41:13" pos:end="41:30">dev_specific_param</name> <operator pos:start="41:32" pos:end="41:33">|=</operator> <literal type="number" pos:start="41:35" pos:end="41:38">0x80</literal></expr>;</expr_stmt> <comment type="block" pos:start="41:41" pos:end="41:56">/* Readonly.  */</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="55:5">else <block pos:start="45:12" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:19">

        <comment type="block" pos:start="47:9" pos:end="49:56">/* MMC prescribes that CD/DVD drives have no block descriptors,

         * and defines no device-specific parameter.  */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:26">dev_specific_param</name> <operator pos:start="51:28" pos:end="51:28">=</operator> <literal type="number" pos:start="51:30" pos:end="51:33">0x00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:19"><expr pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:11">dbd</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:18">true</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="59:5" pos:end="79:5"><if pos:start="59:5" pos:end="69:5">if <condition pos:start="59:8" pos:end="59:40">(<expr pos:start="59:9" pos:end="59:39"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:9">r</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:14">req</name><operator pos:start="59:15" pos:end="59:15">.</operator><name pos:start="59:16" pos:end="59:18">cmd</name><operator pos:start="59:19" pos:end="59:19">.</operator><name pos:start="59:20" pos:end="59:22">buf</name><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><literal type="number" pos:start="59:24" pos:end="59:24">0</literal></expr>]</index></name> <operator pos:start="59:27" pos:end="59:28">==</operator> <name pos:start="59:30" pos:end="59:39">MODE_SENSE</name></expr>)</condition> <block pos:start="59:42" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:15">

        <expr_stmt pos:start="61:9" pos:end="61:17"><expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:12"><name pos:start="61:9" pos:end="61:9">p</name><index pos:start="61:10" pos:end="61:12">[<expr pos:start="61:11" pos:end="61:11"><literal type="number" pos:start="61:11" pos:end="61:11">1</literal></expr>]</index></name> <operator pos:start="61:14" pos:end="61:14">=</operator> <literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="61:19" pos:end="61:44">/* Default media type.  */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:12"><name pos:start="63:9" pos:end="63:9">p</name><index pos:start="63:10" pos:end="63:12">[<expr pos:start="63:11" pos:end="63:11"><literal type="number" pos:start="63:11" pos:end="63:11">2</literal></expr>]</index></name> <operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:33">dev_specific_param</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:17"><expr pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:12"><name pos:start="65:9" pos:end="65:9">p</name><index pos:start="65:10" pos:end="65:12">[<expr pos:start="65:11" pos:end="65:11"><literal type="number" pos:start="65:11" pos:end="65:11">3</literal></expr>]</index></name> <operator pos:start="65:14" pos:end="65:14">=</operator> <literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="65:19" pos:end="65:49">/* Block descriptor length.  */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:15"><expr pos:start="67:9" pos:end="67:14"><name pos:start="67:9" pos:end="67:9">p</name> <operator pos:start="67:11" pos:end="67:12">+=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="79:5">else <block pos:start="69:12" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:15"> <comment type="block" pos:start="69:14" pos:end="69:32">/* MODE_SENSE_10 */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:17"><expr pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:12"><name pos:start="71:9" pos:end="71:9">p</name><index pos:start="71:10" pos:end="71:12">[<expr pos:start="71:11" pos:end="71:11"><literal type="number" pos:start="71:11" pos:end="71:11">2</literal></expr>]</index></name> <operator pos:start="71:14" pos:end="71:14">=</operator> <literal type="number" pos:start="71:16" pos:end="71:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="71:19" pos:end="71:44">/* Default media type.  */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:34"><expr pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:12"><name pos:start="73:9" pos:end="73:9">p</name><index pos:start="73:10" pos:end="73:12">[<expr pos:start="73:11" pos:end="73:11"><literal type="number" pos:start="73:11" pos:end="73:11">3</literal></expr>]</index></name> <operator pos:start="73:14" pos:end="73:14">=</operator> <name pos:start="73:16" pos:end="73:33">dev_specific_param</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:24"><expr pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:12"><name pos:start="75:9" pos:end="75:9">p</name><index pos:start="75:10" pos:end="75:12">[<expr pos:start="75:11" pos:end="75:11"><literal type="number" pos:start="75:11" pos:end="75:11">6</literal></expr>]</index></name> <operator pos:start="75:14" pos:end="75:14">=</operator> <name pos:start="75:16" pos:end="75:19"><name pos:start="75:16" pos:end="75:16">p</name><index pos:start="75:17" pos:end="75:19">[<expr pos:start="75:18" pos:end="75:18"><literal type="number" pos:start="75:18" pos:end="75:18">7</literal></expr>]</index></name> <operator pos:start="75:21" pos:end="75:21">=</operator> <literal type="number" pos:start="75:23" pos:end="75:23">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="75:26" pos:end="75:56">/* Block descriptor length.  */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:15"><expr pos:start="77:9" pos:end="77:14"><name pos:start="77:9" pos:end="77:9">p</name> <operator pos:start="77:11" pos:end="77:12">+=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">8</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:52"><expr pos:start="83:5" pos:end="83:51"><call pos:start="83:5" pos:end="83:51"><name pos:start="83:5" pos:end="83:21">bdrv_get_geometry</name><argument_list pos:start="83:22" pos:end="83:51">(<argument pos:start="83:23" pos:end="83:37"><expr pos:start="83:23" pos:end="83:37"><name pos:start="83:23" pos:end="83:37"><name pos:start="83:23" pos:end="83:23">s</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:29">qdev</name><operator pos:start="83:30" pos:end="83:30">.</operator><name pos:start="83:31" pos:end="83:34">conf</name><operator pos:start="83:35" pos:end="83:35">.</operator><name pos:start="83:36" pos:end="83:37">bs</name></name></expr></argument>, <argument pos:start="83:40" pos:end="83:50"><expr pos:start="83:40" pos:end="83:50"><operator pos:start="83:40" pos:end="83:40">&amp;</operator><name pos:start="83:41" pos:end="83:50">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="123:5"><if pos:start="85:5" pos:end="123:5">if <condition pos:start="85:8" pos:end="85:27">(<expr pos:start="85:9" pos:end="85:26"><operator pos:start="85:9" pos:end="85:9">!</operator><name pos:start="85:10" pos:end="85:12">dbd</name> <operator pos:start="85:14" pos:end="85:15">&amp;&amp;</operator> <name pos:start="85:17" pos:end="85:26">nb_sectors</name></expr>)</condition> <block pos:start="85:29" pos:end="123:5">{<block_content pos:start="87:9" pos:end="121:15">

        <if_stmt pos:start="87:9" pos:end="95:9"><if pos:start="87:9" pos:end="91:9">if <condition pos:start="87:12" pos:end="87:44">(<expr pos:start="87:13" pos:end="87:43"><name pos:start="87:13" pos:end="87:29"><name pos:start="87:13" pos:end="87:13">r</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:18">req</name><operator pos:start="87:19" pos:end="87:19">.</operator><name pos:start="87:20" pos:end="87:22">cmd</name><operator pos:start="87:23" pos:end="87:23">.</operator><name pos:start="87:24" pos:end="87:26">buf</name><index pos:start="87:27" pos:end="87:29">[<expr pos:start="87:28" pos:end="87:28"><literal type="number" pos:start="87:28" pos:end="87:28">0</literal></expr>]</index></name> <operator pos:start="87:31" pos:end="87:32">==</operator> <name pos:start="87:34" pos:end="87:43">MODE_SENSE</name></expr>)</condition> <block pos:start="87:46" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:26">

            <expr_stmt pos:start="89:13" pos:end="89:26"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:18">outbuf</name><index pos:start="89:19" pos:end="89:21">[<expr pos:start="89:20" pos:end="89:20"><literal type="number" pos:start="89:20" pos:end="89:20">3</literal></expr>]</index></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <literal type="number" pos:start="89:25" pos:end="89:25">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="89:28" pos:end="89:57">/* Block descriptor length  */</comment>

        </block_content>}</block></if> <else pos:start="91:11" pos:end="95:9">else <block pos:start="91:16" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:26"> <comment type="block" pos:start="91:18" pos:end="91:36">/* MODE_SENSE_10 */</comment>

            <expr_stmt pos:start="93:13" pos:end="93:26"><expr pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:18">outbuf</name><index pos:start="93:19" pos:end="93:21">[<expr pos:start="93:20" pos:end="93:20"><literal type="number" pos:start="93:20" pos:end="93:20">7</literal></expr>]</index></name> <operator pos:start="93:23" pos:end="93:23">=</operator> <literal type="number" pos:start="93:25" pos:end="93:25">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="93:28" pos:end="93:57">/* Block descriptor length  */</comment>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:48"><expr pos:start="97:9" pos:end="97:47"><name pos:start="97:9" pos:end="97:18">nb_sectors</name> <operator pos:start="97:20" pos:end="97:21">/=</operator> <operator pos:start="97:23" pos:end="97:23">(</operator><name pos:start="97:24" pos:end="97:40"><name pos:start="97:24" pos:end="97:24">s</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:30">qdev</name><operator pos:start="97:31" pos:end="97:31">.</operator><name pos:start="97:32" pos:end="97:40">blocksize</name></name> <operator pos:start="97:42" pos:end="97:42">/</operator> <literal type="number" pos:start="97:44" pos:end="97:46">512</literal><operator pos:start="97:47" pos:end="97:47">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="103:9"><if pos:start="99:9" pos:end="103:9">if <condition pos:start="99:12" pos:end="99:34">(<expr pos:start="99:13" pos:end="99:33"><name pos:start="99:13" pos:end="99:22">nb_sectors</name> <operator pos:start="99:24" pos:end="99:24">&gt;</operator> <literal type="number" pos:start="99:26" pos:end="99:33">0xffffff</literal></expr>)</condition> <block pos:start="99:36" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:27">

            <expr_stmt pos:start="101:13" pos:end="101:27"><expr pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:22">nb_sectors</name> <operator pos:start="101:24" pos:end="101:24">=</operator> <literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:17"><expr pos:start="105:9" pos:end="105:16"><name pos:start="105:9" pos:end="105:12"><name pos:start="105:9" pos:end="105:9">p</name><index pos:start="105:10" pos:end="105:12">[<expr pos:start="105:11" pos:end="105:11"><literal type="number" pos:start="105:11" pos:end="105:11">0</literal></expr>]</index></name> <operator pos:start="105:14" pos:end="105:14">=</operator> <literal type="number" pos:start="105:16" pos:end="105:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="105:19" pos:end="105:42">/* media density code */</comment>

        <expr_stmt pos:start="107:9" pos:end="107:41"><expr pos:start="107:9" pos:end="107:40"><name pos:start="107:9" pos:end="107:12"><name pos:start="107:9" pos:end="107:9">p</name><index pos:start="107:10" pos:end="107:12">[<expr pos:start="107:11" pos:end="107:11"><literal type="number" pos:start="107:11" pos:end="107:11">1</literal></expr>]</index></name> <operator pos:start="107:14" pos:end="107:14">=</operator> <operator pos:start="107:16" pos:end="107:16">(</operator><name pos:start="107:17" pos:end="107:26">nb_sectors</name> <operator pos:start="107:28" pos:end="107:29">&gt;&gt;</operator> <literal type="number" pos:start="107:31" pos:end="107:32">16</literal><operator pos:start="107:33" pos:end="107:33">)</operator> <operator pos:start="107:35" pos:end="107:35">&amp;</operator> <literal type="number" pos:start="107:37" pos:end="107:40">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:40"><expr pos:start="109:9" pos:end="109:39"><name pos:start="109:9" pos:end="109:12"><name pos:start="109:9" pos:end="109:9">p</name><index pos:start="109:10" pos:end="109:12">[<expr pos:start="109:11" pos:end="109:11"><literal type="number" pos:start="109:11" pos:end="109:11">2</literal></expr>]</index></name> <operator pos:start="109:14" pos:end="109:14">=</operator> <operator pos:start="109:16" pos:end="109:16">(</operator><name pos:start="109:17" pos:end="109:26">nb_sectors</name> <operator pos:start="109:28" pos:end="109:29">&gt;&gt;</operator> <literal type="number" pos:start="109:31" pos:end="109:31">8</literal><operator pos:start="109:32" pos:end="109:32">)</operator> <operator pos:start="109:34" pos:end="109:34">&amp;</operator> <literal type="number" pos:start="109:36" pos:end="109:39">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:33"><expr pos:start="111:9" pos:end="111:32"><name pos:start="111:9" pos:end="111:12"><name pos:start="111:9" pos:end="111:9">p</name><index pos:start="111:10" pos:end="111:12">[<expr pos:start="111:11" pos:end="111:11"><literal type="number" pos:start="111:11" pos:end="111:11">3</literal></expr>]</index></name> <operator pos:start="111:14" pos:end="111:14">=</operator> <name pos:start="111:16" pos:end="111:25">nb_sectors</name> <operator pos:start="111:27" pos:end="111:27">&amp;</operator> <literal type="number" pos:start="111:29" pos:end="111:32">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:17"><expr pos:start="113:9" pos:end="113:16"><name pos:start="113:9" pos:end="113:12"><name pos:start="113:9" pos:end="113:9">p</name><index pos:start="113:10" pos:end="113:12">[<expr pos:start="113:11" pos:end="113:11"><literal type="number" pos:start="113:11" pos:end="113:11">4</literal></expr>]</index></name> <operator pos:start="113:14" pos:end="113:14">=</operator> <literal type="number" pos:start="113:16" pos:end="113:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="113:19" pos:end="113:32">/* reserved */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:17"><expr pos:start="115:9" pos:end="115:16"><name pos:start="115:9" pos:end="115:12"><name pos:start="115:9" pos:end="115:9">p</name><index pos:start="115:10" pos:end="115:12">[<expr pos:start="115:11" pos:end="115:11"><literal type="number" pos:start="115:11" pos:end="115:11">5</literal></expr>]</index></name> <operator pos:start="115:14" pos:end="115:14">=</operator> <literal type="number" pos:start="115:16" pos:end="115:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="115:19" pos:end="115:62">/* bytes 5-7 are the sector size in bytes */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:38"><expr pos:start="117:9" pos:end="117:37"><name pos:start="117:9" pos:end="117:12"><name pos:start="117:9" pos:end="117:9">p</name><index pos:start="117:10" pos:end="117:12">[<expr pos:start="117:11" pos:end="117:11"><literal type="number" pos:start="117:11" pos:end="117:11">6</literal></expr>]</index></name> <operator pos:start="117:14" pos:end="117:14">=</operator> <name pos:start="117:16" pos:end="117:32"><name pos:start="117:16" pos:end="117:16">s</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:22">qdev</name><operator pos:start="117:23" pos:end="117:23">.</operator><name pos:start="117:24" pos:end="117:32">blocksize</name></name> <operator pos:start="117:34" pos:end="117:35">&gt;&gt;</operator> <literal type="number" pos:start="117:37" pos:end="117:37">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:17"><expr pos:start="119:9" pos:end="119:16"><name pos:start="119:9" pos:end="119:12"><name pos:start="119:9" pos:end="119:9">p</name><index pos:start="119:10" pos:end="119:12">[<expr pos:start="119:11" pos:end="119:11"><literal type="number" pos:start="119:11" pos:end="119:11">7</literal></expr>]</index></name> <operator pos:start="119:14" pos:end="119:14">=</operator> <literal type="number" pos:start="119:16" pos:end="119:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:15"><expr pos:start="121:9" pos:end="121:14"><name pos:start="121:9" pos:end="121:9">p</name> <operator pos:start="121:11" pos:end="121:12">+=</operator> <literal type="number" pos:start="121:14" pos:end="121:14">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="127:5" pos:end="135:5"><if pos:start="127:5" pos:end="135:5">if <condition pos:start="127:8" pos:end="127:26">(<expr pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:20">page_control</name> <operator pos:start="127:22" pos:end="127:23">==</operator> <literal type="number" pos:start="127:25" pos:end="127:25">3</literal></expr>)</condition> <block pos:start="127:28" pos:end="135:5">{<block_content pos:start="131:9" pos:end="133:18">

        <comment type="block" pos:start="129:9" pos:end="129:26">/* Saved Values */</comment>

        <expr_stmt pos:start="131:9" pos:end="131:73"><expr pos:start="131:9" pos:end="131:72"><call pos:start="131:9" pos:end="131:72"><name pos:start="131:9" pos:end="131:28">scsi_check_condition</name><argument_list pos:start="131:29" pos:end="131:72">(<argument pos:start="131:30" pos:end="131:30"><expr pos:start="131:30" pos:end="131:30"><name pos:start="131:30" pos:end="131:30">r</name></expr></argument>, <argument pos:start="131:33" pos:end="131:71"><expr pos:start="131:33" pos:end="131:71"><call pos:start="131:33" pos:end="131:71"><name pos:start="131:33" pos:end="131:42">SENSE_CODE</name><argument_list pos:start="131:43" pos:end="131:71">(<argument pos:start="131:44" pos:end="131:70"><expr pos:start="131:44" pos:end="131:70"><name pos:start="131:44" pos:end="131:70">SAVING_PARAMS_NOT_SUPPORTED</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="133:9" pos:end="133:18">return <expr pos:start="133:16" pos:end="133:17"><operator pos:start="133:16" pos:end="133:16">-</operator><literal type="number" pos:start="133:17" pos:end="133:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="139:5" pos:end="157:5"><if pos:start="139:5" pos:end="147:5">if <condition pos:start="139:8" pos:end="139:21">(<expr pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:12">page</name> <operator pos:start="139:14" pos:end="139:15">==</operator> <literal type="number" pos:start="139:17" pos:end="139:20">0x3f</literal></expr>)</condition> <block pos:start="139:23" pos:end="147:5">{<block_content pos:start="141:9" pos:end="145:9">

        <for pos:start="141:9" pos:end="145:9">for <control pos:start="141:13" pos:end="141:44">(<init pos:start="141:14" pos:end="141:22"><expr pos:start="141:14" pos:end="141:21"><name pos:start="141:14" pos:end="141:17">page</name> <operator pos:start="141:19" pos:end="141:19">=</operator> <literal type="number" pos:start="141:21" pos:end="141:21">0</literal></expr>;</init> <condition pos:start="141:24" pos:end="141:36"><expr pos:start="141:24" pos:end="141:35"><name pos:start="141:24" pos:end="141:27">page</name> <operator pos:start="141:29" pos:end="141:30">&lt;=</operator> <literal type="number" pos:start="141:32" pos:end="141:35">0x3e</literal></expr>;</condition> <incr pos:start="141:38" pos:end="141:43"><expr pos:start="141:38" pos:end="141:43"><name pos:start="141:38" pos:end="141:41">page</name><operator pos:start="141:42" pos:end="141:43">++</operator></expr></incr>)</control> <block pos:start="141:46" pos:end="145:9">{<block_content pos:start="143:13" pos:end="143:55">

            <expr_stmt pos:start="143:13" pos:end="143:55"><expr pos:start="143:13" pos:end="143:54"><call pos:start="143:13" pos:end="143:54"><name pos:start="143:13" pos:end="143:27">mode_sense_page</name><argument_list pos:start="143:28" pos:end="143:54">(<argument pos:start="143:29" pos:end="143:29"><expr pos:start="143:29" pos:end="143:29"><name pos:start="143:29" pos:end="143:29">s</name></expr></argument>, <argument pos:start="143:32" pos:end="143:35"><expr pos:start="143:32" pos:end="143:35"><name pos:start="143:32" pos:end="143:35">page</name></expr></argument>, <argument pos:start="143:38" pos:end="143:39"><expr pos:start="143:38" pos:end="143:39"><operator pos:start="143:38" pos:end="143:38">&amp;</operator><name pos:start="143:39" pos:end="143:39">p</name></expr></argument>, <argument pos:start="143:42" pos:end="143:53"><expr pos:start="143:42" pos:end="143:53"><name pos:start="143:42" pos:end="143:53">page_control</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="147:7" pos:end="157:5">else <block pos:start="147:12" pos:end="157:5">{<block_content pos:start="149:9" pos:end="155:9">

        <expr_stmt pos:start="149:9" pos:end="149:57"><expr pos:start="149:9" pos:end="149:56"><name pos:start="149:9" pos:end="149:11">ret</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <call pos:start="149:15" pos:end="149:56"><name pos:start="149:15" pos:end="149:29">mode_sense_page</name><argument_list pos:start="149:30" pos:end="149:56">(<argument pos:start="149:31" pos:end="149:31"><expr pos:start="149:31" pos:end="149:31"><name pos:start="149:31" pos:end="149:31">s</name></expr></argument>, <argument pos:start="149:34" pos:end="149:37"><expr pos:start="149:34" pos:end="149:37"><name pos:start="149:34" pos:end="149:37">page</name></expr></argument>, <argument pos:start="149:40" pos:end="149:41"><expr pos:start="149:40" pos:end="149:41"><operator pos:start="149:40" pos:end="149:40">&amp;</operator><name pos:start="149:41" pos:end="149:41">p</name></expr></argument>, <argument pos:start="149:44" pos:end="149:55"><expr pos:start="149:44" pos:end="149:55"><name pos:start="149:44" pos:end="149:55">page_control</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="151:9" pos:end="155:9"><if pos:start="151:9" pos:end="155:9">if <condition pos:start="151:12" pos:end="151:22">(<expr pos:start="151:13" pos:end="151:21"><name pos:start="151:13" pos:end="151:15">ret</name> <operator pos:start="151:17" pos:end="151:18">==</operator> <operator pos:start="151:20" pos:end="151:20">-</operator><literal type="number" pos:start="151:21" pos:end="151:21">1</literal></expr>)</condition> <block pos:start="151:24" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:22">

            <return pos:start="153:13" pos:end="153:22">return <expr pos:start="153:20" pos:end="153:21"><operator pos:start="153:20" pos:end="153:20">-</operator><literal type="number" pos:start="153:21" pos:end="153:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:24"><expr pos:start="161:5" pos:end="161:23"><name pos:start="161:5" pos:end="161:10">buflen</name> <operator pos:start="161:12" pos:end="161:12">=</operator> <name pos:start="161:14" pos:end="161:14">p</name> <operator pos:start="161:16" pos:end="161:16">-</operator> <name pos:start="161:18" pos:end="161:23">outbuf</name></expr>;</expr_stmt>

    <comment type="block" pos:start="163:5" pos:end="171:7">/*

     * The mode data length field specifies the length in bytes of the

     * following data that is available to be transferred. The mode data

     * length does not include itself.

     */</comment>

    <if_stmt pos:start="173:5" pos:end="183:5"><if pos:start="173:5" pos:end="177:5">if <condition pos:start="173:8" pos:end="173:40">(<expr pos:start="173:9" pos:end="173:39"><name pos:start="173:9" pos:end="173:25"><name pos:start="173:9" pos:end="173:9">r</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:14">req</name><operator pos:start="173:15" pos:end="173:15">.</operator><name pos:start="173:16" pos:end="173:18">cmd</name><operator pos:start="173:19" pos:end="173:19">.</operator><name pos:start="173:20" pos:end="173:22">buf</name><index pos:start="173:23" pos:end="173:25">[<expr pos:start="173:24" pos:end="173:24"><literal type="number" pos:start="173:24" pos:end="173:24">0</literal></expr>]</index></name> <operator pos:start="173:27" pos:end="173:28">==</operator> <name pos:start="173:30" pos:end="173:39">MODE_SENSE</name></expr>)</condition> <block pos:start="173:42" pos:end="177:5">{<block_content pos:start="175:9" pos:end="175:31">

        <expr_stmt pos:start="175:9" pos:end="175:31"><expr pos:start="175:9" pos:end="175:30"><name pos:start="175:9" pos:end="175:17"><name pos:start="175:9" pos:end="175:14">outbuf</name><index pos:start="175:15" pos:end="175:17">[<expr pos:start="175:16" pos:end="175:16"><literal type="number" pos:start="175:16" pos:end="175:16">0</literal></expr>]</index></name> <operator pos:start="175:19" pos:end="175:19">=</operator> <name pos:start="175:21" pos:end="175:26">buflen</name> <operator pos:start="175:28" pos:end="175:28">-</operator> <literal type="number" pos:start="175:30" pos:end="175:30">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="183:5">else <block pos:start="177:12" pos:end="183:5">{<block_content pos:start="179:9" pos:end="181:40"> <comment type="block" pos:start="177:14" pos:end="177:32">/* MODE_SENSE_10 */</comment>

        <expr_stmt pos:start="179:9" pos:end="179:47"><expr pos:start="179:9" pos:end="179:46"><name pos:start="179:9" pos:end="179:17"><name pos:start="179:9" pos:end="179:14">outbuf</name><index pos:start="179:15" pos:end="179:17">[<expr pos:start="179:16" pos:end="179:16"><literal type="number" pos:start="179:16" pos:end="179:16">0</literal></expr>]</index></name> <operator pos:start="179:19" pos:end="179:19">=</operator> <operator pos:start="179:21" pos:end="179:21">(</operator><operator pos:start="179:22" pos:end="179:22">(</operator><name pos:start="179:23" pos:end="179:28">buflen</name> <operator pos:start="179:30" pos:end="179:30">-</operator> <literal type="number" pos:start="179:32" pos:end="179:32">2</literal><operator pos:start="179:33" pos:end="179:33">)</operator> <operator pos:start="179:35" pos:end="179:36">&gt;&gt;</operator> <literal type="number" pos:start="179:38" pos:end="179:38">8</literal><operator pos:start="179:39" pos:end="179:39">)</operator> <operator pos:start="179:41" pos:end="179:41">&amp;</operator> <literal type="number" pos:start="179:43" pos:end="179:46">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:40"><expr pos:start="181:9" pos:end="181:39"><name pos:start="181:9" pos:end="181:17"><name pos:start="181:9" pos:end="181:14">outbuf</name><index pos:start="181:15" pos:end="181:17">[<expr pos:start="181:16" pos:end="181:16"><literal type="number" pos:start="181:16" pos:end="181:16">1</literal></expr>]</index></name> <operator pos:start="181:19" pos:end="181:19">=</operator> <operator pos:start="181:21" pos:end="181:21">(</operator><name pos:start="181:22" pos:end="181:27">buflen</name> <operator pos:start="181:29" pos:end="181:29">-</operator> <literal type="number" pos:start="181:31" pos:end="181:31">2</literal><operator pos:start="181:32" pos:end="181:32">)</operator> <operator pos:start="181:34" pos:end="181:34">&amp;</operator> <literal type="number" pos:start="181:36" pos:end="181:39">0xff</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="185:5" pos:end="185:18">return <expr pos:start="185:12" pos:end="185:17"><name pos:start="185:12" pos:end="185:17">buflen</name></expr>;</return>

</block_content>}</block></function>
</unit>
