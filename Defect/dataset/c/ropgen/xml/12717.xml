<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12717.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">usb_qdev_init</name><parameter_list pos:start="1:25" pos:end="1:43">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:36">DeviceState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">qdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">USBDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">dev</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><call pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:31">USB_DEVICE</name><argument_list pos:start="5:32" pos:end="5:37">(<argument pos:start="5:33" pos:end="5:36"><expr pos:start="5:33" pos:end="5:36"><name pos:start="5:33" pos:end="5:36">qdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:46"><expr pos:start="11:5" pos:end="13:45"><call pos:start="11:5" pos:end="13:45"><name pos:start="11:5" pos:end="11:11">pstrcpy</name><argument_list pos:start="11:12" pos:end="13:45">(<argument pos:start="11:13" pos:end="11:29"><expr pos:start="11:13" pos:end="11:29"><name pos:start="11:13" pos:end="11:29"><name pos:start="11:13" pos:end="11:15">dev</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:29">product_desc</name></name></expr></argument>, <argument pos:start="11:32" pos:end="11:56"><expr pos:start="11:32" pos:end="11:56"><sizeof pos:start="11:32" pos:end="11:56">sizeof<argument_list pos:start="11:38" pos:end="11:56">(<argument pos:start="11:39" pos:end="11:55"><expr pos:start="11:39" pos:end="11:55"><name pos:start="11:39" pos:end="11:55"><name pos:start="11:39" pos:end="11:41">dev</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:55">product_desc</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

            <argument pos:start="13:13" pos:end="13:44"><expr pos:start="13:13" pos:end="13:44"><call pos:start="13:13" pos:end="13:44"><name pos:start="13:13" pos:end="13:39">usb_device_get_product_desc</name><argument_list pos:start="13:40" pos:end="13:44">(<argument pos:start="13:41" pos:end="13:43"><expr pos:start="13:41" pos:end="13:43"><name pos:start="13:41" pos:end="13:43">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:7">dev</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:20">auto_attach</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <literal type="number" pos:start="15:24" pos:end="15:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><call pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:14">QLIST_INIT</name><argument_list pos:start="17:15" pos:end="17:29">(<argument pos:start="17:16" pos:end="17:28"><expr pos:start="17:16" pos:end="17:28"><operator pos:start="17:16" pos:end="17:16">&amp;</operator><name pos:start="17:17" pos:end="17:28"><name pos:start="17:17" pos:end="17:19">dev</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:28">strings</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:21"><expr pos:start="19:5" pos:end="19:20"><call pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:15">usb_ep_init</name><argument_list pos:start="19:16" pos:end="19:20">(<argument pos:start="19:17" pos:end="19:19"><expr pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:6">rc</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:28"><name pos:start="21:10" pos:end="21:23">usb_claim_port</name><argument_list pos:start="21:24" pos:end="21:28">(<argument pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:27">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:10">rc</name> <operator pos:start="23:12" pos:end="23:13">!=</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition> <block pos:start="23:18" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><name pos:start="25:16" pos:end="25:17">rc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:6">rc</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:29"><name pos:start="29:10" pos:end="29:24">usb_device_init</name><argument_list pos:start="29:25" pos:end="29:29">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:10">rc</name> <operator pos:start="31:12" pos:end="31:13">!=</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>)</condition> <block pos:start="31:18" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><call pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:24">usb_release_port</name><argument_list pos:start="33:25" pos:end="33:29">(<argument pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><name pos:start="35:16" pos:end="35:17">rc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="51:5"><if pos:start="39:5" pos:end="51:5">if <condition pos:start="39:8" pos:end="39:25">(<expr pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:11">dev</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:24">auto_attach</name></name></expr>)</condition> <block pos:start="39:27" pos:end="51:5">{<block_content pos:start="41:9" pos:end="49:9">

        <expr_stmt pos:start="41:9" pos:end="41:36"><expr pos:start="41:9" pos:end="41:35"><name pos:start="41:9" pos:end="41:10">rc</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:35"><name pos:start="41:14" pos:end="41:30">usb_device_attach</name><argument_list pos:start="41:31" pos:end="41:35">(<argument pos:start="41:32" pos:end="41:34"><expr pos:start="41:32" pos:end="41:34"><name pos:start="41:32" pos:end="41:34">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:20">(<expr pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:14">rc</name> <operator pos:start="43:16" pos:end="43:17">!=</operator> <literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr>)</condition> <block pos:start="43:22" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:22">

            <expr_stmt pos:start="45:13" pos:end="45:32"><expr pos:start="45:13" pos:end="45:31"><call pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:25">usb_qdev_exit</name><argument_list pos:start="45:26" pos:end="45:31">(<argument pos:start="45:27" pos:end="45:30"><expr pos:start="45:27" pos:end="45:30"><name pos:start="45:27" pos:end="45:30">qdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:22">return <expr pos:start="47:20" pos:end="47:21"><name pos:start="47:20" pos:end="47:21">rc</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
