<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16730.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">nbd_co_request</name><parameter_list pos:start="1:26" pos:end="5:45">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:45"><decl pos:start="3:27" pos:end="3:45"><type pos:start="3:27" pos:end="3:45"><name pos:start="3:27" pos:end="3:36">NBDRequest</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:45">request</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:44"><decl pos:start="5:27" pos:end="5:44"><type pos:start="5:27" pos:end="5:44"><name pos:start="5:27" pos:end="5:38">QEMUIOVector</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:44">qiov</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="35:1">{<block_content pos:start="9:5" pos:end="33:77">

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">NBDClientSession</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:28">client</name> <init pos:start="9:30" pos:end="9:57">= <expr pos:start="9:32" pos:end="9:57"><call pos:start="9:32" pos:end="9:57"><name pos:start="9:32" pos:end="9:53">nbd_get_client_session</name><argument_list pos:start="9:54" pos:end="9:57">(<argument pos:start="9:55" pos:end="9:56"><expr pos:start="9:55" pos:end="9:56"><name pos:start="9:55" pos:end="9:56">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:42"><expr pos:start="15:5" pos:end="17:41"><call pos:start="15:5" pos:end="17:41"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="17:41">(<argument pos:start="15:12" pos:end="17:40"><expr pos:start="15:12" pos:end="17:40"><operator pos:start="15:12" pos:end="15:12">!</operator><name pos:start="15:13" pos:end="15:16">qiov</name> <operator pos:start="15:18" pos:end="15:19">||</operator> <name pos:start="15:21" pos:end="15:33"><name pos:start="15:21" pos:end="15:27">request</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:33">type</name></name> <operator pos:start="15:35" pos:end="15:36">==</operator> <name pos:start="15:38" pos:end="15:50">NBD_CMD_WRITE</name> <operator pos:start="15:52" pos:end="15:53">||</operator>

           <name pos:start="17:12" pos:end="17:24"><name pos:start="17:12" pos:end="17:18">request</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:24">type</name></name> <operator pos:start="17:26" pos:end="17:27">==</operator> <name pos:start="17:29" pos:end="17:40">NBD_CMD_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="21:76"><expr pos:start="19:5" pos:end="21:75"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="21:75"><name pos:start="19:11" pos:end="19:29">nbd_co_send_request</name><argument_list pos:start="19:30" pos:end="21:75">(<argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><name pos:start="19:31" pos:end="19:32">bs</name></expr></argument>, <argument pos:start="19:35" pos:end="19:41"><expr pos:start="19:35" pos:end="19:41"><name pos:start="19:35" pos:end="19:41">request</name></expr></argument>,

                              <argument pos:start="21:31" pos:end="21:74"><expr pos:start="21:31" pos:end="21:74"><ternary pos:start="21:31" pos:end="21:74"><condition pos:start="21:31" pos:end="21:62"><expr pos:start="21:31" pos:end="21:60"><name pos:start="21:31" pos:end="21:43"><name pos:start="21:31" pos:end="21:37">request</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:43">type</name></name> <operator pos:start="21:45" pos:end="21:46">==</operator> <name pos:start="21:48" pos:end="21:60">NBD_CMD_WRITE</name></expr> ?</condition><then pos:start="21:64" pos:end="21:67"> <expr pos:start="21:64" pos:end="21:67"><name pos:start="21:64" pos:end="21:67">qiov</name></expr> </then><else pos:start="21:69" pos:end="21:74">: <expr pos:start="21:71" pos:end="21:74"><name pos:start="21:71" pos:end="21:74">NULL</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition> <block pos:start="23:18" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:19">

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="31:5" pos:end="33:77">return <expr pos:start="31:12" pos:end="33:76"><call pos:start="31:12" pos:end="33:76"><name pos:start="31:12" pos:end="31:31">nbd_co_receive_reply</name><argument_list pos:start="31:32" pos:end="33:76">(<argument pos:start="31:33" pos:end="31:38"><expr pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:38">client</name></expr></argument>, <argument pos:start="31:41" pos:end="31:47"><expr pos:start="31:41" pos:end="31:47"><name pos:start="31:41" pos:end="31:47">request</name></expr></argument>,

                                <argument pos:start="33:33" pos:end="33:75"><expr pos:start="33:33" pos:end="33:75"><ternary pos:start="33:33" pos:end="33:75"><condition pos:start="33:33" pos:end="33:63"><expr pos:start="33:33" pos:end="33:61"><name pos:start="33:33" pos:end="33:45"><name pos:start="33:33" pos:end="33:39">request</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:45">type</name></name> <operator pos:start="33:47" pos:end="33:48">==</operator> <name pos:start="33:50" pos:end="33:61">NBD_CMD_READ</name></expr> ?</condition><then pos:start="33:65" pos:end="33:68"> <expr pos:start="33:65" pos:end="33:68"><name pos:start="33:65" pos:end="33:68">qiov</name></expr> </then><else pos:start="33:70" pos:end="33:75">: <expr pos:start="33:72" pos:end="33:75"><name pos:start="33:72" pos:end="33:75">NULL</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
