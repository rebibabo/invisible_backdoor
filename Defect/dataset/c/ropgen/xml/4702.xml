<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4702.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">mov_write_identification</name><parameter_list pos:start="1:36" pos:end="1:72">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><name pos:start="1:37" pos:end="1:47">AVIOContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">pb</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:68">AVFormatContext</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:71">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MOVMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">mov</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:29"><expr pos:start="11:5" pos:end="11:28"><call pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:22">mov_write_ftyp_tag</name><argument_list pos:start="11:23" pos:end="11:28">(<argument pos:start="11:24" pos:end="11:25"><expr pos:start="11:24" pos:end="11:25"><name pos:start="11:24" pos:end="11:25">pb</name></expr></argument>,<argument pos:start="11:27" pos:end="11:27"><expr pos:start="11:27" pos:end="11:27"><name pos:start="11:27" pos:end="11:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="47:5"><if pos:start="13:5" pos:end="47:5">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:11">mov</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:17">mode</name></name> <operator pos:start="13:19" pos:end="13:20">==</operator> <name pos:start="13:22" pos:end="13:29">MODE_PSP</name></expr>)</condition> <block pos:start="13:32" pos:end="47:5">{<block_content pos:start="15:9" pos:end="45:38">

        <decl_stmt pos:start="15:9" pos:end="15:77"><decl pos:start="15:9" pos:end="15:32"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:28">video_streams_nb</name> <init pos:start="15:30" pos:end="15:32">= <expr pos:start="15:32" pos:end="15:32"><literal type="number" pos:start="15:32" pos:end="15:32">0</literal></expr></init></decl>, <decl pos:start="15:35" pos:end="15:54"><type ref="prev" pos:start="15:9" pos:end="15:11"/><name pos:start="15:35" pos:end="15:50">audio_streams_nb</name> <init pos:start="15:52" pos:end="15:54">= <expr pos:start="15:54" pos:end="15:54"><literal type="number" pos:start="15:54" pos:end="15:54">0</literal></expr></init></decl>, <decl pos:start="15:57" pos:end="15:76"><type ref="prev" pos:start="15:9" pos:end="15:11"/><name pos:start="15:57" pos:end="15:72">other_streams_nb</name> <init pos:start="15:74" pos:end="15:76">= <expr pos:start="15:76" pos:end="15:76"><literal type="number" pos:start="15:76" pos:end="15:76">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="17:9" pos:end="33:13">for <control pos:start="17:13" pos:end="17:43">(<init pos:start="17:14" pos:end="17:19"><expr pos:start="17:14" pos:end="17:18"><name pos:start="17:14" pos:end="17:14">i</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</init> <condition pos:start="17:21" pos:end="17:38"><expr pos:start="17:21" pos:end="17:37"><name pos:start="17:21" pos:end="17:21">i</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <name pos:start="17:25" pos:end="17:37"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:37">nb_streams</name></name></expr>;</condition> <incr pos:start="17:40" pos:end="17:42"><expr pos:start="17:40" pos:end="17:42"><name pos:start="17:40" pos:end="17:40">i</name><operator pos:start="17:41" pos:end="17:42">++</operator></expr></incr>)</control> <block pos:start="17:45" pos:end="33:13">{<block_content pos:start="19:13" pos:end="31:35">

            <decl_stmt pos:start="19:13" pos:end="19:41"><decl pos:start="19:13" pos:end="19:40"><type pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:20">AVStream</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:24">st</name> <init pos:start="19:26" pos:end="19:40">= <expr pos:start="19:28" pos:end="19:40"><name pos:start="19:28" pos:end="19:40"><name pos:start="19:28" pos:end="19:28">s</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:37">streams</name><index pos:start="19:38" pos:end="19:40">[<expr pos:start="19:39" pos:end="19:39"><name pos:start="19:39" pos:end="19:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="21:13" pos:end="31:35"><if pos:start="21:13" pos:end="23:35">if <condition pos:start="21:16" pos:end="21:63">(<expr pos:start="21:17" pos:end="21:62"><name pos:start="21:17" pos:end="21:40"><name pos:start="21:17" pos:end="21:18">st</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:28">codecpar</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:40">codec_type</name></name> <operator pos:start="21:42" pos:end="21:43">==</operator> <name pos:start="21:45" pos:end="21:62">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:35"><block_content pos:start="23:17" pos:end="23:35">

                <expr_stmt pos:start="23:17" pos:end="23:35"><expr pos:start="23:17" pos:end="23:34"><name pos:start="23:17" pos:end="23:32">video_streams_nb</name><operator pos:start="23:33" pos:end="23:34">++</operator></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="25:13" pos:end="27:35">else if <condition pos:start="25:21" pos:end="25:68">(<expr pos:start="25:22" pos:end="25:67"><name pos:start="25:22" pos:end="25:45"><name pos:start="25:22" pos:end="25:23">st</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:33">codecpar</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:45">codec_type</name></name> <operator pos:start="25:47" pos:end="25:48">==</operator> <name pos:start="25:50" pos:end="25:67">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:35"><block_content pos:start="27:17" pos:end="27:35">

                <expr_stmt pos:start="27:17" pos:end="27:35"><expr pos:start="27:17" pos:end="27:34"><name pos:start="27:17" pos:end="27:32">audio_streams_nb</name><operator pos:start="27:33" pos:end="27:34">++</operator></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="29:13" pos:end="31:35">else<block type="pseudo" pos:start="31:17" pos:end="31:35"><block_content pos:start="31:17" pos:end="31:35">

                <expr_stmt pos:start="31:17" pos:end="31:35"><expr pos:start="31:17" pos:end="31:34"><name pos:start="31:17" pos:end="31:32">other_streams_nb</name><operator pos:start="31:33" pos:end="31:34">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></for>



        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:79">(<expr pos:start="37:13" pos:end="37:78"><name pos:start="37:13" pos:end="37:28">video_streams_nb</name> <operator pos:start="37:30" pos:end="37:31">!=</operator> <literal type="number" pos:start="37:33" pos:end="37:33">1</literal> <operator pos:start="37:35" pos:end="37:36">||</operator> <name pos:start="37:38" pos:end="37:53">audio_streams_nb</name> <operator pos:start="37:55" pos:end="37:56">!=</operator> <literal type="number" pos:start="37:58" pos:end="37:58">1</literal> <operator pos:start="37:60" pos:end="37:61">||</operator> <name pos:start="37:63" pos:end="37:78">other_streams_nb</name></expr>)</condition> <block pos:start="37:81" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:35">

            <expr_stmt pos:start="39:13" pos:end="39:86"><expr pos:start="39:13" pos:end="39:85"><call pos:start="39:13" pos:end="39:85"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:85">(<argument pos:start="39:20" pos:end="39:20"><expr pos:start="39:20" pos:end="39:20"><name pos:start="39:20" pos:end="39:20">s</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:37" pos:end="39:84"><expr pos:start="39:37" pos:end="39:84"><literal type="string" pos:start="39:37" pos:end="39:84">"PSP mode need one video and one audio stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:35">return <expr pos:start="41:20" pos:end="41:34"><call pos:start="41:20" pos:end="41:34"><name pos:start="41:20" pos:end="41:26">AVERROR</name><argument_list pos:start="41:27" pos:end="41:34">(<argument pos:start="41:28" pos:end="41:33"><expr pos:start="41:28" pos:end="41:33"><name pos:start="41:28" pos:end="41:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:38"><expr pos:start="45:9" pos:end="45:37"><call pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:30">mov_write_uuidprof_tag</name><argument_list pos:start="45:31" pos:end="45:37">(<argument pos:start="45:32" pos:end="45:33"><expr pos:start="45:32" pos:end="45:33"><name pos:start="45:32" pos:end="45:33">pb</name></expr></argument>, <argument pos:start="45:36" pos:end="45:36"><expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
