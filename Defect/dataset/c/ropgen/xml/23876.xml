<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23876.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">udp_read_packet</name><parameter_list pos:start="1:27" pos:end="3:54">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:68"><decl pos:start="1:48" pos:end="1:68"><type pos:start="1:48" pos:end="1:68"><name pos:start="1:48" pos:end="1:57">RTSPStream</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:68">prtsp_st</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:39"><decl pos:start="3:28" pos:end="3:39"><type pos:start="3:28" pos:end="3:39"><name pos:start="3:28" pos:end="3:34">uint8_t</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">buf</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:53"><decl pos:start="3:42" pos:end="3:53"><type pos:start="3:42" pos:end="3:53"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:53">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="133:1">{<block_content pos:start="7:5" pos:end="131:5">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">RTSPState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">rt</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">RTSPStream</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:23">rtsp_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">fd_set</name></type> <name pos:start="11:12" pos:end="11:15">rfds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:55"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">fd</name></decl>, <decl pos:start="13:13" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:13" pos:end="13:18">fd_max</name></decl>, <decl pos:start="13:21" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:21">n</name></decl>, <decl pos:start="13:24" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:24">i</name></decl>, <decl pos:start="13:27" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:29">ret</name></decl>, <decl pos:start="13:32" pos:end="13:37"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:32" pos:end="13:37">tcp_fd</name></decl>, <decl pos:start="13:40" pos:end="13:54"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:40" pos:end="13:50">timeout_cnt</name> <init pos:start="13:52" pos:end="13:54">= <expr pos:start="13:54" pos:end="13:54"><literal type="number" pos:start="13:54" pos:end="13:54">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:18">timeval</name></name></type> <name pos:start="15:20" pos:end="15:21">tv</name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="131:5">for <control pos:start="19:9" pos:end="19:12">(<init pos:start="19:10" pos:end="19:10">;</init><condition pos:start="19:11" pos:end="19:11">;</condition><incr/>)</control> <block pos:start="19:14" pos:end="131:5">{<block_content pos:start="21:9" pos:end="129:34">

        <if_stmt pos:start="21:9" pos:end="23:34"><if pos:start="21:9" pos:end="23:34">if <condition pos:start="21:12" pos:end="21:31">(<expr pos:start="21:13" pos:end="21:30"><call pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:28">url_interrupt_cb</name><argument_list pos:start="21:29" pos:end="21:30">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:34"><block_content pos:start="23:13" pos:end="23:34">

            <return pos:start="23:13" pos:end="23:34">return <expr pos:start="23:20" pos:end="23:33"><call pos:start="23:20" pos:end="23:33"><name pos:start="23:20" pos:end="23:26">AVERROR</name><argument_list pos:start="23:27" pos:end="23:33">(<argument pos:start="23:28" pos:end="23:32"><expr pos:start="23:28" pos:end="23:32"><name pos:start="23:28" pos:end="23:32">EINTR</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><call pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:15">FD_ZERO</name><argument_list pos:start="25:16" pos:end="25:22">(<argument pos:start="25:17" pos:end="25:21"><expr pos:start="25:17" pos:end="25:21"><operator pos:start="25:17" pos:end="25:17">&amp;</operator><name pos:start="25:18" pos:end="25:21">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="39:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:24">(<expr pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:14">rt</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:23">rtsp_hd</name></name></expr>)</condition> <block pos:start="27:26" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:34">

            <expr_stmt pos:start="29:13" pos:end="29:63"><expr pos:start="29:13" pos:end="29:62"><name pos:start="29:13" pos:end="29:18">tcp_fd</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:27">fd_max</name> <operator pos:start="29:29" pos:end="29:29">=</operator> <call pos:start="29:31" pos:end="29:62"><name pos:start="29:31" pos:end="29:49">url_get_file_handle</name><argument_list pos:start="29:50" pos:end="29:62">(<argument pos:start="29:51" pos:end="29:61"><expr pos:start="29:51" pos:end="29:61"><name pos:start="29:51" pos:end="29:61"><name pos:start="29:51" pos:end="29:52">rt</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:61">rtsp_hd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:34"><expr pos:start="31:13" pos:end="31:33"><call pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:18">FD_SET</name><argument_list pos:start="31:19" pos:end="31:33">(<argument pos:start="31:20" pos:end="31:25"><expr pos:start="31:20" pos:end="31:25"><name pos:start="31:20" pos:end="31:25">tcp_fd</name></expr></argument>, <argument pos:start="31:28" pos:end="31:32"><expr pos:start="31:28" pos:end="31:32"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:32">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="39:9">else <block pos:start="33:16" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:24">

            <expr_stmt pos:start="35:13" pos:end="35:23"><expr pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:18">fd_max</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:24"><expr pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:18">tcp_fd</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <operator pos:start="37:22" pos:end="37:22">-</operator><literal type="number" pos:start="37:23" pos:end="37:23">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <for pos:start="41:9" pos:end="61:9">for <control pos:start="41:13" pos:end="41:49">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">i</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:44"><expr pos:start="41:21" pos:end="41:43"><name pos:start="41:21" pos:end="41:21">i</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <name pos:start="41:25" pos:end="41:43"><name pos:start="41:25" pos:end="41:26">rt</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:43">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="41:46" pos:end="41:48"><expr pos:start="41:46" pos:end="41:48"><name pos:start="41:46" pos:end="41:46">i</name><operator pos:start="41:47" pos:end="41:48">++</operator></expr></incr>)</control> <block pos:start="41:51" pos:end="61:9">{<block_content pos:start="43:13" pos:end="59:13">

            <expr_stmt pos:start="43:13" pos:end="43:42"><expr pos:start="43:13" pos:end="43:41"><name pos:start="43:13" pos:end="43:19">rtsp_st</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:41"><name pos:start="43:23" pos:end="43:24">rt</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:38">rtsp_streams</name><index pos:start="43:39" pos:end="43:41">[<expr pos:start="43:40" pos:end="43:40"><name pos:start="43:40" pos:end="43:40">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="59:13"><if pos:start="45:13" pos:end="59:13">if <condition pos:start="45:16" pos:end="45:36">(<expr pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:23">rtsp_st</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:35">rtp_handle</name></name></expr>)</condition> <block pos:start="45:38" pos:end="59:13">{<block_content pos:start="51:17" pos:end="57:34">

                <comment type="block" pos:start="47:17" pos:end="49:43">/* currently, we cannot probe RTCP handle because of

                 * blocking restrictions */</comment>

                <expr_stmt pos:start="51:17" pos:end="51:62"><expr pos:start="51:17" pos:end="51:61"><name pos:start="51:17" pos:end="51:18">fd</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <call pos:start="51:22" pos:end="51:61"><name pos:start="51:22" pos:end="51:40">url_get_file_handle</name><argument_list pos:start="51:41" pos:end="51:61">(<argument pos:start="51:42" pos:end="51:60"><expr pos:start="51:42" pos:end="51:60"><name pos:start="51:42" pos:end="51:60"><name pos:start="51:42" pos:end="51:48">rtsp_st</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:60">rtp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="53:17" pos:end="55:32"><if pos:start="53:17" pos:end="55:32">if <condition pos:start="53:20" pos:end="53:32">(<expr pos:start="53:21" pos:end="53:31"><name pos:start="53:21" pos:end="53:22">fd</name> <operator pos:start="53:24" pos:end="53:24">&gt;</operator> <name pos:start="53:26" pos:end="53:31">fd_max</name></expr>)</condition><block type="pseudo" pos:start="55:21" pos:end="55:32"><block_content pos:start="55:21" pos:end="55:32">

                    <expr_stmt pos:start="55:21" pos:end="55:32"><expr pos:start="55:21" pos:end="55:31"><name pos:start="55:21" pos:end="55:26">fd_max</name> <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:31">fd</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:34"><expr pos:start="57:17" pos:end="57:33"><call pos:start="57:17" pos:end="57:33"><name pos:start="57:17" pos:end="57:22">FD_SET</name><argument_list pos:start="57:23" pos:end="57:33">(<argument pos:start="57:24" pos:end="57:25"><expr pos:start="57:24" pos:end="57:25"><name pos:start="57:24" pos:end="57:25">fd</name></expr></argument>, <argument pos:start="57:28" pos:end="57:32"><expr pos:start="57:28" pos:end="57:32"><operator pos:start="57:28" pos:end="57:28">&amp;</operator><name pos:start="57:29" pos:end="57:32">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="63:9" pos:end="63:22"><expr pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:10">tv</name><operator pos:start="63:11" pos:end="63:11">.</operator><name pos:start="63:12" pos:end="63:17">tv_sec</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <literal type="number" pos:start="63:21" pos:end="63:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:46"><expr pos:start="65:9" pos:end="65:45"><name pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:10">tv</name><operator pos:start="65:11" pos:end="65:11">.</operator><name pos:start="65:12" pos:end="65:18">tv_usec</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:38">SELECT_TIMEOUT_MS</name> <operator pos:start="65:40" pos:end="65:40">*</operator> <literal type="number" pos:start="65:42" pos:end="65:45">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:55"><expr pos:start="67:9" pos:end="67:54"><name pos:start="67:9" pos:end="67:9">n</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <call pos:start="67:13" pos:end="67:54"><name pos:start="67:13" pos:end="67:18">select</name><argument_list pos:start="67:19" pos:end="67:54">(<argument pos:start="67:20" pos:end="67:29"><expr pos:start="67:20" pos:end="67:29"><name pos:start="67:20" pos:end="67:25">fd_max</name> <operator pos:start="67:27" pos:end="67:27">+</operator> <literal type="number" pos:start="67:29" pos:end="67:29">1</literal></expr></argument>, <argument pos:start="67:32" pos:end="67:36"><expr pos:start="67:32" pos:end="67:36"><operator pos:start="67:32" pos:end="67:32">&amp;</operator><name pos:start="67:33" pos:end="67:36">rfds</name></expr></argument>, <argument pos:start="67:39" pos:end="67:42"><expr pos:start="67:39" pos:end="67:42"><name pos:start="67:39" pos:end="67:42">NULL</name></expr></argument>, <argument pos:start="67:45" pos:end="67:48"><expr pos:start="67:45" pos:end="67:48"><name pos:start="67:45" pos:end="67:48">NULL</name></expr></argument>, <argument pos:start="67:51" pos:end="67:53"><expr pos:start="67:51" pos:end="67:53"><operator pos:start="67:51" pos:end="67:51">&amp;</operator><name pos:start="67:52" pos:end="67:53">tv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="129:34"><if pos:start="69:9" pos:end="123:9">if <condition pos:start="69:12" pos:end="69:18">(<expr pos:start="69:13" pos:end="69:17"><name pos:start="69:13" pos:end="69:13">n</name> <operator pos:start="69:15" pos:end="69:15">&gt;</operator> <literal type="number" pos:start="69:17" pos:end="69:17">0</literal></expr>)</condition> <block pos:start="69:20" pos:end="123:9">{<block_content pos:start="71:13" pos:end="122:0">

            <expr_stmt pos:start="71:13" pos:end="71:28"><expr pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:23">timeout_cnt</name> <operator pos:start="71:25" pos:end="71:25">=</operator> <literal type="number" pos:start="71:27" pos:end="71:27">0</literal></expr>;</expr_stmt>

            <for pos:start="73:13" pos:end="100:0">for <control pos:start="73:17" pos:end="73:53">(<init pos:start="73:18" pos:end="73:23"><expr pos:start="73:18" pos:end="73:22"><name pos:start="73:18" pos:end="73:18">i</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr>;</init> <condition pos:start="73:25" pos:end="73:48"><expr pos:start="73:25" pos:end="73:47"><name pos:start="73:25" pos:end="73:25">i</name> <operator pos:start="73:27" pos:end="73:27">&lt;</operator> <name pos:start="73:29" pos:end="73:47"><name pos:start="73:29" pos:end="73:30">rt</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:47">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="73:50" pos:end="73:52"><expr pos:start="73:50" pos:end="73:52"><name pos:start="73:50" pos:end="73:50">i</name><operator pos:start="73:51" pos:end="73:52">++</operator></expr></incr>)</control> <block pos:start="73:55" pos:end="100:0">{<block_content pos:start="75:17" pos:end="95:17">

                <expr_stmt pos:start="75:17" pos:end="75:46"><expr pos:start="75:17" pos:end="75:45"><name pos:start="75:17" pos:end="75:23">rtsp_st</name> <operator pos:start="75:25" pos:end="75:25">=</operator> <name pos:start="75:27" pos:end="75:45"><name pos:start="75:27" pos:end="75:28">rt</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:42">rtsp_streams</name><index pos:start="75:43" pos:end="75:45">[<expr pos:start="75:44" pos:end="75:44"><name pos:start="75:44" pos:end="75:44">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="77:17" pos:end="95:17"><if pos:start="77:17" pos:end="95:17">if <condition pos:start="77:20" pos:end="77:40">(<expr pos:start="77:21" pos:end="77:39"><name pos:start="77:21" pos:end="77:39"><name pos:start="77:21" pos:end="77:27">rtsp_st</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:39">rtp_handle</name></name></expr>)</condition> <block pos:start="77:42" pos:end="95:17">{<block_content pos:start="79:21" pos:end="93:21">

                    <expr_stmt pos:start="79:21" pos:end="79:66"><expr pos:start="79:21" pos:end="79:65"><name pos:start="79:21" pos:end="79:22">fd</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <call pos:start="79:26" pos:end="79:65"><name pos:start="79:26" pos:end="79:44">url_get_file_handle</name><argument_list pos:start="79:45" pos:end="79:65">(<argument pos:start="79:46" pos:end="79:64"><expr pos:start="79:46" pos:end="79:64"><name pos:start="79:46" pos:end="79:64"><name pos:start="79:46" pos:end="79:52">rtsp_st</name><operator pos:start="79:53" pos:end="79:54">-&gt;</operator><name pos:start="79:55" pos:end="79:64">rtp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="81:21" pos:end="93:21"><if pos:start="81:21" pos:end="93:21">if <condition pos:start="81:24" pos:end="81:44">(<expr pos:start="81:25" pos:end="81:43"><call pos:start="81:25" pos:end="81:43"><name pos:start="81:25" pos:end="81:32">FD_ISSET</name><argument_list pos:start="81:33" pos:end="81:43">(<argument pos:start="81:34" pos:end="81:35"><expr pos:start="81:34" pos:end="81:35"><name pos:start="81:34" pos:end="81:35">fd</name></expr></argument>, <argument pos:start="81:38" pos:end="81:42"><expr pos:start="81:38" pos:end="81:42"><operator pos:start="81:38" pos:end="81:38">&amp;</operator><name pos:start="81:39" pos:end="81:42">rfds</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:46" pos:end="93:21">{<block_content pos:start="83:25" pos:end="91:25">

                        <expr_stmt pos:start="83:25" pos:end="83:75"><expr pos:start="83:25" pos:end="83:74"><name pos:start="83:25" pos:end="83:27">ret</name> <operator pos:start="83:29" pos:end="83:29">=</operator> <call pos:start="83:31" pos:end="83:74"><name pos:start="83:31" pos:end="83:38">url_read</name><argument_list pos:start="83:39" pos:end="83:74">(<argument pos:start="83:40" pos:end="83:58"><expr pos:start="83:40" pos:end="83:58"><name pos:start="83:40" pos:end="83:58"><name pos:start="83:40" pos:end="83:46">rtsp_st</name><operator pos:start="83:47" pos:end="83:48">-&gt;</operator><name pos:start="83:49" pos:end="83:58">rtp_handle</name></name></expr></argument>, <argument pos:start="83:61" pos:end="83:63"><expr pos:start="83:61" pos:end="83:63"><name pos:start="83:61" pos:end="83:63">buf</name></expr></argument>, <argument pos:start="83:66" pos:end="83:73"><expr pos:start="83:66" pos:end="83:73"><name pos:start="83:66" pos:end="83:73">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="85:25" pos:end="91:25"><if pos:start="85:25" pos:end="91:25">if <condition pos:start="85:28" pos:end="85:36">(<expr pos:start="85:29" pos:end="85:35"><name pos:start="85:29" pos:end="85:31">ret</name> <operator pos:start="85:33" pos:end="85:33">&gt;</operator> <literal type="number" pos:start="85:35" pos:end="85:35">0</literal></expr>)</condition> <block pos:start="85:38" pos:end="91:25">{<block_content pos:start="87:29" pos:end="89:39">

                            <expr_stmt pos:start="87:29" pos:end="87:48"><expr pos:start="87:29" pos:end="87:47"><operator pos:start="87:29" pos:end="87:29">*</operator><name pos:start="87:30" pos:end="87:37">prtsp_st</name> <operator pos:start="87:39" pos:end="87:39">=</operator> <name pos:start="87:41" pos:end="87:47">rtsp_st</name></expr>;</expr_stmt>

                            <return pos:start="89:29" pos:end="89:39">return <expr pos:start="89:36" pos:end="89:38"><name pos:start="89:36" pos:end="89:38">ret</name></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

<cpp:if pos:start="99:1" pos:end="99:23">#<cpp:directive pos:start="99:2" pos:end="99:3">if</cpp:directive> <expr pos:start="99:5" pos:end="99:23"><name pos:start="99:5" pos:end="99:23">CONFIG_RTSP_DEMUXER</name></expr></cpp:if>

            <if_stmt pos:start="101:13" pos:end="122:0"><if pos:start="101:13" pos:end="122:0">if <condition pos:start="101:16" pos:end="101:56">(<expr pos:start="101:17" pos:end="101:55"><name pos:start="101:17" pos:end="101:22">tcp_fd</name> <operator pos:start="101:24" pos:end="101:25">!=</operator> <operator pos:start="101:27" pos:end="101:27">-</operator><literal type="number" pos:start="101:28" pos:end="101:28">1</literal> <operator pos:start="101:30" pos:end="101:31">&amp;&amp;</operator> <call pos:start="101:33" pos:end="101:55"><name pos:start="101:33" pos:end="101:40">FD_ISSET</name><argument_list pos:start="101:41" pos:end="101:55">(<argument pos:start="101:42" pos:end="101:47"><expr pos:start="101:42" pos:end="101:47"><name pos:start="101:42" pos:end="101:47">tcp_fd</name></expr></argument>, <argument pos:start="101:50" pos:end="101:54"><expr pos:start="101:50" pos:end="101:54"><operator pos:start="101:50" pos:end="101:50">&amp;</operator><name pos:start="101:51" pos:end="101:54">rfds</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:58" pos:end="122:0">{<block_content pos:start="103:17" pos:end="117:29">

                <decl_stmt pos:start="103:17" pos:end="103:40"><decl pos:start="103:17" pos:end="103:39"><type pos:start="103:17" pos:end="103:33"><name pos:start="103:17" pos:end="103:33">RTSPMessageHeader</name></type> <name pos:start="103:35" pos:end="103:39">reply</name></decl>;</decl_stmt>



                <expr_stmt pos:start="107:17" pos:end="107:61"><expr pos:start="107:17" pos:end="107:60"><name pos:start="107:17" pos:end="107:19">ret</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <call pos:start="107:23" pos:end="107:60"><name pos:start="107:23" pos:end="107:40">ff_rtsp_read_reply</name><argument_list pos:start="107:41" pos:end="107:60">(<argument pos:start="107:42" pos:end="107:42"><expr pos:start="107:42" pos:end="107:42"><name pos:start="107:42" pos:end="107:42">s</name></expr></argument>, <argument pos:start="107:45" pos:end="107:50"><expr pos:start="107:45" pos:end="107:50"><operator pos:start="107:45" pos:end="107:45">&amp;</operator><name pos:start="107:46" pos:end="107:50">reply</name></expr></argument>, <argument pos:start="107:53" pos:end="107:56"><expr pos:start="107:53" pos:end="107:56"><name pos:start="107:53" pos:end="107:56">NULL</name></expr></argument>, <argument pos:start="107:59" pos:end="107:59"><expr pos:start="107:59" pos:end="107:59"><literal type="number" pos:start="107:59" pos:end="107:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="109:17" pos:end="111:31"><if pos:start="109:17" pos:end="111:31">if <condition pos:start="109:20" pos:end="109:28">(<expr pos:start="109:21" pos:end="109:27"><name pos:start="109:21" pos:end="109:23">ret</name> <operator pos:start="109:25" pos:end="109:25">&lt;</operator> <literal type="number" pos:start="109:27" pos:end="109:27">0</literal></expr>)</condition><block type="pseudo" pos:start="111:21" pos:end="111:31"><block_content pos:start="111:21" pos:end="111:31">

                    <return pos:start="111:21" pos:end="111:31">return <expr pos:start="111:28" pos:end="111:30"><name pos:start="111:28" pos:end="111:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <comment type="block" pos:start="113:17" pos:end="113:40">/* XXX: parse message */</comment>

                <if_stmt pos:start="115:17" pos:end="117:29"><if pos:start="115:17" pos:end="117:29">if <condition pos:start="115:20" pos:end="115:54">(<expr pos:start="115:21" pos:end="115:53"><name pos:start="115:21" pos:end="115:29"><name pos:start="115:21" pos:end="115:22">rt</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:29">state</name></name> <operator pos:start="115:31" pos:end="115:32">!=</operator> <name pos:start="115:34" pos:end="115:53">RTSP_STATE_STREAMING</name></expr>)</condition><block type="pseudo" pos:start="117:21" pos:end="117:29"><block_content pos:start="117:21" pos:end="117:29">

                    <return pos:start="117:21" pos:end="117:29">return <expr pos:start="117:28" pos:end="117:28"><literal type="number" pos:start="117:28" pos:end="117:28">0</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <if type="elseif" pos:start="123:11" pos:end="127:9">else if <condition pos:start="123:19" pos:end="123:59">(<expr pos:start="123:20" pos:end="123:58"><name pos:start="123:20" pos:end="123:20">n</name> <operator pos:start="123:22" pos:end="123:23">==</operator> <literal type="number" pos:start="123:25" pos:end="123:25">0</literal> <operator pos:start="123:27" pos:end="123:28">&amp;&amp;</operator> <operator pos:start="123:30" pos:end="123:31">++</operator><name pos:start="123:32" pos:end="123:42">timeout_cnt</name> <operator pos:start="123:44" pos:end="123:45">&gt;=</operator> <name pos:start="123:47" pos:end="123:58">MAX_TIMEOUTS</name></expr>)</condition> <block pos:start="123:61" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:42">

            <return pos:start="125:13" pos:end="125:42">return <expr pos:start="125:20" pos:end="125:41"><call pos:start="125:20" pos:end="125:41"><name pos:start="125:20" pos:end="125:30">FF_NETERROR</name><argument_list pos:start="125:31" pos:end="125:41">(<argument pos:start="125:32" pos:end="125:40"><expr pos:start="125:32" pos:end="125:40"><name pos:start="125:32" pos:end="125:40">ETIMEDOUT</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="127:11" pos:end="129:34">else if <condition pos:start="127:19" pos:end="127:43">(<expr pos:start="127:20" pos:end="127:42"><name pos:start="127:20" pos:end="127:20">n</name> <operator pos:start="127:22" pos:end="127:22">&lt;</operator> <literal type="number" pos:start="127:24" pos:end="127:24">0</literal> <operator pos:start="127:26" pos:end="127:27">&amp;&amp;</operator> <name pos:start="127:29" pos:end="127:33">errno</name> <operator pos:start="127:35" pos:end="127:36">!=</operator> <name pos:start="127:38" pos:end="127:42">EINTR</name></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:34"><block_content pos:start="129:13" pos:end="129:34">

            <return pos:start="129:13" pos:end="129:34">return <expr pos:start="129:20" pos:end="129:33"><call pos:start="129:20" pos:end="129:33"><name pos:start="129:20" pos:end="129:26">AVERROR</name><argument_list pos:start="129:27" pos:end="129:33">(<argument pos:start="129:28" pos:end="129:32"><expr pos:start="129:28" pos:end="129:32"><name pos:start="129:28" pos:end="129:32">errno</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
