<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22497.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">exynos4210_ltick_recalc_count</name><parameter_list pos:start="1:42" pos:end="1:63">(<parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:62"><name pos:start="1:43" pos:end="1:59"><name pos:start="1:43" pos:end="1:48">struct</name> <name pos:start="1:50" pos:end="1:59">tick_timer</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:62">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:21">to_count</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="51:5"><if pos:start="9:5" pos:end="31:5">if <condition pos:start="9:8" pos:end="9:71">(<expr pos:start="9:9" pos:end="9:70"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:19"><name pos:start="9:10" pos:end="9:10">s</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:19">cnt_run</name></name> <operator pos:start="9:21" pos:end="9:22">&amp;&amp;</operator> <name pos:start="9:24" pos:end="9:36"><name pos:start="9:24" pos:end="9:24">s</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:36">last_tcnto</name></name><operator pos:start="9:37" pos:end="9:37">)</operator> <operator pos:start="9:39" pos:end="9:40">||</operator> <operator pos:start="9:42" pos:end="9:42">(</operator><name pos:start="9:43" pos:end="9:52"><name pos:start="9:43" pos:end="9:43">s</name><operator pos:start="9:44" pos:end="9:45">-&gt;</operator><name pos:start="9:46" pos:end="9:52">int_run</name></name> <operator pos:start="9:54" pos:end="9:55">&amp;&amp;</operator> <name pos:start="9:57" pos:end="9:69"><name pos:start="9:57" pos:end="9:57">s</name><operator pos:start="9:58" pos:end="9:59">-&gt;</operator><name pos:start="9:60" pos:end="9:69">last_icnto</name></name><operator pos:start="9:70" pos:end="9:70">)</operator></expr>)</condition> <block pos:start="9:73" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:9">

        <comment type="block" pos:start="11:9" pos:end="17:11">/*

         * one or both timers run and not counted to the end;

         * distance is not passed, recalculate with last_tcnto * last_icnto

         */</comment>



        <if_stmt pos:start="21:9" pos:end="29:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:26">(<expr pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:25">last_tcnto</name></name></expr>)</condition> <block pos:start="21:28" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:53">

            <expr_stmt pos:start="23:13" pos:end="23:53"><expr pos:start="23:13" pos:end="23:52"><name pos:start="23:13" pos:end="23:20">to_count</name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:36"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:36">last_tcnto</name></name> <operator pos:start="23:38" pos:end="23:38">*</operator> <name pos:start="23:40" pos:end="23:52"><name pos:start="23:40" pos:end="23:40">s</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:52">last_icnto</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="25:11" pos:end="29:9">else <block pos:start="25:16" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:37">

            <expr_stmt pos:start="27:13" pos:end="27:37"><expr pos:start="27:13" pos:end="27:36"><name pos:start="27:13" pos:end="27:20">to_count</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:36"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:36">last_icnto</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="51:5">else <block pos:start="31:12" pos:end="51:5">{<block_content pos:start="35:9" pos:end="49:24">

        <comment type="block" pos:start="33:9" pos:end="33:64">/* distance is passed, recalculate with tcnto * icnto */</comment>

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:21">(<expr pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:20">icntb</name></name></expr>)</condition> <block pos:start="35:23" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:46">

            <expr_stmt pos:start="37:13" pos:end="37:46"><expr pos:start="37:13" pos:end="37:45"><name pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:23">distance</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:34"><name pos:start="37:27" pos:end="37:27">s</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:34">tcntb</name></name> <operator pos:start="37:36" pos:end="37:36">*</operator> <name pos:start="37:38" pos:end="37:45"><name pos:start="37:38" pos:end="37:38">s</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:45">icntb</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="43:9">else <block pos:start="39:16" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:35">

            <expr_stmt pos:start="41:13" pos:end="41:35"><expr pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:23">distance</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:34"><name pos:start="41:27" pos:end="41:27">s</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:34">tcntb</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:16">to_count</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:30"><name pos:start="47:20" pos:end="47:20">s</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:30">distance</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:24"><expr pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:19">progress</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="55:5" pos:end="65:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:39">(<expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:16">to_count</name> <operator pos:start="55:18" pos:end="55:18">&gt;</operator> <name pos:start="55:20" pos:end="55:38">MCT_LT_COUNTER_STEP</name></expr>)</condition> <block pos:start="55:41" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:39">

        <comment type="block" pos:start="57:9" pos:end="57:27">/* count by step */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:39"><expr pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:16">count</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:38">MCT_LT_COUNTER_STEP</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="65:5">else <block pos:start="61:12" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:28">

        <expr_stmt pos:start="63:9" pos:end="63:28"><expr pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:16">count</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <name pos:start="63:20" pos:end="63:27">to_count</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
