<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9013.c" pos:tabs="8"><function pos:start="1:1" pos:end="58:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">BlockBackend</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:34">img_open_opts</name><parameter_list pos:start="1:35" pos:end="5:64">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">optstr</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:49"><decl pos:start="3:36" pos:end="3:49"><type pos:start="3:36" pos:end="3:49"><name pos:start="3:36" pos:end="3:43">QemuOpts</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">opts</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:60"><decl pos:start="3:52" pos:end="3:60"><type pos:start="3:52" pos:end="3:60"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:60">flags</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:79"><decl pos:start="3:63" pos:end="3:79"><type pos:start="3:63" pos:end="3:79"><name pos:start="3:63" pos:end="3:66">bool</name></type> <name pos:start="3:68" pos:end="3:79">writethrough</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:45"><decl pos:start="5:36" pos:end="5:45"><type pos:start="5:36" pos:end="5:45"><name pos:start="5:36" pos:end="5:39">bool</name></type> <name pos:start="5:41" pos:end="5:45">quiet</name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:63"><decl pos:start="5:48" pos:end="5:63"><type pos:start="5:48" pos:end="5:63"><name pos:start="5:48" pos:end="5:51">bool</name></type> <name pos:start="5:53" pos:end="5:63">force_share</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="58:1">{<block_content pos:start="9:5" pos:end="56:15">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">QDict</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:18">options</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">local_err</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">BlockBackend</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:21">blk</name></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:11">options</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:44"><name pos:start="15:15" pos:end="15:32">qemu_opts_to_qdict</name><argument_list pos:start="15:33" pos:end="15:44">(<argument pos:start="15:34" pos:end="15:37"><expr pos:start="15:34" pos:end="15:37"><name pos:start="15:34" pos:end="15:37">opts</name></expr></argument>, <argument pos:start="15:40" pos:end="15:43"><expr pos:start="15:40" pos:end="15:43"><name pos:start="15:40" pos:end="15:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="32:5"><if pos:start="17:5" pos:end="32:5">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:19">force_share</name></expr>)</condition> <block pos:start="17:22" pos:end="32:5">{<block_content pos:start="19:9" pos:end="30:72">

        <if_stmt pos:start="19:9" pos:end="28:9"><if pos:start="19:9" pos:end="28:9">if <condition pos:start="19:12" pos:end="21:62">(<expr pos:start="19:13" pos:end="21:61"><call pos:start="19:13" pos:end="19:55"><name pos:start="19:13" pos:end="19:24">qdict_haskey</name><argument_list pos:start="19:25" pos:end="19:55">(<argument pos:start="19:26" pos:end="19:32"><expr pos:start="19:26" pos:end="19:32"><name pos:start="19:26" pos:end="19:32">options</name></expr></argument>, <argument pos:start="19:35" pos:end="19:54"><expr pos:start="19:35" pos:end="19:54"><name pos:start="19:35" pos:end="19:54">BDRV_OPT_FORCE_SHARE</name></expr></argument>)</argument_list></call>

            <operator pos:start="21:13" pos:end="21:14">&amp;&amp;</operator> <operator pos:start="21:16" pos:end="21:16">!</operator><call pos:start="21:17" pos:end="21:61"><name pos:start="21:17" pos:end="21:30">qdict_get_bool</name><argument_list pos:start="21:31" pos:end="21:61">(<argument pos:start="21:32" pos:end="21:38"><expr pos:start="21:32" pos:end="21:38"><name pos:start="21:32" pos:end="21:38">options</name></expr></argument>, <argument pos:start="21:41" pos:end="21:60"><expr pos:start="21:41" pos:end="21:60"><name pos:start="21:41" pos:end="21:60">BDRV_OPT_FORCE_SHARE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:64" pos:end="28:9">{<block_content pos:start="23:13" pos:end="26:24">

            <expr_stmt pos:start="23:13" pos:end="23:74"><expr pos:start="23:13" pos:end="23:73"><call pos:start="23:13" pos:end="23:73"><name pos:start="23:13" pos:end="23:24">error_report</name><argument_list pos:start="23:25" pos:end="23:73">(<argument pos:start="23:26" pos:end="23:72"><expr pos:start="23:26" pos:end="23:72"><literal type="string" pos:start="23:26" pos:end="23:72">"--force-share/-U conflicts with image options"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <return pos:start="26:13" pos:end="26:24">return <expr pos:start="26:20" pos:end="26:23"><name pos:start="26:20" pos:end="26:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="30:9" pos:end="30:72"><expr pos:start="30:9" pos:end="30:71"><call pos:start="30:9" pos:end="30:71"><name pos:start="30:9" pos:end="30:17">qdict_put</name><argument_list pos:start="30:18" pos:end="30:71">(<argument pos:start="30:19" pos:end="30:25"><expr pos:start="30:19" pos:end="30:25"><name pos:start="30:19" pos:end="30:25">options</name></expr></argument>, <argument pos:start="30:28" pos:end="30:47"><expr pos:start="30:28" pos:end="30:47"><name pos:start="30:28" pos:end="30:47">BDRV_OPT_FORCE_SHARE</name></expr></argument>, <argument pos:start="30:50" pos:end="30:70"><expr pos:start="30:50" pos:end="30:70"><call pos:start="30:50" pos:end="30:70"><name pos:start="30:50" pos:end="30:64">qbool_from_bool</name><argument_list pos:start="30:65" pos:end="30:70">(<argument pos:start="30:66" pos:end="30:69"><expr pos:start="30:66" pos:end="30:69"><name pos:start="30:66" pos:end="30:69">true</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="34:5" pos:end="34:63"><expr pos:start="34:5" pos:end="34:62"><name pos:start="34:5" pos:end="34:7">blk</name> <operator pos:start="34:9" pos:end="34:9">=</operator> <call pos:start="34:11" pos:end="34:62"><name pos:start="34:11" pos:end="34:22">blk_new_open</name><argument_list pos:start="34:23" pos:end="34:62">(<argument pos:start="34:24" pos:end="34:27"><expr pos:start="34:24" pos:end="34:27"><name pos:start="34:24" pos:end="34:27">NULL</name></expr></argument>, <argument pos:start="34:30" pos:end="34:33"><expr pos:start="34:30" pos:end="34:33"><name pos:start="34:30" pos:end="34:33">NULL</name></expr></argument>, <argument pos:start="34:36" pos:end="34:42"><expr pos:start="34:36" pos:end="34:42"><name pos:start="34:36" pos:end="34:42">options</name></expr></argument>, <argument pos:start="34:45" pos:end="34:49"><expr pos:start="34:45" pos:end="34:49"><name pos:start="34:45" pos:end="34:49">flags</name></expr></argument>, <argument pos:start="34:52" pos:end="34:61"><expr pos:start="34:52" pos:end="34:61"><operator pos:start="34:52" pos:end="34:52">&amp;</operator><name pos:start="34:53" pos:end="34:61">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="36:5" pos:end="42:5"><if pos:start="36:5" pos:end="42:5">if <condition pos:start="36:8" pos:end="36:13">(<expr pos:start="36:9" pos:end="36:12"><operator pos:start="36:9" pos:end="36:9">!</operator><name pos:start="36:10" pos:end="36:12">blk</name></expr>)</condition> <block pos:start="36:15" pos:end="42:5">{<block_content pos:start="38:9" pos:end="40:20">

        <expr_stmt pos:start="38:9" pos:end="38:70"><expr pos:start="38:9" pos:end="38:69"><call pos:start="38:9" pos:end="38:69"><name pos:start="38:9" pos:end="38:25">error_reportf_err</name><argument_list pos:start="38:26" pos:end="38:69">(<argument pos:start="38:27" pos:end="38:35"><expr pos:start="38:27" pos:end="38:35"><name pos:start="38:27" pos:end="38:35">local_err</name></expr></argument>, <argument pos:start="38:38" pos:end="38:60"><expr pos:start="38:38" pos:end="38:60"><literal type="string" pos:start="38:38" pos:end="38:60">"Could not open '%s': "</literal></expr></argument>, <argument pos:start="38:63" pos:end="38:68"><expr pos:start="38:63" pos:end="38:68"><name pos:start="38:63" pos:end="38:68">optstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="40:9" pos:end="40:20">return <expr pos:start="40:16" pos:end="40:19"><name pos:start="40:16" pos:end="40:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="44:5" pos:end="44:51"><expr pos:start="44:5" pos:end="44:50"><call pos:start="44:5" pos:end="44:50"><name pos:start="44:5" pos:end="44:30">blk_set_enable_write_cache</name><argument_list pos:start="44:31" pos:end="44:50">(<argument pos:start="44:32" pos:end="44:34"><expr pos:start="44:32" pos:end="44:34"><name pos:start="44:32" pos:end="44:34">blk</name></expr></argument>, <argument pos:start="44:37" pos:end="44:49"><expr pos:start="44:37" pos:end="44:49"><operator pos:start="44:37" pos:end="44:37">!</operator><name pos:start="44:38" pos:end="44:49">writethrough</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="48:5" pos:end="54:5"><if pos:start="48:5" pos:end="54:5">if <condition pos:start="48:8" pos:end="48:57">(<expr pos:start="48:9" pos:end="48:56"><call pos:start="48:9" pos:end="48:52"><name pos:start="48:9" pos:end="48:25">img_open_password</name><argument_list pos:start="48:26" pos:end="48:52">(<argument pos:start="48:27" pos:end="48:29"><expr pos:start="48:27" pos:end="48:29"><name pos:start="48:27" pos:end="48:29">blk</name></expr></argument>, <argument pos:start="48:32" pos:end="48:37"><expr pos:start="48:32" pos:end="48:37"><name pos:start="48:32" pos:end="48:37">optstr</name></expr></argument>, <argument pos:start="48:40" pos:end="48:44"><expr pos:start="48:40" pos:end="48:44"><name pos:start="48:40" pos:end="48:44">flags</name></expr></argument>, <argument pos:start="48:47" pos:end="48:51"><expr pos:start="48:47" pos:end="48:51"><name pos:start="48:47" pos:end="48:51">quiet</name></expr></argument>)</argument_list></call> <operator pos:start="48:54" pos:end="48:54">&lt;</operator> <literal type="number" pos:start="48:56" pos:end="48:56">0</literal></expr>)</condition> <block pos:start="48:59" pos:end="54:5">{<block_content pos:start="50:9" pos:end="52:20">

        <expr_stmt pos:start="50:9" pos:end="50:23"><expr pos:start="50:9" pos:end="50:22"><call pos:start="50:9" pos:end="50:22"><name pos:start="50:9" pos:end="50:17">blk_unref</name><argument_list pos:start="50:18" pos:end="50:22">(<argument pos:start="50:19" pos:end="50:21"><expr pos:start="50:19" pos:end="50:21"><name pos:start="50:19" pos:end="50:21">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="52:9" pos:end="52:20">return <expr pos:start="52:16" pos:end="52:19"><name pos:start="52:16" pos:end="52:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="56:5" pos:end="56:15">return <expr pos:start="56:12" pos:end="56:14"><name pos:start="56:12" pos:end="56:14">blk</name></expr>;</return>

</block_content>}</block></function></unit>
