<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5253.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:11">MemTxResult</name></type> <name pos:start="1:13" pos:end="1:30">gicv3_redist_write</name><parameter_list pos:start="1:31" pos:end="2:63">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:51">hwaddr</name></type> <name pos:start="1:53" pos:end="1:58">offset</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:73"><decl pos:start="1:61" pos:end="1:73"><type pos:start="1:61" pos:end="1:73"><name pos:start="1:61" pos:end="1:68">uint64_t</name></type> <name pos:start="1:70" pos:end="1:73">data</name></decl></parameter>,
                               <parameter pos:start="2:32" pos:end="2:44"><decl pos:start="2:32" pos:end="2:44"><type pos:start="2:32" pos:end="2:44"><name pos:start="2:32" pos:end="2:39">unsigned</name></type> <name pos:start="2:41" pos:end="2:44">size</name></decl></parameter>, <parameter pos:start="2:47" pos:end="2:62"><decl pos:start="2:47" pos:end="2:62"><type pos:start="2:47" pos:end="2:62"><name pos:start="2:47" pos:end="2:56">MemTxAttrs</name></type> <name pos:start="2:58" pos:end="2:62">attrs</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="4:5" pos:end="42:13">
    <decl_stmt pos:start="4:5" pos:end="4:27"><decl pos:start="4:5" pos:end="4:26"><type pos:start="4:5" pos:end="4:16"><name pos:start="4:5" pos:end="4:14">GICv3State</name> <modifier pos:start="4:16" pos:end="4:16">*</modifier></type><name pos:start="4:17" pos:end="4:17">s</name> <init pos:start="4:19" pos:end="4:26">= <expr pos:start="4:21" pos:end="4:26"><name pos:start="4:21" pos:end="4:26">opaque</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GICv3CPUState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">cs</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:18"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:15">MemTxResult</name></type> <name pos:start="6:17" pos:end="6:17">r</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">cpuidx</name></decl>;</decl_stmt>
    <comment type="block" pos:start="8:5" pos:end="13:7">/* This region covers all the redistributor pages; there are
     * (for GICv3) two 64K pages per CPU. At the moment they are
     * all contiguous (ie in this one region), though we might later
     * want to allow splitting of redistributor pages into several
     * blocks so we can support more CPUs.
     */</comment>
    <expr_stmt pos:start="14:5" pos:end="14:30"><expr pos:start="14:5" pos:end="14:29"><name pos:start="14:5" pos:end="14:10">cpuidx</name> <operator pos:start="14:12" pos:end="14:12">=</operator> <name pos:start="14:14" pos:end="14:19">offset</name> <operator pos:start="14:21" pos:end="14:21">/</operator> <literal type="number" pos:start="14:23" pos:end="14:29">0x20000</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:10">offset</name> <operator pos:start="15:12" pos:end="15:13">%=</operator> <literal type="number" pos:start="15:15" pos:end="15:21">0x20000</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:32"><expr pos:start="16:5" pos:end="16:31"><call pos:start="16:5" pos:end="16:31"><name pos:start="16:5" pos:end="16:10">assert</name><argument_list pos:start="16:11" pos:end="16:31">(<argument pos:start="16:12" pos:end="16:30"><expr pos:start="16:12" pos:end="16:30"><name pos:start="16:12" pos:end="16:17">cpuidx</name> <operator pos:start="16:19" pos:end="16:19">&lt;</operator> <name pos:start="16:21" pos:end="16:30"><name pos:start="16:21" pos:end="16:21">s</name><operator pos:start="16:22" pos:end="16:23">-&gt;</operator><name pos:start="16:24" pos:end="16:30">num_cpu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:6">cs</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <operator pos:start="17:10" pos:end="17:10">&amp;</operator><name pos:start="17:11" pos:end="17:24"><name pos:start="17:11" pos:end="17:11">s</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">cpu</name><index pos:start="17:17" pos:end="17:24">[<expr pos:start="17:18" pos:end="17:23"><name pos:start="17:18" pos:end="17:23">cpuidx</name></expr>]</index></name></expr>;</expr_stmt>
    <switch pos:start="18:5" pos:end="31:5">switch <condition pos:start="18:12" pos:end="18:17">(<expr pos:start="18:13" pos:end="18:16"><name pos:start="18:13" pos:end="18:16">size</name></expr>)</condition> <block pos:start="18:19" pos:end="31:5">{<block_content pos:start="19:5" pos:end="30:14">
    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">1</literal></expr>:</case>
        <expr_stmt pos:start="20:9" pos:end="20:49"><expr pos:start="20:9" pos:end="20:48"><name pos:start="20:9" pos:end="20:9">r</name> <operator pos:start="20:11" pos:end="20:11">=</operator> <call pos:start="20:13" pos:end="20:48"><name pos:start="20:13" pos:end="20:23">gicr_writeb</name><argument_list pos:start="20:24" pos:end="20:48">(<argument pos:start="20:25" pos:end="20:26"><expr pos:start="20:25" pos:end="20:26"><name pos:start="20:25" pos:end="20:26">cs</name></expr></argument>, <argument pos:start="20:29" pos:end="20:34"><expr pos:start="20:29" pos:end="20:34"><name pos:start="20:29" pos:end="20:34">offset</name></expr></argument>, <argument pos:start="20:37" pos:end="20:40"><expr pos:start="20:37" pos:end="20:40"><name pos:start="20:37" pos:end="20:40">data</name></expr></argument>, <argument pos:start="20:43" pos:end="20:47"><expr pos:start="20:43" pos:end="20:47"><name pos:start="20:43" pos:end="20:47">attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="21:9" pos:end="21:14">break;</break>
    <case pos:start="22:5" pos:end="22:11">case <expr pos:start="22:10" pos:end="22:10"><literal type="number" pos:start="22:10" pos:end="22:10">4</literal></expr>:</case>
        <expr_stmt pos:start="23:9" pos:end="23:49"><expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:9">r</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:48"><name pos:start="23:13" pos:end="23:23">gicr_writel</name><argument_list pos:start="23:24" pos:end="23:48">(<argument pos:start="23:25" pos:end="23:26"><expr pos:start="23:25" pos:end="23:26"><name pos:start="23:25" pos:end="23:26">cs</name></expr></argument>, <argument pos:start="23:29" pos:end="23:34"><expr pos:start="23:29" pos:end="23:34"><name pos:start="23:29" pos:end="23:34">offset</name></expr></argument>, <argument pos:start="23:37" pos:end="23:40"><expr pos:start="23:37" pos:end="23:40"><name pos:start="23:37" pos:end="23:40">data</name></expr></argument>, <argument pos:start="23:43" pos:end="23:47"><expr pos:start="23:43" pos:end="23:47"><name pos:start="23:43" pos:end="23:47">attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="24:9" pos:end="24:14">break;</break>
    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">8</literal></expr>:</case>
        <expr_stmt pos:start="26:9" pos:end="26:50"><expr pos:start="26:9" pos:end="26:49"><name pos:start="26:9" pos:end="26:9">r</name> <operator pos:start="26:11" pos:end="26:11">=</operator> <call pos:start="26:13" pos:end="26:49"><name pos:start="26:13" pos:end="26:24">gicr_writell</name><argument_list pos:start="26:25" pos:end="26:49">(<argument pos:start="26:26" pos:end="26:27"><expr pos:start="26:26" pos:end="26:27"><name pos:start="26:26" pos:end="26:27">cs</name></expr></argument>, <argument pos:start="26:30" pos:end="26:35"><expr pos:start="26:30" pos:end="26:35"><name pos:start="26:30" pos:end="26:35">offset</name></expr></argument>, <argument pos:start="26:38" pos:end="26:41"><expr pos:start="26:38" pos:end="26:41"><name pos:start="26:38" pos:end="26:41">data</name></expr></argument>, <argument pos:start="26:44" pos:end="26:48"><expr pos:start="26:44" pos:end="26:48"><name pos:start="26:44" pos:end="26:48">attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="27:9" pos:end="27:14">break;</break>
    <default pos:start="28:5" pos:end="28:12">default:</default>
        <expr_stmt pos:start="29:9" pos:end="29:24"><expr pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:9">r</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <name pos:start="29:13" pos:end="29:23">MEMTX_ERROR</name></expr>;</expr_stmt>
        <break pos:start="30:9" pos:end="30:14">break;</break>
    </block_content>}</block></switch>
    <if_stmt pos:start="32:5" pos:end="41:5"><if pos:start="32:5" pos:end="38:5">if <condition pos:start="32:8" pos:end="32:25">(<expr pos:start="32:9" pos:end="32:24"><name pos:start="32:9" pos:end="32:9">r</name> <operator pos:start="32:11" pos:end="32:12">==</operator> <name pos:start="32:14" pos:end="32:24">MEMTX_ERROR</name></expr>)</condition> <block pos:start="32:27" pos:end="38:5">{<block_content pos:start="33:9" pos:end="37:56">
        <expr_stmt pos:start="33:9" pos:end="35:59"><expr pos:start="33:9" pos:end="35:58"><call pos:start="33:9" pos:end="35:58"><name pos:start="33:9" pos:end="33:21">qemu_log_mask</name><argument_list pos:start="33:22" pos:end="35:58">(<argument pos:start="33:23" pos:end="33:37"><expr pos:start="33:23" pos:end="33:37"><name pos:start="33:23" pos:end="33:37">LOG_GUEST_ERROR</name></expr></argument>,
                      <argument pos:start="34:23" pos:end="35:33"><expr pos:start="34:23" pos:end="35:33"><literal type="string" pos:start="34:23" pos:end="34:58">"%s: invalid guest write at offset "</literal> <name pos:start="34:60" pos:end="34:73">TARGET_FMT_plx</name>
                      <literal type="string" pos:start="35:23" pos:end="35:33">"size %u\n"</literal></expr></argument>, <argument pos:start="35:36" pos:end="35:43"><expr pos:start="35:36" pos:end="35:43"><name pos:start="35:36" pos:end="35:43">__func__</name></expr></argument>, <argument pos:start="35:46" pos:end="35:51"><expr pos:start="35:46" pos:end="35:51"><name pos:start="35:46" pos:end="35:51">offset</name></expr></argument>, <argument pos:start="35:54" pos:end="35:57"><expr pos:start="35:54" pos:end="35:57"><name pos:start="35:54" pos:end="35:57">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="36:9" pos:end="37:56"><expr pos:start="36:9" pos:end="37:55"><call pos:start="36:9" pos:end="37:55"><name pos:start="36:9" pos:end="36:35">trace_gicv3_redist_badwrite</name><argument_list pos:start="36:36" pos:end="37:55">(<argument pos:start="36:37" pos:end="36:58"><expr pos:start="36:37" pos:end="36:58"><call pos:start="36:37" pos:end="36:58"><name pos:start="36:37" pos:end="36:54">gicv3_redist_affid</name><argument_list pos:start="36:55" pos:end="36:58">(<argument pos:start="36:56" pos:end="36:57"><expr pos:start="36:56" pos:end="36:57"><name pos:start="36:56" pos:end="36:57">cs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="36:61" pos:end="36:66"><expr pos:start="36:61" pos:end="36:66"><name pos:start="36:61" pos:end="36:66">offset</name></expr></argument>, <argument pos:start="36:69" pos:end="36:72"><expr pos:start="36:69" pos:end="36:72"><name pos:start="36:69" pos:end="36:72">data</name></expr></argument>,
                                    <argument pos:start="37:37" pos:end="37:40"><expr pos:start="37:37" pos:end="37:40"><name pos:start="37:37" pos:end="37:40">size</name></expr></argument>, <argument pos:start="37:43" pos:end="37:54"><expr pos:start="37:43" pos:end="37:54"><name pos:start="37:43" pos:end="37:54"><name pos:start="37:43" pos:end="37:47">attrs</name><operator pos:start="37:48" pos:end="37:48">.</operator><name pos:start="37:49" pos:end="37:54">secure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="38:7" pos:end="41:5">else <block pos:start="38:12" pos:end="41:5">{<block_content pos:start="39:9" pos:end="40:53">
        <expr_stmt pos:start="39:9" pos:end="40:53"><expr pos:start="39:9" pos:end="40:52"><call pos:start="39:9" pos:end="40:52"><name pos:start="39:9" pos:end="39:32">trace_gicv3_redist_write</name><argument_list pos:start="39:33" pos:end="40:52">(<argument pos:start="39:34" pos:end="39:55"><expr pos:start="39:34" pos:end="39:55"><call pos:start="39:34" pos:end="39:55"><name pos:start="39:34" pos:end="39:51">gicv3_redist_affid</name><argument_list pos:start="39:52" pos:end="39:55">(<argument pos:start="39:53" pos:end="39:54"><expr pos:start="39:53" pos:end="39:54"><name pos:start="39:53" pos:end="39:54">cs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:58" pos:end="39:63"><expr pos:start="39:58" pos:end="39:63"><name pos:start="39:58" pos:end="39:63">offset</name></expr></argument>, <argument pos:start="39:66" pos:end="39:69"><expr pos:start="39:66" pos:end="39:69"><name pos:start="39:66" pos:end="39:69">data</name></expr></argument>,
                                 <argument pos:start="40:34" pos:end="40:37"><expr pos:start="40:34" pos:end="40:37"><name pos:start="40:34" pos:end="40:37">size</name></expr></argument>, <argument pos:start="40:40" pos:end="40:51"><expr pos:start="40:40" pos:end="40:51"><name pos:start="40:40" pos:end="40:51"><name pos:start="40:40" pos:end="40:44">attrs</name><operator pos:start="40:45" pos:end="40:45">.</operator><name pos:start="40:46" pos:end="40:51">secure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return pos:start="42:5" pos:end="42:13">return <expr pos:start="42:12" pos:end="42:12"><name pos:start="42:12" pos:end="42:12">r</name></expr>;</return>
</block_content>}</block></function></unit>
