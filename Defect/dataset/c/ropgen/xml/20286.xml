<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20286.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">ff_read_packet</name><parameter_list pos:start="1:19" pos:end="1:53">(<parameter pos:start="1:20" pos:end="1:37"><decl pos:start="1:20" pos:end="1:37"><type pos:start="1:20" pos:end="1:37"><name pos:start="1:20" pos:end="1:34">AVFormatContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:47">AVPacket</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="199:1">{<block_content pos:start="5:5" pos:end="197:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>, <decl pos:start="5:17" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:19">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="197:5">for <control pos:start="11:9" pos:end="11:12">(<init pos:start="11:10" pos:end="11:10">;</init><condition pos:start="11:11" pos:end="11:11">;</condition><incr/>)</control> <block pos:start="11:14" pos:end="197:5">{<block_content pos:start="13:9" pos:end="195:23">

        <decl_stmt pos:start="13:9" pos:end="13:60"><decl pos:start="13:9" pos:end="13:59"><type pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:20">AVPacketList</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:26">pktl</name> <init pos:start="13:28" pos:end="13:59">= <expr pos:start="13:30" pos:end="13:59"><name pos:start="13:30" pos:end="13:59"><name pos:start="13:30" pos:end="13:30">s</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:40">internal</name><operator pos:start="13:41" pos:end="13:42">-&gt;</operator><name pos:start="13:43" pos:end="13:59">raw_packet_buffer</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="17:9" pos:end="41:9"><if pos:start="17:9" pos:end="41:9">if <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">pktl</name></expr>)</condition> <block pos:start="17:19" pos:end="41:9">{<block_content pos:start="19:13" pos:end="39:13">

            <expr_stmt pos:start="19:13" pos:end="19:29"><expr pos:start="19:13" pos:end="19:28"><operator pos:start="19:13" pos:end="19:13">*</operator><name pos:start="19:14" pos:end="19:16">pkt</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:28"><name pos:start="19:20" pos:end="19:23">pktl</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:28">pkt</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:49"><expr pos:start="21:13" pos:end="21:48"><name pos:start="21:13" pos:end="21:14">st</name>   <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:48"><name pos:start="21:20" pos:end="21:20">s</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:29">streams</name><index pos:start="21:30" pos:end="21:48">[<expr pos:start="21:31" pos:end="21:47"><name pos:start="21:31" pos:end="21:47"><name pos:start="21:31" pos:end="21:33">pkt</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:47">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="27:31"><if pos:start="23:13" pos:end="27:31">if <condition pos:start="23:16" pos:end="23:67">(<expr pos:start="23:17" pos:end="23:66"><name pos:start="23:17" pos:end="23:61"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:27">internal</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:61">raw_packet_buffer_remaining_size</name></name> <operator pos:start="23:63" pos:end="23:64">&lt;=</operator> <literal type="number" pos:start="23:66" pos:end="23:66">0</literal></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="27:31"><block_content pos:start="25:17" pos:end="27:31">

                <if_stmt pos:start="25:17" pos:end="27:31"><if pos:start="25:17" pos:end="27:31">if <condition pos:start="25:20" pos:end="25:57">(<expr pos:start="25:21" pos:end="25:56"><operator pos:start="25:21" pos:end="25:21">(</operator><name pos:start="25:22" pos:end="25:24">err</name> <operator pos:start="25:26" pos:end="25:26">=</operator> <call pos:start="25:28" pos:end="25:51"><name pos:start="25:28" pos:end="25:38">probe_codec</name><argument_list pos:start="25:39" pos:end="25:51">(<argument pos:start="25:40" pos:end="25:40"><expr pos:start="25:40" pos:end="25:40"><name pos:start="25:40" pos:end="25:40">s</name></expr></argument>, <argument pos:start="25:43" pos:end="25:44"><expr pos:start="25:43" pos:end="25:44"><name pos:start="25:43" pos:end="25:44">st</name></expr></argument>, <argument pos:start="25:47" pos:end="25:50"><expr pos:start="25:47" pos:end="25:50"><name pos:start="25:47" pos:end="25:50">NULL</name></expr></argument>)</argument_list></call><operator pos:start="25:52" pos:end="25:52">)</operator> <operator pos:start="25:54" pos:end="25:54">&lt;</operator> <literal type="number" pos:start="25:56" pos:end="25:56">0</literal></expr>)</condition><block type="pseudo" pos:start="27:21" pos:end="27:31"><block_content pos:start="27:21" pos:end="27:31">

                    <return pos:start="27:21" pos:end="27:31">return <expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">err</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="29:13" pos:end="39:13"><if pos:start="29:13" pos:end="39:13">if <condition pos:start="29:16" pos:end="29:39">(<expr pos:start="29:17" pos:end="29:38"><name pos:start="29:17" pos:end="29:33"><name pos:start="29:17" pos:end="29:18">st</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:33">request_probe</name></name> <operator pos:start="29:35" pos:end="29:36">&lt;=</operator> <literal type="number" pos:start="29:38" pos:end="29:38">0</literal></expr>)</condition> <block pos:start="29:41" pos:end="39:13">{<block_content pos:start="31:17" pos:end="37:25">

                <expr_stmt pos:start="31:17" pos:end="31:76"><expr pos:start="31:17" pos:end="31:75"><name pos:start="31:17" pos:end="31:46"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:27">internal</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:46">raw_packet_buffer</name></name>                 <operator pos:start="31:64" pos:end="31:64">=</operator> <name pos:start="31:66" pos:end="31:75"><name pos:start="31:66" pos:end="31:69">pktl</name><operator pos:start="31:70" pos:end="31:71">-&gt;</operator><name pos:start="31:72" pos:end="31:75">next</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:75"><expr pos:start="33:17" pos:end="33:74"><name pos:start="33:17" pos:end="33:61"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:27">internal</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:61">raw_packet_buffer_remaining_size</name></name> <operator pos:start="33:63" pos:end="33:64">+=</operator> <name pos:start="33:66" pos:end="33:74"><name pos:start="33:66" pos:end="33:68">pkt</name><operator pos:start="33:69" pos:end="33:70">-&gt;</operator><name pos:start="33:71" pos:end="33:74">size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:30"><expr pos:start="35:17" pos:end="35:29"><call pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:23">av_free</name><argument_list pos:start="35:24" pos:end="35:29">(<argument pos:start="35:25" pos:end="35:28"><expr pos:start="35:25" pos:end="35:28"><name pos:start="35:25" pos:end="35:28">pktl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="37:17" pos:end="37:25">return <expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:11">pkt</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:17">data</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:24">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:11">pkt</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:17">size</name></name> <operator pos:start="47:19" pos:end="47:19">=</operator> <literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:28"><expr pos:start="49:9" pos:end="49:27"><call pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:22">av_init_packet</name><argument_list pos:start="49:23" pos:end="49:27">(<argument pos:start="49:24" pos:end="49:26"><expr pos:start="49:24" pos:end="49:26"><name pos:start="49:24" pos:end="49:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:46"><expr pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:45"><name pos:start="51:15" pos:end="51:37"><name pos:start="51:15" pos:end="51:15">s</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:24">iformat</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:37">read_packet</name></name><argument_list pos:start="51:38" pos:end="51:45">(<argument pos:start="51:39" pos:end="51:39"><expr pos:start="51:39" pos:end="51:39"><name pos:start="51:39" pos:end="51:39">s</name></expr></argument>, <argument pos:start="51:42" pos:end="51:44"><expr pos:start="51:42" pos:end="51:44"><name pos:start="51:42" pos:end="51:44">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="85:9"><if pos:start="53:9" pos:end="85:9">if <condition pos:start="53:12" pos:end="53:20">(<expr pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">&lt;</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>)</condition> <block pos:start="53:22" pos:end="85:9">{<block_content pos:start="61:13" pos:end="83:21">

            <comment type="block" pos:start="55:13" pos:end="59:69">/* Some demuxers return FFERROR_REDO when they consume

               data and discard it (ignored streams, junk, extradata).

               We must re-call the demuxer to get the real packet. */</comment>

            <if_stmt pos:start="61:13" pos:end="63:25"><if pos:start="61:13" pos:end="63:25">if <condition pos:start="61:16" pos:end="61:36">(<expr pos:start="61:17" pos:end="61:35"><name pos:start="61:17" pos:end="61:19">ret</name> <operator pos:start="61:21" pos:end="61:22">==</operator> <name pos:start="61:24" pos:end="61:35">FFERROR_REDO</name></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:25"><block_content pos:start="63:17" pos:end="63:25">

                <continue pos:start="63:17" pos:end="63:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="65:13" pos:end="67:27"><if pos:start="65:13" pos:end="67:27">if <condition pos:start="65:16" pos:end="65:48">(<expr pos:start="65:17" pos:end="65:47"><operator pos:start="65:17" pos:end="65:17">!</operator><name pos:start="65:18" pos:end="65:21">pktl</name> <operator pos:start="65:23" pos:end="65:24">||</operator> <name pos:start="65:26" pos:end="65:28">ret</name> <operator pos:start="65:30" pos:end="65:31">==</operator> <call pos:start="65:33" pos:end="65:47"><name pos:start="65:33" pos:end="65:39">AVERROR</name><argument_list pos:start="65:40" pos:end="65:47">(<argument pos:start="65:41" pos:end="65:46"><expr pos:start="65:41" pos:end="65:46"><name pos:start="65:41" pos:end="65:46">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:27"><block_content pos:start="67:17" pos:end="67:27">

                <return pos:start="67:17" pos:end="67:27">return <expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <for pos:start="69:13" pos:end="81:13">for <control pos:start="69:17" pos:end="69:47">(<init pos:start="69:18" pos:end="69:23"><expr pos:start="69:18" pos:end="69:22"><name pos:start="69:18" pos:end="69:18">i</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <literal type="number" pos:start="69:22" pos:end="69:22">0</literal></expr>;</init> <condition pos:start="69:25" pos:end="69:42"><expr pos:start="69:25" pos:end="69:41"><name pos:start="69:25" pos:end="69:25">i</name> <operator pos:start="69:27" pos:end="69:27">&lt;</operator> <name pos:start="69:29" pos:end="69:41"><name pos:start="69:29" pos:end="69:29">s</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:41">nb_streams</name></name></expr>;</condition> <incr pos:start="69:44" pos:end="69:46"><expr pos:start="69:44" pos:end="69:46"><name pos:start="69:44" pos:end="69:44">i</name><operator pos:start="69:45" pos:end="69:46">++</operator></expr></incr>)</control> <block pos:start="69:49" pos:end="81:13">{<block_content pos:start="71:17" pos:end="79:51">

                <expr_stmt pos:start="71:17" pos:end="71:35"><expr pos:start="71:17" pos:end="71:34"><name pos:start="71:17" pos:end="71:18">st</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:34"><name pos:start="71:22" pos:end="71:22">s</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:31">streams</name><index pos:start="71:32" pos:end="71:34">[<expr pos:start="71:33" pos:end="71:33"><name pos:start="71:33" pos:end="71:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="73:17" pos:end="77:35"><if pos:start="73:17" pos:end="77:35">if <condition pos:start="73:20" pos:end="73:38">(<expr pos:start="73:21" pos:end="73:37"><name pos:start="73:21" pos:end="73:37"><name pos:start="73:21" pos:end="73:22">st</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:37">probe_packets</name></name></expr>)</condition><block type="pseudo" pos:start="75:21" pos:end="77:35"><block_content pos:start="75:21" pos:end="77:35">

                    <if_stmt pos:start="75:21" pos:end="77:35"><if pos:start="75:21" pos:end="77:35">if <condition pos:start="75:24" pos:end="75:61">(<expr pos:start="75:25" pos:end="75:60"><operator pos:start="75:25" pos:end="75:25">(</operator><name pos:start="75:26" pos:end="75:28">err</name> <operator pos:start="75:30" pos:end="75:30">=</operator> <call pos:start="75:32" pos:end="75:55"><name pos:start="75:32" pos:end="75:42">probe_codec</name><argument_list pos:start="75:43" pos:end="75:55">(<argument pos:start="75:44" pos:end="75:44"><expr pos:start="75:44" pos:end="75:44"><name pos:start="75:44" pos:end="75:44">s</name></expr></argument>, <argument pos:start="75:47" pos:end="75:48"><expr pos:start="75:47" pos:end="75:48"><name pos:start="75:47" pos:end="75:48">st</name></expr></argument>, <argument pos:start="75:51" pos:end="75:54"><expr pos:start="75:51" pos:end="75:54"><name pos:start="75:51" pos:end="75:54">NULL</name></expr></argument>)</argument_list></call><operator pos:start="75:56" pos:end="75:56">)</operator> <operator pos:start="75:58" pos:end="75:58">&lt;</operator> <literal type="number" pos:start="75:60" pos:end="75:60">0</literal></expr>)</condition><block type="pseudo" pos:start="77:25" pos:end="77:35"><block_content pos:start="77:25" pos:end="77:35">

                        <return pos:start="77:25" pos:end="77:35">return <expr pos:start="77:32" pos:end="77:34"><name pos:start="77:32" pos:end="77:34">err</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:51"><expr pos:start="79:17" pos:end="79:50"><call pos:start="79:17" pos:end="79:50"><name pos:start="79:17" pos:end="79:26">av_assert0</name><argument_list pos:start="79:27" pos:end="79:50">(<argument pos:start="79:28" pos:end="79:49"><expr pos:start="79:28" pos:end="79:49"><name pos:start="79:28" pos:end="79:44"><name pos:start="79:28" pos:end="79:29">st</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:44">request_probe</name></name> <operator pos:start="79:46" pos:end="79:47">&lt;=</operator> <literal type="number" pos:start="79:49" pos:end="79:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <continue pos:start="83:13" pos:end="83:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="89:9" pos:end="101:9"><if pos:start="89:9" pos:end="101:9">if <condition pos:start="89:12" pos:end="89:22">(<expr pos:start="89:13" pos:end="89:21"><operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:21"><name pos:start="89:14" pos:end="89:16">pkt</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:21">buf</name></name></expr>)</condition> <block pos:start="89:24" pos:end="101:9">{<block_content pos:start="91:13" pos:end="99:23">

            <decl_stmt pos:start="91:13" pos:end="91:33"><decl pos:start="91:13" pos:end="91:32"><type pos:start="91:13" pos:end="91:20"><name pos:start="91:13" pos:end="91:20">AVPacket</name></type> <name pos:start="91:22" pos:end="91:24">tmp</name> <init pos:start="91:26" pos:end="91:32">= <expr pos:start="91:28" pos:end="91:32"><block pos:start="91:28" pos:end="91:32">{ <expr pos:start="91:30" pos:end="91:30"><literal type="number" pos:start="91:30" pos:end="91:30">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:43"><expr pos:start="93:13" pos:end="93:42"><name pos:start="93:13" pos:end="93:15">ret</name> <operator pos:start="93:17" pos:end="93:17">=</operator> <call pos:start="93:19" pos:end="93:42"><name pos:start="93:19" pos:end="93:31">av_packet_ref</name><argument_list pos:start="93:32" pos:end="93:42">(<argument pos:start="93:33" pos:end="93:36"><expr pos:start="93:33" pos:end="93:36"><operator pos:start="93:33" pos:end="93:33">&amp;</operator><name pos:start="93:34" pos:end="93:36">tmp</name></expr></argument>, <argument pos:start="93:39" pos:end="93:41"><expr pos:start="93:39" pos:end="93:41"><name pos:start="93:39" pos:end="93:41">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="97:27"><if pos:start="95:13" pos:end="97:27">if <condition pos:start="95:16" pos:end="95:24">(<expr pos:start="95:17" pos:end="95:23"><name pos:start="95:17" pos:end="95:19">ret</name> <operator pos:start="95:21" pos:end="95:21">&lt;</operator> <literal type="number" pos:start="95:23" pos:end="95:23">0</literal></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:27"><block_content pos:start="97:17" pos:end="97:27">

                <return pos:start="97:17" pos:end="97:27">return <expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:23"><expr pos:start="99:13" pos:end="99:22"><operator pos:start="99:13" pos:end="99:13">*</operator><name pos:start="99:14" pos:end="99:16">pkt</name> <operator pos:start="99:18" pos:end="99:18">=</operator> <name pos:start="99:20" pos:end="99:22">tmp</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="119:9"><if pos:start="105:9" pos:end="119:9">if <condition pos:start="105:12" pos:end="107:47">(<expr pos:start="105:13" pos:end="107:46"><operator pos:start="105:13" pos:end="105:13">(</operator><name pos:start="105:14" pos:end="105:21"><name pos:start="105:14" pos:end="105:14">s</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:21">flags</name></name> <operator pos:start="105:23" pos:end="105:23">&amp;</operator> <name pos:start="105:25" pos:end="105:50">AVFMT_FLAG_DISCARD_CORRUPT</name><operator pos:start="105:51" pos:end="105:51">)</operator> <operator pos:start="105:53" pos:end="105:54">&amp;&amp;</operator>

            <operator pos:start="107:13" pos:end="107:13">(</operator><name pos:start="107:14" pos:end="107:23"><name pos:start="107:14" pos:end="107:16">pkt</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:23">flags</name></name> <operator pos:start="107:25" pos:end="107:25">&amp;</operator> <name pos:start="107:27" pos:end="107:45">AV_PKT_FLAG_CORRUPT</name><operator pos:start="107:46" pos:end="107:46">)</operator></expr>)</condition> <block pos:start="107:49" pos:end="119:9">{<block_content pos:start="109:13" pos:end="117:21">

            <expr_stmt pos:start="109:13" pos:end="113:38"><expr pos:start="109:13" pos:end="113:37"><call pos:start="109:13" pos:end="113:37"><name pos:start="109:13" pos:end="109:18">av_log</name><argument_list pos:start="109:19" pos:end="113:37">(<argument pos:start="109:20" pos:end="109:20"><expr pos:start="109:20" pos:end="109:20"><name pos:start="109:20" pos:end="109:20">s</name></expr></argument>, <argument pos:start="109:23" pos:end="109:36"><expr pos:start="109:23" pos:end="109:36"><name pos:start="109:23" pos:end="109:36">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="111:20" pos:end="111:61"><expr pos:start="111:20" pos:end="111:61"><literal type="string" pos:start="111:20" pos:end="111:61">"Dropped corrupted packet (stream = %d)\n"</literal></expr></argument>,

                   <argument pos:start="113:20" pos:end="113:36"><expr pos:start="113:20" pos:end="113:36"><name pos:start="113:20" pos:end="113:36"><name pos:start="113:20" pos:end="113:22">pkt</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:36">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:33"><expr pos:start="115:13" pos:end="115:32"><call pos:start="115:13" pos:end="115:32"><name pos:start="115:13" pos:end="115:27">av_packet_unref</name><argument_list pos:start="115:28" pos:end="115:32">(<argument pos:start="115:29" pos:end="115:31"><expr pos:start="115:29" pos:end="115:31"><name pos:start="115:29" pos:end="115:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="117:13" pos:end="117:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:57">(<expr pos:start="123:13" pos:end="123:56"><name pos:start="123:13" pos:end="123:29"><name pos:start="123:13" pos:end="123:15">pkt</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:29">stream_index</name></name> <operator pos:start="123:31" pos:end="123:32">&gt;=</operator> <operator pos:start="123:34" pos:end="123:34">(</operator><name pos:start="123:35" pos:end="123:42">unsigned</name><operator pos:start="123:43" pos:end="123:43">)</operator><name pos:start="123:44" pos:end="123:56"><name pos:start="123:44" pos:end="123:44">s</name><operator pos:start="123:45" pos:end="123:46">-&gt;</operator><name pos:start="123:47" pos:end="123:56">nb_streams</name></name></expr>)</condition> <block pos:start="123:59" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:21">

            <expr_stmt pos:start="125:13" pos:end="125:84"><expr pos:start="125:13" pos:end="125:83"><call pos:start="125:13" pos:end="125:83"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:83">(<argument pos:start="125:20" pos:end="125:20"><expr pos:start="125:20" pos:end="125:20"><name pos:start="125:20" pos:end="125:20">s</name></expr></argument>, <argument pos:start="125:23" pos:end="125:34"><expr pos:start="125:23" pos:end="125:34"><name pos:start="125:23" pos:end="125:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:37" pos:end="125:63"><expr pos:start="125:37" pos:end="125:63"><literal type="string" pos:start="125:37" pos:end="125:63">"Invalid stream index %d\n"</literal></expr></argument>, <argument pos:start="125:66" pos:end="125:82"><expr pos:start="125:66" pos:end="125:82"><name pos:start="125:66" pos:end="125:82"><name pos:start="125:66" pos:end="125:68">pkt</name><operator pos:start="125:69" pos:end="125:70">-&gt;</operator><name pos:start="125:71" pos:end="125:82">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="127:13" pos:end="127:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:43"><expr pos:start="133:9" pos:end="133:42"><name pos:start="133:9" pos:end="133:10">st</name> <operator pos:start="133:12" pos:end="133:12">=</operator> <name pos:start="133:14" pos:end="133:42"><name pos:start="133:14" pos:end="133:14">s</name><operator pos:start="133:15" pos:end="133:16">-&gt;</operator><name pos:start="133:17" pos:end="133:23">streams</name><index pos:start="133:24" pos:end="133:42">[<expr pos:start="133:25" pos:end="133:41"><name pos:start="133:25" pos:end="133:41"><name pos:start="133:25" pos:end="133:27">pkt</name><operator pos:start="133:28" pos:end="133:29">-&gt;</operator><name pos:start="133:30" pos:end="133:41">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="137:9" pos:end="153:9"><if pos:start="137:9" pos:end="153:9">if <condition pos:start="137:12" pos:end="137:116">(<expr pos:start="137:13" pos:end="137:115"><call pos:start="137:13" pos:end="137:64"><name pos:start="137:13" pos:end="137:33">update_wrap_reference</name><argument_list pos:start="137:34" pos:end="137:64">(<argument pos:start="137:35" pos:end="137:35"><expr pos:start="137:35" pos:end="137:35"><name pos:start="137:35" pos:end="137:35">s</name></expr></argument>, <argument pos:start="137:38" pos:end="137:39"><expr pos:start="137:38" pos:end="137:39"><name pos:start="137:38" pos:end="137:39">st</name></expr></argument>, <argument pos:start="137:42" pos:end="137:58"><expr pos:start="137:42" pos:end="137:58"><name pos:start="137:42" pos:end="137:58"><name pos:start="137:42" pos:end="137:44">pkt</name><operator pos:start="137:45" pos:end="137:46">-&gt;</operator><name pos:start="137:47" pos:end="137:58">stream_index</name></name></expr></argument>, <argument pos:start="137:61" pos:end="137:63"><expr pos:start="137:61" pos:end="137:63"><name pos:start="137:61" pos:end="137:63">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="137:66" pos:end="137:67">&amp;&amp;</operator> <name pos:start="137:69" pos:end="137:89"><name pos:start="137:69" pos:end="137:70">st</name><operator pos:start="137:71" pos:end="137:72">-&gt;</operator><name pos:start="137:73" pos:end="137:89">pts_wrap_behavior</name></name> <operator pos:start="137:91" pos:end="137:92">==</operator> <name pos:start="137:94" pos:end="137:115">AV_PTS_WRAP_SUB_OFFSET</name></expr>)</condition> <block pos:start="137:118" pos:end="153:9">{<block_content pos:start="141:13" pos:end="151:62">

            <comment type="line" pos:start="139:13" pos:end="139:59">// correct first time stamps to negative values</comment>

            <if_stmt pos:start="141:13" pos:end="143:66"><if pos:start="141:13" pos:end="143:66">if <condition pos:start="141:16" pos:end="141:44">(<expr pos:start="141:17" pos:end="141:43"><operator pos:start="141:17" pos:end="141:17">!</operator><call pos:start="141:18" pos:end="141:43"><name pos:start="141:18" pos:end="141:28">is_relative</name><argument_list pos:start="141:29" pos:end="141:43">(<argument pos:start="141:30" pos:end="141:42"><expr pos:start="141:30" pos:end="141:42"><name pos:start="141:30" pos:end="141:42"><name pos:start="141:30" pos:end="141:31">st</name><operator pos:start="141:32" pos:end="141:33">-&gt;</operator><name pos:start="141:34" pos:end="141:42">first_dts</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:66"><block_content pos:start="143:17" pos:end="143:66">

                <expr_stmt pos:start="143:17" pos:end="143:66"><expr pos:start="143:17" pos:end="143:65"><name pos:start="143:17" pos:end="143:29"><name pos:start="143:17" pos:end="143:18">st</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:29">first_dts</name></name> <operator pos:start="143:31" pos:end="143:31">=</operator> <call pos:start="143:33" pos:end="143:65"><name pos:start="143:33" pos:end="143:46">wrap_timestamp</name><argument_list pos:start="143:47" pos:end="143:65">(<argument pos:start="143:48" pos:end="143:49"><expr pos:start="143:48" pos:end="143:49"><name pos:start="143:48" pos:end="143:49">st</name></expr></argument>, <argument pos:start="143:52" pos:end="143:64"><expr pos:start="143:52" pos:end="143:64"><name pos:start="143:52" pos:end="143:64"><name pos:start="143:52" pos:end="143:53">st</name><operator pos:start="143:54" pos:end="143:55">-&gt;</operator><name pos:start="143:56" pos:end="143:64">first_dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="145:13" pos:end="147:68"><if pos:start="145:13" pos:end="147:68">if <condition pos:start="145:16" pos:end="145:45">(<expr pos:start="145:17" pos:end="145:44"><operator pos:start="145:17" pos:end="145:17">!</operator><call pos:start="145:18" pos:end="145:44"><name pos:start="145:18" pos:end="145:28">is_relative</name><argument_list pos:start="145:29" pos:end="145:44">(<argument pos:start="145:30" pos:end="145:43"><expr pos:start="145:30" pos:end="145:43"><name pos:start="145:30" pos:end="145:43"><name pos:start="145:30" pos:end="145:31">st</name><operator pos:start="145:32" pos:end="145:33">-&gt;</operator><name pos:start="145:34" pos:end="145:43">start_time</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="147:68"><block_content pos:start="147:17" pos:end="147:68">

                <expr_stmt pos:start="147:17" pos:end="147:68"><expr pos:start="147:17" pos:end="147:67"><name pos:start="147:17" pos:end="147:30"><name pos:start="147:17" pos:end="147:18">st</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:30">start_time</name></name> <operator pos:start="147:32" pos:end="147:32">=</operator> <call pos:start="147:34" pos:end="147:67"><name pos:start="147:34" pos:end="147:47">wrap_timestamp</name><argument_list pos:start="147:48" pos:end="147:67">(<argument pos:start="147:49" pos:end="147:50"><expr pos:start="147:49" pos:end="147:50"><name pos:start="147:49" pos:end="147:50">st</name></expr></argument>, <argument pos:start="147:53" pos:end="147:66"><expr pos:start="147:53" pos:end="147:66"><name pos:start="147:53" pos:end="147:66"><name pos:start="147:53" pos:end="147:54">st</name><operator pos:start="147:55" pos:end="147:56">-&gt;</operator><name pos:start="147:57" pos:end="147:66">start_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="149:13" pos:end="151:62"><if pos:start="149:13" pos:end="151:62">if <condition pos:start="149:16" pos:end="149:42">(<expr pos:start="149:17" pos:end="149:41"><operator pos:start="149:17" pos:end="149:17">!</operator><call pos:start="149:18" pos:end="149:41"><name pos:start="149:18" pos:end="149:28">is_relative</name><argument_list pos:start="149:29" pos:end="149:41">(<argument pos:start="149:30" pos:end="149:40"><expr pos:start="149:30" pos:end="149:40"><name pos:start="149:30" pos:end="149:40"><name pos:start="149:30" pos:end="149:31">st</name><operator pos:start="149:32" pos:end="149:33">-&gt;</operator><name pos:start="149:34" pos:end="149:40">cur_dts</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="151:17" pos:end="151:62"><block_content pos:start="151:17" pos:end="151:62">

                <expr_stmt pos:start="151:17" pos:end="151:62"><expr pos:start="151:17" pos:end="151:61"><name pos:start="151:17" pos:end="151:27"><name pos:start="151:17" pos:end="151:18">st</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:27">cur_dts</name></name> <operator pos:start="151:29" pos:end="151:29">=</operator> <call pos:start="151:31" pos:end="151:61"><name pos:start="151:31" pos:end="151:44">wrap_timestamp</name><argument_list pos:start="151:45" pos:end="151:61">(<argument pos:start="151:46" pos:end="151:47"><expr pos:start="151:46" pos:end="151:47"><name pos:start="151:46" pos:end="151:47">st</name></expr></argument>, <argument pos:start="151:50" pos:end="151:60"><expr pos:start="151:50" pos:end="151:60"><name pos:start="151:50" pos:end="151:60"><name pos:start="151:50" pos:end="151:51">st</name><operator pos:start="151:52" pos:end="151:53">-&gt;</operator><name pos:start="151:54" pos:end="151:60">cur_dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:48"><expr pos:start="157:9" pos:end="157:47"><name pos:start="157:9" pos:end="157:16"><name pos:start="157:9" pos:end="157:11">pkt</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:16">dts</name></name> <operator pos:start="157:18" pos:end="157:18">=</operator> <call pos:start="157:20" pos:end="157:47"><name pos:start="157:20" pos:end="157:33">wrap_timestamp</name><argument_list pos:start="157:34" pos:end="157:47">(<argument pos:start="157:35" pos:end="157:36"><expr pos:start="157:35" pos:end="157:36"><name pos:start="157:35" pos:end="157:36">st</name></expr></argument>, <argument pos:start="157:39" pos:end="157:46"><expr pos:start="157:39" pos:end="157:46"><name pos:start="157:39" pos:end="157:46"><name pos:start="157:39" pos:end="157:41">pkt</name><operator pos:start="157:42" pos:end="157:43">-&gt;</operator><name pos:start="157:44" pos:end="157:46">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:48"><expr pos:start="159:9" pos:end="159:47"><name pos:start="159:9" pos:end="159:16"><name pos:start="159:9" pos:end="159:11">pkt</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:16">pts</name></name> <operator pos:start="159:18" pos:end="159:18">=</operator> <call pos:start="159:20" pos:end="159:47"><name pos:start="159:20" pos:end="159:33">wrap_timestamp</name><argument_list pos:start="159:34" pos:end="159:47">(<argument pos:start="159:35" pos:end="159:36"><expr pos:start="159:35" pos:end="159:36"><name pos:start="159:35" pos:end="159:36">st</name></expr></argument>, <argument pos:start="159:39" pos:end="159:46"><expr pos:start="159:39" pos:end="159:46"><name pos:start="159:39" pos:end="159:46"><name pos:start="159:39" pos:end="159:41">pkt</name><operator pos:start="159:42" pos:end="159:43">-&gt;</operator><name pos:start="159:44" pos:end="159:46">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:31"><expr pos:start="163:9" pos:end="163:30"><call pos:start="163:9" pos:end="163:30"><name pos:start="163:9" pos:end="163:23">force_codec_ids</name><argument_list pos:start="163:24" pos:end="163:30">(<argument pos:start="163:25" pos:end="163:25"><expr pos:start="163:25" pos:end="163:25"><name pos:start="163:25" pos:end="163:25">s</name></expr></argument>, <argument pos:start="163:28" pos:end="163:29"><expr pos:start="163:28" pos:end="163:29"><name pos:start="163:28" pos:end="163:29">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="167:9" pos:end="167:76">/* TODO: audio: time filter; video: frame reordering (pts != dts) */</comment>

        <if_stmt pos:start="169:9" pos:end="171:92"><if pos:start="169:9" pos:end="171:92">if <condition pos:start="169:12" pos:end="169:43">(<expr pos:start="169:13" pos:end="169:42"><name pos:start="169:13" pos:end="169:42"><name pos:start="169:13" pos:end="169:13">s</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:42">use_wallclock_as_timestamps</name></name></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:92"><block_content pos:start="171:13" pos:end="171:92">

            <expr_stmt pos:start="171:13" pos:end="171:92"><expr pos:start="171:13" pos:end="171:91"><name pos:start="171:13" pos:end="171:20"><name pos:start="171:13" pos:end="171:15">pkt</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:20">dts</name></name> <operator pos:start="171:22" pos:end="171:22">=</operator> <name pos:start="171:24" pos:end="171:31"><name pos:start="171:24" pos:end="171:26">pkt</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:31">pts</name></name> <operator pos:start="171:33" pos:end="171:33">=</operator> <call pos:start="171:35" pos:end="171:91"><name pos:start="171:35" pos:end="171:46">av_rescale_q</name><argument_list pos:start="171:47" pos:end="171:91">(<argument pos:start="171:48" pos:end="171:59"><expr pos:start="171:48" pos:end="171:59"><call pos:start="171:48" pos:end="171:59"><name pos:start="171:48" pos:end="171:57">av_gettime</name><argument_list pos:start="171:58" pos:end="171:59">()</argument_list></call></expr></argument>, <argument pos:start="171:62" pos:end="171:75"><expr pos:start="171:62" pos:end="171:75"><name pos:start="171:62" pos:end="171:75">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="171:78" pos:end="171:90"><expr pos:start="171:78" pos:end="171:90"><name pos:start="171:78" pos:end="171:90"><name pos:start="171:78" pos:end="171:79">st</name><operator pos:start="171:80" pos:end="171:81">-&gt;</operator><name pos:start="171:82" pos:end="171:90">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="175:9" pos:end="177:23"><if pos:start="175:9" pos:end="177:23">if <condition pos:start="175:12" pos:end="175:44">(<expr pos:start="175:13" pos:end="175:43"><operator pos:start="175:13" pos:end="175:13">!</operator><name pos:start="175:14" pos:end="175:17">pktl</name> <operator pos:start="175:19" pos:end="175:20">&amp;&amp;</operator> <name pos:start="175:22" pos:end="175:38"><name pos:start="175:22" pos:end="175:23">st</name><operator pos:start="175:24" pos:end="175:25">-&gt;</operator><name pos:start="175:26" pos:end="175:38">request_probe</name></name> <operator pos:start="175:40" pos:end="175:41">&lt;=</operator> <literal type="number" pos:start="175:43" pos:end="175:43">0</literal></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:23"><block_content pos:start="177:13" pos:end="177:23">

            <return pos:start="177:13" pos:end="177:23">return <expr pos:start="177:20" pos:end="177:22"><name pos:start="177:20" pos:end="177:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="181:9" pos:end="183:68"><expr pos:start="181:9" pos:end="183:67"><name pos:start="181:9" pos:end="181:11">err</name> <operator pos:start="181:13" pos:end="181:13">=</operator> <call pos:start="181:15" pos:end="183:67"><name pos:start="181:15" pos:end="181:27">add_to_pktbuf</name><argument_list pos:start="181:28" pos:end="183:67">(<argument pos:start="181:29" pos:end="181:59"><expr pos:start="181:29" pos:end="181:59"><operator pos:start="181:29" pos:end="181:29">&amp;</operator><name pos:start="181:30" pos:end="181:59"><name pos:start="181:30" pos:end="181:30">s</name><operator pos:start="181:31" pos:end="181:32">-&gt;</operator><name pos:start="181:33" pos:end="181:40">internal</name><operator pos:start="181:41" pos:end="181:42">-&gt;</operator><name pos:start="181:43" pos:end="181:59">raw_packet_buffer</name></name></expr></argument>, <argument pos:start="181:62" pos:end="181:64"><expr pos:start="181:62" pos:end="181:64"><name pos:start="181:62" pos:end="181:64">pkt</name></expr></argument>,

                            <argument pos:start="183:29" pos:end="183:63"><expr pos:start="183:29" pos:end="183:63"><operator pos:start="183:29" pos:end="183:29">&amp;</operator><name pos:start="183:30" pos:end="183:63"><name pos:start="183:30" pos:end="183:30">s</name><operator pos:start="183:31" pos:end="183:32">-&gt;</operator><name pos:start="183:33" pos:end="183:40">internal</name><operator pos:start="183:41" pos:end="183:42">-&gt;</operator><name pos:start="183:43" pos:end="183:63">raw_packet_buffer_end</name></name></expr></argument>, <argument pos:start="183:66" pos:end="183:66"><expr pos:start="183:66" pos:end="183:66"><literal type="number" pos:start="183:66" pos:end="183:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="185:9" pos:end="187:23"><if pos:start="185:9" pos:end="187:23">if <condition pos:start="185:12" pos:end="185:16">(<expr pos:start="185:13" pos:end="185:15"><name pos:start="185:13" pos:end="185:15">err</name></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:23"><block_content pos:start="187:13" pos:end="187:23">

            <return pos:start="187:13" pos:end="187:23">return <expr pos:start="187:20" pos:end="187:22"><name pos:start="187:20" pos:end="187:22">err</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:67"><expr pos:start="189:9" pos:end="189:66"><name pos:start="189:9" pos:end="189:53"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:19">internal</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:53">raw_packet_buffer_remaining_size</name></name> <operator pos:start="189:55" pos:end="189:56">-=</operator> <name pos:start="189:58" pos:end="189:66"><name pos:start="189:58" pos:end="189:60">pkt</name><operator pos:start="189:61" pos:end="189:62">-&gt;</operator><name pos:start="189:63" pos:end="189:66">size</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="193:9" pos:end="195:23"><if pos:start="193:9" pos:end="195:23">if <condition pos:start="193:12" pos:end="193:48">(<expr pos:start="193:13" pos:end="193:47"><operator pos:start="193:13" pos:end="193:13">(</operator><name pos:start="193:14" pos:end="193:16">err</name> <operator pos:start="193:18" pos:end="193:18">=</operator> <call pos:start="193:20" pos:end="193:42"><name pos:start="193:20" pos:end="193:30">probe_codec</name><argument_list pos:start="193:31" pos:end="193:42">(<argument pos:start="193:32" pos:end="193:32"><expr pos:start="193:32" pos:end="193:32"><name pos:start="193:32" pos:end="193:32">s</name></expr></argument>, <argument pos:start="193:35" pos:end="193:36"><expr pos:start="193:35" pos:end="193:36"><name pos:start="193:35" pos:end="193:36">st</name></expr></argument>, <argument pos:start="193:39" pos:end="193:41"><expr pos:start="193:39" pos:end="193:41"><name pos:start="193:39" pos:end="193:41">pkt</name></expr></argument>)</argument_list></call><operator pos:start="193:43" pos:end="193:43">)</operator> <operator pos:start="193:45" pos:end="193:45">&lt;</operator> <literal type="number" pos:start="193:47" pos:end="193:47">0</literal></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:23"><block_content pos:start="195:13" pos:end="195:23">

            <return pos:start="195:13" pos:end="195:23">return <expr pos:start="195:20" pos:end="195:22"><name pos:start="195:20" pos:end="195:22">err</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
