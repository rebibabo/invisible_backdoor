<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15375.c" pos:tabs="8"><function pos:start="1:1" pos:end="112:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_rfps_add_frame</name><parameter_list pos:start="1:22" pos:end="1:68">(<parameter pos:start="1:23" pos:end="1:41"><decl pos:start="1:23" pos:end="1:41"><type pos:start="1:23" pos:end="1:41"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">ic</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:51">AVStream</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">st</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:64">int64_t</name></type> <name pos:start="1:66" pos:end="1:67">ts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="112:1">{<block_content pos:start="5:5" pos:end="110:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:16">last</name> <init pos:start="7:18" pos:end="7:37">= <expr pos:start="7:20" pos:end="7:37"><name pos:start="7:20" pos:end="7:37"><name pos:start="7:20" pos:end="7:21">st</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:27">info</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:37">last_dts</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="102:5"><if pos:start="11:5" pos:end="102:5">if<condition pos:start="11:7" pos:end="13:42">(   <expr pos:start="11:11" pos:end="13:41"><name pos:start="11:11" pos:end="11:12">ts</name> <operator pos:start="11:14" pos:end="11:15">!=</operator> <name pos:start="11:17" pos:end="11:30">AV_NOPTS_VALUE</name> <operator pos:start="11:32" pos:end="11:33">&amp;&amp;</operator> <name pos:start="11:35" pos:end="11:38">last</name> <operator pos:start="11:40" pos:end="11:41">!=</operator> <name pos:start="11:43" pos:end="11:56">AV_NOPTS_VALUE</name> <operator pos:start="11:58" pos:end="11:59">&amp;&amp;</operator> <name pos:start="11:61" pos:end="11:62">ts</name> <operator pos:start="11:64" pos:end="11:64">&gt;</operator> <name pos:start="11:66" pos:end="11:69">last</name>

       <operator pos:start="13:8" pos:end="13:9">&amp;&amp;</operator> <name pos:start="13:11" pos:end="13:12">ts</name> <operator pos:start="13:14" pos:end="13:14">-</operator> <operator pos:start="13:16" pos:end="13:16">(</operator><name pos:start="13:17" pos:end="13:24">uint64_t</name><operator pos:start="13:25" pos:end="13:25">)</operator><name pos:start="13:26" pos:end="13:29">last</name> <operator pos:start="13:31" pos:end="13:31">&lt;</operator> <name pos:start="13:33" pos:end="13:41">INT64_MAX</name></expr>)</condition><block pos:start="13:43" pos:end="102:5">{<block_content pos:start="15:9" pos:end="100:78">

        <decl_stmt pos:start="15:9" pos:end="15:92"><decl pos:start="15:9" pos:end="15:91"><type pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:14">double</name></type> <name pos:start="15:16" pos:end="15:18">dts</name><init pos:start="15:19" pos:end="15:91">= <expr pos:start="15:21" pos:end="15:91"><operator pos:start="15:21" pos:end="15:21">(</operator><ternary pos:start="15:22" pos:end="15:66"><condition pos:start="15:22" pos:end="15:38"><expr pos:start="15:22" pos:end="15:36"><call pos:start="15:22" pos:end="15:36"><name pos:start="15:22" pos:end="15:32">is_relative</name><argument_list pos:start="15:33" pos:end="15:36">(<argument pos:start="15:34" pos:end="15:35"><expr pos:start="15:34" pos:end="15:35"><name pos:start="15:34" pos:end="15:35">ts</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="15:41" pos:end="15:61">  <expr pos:start="15:41" pos:end="15:61"><name pos:start="15:41" pos:end="15:42">ts</name> <operator pos:start="15:44" pos:end="15:44">-</operator> <name pos:start="15:46" pos:end="15:61">RELATIVE_TS_BASE</name></expr> </then><else pos:start="15:63" pos:end="15:66">: <expr pos:start="15:65" pos:end="15:66"><name pos:start="15:65" pos:end="15:66">ts</name></expr></else></ternary><operator pos:start="15:67" pos:end="15:67">)</operator> <operator pos:start="15:69" pos:end="15:69">*</operator> <call pos:start="15:71" pos:end="15:91"><name pos:start="15:71" pos:end="15:76">av_q2d</name><argument_list pos:start="15:77" pos:end="15:91">(<argument pos:start="15:78" pos:end="15:90"><expr pos:start="15:78" pos:end="15:90"><name pos:start="15:78" pos:end="15:90"><name pos:start="15:78" pos:end="15:79">st</name><operator pos:start="15:80" pos:end="15:81">-&gt;</operator><name pos:start="15:82" pos:end="15:90">time_base</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:36"><decl pos:start="17:9" pos:end="17:35"><type pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15">int64_t</name></type> <name pos:start="17:17" pos:end="17:24">duration</name><init pos:start="17:25" pos:end="17:35">= <expr pos:start="17:27" pos:end="17:35"><name pos:start="17:27" pos:end="17:28">ts</name> <operator pos:start="17:30" pos:end="17:30">-</operator> <name pos:start="17:32" pos:end="17:35">last</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="23:89"><if pos:start="21:9" pos:end="23:89">if <condition pos:start="21:12" pos:end="21:38">(<expr pos:start="21:13" pos:end="21:37"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:37"><name pos:start="21:14" pos:end="21:15">st</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:21">info</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:37">duration_error</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:89"><block_content pos:start="23:13" pos:end="23:89">

            <expr_stmt pos:start="23:13" pos:end="23:89"><expr pos:start="23:13" pos:end="23:88"><name pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:14">st</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:20">info</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:36">duration_error</name></name> <operator pos:start="23:38" pos:end="23:38">=</operator> <call pos:start="23:40" pos:end="23:88"><name pos:start="23:40" pos:end="23:49">av_mallocz</name><argument_list pos:start="23:50" pos:end="23:88">(<argument pos:start="23:51" pos:end="23:87"><expr pos:start="23:51" pos:end="23:87"><sizeof pos:start="23:51" pos:end="23:85">sizeof<argument_list pos:start="23:57" pos:end="23:85">(<argument pos:start="23:58" pos:end="23:84"><expr pos:start="23:58" pos:end="23:84"><name pos:start="23:58" pos:end="23:84"><name pos:start="23:58" pos:end="23:59">st</name><operator pos:start="23:60" pos:end="23:61">-&gt;</operator><name pos:start="23:62" pos:end="23:65">info</name><operator pos:start="23:66" pos:end="23:67">-&gt;</operator><name pos:start="23:68" pos:end="23:81">duration_error</name><index pos:start="23:82" pos:end="23:84">[<expr pos:start="23:83" pos:end="23:83"><literal type="number" pos:start="23:83" pos:end="23:83">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><operator pos:start="23:86" pos:end="23:86">*</operator><literal type="number" pos:start="23:87" pos:end="23:87">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="27:35"><if pos:start="25:9" pos:end="27:35">if <condition pos:start="25:12" pos:end="25:38">(<expr pos:start="25:13" pos:end="25:37"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:37"><name pos:start="25:14" pos:end="25:15">st</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:21">info</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:37">duration_error</name></name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:35"><block_content pos:start="27:13" pos:end="27:35">

            <return pos:start="27:13" pos:end="27:35">return <expr pos:start="27:20" pos:end="27:34"><call pos:start="27:20" pos:end="27:34"><name pos:start="27:20" pos:end="27:26">AVERROR</name><argument_list pos:start="27:27" pos:end="27:34">(<argument pos:start="27:28" pos:end="27:33"><expr pos:start="27:28" pos:end="27:33"><name pos:start="27:28" pos:end="27:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



<comment type="line" pos:start="31:1" pos:end="31:58">//         if(st-&gt;codec-&gt;codec_type == AVMEDIA_TYPE_VIDEO)</comment>

<comment type="line" pos:start="33:1" pos:end="33:55">//             av_log(NULL, AV_LOG_ERROR, "%f\n", dts);</comment>

        <for pos:start="35:9" pos:end="57:9">for <control pos:start="35:13" pos:end="35:43">(<init pos:start="35:14" pos:end="35:17"><expr pos:start="35:14" pos:end="35:16"><name pos:start="35:14" pos:end="35:14">i</name><operator pos:start="35:15" pos:end="35:15">=</operator><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</init> <condition pos:start="35:19" pos:end="35:38"><expr pos:start="35:19" pos:end="35:37"><name pos:start="35:19" pos:end="35:19">i</name><operator pos:start="35:20" pos:end="35:20">&lt;</operator><name pos:start="35:21" pos:end="35:37">MAX_STD_TIMEBASES</name></expr>;</condition> <incr pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><name pos:start="35:40" pos:end="35:40">i</name><operator pos:start="35:41" pos:end="35:42">++</operator></expr></incr>)</control> <block pos:start="35:45" pos:end="57:9">{<block_content pos:start="37:13" pos:end="55:13">

            <if_stmt pos:start="37:13" pos:end="55:13"><if pos:start="37:13" pos:end="55:13">if <condition pos:start="37:16" pos:end="37:57">(<expr pos:start="37:17" pos:end="37:56"><name pos:start="37:17" pos:end="37:49"><name pos:start="37:17" pos:end="37:18">st</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:24">info</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:40">duration_error</name><index pos:start="37:41" pos:end="37:43">[<expr pos:start="37:42" pos:end="37:42"><literal type="number" pos:start="37:42" pos:end="37:42">0</literal></expr>]</index><index pos:start="37:44" pos:end="37:46">[<expr pos:start="37:45" pos:end="37:45"><literal type="number" pos:start="37:45" pos:end="37:45">1</literal></expr>]</index><index pos:start="37:47" pos:end="37:49">[<expr pos:start="37:48" pos:end="37:48"><name pos:start="37:48" pos:end="37:48">i</name></expr>]</index></name> <operator pos:start="37:51" pos:end="37:51">&lt;</operator> <literal type="number" pos:start="37:53" pos:end="37:56">1e10</literal></expr>)</condition> <block pos:start="37:59" pos:end="55:13">{<block_content pos:start="39:17" pos:end="53:17">

                <decl_stmt pos:start="39:17" pos:end="39:52"><decl pos:start="39:17" pos:end="39:51"><type pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">int</name></type> <name pos:start="39:21" pos:end="39:29">framerate</name><init pos:start="39:30" pos:end="39:51">= <expr pos:start="39:32" pos:end="39:51"><call pos:start="39:32" pos:end="39:51"><name pos:start="39:32" pos:end="39:48">get_std_framerate</name><argument_list pos:start="39:49" pos:end="39:51">(<argument pos:start="39:50" pos:end="39:50"><expr pos:start="39:50" pos:end="39:50"><name pos:start="39:50" pos:end="39:50">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="41:17" pos:end="41:53"><decl pos:start="41:17" pos:end="41:52"><type pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:22">double</name></type> <name pos:start="41:24" pos:end="41:27">sdts</name><init pos:start="41:28" pos:end="41:52">= <expr pos:start="41:30" pos:end="41:52"><name pos:start="41:30" pos:end="41:32">dts</name><operator pos:start="41:33" pos:end="41:33">*</operator><name pos:start="41:34" pos:end="41:42">framerate</name><operator pos:start="41:43" pos:end="41:43">/</operator><operator pos:start="41:44" pos:end="41:44">(</operator><literal type="number" pos:start="41:45" pos:end="41:48">1001</literal><operator pos:start="41:49" pos:end="41:49">*</operator><literal type="number" pos:start="41:50" pos:end="41:51">12</literal><operator pos:start="41:52" pos:end="41:52">)</operator></expr></init></decl>;</decl_stmt>

                <for pos:start="43:17" pos:end="53:17">for<control pos:start="43:20" pos:end="43:34">(<init pos:start="43:21" pos:end="43:24"><expr pos:start="43:21" pos:end="43:23"><name pos:start="43:21" pos:end="43:21">j</name><operator pos:start="43:22" pos:end="43:22">=</operator><literal type="number" pos:start="43:23" pos:end="43:23">0</literal></expr>;</init> <condition pos:start="43:26" pos:end="43:29"><expr pos:start="43:26" pos:end="43:28"><name pos:start="43:26" pos:end="43:26">j</name><operator pos:start="43:27" pos:end="43:27">&lt;</operator><literal type="number" pos:start="43:28" pos:end="43:28">2</literal></expr>;</condition> <incr pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:31">j</name><operator pos:start="43:32" pos:end="43:33">++</operator></expr></incr>)</control><block pos:start="43:35" pos:end="53:17">{<block_content pos:start="45:21" pos:end="51:69">

                    <decl_stmt pos:start="45:21" pos:end="45:54"><decl pos:start="45:21" pos:end="45:53"><type pos:start="45:21" pos:end="45:27"><name pos:start="45:21" pos:end="45:27">int64_t</name></type> <name pos:start="45:29" pos:end="45:33">ticks</name><init pos:start="45:34" pos:end="45:53">= <expr pos:start="45:36" pos:end="45:53"><call pos:start="45:36" pos:end="45:53"><name pos:start="45:36" pos:end="45:41">llrint</name><argument_list pos:start="45:42" pos:end="45:53">(<argument pos:start="45:43" pos:end="45:52"><expr pos:start="45:43" pos:end="45:52"><name pos:start="45:43" pos:end="45:46">sdts</name><operator pos:start="45:47" pos:end="45:47">+</operator><name pos:start="45:48" pos:end="45:48">j</name><operator pos:start="45:49" pos:end="45:49">*</operator><literal type="number" pos:start="45:50" pos:end="45:52">0.5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="47:21" pos:end="47:55"><decl pos:start="47:21" pos:end="47:54"><type pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:26">double</name></type> <name pos:start="47:28" pos:end="47:32">error</name><init pos:start="47:33" pos:end="47:54">= <expr pos:start="47:35" pos:end="47:54"><name pos:start="47:35" pos:end="47:38">sdts</name> <operator pos:start="47:40" pos:end="47:40">-</operator> <name pos:start="47:42" pos:end="47:46">ticks</name> <operator pos:start="47:48" pos:end="47:48">+</operator> <name pos:start="47:50" pos:end="47:50">j</name><operator pos:start="47:51" pos:end="47:51">*</operator><literal type="number" pos:start="47:52" pos:end="47:54">0.5</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:63"><expr pos:start="49:21" pos:end="49:62"><name pos:start="49:21" pos:end="49:53"><name pos:start="49:21" pos:end="49:22">st</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:28">info</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:44">duration_error</name><index pos:start="49:45" pos:end="49:47">[<expr pos:start="49:46" pos:end="49:46"><name pos:start="49:46" pos:end="49:46">j</name></expr>]</index><index pos:start="49:48" pos:end="49:50">[<expr pos:start="49:49" pos:end="49:49"><literal type="number" pos:start="49:49" pos:end="49:49">0</literal></expr>]</index><index pos:start="49:51" pos:end="49:53">[<expr pos:start="49:52" pos:end="49:52"><name pos:start="49:52" pos:end="49:52">i</name></expr>]</index></name> <operator pos:start="49:55" pos:end="49:56">+=</operator> <name pos:start="49:58" pos:end="49:62">error</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:69"><expr pos:start="51:21" pos:end="51:68"><name pos:start="51:21" pos:end="51:53"><name pos:start="51:21" pos:end="51:22">st</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:28">info</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:44">duration_error</name><index pos:start="51:45" pos:end="51:47">[<expr pos:start="51:46" pos:end="51:46"><name pos:start="51:46" pos:end="51:46">j</name></expr>]</index><index pos:start="51:48" pos:end="51:50">[<expr pos:start="51:49" pos:end="51:49"><literal type="number" pos:start="51:49" pos:end="51:49">1</literal></expr>]</index><index pos:start="51:51" pos:end="51:53">[<expr pos:start="51:52" pos:end="51:52"><name pos:start="51:52" pos:end="51:52">i</name></expr>]</index></name> <operator pos:start="51:55" pos:end="51:56">+=</operator> <name pos:start="51:58" pos:end="51:62">error</name><operator pos:start="51:63" pos:end="51:63">*</operator><name pos:start="51:64" pos:end="51:68">error</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="59:9" pos:end="59:35"><expr pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:10">st</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:16">info</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:32">duration_count</name></name><operator pos:start="59:33" pos:end="59:34">++</operator></expr>;</expr_stmt>




        <if_stmt pos:start="64:9" pos:end="92:9"><if pos:start="64:9" pos:end="92:9">if <condition pos:start="64:12" pos:end="64:47">(<expr pos:start="64:13" pos:end="64:46"><name pos:start="64:13" pos:end="64:36"><name pos:start="64:13" pos:end="64:14">st</name><operator pos:start="64:15" pos:end="64:16">-&gt;</operator><name pos:start="64:17" pos:end="64:20">info</name><operator pos:start="64:21" pos:end="64:22">-&gt;</operator><name pos:start="64:23" pos:end="64:36">duration_count</name></name> <operator pos:start="64:38" pos:end="64:38">%</operator> <literal type="number" pos:start="64:40" pos:end="64:41">10</literal> <operator pos:start="64:43" pos:end="64:44">==</operator> <literal type="number" pos:start="64:46" pos:end="64:46">0</literal></expr>)</condition> <block pos:start="64:49" pos:end="92:9">{<block_content pos:start="66:13" pos:end="90:13">

            <decl_stmt pos:start="66:13" pos:end="66:45"><decl pos:start="66:13" pos:end="66:44"><type pos:start="66:13" pos:end="66:15"><name pos:start="66:13" pos:end="66:15">int</name></type> <name pos:start="66:17" pos:end="66:17">n</name> <init pos:start="66:19" pos:end="66:44">= <expr pos:start="66:21" pos:end="66:44"><name pos:start="66:21" pos:end="66:44"><name pos:start="66:21" pos:end="66:22">st</name><operator pos:start="66:23" pos:end="66:24">-&gt;</operator><name pos:start="66:25" pos:end="66:28">info</name><operator pos:start="66:29" pos:end="66:30">-&gt;</operator><name pos:start="66:31" pos:end="66:44">duration_count</name></name></expr></init></decl>;</decl_stmt>

            <for pos:start="68:13" pos:end="90:13">for <control pos:start="68:17" pos:end="68:47">(<init pos:start="68:18" pos:end="68:21"><expr pos:start="68:18" pos:end="68:20"><name pos:start="68:18" pos:end="68:18">i</name><operator pos:start="68:19" pos:end="68:19">=</operator><literal type="number" pos:start="68:20" pos:end="68:20">0</literal></expr>;</init> <condition pos:start="68:23" pos:end="68:42"><expr pos:start="68:23" pos:end="68:41"><name pos:start="68:23" pos:end="68:23">i</name><operator pos:start="68:24" pos:end="68:24">&lt;</operator><name pos:start="68:25" pos:end="68:41">MAX_STD_TIMEBASES</name></expr>;</condition> <incr pos:start="68:44" pos:end="68:46"><expr pos:start="68:44" pos:end="68:46"><name pos:start="68:44" pos:end="68:44">i</name><operator pos:start="68:45" pos:end="68:46">++</operator></expr></incr>)</control> <block pos:start="68:49" pos:end="90:13">{<block_content pos:start="70:17" pos:end="88:17">

                <if_stmt pos:start="70:17" pos:end="88:17"><if pos:start="70:17" pos:end="88:17">if <condition pos:start="70:20" pos:end="70:61">(<expr pos:start="70:21" pos:end="70:60"><name pos:start="70:21" pos:end="70:53"><name pos:start="70:21" pos:end="70:22">st</name><operator pos:start="70:23" pos:end="70:24">-&gt;</operator><name pos:start="70:25" pos:end="70:28">info</name><operator pos:start="70:29" pos:end="70:30">-&gt;</operator><name pos:start="70:31" pos:end="70:44">duration_error</name><index pos:start="70:45" pos:end="70:47">[<expr pos:start="70:46" pos:end="70:46"><literal type="number" pos:start="70:46" pos:end="70:46">0</literal></expr>]</index><index pos:start="70:48" pos:end="70:50">[<expr pos:start="70:49" pos:end="70:49"><literal type="number" pos:start="70:49" pos:end="70:49">1</literal></expr>]</index><index pos:start="70:51" pos:end="70:53">[<expr pos:start="70:52" pos:end="70:52"><name pos:start="70:52" pos:end="70:52">i</name></expr>]</index></name> <operator pos:start="70:55" pos:end="70:55">&lt;</operator> <literal type="number" pos:start="70:57" pos:end="70:60">1e10</literal></expr>)</condition> <block pos:start="70:63" pos:end="88:17">{<block_content pos:start="72:21" pos:end="86:21">

                    <decl_stmt pos:start="72:21" pos:end="72:74"><decl pos:start="72:21" pos:end="72:73"><type pos:start="72:21" pos:end="72:26"><name pos:start="72:21" pos:end="72:26">double</name></type> <name pos:start="72:28" pos:end="72:29">a0</name>     <init pos:start="72:35" pos:end="72:73">= <expr pos:start="72:37" pos:end="72:73"><name pos:start="72:37" pos:end="72:69"><name pos:start="72:37" pos:end="72:38">st</name><operator pos:start="72:39" pos:end="72:40">-&gt;</operator><name pos:start="72:41" pos:end="72:44">info</name><operator pos:start="72:45" pos:end="72:46">-&gt;</operator><name pos:start="72:47" pos:end="72:60">duration_error</name><index pos:start="72:61" pos:end="72:63">[<expr pos:start="72:62" pos:end="72:62"><literal type="number" pos:start="72:62" pos:end="72:62">0</literal></expr>]</index><index pos:start="72:64" pos:end="72:66">[<expr pos:start="72:65" pos:end="72:65"><literal type="number" pos:start="72:65" pos:end="72:65">0</literal></expr>]</index><index pos:start="72:67" pos:end="72:69">[<expr pos:start="72:68" pos:end="72:68"><name pos:start="72:68" pos:end="72:68">i</name></expr>]</index></name> <operator pos:start="72:71" pos:end="72:71">/</operator> <name pos:start="72:73" pos:end="72:73">n</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="74:21" pos:end="74:82"><decl pos:start="74:21" pos:end="74:81"><type pos:start="74:21" pos:end="74:26"><name pos:start="74:21" pos:end="74:26">double</name></type> <name pos:start="74:28" pos:end="74:33">error0</name> <init pos:start="74:35" pos:end="74:81">= <expr pos:start="74:37" pos:end="74:81"><name pos:start="74:37" pos:end="74:69"><name pos:start="74:37" pos:end="74:38">st</name><operator pos:start="74:39" pos:end="74:40">-&gt;</operator><name pos:start="74:41" pos:end="74:44">info</name><operator pos:start="74:45" pos:end="74:46">-&gt;</operator><name pos:start="74:47" pos:end="74:60">duration_error</name><index pos:start="74:61" pos:end="74:63">[<expr pos:start="74:62" pos:end="74:62"><literal type="number" pos:start="74:62" pos:end="74:62">0</literal></expr>]</index><index pos:start="74:64" pos:end="74:66">[<expr pos:start="74:65" pos:end="74:65"><literal type="number" pos:start="74:65" pos:end="74:65">1</literal></expr>]</index><index pos:start="74:67" pos:end="74:69">[<expr pos:start="74:68" pos:end="74:68"><name pos:start="74:68" pos:end="74:68">i</name></expr>]</index></name> <operator pos:start="74:71" pos:end="74:71">/</operator> <name pos:start="74:73" pos:end="74:73">n</name> <operator pos:start="74:75" pos:end="74:75">-</operator> <name pos:start="74:77" pos:end="74:78">a0</name><operator pos:start="74:79" pos:end="74:79">*</operator><name pos:start="74:80" pos:end="74:81">a0</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="76:21" pos:end="76:74"><decl pos:start="76:21" pos:end="76:73"><type pos:start="76:21" pos:end="76:26"><name pos:start="76:21" pos:end="76:26">double</name></type> <name pos:start="76:28" pos:end="76:29">a1</name>     <init pos:start="76:35" pos:end="76:73">= <expr pos:start="76:37" pos:end="76:73"><name pos:start="76:37" pos:end="76:69"><name pos:start="76:37" pos:end="76:38">st</name><operator pos:start="76:39" pos:end="76:40">-&gt;</operator><name pos:start="76:41" pos:end="76:44">info</name><operator pos:start="76:45" pos:end="76:46">-&gt;</operator><name pos:start="76:47" pos:end="76:60">duration_error</name><index pos:start="76:61" pos:end="76:63">[<expr pos:start="76:62" pos:end="76:62"><literal type="number" pos:start="76:62" pos:end="76:62">1</literal></expr>]</index><index pos:start="76:64" pos:end="76:66">[<expr pos:start="76:65" pos:end="76:65"><literal type="number" pos:start="76:65" pos:end="76:65">0</literal></expr>]</index><index pos:start="76:67" pos:end="76:69">[<expr pos:start="76:68" pos:end="76:68"><name pos:start="76:68" pos:end="76:68">i</name></expr>]</index></name> <operator pos:start="76:71" pos:end="76:71">/</operator> <name pos:start="76:73" pos:end="76:73">n</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="78:21" pos:end="78:82"><decl pos:start="78:21" pos:end="78:81"><type pos:start="78:21" pos:end="78:26"><name pos:start="78:21" pos:end="78:26">double</name></type> <name pos:start="78:28" pos:end="78:33">error1</name> <init pos:start="78:35" pos:end="78:81">= <expr pos:start="78:37" pos:end="78:81"><name pos:start="78:37" pos:end="78:69"><name pos:start="78:37" pos:end="78:38">st</name><operator pos:start="78:39" pos:end="78:40">-&gt;</operator><name pos:start="78:41" pos:end="78:44">info</name><operator pos:start="78:45" pos:end="78:46">-&gt;</operator><name pos:start="78:47" pos:end="78:60">duration_error</name><index pos:start="78:61" pos:end="78:63">[<expr pos:start="78:62" pos:end="78:62"><literal type="number" pos:start="78:62" pos:end="78:62">1</literal></expr>]</index><index pos:start="78:64" pos:end="78:66">[<expr pos:start="78:65" pos:end="78:65"><literal type="number" pos:start="78:65" pos:end="78:65">1</literal></expr>]</index><index pos:start="78:67" pos:end="78:69">[<expr pos:start="78:68" pos:end="78:68"><name pos:start="78:68" pos:end="78:68">i</name></expr>]</index></name> <operator pos:start="78:71" pos:end="78:71">/</operator> <name pos:start="78:73" pos:end="78:73">n</name> <operator pos:start="78:75" pos:end="78:75">-</operator> <name pos:start="78:77" pos:end="78:78">a1</name><operator pos:start="78:79" pos:end="78:79">*</operator><name pos:start="78:80" pos:end="78:81">a1</name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="80:21" pos:end="86:21"><if pos:start="80:21" pos:end="86:21">if <condition pos:start="80:24" pos:end="80:55">(<expr pos:start="80:25" pos:end="80:54"><name pos:start="80:25" pos:end="80:30">error0</name> <operator pos:start="80:32" pos:end="80:32">&gt;</operator> <literal type="number" pos:start="80:34" pos:end="80:37">0.04</literal> <operator pos:start="80:39" pos:end="80:40">&amp;&amp;</operator> <name pos:start="80:42" pos:end="80:47">error1</name> <operator pos:start="80:49" pos:end="80:49">&gt;</operator> <literal type="number" pos:start="80:51" pos:end="80:54">0.04</literal></expr>)</condition> <block pos:start="80:57" pos:end="86:21">{<block_content pos:start="82:25" pos:end="84:65">

                        <expr_stmt pos:start="82:25" pos:end="82:65"><expr pos:start="82:25" pos:end="82:64"><name pos:start="82:25" pos:end="82:57"><name pos:start="82:25" pos:end="82:26">st</name><operator pos:start="82:27" pos:end="82:28">-&gt;</operator><name pos:start="82:29" pos:end="82:32">info</name><operator pos:start="82:33" pos:end="82:34">-&gt;</operator><name pos:start="82:35" pos:end="82:48">duration_error</name><index pos:start="82:49" pos:end="82:51">[<expr pos:start="82:50" pos:end="82:50"><literal type="number" pos:start="82:50" pos:end="82:50">0</literal></expr>]</index><index pos:start="82:52" pos:end="82:54">[<expr pos:start="82:53" pos:end="82:53"><literal type="number" pos:start="82:53" pos:end="82:53">1</literal></expr>]</index><index pos:start="82:55" pos:end="82:57">[<expr pos:start="82:56" pos:end="82:56"><name pos:start="82:56" pos:end="82:56">i</name></expr>]</index></name> <operator pos:start="82:59" pos:end="82:59">=</operator> <literal type="number" pos:start="82:61" pos:end="82:64">2e10</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="84:25" pos:end="84:65"><expr pos:start="84:25" pos:end="84:64"><name pos:start="84:25" pos:end="84:57"><name pos:start="84:25" pos:end="84:26">st</name><operator pos:start="84:27" pos:end="84:28">-&gt;</operator><name pos:start="84:29" pos:end="84:32">info</name><operator pos:start="84:33" pos:end="84:34">-&gt;</operator><name pos:start="84:35" pos:end="84:48">duration_error</name><index pos:start="84:49" pos:end="84:51">[<expr pos:start="84:50" pos:end="84:50"><literal type="number" pos:start="84:50" pos:end="84:50">1</literal></expr>]</index><index pos:start="84:52" pos:end="84:54">[<expr pos:start="84:53" pos:end="84:53"><literal type="number" pos:start="84:53" pos:end="84:53">1</literal></expr>]</index><index pos:start="84:55" pos:end="84:57">[<expr pos:start="84:56" pos:end="84:56"><name pos:start="84:56" pos:end="84:56">i</name></expr>]</index></name> <operator pos:start="84:59" pos:end="84:59">=</operator> <literal type="number" pos:start="84:61" pos:end="84:64">2e10</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="96:9" pos:end="96:72">// ignore the first 4 values, they might have some random jitter</comment>

        <if_stmt pos:start="98:9" pos:end="100:78"><if pos:start="98:9" pos:end="100:78">if <condition pos:start="98:12" pos:end="98:81">(<expr pos:start="98:13" pos:end="98:80"><name pos:start="98:13" pos:end="98:36"><name pos:start="98:13" pos:end="98:14">st</name><operator pos:start="98:15" pos:end="98:16">-&gt;</operator><name pos:start="98:17" pos:end="98:20">info</name><operator pos:start="98:21" pos:end="98:22">-&gt;</operator><name pos:start="98:23" pos:end="98:36">duration_count</name></name> <operator pos:start="98:38" pos:end="98:38">&gt;</operator> <literal type="number" pos:start="98:40" pos:end="98:40">3</literal> <operator pos:start="98:42" pos:end="98:43">&amp;&amp;</operator> <call pos:start="98:45" pos:end="98:59"><name pos:start="98:45" pos:end="98:55">is_relative</name><argument_list pos:start="98:56" pos:end="98:59">(<argument pos:start="98:57" pos:end="98:58"><expr pos:start="98:57" pos:end="98:58"><name pos:start="98:57" pos:end="98:58">ts</name></expr></argument>)</argument_list></call> <operator pos:start="98:61" pos:end="98:62">==</operator> <call pos:start="98:64" pos:end="98:80"><name pos:start="98:64" pos:end="98:74">is_relative</name><argument_list pos:start="98:75" pos:end="98:80">(<argument pos:start="98:76" pos:end="98:79"><expr pos:start="98:76" pos:end="98:79"><name pos:start="98:76" pos:end="98:79">last</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="100:13" pos:end="100:78"><block_content pos:start="100:13" pos:end="100:78">

            <expr_stmt pos:start="100:13" pos:end="100:78"><expr pos:start="100:13" pos:end="100:77"><name pos:start="100:13" pos:end="100:34"><name pos:start="100:13" pos:end="100:14">st</name><operator pos:start="100:15" pos:end="100:16">-&gt;</operator><name pos:start="100:17" pos:end="100:20">info</name><operator pos:start="100:21" pos:end="100:22">-&gt;</operator><name pos:start="100:23" pos:end="100:34">duration_gcd</name></name> <operator pos:start="100:36" pos:end="100:36">=</operator> <call pos:start="100:38" pos:end="100:77"><name pos:start="100:38" pos:end="100:43">av_gcd</name><argument_list pos:start="100:44" pos:end="100:77">(<argument pos:start="100:45" pos:end="100:66"><expr pos:start="100:45" pos:end="100:66"><name pos:start="100:45" pos:end="100:66"><name pos:start="100:45" pos:end="100:46">st</name><operator pos:start="100:47" pos:end="100:48">-&gt;</operator><name pos:start="100:49" pos:end="100:52">info</name><operator pos:start="100:53" pos:end="100:54">-&gt;</operator><name pos:start="100:55" pos:end="100:66">duration_gcd</name></name></expr></argument>, <argument pos:start="100:69" pos:end="100:76"><expr pos:start="100:69" pos:end="100:76"><name pos:start="100:69" pos:end="100:76">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="104:5" pos:end="106:32"><if pos:start="104:5" pos:end="106:32">if <condition pos:start="104:8" pos:end="104:29">(<expr pos:start="104:9" pos:end="104:28"><name pos:start="104:9" pos:end="104:10">ts</name> <operator pos:start="104:12" pos:end="104:13">!=</operator> <name pos:start="104:15" pos:end="104:28">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="106:9" pos:end="106:32"><block_content pos:start="106:9" pos:end="106:32">

        <expr_stmt pos:start="106:9" pos:end="106:32"><expr pos:start="106:9" pos:end="106:31"><name pos:start="106:9" pos:end="106:26"><name pos:start="106:9" pos:end="106:10">st</name><operator pos:start="106:11" pos:end="106:12">-&gt;</operator><name pos:start="106:13" pos:end="106:16">info</name><operator pos:start="106:17" pos:end="106:18">-&gt;</operator><name pos:start="106:19" pos:end="106:26">last_dts</name></name> <operator pos:start="106:28" pos:end="106:28">=</operator> <name pos:start="106:30" pos:end="106:31">ts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="110:5" pos:end="110:13">return <expr pos:start="110:12" pos:end="110:12"><literal type="number" pos:start="110:12" pos:end="110:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
