<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1390.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">openpic_msi_write</name><parameter_list pos:start="1:30" pos:end="3:44">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:50">hwaddr</name></type> <name pos:start="1:52" pos:end="1:55">addr</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:65">uint64_t</name></type> <name pos:start="1:67" pos:end="1:69">val</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:43"><decl pos:start="3:31" pos:end="3:43"><type pos:start="3:31" pos:end="3:43"><name pos:start="3:31" pos:end="3:38">unsigned</name></type> <name pos:start="3:40" pos:end="3:43">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:5">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">OpenPICState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">opp</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">idx</name> <init pos:start="9:13" pos:end="9:26">= <expr pos:start="9:15" pos:end="9:26"><name pos:start="9:15" pos:end="9:26"><name pos:start="9:15" pos:end="9:17">opp</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:26">irq_msi</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">srs</name></decl>, <decl pos:start="11:14" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:16">ibs</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:74"><expr pos:start="15:5" pos:end="15:73"><call pos:start="15:5" pos:end="15:73"><name pos:start="15:5" pos:end="15:11">DPRINTF</name><argument_list pos:start="15:12" pos:end="15:73">(<argument pos:start="15:13" pos:end="15:51"><expr pos:start="15:13" pos:end="15:51"><literal type="string" pos:start="15:13" pos:end="15:23">"%s: addr "</literal> <name pos:start="15:25" pos:end="15:38">TARGET_FMT_plx</name> <literal type="string" pos:start="15:40" pos:end="15:51">" &lt;= %08x\n"</literal></expr></argument>, <argument pos:start="15:54" pos:end="15:61"><expr pos:start="15:54" pos:end="15:61"><name pos:start="15:54" pos:end="15:61">__func__</name></expr></argument>, <argument pos:start="15:64" pos:end="15:67"><expr pos:start="15:64" pos:end="15:67"><name pos:start="15:64" pos:end="15:67">addr</name></expr></argument>, <argument pos:start="15:70" pos:end="15:72"><expr pos:start="15:70" pos:end="15:72"><name pos:start="15:70" pos:end="15:72">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:19">(<expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:12">addr</name> <operator pos:start="17:14" pos:end="17:14">&amp;</operator> <literal type="number" pos:start="17:16" pos:end="17:18">0xF</literal></expr>)</condition> <block pos:start="17:21" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="25:5" pos:end="47:5">switch <condition pos:start="25:12" pos:end="25:17">(<expr pos:start="25:13" pos:end="25:16"><name pos:start="25:13" pos:end="25:16">addr</name></expr>)</condition> <block pos:start="25:19" pos:end="47:5">{<block_content pos:start="27:5" pos:end="45:14">

    <case pos:start="27:5" pos:end="27:22">case <expr pos:start="27:10" pos:end="27:21"><name pos:start="27:10" pos:end="27:21">MSIIR_OFFSET</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:11">srs</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:17">val</name> <operator pos:start="29:19" pos:end="29:20">&gt;&gt;</operator> <name pos:start="29:22" pos:end="29:36">MSIIR_SRS_SHIFT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:19"><expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:11">idx</name> <operator pos:start="31:13" pos:end="31:14">+=</operator> <name pos:start="31:16" pos:end="31:18">srs</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:56"><expr pos:start="33:9" pos:end="33:55"><name pos:start="33:9" pos:end="33:11">ibs</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <operator pos:start="33:15" pos:end="33:15">(</operator><name pos:start="33:16" pos:end="33:18">val</name> <operator pos:start="33:20" pos:end="33:20">&amp;</operator> <name pos:start="33:22" pos:end="33:35">MSIIR_IBS_MASK</name><operator pos:start="33:36" pos:end="33:36">)</operator> <operator pos:start="33:38" pos:end="33:39">&gt;&gt;</operator> <name pos:start="33:41" pos:end="33:55">MSIIR_IBS_SHIFT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:39"><expr pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:11">opp</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:16">msi</name><index pos:start="35:17" pos:end="35:21">[<expr pos:start="35:18" pos:end="35:20"><name pos:start="35:18" pos:end="35:20">srs</name></expr>]</index></name><operator pos:start="35:22" pos:end="35:22">.</operator><name pos:start="35:23" pos:end="35:26">msir</name> <operator pos:start="35:28" pos:end="35:29">|=</operator> <literal type="number" pos:start="35:31" pos:end="35:31">1</literal> <operator pos:start="35:33" pos:end="35:34">&lt;&lt;</operator> <name pos:start="35:36" pos:end="35:38">ibs</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:37"><expr pos:start="37:9" pos:end="37:36"><call pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:23">openpic_set_irq</name><argument_list pos:start="37:24" pos:end="37:36">(<argument pos:start="37:25" pos:end="37:27"><expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:27">opp</name></expr></argument>, <argument pos:start="37:30" pos:end="37:32"><expr pos:start="37:30" pos:end="37:32"><name pos:start="37:30" pos:end="37:32">idx</name></expr></argument>, <argument pos:start="37:35" pos:end="37:35"><expr pos:start="37:35" pos:end="37:35"><literal type="number" pos:start="37:35" pos:end="37:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <default pos:start="41:5" pos:end="41:12">default:</default>

        <comment type="block" pos:start="43:9" pos:end="43:56">/* most registers are read-only, thus ignored */</comment>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
