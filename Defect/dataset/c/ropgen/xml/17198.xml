<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17198.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:29">ff_blockdsp_init</name><parameter_list pos:start="1:30" pos:end="1:72">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">BlockDSPContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">c</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:71"><decl pos:start="1:51" pos:end="1:71"><type pos:start="1:51" pos:end="1:71"><name pos:start="1:51" pos:end="1:64">AVCodecContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:71">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="36:0">

    <expr_stmt pos:start="5:5" pos:end="5:38"><expr pos:start="5:5" pos:end="5:37"><name pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:5">c</name><operator pos:start="5:6" pos:end="5:7">-&gt;</operator><name pos:start="5:8" pos:end="5:18">clear_block</name></name>  <operator pos:start="5:21" pos:end="5:21">=</operator> <name pos:start="5:23" pos:end="5:37">clear_block_8_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:39"><expr pos:start="7:5" pos:end="7:38"><name pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:5">c</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:19">clear_blocks</name></name> <operator pos:start="7:21" pos:end="7:21">=</operator> <name pos:start="7:23" pos:end="7:38">clear_blocks_8_c</name></expr>;</expr_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:42"><expr pos:start="11:5" pos:end="11:41"><name pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:5">c</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:21">fill_block_tab</name><index pos:start="11:22" pos:end="11:24">[<expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr>]</index></name> <operator pos:start="11:26" pos:end="11:26">=</operator> <name pos:start="11:28" pos:end="11:41">fill_block16_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:5">c</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:21">fill_block_tab</name><index pos:start="13:22" pos:end="13:24">[<expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">1</literal></expr>]</index></name> <operator pos:start="13:26" pos:end="13:26">=</operator> <name pos:start="13:28" pos:end="13:40">fill_block8_c</name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="19:32"><if pos:start="17:5" pos:end="19:32">if <condition pos:start="17:8" pos:end="17:17">(<expr pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16">ARCH_ARM</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:32"><block_content pos:start="19:9" pos:end="19:32">

        <expr_stmt pos:start="19:9" pos:end="19:32"><expr pos:start="19:9" pos:end="19:31"><call pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:28">ff_blockdsp_init_arm</name><argument_list pos:start="19:29" pos:end="19:31">(<argument pos:start="19:30" pos:end="19:30"><expr pos:start="19:30" pos:end="19:30"><name pos:start="19:30" pos:end="19:30">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="23:32"><if pos:start="21:5" pos:end="23:32">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:16">ARCH_PPC</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:32"><block_content pos:start="23:9" pos:end="23:32">

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><call pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:28">ff_blockdsp_init_ppc</name><argument_list pos:start="23:29" pos:end="23:31">(<argument pos:start="23:30" pos:end="23:30"><expr pos:start="23:30" pos:end="23:30"><name pos:start="23:30" pos:end="23:30">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="32:0"><if pos:start="25:5" pos:end="32:0">if <condition pos:start="25:8" pos:end="28:0">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:16">ARCH_X86</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="32:0"><block_content pos:start="29:9" pos:end="32:0">

<cpp:if pos:start="27:1" pos:end="27:15">#<cpp:directive pos:start="27:2" pos:end="27:3">if</cpp:directive> <expr pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:15">FF_API_XVMC</name></expr></cpp:if>

        <expr_stmt pos:start="29:9" pos:end="32:0"><expr pos:start="29:9" pos:end="29:38"><call pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:28">ff_blockdsp_init_x86</name><argument_list pos:start="29:29" pos:end="29:38">(<argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><name pos:start="29:30" pos:end="29:30">c</name></expr></argument>, <argument pos:start="29:33" pos:end="29:37"><expr pos:start="29:33" pos:end="29:37"><name pos:start="29:33" pos:end="29:37">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:else pos:start="31:1" pos:end="31:5">#<cpp:directive pos:start="31:2" pos:end="31:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="33:9" pos:end="36:0"><expr pos:start="33:9" pos:end="33:31"><call pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:28">ff_blockdsp_init_x86</name><argument_list pos:start="33:29" pos:end="33:31">(<argument pos:start="33:30" pos:end="33:30"><expr pos:start="33:30" pos:end="33:30"><name pos:start="33:30" pos:end="33:30">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="35:8" pos:end="35:24">/* FF_API_XVMC */</comment>

</block_content>}</block></function>
</unit>
