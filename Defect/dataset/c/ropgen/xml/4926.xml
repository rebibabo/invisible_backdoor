<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4926.c" pos:tabs="8"><function pos:start="1:1" pos:end="273:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:29">movie_init</name><parameter_list pos:start="1:30" pos:end="1:69">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:45">AVFilterContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">args</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="273:1">{<block_content pos:start="5:5" pos:end="271:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MovieContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">movie</name> <init pos:start="5:25" pos:end="5:35">= <expr pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:29">ctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:35">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AVInputFormat</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:26">iformat</name> <init pos:start="7:28" pos:end="7:33">= <expr pos:start="7:30" pos:end="7:33"><name pos:start="7:30" pos:end="7:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:21">timestamp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">nb_streams</name></decl>, <decl pos:start="11:21" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:23">ret</name></decl>, <decl pos:start="11:26" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:26" pos:end="11:26">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:60"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:28"><name pos:start="13:10" pos:end="13:24">default_streams</name><index pos:start="13:25" pos:end="13:28">[<expr pos:start="13:26" pos:end="13:27"><literal type="number" pos:start="13:26" pos:end="13:27">16</literal></expr>]</index></name></decl>, <decl pos:start="13:31" pos:end="13:43"><type ref="prev" pos:start="13:5" pos:end="13:8"><modifier pos:start="13:31" pos:end="13:31">*</modifier></type><name pos:start="13:32" pos:end="13:43">stream_specs</name></decl>, <decl pos:start="13:46" pos:end="13:50"><type ref="prev" pos:start="13:5" pos:end="13:8"><modifier pos:start="13:46" pos:end="13:46">*</modifier></type><name pos:start="13:47" pos:end="13:50">spec</name></decl>, <decl pos:start="13:53" pos:end="13:59"><type ref="prev" pos:start="13:5" pos:end="13:8"><modifier pos:start="13:53" pos:end="13:53">*</modifier></type><name pos:start="13:54" pos:end="13:59">cursor</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:17"><name pos:start="15:10" pos:end="15:13">name</name><index pos:start="15:14" pos:end="15:17">[<expr pos:start="15:15" pos:end="15:16"><literal type="number" pos:start="15:15" pos:end="15:16">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">AVStream</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:16">st</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:9">movie</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:16">class</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <operator pos:start="21:20" pos:end="21:20">&amp;</operator><name pos:start="21:21" pos:end="21:31">movie_class</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><call pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:23">av_opt_set_defaults</name><argument_list pos:start="23:24" pos:end="23:30">(<argument pos:start="23:25" pos:end="23:29"><expr pos:start="23:25" pos:end="23:29"><name pos:start="23:25" pos:end="23:29">movie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="29:52"><if pos:start="27:5" pos:end="29:52">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><name pos:start="27:9" pos:end="27:12">args</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:52"><block_content pos:start="29:9" pos:end="29:52">

        <expr_stmt pos:start="29:9" pos:end="29:52"><expr pos:start="29:9" pos:end="29:51"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:13">movie</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:24">file_name</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <call pos:start="29:28" pos:end="29:51"><name pos:start="29:28" pos:end="29:39">av_get_token</name><argument_list pos:start="29:40" pos:end="29:51">(<argument pos:start="29:41" pos:end="29:45"><expr pos:start="29:41" pos:end="29:45"><operator pos:start="29:41" pos:end="29:41">&amp;</operator><name pos:start="29:42" pos:end="29:45">args</name></expr></argument>, <argument pos:start="29:48" pos:end="29:50"><expr pos:start="29:48" pos:end="29:50"><literal type="string" pos:start="29:48" pos:end="29:50">":"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:48">(<expr pos:start="31:9" pos:end="31:47"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:25"><name pos:start="31:10" pos:end="31:14">movie</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:25">file_name</name></name> <operator pos:start="31:27" pos:end="31:28">||</operator> <operator pos:start="31:30" pos:end="31:30">!</operator><operator pos:start="31:31" pos:end="31:31">*</operator><name pos:start="31:32" pos:end="31:47"><name pos:start="31:32" pos:end="31:36">movie</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:47">file_name</name></name></expr>)</condition> <block pos:start="31:50" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:31">

        <expr_stmt pos:start="33:9" pos:end="33:61"><expr pos:start="33:9" pos:end="33:60"><call pos:start="33:9" pos:end="33:60"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:60">(<argument pos:start="33:16" pos:end="33:18"><expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ctx</name></expr></argument>, <argument pos:start="33:21" pos:end="33:32"><expr pos:start="33:21" pos:end="33:32"><name pos:start="33:21" pos:end="33:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:35" pos:end="33:59"><expr pos:start="33:35" pos:end="33:59"><literal type="string" pos:start="33:35" pos:end="33:59">"No filename provided!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:31">return <expr pos:start="35:16" pos:end="35:30"><call pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:22">AVERROR</name><argument_list pos:start="35:23" pos:end="35:30">(<argument pos:start="35:24" pos:end="35:29"><expr pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="43:19"><if pos:start="41:5" pos:end="43:19">if <condition pos:start="41:8" pos:end="41:83">(<expr pos:start="41:9" pos:end="41:82"><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:13">args</name><operator pos:start="41:14" pos:end="41:15">++</operator> <operator pos:start="41:17" pos:end="41:18">==</operator> <literal type="char" pos:start="41:20" pos:end="41:22">':'</literal> <operator pos:start="41:24" pos:end="41:25">&amp;&amp;</operator> <operator pos:start="41:27" pos:end="41:27">(</operator><name pos:start="41:28" pos:end="41:30">ret</name> <operator pos:start="41:32" pos:end="41:32">=</operator> <call pos:start="41:34" pos:end="41:77"><name pos:start="41:34" pos:end="41:54">av_set_options_string</name><argument_list pos:start="41:55" pos:end="41:77">(<argument pos:start="41:56" pos:end="41:60"><expr pos:start="41:56" pos:end="41:60"><name pos:start="41:56" pos:end="41:60">movie</name></expr></argument>, <argument pos:start="41:63" pos:end="41:66"><expr pos:start="41:63" pos:end="41:66"><name pos:start="41:63" pos:end="41:66">args</name></expr></argument>, <argument pos:start="41:69" pos:end="41:71"><expr pos:start="41:69" pos:end="41:71"><literal type="string" pos:start="41:69" pos:end="41:71">"="</literal></expr></argument>, <argument pos:start="41:74" pos:end="41:76"><expr pos:start="41:74" pos:end="41:76"><literal type="string" pos:start="41:74" pos:end="41:76">":"</literal></expr></argument>)</argument_list></call><operator pos:start="41:78" pos:end="41:78">)</operator> <operator pos:start="41:80" pos:end="41:80">&lt;</operator> <literal type="number" pos:start="41:82" pos:end="41:82">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:19"><block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:60"><expr pos:start="47:5" pos:end="47:59"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:9">movie</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:21">seek_point</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:43"><name pos:start="47:25" pos:end="47:29">movie</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:43">seek_point_d</name></name> <operator pos:start="47:45" pos:end="47:45">*</operator> <literal type="number" pos:start="47:47" pos:end="47:55">1000000</literal> <operator pos:start="47:55" pos:end="47:55">+</operator> <literal type="number" pos:start="47:57" pos:end="47:59">0.5</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:39"><expr pos:start="51:5" pos:end="51:38"><name pos:start="51:5" pos:end="51:16">stream_specs</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:38"><name pos:start="51:20" pos:end="51:24">movie</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:38">stream_specs</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="63:5"><if pos:start="53:5" pos:end="63:5">if <condition pos:start="53:8" pos:end="53:22">(<expr pos:start="53:9" pos:end="53:21"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:21">stream_specs</name></expr>)</condition> <block pos:start="53:24" pos:end="63:5">{<block_content pos:start="55:9" pos:end="61:39">

        <expr_stmt pos:start="55:9" pos:end="59:38"><expr pos:start="55:9" pos:end="59:37"><call pos:start="55:9" pos:end="59:37"><name pos:start="55:9" pos:end="55:16">snprintf</name><argument_list pos:start="55:17" pos:end="59:37">(<argument pos:start="55:18" pos:end="55:32"><expr pos:start="55:18" pos:end="55:32"><name pos:start="55:18" pos:end="55:32">default_streams</name></expr></argument>, <argument pos:start="55:35" pos:end="55:57"><expr pos:start="55:35" pos:end="55:57"><sizeof pos:start="55:35" pos:end="55:57">sizeof<argument_list pos:start="55:41" pos:end="55:57">(<argument pos:start="55:42" pos:end="55:56"><expr pos:start="55:42" pos:end="55:56"><name pos:start="55:42" pos:end="55:56">default_streams</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="55:60" pos:end="55:66"><expr pos:start="55:60" pos:end="55:66"><literal type="string" pos:start="55:60" pos:end="55:66">"d%c%d"</literal></expr></argument>,

                 <argument pos:start="57:18" pos:end="57:65"><expr pos:start="57:18" pos:end="57:65"><ternary pos:start="57:18" pos:end="57:65"><condition pos:start="57:18" pos:end="57:55"><expr pos:start="57:18" pos:end="57:53"><operator pos:start="57:18" pos:end="57:18">!</operator><call pos:start="57:19" pos:end="57:53"><name pos:start="57:19" pos:end="57:24">strcmp</name><argument_list pos:start="57:25" pos:end="57:53">(<argument pos:start="57:26" pos:end="57:42"><expr pos:start="57:26" pos:end="57:42"><name pos:start="57:26" pos:end="57:42"><name pos:start="57:26" pos:end="57:28">ctx</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:36">filter</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:42">name</name></name></expr></argument>, <argument pos:start="57:45" pos:end="57:52"><expr pos:start="57:45" pos:end="57:52"><literal type="string" pos:start="57:45" pos:end="57:52">"amovie"</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="57:57" pos:end="57:59"> <expr pos:start="57:57" pos:end="57:59"><literal type="char" pos:start="57:57" pos:end="57:59">'a'</literal></expr> </then><else pos:start="57:61" pos:end="57:65">: <expr pos:start="57:63" pos:end="57:65"><literal type="char" pos:start="57:63" pos:end="57:65">'v'</literal></expr></else></ternary></expr></argument>,

                 <argument pos:start="59:18" pos:end="59:36"><expr pos:start="59:18" pos:end="59:36"><name pos:start="59:18" pos:end="59:36"><name pos:start="59:18" pos:end="59:22">movie</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:36">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:39"><expr pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:20">stream_specs</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:38">default_streams</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="65:5" pos:end="69:25">for <control pos:start="65:9" pos:end="65:66">(<init pos:start="65:10" pos:end="65:47"><expr pos:start="65:10" pos:end="65:30"><name pos:start="65:10" pos:end="65:15">cursor</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:30">stream_specs</name></expr><operator pos:start="65:31" pos:end="65:31">,</operator> <expr pos:start="65:33" pos:end="65:46"><name pos:start="65:33" pos:end="65:42">nb_streams</name> <operator pos:start="65:44" pos:end="65:44">=</operator> <literal type="number" pos:start="65:46" pos:end="65:46">1</literal></expr>;</init> <condition pos:start="65:49" pos:end="65:56"><expr pos:start="65:49" pos:end="65:55"><operator pos:start="65:49" pos:end="65:49">*</operator><name pos:start="65:50" pos:end="65:55">cursor</name></expr>;</condition> <incr pos:start="65:58" pos:end="65:65"><expr pos:start="65:58" pos:end="65:65"><name pos:start="65:58" pos:end="65:63">cursor</name><operator pos:start="65:64" pos:end="65:65">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:9" pos:end="69:25"><block_content pos:start="67:9" pos:end="69:25">

        <if_stmt pos:start="67:9" pos:end="69:25"><if pos:start="67:9" pos:end="69:25">if <condition pos:start="67:12" pos:end="67:27">(<expr pos:start="67:13" pos:end="67:26"><operator pos:start="67:13" pos:end="67:13">*</operator><name pos:start="67:14" pos:end="67:19">cursor</name> <operator pos:start="67:21" pos:end="67:22">==</operator> <literal type="char" pos:start="67:24" pos:end="67:26">'+'</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:25"><block_content pos:start="69:13" pos:end="69:25">

            <expr_stmt pos:start="69:13" pos:end="69:25"><expr pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:22">nb_streams</name><operator pos:start="69:23" pos:end="69:24">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="81:5">if <condition pos:start="73:8" pos:end="73:50">(<expr pos:start="73:9" pos:end="73:49"><name pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:13">movie</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:25">loop_count</name></name> <operator pos:start="73:27" pos:end="73:28">!=</operator> <literal type="number" pos:start="73:30" pos:end="73:30">1</literal> <operator pos:start="73:32" pos:end="73:33">&amp;&amp;</operator> <name pos:start="73:35" pos:end="73:44">nb_streams</name> <operator pos:start="73:46" pos:end="73:47">!=</operator> <literal type="number" pos:start="73:49" pos:end="73:49">1</literal></expr>)</condition> <block pos:start="73:52" pos:end="81:5">{<block_content pos:start="75:9" pos:end="79:36">

        <expr_stmt pos:start="75:9" pos:end="77:71"><expr pos:start="75:9" pos:end="77:70"><call pos:start="75:9" pos:end="77:70"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="77:70">(<argument pos:start="75:16" pos:end="75:18"><expr pos:start="75:16" pos:end="75:18"><name pos:start="75:16" pos:end="75:18">ctx</name></expr></argument>, <argument pos:start="75:21" pos:end="75:32"><expr pos:start="75:21" pos:end="75:32"><name pos:start="75:21" pos:end="75:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="77:16" pos:end="77:69"><expr pos:start="77:16" pos:end="77:69"><literal type="string" pos:start="77:16" pos:end="77:69">"Loop with several streams is currently unsupported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:36">return <expr pos:start="79:16" pos:end="79:35"><name pos:start="79:16" pos:end="79:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:22"><expr pos:start="85:5" pos:end="85:21"><call pos:start="85:5" pos:end="85:21"><name pos:start="85:5" pos:end="85:19">av_register_all</name><argument_list pos:start="85:20" pos:end="85:21">()</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="89:5" pos:end="89:47">// Try to find the movie format (container)</comment>

    <expr_stmt pos:start="91:5" pos:end="91:83"><expr pos:start="91:5" pos:end="91:82"><name pos:start="91:5" pos:end="91:11">iformat</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <ternary pos:start="91:15" pos:end="91:82"><condition pos:start="91:15" pos:end="91:34"><expr pos:start="91:15" pos:end="91:32"><name pos:start="91:15" pos:end="91:32"><name pos:start="91:15" pos:end="91:19">movie</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:32">format_name</name></name></expr> ?</condition><then pos:start="91:36" pos:end="91:75"> <expr pos:start="91:36" pos:end="91:75"><call pos:start="91:36" pos:end="91:75"><name pos:start="91:36" pos:end="91:55">av_find_input_format</name><argument_list pos:start="91:56" pos:end="91:75">(<argument pos:start="91:57" pos:end="91:74"><expr pos:start="91:57" pos:end="91:74"><name pos:start="91:57" pos:end="91:74"><name pos:start="91:57" pos:end="91:61">movie</name><operator pos:start="91:62" pos:end="91:63">-&gt;</operator><name pos:start="91:64" pos:end="91:74">format_name</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="91:77" pos:end="91:82">: <expr pos:start="91:79" pos:end="91:82"><name pos:start="91:79" pos:end="91:82">NULL</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:29"><expr pos:start="95:5" pos:end="95:28"><name pos:start="95:5" pos:end="95:21"><name pos:start="95:5" pos:end="95:9">movie</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:21">format_ctx</name></name> <operator pos:start="95:23" pos:end="95:23">=</operator> <name pos:start="95:25" pos:end="95:28">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="97:93">(<expr pos:start="97:9" pos:end="97:92"><operator pos:start="97:9" pos:end="97:9">(</operator><name pos:start="97:10" pos:end="97:12">ret</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <call pos:start="97:16" pos:end="97:87"><name pos:start="97:16" pos:end="97:34">avformat_open_input</name><argument_list pos:start="97:35" pos:end="97:87">(<argument pos:start="97:36" pos:end="97:53"><expr pos:start="97:36" pos:end="97:53"><operator pos:start="97:36" pos:end="97:36">&amp;</operator><name pos:start="97:37" pos:end="97:53"><name pos:start="97:37" pos:end="97:41">movie</name><operator pos:start="97:42" pos:end="97:43">-&gt;</operator><name pos:start="97:44" pos:end="97:53">format_ctx</name></name></expr></argument>, <argument pos:start="97:56" pos:end="97:71"><expr pos:start="97:56" pos:end="97:71"><name pos:start="97:56" pos:end="97:71"><name pos:start="97:56" pos:end="97:60">movie</name><operator pos:start="97:61" pos:end="97:62">-&gt;</operator><name pos:start="97:63" pos:end="97:71">file_name</name></name></expr></argument>, <argument pos:start="97:74" pos:end="97:80"><expr pos:start="97:74" pos:end="97:80"><name pos:start="97:74" pos:end="97:80">iformat</name></expr></argument>, <argument pos:start="97:83" pos:end="97:86"><expr pos:start="97:83" pos:end="97:86"><name pos:start="97:83" pos:end="97:86">NULL</name></expr></argument>)</argument_list></call><operator pos:start="97:88" pos:end="97:88">)</operator> <operator pos:start="97:90" pos:end="97:90">&lt;</operator> <literal type="number" pos:start="97:92" pos:end="97:92">0</literal></expr>)</condition> <block pos:start="97:95" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:19">

        <expr_stmt pos:start="99:9" pos:end="101:73"><expr pos:start="99:9" pos:end="101:72"><call pos:start="99:9" pos:end="101:72"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="101:72">(<argument pos:start="99:16" pos:end="99:18"><expr pos:start="99:16" pos:end="99:18"><name pos:start="99:16" pos:end="99:18">ctx</name></expr></argument>, <argument pos:start="99:21" pos:end="99:32"><expr pos:start="99:21" pos:end="99:32"><name pos:start="99:21" pos:end="99:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="101:16" pos:end="101:53"><expr pos:start="101:16" pos:end="101:53"><literal type="string" pos:start="101:16" pos:end="101:53">"Failed to avformat_open_input '%s'\n"</literal></expr></argument>, <argument pos:start="101:56" pos:end="101:71"><expr pos:start="101:56" pos:end="101:71"><name pos:start="101:56" pos:end="101:71"><name pos:start="101:56" pos:end="101:60">movie</name><operator pos:start="101:61" pos:end="101:62">-&gt;</operator><name pos:start="101:63" pos:end="101:71">file_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:19">return <expr pos:start="103:16" pos:end="103:18"><name pos:start="103:16" pos:end="103:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="109:68"><if pos:start="107:5" pos:end="109:68">if <condition pos:start="107:8" pos:end="107:71">(<expr pos:start="107:9" pos:end="107:70"><operator pos:start="107:9" pos:end="107:9">(</operator><name pos:start="107:10" pos:end="107:12">ret</name> <operator pos:start="107:14" pos:end="107:14">=</operator> <call pos:start="107:16" pos:end="107:65"><name pos:start="107:16" pos:end="107:40">avformat_find_stream_info</name><argument_list pos:start="107:41" pos:end="107:65">(<argument pos:start="107:42" pos:end="107:58"><expr pos:start="107:42" pos:end="107:58"><name pos:start="107:42" pos:end="107:58"><name pos:start="107:42" pos:end="107:46">movie</name><operator pos:start="107:47" pos:end="107:48">-&gt;</operator><name pos:start="107:49" pos:end="107:58">format_ctx</name></name></expr></argument>, <argument pos:start="107:61" pos:end="107:64"><expr pos:start="107:61" pos:end="107:64"><name pos:start="107:61" pos:end="107:64">NULL</name></expr></argument>)</argument_list></call><operator pos:start="107:66" pos:end="107:66">)</operator> <operator pos:start="107:68" pos:end="107:68">&lt;</operator> <literal type="number" pos:start="107:70" pos:end="107:70">0</literal></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:68"><block_content pos:start="109:9" pos:end="109:68">

        <expr_stmt pos:start="109:9" pos:end="109:68"><expr pos:start="109:9" pos:end="109:67"><call pos:start="109:9" pos:end="109:67"><name pos:start="109:9" pos:end="109:14">av_log</name><argument_list pos:start="109:15" pos:end="109:67">(<argument pos:start="109:16" pos:end="109:18"><expr pos:start="109:16" pos:end="109:18"><name pos:start="109:16" pos:end="109:18">ctx</name></expr></argument>, <argument pos:start="109:21" pos:end="109:34"><expr pos:start="109:21" pos:end="109:34"><name pos:start="109:21" pos:end="109:34">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="109:37" pos:end="109:66"><expr pos:start="109:37" pos:end="109:66"><literal type="string" pos:start="109:37" pos:end="109:66">"Failed to find stream info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="113:5" pos:end="113:42">// if seeking requested, we execute it</comment>

    <if_stmt pos:start="115:5" pos:end="149:5"><if pos:start="115:5" pos:end="149:5">if <condition pos:start="115:8" pos:end="115:30">(<expr pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:25"><name pos:start="115:9" pos:end="115:13">movie</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:25">seek_point</name></name> <operator pos:start="115:27" pos:end="115:27">&gt;</operator> <literal type="number" pos:start="115:29" pos:end="115:29">0</literal></expr>)</condition> <block pos:start="115:32" pos:end="149:5">{<block_content pos:start="117:9" pos:end="147:9">

        <expr_stmt pos:start="117:9" pos:end="117:38"><expr pos:start="117:9" pos:end="117:37"><name pos:start="117:9" pos:end="117:17">timestamp</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <name pos:start="117:21" pos:end="117:37"><name pos:start="117:21" pos:end="117:25">movie</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:37">seek_point</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="119:9" pos:end="119:53">// add the stream start time, should it exist</comment>

        <if_stmt pos:start="121:9" pos:end="137:9"><if pos:start="121:9" pos:end="137:9">if <condition pos:start="121:12" pos:end="121:60">(<expr pos:start="121:13" pos:end="121:59"><name pos:start="121:13" pos:end="121:41"><name pos:start="121:13" pos:end="121:17">movie</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:29">format_ctx</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:41">start_time</name></name> <operator pos:start="121:43" pos:end="121:44">!=</operator> <name pos:start="121:46" pos:end="121:59">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="121:62" pos:end="137:9">{<block_content pos:start="123:13" pos:end="135:55">

            <if_stmt pos:start="123:13" pos:end="133:13"><if pos:start="123:13" pos:end="133:13">if <condition pos:start="123:16" pos:end="123:70">(<expr pos:start="123:17" pos:end="123:69"><name pos:start="123:17" pos:end="123:25">timestamp</name> <operator pos:start="123:27" pos:end="123:27">&gt;</operator> <name pos:start="123:29" pos:end="123:37">INT64_MAX</name> <operator pos:start="123:39" pos:end="123:39">-</operator> <name pos:start="123:41" pos:end="123:69"><name pos:start="123:41" pos:end="123:45">movie</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:57">format_ctx</name><operator pos:start="123:58" pos:end="123:59">-&gt;</operator><name pos:start="123:60" pos:end="123:69">start_time</name></name></expr>)</condition> <block pos:start="123:72" pos:end="133:13">{<block_content pos:start="125:17" pos:end="131:39">

                <expr_stmt pos:start="125:17" pos:end="129:91"><expr pos:start="125:17" pos:end="129:90"><call pos:start="125:17" pos:end="129:90"><name pos:start="125:17" pos:end="125:22">av_log</name><argument_list pos:start="125:23" pos:end="129:90">(<argument pos:start="125:24" pos:end="125:26"><expr pos:start="125:24" pos:end="125:26"><name pos:start="125:24" pos:end="125:26">ctx</name></expr></argument>, <argument pos:start="125:29" pos:end="125:40"><expr pos:start="125:29" pos:end="125:40"><name pos:start="125:29" pos:end="125:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="127:24" pos:end="127:97"><expr pos:start="127:24" pos:end="127:97"><literal type="string" pos:start="127:24" pos:end="127:66">"%s: seek value overflow with start_time:%"</literal><name pos:start="127:67" pos:end="127:72">PRId64</name><literal type="string" pos:start="127:73" pos:end="127:87">" seek_point:%"</literal><name pos:start="127:88" pos:end="127:93">PRId64</name><literal type="string" pos:start="127:94" pos:end="127:97">"\n"</literal></expr></argument>,

                       <argument pos:start="129:24" pos:end="129:39"><expr pos:start="129:24" pos:end="129:39"><name pos:start="129:24" pos:end="129:39"><name pos:start="129:24" pos:end="129:28">movie</name><operator pos:start="129:29" pos:end="129:30">-&gt;</operator><name pos:start="129:31" pos:end="129:39">file_name</name></name></expr></argument>, <argument pos:start="129:42" pos:end="129:70"><expr pos:start="129:42" pos:end="129:70"><name pos:start="129:42" pos:end="129:70"><name pos:start="129:42" pos:end="129:46">movie</name><operator pos:start="129:47" pos:end="129:48">-&gt;</operator><name pos:start="129:49" pos:end="129:58">format_ctx</name><operator pos:start="129:59" pos:end="129:60">-&gt;</operator><name pos:start="129:61" pos:end="129:70">start_time</name></name></expr></argument>, <argument pos:start="129:73" pos:end="129:89"><expr pos:start="129:73" pos:end="129:89"><name pos:start="129:73" pos:end="129:89"><name pos:start="129:73" pos:end="129:77">movie</name><operator pos:start="129:78" pos:end="129:79">-&gt;</operator><name pos:start="129:80" pos:end="129:89">seek_point</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="131:17" pos:end="131:39">return <expr pos:start="131:24" pos:end="131:38"><call pos:start="131:24" pos:end="131:38"><name pos:start="131:24" pos:end="131:30">AVERROR</name><argument_list pos:start="131:31" pos:end="131:38">(<argument pos:start="131:32" pos:end="131:37"><expr pos:start="131:32" pos:end="131:37"><name pos:start="131:32" pos:end="131:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:55"><expr pos:start="135:13" pos:end="135:54"><name pos:start="135:13" pos:end="135:21">timestamp</name> <operator pos:start="135:23" pos:end="135:24">+=</operator> <name pos:start="135:26" pos:end="135:54"><name pos:start="135:26" pos:end="135:30">movie</name><operator pos:start="135:31" pos:end="135:32">-&gt;</operator><name pos:start="135:33" pos:end="135:42">format_ctx</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:54">start_time</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="139:9" pos:end="147:9"><if pos:start="139:9" pos:end="147:9">if <condition pos:start="139:12" pos:end="139:94">(<expr pos:start="139:13" pos:end="139:93"><operator pos:start="139:13" pos:end="139:13">(</operator><name pos:start="139:14" pos:end="139:16">ret</name> <operator pos:start="139:18" pos:end="139:18">=</operator> <call pos:start="139:20" pos:end="139:88"><name pos:start="139:20" pos:end="139:32">av_seek_frame</name><argument_list pos:start="139:33" pos:end="139:88">(<argument pos:start="139:34" pos:end="139:50"><expr pos:start="139:34" pos:end="139:50"><name pos:start="139:34" pos:end="139:50"><name pos:start="139:34" pos:end="139:38">movie</name><operator pos:start="139:39" pos:end="139:40">-&gt;</operator><name pos:start="139:41" pos:end="139:50">format_ctx</name></name></expr></argument>, <argument pos:start="139:53" pos:end="139:54"><expr pos:start="139:53" pos:end="139:54"><operator pos:start="139:53" pos:end="139:53">-</operator><literal type="number" pos:start="139:54" pos:end="139:54">1</literal></expr></argument>, <argument pos:start="139:57" pos:end="139:65"><expr pos:start="139:57" pos:end="139:65"><name pos:start="139:57" pos:end="139:65">timestamp</name></expr></argument>, <argument pos:start="139:68" pos:end="139:87"><expr pos:start="139:68" pos:end="139:87"><name pos:start="139:68" pos:end="139:87">AVSEEK_FLAG_BACKWARD</name></expr></argument>)</argument_list></call><operator pos:start="139:89" pos:end="139:89">)</operator> <operator pos:start="139:91" pos:end="139:91">&lt;</operator> <literal type="number" pos:start="139:93" pos:end="139:93">0</literal></expr>)</condition> <block pos:start="139:96" pos:end="147:9">{<block_content pos:start="141:13" pos:end="145:23">

            <expr_stmt pos:start="141:13" pos:end="143:48"><expr pos:start="141:13" pos:end="143:47"><call pos:start="141:13" pos:end="143:47"><name pos:start="141:13" pos:end="141:18">av_log</name><argument_list pos:start="141:19" pos:end="143:47">(<argument pos:start="141:20" pos:end="141:22"><expr pos:start="141:20" pos:end="141:22"><name pos:start="141:20" pos:end="141:22">ctx</name></expr></argument>, <argument pos:start="141:25" pos:end="141:36"><expr pos:start="141:25" pos:end="141:36"><name pos:start="141:25" pos:end="141:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="141:39" pos:end="141:82"><expr pos:start="141:39" pos:end="141:82"><literal type="string" pos:start="141:39" pos:end="141:72">"%s: could not seek to position %"</literal><name pos:start="141:73" pos:end="141:78">PRId64</name><literal type="string" pos:start="141:79" pos:end="141:82">"\n"</literal></expr></argument>,

                   <argument pos:start="143:20" pos:end="143:35"><expr pos:start="143:20" pos:end="143:35"><name pos:start="143:20" pos:end="143:35"><name pos:start="143:20" pos:end="143:24">movie</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:35">file_name</name></name></expr></argument>, <argument pos:start="143:38" pos:end="143:46"><expr pos:start="143:38" pos:end="143:46"><name pos:start="143:38" pos:end="143:46">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="145:13" pos:end="145:23">return <expr pos:start="145:20" pos:end="145:22"><name pos:start="145:20" pos:end="145:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="153:5" pos:end="155:63">for <control pos:start="153:9" pos:end="153:55">(<init pos:start="153:10" pos:end="153:15"><expr pos:start="153:10" pos:end="153:14"><name pos:start="153:10" pos:end="153:10">i</name> <operator pos:start="153:12" pos:end="153:12">=</operator> <literal type="number" pos:start="153:14" pos:end="153:14">0</literal></expr>;</init> <condition pos:start="153:17" pos:end="153:50"><expr pos:start="153:17" pos:end="153:49"><name pos:start="153:17" pos:end="153:17">i</name> <operator pos:start="153:19" pos:end="153:19">&lt;</operator> <name pos:start="153:21" pos:end="153:49"><name pos:start="153:21" pos:end="153:25">movie</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:37">format_ctx</name><operator pos:start="153:38" pos:end="153:39">-&gt;</operator><name pos:start="153:40" pos:end="153:49">nb_streams</name></name></expr>;</condition> <incr pos:start="153:52" pos:end="153:54"><expr pos:start="153:52" pos:end="153:54"><name pos:start="153:52" pos:end="153:52">i</name><operator pos:start="153:53" pos:end="153:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="155:9" pos:end="155:63"><block_content pos:start="155:9" pos:end="155:63">

        <expr_stmt pos:start="155:9" pos:end="155:63"><expr pos:start="155:9" pos:end="155:62"><name pos:start="155:9" pos:end="155:37"><name pos:start="155:9" pos:end="155:13">movie</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:25">format_ctx</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:34">streams</name><index pos:start="155:35" pos:end="155:37">[<expr pos:start="155:36" pos:end="155:36"><name pos:start="155:36" pos:end="155:36">i</name></expr>]</index></name><operator pos:start="155:38" pos:end="155:39">-&gt;</operator><name pos:start="155:40" pos:end="155:46">discard</name> <operator pos:start="155:48" pos:end="155:48">=</operator> <name pos:start="155:50" pos:end="155:62">AVDISCARD_ALL</name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="159:5" pos:end="159:58"><expr pos:start="159:5" pos:end="159:57"><name pos:start="159:5" pos:end="159:13"><name pos:start="159:5" pos:end="159:9">movie</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:13">st</name></name> <operator pos:start="159:15" pos:end="159:15">=</operator> <call pos:start="159:17" pos:end="159:57"><name pos:start="159:17" pos:end="159:25">av_calloc</name><argument_list pos:start="159:26" pos:end="159:57">(<argument pos:start="159:27" pos:end="159:36"><expr pos:start="159:27" pos:end="159:36"><name pos:start="159:27" pos:end="159:36">nb_streams</name></expr></argument>, <argument pos:start="159:39" pos:end="159:56"><expr pos:start="159:39" pos:end="159:56"><sizeof pos:start="159:39" pos:end="159:56">sizeof<argument_list pos:start="159:45" pos:end="159:56">(<argument pos:start="159:46" pos:end="159:55"><expr pos:start="159:46" pos:end="159:55"><operator pos:start="159:46" pos:end="159:46">*</operator><name pos:start="159:47" pos:end="159:55"><name pos:start="159:47" pos:end="159:51">movie</name><operator pos:start="159:52" pos:end="159:53">-&gt;</operator><name pos:start="159:54" pos:end="159:55">st</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="161:5" pos:end="163:31"><if pos:start="161:5" pos:end="163:31">if <condition pos:start="161:8" pos:end="161:19">(<expr pos:start="161:9" pos:end="161:18"><operator pos:start="161:9" pos:end="161:9">!</operator><name pos:start="161:10" pos:end="161:18"><name pos:start="161:10" pos:end="161:14">movie</name><operator pos:start="161:15" pos:end="161:16">-&gt;</operator><name pos:start="161:17" pos:end="161:18">st</name></name></expr>)</condition><block type="pseudo" pos:start="163:9" pos:end="163:31"><block_content pos:start="163:9" pos:end="163:31">

        <return pos:start="163:9" pos:end="163:31">return <expr pos:start="163:16" pos:end="163:30"><call pos:start="163:16" pos:end="163:30"><name pos:start="163:16" pos:end="163:22">AVERROR</name><argument_list pos:start="163:23" pos:end="163:30">(<argument pos:start="163:24" pos:end="163:29"><expr pos:start="163:24" pos:end="163:29"><name pos:start="163:24" pos:end="163:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="167:5" pos:end="189:5">for <control pos:start="167:9" pos:end="167:36">(<init pos:start="167:10" pos:end="167:15"><expr pos:start="167:10" pos:end="167:14"><name pos:start="167:10" pos:end="167:10">i</name> <operator pos:start="167:12" pos:end="167:12">=</operator> <literal type="number" pos:start="167:14" pos:end="167:14">0</literal></expr>;</init> <condition pos:start="167:17" pos:end="167:31"><expr pos:start="167:17" pos:end="167:30"><name pos:start="167:17" pos:end="167:17">i</name> <operator pos:start="167:19" pos:end="167:19">&lt;</operator> <name pos:start="167:21" pos:end="167:30">nb_streams</name></expr>;</condition> <incr pos:start="167:33" pos:end="167:35"><expr pos:start="167:33" pos:end="167:35"><name pos:start="167:33" pos:end="167:33">i</name><operator pos:start="167:34" pos:end="167:35">++</operator></expr></incr>)</control> <block pos:start="167:38" pos:end="189:5">{<block_content pos:start="169:9" pos:end="187:76">

        <expr_stmt pos:start="169:9" pos:end="169:53"><expr pos:start="169:9" pos:end="169:52"><name pos:start="169:9" pos:end="169:12">spec</name> <operator pos:start="169:14" pos:end="169:14">=</operator> <call pos:start="169:16" pos:end="169:52"><name pos:start="169:16" pos:end="169:24">av_strtok</name><argument_list pos:start="169:25" pos:end="169:52">(<argument pos:start="169:26" pos:end="169:37"><expr pos:start="169:26" pos:end="169:37"><name pos:start="169:26" pos:end="169:37">stream_specs</name></expr></argument>, <argument pos:start="169:40" pos:end="169:42"><expr pos:start="169:40" pos:end="169:42"><literal type="string" pos:start="169:40" pos:end="169:42">"+"</literal></expr></argument>, <argument pos:start="169:45" pos:end="169:51"><expr pos:start="169:45" pos:end="169:51"><operator pos:start="169:45" pos:end="169:45">&amp;</operator><name pos:start="169:46" pos:end="169:51">cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="173:31"><if pos:start="171:9" pos:end="173:31">if <condition pos:start="171:12" pos:end="171:18">(<expr pos:start="171:13" pos:end="171:17"><operator pos:start="171:13" pos:end="171:13">!</operator><name pos:start="171:14" pos:end="171:17">spec</name></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:31"><block_content pos:start="173:13" pos:end="173:31">

            <return pos:start="173:13" pos:end="173:31">return <expr pos:start="173:20" pos:end="173:30"><name pos:start="173:20" pos:end="173:30">AVERROR_BUG</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:28"><expr pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:20">stream_specs</name> <operator pos:start="175:22" pos:end="175:22">=</operator> <name pos:start="175:24" pos:end="175:27">NULL</name></expr>;</expr_stmt> <comment type="block" pos:start="175:30" pos:end="175:50">/* for next strtok */</comment>

        <expr_stmt pos:start="177:9" pos:end="177:55"><expr pos:start="177:9" pos:end="177:54"><name pos:start="177:9" pos:end="177:10">st</name> <operator pos:start="177:12" pos:end="177:12">=</operator> <call pos:start="177:14" pos:end="177:54"><name pos:start="177:14" pos:end="177:24">find_stream</name><argument_list pos:start="177:25" pos:end="177:54">(<argument pos:start="177:26" pos:end="177:28"><expr pos:start="177:26" pos:end="177:28"><name pos:start="177:26" pos:end="177:28">ctx</name></expr></argument>, <argument pos:start="177:31" pos:end="177:47"><expr pos:start="177:31" pos:end="177:47"><name pos:start="177:31" pos:end="177:47"><name pos:start="177:31" pos:end="177:35">movie</name><operator pos:start="177:36" pos:end="177:37">-&gt;</operator><name pos:start="177:38" pos:end="177:47">format_ctx</name></name></expr></argument>, <argument pos:start="177:50" pos:end="177:53"><expr pos:start="177:50" pos:end="177:53"><name pos:start="177:50" pos:end="177:53">spec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="181:35"><if pos:start="179:9" pos:end="181:35">if <condition pos:start="179:12" pos:end="179:16">(<expr pos:start="179:13" pos:end="179:15"><operator pos:start="179:13" pos:end="179:13">!</operator><name pos:start="179:14" pos:end="179:15">st</name></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:35"><block_content pos:start="181:13" pos:end="181:35">

            <return pos:start="181:13" pos:end="181:35">return <expr pos:start="181:20" pos:end="181:34"><call pos:start="181:20" pos:end="181:34"><name pos:start="181:20" pos:end="181:26">AVERROR</name><argument_list pos:start="181:27" pos:end="181:34">(<argument pos:start="181:28" pos:end="181:33"><expr pos:start="181:28" pos:end="181:33"><name pos:start="181:28" pos:end="181:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:40"><expr pos:start="183:9" pos:end="183:39"><name pos:start="183:9" pos:end="183:19"><name pos:start="183:9" pos:end="183:10">st</name><operator pos:start="183:11" pos:end="183:12">-&gt;</operator><name pos:start="183:13" pos:end="183:19">discard</name></name> <operator pos:start="183:21" pos:end="183:21">=</operator> <name pos:start="183:23" pos:end="183:39">AVDISCARD_DEFAULT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:29"><expr pos:start="185:9" pos:end="185:28"><name pos:start="185:9" pos:end="185:20"><name pos:start="185:9" pos:end="185:13">movie</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:17">st</name><index pos:start="185:18" pos:end="185:20">[<expr pos:start="185:19" pos:end="185:19"><name pos:start="185:19" pos:end="185:19">i</name></expr>]</index></name><operator pos:start="185:21" pos:end="185:21">.</operator><name pos:start="185:22" pos:end="185:23">st</name> <operator pos:start="185:25" pos:end="185:25">=</operator> <name pos:start="185:27" pos:end="185:28">st</name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:76"><expr pos:start="187:9" pos:end="187:75"><name pos:start="187:9" pos:end="187:31"><name pos:start="187:9" pos:end="187:13">movie</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:31">max_stream_index</name></name> <operator pos:start="187:33" pos:end="187:33">=</operator> <call pos:start="187:35" pos:end="187:75"><name pos:start="187:35" pos:end="187:39">FFMAX</name><argument_list pos:start="187:40" pos:end="187:75">(<argument pos:start="187:41" pos:end="187:63"><expr pos:start="187:41" pos:end="187:63"><name pos:start="187:41" pos:end="187:63"><name pos:start="187:41" pos:end="187:45">movie</name><operator pos:start="187:46" pos:end="187:47">-&gt;</operator><name pos:start="187:48" pos:end="187:63">max_stream_index</name></name></expr></argument>, <argument pos:start="187:66" pos:end="187:74"><expr pos:start="187:66" pos:end="187:74"><name pos:start="187:66" pos:end="187:74"><name pos:start="187:66" pos:end="187:67">st</name><operator pos:start="187:68" pos:end="187:69">-&gt;</operator><name pos:start="187:70" pos:end="187:74">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="191:5" pos:end="193:27"><if pos:start="191:5" pos:end="193:27">if <condition pos:start="191:8" pos:end="191:38">(<expr pos:start="191:9" pos:end="191:37"><call pos:start="191:9" pos:end="191:37"><name pos:start="191:9" pos:end="191:17">av_strtok</name><argument_list pos:start="191:18" pos:end="191:37">(<argument pos:start="191:19" pos:end="191:22"><expr pos:start="191:19" pos:end="191:22"><name pos:start="191:19" pos:end="191:22">NULL</name></expr></argument>, <argument pos:start="191:25" pos:end="191:27"><expr pos:start="191:25" pos:end="191:27"><literal type="string" pos:start="191:25" pos:end="191:27">"+"</literal></expr></argument>, <argument pos:start="191:30" pos:end="191:36"><expr pos:start="191:30" pos:end="191:36"><operator pos:start="191:30" pos:end="191:30">&amp;</operator><name pos:start="191:31" pos:end="191:36">cursor</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="193:9" pos:end="193:27"><block_content pos:start="193:9" pos:end="193:27">

        <return pos:start="193:9" pos:end="193:27">return <expr pos:start="193:16" pos:end="193:26"><name pos:start="193:16" pos:end="193:26">AVERROR_BUG</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="199:60"><expr pos:start="197:5" pos:end="199:59"><name pos:start="197:5" pos:end="197:20"><name pos:start="197:5" pos:end="197:9">movie</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:20">out_index</name></name> <operator pos:start="197:22" pos:end="197:22">=</operator> <call pos:start="197:24" pos:end="199:59"><name pos:start="197:24" pos:end="197:32">av_calloc</name><argument_list pos:start="197:33" pos:end="199:59">(<argument pos:start="197:34" pos:end="197:60"><expr pos:start="197:34" pos:end="197:60"><name pos:start="197:34" pos:end="197:56"><name pos:start="197:34" pos:end="197:38">movie</name><operator pos:start="197:39" pos:end="197:40">-&gt;</operator><name pos:start="197:41" pos:end="197:56">max_stream_index</name></name> <operator pos:start="197:58" pos:end="197:58">+</operator> <literal type="number" pos:start="197:60" pos:end="197:60">1</literal></expr></argument>,

                                 <argument pos:start="199:34" pos:end="199:58"><expr pos:start="199:34" pos:end="199:58"><sizeof pos:start="199:34" pos:end="199:58">sizeof<argument_list pos:start="199:40" pos:end="199:58">(<argument pos:start="199:41" pos:end="199:57"><expr pos:start="199:41" pos:end="199:57"><operator pos:start="199:41" pos:end="199:41">*</operator><name pos:start="199:42" pos:end="199:57"><name pos:start="199:42" pos:end="199:46">movie</name><operator pos:start="199:47" pos:end="199:48">-&gt;</operator><name pos:start="199:49" pos:end="199:57">out_index</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="201:5" pos:end="203:31"><if pos:start="201:5" pos:end="203:31">if <condition pos:start="201:8" pos:end="201:26">(<expr pos:start="201:9" pos:end="201:25"><operator pos:start="201:9" pos:end="201:9">!</operator><name pos:start="201:10" pos:end="201:25"><name pos:start="201:10" pos:end="201:14">movie</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:25">out_index</name></name></expr>)</condition><block type="pseudo" pos:start="203:9" pos:end="203:31"><block_content pos:start="203:9" pos:end="203:31">

        <return pos:start="203:9" pos:end="203:31">return <expr pos:start="203:16" pos:end="203:30"><call pos:start="203:16" pos:end="203:30"><name pos:start="203:16" pos:end="203:22">AVERROR</name><argument_list pos:start="203:23" pos:end="203:30">(<argument pos:start="203:24" pos:end="203:29"><expr pos:start="203:24" pos:end="203:29"><name pos:start="203:24" pos:end="203:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="205:5" pos:end="207:33">for <control pos:start="205:9" pos:end="205:50">(<init pos:start="205:10" pos:end="205:15"><expr pos:start="205:10" pos:end="205:14"><name pos:start="205:10" pos:end="205:10">i</name> <operator pos:start="205:12" pos:end="205:12">=</operator> <literal type="number" pos:start="205:14" pos:end="205:14">0</literal></expr>;</init> <condition pos:start="205:17" pos:end="205:45"><expr pos:start="205:17" pos:end="205:44"><name pos:start="205:17" pos:end="205:17">i</name> <operator pos:start="205:19" pos:end="205:20">&lt;=</operator> <name pos:start="205:22" pos:end="205:44"><name pos:start="205:22" pos:end="205:26">movie</name><operator pos:start="205:27" pos:end="205:28">-&gt;</operator><name pos:start="205:29" pos:end="205:44">max_stream_index</name></name></expr>;</condition> <incr pos:start="205:47" pos:end="205:49"><expr pos:start="205:47" pos:end="205:49"><name pos:start="205:47" pos:end="205:47">i</name><operator pos:start="205:48" pos:end="205:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="207:9" pos:end="207:33"><block_content pos:start="207:9" pos:end="207:33">

        <expr_stmt pos:start="207:9" pos:end="207:33"><expr pos:start="207:9" pos:end="207:32"><name pos:start="207:9" pos:end="207:27"><name pos:start="207:9" pos:end="207:13">movie</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:24">out_index</name><index pos:start="207:25" pos:end="207:27">[<expr pos:start="207:26" pos:end="207:26"><name pos:start="207:26" pos:end="207:26">i</name></expr>]</index></name> <operator pos:start="207:29" pos:end="207:29">=</operator> <operator pos:start="207:31" pos:end="207:31">-</operator><literal type="number" pos:start="207:32" pos:end="207:32">1</literal></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="209:5" pos:end="211:53">for <control pos:start="209:9" pos:end="209:36">(<init pos:start="209:10" pos:end="209:15"><expr pos:start="209:10" pos:end="209:14"><name pos:start="209:10" pos:end="209:10">i</name> <operator pos:start="209:12" pos:end="209:12">=</operator> <literal type="number" pos:start="209:14" pos:end="209:14">0</literal></expr>;</init> <condition pos:start="209:17" pos:end="209:31"><expr pos:start="209:17" pos:end="209:30"><name pos:start="209:17" pos:end="209:17">i</name> <operator pos:start="209:19" pos:end="209:19">&lt;</operator> <name pos:start="209:21" pos:end="209:30">nb_streams</name></expr>;</condition> <incr pos:start="209:33" pos:end="209:35"><expr pos:start="209:33" pos:end="209:35"><name pos:start="209:33" pos:end="209:33">i</name><operator pos:start="209:34" pos:end="209:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="211:9" pos:end="211:53"><block_content pos:start="211:9" pos:end="211:53">

        <expr_stmt pos:start="211:9" pos:end="211:53"><expr pos:start="211:9" pos:end="211:52"><name pos:start="211:9" pos:end="211:48"><name pos:start="211:9" pos:end="211:13">movie</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:24">out_index</name><index pos:start="211:25" pos:end="211:48">[<expr pos:start="211:26" pos:end="211:47"><name pos:start="211:26" pos:end="211:37"><name pos:start="211:26" pos:end="211:30">movie</name><operator pos:start="211:31" pos:end="211:32">-&gt;</operator><name pos:start="211:33" pos:end="211:34">st</name><index pos:start="211:35" pos:end="211:37">[<expr pos:start="211:36" pos:end="211:36"><name pos:start="211:36" pos:end="211:36">i</name></expr>]</index></name><operator pos:start="211:38" pos:end="211:38">.</operator><name pos:start="211:39" pos:end="211:47"><name pos:start="211:39" pos:end="211:40">st</name><operator pos:start="211:41" pos:end="211:42">-&gt;</operator><name pos:start="211:43" pos:end="211:47">index</name></name></expr>]</index></name> <operator pos:start="211:50" pos:end="211:50">=</operator> <name pos:start="211:52" pos:end="211:52">i</name></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="215:5" pos:end="249:5">for <control pos:start="215:9" pos:end="215:36">(<init pos:start="215:10" pos:end="215:15"><expr pos:start="215:10" pos:end="215:14"><name pos:start="215:10" pos:end="215:10">i</name> <operator pos:start="215:12" pos:end="215:12">=</operator> <literal type="number" pos:start="215:14" pos:end="215:14">0</literal></expr>;</init> <condition pos:start="215:17" pos:end="215:31"><expr pos:start="215:17" pos:end="215:30"><name pos:start="215:17" pos:end="215:17">i</name> <operator pos:start="215:19" pos:end="215:19">&lt;</operator> <name pos:start="215:21" pos:end="215:30">nb_streams</name></expr>;</condition> <incr pos:start="215:33" pos:end="215:35"><expr pos:start="215:33" pos:end="215:35"><name pos:start="215:33" pos:end="215:33">i</name><operator pos:start="215:34" pos:end="215:35">++</operator></expr></incr>)</control> <block pos:start="215:38" pos:end="249:5">{<block_content pos:start="217:9" pos:end="247:9">

        <decl_stmt pos:start="217:9" pos:end="217:32"><decl pos:start="217:9" pos:end="217:31"><type pos:start="217:9" pos:end="217:19"><name pos:start="217:9" pos:end="217:19">AVFilterPad</name></type> <name pos:start="217:21" pos:end="217:23">pad</name> <init pos:start="217:25" pos:end="217:31">= <expr pos:start="217:27" pos:end="217:31"><block pos:start="217:27" pos:end="217:31">{ <expr pos:start="217:29" pos:end="217:29"><literal type="number" pos:start="217:29" pos:end="217:29">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:49"><expr pos:start="219:9" pos:end="219:48"><call pos:start="219:9" pos:end="219:48"><name pos:start="219:9" pos:end="219:16">snprintf</name><argument_list pos:start="219:17" pos:end="219:48">(<argument pos:start="219:18" pos:end="219:21"><expr pos:start="219:18" pos:end="219:21"><name pos:start="219:18" pos:end="219:21">name</name></expr></argument>, <argument pos:start="219:24" pos:end="219:35"><expr pos:start="219:24" pos:end="219:35"><sizeof pos:start="219:24" pos:end="219:35">sizeof<argument_list pos:start="219:30" pos:end="219:35">(<argument pos:start="219:31" pos:end="219:34"><expr pos:start="219:31" pos:end="219:34"><name pos:start="219:31" pos:end="219:34">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="219:38" pos:end="219:44"><expr pos:start="219:38" pos:end="219:44"><literal type="string" pos:start="219:38" pos:end="219:44">"out%d"</literal></expr></argument>, <argument pos:start="219:47" pos:end="219:47"><expr pos:start="219:47" pos:end="219:47"><name pos:start="219:47" pos:end="219:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:63"><expr pos:start="221:9" pos:end="221:62"><name pos:start="221:9" pos:end="221:16"><name pos:start="221:9" pos:end="221:11">pad</name><operator pos:start="221:12" pos:end="221:12">.</operator><name pos:start="221:13" pos:end="221:16">type</name></name>          <operator pos:start="221:27" pos:end="221:27">=</operator> <name pos:start="221:29" pos:end="221:40"><name pos:start="221:29" pos:end="221:33">movie</name><operator pos:start="221:34" pos:end="221:35">-&gt;</operator><name pos:start="221:36" pos:end="221:37">st</name><index pos:start="221:38" pos:end="221:40">[<expr pos:start="221:39" pos:end="221:39"><name pos:start="221:39" pos:end="221:39">i</name></expr>]</index></name><operator pos:start="221:41" pos:end="221:41">.</operator><name pos:start="221:42" pos:end="221:62"><name pos:start="221:42" pos:end="221:43">st</name><operator pos:start="221:44" pos:end="221:45">-&gt;</operator><name pos:start="221:46" pos:end="221:50">codec</name><operator pos:start="221:51" pos:end="221:52">-&gt;</operator><name pos:start="221:53" pos:end="221:62">codec_type</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:44"><expr pos:start="223:9" pos:end="223:43"><name pos:start="223:9" pos:end="223:16"><name pos:start="223:9" pos:end="223:11">pad</name><operator pos:start="223:12" pos:end="223:12">.</operator><name pos:start="223:13" pos:end="223:16">name</name></name>          <operator pos:start="223:27" pos:end="223:27">=</operator> <call pos:start="223:29" pos:end="223:43"><name pos:start="223:29" pos:end="223:37">av_strdup</name><argument_list pos:start="223:38" pos:end="223:43">(<argument pos:start="223:39" pos:end="223:42"><expr pos:start="223:39" pos:end="223:42"><name pos:start="223:39" pos:end="223:42">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:54"><expr pos:start="225:9" pos:end="225:53"><name pos:start="225:9" pos:end="225:24"><name pos:start="225:9" pos:end="225:11">pad</name><operator pos:start="225:12" pos:end="225:12">.</operator><name pos:start="225:13" pos:end="225:24">config_props</name></name>  <operator pos:start="225:27" pos:end="225:27">=</operator> <name pos:start="225:29" pos:end="225:53">movie_config_output_props</name></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:48"><expr pos:start="227:9" pos:end="227:47"><name pos:start="227:9" pos:end="227:25"><name pos:start="227:9" pos:end="227:11">pad</name><operator pos:start="227:12" pos:end="227:12">.</operator><name pos:start="227:13" pos:end="227:25">request_frame</name></name> <operator pos:start="227:27" pos:end="227:27">=</operator> <name pos:start="227:29" pos:end="227:47">movie_request_frame</name></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:39"><expr pos:start="229:9" pos:end="229:38"><call pos:start="229:9" pos:end="229:38"><name pos:start="229:9" pos:end="229:24">ff_insert_outpad</name><argument_list pos:start="229:25" pos:end="229:38">(<argument pos:start="229:26" pos:end="229:28"><expr pos:start="229:26" pos:end="229:28"><name pos:start="229:26" pos:end="229:28">ctx</name></expr></argument>, <argument pos:start="229:31" pos:end="229:31"><expr pos:start="229:31" pos:end="229:31"><name pos:start="229:31" pos:end="229:31">i</name></expr></argument>, <argument pos:start="229:34" pos:end="229:37"><expr pos:start="229:34" pos:end="229:37"><operator pos:start="229:34" pos:end="229:34">&amp;</operator><name pos:start="229:35" pos:end="229:37">pad</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:46"><expr pos:start="231:9" pos:end="231:45"><name pos:start="231:9" pos:end="231:11">ret</name> <operator pos:start="231:13" pos:end="231:13">=</operator> <call pos:start="231:15" pos:end="231:45"><name pos:start="231:15" pos:end="231:25">open_stream</name><argument_list pos:start="231:26" pos:end="231:45">(<argument pos:start="231:27" pos:end="231:29"><expr pos:start="231:27" pos:end="231:29"><name pos:start="231:27" pos:end="231:29">ctx</name></expr></argument>, <argument pos:start="231:32" pos:end="231:44"><expr pos:start="231:32" pos:end="231:44"><operator pos:start="231:32" pos:end="231:32">&amp;</operator><name pos:start="231:33" pos:end="231:44"><name pos:start="231:33" pos:end="231:37">movie</name><operator pos:start="231:38" pos:end="231:39">-&gt;</operator><name pos:start="231:40" pos:end="231:41">st</name><index pos:start="231:42" pos:end="231:44">[<expr pos:start="231:43" pos:end="231:43"><name pos:start="231:43" pos:end="231:43">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="233:9" pos:end="235:23"><if pos:start="233:9" pos:end="235:23">if <condition pos:start="233:12" pos:end="233:20">(<expr pos:start="233:13" pos:end="233:19"><name pos:start="233:13" pos:end="233:15">ret</name> <operator pos:start="233:17" pos:end="233:17">&lt;</operator> <literal type="number" pos:start="233:19" pos:end="233:19">0</literal></expr>)</condition><block type="pseudo" pos:start="235:13" pos:end="235:23"><block_content pos:start="235:13" pos:end="235:23">

            <return pos:start="235:13" pos:end="235:23">return <expr pos:start="235:20" pos:end="235:22"><name pos:start="235:20" pos:end="235:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="237:9" pos:end="247:9"><if pos:start="237:9" pos:end="247:9">if <condition pos:start="237:12" pos:end="239:52">( <expr pos:start="237:14" pos:end="239:51"><name pos:start="237:14" pos:end="237:25"><name pos:start="237:14" pos:end="237:18">movie</name><operator pos:start="237:19" pos:end="237:20">-&gt;</operator><name pos:start="237:21" pos:end="237:22">st</name><index pos:start="237:23" pos:end="237:25">[<expr pos:start="237:24" pos:end="237:24"><name pos:start="237:24" pos:end="237:24">i</name></expr>]</index></name><operator pos:start="237:26" pos:end="237:26">.</operator><name pos:start="237:27" pos:end="237:48"><name pos:start="237:27" pos:end="237:28">st</name><operator pos:start="237:29" pos:end="237:30">-&gt;</operator><name pos:start="237:31" pos:end="237:35">codec</name><operator pos:start="237:36" pos:end="237:37">-&gt;</operator><name pos:start="237:38" pos:end="237:42">codec</name><operator pos:start="237:43" pos:end="237:44">-&gt;</operator><name pos:start="237:45" pos:end="237:48">type</name></name> <operator pos:start="237:50" pos:end="237:51">==</operator> <name pos:start="237:53" pos:end="237:70">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="237:72" pos:end="237:73">&amp;&amp;</operator>

            <operator pos:start="239:13" pos:end="239:13">!</operator><name pos:start="239:14" pos:end="239:25"><name pos:start="239:14" pos:end="239:18">movie</name><operator pos:start="239:19" pos:end="239:20">-&gt;</operator><name pos:start="239:21" pos:end="239:22">st</name><index pos:start="239:23" pos:end="239:25">[<expr pos:start="239:24" pos:end="239:24"><name pos:start="239:24" pos:end="239:24">i</name></expr>]</index></name><operator pos:start="239:26" pos:end="239:26">.</operator><name pos:start="239:27" pos:end="239:51"><name pos:start="239:27" pos:end="239:28">st</name><operator pos:start="239:29" pos:end="239:30">-&gt;</operator><name pos:start="239:31" pos:end="239:35">codec</name><operator pos:start="239:36" pos:end="239:37">-&gt;</operator><name pos:start="239:38" pos:end="239:51">channel_layout</name></name></expr>)</condition> <block pos:start="239:54" pos:end="247:9">{<block_content pos:start="241:13" pos:end="245:27">

            <expr_stmt pos:start="241:13" pos:end="241:62"><expr pos:start="241:13" pos:end="241:61"><name pos:start="241:13" pos:end="241:15">ret</name> <operator pos:start="241:17" pos:end="241:17">=</operator> <call pos:start="241:19" pos:end="241:61"><name pos:start="241:19" pos:end="241:38">guess_channel_layout</name><argument_list pos:start="241:39" pos:end="241:61">(<argument pos:start="241:40" pos:end="241:52"><expr pos:start="241:40" pos:end="241:52"><operator pos:start="241:40" pos:end="241:40">&amp;</operator><name pos:start="241:41" pos:end="241:52"><name pos:start="241:41" pos:end="241:45">movie</name><operator pos:start="241:46" pos:end="241:47">-&gt;</operator><name pos:start="241:48" pos:end="241:49">st</name><index pos:start="241:50" pos:end="241:52">[<expr pos:start="241:51" pos:end="241:51"><name pos:start="241:51" pos:end="241:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="241:55" pos:end="241:55"><expr pos:start="241:55" pos:end="241:55"><name pos:start="241:55" pos:end="241:55">i</name></expr></argument>, <argument pos:start="241:58" pos:end="241:60"><expr pos:start="241:58" pos:end="241:60"><name pos:start="241:58" pos:end="241:60">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="243:13" pos:end="245:27"><if pos:start="243:13" pos:end="245:27">if <condition pos:start="243:16" pos:end="243:24">(<expr pos:start="243:17" pos:end="243:23"><name pos:start="243:17" pos:end="243:19">ret</name> <operator pos:start="243:21" pos:end="243:21">&lt;</operator> <literal type="number" pos:start="243:23" pos:end="243:23">0</literal></expr>)</condition><block type="pseudo" pos:start="245:17" pos:end="245:27"><block_content pos:start="245:17" pos:end="245:27">

                <return pos:start="245:17" pos:end="245:27">return <expr pos:start="245:24" pos:end="245:26"><name pos:start="245:24" pos:end="245:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="253:5" pos:end="259:5"><if pos:start="253:5" pos:end="259:5">if <condition pos:start="253:8" pos:end="253:49">(<expr pos:start="253:9" pos:end="253:47"><operator pos:start="253:9" pos:end="253:9">!</operator><operator pos:start="253:10" pos:end="253:10">(</operator><name pos:start="253:11" pos:end="253:22"><name pos:start="253:11" pos:end="253:15">movie</name><operator pos:start="253:16" pos:end="253:17">-&gt;</operator><name pos:start="253:18" pos:end="253:22">frame</name></name> <operator pos:start="253:24" pos:end="253:24">=</operator> <call pos:start="253:26" pos:end="253:46"><name pos:start="253:26" pos:end="253:44">avcodec_alloc_frame</name><argument_list pos:start="253:45" pos:end="253:46">()</argument_list></call><operator pos:start="253:47" pos:end="253:47">)</operator></expr> )</condition> <block pos:start="253:51" pos:end="259:5">{<block_content pos:start="255:9" pos:end="257:31">

        <expr_stmt pos:start="255:9" pos:end="255:61"><expr pos:start="255:9" pos:end="255:60"><call pos:start="255:9" pos:end="255:60"><name pos:start="255:9" pos:end="255:14">av_log</name><argument_list pos:start="255:15" pos:end="255:60">(<argument pos:start="255:16" pos:end="255:18"><expr pos:start="255:16" pos:end="255:18"><name pos:start="255:16" pos:end="255:18">log</name></expr></argument>, <argument pos:start="255:21" pos:end="255:32"><expr pos:start="255:21" pos:end="255:32"><name pos:start="255:21" pos:end="255:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="255:35" pos:end="255:59"><expr pos:start="255:35" pos:end="255:59"><literal type="string" pos:start="255:35" pos:end="255:59">"Failed to alloc frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="257:9" pos:end="257:31">return <expr pos:start="257:16" pos:end="257:30"><call pos:start="257:16" pos:end="257:30"><name pos:start="257:16" pos:end="257:22">AVERROR</name><argument_list pos:start="257:23" pos:end="257:30">(<argument pos:start="257:24" pos:end="257:29"><expr pos:start="257:24" pos:end="257:29"><name pos:start="257:24" pos:end="257:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="263:5" pos:end="267:32"><expr pos:start="263:5" pos:end="267:31"><call pos:start="263:5" pos:end="267:31"><name pos:start="263:5" pos:end="263:10">av_log</name><argument_list pos:start="263:11" pos:end="267:31">(<argument pos:start="263:12" pos:end="263:14"><expr pos:start="263:12" pos:end="263:14"><name pos:start="263:12" pos:end="263:14">ctx</name></expr></argument>, <argument pos:start="263:17" pos:end="263:30"><expr pos:start="263:17" pos:end="263:30"><name pos:start="263:17" pos:end="263:30">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="263:33" pos:end="263:100"><expr pos:start="263:33" pos:end="263:100"><literal type="string" pos:start="263:33" pos:end="263:46">"seek_point:%"</literal><name pos:start="263:47" pos:end="263:52">PRIi64</name><literal type="string" pos:start="263:53" pos:end="263:100">" format_name:%s file_name:%s stream_index:%d\n"</literal></expr></argument>,

           <argument pos:start="265:12" pos:end="265:28"><expr pos:start="265:12" pos:end="265:28"><name pos:start="265:12" pos:end="265:28"><name pos:start="265:12" pos:end="265:16">movie</name><operator pos:start="265:17" pos:end="265:18">-&gt;</operator><name pos:start="265:19" pos:end="265:28">seek_point</name></name></expr></argument>, <argument pos:start="265:31" pos:end="265:48"><expr pos:start="265:31" pos:end="265:48"><name pos:start="265:31" pos:end="265:48"><name pos:start="265:31" pos:end="265:35">movie</name><operator pos:start="265:36" pos:end="265:37">-&gt;</operator><name pos:start="265:38" pos:end="265:48">format_name</name></name></expr></argument>, <argument pos:start="265:51" pos:end="265:66"><expr pos:start="265:51" pos:end="265:66"><name pos:start="265:51" pos:end="265:66"><name pos:start="265:51" pos:end="265:55">movie</name><operator pos:start="265:56" pos:end="265:57">-&gt;</operator><name pos:start="265:58" pos:end="265:66">file_name</name></name></expr></argument>,

           <argument pos:start="267:12" pos:end="267:30"><expr pos:start="267:12" pos:end="267:30"><name pos:start="267:12" pos:end="267:30"><name pos:start="267:12" pos:end="267:16">movie</name><operator pos:start="267:17" pos:end="267:18">-&gt;</operator><name pos:start="267:19" pos:end="267:30">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="271:5" pos:end="271:13">return <expr pos:start="271:12" pos:end="271:12"><literal type="number" pos:start="271:12" pos:end="271:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
