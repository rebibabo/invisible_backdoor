<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20317.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_dds1</name><parameter_list pos:start="1:23" pos:end="3:66">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:30">uint8_t</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:37">frame</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:48"><decl pos:start="1:40" pos:end="1:48"><type pos:start="1:40" pos:end="1:48"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:48">width</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:60">height</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:41"><decl pos:start="3:24" pos:end="3:41"><type pos:start="3:24" pos:end="3:41"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:36">uint8_t</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">src</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:65"><decl pos:start="3:44" pos:end="3:65"><type pos:start="3:44" pos:end="3:65"><specifier pos:start="3:44" pos:end="3:48">const</specifier> <name pos:start="3:50" pos:end="3:56">uint8_t</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:65">src_end</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:30">frame_start</name> <init pos:start="7:32" pos:end="7:38">= <expr pos:start="7:34" pos:end="7:38"><name pos:start="7:34" pos:end="7:38">frame</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:28">frame_end</name>   <init pos:start="9:32" pos:end="9:55">= <expr pos:start="9:34" pos:end="9:55"><name pos:start="9:34" pos:end="9:38">frame</name> <operator pos:start="9:40" pos:end="9:40">+</operator> <name pos:start="9:42" pos:end="9:46">width</name> <operator pos:start="9:48" pos:end="9:48">*</operator> <name pos:start="9:50" pos:end="9:55">height</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">mask</name> <init pos:start="11:14" pos:end="11:22">= <expr pos:start="11:16" pos:end="11:22"><literal type="number" pos:start="11:16" pos:end="11:22">0x10000</literal></expr></init></decl>, <decl pos:start="11:25" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:30">bitbuf</name> <init pos:start="11:32" pos:end="11:34">= <expr pos:start="11:34" pos:end="11:34"><literal type="number" pos:start="11:34" pos:end="11:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">v</name></decl>, <decl pos:start="13:15" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:20">offset</name></decl>, <decl pos:start="13:23" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:23" pos:end="13:27">count</name></decl>, <decl pos:start="13:30" pos:end="13:37"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:30" pos:end="13:37">segments</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:12">segments</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:40"><name pos:start="17:16" pos:end="17:34">bytestream_get_le16</name><argument_list pos:start="17:35" pos:end="17:40">(<argument pos:start="17:36" pos:end="17:39"><expr pos:start="17:36" pos:end="17:39"><operator pos:start="17:36" pos:end="17:36">&amp;</operator><name pos:start="17:37" pos:end="17:39">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="83:5">while <condition pos:start="19:11" pos:end="19:22">(<expr pos:start="19:12" pos:end="19:21"><name pos:start="19:12" pos:end="19:19">segments</name><operator pos:start="19:20" pos:end="19:21">--</operator></expr>)</condition> <block pos:start="19:24" pos:end="83:5">{<block_content pos:start="21:9" pos:end="81:19">

        <if_stmt pos:start="21:9" pos:end="31:9"><if pos:start="21:9" pos:end="31:9">if <condition pos:start="21:12" pos:end="21:28">(<expr pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:16">mask</name> <operator pos:start="21:18" pos:end="21:19">==</operator> <literal type="number" pos:start="21:21" pos:end="21:27">0x10000</literal></expr>)</condition> <block pos:start="21:30" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:21">

            <if_stmt pos:start="23:13" pos:end="25:26"><if pos:start="23:13" pos:end="25:26">if <condition pos:start="23:16" pos:end="23:31">(<expr pos:start="23:17" pos:end="23:30"><name pos:start="23:17" pos:end="23:19">src</name> <operator pos:start="23:21" pos:end="23:22">&gt;=</operator> <name pos:start="23:24" pos:end="23:30">src_end</name></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:26"><block_content pos:start="25:17" pos:end="25:26">

                <return pos:start="25:17" pos:end="25:26">return <expr pos:start="25:24" pos:end="25:25"><operator pos:start="25:24" pos:end="25:24">-</operator><literal type="number" pos:start="25:25" pos:end="25:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:47"><expr pos:start="27:13" pos:end="27:46"><name pos:start="27:13" pos:end="27:18">bitbuf</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:46"><name pos:start="27:22" pos:end="27:40">bytestream_get_le16</name><argument_list pos:start="27:41" pos:end="27:46">(<argument pos:start="27:42" pos:end="27:45"><expr pos:start="27:42" pos:end="27:45"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:45">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:21"><expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:16">mask</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="35:22"><if pos:start="33:9" pos:end="35:22">if <condition pos:start="33:12" pos:end="33:55">(<expr pos:start="33:13" pos:end="33:54"><name pos:start="33:13" pos:end="33:19">src_end</name> <operator pos:start="33:21" pos:end="33:21">-</operator> <name pos:start="33:23" pos:end="33:25">src</name> <operator pos:start="33:27" pos:end="33:27">&lt;</operator> <literal type="number" pos:start="33:29" pos:end="33:29">2</literal> <operator pos:start="33:31" pos:end="33:32">||</operator> <name pos:start="33:34" pos:end="33:42">frame_end</name> <operator pos:start="33:44" pos:end="33:44">-</operator> <name pos:start="33:46" pos:end="33:50">frame</name> <operator pos:start="33:52" pos:end="33:52">&lt;</operator> <literal type="number" pos:start="33:54" pos:end="33:54">2</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:22"><block_content pos:start="35:13" pos:end="35:22">

            <return pos:start="35:13" pos:end="35:22">return <expr pos:start="35:20" pos:end="35:21"><operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="79:9"><if pos:start="37:9" pos:end="61:9">if <condition pos:start="37:12" pos:end="37:26">(<expr pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:18">bitbuf</name> <operator pos:start="37:20" pos:end="37:20">&amp;</operator> <name pos:start="37:22" pos:end="37:25">mask</name></expr>)</condition> <block pos:start="37:28" pos:end="61:9">{<block_content pos:start="39:13" pos:end="59:13">

            <expr_stmt pos:start="39:13" pos:end="39:42"><expr pos:start="39:13" pos:end="39:41"><name pos:start="39:13" pos:end="39:13">v</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:41"><name pos:start="39:17" pos:end="39:35">bytestream_get_le16</name><argument_list pos:start="39:36" pos:end="39:41">(<argument pos:start="39:37" pos:end="39:40"><expr pos:start="39:37" pos:end="39:40"><operator pos:start="39:37" pos:end="39:37">&amp;</operator><name pos:start="39:38" pos:end="39:40">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:39"><expr pos:start="41:13" pos:end="41:38"><name pos:start="41:13" pos:end="41:18">offset</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <operator pos:start="41:22" pos:end="41:22">(</operator><name pos:start="41:23" pos:end="41:23">v</name> <operator pos:start="41:25" pos:end="41:25">&amp;</operator> <literal type="number" pos:start="41:27" pos:end="41:32">0x1FFF</literal><operator pos:start="41:33" pos:end="41:33">)</operator> <operator pos:start="41:35" pos:end="41:36">&lt;&lt;</operator> <literal type="number" pos:start="41:38" pos:end="41:38">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:41"><expr pos:start="43:13" pos:end="43:40"><name pos:start="43:13" pos:end="43:17">count</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <operator pos:start="43:21" pos:end="43:21">(</operator><operator pos:start="43:22" pos:end="43:22">(</operator><name pos:start="43:23" pos:end="43:23">v</name> <operator pos:start="43:25" pos:end="43:26">&gt;&gt;</operator> <literal type="number" pos:start="43:28" pos:end="43:29">13</literal><operator pos:start="43:30" pos:end="43:30">)</operator> <operator pos:start="43:32" pos:end="43:32">+</operator> <literal type="number" pos:start="43:34" pos:end="43:34">2</literal><operator pos:start="43:35" pos:end="43:35">)</operator> <operator pos:start="43:37" pos:end="43:38">&lt;&lt;</operator> <literal type="number" pos:start="43:40" pos:end="43:40">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:26"><if pos:start="45:13" pos:end="47:26">if <condition pos:start="45:16" pos:end="45:84">(<expr pos:start="45:17" pos:end="45:83"><name pos:start="45:17" pos:end="45:21">frame</name> <operator pos:start="45:23" pos:end="45:23">-</operator> <name pos:start="45:25" pos:end="45:35">frame_start</name> <operator pos:start="45:37" pos:end="45:37">&lt;</operator> <name pos:start="45:39" pos:end="45:44">offset</name> <operator pos:start="45:46" pos:end="45:47">||</operator> <name pos:start="45:49" pos:end="45:57">frame_end</name> <operator pos:start="45:59" pos:end="45:59">-</operator> <name pos:start="45:61" pos:end="45:65">frame</name> <operator pos:start="45:67" pos:end="45:67">&lt;</operator> <name pos:start="45:69" pos:end="45:73">count</name><operator pos:start="45:74" pos:end="45:74">*</operator><literal type="number" pos:start="45:75" pos:end="45:77">2</literal> <operator pos:start="45:77" pos:end="45:77">+</operator> <name pos:start="45:79" pos:end="45:83">width</name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:26"><block_content pos:start="47:17" pos:end="47:26">

                <return pos:start="47:17" pos:end="47:26">return <expr pos:start="47:24" pos:end="47:25"><operator pos:start="47:24" pos:end="47:24">-</operator><literal type="number" pos:start="47:25" pos:end="47:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <for pos:start="49:13" pos:end="59:13">for <control pos:start="49:17" pos:end="49:39">(<init pos:start="49:18" pos:end="49:23"><expr pos:start="49:18" pos:end="49:22"><name pos:start="49:18" pos:end="49:18">i</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr>;</init> <condition pos:start="49:25" pos:end="49:34"><expr pos:start="49:25" pos:end="49:33"><name pos:start="49:25" pos:end="49:25">i</name> <operator pos:start="49:27" pos:end="49:27">&lt;</operator> <name pos:start="49:29" pos:end="49:33">count</name></expr>;</condition> <incr pos:start="49:36" pos:end="49:38"><expr pos:start="49:36" pos:end="49:38"><name pos:start="49:36" pos:end="49:36">i</name><operator pos:start="49:37" pos:end="49:38">++</operator></expr></incr>)</control> <block pos:start="49:41" pos:end="59:13">{<block_content pos:start="51:17" pos:end="57:27">

                <expr_stmt pos:start="51:17" pos:end="53:65"><expr pos:start="51:17" pos:end="53:64"><name pos:start="51:17" pos:end="51:24"><name pos:start="51:17" pos:end="51:21">frame</name><index pos:start="51:22" pos:end="51:24">[<expr pos:start="51:23" pos:end="51:23"><literal type="number" pos:start="51:23" pos:end="51:23">0</literal></expr>]</index></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:35"><name pos:start="51:28" pos:end="51:32">frame</name><index pos:start="51:33" pos:end="51:35">[<expr pos:start="51:34" pos:end="51:34"><literal type="number" pos:start="51:34" pos:end="51:34">1</literal></expr>]</index></name> <operator pos:start="51:37" pos:end="51:37">=</operator>

                <name pos:start="53:17" pos:end="53:28"><name pos:start="53:17" pos:end="53:21">frame</name><index pos:start="53:22" pos:end="53:28">[<expr pos:start="53:23" pos:end="53:27"><name pos:start="53:23" pos:end="53:27">width</name></expr>]</index></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <name pos:start="53:32" pos:end="53:47"><name pos:start="53:32" pos:end="53:36">frame</name><index pos:start="53:37" pos:end="53:47">[<expr pos:start="53:38" pos:end="53:46"><name pos:start="53:38" pos:end="53:42">width</name> <operator pos:start="53:44" pos:end="53:44">+</operator> <literal type="number" pos:start="53:46" pos:end="53:46">1</literal></expr>]</index></name> <operator pos:start="53:49" pos:end="53:49">=</operator> <name pos:start="53:51" pos:end="53:64"><name pos:start="53:51" pos:end="53:55">frame</name><index pos:start="53:56" pos:end="53:64">[<expr pos:start="53:57" pos:end="53:63"><operator pos:start="53:57" pos:end="53:57">-</operator><name pos:start="53:58" pos:end="53:63">offset</name></expr>]</index></name></expr>;</expr_stmt>



                <expr_stmt pos:start="57:17" pos:end="57:27"><expr pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:21">frame</name> <operator pos:start="57:23" pos:end="57:24">+=</operator> <literal type="number" pos:start="57:26" pos:end="57:26">2</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="61:11" pos:end="65:9">else if <condition pos:start="61:19" pos:end="61:40">(<expr pos:start="61:20" pos:end="61:39"><name pos:start="61:20" pos:end="61:25">bitbuf</name> <operator pos:start="61:27" pos:end="61:27">&amp;</operator> <operator pos:start="61:29" pos:end="61:29">(</operator><name pos:start="61:30" pos:end="61:33">mask</name> <operator pos:start="61:35" pos:end="61:36">&lt;&lt;</operator> <literal type="number" pos:start="61:38" pos:end="61:38">1</literal><operator pos:start="61:39" pos:end="61:39">)</operator></expr>)</condition> <block pos:start="61:42" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:51">

            <expr_stmt pos:start="63:13" pos:end="63:51"><expr pos:start="63:13" pos:end="63:50"><name pos:start="63:13" pos:end="63:17">frame</name> <operator pos:start="63:19" pos:end="63:20">+=</operator> <call pos:start="63:22" pos:end="63:46"><name pos:start="63:22" pos:end="63:40">bytestream_get_le16</name><argument_list pos:start="63:41" pos:end="63:46">(<argument pos:start="63:42" pos:end="63:45"><expr pos:start="63:42" pos:end="63:45"><operator pos:start="63:42" pos:end="63:42">&amp;</operator><name pos:start="63:43" pos:end="63:45">src</name></expr></argument>)</argument_list></call> <operator pos:start="63:48" pos:end="63:48">*</operator> <literal type="number" pos:start="63:50" pos:end="63:50">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="79:9">else <block pos:start="65:16" pos:end="79:9">{<block_content pos:start="67:13" pos:end="77:23">

            <expr_stmt pos:start="67:13" pos:end="69:54"><expr pos:start="67:13" pos:end="69:53"><name pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:17">frame</name><index pos:start="67:18" pos:end="67:20">[<expr pos:start="67:19" pos:end="67:19"><literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>]</index></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:31"><name pos:start="67:24" pos:end="67:28">frame</name><index pos:start="67:29" pos:end="67:31">[<expr pos:start="67:30" pos:end="67:30"><literal type="number" pos:start="67:30" pos:end="67:30">1</literal></expr>]</index></name> <operator pos:start="67:33" pos:end="67:33">=</operator>

            <name pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:17">frame</name><index pos:start="69:18" pos:end="69:24">[<expr pos:start="69:19" pos:end="69:23"><name pos:start="69:19" pos:end="69:23">width</name></expr>]</index></name> <operator pos:start="69:26" pos:end="69:26">=</operator> <name pos:start="69:28" pos:end="69:43"><name pos:start="69:28" pos:end="69:32">frame</name><index pos:start="69:33" pos:end="69:43">[<expr pos:start="69:34" pos:end="69:42"><name pos:start="69:34" pos:end="69:38">width</name> <operator pos:start="69:40" pos:end="69:40">+</operator> <literal type="number" pos:start="69:42" pos:end="69:42">1</literal></expr>]</index></name> <operator pos:start="69:45" pos:end="69:45">=</operator>  <operator pos:start="69:48" pos:end="69:48">*</operator><name pos:start="69:49" pos:end="69:51">src</name><operator pos:start="69:52" pos:end="69:53">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:23"><expr pos:start="71:13" pos:end="71:22"><name pos:start="71:13" pos:end="71:17">frame</name> <operator pos:start="71:19" pos:end="71:20">+=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="75:54"><expr pos:start="73:13" pos:end="75:53"><name pos:start="73:13" pos:end="73:20"><name pos:start="73:13" pos:end="73:17">frame</name><index pos:start="73:18" pos:end="73:20">[<expr pos:start="73:19" pos:end="73:19"><literal type="number" pos:start="73:19" pos:end="73:19">0</literal></expr>]</index></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:31"><name pos:start="73:24" pos:end="73:28">frame</name><index pos:start="73:29" pos:end="73:31">[<expr pos:start="73:30" pos:end="73:30"><literal type="number" pos:start="73:30" pos:end="73:30">1</literal></expr>]</index></name> <operator pos:start="73:33" pos:end="73:33">=</operator>

            <name pos:start="75:13" pos:end="75:24"><name pos:start="75:13" pos:end="75:17">frame</name><index pos:start="75:18" pos:end="75:24">[<expr pos:start="75:19" pos:end="75:23"><name pos:start="75:19" pos:end="75:23">width</name></expr>]</index></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <name pos:start="75:28" pos:end="75:43"><name pos:start="75:28" pos:end="75:32">frame</name><index pos:start="75:33" pos:end="75:43">[<expr pos:start="75:34" pos:end="75:42"><name pos:start="75:34" pos:end="75:38">width</name> <operator pos:start="75:40" pos:end="75:40">+</operator> <literal type="number" pos:start="75:42" pos:end="75:42">1</literal></expr>]</index></name> <operator pos:start="75:45" pos:end="75:45">=</operator>  <operator pos:start="75:48" pos:end="75:48">*</operator><name pos:start="75:49" pos:end="75:51">src</name><operator pos:start="75:52" pos:end="75:53">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:23"><expr pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:17">frame</name> <operator pos:start="77:19" pos:end="77:20">+=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:19"><expr pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:12">mask</name> <operator pos:start="81:14" pos:end="81:16">&lt;&lt;=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">2</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
