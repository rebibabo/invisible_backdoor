<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20343.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">qemu_rdma_signal_unregister</name><parameter_list pos:start="1:40" pos:end="3:71">(<parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:51">RDMAContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">rdma</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:67">uint64_t</name></type> <name pos:start="1:69" pos:end="1:73">index</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:48">uint64_t</name></type> <name pos:start="3:50" pos:end="3:54">chunk</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:70"><decl pos:start="3:57" pos:end="3:70"><type pos:start="3:57" pos:end="3:70"><name pos:start="3:57" pos:end="3:64">uint64_t</name></type> <name pos:start="3:66" pos:end="3:70">wr_id</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:5">

    <if_stmt pos:start="7:5" pos:end="45:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:58">(<expr pos:start="7:9" pos:end="7:57"><name pos:start="7:9" pos:end="7:52"><name pos:start="7:9" pos:end="7:12">rdma</name><operator pos:start="7:13" pos:end="7:14">-&gt;</operator><name pos:start="7:15" pos:end="7:29">unregistrations</name><index pos:start="7:30" pos:end="7:52">[<expr pos:start="7:31" pos:end="7:51"><name pos:start="7:31" pos:end="7:51"><name pos:start="7:31" pos:end="7:34">rdma</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:51">unregister_next</name></name></expr>]</index></name> <operator pos:start="7:54" pos:end="7:55">!=</operator> <literal type="number" pos:start="7:57" pos:end="7:57">0</literal></expr>)</condition> <block pos:start="7:60" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:60">

        <expr_stmt pos:start="9:9" pos:end="9:60"><expr pos:start="9:9" pos:end="9:59"><call pos:start="9:9" pos:end="9:59"><name pos:start="9:9" pos:end="9:15">fprintf</name><argument_list pos:start="9:16" pos:end="9:59">(<argument pos:start="9:17" pos:end="9:22"><expr pos:start="9:17" pos:end="9:22"><name pos:start="9:17" pos:end="9:22">stderr</name></expr></argument>, <argument pos:start="9:25" pos:end="9:58"><expr pos:start="9:25" pos:end="9:58"><literal type="string" pos:start="9:25" pos:end="9:58">"rdma migration: queue is full!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="11:7" pos:end="45:5">else <block pos:start="11:12" pos:end="45:5">{<block_content pos:start="13:9" pos:end="43:9">

        <decl_stmt pos:start="13:9" pos:end="13:71"><decl pos:start="13:9" pos:end="13:70"><type pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:22">RDMALocalBlock</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:29">block</name> <init pos:start="13:31" pos:end="13:70">= <expr pos:start="13:33" pos:end="13:70"><operator pos:start="13:33" pos:end="13:33">&amp;</operator><operator pos:start="13:34" pos:end="13:34">(</operator><name pos:start="13:35" pos:end="13:69"><name pos:start="13:35" pos:end="13:38">rdma</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:56">local_ram_blocks</name><operator pos:start="13:57" pos:end="13:57">.</operator><name pos:start="13:58" pos:end="13:62">block</name><index pos:start="13:63" pos:end="13:69">[<expr pos:start="13:64" pos:end="13:68"><name pos:start="13:64" pos:end="13:68">index</name></expr>]</index></name><operator pos:start="13:70" pos:end="13:70">)</operator></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="17:9" pos:end="43:9"><if pos:start="17:9" pos:end="37:9">if <condition pos:start="17:12" pos:end="17:63">(<expr pos:start="17:13" pos:end="17:62"><operator pos:start="17:13" pos:end="17:13">!</operator><call pos:start="17:14" pos:end="17:62"><name pos:start="17:14" pos:end="17:29">test_and_set_bit</name><argument_list pos:start="17:30" pos:end="17:62">(<argument pos:start="17:31" pos:end="17:35"><expr pos:start="17:31" pos:end="17:35"><name pos:start="17:31" pos:end="17:35">chunk</name></expr></argument>, <argument pos:start="17:38" pos:end="17:61"><expr pos:start="17:38" pos:end="17:61"><name pos:start="17:38" pos:end="17:61"><name pos:start="17:38" pos:end="17:42">block</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:61">unregister_bitmap</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:65" pos:end="37:9">{<block_content pos:start="19:13" pos:end="35:13">

            <expr_stmt pos:start="19:13" pos:end="21:71"><expr pos:start="19:13" pos:end="21:70"><call pos:start="19:13" pos:end="21:70"><name pos:start="19:13" pos:end="19:20">DDPRINTF</name><argument_list pos:start="19:21" pos:end="21:70">(<argument pos:start="19:22" pos:end="21:39"><expr pos:start="19:22" pos:end="21:39"><literal type="string" pos:start="19:22" pos:end="19:51">"Appending unregister chunk %"</literal> <name pos:start="19:53" pos:end="19:58">PRIu64</name>

                    <literal type="string" pos:start="21:21" pos:end="21:39">" at position %d\n"</literal></expr></argument>, <argument pos:start="21:42" pos:end="21:46"><expr pos:start="21:42" pos:end="21:46"><name pos:start="21:42" pos:end="21:46">chunk</name></expr></argument>, <argument pos:start="21:49" pos:end="21:69"><expr pos:start="21:49" pos:end="21:69"><name pos:start="21:49" pos:end="21:69"><name pos:start="21:49" pos:end="21:52">rdma</name><operator pos:start="21:53" pos:end="21:54">-&gt;</operator><name pos:start="21:55" pos:end="21:69">unregister_next</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="25:13" pos:end="27:61"><expr pos:start="25:13" pos:end="27:60"><name pos:start="25:13" pos:end="25:58"><name pos:start="25:13" pos:end="25:16">rdma</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:33">unregistrations</name><index pos:start="25:34" pos:end="25:58">[<expr pos:start="25:35" pos:end="25:57"><name pos:start="25:35" pos:end="25:55"><name pos:start="25:35" pos:end="25:38">rdma</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:55">unregister_next</name></name><operator pos:start="25:56" pos:end="25:57">++</operator></expr>]</index></name> <operator pos:start="25:60" pos:end="25:60">=</operator>

                    <call pos:start="27:21" pos:end="27:60"><name pos:start="27:21" pos:end="27:39">qemu_rdma_make_wrid</name><argument_list pos:start="27:40" pos:end="27:60">(<argument pos:start="27:41" pos:end="27:45"><expr pos:start="27:41" pos:end="27:45"><name pos:start="27:41" pos:end="27:45">wr_id</name></expr></argument>, <argument pos:start="27:48" pos:end="27:52"><expr pos:start="27:48" pos:end="27:52"><name pos:start="27:48" pos:end="27:52">index</name></expr></argument>, <argument pos:start="27:55" pos:end="27:59"><expr pos:start="27:55" pos:end="27:59"><name pos:start="27:55" pos:end="27:59">chunk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="31:13" pos:end="35:13"><if pos:start="31:13" pos:end="35:13">if <condition pos:start="31:16" pos:end="31:64">(<expr pos:start="31:17" pos:end="31:63"><name pos:start="31:17" pos:end="31:37"><name pos:start="31:17" pos:end="31:20">rdma</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:37">unregister_next</name></name> <operator pos:start="31:39" pos:end="31:40">==</operator> <name pos:start="31:42" pos:end="31:63">RDMA_SIGNALED_SEND_MAX</name></expr>)</condition> <block pos:start="31:66" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:42">

                <expr_stmt pos:start="33:17" pos:end="33:42"><expr pos:start="33:17" pos:end="33:41"><name pos:start="33:17" pos:end="33:37"><name pos:start="33:17" pos:end="33:20">rdma</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:37">unregister_next</name></name> <operator pos:start="33:39" pos:end="33:39">=</operator> <literal type="number" pos:start="33:41" pos:end="33:41">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="43:9">else <block pos:start="37:16" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:27">

            <expr_stmt pos:start="39:13" pos:end="41:27"><expr pos:start="39:13" pos:end="41:26"><call pos:start="39:13" pos:end="41:26"><name pos:start="39:13" pos:end="39:20">DDPRINTF</name><argument_list pos:start="39:21" pos:end="41:26">(<argument pos:start="39:22" pos:end="39:71"><expr pos:start="39:22" pos:end="39:71"><literal type="string" pos:start="39:22" pos:end="39:41">"Unregister chunk %"</literal> <name pos:start="39:43" pos:end="39:48">PRIu64</name> <literal type="string" pos:start="39:50" pos:end="39:71">" already in queue.\n"</literal></expr></argument>,

                    <argument pos:start="41:21" pos:end="41:25"><expr pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:25">chunk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
