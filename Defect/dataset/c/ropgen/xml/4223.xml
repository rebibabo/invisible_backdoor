<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4223.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">commit_start</name><parameter_list pos:start="1:18" pos:end="7:75">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><specifier pos:start="1:19" pos:end="1:23">const</specifier> <name pos:start="1:25" pos:end="1:28">char</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">job_id</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:54">BlockDriverState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">bs</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:40"><decl pos:start="3:19" pos:end="3:40"><type pos:start="3:19" pos:end="3:40"><name pos:start="3:19" pos:end="3:34">BlockDriverState</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">base</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:63"><decl pos:start="3:43" pos:end="3:63"><type pos:start="3:43" pos:end="3:63"><name pos:start="3:43" pos:end="3:58">BlockDriverState</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:63">top</name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:78"><decl pos:start="3:66" pos:end="3:78"><type pos:start="3:66" pos:end="3:78"><name pos:start="3:66" pos:end="3:72">int64_t</name></type> <name pos:start="3:74" pos:end="3:78">speed</name></decl></parameter>,

                  <parameter pos:start="5:19" pos:end="5:42"><decl pos:start="5:19" pos:end="5:42"><type pos:start="5:19" pos:end="5:42"><name pos:start="5:19" pos:end="5:33">BlockdevOnError</name></type> <name pos:start="5:35" pos:end="5:42">on_error</name></decl></parameter>, <parameter pos:start="5:45" pos:end="5:67"><decl pos:start="5:45" pos:end="5:67"><type pos:start="5:45" pos:end="5:67"><name pos:start="5:45" pos:end="5:63">BlockCompletionFunc</name> <modifier pos:start="5:65" pos:end="5:65">*</modifier></type><name pos:start="5:66" pos:end="5:67">cb</name></decl></parameter>,

                  <parameter pos:start="7:19" pos:end="7:30"><decl pos:start="7:19" pos:end="7:30"><type pos:start="7:19" pos:end="7:30"><name pos:start="7:19" pos:end="7:22">void</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:30">opaque</name></decl></parameter>, <parameter pos:start="7:33" pos:end="7:60"><decl pos:start="7:33" pos:end="7:60"><type pos:start="7:33" pos:end="7:60"><specifier pos:start="7:33" pos:end="7:37">const</specifier> <name pos:start="7:39" pos:end="7:42">char</name> <modifier pos:start="7:44" pos:end="7:44">*</modifier></type><name pos:start="7:45" pos:end="7:60">backing_file_str</name></decl></parameter>, <parameter pos:start="7:63" pos:end="7:74"><decl pos:start="7:63" pos:end="7:74"><type pos:start="7:63" pos:end="7:74"><name pos:start="7:63" pos:end="7:67">Error</name> <modifier pos:start="7:69" pos:end="7:69">*</modifier><modifier pos:start="7:70" pos:end="7:70">*</modifier></type><name pos:start="7:71" pos:end="7:74">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="143:1">{<block_content pos:start="11:5" pos:end="141:42">

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">CommitBlockJob</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">BlockReopenQueue</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:34">reopen_queue</name> <init pos:start="13:36" pos:end="13:41">= <expr pos:start="13:38" pos:end="13:41"><name pos:start="13:38" pos:end="13:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:26">orig_overlay_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:23">orig_base_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:20">BlockDriverState</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:32">overlay_bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:9">Error</name> <modifier pos:start="21:11" pos:end="21:11">*</modifier></type><name pos:start="21:12" pos:end="21:20">local_err</name> <init pos:start="21:22" pos:end="21:27">= <expr pos:start="21:24" pos:end="21:27"><name pos:start="21:24" pos:end="21:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><call pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:21">(<argument pos:start="25:12" pos:end="25:20"><expr pos:start="25:12" pos:end="25:20"><name pos:start="25:12" pos:end="25:14">top</name> <operator pos:start="25:16" pos:end="25:17">!=</operator> <name pos:start="25:19" pos:end="25:20">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:11">top</name> <operator pos:start="27:13" pos:end="27:14">==</operator> <name pos:start="27:16" pos:end="27:19">base</name></expr>)</condition> <block pos:start="27:22" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:15">

        <expr_stmt pos:start="29:9" pos:end="29:79"><expr pos:start="29:9" pos:end="29:78"><call pos:start="29:9" pos:end="29:78"><name pos:start="29:9" pos:end="29:18">error_setg</name><argument_list pos:start="29:19" pos:end="29:78">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">errp</name></expr></argument>, <argument pos:start="29:26" pos:end="29:77"><expr pos:start="29:26" pos:end="29:77"><literal type="string" pos:start="29:26" pos:end="29:77">"Invalid files for merge: top and base are the same"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:44"><expr pos:start="37:5" pos:end="37:43"><name pos:start="37:5" pos:end="37:14">overlay_bs</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:43"><name pos:start="37:18" pos:end="37:34">bdrv_find_overlay</name><argument_list pos:start="37:35" pos:end="37:43">(<argument pos:start="37:36" pos:end="37:37"><expr pos:start="37:36" pos:end="37:37"><name pos:start="37:36" pos:end="37:37">bs</name></expr></argument>, <argument pos:start="37:40" pos:end="37:42"><expr pos:start="37:40" pos:end="37:42"><name pos:start="37:40" pos:end="37:42">top</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:27">(<expr pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:18">overlay_bs</name> <operator pos:start="41:20" pos:end="41:21">==</operator> <name pos:start="41:23" pos:end="41:26">NULL</name></expr>)</condition> <block pos:start="41:29" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:15">

        <expr_stmt pos:start="43:9" pos:end="43:80"><expr pos:start="43:9" pos:end="43:79"><call pos:start="43:9" pos:end="43:79"><name pos:start="43:9" pos:end="43:18">error_setg</name><argument_list pos:start="43:19" pos:end="43:79">(<argument pos:start="43:20" pos:end="43:23"><expr pos:start="43:20" pos:end="43:23"><name pos:start="43:20" pos:end="43:23">errp</name></expr></argument>, <argument pos:start="43:26" pos:end="43:63"><expr pos:start="43:26" pos:end="43:63"><literal type="string" pos:start="43:26" pos:end="43:63">"Could not find overlay image for %s:"</literal></expr></argument>, <argument pos:start="43:66" pos:end="43:78"><expr pos:start="43:66" pos:end="43:78"><name pos:start="43:66" pos:end="43:78"><name pos:start="43:66" pos:end="43:68">top</name><operator pos:start="43:69" pos:end="43:70">-&gt;</operator><name pos:start="43:71" pos:end="43:78">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="53:43"><expr pos:start="51:5" pos:end="53:42"><name pos:start="51:5" pos:end="51:5">s</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <call pos:start="51:9" pos:end="53:42"><name pos:start="51:9" pos:end="51:24">block_job_create</name><argument_list pos:start="51:25" pos:end="53:42">(<argument pos:start="51:26" pos:end="51:31"><expr pos:start="51:26" pos:end="51:31"><name pos:start="51:26" pos:end="51:31">job_id</name></expr></argument>, <argument pos:start="51:34" pos:end="51:51"><expr pos:start="51:34" pos:end="51:51"><operator pos:start="51:34" pos:end="51:34">&amp;</operator><name pos:start="51:35" pos:end="51:51">commit_job_driver</name></expr></argument>, <argument pos:start="51:54" pos:end="51:55"><expr pos:start="51:54" pos:end="51:55"><name pos:start="51:54" pos:end="51:55">bs</name></expr></argument>, <argument pos:start="51:58" pos:end="51:62"><expr pos:start="51:58" pos:end="51:62"><name pos:start="51:58" pos:end="51:62">speed</name></expr></argument>,

                         <argument pos:start="53:26" pos:end="53:27"><expr pos:start="53:26" pos:end="53:27"><name pos:start="53:26" pos:end="53:27">cb</name></expr></argument>, <argument pos:start="53:30" pos:end="53:35"><expr pos:start="53:30" pos:end="53:35"><name pos:start="53:30" pos:end="53:35">opaque</name></expr></argument>, <argument pos:start="53:38" pos:end="53:41"><expr pos:start="53:38" pos:end="53:41"><name pos:start="53:38" pos:end="53:41">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:11">(<expr pos:start="55:9" pos:end="55:10"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:10">s</name></expr>)</condition> <block pos:start="55:13" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:15">

        <return pos:start="57:9" pos:end="57:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:46"><expr pos:start="63:5" pos:end="63:45"><name pos:start="63:5" pos:end="63:19">orig_base_flags</name>    <operator pos:start="63:24" pos:end="63:24">=</operator> <call pos:start="63:26" pos:end="63:45"><name pos:start="63:26" pos:end="63:39">bdrv_get_flags</name><argument_list pos:start="63:40" pos:end="63:45">(<argument pos:start="63:41" pos:end="63:44"><expr pos:start="63:41" pos:end="63:44"><name pos:start="63:41" pos:end="63:44">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:52"><expr pos:start="65:5" pos:end="65:51"><name pos:start="65:5" pos:end="65:22">orig_overlay_flags</name> <operator pos:start="65:24" pos:end="65:24">=</operator> <call pos:start="65:26" pos:end="65:51"><name pos:start="65:26" pos:end="65:39">bdrv_get_flags</name><argument_list pos:start="65:40" pos:end="65:51">(<argument pos:start="65:41" pos:end="65:50"><expr pos:start="65:41" pos:end="65:50"><name pos:start="65:41" pos:end="65:50">overlay_bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:56">/* convert base &amp; overlay_bs to r/w, if necessary */</comment>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:44">(<expr pos:start="71:9" pos:end="71:43"><operator pos:start="71:9" pos:end="71:9">!</operator><operator pos:start="71:10" pos:end="71:10">(</operator><name pos:start="71:11" pos:end="71:28">orig_overlay_flags</name> <operator pos:start="71:30" pos:end="71:30">&amp;</operator> <name pos:start="71:32" pos:end="71:42">BDRV_O_RDWR</name><operator pos:start="71:43" pos:end="71:43">)</operator></expr>)</condition> <block pos:start="71:46" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:75">

        <expr_stmt pos:start="73:9" pos:end="75:75"><expr pos:start="73:9" pos:end="75:74"><name pos:start="73:9" pos:end="73:20">reopen_queue</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <call pos:start="73:24" pos:end="75:74"><name pos:start="73:24" pos:end="73:40">bdrv_reopen_queue</name><argument_list pos:start="73:41" pos:end="75:74">(<argument pos:start="73:42" pos:end="73:53"><expr pos:start="73:42" pos:end="73:53"><name pos:start="73:42" pos:end="73:53">reopen_queue</name></expr></argument>, <argument pos:start="73:56" pos:end="73:65"><expr pos:start="73:56" pos:end="73:65"><name pos:start="73:56" pos:end="73:65">overlay_bs</name></expr></argument>, <argument pos:start="73:68" pos:end="73:71"><expr pos:start="73:68" pos:end="73:71"><name pos:start="73:68" pos:end="73:71">NULL</name></expr></argument>,

                                         <argument pos:start="75:42" pos:end="75:73"><expr pos:start="75:42" pos:end="75:73"><name pos:start="75:42" pos:end="75:59">orig_overlay_flags</name> <operator pos:start="75:61" pos:end="75:61">|</operator> <name pos:start="75:63" pos:end="75:73">BDRV_O_RDWR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:41">(<expr pos:start="79:9" pos:end="79:40"><operator pos:start="79:9" pos:end="79:9">!</operator><operator pos:start="79:10" pos:end="79:10">(</operator><name pos:start="79:11" pos:end="79:25">orig_base_flags</name> <operator pos:start="79:27" pos:end="79:27">&amp;</operator> <name pos:start="79:29" pos:end="79:39">BDRV_O_RDWR</name><operator pos:start="79:40" pos:end="79:40">)</operator></expr>)</condition> <block pos:start="79:43" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:72">

        <expr_stmt pos:start="81:9" pos:end="83:72"><expr pos:start="81:9" pos:end="83:71"><name pos:start="81:9" pos:end="81:20">reopen_queue</name> <operator pos:start="81:22" pos:end="81:22">=</operator> <call pos:start="81:24" pos:end="83:71"><name pos:start="81:24" pos:end="81:40">bdrv_reopen_queue</name><argument_list pos:start="81:41" pos:end="83:71">(<argument pos:start="81:42" pos:end="81:53"><expr pos:start="81:42" pos:end="81:53"><name pos:start="81:42" pos:end="81:53">reopen_queue</name></expr></argument>, <argument pos:start="81:56" pos:end="81:59"><expr pos:start="81:56" pos:end="81:59"><name pos:start="81:56" pos:end="81:59">base</name></expr></argument>, <argument pos:start="81:62" pos:end="81:65"><expr pos:start="81:62" pos:end="81:65"><name pos:start="81:62" pos:end="81:65">NULL</name></expr></argument>,

                                         <argument pos:start="83:42" pos:end="83:70"><expr pos:start="83:42" pos:end="83:70"><name pos:start="83:42" pos:end="83:56">orig_base_flags</name> <operator pos:start="83:58" pos:end="83:58">|</operator> <name pos:start="83:60" pos:end="83:70">BDRV_O_RDWR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="101:5"><if pos:start="87:5" pos:end="101:5">if <condition pos:start="87:8" pos:end="87:21">(<expr pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:20">reopen_queue</name></expr>)</condition> <block pos:start="87:23" pos:end="101:5">{<block_content pos:start="89:9" pos:end="99:9">

        <expr_stmt pos:start="89:9" pos:end="89:55"><expr pos:start="89:9" pos:end="89:54"><call pos:start="89:9" pos:end="89:54"><name pos:start="89:9" pos:end="89:28">bdrv_reopen_multiple</name><argument_list pos:start="89:29" pos:end="89:54">(<argument pos:start="89:30" pos:end="89:41"><expr pos:start="89:30" pos:end="89:41"><name pos:start="89:30" pos:end="89:41">reopen_queue</name></expr></argument>, <argument pos:start="89:44" pos:end="89:53"><expr pos:start="89:44" pos:end="89:53"><operator pos:start="89:44" pos:end="89:44">&amp;</operator><name pos:start="89:45" pos:end="89:53">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="99:9"><if pos:start="91:9" pos:end="99:9">if <condition pos:start="91:12" pos:end="91:30">(<expr pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:21">local_err</name> <operator pos:start="91:23" pos:end="91:24">!=</operator> <name pos:start="91:26" pos:end="91:29">NULL</name></expr>)</condition> <block pos:start="91:32" pos:end="99:9">{<block_content pos:start="93:13" pos:end="97:19">

            <expr_stmt pos:start="93:13" pos:end="93:45"><expr pos:start="93:13" pos:end="93:44"><call pos:start="93:13" pos:end="93:44"><name pos:start="93:13" pos:end="93:27">error_propagate</name><argument_list pos:start="93:28" pos:end="93:44">(<argument pos:start="93:29" pos:end="93:32"><expr pos:start="93:29" pos:end="93:32"><name pos:start="93:29" pos:end="93:32">errp</name></expr></argument>, <argument pos:start="93:35" pos:end="93:43"><expr pos:start="93:35" pos:end="93:43"><name pos:start="93:35" pos:end="93:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:40"><expr pos:start="95:13" pos:end="95:39"><call pos:start="95:13" pos:end="95:39"><name pos:start="95:13" pos:end="95:27">block_job_unref</name><argument_list pos:start="95:28" pos:end="95:39">(<argument pos:start="95:29" pos:end="95:38"><expr pos:start="95:29" pos:end="95:38"><operator pos:start="95:29" pos:end="95:29">&amp;</operator><name pos:start="95:30" pos:end="95:38"><name pos:start="95:30" pos:end="95:30">s</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:38">common</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>





    <expr_stmt pos:start="107:5" pos:end="107:24"><expr pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:11"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:11">base</name></name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:23"><name pos:start="107:15" pos:end="107:21">blk_new</name><argument_list pos:start="107:22" pos:end="107:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:33"><expr pos:start="109:5" pos:end="109:32"><call pos:start="109:5" pos:end="109:32"><name pos:start="109:5" pos:end="109:17">blk_insert_bs</name><argument_list pos:start="109:18" pos:end="109:32">(<argument pos:start="109:19" pos:end="109:25"><expr pos:start="109:19" pos:end="109:25"><name pos:start="109:19" pos:end="109:25"><name pos:start="109:19" pos:end="109:19">s</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:25">base</name></name></expr></argument>, <argument pos:start="109:28" pos:end="109:31"><expr pos:start="109:28" pos:end="109:31"><name pos:start="109:28" pos:end="109:31">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:23"><expr pos:start="113:5" pos:end="113:22"><name pos:start="113:5" pos:end="113:10"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:10">top</name></name> <operator pos:start="113:12" pos:end="113:12">=</operator> <call pos:start="113:14" pos:end="113:22"><name pos:start="113:14" pos:end="113:20">blk_new</name><argument_list pos:start="113:21" pos:end="113:22">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:31"><expr pos:start="115:5" pos:end="115:30"><call pos:start="115:5" pos:end="115:30"><name pos:start="115:5" pos:end="115:17">blk_insert_bs</name><argument_list pos:start="115:18" pos:end="115:30">(<argument pos:start="115:19" pos:end="115:24"><expr pos:start="115:19" pos:end="115:24"><name pos:start="115:19" pos:end="115:24"><name pos:start="115:19" pos:end="115:19">s</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:24">top</name></name></expr></argument>, <argument pos:start="115:27" pos:end="115:29"><expr pos:start="115:27" pos:end="115:29"><name pos:start="115:27" pos:end="115:29">top</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:19"><expr pos:start="119:5" pos:end="119:18"><name pos:start="119:5" pos:end="119:13"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:13">active</name></name> <operator pos:start="119:15" pos:end="119:15">=</operator> <name pos:start="119:17" pos:end="119:18">bs</name></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:45"><expr pos:start="123:5" pos:end="123:44"><name pos:start="123:5" pos:end="123:17"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:17">base_flags</name></name>          <operator pos:start="123:28" pos:end="123:28">=</operator> <name pos:start="123:30" pos:end="123:44">orig_base_flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:48"><expr pos:start="125:5" pos:end="125:47"><name pos:start="125:5" pos:end="125:25"><name pos:start="125:5" pos:end="125:5">s</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:25">orig_overlay_flags</name></name>  <operator pos:start="125:28" pos:end="125:28">=</operator> <name pos:start="125:30" pos:end="125:47">orig_overlay_flags</name></expr>;</expr_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:53"><expr pos:start="129:5" pos:end="129:52"><name pos:start="129:5" pos:end="129:23"><name pos:start="129:5" pos:end="129:5">s</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:23">backing_file_str</name></name> <operator pos:start="129:25" pos:end="129:25">=</operator> <call pos:start="129:27" pos:end="129:52"><name pos:start="129:27" pos:end="129:34">g_strdup</name><argument_list pos:start="129:35" pos:end="129:52">(<argument pos:start="129:36" pos:end="129:51"><expr pos:start="129:36" pos:end="129:51"><name pos:start="129:36" pos:end="129:51">backing_file_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:27"><expr pos:start="133:5" pos:end="133:26"><name pos:start="133:5" pos:end="133:15"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:15">on_error</name></name> <operator pos:start="133:17" pos:end="133:17">=</operator> <name pos:start="133:19" pos:end="133:26">on_error</name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:53"><expr pos:start="135:5" pos:end="135:52"><name pos:start="135:5" pos:end="135:16"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:13">common</name><operator pos:start="135:14" pos:end="135:14">.</operator><name pos:start="135:15" pos:end="135:16">co</name></name> <operator pos:start="135:18" pos:end="135:18">=</operator> <call pos:start="135:20" pos:end="135:52"><name pos:start="135:20" pos:end="135:40">qemu_coroutine_create</name><argument_list pos:start="135:41" pos:end="135:52">(<argument pos:start="135:42" pos:end="135:51"><expr pos:start="135:42" pos:end="135:51"><name pos:start="135:42" pos:end="135:51">commit_run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:63"><expr pos:start="139:5" pos:end="139:62"><call pos:start="139:5" pos:end="139:62"><name pos:start="139:5" pos:end="139:22">trace_commit_start</name><argument_list pos:start="139:23" pos:end="139:62">(<argument pos:start="139:24" pos:end="139:25"><expr pos:start="139:24" pos:end="139:25"><name pos:start="139:24" pos:end="139:25">bs</name></expr></argument>, <argument pos:start="139:28" pos:end="139:31"><expr pos:start="139:28" pos:end="139:31"><name pos:start="139:28" pos:end="139:31">base</name></expr></argument>, <argument pos:start="139:34" pos:end="139:36"><expr pos:start="139:34" pos:end="139:36"><name pos:start="139:34" pos:end="139:36">top</name></expr></argument>, <argument pos:start="139:39" pos:end="139:39"><expr pos:start="139:39" pos:end="139:39"><name pos:start="139:39" pos:end="139:39">s</name></expr></argument>, <argument pos:start="139:42" pos:end="139:53"><expr pos:start="139:42" pos:end="139:53"><name pos:start="139:42" pos:end="139:53"><name pos:start="139:42" pos:end="139:42">s</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:50">common</name><operator pos:start="139:51" pos:end="139:51">.</operator><name pos:start="139:52" pos:end="139:53">co</name></name></expr></argument>, <argument pos:start="139:56" pos:end="139:61"><expr pos:start="139:56" pos:end="139:61"><name pos:start="139:56" pos:end="139:61">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:42"><expr pos:start="141:5" pos:end="141:41"><call pos:start="141:5" pos:end="141:41"><name pos:start="141:5" pos:end="141:24">qemu_coroutine_enter</name><argument_list pos:start="141:25" pos:end="141:41">(<argument pos:start="141:26" pos:end="141:37"><expr pos:start="141:26" pos:end="141:37"><name pos:start="141:26" pos:end="141:37"><name pos:start="141:26" pos:end="141:26">s</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:34">common</name><operator pos:start="141:35" pos:end="141:35">.</operator><name pos:start="141:36" pos:end="141:37">co</name></name></expr></argument>, <argument pos:start="141:40" pos:end="141:40"><expr pos:start="141:40" pos:end="141:40"><name pos:start="141:40" pos:end="141:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
