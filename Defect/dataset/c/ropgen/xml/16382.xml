<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16382.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">srt_encode_frame</name><parameter_list pos:start="1:28" pos:end="3:83">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><name pos:start="3:29" pos:end="3:36">unsigned</name> <name pos:start="3:38" pos:end="3:41">char</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:46">buf</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:59"><decl pos:start="3:49" pos:end="3:59"><type pos:start="3:49" pos:end="3:59"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:59">bufsize</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:82"><decl pos:start="3:62" pos:end="3:82"><type pos:start="3:62" pos:end="3:82"><specifier pos:start="3:62" pos:end="3:66">const</specifier> <name pos:start="3:68" pos:end="3:77">AVSubtitle</name> <modifier pos:start="3:79" pos:end="3:79">*</modifier></type><name pos:start="3:80" pos:end="3:82">sub</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:15">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">SRTContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:25">avctx</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">ASSDialog</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:21">dialog</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">len</name></decl>, <decl pos:start="11:17" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:19">num</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:10">ptr</name></name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:22"><name pos:start="15:14" pos:end="15:14">s</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:22">buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:10">end</name></name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:19"><name pos:start="17:14" pos:end="17:14">s</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:19">ptr</name></name> <operator pos:start="17:21" pos:end="17:21">+</operator> <sizeof pos:start="17:23" pos:end="17:39">sizeof<argument_list pos:start="17:29" pos:end="17:39">(<argument pos:start="17:30" pos:end="17:38"><expr pos:start="17:30" pos:end="17:38"><name pos:start="17:30" pos:end="17:38"><name pos:start="17:30" pos:end="17:30">s</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:38">buffer</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="73:5">for <control pos:start="21:9" pos:end="21:36">(<init pos:start="21:10" pos:end="21:13"><expr pos:start="21:10" pos:end="21:12"><name pos:start="21:10" pos:end="21:10">i</name><operator pos:start="21:11" pos:end="21:11">=</operator><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</init> <condition pos:start="21:15" pos:end="21:31"><expr pos:start="21:15" pos:end="21:30"><name pos:start="21:15" pos:end="21:15">i</name><operator pos:start="21:16" pos:end="21:16">&lt;</operator><name pos:start="21:17" pos:end="21:30"><name pos:start="21:17" pos:end="21:19">sub</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:30">num_rects</name></name></expr>;</condition> <incr pos:start="21:33" pos:end="21:35"><expr pos:start="21:33" pos:end="21:35"><name pos:start="21:33" pos:end="21:33">i</name><operator pos:start="21:34" pos:end="21:35">++</operator></expr></incr>)</control> <block pos:start="21:38" pos:end="73:5">{<block_content pos:start="25:9" pos:end="71:9">



        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:48">(<expr pos:start="25:13" pos:end="25:47"><name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:15">sub</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:22">rects</name><index pos:start="25:23" pos:end="25:25">[<expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">i</name></expr>]</index></name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:31">type</name> <operator pos:start="25:33" pos:end="25:34">!=</operator> <name pos:start="25:36" pos:end="25:47">SUBTITLE_ASS</name></expr>)</condition> <block pos:start="25:50" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:35">

            <expr_stmt pos:start="27:13" pos:end="27:79"><expr pos:start="27:13" pos:end="27:78"><call pos:start="27:13" pos:end="27:78"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="27:78">(<argument pos:start="27:20" pos:end="27:24"><expr pos:start="27:20" pos:end="27:24"><name pos:start="27:20" pos:end="27:24">avctx</name></expr></argument>, <argument pos:start="27:27" pos:end="27:38"><expr pos:start="27:27" pos:end="27:38"><name pos:start="27:27" pos:end="27:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:41" pos:end="27:77"><expr pos:start="27:41" pos:end="27:77"><literal type="string" pos:start="27:41" pos:end="27:77">"Only SUBTITLE_ASS type supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:35">return <expr pos:start="29:20" pos:end="29:34"><call pos:start="29:20" pos:end="29:34"><name pos:start="29:20" pos:end="29:26">AVERROR</name><argument_list pos:start="29:27" pos:end="29:34">(<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:78"><expr pos:start="35:9" pos:end="35:77"><name pos:start="35:9" pos:end="35:14">dialog</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:77"><name pos:start="35:18" pos:end="35:36">ff_ass_split_dialog</name><argument_list pos:start="35:37" pos:end="35:77">(<argument pos:start="35:38" pos:end="35:47"><expr pos:start="35:38" pos:end="35:47"><name pos:start="35:38" pos:end="35:47"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:47">ass_ctx</name></name></expr></argument>, <argument pos:start="35:50" pos:end="35:67"><expr pos:start="35:50" pos:end="35:67"><name pos:start="35:50" pos:end="35:62"><name pos:start="35:50" pos:end="35:52">sub</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:59">rects</name><index pos:start="35:60" pos:end="35:62">[<expr pos:start="35:61" pos:end="35:61"><name pos:start="35:61" pos:end="35:61">i</name></expr>]</index></name><operator pos:start="35:63" pos:end="35:64">-&gt;</operator><name pos:start="35:65" pos:end="35:67">ass</name></expr></argument>, <argument pos:start="35:70" pos:end="35:70"><expr pos:start="35:70" pos:end="35:70"><literal type="number" pos:start="35:70" pos:end="35:70">0</literal></expr></argument>, <argument pos:start="35:73" pos:end="35:76"><expr pos:start="35:73" pos:end="35:76"><operator pos:start="35:73" pos:end="35:73">&amp;</operator><name pos:start="35:74" pos:end="35:76">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="37:9" pos:end="71:9">for <control pos:start="37:13" pos:end="37:41">(<init pos:start="37:14" pos:end="37:14">;</init> <condition pos:start="37:16" pos:end="37:31"><expr pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:21">dialog</name> <operator pos:start="37:23" pos:end="37:24">&amp;&amp;</operator> <name pos:start="37:26" pos:end="37:28">num</name><operator pos:start="37:29" pos:end="37:30">--</operator></expr>;</condition> <incr pos:start="37:33" pos:end="37:40"><expr pos:start="37:33" pos:end="37:40"><name pos:start="37:33" pos:end="37:38">dialog</name><operator pos:start="37:39" pos:end="37:40">++</operator></expr></incr>)</control> <block pos:start="37:43" pos:end="71:9">{<block_content pos:start="39:13" pos:end="69:73">

            <if_stmt pos:start="39:13" pos:end="61:13"><if pos:start="39:13" pos:end="61:13">if <condition pos:start="39:16" pos:end="39:49">(<expr pos:start="39:17" pos:end="39:48"><name pos:start="39:17" pos:end="39:32"><name pos:start="39:17" pos:end="39:21">avctx</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:28">codec</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:32">id</name></name> <operator pos:start="39:34" pos:end="39:35">==</operator> <name pos:start="39:37" pos:end="39:48">CODEC_ID_SRT</name></expr>)</condition> <block pos:start="39:51" pos:end="61:13">{<block_content pos:start="41:17" pos:end="59:70">

                <decl_stmt pos:start="41:17" pos:end="41:56"><decl pos:start="41:17" pos:end="41:22"><type pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">int</name></type> <name pos:start="41:21" pos:end="41:22">sh</name></decl>, <decl pos:start="41:25" pos:end="41:26"><type ref="prev" pos:start="41:17" pos:end="41:19"/><name pos:start="41:25" pos:end="41:26">sm</name></decl>, <decl pos:start="41:29" pos:end="41:30"><type ref="prev" pos:start="41:17" pos:end="41:19"/><name pos:start="41:29" pos:end="41:30">ss</name></decl>, <decl pos:start="41:33" pos:end="41:55"><type ref="prev" pos:start="41:17" pos:end="41:19"/><name pos:start="41:33" pos:end="41:34">sc</name> <init pos:start="41:36" pos:end="41:55">= <expr pos:start="41:38" pos:end="41:55"><literal type="number" pos:start="41:38" pos:end="41:39">10</literal> <operator pos:start="41:41" pos:end="41:41">*</operator> <name pos:start="41:43" pos:end="41:55"><name pos:start="41:43" pos:end="41:48">dialog</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:55">start</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="43:17" pos:end="43:54"><decl pos:start="43:17" pos:end="43:22"><type pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">int</name></type> <name pos:start="43:21" pos:end="43:22">eh</name></decl>, <decl pos:start="43:25" pos:end="43:26"><type ref="prev" pos:start="43:17" pos:end="43:19"/><name pos:start="43:25" pos:end="43:26">em</name></decl>, <decl pos:start="43:29" pos:end="43:30"><type ref="prev" pos:start="43:17" pos:end="43:19"/><name pos:start="43:29" pos:end="43:30">es</name></decl>, <decl pos:start="43:33" pos:end="43:53"><type ref="prev" pos:start="43:17" pos:end="43:19"/><name pos:start="43:33" pos:end="43:34">ec</name> <init pos:start="43:36" pos:end="43:53">= <expr pos:start="43:38" pos:end="43:53"><literal type="number" pos:start="43:38" pos:end="43:39">10</literal> <operator pos:start="43:41" pos:end="43:41">*</operator> <name pos:start="43:43" pos:end="43:53"><name pos:start="43:43" pos:end="43:48">dialog</name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:53">end</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:32"><expr pos:start="45:17" pos:end="45:31"><name pos:start="45:17" pos:end="45:18">sh</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:23">sc</name><operator pos:start="45:24" pos:end="45:24">/</operator><literal type="number" pos:start="45:25" pos:end="45:31">3600000</literal></expr>;</expr_stmt>  <expr_stmt pos:start="45:35" pos:end="45:51"><expr pos:start="45:35" pos:end="45:50"><name pos:start="45:35" pos:end="45:36">sc</name> <operator pos:start="45:38" pos:end="45:39">-=</operator> <literal type="number" pos:start="45:41" pos:end="45:47">3600000</literal><operator pos:start="45:48" pos:end="45:48">*</operator><name pos:start="45:49" pos:end="45:50">sh</name></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:32"><expr pos:start="47:17" pos:end="47:31"><name pos:start="47:17" pos:end="47:18">sm</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:23">sc</name><operator pos:start="47:24" pos:end="47:24">/</operator>  <literal type="number" pos:start="47:27" pos:end="47:31">60000</literal></expr>;</expr_stmt>  <expr_stmt pos:start="47:35" pos:end="47:51"><expr pos:start="47:35" pos:end="47:50"><name pos:start="47:35" pos:end="47:36">sc</name> <operator pos:start="47:38" pos:end="47:39">-=</operator>   <literal type="number" pos:start="47:43" pos:end="47:47">60000</literal><operator pos:start="47:48" pos:end="47:48">*</operator><name pos:start="47:49" pos:end="47:50">sm</name></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:32"><expr pos:start="49:17" pos:end="49:31"><name pos:start="49:17" pos:end="49:18">ss</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:23">sc</name><operator pos:start="49:24" pos:end="49:24">/</operator>   <literal type="number" pos:start="49:28" pos:end="49:31">1000</literal></expr>;</expr_stmt>  <expr_stmt pos:start="49:35" pos:end="49:51"><expr pos:start="49:35" pos:end="49:50"><name pos:start="49:35" pos:end="49:36">sc</name> <operator pos:start="49:38" pos:end="49:39">-=</operator>    <literal type="number" pos:start="49:44" pos:end="49:47">1000</literal><operator pos:start="49:48" pos:end="49:48">*</operator><name pos:start="49:49" pos:end="49:50">ss</name></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:32"><expr pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:18">eh</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:23">ec</name><operator pos:start="51:24" pos:end="51:24">/</operator><literal type="number" pos:start="51:25" pos:end="51:31">3600000</literal></expr>;</expr_stmt>  <expr_stmt pos:start="51:35" pos:end="51:51"><expr pos:start="51:35" pos:end="51:50"><name pos:start="51:35" pos:end="51:36">ec</name> <operator pos:start="51:38" pos:end="51:39">-=</operator> <literal type="number" pos:start="51:41" pos:end="51:47">3600000</literal><operator pos:start="51:48" pos:end="51:48">*</operator><name pos:start="51:49" pos:end="51:50">eh</name></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:32"><expr pos:start="53:17" pos:end="53:31"><name pos:start="53:17" pos:end="53:18">em</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:23">ec</name><operator pos:start="53:24" pos:end="53:24">/</operator>  <literal type="number" pos:start="53:27" pos:end="53:31">60000</literal></expr>;</expr_stmt>  <expr_stmt pos:start="53:35" pos:end="53:51"><expr pos:start="53:35" pos:end="53:50"><name pos:start="53:35" pos:end="53:36">ec</name> <operator pos:start="53:38" pos:end="53:39">-=</operator>   <literal type="number" pos:start="53:43" pos:end="53:47">60000</literal><operator pos:start="53:48" pos:end="53:48">*</operator><name pos:start="53:49" pos:end="53:50">em</name></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:32"><expr pos:start="55:17" pos:end="55:31"><name pos:start="55:17" pos:end="55:18">es</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:23">ec</name><operator pos:start="55:24" pos:end="55:24">/</operator>   <literal type="number" pos:start="55:28" pos:end="55:31">1000</literal></expr>;</expr_stmt>  <expr_stmt pos:start="55:35" pos:end="55:51"><expr pos:start="55:35" pos:end="55:50"><name pos:start="55:35" pos:end="55:36">ec</name> <operator pos:start="55:38" pos:end="55:39">-=</operator>    <literal type="number" pos:start="55:44" pos:end="55:47">1000</literal><operator pos:start="55:48" pos:end="55:48">*</operator><name pos:start="55:49" pos:end="55:50">es</name></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="59:70"><expr pos:start="57:17" pos:end="59:69"><call pos:start="57:17" pos:end="59:69"><name pos:start="57:17" pos:end="57:25">srt_print</name><argument_list pos:start="57:26" pos:end="59:69">(<argument pos:start="57:27" pos:end="57:27"><expr pos:start="57:27" pos:end="57:27"><name pos:start="57:27" pos:end="57:27">s</name></expr></argument>,<argument pos:start="57:29" pos:end="57:83"><expr pos:start="57:29" pos:end="57:83"><literal type="string" pos:start="57:29" pos:end="57:83">"%d\r\n%02d:%02d:%02d,%03d --&gt; %02d:%02d:%02d,%03d\r\n"</literal></expr></argument>,

                          <argument pos:start="59:27" pos:end="59:36"><expr pos:start="59:27" pos:end="59:36"><operator pos:start="59:27" pos:end="59:28">++</operator><name pos:start="59:29" pos:end="59:36"><name pos:start="59:29" pos:end="59:29">s</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:36">count</name></name></expr></argument>, <argument pos:start="59:39" pos:end="59:40"><expr pos:start="59:39" pos:end="59:40"><name pos:start="59:39" pos:end="59:40">sh</name></expr></argument>, <argument pos:start="59:43" pos:end="59:44"><expr pos:start="59:43" pos:end="59:44"><name pos:start="59:43" pos:end="59:44">sm</name></expr></argument>, <argument pos:start="59:47" pos:end="59:48"><expr pos:start="59:47" pos:end="59:48"><name pos:start="59:47" pos:end="59:48">ss</name></expr></argument>, <argument pos:start="59:51" pos:end="59:52"><expr pos:start="59:51" pos:end="59:52"><name pos:start="59:51" pos:end="59:52">sc</name></expr></argument>, <argument pos:start="59:55" pos:end="59:56"><expr pos:start="59:55" pos:end="59:56"><name pos:start="59:55" pos:end="59:56">eh</name></expr></argument>, <argument pos:start="59:59" pos:end="59:60"><expr pos:start="59:59" pos:end="59:60"><name pos:start="59:59" pos:end="59:60">em</name></expr></argument>, <argument pos:start="59:63" pos:end="59:64"><expr pos:start="59:63" pos:end="59:64"><name pos:start="59:63" pos:end="59:64">es</name></expr></argument>, <argument pos:start="59:67" pos:end="59:68"><expr pos:start="59:67" pos:end="59:68"><name pos:start="59:67" pos:end="59:68">ec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:37"><expr pos:start="63:13" pos:end="63:36"><name pos:start="63:13" pos:end="63:32"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:32">alignment_applied</name></name> <operator pos:start="63:34" pos:end="63:34">=</operator> <literal type="number" pos:start="63:36" pos:end="63:36">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:41"><expr pos:start="65:13" pos:end="65:40"><name pos:start="65:13" pos:end="65:27"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:27">dialog_start</name></name> <operator pos:start="65:29" pos:end="65:29">=</operator> <name pos:start="65:31" pos:end="65:36"><name pos:start="65:31" pos:end="65:31">s</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:36">ptr</name></name> <operator pos:start="65:38" pos:end="65:38">-</operator> <literal type="number" pos:start="65:40" pos:end="65:40">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:46"><expr pos:start="67:13" pos:end="67:45"><call pos:start="67:13" pos:end="67:45"><name pos:start="67:13" pos:end="67:27">srt_style_apply</name><argument_list pos:start="67:28" pos:end="67:45">(<argument pos:start="67:29" pos:end="67:29"><expr pos:start="67:29" pos:end="67:29"><name pos:start="67:29" pos:end="67:29">s</name></expr></argument>, <argument pos:start="67:32" pos:end="67:44"><expr pos:start="67:32" pos:end="67:44"><name pos:start="67:32" pos:end="67:44"><name pos:start="67:32" pos:end="67:37">dialog</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:44">style</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:73"><expr pos:start="69:13" pos:end="69:72"><call pos:start="69:13" pos:end="69:72"><name pos:start="69:13" pos:end="69:39">ff_ass_split_override_codes</name><argument_list pos:start="69:40" pos:end="69:72">(<argument pos:start="69:41" pos:end="69:54"><expr pos:start="69:41" pos:end="69:54"><operator pos:start="69:41" pos:end="69:41">&amp;</operator><name pos:start="69:42" pos:end="69:54">srt_callbacks</name></expr></argument>, <argument pos:start="69:57" pos:end="69:57"><expr pos:start="69:57" pos:end="69:57"><name pos:start="69:57" pos:end="69:57">s</name></expr></argument>, <argument pos:start="69:60" pos:end="69:71"><expr pos:start="69:60" pos:end="69:71"><name pos:start="69:60" pos:end="69:71"><name pos:start="69:60" pos:end="69:65">dialog</name><operator pos:start="69:66" pos:end="69:67">-&gt;</operator><name pos:start="69:68" pos:end="69:71">text</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="77:5" pos:end="79:17"><if pos:start="77:5" pos:end="79:17">if <condition pos:start="77:8" pos:end="77:28">(<expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:14"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:14">ptr</name></name> <operator pos:start="77:16" pos:end="77:17">==</operator> <name pos:start="77:19" pos:end="77:27"><name pos:start="77:19" pos:end="77:19">s</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:27">buffer</name></name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:17"><block_content pos:start="79:9" pos:end="79:17">

        <return pos:start="79:9" pos:end="79:17">return <expr pos:start="79:16" pos:end="79:16"><literal type="number" pos:start="79:16" pos:end="79:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:46"><expr pos:start="83:5" pos:end="83:45"><name pos:start="83:5" pos:end="83:7">len</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <call pos:start="83:11" pos:end="83:45"><name pos:start="83:11" pos:end="83:20">av_strlcpy</name><argument_list pos:start="83:21" pos:end="83:45">(<argument pos:start="83:22" pos:end="83:24"><expr pos:start="83:22" pos:end="83:24"><name pos:start="83:22" pos:end="83:24">buf</name></expr></argument>, <argument pos:start="83:27" pos:end="83:35"><expr pos:start="83:27" pos:end="83:35"><name pos:start="83:27" pos:end="83:35"><name pos:start="83:27" pos:end="83:27">s</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:35">buffer</name></name></expr></argument>, <argument pos:start="83:38" pos:end="83:44"><expr pos:start="83:38" pos:end="83:44"><name pos:start="83:38" pos:end="83:44">bufsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:24">(<expr pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:11">len</name> <operator pos:start="87:13" pos:end="87:13">&gt;</operator> <name pos:start="87:15" pos:end="87:21">bufsize</name><operator pos:start="87:22" pos:end="87:22">-</operator><literal type="number" pos:start="87:23" pos:end="87:23">1</literal></expr>)</condition> <block pos:start="87:26" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:18">

        <expr_stmt pos:start="89:9" pos:end="89:73"><expr pos:start="89:9" pos:end="89:72"><call pos:start="89:9" pos:end="89:72"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:72">(<argument pos:start="89:16" pos:end="89:20"><expr pos:start="89:16" pos:end="89:20"><name pos:start="89:16" pos:end="89:20">avctx</name></expr></argument>, <argument pos:start="89:23" pos:end="89:34"><expr pos:start="89:23" pos:end="89:34"><name pos:start="89:23" pos:end="89:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:37" pos:end="89:71"><expr pos:start="89:37" pos:end="89:71"><literal type="string" pos:start="89:37" pos:end="89:71">"Buffer too small for ASS event.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:18">return <expr pos:start="91:16" pos:end="91:17"><operator pos:start="91:16" pos:end="91:16">-</operator><literal type="number" pos:start="91:17" pos:end="91:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="97:5" pos:end="97:15">return <expr pos:start="97:12" pos:end="97:14"><name pos:start="97:12" pos:end="97:14">len</name></expr>;</return>

</block_content>}</block></function>
</unit>
