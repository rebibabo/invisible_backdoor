<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21347.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">virtio_pci_device_plugged</name><parameter_list pos:start="1:38" pos:end="1:53">(<parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:49">DeviceState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:76">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VirtIOPCIProxy</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">proxy</name> <init pos:start="5:27" pos:end="5:41">= <expr pos:start="5:29" pos:end="5:41"><call pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:38">VIRTIO_PCI</name><argument_list pos:start="5:39" pos:end="5:41">(<argument pos:start="5:40" pos:end="5:40"><expr pos:start="5:40" pos:end="5:40"><name pos:start="5:40" pos:end="5:40">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtioBusState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">bus</name> <init pos:start="7:25" pos:end="7:37">= <expr pos:start="7:27" pos:end="7:37"><operator pos:start="7:27" pos:end="7:27">&amp;</operator><name pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:32">proxy</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:37">bus</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:19">config</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:10">config</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:34"><name pos:start="15:14" pos:end="15:18">proxy</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:27">pci_dev</name><operator pos:start="15:28" pos:end="15:28">.</operator><name pos:start="15:29" pos:end="15:34">config</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:26">(<expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:13">proxy</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">class_code</name></name></expr>)</condition> <block pos:start="17:28" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:56">

        <expr_stmt pos:start="19:9" pos:end="19:56"><expr pos:start="19:9" pos:end="19:55"><call pos:start="19:9" pos:end="19:55"><name pos:start="19:9" pos:end="19:28">pci_config_set_class</name><argument_list pos:start="19:29" pos:end="19:55">(<argument pos:start="19:30" pos:end="19:35"><expr pos:start="19:30" pos:end="19:35"><name pos:start="19:30" pos:end="19:35">config</name></expr></argument>, <argument pos:start="19:38" pos:end="19:54"><expr pos:start="19:38" pos:end="19:54"><name pos:start="19:38" pos:end="19:54"><name pos:start="19:38" pos:end="19:42">proxy</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:54">class_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:55"><expr pos:start="23:5" pos:end="25:54"><call pos:start="23:5" pos:end="25:54"><name pos:start="23:5" pos:end="23:16">pci_set_word</name><argument_list pos:start="23:17" pos:end="25:54">(<argument pos:start="23:18" pos:end="23:49"><expr pos:start="23:18" pos:end="23:49"><name pos:start="23:18" pos:end="23:23">config</name> <operator pos:start="23:25" pos:end="23:25">+</operator> <name pos:start="23:27" pos:end="23:49">PCI_SUBSYSTEM_VENDOR_ID</name></expr></argument>,

                 <argument pos:start="25:18" pos:end="25:53"><expr pos:start="25:18" pos:end="25:53"><call pos:start="25:18" pos:end="25:53"><name pos:start="25:18" pos:end="25:29">pci_get_word</name><argument_list pos:start="25:30" pos:end="25:53">(<argument pos:start="25:31" pos:end="25:52"><expr pos:start="25:31" pos:end="25:52"><name pos:start="25:31" pos:end="25:36">config</name> <operator pos:start="25:38" pos:end="25:38">+</operator> <name pos:start="25:40" pos:end="25:52">PCI_VENDOR_ID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:73"><expr pos:start="27:5" pos:end="27:72"><call pos:start="27:5" pos:end="27:72"><name pos:start="27:5" pos:end="27:16">pci_set_word</name><argument_list pos:start="27:17" pos:end="27:72">(<argument pos:start="27:18" pos:end="27:42"><expr pos:start="27:18" pos:end="27:42"><name pos:start="27:18" pos:end="27:23">config</name> <operator pos:start="27:25" pos:end="27:25">+</operator> <name pos:start="27:27" pos:end="27:42">PCI_SUBSYSTEM_ID</name></expr></argument>, <argument pos:start="27:45" pos:end="27:71"><expr pos:start="27:45" pos:end="27:71"><call pos:start="27:45" pos:end="27:71"><name pos:start="27:45" pos:end="27:66">virtio_bus_get_vdev_id</name><argument_list pos:start="27:67" pos:end="27:71">(<argument pos:start="27:68" pos:end="27:70"><expr pos:start="27:68" pos:end="27:70"><name pos:start="27:68" pos:end="27:70">bus</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:10">config</name><index pos:start="29:11" pos:end="29:29">[<expr pos:start="29:12" pos:end="29:28"><name pos:start="29:12" pos:end="29:28">PCI_INTERRUPT_PIN</name></expr>]</index></name> <operator pos:start="29:31" pos:end="29:31">=</operator> <literal type="number" pos:start="29:33" pos:end="29:33">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="35:69">(<expr pos:start="33:9" pos:end="35:68"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:13">proxy</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:23">nvectors</name></name> <operator pos:start="33:25" pos:end="33:26">&amp;&amp;</operator>

        <call pos:start="35:9" pos:end="35:68"><name pos:start="35:9" pos:end="35:31">msix_init_exclusive_bar</name><argument_list pos:start="35:32" pos:end="35:68">(<argument pos:start="35:33" pos:end="35:47"><expr pos:start="35:33" pos:end="35:47"><operator pos:start="35:33" pos:end="35:33">&amp;</operator><name pos:start="35:34" pos:end="35:47"><name pos:start="35:34" pos:end="35:38">proxy</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:47">pci_dev</name></name></expr></argument>, <argument pos:start="35:50" pos:end="35:64"><expr pos:start="35:50" pos:end="35:64"><name pos:start="35:50" pos:end="35:64"><name pos:start="35:50" pos:end="35:54">proxy</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:64">nvectors</name></name></expr></argument>, <argument pos:start="35:67" pos:end="35:67"><expr pos:start="35:67" pos:end="35:67"><literal type="number" pos:start="35:67" pos:end="35:67">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:71" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:28">

        <expr_stmt pos:start="37:9" pos:end="39:38"><expr pos:start="37:9" pos:end="39:37"><call pos:start="37:9" pos:end="39:37"><name pos:start="37:9" pos:end="37:20">error_report</name><argument_list pos:start="37:21" pos:end="39:37">(<argument pos:start="37:22" pos:end="37:62"><expr pos:start="37:22" pos:end="37:62"><literal type="string" pos:start="37:22" pos:end="37:55">"unable to init msix vectors to %"</literal> <name pos:start="37:57" pos:end="37:62">PRIu32</name></expr></argument>,

                     <argument pos:start="39:22" pos:end="39:36"><expr pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:26">proxy</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:36">nvectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:13">proxy</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:23">nvectors</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <literal type="number" pos:start="41:27" pos:end="41:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:54"><expr pos:start="47:5" pos:end="47:53"><name pos:start="47:5" pos:end="47:31"><name pos:start="47:5" pos:end="47:9">proxy</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:18">pci_dev</name><operator pos:start="47:19" pos:end="47:19">.</operator><name pos:start="47:20" pos:end="47:31">config_write</name></name> <operator pos:start="47:33" pos:end="47:33">=</operator> <name pos:start="47:35" pos:end="47:53">virtio_write_config</name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="53:47"><expr pos:start="51:5" pos:end="53:46"><name pos:start="51:5" pos:end="51:8">size</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <call pos:start="51:12" pos:end="51:50"><name pos:start="51:12" pos:end="51:33">VIRTIO_PCI_REGION_SIZE</name><argument_list pos:start="51:34" pos:end="51:50">(<argument pos:start="51:35" pos:end="51:49"><expr pos:start="51:35" pos:end="51:49"><operator pos:start="51:35" pos:end="51:35">&amp;</operator><name pos:start="51:36" pos:end="51:49"><name pos:start="51:36" pos:end="51:40">proxy</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:49">pci_dev</name></name></expr></argument>)</argument_list></call>

         <operator pos:start="53:10" pos:end="53:10">+</operator> <call pos:start="53:12" pos:end="53:46"><name pos:start="53:12" pos:end="53:41">virtio_bus_get_vdev_config_len</name><argument_list pos:start="53:42" pos:end="53:46">(<argument pos:start="53:43" pos:end="53:45"><expr pos:start="53:43" pos:end="53:45"><name pos:start="53:43" pos:end="53:45">bus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:26">(<expr pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:12">size</name> <operator pos:start="55:14" pos:end="55:14">&amp;</operator> <operator pos:start="55:16" pos:end="55:16">(</operator><name pos:start="55:17" pos:end="55:20">size</name> <operator pos:start="55:22" pos:end="55:22">-</operator> <literal type="number" pos:start="55:24" pos:end="55:24">1</literal><operator pos:start="55:25" pos:end="55:25">)</operator></expr>)</condition> <block pos:start="55:28" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:35">

        <expr_stmt pos:start="57:9" pos:end="57:35"><expr pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:12">size</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <literal type="number" pos:start="57:16" pos:end="57:16">1</literal> <operator pos:start="57:18" pos:end="57:19">&lt;&lt;</operator> <call pos:start="57:21" pos:end="57:34"><name pos:start="57:21" pos:end="57:28">qemu_fls</name><argument_list pos:start="57:29" pos:end="57:34">(<argument pos:start="57:30" pos:end="57:33"><expr pos:start="57:30" pos:end="57:33"><name pos:start="57:30" pos:end="57:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="65:53"><expr pos:start="63:5" pos:end="65:52"><call pos:start="63:5" pos:end="65:52"><name pos:start="63:5" pos:end="63:25">memory_region_init_io</name><argument_list pos:start="63:26" pos:end="65:52">(<argument pos:start="63:27" pos:end="63:37"><expr pos:start="63:27" pos:end="63:37"><operator pos:start="63:27" pos:end="63:27">&amp;</operator><name pos:start="63:28" pos:end="63:37"><name pos:start="63:28" pos:end="63:32">proxy</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:37">bar</name></name></expr></argument>, <argument pos:start="63:40" pos:end="63:52"><expr pos:start="63:40" pos:end="63:52"><call pos:start="63:40" pos:end="63:52"><name pos:start="63:40" pos:end="63:45">OBJECT</name><argument_list pos:start="63:46" pos:end="63:52">(<argument pos:start="63:47" pos:end="63:51"><expr pos:start="63:47" pos:end="63:51"><name pos:start="63:47" pos:end="63:51">proxy</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="63:55" pos:end="63:76"><expr pos:start="63:55" pos:end="63:76"><operator pos:start="63:55" pos:end="63:55">&amp;</operator><name pos:start="63:56" pos:end="63:76">virtio_pci_config_ops</name></expr></argument>,

                          <argument pos:start="65:27" pos:end="65:31"><expr pos:start="65:27" pos:end="65:31"><name pos:start="65:27" pos:end="65:31">proxy</name></expr></argument>, <argument pos:start="65:34" pos:end="65:45"><expr pos:start="65:34" pos:end="65:45"><literal type="string" pos:start="65:34" pos:end="65:45">"virtio-pci"</literal></expr></argument>, <argument pos:start="65:48" pos:end="65:51"><expr pos:start="65:48" pos:end="65:51"><name pos:start="65:48" pos:end="65:51">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="69:34"><expr pos:start="67:5" pos:end="69:33"><call pos:start="67:5" pos:end="69:33"><name pos:start="67:5" pos:end="67:20">pci_register_bar</name><argument_list pos:start="67:21" pos:end="69:33">(<argument pos:start="67:22" pos:end="67:36"><expr pos:start="67:22" pos:end="67:36"><operator pos:start="67:22" pos:end="67:22">&amp;</operator><name pos:start="67:23" pos:end="67:36"><name pos:start="67:23" pos:end="67:27">proxy</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:36">pci_dev</name></name></expr></argument>, <argument pos:start="67:39" pos:end="67:39"><expr pos:start="67:39" pos:end="67:39"><literal type="number" pos:start="67:39" pos:end="67:39">0</literal></expr></argument>, <argument pos:start="67:42" pos:end="67:66"><expr pos:start="67:42" pos:end="67:66"><name pos:start="67:42" pos:end="67:66">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>,

                     <argument pos:start="69:22" pos:end="69:32"><expr pos:start="69:22" pos:end="69:32"><operator pos:start="69:22" pos:end="69:22">&amp;</operator><name pos:start="69:23" pos:end="69:32"><name pos:start="69:23" pos:end="69:27">proxy</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:32">bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:35">(<expr pos:start="73:9" pos:end="73:34"><operator pos:start="73:9" pos:end="73:9">!</operator><call pos:start="73:10" pos:end="73:34"><name pos:start="73:10" pos:end="73:32">kvm_has_many_ioeventfds</name><argument_list pos:start="73:33" pos:end="73:34">()</argument_list></call></expr>)</condition> <block pos:start="73:37" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:55">

        <expr_stmt pos:start="75:9" pos:end="75:55"><expr pos:start="75:9" pos:end="75:54"><name pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:13">proxy</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:20">flags</name></name> <operator pos:start="75:22" pos:end="75:23">&amp;=</operator> <operator pos:start="75:25" pos:end="75:25">~</operator><name pos:start="75:26" pos:end="75:54">VIRTIO_PCI_FLAG_USE_IOEVENTFD</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:60"><expr pos:start="81:5" pos:end="81:59"><name pos:start="81:5" pos:end="81:24"><name pos:start="81:5" pos:end="81:9">proxy</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:24">host_features</name></name> <operator pos:start="81:26" pos:end="81:27">|=</operator> <literal type="number" pos:start="81:29" pos:end="81:31">0x1</literal> <operator pos:start="81:33" pos:end="81:34">&lt;&lt;</operator> <name pos:start="81:36" pos:end="81:59">VIRTIO_F_NOTIFY_ON_EMPTY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:56"><expr pos:start="83:5" pos:end="83:55"><name pos:start="83:5" pos:end="83:24"><name pos:start="83:5" pos:end="83:9">proxy</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:24">host_features</name></name> <operator pos:start="83:26" pos:end="83:27">|=</operator> <literal type="number" pos:start="83:29" pos:end="83:31">0x1</literal> <operator pos:start="83:33" pos:end="83:34">&lt;&lt;</operator> <name pos:start="83:36" pos:end="83:55">VIRTIO_F_BAD_FEATURE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="87:76"><expr pos:start="85:5" pos:end="87:75"><name pos:start="85:5" pos:end="85:24"><name pos:start="85:5" pos:end="85:9">proxy</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:24">host_features</name></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <call pos:start="85:28" pos:end="87:75"><name pos:start="85:28" pos:end="85:55">virtio_bus_get_vdev_features</name><argument_list pos:start="85:56" pos:end="87:75">(<argument pos:start="85:57" pos:end="85:59"><expr pos:start="85:57" pos:end="85:59"><name pos:start="85:57" pos:end="85:59">bus</name></expr></argument>,

                                                      <argument pos:start="87:55" pos:end="87:74"><expr pos:start="87:55" pos:end="87:74"><name pos:start="87:55" pos:end="87:74"><name pos:start="87:55" pos:end="87:59">proxy</name><operator pos:start="87:60" pos:end="87:61">-&gt;</operator><name pos:start="87:62" pos:end="87:74">host_features</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
