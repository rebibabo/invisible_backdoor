<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25093.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_rv34_decode_frame</name><parameter_list pos:start="1:25" pos:end="5:55">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:35">uint8_t</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">buf</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="151:1">{<block_content pos:start="9:5" pos:end="149:20">

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">RV34DecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">r</name> <init pos:start="9:23" pos:end="9:40">= <expr pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:29">avctx</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">MpegEncContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name> <init pos:start="11:23" pos:end="11:29">= <expr pos:start="11:25" pos:end="11:29"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:26">r</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">pict</name> <init pos:start="13:19" pos:end="13:24">= <expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:13">SliceInfo</name></type> <name pos:start="15:15" pos:end="15:16">si</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">slice_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:31"><decl pos:start="21:5" pos:end="21:30"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:23">slices_hdr</name> <init pos:start="21:25" pos:end="21:30">= <expr pos:start="21:27" pos:end="21:30"><name pos:start="21:27" pos:end="21:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:12">last</name> <init pos:start="23:14" pos:end="23:16">= <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="29:5" pos:end="47:5"><if pos:start="29:5" pos:end="47:5">if <condition pos:start="29:8" pos:end="29:22">(<expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:16">buf_size</name> <operator pos:start="29:18" pos:end="29:19">==</operator> <literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr>)</condition> <block pos:start="29:24" pos:end="47:5">{<block_content pos:start="33:9" pos:end="45:17">

        <comment type="block" pos:start="31:9" pos:end="31:43">/* special case for last picture */</comment>

        <if_stmt pos:start="33:9" pos:end="43:9"><if pos:start="33:9" pos:end="43:9">if <condition pos:start="33:12" pos:end="33:51">(<expr pos:start="33:13" pos:end="33:50"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:24">low_delay</name></name><operator pos:start="33:25" pos:end="33:26">==</operator><literal type="number" pos:start="33:27" pos:end="33:27">0</literal> <operator pos:start="33:29" pos:end="33:30">&amp;&amp;</operator> <name pos:start="33:32" pos:end="33:50"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:50">next_picture_ptr</name></name></expr>)</condition> <block pos:start="33:53" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:41">

            <expr_stmt pos:start="35:13" pos:end="35:50"><expr pos:start="35:13" pos:end="35:49"><operator pos:start="35:13" pos:end="35:13">*</operator><name pos:start="35:14" pos:end="35:17">pict</name><operator pos:start="35:18" pos:end="35:18">=</operator> <operator pos:start="35:20" pos:end="35:20">*</operator><operator pos:start="35:21" pos:end="35:21">(</operator><name pos:start="35:22" pos:end="35:28">AVFrame</name><operator pos:start="35:29" pos:end="35:29">*</operator><operator pos:start="35:30" pos:end="35:30">)</operator><name pos:start="35:31" pos:end="35:49"><name pos:start="35:31" pos:end="35:31">s</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:49">next_picture_ptr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:38"><expr pos:start="37:13" pos:end="37:37"><name pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:31">next_picture_ptr</name></name><operator pos:start="37:32" pos:end="37:32">=</operator> <name pos:start="37:34" pos:end="37:37">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="41:13" pos:end="41:41"><expr pos:start="41:13" pos:end="41:40"><operator pos:start="41:13" pos:end="41:13">*</operator><name pos:start="41:14" pos:end="41:22">data_size</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <sizeof pos:start="41:26" pos:end="41:40">sizeof<argument_list pos:start="41:32" pos:end="41:40">(<argument pos:start="41:33" pos:end="41:39"><expr pos:start="41:33" pos:end="41:39"><name pos:start="41:33" pos:end="41:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="61:41"><if pos:start="51:5" pos:end="59:5">if<condition pos:start="51:7" pos:end="51:27">(<expr pos:start="51:8" pos:end="51:26"><operator pos:start="51:8" pos:end="51:8">!</operator><name pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:13">avctx</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:26">slice_count</name></name></expr>)</condition><block pos:start="51:28" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:31">

        <expr_stmt pos:start="53:9" pos:end="53:35"><expr pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:19">slice_count</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <operator pos:start="53:23" pos:end="53:23">(</operator><operator pos:start="53:24" pos:end="53:24">*</operator><name pos:start="53:25" pos:end="53:27">buf</name><operator pos:start="53:28" pos:end="53:29">++</operator><operator pos:start="53:30" pos:end="53:30">)</operator> <operator pos:start="53:32" pos:end="53:32">+</operator> <literal type="number" pos:start="53:34" pos:end="53:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:18">slices_hdr</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:24">buf</name> <operator pos:start="55:26" pos:end="55:26">+</operator> <literal type="number" pos:start="55:28" pos:end="55:28">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:11">buf</name> <operator pos:start="57:13" pos:end="57:14">+=</operator> <literal type="number" pos:start="57:16" pos:end="57:16">8</literal> <operator pos:start="57:18" pos:end="57:18">*</operator> <name pos:start="57:20" pos:end="57:30">slice_count</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="59:6" pos:end="61:41">else<block type="pseudo" pos:start="61:9" pos:end="61:41"><block_content pos:start="61:9" pos:end="61:41">

        <expr_stmt pos:start="61:9" pos:end="61:41"><expr pos:start="61:9" pos:end="61:40"><name pos:start="61:9" pos:end="61:19">slice_count</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:40"><name pos:start="61:23" pos:end="61:27">avctx</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:40">slice_count</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="65:5" pos:end="111:5">for<control pos:start="65:8" pos:end="65:32">(<init pos:start="65:9" pos:end="65:12"><expr pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:9">i</name><operator pos:start="65:10" pos:end="65:10">=</operator><literal type="number" pos:start="65:11" pos:end="65:11">0</literal></expr>;</init> <condition pos:start="65:14" pos:end="65:27"><expr pos:start="65:14" pos:end="65:26"><name pos:start="65:14" pos:end="65:14">i</name><operator pos:start="65:15" pos:end="65:15">&lt;</operator><name pos:start="65:16" pos:end="65:26">slice_count</name></expr>;</condition> <incr pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:29">i</name><operator pos:start="65:30" pos:end="65:31">++</operator></expr></incr>)</control><block pos:start="65:33" pos:end="111:5">{<block_content pos:start="67:9" pos:end="109:18">

        <decl_stmt pos:start="67:9" pos:end="67:59"><decl pos:start="67:9" pos:end="67:58"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:18">offset</name><init pos:start="67:19" pos:end="67:58">= <expr pos:start="67:21" pos:end="67:58"><call pos:start="67:21" pos:end="67:58"><name pos:start="67:21" pos:end="67:36">get_slice_offset</name><argument_list pos:start="67:37" pos:end="67:58">(<argument pos:start="67:38" pos:end="67:42"><expr pos:start="67:38" pos:end="67:42"><name pos:start="67:38" pos:end="67:42">avctx</name></expr></argument>, <argument pos:start="67:45" pos:end="67:54"><expr pos:start="67:45" pos:end="67:54"><name pos:start="67:45" pos:end="67:54">slices_hdr</name></expr></argument>, <argument pos:start="67:57" pos:end="67:57"><expr pos:start="67:57" pos:end="67:57"><name pos:start="67:57" pos:end="67:57">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:17"><decl pos:start="69:9" pos:end="69:16"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:16">size</name></decl>;</decl_stmt>

        <if_stmt pos:start="71:9" pos:end="77:68"><if pos:start="71:9" pos:end="73:36">if<condition pos:start="71:11" pos:end="71:30">(<expr pos:start="71:12" pos:end="71:29"><name pos:start="71:12" pos:end="71:12">i</name><operator pos:start="71:13" pos:end="71:13">+</operator><literal type="number" pos:start="71:14" pos:end="71:14">1</literal> <operator pos:start="71:16" pos:end="71:17">==</operator> <name pos:start="71:19" pos:end="71:29">slice_count</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:36"><block_content pos:start="73:13" pos:end="73:36">

            <expr_stmt pos:start="73:13" pos:end="73:36"><expr pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:16">size</name><operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:26">buf_size</name> <operator pos:start="73:28" pos:end="73:28">-</operator> <name pos:start="73:30" pos:end="73:35">offset</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="75:9" pos:end="77:68">else<block type="pseudo" pos:start="77:13" pos:end="77:68"><block_content pos:start="77:13" pos:end="77:68">

            <expr_stmt pos:start="77:13" pos:end="77:68"><expr pos:start="77:13" pos:end="77:67"><name pos:start="77:13" pos:end="77:16">size</name><operator pos:start="77:17" pos:end="77:17">=</operator> <call pos:start="77:19" pos:end="77:58"><name pos:start="77:19" pos:end="77:34">get_slice_offset</name><argument_list pos:start="77:35" pos:end="77:58">(<argument pos:start="77:36" pos:end="77:40"><expr pos:start="77:36" pos:end="77:40"><name pos:start="77:36" pos:end="77:40">avctx</name></expr></argument>, <argument pos:start="77:43" pos:end="77:52"><expr pos:start="77:43" pos:end="77:52"><name pos:start="77:43" pos:end="77:52">slices_hdr</name></expr></argument>, <argument pos:start="77:55" pos:end="77:57"><expr pos:start="77:55" pos:end="77:57"><name pos:start="77:55" pos:end="77:55">i</name><operator pos:start="77:56" pos:end="77:56">+</operator><literal type="number" pos:start="77:57" pos:end="77:57">1</literal></expr></argument>)</argument_list></call> <operator pos:start="77:60" pos:end="77:60">-</operator> <name pos:start="77:62" pos:end="77:67">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:47"><expr pos:start="81:9" pos:end="81:46"><name pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:9">r</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:13">si</name><operator pos:start="81:14" pos:end="81:14">.</operator><name pos:start="81:15" pos:end="81:17">end</name></name> <operator pos:start="81:19" pos:end="81:19">=</operator> <name pos:start="81:21" pos:end="81:31"><name pos:start="81:21" pos:end="81:21">s</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:31">mb_width</name></name> <operator pos:start="81:33" pos:end="81:33">*</operator> <name pos:start="81:35" pos:end="81:46"><name pos:start="81:35" pos:end="81:35">s</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:46">mb_height</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="101:9"><if pos:start="83:9" pos:end="101:9">if<condition pos:start="83:11" pos:end="83:29">(<expr pos:start="83:12" pos:end="83:28"><name pos:start="83:12" pos:end="83:12">i</name><operator pos:start="83:13" pos:end="83:13">+</operator><literal type="number" pos:start="83:14" pos:end="83:14">1</literal> <operator pos:start="83:16" pos:end="83:16">&lt;</operator> <name pos:start="83:18" pos:end="83:28">slice_count</name></expr>)</condition><block pos:start="83:30" pos:end="101:9">{<block_content pos:start="85:13" pos:end="99:37">

            <expr_stmt pos:start="85:13" pos:end="85:135"><expr pos:start="85:13" pos:end="85:134"><call pos:start="85:13" pos:end="85:134"><name pos:start="85:13" pos:end="85:25">init_get_bits</name><argument_list pos:start="85:26" pos:end="85:134">(<argument pos:start="85:27" pos:end="85:32"><expr pos:start="85:27" pos:end="85:32"><operator pos:start="85:27" pos:end="85:27">&amp;</operator><name pos:start="85:28" pos:end="85:32"><name pos:start="85:28" pos:end="85:28">s</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:32">gb</name></name></expr></argument>, <argument pos:start="85:35" pos:end="85:78"><expr pos:start="85:35" pos:end="85:78"><name pos:start="85:35" pos:end="85:37">buf</name><operator pos:start="85:38" pos:end="85:38">+</operator><call pos:start="85:39" pos:end="85:78"><name pos:start="85:39" pos:end="85:54">get_slice_offset</name><argument_list pos:start="85:55" pos:end="85:78">(<argument pos:start="85:56" pos:end="85:60"><expr pos:start="85:56" pos:end="85:60"><name pos:start="85:56" pos:end="85:60">avctx</name></expr></argument>, <argument pos:start="85:63" pos:end="85:72"><expr pos:start="85:63" pos:end="85:72"><name pos:start="85:63" pos:end="85:72">slices_hdr</name></expr></argument>, <argument pos:start="85:75" pos:end="85:77"><expr pos:start="85:75" pos:end="85:77"><name pos:start="85:75" pos:end="85:75">i</name><operator pos:start="85:76" pos:end="85:76">+</operator><literal type="number" pos:start="85:77" pos:end="85:77">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:81" pos:end="85:133"><expr pos:start="85:81" pos:end="85:133"><operator pos:start="85:81" pos:end="85:81">(</operator><name pos:start="85:82" pos:end="85:89">buf_size</name><operator pos:start="85:90" pos:end="85:90">-</operator><call pos:start="85:91" pos:end="85:130"><name pos:start="85:91" pos:end="85:106">get_slice_offset</name><argument_list pos:start="85:107" pos:end="85:130">(<argument pos:start="85:108" pos:end="85:112"><expr pos:start="85:108" pos:end="85:112"><name pos:start="85:108" pos:end="85:112">avctx</name></expr></argument>, <argument pos:start="85:115" pos:end="85:124"><expr pos:start="85:115" pos:end="85:124"><name pos:start="85:115" pos:end="85:124">slices_hdr</name></expr></argument>, <argument pos:start="85:127" pos:end="85:129"><expr pos:start="85:127" pos:end="85:129"><name pos:start="85:127" pos:end="85:127">i</name><operator pos:start="85:128" pos:end="85:128">+</operator><literal type="number" pos:start="85:129" pos:end="85:129">1</literal></expr></argument>)</argument_list></call><operator pos:start="85:131" pos:end="85:131">)</operator><operator pos:start="85:132" pos:end="85:132">*</operator><literal type="number" pos:start="85:133" pos:end="85:133">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="87:13" pos:end="99:37"><if pos:start="87:13" pos:end="97:13">if<condition pos:start="87:15" pos:end="87:59">(<expr pos:start="87:16" pos:end="87:58"><call pos:start="87:16" pos:end="87:54"><name pos:start="87:16" pos:end="87:36"><name pos:start="87:16" pos:end="87:16">r</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:36">parse_slice_header</name></name><argument_list pos:start="87:37" pos:end="87:54">(<argument pos:start="87:38" pos:end="87:38"><expr pos:start="87:38" pos:end="87:38"><name pos:start="87:38" pos:end="87:38">r</name></expr></argument>, <argument pos:start="87:41" pos:end="87:48"><expr pos:start="87:41" pos:end="87:48"><operator pos:start="87:41" pos:end="87:41">&amp;</operator><name pos:start="87:42" pos:end="87:48"><name pos:start="87:42" pos:end="87:42">r</name><operator pos:start="87:43" pos:end="87:44">-&gt;</operator><name pos:start="87:45" pos:end="87:45">s</name><operator pos:start="87:46" pos:end="87:46">.</operator><name pos:start="87:47" pos:end="87:48">gb</name></name></expr></argument>, <argument pos:start="87:51" pos:end="87:53"><expr pos:start="87:51" pos:end="87:53"><operator pos:start="87:51" pos:end="87:51">&amp;</operator><name pos:start="87:52" pos:end="87:53">si</name></expr></argument>)</argument_list></call> <operator pos:start="87:56" pos:end="87:56">&lt;</operator> <literal type="number" pos:start="87:58" pos:end="87:58">0</literal></expr>)</condition><block pos:start="87:60" pos:end="97:13">{<block_content pos:start="89:17" pos:end="95:45">

                <if_stmt pos:start="89:17" pos:end="95:45"><if pos:start="89:17" pos:end="91:77">if<condition pos:start="89:19" pos:end="89:37">(<expr pos:start="89:20" pos:end="89:36"><name pos:start="89:20" pos:end="89:20">i</name><operator pos:start="89:21" pos:end="89:21">+</operator><literal type="number" pos:start="89:22" pos:end="89:22">2</literal> <operator pos:start="89:24" pos:end="89:24">&lt;</operator> <name pos:start="89:26" pos:end="89:36">slice_count</name></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:77"><block_content pos:start="91:21" pos:end="91:77">

                    <expr_stmt pos:start="91:21" pos:end="91:77"><expr pos:start="91:21" pos:end="91:76"><name pos:start="91:21" pos:end="91:24">size</name> <operator pos:start="91:26" pos:end="91:26">=</operator> <call pos:start="91:28" pos:end="91:67"><name pos:start="91:28" pos:end="91:43">get_slice_offset</name><argument_list pos:start="91:44" pos:end="91:67">(<argument pos:start="91:45" pos:end="91:49"><expr pos:start="91:45" pos:end="91:49"><name pos:start="91:45" pos:end="91:49">avctx</name></expr></argument>, <argument pos:start="91:52" pos:end="91:61"><expr pos:start="91:52" pos:end="91:61"><name pos:start="91:52" pos:end="91:61">slices_hdr</name></expr></argument>, <argument pos:start="91:64" pos:end="91:66"><expr pos:start="91:64" pos:end="91:66"><name pos:start="91:64" pos:end="91:64">i</name><operator pos:start="91:65" pos:end="91:65">+</operator><literal type="number" pos:start="91:66" pos:end="91:66">2</literal></expr></argument>)</argument_list></call> <operator pos:start="91:69" pos:end="91:69">-</operator> <name pos:start="91:71" pos:end="91:76">offset</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="93:17" pos:end="95:45">else<block type="pseudo" pos:start="95:21" pos:end="95:45"><block_content pos:start="95:21" pos:end="95:45">

                    <expr_stmt pos:start="95:21" pos:end="95:45"><expr pos:start="95:21" pos:end="95:44"><name pos:start="95:21" pos:end="95:24">size</name> <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:35">buf_size</name> <operator pos:start="95:37" pos:end="95:37">-</operator> <name pos:start="95:39" pos:end="95:44">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if><else pos:start="97:14" pos:end="99:37">else<block type="pseudo" pos:start="99:17" pos:end="99:37"><block_content pos:start="99:17" pos:end="99:37">

                <expr_stmt pos:start="99:17" pos:end="99:37"><expr pos:start="99:17" pos:end="99:36"><name pos:start="99:17" pos:end="99:25"><name pos:start="99:17" pos:end="99:17">r</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:21">si</name><operator pos:start="99:22" pos:end="99:22">.</operator><name pos:start="99:23" pos:end="99:25">end</name></name> <operator pos:start="99:27" pos:end="99:27">=</operator> <name pos:start="99:29" pos:end="99:36"><name pos:start="99:29" pos:end="99:30">si</name><operator pos:start="99:31" pos:end="99:31">.</operator><name pos:start="99:32" pos:end="99:36">start</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:67"><expr pos:start="103:9" pos:end="103:66"><name pos:start="103:9" pos:end="103:12">last</name> <operator pos:start="103:14" pos:end="103:14">=</operator> <call pos:start="103:16" pos:end="103:66"><name pos:start="103:16" pos:end="103:32">rv34_decode_slice</name><argument_list pos:start="103:33" pos:end="103:66">(<argument pos:start="103:34" pos:end="103:34"><expr pos:start="103:34" pos:end="103:34"><name pos:start="103:34" pos:end="103:34">r</name></expr></argument>, <argument pos:start="103:37" pos:end="103:45"><expr pos:start="103:37" pos:end="103:45"><name pos:start="103:37" pos:end="103:45"><name pos:start="103:37" pos:end="103:37">r</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:41">si</name><operator pos:start="103:42" pos:end="103:42">.</operator><name pos:start="103:43" pos:end="103:45">end</name></name></expr></argument>, <argument pos:start="103:48" pos:end="103:59"><expr pos:start="103:48" pos:end="103:59"><name pos:start="103:48" pos:end="103:50">buf</name> <operator pos:start="103:52" pos:end="103:52">+</operator> <name pos:start="103:54" pos:end="103:59">offset</name></expr></argument>, <argument pos:start="103:62" pos:end="103:65"><expr pos:start="103:62" pos:end="103:65"><name pos:start="103:62" pos:end="103:65">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:75"><expr pos:start="105:9" pos:end="105:74"><name pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:22">mb_num_left</name></name> <operator pos:start="105:24" pos:end="105:24">=</operator> <name pos:start="105:26" pos:end="105:34"><name pos:start="105:26" pos:end="105:26">r</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:29">s</name><operator pos:start="105:30" pos:end="105:30">.</operator><name pos:start="105:31" pos:end="105:34">mb_x</name></name> <operator pos:start="105:36" pos:end="105:36">+</operator> <name pos:start="105:38" pos:end="105:46"><name pos:start="105:38" pos:end="105:38">r</name><operator pos:start="105:39" pos:end="105:40">-&gt;</operator><name pos:start="105:41" pos:end="105:41">s</name><operator pos:start="105:42" pos:end="105:42">.</operator><name pos:start="105:43" pos:end="105:46">mb_y</name></name><operator pos:start="105:47" pos:end="105:47">*</operator><name pos:start="105:48" pos:end="105:60"><name pos:start="105:48" pos:end="105:48">r</name><operator pos:start="105:49" pos:end="105:50">-&gt;</operator><name pos:start="105:51" pos:end="105:51">s</name><operator pos:start="105:52" pos:end="105:52">.</operator><name pos:start="105:53" pos:end="105:60">mb_width</name></name> <operator pos:start="105:62" pos:end="105:62">-</operator> <name pos:start="105:64" pos:end="105:74"><name pos:start="105:64" pos:end="105:64">r</name><operator pos:start="105:65" pos:end="105:66">-&gt;</operator><name pos:start="105:67" pos:end="105:68">si</name><operator pos:start="105:69" pos:end="105:69">.</operator><name pos:start="105:70" pos:end="105:74">start</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="109:18"><if pos:start="107:9" pos:end="109:18">if<condition pos:start="107:11" pos:end="107:16">(<expr pos:start="107:12" pos:end="107:15"><name pos:start="107:12" pos:end="107:15">last</name></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:18"><block_content pos:start="109:13" pos:end="109:18">

            <break pos:start="109:13" pos:end="109:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="115:5" pos:end="147:5"><if pos:start="115:5" pos:end="147:5">if<condition pos:start="115:7" pos:end="115:12">(<expr pos:start="115:8" pos:end="115:11"><name pos:start="115:8" pos:end="115:11">last</name></expr>)</condition><block pos:start="115:13" pos:end="147:5">{<block_content pos:start="117:9" pos:end="145:37">

        <if_stmt pos:start="117:9" pos:end="119:30"><if pos:start="117:9" pos:end="119:30">if<condition pos:start="117:11" pos:end="117:26">(<expr pos:start="117:12" pos:end="117:25"><name pos:start="117:12" pos:end="117:25"><name pos:start="117:12" pos:end="117:12">r</name><operator pos:start="117:13" pos:end="117:14">-&gt;</operator><name pos:start="117:15" pos:end="117:25">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:30"><block_content pos:start="119:13" pos:end="119:30">

            <expr_stmt pos:start="119:13" pos:end="119:30"><expr pos:start="119:13" pos:end="119:29"><call pos:start="119:13" pos:end="119:29"><name pos:start="119:13" pos:end="119:26"><name pos:start="119:13" pos:end="119:13">r</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:26">loop_filter</name></name><argument_list pos:start="119:27" pos:end="119:29">(<argument pos:start="119:28" pos:end="119:28"><expr pos:start="119:28" pos:end="119:28"><name pos:start="119:28" pos:end="119:28">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:27"><expr pos:start="121:9" pos:end="121:26"><call pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:23">ff_er_frame_end</name><argument_list pos:start="121:24" pos:end="121:26">(<argument pos:start="121:25" pos:end="121:25"><expr pos:start="121:25" pos:end="121:25"><name pos:start="121:25" pos:end="121:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:25"><expr pos:start="123:9" pos:end="123:24"><call pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:21">MPV_frame_end</name><argument_list pos:start="123:22" pos:end="123:24">(<argument pos:start="123:23" pos:end="123:23"><expr pos:start="123:23" pos:end="123:23"><name pos:start="123:23" pos:end="123:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="133:9"><if pos:start="125:9" pos:end="129:9">if <condition pos:start="125:12" pos:end="125:54">(<expr pos:start="125:13" pos:end="125:53"><name pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:24">pict_type</name></name> <operator pos:start="125:26" pos:end="125:27">==</operator> <name pos:start="125:29" pos:end="125:37">FF_B_TYPE</name> <operator pos:start="125:39" pos:end="125:40">||</operator> <name pos:start="125:42" pos:end="125:53"><name pos:start="125:42" pos:end="125:42">s</name><operator pos:start="125:43" pos:end="125:44">-&gt;</operator><name pos:start="125:45" pos:end="125:53">low_delay</name></name></expr>)</condition> <block pos:start="125:56" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:53">

            <expr_stmt pos:start="127:13" pos:end="127:53"><expr pos:start="127:13" pos:end="127:52"><operator pos:start="127:13" pos:end="127:13">*</operator><name pos:start="127:14" pos:end="127:17">pict</name><operator pos:start="127:18" pos:end="127:18">=</operator> <operator pos:start="127:20" pos:end="127:20">*</operator><operator pos:start="127:21" pos:end="127:21">(</operator><name pos:start="127:22" pos:end="127:28">AVFrame</name><operator pos:start="127:29" pos:end="127:29">*</operator><operator pos:start="127:30" pos:end="127:30">)</operator><name pos:start="127:31" pos:end="127:52"><name pos:start="127:31" pos:end="127:31">s</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:52">current_picture_ptr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="129:11" pos:end="133:9">else if <condition pos:start="129:19" pos:end="129:47">(<expr pos:start="129:20" pos:end="129:46"><name pos:start="129:20" pos:end="129:38"><name pos:start="129:20" pos:end="129:20">s</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:38">last_picture_ptr</name></name> <operator pos:start="129:40" pos:end="129:41">!=</operator> <name pos:start="129:43" pos:end="129:46">NULL</name></expr>)</condition> <block pos:start="129:49" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:50">

            <expr_stmt pos:start="131:13" pos:end="131:50"><expr pos:start="131:13" pos:end="131:49"><operator pos:start="131:13" pos:end="131:13">*</operator><name pos:start="131:14" pos:end="131:17">pict</name><operator pos:start="131:18" pos:end="131:18">=</operator> <operator pos:start="131:20" pos:end="131:20">*</operator><operator pos:start="131:21" pos:end="131:21">(</operator><name pos:start="131:22" pos:end="131:28">AVFrame</name><operator pos:start="131:29" pos:end="131:29">*</operator><operator pos:start="131:30" pos:end="131:30">)</operator><name pos:start="131:31" pos:end="131:49"><name pos:start="131:31" pos:end="131:31">s</name><operator pos:start="131:32" pos:end="131:33">-&gt;</operator><name pos:start="131:34" pos:end="131:49">last_picture_ptr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="137:9" pos:end="143:9"><if pos:start="137:9" pos:end="143:9">if<condition pos:start="137:11" pos:end="137:47">(<expr pos:start="137:12" pos:end="137:46"><name pos:start="137:12" pos:end="137:30"><name pos:start="137:12" pos:end="137:12">s</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:30">last_picture_ptr</name></name> <operator pos:start="137:32" pos:end="137:33">||</operator> <name pos:start="137:35" pos:end="137:46"><name pos:start="137:35" pos:end="137:35">s</name><operator pos:start="137:36" pos:end="137:37">-&gt;</operator><name pos:start="137:38" pos:end="137:46">low_delay</name></name></expr>)</condition><block pos:start="137:48" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:41">

            <expr_stmt pos:start="139:13" pos:end="139:41"><expr pos:start="139:13" pos:end="139:40"><operator pos:start="139:13" pos:end="139:13">*</operator><name pos:start="139:14" pos:end="139:22">data_size</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <sizeof pos:start="139:26" pos:end="139:40">sizeof<argument_list pos:start="139:32" pos:end="139:40">(<argument pos:start="139:33" pos:end="139:39"><expr pos:start="139:33" pos:end="139:39"><name pos:start="139:33" pos:end="139:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:41"><expr pos:start="141:13" pos:end="141:40"><call pos:start="141:13" pos:end="141:40"><name pos:start="141:13" pos:end="141:31">ff_print_debug_info</name><argument_list pos:start="141:32" pos:end="141:40">(<argument pos:start="141:33" pos:end="141:33"><expr pos:start="141:33" pos:end="141:33"><name pos:start="141:33" pos:end="141:33">s</name></expr></argument>, <argument pos:start="141:36" pos:end="141:39"><expr pos:start="141:36" pos:end="141:39"><name pos:start="141:36" pos:end="141:39">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:37"><expr pos:start="145:9" pos:end="145:36"><name pos:start="145:9" pos:end="145:30"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:30">current_picture_ptr</name></name><operator pos:start="145:31" pos:end="145:31">=</operator> <name pos:start="145:33" pos:end="145:36">NULL</name></expr>;</expr_stmt> <comment type="line" pos:start="145:39" pos:end="145:112">//so we can detect if frame_end wasnt called (find some nicer solution...)</comment>

    </block_content>}</block></if></if_stmt>

    <return pos:start="149:5" pos:end="149:20">return <expr pos:start="149:12" pos:end="149:19"><name pos:start="149:12" pos:end="149:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
