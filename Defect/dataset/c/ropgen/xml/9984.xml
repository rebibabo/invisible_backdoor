<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9984.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">set_sps</name><parameter_list pos:start="1:19" pos:end="1:54">(<parameter pos:start="1:20" pos:end="1:33"><decl pos:start="1:20" pos:end="1:33"><type pos:start="1:20" pos:end="1:33"><name pos:start="1:20" pos:end="1:30">HEVCContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">s</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:48">HEVCSPS</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">sps</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:15">

    <cpp:define pos:start="5:5" pos:end="5:81">#<cpp:directive pos:start="5:6" pos:end="5:11">define</cpp:directive> <cpp:macro pos:start="5:13" pos:end="5:23"><name pos:start="5:13" pos:end="5:23">HWACCEL_MAX</name></cpp:macro> <cpp:value pos:start="5:25" pos:end="5:81">(CONFIG_HEVC_DXVA2_HWACCEL + CONFIG_HEVC_D3D11VA_HWACCEL)</cpp:value></cpp:define>

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:8">enum</name> <name pos:start="7:10" pos:end="7:22">AVPixelFormat</name></name></type> <name pos:start="7:24" pos:end="7:48"><name pos:start="7:24" pos:end="7:31">pix_fmts</name><index pos:start="7:32" pos:end="7:48">[<expr pos:start="7:33" pos:end="7:47"><name pos:start="7:33" pos:end="7:43">HWACCEL_MAX</name> <operator pos:start="7:45" pos:end="7:45">+</operator> <literal type="number" pos:start="7:47" pos:end="7:47">2</literal></expr>]</index></name></decl>, <decl pos:start="7:51" pos:end="7:65"><type ref="prev" pos:start="7:5" pos:end="7:22"><modifier pos:start="7:51" pos:end="7:51">*</modifier></type><name pos:start="7:52" pos:end="7:54">fmt</name> <init pos:start="7:56" pos:end="7:65">= <expr pos:start="7:58" pos:end="7:65"><name pos:start="7:58" pos:end="7:65">pix_fmts</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:48"><expr pos:start="13:5" pos:end="13:47"><call pos:start="13:5" pos:end="13:47"><name pos:start="13:5" pos:end="13:24">export_stream_params</name><argument_list pos:start="13:25" pos:end="13:47">(<argument pos:start="13:26" pos:end="13:33"><expr pos:start="13:26" pos:end="13:33"><name pos:start="13:26" pos:end="13:33"><name pos:start="13:26" pos:end="13:26">s</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:33">avctx</name></name></expr></argument>, <argument pos:start="13:36" pos:end="13:41"><expr pos:start="13:36" pos:end="13:41"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:41"><name pos:start="13:37" pos:end="13:37">s</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:41">ps</name></name></expr></argument>, <argument pos:start="13:44" pos:end="13:46"><expr pos:start="13:44" pos:end="13:46"><name pos:start="13:44" pos:end="13:46">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><call pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:19">pic_arrays_free</name><argument_list pos:start="17:20" pos:end="17:22">(<argument pos:start="17:21" pos:end="17:21"><expr pos:start="17:21" pos:end="17:21"><name pos:start="17:21" pos:end="17:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:33"><name pos:start="19:11" pos:end="19:25">pic_arrays_init</name><argument_list pos:start="19:26" pos:end="19:33">(<argument pos:start="19:27" pos:end="19:27"><expr pos:start="19:27" pos:end="19:27"><name pos:start="19:27" pos:end="19:27">s</name></expr></argument>, <argument pos:start="19:30" pos:end="19:32"><expr pos:start="19:30" pos:end="19:32"><name pos:start="19:30" pos:end="19:32">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="41:5"><if pos:start="27:5" pos:end="41:5">if <condition pos:start="27:8" pos:end="27:82">(<expr pos:start="27:9" pos:end="27:81"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:11">sps</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:20">pix_fmt</name></name> <operator pos:start="27:22" pos:end="27:23">==</operator> <name pos:start="27:25" pos:end="27:42">AV_PIX_FMT_YUV420P</name> <operator pos:start="27:44" pos:end="27:45">||</operator> <name pos:start="27:47" pos:end="27:58"><name pos:start="27:47" pos:end="27:49">sps</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:58">pix_fmt</name></name> <operator pos:start="27:60" pos:end="27:61">==</operator> <name pos:start="27:63" pos:end="27:81">AV_PIX_FMT_YUVJ420P</name></expr>)</condition> <block pos:start="27:84" pos:end="41:5">{<block_content pos:start="31:9" pos:end="40:0">

<cpp:if pos:start="29:1" pos:end="29:29">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:29">CONFIG_HEVC_DXVA2_HWACCEL</name></expr></cpp:if>

        <expr_stmt pos:start="31:9" pos:end="36:0"><expr pos:start="31:9" pos:end="31:37"><operator pos:start="31:9" pos:end="31:9">*</operator><name pos:start="31:10" pos:end="31:12">fmt</name><operator pos:start="31:13" pos:end="31:14">++</operator> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:37">AV_PIX_FMT_DXVA2_VLD</name></expr>;</expr_stmt>

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="35:1" pos:end="35:31">#<cpp:directive pos:start="35:2" pos:end="35:3">if</cpp:directive> <expr pos:start="35:5" pos:end="35:31"><name pos:start="35:5" pos:end="35:31">CONFIG_HEVC_D3D11VA_HWACCEL</name></expr></cpp:if>

        <expr_stmt pos:start="37:9" pos:end="40:0"><expr pos:start="37:9" pos:end="37:39"><operator pos:start="37:9" pos:end="37:9">*</operator><name pos:start="37:10" pos:end="37:12">fmt</name><operator pos:start="37:13" pos:end="37:14">++</operator> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:39">AV_PIX_FMT_D3D11VA_VLD</name></expr>;</expr_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><operator pos:start="45:5" pos:end="45:5">*</operator><name pos:start="45:6" pos:end="45:8">fmt</name><operator pos:start="45:9" pos:end="45:10">++</operator> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:25"><name pos:start="45:14" pos:end="45:16">sps</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:25">pix_fmt</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><operator pos:start="47:5" pos:end="47:5">*</operator><name pos:start="47:6" pos:end="47:8">fmt</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <name pos:start="47:12" pos:end="47:26">AV_PIX_FMT_NONE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:44"><expr pos:start="51:5" pos:end="51:43"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:43"><name pos:start="51:11" pos:end="51:23">ff_get_format</name><argument_list pos:start="51:24" pos:end="51:43">(<argument pos:start="51:25" pos:end="51:32"><expr pos:start="51:25" pos:end="51:32"><name pos:start="51:25" pos:end="51:32"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:32">avctx</name></name></expr></argument>, <argument pos:start="51:35" pos:end="51:42"><expr pos:start="51:35" pos:end="51:42"><name pos:start="51:35" pos:end="51:42">pix_fmts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:18"><if pos:start="53:5" pos:end="55:18">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">&lt;</operator> <literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:18"><block_content pos:start="55:9" pos:end="55:18">

        <goto pos:start="55:9" pos:end="55:18">goto <name pos:start="55:14" pos:end="55:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:28"><expr pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:12">avctx</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:21">pix_fmt</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <name pos:start="57:25" pos:end="57:27">ret</name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:51"><expr pos:start="61:5" pos:end="61:50"><call pos:start="61:5" pos:end="61:50"><name pos:start="61:5" pos:end="61:21">ff_hevc_pred_init</name><argument_list pos:start="61:22" pos:end="61:50">(<argument pos:start="61:23" pos:end="61:29"><expr pos:start="61:23" pos:end="61:29"><operator pos:start="61:23" pos:end="61:23">&amp;</operator><name pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:24">s</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:29">hpc</name></name></expr></argument>,     <argument pos:start="61:36" pos:end="61:49"><expr pos:start="61:36" pos:end="61:49"><name pos:start="61:36" pos:end="61:49"><name pos:start="61:36" pos:end="61:38">sps</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:49">bit_depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:51"><expr pos:start="63:5" pos:end="63:50"><call pos:start="63:5" pos:end="63:50"><name pos:start="63:5" pos:end="63:20">ff_hevc_dsp_init</name> <argument_list pos:start="63:22" pos:end="63:50">(<argument pos:start="63:23" pos:end="63:33"><expr pos:start="63:23" pos:end="63:33"><operator pos:start="63:23" pos:end="63:23">&amp;</operator><name pos:start="63:24" pos:end="63:33"><name pos:start="63:24" pos:end="63:24">s</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:33">hevcdsp</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:49"><expr pos:start="63:36" pos:end="63:49"><name pos:start="63:36" pos:end="63:49"><name pos:start="63:36" pos:end="63:38">sps</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:49">bit_depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:51"><expr pos:start="65:5" pos:end="65:50"><call pos:start="65:5" pos:end="65:50"><name pos:start="65:5" pos:end="65:20">ff_videodsp_init</name> <argument_list pos:start="65:22" pos:end="65:50">(<argument pos:start="65:23" pos:end="65:30"><expr pos:start="65:23" pos:end="65:30"><operator pos:start="65:23" pos:end="65:23">&amp;</operator><name pos:start="65:24" pos:end="65:30"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:30">vdsp</name></name></expr></argument>,    <argument pos:start="65:36" pos:end="65:49"><expr pos:start="65:36" pos:end="65:49"><name pos:start="65:36" pos:end="65:49"><name pos:start="65:36" pos:end="65:38">sps</name><operator pos:start="65:39" pos:end="65:40">-&gt;</operator><name pos:start="65:41" pos:end="65:49">bit_depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="81:5"><if pos:start="69:5" pos:end="81:5">if <condition pos:start="69:8" pos:end="69:47">(<expr pos:start="69:9" pos:end="69:46"><name pos:start="69:9" pos:end="69:24"><name pos:start="69:9" pos:end="69:11">sps</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:24">sao_enabled</name></name> <operator pos:start="69:26" pos:end="69:27">&amp;&amp;</operator> <operator pos:start="69:29" pos:end="69:29">!</operator><name pos:start="69:30" pos:end="69:46"><name pos:start="69:30" pos:end="69:30">s</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:37">avctx</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:46">hwaccel</name></name></expr>)</condition> <block pos:start="69:49" pos:end="81:5">{<block_content pos:start="71:9" pos:end="79:32">

        <expr_stmt pos:start="71:9" pos:end="71:37"><expr pos:start="71:9" pos:end="71:36"><call pos:start="71:9" pos:end="71:36"><name pos:start="71:9" pos:end="71:22">av_frame_unref</name><argument_list pos:start="71:23" pos:end="71:36">(<argument pos:start="71:24" pos:end="71:35"><expr pos:start="71:24" pos:end="71:35"><name pos:start="71:24" pos:end="71:35"><name pos:start="71:24" pos:end="71:24">s</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:35">tmp_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:76"><expr pos:start="73:9" pos:end="73:75"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:75"><name pos:start="73:15" pos:end="73:27">ff_get_buffer</name><argument_list pos:start="73:28" pos:end="73:75">(<argument pos:start="73:29" pos:end="73:36"><expr pos:start="73:29" pos:end="73:36"><name pos:start="73:29" pos:end="73:36"><name pos:start="73:29" pos:end="73:29">s</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:36">avctx</name></name></expr></argument>, <argument pos:start="73:39" pos:end="73:50"><expr pos:start="73:39" pos:end="73:50"><name pos:start="73:39" pos:end="73:50"><name pos:start="73:39" pos:end="73:39">s</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:50">tmp_frame</name></name></expr></argument>, <argument pos:start="73:53" pos:end="73:74"><expr pos:start="73:53" pos:end="73:74"><name pos:start="73:53" pos:end="73:74">AV_GET_BUFFER_FLAG_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="77:22"><if pos:start="75:9" pos:end="77:22">if <condition pos:start="75:12" pos:end="75:20">(<expr pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">&lt;</operator> <literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:22"><block_content pos:start="77:13" pos:end="77:22">

            <goto pos:start="77:13" pos:end="77:22">goto <name pos:start="77:18" pos:end="77:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:32"><expr pos:start="79:9" pos:end="79:31"><name pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:16">frame</name></name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:31"><name pos:start="79:20" pos:end="79:20">s</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:31">tmp_frame</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:20"><expr pos:start="85:5" pos:end="85:19"><name pos:start="85:5" pos:end="85:13"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:9">ps</name><operator pos:start="85:10" pos:end="85:10">.</operator><name pos:start="85:11" pos:end="85:13">sps</name></name> <operator pos:start="85:15" pos:end="85:15">=</operator> <name pos:start="85:17" pos:end="85:19">sps</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:67"><expr pos:start="87:5" pos:end="87:66"><name pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:9">ps</name><operator pos:start="87:10" pos:end="87:10">.</operator><name pos:start="87:11" pos:end="87:13">vps</name></name> <operator pos:start="87:15" pos:end="87:15">=</operator> <operator pos:start="87:17" pos:end="87:17">(</operator><name pos:start="87:18" pos:end="87:24">HEVCVPS</name><operator pos:start="87:25" pos:end="87:25">*</operator><operator pos:start="87:26" pos:end="87:26">)</operator> <name pos:start="87:28" pos:end="87:60"><name pos:start="87:28" pos:end="87:28">s</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:32">ps</name><operator pos:start="87:33" pos:end="87:33">.</operator><name pos:start="87:34" pos:end="87:41">vps_list</name><index pos:start="87:42" pos:end="87:60">[<expr pos:start="87:43" pos:end="87:59"><name pos:start="87:43" pos:end="87:59"><name pos:start="87:43" pos:end="87:43">s</name><operator pos:start="87:44" pos:end="87:45">-&gt;</operator><name pos:start="87:46" pos:end="87:47">ps</name><operator pos:start="87:48" pos:end="87:48">.</operator><name pos:start="87:49" pos:end="87:51">sps</name><operator pos:start="87:52" pos:end="87:53">-&gt;</operator><name pos:start="87:54" pos:end="87:59">vps_id</name></name></expr>]</index></name><operator pos:start="87:61" pos:end="87:62">-&gt;</operator><name pos:start="87:63" pos:end="87:66">data</name></expr>;</expr_stmt>



    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>



<label pos:start="95:1" pos:end="95:5"><name pos:start="95:1" pos:end="95:4">fail</name>:</label>

    <expr_stmt pos:start="97:5" pos:end="97:23"><expr pos:start="97:5" pos:end="97:22"><call pos:start="97:5" pos:end="97:22"><name pos:start="97:5" pos:end="97:19">pic_arrays_free</name><argument_list pos:start="97:20" pos:end="97:22">(<argument pos:start="97:21" pos:end="97:21"><expr pos:start="97:21" pos:end="97:21"><name pos:start="97:21" pos:end="97:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:21"><expr pos:start="99:5" pos:end="99:20"><name pos:start="99:5" pos:end="99:13"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:9">ps</name><operator pos:start="99:10" pos:end="99:10">.</operator><name pos:start="99:11" pos:end="99:13">sps</name></name> <operator pos:start="99:15" pos:end="99:15">=</operator> <name pos:start="99:17" pos:end="99:20">NULL</name></expr>;</expr_stmt>

    <return pos:start="101:5" pos:end="101:15">return <expr pos:start="101:12" pos:end="101:14"><name pos:start="101:12" pos:end="101:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
