<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7802.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">msix_uninit</name><parameter_list pos:start="1:16" pos:end="1:50">(<parameter pos:start="1:17" pos:end="1:30"><decl pos:start="1:17" pos:end="1:30"><type pos:start="1:17" pos:end="1:30"><name pos:start="1:17" pos:end="1:25">PCIDevice</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:30">dev</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:44">MemoryRegion</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">bar</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:13">

    <if_stmt pos:start="5:5" pos:end="7:17"><if pos:start="5:5" pos:end="7:17">if <condition pos:start="5:8" pos:end="5:48">(<expr pos:start="5:9" pos:end="5:47"><operator pos:start="5:9" pos:end="5:9">!</operator><operator pos:start="5:10" pos:end="5:10">(</operator><name pos:start="5:11" pos:end="5:26"><name pos:start="5:11" pos:end="5:13">dev</name><operator pos:start="5:14" pos:end="5:15">-&gt;</operator><name pos:start="5:16" pos:end="5:26">cap_present</name></name> <operator pos:start="5:28" pos:end="5:28">&amp;</operator> <name pos:start="5:30" pos:end="5:46">QEMU_PCI_CAP_MSIX</name><operator pos:start="5:47" pos:end="5:47">)</operator></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:17"><block_content pos:start="7:9" pos:end="7:17">

        <return pos:start="7:9" pos:end="7:17">return <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:62"><expr pos:start="9:5" pos:end="9:61"><call pos:start="9:5" pos:end="9:61"><name pos:start="9:5" pos:end="9:22">pci_del_capability</name><argument_list pos:start="9:23" pos:end="9:61">(<argument pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><name pos:start="9:24" pos:end="9:26">dev</name></expr></argument>, <argument pos:start="9:29" pos:end="9:43"><expr pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:43">PCI_CAP_ID_MSIX</name></expr></argument>, <argument pos:start="9:46" pos:end="9:60"><expr pos:start="9:46" pos:end="9:60"><name pos:start="9:46" pos:end="9:60">MSIX_CAP_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:7">dev</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:17">msix_cap</name></name> <operator pos:start="11:19" pos:end="11:19">=</operator> <literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><call pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:25">msix_free_irq_entries</name><argument_list pos:start="13:26" pos:end="13:30">(<argument pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:29">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:7">dev</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:24">msix_entries_nr</name></name> <operator pos:start="15:26" pos:end="15:26">=</operator> <literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><call pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:31">memory_region_del_subregion</name><argument_list pos:start="17:32" pos:end="17:53">(<argument pos:start="17:33" pos:end="17:35"><expr pos:start="17:33" pos:end="17:35"><name pos:start="17:33" pos:end="17:35">bar</name></expr></argument>, <argument pos:start="17:38" pos:end="17:52"><expr pos:start="17:38" pos:end="17:52"><operator pos:start="17:38" pos:end="17:38">&amp;</operator><name pos:start="17:39" pos:end="17:52"><name pos:start="17:39" pos:end="17:41">dev</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:52">msix_mmio</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><call pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:25">memory_region_destroy</name><argument_list pos:start="19:26" pos:end="19:42">(<argument pos:start="19:27" pos:end="19:41"><expr pos:start="19:27" pos:end="19:41"><operator pos:start="19:27" pos:end="19:27">&amp;</operator><name pos:start="19:28" pos:end="19:41"><name pos:start="19:28" pos:end="19:30">dev</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:41">msix_mmio</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:10">g_free</name><argument_list pos:start="21:11" pos:end="21:32">(<argument pos:start="21:12" pos:end="21:31"><expr pos:start="21:12" pos:end="21:31"><name pos:start="21:12" pos:end="21:31"><name pos:start="21:12" pos:end="21:14">dev</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:31">msix_table_page</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:7">dev</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:24">msix_table_page</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <name pos:start="23:28" pos:end="23:31">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><call pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:10">g_free</name><argument_list pos:start="25:11" pos:end="25:32">(<argument pos:start="25:12" pos:end="25:31"><expr pos:start="25:12" pos:end="25:31"><name pos:start="25:12" pos:end="25:31"><name pos:start="25:12" pos:end="25:14">dev</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:31">msix_entry_used</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:7">dev</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:24">msix_entry_used</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <name pos:start="27:28" pos:end="27:31">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:7">dev</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:20">cap_present</name></name> <operator pos:start="29:22" pos:end="29:23">&amp;=</operator> <operator pos:start="29:25" pos:end="29:25">~</operator><name pos:start="29:26" pos:end="29:42">QEMU_PCI_CAP_MSIX</name></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
