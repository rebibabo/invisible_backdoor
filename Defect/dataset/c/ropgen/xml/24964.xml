<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24964.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:37">fbdev_write_header</name><parameter_list pos:start="1:38" pos:end="1:57">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:55"><name pos:start="1:39" pos:end="1:53">AVFormatContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">FBDevContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">fbdev</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">h</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:8">enum</name> <name pos:start="7:10" pos:end="7:22">AVPixelFormat</name></name></type> <name pos:start="7:24" pos:end="7:30">pix_fmt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:23">= <expr pos:start="9:20" pos:end="9:23"><name pos:start="9:20" pos:end="9:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:18">flags</name> <init pos:start="11:20" pos:end="11:27">= <expr pos:start="11:22" pos:end="11:27"><name pos:start="11:22" pos:end="11:27">O_RDWR</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="37:5">for <control pos:start="17:9" pos:end="17:39">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:34"><expr pos:start="17:17" pos:end="17:33"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:33"><name pos:start="17:21" pos:end="17:21">h</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:33">nb_streams</name></name></expr>;</condition> <incr pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:36">i</name><operator pos:start="17:37" pos:end="17:38">++</operator></expr></incr>)</control> <block pos:start="17:41" pos:end="37:5">{<block_content pos:start="19:9" pos:end="35:9">

        <if_stmt pos:start="19:9" pos:end="35:9"><if pos:start="19:9" pos:end="35:9">if <condition pos:start="19:12" pos:end="19:67">(<expr pos:start="19:13" pos:end="19:66"><name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:13">h</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:22">streams</name><index pos:start="19:23" pos:end="19:25">[<expr pos:start="19:24" pos:end="19:24"><name pos:start="19:24" pos:end="19:24">i</name></expr>]</index></name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:44"><name pos:start="19:28" pos:end="19:32">codec</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:44">codec_type</name></name> <operator pos:start="19:46" pos:end="19:47">==</operator> <name pos:start="19:49" pos:end="19:66">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="19:69" pos:end="35:9">{<block_content pos:start="21:13" pos:end="33:13">

            <if_stmt pos:start="21:13" pos:end="33:13"><if pos:start="21:13" pos:end="27:13">if <condition pos:start="21:16" pos:end="21:20">(<expr pos:start="21:17" pos:end="21:19"><operator pos:start="21:17" pos:end="21:17">!</operator><name pos:start="21:18" pos:end="21:19">st</name></expr>)</condition> <block pos:start="21:22" pos:end="27:13">{<block_content pos:start="23:17" pos:end="25:35">

                <expr_stmt pos:start="23:17" pos:end="23:33"><expr pos:start="23:17" pos:end="23:32"><name pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:21">fbdev</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:28">index</name></name> <operator pos:start="23:30" pos:end="23:30">=</operator> <name pos:start="23:32" pos:end="23:32">i</name></expr>;</expr_stmt>

                <expr_stmt pos:start="25:17" pos:end="25:35"><expr pos:start="25:17" pos:end="25:34"><name pos:start="25:17" pos:end="25:18">st</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:34"><name pos:start="25:22" pos:end="25:22">h</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:31">streams</name><index pos:start="25:32" pos:end="25:34">[<expr pos:start="25:33" pos:end="25:33"><name pos:start="25:33" pos:end="25:33">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="27:15" pos:end="33:13">else <block pos:start="27:20" pos:end="33:13">{<block_content pos:start="29:17" pos:end="31:22">

                <expr_stmt pos:start="29:17" pos:end="29:100"><expr pos:start="29:17" pos:end="29:99"><call pos:start="29:17" pos:end="29:99"><name pos:start="29:17" pos:end="29:22">av_log</name><argument_list pos:start="29:23" pos:end="29:99">(<argument pos:start="29:24" pos:end="29:24"><expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">h</name></expr></argument>, <argument pos:start="29:27" pos:end="29:40"><expr pos:start="29:27" pos:end="29:40"><name pos:start="29:27" pos:end="29:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="29:43" pos:end="29:98"><expr pos:start="29:43" pos:end="29:98"><literal type="string" pos:start="29:43" pos:end="29:98">"More than one video stream found. First one is used.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="31:17" pos:end="31:22">break;</break>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:12">(<expr pos:start="39:9" pos:end="39:11"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:11">st</name></expr>)</condition> <block pos:start="39:14" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:31">

        <expr_stmt pos:start="41:9" pos:end="41:60"><expr pos:start="41:9" pos:end="41:59"><call pos:start="41:9" pos:end="41:59"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:59">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">h</name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:33" pos:end="41:58"><expr pos:start="41:33" pos:end="41:58"><literal type="string" pos:start="41:33" pos:end="41:58">"No video stream found.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:31">return <expr pos:start="43:16" pos:end="43:30"><call pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:22">AVERROR</name><argument_list pos:start="43:23" pos:end="43:30">(<argument pos:start="43:24" pos:end="43:29"><expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="61:5"><if pos:start="49:5" pos:end="61:5">if <condition pos:start="49:8" pos:end="49:60">(<expr pos:start="49:9" pos:end="49:59"><operator pos:start="49:9" pos:end="49:9">(</operator><name pos:start="49:10" pos:end="49:18"><name pos:start="49:10" pos:end="49:14">fbdev</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:18">fd</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:52"><name pos:start="49:22" pos:end="49:32">avpriv_open</name><argument_list pos:start="49:33" pos:end="49:52">(<argument pos:start="49:34" pos:end="49:44"><expr pos:start="49:34" pos:end="49:44"><name pos:start="49:34" pos:end="49:44"><name pos:start="49:34" pos:end="49:34">h</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:44">filename</name></name></expr></argument>, <argument pos:start="49:47" pos:end="49:51"><expr pos:start="49:47" pos:end="49:51"><name pos:start="49:47" pos:end="49:51">flags</name></expr></argument>)</argument_list></call><operator pos:start="49:53" pos:end="49:53">)</operator> <operator pos:start="49:55" pos:end="49:56">==</operator> <operator pos:start="49:58" pos:end="49:58">-</operator><literal type="number" pos:start="49:59" pos:end="49:59">1</literal></expr>)</condition> <block pos:start="49:62" pos:end="61:5">{<block_content pos:start="51:9" pos:end="59:19">

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:28"><name pos:start="51:15" pos:end="51:21">AVERROR</name><argument_list pos:start="51:22" pos:end="51:28">(<argument pos:start="51:23" pos:end="51:27"><expr pos:start="51:23" pos:end="51:27"><name pos:start="51:23" pos:end="51:27">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="57:45"><expr pos:start="53:9" pos:end="57:44"><call pos:start="53:9" pos:end="57:44"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="57:44">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">h</name></expr></argument>, <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="55:16" pos:end="55:61"><expr pos:start="55:16" pos:end="55:61"><literal type="string" pos:start="55:16" pos:end="55:61">"Could not open framebuffer device '%s': %s\n"</literal></expr></argument>,

               <argument pos:start="57:16" pos:end="57:26"><expr pos:start="57:16" pos:end="57:26"><name pos:start="57:16" pos:end="57:26"><name pos:start="57:16" pos:end="57:16">h</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:26">filename</name></name></expr></argument>, <argument pos:start="57:29" pos:end="57:43"><expr pos:start="57:29" pos:end="57:43"><call pos:start="57:29" pos:end="57:43"><name pos:start="57:29" pos:end="57:38">av_err2str</name><argument_list pos:start="57:39" pos:end="57:43">(<argument pos:start="57:40" pos:end="57:42"><expr pos:start="57:40" pos:end="57:42"><name pos:start="57:40" pos:end="57:42">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:19">return <expr pos:start="59:16" pos:end="59:18"><name pos:start="59:16" pos:end="59:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if <condition pos:start="65:8" pos:end="65:67">(<expr pos:start="65:9" pos:end="65:66"><call pos:start="65:9" pos:end="65:62"><name pos:start="65:9" pos:end="65:13">ioctl</name><argument_list pos:start="65:14" pos:end="65:62">(<argument pos:start="65:15" pos:end="65:23"><expr pos:start="65:15" pos:end="65:23"><name pos:start="65:15" pos:end="65:23"><name pos:start="65:15" pos:end="65:19">fbdev</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:23">fd</name></name></expr></argument>, <argument pos:start="65:26" pos:end="65:44"><expr pos:start="65:26" pos:end="65:44"><name pos:start="65:26" pos:end="65:44">FBIOGET_VSCREENINFO</name></expr></argument>, <argument pos:start="65:47" pos:end="65:61"><expr pos:start="65:47" pos:end="65:61"><operator pos:start="65:47" pos:end="65:47">&amp;</operator><name pos:start="65:48" pos:end="65:61"><name pos:start="65:48" pos:end="65:52">fbdev</name><operator pos:start="65:53" pos:end="65:54">-&gt;</operator><name pos:start="65:55" pos:end="65:61">varinfo</name></name></expr></argument>)</argument_list></call> <operator pos:start="65:64" pos:end="65:64">&lt;</operator> <literal type="number" pos:start="65:66" pos:end="65:66">0</literal></expr>)</condition> <block pos:start="65:69" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:18">

        <expr_stmt pos:start="67:9" pos:end="67:29"><expr pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:28"><name pos:start="67:15" pos:end="67:21">AVERROR</name><argument_list pos:start="67:22" pos:end="67:28">(<argument pos:start="67:23" pos:end="67:27"><expr pos:start="67:23" pos:end="67:27"><name pos:start="67:23" pos:end="67:27">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:78"><expr pos:start="69:9" pos:end="69:77"><call pos:start="69:9" pos:end="69:77"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="69:77">(<argument pos:start="69:16" pos:end="69:16"><expr pos:start="69:16" pos:end="69:16"><name pos:start="69:16" pos:end="69:16">h</name></expr></argument>, <argument pos:start="69:19" pos:end="69:30"><expr pos:start="69:19" pos:end="69:30"><name pos:start="69:19" pos:end="69:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:33" pos:end="69:59"><expr pos:start="69:33" pos:end="69:59"><literal type="string" pos:start="69:33" pos:end="69:59">"FBIOGET_VSCREENINFO: %s\n"</literal></expr></argument>, <argument pos:start="69:62" pos:end="69:76"><expr pos:start="69:62" pos:end="69:76"><call pos:start="69:62" pos:end="69:76"><name pos:start="69:62" pos:end="69:71">av_err2str</name><argument_list pos:start="69:72" pos:end="69:76">(<argument pos:start="69:73" pos:end="69:75"><expr pos:start="69:73" pos:end="69:75"><name pos:start="69:73" pos:end="69:75">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:18">goto <name pos:start="71:14" pos:end="71:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="85:5">if <condition pos:start="77:8" pos:end="77:67">(<expr pos:start="77:9" pos:end="77:66"><call pos:start="77:9" pos:end="77:62"><name pos:start="77:9" pos:end="77:13">ioctl</name><argument_list pos:start="77:14" pos:end="77:62">(<argument pos:start="77:15" pos:end="77:23"><expr pos:start="77:15" pos:end="77:23"><name pos:start="77:15" pos:end="77:23"><name pos:start="77:15" pos:end="77:19">fbdev</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:23">fd</name></name></expr></argument>, <argument pos:start="77:26" pos:end="77:44"><expr pos:start="77:26" pos:end="77:44"><name pos:start="77:26" pos:end="77:44">FBIOGET_FSCREENINFO</name></expr></argument>, <argument pos:start="77:47" pos:end="77:61"><expr pos:start="77:47" pos:end="77:61"><operator pos:start="77:47" pos:end="77:47">&amp;</operator><name pos:start="77:48" pos:end="77:61"><name pos:start="77:48" pos:end="77:52">fbdev</name><operator pos:start="77:53" pos:end="77:54">-&gt;</operator><name pos:start="77:55" pos:end="77:61">fixinfo</name></name></expr></argument>)</argument_list></call> <operator pos:start="77:64" pos:end="77:64">&lt;</operator> <literal type="number" pos:start="77:66" pos:end="77:66">0</literal></expr>)</condition> <block pos:start="77:69" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:18">

        <expr_stmt pos:start="79:9" pos:end="79:29"><expr pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:28"><name pos:start="79:15" pos:end="79:21">AVERROR</name><argument_list pos:start="79:22" pos:end="79:28">(<argument pos:start="79:23" pos:end="79:27"><expr pos:start="79:23" pos:end="79:27"><name pos:start="79:23" pos:end="79:27">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:78"><expr pos:start="81:9" pos:end="81:77"><call pos:start="81:9" pos:end="81:77"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:77">(<argument pos:start="81:16" pos:end="81:16"><expr pos:start="81:16" pos:end="81:16"><name pos:start="81:16" pos:end="81:16">h</name></expr></argument>, <argument pos:start="81:19" pos:end="81:30"><expr pos:start="81:19" pos:end="81:30"><name pos:start="81:19" pos:end="81:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:33" pos:end="81:59"><expr pos:start="81:33" pos:end="81:59"><literal type="string" pos:start="81:33" pos:end="81:59">"FBIOGET_FSCREENINFO: %s\n"</literal></expr></argument>, <argument pos:start="81:62" pos:end="81:76"><expr pos:start="81:62" pos:end="81:76"><call pos:start="81:62" pos:end="81:76"><name pos:start="81:62" pos:end="81:71">av_err2str</name><argument_list pos:start="81:72" pos:end="81:76">(<argument pos:start="81:73" pos:end="81:75"><expr pos:start="81:73" pos:end="81:75"><name pos:start="81:73" pos:end="81:75">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:18">goto <name pos:start="83:14" pos:end="83:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:61"><expr pos:start="89:5" pos:end="89:60"><name pos:start="89:5" pos:end="89:11">pix_fmt</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:60"><name pos:start="89:15" pos:end="89:43">ff_get_pixfmt_from_fb_varinfo</name><argument_list pos:start="89:44" pos:end="89:60">(<argument pos:start="89:45" pos:end="89:59"><expr pos:start="89:45" pos:end="89:59"><operator pos:start="89:45" pos:end="89:45">&amp;</operator><name pos:start="89:46" pos:end="89:59"><name pos:start="89:46" pos:end="89:50">fbdev</name><operator pos:start="89:51" pos:end="89:52">-&gt;</operator><name pos:start="89:53" pos:end="89:59">varinfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="99:5"><if pos:start="91:5" pos:end="99:5">if <condition pos:start="91:8" pos:end="91:35">(<expr pos:start="91:9" pos:end="91:34"><name pos:start="91:9" pos:end="91:15">pix_fmt</name> <operator pos:start="91:17" pos:end="91:18">==</operator> <name pos:start="91:20" pos:end="91:34">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="91:37" pos:end="99:5">{<block_content pos:start="93:9" pos:end="97:18">

        <expr_stmt pos:start="93:9" pos:end="93:30"><expr pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:29"><name pos:start="93:15" pos:end="93:21">AVERROR</name><argument_list pos:start="93:22" pos:end="93:29">(<argument pos:start="93:23" pos:end="93:28"><expr pos:start="93:23" pos:end="93:28"><name pos:start="93:23" pos:end="93:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:77"><expr pos:start="95:9" pos:end="95:76"><call pos:start="95:9" pos:end="95:76"><name pos:start="95:9" pos:end="95:14">av_log</name><argument_list pos:start="95:15" pos:end="95:76">(<argument pos:start="95:16" pos:end="95:16"><expr pos:start="95:16" pos:end="95:16"><name pos:start="95:16" pos:end="95:16">h</name></expr></argument>, <argument pos:start="95:19" pos:end="95:30"><expr pos:start="95:19" pos:end="95:30"><name pos:start="95:19" pos:end="95:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:33" pos:end="95:75"><expr pos:start="95:33" pos:end="95:75"><literal type="string" pos:start="95:33" pos:end="95:75">"Framebuffer pixel format not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="97:9" pos:end="97:18">goto <name pos:start="97:14" pos:end="97:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:92"><expr pos:start="103:5" pos:end="103:91"><name pos:start="103:5" pos:end="103:15"><name pos:start="103:5" pos:end="103:9">fbdev</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:15">data</name></name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:91"><name pos:start="103:19" pos:end="103:22">mmap</name><argument_list pos:start="103:23" pos:end="103:91">(<argument pos:start="103:24" pos:end="103:27"><expr pos:start="103:24" pos:end="103:27"><name pos:start="103:24" pos:end="103:27">NULL</name></expr></argument>, <argument pos:start="103:30" pos:end="103:52"><expr pos:start="103:30" pos:end="103:52"><name pos:start="103:30" pos:end="103:52"><name pos:start="103:30" pos:end="103:34">fbdev</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:43">fixinfo</name><operator pos:start="103:44" pos:end="103:44">.</operator><name pos:start="103:45" pos:end="103:52">smem_len</name></name></expr></argument>, <argument pos:start="103:55" pos:end="103:64"><expr pos:start="103:55" pos:end="103:64"><name pos:start="103:55" pos:end="103:64">PROT_WRITE</name></expr></argument>, <argument pos:start="103:67" pos:end="103:76"><expr pos:start="103:67" pos:end="103:76"><name pos:start="103:67" pos:end="103:76">MAP_SHARED</name></expr></argument>, <argument pos:start="103:79" pos:end="103:87"><expr pos:start="103:79" pos:end="103:87"><name pos:start="103:79" pos:end="103:87"><name pos:start="103:79" pos:end="103:83">fbdev</name><operator pos:start="103:84" pos:end="103:85">-&gt;</operator><name pos:start="103:86" pos:end="103:87">fd</name></name></expr></argument>, <argument pos:start="103:90" pos:end="103:90"><expr pos:start="103:90" pos:end="103:90"><literal type="number" pos:start="103:90" pos:end="103:90">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="113:5">if <condition pos:start="105:8" pos:end="105:34">(<expr pos:start="105:9" pos:end="105:33"><name pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:13">fbdev</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:19">data</name></name> <operator pos:start="105:21" pos:end="105:22">==</operator> <name pos:start="105:24" pos:end="105:33">MAP_FAILED</name></expr>)</condition> <block pos:start="105:36" pos:end="113:5">{<block_content pos:start="107:9" pos:end="111:18">

        <expr_stmt pos:start="107:9" pos:end="107:29"><expr pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:11">ret</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:28"><name pos:start="107:15" pos:end="107:21">AVERROR</name><argument_list pos:start="107:22" pos:end="107:28">(<argument pos:start="107:23" pos:end="107:27"><expr pos:start="107:23" pos:end="107:27"><name pos:start="107:23" pos:end="107:27">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:74"><expr pos:start="109:9" pos:end="109:73"><call pos:start="109:9" pos:end="109:73"><name pos:start="109:9" pos:end="109:14">av_log</name><argument_list pos:start="109:15" pos:end="109:73">(<argument pos:start="109:16" pos:end="109:16"><expr pos:start="109:16" pos:end="109:16"><name pos:start="109:16" pos:end="109:16">h</name></expr></argument>, <argument pos:start="109:19" pos:end="109:30"><expr pos:start="109:19" pos:end="109:30"><name pos:start="109:19" pos:end="109:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="109:33" pos:end="109:55"><expr pos:start="109:33" pos:end="109:55"><literal type="string" pos:start="109:33" pos:end="109:55">"Error in mmap(): %s\n"</literal></expr></argument>, <argument pos:start="109:58" pos:end="109:72"><expr pos:start="109:58" pos:end="109:72"><call pos:start="109:58" pos:end="109:72"><name pos:start="109:58" pos:end="109:67">av_err2str</name><argument_list pos:start="109:68" pos:end="109:72">(<argument pos:start="109:69" pos:end="109:71"><expr pos:start="109:69" pos:end="109:71"><name pos:start="109:69" pos:end="109:71">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="111:9" pos:end="111:18">goto <name pos:start="111:14" pos:end="111:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">0</literal></expr>;</return>

  <label pos:start="119:3" pos:end="119:7"><name pos:start="119:3" pos:end="119:6">fail</name>:</label>

    <expr_stmt pos:start="121:5" pos:end="121:21"><expr pos:start="121:5" pos:end="121:20"><call pos:start="121:5" pos:end="121:20"><name pos:start="121:5" pos:end="121:9">close</name><argument_list pos:start="121:10" pos:end="121:20">(<argument pos:start="121:11" pos:end="121:19"><expr pos:start="121:11" pos:end="121:19"><name pos:start="121:11" pos:end="121:19"><name pos:start="121:11" pos:end="121:15">fbdev</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:19">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="123:5" pos:end="123:15">return <expr pos:start="123:12" pos:end="123:14"><name pos:start="123:12" pos:end="123:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
