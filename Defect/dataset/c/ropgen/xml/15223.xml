<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15223.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">insert_trim</name><parameter_list pos:start="1:23" pos:end="1:86">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:35">OutputStream</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">ost</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:71"><decl pos:start="1:43" pos:end="1:71"><type pos:start="1:43" pos:end="1:71"><name pos:start="1:43" pos:end="1:57">AVFilterContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:71">last_filter</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:85"><decl pos:start="1:74" pos:end="1:85"><type pos:start="1:74" pos:end="1:85"><name pos:start="1:74" pos:end="1:76">int</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:85">pad_idx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:13">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">OutputFile</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">of</name> <init pos:start="5:20" pos:end="5:50">= <expr pos:start="5:22" pos:end="5:50"><name pos:start="5:22" pos:end="5:50"><name pos:start="5:22" pos:end="5:33">output_files</name><index pos:start="5:34" pos:end="5:50">[<expr pos:start="5:35" pos:end="5:49"><name pos:start="5:35" pos:end="5:49"><name pos:start="5:35" pos:end="5:37">ost</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:49">file_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AVFilterGraph</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:24">graph</name> <init pos:start="7:26" pos:end="7:48">= <expr pos:start="7:28" pos:end="7:48"><name pos:start="7:28" pos:end="7:48"><operator pos:start="7:28" pos:end="7:28">(</operator><operator pos:start="7:29" pos:end="7:29">*</operator><name pos:start="7:30" pos:end="7:40">last_filter</name><operator pos:start="7:41" pos:end="7:41">)</operator><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:48">graph</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFilterContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:20"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">AVFilter</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:24">trim</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:91"><decl pos:start="13:5" pos:end="13:90"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:20">name</name> <init pos:start="13:22" pos:end="13:90">= <expr pos:start="13:24" pos:end="13:90"><ternary pos:start="13:24" pos:end="13:90"><condition pos:start="13:24" pos:end="13:73"><expr pos:start="13:24" pos:end="13:71"><name pos:start="13:24" pos:end="13:49"><name pos:start="13:24" pos:end="13:26">ost</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:30">st</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:37">codec</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:49">codec_type</name></name> <operator pos:start="13:51" pos:end="13:52">==</operator> <name pos:start="13:54" pos:end="13:71">AVMEDIA_TYPE_VIDEO</name></expr> ?</condition><then pos:start="13:75" pos:end="13:80"> <expr pos:start="13:75" pos:end="13:80"><literal type="string" pos:start="13:75" pos:end="13:80">"trim"</literal></expr> </then><else pos:start="13:82" pos:end="13:90">: <expr pos:start="13:84" pos:end="13:90"><literal type="string" pos:start="13:84" pos:end="13:90">"atrim"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:25"><name pos:start="15:10" pos:end="15:20">filter_name</name><index pos:start="15:21" pos:end="15:25">[<expr pos:start="15:22" pos:end="15:24"><literal type="number" pos:start="15:22" pos:end="15:24">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name> <init pos:start="17:13" pos:end="17:15">= <expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:59">(<expr pos:start="21:9" pos:end="21:58"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:10">of</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:26">recording_time</name></name> <operator pos:start="21:28" pos:end="21:29">==</operator> <name pos:start="21:31" pos:end="21:39">INT64_MAX</name> <operator pos:start="21:41" pos:end="21:42">&amp;&amp;</operator> <operator pos:start="21:44" pos:end="21:44">!</operator><name pos:start="21:45" pos:end="21:58"><name pos:start="21:45" pos:end="21:46">of</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:58">start_time</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:8">trim</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:37"><name pos:start="27:12" pos:end="27:31">avfilter_get_by_name</name><argument_list pos:start="27:32" pos:end="27:37">(<argument pos:start="27:33" pos:end="27:36"><expr pos:start="27:33" pos:end="27:36"><name pos:start="27:33" pos:end="27:36">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:14">(<expr pos:start="29:9" pos:end="29:13"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:13">trim</name></expr>)</condition> <block pos:start="29:16" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:40">

        <expr_stmt pos:start="31:9" pos:end="33:42"><expr pos:start="31:9" pos:end="33:41"><call pos:start="31:9" pos:end="33:41"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="33:41">(<argument pos:start="31:16" pos:end="31:19"><expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">NULL</name></expr></argument>, <argument pos:start="31:22" pos:end="31:33"><expr pos:start="31:22" pos:end="31:33"><name pos:start="31:22" pos:end="31:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:36" pos:end="33:34"><expr pos:start="31:36" pos:end="33:34"><literal type="string" pos:start="31:36" pos:end="31:73">"%s filter not present, cannot limit "</literal>

               <literal type="string" pos:start="33:16" pos:end="33:34">"recording time.\n"</literal></expr></argument>, <argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:40">return <expr pos:start="35:16" pos:end="35:39"><name pos:start="35:16" pos:end="35:39">AVERROR_FILTER_NOT_FOUND</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:48"><expr pos:start="41:5" pos:end="43:47"><call pos:start="41:5" pos:end="43:47"><name pos:start="41:5" pos:end="41:12">snprintf</name><argument_list pos:start="41:13" pos:end="43:47">(<argument pos:start="41:14" pos:end="41:24"><expr pos:start="41:14" pos:end="41:24"><name pos:start="41:14" pos:end="41:24">filter_name</name></expr></argument>, <argument pos:start="41:27" pos:end="41:45"><expr pos:start="41:27" pos:end="41:45"><sizeof pos:start="41:27" pos:end="41:45">sizeof<argument_list pos:start="41:33" pos:end="41:45">(<argument pos:start="41:34" pos:end="41:44"><expr pos:start="41:34" pos:end="41:44"><name pos:start="41:34" pos:end="41:44">filter_name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="41:48" pos:end="41:75"><expr pos:start="41:48" pos:end="41:75"><literal type="string" pos:start="41:48" pos:end="41:75">"%s for output stream %d:%d"</literal></expr></argument>,

             <argument pos:start="43:14" pos:end="43:17"><expr pos:start="43:14" pos:end="43:17"><name pos:start="43:14" pos:end="43:17">name</name></expr></argument>, <argument pos:start="43:20" pos:end="43:34"><expr pos:start="43:20" pos:end="43:34"><name pos:start="43:20" pos:end="43:34"><name pos:start="43:20" pos:end="43:22">ost</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:34">file_index</name></name></expr></argument>, <argument pos:start="43:37" pos:end="43:46"><expr pos:start="43:37" pos:end="43:46"><name pos:start="43:37" pos:end="43:46"><name pos:start="43:37" pos:end="43:39">ost</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:46">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:64"><expr pos:start="45:5" pos:end="45:63"><name pos:start="45:5" pos:end="45:7">ctx</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:63"><name pos:start="45:11" pos:end="45:37">avfilter_graph_alloc_filter</name><argument_list pos:start="45:38" pos:end="45:63">(<argument pos:start="45:39" pos:end="45:43"><expr pos:start="45:39" pos:end="45:43"><name pos:start="45:39" pos:end="45:43">graph</name></expr></argument>, <argument pos:start="45:46" pos:end="45:49"><expr pos:start="45:46" pos:end="45:49"><name pos:start="45:46" pos:end="45:49">trim</name></expr></argument>, <argument pos:start="45:52" pos:end="45:62"><expr pos:start="45:52" pos:end="45:62"><name pos:start="45:52" pos:end="45:62">filter_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:31"><if pos:start="47:5" pos:end="49:31">if <condition pos:start="47:8" pos:end="47:13">(<expr pos:start="47:9" pos:end="47:12"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:12">ctx</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:31"><block_content pos:start="49:9" pos:end="49:31">

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:22">AVERROR</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:40">(<expr pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:10">of</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:26">recording_time</name></name> <operator pos:start="53:28" pos:end="53:29">!=</operator> <name pos:start="53:31" pos:end="53:39">INT64_MAX</name></expr>)</condition> <block pos:start="53:42" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:56">

        <expr_stmt pos:start="55:9" pos:end="57:56"><expr pos:start="55:9" pos:end="57:55"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="57:55"><name pos:start="55:15" pos:end="55:31">av_opt_set_double</name><argument_list pos:start="55:32" pos:end="57:55">(<argument pos:start="55:33" pos:end="55:35"><expr pos:start="55:33" pos:end="55:35"><name pos:start="55:33" pos:end="55:35">ctx</name></expr></argument>, <argument pos:start="55:38" pos:end="55:47"><expr pos:start="55:38" pos:end="55:47"><literal type="string" pos:start="55:38" pos:end="55:47">"duration"</literal></expr></argument>, <argument pos:start="55:50" pos:end="55:81"><expr pos:start="55:50" pos:end="55:81"><operator pos:start="55:50" pos:end="55:50">(</operator><name pos:start="55:51" pos:end="55:56">double</name><operator pos:start="55:57" pos:end="55:57">)</operator><name pos:start="55:58" pos:end="55:75"><name pos:start="55:58" pos:end="55:59">of</name><operator pos:start="55:60" pos:end="55:61">-&gt;</operator><name pos:start="55:62" pos:end="55:75">recording_time</name></name> <operator pos:start="55:77" pos:end="55:77">/</operator> <literal type="number" pos:start="55:79" pos:end="55:81">1e6</literal></expr></argument>,

                                <argument pos:start="57:33" pos:end="57:54"><expr pos:start="57:33" pos:end="57:54"><name pos:start="57:33" pos:end="57:54">AV_OPT_SEARCH_CHILDREN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:35">(<expr pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:14">&gt;=</operator> <literal type="number" pos:start="61:16" pos:end="61:16">0</literal> <operator pos:start="61:18" pos:end="61:19">&amp;&amp;</operator> <name pos:start="61:21" pos:end="61:34"><name pos:start="61:21" pos:end="61:22">of</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:34">start_time</name></name></expr>)</condition> <block pos:start="61:37" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:56">

        <expr_stmt pos:start="63:9" pos:end="65:56"><expr pos:start="63:9" pos:end="65:55"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="65:55"><name pos:start="63:15" pos:end="63:31">av_opt_set_double</name><argument_list pos:start="63:32" pos:end="65:55">(<argument pos:start="63:33" pos:end="63:35"><expr pos:start="63:33" pos:end="63:35"><name pos:start="63:33" pos:end="63:35">ctx</name></expr></argument>, <argument pos:start="63:38" pos:end="63:44"><expr pos:start="63:38" pos:end="63:44"><literal type="string" pos:start="63:38" pos:end="63:44">"start"</literal></expr></argument>, <argument pos:start="63:47" pos:end="63:74"><expr pos:start="63:47" pos:end="63:74"><operator pos:start="63:47" pos:end="63:47">(</operator><name pos:start="63:48" pos:end="63:53">double</name><operator pos:start="63:54" pos:end="63:54">)</operator><name pos:start="63:55" pos:end="63:68"><name pos:start="63:55" pos:end="63:56">of</name><operator pos:start="63:57" pos:end="63:58">-&gt;</operator><name pos:start="63:59" pos:end="63:68">start_time</name></name> <operator pos:start="63:70" pos:end="63:70">/</operator> <literal type="number" pos:start="63:72" pos:end="63:74">1e6</literal></expr></argument>,

                                <argument pos:start="65:33" pos:end="65:54"><expr pos:start="65:33" pos:end="65:54"><name pos:start="65:33" pos:end="65:54">AV_OPT_SEARCH_CHILDREN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:16">(<expr pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">&lt;</operator> <literal type="number" pos:start="69:15" pos:end="69:15">0</literal></expr>)</condition> <block pos:start="69:18" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:19">

        <expr_stmt pos:start="71:9" pos:end="71:75"><expr pos:start="71:9" pos:end="71:74"><call pos:start="71:9" pos:end="71:74"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:74">(<argument pos:start="71:16" pos:end="71:18"><expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">ctx</name></expr></argument>, <argument pos:start="71:21" pos:end="71:32"><expr pos:start="71:21" pos:end="71:32"><name pos:start="71:21" pos:end="71:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:35" pos:end="71:67"><expr pos:start="71:35" pos:end="71:67"><literal type="string" pos:start="71:35" pos:end="71:67">"Error configuring the %s filter"</literal></expr></argument>, <argument pos:start="71:70" pos:end="71:73"><expr pos:start="71:70" pos:end="71:73"><name pos:start="71:70" pos:end="71:73">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:19">return <expr pos:start="73:16" pos:end="73:18"><name pos:start="73:16" pos:end="73:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:39"><expr pos:start="79:5" pos:end="79:38"><name pos:start="79:5" pos:end="79:7">ret</name> <operator pos:start="79:9" pos:end="79:9">=</operator> <call pos:start="79:11" pos:end="79:38"><name pos:start="79:11" pos:end="79:27">avfilter_init_str</name><argument_list pos:start="79:28" pos:end="79:38">(<argument pos:start="79:29" pos:end="79:31"><expr pos:start="79:29" pos:end="79:31"><name pos:start="79:29" pos:end="79:31">ctx</name></expr></argument>, <argument pos:start="79:34" pos:end="79:37"><expr pos:start="79:34" pos:end="79:37"><name pos:start="79:34" pos:end="79:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="83:19"><if pos:start="81:5" pos:end="83:19">if <condition pos:start="81:8" pos:end="81:16">(<expr pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">&lt;</operator> <literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:19"><block_content pos:start="83:9" pos:end="83:19">

        <return pos:start="83:9" pos:end="83:19">return <expr pos:start="83:16" pos:end="83:18"><name pos:start="83:16" pos:end="83:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:56"><expr pos:start="87:5" pos:end="87:55"><name pos:start="87:5" pos:end="87:7">ret</name> <operator pos:start="87:9" pos:end="87:9">=</operator> <call pos:start="87:11" pos:end="87:55"><name pos:start="87:11" pos:end="87:23">avfilter_link</name><argument_list pos:start="87:24" pos:end="87:55">(<argument pos:start="87:25" pos:end="87:36"><expr pos:start="87:25" pos:end="87:36"><operator pos:start="87:25" pos:end="87:25">*</operator><name pos:start="87:26" pos:end="87:36">last_filter</name></expr></argument>, <argument pos:start="87:39" pos:end="87:46"><expr pos:start="87:39" pos:end="87:46"><operator pos:start="87:39" pos:end="87:39">*</operator><name pos:start="87:40" pos:end="87:46">pad_idx</name></expr></argument>, <argument pos:start="87:49" pos:end="87:51"><expr pos:start="87:49" pos:end="87:51"><name pos:start="87:49" pos:end="87:51">ctx</name></expr></argument>, <argument pos:start="87:54" pos:end="87:54"><expr pos:start="87:54" pos:end="87:54"><literal type="number" pos:start="87:54" pos:end="87:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="91:19"><if pos:start="89:5" pos:end="91:19">if <condition pos:start="89:8" pos:end="89:16">(<expr pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">&lt;</operator> <literal type="number" pos:start="89:15" pos:end="89:15">0</literal></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:19"><block_content pos:start="91:9" pos:end="91:19">

        <return pos:start="91:9" pos:end="91:19">return <expr pos:start="91:16" pos:end="91:18"><name pos:start="91:16" pos:end="91:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:23"><expr pos:start="95:5" pos:end="95:22"><operator pos:start="95:5" pos:end="95:5">*</operator><name pos:start="95:6" pos:end="95:16">last_filter</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <name pos:start="95:20" pos:end="95:22">ctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:21"><expr pos:start="97:5" pos:end="97:20"><operator pos:start="97:5" pos:end="97:5">*</operator><name pos:start="97:6" pos:end="97:12">pad_idx</name>     <operator pos:start="97:18" pos:end="97:18">=</operator> <literal type="number" pos:start="97:20" pos:end="97:20">0</literal></expr>;</expr_stmt>

    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
