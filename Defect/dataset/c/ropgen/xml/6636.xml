<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6636.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">bufp_alloc</name><parameter_list pos:start="1:23" pos:end="3:54">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:42"><name pos:start="1:24" pos:end="1:37">USBRedirDevice</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">dev</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:67">uint16_t</name></type> <name pos:start="1:69" pos:end="1:71">len</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:18"><type pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:11">uint8_t</name></type> <name pos:start="3:13" pos:end="3:18">status</name></decl></parameter>, <parameter pos:start="3:21" pos:end="3:30"><decl pos:start="3:21" pos:end="3:30"><type pos:start="3:21" pos:end="3:30"><name pos:start="3:21" pos:end="3:27">uint8_t</name></type> <name pos:start="3:29" pos:end="3:30">ep</name></decl></parameter>, <parameter pos:start="3:33" pos:end="3:53"><decl pos:start="3:33" pos:end="3:53"><type pos:start="3:33" pos:end="3:53"><name pos:start="3:33" pos:end="3:36">void</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:53">free_on_destroy</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:41">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">buf_packet</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:27">bufp</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="21:5">if <condition pos:start="11:8" pos:end="15:58">(<expr pos:start="11:9" pos:end="15:57"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:32"><name pos:start="11:10" pos:end="11:12">dev</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:22">endpoint</name><index pos:start="11:23" pos:end="11:32">[<expr pos:start="11:24" pos:end="11:31"><call pos:start="11:24" pos:end="11:31"><name pos:start="11:24" pos:end="11:27">EP2I</name><argument_list pos:start="11:28" pos:end="11:31">(<argument pos:start="11:29" pos:end="11:30"><expr pos:start="11:29" pos:end="11:30"><name pos:start="11:29" pos:end="11:30">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="11:33" pos:end="11:33">.</operator><name pos:start="11:34" pos:end="11:55">bufpq_dropping_packets</name> <operator pos:start="11:57" pos:end="11:58">&amp;&amp;</operator>

        <name pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:11">dev</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:21">endpoint</name><index pos:start="13:22" pos:end="13:31">[<expr pos:start="13:23" pos:end="13:30"><call pos:start="13:23" pos:end="13:30"><name pos:start="13:23" pos:end="13:26">EP2I</name><argument_list pos:start="13:27" pos:end="13:30">(<argument pos:start="13:28" pos:end="13:29"><expr pos:start="13:28" pos:end="13:29"><name pos:start="13:28" pos:end="13:29">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="13:32" pos:end="13:32">.</operator><name pos:start="13:33" pos:end="13:42">bufpq_size</name> <operator pos:start="13:44" pos:end="13:44">&gt;</operator>

            <literal type="number" pos:start="15:13" pos:end="15:13">2</literal> <operator pos:start="15:15" pos:end="15:15">*</operator> <name pos:start="15:17" pos:end="15:39"><name pos:start="15:17" pos:end="15:19">dev</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:29">endpoint</name><index pos:start="15:30" pos:end="15:39">[<expr pos:start="15:31" pos:end="15:38"><call pos:start="15:31" pos:end="15:38"><name pos:start="15:31" pos:end="15:34">EP2I</name><argument_list pos:start="15:35" pos:end="15:38">(<argument pos:start="15:36" pos:end="15:37"><expr pos:start="15:36" pos:end="15:37"><name pos:start="15:36" pos:end="15:37">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="15:40" pos:end="15:40">.</operator><name pos:start="15:41" pos:end="15:57">bufpq_target_size</name></expr>)</condition> <block pos:start="15:60" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:59">

        <expr_stmt pos:start="17:9" pos:end="17:66"><expr pos:start="17:9" pos:end="17:65"><call pos:start="17:9" pos:end="17:65"><name pos:start="17:9" pos:end="17:15">DPRINTF</name><argument_list pos:start="17:16" pos:end="17:65">(<argument pos:start="17:17" pos:end="17:60"><expr pos:start="17:17" pos:end="17:60"><literal type="string" pos:start="17:17" pos:end="17:60">"bufpq overflow, dropping packets ep %02X\n"</literal></expr></argument>, <argument pos:start="17:63" pos:end="17:64"><expr pos:start="17:63" pos:end="17:64"><name pos:start="17:63" pos:end="17:64">ep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:59"><expr pos:start="19:9" pos:end="19:58"><name pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:11">dev</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:21">endpoint</name><index pos:start="19:22" pos:end="19:31">[<expr pos:start="19:23" pos:end="19:30"><call pos:start="19:23" pos:end="19:30"><name pos:start="19:23" pos:end="19:26">EP2I</name><argument_list pos:start="19:27" pos:end="19:30">(<argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><name pos:start="19:28" pos:end="19:29">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="19:32" pos:end="19:32">.</operator><name pos:start="19:33" pos:end="19:54">bufpq_dropping_packets</name> <operator pos:start="19:56" pos:end="19:56">=</operator> <literal type="number" pos:start="19:58" pos:end="19:58">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="23:5" pos:end="25:40">/* Since we're interupting the stream anyways, drop enough packets to get

       back to our target buffer size */</comment>

    <if_stmt pos:start="27:5" pos:end="41:5"><if pos:start="27:5" pos:end="41:5">if <condition pos:start="27:8" pos:end="27:55">(<expr pos:start="27:9" pos:end="27:54"><name pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:11">dev</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:21">endpoint</name><index pos:start="27:22" pos:end="27:31">[<expr pos:start="27:23" pos:end="27:30"><call pos:start="27:23" pos:end="27:30"><name pos:start="27:23" pos:end="27:26">EP2I</name><argument_list pos:start="27:27" pos:end="27:30">(<argument pos:start="27:28" pos:end="27:29"><expr pos:start="27:28" pos:end="27:29"><name pos:start="27:28" pos:end="27:29">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="27:32" pos:end="27:32">.</operator><name pos:start="27:33" pos:end="27:54">bufpq_dropping_packets</name></expr>)</condition> <block pos:start="27:57" pos:end="41:5">{<block_content pos:start="29:9" pos:end="39:59">

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="31:58">(<expr pos:start="29:13" pos:end="31:57"><name pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:15">dev</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:25">endpoint</name><index pos:start="29:26" pos:end="29:35">[<expr pos:start="29:27" pos:end="29:34"><call pos:start="29:27" pos:end="29:34"><name pos:start="29:27" pos:end="29:30">EP2I</name><argument_list pos:start="29:31" pos:end="29:34">(<argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><name pos:start="29:32" pos:end="29:33">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="29:36" pos:end="29:36">.</operator><name pos:start="29:37" pos:end="29:46">bufpq_size</name> <operator pos:start="29:48" pos:end="29:48">&gt;</operator>

                <name pos:start="31:17" pos:end="31:39"><name pos:start="31:17" pos:end="31:19">dev</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:29">endpoint</name><index pos:start="31:30" pos:end="31:39">[<expr pos:start="31:31" pos:end="31:38"><call pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:34">EP2I</name><argument_list pos:start="31:35" pos:end="31:38">(<argument pos:start="31:36" pos:end="31:37"><expr pos:start="31:36" pos:end="31:37"><name pos:start="31:36" pos:end="31:37">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="31:40" pos:end="31:40">.</operator><name pos:start="31:41" pos:end="31:57">bufpq_target_size</name></expr>)</condition> <block pos:start="31:60" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:19">

            <expr_stmt pos:start="33:13" pos:end="33:23"><expr pos:start="33:13" pos:end="33:22"><call pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:16">free</name><argument_list pos:start="33:17" pos:end="33:22">(<argument pos:start="33:18" pos:end="33:21"><expr pos:start="33:18" pos:end="33:21"><name pos:start="33:18" pos:end="33:21">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:59"><expr pos:start="39:9" pos:end="39:58"><name pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:11">dev</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:21">endpoint</name><index pos:start="39:22" pos:end="39:31">[<expr pos:start="39:23" pos:end="39:30"><call pos:start="39:23" pos:end="39:30"><name pos:start="39:23" pos:end="39:26">EP2I</name><argument_list pos:start="39:27" pos:end="39:30">(<argument pos:start="39:28" pos:end="39:29"><expr pos:start="39:28" pos:end="39:29"><name pos:start="39:28" pos:end="39:29">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="39:32" pos:end="39:32">.</operator><name pos:start="39:33" pos:end="39:54">bufpq_dropping_packets</name> <operator pos:start="39:56" pos:end="39:56">=</operator> <literal type="number" pos:start="39:58" pos:end="39:58">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:39"><expr pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:8">bufp</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:38"><name pos:start="45:12" pos:end="45:16">g_new</name><argument_list pos:start="45:17" pos:end="45:38">(<argument pos:start="45:18" pos:end="45:34"><expr pos:start="45:18" pos:end="45:34">struct <name pos:start="45:25" pos:end="45:34">buf_packet</name></expr></argument>, <argument pos:start="45:37" pos:end="45:37"><expr pos:start="45:37" pos:end="45:37"><literal type="number" pos:start="45:37" pos:end="45:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:24"><expr pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:8">bufp</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:14">data</name></name>   <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:23">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:8">bufp</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:13">len</name></name>    <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:22">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:21"><expr pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:8">bufp</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:16">offset</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:26"><expr pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:8">bufp</name><operator pos:start="53:9" pos:end="53:10">-&gt;</operator><name pos:start="53:11" pos:end="53:16">status</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:25">status</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:44"><expr pos:start="55:5" pos:end="55:43"><name pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:8">bufp</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:25">free_on_destroy</name></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:43">free_on_destroy</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:67"><expr pos:start="57:5" pos:end="57:66"><call pos:start="57:5" pos:end="57:66"><name pos:start="57:5" pos:end="57:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="57:23" pos:end="57:66">(<argument pos:start="57:24" pos:end="57:53"><expr pos:start="57:24" pos:end="57:53"><operator pos:start="57:24" pos:end="57:24">&amp;</operator><name pos:start="57:25" pos:end="57:47"><name pos:start="57:25" pos:end="57:27">dev</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:37">endpoint</name><index pos:start="57:38" pos:end="57:47">[<expr pos:start="57:39" pos:end="57:46"><call pos:start="57:39" pos:end="57:46"><name pos:start="57:39" pos:end="57:42">EP2I</name><argument_list pos:start="57:43" pos:end="57:46">(<argument pos:start="57:44" pos:end="57:45"><expr pos:start="57:44" pos:end="57:45"><name pos:start="57:44" pos:end="57:45">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="57:48" pos:end="57:48">.</operator><name pos:start="57:49" pos:end="57:53">bufpq</name></expr></argument>, <argument pos:start="57:56" pos:end="57:59"><expr pos:start="57:56" pos:end="57:59"><name pos:start="57:56" pos:end="57:59">bufp</name></expr></argument>, <argument pos:start="57:62" pos:end="57:65"><expr pos:start="57:62" pos:end="57:65"><name pos:start="57:62" pos:end="57:65">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:41"><expr pos:start="59:5" pos:end="59:40"><name pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:7">dev</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:17">endpoint</name><index pos:start="59:18" pos:end="59:27">[<expr pos:start="59:19" pos:end="59:26"><call pos:start="59:19" pos:end="59:26"><name pos:start="59:19" pos:end="59:22">EP2I</name><argument_list pos:start="59:23" pos:end="59:26">(<argument pos:start="59:24" pos:end="59:25"><expr pos:start="59:24" pos:end="59:25"><name pos:start="59:24" pos:end="59:25">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="59:28" pos:end="59:28">.</operator><name pos:start="59:29" pos:end="59:38">bufpq_size</name><operator pos:start="59:39" pos:end="59:40">++</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
