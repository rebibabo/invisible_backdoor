<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16650.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">piix4_device_plug_cb</name><parameter_list pos:start="1:33" pos:end="3:64">(<parameter pos:start="1:34" pos:end="1:60"><decl pos:start="1:34" pos:end="1:60"><type pos:start="1:34" pos:end="1:60"><name pos:start="1:34" pos:end="1:47">HotplugHandler</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:60">hotplug_dev</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:49"><decl pos:start="3:34" pos:end="3:49"><type pos:start="3:34" pos:end="3:49"><name pos:start="3:34" pos:end="3:44">DeviceState</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:49">dev</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:63"><decl pos:start="3:52" pos:end="3:63"><type pos:start="3:52" pos:end="3:63"><name pos:start="3:52" pos:end="3:56">Error</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier><modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:63">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:5">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">PIIX4PMState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:43">= <expr pos:start="7:23" pos:end="7:43"><call pos:start="7:23" pos:end="7:43"><name pos:start="7:23" pos:end="7:30">PIIX4_PM</name><argument_list pos:start="7:31" pos:end="7:43">(<argument pos:start="7:32" pos:end="7:42"><expr pos:start="7:32" pos:end="7:42"><name pos:start="7:32" pos:end="7:42">hotplug_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="55:5"><if pos:start="11:5" pos:end="27:5">if <condition pos:start="11:8" pos:end="13:55">(<expr pos:start="11:9" pos:end="13:54"><name pos:start="11:9" pos:end="11:41"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:30">acpi_memory_hotplug</name><operator pos:start="11:31" pos:end="11:31">.</operator><name pos:start="11:32" pos:end="11:41">is_enabled</name></name> <operator pos:start="11:43" pos:end="11:44">&amp;&amp;</operator>

        <call pos:start="13:9" pos:end="13:54"><name pos:start="13:9" pos:end="13:27">object_dynamic_cast</name><argument_list pos:start="13:28" pos:end="13:54">(<argument pos:start="13:29" pos:end="13:39"><expr pos:start="13:29" pos:end="13:39"><call pos:start="13:29" pos:end="13:39"><name pos:start="13:29" pos:end="13:34">OBJECT</name><argument_list pos:start="13:35" pos:end="13:39">(<argument pos:start="13:36" pos:end="13:38"><expr pos:start="13:36" pos:end="13:38"><name pos:start="13:36" pos:end="13:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:42" pos:end="13:53"><expr pos:start="13:42" pos:end="13:53"><name pos:start="13:42" pos:end="13:53">TYPE_PC_DIMM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:57" pos:end="27:5">{<block_content pos:start="15:9" pos:end="25:9">

        <if_stmt pos:start="15:9" pos:end="25:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:58">(<expr pos:start="15:13" pos:end="15:57"><call pos:start="15:13" pos:end="15:57"><name pos:start="15:13" pos:end="15:31">object_dynamic_cast</name><argument_list pos:start="15:32" pos:end="15:57">(<argument pos:start="15:33" pos:end="15:43"><expr pos:start="15:33" pos:end="15:43"><call pos:start="15:33" pos:end="15:43"><name pos:start="15:33" pos:end="15:38">OBJECT</name><argument_list pos:start="15:39" pos:end="15:43">(<argument pos:start="15:40" pos:end="15:42"><expr pos:start="15:40" pos:end="15:42"><name pos:start="15:40" pos:end="15:42">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:46" pos:end="15:56"><expr pos:start="15:46" pos:end="15:56"><name pos:start="15:46" pos:end="15:56">TYPE_NVDIMM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:60" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:50">

            <expr_stmt pos:start="17:13" pos:end="17:50"><expr pos:start="17:13" pos:end="17:49"><call pos:start="17:13" pos:end="17:49"><name pos:start="17:13" pos:end="17:31">nvdimm_acpi_plug_cb</name><argument_list pos:start="17:32" pos:end="17:49">(<argument pos:start="17:33" pos:end="17:43"><expr pos:start="17:33" pos:end="17:43"><name pos:start="17:33" pos:end="17:43">hotplug_dev</name></expr></argument>, <argument pos:start="17:46" pos:end="17:48"><expr pos:start="17:46" pos:end="17:48"><name pos:start="17:46" pos:end="17:48">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="19:11" pos:end="25:9">else <block pos:start="19:16" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:43">

            <expr_stmt pos:start="21:13" pos:end="23:43"><expr pos:start="21:13" pos:end="23:42"><call pos:start="21:13" pos:end="23:42"><name pos:start="21:13" pos:end="21:31">acpi_memory_plug_cb</name><argument_list pos:start="21:32" pos:end="23:42">(<argument pos:start="21:33" pos:end="21:43"><expr pos:start="21:33" pos:end="21:43"><name pos:start="21:33" pos:end="21:43">hotplug_dev</name></expr></argument>, <argument pos:start="21:46" pos:end="21:68"><expr pos:start="21:46" pos:end="21:68"><operator pos:start="21:46" pos:end="21:46">&amp;</operator><name pos:start="21:47" pos:end="21:68"><name pos:start="21:47" pos:end="21:47">s</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:68">acpi_memory_hotplug</name></name></expr></argument>,

                                <argument pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><name pos:start="23:33" pos:end="23:35">dev</name></expr></argument>, <argument pos:start="23:38" pos:end="23:41"><expr pos:start="23:38" pos:end="23:41"><name pos:start="23:38" pos:end="23:41">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="27:7" pos:end="37:5">else if <condition pos:start="27:15" pos:end="27:65">(<expr pos:start="27:16" pos:end="27:64"><call pos:start="27:16" pos:end="27:64"><name pos:start="27:16" pos:end="27:34">object_dynamic_cast</name><argument_list pos:start="27:35" pos:end="27:64">(<argument pos:start="27:36" pos:end="27:46"><expr pos:start="27:36" pos:end="27:46"><call pos:start="27:36" pos:end="27:46"><name pos:start="27:36" pos:end="27:41">OBJECT</name><argument_list pos:start="27:42" pos:end="27:46">(<argument pos:start="27:43" pos:end="27:45"><expr pos:start="27:43" pos:end="27:45"><name pos:start="27:43" pos:end="27:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:49" pos:end="27:63"><expr pos:start="27:49" pos:end="27:63"><name pos:start="27:49" pos:end="27:63">TYPE_PCI_DEVICE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:67" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:9">

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:27">(<expr pos:start="29:13" pos:end="29:26"><operator pos:start="29:13" pos:end="29:13">!</operator><call pos:start="29:14" pos:end="29:26"><name pos:start="29:14" pos:end="29:24">xen_enabled</name><argument_list pos:start="29:25" pos:end="29:26">()</argument_list></call></expr>)</condition> <block pos:start="29:29" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:44">

            <expr_stmt pos:start="31:13" pos:end="33:44"><expr pos:start="31:13" pos:end="33:43"><call pos:start="31:13" pos:end="33:43"><name pos:start="31:13" pos:end="31:37">acpi_pcihp_device_plug_cb</name><argument_list pos:start="31:38" pos:end="33:43">(<argument pos:start="31:39" pos:end="31:49"><expr pos:start="31:39" pos:end="31:49"><name pos:start="31:39" pos:end="31:49">hotplug_dev</name></expr></argument>, <argument pos:start="31:52" pos:end="31:71"><expr pos:start="31:52" pos:end="31:71"><operator pos:start="31:52" pos:end="31:52">&amp;</operator><name pos:start="31:53" pos:end="31:71"><name pos:start="31:53" pos:end="31:53">s</name><operator pos:start="31:54" pos:end="31:55">-&gt;</operator><name pos:start="31:56" pos:end="31:71">acpi_pci_hotplug</name></name></expr></argument>, <argument pos:start="31:74" pos:end="31:76"><expr pos:start="31:74" pos:end="31:76"><name pos:start="31:74" pos:end="31:76">dev</name></expr></argument>,

                                      <argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><name pos:start="33:39" pos:end="33:42">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="49:5">else if <condition pos:start="37:15" pos:end="37:58">(<expr pos:start="37:16" pos:end="37:57"><call pos:start="37:16" pos:end="37:57"><name pos:start="37:16" pos:end="37:34">object_dynamic_cast</name><argument_list pos:start="37:35" pos:end="37:57">(<argument pos:start="37:36" pos:end="37:46"><expr pos:start="37:36" pos:end="37:46"><call pos:start="37:36" pos:end="37:46"><name pos:start="37:36" pos:end="37:41">OBJECT</name><argument_list pos:start="37:42" pos:end="37:46">(<argument pos:start="37:43" pos:end="37:45"><expr pos:start="37:43" pos:end="37:45"><name pos:start="37:43" pos:end="37:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:49" pos:end="37:56"><expr pos:start="37:49" pos:end="37:56"><name pos:start="37:49" pos:end="37:56">TYPE_CPU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:60" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:9">

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:34">(<expr pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:33">cpu_hotplug_legacy</name></name></expr>)</condition> <block pos:start="39:36" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:73">

            <expr_stmt pos:start="41:13" pos:end="41:73"><expr pos:start="41:13" pos:end="41:72"><call pos:start="41:13" pos:end="41:72"><name pos:start="41:13" pos:end="41:35">legacy_acpi_cpu_plug_cb</name><argument_list pos:start="41:36" pos:end="41:72">(<argument pos:start="41:37" pos:end="41:47"><expr pos:start="41:37" pos:end="41:47"><name pos:start="41:37" pos:end="41:47">hotplug_dev</name></expr></argument>, <argument pos:start="41:50" pos:end="41:60"><expr pos:start="41:50" pos:end="41:60"><operator pos:start="41:50" pos:end="41:50">&amp;</operator><name pos:start="41:51" pos:end="41:60"><name pos:start="41:51" pos:end="41:51">s</name><operator pos:start="41:52" pos:end="41:53">-&gt;</operator><name pos:start="41:54" pos:end="41:60">gpe_cpu</name></name></expr></argument>, <argument pos:start="41:63" pos:end="41:65"><expr pos:start="41:63" pos:end="41:65"><name pos:start="41:63" pos:end="41:65">dev</name></expr></argument>, <argument pos:start="41:68" pos:end="41:71"><expr pos:start="41:68" pos:end="41:71"><name pos:start="41:68" pos:end="41:71">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="47:9">else <block pos:start="43:16" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:70">

            <expr_stmt pos:start="45:13" pos:end="45:70"><expr pos:start="45:13" pos:end="45:69"><call pos:start="45:13" pos:end="45:69"><name pos:start="45:13" pos:end="45:28">acpi_cpu_plug_cb</name><argument_list pos:start="45:29" pos:end="45:69">(<argument pos:start="45:30" pos:end="45:40"><expr pos:start="45:30" pos:end="45:40"><name pos:start="45:30" pos:end="45:40">hotplug_dev</name></expr></argument>, <argument pos:start="45:43" pos:end="45:57"><expr pos:start="45:43" pos:end="45:57"><operator pos:start="45:43" pos:end="45:43">&amp;</operator><name pos:start="45:44" pos:end="45:57"><name pos:start="45:44" pos:end="45:44">s</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:57">cpuhp_state</name></name></expr></argument>, <argument pos:start="45:60" pos:end="45:62"><expr pos:start="45:60" pos:end="45:62"><name pos:start="45:60" pos:end="45:62">dev</name></expr></argument>, <argument pos:start="45:65" pos:end="45:68"><expr pos:start="45:65" pos:end="45:68"><name pos:start="45:65" pos:end="45:68">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="55:5">else <block pos:start="49:12" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:66">

        <expr_stmt pos:start="51:9" pos:end="53:66"><expr pos:start="51:9" pos:end="53:65"><call pos:start="51:9" pos:end="53:65"><name pos:start="51:9" pos:end="51:18">error_setg</name><argument_list pos:start="51:19" pos:end="53:65">(<argument pos:start="51:20" pos:end="51:23"><expr pos:start="51:20" pos:end="51:23"><name pos:start="51:20" pos:end="51:23">errp</name></expr></argument>, <argument pos:start="51:26" pos:end="53:30"><expr pos:start="51:26" pos:end="53:30"><literal type="string" pos:start="51:26" pos:end="51:77">"acpi: device plug request for not supported device"</literal>

                   <literal type="string" pos:start="53:20" pos:end="53:30">" type: %s"</literal></expr></argument>, <argument pos:start="53:33" pos:end="53:64"><expr pos:start="53:33" pos:end="53:64"><call pos:start="53:33" pos:end="53:64"><name pos:start="53:33" pos:end="53:51">object_get_typename</name><argument_list pos:start="53:52" pos:end="53:64">(<argument pos:start="53:53" pos:end="53:63"><expr pos:start="53:53" pos:end="53:63"><call pos:start="53:53" pos:end="53:63"><name pos:start="53:53" pos:end="53:58">OBJECT</name><argument_list pos:start="53:59" pos:end="53:63">(<argument pos:start="53:60" pos:end="53:62"><expr pos:start="53:60" pos:end="53:62"><name pos:start="53:60" pos:end="53:62">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
