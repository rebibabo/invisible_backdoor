<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5061.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">QemuOpts</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:27">opts_parse</name><parameter_list pos:start="1:28" pos:end="3:61">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:40">QemuOptsList</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">list</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:66"><decl pos:start="1:49" pos:end="1:66"><type pos:start="1:49" pos:end="1:66"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:66">params</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:45"><decl pos:start="3:29" pos:end="3:45"><type pos:start="3:29" pos:end="3:45"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:45">permit_abbrev</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:60"><decl pos:start="3:48" pos:end="3:60"><type pos:start="3:48" pos:end="3:60"><name pos:start="3:48" pos:end="3:51">bool</name></type> <name pos:start="3:53" pos:end="3:60">defaults</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:16">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:25">firstname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:20"><name pos:start="9:10" pos:end="9:14">value</name><index pos:start="9:15" pos:end="9:20">[<expr pos:start="9:16" pos:end="9:19"><literal type="number" pos:start="9:16" pos:end="9:19">1024</literal></expr>]</index></name></decl>, <decl pos:start="9:23" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:8"><modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:25">id</name> <init pos:start="9:27" pos:end="9:32">= <expr pos:start="9:29" pos:end="9:32"><name pos:start="9:29" pos:end="9:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">QemuOpts</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:18">opts</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><call pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:52">(<argument pos:start="17:12" pos:end="17:51"><expr pos:start="17:12" pos:end="17:51"><operator pos:start="17:12" pos:end="17:12">!</operator><name pos:start="17:13" pos:end="17:25">permit_abbrev</name> <operator pos:start="17:27" pos:end="17:28">||</operator> <name pos:start="17:30" pos:end="17:51"><name pos:start="17:30" pos:end="17:33">list</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:51">implied_opt_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:62"><expr pos:start="19:5" pos:end="19:61"><name pos:start="19:5" pos:end="19:13">firstname</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <ternary pos:start="19:17" pos:end="19:61"><condition pos:start="19:17" pos:end="19:31"><expr pos:start="19:17" pos:end="19:29"><name pos:start="19:17" pos:end="19:29">permit_abbrev</name></expr> ?</condition><then pos:start="19:33" pos:end="19:54"> <expr pos:start="19:33" pos:end="19:54"><name pos:start="19:33" pos:end="19:54"><name pos:start="19:33" pos:end="19:36">list</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:54">implied_opt_name</name></name></expr> </then><else pos:start="19:56" pos:end="19:61">: <expr pos:start="19:58" pos:end="19:61"><name pos:start="19:58" pos:end="19:61">NULL</name></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:39">(<expr pos:start="23:9" pos:end="23:38"><call pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:15">strncmp</name><argument_list pos:start="23:16" pos:end="23:33">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">params</name></expr></argument>, <argument pos:start="23:25" pos:end="23:29"><expr pos:start="23:25" pos:end="23:29"><literal type="string" pos:start="23:25" pos:end="23:29">"id="</literal></expr></argument>, <argument pos:start="23:32" pos:end="23:32"><expr pos:start="23:32" pos:end="23:32"><literal type="number" pos:start="23:32" pos:end="23:32">3</literal></expr></argument>)</argument_list></call> <operator pos:start="23:35" pos:end="23:36">==</operator> <literal type="number" pos:start="23:38" pos:end="23:38">0</literal></expr>)</condition> <block pos:start="23:41" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:19">

        <expr_stmt pos:start="25:9" pos:end="25:54"><expr pos:start="25:9" pos:end="25:53"><call pos:start="25:9" pos:end="25:53"><name pos:start="25:9" pos:end="25:21">get_opt_value</name><argument_list pos:start="25:22" pos:end="25:53">(<argument pos:start="25:23" pos:end="25:27"><expr pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:27">value</name></expr></argument>, <argument pos:start="25:30" pos:end="25:42"><expr pos:start="25:30" pos:end="25:42"><sizeof pos:start="25:30" pos:end="25:42">sizeof<argument_list pos:start="25:36" pos:end="25:42">(<argument pos:start="25:37" pos:end="25:41"><expr pos:start="25:37" pos:end="25:41"><name pos:start="25:37" pos:end="25:41">value</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:45" pos:end="25:52"><expr pos:start="25:45" pos:end="25:52"><name pos:start="25:45" pos:end="25:50">params</name><operator pos:start="25:51" pos:end="25:51">+</operator><literal type="number" pos:start="25:52" pos:end="25:52">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:19"><expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:10">id</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:18">value</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="35:5">else if <condition pos:start="29:15" pos:end="29:52">(<expr pos:start="29:16" pos:end="29:51"><operator pos:start="29:16" pos:end="29:16">(</operator><name pos:start="29:17" pos:end="29:17">p</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <call pos:start="29:21" pos:end="29:42"><name pos:start="29:21" pos:end="29:26">strstr</name><argument_list pos:start="29:27" pos:end="29:42">(<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:33">params</name></expr></argument>, <argument pos:start="29:36" pos:end="29:41"><expr pos:start="29:36" pos:end="29:41"><literal type="string" pos:start="29:36" pos:end="29:41">",id="</literal></expr></argument>)</argument_list></call><operator pos:start="29:43" pos:end="29:43">)</operator> <operator pos:start="29:45" pos:end="29:46">!=</operator> <name pos:start="29:48" pos:end="29:51">NULL</name></expr>)</condition> <block pos:start="29:54" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:19">

        <expr_stmt pos:start="31:9" pos:end="31:49"><expr pos:start="31:9" pos:end="31:48"><call pos:start="31:9" pos:end="31:48"><name pos:start="31:9" pos:end="31:21">get_opt_value</name><argument_list pos:start="31:22" pos:end="31:48">(<argument pos:start="31:23" pos:end="31:27"><expr pos:start="31:23" pos:end="31:27"><name pos:start="31:23" pos:end="31:27">value</name></expr></argument>, <argument pos:start="31:30" pos:end="31:42"><expr pos:start="31:30" pos:end="31:42"><sizeof pos:start="31:30" pos:end="31:42">sizeof<argument_list pos:start="31:36" pos:end="31:42">(<argument pos:start="31:37" pos:end="31:41"><expr pos:start="31:37" pos:end="31:41"><name pos:start="31:37" pos:end="31:41">value</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:45" pos:end="31:47"><expr pos:start="31:45" pos:end="31:47"><name pos:start="31:45" pos:end="31:45">p</name><operator pos:start="31:46" pos:end="31:46">+</operator><literal type="number" pos:start="31:47" pos:end="31:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:19"><expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:10">id</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:18">value</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="53:5"><if pos:start="37:5" pos:end="49:5">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16">defaults</name></expr>)</condition> <block pos:start="37:19" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:9">

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:46">(<expr pos:start="39:13" pos:end="39:45"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:15">id</name> <operator pos:start="39:17" pos:end="39:18">&amp;&amp;</operator> <operator pos:start="39:20" pos:end="39:20">!</operator><call pos:start="39:21" pos:end="39:45"><name pos:start="39:21" pos:end="39:32">QTAILQ_EMPTY</name><argument_list pos:start="39:33" pos:end="39:45">(<argument pos:start="39:34" pos:end="39:44"><expr pos:start="39:34" pos:end="39:44"><operator pos:start="39:34" pos:end="39:34">&amp;</operator><name pos:start="39:35" pos:end="39:44"><name pos:start="39:35" pos:end="39:38">list</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:44">head</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:48" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:46">

            <expr_stmt pos:start="41:13" pos:end="41:46"><expr pos:start="41:13" pos:end="41:45"><name pos:start="41:13" pos:end="41:16">opts</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="41:45"><name pos:start="41:20" pos:end="41:33">qemu_opts_find</name><argument_list pos:start="41:34" pos:end="41:45">(<argument pos:start="41:35" pos:end="41:38"><expr pos:start="41:35" pos:end="41:38"><name pos:start="41:35" pos:end="41:38">list</name></expr></argument>, <argument pos:start="41:41" pos:end="41:44"><expr pos:start="41:41" pos:end="41:44"><name pos:start="41:41" pos:end="41:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="47:9">else <block pos:start="43:16" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:49">

            <expr_stmt pos:start="45:13" pos:end="45:49"><expr pos:start="45:13" pos:end="45:48"><name pos:start="45:13" pos:end="45:16">opts</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:48"><name pos:start="45:20" pos:end="45:35">qemu_opts_create</name><argument_list pos:start="45:36" pos:end="45:48">(<argument pos:start="45:37" pos:end="45:40"><expr pos:start="45:37" pos:end="45:40"><name pos:start="45:37" pos:end="45:40">list</name></expr></argument>, <argument pos:start="45:43" pos:end="45:44"><expr pos:start="45:43" pos:end="45:44"><name pos:start="45:43" pos:end="45:44">id</name></expr></argument>, <argument pos:start="45:47" pos:end="45:47"><expr pos:start="45:47" pos:end="45:47"><literal type="number" pos:start="45:47" pos:end="45:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="53:5">else <block pos:start="49:12" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:45">

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:12">opts</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <call pos:start="51:16" pos:end="51:44"><name pos:start="51:16" pos:end="51:31">qemu_opts_create</name><argument_list pos:start="51:32" pos:end="51:44">(<argument pos:start="51:33" pos:end="51:36"><expr pos:start="51:33" pos:end="51:36"><name pos:start="51:33" pos:end="51:36">list</name></expr></argument>, <argument pos:start="51:39" pos:end="51:40"><expr pos:start="51:39" pos:end="51:40"><name pos:start="51:39" pos:end="51:40">id</name></expr></argument>, <argument pos:start="51:43" pos:end="51:43"><expr pos:start="51:43" pos:end="51:43"><literal type="number" pos:start="51:43" pos:end="51:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="55:5" pos:end="57:20"><if pos:start="55:5" pos:end="57:20">if <condition pos:start="55:8" pos:end="55:21">(<expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:12">opts</name> <operator pos:start="55:14" pos:end="55:15">==</operator> <name pos:start="55:17" pos:end="55:20">NULL</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:20"><block_content pos:start="57:9" pos:end="57:20">

        <return pos:start="57:9" pos:end="57:20">return <expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:62">(<expr pos:start="61:9" pos:end="61:61"><call pos:start="61:9" pos:end="61:56"><name pos:start="61:9" pos:end="61:21">opts_do_parse</name><argument_list pos:start="61:22" pos:end="61:56">(<argument pos:start="61:23" pos:end="61:26"><expr pos:start="61:23" pos:end="61:26"><name pos:start="61:23" pos:end="61:26">opts</name></expr></argument>, <argument pos:start="61:29" pos:end="61:34"><expr pos:start="61:29" pos:end="61:34"><name pos:start="61:29" pos:end="61:34">params</name></expr></argument>, <argument pos:start="61:37" pos:end="61:45"><expr pos:start="61:37" pos:end="61:45"><name pos:start="61:37" pos:end="61:45">firstname</name></expr></argument>, <argument pos:start="61:48" pos:end="61:55"><expr pos:start="61:48" pos:end="61:55"><name pos:start="61:48" pos:end="61:55">defaults</name></expr></argument>)</argument_list></call> <operator pos:start="61:58" pos:end="61:59">!=</operator> <literal type="number" pos:start="61:61" pos:end="61:61">0</literal></expr>)</condition> <block pos:start="61:64" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:20">

        <expr_stmt pos:start="63:9" pos:end="63:28"><expr pos:start="63:9" pos:end="63:27"><call pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:21">qemu_opts_del</name><argument_list pos:start="63:22" pos:end="63:27">(<argument pos:start="63:23" pos:end="63:26"><expr pos:start="63:23" pos:end="63:26"><name pos:start="63:23" pos:end="63:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:20">return <expr pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="71:5" pos:end="71:16">return <expr pos:start="71:12" pos:end="71:15"><name pos:start="71:12" pos:end="71:15">opts</name></expr>;</return>

</block_content>}</block></function>
</unit>
