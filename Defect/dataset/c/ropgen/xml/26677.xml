<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26677.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:28">temp_save</name><parameter_list pos:start="1:29" pos:end="3:54">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:39">TCGContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:51">TCGTemp</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">ts</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:53"><decl pos:start="3:30" pos:end="3:53"><type pos:start="3:30" pos:end="3:53"><name pos:start="3:30" pos:end="3:38">TCGRegSet</name></type> <name pos:start="3:40" pos:end="3:53">allocated_regs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="11:5" pos:end="27:21">

<cpp:ifdef pos:start="7:1" pos:end="7:28">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:28">USE_LIVENESS_ANALYSIS</name></cpp:ifdef>

    <comment type="block" pos:start="9:5" pos:end="9:64">/* ??? Liveness does not yet incorporate indirect bases.  */</comment>

    <if_stmt pos:start="11:5" pos:end="24:0"><if pos:start="11:5" pos:end="24:0">if <condition pos:start="11:8" pos:end="11:27">(<expr pos:start="11:9" pos:end="11:26"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:26"><name pos:start="11:10" pos:end="11:11">ts</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:26">indirect_base</name></name></expr>)</condition> <block pos:start="11:29" pos:end="24:0">{<block_content pos:start="17:9" pos:end="19:15">

        <comment type="block" pos:start="13:9" pos:end="15:51">/* The liveness analysis already ensures that globals are back

           in memory. Keep an assert for safety. */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:72"><expr pos:start="17:9" pos:end="17:71"><call pos:start="17:9" pos:end="17:71"><name pos:start="17:9" pos:end="17:24">tcg_debug_assert</name><argument_list pos:start="17:25" pos:end="17:71">(<argument pos:start="17:26" pos:end="17:70"><expr pos:start="17:26" pos:end="17:70"><name pos:start="17:26" pos:end="17:37"><name pos:start="17:26" pos:end="17:27">ts</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:37">val_type</name></name> <operator pos:start="17:39" pos:end="17:40">==</operator> <name pos:start="17:42" pos:end="17:53">TEMP_VAL_MEM</name> <operator pos:start="17:55" pos:end="17:56">||</operator> <name pos:start="17:58" pos:end="17:70"><name pos:start="17:58" pos:end="17:59">ts</name><operator pos:start="17:60" pos:end="17:61">-&gt;</operator><name pos:start="17:62" pos:end="17:70">fixed_reg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><call pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:13">temp_sync</name><argument_list pos:start="25:14" pos:end="25:36">(<argument pos:start="25:15" pos:end="25:15"><expr pos:start="25:15" pos:end="25:15"><name pos:start="25:15" pos:end="25:15">s</name></expr></argument>, <argument pos:start="25:18" pos:end="25:19"><expr pos:start="25:18" pos:end="25:19"><name pos:start="25:18" pos:end="25:19">ts</name></expr></argument>, <argument pos:start="25:22" pos:end="25:35"><expr pos:start="25:22" pos:end="25:35"><name pos:start="25:22" pos:end="25:35">allocated_regs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><call pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:13">temp_dead</name><argument_list pos:start="27:14" pos:end="27:20">(<argument pos:start="27:15" pos:end="27:15"><expr pos:start="27:15" pos:end="27:15"><name pos:start="27:15" pos:end="27:15">s</name></expr></argument>, <argument pos:start="27:18" pos:end="27:19"><expr pos:start="27:18" pos:end="27:19"><name pos:start="27:18" pos:end="27:19">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
