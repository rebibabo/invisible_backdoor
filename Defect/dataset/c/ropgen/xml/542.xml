<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/542.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:49">qmp_chardev_open_parallel</name><parameter_list pos:start="1:50" pos:end="3:63">(<parameter pos:start="1:51" pos:end="1:74"><decl pos:start="1:51" pos:end="1:74"><type pos:start="1:51" pos:end="1:74"><name pos:start="1:51" pos:end="1:64">ChardevHostdev</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:74">parallel</name></decl></parameter>,

                                                  <parameter pos:start="3:51" pos:end="3:62"><decl pos:start="3:51" pos:end="3:62"><type pos:start="3:51" pos:end="3:62"><name pos:start="3:51" pos:end="3:55">Error</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier><modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:62">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="31:1">{<block_content pos:start="9:5" pos:end="30:0">

<cpp:ifdef pos:start="7:1" pos:end="7:27">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:27">HAVE_CHARDEV_PARPORT</name></cpp:ifdef>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:70"><expr pos:start="13:5" pos:end="13:69"><name pos:start="13:5" pos:end="13:6">fd</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:69"><name pos:start="13:10" pos:end="13:37">qmp_chardev_open_file_source</name><argument_list pos:start="13:38" pos:end="13:69">(<argument pos:start="13:39" pos:end="13:54"><expr pos:start="13:39" pos:end="13:54"><name pos:start="13:39" pos:end="13:54"><name pos:start="13:39" pos:end="13:46">parallel</name><operator pos:start="13:47" pos:end="13:48">-&gt;</operator><name pos:start="13:49" pos:end="13:54">device</name></name></expr></argument>, <argument pos:start="13:57" pos:end="13:62"><expr pos:start="13:57" pos:end="13:62"><name pos:start="13:57" pos:end="13:62">O_RDWR</name></expr></argument>, <argument pos:start="13:65" pos:end="13:68"><expr pos:start="13:65" pos:end="13:68"><name pos:start="13:65" pos:end="13:68">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:27">(<expr pos:start="15:9" pos:end="15:26"><call pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:20">error_is_set</name><argument_list pos:start="15:21" pos:end="15:26">(<argument pos:start="15:22" pos:end="15:25"><expr pos:start="15:22" pos:end="15:25"><name pos:start="15:22" pos:end="15:25">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:29" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="21:5" pos:end="24:0">return <expr pos:start="21:12" pos:end="21:34"><call pos:start="21:12" pos:end="21:34"><name pos:start="21:12" pos:end="21:30">qemu_chr_open_pp_fd</name><argument_list pos:start="21:31" pos:end="21:34">(<argument pos:start="21:32" pos:end="21:33"><expr pos:start="21:32" pos:end="21:33"><name pos:start="21:32" pos:end="21:33">fd</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:else pos:start="23:1" pos:end="23:5">#<cpp:directive pos:start="23:2" pos:end="23:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="25:5" pos:end="25:79"><expr pos:start="25:5" pos:end="25:78"><call pos:start="25:5" pos:end="25:78"><name pos:start="25:5" pos:end="25:14">error_setg</name><argument_list pos:start="25:15" pos:end="25:78">(<argument pos:start="25:16" pos:end="25:19"><expr pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:19">errp</name></expr></argument>, <argument pos:start="25:22" pos:end="25:77"><expr pos:start="25:22" pos:end="25:77"><literal type="string" pos:start="25:22" pos:end="25:77">"character device backend type 'parallel' not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="27:5" pos:end="30:0">return <expr pos:start="27:12" pos:end="27:15"><name pos:start="27:12" pos:end="27:15">NULL</name></expr>;</return>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
