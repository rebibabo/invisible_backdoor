<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16496.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">pci_bridge_write_config</name><parameter_list pos:start="1:36" pos:end="3:69">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:45">PCIDevice</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">d</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:45"><decl pos:start="3:30" pos:end="3:45"><type pos:start="3:30" pos:end="3:45"><name pos:start="3:30" pos:end="3:37">uint32_t</name></type> <name pos:start="3:39" pos:end="3:45">address</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:59"><decl pos:start="3:48" pos:end="3:59"><type pos:start="3:48" pos:end="3:59"><name pos:start="3:48" pos:end="3:55">uint32_t</name></type> <name pos:start="3:57" pos:end="3:59">val</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:68"><decl pos:start="3:62" pos:end="3:68"><type pos:start="3:62" pos:end="3:68"><name pos:start="3:62" pos:end="3:64">int</name></type> <name pos:start="3:66" pos:end="3:68">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="29:51">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">PCIBridge</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:33">= <expr pos:start="7:20" pos:end="7:33"><operator pos:start="7:20" pos:end="7:20">(</operator><name pos:start="7:21" pos:end="7:29">PCIBridge</name> <operator pos:start="7:31" pos:end="7:31">*</operator><operator pos:start="7:32" pos:end="7:32">)</operator><name pos:start="7:33" pos:end="7:33">d</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="27:5"><if pos:start="11:5" pos:end="27:5">if <condition pos:start="11:8" pos:end="11:56">(<expr pos:start="11:9" pos:end="11:55"><name pos:start="11:9" pos:end="11:15">address</name> <operator pos:start="11:17" pos:end="11:18">==</operator> <literal type="number" pos:start="11:20" pos:end="11:23">0x19</literal> <operator pos:start="11:25" pos:end="11:26">||</operator> <operator pos:start="11:28" pos:end="11:28">(</operator><name pos:start="11:29" pos:end="11:35">address</name> <operator pos:start="11:37" pos:end="11:38">==</operator> <literal type="number" pos:start="11:40" pos:end="11:43">0x18</literal> <operator pos:start="11:45" pos:end="11:46">&amp;&amp;</operator> <name pos:start="11:48" pos:end="11:50">len</name> <operator pos:start="11:52" pos:end="11:52">&gt;</operator> <literal type="number" pos:start="11:54" pos:end="11:54">1</literal><operator pos:start="11:55" pos:end="11:55">)</operator></expr>)</condition> <block pos:start="11:58" pos:end="27:5">{<block_content pos:start="13:9" pos:end="26:0">

        <if_stmt pos:start="13:9" pos:end="22:0"><if pos:start="13:9" pos:end="15:41">if <condition pos:start="13:12" pos:end="13:28">(<expr pos:start="13:13" pos:end="13:27"><name pos:start="13:13" pos:end="13:19">address</name> <operator pos:start="13:21" pos:end="13:22">==</operator> <literal type="number" pos:start="13:24" pos:end="13:27">0x19</literal></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:41"><block_content pos:start="15:13" pos:end="15:41">

            <expr_stmt pos:start="15:13" pos:end="15:41"><expr pos:start="15:13" pos:end="15:40"><name pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:18">bus</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:27">bus_num</name></name> <operator pos:start="15:29" pos:end="15:29">=</operator> <name pos:start="15:31" pos:end="15:33">val</name> <operator pos:start="15:35" pos:end="15:35">&amp;</operator> <literal type="number" pos:start="15:37" pos:end="15:40">0xff</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="17:9" pos:end="22:0">else<block type="pseudo" pos:start="19:13" pos:end="22:0"><block_content pos:start="19:13" pos:end="22:0">

            <expr_stmt pos:start="19:13" pos:end="22:0"><expr pos:start="19:13" pos:end="19:47"><name pos:start="19:13" pos:end="19:27"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:18">bus</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:27">bus_num</name></name> <operator pos:start="19:29" pos:end="19:29">=</operator> <operator pos:start="19:31" pos:end="19:31">(</operator><name pos:start="19:32" pos:end="19:34">val</name> <operator pos:start="19:36" pos:end="19:37">&gt;&gt;</operator> <literal type="number" pos:start="19:39" pos:end="19:39">8</literal><operator pos:start="19:40" pos:end="19:40">)</operator> <operator pos:start="19:42" pos:end="19:42">&amp;</operator> <literal type="number" pos:start="19:44" pos:end="19:47">0xff</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:if pos:start="21:1" pos:end="21:22">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:22"><call pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:11">defined</name><argument_list pos:start="21:12" pos:end="21:22">(<argument pos:start="21:13" pos:end="21:21"><expr pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:21">DEBUG_PCI</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="23:9" pos:end="26:0"><expr pos:start="23:9" pos:end="23:78"><call pos:start="23:9" pos:end="23:78"><name pos:start="23:9" pos:end="23:14">printf</name> <argument_list pos:start="23:16" pos:end="23:78">(<argument pos:start="23:17" pos:end="23:51"><expr pos:start="23:17" pos:end="23:51"><literal type="string" pos:start="23:17" pos:end="23:51">"pci-bridge: %s: Assigned bus %d\n"</literal></expr></argument>, <argument pos:start="23:54" pos:end="23:60"><expr pos:start="23:54" pos:end="23:60"><name pos:start="23:54" pos:end="23:60"><name pos:start="23:54" pos:end="23:54">d</name><operator pos:start="23:55" pos:end="23:56">-&gt;</operator><name pos:start="23:57" pos:end="23:60">name</name></name></expr></argument>, <argument pos:start="23:63" pos:end="23:77"><expr pos:start="23:63" pos:end="23:77"><name pos:start="23:63" pos:end="23:77"><name pos:start="23:63" pos:end="23:63">s</name><operator pos:start="23:64" pos:end="23:65">-&gt;</operator><name pos:start="23:66" pos:end="23:68">bus</name><operator pos:start="23:69" pos:end="23:70">-&gt;</operator><name pos:start="23:71" pos:end="23:77">bus_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><call pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:28">pci_default_write_config</name><argument_list pos:start="29:29" pos:end="29:50">(<argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><name pos:start="29:30" pos:end="29:30">d</name></expr></argument>, <argument pos:start="29:33" pos:end="29:39"><expr pos:start="29:33" pos:end="29:39"><name pos:start="29:33" pos:end="29:39">address</name></expr></argument>, <argument pos:start="29:42" pos:end="29:44"><expr pos:start="29:42" pos:end="29:44"><name pos:start="29:42" pos:end="29:44">val</name></expr></argument>, <argument pos:start="29:47" pos:end="29:49"><expr pos:start="29:47" pos:end="29:49"><name pos:start="29:47" pos:end="29:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
