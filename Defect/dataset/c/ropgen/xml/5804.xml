<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5804.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">check_pred8x8l</name><parameter_list pos:start="1:27" pos:end="3:71">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">H264PredContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">h</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:54">uint8_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">buf0</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:75"><decl pos:start="1:63" pos:end="1:75"><type pos:start="1:63" pos:end="1:75"><name pos:start="1:63" pos:end="1:69">uint8_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">buf1</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:36"><decl pos:start="3:28" pos:end="3:36"><type pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:36">codec</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:55"><decl pos:start="3:39" pos:end="3:55"><type pos:start="3:39" pos:end="3:55"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:55">chroma_format</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:70"><decl pos:start="3:58" pos:end="3:70"><type pos:start="3:58" pos:end="3:70"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:70">bit_depth</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:5">

    <if_stmt pos:start="7:5" pos:end="49:5"><if pos:start="7:5" pos:end="49:5">if <condition pos:start="7:8" pos:end="7:67">(<expr pos:start="7:9" pos:end="7:66"><name pos:start="7:9" pos:end="7:21">chroma_format</name> <operator pos:start="7:23" pos:end="7:24">==</operator> <literal type="number" pos:start="7:26" pos:end="7:26">1</literal> <operator pos:start="7:28" pos:end="7:29">&amp;&amp;</operator> <name pos:start="7:31" pos:end="7:46"><name pos:start="7:31" pos:end="7:39">codec_ids</name><index pos:start="7:40" pos:end="7:46">[<expr pos:start="7:41" pos:end="7:45"><name pos:start="7:41" pos:end="7:45">codec</name></expr>]</index></name> <operator pos:start="7:48" pos:end="7:49">==</operator> <name pos:start="7:51" pos:end="7:66">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="7:69" pos:end="49:5">{<block_content pos:start="9:9" pos:end="47:9">

        <decl_stmt pos:start="9:9" pos:end="9:22"><decl pos:start="9:9" pos:end="9:21"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:21">pred_mode</name></decl>;</decl_stmt>

        <for pos:start="11:9" pos:end="47:9">for <control pos:start="11:13" pos:end="11:56">(<init pos:start="11:14" pos:end="11:27"><expr pos:start="11:14" pos:end="11:26"><name pos:start="11:14" pos:end="11:22">pred_mode</name> <operator pos:start="11:24" pos:end="11:24">=</operator> <literal type="number" pos:start="11:26" pos:end="11:26">0</literal></expr>;</init> <condition pos:start="11:29" pos:end="11:43"><expr pos:start="11:29" pos:end="11:42"><name pos:start="11:29" pos:end="11:37">pred_mode</name> <operator pos:start="11:39" pos:end="11:39">&lt;</operator> <literal type="number" pos:start="11:41" pos:end="11:42">12</literal></expr>;</condition> <incr pos:start="11:45" pos:end="11:55"><expr pos:start="11:45" pos:end="11:55"><name pos:start="11:45" pos:end="11:53">pred_mode</name><operator pos:start="11:54" pos:end="11:55">++</operator></expr></incr>)</control> <block pos:start="11:58" pos:end="47:9">{<block_content pos:start="13:13" pos:end="45:13">

            <if_stmt pos:start="13:13" pos:end="45:13"><if pos:start="13:13" pos:end="45:13">if <condition pos:start="13:16" pos:end="13:97">(<expr pos:start="13:17" pos:end="13:96"><call pos:start="13:17" pos:end="13:96"><name pos:start="13:17" pos:end="13:31">check_pred_func</name><argument_list pos:start="13:32" pos:end="13:96">(<argument pos:start="13:33" pos:end="13:54"><expr pos:start="13:33" pos:end="13:54"><name pos:start="13:33" pos:end="13:54"><name pos:start="13:33" pos:end="13:33">h</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:43">pred8x8l</name><index pos:start="13:44" pos:end="13:54">[<expr pos:start="13:45" pos:end="13:53"><name pos:start="13:45" pos:end="13:53">pred_mode</name></expr>]</index></name></expr></argument>, <argument pos:start="13:57" pos:end="13:62"><expr pos:start="13:57" pos:end="13:62"><literal type="string" pos:start="13:57" pos:end="13:62">"8x8l"</literal></expr></argument>, <argument pos:start="13:65" pos:end="13:95"><expr pos:start="13:65" pos:end="13:95"><name pos:start="13:65" pos:end="13:95"><name pos:start="13:65" pos:end="13:77">pred4x4_modes</name><index pos:start="13:78" pos:end="13:84">[<expr pos:start="13:79" pos:end="13:83"><name pos:start="13:79" pos:end="13:83">codec</name></expr>]</index><index pos:start="13:85" pos:end="13:95">[<expr pos:start="13:86" pos:end="13:94"><name pos:start="13:86" pos:end="13:94">pred_mode</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:99" pos:end="45:13">{<block_content pos:start="15:17" pos:end="43:17">

                <decl_stmt pos:start="15:17" pos:end="15:30"><decl pos:start="15:17" pos:end="15:29"><type pos:start="15:17" pos:end="15:19"><name pos:start="15:17" pos:end="15:19">int</name></type> <name pos:start="15:21" pos:end="15:29">neighbors</name></decl>;</decl_stmt>

                <for pos:start="17:17" pos:end="43:17">for <control pos:start="17:21" pos:end="17:77">(<init pos:start="17:22" pos:end="17:35"><expr pos:start="17:22" pos:end="17:34"><name pos:start="17:22" pos:end="17:30">neighbors</name> <operator pos:start="17:32" pos:end="17:32">=</operator> <literal type="number" pos:start="17:34" pos:end="17:34">0</literal></expr>;</init> <condition pos:start="17:37" pos:end="17:56"><expr pos:start="17:37" pos:end="17:55"><name pos:start="17:37" pos:end="17:45">neighbors</name> <operator pos:start="17:47" pos:end="17:48">&lt;=</operator> <literal type="number" pos:start="17:50" pos:end="17:55">0xc000</literal></expr>;</condition> <incr pos:start="17:58" pos:end="17:76"><expr pos:start="17:58" pos:end="17:76"><name pos:start="17:58" pos:end="17:66">neighbors</name> <operator pos:start="17:68" pos:end="17:69">+=</operator> <literal type="number" pos:start="17:71" pos:end="17:76">0x4000</literal></expr></incr>)</control> <block pos:start="17:79" pos:end="43:17">{<block_content pos:start="19:21" pos:end="41:91">

                    <decl_stmt pos:start="19:21" pos:end="19:58"><decl pos:start="19:21" pos:end="19:57"><type pos:start="19:21" pos:end="19:23"><name pos:start="19:21" pos:end="19:23">int</name></type> <name pos:start="19:25" pos:end="19:35">has_topleft</name>  <init pos:start="19:38" pos:end="19:57">= <expr pos:start="19:40" pos:end="19:57"><name pos:start="19:40" pos:end="19:48">neighbors</name> <operator pos:start="19:50" pos:end="19:50">&amp;</operator> <literal type="number" pos:start="19:52" pos:end="19:57">0x8000</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="21:21" pos:end="21:58"><decl pos:start="21:21" pos:end="21:57"><type pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:23">int</name></type> <name pos:start="21:25" pos:end="21:36">has_topright</name> <init pos:start="21:38" pos:end="21:57">= <expr pos:start="21:40" pos:end="21:57"><name pos:start="21:40" pos:end="21:48">neighbors</name> <operator pos:start="21:50" pos:end="21:50">&amp;</operator> <literal type="number" pos:start="21:52" pos:end="21:57">0x4000</literal></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="25:21" pos:end="27:33"><if pos:start="25:21" pos:end="27:33">if <condition pos:start="25:24" pos:end="25:108">(<expr pos:start="25:25" pos:end="25:107"><operator pos:start="25:25" pos:end="25:25">(</operator><name pos:start="25:26" pos:end="25:34">pred_mode</name> <operator pos:start="25:36" pos:end="25:37">==</operator> <name pos:start="25:39" pos:end="25:58">DIAG_DOWN_RIGHT_PRED</name> <operator pos:start="25:60" pos:end="25:61">||</operator> <name pos:start="25:63" pos:end="25:71">pred_mode</name> <operator pos:start="25:73" pos:end="25:74">==</operator> <name pos:start="25:76" pos:end="25:90">VERT_RIGHT_PRED</name><operator pos:start="25:91" pos:end="25:91">)</operator> <operator pos:start="25:93" pos:end="25:94">&amp;&amp;</operator> <operator pos:start="25:96" pos:end="25:96">!</operator><name pos:start="25:97" pos:end="25:107">has_topleft</name></expr>)</condition><block type="pseudo" pos:start="27:25" pos:end="27:33"><block_content pos:start="27:25" pos:end="27:33">

                        <continue pos:start="27:25" pos:end="27:33">continue;</continue></block_content></block></if></if_stmt> <comment type="block" pos:start="27:35" pos:end="27:82">/* Those aren't allowed according to the spec */</comment>



                    <expr_stmt pos:start="31:21" pos:end="31:40"><expr pos:start="31:21" pos:end="31:39"><call pos:start="31:21" pos:end="31:39"><name pos:start="31:21" pos:end="31:37">randomize_buffers</name><argument_list pos:start="31:38" pos:end="31:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="33:21" pos:end="33:90"><expr pos:start="33:21" pos:end="33:89"><call pos:start="33:21" pos:end="33:89"><name pos:start="33:21" pos:end="33:28">call_ref</name><argument_list pos:start="33:29" pos:end="33:89">(<argument pos:start="33:30" pos:end="33:33"><expr pos:start="33:30" pos:end="33:33"><name pos:start="33:30" pos:end="33:33">src0</name></expr></argument>, <argument pos:start="33:36" pos:end="33:46"><expr pos:start="33:36" pos:end="33:46"><name pos:start="33:36" pos:end="33:46">has_topleft</name></expr></argument>, <argument pos:start="33:49" pos:end="33:60"><expr pos:start="33:49" pos:end="33:60"><name pos:start="33:49" pos:end="33:60">has_topright</name></expr></argument>, <argument pos:start="33:63" pos:end="33:88"><expr pos:start="33:63" pos:end="33:88"><operator pos:start="33:63" pos:end="33:63">(</operator><name pos:start="33:64" pos:end="33:72">ptrdiff_t</name><operator pos:start="33:73" pos:end="33:73">)</operator><literal type="number" pos:start="33:74" pos:end="33:75">24</literal><operator pos:start="33:76" pos:end="33:76">*</operator><name pos:start="33:77" pos:end="33:88">SIZEOF_PIXEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="35:21" pos:end="35:90"><expr pos:start="35:21" pos:end="35:89"><call pos:start="35:21" pos:end="35:89"><name pos:start="35:21" pos:end="35:28">call_new</name><argument_list pos:start="35:29" pos:end="35:89">(<argument pos:start="35:30" pos:end="35:33"><expr pos:start="35:30" pos:end="35:33"><name pos:start="35:30" pos:end="35:33">src1</name></expr></argument>, <argument pos:start="35:36" pos:end="35:46"><expr pos:start="35:36" pos:end="35:46"><name pos:start="35:36" pos:end="35:46">has_topleft</name></expr></argument>, <argument pos:start="35:49" pos:end="35:60"><expr pos:start="35:49" pos:end="35:60"><name pos:start="35:49" pos:end="35:60">has_topright</name></expr></argument>, <argument pos:start="35:63" pos:end="35:88"><expr pos:start="35:63" pos:end="35:88"><operator pos:start="35:63" pos:end="35:63">(</operator><name pos:start="35:64" pos:end="35:72">ptrdiff_t</name><operator pos:start="35:73" pos:end="35:73">)</operator><literal type="number" pos:start="35:74" pos:end="35:75">24</literal><operator pos:start="35:76" pos:end="35:76">*</operator><name pos:start="35:77" pos:end="35:88">SIZEOF_PIXEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="37:21" pos:end="39:31"><if pos:start="37:21" pos:end="39:31">if <condition pos:start="37:24" pos:end="37:53">(<expr pos:start="37:25" pos:end="37:52"><call pos:start="37:25" pos:end="37:52"><name pos:start="37:25" pos:end="37:30">memcmp</name><argument_list pos:start="37:31" pos:end="37:52">(<argument pos:start="37:32" pos:end="37:35"><expr pos:start="37:32" pos:end="37:35"><name pos:start="37:32" pos:end="37:35">buf0</name></expr></argument>, <argument pos:start="37:38" pos:end="37:41"><expr pos:start="37:38" pos:end="37:41"><name pos:start="37:38" pos:end="37:41">buf1</name></expr></argument>, <argument pos:start="37:44" pos:end="37:51"><expr pos:start="37:44" pos:end="37:51"><name pos:start="37:44" pos:end="37:51">BUF_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="39:25" pos:end="39:31"><block_content pos:start="39:25" pos:end="39:31">

                        <expr_stmt pos:start="39:25" pos:end="39:31"><expr pos:start="39:25" pos:end="39:30"><call pos:start="39:25" pos:end="39:30"><name pos:start="39:25" pos:end="39:28">fail</name><argument_list pos:start="39:29" pos:end="39:30">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="41:21" pos:end="41:91"><expr pos:start="41:21" pos:end="41:90"><call pos:start="41:21" pos:end="41:90"><name pos:start="41:21" pos:end="41:29">bench_new</name><argument_list pos:start="41:30" pos:end="41:90">(<argument pos:start="41:31" pos:end="41:34"><expr pos:start="41:31" pos:end="41:34"><name pos:start="41:31" pos:end="41:34">src1</name></expr></argument>, <argument pos:start="41:37" pos:end="41:47"><expr pos:start="41:37" pos:end="41:47"><name pos:start="41:37" pos:end="41:47">has_topleft</name></expr></argument>, <argument pos:start="41:50" pos:end="41:61"><expr pos:start="41:50" pos:end="41:61"><name pos:start="41:50" pos:end="41:61">has_topright</name></expr></argument>, <argument pos:start="41:64" pos:end="41:89"><expr pos:start="41:64" pos:end="41:89"><operator pos:start="41:64" pos:end="41:64">(</operator><name pos:start="41:65" pos:end="41:73">ptrdiff_t</name><operator pos:start="41:74" pos:end="41:74">)</operator><literal type="number" pos:start="41:75" pos:end="41:76">24</literal><operator pos:start="41:77" pos:end="41:77">*</operator><name pos:start="41:78" pos:end="41:89">SIZEOF_PIXEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
