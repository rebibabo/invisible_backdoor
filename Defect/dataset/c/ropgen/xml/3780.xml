<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3780.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">acpi_pcihp_device_plug_cb</name><parameter_list pos:start="1:31" pos:end="3:62">(<parameter pos:start="1:32" pos:end="1:58"><decl pos:start="1:32" pos:end="1:58"><type pos:start="1:32" pos:end="1:58"><name pos:start="1:32" pos:end="1:45">HotplugHandler</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:58">hotplug_dev</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:77"><decl pos:start="1:61" pos:end="1:77"><type pos:start="1:61" pos:end="1:77"><name pos:start="1:61" pos:end="1:74">AcpiPciHpState</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:77">s</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:47"><decl pos:start="3:32" pos:end="3:47"><type pos:start="3:32" pos:end="3:47"><name pos:start="3:32" pos:end="3:42">DeviceState</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">dev</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:61"><decl pos:start="3:50" pos:end="3:61"><type pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:54">Error</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier><modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:61">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:66">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">PCIDevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:19">pdev</name> <init pos:start="7:21" pos:end="7:37">= <expr pos:start="7:23" pos:end="7:37"><call pos:start="7:23" pos:end="7:37"><name pos:start="7:23" pos:end="7:32">PCI_DEVICE</name><argument_list pos:start="7:33" pos:end="7:37">(<argument pos:start="7:34" pos:end="7:36"><expr pos:start="7:34" pos:end="7:36"><name pos:start="7:34" pos:end="7:36">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">slot</name> <init pos:start="9:14" pos:end="9:36">= <expr pos:start="9:16" pos:end="9:36"><call pos:start="9:16" pos:end="9:36"><name pos:start="9:16" pos:end="9:23">PCI_SLOT</name><argument_list pos:start="9:24" pos:end="9:36">(<argument pos:start="9:25" pos:end="9:35"><expr pos:start="9:25" pos:end="9:35"><name pos:start="9:25" pos:end="9:35"><name pos:start="9:25" pos:end="9:28">pdev</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:35">devfn</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">bsel</name> <init pos:start="11:14" pos:end="11:45">= <expr pos:start="11:16" pos:end="11:45"><call pos:start="11:16" pos:end="11:45"><name pos:start="11:16" pos:end="11:34">acpi_pcihp_get_bsel</name><argument_list pos:start="11:35" pos:end="11:45">(<argument pos:start="11:36" pos:end="11:44"><expr pos:start="11:36" pos:end="11:44"><name pos:start="11:36" pos:end="11:44"><name pos:start="11:36" pos:end="11:39">pdev</name><operator pos:start="11:40" pos:end="11:41">-&gt;</operator><name pos:start="11:42" pos:end="11:44">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:12">bsel</name> <operator pos:start="13:14" pos:end="13:14">&lt;</operator> <literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>)</condition> <block pos:start="13:19" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:15">

        <expr_stmt pos:start="15:9" pos:end="17:49"><expr pos:start="15:9" pos:end="17:48"><call pos:start="15:9" pos:end="17:48"><name pos:start="15:9" pos:end="15:18">error_setg</name><argument_list pos:start="15:19" pos:end="17:48">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">errp</name></expr></argument>, <argument pos:start="15:26" pos:end="17:47"><expr pos:start="15:26" pos:end="17:47"><literal type="string" pos:start="15:26" pos:end="15:71">"Unsupported bus. Bus doesn't have property '"</literal>

                   <name pos:start="17:20" pos:end="17:39">ACPI_PCIHP_PROP_BSEL</name> <literal type="string" pos:start="17:41" pos:end="17:47">"' set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="29:50">/* Don't send event when device is enabled during qemu machine creation:

     * it is present on boot, no hotplug event is necessary. We do send an

     * event when the device is disabled later. */</comment>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:25">(<expr pos:start="31:9" pos:end="31:24"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:12">dev</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:24">hotplugged</name></name></expr>)</condition> <block pos:start="31:27" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:15">

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:28">acpi_pcihp_pci_status</name><index pos:start="39:29" pos:end="39:34">[<expr pos:start="39:30" pos:end="39:33"><name pos:start="39:30" pos:end="39:33">bsel</name></expr>]</index></name><operator pos:start="39:35" pos:end="39:35">.</operator><name pos:start="39:36" pos:end="39:37">up</name> <operator pos:start="39:39" pos:end="39:40">|=</operator> <operator pos:start="39:42" pos:end="39:42">(</operator><literal type="number" pos:start="39:43" pos:end="39:44">1U</literal> <operator pos:start="39:46" pos:end="39:47">&lt;&lt;</operator> <name pos:start="39:49" pos:end="39:52">slot</name><operator pos:start="39:53" pos:end="39:53">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:66"><expr pos:start="41:5" pos:end="41:65"><call pos:start="41:5" pos:end="41:65"><name pos:start="41:5" pos:end="41:19">acpi_send_event</name><argument_list pos:start="41:20" pos:end="41:65">(<argument pos:start="41:21" pos:end="41:39"><expr pos:start="41:21" pos:end="41:39"><call pos:start="41:21" pos:end="41:39"><name pos:start="41:21" pos:end="41:26">DEVICE</name><argument_list pos:start="41:27" pos:end="41:39">(<argument pos:start="41:28" pos:end="41:38"><expr pos:start="41:28" pos:end="41:38"><name pos:start="41:28" pos:end="41:38">hotplug_dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:42" pos:end="41:64"><expr pos:start="41:42" pos:end="41:64"><name pos:start="41:42" pos:end="41:64">ACPI_PCI_HOTPLUG_STATUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
