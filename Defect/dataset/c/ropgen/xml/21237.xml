<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21237.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">nut_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="179:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">NUTContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">nut</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">bc</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:17">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:7">nut</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:12">avf</name></name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:16">s</name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:63"><expr pos:start="17:5" pos:end="17:62"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:7">nut</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:16">version</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:62"><name pos:start="17:20" pos:end="17:24">FFMAX</name><argument_list pos:start="17:25" pos:end="17:62">(<argument pos:start="17:26" pos:end="17:43"><expr pos:start="17:26" pos:end="17:43"><name pos:start="17:26" pos:end="17:43">NUT_STABLE_VERSION</name></expr></argument>, <argument pos:start="17:46" pos:end="17:61"><expr pos:start="17:46" pos:end="17:61"><literal type="number" pos:start="17:46" pos:end="17:48">3</literal> <operator pos:start="17:48" pos:end="17:48">+</operator> <operator pos:start="17:50" pos:end="17:50">!</operator><operator pos:start="17:51" pos:end="17:51">!</operator><name pos:start="17:52" pos:end="17:61"><name pos:start="17:52" pos:end="17:54">nut</name><operator pos:start="17:55" pos:end="17:56">-&gt;</operator><name pos:start="17:57" pos:end="17:61">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="33:5"><if pos:start="19:5" pos:end="33:5">if <condition pos:start="19:8" pos:end="19:76">(<expr pos:start="19:9" pos:end="19:75"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:11">nut</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:18">flags</name></name> <operator pos:start="19:20" pos:end="19:21">&amp;&amp;</operator> <name pos:start="19:23" pos:end="19:46"><name pos:start="19:23" pos:end="19:23">s</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:46">strict_std_compliance</name></name> <operator pos:start="19:48" pos:end="19:48">&gt;</operator> <name pos:start="19:50" pos:end="19:75">FF_COMPLIANCE_EXPERIMENTAL</name></expr>)</condition> <block pos:start="19:78" pos:end="33:5">{<block_content pos:start="21:9" pos:end="31:36">

        <expr_stmt pos:start="21:9" pos:end="29:29"><expr pos:start="21:9" pos:end="29:28"><call pos:start="21:9" pos:end="29:28"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="29:28">(<argument pos:start="21:16" pos:end="21:16"><expr pos:start="21:16" pos:end="21:16"><name pos:start="21:16" pos:end="21:16">s</name></expr></argument>, <argument pos:start="21:19" pos:end="21:30"><expr pos:start="21:19" pos:end="21:30"><name pos:start="21:19" pos:end="21:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="23:16" pos:end="27:75"><expr pos:start="23:16" pos:end="27:75"><literal type="string" pos:start="23:16" pos:end="23:68">"The additional syncpoint modes require version %d, "</literal>

               <literal type="string" pos:start="25:16" pos:end="25:50">"that is currently not finalized, "</literal>

               <literal type="string" pos:start="27:16" pos:end="27:75">"please set -f_strict experimental in order to enable it.\n"</literal></expr></argument>,

               <argument pos:start="29:16" pos:end="29:27"><expr pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:18">nut</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:27">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:36">return <expr pos:start="31:16" pos:end="31:35"><name pos:start="31:16" pos:end="31:35">AVERROR_EXPERIMENTAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:69"><expr pos:start="37:5" pos:end="37:68"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:7">nut</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:15">stream</name></name>   <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:68"><name pos:start="37:21" pos:end="37:29">av_calloc</name><argument_list pos:start="37:30" pos:end="37:68">(<argument pos:start="37:31" pos:end="37:43"><expr pos:start="37:31" pos:end="37:43"><name pos:start="37:31" pos:end="37:43"><name pos:start="37:31" pos:end="37:31">s</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:43">nb_streams</name></name></expr></argument>,  <argument pos:start="37:47" pos:end="37:67"><expr pos:start="37:47" pos:end="37:67"><sizeof pos:start="37:47" pos:end="37:67">sizeof<argument_list pos:start="37:53" pos:end="37:67">(<argument pos:start="37:54" pos:end="37:65"><expr pos:start="37:54" pos:end="37:65"><operator pos:start="37:54" pos:end="37:54">*</operator><name pos:start="37:55" pos:end="37:65"><name pos:start="37:55" pos:end="37:57">nut</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:65">stream</name></name></expr></argument> )</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:69"><expr pos:start="39:5" pos:end="39:68"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:7">nut</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:16">chapter</name></name>  <operator pos:start="39:19" pos:end="39:19">=</operator> <call pos:start="39:21" pos:end="39:68"><name pos:start="39:21" pos:end="39:29">av_calloc</name><argument_list pos:start="39:30" pos:end="39:68">(<argument pos:start="39:31" pos:end="39:44"><expr pos:start="39:31" pos:end="39:44"><name pos:start="39:31" pos:end="39:44"><name pos:start="39:31" pos:end="39:31">s</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:44">nb_chapters</name></name></expr></argument>, <argument pos:start="39:47" pos:end="39:67"><expr pos:start="39:47" pos:end="39:67"><sizeof pos:start="39:47" pos:end="39:67">sizeof<argument_list pos:start="39:53" pos:end="39:67">(<argument pos:start="39:54" pos:end="39:66"><expr pos:start="39:54" pos:end="39:66"><operator pos:start="39:54" pos:end="39:54">*</operator><name pos:start="39:55" pos:end="39:66"><name pos:start="39:55" pos:end="39:57">nut</name><operator pos:start="39:58" pos:end="39:59">-&gt;</operator><name pos:start="39:60" pos:end="39:66">chapter</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:71"><expr pos:start="41:5" pos:end="43:70"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:7">nut</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:18">time_base</name></name><operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="43:70"><name pos:start="41:21" pos:end="41:29">av_calloc</name><argument_list pos:start="41:30" pos:end="43:70">(<argument pos:start="41:31" pos:end="43:44"><expr pos:start="41:31" pos:end="43:44"><name pos:start="41:31" pos:end="41:43"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:43">nb_streams</name></name> <operator pos:start="41:45" pos:end="41:45">+</operator>

                              <name pos:start="43:31" pos:end="43:44"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:44">nb_chapters</name></name></expr></argument>, <argument pos:start="43:47" pos:end="43:69"><expr pos:start="43:47" pos:end="43:69"><sizeof pos:start="43:47" pos:end="43:69">sizeof<argument_list pos:start="43:53" pos:end="43:69">(<argument pos:start="43:54" pos:end="43:68"><expr pos:start="43:54" pos:end="43:68"><operator pos:start="43:54" pos:end="43:54">*</operator><name pos:start="43:55" pos:end="43:68"><name pos:start="43:55" pos:end="43:57">nut</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:68">time_base</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="55:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="45:57">(<expr pos:start="45:9" pos:end="45:56"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:20"><name pos:start="45:10" pos:end="45:12">nut</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:20">stream</name></name> <operator pos:start="45:22" pos:end="45:23">||</operator> <operator pos:start="45:25" pos:end="45:25">!</operator><name pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:28">nut</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:37">chapter</name></name> <operator pos:start="45:39" pos:end="45:40">||</operator> <operator pos:start="45:42" pos:end="45:42">!</operator><name pos:start="45:43" pos:end="45:56"><name pos:start="45:43" pos:end="45:45">nut</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:56">time_base</name></name></expr>)</condition> <block pos:start="45:59" pos:end="55:5">{<block_content pos:start="47:9" pos:end="53:31">

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><call pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:16">av_freep</name><argument_list pos:start="47:17" pos:end="47:30">(<argument pos:start="47:18" pos:end="47:29"><expr pos:start="47:18" pos:end="47:29"><operator pos:start="47:18" pos:end="47:18">&amp;</operator><name pos:start="47:19" pos:end="47:29"><name pos:start="47:19" pos:end="47:21">nut</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:29">stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:32"><expr pos:start="49:9" pos:end="49:31"><call pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:16">av_freep</name><argument_list pos:start="49:17" pos:end="49:31">(<argument pos:start="49:18" pos:end="49:30"><expr pos:start="49:18" pos:end="49:30"><operator pos:start="49:18" pos:end="49:18">&amp;</operator><name pos:start="49:19" pos:end="49:30"><name pos:start="49:19" pos:end="49:21">nut</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:30">chapter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><call pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:16">av_freep</name><argument_list pos:start="51:17" pos:end="51:33">(<argument pos:start="51:18" pos:end="51:32"><expr pos:start="51:18" pos:end="51:32"><operator pos:start="51:18" pos:end="51:18">&amp;</operator><name pos:start="51:19" pos:end="51:32"><name pos:start="51:19" pos:end="51:21">nut</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:32">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:31">return <expr pos:start="53:16" pos:end="53:30"><call pos:start="53:16" pos:end="53:30"><name pos:start="53:16" pos:end="53:22">AVERROR</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="59:5" pos:end="117:5">for <control pos:start="59:9" pos:end="59:39">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:34"><expr pos:start="59:17" pos:end="59:33"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <name pos:start="59:21" pos:end="59:33"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:33">nb_streams</name></name></expr>;</condition> <incr pos:start="59:36" pos:end="59:38"><expr pos:start="59:36" pos:end="59:38"><name pos:start="59:36" pos:end="59:36">i</name><operator pos:start="59:37" pos:end="59:38">++</operator></expr></incr>)</control> <block pos:start="59:41" pos:end="117:5">{<block_content pos:start="61:9" pos:end="115:64">

        <decl_stmt pos:start="61:9" pos:end="61:37"><decl pos:start="61:9" pos:end="61:36"><type pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:16">AVStream</name> <modifier pos:start="61:18" pos:end="61:18">*</modifier></type><name pos:start="61:19" pos:end="61:20">st</name> <init pos:start="61:22" pos:end="61:36">= <expr pos:start="61:24" pos:end="61:36"><name pos:start="61:24" pos:end="61:36"><name pos:start="61:24" pos:end="61:24">s</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:33">streams</name><index pos:start="61:34" pos:end="61:36">[<expr pos:start="61:35" pos:end="61:35"><name pos:start="61:35" pos:end="61:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:18"><decl pos:start="63:9" pos:end="63:17"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:17">ssize</name></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:29"><decl pos:start="65:9" pos:end="65:28"><type pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:18">AVRational</name></type> <name pos:start="65:20" pos:end="65:28">time_base</name></decl>;</decl_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:84"><expr pos:start="67:9" pos:end="67:83"><call pos:start="67:9" pos:end="67:83"><name pos:start="67:9" pos:end="67:32">ff_parse_specific_params</name><argument_list pos:start="67:33" pos:end="67:83">(<argument pos:start="67:34" pos:end="67:42"><expr pos:start="67:34" pos:end="67:42"><name pos:start="67:34" pos:end="67:42"><name pos:start="67:34" pos:end="67:35">st</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:42">codec</name></name></expr></argument>, <argument pos:start="67:45" pos:end="67:58"><expr pos:start="67:45" pos:end="67:58"><operator pos:start="67:45" pos:end="67:45">&amp;</operator><name pos:start="67:46" pos:end="67:58"><name pos:start="67:46" pos:end="67:54">time_base</name><operator pos:start="67:55" pos:end="67:55">.</operator><name pos:start="67:56" pos:end="67:58">den</name></name></expr></argument>, <argument pos:start="67:61" pos:end="67:66"><expr pos:start="67:61" pos:end="67:66"><operator pos:start="67:61" pos:end="67:61">&amp;</operator><name pos:start="67:62" pos:end="67:66">ssize</name></expr></argument>, <argument pos:start="67:69" pos:end="67:82"><expr pos:start="67:69" pos:end="67:82"><operator pos:start="67:69" pos:end="67:69">&amp;</operator><name pos:start="67:70" pos:end="67:82"><name pos:start="67:70" pos:end="67:78">time_base</name><operator pos:start="67:79" pos:end="67:79">.</operator><name pos:start="67:80" pos:end="67:82">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="71:9" pos:end="79:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:82">(<expr pos:start="71:13" pos:end="71:81"><name pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:14">st</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:21">codec</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:33">codec_type</name></name> <operator pos:start="71:35" pos:end="71:36">==</operator> <name pos:start="71:38" pos:end="71:55">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="71:57" pos:end="71:58">&amp;&amp;</operator> <name pos:start="71:60" pos:end="71:81"><name pos:start="71:60" pos:end="71:61">st</name><operator pos:start="71:62" pos:end="71:63">-&gt;</operator><name pos:start="71:64" pos:end="71:68">codec</name><operator pos:start="71:69" pos:end="71:70">-&gt;</operator><name pos:start="71:71" pos:end="71:81">sample_rate</name></name></expr>)</condition> <block pos:start="71:84" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:65">

            <expr_stmt pos:start="73:13" pos:end="73:65"><expr pos:start="73:13" pos:end="73:64"><name pos:start="73:13" pos:end="73:21">time_base</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <operator pos:start="73:25" pos:end="73:25">(</operator><name pos:start="73:26" pos:end="73:35">AVRational</name><operator pos:start="73:36" pos:end="73:36">)</operator> <block pos:start="73:38" pos:end="73:64">{<expr pos:start="73:39" pos:end="73:39"><literal type="number" pos:start="73:39" pos:end="73:39">1</literal></expr>, <expr pos:start="73:42" pos:end="73:63"><name pos:start="73:42" pos:end="73:63"><name pos:start="73:42" pos:end="73:43">st</name><operator pos:start="73:44" pos:end="73:45">-&gt;</operator><name pos:start="73:46" pos:end="73:50">codec</name><operator pos:start="73:51" pos:end="73:52">-&gt;</operator><name pos:start="73:53" pos:end="73:63">sample_rate</name></name></expr>}</block></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="79:9">else <block pos:start="75:16" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:57">

            <expr_stmt pos:start="77:13" pos:end="77:57"><expr pos:start="77:13" pos:end="77:56"><name pos:start="77:13" pos:end="77:21">time_base</name> <operator pos:start="77:23" pos:end="77:23">=</operator> <call pos:start="77:25" pos:end="77:56"><name pos:start="77:25" pos:end="77:42">ff_choose_timebase</name><argument_list pos:start="77:43" pos:end="77:56">(<argument pos:start="77:44" pos:end="77:44"><expr pos:start="77:44" pos:end="77:44"><name pos:start="77:44" pos:end="77:44">s</name></expr></argument>, <argument pos:start="77:47" pos:end="77:48"><expr pos:start="77:47" pos:end="77:48"><name pos:start="77:47" pos:end="77:48">st</name></expr></argument>, <argument pos:start="77:51" pos:end="77:55"><expr pos:start="77:51" pos:end="77:55"><literal type="number" pos:start="77:51" pos:end="77:55">48000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:66"><expr pos:start="83:9" pos:end="83:65"><call pos:start="83:9" pos:end="83:65"><name pos:start="83:9" pos:end="83:27">avpriv_set_pts_info</name><argument_list pos:start="83:28" pos:end="83:65">(<argument pos:start="83:29" pos:end="83:30"><expr pos:start="83:29" pos:end="83:30"><name pos:start="83:29" pos:end="83:30">st</name></expr></argument>, <argument pos:start="83:33" pos:end="83:34"><expr pos:start="83:33" pos:end="83:34"><literal type="number" pos:start="83:33" pos:end="83:34">64</literal></expr></argument>, <argument pos:start="83:37" pos:end="83:49"><expr pos:start="83:37" pos:end="83:49"><name pos:start="83:37" pos:end="83:49"><name pos:start="83:37" pos:end="83:45">time_base</name><operator pos:start="83:46" pos:end="83:46">.</operator><name pos:start="83:47" pos:end="83:49">num</name></name></expr></argument>, <argument pos:start="83:52" pos:end="83:64"><expr pos:start="83:52" pos:end="83:64"><name pos:start="83:52" pos:end="83:64"><name pos:start="83:52" pos:end="83:60">time_base</name><operator pos:start="83:61" pos:end="83:61">.</operator><name pos:start="83:62" pos:end="83:64">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="87:9" pos:end="93:13">for <control pos:start="87:13" pos:end="87:50">(<init pos:start="87:14" pos:end="87:19"><expr pos:start="87:14" pos:end="87:18"><name pos:start="87:14" pos:end="87:14">j</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr>;</init> <condition pos:start="87:21" pos:end="87:45"><expr pos:start="87:21" pos:end="87:44"><name pos:start="87:21" pos:end="87:21">j</name> <operator pos:start="87:23" pos:end="87:23">&lt;</operator> <name pos:start="87:25" pos:end="87:44"><name pos:start="87:25" pos:end="87:27">nut</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:44">time_base_count</name></name></expr>;</condition> <incr pos:start="87:47" pos:end="87:49"><expr pos:start="87:47" pos:end="87:49"><name pos:start="87:47" pos:end="87:47">j</name><operator pos:start="87:48" pos:end="87:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:13" pos:end="93:13"><block_content pos:start="89:13" pos:end="93:13">

            <if_stmt pos:start="89:13" pos:end="93:13"><if pos:start="89:13" pos:end="93:13">if <condition pos:start="89:16" pos:end="89:76">(<expr pos:start="89:17" pos:end="89:75"><operator pos:start="89:17" pos:end="89:17">!</operator><call pos:start="89:18" pos:end="89:75"><name pos:start="89:18" pos:end="89:23">memcmp</name><argument_list pos:start="89:24" pos:end="89:75">(<argument pos:start="89:25" pos:end="89:34"><expr pos:start="89:25" pos:end="89:34"><operator pos:start="89:25" pos:end="89:25">&amp;</operator><name pos:start="89:26" pos:end="89:34">time_base</name></expr></argument>, <argument pos:start="89:37" pos:end="89:54"><expr pos:start="89:37" pos:end="89:54"><operator pos:start="89:37" pos:end="89:37">&amp;</operator><name pos:start="89:38" pos:end="89:54"><name pos:start="89:38" pos:end="89:40">nut</name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:51">time_base</name><index pos:start="89:52" pos:end="89:54">[<expr pos:start="89:53" pos:end="89:53"><name pos:start="89:53" pos:end="89:53">j</name></expr>]</index></name></expr></argument>, <argument pos:start="89:57" pos:end="89:74"><expr pos:start="89:57" pos:end="89:74"><sizeof pos:start="89:57" pos:end="89:74">sizeof<argument_list pos:start="89:63" pos:end="89:74">(<argument pos:start="89:64" pos:end="89:73"><expr pos:start="89:64" pos:end="89:73"><name pos:start="89:64" pos:end="89:73">AVRational</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:78" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:22">

                <break pos:start="91:17" pos:end="91:22">break;</break>

            </block_content>}</block></if></if_stmt></block_content></block></for>

        <expr_stmt pos:start="95:9" pos:end="95:45"><expr pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:11">nut</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:22">time_base</name><index pos:start="95:23" pos:end="95:25">[<expr pos:start="95:24" pos:end="95:24"><name pos:start="95:24" pos:end="95:24">j</name></expr>]</index></name>        <operator pos:start="95:34" pos:end="95:34">=</operator> <name pos:start="95:36" pos:end="95:44">time_base</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:54"><expr pos:start="97:9" pos:end="97:53"><name pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:11">nut</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:19">stream</name><index pos:start="97:20" pos:end="97:22">[<expr pos:start="97:21" pos:end="97:21"><name pos:start="97:21" pos:end="97:21">i</name></expr>]</index></name><operator pos:start="97:23" pos:end="97:23">.</operator><name pos:start="97:24" pos:end="97:32">time_base</name> <operator pos:start="97:34" pos:end="97:34">=</operator> <operator pos:start="97:36" pos:end="97:36">&amp;</operator><name pos:start="97:37" pos:end="97:53"><name pos:start="97:37" pos:end="97:39">nut</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:50">time_base</name><index pos:start="97:51" pos:end="97:53">[<expr pos:start="97:52" pos:end="97:52"><name pos:start="97:52" pos:end="97:52">j</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="101:35"><if pos:start="99:9" pos:end="101:35">if <condition pos:start="99:12" pos:end="99:38">(<expr pos:start="99:13" pos:end="99:37"><name pos:start="99:13" pos:end="99:13">j</name> <operator pos:start="99:15" pos:end="99:16">==</operator> <name pos:start="99:18" pos:end="99:37"><name pos:start="99:18" pos:end="99:20">nut</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:37">time_base_count</name></name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:35"><block_content pos:start="101:13" pos:end="101:35">

            <expr_stmt pos:start="101:13" pos:end="101:35"><expr pos:start="101:13" pos:end="101:34"><name pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:15">nut</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:32">time_base_count</name></name><operator pos:start="101:33" pos:end="101:34">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="111:46"><if pos:start="105:9" pos:end="107:45">if <condition pos:start="105:12" pos:end="105:59">(<expr pos:start="105:13" pos:end="105:58"><call pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:19">INT64_C</name><argument_list pos:start="105:20" pos:end="105:25">(<argument pos:start="105:21" pos:end="105:24"><expr pos:start="105:21" pos:end="105:24"><literal type="number" pos:start="105:21" pos:end="105:24">1000</literal></expr></argument>)</argument_list></call> <operator pos:start="105:27" pos:end="105:27">*</operator> <name pos:start="105:29" pos:end="105:41"><name pos:start="105:29" pos:end="105:37">time_base</name><operator pos:start="105:38" pos:end="105:38">.</operator><name pos:start="105:39" pos:end="105:41">num</name></name> <operator pos:start="105:43" pos:end="105:44">&gt;=</operator> <name pos:start="105:46" pos:end="105:58"><name pos:start="105:46" pos:end="105:54">time_base</name><operator pos:start="105:55" pos:end="105:55">.</operator><name pos:start="105:56" pos:end="105:58">den</name></name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:45"><block_content pos:start="107:13" pos:end="107:45">

            <expr_stmt pos:start="107:13" pos:end="107:45"><expr pos:start="107:13" pos:end="107:44"><name pos:start="107:13" pos:end="107:26"><name pos:start="107:13" pos:end="107:15">nut</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:23">stream</name><index pos:start="107:24" pos:end="107:26">[<expr pos:start="107:25" pos:end="107:25"><name pos:start="107:25" pos:end="107:25">i</name></expr>]</index></name><operator pos:start="107:27" pos:end="107:27">.</operator><name pos:start="107:28" pos:end="107:40">msb_pts_shift</name> <operator pos:start="107:42" pos:end="107:42">=</operator> <literal type="number" pos:start="107:44" pos:end="107:44">7</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="109:9" pos:end="111:46">else<block type="pseudo" pos:start="111:13" pos:end="111:46"><block_content pos:start="111:13" pos:end="111:46">

            <expr_stmt pos:start="111:13" pos:end="111:46"><expr pos:start="111:13" pos:end="111:45"><name pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:15">nut</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:23">stream</name><index pos:start="111:24" pos:end="111:26">[<expr pos:start="111:25" pos:end="111:25"><name pos:start="111:25" pos:end="111:25">i</name></expr>]</index></name><operator pos:start="111:27" pos:end="111:27">.</operator><name pos:start="111:28" pos:end="111:40">msb_pts_shift</name> <operator pos:start="111:42" pos:end="111:42">=</operator> <literal type="number" pos:start="111:44" pos:end="111:45">14</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="115:64"><expr pos:start="113:9" pos:end="115:63"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:11">nut</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:19">stream</name><index pos:start="113:20" pos:end="113:22">[<expr pos:start="113:21" pos:end="113:21"><name pos:start="113:21" pos:end="113:21">i</name></expr>]</index></name><operator pos:start="113:23" pos:end="113:23">.</operator><name pos:start="113:24" pos:end="113:39">max_pts_distance</name> <operator pos:start="113:41" pos:end="113:41">=</operator>

            <call pos:start="115:13" pos:end="115:47"><name pos:start="115:13" pos:end="115:17">FFMAX</name><argument_list pos:start="115:18" pos:end="115:47">(<argument pos:start="115:19" pos:end="115:31"><expr pos:start="115:19" pos:end="115:31"><name pos:start="115:19" pos:end="115:31"><name pos:start="115:19" pos:end="115:27">time_base</name><operator pos:start="115:28" pos:end="115:28">.</operator><name pos:start="115:29" pos:end="115:31">den</name></name></expr></argument>, <argument pos:start="115:34" pos:end="115:46"><expr pos:start="115:34" pos:end="115:46"><name pos:start="115:34" pos:end="115:46"><name pos:start="115:34" pos:end="115:42">time_base</name><operator pos:start="115:43" pos:end="115:43">.</operator><name pos:start="115:44" pos:end="115:46">num</name></name></expr></argument>)</argument_list></call> <operator pos:start="115:49" pos:end="115:49">/</operator> <name pos:start="115:51" pos:end="115:63"><name pos:start="115:51" pos:end="115:59">time_base</name><operator pos:start="115:60" pos:end="115:60">.</operator><name pos:start="115:61" pos:end="115:63">num</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="121:5" pos:end="143:5">for <control pos:start="121:9" pos:end="121:40">(<init pos:start="121:10" pos:end="121:15"><expr pos:start="121:10" pos:end="121:14"><name pos:start="121:10" pos:end="121:10">i</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <literal type="number" pos:start="121:14" pos:end="121:14">0</literal></expr>;</init> <condition pos:start="121:17" pos:end="121:35"><expr pos:start="121:17" pos:end="121:34"><name pos:start="121:17" pos:end="121:17">i</name> <operator pos:start="121:19" pos:end="121:19">&lt;</operator> <name pos:start="121:21" pos:end="121:34"><name pos:start="121:21" pos:end="121:21">s</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:34">nb_chapters</name></name></expr>;</condition> <incr pos:start="121:37" pos:end="121:39"><expr pos:start="121:37" pos:end="121:39"><name pos:start="121:37" pos:end="121:37">i</name><operator pos:start="121:38" pos:end="121:39">++</operator></expr></incr>)</control> <block pos:start="121:42" pos:end="143:5">{<block_content pos:start="123:9" pos:end="141:35">

        <decl_stmt pos:start="123:9" pos:end="123:39"><decl pos:start="123:9" pos:end="123:38"><type pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:17">AVChapter</name> <modifier pos:start="123:19" pos:end="123:19">*</modifier></type><name pos:start="123:20" pos:end="123:21">ch</name> <init pos:start="123:23" pos:end="123:38">= <expr pos:start="123:25" pos:end="123:38"><name pos:start="123:25" pos:end="123:38"><name pos:start="123:25" pos:end="123:25">s</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:35">chapters</name><index pos:start="123:36" pos:end="123:38">[<expr pos:start="123:37" pos:end="123:37"><name pos:start="123:37" pos:end="123:37">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <for pos:start="127:9" pos:end="131:22">for <control pos:start="127:13" pos:end="127:50">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">j</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:45"><expr pos:start="127:21" pos:end="127:44"><name pos:start="127:21" pos:end="127:21">j</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <name pos:start="127:25" pos:end="127:44"><name pos:start="127:25" pos:end="127:27">nut</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:44">time_base_count</name></name></expr>;</condition> <incr pos:start="127:47" pos:end="127:49"><expr pos:start="127:47" pos:end="127:49"><name pos:start="127:47" pos:end="127:47">j</name><operator pos:start="127:48" pos:end="127:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:13" pos:end="131:22"><block_content pos:start="129:13" pos:end="131:22">

            <if_stmt pos:start="129:13" pos:end="131:22"><if pos:start="129:13" pos:end="131:22">if <condition pos:start="129:16" pos:end="129:80">(<expr pos:start="129:17" pos:end="129:79"><operator pos:start="129:17" pos:end="129:17">!</operator><call pos:start="129:18" pos:end="129:79"><name pos:start="129:18" pos:end="129:23">memcmp</name><argument_list pos:start="129:24" pos:end="129:79">(<argument pos:start="129:25" pos:end="129:38"><expr pos:start="129:25" pos:end="129:38"><operator pos:start="129:25" pos:end="129:25">&amp;</operator><name pos:start="129:26" pos:end="129:38"><name pos:start="129:26" pos:end="129:27">ch</name><operator pos:start="129:28" pos:end="129:29">-&gt;</operator><name pos:start="129:30" pos:end="129:38">time_base</name></name></expr></argument>, <argument pos:start="129:41" pos:end="129:58"><expr pos:start="129:41" pos:end="129:58"><operator pos:start="129:41" pos:end="129:41">&amp;</operator><name pos:start="129:42" pos:end="129:58"><name pos:start="129:42" pos:end="129:44">nut</name><operator pos:start="129:45" pos:end="129:46">-&gt;</operator><name pos:start="129:47" pos:end="129:55">time_base</name><index pos:start="129:56" pos:end="129:58">[<expr pos:start="129:57" pos:end="129:57"><name pos:start="129:57" pos:end="129:57">j</name></expr>]</index></name></expr></argument>, <argument pos:start="129:61" pos:end="129:78"><expr pos:start="129:61" pos:end="129:78"><sizeof pos:start="129:61" pos:end="129:78">sizeof<argument_list pos:start="129:67" pos:end="129:78">(<argument pos:start="129:68" pos:end="129:77"><expr pos:start="129:68" pos:end="129:77"><name pos:start="129:68" pos:end="129:77">AVRational</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:22"><block_content pos:start="131:17" pos:end="131:22">

                <break pos:start="131:17" pos:end="131:22">break;</break></block_content></block></if></if_stmt></block_content></block></for>



        <expr_stmt pos:start="135:9" pos:end="135:50"><expr pos:start="135:9" pos:end="135:49"><name pos:start="135:9" pos:end="135:25"><name pos:start="135:9" pos:end="135:11">nut</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:22">time_base</name><index pos:start="135:23" pos:end="135:25">[<expr pos:start="135:24" pos:end="135:24"><name pos:start="135:24" pos:end="135:24">j</name></expr>]</index></name>         <operator pos:start="135:35" pos:end="135:35">=</operator> <name pos:start="135:37" pos:end="135:49"><name pos:start="135:37" pos:end="135:38">ch</name><operator pos:start="135:39" pos:end="135:40">-&gt;</operator><name pos:start="135:41" pos:end="135:49">time_base</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:55"><expr pos:start="137:9" pos:end="137:54"><name pos:start="137:9" pos:end="137:23"><name pos:start="137:9" pos:end="137:11">nut</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:20">chapter</name><index pos:start="137:21" pos:end="137:23">[<expr pos:start="137:22" pos:end="137:22"><name pos:start="137:22" pos:end="137:22">i</name></expr>]</index></name><operator pos:start="137:24" pos:end="137:24">.</operator><name pos:start="137:25" pos:end="137:33">time_base</name> <operator pos:start="137:35" pos:end="137:35">=</operator> <operator pos:start="137:37" pos:end="137:37">&amp;</operator><name pos:start="137:38" pos:end="137:54"><name pos:start="137:38" pos:end="137:40">nut</name><operator pos:start="137:41" pos:end="137:42">-&gt;</operator><name pos:start="137:43" pos:end="137:51">time_base</name><index pos:start="137:52" pos:end="137:54">[<expr pos:start="137:53" pos:end="137:53"><name pos:start="137:53" pos:end="137:53">j</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="141:35"><if pos:start="139:9" pos:end="141:35">if <condition pos:start="139:12" pos:end="139:38">(<expr pos:start="139:13" pos:end="139:37"><name pos:start="139:13" pos:end="139:13">j</name> <operator pos:start="139:15" pos:end="139:16">==</operator> <name pos:start="139:18" pos:end="139:37"><name pos:start="139:18" pos:end="139:20">nut</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:37">time_base_count</name></name></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:35"><block_content pos:start="141:13" pos:end="141:35">

            <expr_stmt pos:start="141:13" pos:end="141:35"><expr pos:start="141:13" pos:end="141:34"><name pos:start="141:13" pos:end="141:32"><name pos:start="141:13" pos:end="141:15">nut</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:32">time_base_count</name></name><operator pos:start="141:33" pos:end="141:34">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="147:5" pos:end="147:37"><expr pos:start="147:5" pos:end="147:36"><name pos:start="147:5" pos:end="147:21"><name pos:start="147:5" pos:end="147:7">nut</name><operator pos:start="147:8" pos:end="147:9">-&gt;</operator><name pos:start="147:10" pos:end="147:21">max_distance</name></name> <operator pos:start="147:23" pos:end="147:23">=</operator> <name pos:start="147:25" pos:end="147:36">MAX_DISTANCE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:29"><expr pos:start="149:5" pos:end="149:28"><call pos:start="149:5" pos:end="149:28"><name pos:start="149:5" pos:end="149:25">build_elision_headers</name><argument_list pos:start="149:26" pos:end="149:28">(<argument pos:start="149:27" pos:end="149:27"><expr pos:start="149:27" pos:end="149:27"><name pos:start="149:27" pos:end="149:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:24"><expr pos:start="151:5" pos:end="151:23"><call pos:start="151:5" pos:end="151:23"><name pos:start="151:5" pos:end="151:20">build_frame_code</name><argument_list pos:start="151:21" pos:end="151:23">(<argument pos:start="151:22" pos:end="151:22"><expr pos:start="151:22" pos:end="151:22"><name pos:start="151:22" pos:end="151:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:59"><expr pos:start="153:5" pos:end="153:58"><call pos:start="153:5" pos:end="153:58"><name pos:start="153:5" pos:end="153:14">av_assert0</name><argument_list pos:start="153:15" pos:end="153:58">(<argument pos:start="153:16" pos:end="153:57"><expr pos:start="153:16" pos:end="153:57"><name pos:start="153:16" pos:end="153:35"><name pos:start="153:16" pos:end="153:18">nut</name><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:30">frame_code</name><index pos:start="153:31" pos:end="153:35">[<expr pos:start="153:32" pos:end="153:34"><literal type="char" pos:start="153:32" pos:end="153:34">'N'</literal></expr>]</index></name><operator pos:start="153:36" pos:end="153:36">.</operator><name pos:start="153:37" pos:end="153:41">flags</name> <operator pos:start="153:43" pos:end="153:44">==</operator> <name pos:start="153:46" pos:end="153:57">FLAG_INVALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:49"><expr pos:start="157:5" pos:end="157:48"><call pos:start="157:5" pos:end="157:48"><name pos:start="157:5" pos:end="157:14">avio_write</name><argument_list pos:start="157:15" pos:end="157:48">(<argument pos:start="157:16" pos:end="157:17"><expr pos:start="157:16" pos:end="157:17"><name pos:start="157:16" pos:end="157:17">bc</name></expr></argument>, <argument pos:start="157:20" pos:end="157:28"><expr pos:start="157:20" pos:end="157:28"><name pos:start="157:20" pos:end="157:28">ID_STRING</name></expr></argument>, <argument pos:start="157:31" pos:end="157:47"><expr pos:start="157:31" pos:end="157:47"><call pos:start="157:31" pos:end="157:47"><name pos:start="157:31" pos:end="157:36">strlen</name><argument_list pos:start="157:37" pos:end="157:47">(<argument pos:start="157:38" pos:end="157:46"><expr pos:start="157:38" pos:end="157:46"><name pos:start="157:38" pos:end="157:46">ID_STRING</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:19"><expr pos:start="159:5" pos:end="159:18"><call pos:start="159:5" pos:end="159:18"><name pos:start="159:5" pos:end="159:11">avio_w8</name><argument_list pos:start="159:12" pos:end="159:18">(<argument pos:start="159:13" pos:end="159:14"><expr pos:start="159:13" pos:end="159:14"><name pos:start="159:13" pos:end="159:14">bc</name></expr></argument>, <argument pos:start="159:17" pos:end="159:17"><expr pos:start="159:17" pos:end="159:17"><literal type="number" pos:start="159:17" pos:end="159:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="163:5" pos:end="165:19"><if pos:start="163:5" pos:end="165:19">if <condition pos:start="163:8" pos:end="163:41">(<expr pos:start="163:9" pos:end="163:40"><operator pos:start="163:9" pos:end="163:9">(</operator><name pos:start="163:10" pos:end="163:12">ret</name> <operator pos:start="163:14" pos:end="163:14">=</operator> <call pos:start="163:16" pos:end="163:35"><name pos:start="163:16" pos:end="163:28">write_headers</name><argument_list pos:start="163:29" pos:end="163:35">(<argument pos:start="163:30" pos:end="163:30"><expr pos:start="163:30" pos:end="163:30"><name pos:start="163:30" pos:end="163:30">s</name></expr></argument>, <argument pos:start="163:33" pos:end="163:34"><expr pos:start="163:33" pos:end="163:34"><name pos:start="163:33" pos:end="163:34">bc</name></expr></argument>)</argument_list></call><operator pos:start="163:36" pos:end="163:36">)</operator> <operator pos:start="163:38" pos:end="163:38">&lt;</operator> <literal type="number" pos:start="163:40" pos:end="163:40">0</literal></expr>)</condition><block type="pseudo" pos:start="165:9" pos:end="165:19"><block_content pos:start="165:9" pos:end="165:19">

        <return pos:start="165:9" pos:end="165:19">return <expr pos:start="165:16" pos:end="165:18"><name pos:start="165:16" pos:end="165:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="169:5" pos:end="171:33"><if pos:start="169:5" pos:end="171:33">if <condition pos:start="169:8" pos:end="169:33">(<expr pos:start="169:9" pos:end="169:32"><name pos:start="169:9" pos:end="169:28"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:28">avoid_negative_ts</name></name> <operator pos:start="169:30" pos:end="169:30">&lt;</operator> <literal type="number" pos:start="169:32" pos:end="169:32">0</literal></expr>)</condition><block type="pseudo" pos:start="171:9" pos:end="171:33"><block_content pos:start="171:9" pos:end="171:33">

        <expr_stmt pos:start="171:9" pos:end="171:33"><expr pos:start="171:9" pos:end="171:32"><name pos:start="171:9" pos:end="171:28"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:28">avoid_negative_ts</name></name> <operator pos:start="171:30" pos:end="171:30">=</operator> <literal type="number" pos:start="171:32" pos:end="171:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:19"><expr pos:start="175:5" pos:end="175:18"><call pos:start="175:5" pos:end="175:18"><name pos:start="175:5" pos:end="175:14">avio_flush</name><argument_list pos:start="175:15" pos:end="175:18">(<argument pos:start="175:16" pos:end="175:17"><expr pos:start="175:16" pos:end="175:17"><name pos:start="175:16" pos:end="175:17">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="179:5" pos:end="179:13">return <expr pos:start="179:12" pos:end="179:12"><literal type="number" pos:start="179:12" pos:end="179:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
