<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7727.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_cblk</name><parameter_list pos:start="1:23" pos:end="5:58">(<parameter pos:start="1:24" pos:end="1:48"><decl pos:start="1:24" pos:end="1:48"><type pos:start="1:24" pos:end="1:48"><name pos:start="1:24" pos:end="1:45">Jpeg2000DecoderContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:77"><decl pos:start="1:51" pos:end="1:77"><type pos:start="1:51" pos:end="1:77"><name pos:start="1:51" pos:end="1:69">Jpeg2000CodingStyle</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:77">codsty</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:44"><decl pos:start="3:24" pos:end="3:44"><type pos:start="3:24" pos:end="3:44"><name pos:start="3:24" pos:end="3:40">Jpeg2000T1Context</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:44">t1</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:64"><decl pos:start="3:47" pos:end="3:64"><type pos:start="3:47" pos:end="3:64"><name pos:start="3:47" pos:end="3:58">Jpeg2000Cblk</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:64">cblk</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:32"><decl pos:start="5:24" pos:end="5:32"><type pos:start="5:24" pos:end="5:32"><name pos:start="5:24" pos:end="5:26">int</name></type> <name pos:start="5:28" pos:end="5:32">width</name></decl></parameter>, <parameter pos:start="5:35" pos:end="5:44"><decl pos:start="5:35" pos:end="5:44"><type pos:start="5:35" pos:end="5:44"><name pos:start="5:35" pos:end="5:37">int</name></type> <name pos:start="5:39" pos:end="5:44">height</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:57"><decl pos:start="5:47" pos:end="5:57"><type pos:start="5:47" pos:end="5:57"><name pos:start="5:47" pos:end="5:49">int</name></type> <name pos:start="5:51" pos:end="5:57">bandpos</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="111:1">{<block_content pos:start="9:5" pos:end="109:13">

    <decl_stmt pos:start="9:5" pos:end="9:76"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">passno</name> <init pos:start="9:16" pos:end="9:30">= <expr pos:start="9:18" pos:end="9:30"><name pos:start="9:18" pos:end="9:30"><name pos:start="9:18" pos:end="9:21">cblk</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:30">npasses</name></name></expr></init></decl>, <decl pos:start="9:33" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:38">pass_t</name> <init pos:start="9:40" pos:end="9:42">= <expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">2</literal></expr></init></decl>, <decl pos:start="9:45" pos:end="9:72"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:45" pos:end="9:48">bpno</name> <init pos:start="9:50" pos:end="9:72">= <expr pos:start="9:52" pos:end="9:72"><name pos:start="9:52" pos:end="9:68"><name pos:start="9:52" pos:end="9:55">cblk</name><operator pos:start="9:56" pos:end="9:57">-&gt;</operator><name pos:start="9:58" pos:end="9:68">nonzerobits</name></name> <operator pos:start="9:70" pos:end="9:70">-</operator> <literal type="number" pos:start="9:72" pos:end="9:72">1</literal></expr></init></decl>, <decl pos:start="9:75" pos:end="9:75"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:75" pos:end="9:75">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">clnpass_cnt</name> <init pos:start="11:21" pos:end="11:23">= <expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:80"><decl pos:start="13:5" pos:end="13:79"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:25">bpass_csty_symbol</name>           <init pos:start="13:37" pos:end="13:79">= <expr pos:start="13:39" pos:end="13:79"><name pos:start="13:39" pos:end="13:56"><name pos:start="13:39" pos:end="13:44">codsty</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:56">cblk_style</name></name> <operator pos:start="13:58" pos:end="13:58">&amp;</operator> <name pos:start="13:60" pos:end="13:79">JPEG2000_CBLK_BYPASS</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:77"><decl pos:start="15:5" pos:end="15:76"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:35">vert_causal_ctx_csty_symbol</name> <init pos:start="15:37" pos:end="15:76">= <expr pos:start="15:39" pos:end="15:76"><name pos:start="15:39" pos:end="15:56"><name pos:start="15:39" pos:end="15:44">codsty</name><operator pos:start="15:45" pos:end="15:46">-&gt;</operator><name pos:start="15:47" pos:end="15:56">cblk_style</name></name> <operator pos:start="15:58" pos:end="15:58">&amp;</operator> <name pos:start="15:60" pos:end="15:76">JPEG2000_CBLK_VSC</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><call pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:14">av_assert0</name><argument_list pos:start="19:15" pos:end="19:44">(<argument pos:start="19:16" pos:end="19:43"><expr pos:start="19:16" pos:end="19:43"><name pos:start="19:16" pos:end="19:20">width</name>  <operator pos:start="19:23" pos:end="19:24">&lt;=</operator> <name pos:start="19:26" pos:end="19:43">JPEG2000_MAX_CBLKW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><call pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:14">av_assert0</name><argument_list pos:start="21:15" pos:end="21:44">(<argument pos:start="21:16" pos:end="21:43"><expr pos:start="21:16" pos:end="21:43"><name pos:start="21:16" pos:end="21:21">height</name> <operator pos:start="21:23" pos:end="21:24">&lt;=</operator> <name pos:start="21:26" pos:end="21:43">JPEG2000_MAX_CBLKH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="27:59">for <control pos:start="25:9" pos:end="25:32">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">y</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:27"><expr pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:17">y</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:26">height</name></expr>;</condition> <incr pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:29">y</name><operator pos:start="25:30" pos:end="25:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:9" pos:end="27:59"><block_content pos:start="27:9" pos:end="27:59">

        <expr_stmt pos:start="27:9" pos:end="27:59"><expr pos:start="27:9" pos:end="27:58"><call pos:start="27:9" pos:end="27:58"><name pos:start="27:9" pos:end="27:14">memset</name><argument_list pos:start="27:15" pos:end="27:58">(<argument pos:start="27:16" pos:end="27:26"><expr pos:start="27:16" pos:end="27:26"><name pos:start="27:16" pos:end="27:26"><name pos:start="27:16" pos:end="27:17">t1</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:23">data</name><index pos:start="27:24" pos:end="27:26">[<expr pos:start="27:25" pos:end="27:25"><name pos:start="27:25" pos:end="27:25">y</name></expr>]</index></name></expr></argument>, <argument pos:start="27:29" pos:end="27:29"><expr pos:start="27:29" pos:end="27:29"><literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr></argument>, <argument pos:start="27:32" pos:end="27:57"><expr pos:start="27:32" pos:end="27:57"><name pos:start="27:32" pos:end="27:36">width</name> <operator pos:start="27:38" pos:end="27:38">*</operator> <sizeof pos:start="27:40" pos:end="27:57">sizeof<argument_list pos:start="27:46" pos:end="27:57">(<argument pos:start="27:47" pos:end="27:56"><expr pos:start="27:47" pos:end="27:56"><operator pos:start="27:47" pos:end="27:47">*</operator><operator pos:start="27:48" pos:end="27:48">*</operator><name pos:start="27:49" pos:end="27:56"><name pos:start="27:49" pos:end="27:50">t1</name><operator pos:start="27:51" pos:end="27:52">-&gt;</operator><name pos:start="27:53" pos:end="27:56">data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="31:5" pos:end="31:67">/* If code-block contains no compressed data: nothing to do. */</comment>

    <if_stmt pos:start="33:5" pos:end="35:17"><if pos:start="33:5" pos:end="35:17">if <condition pos:start="33:8" pos:end="33:22">(<expr pos:start="33:9" pos:end="33:21"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:21"><name pos:start="33:10" pos:end="33:13">cblk</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:21">length</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:17"><block_content pos:start="35:9" pos:end="35:17">

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="39:5" pos:end="41:67">for <control pos:start="39:9" pos:end="39:36">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">y</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:31"><expr pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:17">y</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:26">height</name> <operator pos:start="39:28" pos:end="39:28">+</operator> <literal type="number" pos:start="39:30" pos:end="39:30">2</literal></expr>;</condition> <incr pos:start="39:33" pos:end="39:35"><expr pos:start="39:33" pos:end="39:35"><name pos:start="39:33" pos:end="39:33">y</name><operator pos:start="39:34" pos:end="39:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="41:9" pos:end="41:67"><block_content pos:start="41:9" pos:end="41:67">

        <expr_stmt pos:start="41:9" pos:end="41:67"><expr pos:start="41:9" pos:end="41:66"><call pos:start="41:9" pos:end="41:66"><name pos:start="41:9" pos:end="41:14">memset</name><argument_list pos:start="41:15" pos:end="41:66">(<argument pos:start="41:16" pos:end="41:27"><expr pos:start="41:16" pos:end="41:27"><name pos:start="41:16" pos:end="41:27"><name pos:start="41:16" pos:end="41:17">t1</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:24">flags</name><index pos:start="41:25" pos:end="41:27">[<expr pos:start="41:26" pos:end="41:26"><name pos:start="41:26" pos:end="41:26">y</name></expr>]</index></name></expr></argument>, <argument pos:start="41:30" pos:end="41:30"><expr pos:start="41:30" pos:end="41:30"><literal type="number" pos:start="41:30" pos:end="41:30">0</literal></expr></argument>, <argument pos:start="41:33" pos:end="41:65"><expr pos:start="41:33" pos:end="41:65"><operator pos:start="41:33" pos:end="41:33">(</operator><name pos:start="41:34" pos:end="41:38">width</name> <operator pos:start="41:40" pos:end="41:40">+</operator> <literal type="number" pos:start="41:42" pos:end="41:42">2</literal><operator pos:start="41:43" pos:end="41:43">)</operator> <operator pos:start="41:45" pos:end="41:45">*</operator> <sizeof pos:start="41:47" pos:end="41:65">sizeof<argument_list pos:start="41:53" pos:end="41:65">(<argument pos:start="41:54" pos:end="41:64"><expr pos:start="41:54" pos:end="41:64"><operator pos:start="41:54" pos:end="41:54">*</operator><operator pos:start="41:55" pos:end="41:55">*</operator><name pos:start="41:56" pos:end="41:64"><name pos:start="41:56" pos:end="41:57">t1</name><operator pos:start="41:58" pos:end="41:59">-&gt;</operator><name pos:start="41:60" pos:end="41:64">flags</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:8">cblk</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:14">data</name><index pos:start="45:15" pos:end="45:28">[<expr pos:start="45:16" pos:end="45:27"><name pos:start="45:16" pos:end="45:27"><name pos:start="45:16" pos:end="45:19">cblk</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:27">length</name></name></expr>]</index></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <literal type="number" pos:start="45:32" pos:end="45:35">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:38"><expr pos:start="47:5" pos:end="47:37"><name pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:8">cblk</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:14">data</name><index pos:start="47:15" pos:end="47:30">[<expr pos:start="47:16" pos:end="47:29"><name pos:start="47:16" pos:end="47:27"><name pos:start="47:16" pos:end="47:19">cblk</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:27">length</name></name><operator pos:start="47:28" pos:end="47:28">+</operator><literal type="number" pos:start="47:29" pos:end="47:29">1</literal></expr>]</index></name> <operator pos:start="47:32" pos:end="47:32">=</operator> <literal type="number" pos:start="47:34" pos:end="47:37">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:41"><expr pos:start="49:5" pos:end="49:40"><call pos:start="49:5" pos:end="49:40"><name pos:start="49:5" pos:end="49:18">ff_mqc_initdec</name><argument_list pos:start="49:19" pos:end="49:40">(<argument pos:start="49:20" pos:end="49:27"><expr pos:start="49:20" pos:end="49:27"><operator pos:start="49:20" pos:end="49:20">&amp;</operator><name pos:start="49:21" pos:end="49:27"><name pos:start="49:21" pos:end="49:22">t1</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:27">mqc</name></name></expr></argument>, <argument pos:start="49:30" pos:end="49:39"><expr pos:start="49:30" pos:end="49:39"><name pos:start="49:30" pos:end="49:39"><name pos:start="49:30" pos:end="49:33">cblk</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:39">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="53:5" pos:end="107:5">while <condition pos:start="53:11" pos:end="53:20">(<expr pos:start="53:12" pos:end="53:19"><name pos:start="53:12" pos:end="53:17">passno</name><operator pos:start="53:18" pos:end="53:19">--</operator></expr>)</condition> <block pos:start="53:22" pos:end="107:5">{<block_content pos:start="55:9" pos:end="105:9">

        <switch pos:start="55:9" pos:end="93:9">switch<condition pos:start="55:15" pos:end="55:22">(<expr pos:start="55:16" pos:end="55:21"><name pos:start="55:16" pos:end="55:21">pass_t</name></expr>)</condition> <block pos:start="55:24" pos:end="93:9">{<block_content pos:start="57:9" pos:end="91:18">

        <case pos:start="57:9" pos:end="57:15">case <expr pos:start="57:14" pos:end="57:14"><literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="63:56"><expr pos:start="59:13" pos:end="63:55"><call pos:start="59:13" pos:end="63:55"><name pos:start="59:13" pos:end="59:26">decode_sigpass</name><argument_list pos:start="59:27" pos:end="63:55">(<argument pos:start="59:28" pos:end="59:29"><expr pos:start="59:28" pos:end="59:29"><name pos:start="59:28" pos:end="59:29">t1</name></expr></argument>, <argument pos:start="59:32" pos:end="59:36"><expr pos:start="59:32" pos:end="59:36"><name pos:start="59:32" pos:end="59:36">width</name></expr></argument>, <argument pos:start="59:39" pos:end="59:44"><expr pos:start="59:39" pos:end="59:44"><name pos:start="59:39" pos:end="59:44">height</name></expr></argument>, <argument pos:start="59:47" pos:end="59:54"><expr pos:start="59:47" pos:end="59:54"><name pos:start="59:47" pos:end="59:50">bpno</name> <operator pos:start="59:52" pos:end="59:52">+</operator> <literal type="number" pos:start="59:54" pos:end="59:54">1</literal></expr></argument>, <argument pos:start="59:57" pos:end="59:63"><expr pos:start="59:57" pos:end="59:63"><name pos:start="59:57" pos:end="59:63">bandpos</name></expr></argument>,

                           <argument pos:start="61:28" pos:end="61:66"><expr pos:start="61:28" pos:end="61:66"><name pos:start="61:28" pos:end="61:44">bpass_csty_symbol</name> <operator pos:start="61:46" pos:end="61:47">&amp;&amp;</operator> <operator pos:start="61:49" pos:end="61:49">(</operator><name pos:start="61:50" pos:end="61:60">clnpass_cnt</name> <operator pos:start="61:62" pos:end="61:63">&gt;=</operator> <literal type="number" pos:start="61:65" pos:end="61:65">4</literal><operator pos:start="61:66" pos:end="61:66">)</operator></expr></argument>,

                           <argument pos:start="63:28" pos:end="63:54"><expr pos:start="63:28" pos:end="63:54"><name pos:start="63:28" pos:end="63:54">vert_causal_ctx_csty_symbol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:15">case <expr pos:start="67:14" pos:end="67:14"><literal type="number" pos:start="67:14" pos:end="67:14">1</literal></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:56"><expr pos:start="69:13" pos:end="69:55"><call pos:start="69:13" pos:end="69:55"><name pos:start="69:13" pos:end="69:26">decode_refpass</name><argument_list pos:start="69:27" pos:end="69:55">(<argument pos:start="69:28" pos:end="69:29"><expr pos:start="69:28" pos:end="69:29"><name pos:start="69:28" pos:end="69:29">t1</name></expr></argument>, <argument pos:start="69:32" pos:end="69:36"><expr pos:start="69:32" pos:end="69:36"><name pos:start="69:32" pos:end="69:36">width</name></expr></argument>, <argument pos:start="69:39" pos:end="69:44"><expr pos:start="69:39" pos:end="69:44"><name pos:start="69:39" pos:end="69:44">height</name></expr></argument>, <argument pos:start="69:47" pos:end="69:54"><expr pos:start="69:47" pos:end="69:54"><name pos:start="69:47" pos:end="69:50">bpno</name> <operator pos:start="69:52" pos:end="69:52">+</operator> <literal type="number" pos:start="69:54" pos:end="69:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="73:53"><if pos:start="71:13" pos:end="73:53">if <condition pos:start="71:16" pos:end="71:54">(<expr pos:start="71:17" pos:end="71:53"><name pos:start="71:17" pos:end="71:33">bpass_csty_symbol</name> <operator pos:start="71:35" pos:end="71:36">&amp;&amp;</operator> <name pos:start="71:38" pos:end="71:48">clnpass_cnt</name> <operator pos:start="71:50" pos:end="71:51">&gt;=</operator> <literal type="number" pos:start="71:53" pos:end="71:53">4</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:53"><block_content pos:start="73:17" pos:end="73:53">

                <expr_stmt pos:start="73:17" pos:end="73:53"><expr pos:start="73:17" pos:end="73:52"><call pos:start="73:17" pos:end="73:52"><name pos:start="73:17" pos:end="73:30">ff_mqc_initdec</name><argument_list pos:start="73:31" pos:end="73:52">(<argument pos:start="73:32" pos:end="73:39"><expr pos:start="73:32" pos:end="73:39"><operator pos:start="73:32" pos:end="73:32">&amp;</operator><name pos:start="73:33" pos:end="73:39"><name pos:start="73:33" pos:end="73:34">t1</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:39">mqc</name></name></expr></argument>, <argument pos:start="73:42" pos:end="73:51"><expr pos:start="73:42" pos:end="73:51"><name pos:start="73:42" pos:end="73:51"><name pos:start="73:42" pos:end="73:45">cblk</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:51">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:15">case <expr pos:start="77:14" pos:end="77:14"><literal type="number" pos:start="77:14" pos:end="77:14">2</literal></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="83:56"><expr pos:start="79:13" pos:end="83:55"><call pos:start="79:13" pos:end="83:55"><name pos:start="79:13" pos:end="79:26">decode_clnpass</name><argument_list pos:start="79:27" pos:end="83:55">(<argument pos:start="79:28" pos:end="79:28"><expr pos:start="79:28" pos:end="79:28"><name pos:start="79:28" pos:end="79:28">s</name></expr></argument>, <argument pos:start="79:31" pos:end="79:32"><expr pos:start="79:31" pos:end="79:32"><name pos:start="79:31" pos:end="79:32">t1</name></expr></argument>, <argument pos:start="79:35" pos:end="79:39"><expr pos:start="79:35" pos:end="79:39"><name pos:start="79:35" pos:end="79:39">width</name></expr></argument>, <argument pos:start="79:42" pos:end="79:47"><expr pos:start="79:42" pos:end="79:47"><name pos:start="79:42" pos:end="79:47">height</name></expr></argument>, <argument pos:start="79:50" pos:end="79:57"><expr pos:start="79:50" pos:end="79:57"><name pos:start="79:50" pos:end="79:53">bpno</name> <operator pos:start="79:55" pos:end="79:55">+</operator> <literal type="number" pos:start="79:57" pos:end="79:57">1</literal></expr></argument>, <argument pos:start="79:60" pos:end="79:66"><expr pos:start="79:60" pos:end="79:66"><name pos:start="79:60" pos:end="79:66">bandpos</name></expr></argument>,

                           <argument pos:start="81:28" pos:end="81:68"><expr pos:start="81:28" pos:end="81:68"><name pos:start="81:28" pos:end="81:45"><name pos:start="81:28" pos:end="81:33">codsty</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:45">cblk_style</name></name> <operator pos:start="81:47" pos:end="81:47">&amp;</operator> <name pos:start="81:49" pos:end="81:68">JPEG2000_CBLK_SEGSYM</name></expr></argument>,

                           <argument pos:start="83:28" pos:end="83:54"><expr pos:start="83:28" pos:end="83:54"><name pos:start="83:28" pos:end="83:54">vert_causal_ctx_csty_symbol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:42"><expr pos:start="85:13" pos:end="85:41"><name pos:start="85:13" pos:end="85:23">clnpass_cnt</name> <operator pos:start="85:25" pos:end="85:25">=</operator> <name pos:start="85:27" pos:end="85:37">clnpass_cnt</name> <operator pos:start="85:39" pos:end="85:39">+</operator> <literal type="number" pos:start="85:41" pos:end="85:41">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="87:13" pos:end="89:53"><if pos:start="87:13" pos:end="89:53">if <condition pos:start="87:16" pos:end="87:54">(<expr pos:start="87:17" pos:end="87:53"><name pos:start="87:17" pos:end="87:33">bpass_csty_symbol</name> <operator pos:start="87:35" pos:end="87:36">&amp;&amp;</operator> <name pos:start="87:38" pos:end="87:48">clnpass_cnt</name> <operator pos:start="87:50" pos:end="87:51">&gt;=</operator> <literal type="number" pos:start="87:53" pos:end="87:53">4</literal></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:53"><block_content pos:start="89:17" pos:end="89:53">

                <expr_stmt pos:start="89:17" pos:end="89:53"><expr pos:start="89:17" pos:end="89:52"><call pos:start="89:17" pos:end="89:52"><name pos:start="89:17" pos:end="89:30">ff_mqc_initdec</name><argument_list pos:start="89:31" pos:end="89:52">(<argument pos:start="89:32" pos:end="89:39"><expr pos:start="89:32" pos:end="89:39"><operator pos:start="89:32" pos:end="89:32">&amp;</operator><name pos:start="89:33" pos:end="89:39"><name pos:start="89:33" pos:end="89:34">t1</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:39">mqc</name></name></expr></argument>, <argument pos:start="89:42" pos:end="89:51"><expr pos:start="89:42" pos:end="89:51"><name pos:start="89:42" pos:end="89:51"><name pos:start="89:42" pos:end="89:45">cblk</name><operator pos:start="89:46" pos:end="89:47">-&gt;</operator><name pos:start="89:48" pos:end="89:51">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="97:9" pos:end="97:17"><expr pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:14">pass_t</name><operator pos:start="97:15" pos:end="97:16">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:24">(<expr pos:start="99:13" pos:end="99:23"><name pos:start="99:13" pos:end="99:18">pass_t</name> <operator pos:start="99:20" pos:end="99:21">==</operator> <literal type="number" pos:start="99:23" pos:end="99:23">3</literal></expr>)</condition> <block pos:start="99:26" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:23">

            <expr_stmt pos:start="101:13" pos:end="101:19"><expr pos:start="101:13" pos:end="101:18"><name pos:start="101:13" pos:end="101:16">bpno</name><operator pos:start="101:17" pos:end="101:18">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:23"><expr pos:start="103:13" pos:end="103:22"><name pos:start="103:13" pos:end="103:18">pass_t</name> <operator pos:start="103:20" pos:end="103:20">=</operator> <literal type="number" pos:start="103:22" pos:end="103:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
