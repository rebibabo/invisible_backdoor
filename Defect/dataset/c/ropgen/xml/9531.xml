<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9531.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">qed_write_header_sync</name><parameter_list pos:start="1:33" pos:end="1:49">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:45">BDRVQEDState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">QEDHeader</name></type> <name pos:start="5:15" pos:end="5:16">le</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:42"><expr pos:start="11:5" pos:end="11:41"><call pos:start="11:5" pos:end="11:41"><name pos:start="11:5" pos:end="11:24">qed_header_cpu_to_le</name><argument_list pos:start="11:25" pos:end="11:41">(<argument pos:start="11:26" pos:end="11:35"><expr pos:start="11:26" pos:end="11:35"><operator pos:start="11:26" pos:end="11:26">&amp;</operator><name pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:35">header</name></name></expr></argument>, <argument pos:start="11:38" pos:end="11:40"><expr pos:start="11:38" pos:end="11:40"><operator pos:start="11:38" pos:end="11:38">&amp;</operator><name pos:start="11:39" pos:end="11:40">le</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:55"><expr pos:start="13:5" pos:end="13:54"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:54"><name pos:start="13:11" pos:end="13:21">bdrv_pwrite</name><argument_list pos:start="13:22" pos:end="13:54">(<argument pos:start="13:23" pos:end="13:33"><expr pos:start="13:23" pos:end="13:33"><name pos:start="13:23" pos:end="13:33"><name pos:start="13:23" pos:end="13:23">s</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:27">bs</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:33">file</name></name></expr></argument>, <argument pos:start="13:36" pos:end="13:36"><expr pos:start="13:36" pos:end="13:36"><literal type="number" pos:start="13:36" pos:end="13:36">0</literal></expr></argument>, <argument pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><operator pos:start="13:39" pos:end="13:39">&amp;</operator><name pos:start="13:40" pos:end="13:41">le</name></expr></argument>, <argument pos:start="13:44" pos:end="13:53"><expr pos:start="13:44" pos:end="13:53"><sizeof pos:start="13:44" pos:end="13:53">sizeof<argument_list pos:start="13:50" pos:end="13:53">(<argument pos:start="13:51" pos:end="13:52"><expr pos:start="13:51" pos:end="13:52"><name pos:start="13:51" pos:end="13:52">le</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:26">(<expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:14">!=</operator> <sizeof pos:start="15:16" pos:end="15:25">sizeof<argument_list pos:start="15:22" pos:end="15:25">(<argument pos:start="15:23" pos:end="15:24"><expr pos:start="15:23" pos:end="15:24"><name pos:start="15:23" pos:end="15:24">le</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="15:28" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="21:5" pos:end="21:13">return <expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
