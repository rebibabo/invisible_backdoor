<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9507.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">disas_dsp_insn</name><parameter_list pos:start="1:26" pos:end="1:72">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:34">CPUState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">env</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><name pos:start="1:42" pos:end="1:53">DisasContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:66">uint32_t</name></type> <name pos:start="1:68" pos:end="1:71">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">acc</name></decl>, <decl pos:start="5:14" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:16">rd0</name></decl>, <decl pos:start="5:19" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:21">rd1</name></decl>, <decl pos:start="5:24" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:27">rdhi</name></decl>, <decl pos:start="5:30" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:30" pos:end="5:33">rdlo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">TCGv</name></type> <name pos:start="7:10" pos:end="7:12">tmp</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:15" pos:end="7:18">tmp2</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="83:5"><if pos:start="11:5" pos:end="83:5">if <condition pos:start="11:8" pos:end="11:42">(<expr pos:start="11:9" pos:end="11:41"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:13">insn</name> <operator pos:start="11:15" pos:end="11:15">&amp;</operator> <literal type="number" pos:start="11:17" pos:end="11:26">0x0ff00f10</literal><operator pos:start="11:27" pos:end="11:27">)</operator> <operator pos:start="11:29" pos:end="11:30">==</operator> <literal type="number" pos:start="11:32" pos:end="11:41">0x0e200010</literal></expr>)</condition> <block pos:start="11:44" pos:end="83:5">{<block_content pos:start="15:9" pos:end="81:17">

        <comment type="block" pos:start="13:9" pos:end="13:54">/* Multiply with Internal Accumulate Format */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:33"><expr pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:11">rd0</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <operator pos:start="15:15" pos:end="15:15">(</operator><name pos:start="15:16" pos:end="15:19">insn</name> <operator pos:start="15:21" pos:end="15:22">&gt;&gt;</operator> <literal type="number" pos:start="15:24" pos:end="15:25">12</literal><operator pos:start="15:26" pos:end="15:26">)</operator> <operator pos:start="15:28" pos:end="15:28">&amp;</operator> <literal type="number" pos:start="15:30" pos:end="15:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:11">rd1</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:18">insn</name> <operator pos:start="17:20" pos:end="17:20">&amp;</operator> <literal type="number" pos:start="17:22" pos:end="17:24">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:11">acc</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <operator pos:start="19:15" pos:end="19:15">(</operator><name pos:start="19:16" pos:end="19:19">insn</name> <operator pos:start="19:21" pos:end="19:22">&gt;&gt;</operator> <literal type="number" pos:start="19:24" pos:end="19:24">5</literal><operator pos:start="19:25" pos:end="19:25">)</operator> <operator pos:start="19:27" pos:end="19:27">&amp;</operator> <literal type="number" pos:start="19:29" pos:end="19:29">7</literal></expr>;</expr_stmt>



        <if_stmt pos:start="23:9" pos:end="25:21"><if pos:start="23:9" pos:end="25:21">if <condition pos:start="23:12" pos:end="23:21">(<expr pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:15">acc</name> <operator pos:start="23:17" pos:end="23:18">!=</operator> <literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:21"><block_content pos:start="25:13" pos:end="25:21">

            <return pos:start="25:13" pos:end="25:21">return <expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:11">tmp</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:30"><name pos:start="29:15" pos:end="29:22">load_reg</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:24"><expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">s</name></expr></argument>, <argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">rd0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:12">tmp2</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:31"><name pos:start="31:16" pos:end="31:23">load_reg</name><argument_list pos:start="31:24" pos:end="31:31">(<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">s</name></expr></argument>, <argument pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:30">rd1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="33:9" pos:end="71:9">switch <condition pos:start="33:16" pos:end="33:35">(<expr pos:start="33:17" pos:end="33:34"><operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:21">insn</name> <operator pos:start="33:23" pos:end="33:24">&gt;&gt;</operator> <literal type="number" pos:start="33:26" pos:end="33:27">16</literal><operator pos:start="33:28" pos:end="33:28">)</operator> <operator pos:start="33:30" pos:end="33:30">&amp;</operator> <literal type="number" pos:start="33:32" pos:end="33:34">0xf</literal></expr>)</condition> <block pos:start="33:37" pos:end="71:9">{<block_content pos:start="35:9" pos:end="69:21">

        <case pos:start="35:9" pos:end="35:17">case <expr pos:start="35:14" pos:end="35:16"><literal type="number" pos:start="35:14" pos:end="35:16">0x0</literal></expr>:</case>					<comment type="block" pos:start="35:57" pos:end="35:65">/* MIA */</comment>

            <expr_stmt pos:start="37:13" pos:end="37:66"><expr pos:start="37:13" pos:end="37:65"><call pos:start="37:13" pos:end="37:65"><name pos:start="37:13" pos:end="37:38">gen_helper_iwmmxt_muladdsl</name><argument_list pos:start="37:39" pos:end="37:65">(<argument pos:start="37:40" pos:end="37:45"><expr pos:start="37:40" pos:end="37:45"><name pos:start="37:40" pos:end="37:45">cpu_M0</name></expr></argument>, <argument pos:start="37:48" pos:end="37:53"><expr pos:start="37:48" pos:end="37:53"><name pos:start="37:48" pos:end="37:53">cpu_M0</name></expr></argument>, <argument pos:start="37:56" pos:end="37:58"><expr pos:start="37:56" pos:end="37:58"><name pos:start="37:56" pos:end="37:58">tmp</name></expr></argument>, <argument pos:start="37:61" pos:end="37:64"><expr pos:start="37:61" pos:end="37:64"><name pos:start="37:61" pos:end="37:64">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:17">case <expr pos:start="41:14" pos:end="41:16"><literal type="number" pos:start="41:14" pos:end="41:16">0x8</literal></expr>:</case>					<comment type="block" pos:start="41:57" pos:end="41:67">/* MIAPH */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:66"><expr pos:start="43:13" pos:end="43:65"><call pos:start="43:13" pos:end="43:65"><name pos:start="43:13" pos:end="43:38">gen_helper_iwmmxt_muladdsw</name><argument_list pos:start="43:39" pos:end="43:65">(<argument pos:start="43:40" pos:end="43:45"><expr pos:start="43:40" pos:end="43:45"><name pos:start="43:40" pos:end="43:45">cpu_M0</name></expr></argument>, <argument pos:start="43:48" pos:end="43:53"><expr pos:start="43:48" pos:end="43:53"><name pos:start="43:48" pos:end="43:53">cpu_M0</name></expr></argument>, <argument pos:start="43:56" pos:end="43:58"><expr pos:start="43:56" pos:end="43:58"><name pos:start="43:56" pos:end="43:58">tmp</name></expr></argument>, <argument pos:start="43:61" pos:end="43:64"><expr pos:start="43:61" pos:end="43:64"><name pos:start="43:61" pos:end="43:64">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <case pos:start="47:9" pos:end="47:17">case <expr pos:start="47:14" pos:end="47:16"><literal type="number" pos:start="47:14" pos:end="47:16">0xc</literal></expr>:</case>					<comment type="block" pos:start="47:57" pos:end="47:67">/* MIABB */</comment>

        <case pos:start="49:9" pos:end="49:17">case <expr pos:start="49:14" pos:end="49:16"><literal type="number" pos:start="49:14" pos:end="49:16">0xd</literal></expr>:</case>					<comment type="block" pos:start="49:57" pos:end="49:67">/* MIABT */</comment>

        <case pos:start="51:9" pos:end="51:17">case <expr pos:start="51:14" pos:end="51:16"><literal type="number" pos:start="51:14" pos:end="51:16">0xe</literal></expr>:</case>					<comment type="block" pos:start="51:57" pos:end="51:67">/* MIATB */</comment>

        <case pos:start="53:9" pos:end="53:17">case <expr pos:start="53:14" pos:end="53:16"><literal type="number" pos:start="53:14" pos:end="53:16">0xf</literal></expr>:</case>					<comment type="block" pos:start="53:57" pos:end="53:67">/* MIATT */</comment>

            <if_stmt pos:start="55:13" pos:end="57:47"><if pos:start="55:13" pos:end="57:47">if <condition pos:start="55:16" pos:end="55:33">(<expr pos:start="55:17" pos:end="55:32"><name pos:start="55:17" pos:end="55:20">insn</name> <operator pos:start="55:22" pos:end="55:22">&amp;</operator> <operator pos:start="55:24" pos:end="55:24">(</operator><literal type="number" pos:start="55:25" pos:end="55:25">1</literal> <operator pos:start="55:27" pos:end="55:28">&lt;&lt;</operator> <literal type="number" pos:start="55:30" pos:end="55:31">16</literal><operator pos:start="55:32" pos:end="55:32">)</operator></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:47"><block_content pos:start="57:17" pos:end="57:47">

                <expr_stmt pos:start="57:17" pos:end="57:47"><expr pos:start="57:17" pos:end="57:46"><call pos:start="57:17" pos:end="57:46"><name pos:start="57:17" pos:end="57:32">tcg_gen_shri_i32</name><argument_list pos:start="57:33" pos:end="57:46">(<argument pos:start="57:34" pos:end="57:36"><expr pos:start="57:34" pos:end="57:36"><name pos:start="57:34" pos:end="57:36">tmp</name></expr></argument>, <argument pos:start="57:39" pos:end="57:41"><expr pos:start="57:39" pos:end="57:41"><name pos:start="57:39" pos:end="57:41">tmp</name></expr></argument>, <argument pos:start="57:44" pos:end="57:45"><expr pos:start="57:44" pos:end="57:45"><literal type="number" pos:start="57:44" pos:end="57:45">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="59:13" pos:end="61:49"><if pos:start="59:13" pos:end="61:49">if <condition pos:start="59:16" pos:end="59:33">(<expr pos:start="59:17" pos:end="59:32"><name pos:start="59:17" pos:end="59:20">insn</name> <operator pos:start="59:22" pos:end="59:22">&amp;</operator> <operator pos:start="59:24" pos:end="59:24">(</operator><literal type="number" pos:start="59:25" pos:end="59:25">1</literal> <operator pos:start="59:27" pos:end="59:28">&lt;&lt;</operator> <literal type="number" pos:start="59:30" pos:end="59:31">17</literal><operator pos:start="59:32" pos:end="59:32">)</operator></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:49"><block_content pos:start="61:17" pos:end="61:49">

                <expr_stmt pos:start="61:17" pos:end="61:49"><expr pos:start="61:17" pos:end="61:48"><call pos:start="61:17" pos:end="61:48"><name pos:start="61:17" pos:end="61:32">tcg_gen_shri_i32</name><argument_list pos:start="61:33" pos:end="61:48">(<argument pos:start="61:34" pos:end="61:37"><expr pos:start="61:34" pos:end="61:37"><name pos:start="61:34" pos:end="61:37">tmp2</name></expr></argument>, <argument pos:start="61:40" pos:end="61:43"><expr pos:start="61:40" pos:end="61:43"><name pos:start="61:40" pos:end="61:43">tmp2</name></expr></argument>, <argument pos:start="61:46" pos:end="61:47"><expr pos:start="61:46" pos:end="61:47"><literal type="number" pos:start="61:46" pos:end="61:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:67"><expr pos:start="63:13" pos:end="63:66"><call pos:start="63:13" pos:end="63:66"><name pos:start="63:13" pos:end="63:39">gen_helper_iwmmxt_muladdswl</name><argument_list pos:start="63:40" pos:end="63:66">(<argument pos:start="63:41" pos:end="63:46"><expr pos:start="63:41" pos:end="63:46"><name pos:start="63:41" pos:end="63:46">cpu_M0</name></expr></argument>, <argument pos:start="63:49" pos:end="63:54"><expr pos:start="63:49" pos:end="63:54"><name pos:start="63:49" pos:end="63:54">cpu_M0</name></expr></argument>, <argument pos:start="63:57" pos:end="63:59"><expr pos:start="63:57" pos:end="63:59"><name pos:start="63:57" pos:end="63:59">tmp</name></expr></argument>, <argument pos:start="63:62" pos:end="63:65"><expr pos:start="63:62" pos:end="63:65"><name pos:start="63:62" pos:end="63:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <default pos:start="67:9" pos:end="67:16">default:</default>

            <return pos:start="69:13" pos:end="69:21">return <expr pos:start="69:20" pos:end="69:20"><literal type="number" pos:start="69:20" pos:end="69:20">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="73:9" pos:end="73:23"><expr pos:start="73:9" pos:end="73:22"><call pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:16">dead_tmp</name><argument_list pos:start="73:17" pos:end="73:22">(<argument pos:start="73:18" pos:end="73:21"><expr pos:start="73:18" pos:end="73:21"><name pos:start="73:18" pos:end="73:21">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:22"><expr pos:start="75:9" pos:end="75:21"><call pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:16">dead_tmp</name><argument_list pos:start="75:17" pos:end="75:21">(<argument pos:start="75:18" pos:end="75:20"><expr pos:start="75:18" pos:end="75:20"><name pos:start="75:18" pos:end="75:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:39"><expr pos:start="79:9" pos:end="79:38"><call pos:start="79:9" pos:end="79:38"><name pos:start="79:9" pos:end="79:33">gen_op_iwmmxt_movq_wRn_M0</name><argument_list pos:start="79:34" pos:end="79:38">(<argument pos:start="79:35" pos:end="79:37"><expr pos:start="79:35" pos:end="79:37"><name pos:start="79:35" pos:end="79:37">acc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:17">return <expr pos:start="81:16" pos:end="81:16"><literal type="number" pos:start="81:16" pos:end="81:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="127:5"><if pos:start="87:5" pos:end="127:5">if <condition pos:start="87:8" pos:end="87:42">(<expr pos:start="87:9" pos:end="87:41"><operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:13">insn</name> <operator pos:start="87:15" pos:end="87:15">&amp;</operator> <literal type="number" pos:start="87:17" pos:end="87:26">0x0fe00ff8</literal><operator pos:start="87:27" pos:end="87:27">)</operator> <operator pos:start="87:29" pos:end="87:30">==</operator> <literal type="number" pos:start="87:32" pos:end="87:41">0x0c400000</literal></expr>)</condition> <block pos:start="87:44" pos:end="127:5">{<block_content pos:start="91:9" pos:end="125:17">

        <comment type="block" pos:start="89:9" pos:end="89:48">/* Internal Accumulator Access Format */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:34"><expr pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:12">rdhi</name> <operator pos:start="91:14" pos:end="91:14">=</operator> <operator pos:start="91:16" pos:end="91:16">(</operator><name pos:start="91:17" pos:end="91:20">insn</name> <operator pos:start="91:22" pos:end="91:23">&gt;&gt;</operator> <literal type="number" pos:start="91:25" pos:end="91:26">16</literal><operator pos:start="91:27" pos:end="91:27">)</operator> <operator pos:start="91:29" pos:end="91:29">&amp;</operator> <literal type="number" pos:start="91:31" pos:end="91:33">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:34"><expr pos:start="93:9" pos:end="93:33"><name pos:start="93:9" pos:end="93:12">rdlo</name> <operator pos:start="93:14" pos:end="93:14">=</operator> <operator pos:start="93:16" pos:end="93:16">(</operator><name pos:start="93:17" pos:end="93:20">insn</name> <operator pos:start="93:22" pos:end="93:23">&gt;&gt;</operator> <literal type="number" pos:start="93:25" pos:end="93:26">12</literal><operator pos:start="93:27" pos:end="93:27">)</operator> <operator pos:start="93:29" pos:end="93:29">&amp;</operator> <literal type="number" pos:start="93:31" pos:end="93:33">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:23"><expr pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:11">acc</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <name pos:start="95:15" pos:end="95:18">insn</name> <operator pos:start="95:20" pos:end="95:20">&amp;</operator> <literal type="number" pos:start="95:22" pos:end="95:22">7</literal></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="101:21"><if pos:start="99:9" pos:end="101:21">if <condition pos:start="99:12" pos:end="99:21">(<expr pos:start="99:13" pos:end="99:20"><name pos:start="99:13" pos:end="99:15">acc</name> <operator pos:start="99:17" pos:end="99:18">!=</operator> <literal type="number" pos:start="99:20" pos:end="99:20">0</literal></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:21"><block_content pos:start="101:13" pos:end="101:21">

            <return pos:start="101:13" pos:end="101:21">return <expr pos:start="101:20" pos:end="101:20"><literal type="number" pos:start="101:20" pos:end="101:20">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="123:9"><if pos:start="105:9" pos:end="117:9">if <condition pos:start="105:12" pos:end="105:33">(<expr pos:start="105:13" pos:end="105:32"><name pos:start="105:13" pos:end="105:16">insn</name> <operator pos:start="105:18" pos:end="105:18">&amp;</operator> <name pos:start="105:20" pos:end="105:32">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="105:35" pos:end="117:9">{<block_content pos:start="107:13" pos:end="115:77">			<comment type="block" pos:start="105:57" pos:end="105:65">/* MRA */</comment>

            <expr_stmt pos:start="107:13" pos:end="107:41"><expr pos:start="107:13" pos:end="107:40"><call pos:start="107:13" pos:end="107:40"><name pos:start="107:13" pos:end="107:27">iwmmxt_load_reg</name><argument_list pos:start="107:28" pos:end="107:40">(<argument pos:start="107:29" pos:end="107:34"><expr pos:start="107:29" pos:end="107:34"><name pos:start="107:29" pos:end="107:34">cpu_V0</name></expr></argument>, <argument pos:start="107:37" pos:end="107:39"><expr pos:start="107:37" pos:end="107:39"><name pos:start="107:37" pos:end="107:39">acc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:55"><expr pos:start="109:13" pos:end="109:54"><call pos:start="109:13" pos:end="109:54"><name pos:start="109:13" pos:end="109:33">tcg_gen_trunc_i64_i32</name><argument_list pos:start="109:34" pos:end="109:54">(<argument pos:start="109:35" pos:end="109:45"><expr pos:start="109:35" pos:end="109:45"><name pos:start="109:35" pos:end="109:45"><name pos:start="109:35" pos:end="109:39">cpu_R</name><index pos:start="109:40" pos:end="109:45">[<expr pos:start="109:41" pos:end="109:44"><name pos:start="109:41" pos:end="109:44">rdlo</name></expr>]</index></name></expr></argument>, <argument pos:start="109:48" pos:end="109:53"><expr pos:start="109:48" pos:end="109:53"><name pos:start="109:48" pos:end="109:53">cpu_V0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:49"><expr pos:start="111:13" pos:end="111:48"><call pos:start="111:13" pos:end="111:48"><name pos:start="111:13" pos:end="111:28">tcg_gen_shri_i64</name><argument_list pos:start="111:29" pos:end="111:48">(<argument pos:start="111:30" pos:end="111:35"><expr pos:start="111:30" pos:end="111:35"><name pos:start="111:30" pos:end="111:35">cpu_V0</name></expr></argument>, <argument pos:start="111:38" pos:end="111:43"><expr pos:start="111:38" pos:end="111:43"><name pos:start="111:38" pos:end="111:43">cpu_V0</name></expr></argument>, <argument pos:start="111:46" pos:end="111:47"><expr pos:start="111:46" pos:end="111:47"><literal type="number" pos:start="111:46" pos:end="111:47">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:55"><expr pos:start="113:13" pos:end="113:54"><call pos:start="113:13" pos:end="113:54"><name pos:start="113:13" pos:end="113:33">tcg_gen_trunc_i64_i32</name><argument_list pos:start="113:34" pos:end="113:54">(<argument pos:start="113:35" pos:end="113:45"><expr pos:start="113:35" pos:end="113:45"><name pos:start="113:35" pos:end="113:45"><name pos:start="113:35" pos:end="113:39">cpu_R</name><index pos:start="113:40" pos:end="113:45">[<expr pos:start="113:41" pos:end="113:44"><name pos:start="113:41" pos:end="113:44">rdhi</name></expr>]</index></name></expr></argument>, <argument pos:start="113:48" pos:end="113:53"><expr pos:start="113:48" pos:end="113:53"><name pos:start="113:48" pos:end="113:53">cpu_V0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:77"><expr pos:start="115:13" pos:end="115:76"><call pos:start="115:13" pos:end="115:76"><name pos:start="115:13" pos:end="115:28">tcg_gen_andi_i32</name><argument_list pos:start="115:29" pos:end="115:76">(<argument pos:start="115:30" pos:end="115:40"><expr pos:start="115:30" pos:end="115:40"><name pos:start="115:30" pos:end="115:40"><name pos:start="115:30" pos:end="115:34">cpu_R</name><index pos:start="115:35" pos:end="115:40">[<expr pos:start="115:36" pos:end="115:39"><name pos:start="115:36" pos:end="115:39">rdhi</name></expr>]</index></name></expr></argument>, <argument pos:start="115:43" pos:end="115:53"><expr pos:start="115:43" pos:end="115:53"><name pos:start="115:43" pos:end="115:53"><name pos:start="115:43" pos:end="115:47">cpu_R</name><index pos:start="115:48" pos:end="115:53">[<expr pos:start="115:49" pos:end="115:52"><name pos:start="115:49" pos:end="115:52">rdhi</name></expr>]</index></name></expr></argument>, <argument pos:start="115:56" pos:end="115:75"><expr pos:start="115:56" pos:end="115:75"><operator pos:start="115:56" pos:end="115:56">(</operator><literal type="number" pos:start="115:57" pos:end="115:57">1</literal> <operator pos:start="115:59" pos:end="115:60">&lt;&lt;</operator> <operator pos:start="115:62" pos:end="115:62">(</operator><literal type="number" pos:start="115:63" pos:end="115:66">40</literal> <operator pos:start="115:66" pos:end="115:66">-</operator> <literal type="number" pos:start="115:68" pos:end="115:69">32</literal><operator pos:start="115:70" pos:end="115:70">)</operator><operator pos:start="115:71" pos:end="115:71">)</operator> <operator pos:start="115:73" pos:end="115:73">-</operator> <literal type="number" pos:start="115:75" pos:end="115:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="117:11" pos:end="123:9">else <block pos:start="117:16" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:42">					<comment type="block" pos:start="117:57" pos:end="117:65">/* MAR */</comment>

            <expr_stmt pos:start="119:13" pos:end="119:69"><expr pos:start="119:13" pos:end="119:68"><call pos:start="119:13" pos:end="119:68"><name pos:start="119:13" pos:end="119:34">tcg_gen_concat_i32_i64</name><argument_list pos:start="119:35" pos:end="119:68">(<argument pos:start="119:36" pos:end="119:41"><expr pos:start="119:36" pos:end="119:41"><name pos:start="119:36" pos:end="119:41">cpu_V0</name></expr></argument>, <argument pos:start="119:44" pos:end="119:54"><expr pos:start="119:44" pos:end="119:54"><name pos:start="119:44" pos:end="119:54"><name pos:start="119:44" pos:end="119:48">cpu_R</name><index pos:start="119:49" pos:end="119:54">[<expr pos:start="119:50" pos:end="119:53"><name pos:start="119:50" pos:end="119:53">rdlo</name></expr>]</index></name></expr></argument>, <argument pos:start="119:57" pos:end="119:67"><expr pos:start="119:57" pos:end="119:67"><name pos:start="119:57" pos:end="119:67"><name pos:start="119:57" pos:end="119:61">cpu_R</name><index pos:start="119:62" pos:end="119:67">[<expr pos:start="119:63" pos:end="119:66"><name pos:start="119:63" pos:end="119:66">rdhi</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:42"><expr pos:start="121:13" pos:end="121:41"><call pos:start="121:13" pos:end="121:41"><name pos:start="121:13" pos:end="121:28">iwmmxt_store_reg</name><argument_list pos:start="121:29" pos:end="121:41">(<argument pos:start="121:30" pos:end="121:35"><expr pos:start="121:30" pos:end="121:35"><name pos:start="121:30" pos:end="121:35">cpu_V0</name></expr></argument>, <argument pos:start="121:38" pos:end="121:40"><expr pos:start="121:38" pos:end="121:40"><name pos:start="121:38" pos:end="121:40">acc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="125:9" pos:end="125:17">return <expr pos:start="125:16" pos:end="125:16"><literal type="number" pos:start="125:16" pos:end="125:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="131:5" pos:end="131:13">return <expr pos:start="131:12" pos:end="131:12"><literal type="number" pos:start="131:12" pos:end="131:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
