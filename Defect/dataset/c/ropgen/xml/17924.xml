<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17924.c" pos:tabs="8"><function pos:start="1:1" pos:end="679:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mpegts_write_pmt</name><parameter_list pos:start="1:28" pos:end="1:71">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:70"><decl pos:start="1:49" pos:end="1:70"><type pos:start="1:49" pos:end="1:70"><name pos:start="1:49" pos:end="1:61">MpegTSService</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:70">service</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="679:1">{<block_content pos:start="5:5" pos:end="677:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">MpegTSWrite</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">ts</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:81"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:32"><name pos:start="7:13" pos:end="7:16">data</name><index pos:start="7:17" pos:end="7:32">[<expr pos:start="7:18" pos:end="7:31"><name pos:start="7:18" pos:end="7:31">SECTION_LENGTH</name></expr>]</index></name></decl>, <decl pos:start="7:35" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:35" pos:end="7:35">*</modifier></type><name pos:start="7:36" pos:end="7:36">q</name></decl>, <decl pos:start="7:39" pos:end="7:54"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:39" pos:end="7:39">*</modifier></type><name pos:start="7:40" pos:end="7:54">desc_length_ptr</name></decl>, <decl pos:start="7:57" pos:end="7:80"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:57" pos:end="7:57">*</modifier></type><name pos:start="7:58" pos:end="7:80">program_info_length_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">val</name></decl>, <decl pos:start="9:14" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:24">stream_type</name></decl>, <decl pos:start="9:27" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:27">i</name></decl>, <decl pos:start="9:30" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:32">err</name> <init pos:start="9:34" pos:end="9:36">= <expr pos:start="9:36" pos:end="9:36"><literal type="number" pos:start="9:36" pos:end="9:36">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:13"><expr pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:5">q</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <name pos:start="13:9" pos:end="13:12">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><call pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:9">put16</name><argument_list pos:start="15:10" pos:end="15:40">(<argument pos:start="15:11" pos:end="15:12"><expr pos:start="15:11" pos:end="15:12"><operator pos:start="15:11" pos:end="15:11">&amp;</operator><name pos:start="15:12" pos:end="15:12">q</name></expr></argument>, <argument pos:start="15:15" pos:end="15:39"><expr pos:start="15:15" pos:end="15:39"><literal type="number" pos:start="15:15" pos:end="15:20">0xe000</literal> <operator pos:start="15:22" pos:end="15:22">|</operator> <name pos:start="15:24" pos:end="15:39"><name pos:start="15:24" pos:end="15:30">service</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:39">pcr_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:27">program_info_length_ptr</name> <operator pos:start="19:29" pos:end="19:29">=</operator> <name pos:start="19:31" pos:end="19:31">q</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:11"><expr pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:5">q</name> <operator pos:start="21:7" pos:end="21:8">+=</operator> <literal type="number" pos:start="21:10" pos:end="21:10">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="21:13" pos:end="21:31">/* patched after */</comment>



    <comment type="block" pos:start="25:5" pos:end="25:31">/* put program info here */</comment>



    <expr_stmt pos:start="29:5" pos:end="29:53"><expr pos:start="29:5" pos:end="29:52"><name pos:start="29:5" pos:end="29:7">val</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <literal type="number" pos:start="29:11" pos:end="29:16">0xf000</literal> <operator pos:start="29:18" pos:end="29:18">|</operator> <operator pos:start="29:20" pos:end="29:20">(</operator><name pos:start="29:21" pos:end="29:21">q</name> <operator pos:start="29:23" pos:end="29:23">-</operator> <name pos:start="29:25" pos:end="29:47">program_info_length_ptr</name> <operator pos:start="29:49" pos:end="29:49">-</operator> <literal type="number" pos:start="29:51" pos:end="29:51">2</literal><operator pos:start="29:52" pos:end="29:52">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:27">program_info_length_ptr</name><index pos:start="31:28" pos:end="31:30">[<expr pos:start="31:29" pos:end="31:29"><literal type="number" pos:start="31:29" pos:end="31:29">0</literal></expr>]</index></name> <operator pos:start="31:32" pos:end="31:32">=</operator> <name pos:start="31:34" pos:end="31:36">val</name> <operator pos:start="31:38" pos:end="31:39">&gt;&gt;</operator> <literal type="number" pos:start="31:41" pos:end="31:41">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:27">program_info_length_ptr</name><index pos:start="33:28" pos:end="33:30">[<expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">1</literal></expr>]</index></name> <operator pos:start="33:32" pos:end="33:32">=</operator> <name pos:start="33:34" pos:end="33:36">val</name></expr>;</expr_stmt>



    <for pos:start="37:5" pos:end="657:5">for <control pos:start="37:9" pos:end="37:39">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:34"><expr pos:start="37:17" pos:end="37:33"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:33">nb_streams</name></name></expr>;</condition> <incr pos:start="37:36" pos:end="37:38"><expr pos:start="37:36" pos:end="37:38"><name pos:start="37:36" pos:end="37:36">i</name><operator pos:start="37:37" pos:end="37:38">++</operator></expr></incr>)</control> <block pos:start="37:41" pos:end="657:5">{<block_content pos:start="39:9" pos:end="655:33">

        <decl_stmt pos:start="39:9" pos:end="39:37"><decl pos:start="39:9" pos:end="39:36"><type pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:16">AVStream</name> <modifier pos:start="39:18" pos:end="39:18">*</modifier></type><name pos:start="39:19" pos:end="39:20">st</name> <init pos:start="39:22" pos:end="39:36">= <expr pos:start="39:24" pos:end="39:36"><name pos:start="39:24" pos:end="39:36"><name pos:start="39:24" pos:end="39:24">s</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:33">streams</name><index pos:start="39:34" pos:end="39:36">[<expr pos:start="39:35" pos:end="39:35"><name pos:start="39:35" pos:end="39:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:49"><decl pos:start="41:9" pos:end="41:48"><type pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:25">MpegTSWriteStream</name> <modifier pos:start="41:27" pos:end="41:27">*</modifier></type><name pos:start="41:28" pos:end="41:32">ts_st</name> <init pos:start="41:34" pos:end="41:48">= <expr pos:start="41:36" pos:end="41:48"><name pos:start="41:36" pos:end="41:48"><name pos:start="41:36" pos:end="41:37">st</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:48">priv_data</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:81"><decl pos:start="43:9" pos:end="43:80"><type pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:25">AVDictionaryEntry</name> <modifier pos:start="43:27" pos:end="43:27">*</modifier></type><name pos:start="43:28" pos:end="43:31">lang</name> <init pos:start="43:33" pos:end="43:80">= <expr pos:start="43:35" pos:end="43:80"><call pos:start="43:35" pos:end="43:80"><name pos:start="43:35" pos:end="43:45">av_dict_get</name><argument_list pos:start="43:46" pos:end="43:80">(<argument pos:start="43:47" pos:end="43:58"><expr pos:start="43:47" pos:end="43:58"><name pos:start="43:47" pos:end="43:58"><name pos:start="43:47" pos:end="43:48">st</name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:58">metadata</name></name></expr></argument>, <argument pos:start="43:61" pos:end="43:70"><expr pos:start="43:61" pos:end="43:70"><literal type="string" pos:start="43:61" pos:end="43:70">"language"</literal></expr></argument>, <argument pos:start="43:73" pos:end="43:76"><expr pos:start="43:73" pos:end="43:76"><name pos:start="43:73" pos:end="43:76">NULL</name></expr></argument>, <argument pos:start="43:79" pos:end="43:79"><expr pos:start="43:79" pos:end="43:79"><literal type="number" pos:start="43:79" pos:end="43:79">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:43">(<expr pos:start="47:13" pos:end="47:42"><name pos:start="47:13" pos:end="47:13">q</name> <operator pos:start="47:15" pos:end="47:15">-</operator> <name pos:start="47:17" pos:end="47:20">data</name> <operator pos:start="47:22" pos:end="47:22">&gt;</operator> <name pos:start="47:24" pos:end="47:37">SECTION_LENGTH</name> <operator pos:start="47:39" pos:end="47:39">-</operator> <literal type="number" pos:start="47:41" pos:end="47:42">32</literal></expr>)</condition> <block pos:start="47:45" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:18">

            <expr_stmt pos:start="49:13" pos:end="49:20"><expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">err</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <literal type="number" pos:start="49:19" pos:end="49:19">1</literal></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="55:9" pos:end="155:9">switch <condition pos:start="55:16" pos:end="55:36">(<expr pos:start="55:17" pos:end="55:35"><name pos:start="55:17" pos:end="55:35"><name pos:start="55:17" pos:end="55:18">st</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:25">codec</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:35">codec_id</name></name></expr>)</condition> <block pos:start="55:38" pos:end="155:9">{<block_content pos:start="57:9" pos:end="153:18">

        <case pos:start="57:9" pos:end="57:36">case <expr pos:start="57:14" pos:end="57:35"><name pos:start="57:14" pos:end="57:35">AV_CODEC_ID_MPEG1VIDEO</name></expr>:</case>

        <case pos:start="59:9" pos:end="59:36">case <expr pos:start="59:14" pos:end="59:35"><name pos:start="59:14" pos:end="59:35">AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:50"><expr pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:23">stream_type</name> <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:49">STREAM_TYPE_VIDEO_MPEG2</name></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:31">case <expr pos:start="65:14" pos:end="65:30"><name pos:start="65:14" pos:end="65:30">AV_CODEC_ID_MPEG4</name></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:50"><expr pos:start="67:13" pos:end="67:49"><name pos:start="67:13" pos:end="67:23">stream_type</name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:49">STREAM_TYPE_VIDEO_MPEG4</name></expr>;</expr_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:30">case <expr pos:start="71:14" pos:end="71:29"><name pos:start="71:14" pos:end="71:29">AV_CODEC_ID_H264</name></expr>:</case>

            <expr_stmt pos:start="73:13" pos:end="73:49"><expr pos:start="73:13" pos:end="73:48"><name pos:start="73:13" pos:end="73:23">stream_type</name> <operator pos:start="73:25" pos:end="73:25">=</operator> <name pos:start="73:27" pos:end="73:48">STREAM_TYPE_VIDEO_H264</name></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:30">case <expr pos:start="77:14" pos:end="77:29"><name pos:start="77:14" pos:end="77:29">AV_CODEC_ID_HEVC</name></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:49"><expr pos:start="79:13" pos:end="79:48"><name pos:start="79:13" pos:end="79:23">stream_type</name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:48">STREAM_TYPE_VIDEO_HEVC</name></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        <case pos:start="83:9" pos:end="83:30">case <expr pos:start="83:14" pos:end="83:29"><name pos:start="83:14" pos:end="83:29">AV_CODEC_ID_CAVS</name></expr>:</case>

            <expr_stmt pos:start="85:13" pos:end="85:49"><expr pos:start="85:13" pos:end="85:48"><name pos:start="85:13" pos:end="85:23">stream_type</name> <operator pos:start="85:25" pos:end="85:25">=</operator> <name pos:start="85:27" pos:end="85:48">STREAM_TYPE_VIDEO_CAVS</name></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <case pos:start="89:9" pos:end="89:31">case <expr pos:start="89:14" pos:end="89:30"><name pos:start="89:14" pos:end="89:30">AV_CODEC_ID_DIRAC</name></expr>:</case>

            <expr_stmt pos:start="91:13" pos:end="91:50"><expr pos:start="91:13" pos:end="91:49"><name pos:start="91:13" pos:end="91:23">stream_type</name> <operator pos:start="91:25" pos:end="91:25">=</operator> <name pos:start="91:27" pos:end="91:49">STREAM_TYPE_VIDEO_DIRAC</name></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:29">case <expr pos:start="95:14" pos:end="95:28"><name pos:start="95:14" pos:end="95:28">AV_CODEC_ID_VC1</name></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:48"><expr pos:start="97:13" pos:end="97:47"><name pos:start="97:13" pos:end="97:23">stream_type</name> <operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:47">STREAM_TYPE_VIDEO_VC1</name></expr>;</expr_stmt>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        <case pos:start="101:9" pos:end="101:29">case <expr pos:start="101:14" pos:end="101:28"><name pos:start="101:14" pos:end="101:28">AV_CODEC_ID_MP2</name></expr>:</case>

        <case pos:start="103:9" pos:end="103:29">case <expr pos:start="103:14" pos:end="103:28"><name pos:start="103:14" pos:end="103:28">AV_CODEC_ID_MP3</name></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="105:50"><expr pos:start="105:13" pos:end="105:49"><name pos:start="105:13" pos:end="105:23">stream_type</name> <operator pos:start="105:25" pos:end="105:25">=</operator> <name pos:start="105:27" pos:end="105:49">STREAM_TYPE_AUDIO_MPEG1</name></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:29">case <expr pos:start="109:14" pos:end="109:28"><name pos:start="109:14" pos:end="109:28">AV_CODEC_ID_AAC</name></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="115:50"><expr pos:start="111:13" pos:end="115:49"><name pos:start="111:13" pos:end="111:23">stream_type</name> <operator pos:start="111:25" pos:end="111:25">=</operator> <ternary pos:start="111:27" pos:end="115:49"><condition pos:start="111:27" pos:end="113:27"><expr pos:start="111:27" pos:end="111:60"><operator pos:start="111:27" pos:end="111:27">(</operator><name pos:start="111:28" pos:end="111:36"><name pos:start="111:28" pos:end="111:29">ts</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:36">flags</name></name> <operator pos:start="111:38" pos:end="111:38">&amp;</operator> <name pos:start="111:40" pos:end="111:59">MPEGTS_FLAG_AAC_LATM</name><operator pos:start="111:60" pos:end="111:60">)</operator></expr>

                          ?</condition><then pos:start="113:29" pos:end="113:54"> <expr pos:start="113:29" pos:end="113:54"><name pos:start="113:29" pos:end="113:54">STREAM_TYPE_AUDIO_AAC_LATM</name></expr>

                          </then><else pos:start="115:27" pos:end="115:49">: <expr pos:start="115:29" pos:end="115:49"><name pos:start="115:29" pos:end="115:49">STREAM_TYPE_AUDIO_AAC</name></expr></else></ternary></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:34">case <expr pos:start="119:14" pos:end="119:33"><name pos:start="119:14" pos:end="119:33">AV_CODEC_ID_AAC_LATM</name></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:53"><expr pos:start="121:13" pos:end="121:52"><name pos:start="121:13" pos:end="121:23">stream_type</name> <operator pos:start="121:25" pos:end="121:25">=</operator> <name pos:start="121:27" pos:end="121:52">STREAM_TYPE_AUDIO_AAC_LATM</name></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        <case pos:start="125:9" pos:end="125:29">case <expr pos:start="125:14" pos:end="125:28"><name pos:start="125:14" pos:end="125:28">AV_CODEC_ID_AC3</name></expr>:</case>

            <expr_stmt pos:start="127:13" pos:end="127:48"><expr pos:start="127:13" pos:end="127:47"><name pos:start="127:13" pos:end="127:23">stream_type</name> <operator pos:start="127:25" pos:end="127:25">=</operator> <name pos:start="127:27" pos:end="127:47">STREAM_TYPE_AUDIO_AC3</name></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:29">case <expr pos:start="131:14" pos:end="131:28"><name pos:start="131:14" pos:end="131:28">AV_CODEC_ID_DTS</name></expr>:</case>

            <expr_stmt pos:start="133:13" pos:end="133:48"><expr pos:start="133:13" pos:end="133:47"><name pos:start="133:13" pos:end="133:23">stream_type</name> <operator pos:start="133:25" pos:end="133:25">=</operator> <name pos:start="133:27" pos:end="133:47">STREAM_TYPE_AUDIO_DTS</name></expr>;</expr_stmt>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <case pos:start="137:9" pos:end="137:32">case <expr pos:start="137:14" pos:end="137:31"><name pos:start="137:14" pos:end="137:31">AV_CODEC_ID_TRUEHD</name></expr>:</case>

            <expr_stmt pos:start="139:13" pos:end="139:51"><expr pos:start="139:13" pos:end="139:50"><name pos:start="139:13" pos:end="139:23">stream_type</name> <operator pos:start="139:25" pos:end="139:25">=</operator> <name pos:start="139:27" pos:end="139:50">STREAM_TYPE_AUDIO_TRUEHD</name></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        <case pos:start="143:9" pos:end="143:30">case <expr pos:start="143:14" pos:end="143:29"><name pos:start="143:14" pos:end="143:29">AV_CODEC_ID_OPUS</name></expr>:</case>

            <expr_stmt pos:start="145:13" pos:end="145:51"><expr pos:start="145:13" pos:end="145:50"><name pos:start="145:13" pos:end="145:23">stream_type</name> <operator pos:start="145:25" pos:end="145:25">=</operator> <name pos:start="145:27" pos:end="145:50">STREAM_TYPE_PRIVATE_DATA</name></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <default pos:start="149:9" pos:end="149:16">default:</default>

            <expr_stmt pos:start="151:13" pos:end="151:51"><expr pos:start="151:13" pos:end="151:50"><name pos:start="151:13" pos:end="151:23">stream_type</name> <operator pos:start="151:25" pos:end="151:25">=</operator> <name pos:start="151:27" pos:end="151:50">STREAM_TYPE_PRIVATE_DATA</name></expr>;</expr_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="159:9" pos:end="159:27"><expr pos:start="159:9" pos:end="159:26"><operator pos:start="159:9" pos:end="159:9">*</operator><name pos:start="159:10" pos:end="159:10">q</name><operator pos:start="159:11" pos:end="159:12">++</operator> <operator pos:start="159:14" pos:end="159:14">=</operator> <name pos:start="159:16" pos:end="159:26">stream_type</name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:39"><expr pos:start="161:9" pos:end="161:38"><call pos:start="161:9" pos:end="161:38"><name pos:start="161:9" pos:end="161:13">put16</name><argument_list pos:start="161:14" pos:end="161:38">(<argument pos:start="161:15" pos:end="161:16"><expr pos:start="161:15" pos:end="161:16"><operator pos:start="161:15" pos:end="161:15">&amp;</operator><name pos:start="161:16" pos:end="161:16">q</name></expr></argument>, <argument pos:start="161:19" pos:end="161:37"><expr pos:start="161:19" pos:end="161:37"><literal type="number" pos:start="161:19" pos:end="161:24">0xe000</literal> <operator pos:start="161:26" pos:end="161:26">|</operator> <name pos:start="161:28" pos:end="161:37"><name pos:start="161:28" pos:end="161:32">ts_st</name><operator pos:start="161:33" pos:end="161:34">-&gt;</operator><name pos:start="161:35" pos:end="161:37">pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:28"><expr pos:start="163:9" pos:end="163:27"><name pos:start="163:9" pos:end="163:23">desc_length_ptr</name> <operator pos:start="163:25" pos:end="163:25">=</operator> <name pos:start="163:27" pos:end="163:27">q</name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:15"><expr pos:start="165:9" pos:end="165:14"><name pos:start="165:9" pos:end="165:9">q</name> <operator pos:start="165:11" pos:end="165:12">+=</operator> <literal type="number" pos:start="165:14" pos:end="165:14">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="165:17" pos:end="165:35">/* patched after */</comment>



        <comment type="block" pos:start="169:9" pos:end="169:45">/* write optional descriptors here */</comment>

        <switch pos:start="171:9" pos:end="647:9">switch <condition pos:start="171:16" pos:end="171:38">(<expr pos:start="171:17" pos:end="171:37"><name pos:start="171:17" pos:end="171:37"><name pos:start="171:17" pos:end="171:18">st</name><operator pos:start="171:19" pos:end="171:20">-&gt;</operator><name pos:start="171:21" pos:end="171:25">codec</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:37">codec_type</name></name></expr>)</condition> <block pos:start="171:40" pos:end="647:9">{<block_content pos:start="173:9" pos:end="645:18">

        <case pos:start="173:9" pos:end="173:32">case <expr pos:start="173:14" pos:end="173:31"><name pos:start="173:14" pos:end="173:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <if_stmt pos:start="175:13" pos:end="183:13"><if pos:start="175:13" pos:end="183:13">if <condition pos:start="175:16" pos:end="175:54">(<expr pos:start="175:17" pos:end="175:53"><name pos:start="175:17" pos:end="175:35"><name pos:start="175:17" pos:end="175:18">st</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:25">codec</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:35">codec_id</name></name><operator pos:start="175:36" pos:end="175:37">==</operator><name pos:start="175:38" pos:end="175:53">AV_CODEC_ID_EAC3</name></expr>)</condition> <block pos:start="175:56" pos:end="183:13">{<block_content pos:start="177:17" pos:end="181:23">

                <expr_stmt pos:start="177:17" pos:end="177:26"><expr pos:start="177:17" pos:end="177:25"><operator pos:start="177:17" pos:end="177:17">*</operator><name pos:start="177:18" pos:end="177:18">q</name><operator pos:start="177:19" pos:end="177:20">++</operator><operator pos:start="177:21" pos:end="177:21">=</operator><literal type="number" pos:start="177:22" pos:end="177:25">0x7a</literal></expr>;</expr_stmt> <comment type="line" pos:start="177:28" pos:end="177:61">// EAC3 descriptor see A038 DVB SI</comment>

                <expr_stmt pos:start="179:17" pos:end="179:23"><expr pos:start="179:17" pos:end="179:22"><operator pos:start="179:17" pos:end="179:17">*</operator><name pos:start="179:18" pos:end="179:18">q</name><operator pos:start="179:19" pos:end="179:20">++</operator><operator pos:start="179:21" pos:end="179:21">=</operator><literal type="number" pos:start="179:22" pos:end="179:22">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="179:25" pos:end="179:54">// 1 byte, all flags sets to 0</comment>

                <expr_stmt pos:start="181:17" pos:end="181:23"><expr pos:start="181:17" pos:end="181:22"><operator pos:start="181:17" pos:end="181:17">*</operator><name pos:start="181:18" pos:end="181:18">q</name><operator pos:start="181:19" pos:end="181:20">++</operator><operator pos:start="181:21" pos:end="181:21">=</operator><literal type="number" pos:start="181:22" pos:end="181:22">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="181:25" pos:end="181:45">// omit all fields...</comment>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="185:13" pos:end="199:13"><if pos:start="185:13" pos:end="199:13">if <condition pos:start="185:16" pos:end="185:55">(<expr pos:start="185:17" pos:end="185:54"><name pos:start="185:17" pos:end="185:35"><name pos:start="185:17" pos:end="185:18">st</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:25">codec</name><operator pos:start="185:26" pos:end="185:27">-&gt;</operator><name pos:start="185:28" pos:end="185:35">codec_id</name></name><operator pos:start="185:36" pos:end="185:37">==</operator><name pos:start="185:38" pos:end="185:54">AV_CODEC_ID_S302M</name></expr>)</condition> <block pos:start="185:57" pos:end="199:13">{<block_content pos:start="187:17" pos:end="197:27">

                <expr_stmt pos:start="187:17" pos:end="187:28"><expr pos:start="187:17" pos:end="187:27"><operator pos:start="187:17" pos:end="187:17">*</operator><name pos:start="187:18" pos:end="187:18">q</name><operator pos:start="187:19" pos:end="187:20">++</operator> <operator pos:start="187:22" pos:end="187:22">=</operator> <literal type="number" pos:start="187:24" pos:end="187:27">0x05</literal></expr>;</expr_stmt> <comment type="block" pos:start="187:30" pos:end="187:64">/* MPEG-2 registration descriptor*/</comment>

                <expr_stmt pos:start="189:17" pos:end="189:25"><expr pos:start="189:17" pos:end="189:24"><operator pos:start="189:17" pos:end="189:17">*</operator><name pos:start="189:18" pos:end="189:18">q</name><operator pos:start="189:19" pos:end="189:20">++</operator> <operator pos:start="189:22" pos:end="189:22">=</operator> <literal type="number" pos:start="189:24" pos:end="189:24">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:27"><expr pos:start="191:17" pos:end="191:26"><operator pos:start="191:17" pos:end="191:17">*</operator><name pos:start="191:18" pos:end="191:18">q</name><operator pos:start="191:19" pos:end="191:20">++</operator> <operator pos:start="191:22" pos:end="191:22">=</operator> <literal type="char" pos:start="191:24" pos:end="191:26">'B'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:27"><expr pos:start="193:17" pos:end="193:26"><operator pos:start="193:17" pos:end="193:17">*</operator><name pos:start="193:18" pos:end="193:18">q</name><operator pos:start="193:19" pos:end="193:20">++</operator> <operator pos:start="193:22" pos:end="193:22">=</operator> <literal type="char" pos:start="193:24" pos:end="193:26">'S'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:27"><expr pos:start="195:17" pos:end="195:26"><operator pos:start="195:17" pos:end="195:17">*</operator><name pos:start="195:18" pos:end="195:18">q</name><operator pos:start="195:19" pos:end="195:20">++</operator> <operator pos:start="195:22" pos:end="195:22">=</operator> <literal type="char" pos:start="195:24" pos:end="195:26">'S'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:27"><expr pos:start="197:17" pos:end="197:26"><operator pos:start="197:17" pos:end="197:17">*</operator><name pos:start="197:18" pos:end="197:18">q</name><operator pos:start="197:19" pos:end="197:20">++</operator> <operator pos:start="197:22" pos:end="197:22">=</operator> <literal type="char" pos:start="197:24" pos:end="197:26">'D'</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="201:13" pos:end="351:13"><if pos:start="201:13" pos:end="351:13">if <condition pos:start="201:16" pos:end="201:54">(<expr pos:start="201:17" pos:end="201:53"><name pos:start="201:17" pos:end="201:35"><name pos:start="201:17" pos:end="201:18">st</name><operator pos:start="201:19" pos:end="201:20">-&gt;</operator><name pos:start="201:21" pos:end="201:25">codec</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:35">codec_id</name></name><operator pos:start="201:36" pos:end="201:37">==</operator><name pos:start="201:38" pos:end="201:53">AV_CODEC_ID_OPUS</name></expr>)</condition> <block pos:start="201:56" pos:end="351:13">{<block_content pos:start="205:17" pos:end="349:17">

                <comment type="block" pos:start="203:17" pos:end="203:84">/* 6 bytes registration descriptor, 4 bytes Opus audio descriptor */</comment>

                <if_stmt pos:start="205:17" pos:end="211:17"><if pos:start="205:17" pos:end="211:17">if <condition pos:start="205:20" pos:end="205:54">(<expr pos:start="205:21" pos:end="205:53"><name pos:start="205:21" pos:end="205:21">q</name> <operator pos:start="205:23" pos:end="205:23">-</operator> <name pos:start="205:25" pos:end="205:28">data</name> <operator pos:start="205:30" pos:end="205:30">&gt;</operator> <name pos:start="205:32" pos:end="205:45">SECTION_LENGTH</name> <operator pos:start="205:47" pos:end="205:47">-</operator> <literal type="number" pos:start="205:49" pos:end="205:51">6</literal> <operator pos:start="205:51" pos:end="205:51">-</operator> <literal type="number" pos:start="205:53" pos:end="205:53">4</literal></expr>)</condition> <block pos:start="205:56" pos:end="211:17">{<block_content pos:start="207:21" pos:end="209:26">

                    <expr_stmt pos:start="207:21" pos:end="207:28"><expr pos:start="207:21" pos:end="207:27"><name pos:start="207:21" pos:end="207:23">err</name> <operator pos:start="207:25" pos:end="207:25">=</operator> <literal type="number" pos:start="207:27" pos:end="207:27">1</literal></expr>;</expr_stmt>

                    <break pos:start="209:21" pos:end="209:26">break;</break>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="215:17" pos:end="215:28"><expr pos:start="215:17" pos:end="215:27"><operator pos:start="215:17" pos:end="215:17">*</operator><name pos:start="215:18" pos:end="215:18">q</name><operator pos:start="215:19" pos:end="215:20">++</operator> <operator pos:start="215:22" pos:end="215:22">=</operator> <literal type="number" pos:start="215:24" pos:end="215:27">0x05</literal></expr>;</expr_stmt> <comment type="block" pos:start="215:30" pos:end="215:64">/* MPEG-2 registration descriptor*/</comment>

                <expr_stmt pos:start="217:17" pos:end="217:25"><expr pos:start="217:17" pos:end="217:24"><operator pos:start="217:17" pos:end="217:17">*</operator><name pos:start="217:18" pos:end="217:18">q</name><operator pos:start="217:19" pos:end="217:20">++</operator> <operator pos:start="217:22" pos:end="217:22">=</operator> <literal type="number" pos:start="217:24" pos:end="217:24">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:27"><expr pos:start="219:17" pos:end="219:26"><operator pos:start="219:17" pos:end="219:17">*</operator><name pos:start="219:18" pos:end="219:18">q</name><operator pos:start="219:19" pos:end="219:20">++</operator> <operator pos:start="219:22" pos:end="219:22">=</operator> <literal type="char" pos:start="219:24" pos:end="219:26">'O'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:27"><expr pos:start="221:17" pos:end="221:26"><operator pos:start="221:17" pos:end="221:17">*</operator><name pos:start="221:18" pos:end="221:18">q</name><operator pos:start="221:19" pos:end="221:20">++</operator> <operator pos:start="221:22" pos:end="221:22">=</operator> <literal type="char" pos:start="221:24" pos:end="221:26">'p'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:27"><expr pos:start="223:17" pos:end="223:26"><operator pos:start="223:17" pos:end="223:17">*</operator><name pos:start="223:18" pos:end="223:18">q</name><operator pos:start="223:19" pos:end="223:20">++</operator> <operator pos:start="223:22" pos:end="223:22">=</operator> <literal type="char" pos:start="223:24" pos:end="223:26">'u'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:27"><expr pos:start="225:17" pos:end="225:26"><operator pos:start="225:17" pos:end="225:17">*</operator><name pos:start="225:18" pos:end="225:18">q</name><operator pos:start="225:19" pos:end="225:20">++</operator> <operator pos:start="225:22" pos:end="225:22">=</operator> <literal type="char" pos:start="225:24" pos:end="225:26">'s'</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="229:17" pos:end="229:28"><expr pos:start="229:17" pos:end="229:27"><operator pos:start="229:17" pos:end="229:17">*</operator><name pos:start="229:18" pos:end="229:18">q</name><operator pos:start="229:19" pos:end="229:20">++</operator> <operator pos:start="229:22" pos:end="229:22">=</operator> <literal type="number" pos:start="229:24" pos:end="229:27">0x7f</literal></expr>;</expr_stmt> <comment type="block" pos:start="229:30" pos:end="229:59">/* DVB extension descriptor */</comment>

                <expr_stmt pos:start="231:17" pos:end="231:25"><expr pos:start="231:17" pos:end="231:24"><operator pos:start="231:17" pos:end="231:17">*</operator><name pos:start="231:18" pos:end="231:18">q</name><operator pos:start="231:19" pos:end="231:20">++</operator> <operator pos:start="231:22" pos:end="231:22">=</operator> <literal type="number" pos:start="231:24" pos:end="231:24">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:28"><expr pos:start="233:17" pos:end="233:27"><operator pos:start="233:17" pos:end="233:17">*</operator><name pos:start="233:18" pos:end="233:18">q</name><operator pos:start="233:19" pos:end="233:20">++</operator> <operator pos:start="233:22" pos:end="233:22">=</operator> <literal type="number" pos:start="233:24" pos:end="233:27">0x80</literal></expr>;</expr_stmt>



                <if_stmt pos:start="237:17" pos:end="349:17"><if pos:start="237:17" pos:end="335:17">if <condition pos:start="237:20" pos:end="237:76">(<expr pos:start="237:21" pos:end="237:75"><name pos:start="237:21" pos:end="237:40"><name pos:start="237:21" pos:end="237:22">st</name><operator pos:start="237:23" pos:end="237:24">-&gt;</operator><name pos:start="237:25" pos:end="237:29">codec</name><operator pos:start="237:30" pos:end="237:31">-&gt;</operator><name pos:start="237:32" pos:end="237:40">extradata</name></name> <operator pos:start="237:42" pos:end="237:43">&amp;&amp;</operator> <name pos:start="237:45" pos:end="237:69"><name pos:start="237:45" pos:end="237:46">st</name><operator pos:start="237:47" pos:end="237:48">-&gt;</operator><name pos:start="237:49" pos:end="237:53">codec</name><operator pos:start="237:54" pos:end="237:55">-&gt;</operator><name pos:start="237:56" pos:end="237:69">extradata_size</name></name> <operator pos:start="237:71" pos:end="237:72">&gt;=</operator> <literal type="number" pos:start="237:74" pos:end="237:75">19</literal></expr>)</condition> <block pos:start="237:78" pos:end="335:17">{<block_content pos:start="239:21" pos:end="333:21">

                    <if_stmt pos:start="239:21" pos:end="333:21"><if pos:start="239:21" pos:end="245:21">if <condition pos:start="239:24" pos:end="239:82">(<expr pos:start="239:25" pos:end="239:81"><name pos:start="239:25" pos:end="239:48"><name pos:start="239:25" pos:end="239:26">st</name><operator pos:start="239:27" pos:end="239:28">-&gt;</operator><name pos:start="239:29" pos:end="239:33">codec</name><operator pos:start="239:34" pos:end="239:35">-&gt;</operator><name pos:start="239:36" pos:end="239:44">extradata</name><index pos:start="239:45" pos:end="239:48">[<expr pos:start="239:46" pos:end="239:47"><literal type="number" pos:start="239:46" pos:end="239:47">18</literal></expr>]</index></name> <operator pos:start="239:50" pos:end="239:51">==</operator> <literal type="number" pos:start="239:53" pos:end="239:53">0</literal> <operator pos:start="239:55" pos:end="239:56">&amp;&amp;</operator> <name pos:start="239:58" pos:end="239:76"><name pos:start="239:58" pos:end="239:59">st</name><operator pos:start="239:60" pos:end="239:61">-&gt;</operator><name pos:start="239:62" pos:end="239:66">codec</name><operator pos:start="239:67" pos:end="239:68">-&gt;</operator><name pos:start="239:69" pos:end="239:76">channels</name></name> <operator pos:start="239:78" pos:end="239:79">&lt;=</operator> <literal type="number" pos:start="239:81" pos:end="239:81">2</literal></expr>)</condition> <block pos:start="239:84" pos:end="245:21">{<block_content pos:start="243:25" pos:end="243:51">

                        <comment type="block" pos:start="241:25" pos:end="241:48">/* RTP mapping family */</comment>

                        <expr_stmt pos:start="243:25" pos:end="243:51"><expr pos:start="243:25" pos:end="243:50"><operator pos:start="243:25" pos:end="243:25">*</operator><name pos:start="243:26" pos:end="243:26">q</name><operator pos:start="243:27" pos:end="243:28">++</operator> <operator pos:start="243:30" pos:end="243:30">=</operator> <name pos:start="243:32" pos:end="243:50"><name pos:start="243:32" pos:end="243:33">st</name><operator pos:start="243:34" pos:end="243:35">-&gt;</operator><name pos:start="243:36" pos:end="243:40">codec</name><operator pos:start="243:41" pos:end="243:42">-&gt;</operator><name pos:start="243:43" pos:end="243:50">channels</name></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="245:23" pos:end="325:21">else if <condition pos:start="245:31" pos:end="247:85">(<expr pos:start="245:32" pos:end="247:84"><name pos:start="245:32" pos:end="245:55"><name pos:start="245:32" pos:end="245:33">st</name><operator pos:start="245:34" pos:end="245:35">-&gt;</operator><name pos:start="245:36" pos:end="245:40">codec</name><operator pos:start="245:41" pos:end="245:42">-&gt;</operator><name pos:start="245:43" pos:end="245:51">extradata</name><index pos:start="245:52" pos:end="245:55">[<expr pos:start="245:53" pos:end="245:54"><literal type="number" pos:start="245:53" pos:end="245:54">18</literal></expr>]</index></name> <operator pos:start="245:57" pos:end="245:58">==</operator> <literal type="number" pos:start="245:60" pos:end="245:60">1</literal> <operator pos:start="245:62" pos:end="245:63">&amp;&amp;</operator> <name pos:start="245:65" pos:end="245:83"><name pos:start="245:65" pos:end="245:66">st</name><operator pos:start="245:67" pos:end="245:68">-&gt;</operator><name pos:start="245:69" pos:end="245:73">codec</name><operator pos:start="245:74" pos:end="245:75">-&gt;</operator><name pos:start="245:76" pos:end="245:83">channels</name></name> <operator pos:start="245:85" pos:end="245:86">&lt;=</operator> <literal type="number" pos:start="245:88" pos:end="245:88">8</literal> <operator pos:start="245:90" pos:end="245:91">&amp;&amp;</operator>

                               <name pos:start="247:32" pos:end="247:56"><name pos:start="247:32" pos:end="247:33">st</name><operator pos:start="247:34" pos:end="247:35">-&gt;</operator><name pos:start="247:36" pos:end="247:40">codec</name><operator pos:start="247:41" pos:end="247:42">-&gt;</operator><name pos:start="247:43" pos:end="247:56">extradata_size</name></name> <operator pos:start="247:58" pos:end="247:59">&gt;=</operator> <literal type="number" pos:start="247:61" pos:end="247:64">21</literal> <operator pos:start="247:64" pos:end="247:64">+</operator> <name pos:start="247:66" pos:end="247:84"><name pos:start="247:66" pos:end="247:67">st</name><operator pos:start="247:68" pos:end="247:69">-&gt;</operator><name pos:start="247:70" pos:end="247:74">codec</name><operator pos:start="247:75" pos:end="247:76">-&gt;</operator><name pos:start="247:77" pos:end="247:84">channels</name></name></expr>)</condition> <block pos:start="247:87" pos:end="325:21">{<block_content pos:start="249:25" pos:end="323:25">

                        <decl_stmt pos:start="249:25" pos:end="253:26"><decl pos:start="249:25" pos:end="253:25"><type pos:start="249:25" pos:end="249:44"><specifier pos:start="249:25" pos:end="249:30">static</specifier> <specifier pos:start="249:32" pos:end="249:36">const</specifier> <name pos:start="249:38" pos:end="249:44">uint8_t</name></type> <name pos:start="249:46" pos:end="249:69"><name pos:start="249:46" pos:end="249:66">coupled_stream_counts</name><index pos:start="249:67" pos:end="249:69">[<expr pos:start="249:68" pos:end="249:68"><literal type="number" pos:start="249:68" pos:end="249:68">9</literal></expr>]</index></name> <init pos:start="249:71" pos:end="253:25">= <expr pos:start="249:73" pos:end="253:25"><block pos:start="249:73" pos:end="253:25">{

                            <expr pos:start="251:29" pos:end="251:29"><literal type="number" pos:start="251:29" pos:end="251:29">1</literal></expr>, <expr pos:start="251:32" pos:end="251:32"><literal type="number" pos:start="251:32" pos:end="251:32">0</literal></expr>, <expr pos:start="251:35" pos:end="251:35"><literal type="number" pos:start="251:35" pos:end="251:35">1</literal></expr>, <expr pos:start="251:38" pos:end="251:38"><literal type="number" pos:start="251:38" pos:end="251:38">1</literal></expr>, <expr pos:start="251:41" pos:end="251:41"><literal type="number" pos:start="251:41" pos:end="251:41">2</literal></expr>, <expr pos:start="251:44" pos:end="251:44"><literal type="number" pos:start="251:44" pos:end="251:44">2</literal></expr>, <expr pos:start="251:47" pos:end="251:47"><literal type="number" pos:start="251:47" pos:end="251:47">2</literal></expr>, <expr pos:start="251:50" pos:end="251:50"><literal type="number" pos:start="251:50" pos:end="251:50">3</literal></expr>, <expr pos:start="251:53" pos:end="251:53"><literal type="number" pos:start="251:53" pos:end="251:53">3</literal></expr>

                        }</block></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="255:25" pos:end="273:26"><decl pos:start="255:25" pos:end="273:25"><type pos:start="255:25" pos:end="255:44"><specifier pos:start="255:25" pos:end="255:30">static</specifier> <specifier pos:start="255:32" pos:end="255:36">const</specifier> <name pos:start="255:38" pos:end="255:44">uint8_t</name></type> <name pos:start="255:46" pos:end="255:64"><name pos:start="255:46" pos:end="255:58">channel_map_a</name><index pos:start="255:59" pos:end="255:61">[<expr pos:start="255:60" pos:end="255:60"><literal type="number" pos:start="255:60" pos:end="255:60">8</literal></expr>]</index><index pos:start="255:62" pos:end="255:64">[<expr pos:start="255:63" pos:end="255:63"><literal type="number" pos:start="255:63" pos:end="255:63">8</literal></expr>]</index></name> <init pos:start="255:66" pos:end="273:25">= <expr pos:start="255:68" pos:end="273:25"><block pos:start="255:68" pos:end="273:25">{

                            <expr pos:start="257:29" pos:end="257:31"><block pos:start="257:29" pos:end="257:31">{<expr pos:start="257:30" pos:end="257:30"><literal type="number" pos:start="257:30" pos:end="257:30">0</literal></expr>}</block></expr>,

                            <expr pos:start="259:29" pos:end="259:34"><block pos:start="259:29" pos:end="259:34">{<expr pos:start="259:30" pos:end="259:30"><literal type="number" pos:start="259:30" pos:end="259:30">0</literal></expr>, <expr pos:start="259:33" pos:end="259:33"><literal type="number" pos:start="259:33" pos:end="259:33">1</literal></expr>}</block></expr>,

                            <expr pos:start="261:29" pos:end="261:37"><block pos:start="261:29" pos:end="261:37">{<expr pos:start="261:30" pos:end="261:30"><literal type="number" pos:start="261:30" pos:end="261:30">0</literal></expr>, <expr pos:start="261:33" pos:end="261:33"><literal type="number" pos:start="261:33" pos:end="261:33">2</literal></expr>, <expr pos:start="261:36" pos:end="261:36"><literal type="number" pos:start="261:36" pos:end="261:36">1</literal></expr>}</block></expr>,

                            <expr pos:start="263:29" pos:end="263:40"><block pos:start="263:29" pos:end="263:40">{<expr pos:start="263:30" pos:end="263:30"><literal type="number" pos:start="263:30" pos:end="263:30">0</literal></expr>, <expr pos:start="263:33" pos:end="263:33"><literal type="number" pos:start="263:33" pos:end="263:33">1</literal></expr>, <expr pos:start="263:36" pos:end="263:36"><literal type="number" pos:start="263:36" pos:end="263:36">2</literal></expr>, <expr pos:start="263:39" pos:end="263:39"><literal type="number" pos:start="263:39" pos:end="263:39">3</literal></expr>}</block></expr>,

                            <expr pos:start="265:29" pos:end="265:43"><block pos:start="265:29" pos:end="265:43">{<expr pos:start="265:30" pos:end="265:30"><literal type="number" pos:start="265:30" pos:end="265:30">0</literal></expr>, <expr pos:start="265:33" pos:end="265:33"><literal type="number" pos:start="265:33" pos:end="265:33">4</literal></expr>, <expr pos:start="265:36" pos:end="265:36"><literal type="number" pos:start="265:36" pos:end="265:36">1</literal></expr>, <expr pos:start="265:39" pos:end="265:39"><literal type="number" pos:start="265:39" pos:end="265:39">2</literal></expr>, <expr pos:start="265:42" pos:end="265:42"><literal type="number" pos:start="265:42" pos:end="265:42">3</literal></expr>}</block></expr>,

                            <expr pos:start="267:29" pos:end="267:46"><block pos:start="267:29" pos:end="267:46">{<expr pos:start="267:30" pos:end="267:30"><literal type="number" pos:start="267:30" pos:end="267:30">0</literal></expr>, <expr pos:start="267:33" pos:end="267:33"><literal type="number" pos:start="267:33" pos:end="267:33">4</literal></expr>, <expr pos:start="267:36" pos:end="267:36"><literal type="number" pos:start="267:36" pos:end="267:36">1</literal></expr>, <expr pos:start="267:39" pos:end="267:39"><literal type="number" pos:start="267:39" pos:end="267:39">2</literal></expr>, <expr pos:start="267:42" pos:end="267:42"><literal type="number" pos:start="267:42" pos:end="267:42">3</literal></expr>, <expr pos:start="267:45" pos:end="267:45"><literal type="number" pos:start="267:45" pos:end="267:45">5</literal></expr>}</block></expr>,

                            <expr pos:start="269:29" pos:end="269:49"><block pos:start="269:29" pos:end="269:49">{<expr pos:start="269:30" pos:end="269:30"><literal type="number" pos:start="269:30" pos:end="269:30">0</literal></expr>, <expr pos:start="269:33" pos:end="269:33"><literal type="number" pos:start="269:33" pos:end="269:33">4</literal></expr>, <expr pos:start="269:36" pos:end="269:36"><literal type="number" pos:start="269:36" pos:end="269:36">1</literal></expr>, <expr pos:start="269:39" pos:end="269:39"><literal type="number" pos:start="269:39" pos:end="269:39">2</literal></expr>, <expr pos:start="269:42" pos:end="269:42"><literal type="number" pos:start="269:42" pos:end="269:42">3</literal></expr>, <expr pos:start="269:45" pos:end="269:45"><literal type="number" pos:start="269:45" pos:end="269:45">5</literal></expr>, <expr pos:start="269:48" pos:end="269:48"><literal type="number" pos:start="269:48" pos:end="269:48">6</literal></expr>}</block></expr>,

                            <expr pos:start="271:29" pos:end="271:52"><block pos:start="271:29" pos:end="271:52">{<expr pos:start="271:30" pos:end="271:30"><literal type="number" pos:start="271:30" pos:end="271:30">0</literal></expr>, <expr pos:start="271:33" pos:end="271:33"><literal type="number" pos:start="271:33" pos:end="271:33">6</literal></expr>, <expr pos:start="271:36" pos:end="271:36"><literal type="number" pos:start="271:36" pos:end="271:36">1</literal></expr>, <expr pos:start="271:39" pos:end="271:39"><literal type="number" pos:start="271:39" pos:end="271:39">2</literal></expr>, <expr pos:start="271:42" pos:end="271:42"><literal type="number" pos:start="271:42" pos:end="271:42">3</literal></expr>, <expr pos:start="271:45" pos:end="271:45"><literal type="number" pos:start="271:45" pos:end="271:45">4</literal></expr>, <expr pos:start="271:48" pos:end="271:48"><literal type="number" pos:start="271:48" pos:end="271:48">5</literal></expr>, <expr pos:start="271:51" pos:end="271:51"><literal type="number" pos:start="271:51" pos:end="271:51">7</literal></expr>}</block></expr>,

                        }</block></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="275:25" pos:end="293:26"><decl pos:start="275:25" pos:end="293:25"><type pos:start="275:25" pos:end="275:44"><specifier pos:start="275:25" pos:end="275:30">static</specifier> <specifier pos:start="275:32" pos:end="275:36">const</specifier> <name pos:start="275:38" pos:end="275:44">uint8_t</name></type> <name pos:start="275:46" pos:end="275:64"><name pos:start="275:46" pos:end="275:58">channel_map_b</name><index pos:start="275:59" pos:end="275:61">[<expr pos:start="275:60" pos:end="275:60"><literal type="number" pos:start="275:60" pos:end="275:60">8</literal></expr>]</index><index pos:start="275:62" pos:end="275:64">[<expr pos:start="275:63" pos:end="275:63"><literal type="number" pos:start="275:63" pos:end="275:63">8</literal></expr>]</index></name> <init pos:start="275:66" pos:end="293:25">= <expr pos:start="275:68" pos:end="293:25"><block pos:start="275:68" pos:end="293:25">{

                            <expr pos:start="277:29" pos:end="277:31"><block pos:start="277:29" pos:end="277:31">{<expr pos:start="277:30" pos:end="277:30"><literal type="number" pos:start="277:30" pos:end="277:30">0</literal></expr>}</block></expr>,

                            <expr pos:start="279:29" pos:end="279:34"><block pos:start="279:29" pos:end="279:34">{<expr pos:start="279:30" pos:end="279:30"><literal type="number" pos:start="279:30" pos:end="279:30">0</literal></expr>, <expr pos:start="279:33" pos:end="279:33"><literal type="number" pos:start="279:33" pos:end="279:33">1</literal></expr>}</block></expr>,

                            <expr pos:start="281:29" pos:end="281:37"><block pos:start="281:29" pos:end="281:37">{<expr pos:start="281:30" pos:end="281:30"><literal type="number" pos:start="281:30" pos:end="281:30">0</literal></expr>, <expr pos:start="281:33" pos:end="281:33"><literal type="number" pos:start="281:33" pos:end="281:33">1</literal></expr>, <expr pos:start="281:36" pos:end="281:36"><literal type="number" pos:start="281:36" pos:end="281:36">2</literal></expr>}</block></expr>,

                            <expr pos:start="283:29" pos:end="283:40"><block pos:start="283:29" pos:end="283:40">{<expr pos:start="283:30" pos:end="283:30"><literal type="number" pos:start="283:30" pos:end="283:30">0</literal></expr>, <expr pos:start="283:33" pos:end="283:33"><literal type="number" pos:start="283:33" pos:end="283:33">1</literal></expr>, <expr pos:start="283:36" pos:end="283:36"><literal type="number" pos:start="283:36" pos:end="283:36">2</literal></expr>, <expr pos:start="283:39" pos:end="283:39"><literal type="number" pos:start="283:39" pos:end="283:39">3</literal></expr>}</block></expr>,

                            <expr pos:start="285:29" pos:end="285:43"><block pos:start="285:29" pos:end="285:43">{<expr pos:start="285:30" pos:end="285:30"><literal type="number" pos:start="285:30" pos:end="285:30">0</literal></expr>, <expr pos:start="285:33" pos:end="285:33"><literal type="number" pos:start="285:33" pos:end="285:33">1</literal></expr>, <expr pos:start="285:36" pos:end="285:36"><literal type="number" pos:start="285:36" pos:end="285:36">2</literal></expr>, <expr pos:start="285:39" pos:end="285:39"><literal type="number" pos:start="285:39" pos:end="285:39">3</literal></expr>, <expr pos:start="285:42" pos:end="285:42"><literal type="number" pos:start="285:42" pos:end="285:42">4</literal></expr>}</block></expr>,

                            <expr pos:start="287:29" pos:end="287:46"><block pos:start="287:29" pos:end="287:46">{<expr pos:start="287:30" pos:end="287:30"><literal type="number" pos:start="287:30" pos:end="287:30">0</literal></expr>, <expr pos:start="287:33" pos:end="287:33"><literal type="number" pos:start="287:33" pos:end="287:33">1</literal></expr>, <expr pos:start="287:36" pos:end="287:36"><literal type="number" pos:start="287:36" pos:end="287:36">2</literal></expr>, <expr pos:start="287:39" pos:end="287:39"><literal type="number" pos:start="287:39" pos:end="287:39">3</literal></expr>, <expr pos:start="287:42" pos:end="287:42"><literal type="number" pos:start="287:42" pos:end="287:42">4</literal></expr>, <expr pos:start="287:45" pos:end="287:45"><literal type="number" pos:start="287:45" pos:end="287:45">5</literal></expr>}</block></expr>,

                            <expr pos:start="289:29" pos:end="289:49"><block pos:start="289:29" pos:end="289:49">{<expr pos:start="289:30" pos:end="289:30"><literal type="number" pos:start="289:30" pos:end="289:30">0</literal></expr>, <expr pos:start="289:33" pos:end="289:33"><literal type="number" pos:start="289:33" pos:end="289:33">1</literal></expr>, <expr pos:start="289:36" pos:end="289:36"><literal type="number" pos:start="289:36" pos:end="289:36">2</literal></expr>, <expr pos:start="289:39" pos:end="289:39"><literal type="number" pos:start="289:39" pos:end="289:39">3</literal></expr>, <expr pos:start="289:42" pos:end="289:42"><literal type="number" pos:start="289:42" pos:end="289:42">4</literal></expr>, <expr pos:start="289:45" pos:end="289:45"><literal type="number" pos:start="289:45" pos:end="289:45">5</literal></expr>, <expr pos:start="289:48" pos:end="289:48"><literal type="number" pos:start="289:48" pos:end="289:48">6</literal></expr>}</block></expr>,

                            <expr pos:start="291:29" pos:end="291:52"><block pos:start="291:29" pos:end="291:52">{<expr pos:start="291:30" pos:end="291:30"><literal type="number" pos:start="291:30" pos:end="291:30">0</literal></expr>, <expr pos:start="291:33" pos:end="291:33"><literal type="number" pos:start="291:33" pos:end="291:33">1</literal></expr>, <expr pos:start="291:36" pos:end="291:36"><literal type="number" pos:start="291:36" pos:end="291:36">2</literal></expr>, <expr pos:start="291:39" pos:end="291:39"><literal type="number" pos:start="291:39" pos:end="291:39">3</literal></expr>, <expr pos:start="291:42" pos:end="291:42"><literal type="number" pos:start="291:42" pos:end="291:42">4</literal></expr>, <expr pos:start="291:45" pos:end="291:45"><literal type="number" pos:start="291:45" pos:end="291:45">5</literal></expr>, <expr pos:start="291:48" pos:end="291:48"><literal type="number" pos:start="291:48" pos:end="291:48">6</literal></expr>, <expr pos:start="291:51" pos:end="291:51"><literal type="number" pos:start="291:51" pos:end="291:51">7</literal></expr>}</block></expr>,

                        }</block></expr></init></decl>;</decl_stmt>

                        <comment type="block" pos:start="295:25" pos:end="295:51">/* Vorbis mapping family */</comment>



                        <if_stmt pos:start="299:25" pos:end="323:25"><if pos:start="299:25" pos:end="307:25">if <condition pos:start="299:28" pos:end="303:124">(<expr pos:start="299:29" pos:end="303:123"><name pos:start="299:29" pos:end="299:52"><name pos:start="299:29" pos:end="299:30">st</name><operator pos:start="299:31" pos:end="299:32">-&gt;</operator><name pos:start="299:33" pos:end="299:37">codec</name><operator pos:start="299:38" pos:end="299:39">-&gt;</operator><name pos:start="299:40" pos:end="299:48">extradata</name><index pos:start="299:49" pos:end="299:52">[<expr pos:start="299:50" pos:end="299:51"><literal type="number" pos:start="299:50" pos:end="299:51">19</literal></expr>]</index></name> <operator pos:start="299:54" pos:end="299:55">==</operator> <name pos:start="299:57" pos:end="299:75"><name pos:start="299:57" pos:end="299:58">st</name><operator pos:start="299:59" pos:end="299:60">-&gt;</operator><name pos:start="299:61" pos:end="299:65">codec</name><operator pos:start="299:66" pos:end="299:67">-&gt;</operator><name pos:start="299:68" pos:end="299:75">channels</name></name> <operator pos:start="299:77" pos:end="299:77">-</operator> <name pos:start="299:79" pos:end="299:120"><name pos:start="299:79" pos:end="299:99">coupled_stream_counts</name><index pos:start="299:100" pos:end="299:120">[<expr pos:start="299:101" pos:end="299:119"><name pos:start="299:101" pos:end="299:119"><name pos:start="299:101" pos:end="299:102">st</name><operator pos:start="299:103" pos:end="299:104">-&gt;</operator><name pos:start="299:105" pos:end="299:109">codec</name><operator pos:start="299:110" pos:end="299:111">-&gt;</operator><name pos:start="299:112" pos:end="299:119">channels</name></name></expr>]</index></name> <operator pos:start="299:122" pos:end="299:123">&amp;&amp;</operator>

                            <name pos:start="301:29" pos:end="301:52"><name pos:start="301:29" pos:end="301:30">st</name><operator pos:start="301:31" pos:end="301:32">-&gt;</operator><name pos:start="301:33" pos:end="301:37">codec</name><operator pos:start="301:38" pos:end="301:39">-&gt;</operator><name pos:start="301:40" pos:end="301:48">extradata</name><index pos:start="301:49" pos:end="301:52">[<expr pos:start="301:50" pos:end="301:51"><literal type="number" pos:start="301:50" pos:end="301:51">20</literal></expr>]</index></name> <operator pos:start="301:54" pos:end="301:55">==</operator> <name pos:start="301:57" pos:end="301:98"><name pos:start="301:57" pos:end="301:77">coupled_stream_counts</name><index pos:start="301:78" pos:end="301:98">[<expr pos:start="301:79" pos:end="301:97"><name pos:start="301:79" pos:end="301:97"><name pos:start="301:79" pos:end="301:80">st</name><operator pos:start="301:81" pos:end="301:82">-&gt;</operator><name pos:start="301:83" pos:end="301:87">codec</name><operator pos:start="301:88" pos:end="301:89">-&gt;</operator><name pos:start="301:90" pos:end="301:97">channels</name></name></expr>]</index></name> <operator pos:start="301:100" pos:end="301:101">&amp;&amp;</operator>

                            <call pos:start="303:29" pos:end="303:118"><name pos:start="303:29" pos:end="303:34">memcmp</name><argument_list pos:start="303:35" pos:end="303:118">(<argument pos:start="303:36" pos:end="303:60"><expr pos:start="303:36" pos:end="303:60"><operator pos:start="303:36" pos:end="303:36">&amp;</operator><name pos:start="303:37" pos:end="303:60"><name pos:start="303:37" pos:end="303:38">st</name><operator pos:start="303:39" pos:end="303:40">-&gt;</operator><name pos:start="303:41" pos:end="303:45">codec</name><operator pos:start="303:46" pos:end="303:47">-&gt;</operator><name pos:start="303:48" pos:end="303:56">extradata</name><index pos:start="303:57" pos:end="303:60">[<expr pos:start="303:58" pos:end="303:59"><literal type="number" pos:start="303:58" pos:end="303:59">21</literal></expr>]</index></name></expr></argument>, <argument pos:start="303:63" pos:end="303:96"><expr pos:start="303:63" pos:end="303:96"><name pos:start="303:63" pos:end="303:96"><name pos:start="303:63" pos:end="303:75">channel_map_a</name><index pos:start="303:76" pos:end="303:96">[<expr pos:start="303:77" pos:end="303:95"><name pos:start="303:77" pos:end="303:95"><name pos:start="303:77" pos:end="303:78">st</name><operator pos:start="303:79" pos:end="303:80">-&gt;</operator><name pos:start="303:81" pos:end="303:85">codec</name><operator pos:start="303:86" pos:end="303:87">-&gt;</operator><name pos:start="303:88" pos:end="303:95">channels</name></name></expr>]</index></name></expr></argument>, <argument pos:start="303:99" pos:end="303:117"><expr pos:start="303:99" pos:end="303:117"><name pos:start="303:99" pos:end="303:117"><name pos:start="303:99" pos:end="303:100">st</name><operator pos:start="303:101" pos:end="303:102">-&gt;</operator><name pos:start="303:103" pos:end="303:107">codec</name><operator pos:start="303:108" pos:end="303:109">-&gt;</operator><name pos:start="303:110" pos:end="303:117">channels</name></name></expr></argument>)</argument_list></call> <operator pos:start="303:120" pos:end="303:121">==</operator> <literal type="number" pos:start="303:123" pos:end="303:123">0</literal></expr>)</condition> <block pos:start="303:126" pos:end="307:25">{<block_content pos:start="305:29" pos:end="305:55">

                            <expr_stmt pos:start="305:29" pos:end="305:55"><expr pos:start="305:29" pos:end="305:54"><operator pos:start="305:29" pos:end="305:29">*</operator><name pos:start="305:30" pos:end="305:30">q</name><operator pos:start="305:31" pos:end="305:32">++</operator> <operator pos:start="305:34" pos:end="305:34">=</operator> <name pos:start="305:36" pos:end="305:54"><name pos:start="305:36" pos:end="305:37">st</name><operator pos:start="305:38" pos:end="305:39">-&gt;</operator><name pos:start="305:40" pos:end="305:44">codec</name><operator pos:start="305:45" pos:end="305:46">-&gt;</operator><name pos:start="305:47" pos:end="305:54">channels</name></name></expr>;</expr_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="307:27" pos:end="315:25">else if <condition pos:start="307:35" pos:end="311:131">(<expr pos:start="307:36" pos:end="311:130"><name pos:start="307:36" pos:end="307:54"><name pos:start="307:36" pos:end="307:37">st</name><operator pos:start="307:38" pos:end="307:39">-&gt;</operator><name pos:start="307:40" pos:end="307:44">codec</name><operator pos:start="307:45" pos:end="307:46">-&gt;</operator><name pos:start="307:47" pos:end="307:54">channels</name></name> <operator pos:start="307:56" pos:end="307:57">&gt;=</operator> <literal type="number" pos:start="307:59" pos:end="307:59">2</literal> <operator pos:start="307:61" pos:end="307:62">&amp;&amp;</operator> <name pos:start="307:64" pos:end="307:87"><name pos:start="307:64" pos:end="307:65">st</name><operator pos:start="307:66" pos:end="307:67">-&gt;</operator><name pos:start="307:68" pos:end="307:72">codec</name><operator pos:start="307:73" pos:end="307:74">-&gt;</operator><name pos:start="307:75" pos:end="307:83">extradata</name><index pos:start="307:84" pos:end="307:87">[<expr pos:start="307:85" pos:end="307:86"><literal type="number" pos:start="307:85" pos:end="307:86">19</literal></expr>]</index></name> <operator pos:start="307:89" pos:end="307:90">==</operator> <name pos:start="307:92" pos:end="307:110"><name pos:start="307:92" pos:end="307:93">st</name><operator pos:start="307:94" pos:end="307:95">-&gt;</operator><name pos:start="307:96" pos:end="307:100">codec</name><operator pos:start="307:101" pos:end="307:102">-&gt;</operator><name pos:start="307:103" pos:end="307:110">channels</name></name> <operator pos:start="307:112" pos:end="307:113">&amp;&amp;</operator>

                                   <name pos:start="309:36" pos:end="309:59"><name pos:start="309:36" pos:end="309:37">st</name><operator pos:start="309:38" pos:end="309:39">-&gt;</operator><name pos:start="309:40" pos:end="309:44">codec</name><operator pos:start="309:45" pos:end="309:46">-&gt;</operator><name pos:start="309:47" pos:end="309:55">extradata</name><index pos:start="309:56" pos:end="309:59">[<expr pos:start="309:57" pos:end="309:58"><literal type="number" pos:start="309:57" pos:end="309:58">20</literal></expr>]</index></name> <operator pos:start="309:61" pos:end="309:62">==</operator> <literal type="number" pos:start="309:64" pos:end="309:64">0</literal> <operator pos:start="309:66" pos:end="309:67">&amp;&amp;</operator>

                                   <call pos:start="311:36" pos:end="311:125"><name pos:start="311:36" pos:end="311:41">memcmp</name><argument_list pos:start="311:42" pos:end="311:125">(<argument pos:start="311:43" pos:end="311:67"><expr pos:start="311:43" pos:end="311:67"><operator pos:start="311:43" pos:end="311:43">&amp;</operator><name pos:start="311:44" pos:end="311:67"><name pos:start="311:44" pos:end="311:45">st</name><operator pos:start="311:46" pos:end="311:47">-&gt;</operator><name pos:start="311:48" pos:end="311:52">codec</name><operator pos:start="311:53" pos:end="311:54">-&gt;</operator><name pos:start="311:55" pos:end="311:63">extradata</name><index pos:start="311:64" pos:end="311:67">[<expr pos:start="311:65" pos:end="311:66"><literal type="number" pos:start="311:65" pos:end="311:66">21</literal></expr>]</index></name></expr></argument>, <argument pos:start="311:70" pos:end="311:103"><expr pos:start="311:70" pos:end="311:103"><name pos:start="311:70" pos:end="311:103"><name pos:start="311:70" pos:end="311:82">channel_map_b</name><index pos:start="311:83" pos:end="311:103">[<expr pos:start="311:84" pos:end="311:102"><name pos:start="311:84" pos:end="311:102"><name pos:start="311:84" pos:end="311:85">st</name><operator pos:start="311:86" pos:end="311:87">-&gt;</operator><name pos:start="311:88" pos:end="311:92">codec</name><operator pos:start="311:93" pos:end="311:94">-&gt;</operator><name pos:start="311:95" pos:end="311:102">channels</name></name></expr>]</index></name></expr></argument>, <argument pos:start="311:106" pos:end="311:124"><expr pos:start="311:106" pos:end="311:124"><name pos:start="311:106" pos:end="311:124"><name pos:start="311:106" pos:end="311:107">st</name><operator pos:start="311:108" pos:end="311:109">-&gt;</operator><name pos:start="311:110" pos:end="311:114">codec</name><operator pos:start="311:115" pos:end="311:116">-&gt;</operator><name pos:start="311:117" pos:end="311:124">channels</name></name></expr></argument>)</argument_list></call> <operator pos:start="311:127" pos:end="311:128">==</operator> <literal type="number" pos:start="311:130" pos:end="311:130">0</literal></expr>)</condition> <block pos:start="311:133" pos:end="315:25">{<block_content pos:start="313:29" pos:end="313:62">

                            <expr_stmt pos:start="313:29" pos:end="313:62"><expr pos:start="313:29" pos:end="313:61"><operator pos:start="313:29" pos:end="313:29">*</operator><name pos:start="313:30" pos:end="313:30">q</name><operator pos:start="313:31" pos:end="313:32">++</operator> <operator pos:start="313:34" pos:end="313:34">=</operator> <name pos:start="313:36" pos:end="313:54"><name pos:start="313:36" pos:end="313:37">st</name><operator pos:start="313:38" pos:end="313:39">-&gt;</operator><name pos:start="313:40" pos:end="313:44">codec</name><operator pos:start="313:45" pos:end="313:46">-&gt;</operator><name pos:start="313:47" pos:end="313:54">channels</name></name> <operator pos:start="313:56" pos:end="313:56">|</operator> <literal type="number" pos:start="313:58" pos:end="313:61">0x80</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="315:27" pos:end="323:25">else <block pos:start="315:32" pos:end="323:25">{<block_content pos:start="319:29" pos:end="321:40">

                            <comment type="block" pos:start="317:29" pos:end="317:86">/* Unsupported, could write an extended descriptor here */</comment>

                            <expr_stmt pos:start="319:29" pos:end="319:101"><expr pos:start="319:29" pos:end="319:100"><call pos:start="319:29" pos:end="319:100"><name pos:start="319:29" pos:end="319:34">av_log</name><argument_list pos:start="319:35" pos:end="319:100">(<argument pos:start="319:36" pos:end="319:36"><expr pos:start="319:36" pos:end="319:36"><name pos:start="319:36" pos:end="319:36">s</name></expr></argument>, <argument pos:start="319:39" pos:end="319:50"><expr pos:start="319:39" pos:end="319:50"><name pos:start="319:39" pos:end="319:50">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="319:53" pos:end="319:99"><expr pos:start="319:53" pos:end="319:99"><literal type="string" pos:start="319:53" pos:end="319:99">"Unsupported Opus Vorbis-style channel mapping"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="321:29" pos:end="321:40"><expr pos:start="321:29" pos:end="321:39"><operator pos:start="321:29" pos:end="321:29">*</operator><name pos:start="321:30" pos:end="321:30">q</name><operator pos:start="321:31" pos:end="321:32">++</operator> <operator pos:start="321:34" pos:end="321:34">=</operator> <literal type="number" pos:start="321:36" pos:end="321:39">0xff</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="325:23" pos:end="333:21">else <block pos:start="325:28" pos:end="333:21">{<block_content pos:start="329:25" pos:end="331:36">

                        <comment type="block" pos:start="327:25" pos:end="327:41">/* Unsupported */</comment>

                        <expr_stmt pos:start="329:25" pos:end="329:124"><expr pos:start="329:25" pos:end="329:123"><call pos:start="329:25" pos:end="329:123"><name pos:start="329:25" pos:end="329:30">av_log</name><argument_list pos:start="329:31" pos:end="329:123">(<argument pos:start="329:32" pos:end="329:32"><expr pos:start="329:32" pos:end="329:32"><name pos:start="329:32" pos:end="329:32">s</name></expr></argument>, <argument pos:start="329:35" pos:end="329:46"><expr pos:start="329:35" pos:end="329:46"><name pos:start="329:35" pos:end="329:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="329:49" pos:end="329:96"><expr pos:start="329:49" pos:end="329:96"><literal type="string" pos:start="329:49" pos:end="329:96">"Unsupported Opus channel mapping for family %d"</literal></expr></argument>, <argument pos:start="329:99" pos:end="329:122"><expr pos:start="329:99" pos:end="329:122"><name pos:start="329:99" pos:end="329:122"><name pos:start="329:99" pos:end="329:100">st</name><operator pos:start="329:101" pos:end="329:102">-&gt;</operator><name pos:start="329:103" pos:end="329:107">codec</name><operator pos:start="329:108" pos:end="329:109">-&gt;</operator><name pos:start="329:110" pos:end="329:118">extradata</name><index pos:start="329:119" pos:end="329:122">[<expr pos:start="329:120" pos:end="329:121"><literal type="number" pos:start="329:120" pos:end="329:121">18</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="331:25" pos:end="331:36"><expr pos:start="331:25" pos:end="331:35"><operator pos:start="331:25" pos:end="331:25">*</operator><name pos:start="331:26" pos:end="331:26">q</name><operator pos:start="331:27" pos:end="331:28">++</operator> <operator pos:start="331:30" pos:end="331:30">=</operator> <literal type="number" pos:start="331:32" pos:end="331:35">0xff</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="335:19" pos:end="341:17">else if <condition pos:start="335:27" pos:end="335:52">(<expr pos:start="335:28" pos:end="335:51"><name pos:start="335:28" pos:end="335:46"><name pos:start="335:28" pos:end="335:29">st</name><operator pos:start="335:30" pos:end="335:31">-&gt;</operator><name pos:start="335:32" pos:end="335:36">codec</name><operator pos:start="335:37" pos:end="335:38">-&gt;</operator><name pos:start="335:39" pos:end="335:46">channels</name></name> <operator pos:start="335:48" pos:end="335:49">&lt;=</operator> <literal type="number" pos:start="335:51" pos:end="335:51">2</literal></expr>)</condition> <block pos:start="335:54" pos:end="341:17">{<block_content pos:start="339:21" pos:end="339:47">

                    <comment type="block" pos:start="337:21" pos:end="337:51">/* Assume RTP mapping family */</comment>

                    <expr_stmt pos:start="339:21" pos:end="339:47"><expr pos:start="339:21" pos:end="339:46"><operator pos:start="339:21" pos:end="339:21">*</operator><name pos:start="339:22" pos:end="339:22">q</name><operator pos:start="339:23" pos:end="339:24">++</operator> <operator pos:start="339:26" pos:end="339:26">=</operator> <name pos:start="339:28" pos:end="339:46"><name pos:start="339:28" pos:end="339:29">st</name><operator pos:start="339:30" pos:end="339:31">-&gt;</operator><name pos:start="339:32" pos:end="339:36">codec</name><operator pos:start="339:37" pos:end="339:38">-&gt;</operator><name pos:start="339:39" pos:end="339:46">channels</name></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="341:19" pos:end="349:17">else <block pos:start="341:24" pos:end="349:17">{<block_content pos:start="345:21" pos:end="347:32">

                    <comment type="block" pos:start="343:21" pos:end="343:37">/* Unsupported */</comment>

                    <expr_stmt pos:start="345:21" pos:end="345:80"><expr pos:start="345:21" pos:end="345:79"><call pos:start="345:21" pos:end="345:79"><name pos:start="345:21" pos:end="345:26">av_log</name><argument_list pos:start="345:27" pos:end="345:79">(<argument pos:start="345:28" pos:end="345:28"><expr pos:start="345:28" pos:end="345:28"><name pos:start="345:28" pos:end="345:28">s</name></expr></argument>, <argument pos:start="345:31" pos:end="345:42"><expr pos:start="345:31" pos:end="345:42"><name pos:start="345:31" pos:end="345:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="345:45" pos:end="345:78"><expr pos:start="345:45" pos:end="345:78"><literal type="string" pos:start="345:45" pos:end="345:78">"Unsupported Opus channel mapping"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="347:21" pos:end="347:32"><expr pos:start="347:21" pos:end="347:31"><operator pos:start="347:21" pos:end="347:21">*</operator><name pos:start="347:22" pos:end="347:22">q</name><operator pos:start="347:23" pos:end="347:24">++</operator> <operator pos:start="347:26" pos:end="347:26">=</operator> <literal type="number" pos:start="347:28" pos:end="347:31">0xff</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="355:13" pos:end="427:13"><if pos:start="355:13" pos:end="427:13">if <condition pos:start="355:16" pos:end="355:21">(<expr pos:start="355:17" pos:end="355:20"><name pos:start="355:17" pos:end="355:20">lang</name></expr>)</condition> <block pos:start="355:23" pos:end="427:13">{<block_content pos:start="357:17" pos:end="425:27">

                <decl_stmt pos:start="357:17" pos:end="357:24"><decl pos:start="357:17" pos:end="357:23"><type pos:start="357:17" pos:end="357:22"><name pos:start="357:17" pos:end="357:20">char</name> <modifier pos:start="357:22" pos:end="357:22">*</modifier></type><name pos:start="357:23" pos:end="357:23">p</name></decl>;</decl_stmt>

                <decl_stmt pos:start="359:17" pos:end="359:41"><decl pos:start="359:17" pos:end="359:40"><type pos:start="359:17" pos:end="359:22"><name pos:start="359:17" pos:end="359:20">char</name> <modifier pos:start="359:22" pos:end="359:22">*</modifier></type><name pos:start="359:23" pos:end="359:26">next</name> <init pos:start="359:28" pos:end="359:40">= <expr pos:start="359:30" pos:end="359:40"><name pos:start="359:30" pos:end="359:40"><name pos:start="359:30" pos:end="359:33">lang</name><operator pos:start="359:34" pos:end="359:35">-&gt;</operator><name pos:start="359:36" pos:end="359:40">value</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="361:17" pos:end="361:33"><decl pos:start="361:17" pos:end="361:32"><type pos:start="361:17" pos:end="361:25"><name pos:start="361:17" pos:end="361:23">uint8_t</name> <modifier pos:start="361:25" pos:end="361:25">*</modifier></type><name pos:start="361:26" pos:end="361:32">len_ptr</name></decl>;</decl_stmt>



                <expr_stmt pos:start="365:17" pos:end="365:32"><expr pos:start="365:17" pos:end="365:31"><operator pos:start="365:17" pos:end="365:17">*</operator><name pos:start="365:18" pos:end="365:18">q</name><operator pos:start="365:19" pos:end="365:20">++</operator>     <operator pos:start="365:26" pos:end="365:26">=</operator> <literal type="number" pos:start="365:28" pos:end="365:31">0x0a</literal></expr>;</expr_stmt> <comment type="block" pos:start="365:34" pos:end="365:66">/* ISO 639 language descriptor */</comment>

                <expr_stmt pos:start="367:17" pos:end="367:31"><expr pos:start="367:17" pos:end="367:30"><name pos:start="367:17" pos:end="367:23">len_ptr</name>  <operator pos:start="367:26" pos:end="367:26">=</operator> <name pos:start="367:28" pos:end="367:28">q</name><operator pos:start="367:29" pos:end="367:30">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="369:17" pos:end="369:29"><expr pos:start="369:17" pos:end="369:28"><operator pos:start="369:17" pos:end="369:17">*</operator><name pos:start="369:18" pos:end="369:24">len_ptr</name> <operator pos:start="369:26" pos:end="369:26">=</operator> <literal type="number" pos:start="369:28" pos:end="369:28">0</literal></expr>;</expr_stmt>



                <for pos:start="373:17" pos:end="419:17">for <control pos:start="373:21" pos:end="373:83">(<init pos:start="373:22" pos:end="373:37"><expr pos:start="373:22" pos:end="373:36"><name pos:start="373:22" pos:end="373:22">p</name> <operator pos:start="373:24" pos:end="373:24">=</operator> <name pos:start="373:26" pos:end="373:36"><name pos:start="373:26" pos:end="373:29">lang</name><operator pos:start="373:30" pos:end="373:31">-&gt;</operator><name pos:start="373:32" pos:end="373:36">value</name></name></expr>;</init> <condition pos:start="373:39" pos:end="373:69"><expr pos:start="373:39" pos:end="373:68"><name pos:start="373:39" pos:end="373:42">next</name> <operator pos:start="373:44" pos:end="373:45">&amp;&amp;</operator> <operator pos:start="373:47" pos:end="373:47">*</operator><name pos:start="373:48" pos:end="373:54">len_ptr</name> <operator pos:start="373:56" pos:end="373:56">&lt;</operator> <literal type="number" pos:start="373:58" pos:end="373:60">255</literal> <operator pos:start="373:62" pos:end="373:62">/</operator> <literal type="number" pos:start="373:64" pos:end="373:64">4</literal> <operator pos:start="373:66" pos:end="373:66">*</operator> <literal type="number" pos:start="373:68" pos:end="373:68">4</literal></expr>;</condition> <incr pos:start="373:71" pos:end="373:82"><expr pos:start="373:71" pos:end="373:82"><name pos:start="373:71" pos:end="373:71">p</name> <operator pos:start="373:73" pos:end="373:73">=</operator> <name pos:start="373:75" pos:end="373:78">next</name> <operator pos:start="373:80" pos:end="373:80">+</operator> <literal type="number" pos:start="373:82" pos:end="373:82">1</literal></expr></incr>)</control> <block pos:start="373:85" pos:end="419:17">{<block_content pos:start="375:21" pos:end="417:34">

                    <if_stmt pos:start="375:21" pos:end="381:21"><if pos:start="375:21" pos:end="381:21">if <condition pos:start="375:24" pos:end="375:54">(<expr pos:start="375:25" pos:end="375:53"><name pos:start="375:25" pos:end="375:25">q</name> <operator pos:start="375:27" pos:end="375:27">-</operator> <name pos:start="375:29" pos:end="375:32">data</name> <operator pos:start="375:34" pos:end="375:34">&gt;</operator> <name pos:start="375:36" pos:end="375:49">SECTION_LENGTH</name> <operator pos:start="375:51" pos:end="375:51">-</operator> <literal type="number" pos:start="375:53" pos:end="375:53">4</literal></expr>)</condition> <block pos:start="375:56" pos:end="381:21">{<block_content pos:start="377:25" pos:end="379:30">

                        <expr_stmt pos:start="377:25" pos:end="377:32"><expr pos:start="377:25" pos:end="377:31"><name pos:start="377:25" pos:end="377:27">err</name> <operator pos:start="377:29" pos:end="377:29">=</operator> <literal type="number" pos:start="377:31" pos:end="377:31">1</literal></expr>;</expr_stmt>

                        <break pos:start="379:25" pos:end="379:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="383:21" pos:end="383:42"><expr pos:start="383:21" pos:end="383:41"><name pos:start="383:21" pos:end="383:24">next</name> <operator pos:start="383:26" pos:end="383:26">=</operator> <call pos:start="383:28" pos:end="383:41"><name pos:start="383:28" pos:end="383:33">strchr</name><argument_list pos:start="383:34" pos:end="383:41">(<argument pos:start="383:35" pos:end="383:35"><expr pos:start="383:35" pos:end="383:35"><name pos:start="383:35" pos:end="383:35">p</name></expr></argument>, <argument pos:start="383:38" pos:end="383:40"><expr pos:start="383:38" pos:end="383:40"><literal type="char" pos:start="383:38" pos:end="383:40">','</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="385:21" pos:end="387:33"><if pos:start="385:21" pos:end="387:33">if <condition pos:start="385:24" pos:end="385:67">(<expr pos:start="385:25" pos:end="385:66"><call pos:start="385:25" pos:end="385:33"><name pos:start="385:25" pos:end="385:30">strlen</name><argument_list pos:start="385:31" pos:end="385:33">(<argument pos:start="385:32" pos:end="385:32"><expr pos:start="385:32" pos:end="385:32"><name pos:start="385:32" pos:end="385:32">p</name></expr></argument>)</argument_list></call> <operator pos:start="385:35" pos:end="385:36">!=</operator> <literal type="number" pos:start="385:38" pos:end="385:38">3</literal> <operator pos:start="385:40" pos:end="385:41">&amp;&amp;</operator> <operator pos:start="385:43" pos:end="385:43">(</operator><operator pos:start="385:44" pos:end="385:44">!</operator><name pos:start="385:45" pos:end="385:48">next</name> <operator pos:start="385:50" pos:end="385:51">||</operator> <name pos:start="385:53" pos:end="385:56">next</name> <operator pos:start="385:58" pos:end="385:59">!=</operator> <name pos:start="385:61" pos:end="385:61">p</name> <operator pos:start="385:63" pos:end="385:63">+</operator> <literal type="number" pos:start="385:65" pos:end="385:65">3</literal><operator pos:start="385:66" pos:end="385:66">)</operator></expr>)</condition><block type="pseudo" pos:start="387:25" pos:end="387:33"><block_content pos:start="387:25" pos:end="387:33">

                        <continue pos:start="387:25" pos:end="387:33">continue;</continue></block_content></block></if></if_stmt> <comment type="block" pos:start="387:35" pos:end="387:59">/* not a 3-letter code */</comment>



                    <expr_stmt pos:start="391:21" pos:end="391:32"><expr pos:start="391:21" pos:end="391:31"><operator pos:start="391:21" pos:end="391:21">*</operator><name pos:start="391:22" pos:end="391:22">q</name><operator pos:start="391:23" pos:end="391:24">++</operator> <operator pos:start="391:26" pos:end="391:26">=</operator> <operator pos:start="391:28" pos:end="391:28">*</operator><name pos:start="391:29" pos:end="391:29">p</name><operator pos:start="391:30" pos:end="391:31">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="393:21" pos:end="393:32"><expr pos:start="393:21" pos:end="393:31"><operator pos:start="393:21" pos:end="393:21">*</operator><name pos:start="393:22" pos:end="393:22">q</name><operator pos:start="393:23" pos:end="393:24">++</operator> <operator pos:start="393:26" pos:end="393:26">=</operator> <operator pos:start="393:28" pos:end="393:28">*</operator><name pos:start="393:29" pos:end="393:29">p</name><operator pos:start="393:30" pos:end="393:31">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="395:21" pos:end="395:32"><expr pos:start="395:21" pos:end="395:31"><operator pos:start="395:21" pos:end="395:21">*</operator><name pos:start="395:22" pos:end="395:22">q</name><operator pos:start="395:23" pos:end="395:24">++</operator> <operator pos:start="395:26" pos:end="395:26">=</operator> <operator pos:start="395:28" pos:end="395:28">*</operator><name pos:start="395:29" pos:end="395:29">p</name><operator pos:start="395:30" pos:end="395:31">++</operator></expr>;</expr_stmt>



                    <if_stmt pos:start="399:21" pos:end="413:33"><if pos:start="399:21" pos:end="401:36">if <condition pos:start="399:24" pos:end="399:71">(<expr pos:start="399:25" pos:end="399:70"><name pos:start="399:25" pos:end="399:39"><name pos:start="399:25" pos:end="399:26">st</name><operator pos:start="399:27" pos:end="399:28">-&gt;</operator><name pos:start="399:29" pos:end="399:39">disposition</name></name> <operator pos:start="399:41" pos:end="399:41">&amp;</operator> <name pos:start="399:43" pos:end="399:70">AV_DISPOSITION_CLEAN_EFFECTS</name></expr>)</condition><block type="pseudo" pos:start="401:25" pos:end="401:36"><block_content pos:start="401:25" pos:end="401:36">

                        <expr_stmt pos:start="401:25" pos:end="401:36"><expr pos:start="401:25" pos:end="401:35"><operator pos:start="401:25" pos:end="401:25">*</operator><name pos:start="401:26" pos:end="401:26">q</name><operator pos:start="401:27" pos:end="401:28">++</operator> <operator pos:start="401:30" pos:end="401:30">=</operator> <literal type="number" pos:start="401:32" pos:end="401:35">0x01</literal></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="403:21" pos:end="405:36">else if <condition pos:start="403:29" pos:end="403:79">(<expr pos:start="403:30" pos:end="403:78"><name pos:start="403:30" pos:end="403:44"><name pos:start="403:30" pos:end="403:31">st</name><operator pos:start="403:32" pos:end="403:33">-&gt;</operator><name pos:start="403:34" pos:end="403:44">disposition</name></name> <operator pos:start="403:46" pos:end="403:46">&amp;</operator> <name pos:start="403:48" pos:end="403:78">AV_DISPOSITION_HEARING_IMPAIRED</name></expr>)</condition><block type="pseudo" pos:start="405:25" pos:end="405:36"><block_content pos:start="405:25" pos:end="405:36">

                        <expr_stmt pos:start="405:25" pos:end="405:36"><expr pos:start="405:25" pos:end="405:35"><operator pos:start="405:25" pos:end="405:25">*</operator><name pos:start="405:26" pos:end="405:26">q</name><operator pos:start="405:27" pos:end="405:28">++</operator> <operator pos:start="405:30" pos:end="405:30">=</operator> <literal type="number" pos:start="405:32" pos:end="405:35">0x02</literal></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="407:21" pos:end="409:36">else if <condition pos:start="407:29" pos:end="407:78">(<expr pos:start="407:30" pos:end="407:77"><name pos:start="407:30" pos:end="407:44"><name pos:start="407:30" pos:end="407:31">st</name><operator pos:start="407:32" pos:end="407:33">-&gt;</operator><name pos:start="407:34" pos:end="407:44">disposition</name></name> <operator pos:start="407:46" pos:end="407:46">&amp;</operator> <name pos:start="407:48" pos:end="407:77">AV_DISPOSITION_VISUAL_IMPAIRED</name></expr>)</condition><block type="pseudo" pos:start="409:25" pos:end="409:36"><block_content pos:start="409:25" pos:end="409:36">

                        <expr_stmt pos:start="409:25" pos:end="409:36"><expr pos:start="409:25" pos:end="409:35"><operator pos:start="409:25" pos:end="409:25">*</operator><name pos:start="409:26" pos:end="409:26">q</name><operator pos:start="409:27" pos:end="409:28">++</operator> <operator pos:start="409:30" pos:end="409:30">=</operator> <literal type="number" pos:start="409:32" pos:end="409:35">0x03</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="411:21" pos:end="413:33">else<block type="pseudo" pos:start="413:25" pos:end="413:33"><block_content pos:start="413:25" pos:end="413:33">

                        <expr_stmt pos:start="413:25" pos:end="413:33"><expr pos:start="413:25" pos:end="413:32"><operator pos:start="413:25" pos:end="413:25">*</operator><name pos:start="413:26" pos:end="413:26">q</name><operator pos:start="413:27" pos:end="413:28">++</operator> <operator pos:start="413:30" pos:end="413:30">=</operator> <literal type="number" pos:start="413:32" pos:end="413:32">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="413:35" pos:end="413:54">/* undefined type */</comment>



                    <expr_stmt pos:start="417:21" pos:end="417:34"><expr pos:start="417:21" pos:end="417:33"><operator pos:start="417:21" pos:end="417:21">*</operator><name pos:start="417:22" pos:end="417:28">len_ptr</name> <operator pos:start="417:30" pos:end="417:31">+=</operator> <literal type="number" pos:start="417:33" pos:end="417:33">4</literal></expr>;</expr_stmt>

                </block_content>}</block></for>



                <if_stmt pos:start="423:17" pos:end="425:27"><if pos:start="423:17" pos:end="425:27">if <condition pos:start="423:20" pos:end="423:34">(<expr pos:start="423:21" pos:end="423:33"><operator pos:start="423:21" pos:end="423:21">*</operator><name pos:start="423:22" pos:end="423:28">len_ptr</name> <operator pos:start="423:30" pos:end="423:31">==</operator> <literal type="number" pos:start="423:33" pos:end="423:33">0</literal></expr>)</condition><block type="pseudo" pos:start="425:21" pos:end="425:27"><block_content pos:start="425:21" pos:end="425:27">

                    <expr_stmt pos:start="425:21" pos:end="425:27"><expr pos:start="425:21" pos:end="425:26"><name pos:start="425:21" pos:end="425:21">q</name> <operator pos:start="425:23" pos:end="425:24">-=</operator> <literal type="number" pos:start="425:26" pos:end="425:26">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="425:29" pos:end="425:64">/* no language codes were written */</comment>

            </block_content>}</block></if></if_stmt>

            <break pos:start="429:13" pos:end="429:18">break;</break>

        <case pos:start="431:9" pos:end="431:35">case <expr pos:start="431:14" pos:end="431:34"><name pos:start="431:14" pos:end="431:34">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

        <block pos:start="433:9" pos:end="589:9">{<block_content pos:start="435:12" pos:end="587:13">

           <decl_stmt pos:start="435:12" pos:end="435:49"><decl pos:start="435:12" pos:end="435:48"><type pos:start="435:12" pos:end="435:21"><specifier pos:start="435:12" pos:end="435:16">const</specifier> <name pos:start="435:18" pos:end="435:21">char</name></type> <name pos:start="435:23" pos:end="435:40"><name pos:start="435:23" pos:end="435:38">default_language</name><index pos:start="435:39" pos:end="435:40">[]</index></name> <init pos:start="435:42" pos:end="435:48">= <expr pos:start="435:44" pos:end="435:48"><literal type="string" pos:start="435:44" pos:end="435:48">"und"</literal></expr></init></decl>;</decl_stmt>

           <decl_stmt pos:start="437:12" pos:end="437:100"><decl pos:start="437:12" pos:end="437:99"><type pos:start="437:12" pos:end="437:23"><specifier pos:start="437:12" pos:end="437:16">const</specifier> <name pos:start="437:18" pos:end="437:21">char</name> <modifier pos:start="437:23" pos:end="437:23">*</modifier></type><name pos:start="437:24" pos:end="437:31">language</name> <init pos:start="437:33" pos:end="437:99">= <expr pos:start="437:35" pos:end="437:99"><ternary pos:start="437:35" pos:end="437:99"><condition pos:start="437:35" pos:end="437:68"><expr pos:start="437:35" pos:end="437:66"><name pos:start="437:35" pos:end="437:38">lang</name> <operator pos:start="437:40" pos:end="437:41">&amp;&amp;</operator> <call pos:start="437:43" pos:end="437:61"><name pos:start="437:43" pos:end="437:48">strlen</name><argument_list pos:start="437:49" pos:end="437:61">(<argument pos:start="437:50" pos:end="437:60"><expr pos:start="437:50" pos:end="437:60"><name pos:start="437:50" pos:end="437:60"><name pos:start="437:50" pos:end="437:53">lang</name><operator pos:start="437:54" pos:end="437:55">-&gt;</operator><name pos:start="437:56" pos:end="437:60">value</name></name></expr></argument>)</argument_list></call> <operator pos:start="437:63" pos:end="437:64">&gt;=</operator> <literal type="number" pos:start="437:66" pos:end="437:66">3</literal></expr> ?</condition><then pos:start="437:70" pos:end="437:80"> <expr pos:start="437:70" pos:end="437:80"><name pos:start="437:70" pos:end="437:80"><name pos:start="437:70" pos:end="437:73">lang</name><operator pos:start="437:74" pos:end="437:75">-&gt;</operator><name pos:start="437:76" pos:end="437:80">value</name></name></expr> </then><else pos:start="437:82" pos:end="437:99">: <expr pos:start="437:84" pos:end="437:99"><name pos:start="437:84" pos:end="437:99">default_language</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



           <if_stmt pos:start="441:12" pos:end="587:13"><if pos:start="441:12" pos:end="525:12">if <condition pos:start="441:15" pos:end="441:63">(<expr pos:start="441:16" pos:end="441:62"><name pos:start="441:16" pos:end="441:34"><name pos:start="441:16" pos:end="441:17">st</name><operator pos:start="441:18" pos:end="441:19">-&gt;</operator><name pos:start="441:20" pos:end="441:24">codec</name><operator pos:start="441:25" pos:end="441:26">-&gt;</operator><name pos:start="441:27" pos:end="441:34">codec_id</name></name> <operator pos:start="441:36" pos:end="441:37">==</operator> <name pos:start="441:39" pos:end="441:62">AV_CODEC_ID_DVB_SUBTITLE</name></expr>)</condition> <block pos:start="441:65" pos:end="525:12">{<block_content pos:start="443:16" pos:end="523:42">

               <decl_stmt pos:start="443:16" pos:end="443:32"><decl pos:start="443:16" pos:end="443:31"><type pos:start="443:16" pos:end="443:24"><name pos:start="443:16" pos:end="443:22">uint8_t</name> <modifier pos:start="443:24" pos:end="443:24">*</modifier></type><name pos:start="443:25" pos:end="443:31">len_ptr</name></decl>;</decl_stmt>

               <decl_stmt pos:start="445:16" pos:end="445:40"><decl pos:start="445:16" pos:end="445:39"><type pos:start="445:16" pos:end="445:18"><name pos:start="445:16" pos:end="445:18">int</name></type> <name pos:start="445:20" pos:end="445:35">extradata_copied</name> <init pos:start="445:37" pos:end="445:39">= <expr pos:start="445:39" pos:end="445:39"><literal type="number" pos:start="445:39" pos:end="445:39">0</literal></expr></init></decl>;</decl_stmt>



               <expr_stmt pos:start="449:16" pos:end="449:27"><expr pos:start="449:16" pos:end="449:26"><operator pos:start="449:16" pos:end="449:16">*</operator><name pos:start="449:17" pos:end="449:17">q</name><operator pos:start="449:18" pos:end="449:19">++</operator> <operator pos:start="449:21" pos:end="449:21">=</operator> <literal type="number" pos:start="449:23" pos:end="449:26">0x59</literal></expr>;</expr_stmt> <comment type="block" pos:start="449:29" pos:end="449:55">/* subtitling_descriptor */</comment>

               <expr_stmt pos:start="451:16" pos:end="451:29"><expr pos:start="451:16" pos:end="451:28"><name pos:start="451:16" pos:end="451:22">len_ptr</name> <operator pos:start="451:24" pos:end="451:24">=</operator> <name pos:start="451:26" pos:end="451:26">q</name><operator pos:start="451:27" pos:end="451:28">++</operator></expr>;</expr_stmt>



               <while pos:start="455:16" pos:end="519:16">while <condition pos:start="455:22" pos:end="455:44">(<expr pos:start="455:23" pos:end="455:43"><call pos:start="455:23" pos:end="455:38"><name pos:start="455:23" pos:end="455:28">strlen</name><argument_list pos:start="455:29" pos:end="455:38">(<argument pos:start="455:30" pos:end="455:37"><expr pos:start="455:30" pos:end="455:37"><name pos:start="455:30" pos:end="455:37">language</name></expr></argument>)</argument_list></call> <operator pos:start="455:40" pos:end="455:41">&gt;=</operator> <literal type="number" pos:start="455:43" pos:end="455:43">3</literal></expr>)</condition> <block pos:start="455:46" pos:end="519:16">{<block_content pos:start="457:20" pos:end="517:20">

                   <if_stmt pos:start="457:20" pos:end="463:20"><if pos:start="457:20" pos:end="463:20">if <condition pos:start="457:23" pos:end="457:53">(<expr pos:start="457:24" pos:end="457:52"><sizeof pos:start="457:24" pos:end="457:35">sizeof<argument_list pos:start="457:30" pos:end="457:35">(<argument pos:start="457:31" pos:end="457:34"><expr pos:start="457:31" pos:end="457:34"><name pos:start="457:31" pos:end="457:34">data</name></expr></argument>)</argument_list></sizeof> <operator pos:start="457:37" pos:end="457:37">-</operator> <operator pos:start="457:39" pos:end="457:39">(</operator><name pos:start="457:40" pos:end="457:40">q</name> <operator pos:start="457:42" pos:end="457:42">-</operator> <name pos:start="457:44" pos:end="457:47">data</name><operator pos:start="457:48" pos:end="457:48">)</operator> <operator pos:start="457:50" pos:end="457:50">&lt;</operator> <literal type="number" pos:start="457:52" pos:end="457:52">8</literal></expr>)</condition> <block pos:start="457:55" pos:end="463:20">{<block_content pos:start="459:24" pos:end="461:29"> <comment type="block" pos:start="457:57" pos:end="457:101">/* 8 bytes per DVB subtitle substream data */</comment>

                       <expr_stmt pos:start="459:24" pos:end="459:31"><expr pos:start="459:24" pos:end="459:30"><name pos:start="459:24" pos:end="459:26">err</name> <operator pos:start="459:28" pos:end="459:28">=</operator> <literal type="number" pos:start="459:30" pos:end="459:30">1</literal></expr>;</expr_stmt>

                       <break pos:start="461:24" pos:end="461:29">break;</break>

                   </block_content>}</block></if></if_stmt>

                   <expr_stmt pos:start="465:20" pos:end="465:38"><expr pos:start="465:20" pos:end="465:37"><operator pos:start="465:20" pos:end="465:20">*</operator><name pos:start="465:21" pos:end="465:21">q</name><operator pos:start="465:22" pos:end="465:23">++</operator> <operator pos:start="465:25" pos:end="465:25">=</operator> <operator pos:start="465:27" pos:end="465:27">*</operator><name pos:start="465:28" pos:end="465:35">language</name><operator pos:start="465:36" pos:end="465:37">++</operator></expr>;</expr_stmt>

                   <expr_stmt pos:start="467:20" pos:end="467:38"><expr pos:start="467:20" pos:end="467:37"><operator pos:start="467:20" pos:end="467:20">*</operator><name pos:start="467:21" pos:end="467:21">q</name><operator pos:start="467:22" pos:end="467:23">++</operator> <operator pos:start="467:25" pos:end="467:25">=</operator> <operator pos:start="467:27" pos:end="467:27">*</operator><name pos:start="467:28" pos:end="467:35">language</name><operator pos:start="467:36" pos:end="467:37">++</operator></expr>;</expr_stmt>

                   <expr_stmt pos:start="469:20" pos:end="469:38"><expr pos:start="469:20" pos:end="469:37"><operator pos:start="469:20" pos:end="469:20">*</operator><name pos:start="469:21" pos:end="469:21">q</name><operator pos:start="469:22" pos:end="469:23">++</operator> <operator pos:start="469:25" pos:end="469:25">=</operator> <operator pos:start="469:27" pos:end="469:27">*</operator><name pos:start="469:28" pos:end="469:35">language</name><operator pos:start="469:36" pos:end="469:37">++</operator></expr>;</expr_stmt>

                   <comment type="block" pos:start="471:20" pos:end="471:35">/* Skip comma */</comment>

                   <if_stmt pos:start="473:20" pos:end="475:34"><if pos:start="473:20" pos:end="475:34">if <condition pos:start="473:23" pos:end="473:41">(<expr pos:start="473:24" pos:end="473:40"><operator pos:start="473:24" pos:end="473:24">*</operator><name pos:start="473:25" pos:end="473:32">language</name> <operator pos:start="473:34" pos:end="473:35">!=</operator> <literal type="char" pos:start="473:37" pos:end="473:40">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="475:24" pos:end="475:34"><block_content pos:start="475:24" pos:end="475:34">

                       <expr_stmt pos:start="475:24" pos:end="475:34"><expr pos:start="475:24" pos:end="475:33"><name pos:start="475:24" pos:end="475:31">language</name><operator pos:start="475:32" pos:end="475:33">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



                   <if_stmt pos:start="479:20" pos:end="517:20"><if pos:start="479:20" pos:end="489:20">if <condition pos:start="479:23" pos:end="479:73">(<expr pos:start="479:24" pos:end="479:72"><name pos:start="479:24" pos:end="479:48"><name pos:start="479:24" pos:end="479:25">st</name><operator pos:start="479:26" pos:end="479:27">-&gt;</operator><name pos:start="479:28" pos:end="479:32">codec</name><operator pos:start="479:33" pos:end="479:34">-&gt;</operator><name pos:start="479:35" pos:end="479:48">extradata_size</name></name> <operator pos:start="479:50" pos:end="479:50">-</operator> <name pos:start="479:52" pos:end="479:67">extradata_copied</name> <operator pos:start="479:69" pos:end="479:70">&gt;=</operator> <literal type="number" pos:start="479:72" pos:end="479:72">5</literal></expr>)</condition> <block pos:start="479:75" pos:end="489:20">{<block_content pos:start="481:24" pos:end="487:30">

                       <expr_stmt pos:start="481:24" pos:end="481:73"><expr pos:start="481:24" pos:end="481:72"><operator pos:start="481:24" pos:end="481:24">*</operator><name pos:start="481:25" pos:end="481:25">q</name><operator pos:start="481:26" pos:end="481:27">++</operator> <operator pos:start="481:29" pos:end="481:29">=</operator> <name pos:start="481:31" pos:end="481:72"><name pos:start="481:31" pos:end="481:32">st</name><operator pos:start="481:33" pos:end="481:34">-&gt;</operator><name pos:start="481:35" pos:end="481:39">codec</name><operator pos:start="481:40" pos:end="481:41">-&gt;</operator><name pos:start="481:42" pos:end="481:50">extradata</name><index pos:start="481:51" pos:end="481:72">[<expr pos:start="481:52" pos:end="481:71"><name pos:start="481:52" pos:end="481:67">extradata_copied</name> <operator pos:start="481:69" pos:end="481:69">+</operator> <literal type="number" pos:start="481:71" pos:end="481:71">4</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="block" pos:start="481:75" pos:end="481:95">/* subtitling_type */</comment>

                       <expr_stmt pos:start="483:24" pos:end="483:77"><expr pos:start="483:24" pos:end="483:76"><call pos:start="483:24" pos:end="483:76"><name pos:start="483:24" pos:end="483:29">memcpy</name><argument_list pos:start="483:30" pos:end="483:76">(<argument pos:start="483:31" pos:end="483:31"><expr pos:start="483:31" pos:end="483:31"><name pos:start="483:31" pos:end="483:31">q</name></expr></argument>, <argument pos:start="483:34" pos:end="483:72"><expr pos:start="483:34" pos:end="483:72"><name pos:start="483:34" pos:end="483:53"><name pos:start="483:34" pos:end="483:35">st</name><operator pos:start="483:36" pos:end="483:37">-&gt;</operator><name pos:start="483:38" pos:end="483:42">codec</name><operator pos:start="483:43" pos:end="483:44">-&gt;</operator><name pos:start="483:45" pos:end="483:53">extradata</name></name> <operator pos:start="483:55" pos:end="483:55">+</operator> <name pos:start="483:57" pos:end="483:72">extradata_copied</name></expr></argument>, <argument pos:start="483:75" pos:end="483:75"><expr pos:start="483:75" pos:end="483:75"><literal type="number" pos:start="483:75" pos:end="483:75">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="483:79" pos:end="483:125">/* composition_page_id and ancillary_page_id */</comment>

                       <expr_stmt pos:start="485:24" pos:end="485:45"><expr pos:start="485:24" pos:end="485:44"><name pos:start="485:24" pos:end="485:39">extradata_copied</name> <operator pos:start="485:41" pos:end="485:42">+=</operator> <literal type="number" pos:start="485:44" pos:end="485:44">5</literal></expr>;</expr_stmt>

                       <expr_stmt pos:start="487:24" pos:end="487:30"><expr pos:start="487:24" pos:end="487:29"><name pos:start="487:24" pos:end="487:24">q</name> <operator pos:start="487:26" pos:end="487:27">+=</operator> <literal type="number" pos:start="487:29" pos:end="487:29">4</literal></expr>;</expr_stmt>

                   </block_content>}</block></if> <else pos:start="489:22" pos:end="517:20">else <block pos:start="489:27" pos:end="517:20">{<block_content pos:start="497:24" pos:end="515:24">

                       <comment type="block" pos:start="491:24" pos:end="495:100">/* subtitling_type:

                        * 0x10 - normal with no monitor aspect ratio criticality

                        * 0x20 - for the hard of hearing with no monitor aspect ratio criticality */</comment>

                       <expr_stmt pos:start="497:24" pos:end="497:96"><expr pos:start="497:24" pos:end="497:95"><operator pos:start="497:24" pos:end="497:24">*</operator><name pos:start="497:25" pos:end="497:25">q</name><operator pos:start="497:26" pos:end="497:27">++</operator> <operator pos:start="497:29" pos:end="497:29">=</operator> <ternary pos:start="497:31" pos:end="497:95"><condition pos:start="497:31" pos:end="497:83"><expr pos:start="497:31" pos:end="497:81"><operator pos:start="497:31" pos:end="497:31">(</operator><name pos:start="497:32" pos:end="497:46"><name pos:start="497:32" pos:end="497:33">st</name><operator pos:start="497:34" pos:end="497:35">-&gt;</operator><name pos:start="497:36" pos:end="497:46">disposition</name></name> <operator pos:start="497:48" pos:end="497:48">&amp;</operator> <name pos:start="497:50" pos:end="497:80">AV_DISPOSITION_HEARING_IMPAIRED</name><operator pos:start="497:81" pos:end="497:81">)</operator></expr> ?</condition><then pos:start="497:85" pos:end="497:88"> <expr pos:start="497:85" pos:end="497:88"><literal type="number" pos:start="497:85" pos:end="497:88">0x20</literal></expr> </then><else pos:start="497:90" pos:end="497:95">: <expr pos:start="497:92" pos:end="497:95"><literal type="number" pos:start="497:92" pos:end="497:95">0x10</literal></expr></else></ternary></expr>;</expr_stmt>

                       <if_stmt pos:start="499:24" pos:end="515:24"><if pos:start="499:24" pos:end="509:24">if <condition pos:start="499:27" pos:end="499:87">(<expr pos:start="499:28" pos:end="499:86"><operator pos:start="499:28" pos:end="499:28">(</operator><name pos:start="499:29" pos:end="499:53"><name pos:start="499:29" pos:end="499:30">st</name><operator pos:start="499:31" pos:end="499:32">-&gt;</operator><name pos:start="499:33" pos:end="499:37">codec</name><operator pos:start="499:38" pos:end="499:39">-&gt;</operator><name pos:start="499:40" pos:end="499:53">extradata_size</name></name> <operator pos:start="499:55" pos:end="499:56">==</operator> <literal type="number" pos:start="499:58" pos:end="499:58">4</literal><operator pos:start="499:59" pos:end="499:59">)</operator> <operator pos:start="499:61" pos:end="499:62">&amp;&amp;</operator> <operator pos:start="499:64" pos:end="499:64">(</operator><name pos:start="499:65" pos:end="499:80">extradata_copied</name> <operator pos:start="499:82" pos:end="499:83">==</operator> <literal type="number" pos:start="499:85" pos:end="499:85">0</literal><operator pos:start="499:86" pos:end="499:86">)</operator></expr>)</condition> <block pos:start="499:89" pos:end="509:24">{<block_content pos:start="503:28" pos:end="507:34">

                           <comment type="block" pos:start="501:28" pos:end="501:71">/* support of old 4-byte extradata format */</comment>

                           <expr_stmt pos:start="503:28" pos:end="503:62"><expr pos:start="503:28" pos:end="503:61"><call pos:start="503:28" pos:end="503:61"><name pos:start="503:28" pos:end="503:33">memcpy</name><argument_list pos:start="503:34" pos:end="503:61">(<argument pos:start="503:35" pos:end="503:35"><expr pos:start="503:35" pos:end="503:35"><name pos:start="503:35" pos:end="503:35">q</name></expr></argument>, <argument pos:start="503:38" pos:end="503:57"><expr pos:start="503:38" pos:end="503:57"><name pos:start="503:38" pos:end="503:57"><name pos:start="503:38" pos:end="503:39">st</name><operator pos:start="503:40" pos:end="503:41">-&gt;</operator><name pos:start="503:42" pos:end="503:46">codec</name><operator pos:start="503:47" pos:end="503:48">-&gt;</operator><name pos:start="503:49" pos:end="503:57">extradata</name></name></expr></argument>, <argument pos:start="503:60" pos:end="503:60"><expr pos:start="503:60" pos:end="503:60"><literal type="number" pos:start="503:60" pos:end="503:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="503:64" pos:end="503:110">/* composition_page_id and ancillary_page_id */</comment>

                           <expr_stmt pos:start="505:28" pos:end="505:49"><expr pos:start="505:28" pos:end="505:48"><name pos:start="505:28" pos:end="505:43">extradata_copied</name> <operator pos:start="505:45" pos:end="505:46">+=</operator> <literal type="number" pos:start="505:48" pos:end="505:48">4</literal></expr>;</expr_stmt>

                           <expr_stmt pos:start="507:28" pos:end="507:34"><expr pos:start="507:28" pos:end="507:33"><name pos:start="507:28" pos:end="507:28">q</name> <operator pos:start="507:30" pos:end="507:31">+=</operator> <literal type="number" pos:start="507:33" pos:end="507:33">4</literal></expr>;</expr_stmt>

                       </block_content>}</block></if> <else pos:start="509:26" pos:end="515:24">else <block pos:start="509:31" pos:end="515:24">{<block_content pos:start="511:28" pos:end="513:40">

                           <expr_stmt pos:start="511:28" pos:end="511:40"><expr pos:start="511:28" pos:end="511:39"><call pos:start="511:28" pos:end="511:39"><name pos:start="511:28" pos:end="511:32">put16</name><argument_list pos:start="511:33" pos:end="511:39">(<argument pos:start="511:34" pos:end="511:35"><expr pos:start="511:34" pos:end="511:35"><operator pos:start="511:34" pos:end="511:34">&amp;</operator><name pos:start="511:35" pos:end="511:35">q</name></expr></argument>, <argument pos:start="511:38" pos:end="511:38"><expr pos:start="511:38" pos:end="511:38"><literal type="number" pos:start="511:38" pos:end="511:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="511:42" pos:end="511:66">/* composition_page_id */</comment>

                           <expr_stmt pos:start="513:28" pos:end="513:40"><expr pos:start="513:28" pos:end="513:39"><call pos:start="513:28" pos:end="513:39"><name pos:start="513:28" pos:end="513:32">put16</name><argument_list pos:start="513:33" pos:end="513:39">(<argument pos:start="513:34" pos:end="513:35"><expr pos:start="513:34" pos:end="513:35"><operator pos:start="513:34" pos:end="513:34">&amp;</operator><name pos:start="513:35" pos:end="513:35">q</name></expr></argument>, <argument pos:start="513:38" pos:end="513:38"><expr pos:start="513:38" pos:end="513:38"><literal type="number" pos:start="513:38" pos:end="513:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="513:42" pos:end="513:64">/* ancillary_page_id */</comment>

                       </block_content>}</block></else></if_stmt>

                   </block_content>}</block></else></if_stmt>

               </block_content>}</block></while>



               <expr_stmt pos:start="523:16" pos:end="523:42"><expr pos:start="523:16" pos:end="523:41"><operator pos:start="523:16" pos:end="523:16">*</operator><name pos:start="523:17" pos:end="523:23">len_ptr</name> <operator pos:start="523:25" pos:end="523:25">=</operator> <name pos:start="523:27" pos:end="523:27">q</name> <operator pos:start="523:29" pos:end="523:29">-</operator> <name pos:start="523:31" pos:end="523:37">len_ptr</name> <operator pos:start="523:39" pos:end="523:39">-</operator> <literal type="number" pos:start="523:41" pos:end="523:41">1</literal></expr>;</expr_stmt>

           </block_content>}</block></if> <if type="elseif" pos:start="525:14" pos:end="587:13">else if <condition pos:start="525:22" pos:end="525:70">(<expr pos:start="525:23" pos:end="525:69"><name pos:start="525:23" pos:end="525:41"><name pos:start="525:23" pos:end="525:24">st</name><operator pos:start="525:25" pos:end="525:26">-&gt;</operator><name pos:start="525:27" pos:end="525:31">codec</name><operator pos:start="525:32" pos:end="525:33">-&gt;</operator><name pos:start="525:34" pos:end="525:41">codec_id</name></name> <operator pos:start="525:43" pos:end="525:44">==</operator> <name pos:start="525:46" pos:end="525:69">AV_CODEC_ID_DVB_TELETEXT</name></expr>)</condition> <block pos:start="525:72" pos:end="587:13">{<block_content pos:start="527:16" pos:end="585:42">

               <decl_stmt pos:start="527:16" pos:end="527:39"><decl pos:start="527:16" pos:end="527:38"><type pos:start="527:16" pos:end="527:24"><name pos:start="527:16" pos:end="527:22">uint8_t</name> <modifier pos:start="527:24" pos:end="527:24">*</modifier></type><name pos:start="527:25" pos:end="527:31">len_ptr</name> <init pos:start="527:33" pos:end="527:38">= <expr pos:start="527:35" pos:end="527:38"><name pos:start="527:35" pos:end="527:38">NULL</name></expr></init></decl>;</decl_stmt>

               <decl_stmt pos:start="529:16" pos:end="529:40"><decl pos:start="529:16" pos:end="529:39"><type pos:start="529:16" pos:end="529:18"><name pos:start="529:16" pos:end="529:18">int</name></type> <name pos:start="529:20" pos:end="529:35">extradata_copied</name> <init pos:start="529:37" pos:end="529:39">= <expr pos:start="529:39" pos:end="529:39"><literal type="number" pos:start="529:39" pos:end="529:39">0</literal></expr></init></decl>;</decl_stmt>



               <comment type="block" pos:start="533:16" pos:end="533:60">/* The descriptor tag. teletext_descriptor */</comment>

               <expr_stmt pos:start="535:16" pos:end="535:27"><expr pos:start="535:16" pos:end="535:26"><operator pos:start="535:16" pos:end="535:16">*</operator><name pos:start="535:17" pos:end="535:17">q</name><operator pos:start="535:18" pos:end="535:19">++</operator> <operator pos:start="535:21" pos:end="535:21">=</operator> <literal type="number" pos:start="535:23" pos:end="535:26">0x56</literal></expr>;</expr_stmt>

               <expr_stmt pos:start="537:16" pos:end="537:29"><expr pos:start="537:16" pos:end="537:28"><name pos:start="537:16" pos:end="537:22">len_ptr</name> <operator pos:start="537:24" pos:end="537:24">=</operator> <name pos:start="537:26" pos:end="537:26">q</name><operator pos:start="537:27" pos:end="537:28">++</operator></expr>;</expr_stmt>



               <while pos:start="541:16" pos:end="581:16">while <condition pos:start="541:22" pos:end="541:75">(<expr pos:start="541:23" pos:end="541:74"><call pos:start="541:23" pos:end="541:38"><name pos:start="541:23" pos:end="541:28">strlen</name><argument_list pos:start="541:29" pos:end="541:38">(<argument pos:start="541:30" pos:end="541:37"><expr pos:start="541:30" pos:end="541:37"><name pos:start="541:30" pos:end="541:37">language</name></expr></argument>)</argument_list></call> <operator pos:start="541:40" pos:end="541:41">&gt;=</operator> <literal type="number" pos:start="541:43" pos:end="541:43">3</literal> <operator pos:start="541:45" pos:end="541:46">&amp;&amp;</operator> <name pos:start="541:48" pos:end="541:48">q</name> <operator pos:start="541:50" pos:end="541:50">-</operator> <name pos:start="541:52" pos:end="541:55">data</name> <operator pos:start="541:57" pos:end="541:57">&lt;</operator> <sizeof pos:start="541:59" pos:end="541:70">sizeof<argument_list pos:start="541:65" pos:end="541:70">(<argument pos:start="541:66" pos:end="541:69"><expr pos:start="541:66" pos:end="541:69"><name pos:start="541:66" pos:end="541:69">data</name></expr></argument>)</argument_list></sizeof> <operator pos:start="541:72" pos:end="541:72">-</operator> <literal type="number" pos:start="541:74" pos:end="541:74">6</literal></expr>)</condition> <block pos:start="541:77" pos:end="581:16">{<block_content pos:start="543:20" pos:end="579:20">

                   <expr_stmt pos:start="543:20" pos:end="543:38"><expr pos:start="543:20" pos:end="543:37"><operator pos:start="543:20" pos:end="543:20">*</operator><name pos:start="543:21" pos:end="543:21">q</name><operator pos:start="543:22" pos:end="543:23">++</operator> <operator pos:start="543:25" pos:end="543:25">=</operator> <operator pos:start="543:27" pos:end="543:27">*</operator><name pos:start="543:28" pos:end="543:35">language</name><operator pos:start="543:36" pos:end="543:37">++</operator></expr>;</expr_stmt>

                   <expr_stmt pos:start="545:20" pos:end="545:38"><expr pos:start="545:20" pos:end="545:37"><operator pos:start="545:20" pos:end="545:20">*</operator><name pos:start="545:21" pos:end="545:21">q</name><operator pos:start="545:22" pos:end="545:23">++</operator> <operator pos:start="545:25" pos:end="545:25">=</operator> <operator pos:start="545:27" pos:end="545:27">*</operator><name pos:start="545:28" pos:end="545:35">language</name><operator pos:start="545:36" pos:end="545:37">++</operator></expr>;</expr_stmt>

                   <expr_stmt pos:start="547:20" pos:end="547:38"><expr pos:start="547:20" pos:end="547:37"><operator pos:start="547:20" pos:end="547:20">*</operator><name pos:start="547:21" pos:end="547:21">q</name><operator pos:start="547:22" pos:end="547:23">++</operator> <operator pos:start="547:25" pos:end="547:25">=</operator> <operator pos:start="547:27" pos:end="547:27">*</operator><name pos:start="547:28" pos:end="547:35">language</name><operator pos:start="547:36" pos:end="547:37">++</operator></expr>;</expr_stmt>

                   <comment type="block" pos:start="549:20" pos:end="549:35">/* Skip comma */</comment>

                   <if_stmt pos:start="551:20" pos:end="553:34"><if pos:start="551:20" pos:end="553:34">if <condition pos:start="551:23" pos:end="551:41">(<expr pos:start="551:24" pos:end="551:40"><operator pos:start="551:24" pos:end="551:24">*</operator><name pos:start="551:25" pos:end="551:32">language</name> <operator pos:start="551:34" pos:end="551:35">!=</operator> <literal type="char" pos:start="551:37" pos:end="551:40">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="553:24" pos:end="553:34"><block_content pos:start="553:24" pos:end="553:34">

                       <expr_stmt pos:start="553:24" pos:end="553:34"><expr pos:start="553:24" pos:end="553:33"><name pos:start="553:24" pos:end="553:31">language</name><operator pos:start="553:32" pos:end="553:33">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



                   <if_stmt pos:start="557:20" pos:end="579:20"><if pos:start="557:20" pos:end="565:20">if <condition pos:start="557:23" pos:end="557:72">(<expr pos:start="557:24" pos:end="557:71"><name pos:start="557:24" pos:end="557:48"><name pos:start="557:24" pos:end="557:25">st</name><operator pos:start="557:26" pos:end="557:27">-&gt;</operator><name pos:start="557:28" pos:end="557:32">codec</name><operator pos:start="557:33" pos:end="557:34">-&gt;</operator><name pos:start="557:35" pos:end="557:48">extradata_size</name></name> <operator pos:start="557:50" pos:end="557:50">-</operator> <literal type="number" pos:start="557:52" pos:end="557:52">1</literal> <operator pos:start="557:54" pos:end="557:54">&gt;</operator> <name pos:start="557:56" pos:end="557:71">extradata_copied</name></expr>)</condition> <block pos:start="557:74" pos:end="565:20">{<block_content pos:start="559:24" pos:end="563:30">

                       <expr_stmt pos:start="559:24" pos:end="559:77"><expr pos:start="559:24" pos:end="559:76"><call pos:start="559:24" pos:end="559:76"><name pos:start="559:24" pos:end="559:29">memcpy</name><argument_list pos:start="559:30" pos:end="559:76">(<argument pos:start="559:31" pos:end="559:31"><expr pos:start="559:31" pos:end="559:31"><name pos:start="559:31" pos:end="559:31">q</name></expr></argument>, <argument pos:start="559:34" pos:end="559:72"><expr pos:start="559:34" pos:end="559:72"><name pos:start="559:34" pos:end="559:53"><name pos:start="559:34" pos:end="559:35">st</name><operator pos:start="559:36" pos:end="559:37">-&gt;</operator><name pos:start="559:38" pos:end="559:42">codec</name><operator pos:start="559:43" pos:end="559:44">-&gt;</operator><name pos:start="559:45" pos:end="559:53">extradata</name></name> <operator pos:start="559:55" pos:end="559:55">+</operator> <name pos:start="559:57" pos:end="559:72">extradata_copied</name></expr></argument>, <argument pos:start="559:75" pos:end="559:75"><expr pos:start="559:75" pos:end="559:75"><literal type="number" pos:start="559:75" pos:end="559:75">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                       <expr_stmt pos:start="561:24" pos:end="561:45"><expr pos:start="561:24" pos:end="561:44"><name pos:start="561:24" pos:end="561:39">extradata_copied</name> <operator pos:start="561:41" pos:end="561:42">+=</operator> <literal type="number" pos:start="561:44" pos:end="561:44">2</literal></expr>;</expr_stmt>

                       <expr_stmt pos:start="563:24" pos:end="563:30"><expr pos:start="563:24" pos:end="563:29"><name pos:start="563:24" pos:end="563:24">q</name> <operator pos:start="563:26" pos:end="563:27">+=</operator> <literal type="number" pos:start="563:29" pos:end="563:29">2</literal></expr>;</expr_stmt>

                   </block_content>}</block></if> <else pos:start="565:22" pos:end="579:20">else <block pos:start="565:27" pos:end="579:20">{<block_content pos:start="575:24" pos:end="577:35">

                       <comment type="block" pos:start="567:24" pos:end="573:130">/* The Teletext descriptor:

                        * teletext_type: This 5-bit field indicates the type of Teletext page indicated. (0x01 Initial Teletext page)

                        * teletext_magazine_number: This is a 3-bit field which identifies the magazine number.

                        * teletext_page_number: This is an 8-bit field giving two 4-bit hex digits identifying the page number. */</comment>

                       <expr_stmt pos:start="575:24" pos:end="575:35"><expr pos:start="575:24" pos:end="575:34"><operator pos:start="575:24" pos:end="575:24">*</operator><name pos:start="575:25" pos:end="575:25">q</name><operator pos:start="575:26" pos:end="575:27">++</operator> <operator pos:start="575:29" pos:end="575:29">=</operator> <literal type="number" pos:start="575:31" pos:end="575:34">0x08</literal></expr>;</expr_stmt>

                       <expr_stmt pos:start="577:24" pos:end="577:35"><expr pos:start="577:24" pos:end="577:34"><operator pos:start="577:24" pos:end="577:24">*</operator><name pos:start="577:25" pos:end="577:25">q</name><operator pos:start="577:26" pos:end="577:27">++</operator> <operator pos:start="577:29" pos:end="577:29">=</operator> <literal type="number" pos:start="577:31" pos:end="577:34">0x00</literal></expr>;</expr_stmt>

                   </block_content>}</block></else></if_stmt>

               </block_content>}</block></while>



               <expr_stmt pos:start="585:16" pos:end="585:42"><expr pos:start="585:16" pos:end="585:41"><operator pos:start="585:16" pos:end="585:16">*</operator><name pos:start="585:17" pos:end="585:23">len_ptr</name> <operator pos:start="585:25" pos:end="585:25">=</operator> <name pos:start="585:27" pos:end="585:27">q</name> <operator pos:start="585:29" pos:end="585:29">-</operator> <name pos:start="585:31" pos:end="585:37">len_ptr</name> <operator pos:start="585:39" pos:end="585:39">-</operator> <literal type="number" pos:start="585:41" pos:end="585:41">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="591:9" pos:end="591:14">break;</break>

        <case pos:start="593:9" pos:end="593:32">case <expr pos:start="593:14" pos:end="593:31"><name pos:start="593:14" pos:end="593:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <if_stmt pos:start="595:13" pos:end="623:13"><if pos:start="595:13" pos:end="609:13">if <condition pos:start="595:16" pos:end="595:55">(<expr pos:start="595:17" pos:end="595:54"><name pos:start="595:17" pos:end="595:27">stream_type</name> <operator pos:start="595:29" pos:end="595:30">==</operator> <name pos:start="595:32" pos:end="595:54">STREAM_TYPE_VIDEO_DIRAC</name></expr>)</condition> <block pos:start="595:57" pos:end="609:13">{<block_content pos:start="597:17" pos:end="607:27">

                <expr_stmt pos:start="597:17" pos:end="597:28"><expr pos:start="597:17" pos:end="597:27"><operator pos:start="597:17" pos:end="597:17">*</operator><name pos:start="597:18" pos:end="597:18">q</name><operator pos:start="597:19" pos:end="597:20">++</operator> <operator pos:start="597:22" pos:end="597:22">=</operator> <literal type="number" pos:start="597:24" pos:end="597:27">0x05</literal></expr>;</expr_stmt> <comment type="block" pos:start="597:30" pos:end="597:63">/*MPEG-2 registration descriptor*/</comment>

                <expr_stmt pos:start="599:17" pos:end="599:25"><expr pos:start="599:17" pos:end="599:24"><operator pos:start="599:17" pos:end="599:17">*</operator><name pos:start="599:18" pos:end="599:18">q</name><operator pos:start="599:19" pos:end="599:20">++</operator> <operator pos:start="599:22" pos:end="599:22">=</operator> <literal type="number" pos:start="599:24" pos:end="599:24">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="601:17" pos:end="601:27"><expr pos:start="601:17" pos:end="601:26"><operator pos:start="601:17" pos:end="601:17">*</operator><name pos:start="601:18" pos:end="601:18">q</name><operator pos:start="601:19" pos:end="601:20">++</operator> <operator pos:start="601:22" pos:end="601:22">=</operator> <literal type="char" pos:start="601:24" pos:end="601:26">'d'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="603:17" pos:end="603:27"><expr pos:start="603:17" pos:end="603:26"><operator pos:start="603:17" pos:end="603:17">*</operator><name pos:start="603:18" pos:end="603:18">q</name><operator pos:start="603:19" pos:end="603:20">++</operator> <operator pos:start="603:22" pos:end="603:22">=</operator> <literal type="char" pos:start="603:24" pos:end="603:26">'r'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="605:17" pos:end="605:27"><expr pos:start="605:17" pos:end="605:26"><operator pos:start="605:17" pos:end="605:17">*</operator><name pos:start="605:18" pos:end="605:18">q</name><operator pos:start="605:19" pos:end="605:20">++</operator> <operator pos:start="605:22" pos:end="605:22">=</operator> <literal type="char" pos:start="605:24" pos:end="605:26">'a'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="607:17" pos:end="607:27"><expr pos:start="607:17" pos:end="607:26"><operator pos:start="607:17" pos:end="607:17">*</operator><name pos:start="607:18" pos:end="607:18">q</name><operator pos:start="607:19" pos:end="607:20">++</operator> <operator pos:start="607:22" pos:end="607:22">=</operator> <literal type="char" pos:start="607:24" pos:end="607:26">'c'</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="609:15" pos:end="623:13">else if <condition pos:start="609:23" pos:end="609:60">(<expr pos:start="609:24" pos:end="609:59"><name pos:start="609:24" pos:end="609:34">stream_type</name> <operator pos:start="609:36" pos:end="609:37">==</operator> <name pos:start="609:39" pos:end="609:59">STREAM_TYPE_VIDEO_VC1</name></expr>)</condition> <block pos:start="609:62" pos:end="623:13">{<block_content pos:start="611:17" pos:end="621:27">

                <expr_stmt pos:start="611:17" pos:end="611:28"><expr pos:start="611:17" pos:end="611:27"><operator pos:start="611:17" pos:end="611:17">*</operator><name pos:start="611:18" pos:end="611:18">q</name><operator pos:start="611:19" pos:end="611:20">++</operator> <operator pos:start="611:22" pos:end="611:22">=</operator> <literal type="number" pos:start="611:24" pos:end="611:27">0x05</literal></expr>;</expr_stmt> <comment type="block" pos:start="611:30" pos:end="611:63">/*MPEG-2 registration descriptor*/</comment>

                <expr_stmt pos:start="613:17" pos:end="613:25"><expr pos:start="613:17" pos:end="613:24"><operator pos:start="613:17" pos:end="613:17">*</operator><name pos:start="613:18" pos:end="613:18">q</name><operator pos:start="613:19" pos:end="613:20">++</operator> <operator pos:start="613:22" pos:end="613:22">=</operator> <literal type="number" pos:start="613:24" pos:end="613:24">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="615:17" pos:end="615:27"><expr pos:start="615:17" pos:end="615:26"><operator pos:start="615:17" pos:end="615:17">*</operator><name pos:start="615:18" pos:end="615:18">q</name><operator pos:start="615:19" pos:end="615:20">++</operator> <operator pos:start="615:22" pos:end="615:22">=</operator> <literal type="char" pos:start="615:24" pos:end="615:26">'V'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="617:17" pos:end="617:27"><expr pos:start="617:17" pos:end="617:26"><operator pos:start="617:17" pos:end="617:17">*</operator><name pos:start="617:18" pos:end="617:18">q</name><operator pos:start="617:19" pos:end="617:20">++</operator> <operator pos:start="617:22" pos:end="617:22">=</operator> <literal type="char" pos:start="617:24" pos:end="617:26">'C'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="619:17" pos:end="619:27"><expr pos:start="619:17" pos:end="619:26"><operator pos:start="619:17" pos:end="619:17">*</operator><name pos:start="619:18" pos:end="619:18">q</name><operator pos:start="619:19" pos:end="619:20">++</operator> <operator pos:start="619:22" pos:end="619:22">=</operator> <literal type="char" pos:start="619:24" pos:end="619:26">'-'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="621:17" pos:end="621:27"><expr pos:start="621:17" pos:end="621:26"><operator pos:start="621:17" pos:end="621:17">*</operator><name pos:start="621:18" pos:end="621:18">q</name><operator pos:start="621:19" pos:end="621:20">++</operator> <operator pos:start="621:22" pos:end="621:22">=</operator> <literal type="char" pos:start="621:24" pos:end="621:26">'1'</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="625:13" pos:end="625:18">break;</break>

        <case pos:start="627:9" pos:end="627:31">case <expr pos:start="627:14" pos:end="627:30"><name pos:start="627:14" pos:end="627:30">AVMEDIA_TYPE_DATA</name></expr>:</case>

            <if_stmt pos:start="629:13" pos:end="643:13"><if pos:start="629:13" pos:end="643:13">if <condition pos:start="629:16" pos:end="629:61">(<expr pos:start="629:17" pos:end="629:60"><name pos:start="629:17" pos:end="629:35"><name pos:start="629:17" pos:end="629:18">st</name><operator pos:start="629:19" pos:end="629:20">-&gt;</operator><name pos:start="629:21" pos:end="629:25">codec</name><operator pos:start="629:26" pos:end="629:27">-&gt;</operator><name pos:start="629:28" pos:end="629:35">codec_id</name></name> <operator pos:start="629:37" pos:end="629:38">==</operator> <name pos:start="629:40" pos:end="629:60">AV_CODEC_ID_SMPTE_KLV</name></expr>)</condition> <block pos:start="629:63" pos:end="643:13">{<block_content pos:start="631:17" pos:end="641:27">

                <expr_stmt pos:start="631:17" pos:end="631:28"><expr pos:start="631:17" pos:end="631:27"><operator pos:start="631:17" pos:end="631:17">*</operator><name pos:start="631:18" pos:end="631:18">q</name><operator pos:start="631:19" pos:end="631:20">++</operator> <operator pos:start="631:22" pos:end="631:22">=</operator> <literal type="number" pos:start="631:24" pos:end="631:27">0x05</literal></expr>;</expr_stmt> <comment type="block" pos:start="631:30" pos:end="631:65">/* MPEG-2 registration descriptor */</comment>

                <expr_stmt pos:start="633:17" pos:end="633:25"><expr pos:start="633:17" pos:end="633:24"><operator pos:start="633:17" pos:end="633:17">*</operator><name pos:start="633:18" pos:end="633:18">q</name><operator pos:start="633:19" pos:end="633:20">++</operator> <operator pos:start="633:22" pos:end="633:22">=</operator> <literal type="number" pos:start="633:24" pos:end="633:24">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="635:17" pos:end="635:27"><expr pos:start="635:17" pos:end="635:26"><operator pos:start="635:17" pos:end="635:17">*</operator><name pos:start="635:18" pos:end="635:18">q</name><operator pos:start="635:19" pos:end="635:20">++</operator> <operator pos:start="635:22" pos:end="635:22">=</operator> <literal type="char" pos:start="635:24" pos:end="635:26">'K'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="637:17" pos:end="637:27"><expr pos:start="637:17" pos:end="637:26"><operator pos:start="637:17" pos:end="637:17">*</operator><name pos:start="637:18" pos:end="637:18">q</name><operator pos:start="637:19" pos:end="637:20">++</operator> <operator pos:start="637:22" pos:end="637:22">=</operator> <literal type="char" pos:start="637:24" pos:end="637:26">'L'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="639:17" pos:end="639:27"><expr pos:start="639:17" pos:end="639:26"><operator pos:start="639:17" pos:end="639:17">*</operator><name pos:start="639:18" pos:end="639:18">q</name><operator pos:start="639:19" pos:end="639:20">++</operator> <operator pos:start="639:22" pos:end="639:22">=</operator> <literal type="char" pos:start="639:24" pos:end="639:26">'V'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="641:17" pos:end="641:27"><expr pos:start="641:17" pos:end="641:26"><operator pos:start="641:17" pos:end="641:17">*</operator><name pos:start="641:18" pos:end="641:18">q</name><operator pos:start="641:19" pos:end="641:20">++</operator> <operator pos:start="641:22" pos:end="641:22">=</operator> <literal type="char" pos:start="641:24" pos:end="641:26">'A'</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="645:13" pos:end="645:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="651:9" pos:end="651:49"><expr pos:start="651:9" pos:end="651:48"><name pos:start="651:9" pos:end="651:11">val</name> <operator pos:start="651:13" pos:end="651:13">=</operator> <literal type="number" pos:start="651:15" pos:end="651:20">0xf000</literal> <operator pos:start="651:22" pos:end="651:22">|</operator> <operator pos:start="651:24" pos:end="651:24">(</operator><name pos:start="651:25" pos:end="651:25">q</name> <operator pos:start="651:27" pos:end="651:27">-</operator> <name pos:start="651:29" pos:end="651:43">desc_length_ptr</name> <operator pos:start="651:45" pos:end="651:45">-</operator> <literal type="number" pos:start="651:47" pos:end="651:47">2</literal><operator pos:start="651:48" pos:end="651:48">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="653:9" pos:end="653:38"><expr pos:start="653:9" pos:end="653:37"><name pos:start="653:9" pos:end="653:26"><name pos:start="653:9" pos:end="653:23">desc_length_ptr</name><index pos:start="653:24" pos:end="653:26">[<expr pos:start="653:25" pos:end="653:25"><literal type="number" pos:start="653:25" pos:end="653:25">0</literal></expr>]</index></name> <operator pos:start="653:28" pos:end="653:28">=</operator> <name pos:start="653:30" pos:end="653:32">val</name> <operator pos:start="653:34" pos:end="653:35">&gt;&gt;</operator> <literal type="number" pos:start="653:37" pos:end="653:37">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="655:9" pos:end="655:33"><expr pos:start="655:9" pos:end="655:32"><name pos:start="655:9" pos:end="655:26"><name pos:start="655:9" pos:end="655:23">desc_length_ptr</name><index pos:start="655:24" pos:end="655:26">[<expr pos:start="655:25" pos:end="655:25"><literal type="number" pos:start="655:25" pos:end="655:25">1</literal></expr>]</index></name> <operator pos:start="655:28" pos:end="655:28">=</operator> <name pos:start="655:30" pos:end="655:32">val</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="661:5" pos:end="669:55"><if pos:start="661:5" pos:end="669:55">if <condition pos:start="661:8" pos:end="661:12">(<expr pos:start="661:9" pos:end="661:11"><name pos:start="661:9" pos:end="661:11">err</name></expr>)</condition><block type="pseudo" pos:start="663:9" pos:end="669:55"><block_content pos:start="663:9" pos:end="669:55">

        <expr_stmt pos:start="663:9" pos:end="669:55"><expr pos:start="663:9" pos:end="669:54"><call pos:start="663:9" pos:end="669:54"><name pos:start="663:9" pos:end="663:14">av_log</name><argument_list pos:start="663:15" pos:end="669:54">(<argument pos:start="663:16" pos:end="663:16"><expr pos:start="663:16" pos:end="663:16"><name pos:start="663:16" pos:end="663:16">s</name></expr></argument>, <argument pos:start="663:19" pos:end="663:30"><expr pos:start="663:19" pos:end="663:30"><name pos:start="663:19" pos:end="663:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="665:16" pos:end="669:50"><expr pos:start="665:16" pos:end="669:50"><literal type="string" pos:start="665:16" pos:end="665:82">"The PMT section cannot fit stream %d and all following streams.\n"</literal>

               <literal type="string" pos:start="667:16" pos:end="667:75">"Try reducing the number of languages in the audio streams "</literal>

               <literal type="string" pos:start="669:16" pos:end="669:50">"or the total number of streams.\n"</literal></expr></argument>, <argument pos:start="669:53" pos:end="669:53"><expr pos:start="669:53" pos:end="669:53"><name pos:start="669:53" pos:end="669:53">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="673:5" pos:end="675:42"><expr pos:start="673:5" pos:end="675:41"><call pos:start="673:5" pos:end="675:41"><name pos:start="673:5" pos:end="673:25">mpegts_write_section1</name><argument_list pos:start="673:26" pos:end="675:41">(<argument pos:start="673:27" pos:end="673:39"><expr pos:start="673:27" pos:end="673:39"><operator pos:start="673:27" pos:end="673:27">&amp;</operator><name pos:start="673:28" pos:end="673:39"><name pos:start="673:28" pos:end="673:34">service</name><operator pos:start="673:35" pos:end="673:36">-&gt;</operator><name pos:start="673:37" pos:end="673:39">pmt</name></name></expr></argument>, <argument pos:start="673:42" pos:end="673:48"><expr pos:start="673:42" pos:end="673:48"><name pos:start="673:42" pos:end="673:48">PMT_TID</name></expr></argument>, <argument pos:start="673:51" pos:end="673:62"><expr pos:start="673:51" pos:end="673:62"><name pos:start="673:51" pos:end="673:62"><name pos:start="673:51" pos:end="673:57">service</name><operator pos:start="673:58" pos:end="673:59">-&gt;</operator><name pos:start="673:60" pos:end="673:62">sid</name></name></expr></argument>, <argument pos:start="673:65" pos:end="673:82"><expr pos:start="673:65" pos:end="673:82"><name pos:start="673:65" pos:end="673:82"><name pos:start="673:65" pos:end="673:66">ts</name><operator pos:start="673:67" pos:end="673:68">-&gt;</operator><name pos:start="673:69" pos:end="673:82">tables_version</name></name></expr></argument>, <argument pos:start="673:85" pos:end="673:85"><expr pos:start="673:85" pos:end="673:85"><literal type="number" pos:start="673:85" pos:end="673:85">0</literal></expr></argument>, <argument pos:start="673:88" pos:end="673:88"><expr pos:start="673:88" pos:end="673:88"><literal type="number" pos:start="673:88" pos:end="673:88">0</literal></expr></argument>,

                          <argument pos:start="675:27" pos:end="675:30"><expr pos:start="675:27" pos:end="675:30"><name pos:start="675:27" pos:end="675:30">data</name></expr></argument>, <argument pos:start="675:33" pos:end="675:40"><expr pos:start="675:33" pos:end="675:40"><name pos:start="675:33" pos:end="675:33">q</name> <operator pos:start="675:35" pos:end="675:35">-</operator> <name pos:start="675:37" pos:end="675:40">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="677:5" pos:end="677:13">return <expr pos:start="677:12" pos:end="677:12"><literal type="number" pos:start="677:12" pos:end="677:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
