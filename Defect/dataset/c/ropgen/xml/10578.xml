<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10578.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">vtd_context_device_invalidate</name><parameter_list pos:start="1:42" pos:end="5:61">(<parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><name pos:start="1:43" pos:end="1:57">IntelIOMMUState</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">s</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:60"><decl pos:start="3:43" pos:end="3:60"><type pos:start="3:43" pos:end="3:60"><name pos:start="3:43" pos:end="3:50">uint16_t</name></type> <name pos:start="3:52" pos:end="3:60">source_id</name></decl></parameter>,

                                          <parameter pos:start="5:43" pos:end="5:60"><decl pos:start="5:43" pos:end="5:60"><type pos:start="5:43" pos:end="5:60"><name pos:start="5:43" pos:end="5:50">uint16_t</name></type> <name pos:start="5:52" pos:end="5:60">func_mask</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="77:1">{<block_content pos:start="9:5" pos:end="75:5">

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:17">mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:19">VTDAddressSpace</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier><modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:29">pvtd_as</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">VTDAddressSpace</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:27">vtd_as</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint16_t</name></type> <name pos:start="15:14" pos:end="15:18">devfn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint16_t</name></type> <name pos:start="17:14" pos:end="17:21">devfn_it</name></decl>;</decl_stmt>



    <switch pos:start="21:5" pos:end="47:5">switch <condition pos:start="21:12" pos:end="21:26">(<expr pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:21">func_mask</name> <operator pos:start="21:23" pos:end="21:23">&amp;</operator> <literal type="number" pos:start="21:25" pos:end="21:25">3</literal></expr>)</condition> <block pos:start="21:28" pos:end="47:5">{<block_content pos:start="23:5" pos:end="45:14">

    <case pos:start="23:5" pos:end="23:11">case <expr pos:start="23:10" pos:end="23:10"><literal type="number" pos:start="23:10" pos:end="23:10">0</literal></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:17"><expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:12">mask</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</expr_stmt>   <comment type="block" pos:start="25:21" pos:end="25:57">/* No bits in the SID field masked */</comment>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">1</literal></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:17"><expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:12">mask</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <literal type="number" pos:start="31:16" pos:end="31:16">4</literal></expr>;</expr_stmt>   <comment type="block" pos:start="31:21" pos:end="31:53">/* Mask bit 2 in the SID field */</comment>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:11">case <expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">2</literal></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:17"><expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:12">mask</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <literal type="number" pos:start="37:16" pos:end="37:16">6</literal></expr>;</expr_stmt>   <comment type="block" pos:start="37:21" pos:end="37:55">/* Mask bit 2:1 in the SID field */</comment>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:11">case <expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">3</literal></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:17"><expr pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:12">mask</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <literal type="number" pos:start="43:16" pos:end="43:16">7</literal></expr>;</expr_stmt>   <comment type="block" pos:start="43:21" pos:end="43:55">/* Mask bit 2:0 in the SID field */</comment>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="49:5" pos:end="51:54"><expr pos:start="49:5" pos:end="51:53"><call pos:start="49:5" pos:end="51:53"><name pos:start="49:5" pos:end="49:15">VTD_DPRINTF</name><argument_list pos:start="49:16" pos:end="51:53">(<argument pos:start="49:17" pos:end="49:19"><expr pos:start="49:17" pos:end="49:19"><name pos:start="49:17" pos:end="49:19">INV</name></expr></argument>, <argument pos:start="49:22" pos:end="51:35"><expr pos:start="49:22" pos:end="51:35"><literal type="string" pos:start="49:22" pos:end="49:63">"device-selective invalidation source 0x%"</literal><name pos:start="49:64" pos:end="49:69">PRIx16</name>

                    <literal type="string" pos:start="51:21" pos:end="51:29">" mask %"</literal><name pos:start="51:30" pos:end="51:35">PRIu16</name></expr></argument>, <argument pos:start="51:38" pos:end="51:46"><expr pos:start="51:38" pos:end="51:46"><name pos:start="51:38" pos:end="51:46">source_id</name></expr></argument>, <argument pos:start="51:49" pos:end="51:52"><expr pos:start="51:49" pos:end="51:52"><name pos:start="51:49" pos:end="51:52">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:59"><expr pos:start="53:5" pos:end="53:58"><name pos:start="53:5" pos:end="53:11">pvtd_as</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:58"><name pos:start="53:15" pos:end="53:15">s</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:31">address_spaces</name><index pos:start="53:32" pos:end="53:58">[<expr pos:start="53:33" pos:end="53:57"><call pos:start="53:33" pos:end="53:57"><name pos:start="53:33" pos:end="53:46">VTD_SID_TO_BUS</name><argument_list pos:start="53:47" pos:end="53:57">(<argument pos:start="53:48" pos:end="53:56"><expr pos:start="53:48" pos:end="53:56"><name pos:start="53:48" pos:end="53:56">source_id</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="75:5"><if pos:start="55:5" pos:end="75:5">if <condition pos:start="55:8" pos:end="55:16">(<expr pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:15">pvtd_as</name></expr>)</condition> <block pos:start="55:18" pos:end="75:5">{<block_content pos:start="57:9" pos:end="73:9">

        <expr_stmt pos:start="57:9" pos:end="57:44"><expr pos:start="57:9" pos:end="57:43"><name pos:start="57:9" pos:end="57:13">devfn</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <call pos:start="57:17" pos:end="57:43"><name pos:start="57:17" pos:end="57:32">VTD_SID_TO_DEVFN</name><argument_list pos:start="57:33" pos:end="57:43">(<argument pos:start="57:34" pos:end="57:42"><expr pos:start="57:34" pos:end="57:42"><name pos:start="57:34" pos:end="57:42">source_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="59:9" pos:end="73:9">for <control pos:start="59:13" pos:end="59:68">(<init pos:start="59:14" pos:end="59:26"><expr pos:start="59:14" pos:end="59:25"><name pos:start="59:14" pos:end="59:21">devfn_it</name> <operator pos:start="59:23" pos:end="59:23">=</operator> <literal type="number" pos:start="59:25" pos:end="59:25">0</literal></expr>;</init> <condition pos:start="59:28" pos:end="59:56"><expr pos:start="59:28" pos:end="59:55"><name pos:start="59:28" pos:end="59:35">devfn_it</name> <operator pos:start="59:37" pos:end="59:37">&lt;</operator> <name pos:start="59:39" pos:end="59:55">VTD_PCI_DEVFN_MAX</name></expr>;</condition> <incr pos:start="59:58" pos:end="59:67"><expr pos:start="59:58" pos:end="59:67"><operator pos:start="59:58" pos:end="59:59">++</operator><name pos:start="59:60" pos:end="59:67">devfn_it</name></expr></incr>)</control> <block pos:start="59:70" pos:end="73:9">{<block_content pos:start="61:13" pos:end="71:13">

            <expr_stmt pos:start="61:13" pos:end="61:39"><expr pos:start="61:13" pos:end="61:38"><name pos:start="61:13" pos:end="61:18">vtd_as</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:38"><name pos:start="61:22" pos:end="61:28">pvtd_as</name><index pos:start="61:29" pos:end="61:38">[<expr pos:start="61:30" pos:end="61:37"><name pos:start="61:30" pos:end="61:37">devfn_it</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="71:13"><if pos:start="63:13" pos:end="71:13">if <condition pos:start="63:16" pos:end="63:64">(<expr pos:start="63:17" pos:end="63:63"><name pos:start="63:17" pos:end="63:22">vtd_as</name> <operator pos:start="63:24" pos:end="63:25">&amp;&amp;</operator> <operator pos:start="63:27" pos:end="63:27">(</operator><operator pos:start="63:28" pos:end="63:28">(</operator><name pos:start="63:29" pos:end="63:36">devfn_it</name> <operator pos:start="63:38" pos:end="63:38">&amp;</operator> <name pos:start="63:40" pos:end="63:43">mask</name><operator pos:start="63:44" pos:end="63:44">)</operator> <operator pos:start="63:46" pos:end="63:47">==</operator> <operator pos:start="63:49" pos:end="63:49">(</operator><name pos:start="63:50" pos:end="63:54">devfn</name> <operator pos:start="63:56" pos:end="63:56">&amp;</operator> <name pos:start="63:58" pos:end="63:61">mask</name><operator pos:start="63:62" pos:end="63:62">)</operator><operator pos:start="63:63" pos:end="63:63">)</operator></expr>)</condition> <block pos:start="63:66" pos:end="71:13">{<block_content pos:start="65:17" pos:end="69:66">

                <expr_stmt pos:start="65:17" pos:end="67:38"><expr pos:start="65:17" pos:end="67:37"><call pos:start="65:17" pos:end="67:37"><name pos:start="65:17" pos:end="65:27">VTD_DPRINTF</name><argument_list pos:start="65:28" pos:end="67:37">(<argument pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:31">INV</name></expr></argument>, <argument pos:start="65:34" pos:end="65:78"><expr pos:start="65:34" pos:end="65:78"><literal type="string" pos:start="65:34" pos:end="65:72">"invalidate context-cahce of devfn 0x%"</literal><name pos:start="65:73" pos:end="65:78">PRIx16</name></expr></argument>,

                            <argument pos:start="67:29" pos:end="67:36"><expr pos:start="67:29" pos:end="67:36"><name pos:start="67:29" pos:end="67:36">devfn_it</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:66"><expr pos:start="69:17" pos:end="69:65"><name pos:start="69:17" pos:end="69:61"><name pos:start="69:17" pos:end="69:22">vtd_as</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:43">context_cache_entry</name><operator pos:start="69:44" pos:end="69:44">.</operator><name pos:start="69:45" pos:end="69:61">context_cache_gen</name></name> <operator pos:start="69:63" pos:end="69:63">=</operator> <literal type="number" pos:start="69:65" pos:end="69:65">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
