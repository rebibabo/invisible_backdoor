<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14722.c" pos:tabs="8"><function pos:start="1:1" pos:end="287:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">x8_decode_intra_mb</name><parameter_list pos:start="1:30" pos:end="1:72">(<parameter pos:start="1:31" pos:end="1:53"><decl pos:start="1:31" pos:end="1:53"><type pos:start="1:31" pos:end="1:53"><name pos:start="1:31" pos:end="1:44">IntraX8Context</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier><specifier pos:start="1:47" pos:end="1:51">const</specifier></type> <name pos:start="1:53" pos:end="1:53">w</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:71">chroma</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="287:1">{<block_content pos:start="5:5" pos:end="285:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier><specifier pos:start="5:21" pos:end="5:25">const</specifier></type> <name pos:start="5:27" pos:end="5:27">s</name> <init pos:start="5:29" pos:end="5:34">= <expr pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:31">w</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:34">s</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:22">scantable</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">final</name></decl>, <decl pos:start="11:16" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:18">run</name></decl>, <decl pos:start="11:21" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:25">level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">ac_mode</name></decl>, <decl pos:start="13:18" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:24">dc_mode</name></decl>, <decl pos:start="13:27" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:33">est_run</name></decl>, <decl pos:start="13:36" pos:end="13:43"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:36" pos:end="13:43">dc_level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">pos</name></decl>, <decl pos:start="15:14" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:14">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">zeros_only</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:24">use_quant_matrix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:13"><decl pos:start="21:5" pos:end="21:12"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">sign</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><call pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:26">(<argument pos:start="25:12" pos:end="25:25"><expr pos:start="25:12" pos:end="25:25"><name pos:start="25:12" pos:end="25:20"><name pos:start="25:12" pos:end="25:12">w</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:20">orient</name></name> <operator pos:start="25:22" pos:end="25:22">&lt;</operator> <literal type="number" pos:start="25:24" pos:end="25:25">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><call pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:11">bdsp</name><operator pos:start="27:12" pos:end="27:12">.</operator><name pos:start="27:13" pos:end="27:23">clear_block</name></name><argument_list pos:start="27:24" pos:end="27:36">(<argument pos:start="27:25" pos:end="27:35"><expr pos:start="27:25" pos:end="27:35"><name pos:start="27:25" pos:end="27:35"><name pos:start="27:25" pos:end="27:25">s</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:32">block</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="37:31"><if pos:start="31:5" pos:end="33:20">if <condition pos:start="31:8" pos:end="31:15">(<expr pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:14">chroma</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:20"><block_content pos:start="33:9" pos:end="33:20">

        <expr_stmt pos:start="33:9" pos:end="33:20"><expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:15">dc_mode</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <literal type="number" pos:start="33:19" pos:end="33:19">2</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="35:5" pos:end="37:31">else<block type="pseudo" pos:start="37:9" pos:end="37:31"><block_content pos:start="37:9" pos:end="37:31">

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:15">dc_mode</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <operator pos:start="37:19" pos:end="37:19">!</operator><operator pos:start="37:20" pos:end="37:20">!</operator><name pos:start="37:21" pos:end="37:30"><name pos:start="37:21" pos:end="37:21">w</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:30">est_run</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="37:33" pos:end="37:39">// 0, 1</comment>



    <if_stmt pos:start="41:5" pos:end="43:18"><if pos:start="41:5" pos:end="43:18">if <condition pos:start="41:8" pos:end="41:53">(<expr pos:start="41:9" pos:end="41:52"><call pos:start="41:9" pos:end="41:52"><name pos:start="41:9" pos:end="41:21">x8_get_dc_rlf</name><argument_list pos:start="41:22" pos:end="41:52">(<argument pos:start="41:23" pos:end="41:23"><expr pos:start="41:23" pos:end="41:23"><name pos:start="41:23" pos:end="41:23">w</name></expr></argument>, <argument pos:start="41:26" pos:end="41:32"><expr pos:start="41:26" pos:end="41:32"><name pos:start="41:26" pos:end="41:32">dc_mode</name></expr></argument>, <argument pos:start="41:35" pos:end="41:43"><expr pos:start="41:35" pos:end="41:43"><operator pos:start="41:35" pos:end="41:35">&amp;</operator><name pos:start="41:36" pos:end="41:43">dc_level</name></expr></argument>, <argument pos:start="41:46" pos:end="41:51"><expr pos:start="41:46" pos:end="41:51"><operator pos:start="41:46" pos:end="41:46">&amp;</operator><name pos:start="41:47" pos:end="41:51">final</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:18"><block_content pos:start="43:9" pos:end="43:18">

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:19"><expr pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:5">n</name>          <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:19"><expr pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:14">zeros_only</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="195:5"><if pos:start="49:5" pos:end="157:5">if <condition pos:start="49:8" pos:end="49:15">(<expr pos:start="49:9" pos:end="49:14"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:14">final</name></expr>)</condition> <block pos:start="49:17" pos:end="157:5">{<block_content pos:start="51:9" pos:end="155:37"> <comment type="line" pos:start="49:19" pos:end="49:30">// decode ac</comment>

        <expr_stmt pos:start="51:9" pos:end="51:47"><expr pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:24">use_quant_matrix</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:46"><name pos:start="51:28" pos:end="51:28">w</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:46">use_quant_matrix</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="91:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:19">(<expr pos:start="53:13" pos:end="53:18"><name pos:start="53:13" pos:end="53:18">chroma</name></expr>)</condition> <block pos:start="53:21" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:25">

            <expr_stmt pos:start="55:13" pos:end="55:24"><expr pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:19">ac_mode</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <literal type="number" pos:start="55:23" pos:end="55:23">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:25"><expr pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:19">est_run</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <literal type="number" pos:start="57:23" pos:end="57:24">64</literal></expr>;</expr_stmt> <comment type="line" pos:start="57:27" pos:end="57:37">// not used</comment>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="91:9">else <block pos:start="59:16" pos:end="91:9">{<block_content pos:start="61:13" pos:end="89:13">

            <if_stmt pos:start="61:13" pos:end="63:37"><if pos:start="61:13" pos:end="63:37">if <condition pos:start="61:16" pos:end="61:34">(<expr pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:17">w</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:29">raw_orient</name></name> <operator pos:start="61:31" pos:end="61:31">&lt;</operator> <literal type="number" pos:start="61:33" pos:end="61:33">3</literal></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:37"><block_content pos:start="63:17" pos:end="63:37">

                <expr_stmt pos:start="63:17" pos:end="63:37"><expr pos:start="63:17" pos:end="63:36"><name pos:start="63:17" pos:end="63:32">use_quant_matrix</name> <operator pos:start="63:34" pos:end="63:34">=</operator> <literal type="number" pos:start="63:36" pos:end="63:36">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="67:13" pos:end="89:13"><if pos:start="67:13" pos:end="73:13">if <condition pos:start="67:16" pos:end="67:34">(<expr pos:start="67:17" pos:end="67:33"><name pos:start="67:17" pos:end="67:29"><name pos:start="67:17" pos:end="67:17">w</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:29">raw_orient</name></name> <operator pos:start="67:31" pos:end="67:31">&gt;</operator> <literal type="number" pos:start="67:33" pos:end="67:33">4</literal></expr>)</condition> <block pos:start="67:36" pos:end="73:13">{<block_content pos:start="69:17" pos:end="71:29">

                <expr_stmt pos:start="69:17" pos:end="69:28"><expr pos:start="69:17" pos:end="69:27"><name pos:start="69:17" pos:end="69:23">ac_mode</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <literal type="number" pos:start="69:27" pos:end="69:27">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:29"><expr pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:23">est_run</name> <operator pos:start="71:25" pos:end="71:25">=</operator> <literal type="number" pos:start="71:27" pos:end="71:28">64</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="73:15" pos:end="89:13">else <block pos:start="73:20" pos:end="89:13">{<block_content pos:start="75:17" pos:end="87:17">

                <if_stmt pos:start="75:17" pos:end="87:17"><if pos:start="75:17" pos:end="81:17">if <condition pos:start="75:20" pos:end="75:35">(<expr pos:start="75:21" pos:end="75:34"><name pos:start="75:21" pos:end="75:30"><name pos:start="75:21" pos:end="75:21">w</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:30">est_run</name></name> <operator pos:start="75:32" pos:end="75:32">&gt;</operator> <literal type="number" pos:start="75:34" pos:end="75:34">1</literal></expr>)</condition> <block pos:start="75:37" pos:end="81:17">{<block_content pos:start="77:21" pos:end="79:41">

                    <expr_stmt pos:start="77:21" pos:end="77:32"><expr pos:start="77:21" pos:end="77:31"><name pos:start="77:21" pos:end="77:27">ac_mode</name> <operator pos:start="77:29" pos:end="77:29">=</operator> <literal type="number" pos:start="77:31" pos:end="77:31">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:41"><expr pos:start="79:21" pos:end="79:40"><name pos:start="79:21" pos:end="79:27">est_run</name> <operator pos:start="79:29" pos:end="79:29">=</operator> <name pos:start="79:31" pos:end="79:40"><name pos:start="79:31" pos:end="79:31">w</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:40">est_run</name></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="81:19" pos:end="87:17">else <block pos:start="81:24" pos:end="87:17">{<block_content pos:start="83:21" pos:end="85:33">

                    <expr_stmt pos:start="83:21" pos:end="83:32"><expr pos:start="83:21" pos:end="83:31"><name pos:start="83:21" pos:end="83:27">ac_mode</name> <operator pos:start="83:29" pos:end="83:29">=</operator> <literal type="number" pos:start="83:31" pos:end="83:31">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:33"><expr pos:start="85:21" pos:end="85:32"><name pos:start="85:21" pos:end="85:27">est_run</name> <operator pos:start="85:29" pos:end="85:29">=</operator> <literal type="number" pos:start="85:31" pos:end="85:32">64</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:39"><expr pos:start="93:9" pos:end="93:38"><call pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:26">x8_select_ac_table</name><argument_list pos:start="93:27" pos:end="93:38">(<argument pos:start="93:28" pos:end="93:28"><expr pos:start="93:28" pos:end="93:28"><name pos:start="93:28" pos:end="93:28">w</name></expr></argument>, <argument pos:start="93:31" pos:end="93:37"><expr pos:start="93:31" pos:end="93:37"><name pos:start="93:31" pos:end="93:37">ac_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="95:9" pos:end="97:69">/* scantable_selector[12] = { 0, 2, 0, 1, 1, 1, 0, 2, 2, 0, 1, 2 }; &lt;-

         * -&gt; 10'01' 00'10' 10'00' 01'01' 01'00' 10'00 =&gt; 0x928548 */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:79"><expr pos:start="99:9" pos:end="99:78"><name pos:start="99:9" pos:end="99:17">scantable</name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:67"><name pos:start="99:21" pos:end="99:21">w</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:32">scantable</name><index pos:start="99:33" pos:end="99:67">[<expr pos:start="99:34" pos:end="99:66"><operator pos:start="99:34" pos:end="99:34">(</operator><literal type="number" pos:start="99:35" pos:end="99:42">0x928548</literal> <operator pos:start="99:44" pos:end="99:45">&gt;&gt;</operator> <operator pos:start="99:47" pos:end="99:47">(</operator><literal type="number" pos:start="99:48" pos:end="99:48">2</literal> <operator pos:start="99:50" pos:end="99:50">*</operator> <name pos:start="99:52" pos:end="99:60"><name pos:start="99:52" pos:end="99:52">w</name><operator pos:start="99:53" pos:end="99:54">-&gt;</operator><name pos:start="99:55" pos:end="99:60">orient</name></name><operator pos:start="99:61" pos:end="99:61">)</operator><operator pos:start="99:62" pos:end="99:62">)</operator> <operator pos:start="99:64" pos:end="99:64">&amp;</operator> <literal type="number" pos:start="99:66" pos:end="99:66">3</literal></expr>]</index></name><operator pos:start="99:68" pos:end="99:68">.</operator><name pos:start="99:69" pos:end="99:78">permutated</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:22"><expr pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:11">pos</name>       <operator pos:start="101:19" pos:end="101:19">=</operator> <literal type="number" pos:start="101:21" pos:end="101:21">0</literal></expr>;</expr_stmt>

        <do pos:start="103:9" pos:end="151:25">do <block pos:start="103:12" pos:end="151:9">{<block_content pos:start="105:13" pos:end="149:48">

            <expr_stmt pos:start="105:13" pos:end="105:16"><expr pos:start="105:13" pos:end="105:15"><name pos:start="105:13" pos:end="105:13">n</name><operator pos:start="105:14" pos:end="105:15">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="113:13"><if pos:start="107:13" pos:end="113:13">if <condition pos:start="107:16" pos:end="107:29">(<expr pos:start="107:17" pos:end="107:28"><name pos:start="107:17" pos:end="107:17">n</name> <operator pos:start="107:19" pos:end="107:20">&gt;=</operator> <name pos:start="107:22" pos:end="107:28">est_run</name></expr>)</condition> <block pos:start="107:31" pos:end="113:13">{<block_content pos:start="109:17" pos:end="111:41">

                <expr_stmt pos:start="109:17" pos:end="109:28"><expr pos:start="109:17" pos:end="109:27"><name pos:start="109:17" pos:end="109:23">ac_mode</name> <operator pos:start="109:25" pos:end="109:25">=</operator> <literal type="number" pos:start="109:27" pos:end="109:27">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:41"><expr pos:start="111:17" pos:end="111:40"><call pos:start="111:17" pos:end="111:40"><name pos:start="111:17" pos:end="111:34">x8_select_ac_table</name><argument_list pos:start="111:35" pos:end="111:40">(<argument pos:start="111:36" pos:end="111:36"><expr pos:start="111:36" pos:end="111:36"><name pos:start="111:36" pos:end="111:36">w</name></expr></argument>, <argument pos:start="111:39" pos:end="111:39"><expr pos:start="111:39" pos:end="111:39"><literal type="number" pos:start="111:39" pos:end="111:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="117:13" pos:end="117:60"><expr pos:start="117:13" pos:end="117:59"><call pos:start="117:13" pos:end="117:59"><name pos:start="117:13" pos:end="117:25">x8_get_ac_rlf</name><argument_list pos:start="117:26" pos:end="117:59">(<argument pos:start="117:27" pos:end="117:27"><expr pos:start="117:27" pos:end="117:27"><name pos:start="117:27" pos:end="117:27">w</name></expr></argument>, <argument pos:start="117:30" pos:end="117:36"><expr pos:start="117:30" pos:end="117:36"><name pos:start="117:30" pos:end="117:36">ac_mode</name></expr></argument>, <argument pos:start="117:39" pos:end="117:42"><expr pos:start="117:39" pos:end="117:42"><operator pos:start="117:39" pos:end="117:39">&amp;</operator><name pos:start="117:40" pos:end="117:42">run</name></expr></argument>, <argument pos:start="117:45" pos:end="117:50"><expr pos:start="117:45" pos:end="117:50"><operator pos:start="117:45" pos:end="117:45">&amp;</operator><name pos:start="117:46" pos:end="117:50">level</name></expr></argument>, <argument pos:start="117:53" pos:end="117:58"><expr pos:start="117:53" pos:end="117:58"><operator pos:start="117:53" pos:end="117:53">&amp;</operator><name pos:start="117:54" pos:end="117:58">final</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="121:13" pos:end="121:27"><expr pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:15">pos</name> <operator pos:start="121:17" pos:end="121:18">+=</operator> <name pos:start="121:20" pos:end="121:22">run</name> <operator pos:start="121:24" pos:end="121:24">+</operator> <literal type="number" pos:start="121:26" pos:end="121:26">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="129:13"><if pos:start="123:13" pos:end="129:13">if <condition pos:start="123:16" pos:end="123:25">(<expr pos:start="123:17" pos:end="123:24"><name pos:start="123:17" pos:end="123:19">pos</name> <operator pos:start="123:21" pos:end="123:21">&gt;</operator> <literal type="number" pos:start="123:23" pos:end="123:24">63</literal></expr>)</condition> <block pos:start="123:27" pos:end="129:13">{<block_content pos:start="127:17" pos:end="127:26">

                <comment type="line" pos:start="125:17" pos:end="125:63">// this also handles vlc error in x8_get_ac_rlf</comment>

                <return pos:start="127:17" pos:end="127:26">return <expr pos:start="127:24" pos:end="127:25"><operator pos:start="127:24" pos:end="127:24">-</operator><literal type="number" pos:start="127:25" pos:end="127:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:45"><expr pos:start="131:13" pos:end="131:44"><name pos:start="131:13" pos:end="131:17">level</name>  <operator pos:start="131:20" pos:end="131:20">=</operator> <operator pos:start="131:22" pos:end="131:22">(</operator><name pos:start="131:23" pos:end="131:27">level</name> <operator pos:start="131:29" pos:end="131:29">+</operator> <literal type="number" pos:start="131:31" pos:end="131:31">1</literal><operator pos:start="131:32" pos:end="131:32">)</operator> <operator pos:start="131:34" pos:end="131:34">*</operator> <name pos:start="131:36" pos:end="131:44"><name pos:start="131:36" pos:end="131:36">w</name><operator pos:start="131:37" pos:end="131:38">-&gt;</operator><name pos:start="131:39" pos:end="131:44">dquant</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:29"><expr pos:start="133:13" pos:end="133:28"><name pos:start="133:13" pos:end="133:17">level</name> <operator pos:start="133:19" pos:end="133:20">+=</operator> <name pos:start="133:22" pos:end="133:28"><name pos:start="133:22" pos:end="133:22">w</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:28">qsum</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="137:13" pos:end="137:39"><expr pos:start="137:13" pos:end="137:38"><name pos:start="137:13" pos:end="137:16">sign</name>  <operator pos:start="137:19" pos:end="137:19">=</operator> <operator pos:start="137:21" pos:end="137:21">-</operator><call pos:start="137:22" pos:end="137:38"><name pos:start="137:22" pos:end="137:30">get_bits1</name><argument_list pos:start="137:31" pos:end="137:38">(<argument pos:start="137:32" pos:end="137:37"><expr pos:start="137:32" pos:end="137:37"><operator pos:start="137:32" pos:end="137:32">&amp;</operator><name pos:start="137:33" pos:end="137:37"><name pos:start="137:33" pos:end="137:33">s</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:42"><expr pos:start="139:13" pos:end="139:41"><name pos:start="139:13" pos:end="139:17">level</name> <operator pos:start="139:19" pos:end="139:19">=</operator> <operator pos:start="139:21" pos:end="139:21">(</operator><name pos:start="139:22" pos:end="139:26">level</name> <operator pos:start="139:28" pos:end="139:28">^</operator> <name pos:start="139:30" pos:end="139:33">sign</name><operator pos:start="139:34" pos:end="139:34">)</operator> <operator pos:start="139:36" pos:end="139:36">-</operator> <name pos:start="139:38" pos:end="139:41">sign</name></expr>;</expr_stmt>



            <if_stmt pos:start="143:13" pos:end="145:56"><if pos:start="143:13" pos:end="145:56">if <condition pos:start="143:16" pos:end="143:33">(<expr pos:start="143:17" pos:end="143:32"><name pos:start="143:17" pos:end="143:32">use_quant_matrix</name></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:56"><block_content pos:start="145:17" pos:end="145:56">

                <expr_stmt pos:start="145:17" pos:end="145:56"><expr pos:start="145:17" pos:end="145:55"><name pos:start="145:17" pos:end="145:21">level</name> <operator pos:start="145:23" pos:end="145:23">=</operator> <operator pos:start="145:25" pos:end="145:25">(</operator><name pos:start="145:26" pos:end="145:30">level</name> <operator pos:start="145:32" pos:end="145:32">*</operator> <name pos:start="145:34" pos:end="145:49"><name pos:start="145:34" pos:end="145:44">quant_table</name><index pos:start="145:45" pos:end="145:49">[<expr pos:start="145:46" pos:end="145:48"><name pos:start="145:46" pos:end="145:48">pos</name></expr>]</index></name><operator pos:start="145:50" pos:end="145:50">)</operator> <operator pos:start="145:52" pos:end="145:53">&gt;&gt;</operator> <literal type="number" pos:start="145:55" pos:end="145:55">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="149:13" pos:end="149:48"><expr pos:start="149:13" pos:end="149:47"><name pos:start="149:13" pos:end="149:39"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:20">block</name><index pos:start="149:21" pos:end="149:23">[<expr pos:start="149:22" pos:end="149:22"><literal type="number" pos:start="149:22" pos:end="149:22">0</literal></expr>]</index><index pos:start="149:24" pos:end="149:39">[<expr pos:start="149:25" pos:end="149:38"><name pos:start="149:25" pos:end="149:38"><name pos:start="149:25" pos:end="149:33">scantable</name><index pos:start="149:34" pos:end="149:38">[<expr pos:start="149:35" pos:end="149:37"><name pos:start="149:35" pos:end="149:37">pos</name></expr>]</index></name></expr>]</index></name> <operator pos:start="149:41" pos:end="149:41">=</operator> <name pos:start="149:43" pos:end="149:47">level</name></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="151:17" pos:end="151:24">(<expr pos:start="151:18" pos:end="151:23"><operator pos:start="151:18" pos:end="151:18">!</operator><name pos:start="151:19" pos:end="151:23">final</name></expr>)</condition>;</do>



        <expr_stmt pos:start="155:9" pos:end="155:37"><expr pos:start="155:9" pos:end="155:36"><name pos:start="155:9" pos:end="155:30"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:27">block_last_index</name><index pos:start="155:28" pos:end="155:30">[<expr pos:start="155:29" pos:end="155:29"><literal type="number" pos:start="155:29" pos:end="155:29">0</literal></expr>]</index></name> <operator pos:start="155:32" pos:end="155:32">=</operator> <name pos:start="155:34" pos:end="155:36">pos</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="157:7" pos:end="195:5">else <block pos:start="157:12" pos:end="195:5">{<block_content pos:start="159:9" pos:end="193:37"> <comment type="line" pos:start="157:14" pos:end="157:23">// DC only</comment>

        <expr_stmt pos:start="159:9" pos:end="159:35"><expr pos:start="159:9" pos:end="159:34"><name pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:27">block_last_index</name><index pos:start="159:28" pos:end="159:30">[<expr pos:start="159:29" pos:end="159:29"><literal type="number" pos:start="159:29" pos:end="159:29">0</literal></expr>]</index></name> <operator pos:start="159:32" pos:end="159:32">=</operator> <literal type="number" pos:start="159:34" pos:end="159:34">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="161:9" pos:end="191:9"><if pos:start="161:9" pos:end="191:9">if <condition pos:start="161:12" pos:end="161:58">(<expr pos:start="161:13" pos:end="161:57"><name pos:start="161:13" pos:end="161:22"><name pos:start="161:13" pos:end="161:13">w</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:22">flat_dc</name></name> <operator pos:start="161:24" pos:end="161:25">&amp;&amp;</operator> <operator pos:start="161:27" pos:end="161:27">(</operator><operator pos:start="161:28" pos:end="161:28">(</operator><name pos:start="161:29" pos:end="161:36">unsigned</name><operator pos:start="161:37" pos:end="161:37">)</operator> <operator pos:start="161:39" pos:end="161:39">(</operator><name pos:start="161:40" pos:end="161:47">dc_level</name> <operator pos:start="161:49" pos:end="161:49">+</operator> <literal type="number" pos:start="161:51" pos:end="161:51">1</literal><operator pos:start="161:52" pos:end="161:52">)</operator><operator pos:start="161:53" pos:end="161:53">)</operator> <operator pos:start="161:55" pos:end="161:55">&lt;</operator> <literal type="number" pos:start="161:57" pos:end="161:57">3</literal></expr>)</condition> <block pos:start="161:60" pos:end="191:9">{<block_content pos:start="163:13" pos:end="189:30"> <comment type="line" pos:start="161:62" pos:end="161:71">// [-1; 1]</comment>

            <decl_stmt pos:start="163:13" pos:end="165:71"><decl pos:start="163:13" pos:end="165:70"><type pos:start="163:13" pos:end="163:19"><name pos:start="163:13" pos:end="163:19">int32_t</name></type> <name pos:start="163:21" pos:end="163:32">divide_quant</name> <init pos:start="163:34" pos:end="165:70">= <expr pos:start="163:36" pos:end="165:70"><ternary pos:start="163:36" pos:end="165:70"><condition pos:start="163:36" pos:end="163:44"><expr pos:start="163:36" pos:end="163:42"><operator pos:start="163:36" pos:end="163:36">!</operator><name pos:start="163:37" pos:end="163:42">chroma</name></expr> ?</condition><then pos:start="163:46" pos:end="163:68"> <expr pos:start="163:46" pos:end="163:68"><name pos:start="163:46" pos:end="163:68"><name pos:start="163:46" pos:end="163:46">w</name><operator pos:start="163:47" pos:end="163:48">-&gt;</operator><name pos:start="163:49" pos:end="163:68">divide_quant_dc_luma</name></name></expr>

                                           </then><else pos:start="165:44" pos:end="165:70">: <expr pos:start="165:46" pos:end="165:70"><name pos:start="165:46" pos:end="165:70"><name pos:start="165:46" pos:end="165:46">w</name><operator pos:start="165:47" pos:end="165:48">-&gt;</operator><name pos:start="165:49" pos:end="165:70">divide_quant_dc_chroma</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="167:13" pos:end="169:64"><decl pos:start="167:13" pos:end="169:63"><type pos:start="167:13" pos:end="167:19"><name pos:start="167:13" pos:end="167:19">int32_t</name></type> <name pos:start="167:21" pos:end="167:28">dc_quant</name>     <init pos:start="167:34" pos:end="169:63">= <expr pos:start="167:36" pos:end="169:63"><ternary pos:start="167:36" pos:end="169:63"><condition pos:start="167:36" pos:end="167:44"><expr pos:start="167:36" pos:end="167:42"><operator pos:start="167:36" pos:end="167:36">!</operator><name pos:start="167:37" pos:end="167:42">chroma</name></expr> ?</condition><then pos:start="167:46" pos:end="167:53"> <expr pos:start="167:46" pos:end="167:53"><name pos:start="167:46" pos:end="167:53"><name pos:start="167:46" pos:end="167:46">w</name><operator pos:start="167:47" pos:end="167:48">-&gt;</operator><name pos:start="167:49" pos:end="167:53">quant</name></name></expr>

                                           </then><else pos:start="169:44" pos:end="169:63">: <expr pos:start="169:46" pos:end="169:63"><name pos:start="169:46" pos:end="169:63"><name pos:start="169:46" pos:end="169:46">w</name><operator pos:start="169:47" pos:end="169:48">-&gt;</operator><name pos:start="169:49" pos:end="169:63">quant_dc_chroma</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <comment type="line" pos:start="173:13" pos:end="173:62">// original intent dc_level += predicted_dc/quant;</comment>

            <comment type="line" pos:start="175:13" pos:end="175:56">// but it got lost somewhere in the rounding</comment>

            <expr_stmt pos:start="177:13" pos:end="177:75"><expr pos:start="177:13" pos:end="177:74"><name pos:start="177:13" pos:end="177:20">dc_level</name> <operator pos:start="177:22" pos:end="177:23">+=</operator> <operator pos:start="177:25" pos:end="177:25">(</operator><name pos:start="177:26" pos:end="177:40"><name pos:start="177:26" pos:end="177:26">w</name><operator pos:start="177:27" pos:end="177:28">-&gt;</operator><name pos:start="177:29" pos:end="177:40">predicted_dc</name></name> <operator pos:start="177:42" pos:end="177:42">*</operator> <name pos:start="177:44" pos:end="177:55">divide_quant</name> <operator pos:start="177:57" pos:end="177:57">+</operator> <operator pos:start="177:59" pos:end="177:59">(</operator><literal type="number" pos:start="177:60" pos:end="177:60">1</literal> <operator pos:start="177:62" pos:end="177:63">&lt;&lt;</operator> <literal type="number" pos:start="177:65" pos:end="177:66">12</literal><operator pos:start="177:67" pos:end="177:67">)</operator><operator pos:start="177:68" pos:end="177:68">)</operator> <operator pos:start="177:70" pos:end="177:71">&gt;&gt;</operator> <literal type="number" pos:start="177:73" pos:end="177:74">13</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="181:13" pos:end="185:76"><expr pos:start="181:13" pos:end="185:75"><call pos:start="181:13" pos:end="185:75"><name pos:start="181:13" pos:end="181:33">dsp_x8_put_solidcolor</name><argument_list pos:start="181:34" pos:end="185:75">(<argument pos:start="181:35" pos:end="181:79"><expr pos:start="181:35" pos:end="181:79"><call pos:start="181:35" pos:end="181:79"><name pos:start="181:35" pos:end="181:47">av_clip_uint8</name><argument_list pos:start="181:48" pos:end="181:79">(<argument pos:start="181:49" pos:end="181:78"><expr pos:start="181:49" pos:end="181:78"><operator pos:start="181:49" pos:end="181:49">(</operator><name pos:start="181:50" pos:end="181:57">dc_level</name> <operator pos:start="181:59" pos:end="181:59">*</operator> <name pos:start="181:61" pos:end="181:68">dc_quant</name> <operator pos:start="181:70" pos:end="181:70">+</operator> <literal type="number" pos:start="181:72" pos:end="181:72">4</literal><operator pos:start="181:73" pos:end="181:73">)</operator> <operator pos:start="181:75" pos:end="181:76">&gt;&gt;</operator> <literal type="number" pos:start="181:78" pos:end="181:78">3</literal></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="183:35" pos:end="183:49"><expr pos:start="183:35" pos:end="183:49"><name pos:start="183:35" pos:end="183:49"><name pos:start="183:35" pos:end="183:35">w</name><operator pos:start="183:36" pos:end="183:37">-&gt;</operator><name pos:start="183:38" pos:end="183:41">dest</name><index pos:start="183:42" pos:end="183:49">[<expr pos:start="183:43" pos:end="183:48"><name pos:start="183:43" pos:end="183:48">chroma</name></expr>]</index></name></expr></argument>,

                                  <argument pos:start="185:35" pos:end="185:74"><expr pos:start="185:35" pos:end="185:74"><name pos:start="185:35" pos:end="185:74"><name pos:start="185:35" pos:end="185:35">s</name><operator pos:start="185:36" pos:end="185:37">-&gt;</operator><name pos:start="185:38" pos:end="185:52">current_picture</name><operator pos:start="185:53" pos:end="185:53">.</operator><name pos:start="185:54" pos:end="185:54">f</name><operator pos:start="185:55" pos:end="185:56">-&gt;</operator><name pos:start="185:57" pos:end="185:64">linesize</name><index pos:start="185:65" pos:end="185:74">[<expr pos:start="185:66" pos:end="185:73"><operator pos:start="185:66" pos:end="185:66">!</operator><operator pos:start="185:67" pos:end="185:67">!</operator><name pos:start="185:68" pos:end="185:73">chroma</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <goto pos:start="189:13" pos:end="189:30">goto <name pos:start="189:18" pos:end="189:29">block_placed</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:37"><expr pos:start="193:9" pos:end="193:36"><name pos:start="193:9" pos:end="193:18">zeros_only</name> <operator pos:start="193:20" pos:end="193:20">=</operator> <operator pos:start="193:22" pos:end="193:22">(</operator><name pos:start="193:23" pos:end="193:30">dc_level</name> <operator pos:start="193:32" pos:end="193:33">==</operator> <literal type="number" pos:start="193:35" pos:end="193:35">0</literal><operator pos:start="193:36" pos:end="193:36">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="197:5" pos:end="203:55"><if pos:start="197:5" pos:end="199:45">if <condition pos:start="197:8" pos:end="197:16">(<expr pos:start="197:9" pos:end="197:15"><operator pos:start="197:9" pos:end="197:9">!</operator><name pos:start="197:10" pos:end="197:15">chroma</name></expr>)</condition><block type="pseudo" pos:start="199:9" pos:end="199:45"><block_content pos:start="199:9" pos:end="199:45">

        <expr_stmt pos:start="199:9" pos:end="199:45"><expr pos:start="199:9" pos:end="199:44"><name pos:start="199:9" pos:end="199:22"><name pos:start="199:9" pos:end="199:9">s</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:16">block</name><index pos:start="199:17" pos:end="199:19">[<expr pos:start="199:18" pos:end="199:18"><literal type="number" pos:start="199:18" pos:end="199:18">0</literal></expr>]</index><index pos:start="199:20" pos:end="199:22">[<expr pos:start="199:21" pos:end="199:21"><literal type="number" pos:start="199:21" pos:end="199:21">0</literal></expr>]</index></name> <operator pos:start="199:24" pos:end="199:24">=</operator> <name pos:start="199:26" pos:end="199:33">dc_level</name> <operator pos:start="199:35" pos:end="199:35">*</operator> <name pos:start="199:37" pos:end="199:44"><name pos:start="199:37" pos:end="199:37">w</name><operator pos:start="199:38" pos:end="199:39">-&gt;</operator><name pos:start="199:40" pos:end="199:44">quant</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="201:5" pos:end="203:55">else<block type="pseudo" pos:start="203:9" pos:end="203:55"><block_content pos:start="203:9" pos:end="203:55">

        <expr_stmt pos:start="203:9" pos:end="203:55"><expr pos:start="203:9" pos:end="203:54"><name pos:start="203:9" pos:end="203:22"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:16">block</name><index pos:start="203:17" pos:end="203:19">[<expr pos:start="203:18" pos:end="203:18"><literal type="number" pos:start="203:18" pos:end="203:18">0</literal></expr>]</index><index pos:start="203:20" pos:end="203:22">[<expr pos:start="203:21" pos:end="203:21"><literal type="number" pos:start="203:21" pos:end="203:21">0</literal></expr>]</index></name> <operator pos:start="203:24" pos:end="203:24">=</operator> <name pos:start="203:26" pos:end="203:33">dc_level</name> <operator pos:start="203:35" pos:end="203:35">*</operator> <name pos:start="203:37" pos:end="203:54"><name pos:start="203:37" pos:end="203:37">w</name><operator pos:start="203:38" pos:end="203:39">-&gt;</operator><name pos:start="203:40" pos:end="203:54">quant_dc_chroma</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="line" pos:start="207:5" pos:end="207:78">// there is !zero_only check in the original, but dc_level check is enough</comment>

    <if_stmt pos:start="209:5" pos:end="227:5"><if pos:start="209:5" pos:end="227:5">if <condition pos:start="209:8" pos:end="209:66">(<expr pos:start="209:9" pos:end="209:65"><operator pos:start="209:9" pos:end="209:9">(</operator><name pos:start="209:10" pos:end="209:17">unsigned</name> <name pos:start="209:19" pos:end="209:21">int</name><operator pos:start="209:22" pos:end="209:22">)</operator> <operator pos:start="209:24" pos:end="209:24">(</operator><name pos:start="209:25" pos:end="209:32">dc_level</name> <operator pos:start="209:34" pos:end="209:34">+</operator> <literal type="number" pos:start="209:36" pos:end="209:36">1</literal><operator pos:start="209:37" pos:end="209:37">)</operator> <operator pos:start="209:39" pos:end="209:40">&gt;=</operator> <literal type="number" pos:start="209:42" pos:end="209:42">3</literal> <operator pos:start="209:44" pos:end="209:45">&amp;&amp;</operator> <operator pos:start="209:47" pos:end="209:47">(</operator><name pos:start="209:48" pos:end="209:55"><name pos:start="209:48" pos:end="209:48">w</name><operator pos:start="209:49" pos:end="209:50">-&gt;</operator><name pos:start="209:51" pos:end="209:55">edges</name></name> <operator pos:start="209:57" pos:end="209:57">&amp;</operator> <literal type="number" pos:start="209:59" pos:end="209:59">3</literal><operator pos:start="209:60" pos:end="209:60">)</operator> <operator pos:start="209:62" pos:end="209:63">!=</operator> <literal type="number" pos:start="209:65" pos:end="209:65">3</literal></expr>)</condition> <block pos:start="209:68" pos:end="227:5">{<block_content pos:start="211:9" pos:end="225:9">

        <decl_stmt pos:start="211:9" pos:end="211:22"><decl pos:start="211:9" pos:end="211:21"><type pos:start="211:9" pos:end="211:11"><name pos:start="211:9" pos:end="211:11">int</name></type> <name pos:start="211:13" pos:end="211:21">direction</name></decl>;</decl_stmt>

        <comment type="block" pos:start="213:9" pos:end="215:69">/* ac_comp_direction[orient] = { 0, 3, 3, 1, 1, 0, 0, 0, 2, 2, 2, 1 }; &lt;-

         * -&gt; 01'10' 10'10' 00'00' 00'01' 01'11' 11'00 =&gt; 0x6A017C */</comment>

        <expr_stmt pos:start="217:9" pos:end="217:54"><expr pos:start="217:9" pos:end="217:53"><name pos:start="217:9" pos:end="217:17">direction</name> <operator pos:start="217:19" pos:end="217:19">=</operator> <operator pos:start="217:21" pos:end="217:21">(</operator><literal type="number" pos:start="217:22" pos:end="217:29">0x6A017C</literal> <operator pos:start="217:31" pos:end="217:32">&gt;&gt;</operator> <operator pos:start="217:34" pos:end="217:34">(</operator><name pos:start="217:35" pos:end="217:43"><name pos:start="217:35" pos:end="217:35">w</name><operator pos:start="217:36" pos:end="217:37">-&gt;</operator><name pos:start="217:38" pos:end="217:43">orient</name></name> <operator pos:start="217:45" pos:end="217:45">*</operator> <literal type="number" pos:start="217:47" pos:end="217:47">2</literal><operator pos:start="217:48" pos:end="217:48">)</operator><operator pos:start="217:49" pos:end="217:49">)</operator> <operator pos:start="217:51" pos:end="217:51">&amp;</operator> <literal type="number" pos:start="217:53" pos:end="217:53">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="219:9" pos:end="225:9"><if pos:start="219:9" pos:end="225:9">if <condition pos:start="219:12" pos:end="219:27">(<expr pos:start="219:13" pos:end="219:26"><name pos:start="219:13" pos:end="219:21">direction</name> <operator pos:start="219:23" pos:end="219:24">!=</operator> <literal type="number" pos:start="219:26" pos:end="219:26">3</literal></expr>)</condition> <block pos:start="219:29" pos:end="225:9">{<block_content pos:start="223:13" pos:end="223:61">

            <comment type="line" pos:start="221:13" pos:end="221:34">// modify block_last[]</comment>

            <expr_stmt pos:start="223:13" pos:end="223:61"><expr pos:start="223:13" pos:end="223:60"><call pos:start="223:13" pos:end="223:60"><name pos:start="223:13" pos:end="223:30">x8_ac_compensation</name><argument_list pos:start="223:31" pos:end="223:60">(<argument pos:start="223:32" pos:end="223:32"><expr pos:start="223:32" pos:end="223:32"><name pos:start="223:32" pos:end="223:32">w</name></expr></argument>, <argument pos:start="223:35" pos:end="223:43"><expr pos:start="223:35" pos:end="223:43"><name pos:start="223:35" pos:end="223:43">direction</name></expr></argument>, <argument pos:start="223:46" pos:end="223:59"><expr pos:start="223:46" pos:end="223:59"><name pos:start="223:46" pos:end="223:59"><name pos:start="223:46" pos:end="223:46">s</name><operator pos:start="223:47" pos:end="223:48">-&gt;</operator><name pos:start="223:49" pos:end="223:53">block</name><index pos:start="223:54" pos:end="223:56">[<expr pos:start="223:55" pos:end="223:55"><literal type="number" pos:start="223:55" pos:end="223:55">0</literal></expr>]</index><index pos:start="223:57" pos:end="223:59">[<expr pos:start="223:58" pos:end="223:58"><literal type="number" pos:start="223:58" pos:end="223:58">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="231:5" pos:end="245:5"><if pos:start="231:5" pos:end="237:5">if <condition pos:start="231:8" pos:end="231:19">(<expr pos:start="231:9" pos:end="231:18"><name pos:start="231:9" pos:end="231:18"><name pos:start="231:9" pos:end="231:9">w</name><operator pos:start="231:10" pos:end="231:11">-&gt;</operator><name pos:start="231:12" pos:end="231:18">flat_dc</name></name></expr>)</condition> <block pos:start="231:21" pos:end="237:5">{<block_content pos:start="233:9" pos:end="235:72">

        <expr_stmt pos:start="233:9" pos:end="235:72"><expr pos:start="233:9" pos:end="235:71"><call pos:start="233:9" pos:end="235:71"><name pos:start="233:9" pos:end="233:29">dsp_x8_put_solidcolor</name><argument_list pos:start="233:30" pos:end="235:71">(<argument pos:start="233:31" pos:end="233:45"><expr pos:start="233:31" pos:end="233:45"><name pos:start="233:31" pos:end="233:45"><name pos:start="233:31" pos:end="233:31">w</name><operator pos:start="233:32" pos:end="233:33">-&gt;</operator><name pos:start="233:34" pos:end="233:45">predicted_dc</name></name></expr></argument>, <argument pos:start="233:48" pos:end="233:62"><expr pos:start="233:48" pos:end="233:62"><name pos:start="233:48" pos:end="233:62"><name pos:start="233:48" pos:end="233:48">w</name><operator pos:start="233:49" pos:end="233:50">-&gt;</operator><name pos:start="233:51" pos:end="233:54">dest</name><index pos:start="233:55" pos:end="233:62">[<expr pos:start="233:56" pos:end="233:61"><name pos:start="233:56" pos:end="233:61">chroma</name></expr>]</index></name></expr></argument>,

                              <argument pos:start="235:31" pos:end="235:70"><expr pos:start="235:31" pos:end="235:70"><name pos:start="235:31" pos:end="235:70"><name pos:start="235:31" pos:end="235:31">s</name><operator pos:start="235:32" pos:end="235:33">-&gt;</operator><name pos:start="235:34" pos:end="235:48">current_picture</name><operator pos:start="235:49" pos:end="235:49">.</operator><name pos:start="235:50" pos:end="235:50">f</name><operator pos:start="235:51" pos:end="235:52">-&gt;</operator><name pos:start="235:53" pos:end="235:60">linesize</name><index pos:start="235:61" pos:end="235:70">[<expr pos:start="235:62" pos:end="235:69"><operator pos:start="235:62" pos:end="235:62">!</operator><operator pos:start="235:63" pos:end="235:63">!</operator><name pos:start="235:64" pos:end="235:69">chroma</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="237:7" pos:end="245:5">else <block pos:start="237:12" pos:end="245:5">{<block_content pos:start="239:9" pos:end="243:89">

        <expr_stmt pos:start="239:9" pos:end="243:89"><expr pos:start="239:9" pos:end="243:88"><name pos:start="239:9" pos:end="239:46"><name pos:start="239:9" pos:end="239:9">w</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:14">dsp</name><operator pos:start="239:15" pos:end="239:15">.</operator><name pos:start="239:16" pos:end="239:35">spatial_compensation</name><index pos:start="239:36" pos:end="239:46">[<expr pos:start="239:37" pos:end="239:45"><name pos:start="239:37" pos:end="239:45"><name pos:start="239:37" pos:end="239:37">w</name><operator pos:start="239:38" pos:end="239:39">-&gt;</operator><name pos:start="239:40" pos:end="239:45">orient</name></name></expr>]</index></name><operator pos:start="239:47" pos:end="239:47">(</operator><name pos:start="239:48" pos:end="239:68"><name pos:start="239:48" pos:end="239:48">s</name><operator pos:start="239:49" pos:end="239:50">-&gt;</operator><name pos:start="239:51" pos:end="239:52">sc</name><operator pos:start="239:53" pos:end="239:53">.</operator><name pos:start="239:54" pos:end="239:68">edge_emu_buffer</name></name><operator pos:start="239:69" pos:end="239:69">,</operator>

                                               <name pos:start="241:48" pos:end="241:62"><name pos:start="241:48" pos:end="241:48">w</name><operator pos:start="241:49" pos:end="241:50">-&gt;</operator><name pos:start="241:51" pos:end="241:54">dest</name><index pos:start="241:55" pos:end="241:62">[<expr pos:start="241:56" pos:end="241:61"><name pos:start="241:56" pos:end="241:61">chroma</name></expr>]</index></name><operator pos:start="241:63" pos:end="241:63">,</operator>

                                               <name pos:start="243:48" pos:end="243:87"><name pos:start="243:48" pos:end="243:48">s</name><operator pos:start="243:49" pos:end="243:50">-&gt;</operator><name pos:start="243:51" pos:end="243:65">current_picture</name><operator pos:start="243:66" pos:end="243:66">.</operator><name pos:start="243:67" pos:end="243:67">f</name><operator pos:start="243:68" pos:end="243:69">-&gt;</operator><name pos:start="243:70" pos:end="243:77">linesize</name><index pos:start="243:78" pos:end="243:87">[<expr pos:start="243:79" pos:end="243:86"><operator pos:start="243:79" pos:end="243:79">!</operator><operator pos:start="243:80" pos:end="243:80">!</operator><name pos:start="243:81" pos:end="243:86">chroma</name></expr>]</index></name><operator pos:start="243:88" pos:end="243:88">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="247:5" pos:end="253:38"><if pos:start="247:5" pos:end="253:38">if <condition pos:start="247:8" pos:end="247:20">(<expr pos:start="247:9" pos:end="247:19"><operator pos:start="247:9" pos:end="247:9">!</operator><name pos:start="247:10" pos:end="247:19">zeros_only</name></expr>)</condition><block type="pseudo" pos:start="249:9" pos:end="253:38"><block_content pos:start="249:9" pos:end="253:38">

        <expr_stmt pos:start="249:9" pos:end="253:38"><expr pos:start="249:9" pos:end="253:37"><call pos:start="249:9" pos:end="253:37"><name pos:start="249:9" pos:end="249:24"><name pos:start="249:9" pos:end="249:9">w</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:15">idsp</name><operator pos:start="249:16" pos:end="249:16">.</operator><name pos:start="249:17" pos:end="249:24">idct_add</name></name><argument_list pos:start="249:25" pos:end="253:37">(<argument pos:start="249:26" pos:end="249:40"><expr pos:start="249:26" pos:end="249:40"><name pos:start="249:26" pos:end="249:40"><name pos:start="249:26" pos:end="249:26">w</name><operator pos:start="249:27" pos:end="249:28">-&gt;</operator><name pos:start="249:29" pos:end="249:32">dest</name><index pos:start="249:33" pos:end="249:40">[<expr pos:start="249:34" pos:end="249:39"><name pos:start="249:34" pos:end="249:39">chroma</name></expr>]</index></name></expr></argument>,

                         <argument pos:start="251:26" pos:end="251:65"><expr pos:start="251:26" pos:end="251:65"><name pos:start="251:26" pos:end="251:65"><name pos:start="251:26" pos:end="251:26">s</name><operator pos:start="251:27" pos:end="251:28">-&gt;</operator><name pos:start="251:29" pos:end="251:43">current_picture</name><operator pos:start="251:44" pos:end="251:44">.</operator><name pos:start="251:45" pos:end="251:45">f</name><operator pos:start="251:46" pos:end="251:47">-&gt;</operator><name pos:start="251:48" pos:end="251:55">linesize</name><index pos:start="251:56" pos:end="251:65">[<expr pos:start="251:57" pos:end="251:64"><operator pos:start="251:57" pos:end="251:57">!</operator><operator pos:start="251:58" pos:end="251:58">!</operator><name pos:start="251:59" pos:end="251:64">chroma</name></expr>]</index></name></expr></argument>,

                         <argument pos:start="253:26" pos:end="253:36"><expr pos:start="253:26" pos:end="253:36"><name pos:start="253:26" pos:end="253:36"><name pos:start="253:26" pos:end="253:26">s</name><operator pos:start="253:27" pos:end="253:28">-&gt;</operator><name pos:start="253:29" pos:end="253:33">block</name><index pos:start="253:34" pos:end="253:36">[<expr pos:start="253:35" pos:end="253:35"><literal type="number" pos:start="253:35" pos:end="253:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="257:1" pos:end="257:13"><name pos:start="257:1" pos:end="257:12">block_placed</name>:</label>

    <if_stmt pos:start="259:5" pos:end="261:47"><if pos:start="259:5" pos:end="261:47">if <condition pos:start="259:8" pos:end="259:16">(<expr pos:start="259:9" pos:end="259:15"><operator pos:start="259:9" pos:end="259:9">!</operator><name pos:start="259:10" pos:end="259:15">chroma</name></expr>)</condition><block type="pseudo" pos:start="261:9" pos:end="261:47"><block_content pos:start="261:9" pos:end="261:47">

        <expr_stmt pos:start="261:9" pos:end="261:47"><expr pos:start="261:9" pos:end="261:46"><call pos:start="261:9" pos:end="261:46"><name pos:start="261:9" pos:end="261:29">x8_update_predictions</name><argument_list pos:start="261:30" pos:end="261:46">(<argument pos:start="261:31" pos:end="261:31"><expr pos:start="261:31" pos:end="261:31"><name pos:start="261:31" pos:end="261:31">w</name></expr></argument>, <argument pos:start="261:34" pos:end="261:42"><expr pos:start="261:34" pos:end="261:42"><name pos:start="261:34" pos:end="261:42"><name pos:start="261:34" pos:end="261:34">w</name><operator pos:start="261:35" pos:end="261:36">-&gt;</operator><name pos:start="261:37" pos:end="261:42">orient</name></name></expr></argument>, <argument pos:start="261:45" pos:end="261:45"><expr pos:start="261:45" pos:end="261:45"><name pos:start="261:45" pos:end="261:45">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="265:5" pos:end="283:5"><if pos:start="265:5" pos:end="283:5">if <condition pos:start="265:8" pos:end="265:23">(<expr pos:start="265:9" pos:end="265:22"><name pos:start="265:9" pos:end="265:22"><name pos:start="265:9" pos:end="265:9">s</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:22">loop_filter</name></name></expr>)</condition> <block pos:start="265:25" pos:end="283:5">{<block_content pos:start="267:9" pos:end="281:58">

        <decl_stmt pos:start="267:9" pos:end="267:39"><decl pos:start="267:9" pos:end="267:38"><type pos:start="267:9" pos:end="267:17"><name pos:start="267:9" pos:end="267:15">uint8_t</name> <modifier pos:start="267:17" pos:end="267:17">*</modifier></type><name pos:start="267:18" pos:end="267:20">ptr</name> <init pos:start="267:22" pos:end="267:38">= <expr pos:start="267:24" pos:end="267:38"><name pos:start="267:24" pos:end="267:38"><name pos:start="267:24" pos:end="267:24">w</name><operator pos:start="267:25" pos:end="267:26">-&gt;</operator><name pos:start="267:27" pos:end="267:30">dest</name><index pos:start="267:31" pos:end="267:38">[<expr pos:start="267:32" pos:end="267:37"><name pos:start="267:32" pos:end="267:37">chroma</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="269:9" pos:end="269:64"><decl pos:start="269:9" pos:end="269:63"><type pos:start="269:9" pos:end="269:11"><name pos:start="269:9" pos:end="269:11">int</name></type> <name pos:start="269:13" pos:end="269:20">linesize</name> <init pos:start="269:22" pos:end="269:63">= <expr pos:start="269:24" pos:end="269:63"><name pos:start="269:24" pos:end="269:63"><name pos:start="269:24" pos:end="269:24">s</name><operator pos:start="269:25" pos:end="269:26">-&gt;</operator><name pos:start="269:27" pos:end="269:41">current_picture</name><operator pos:start="269:42" pos:end="269:42">.</operator><name pos:start="269:43" pos:end="269:43">f</name><operator pos:start="269:44" pos:end="269:45">-&gt;</operator><name pos:start="269:46" pos:end="269:53">linesize</name><index pos:start="269:54" pos:end="269:63">[<expr pos:start="269:55" pos:end="269:62"><operator pos:start="269:55" pos:end="269:55">!</operator><operator pos:start="269:56" pos:end="269:56">!</operator><name pos:start="269:57" pos:end="269:62">chroma</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="273:9" pos:end="275:58"><if pos:start="273:9" pos:end="275:58">if <condition pos:start="273:12" pos:end="273:70">(<expr pos:start="273:13" pos:end="273:69"><operator pos:start="273:13" pos:end="273:13">!</operator><operator pos:start="273:14" pos:end="273:14">(</operator><operator pos:start="273:15" pos:end="273:15">(</operator><name pos:start="273:16" pos:end="273:23"><name pos:start="273:16" pos:end="273:16">w</name><operator pos:start="273:17" pos:end="273:18">-&gt;</operator><name pos:start="273:19" pos:end="273:23">edges</name></name> <operator pos:start="273:25" pos:end="273:25">&amp;</operator> <literal type="number" pos:start="273:27" pos:end="273:27">2</literal><operator pos:start="273:28" pos:end="273:28">)</operator> <operator pos:start="273:30" pos:end="273:31">||</operator> <operator pos:start="273:33" pos:end="273:33">(</operator><name pos:start="273:34" pos:end="273:43">zeros_only</name> <operator pos:start="273:45" pos:end="273:46">&amp;&amp;</operator> <operator pos:start="273:48" pos:end="273:48">(</operator><name pos:start="273:49" pos:end="273:57"><name pos:start="273:49" pos:end="273:49">w</name><operator pos:start="273:50" pos:end="273:51">-&gt;</operator><name pos:start="273:52" pos:end="273:57">orient</name></name> <operator pos:start="273:59" pos:end="273:59">|</operator> <literal type="number" pos:start="273:61" pos:end="273:61">4</literal><operator pos:start="273:62" pos:end="273:62">)</operator> <operator pos:start="273:64" pos:end="273:65">==</operator> <literal type="number" pos:start="273:67" pos:end="273:67">4</literal><operator pos:start="273:68" pos:end="273:68">)</operator><operator pos:start="273:69" pos:end="273:69">)</operator></expr>)</condition><block type="pseudo" pos:start="275:13" pos:end="275:58"><block_content pos:start="275:13" pos:end="275:58">

            <expr_stmt pos:start="275:13" pos:end="275:58"><expr pos:start="275:13" pos:end="275:57"><call pos:start="275:13" pos:end="275:57"><name pos:start="275:13" pos:end="275:32"><name pos:start="275:13" pos:end="275:13">w</name><operator pos:start="275:14" pos:end="275:15">-&gt;</operator><name pos:start="275:16" pos:end="275:18">dsp</name><operator pos:start="275:19" pos:end="275:19">.</operator><name pos:start="275:20" pos:end="275:32">h_loop_filter</name></name><argument_list pos:start="275:33" pos:end="275:57">(<argument pos:start="275:34" pos:end="275:36"><expr pos:start="275:34" pos:end="275:36"><name pos:start="275:34" pos:end="275:36">ptr</name></expr></argument>, <argument pos:start="275:39" pos:end="275:46"><expr pos:start="275:39" pos:end="275:46"><name pos:start="275:39" pos:end="275:46">linesize</name></expr></argument>, <argument pos:start="275:49" pos:end="275:56"><expr pos:start="275:49" pos:end="275:56"><name pos:start="275:49" pos:end="275:56"><name pos:start="275:49" pos:end="275:49">w</name><operator pos:start="275:50" pos:end="275:51">-&gt;</operator><name pos:start="275:52" pos:end="275:56">quant</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="279:9" pos:end="281:58"><if pos:start="279:9" pos:end="281:58">if <condition pos:start="279:12" pos:end="279:70">(<expr pos:start="279:13" pos:end="279:69"><operator pos:start="279:13" pos:end="279:13">!</operator><operator pos:start="279:14" pos:end="279:14">(</operator><operator pos:start="279:15" pos:end="279:15">(</operator><name pos:start="279:16" pos:end="279:23"><name pos:start="279:16" pos:end="279:16">w</name><operator pos:start="279:17" pos:end="279:18">-&gt;</operator><name pos:start="279:19" pos:end="279:23">edges</name></name> <operator pos:start="279:25" pos:end="279:25">&amp;</operator> <literal type="number" pos:start="279:27" pos:end="279:27">1</literal><operator pos:start="279:28" pos:end="279:28">)</operator> <operator pos:start="279:30" pos:end="279:31">||</operator> <operator pos:start="279:33" pos:end="279:33">(</operator><name pos:start="279:34" pos:end="279:43">zeros_only</name> <operator pos:start="279:45" pos:end="279:46">&amp;&amp;</operator> <operator pos:start="279:48" pos:end="279:48">(</operator><name pos:start="279:49" pos:end="279:57"><name pos:start="279:49" pos:end="279:49">w</name><operator pos:start="279:50" pos:end="279:51">-&gt;</operator><name pos:start="279:52" pos:end="279:57">orient</name></name> <operator pos:start="279:59" pos:end="279:59">|</operator> <literal type="number" pos:start="279:61" pos:end="279:61">8</literal><operator pos:start="279:62" pos:end="279:62">)</operator> <operator pos:start="279:64" pos:end="279:65">==</operator> <literal type="number" pos:start="279:67" pos:end="279:67">8</literal><operator pos:start="279:68" pos:end="279:68">)</operator><operator pos:start="279:69" pos:end="279:69">)</operator></expr>)</condition><block type="pseudo" pos:start="281:13" pos:end="281:58"><block_content pos:start="281:13" pos:end="281:58">

            <expr_stmt pos:start="281:13" pos:end="281:58"><expr pos:start="281:13" pos:end="281:57"><call pos:start="281:13" pos:end="281:57"><name pos:start="281:13" pos:end="281:32"><name pos:start="281:13" pos:end="281:13">w</name><operator pos:start="281:14" pos:end="281:15">-&gt;</operator><name pos:start="281:16" pos:end="281:18">dsp</name><operator pos:start="281:19" pos:end="281:19">.</operator><name pos:start="281:20" pos:end="281:32">v_loop_filter</name></name><argument_list pos:start="281:33" pos:end="281:57">(<argument pos:start="281:34" pos:end="281:36"><expr pos:start="281:34" pos:end="281:36"><name pos:start="281:34" pos:end="281:36">ptr</name></expr></argument>, <argument pos:start="281:39" pos:end="281:46"><expr pos:start="281:39" pos:end="281:46"><name pos:start="281:39" pos:end="281:46">linesize</name></expr></argument>, <argument pos:start="281:49" pos:end="281:56"><expr pos:start="281:49" pos:end="281:56"><name pos:start="281:49" pos:end="281:56"><name pos:start="281:49" pos:end="281:49">w</name><operator pos:start="281:50" pos:end="281:51">-&gt;</operator><name pos:start="281:52" pos:end="281:56">quant</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="285:5" pos:end="285:13">return <expr pos:start="285:12" pos:end="285:12"><literal type="number" pos:start="285:12" pos:end="285:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
