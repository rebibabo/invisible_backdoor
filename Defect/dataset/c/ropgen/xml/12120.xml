<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12120.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">Y8950UpdateOne</name><parameter_list pos:start="1:20" pos:end="1:59">(<parameter pos:start="1:21" pos:end="1:31"><decl pos:start="1:21" pos:end="1:31"><type pos:start="1:21" pos:end="1:31"><name pos:start="1:21" pos:end="1:26">FM_OPL</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">OPL</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:38">INT16</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">buffer</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:58"><decl pos:start="1:49" pos:end="1:58"><type pos:start="1:49" pos:end="1:58"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:58">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:36">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:17"><decl pos:start="7:9" pos:end="7:16"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:16">data</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:32"><decl pos:start="9:9" pos:end="9:31"><type pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:17">OPLSAMPLE</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:31">= <expr pos:start="9:26" pos:end="9:31"><name pos:start="9:26" pos:end="9:31">buffer</name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:37"><decl pos:start="11:9" pos:end="11:36"><type pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:14">UINT32</name></type> <name pos:start="11:16" pos:end="11:21">amsCnt</name>  <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:28">OPL</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:36">amsCnt</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="13:9" pos:end="13:37"><decl pos:start="13:9" pos:end="13:36"><type pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:14">UINT32</name></type> <name pos:start="13:16" pos:end="13:21">vibCnt</name>  <init pos:start="13:24" pos:end="13:36">= <expr pos:start="13:26" pos:end="13:36"><name pos:start="13:26" pos:end="13:36"><name pos:start="13:26" pos:end="13:28">OPL</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:36">vibCnt</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="15:9" pos:end="15:38"><decl pos:start="15:9" pos:end="15:37"><type pos:start="15:9" pos:end="15:13"><name pos:start="15:9" pos:end="15:13">UINT8</name></type> <name pos:start="15:15" pos:end="15:19">rythm</name> <init pos:start="15:21" pos:end="15:37">= <expr pos:start="15:23" pos:end="15:37"><name pos:start="15:23" pos:end="15:32"><name pos:start="15:23" pos:end="15:25">OPL</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:32">rythm</name></name><operator pos:start="15:33" pos:end="15:33">&amp;</operator><literal type="number" pos:start="15:34" pos:end="15:37">0x20</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="17:9" pos:end="17:25"><decl pos:start="17:9" pos:end="17:18"><type pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:14">OPL_CH</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:18">CH</name></decl>,<decl pos:start="17:20" pos:end="17:24"><type ref="prev" pos:start="17:9" pos:end="17:16"><modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:24">R_CH</name></decl>;</decl_stmt>

	<decl_stmt pos:start="19:9" pos:end="19:40"><decl pos:start="19:9" pos:end="19:39"><type pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:17">YM_DELTAT</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:25">DELTAT</name> <init pos:start="19:27" pos:end="19:39">= <expr pos:start="19:29" pos:end="19:39"><name pos:start="19:29" pos:end="19:39"><name pos:start="19:29" pos:end="19:31">OPL</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:39">deltat</name></name></expr></init></decl>;</decl_stmt>



	<comment type="block" pos:start="23:9" pos:end="23:32">/* setup DELTA-T unit */</comment>

	<expr_stmt pos:start="25:9" pos:end="25:40"><expr pos:start="25:9" pos:end="25:39"><call pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:31">YM_DELTAT_DECODE_PRESET</name><argument_list pos:start="25:32" pos:end="25:39">(<argument pos:start="25:33" pos:end="25:38"><expr pos:start="25:33" pos:end="25:38"><name pos:start="25:33" pos:end="25:38">DELTAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="29:9" pos:end="59:9"><if pos:start="29:9" pos:end="59:9">if<condition pos:start="29:11" pos:end="29:37">( <expr pos:start="29:13" pos:end="29:35"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:17">void</name> <operator pos:start="29:19" pos:end="29:19">*</operator><operator pos:start="29:20" pos:end="29:20">)</operator><name pos:start="29:21" pos:end="29:23">OPL</name> <operator pos:start="29:25" pos:end="29:26">!=</operator> <name pos:start="29:28" pos:end="29:35">cur_chip</name></expr> )</condition><block pos:start="29:38" pos:end="59:9">{<block_content pos:start="31:17" pos:end="57:43">

		<expr_stmt pos:start="31:17" pos:end="31:39"><expr pos:start="31:17" pos:end="31:38"><name pos:start="31:17" pos:end="31:24">cur_chip</name> <operator pos:start="31:26" pos:end="31:26">=</operator> <operator pos:start="31:28" pos:end="31:28">(</operator><name pos:start="31:29" pos:end="31:32">void</name> <operator pos:start="31:34" pos:end="31:34">*</operator><operator pos:start="31:35" pos:end="31:35">)</operator><name pos:start="31:36" pos:end="31:38">OPL</name></expr>;</expr_stmt>

		<comment type="block" pos:start="33:17" pos:end="33:38">/* channel pointers */</comment>

		<expr_stmt pos:start="35:17" pos:end="35:33"><expr pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:20">S_CH</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:32"><name pos:start="35:24" pos:end="35:26">OPL</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:32">P_CH</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="37:17" pos:end="37:32"><expr pos:start="37:17" pos:end="37:31"><name pos:start="37:17" pos:end="37:20">E_CH</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <operator pos:start="37:24" pos:end="37:24">&amp;</operator><name pos:start="37:25" pos:end="37:31"><name pos:start="37:25" pos:end="37:28">S_CH</name><index pos:start="37:29" pos:end="37:31">[<expr pos:start="37:30" pos:end="37:30"><literal type="number" pos:start="37:30" pos:end="37:30">9</literal></expr>]</index></name></expr>;</expr_stmt>

		<comment type="block" pos:start="39:17" pos:end="39:32">/* rythm slot */</comment>

		<expr_stmt pos:start="41:17" pos:end="41:47"><expr pos:start="41:17" pos:end="41:46"><name pos:start="41:17" pos:end="41:23">SLOT7_1</name> <operator pos:start="41:25" pos:end="41:25">=</operator> <operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:34"><name pos:start="41:28" pos:end="41:31">S_CH</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><literal type="number" pos:start="41:33" pos:end="41:33">7</literal></expr>]</index></name><operator pos:start="41:35" pos:end="41:35">.</operator><name pos:start="41:36" pos:end="41:46"><name pos:start="41:36" pos:end="41:39">SLOT</name><index pos:start="41:40" pos:end="41:46">[<expr pos:start="41:41" pos:end="41:45"><name pos:start="41:41" pos:end="41:45">SLOT1</name></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="43:17" pos:end="43:47"><expr pos:start="43:17" pos:end="43:46"><name pos:start="43:17" pos:end="43:23">SLOT7_2</name> <operator pos:start="43:25" pos:end="43:25">=</operator> <operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:34"><name pos:start="43:28" pos:end="43:31">S_CH</name><index pos:start="43:32" pos:end="43:34">[<expr pos:start="43:33" pos:end="43:33"><literal type="number" pos:start="43:33" pos:end="43:33">7</literal></expr>]</index></name><operator pos:start="43:35" pos:end="43:35">.</operator><name pos:start="43:36" pos:end="43:46"><name pos:start="43:36" pos:end="43:39">SLOT</name><index pos:start="43:40" pos:end="43:46">[<expr pos:start="43:41" pos:end="43:45"><name pos:start="43:41" pos:end="43:45">SLOT2</name></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="45:17" pos:end="45:47"><expr pos:start="45:17" pos:end="45:46"><name pos:start="45:17" pos:end="45:23">SLOT8_1</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:34"><name pos:start="45:28" pos:end="45:31">S_CH</name><index pos:start="45:32" pos:end="45:34">[<expr pos:start="45:33" pos:end="45:33"><literal type="number" pos:start="45:33" pos:end="45:33">8</literal></expr>]</index></name><operator pos:start="45:35" pos:end="45:35">.</operator><name pos:start="45:36" pos:end="45:46"><name pos:start="45:36" pos:end="45:39">SLOT</name><index pos:start="45:40" pos:end="45:46">[<expr pos:start="45:41" pos:end="45:45"><name pos:start="45:41" pos:end="45:45">SLOT1</name></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="47:17" pos:end="47:47"><expr pos:start="47:17" pos:end="47:46"><name pos:start="47:17" pos:end="47:23">SLOT8_2</name> <operator pos:start="47:25" pos:end="47:25">=</operator> <operator pos:start="47:27" pos:end="47:27">&amp;</operator><name pos:start="47:28" pos:end="47:34"><name pos:start="47:28" pos:end="47:31">S_CH</name><index pos:start="47:32" pos:end="47:34">[<expr pos:start="47:33" pos:end="47:33"><literal type="number" pos:start="47:33" pos:end="47:33">8</literal></expr>]</index></name><operator pos:start="47:35" pos:end="47:35">.</operator><name pos:start="47:36" pos:end="47:46"><name pos:start="47:36" pos:end="47:39">SLOT</name><index pos:start="47:40" pos:end="47:46">[<expr pos:start="47:41" pos:end="47:45"><name pos:start="47:41" pos:end="47:45">SLOT2</name></expr>]</index></name></expr>;</expr_stmt>

		<comment type="block" pos:start="49:17" pos:end="49:31">/* LFO state */</comment>

		<expr_stmt pos:start="51:17" pos:end="51:39"><expr pos:start="51:17" pos:end="51:38"><name pos:start="51:17" pos:end="51:23">amsIncr</name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:29">OPL</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:38">amsIncr</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="53:17" pos:end="53:39"><expr pos:start="53:17" pos:end="53:38"><name pos:start="53:17" pos:end="53:23">vibIncr</name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:38"><name pos:start="53:27" pos:end="53:29">OPL</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:38">vibIncr</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="55:17" pos:end="55:43"><expr pos:start="55:17" pos:end="55:42"><name pos:start="55:17" pos:end="55:25">ams_table</name> <operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:42"><name pos:start="55:29" pos:end="55:31">OPL</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:42">ams_table</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="57:17" pos:end="57:43"><expr pos:start="57:17" pos:end="57:42"><name pos:start="57:17" pos:end="57:25">vib_table</name> <operator pos:start="57:27" pos:end="57:27">=</operator> <name pos:start="57:29" pos:end="57:42"><name pos:start="57:29" pos:end="57:31">OPL</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:42">vib_table</name></name></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="61:9" pos:end="61:39"><expr pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:12">R_CH</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <ternary pos:start="61:16" pos:end="61:38"><condition pos:start="61:16" pos:end="61:22"><expr pos:start="61:16" pos:end="61:20"><name pos:start="61:16" pos:end="61:20">rythm</name></expr> ?</condition><then pos:start="61:24" pos:end="61:31"> <expr pos:start="61:24" pos:end="61:31"><operator pos:start="61:24" pos:end="61:24">&amp;</operator><name pos:start="61:25" pos:end="61:31"><name pos:start="61:25" pos:end="61:28">S_CH</name><index pos:start="61:29" pos:end="61:31">[<expr pos:start="61:30" pos:end="61:30"><literal type="number" pos:start="61:30" pos:end="61:30">6</literal></expr>]</index></name></expr> </then><else pos:start="61:33" pos:end="61:38">: <expr pos:start="61:35" pos:end="61:38"><name pos:start="61:35" pos:end="61:38">E_CH</name></expr></else></ternary></expr>;</expr_stmt>

    <for pos:start="63:5" pos:end="103:9">for<control pos:start="63:8" pos:end="63:32">( <init pos:start="63:10" pos:end="63:13"><expr pos:start="63:10" pos:end="63:12"><name pos:start="63:10" pos:end="63:10">i</name><operator pos:start="63:11" pos:end="63:11">=</operator><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</init> <condition pos:start="63:15" pos:end="63:26"><expr pos:start="63:15" pos:end="63:24"><name pos:start="63:15" pos:end="63:15">i</name> <operator pos:start="63:17" pos:end="63:17">&lt;</operator> <name pos:start="63:19" pos:end="63:24">length</name></expr> ;</condition> <incr pos:start="63:28" pos:end="63:30"><expr pos:start="63:28" pos:end="63:30"><name pos:start="63:28" pos:end="63:28">i</name><operator pos:start="63:29" pos:end="63:30">++</operator></expr></incr> )</control>

	<block pos:start="65:9" pos:end="103:9">{<block_content pos:start="71:17" pos:end="101:43">

		<comment type="block" pos:start="67:17" pos:end="67:83">/*            channel A         channel B         channel C      */</comment>

		<comment type="block" pos:start="69:17" pos:end="69:25">/* LFO */</comment>

		<expr_stmt pos:start="71:17" pos:end="71:62"><expr pos:start="71:17" pos:end="71:61"><name pos:start="71:17" pos:end="71:19">ams</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <name pos:start="71:23" pos:end="71:61"><name pos:start="71:23" pos:end="71:31">ams_table</name><index pos:start="71:32" pos:end="71:61">[<expr pos:start="71:33" pos:end="71:60"><operator pos:start="71:33" pos:end="71:33">(</operator><name pos:start="71:34" pos:end="71:39">amsCnt</name><operator pos:start="71:40" pos:end="71:41">+=</operator><name pos:start="71:42" pos:end="71:48">amsIncr</name><operator pos:start="71:49" pos:end="71:49">)</operator><operator pos:start="71:50" pos:end="71:51">&gt;&gt;</operator><name pos:start="71:52" pos:end="71:60">AMS_SHIFT</name></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="73:17" pos:end="73:62"><expr pos:start="73:17" pos:end="73:61"><name pos:start="73:17" pos:end="73:19">vib</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <name pos:start="73:23" pos:end="73:61"><name pos:start="73:23" pos:end="73:31">vib_table</name><index pos:start="73:32" pos:end="73:61">[<expr pos:start="73:33" pos:end="73:60"><operator pos:start="73:33" pos:end="73:33">(</operator><name pos:start="73:34" pos:end="73:39">vibCnt</name><operator pos:start="73:40" pos:end="73:41">+=</operator><name pos:start="73:42" pos:end="73:48">vibIncr</name><operator pos:start="73:49" pos:end="73:49">)</operator><operator pos:start="73:50" pos:end="73:51">&gt;&gt;</operator><name pos:start="73:52" pos:end="73:60">VIB_SHIFT</name></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="75:17" pos:end="75:28"><expr pos:start="75:17" pos:end="75:27"><name pos:start="75:17" pos:end="75:23"><name pos:start="75:17" pos:end="75:20">outd</name><index pos:start="75:21" pos:end="75:23">[<expr pos:start="75:22" pos:end="75:22"><literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>]</index></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <literal type="number" pos:start="75:27" pos:end="75:27">0</literal></expr>;</expr_stmt>

		<comment type="block" pos:start="77:17" pos:end="77:34">/* deltaT ADPCM */</comment>

		<if_stmt pos:start="79:17" pos:end="81:53"><if pos:start="79:17" pos:end="81:53">if<condition pos:start="79:19" pos:end="79:39">( <expr pos:start="79:21" pos:end="79:37"><name pos:start="79:21" pos:end="79:37"><name pos:start="79:21" pos:end="79:26">DELTAT</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:37">portstate</name></name></expr> )</condition><block type="pseudo" pos:start="81:25" pos:end="81:53"><block_content pos:start="81:25" pos:end="81:53">

			<expr_stmt pos:start="81:25" pos:end="81:53"><expr pos:start="81:25" pos:end="81:52"><call pos:start="81:25" pos:end="81:52"><name pos:start="81:25" pos:end="81:44">YM_DELTAT_ADPCM_CALC</name><argument_list pos:start="81:45" pos:end="81:52">(<argument pos:start="81:46" pos:end="81:51"><expr pos:start="81:46" pos:end="81:51"><name pos:start="81:46" pos:end="81:51">DELTAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<comment type="block" pos:start="83:17" pos:end="83:29">/* FM part */</comment>

		<for pos:start="85:17" pos:end="87:40">for<control pos:start="85:20" pos:end="85:47">(<init pos:start="85:21" pos:end="85:29"><expr pos:start="85:21" pos:end="85:27"><name pos:start="85:21" pos:end="85:22">CH</name><operator pos:start="85:23" pos:end="85:23">=</operator><name pos:start="85:24" pos:end="85:27">S_CH</name></expr> ;</init> <condition pos:start="85:31" pos:end="85:41"><expr pos:start="85:31" pos:end="85:39"><name pos:start="85:31" pos:end="85:32">CH</name> <operator pos:start="85:34" pos:end="85:34">&lt;</operator> <name pos:start="85:36" pos:end="85:39">R_CH</name></expr> ;</condition> <incr pos:start="85:43" pos:end="85:46"><expr pos:start="85:43" pos:end="85:46"><name pos:start="85:43" pos:end="85:44">CH</name><operator pos:start="85:45" pos:end="85:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="87:25" pos:end="87:40"><block_content pos:start="87:25" pos:end="87:40">

			<expr_stmt pos:start="87:25" pos:end="87:40"><expr pos:start="87:25" pos:end="87:39"><call pos:start="87:25" pos:end="87:39"><name pos:start="87:25" pos:end="87:35">OPL_CALC_CH</name><argument_list pos:start="87:36" pos:end="87:39">(<argument pos:start="87:37" pos:end="87:38"><expr pos:start="87:37" pos:end="87:38"><name pos:start="87:37" pos:end="87:38">CH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

		<comment type="block" pos:start="89:17" pos:end="89:32">/* Rythn part */</comment>

		<if_stmt pos:start="91:17" pos:end="93:42"><if pos:start="91:17" pos:end="93:42">if<condition pos:start="91:19" pos:end="91:25">(<expr pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:24">rythm</name></expr>)</condition><block type="pseudo" pos:start="93:25" pos:end="93:42"><block_content pos:start="93:25" pos:end="93:42">

			<expr_stmt pos:start="93:25" pos:end="93:42"><expr pos:start="93:25" pos:end="93:41"><call pos:start="93:25" pos:end="93:41"><name pos:start="93:25" pos:end="93:35">OPL_CALC_RH</name><argument_list pos:start="93:36" pos:end="93:41">(<argument pos:start="93:37" pos:end="93:40"><expr pos:start="93:37" pos:end="93:40"><name pos:start="93:37" pos:end="93:40">S_CH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<comment type="block" pos:start="95:17" pos:end="95:33">/* limit check */</comment>

		<expr_stmt pos:start="97:17" pos:end="97:65"><expr pos:start="97:17" pos:end="97:64"><name pos:start="97:17" pos:end="97:20">data</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <call pos:start="97:24" pos:end="97:64"><name pos:start="97:24" pos:end="97:28">Limit</name><argument_list pos:start="97:29" pos:end="97:64">( <argument pos:start="97:31" pos:end="97:37"><expr pos:start="97:31" pos:end="97:37"><name pos:start="97:31" pos:end="97:37"><name pos:start="97:31" pos:end="97:34">outd</name><index pos:start="97:35" pos:end="97:37">[<expr pos:start="97:36" pos:end="97:36"><literal type="number" pos:start="97:36" pos:end="97:36">0</literal></expr>]</index></name></expr></argument> , <argument pos:start="97:41" pos:end="97:50"><expr pos:start="97:41" pos:end="97:50"><name pos:start="97:41" pos:end="97:50">OPL_MAXOUT</name></expr></argument>, <argument pos:start="97:53" pos:end="97:62"><expr pos:start="97:53" pos:end="97:62"><name pos:start="97:53" pos:end="97:62">OPL_MINOUT</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

		<comment type="block" pos:start="99:17" pos:end="99:43">/* store to sound buffer */</comment>

		<expr_stmt pos:start="101:17" pos:end="101:43"><expr pos:start="101:17" pos:end="101:42"><name pos:start="101:17" pos:end="101:22"><name pos:start="101:17" pos:end="101:19">buf</name><index pos:start="101:20" pos:end="101:22">[<expr pos:start="101:21" pos:end="101:21"><name pos:start="101:21" pos:end="101:21">i</name></expr>]</index></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <name pos:start="101:26" pos:end="101:29">data</name> <operator pos:start="101:31" pos:end="101:32">&gt;&gt;</operator> <name pos:start="101:34" pos:end="101:42">OPL_OUTSB</name></expr>;</expr_stmt>

	</block_content>}</block></for>

	<expr_stmt pos:start="105:9" pos:end="105:29"><expr pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:11">OPL</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:19">amsCnt</name></name> <operator pos:start="105:21" pos:end="105:21">=</operator> <name pos:start="105:23" pos:end="105:28">amsCnt</name></expr>;</expr_stmt>

	<expr_stmt pos:start="107:9" pos:end="107:29"><expr pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:11">OPL</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:19">vibCnt</name></name> <operator pos:start="107:21" pos:end="107:21">=</operator> <name pos:start="107:23" pos:end="107:28">vibCnt</name></expr>;</expr_stmt>

	<comment type="block" pos:start="109:9" pos:end="109:31">/* deltaT START flag */</comment>

	<if_stmt pos:start="111:9" pos:end="113:36"><if pos:start="111:9" pos:end="113:36">if<condition pos:start="111:11" pos:end="111:32">( <expr pos:start="111:13" pos:end="111:30"><operator pos:start="111:13" pos:end="111:13">!</operator><name pos:start="111:14" pos:end="111:30"><name pos:start="111:14" pos:end="111:19">DELTAT</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:30">portstate</name></name></expr> )</condition><block type="pseudo" pos:start="113:17" pos:end="113:36"><block_content pos:start="113:17" pos:end="113:36">

		<expr_stmt pos:start="113:17" pos:end="113:36"><expr pos:start="113:17" pos:end="113:35"><name pos:start="113:17" pos:end="113:27"><name pos:start="113:17" pos:end="113:19">OPL</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:27">status</name></name> <operator pos:start="113:29" pos:end="113:30">&amp;=</operator> <literal type="number" pos:start="113:32" pos:end="113:35">0xfe</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
