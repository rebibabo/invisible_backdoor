<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/408.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">nvdimm_dsm_func_read_fit</name><parameter_list pos:start="1:37" pos:end="3:57">(<parameter pos:start="1:38" pos:end="1:59"><decl pos:start="1:38" pos:end="1:59"><type pos:start="1:38" pos:end="1:59"><name pos:start="1:38" pos:end="1:52">AcpiNVDIMMState</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">state</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:76"><decl pos:start="1:62" pos:end="1:76"><type pos:start="1:62" pos:end="1:76"><name pos:start="1:62" pos:end="1:72">NvdimmDsmIn</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:76">in</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:56"><decl pos:start="3:38" pos:end="3:56"><type pos:start="3:38" pos:end="3:56"><name pos:start="3:38" pos:end="3:43">hwaddr</name></type> <name pos:start="3:45" pos:end="3:56">dsm_mem_addr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="97:1">{<block_content pos:start="7:5" pos:end="95:38">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">NvdimmFitBuffer</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:28">fit_buf</name> <init pos:start="7:30" pos:end="7:46">= <expr pos:start="7:32" pos:end="7:46"><operator pos:start="7:32" pos:end="7:32">&amp;</operator><name pos:start="7:33" pos:end="7:46"><name pos:start="7:33" pos:end="7:37">state</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:46">fit_buf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23">NvdimmFuncReadFITIn</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:33">read_fit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:24">NvdimmFuncReadFITOut</name> <modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:38">read_fit_out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:10">GArray</name> <modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:15">fit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:43"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:21">read_len</name> <init pos:start="15:23" pos:end="15:25">= <expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">0</literal></expr></init></decl>, <decl pos:start="15:28" pos:end="15:42"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:28" pos:end="15:42">func_ret_status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:47"><expr pos:start="21:5" pos:end="21:46"><name pos:start="21:5" pos:end="21:12">read_fit</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><name pos:start="21:17" pos:end="21:35">NvdimmFuncReadFITIn</name> <operator pos:start="21:37" pos:end="21:37">*</operator><operator pos:start="21:38" pos:end="21:38">)</operator><name pos:start="21:39" pos:end="21:46"><name pos:start="21:39" pos:end="21:40">in</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:46">arg3</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:16">le32_to_cpus</name><argument_list pos:start="23:17" pos:end="23:35">(<argument pos:start="23:18" pos:end="23:34"><expr pos:start="23:18" pos:end="23:34"><operator pos:start="23:18" pos:end="23:18">&amp;</operator><name pos:start="23:19" pos:end="23:34"><name pos:start="23:19" pos:end="23:26">read_fit</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:34">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><call pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:19">qemu_mutex_lock</name><argument_list pos:start="27:20" pos:end="27:35">(<argument pos:start="27:21" pos:end="27:34"><expr pos:start="27:21" pos:end="27:34"><operator pos:start="27:21" pos:end="27:21">&amp;</operator><name pos:start="27:22" pos:end="27:34"><name pos:start="27:22" pos:end="27:28">fit_buf</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:34">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:23"><expr pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:7">fit</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <name pos:start="29:11" pos:end="29:22"><name pos:start="29:11" pos:end="29:17">fit_buf</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:22">fit</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:76"><expr pos:start="33:5" pos:end="35:75"><call pos:start="33:5" pos:end="35:75"><name pos:start="33:5" pos:end="33:16">nvdimm_debug</name><argument_list pos:start="33:17" pos:end="35:75">(<argument pos:start="33:18" pos:end="33:64"><expr pos:start="33:18" pos:end="33:64"><literal type="string" pos:start="33:18" pos:end="33:64">"Read FIT: offset %#x FIT size %#x Dirty %s.\n"</literal></expr></argument>,

                 <argument pos:start="35:18" pos:end="35:33"><expr pos:start="35:18" pos:end="35:33"><name pos:start="35:18" pos:end="35:33"><name pos:start="35:18" pos:end="35:25">read_fit</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:33">offset</name></name></expr></argument>, <argument pos:start="35:36" pos:end="35:43"><expr pos:start="35:36" pos:end="35:43"><name pos:start="35:36" pos:end="35:43"><name pos:start="35:36" pos:end="35:38">fit</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:43">len</name></name></expr></argument>, <argument pos:start="35:46" pos:end="35:74"><expr pos:start="35:46" pos:end="35:74"><ternary pos:start="35:46" pos:end="35:74"><condition pos:start="35:46" pos:end="35:61"><expr pos:start="35:46" pos:end="35:59"><name pos:start="35:46" pos:end="35:59"><name pos:start="35:46" pos:end="35:52">fit_buf</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:59">dirty</name></name></expr> ?</condition><then pos:start="35:63" pos:end="35:67"> <expr pos:start="35:63" pos:end="35:67"><literal type="string" pos:start="35:63" pos:end="35:67">"Yes"</literal></expr> </then><else pos:start="35:69" pos:end="35:74">: <expr pos:start="35:71" pos:end="35:74"><literal type="string" pos:start="35:71" pos:end="35:74">"No"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:36">(<expr pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:16">read_fit</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:24">offset</name></name> <operator pos:start="39:26" pos:end="39:26">&gt;</operator> <name pos:start="39:28" pos:end="39:35"><name pos:start="39:28" pos:end="39:30">fit</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:35">len</name></name></expr>)</condition> <block pos:start="39:38" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:18">

        <expr_stmt pos:start="41:9" pos:end="41:59"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:23">func_ret_status</name> <operator pos:start="41:25" pos:end="41:25">=</operator> <literal type="number" pos:start="41:27" pos:end="41:27">3</literal></expr> <comment type="block" pos:start="41:29" pos:end="41:58">/* Invalid Input Parameters */</comment>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:43">/* It is the first time to read FIT. */</comment>

    <if_stmt pos:start="51:5" pos:end="61:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:26">(<expr pos:start="51:9" pos:end="51:25"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:25"><name pos:start="51:10" pos:end="51:17">read_fit</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:25">offset</name></name></expr>)</condition> <block pos:start="51:28" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:31">

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:15">fit_buf</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:22">dirty</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:30">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="61:5">else if <condition pos:start="55:15" pos:end="55:30">(<expr pos:start="55:16" pos:end="55:29"><name pos:start="55:16" pos:end="55:29"><name pos:start="55:16" pos:end="55:22">fit_buf</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:29">dirty</name></name></expr>)</condition> <block pos:start="55:32" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:18"> <comment type="block" pos:start="55:34" pos:end="55:72">/* FIT has been changed during RFIT. */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:50"><expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:23">func_ret_status</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <literal type="number" pos:start="57:27" pos:end="57:31">0x100</literal></expr> <comment type="block" pos:start="57:33" pos:end="57:49">/* fit changed */</comment>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:18">goto <name pos:start="59:14" pos:end="59:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:38"><expr pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:19">func_ret_status</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <literal type="number" pos:start="65:23" pos:end="65:23">0</literal></expr> <comment type="block" pos:start="65:25" pos:end="65:37">/* Success */</comment>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="69:56"><expr pos:start="67:5" pos:end="69:55"><name pos:start="67:5" pos:end="67:12">read_len</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <call pos:start="67:16" pos:end="69:55"><name pos:start="67:16" pos:end="67:18">MIN</name><argument_list pos:start="67:19" pos:end="69:55">(<argument pos:start="67:20" pos:end="67:46"><expr pos:start="67:20" pos:end="67:46"><name pos:start="67:20" pos:end="67:27"><name pos:start="67:20" pos:end="67:22">fit</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:27">len</name></name> <operator pos:start="67:29" pos:end="67:29">-</operator> <name pos:start="67:31" pos:end="67:46"><name pos:start="67:31" pos:end="67:38">read_fit</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:46">offset</name></name></expr></argument>,

                   <argument pos:start="69:20" pos:end="69:54"><expr pos:start="69:20" pos:end="69:54"><literal type="number" pos:start="69:20" pos:end="69:25">4096</literal> <operator pos:start="69:25" pos:end="69:25">-</operator> <sizeof pos:start="69:27" pos:end="69:54">sizeof<argument_list pos:start="69:33" pos:end="69:54">(<argument pos:start="69:34" pos:end="69:53"><expr pos:start="69:34" pos:end="69:53"><name pos:start="69:34" pos:end="69:53">NvdimmFuncReadFITOut</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="73:1" pos:end="73:5"><name pos:start="73:1" pos:end="73:4">exit</name>:</label>

    <expr_stmt pos:start="75:5" pos:end="75:51"><expr pos:start="75:5" pos:end="75:50"><name pos:start="75:5" pos:end="75:8">size</name> <operator pos:start="75:10" pos:end="75:10">=</operator> <sizeof pos:start="75:12" pos:end="75:39">sizeof<argument_list pos:start="75:18" pos:end="75:39">(<argument pos:start="75:19" pos:end="75:38"><expr pos:start="75:19" pos:end="75:38"><name pos:start="75:19" pos:end="75:38">NvdimmFuncReadFITOut</name></expr></argument>)</argument_list></sizeof> <operator pos:start="75:41" pos:end="75:41">+</operator> <name pos:start="75:43" pos:end="75:50">read_len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:34"><expr pos:start="77:5" pos:end="77:33"><name pos:start="77:5" pos:end="77:16">read_fit_out</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <call pos:start="77:20" pos:end="77:33"><name pos:start="77:20" pos:end="77:27">g_malloc</name><argument_list pos:start="77:28" pos:end="77:33">(<argument pos:start="77:29" pos:end="77:32"><expr pos:start="77:29" pos:end="77:32"><name pos:start="77:29" pos:end="77:32">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:42"><expr pos:start="81:5" pos:end="81:41"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:16">read_fit_out</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:21">len</name></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <call pos:start="81:25" pos:end="81:41"><name pos:start="81:25" pos:end="81:35">cpu_to_le32</name><argument_list pos:start="81:36" pos:end="81:41">(<argument pos:start="81:37" pos:end="81:40"><expr pos:start="81:37" pos:end="81:40"><name pos:start="81:37" pos:end="81:40">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:65"><expr pos:start="83:5" pos:end="83:64"><name pos:start="83:5" pos:end="83:33"><name pos:start="83:5" pos:end="83:16">read_fit_out</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:33">func_ret_status</name></name> <operator pos:start="83:35" pos:end="83:35">=</operator> <call pos:start="83:37" pos:end="83:64"><name pos:start="83:37" pos:end="83:47">cpu_to_le32</name><argument_list pos:start="83:48" pos:end="83:64">(<argument pos:start="83:49" pos:end="83:63"><expr pos:start="83:49" pos:end="83:63"><name pos:start="83:49" pos:end="83:63">func_ret_status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:70"><expr pos:start="85:5" pos:end="85:69"><call pos:start="85:5" pos:end="85:69"><name pos:start="85:5" pos:end="85:10">memcpy</name><argument_list pos:start="85:11" pos:end="85:69">(<argument pos:start="85:12" pos:end="85:28"><expr pos:start="85:12" pos:end="85:28"><name pos:start="85:12" pos:end="85:28"><name pos:start="85:12" pos:end="85:23">read_fit_out</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:28">fit</name></name></expr></argument>, <argument pos:start="85:31" pos:end="85:58"><expr pos:start="85:31" pos:end="85:58"><name pos:start="85:31" pos:end="85:39"><name pos:start="85:31" pos:end="85:33">fit</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:39">data</name></name> <operator pos:start="85:41" pos:end="85:41">+</operator> <name pos:start="85:43" pos:end="85:58"><name pos:start="85:43" pos:end="85:50">read_fit</name><operator pos:start="85:51" pos:end="85:52">-&gt;</operator><name pos:start="85:53" pos:end="85:58">offset</name></name></expr></argument>, <argument pos:start="85:61" pos:end="85:68"><expr pos:start="85:61" pos:end="85:68"><name pos:start="85:61" pos:end="85:68">read_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:64"><expr pos:start="89:5" pos:end="89:63"><call pos:start="89:5" pos:end="89:63"><name pos:start="89:5" pos:end="89:29">cpu_physical_memory_write</name><argument_list pos:start="89:30" pos:end="89:63">(<argument pos:start="89:31" pos:end="89:42"><expr pos:start="89:31" pos:end="89:42"><name pos:start="89:31" pos:end="89:42">dsm_mem_addr</name></expr></argument>, <argument pos:start="89:45" pos:end="89:56"><expr pos:start="89:45" pos:end="89:56"><name pos:start="89:45" pos:end="89:56">read_fit_out</name></expr></argument>, <argument pos:start="89:59" pos:end="89:62"><expr pos:start="89:59" pos:end="89:62"><name pos:start="89:59" pos:end="89:62">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:25"><expr pos:start="93:5" pos:end="93:24"><call pos:start="93:5" pos:end="93:24"><name pos:start="93:5" pos:end="93:10">g_free</name><argument_list pos:start="93:11" pos:end="93:24">(<argument pos:start="93:12" pos:end="93:23"><expr pos:start="93:12" pos:end="93:23"><name pos:start="93:12" pos:end="93:23">read_fit_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:38"><expr pos:start="95:5" pos:end="95:37"><call pos:start="95:5" pos:end="95:37"><name pos:start="95:5" pos:end="95:21">qemu_mutex_unlock</name><argument_list pos:start="95:22" pos:end="95:37">(<argument pos:start="95:23" pos:end="95:36"><expr pos:start="95:23" pos:end="95:36"><operator pos:start="95:23" pos:end="95:23">&amp;</operator><name pos:start="95:24" pos:end="95:36"><name pos:start="95:24" pos:end="95:30">fit_buf</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:36">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
