<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/115.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:39">scsi_target_emulate_inquiry</name><parameter_list pos:start="1:40" pos:end="1:57">(<parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:53">SCSITargetReq</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">r</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:16">

    <expr_stmt pos:start="5:5" pos:end="5:42"><expr pos:start="5:5" pos:end="5:41"><call pos:start="5:5" pos:end="5:41"><name pos:start="5:5" pos:end="5:10">assert</name><argument_list pos:start="5:11" pos:end="5:41">(<argument pos:start="5:12" pos:end="5:40"><expr pos:start="5:12" pos:end="5:40"><name pos:start="5:12" pos:end="5:26"><name pos:start="5:12" pos:end="5:12">r</name><operator pos:start="5:13" pos:end="5:14">-&gt;</operator><name pos:start="5:15" pos:end="5:17">req</name><operator pos:start="5:18" pos:end="5:18">.</operator><name pos:start="5:19" pos:end="5:21">dev</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:26">lun</name></name> <operator pos:start="5:28" pos:end="5:29">!=</operator> <name pos:start="5:31" pos:end="5:40"><name pos:start="5:31" pos:end="5:31">r</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:36">req</name><operator pos:start="5:37" pos:end="5:37">.</operator><name pos:start="5:38" pos:end="5:40">lun</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:53"><expr pos:start="9:5" pos:end="9:52"><call pos:start="9:5" pos:end="9:52"><name pos:start="9:5" pos:end="9:25">scsi_target_alloc_buf</name><argument_list pos:start="9:26" pos:end="9:52">(<argument pos:start="9:27" pos:end="9:33"><expr pos:start="9:27" pos:end="9:33"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:33"><name pos:start="9:28" pos:end="9:28">r</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:33">req</name></name></expr></argument>, <argument pos:start="9:36" pos:end="9:51"><expr pos:start="9:36" pos:end="9:51"><name pos:start="9:36" pos:end="9:51">SCSI_INQUIRY_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:32">(<expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:9">r</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:14">req</name><operator pos:start="13:15" pos:end="13:15">.</operator><name pos:start="13:16" pos:end="13:18">cmd</name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:22">buf</name><index pos:start="13:23" pos:end="13:25">[<expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">1</literal></expr>]</index></name> <operator pos:start="13:27" pos:end="13:27">&amp;</operator> <literal type="number" pos:start="13:29" pos:end="13:31">0x2</literal></expr>)</condition> <block pos:start="13:34" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:21">

        <comment type="block" pos:start="15:9" pos:end="15:62">/* Command support data - optional, not implemented */</comment>

        <return pos:start="17:9" pos:end="17:21">return <expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="67:5"><if pos:start="23:5" pos:end="67:5">if <condition pos:start="23:8" pos:end="23:32">(<expr pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:9">r</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:14">req</name><operator pos:start="23:15" pos:end="23:15">.</operator><name pos:start="23:16" pos:end="23:18">cmd</name><operator pos:start="23:19" pos:end="23:19">.</operator><name pos:start="23:20" pos:end="23:22">buf</name><index pos:start="23:23" pos:end="23:25">[<expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">1</literal></expr>]</index></name> <operator pos:start="23:27" pos:end="23:27">&amp;</operator> <literal type="number" pos:start="23:29" pos:end="23:31">0x1</literal></expr>)</condition> <block pos:start="23:34" pos:end="67:5">{<block_content pos:start="27:9" pos:end="65:20">

        <comment type="block" pos:start="25:9" pos:end="25:32">/* Vital product data */</comment>

        <decl_stmt pos:start="27:9" pos:end="27:46"><decl pos:start="27:9" pos:end="27:45"><type pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15">uint8_t</name></type> <name pos:start="27:17" pos:end="27:25">page_code</name> <init pos:start="27:27" pos:end="27:45">= <expr pos:start="27:29" pos:end="27:45"><name pos:start="27:29" pos:end="27:45"><name pos:start="27:29" pos:end="27:29">r</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:34">req</name><operator pos:start="27:35" pos:end="27:35">.</operator><name pos:start="27:36" pos:end="27:38">cmd</name><operator pos:start="27:39" pos:end="27:39">.</operator><name pos:start="27:40" pos:end="27:42">buf</name><index pos:start="27:43" pos:end="27:45">[<expr pos:start="27:44" pos:end="27:44"><literal type="number" pos:start="27:44" pos:end="27:44">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:9">r</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:14">buf</name><index pos:start="29:15" pos:end="29:24">[<expr pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:21"><name pos:start="29:16" pos:end="29:16">r</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:21">len</name></name><operator pos:start="29:22" pos:end="29:23">++</operator></expr>]</index></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <name pos:start="29:28" pos:end="29:36">page_code</name></expr> ;</expr_stmt> <comment type="block" pos:start="29:40" pos:end="29:54">/* this page */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:9">r</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:14">buf</name><index pos:start="31:15" pos:end="31:24">[<expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:21"><name pos:start="31:16" pos:end="31:16">r</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:21">len</name></name><operator pos:start="31:22" pos:end="31:23">++</operator></expr>]</index></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <literal type="number" pos:start="31:28" pos:end="31:31">0x00</literal></expr>;</expr_stmt>



        <switch pos:start="35:9" pos:end="57:9">switch <condition pos:start="35:16" pos:end="35:26">(<expr pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:25">page_code</name></expr>)</condition> <block pos:start="35:28" pos:end="57:9">{<block_content pos:start="37:9" pos:end="55:25">

        <case pos:start="37:9" pos:end="37:18">case <expr pos:start="37:14" pos:end="37:17"><literal type="number" pos:start="37:14" pos:end="37:17">0x00</literal></expr>:</case> <comment type="block" pos:start="37:20" pos:end="37:56">/* Supported page codes, mandatory */</comment>

        <block pos:start="39:9" pos:end="51:9">{<block_content pos:start="41:13" pos:end="49:18">

            <decl_stmt pos:start="41:13" pos:end="41:22"><decl pos:start="41:13" pos:end="41:21"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:21">pages</name></decl>;</decl_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:17">pages</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:26"><name pos:start="43:21" pos:end="43:21">r</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:26">len</name></name><operator pos:start="43:27" pos:end="43:28">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:36"><expr pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:13">r</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:18">buf</name><index pos:start="45:19" pos:end="45:28">[<expr pos:start="45:20" pos:end="45:27"><name pos:start="45:20" pos:end="45:25"><name pos:start="45:20" pos:end="45:20">r</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:25">len</name></name><operator pos:start="45:26" pos:end="45:27">++</operator></expr>]</index></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <literal type="number" pos:start="45:32" pos:end="45:35">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="45:38" pos:end="45:78">/* list of supported pages (this page) */</comment>

            <expr_stmt pos:start="47:13" pos:end="47:47"><expr pos:start="47:13" pos:end="47:46"><name pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:13">r</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:18">buf</name><index pos:start="47:19" pos:end="47:25">[<expr pos:start="47:20" pos:end="47:24"><name pos:start="47:20" pos:end="47:24">pages</name></expr>]</index></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:34"><name pos:start="47:29" pos:end="47:29">r</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:34">len</name></name> <operator pos:start="47:36" pos:end="47:36">-</operator> <name pos:start="47:38" pos:end="47:42">pages</name> <operator pos:start="47:44" pos:end="47:44">-</operator> <literal type="number" pos:start="47:46" pos:end="47:46">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="47:49" pos:end="47:69">/* number of pages */</comment>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        </block_content>}</block>

        <default pos:start="53:9" pos:end="53:16">default:</default>

            <return pos:start="55:13" pos:end="55:25">return <expr pos:start="55:20" pos:end="55:24"><name pos:start="55:20" pos:end="55:24">false</name></expr>;</return>

        </block_content>}</block></switch>

        <comment type="block" pos:start="59:9" pos:end="59:28">/* done with EVPD */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:35"><call pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:14">assert</name><argument_list pos:start="61:15" pos:end="61:35">(<argument pos:start="61:16" pos:end="61:34"><expr pos:start="61:16" pos:end="61:34"><name pos:start="61:16" pos:end="61:21"><name pos:start="61:16" pos:end="61:16">r</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:21">len</name></name> <operator pos:start="61:23" pos:end="61:23">&lt;</operator> <name pos:start="61:25" pos:end="61:34"><name pos:start="61:25" pos:end="61:25">r</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:34">buf_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:46"><expr pos:start="63:9" pos:end="63:45"><name pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:9">r</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:14">len</name></name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:45"><name pos:start="63:18" pos:end="63:20">MIN</name><argument_list pos:start="63:21" pos:end="63:45">(<argument pos:start="63:22" pos:end="63:36"><expr pos:start="63:22" pos:end="63:36"><name pos:start="63:22" pos:end="63:36"><name pos:start="63:22" pos:end="63:22">r</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:27">req</name><operator pos:start="63:28" pos:end="63:28">.</operator><name pos:start="63:29" pos:end="63:31">cmd</name><operator pos:start="63:32" pos:end="63:32">.</operator><name pos:start="63:33" pos:end="63:36">xfer</name></name></expr></argument>, <argument pos:start="63:39" pos:end="63:44"><expr pos:start="63:39" pos:end="63:44"><name pos:start="63:39" pos:end="63:44"><name pos:start="63:39" pos:end="63:39">r</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:44">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:20">return <expr pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:19">true</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:31">/* Standard INQUIRY data */</comment>

    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:31">(<expr pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:9">r</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:14">req</name><operator pos:start="73:15" pos:end="73:15">.</operator><name pos:start="73:16" pos:end="73:18">cmd</name><operator pos:start="73:19" pos:end="73:19">.</operator><name pos:start="73:20" pos:end="73:22">buf</name><index pos:start="73:23" pos:end="73:25">[<expr pos:start="73:24" pos:end="73:24"><literal type="number" pos:start="73:24" pos:end="73:24">2</literal></expr>]</index></name> <operator pos:start="73:27" pos:end="73:28">!=</operator> <literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr>)</condition> <block pos:start="73:33" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:21">

        <return pos:start="75:9" pos:end="75:21">return <expr pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:24">/* PAGE CODE == 0 */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:52"><expr pos:start="83:5" pos:end="83:51"><name pos:start="83:5" pos:end="83:10"><name pos:start="83:5" pos:end="83:5">r</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:10">len</name></name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:51"><name pos:start="83:14" pos:end="83:16">MIN</name><argument_list pos:start="83:17" pos:end="83:51">(<argument pos:start="83:18" pos:end="83:32"><expr pos:start="83:18" pos:end="83:32"><name pos:start="83:18" pos:end="83:32"><name pos:start="83:18" pos:end="83:18">r</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:23">req</name><operator pos:start="83:24" pos:end="83:24">.</operator><name pos:start="83:25" pos:end="83:27">cmd</name><operator pos:start="83:28" pos:end="83:28">.</operator><name pos:start="83:29" pos:end="83:32">xfer</name></name></expr></argument>, <argument pos:start="83:35" pos:end="83:50"><expr pos:start="83:35" pos:end="83:50"><name pos:start="83:35" pos:end="83:50">SCSI_INQUIRY_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:30"><expr pos:start="85:5" pos:end="85:29"><call pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:10">memset</name><argument_list pos:start="85:11" pos:end="85:29">(<argument pos:start="85:12" pos:end="85:17"><expr pos:start="85:12" pos:end="85:17"><name pos:start="85:12" pos:end="85:17"><name pos:start="85:12" pos:end="85:12">r</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:17">buf</name></name></expr></argument>, <argument pos:start="85:20" pos:end="85:20"><expr pos:start="85:20" pos:end="85:20"><literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr></argument>, <argument pos:start="85:23" pos:end="85:28"><expr pos:start="85:23" pos:end="85:28"><name pos:start="85:23" pos:end="85:28"><name pos:start="85:23" pos:end="85:23">r</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:28">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="109:5"><if pos:start="87:5" pos:end="91:5">if <condition pos:start="87:8" pos:end="87:24">(<expr pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:9">r</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:14">req</name><operator pos:start="87:15" pos:end="87:15">.</operator><name pos:start="87:16" pos:end="87:18">lun</name></name> <operator pos:start="87:20" pos:end="87:21">!=</operator> <literal type="number" pos:start="87:23" pos:end="87:23">0</literal></expr>)</condition> <block pos:start="87:26" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:32">

        <expr_stmt pos:start="89:9" pos:end="89:32"><expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:9">r</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:14">buf</name><index pos:start="89:15" pos:end="89:17">[<expr pos:start="89:16" pos:end="89:16"><literal type="number" pos:start="89:16" pos:end="89:16">0</literal></expr>]</index></name> <operator pos:start="89:19" pos:end="89:19">=</operator> <name pos:start="89:21" pos:end="89:31">TYPE_NO_LUN</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="109:5">else <block pos:start="91:12" pos:end="109:5">{<block_content pos:start="93:9" pos:end="107:61">

        <expr_stmt pos:start="93:9" pos:end="93:53"><expr pos:start="93:9" pos:end="93:52"><name pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:9">r</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:14">buf</name><index pos:start="93:15" pos:end="93:17">[<expr pos:start="93:16" pos:end="93:16"><literal type="number" pos:start="93:16" pos:end="93:16">0</literal></expr>]</index></name> <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:36">TYPE_NOT_PRESENT</name> <operator pos:start="93:38" pos:end="93:38">|</operator> <name pos:start="93:40" pos:end="93:52">TYPE_INACTIVE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:22"><expr pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:17"><name pos:start="95:9" pos:end="95:9">r</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:14">buf</name><index pos:start="95:15" pos:end="95:17">[<expr pos:start="95:16" pos:end="95:16"><literal type="number" pos:start="95:16" pos:end="95:16">2</literal></expr>]</index></name> <operator pos:start="95:19" pos:end="95:19">=</operator> <literal type="number" pos:start="95:21" pos:end="95:21">5</literal></expr>;</expr_stmt> <comment type="block" pos:start="95:24" pos:end="95:36">/* Version */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:29"><expr pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:9">r</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:14">buf</name><index pos:start="97:15" pos:end="97:17">[<expr pos:start="97:16" pos:end="97:16"><literal type="number" pos:start="97:16" pos:end="97:16">3</literal></expr>]</index></name> <operator pos:start="97:19" pos:end="97:19">=</operator> <literal type="number" pos:start="97:21" pos:end="97:21">2</literal> <operator pos:start="97:23" pos:end="97:23">|</operator> <literal type="number" pos:start="97:25" pos:end="97:28">0x10</literal></expr>;</expr_stmt> <comment type="block" pos:start="97:31" pos:end="97:63">/* HiSup, response data format */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:31"><expr pos:start="99:9" pos:end="99:30"><name pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:9">r</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:14">buf</name><index pos:start="99:15" pos:end="99:17">[<expr pos:start="99:16" pos:end="99:16"><literal type="number" pos:start="99:16" pos:end="99:16">4</literal></expr>]</index></name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:26"><name pos:start="99:21" pos:end="99:21">r</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:26">len</name></name> <operator pos:start="99:28" pos:end="99:28">-</operator> <literal type="number" pos:start="99:30" pos:end="99:30">5</literal></expr>;</expr_stmt> <comment type="block" pos:start="99:33" pos:end="99:71">/* Additional Length = (Len - 1) - 4 */</comment>

        <expr_stmt pos:start="101:9" pos:end="101:62"><expr pos:start="101:9" pos:end="101:61"><name pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:9">r</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:14">buf</name><index pos:start="101:15" pos:end="101:17">[<expr pos:start="101:16" pos:end="101:16"><literal type="number" pos:start="101:16" pos:end="101:16">7</literal></expr>]</index></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <literal type="number" pos:start="101:21" pos:end="101:24">0x10</literal> <operator pos:start="101:26" pos:end="101:26">|</operator> <operator pos:start="101:28" pos:end="101:28">(</operator><ternary pos:start="101:29" pos:end="101:60"><condition pos:start="101:29" pos:end="101:51"><expr pos:start="101:29" pos:end="101:49"><name pos:start="101:29" pos:end="101:49"><name pos:start="101:29" pos:end="101:29">r</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:34">req</name><operator pos:start="101:35" pos:end="101:35">.</operator><name pos:start="101:36" pos:end="101:38">bus</name><operator pos:start="101:39" pos:end="101:40">-&gt;</operator><name pos:start="101:41" pos:end="101:44">info</name><operator pos:start="101:45" pos:end="101:46">-&gt;</operator><name pos:start="101:47" pos:end="101:49">tcq</name></name></expr> ?</condition><then pos:start="101:53" pos:end="101:56"> <expr pos:start="101:53" pos:end="101:56"><literal type="number" pos:start="101:53" pos:end="101:56">0x02</literal></expr> </then><else pos:start="101:58" pos:end="101:60">: <expr pos:start="101:60" pos:end="101:60"><literal type="number" pos:start="101:60" pos:end="101:60">0</literal></expr></else></ternary><operator pos:start="101:61" pos:end="101:61">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="101:64" pos:end="101:80">/* Sync, TCQ.  */</comment>

        <expr_stmt pos:start="103:9" pos:end="103:42"><expr pos:start="103:9" pos:end="103:41"><call pos:start="103:9" pos:end="103:41"><name pos:start="103:9" pos:end="103:14">memcpy</name><argument_list pos:start="103:15" pos:end="103:41">(<argument pos:start="103:16" pos:end="103:25"><expr pos:start="103:16" pos:end="103:25"><operator pos:start="103:16" pos:end="103:16">&amp;</operator><name pos:start="103:17" pos:end="103:25"><name pos:start="103:17" pos:end="103:17">r</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:22">buf</name><index pos:start="103:23" pos:end="103:25">[<expr pos:start="103:24" pos:end="103:24"><literal type="number" pos:start="103:24" pos:end="103:24">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="103:28" pos:end="103:37"><expr pos:start="103:28" pos:end="103:37"><literal type="string" pos:start="103:28" pos:end="103:37">"QEMU    "</literal></expr></argument>, <argument pos:start="103:40" pos:end="103:40"><expr pos:start="103:40" pos:end="103:40"><literal type="number" pos:start="103:40" pos:end="103:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:52"><expr pos:start="105:9" pos:end="105:51"><call pos:start="105:9" pos:end="105:51"><name pos:start="105:9" pos:end="105:14">memcpy</name><argument_list pos:start="105:15" pos:end="105:51">(<argument pos:start="105:16" pos:end="105:26"><expr pos:start="105:16" pos:end="105:26"><operator pos:start="105:16" pos:end="105:16">&amp;</operator><name pos:start="105:17" pos:end="105:26"><name pos:start="105:17" pos:end="105:17">r</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:22">buf</name><index pos:start="105:23" pos:end="105:26">[<expr pos:start="105:24" pos:end="105:25"><literal type="number" pos:start="105:24" pos:end="105:25">16</literal></expr>]</index></name></expr></argument>, <argument pos:start="105:29" pos:end="105:46"><expr pos:start="105:29" pos:end="105:46"><literal type="string" pos:start="105:29" pos:end="105:46">"QEMU TARGET     "</literal></expr></argument>, <argument pos:start="105:49" pos:end="105:50"><expr pos:start="105:49" pos:end="105:50"><literal type="number" pos:start="105:49" pos:end="105:50">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:61"><expr pos:start="107:9" pos:end="107:60"><call pos:start="107:9" pos:end="107:60"><name pos:start="107:9" pos:end="107:15">pstrcpy</name><argument_list pos:start="107:16" pos:end="107:60">(<argument pos:start="107:17" pos:end="107:36"><expr pos:start="107:17" pos:end="107:36"><operator pos:start="107:17" pos:end="107:17">(</operator><name pos:start="107:18" pos:end="107:21">char</name> <operator pos:start="107:23" pos:end="107:23">*</operator><operator pos:start="107:24" pos:end="107:24">)</operator> <operator pos:start="107:26" pos:end="107:26">&amp;</operator><name pos:start="107:27" pos:end="107:36"><name pos:start="107:27" pos:end="107:27">r</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:32">buf</name><index pos:start="107:33" pos:end="107:36">[<expr pos:start="107:34" pos:end="107:35"><literal type="number" pos:start="107:34" pos:end="107:35">32</literal></expr>]</index></name></expr></argument>, <argument pos:start="107:39" pos:end="107:39"><expr pos:start="107:39" pos:end="107:39"><literal type="number" pos:start="107:39" pos:end="107:39">4</literal></expr></argument>, <argument pos:start="107:42" pos:end="107:59"><expr pos:start="107:42" pos:end="107:59"><call pos:start="107:42" pos:end="107:59"><name pos:start="107:42" pos:end="107:57">qemu_get_version</name><argument_list pos:start="107:58" pos:end="107:59">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="111:5" pos:end="111:16">return <expr pos:start="111:12" pos:end="111:15"><name pos:start="111:12" pos:end="111:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
