<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3881.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:24">coroutine_fn</name></type> <name pos:start="1:26" pos:end="1:46">verify_entered_step_2</name><parameter_list pos:start="1:47" pos:end="1:60">(<parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:53"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:59">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:27">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">Coroutine</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:21">caller</name> <init pos:start="5:23" pos:end="5:43">= <expr pos:start="5:25" pos:end="5:43"><operator pos:start="5:25" pos:end="5:25">(</operator><name pos:start="5:26" pos:end="5:34">Coroutine</name> <operator pos:start="5:36" pos:end="5:36">*</operator><operator pos:start="5:37" pos:end="5:37">)</operator><name pos:start="5:38" pos:end="5:43">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:45"><expr pos:start="9:5" pos:end="9:44"><call pos:start="9:5" pos:end="9:44"><name pos:start="9:5" pos:end="9:12">g_assert</name><argument_list pos:start="9:13" pos:end="9:44">(<argument pos:start="9:14" pos:end="9:43"><expr pos:start="9:14" pos:end="9:43"><call pos:start="9:14" pos:end="9:43"><name pos:start="9:14" pos:end="9:35">qemu_coroutine_entered</name><argument_list pos:start="9:36" pos:end="9:43">(<argument pos:start="9:37" pos:end="9:42"><expr pos:start="9:37" pos:end="9:42"><name pos:start="9:37" pos:end="9:42">caller</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:60"><expr pos:start="11:5" pos:end="11:59"><call pos:start="11:5" pos:end="11:59"><name pos:start="11:5" pos:end="11:12">g_assert</name><argument_list pos:start="11:13" pos:end="11:59">(<argument pos:start="11:14" pos:end="11:58"><expr pos:start="11:14" pos:end="11:58"><call pos:start="11:14" pos:end="11:58"><name pos:start="11:14" pos:end="11:35">qemu_coroutine_entered</name><argument_list pos:start="11:36" pos:end="11:58">(<argument pos:start="11:37" pos:end="11:57"><expr pos:start="11:37" pos:end="11:57"><call pos:start="11:37" pos:end="11:57"><name pos:start="11:37" pos:end="11:55">qemu_coroutine_self</name><argument_list pos:start="11:56" pos:end="11:57">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><call pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:24">qemu_coroutine_yield</name><argument_list pos:start="13:25" pos:end="13:26">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:58">/* Once more to check it still works after yielding */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><call pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:12">g_assert</name><argument_list pos:start="19:13" pos:end="19:44">(<argument pos:start="19:14" pos:end="19:43"><expr pos:start="19:14" pos:end="19:43"><call pos:start="19:14" pos:end="19:43"><name pos:start="19:14" pos:end="19:35">qemu_coroutine_entered</name><argument_list pos:start="19:36" pos:end="19:43">(<argument pos:start="19:37" pos:end="19:42"><expr pos:start="19:37" pos:end="19:42"><name pos:start="19:37" pos:end="19:42">caller</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:59"><call pos:start="21:5" pos:end="21:59"><name pos:start="21:5" pos:end="21:12">g_assert</name><argument_list pos:start="21:13" pos:end="21:59">(<argument pos:start="21:14" pos:end="21:58"><expr pos:start="21:14" pos:end="21:58"><call pos:start="21:14" pos:end="21:58"><name pos:start="21:14" pos:end="21:35">qemu_coroutine_entered</name><argument_list pos:start="21:36" pos:end="21:58">(<argument pos:start="21:37" pos:end="21:57"><expr pos:start="21:37" pos:end="21:57"><call pos:start="21:37" pos:end="21:57"><name pos:start="21:37" pos:end="21:55">qemu_coroutine_self</name><argument_list pos:start="21:56" pos:end="21:57">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><call pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:24">qemu_coroutine_yield</name><argument_list pos:start="23:25" pos:end="23:26">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
