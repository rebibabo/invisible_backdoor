<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11175.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">thread_pool_free</name><parameter_list pos:start="1:22" pos:end="1:39">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:34"><name pos:start="1:23" pos:end="1:32">ThreadPool</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">pool</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:17">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:14">(<expr pos:start="5:9" pos:end="5:13"><operator pos:start="5:9" pos:end="5:9">!</operator><name pos:start="5:10" pos:end="5:13">pool</name></expr>)</condition> <block pos:start="5:16" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:15">

        <return pos:start="7:9" pos:end="7:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><call pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:36">(<argument pos:start="13:12" pos:end="13:35"><expr pos:start="13:12" pos:end="13:35"><call pos:start="13:12" pos:end="13:35"><name pos:start="13:12" pos:end="13:22">QLIST_EMPTY</name><argument_list pos:start="13:23" pos:end="13:35">(<argument pos:start="13:24" pos:end="13:34"><expr pos:start="13:24" pos:end="13:34"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:34"><name pos:start="13:25" pos:end="13:28">pool</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:34">head</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><call pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:19">qemu_mutex_lock</name><argument_list pos:start="17:20" pos:end="17:32">(<argument pos:start="17:21" pos:end="17:31"><expr pos:start="17:21" pos:end="17:31"><operator pos:start="17:21" pos:end="17:21">&amp;</operator><name pos:start="17:22" pos:end="17:31"><name pos:start="17:22" pos:end="17:25">pool</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:40">/* Stop new threads from spawning */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><call pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:18">qemu_bh_delete</name><argument_list pos:start="23:19" pos:end="23:39">(<argument pos:start="23:20" pos:end="23:38"><expr pos:start="23:20" pos:end="23:38"><name pos:start="23:20" pos:end="23:38"><name pos:start="23:20" pos:end="23:23">pool</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:38">new_thread_bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:8">pool</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:21">cur_threads</name></name> <operator pos:start="25:23" pos:end="25:24">-=</operator> <name pos:start="25:26" pos:end="25:42"><name pos:start="25:26" pos:end="25:29">pool</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:42">new_threads</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:8">pool</name><operator pos:start="27:9" pos:end="27:10">-&gt;</operator><name pos:start="27:11" pos:end="27:21">new_threads</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:46">/* Wait for worker threads to terminate */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:8">pool</name><operator pos:start="33:9" pos:end="33:10">-&gt;</operator><name pos:start="33:11" pos:end="33:18">stopping</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:25">true</name></expr>;</expr_stmt>

    <while pos:start="35:5" pos:end="41:5">while <condition pos:start="35:11" pos:end="35:33">(<expr pos:start="35:12" pos:end="35:32"><name pos:start="35:12" pos:end="35:28"><name pos:start="35:12" pos:end="35:15">pool</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:28">cur_threads</name></name> <operator pos:start="35:30" pos:end="35:30">&gt;</operator> <literal type="number" pos:start="35:32" pos:end="35:32">0</literal></expr>)</condition> <block pos:start="35:35" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:59">

        <expr_stmt pos:start="37:9" pos:end="37:34"><expr pos:start="37:9" pos:end="37:33"><call pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:21">qemu_sem_post</name><argument_list pos:start="37:22" pos:end="37:33">(<argument pos:start="37:23" pos:end="37:32"><expr pos:start="37:23" pos:end="37:32"><operator pos:start="37:23" pos:end="37:23">&amp;</operator><name pos:start="37:24" pos:end="37:32"><name pos:start="37:24" pos:end="37:27">pool</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:32">sem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:59"><expr pos:start="39:9" pos:end="39:58"><call pos:start="39:9" pos:end="39:58"><name pos:start="39:9" pos:end="39:22">qemu_cond_wait</name><argument_list pos:start="39:23" pos:end="39:58">(<argument pos:start="39:24" pos:end="39:44"><expr pos:start="39:24" pos:end="39:44"><operator pos:start="39:24" pos:end="39:24">&amp;</operator><name pos:start="39:25" pos:end="39:44"><name pos:start="39:25" pos:end="39:28">pool</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:44">worker_stopped</name></name></expr></argument>, <argument pos:start="39:47" pos:end="39:57"><expr pos:start="39:47" pos:end="39:57"><operator pos:start="39:47" pos:end="39:47">&amp;</operator><name pos:start="39:48" pos:end="39:57"><name pos:start="39:48" pos:end="39:51">pool</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:57">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><call pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:21">qemu_mutex_unlock</name><argument_list pos:start="45:22" pos:end="45:34">(<argument pos:start="45:23" pos:end="45:33"><expr pos:start="45:23" pos:end="45:33"><operator pos:start="45:23" pos:end="45:23">&amp;</operator><name pos:start="45:24" pos:end="45:33"><name pos:start="45:24" pos:end="45:27">pool</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:40"><expr pos:start="49:5" pos:end="49:39"><call pos:start="49:5" pos:end="49:39"><name pos:start="49:5" pos:end="49:18">qemu_bh_delete</name><argument_list pos:start="49:19" pos:end="49:39">(<argument pos:start="49:20" pos:end="49:38"><expr pos:start="49:20" pos:end="49:38"><name pos:start="49:20" pos:end="49:38"><name pos:start="49:20" pos:end="49:23">pool</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:38">completion_bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><call pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:20">qemu_sem_destroy</name><argument_list pos:start="51:21" pos:end="51:32">(<argument pos:start="51:22" pos:end="51:31"><expr pos:start="51:22" pos:end="51:31"><operator pos:start="51:22" pos:end="51:22">&amp;</operator><name pos:start="51:23" pos:end="51:31"><name pos:start="51:23" pos:end="51:26">pool</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:31">sem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><call pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:21">qemu_cond_destroy</name><argument_list pos:start="53:22" pos:end="53:44">(<argument pos:start="53:23" pos:end="53:43"><expr pos:start="53:23" pos:end="53:43"><operator pos:start="53:23" pos:end="53:23">&amp;</operator><name pos:start="53:24" pos:end="53:43"><name pos:start="53:24" pos:end="53:27">pool</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:43">worker_stopped</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:36"><expr pos:start="55:5" pos:end="55:35"><call pos:start="55:5" pos:end="55:35"><name pos:start="55:5" pos:end="55:22">qemu_mutex_destroy</name><argument_list pos:start="55:23" pos:end="55:35">(<argument pos:start="55:24" pos:end="55:34"><expr pos:start="55:24" pos:end="55:34"><operator pos:start="55:24" pos:end="55:24">&amp;</operator><name pos:start="55:25" pos:end="55:34"><name pos:start="55:25" pos:end="55:28">pool</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:34">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:17"><expr pos:start="57:5" pos:end="57:16"><call pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:10">g_free</name><argument_list pos:start="57:11" pos:end="57:16">(<argument pos:start="57:12" pos:end="57:15"><expr pos:start="57:12" pos:end="57:15"><name pos:start="57:12" pos:end="57:15">pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
