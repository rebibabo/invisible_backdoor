<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23532.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">irq_handler</name><parameter_list pos:start="1:24" pos:end="1:57">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:45"><decl pos:start="1:39" pos:end="1:45"><type pos:start="1:39" pos:end="1:45"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:45">irq</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:56"><decl pos:start="1:48" pos:end="1:56"><type pos:start="1:48" pos:end="1:56"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:56">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:18">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:18">xlx_pic</name></name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">p</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><operator pos:start="9:9" pos:end="9:9">!</operator><operator pos:start="9:10" pos:end="9:10">(</operator><name pos:start="9:11" pos:end="9:24"><name pos:start="9:11" pos:end="9:11">p</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:17">regs</name><index pos:start="9:18" pos:end="9:24">[<expr pos:start="9:19" pos:end="9:23"><name pos:start="9:19" pos:end="9:23">R_MER</name></expr>]</index></name> <operator pos:start="9:26" pos:end="9:26">&amp;</operator> <literal type="number" pos:start="9:28" pos:end="9:28">2</literal><operator pos:start="9:29" pos:end="9:29">)</operator></expr>)</condition> <block pos:start="9:32" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:15">

        <expr_stmt pos:start="11:9" pos:end="11:38"><expr pos:start="11:9" pos:end="11:37"><call pos:start="11:9" pos:end="11:37"><name pos:start="11:9" pos:end="11:22">qemu_irq_lower</name><argument_list pos:start="11:23" pos:end="11:37">(<argument pos:start="11:24" pos:end="11:36"><expr pos:start="11:24" pos:end="11:36"><name pos:start="11:24" pos:end="11:36"><name pos:start="11:24" pos:end="11:24">p</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:36">parent_irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:34">/* edge triggered interrupt */</comment>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:61">(<expr pos:start="21:9" pos:end="21:60"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:9">p</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:25">c_kind_of_intr</name></name> <operator pos:start="21:27" pos:end="21:27">&amp;</operator> <operator pos:start="21:29" pos:end="21:29">(</operator><literal type="number" pos:start="21:30" pos:end="21:30">1</literal> <operator pos:start="21:32" pos:end="21:33">&lt;&lt;</operator> <name pos:start="21:35" pos:end="21:37">irq</name><operator pos:start="21:38" pos:end="21:38">)</operator> <operator pos:start="21:40" pos:end="21:41">&amp;&amp;</operator> <name pos:start="21:43" pos:end="21:56"><name pos:start="21:43" pos:end="21:43">p</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:49">regs</name><index pos:start="21:50" pos:end="21:56">[<expr pos:start="21:51" pos:end="21:55"><name pos:start="21:51" pos:end="21:55">R_MER</name></expr>]</index></name> <operator pos:start="21:58" pos:end="21:58">&amp;</operator> <literal type="number" pos:start="21:60" pos:end="21:60">2</literal></expr>)</condition> <block pos:start="21:63" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:41">

        <expr_stmt pos:start="23:9" pos:end="23:41"><expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:9">p</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">regs</name><index pos:start="23:16" pos:end="23:22">[<expr pos:start="23:17" pos:end="23:21"><name pos:start="23:17" pos:end="23:21">R_ISR</name></expr>]</index></name> <operator pos:start="23:24" pos:end="23:25">|=</operator> <operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:32">level</name> <operator pos:start="23:34" pos:end="23:35">&lt;&lt;</operator> <name pos:start="23:37" pos:end="23:39">irq</name><operator pos:start="23:40" pos:end="23:40">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:5">p</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:20">irq_pin_state</name></name> <operator pos:start="29:22" pos:end="29:23">&amp;=</operator> <operator pos:start="29:25" pos:end="29:25">~</operator><operator pos:start="29:26" pos:end="29:26">(</operator><literal type="number" pos:start="29:27" pos:end="29:27">1</literal> <operator pos:start="29:29" pos:end="29:30">&lt;&lt;</operator> <name pos:start="29:32" pos:end="29:34">irq</name><operator pos:start="29:35" pos:end="29:35">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:5">p</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:20">irq_pin_state</name></name> <operator pos:start="31:22" pos:end="31:23">|=</operator> <name pos:start="31:25" pos:end="31:29">level</name> <operator pos:start="31:31" pos:end="31:32">&lt;&lt;</operator> <name pos:start="31:34" pos:end="31:36">irq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><call pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:14">update_irq</name><argument_list pos:start="33:15" pos:end="33:17">(<argument pos:start="33:16" pos:end="33:16"><expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
