<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19025.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:32">qemu_rdma_data_init</name><parameter_list pos:start="1:33" pos:end="1:69">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:43">char</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:54">host_port</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:61">Error</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier><modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:16">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">RDMAContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">rdma</name> <init pos:start="5:23" pos:end="5:28">= <expr pos:start="5:25" pos:end="5:28"><name pos:start="5:25" pos:end="5:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">InetSocketAddress</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:27">addr</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="45:5"><if pos:start="11:5" pos:end="45:5">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:17">host_port</name></expr>)</condition> <block pos:start="11:20" pos:end="45:5">{<block_content pos:start="13:9" pos:end="43:42">

        <expr_stmt pos:start="13:9" pos:end="13:46"><expr pos:start="13:9" pos:end="13:45"><name pos:start="13:9" pos:end="13:12">rdma</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="13:45"><name pos:start="13:16" pos:end="13:24">g_malloc0</name><argument_list pos:start="13:25" pos:end="13:45">(<argument pos:start="13:26" pos:end="13:44"><expr pos:start="13:26" pos:end="13:44"><sizeof pos:start="13:26" pos:end="13:44">sizeof<argument_list pos:start="13:32" pos:end="13:44">(<argument pos:start="13:33" pos:end="13:43"><expr pos:start="13:33" pos:end="13:43"><name pos:start="13:33" pos:end="13:43">RDMAContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:45"><expr pos:start="15:9" pos:end="15:44"><call pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:14">memset</name><argument_list pos:start="15:15" pos:end="15:44">(<argument pos:start="15:16" pos:end="15:19"><expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">rdma</name></expr></argument>, <argument pos:start="15:22" pos:end="15:22"><expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr></argument>, <argument pos:start="15:25" pos:end="15:43"><expr pos:start="15:25" pos:end="15:43"><sizeof pos:start="15:25" pos:end="15:43">sizeof<argument_list pos:start="15:31" pos:end="15:43">(<argument pos:start="15:32" pos:end="15:42"><expr pos:start="15:32" pos:end="15:42"><name pos:start="15:32" pos:end="15:42">RDMAContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:33"><expr pos:start="17:9" pos:end="17:32"><name pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:12">rdma</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:27">current_index</name></name> <operator pos:start="17:29" pos:end="17:29">=</operator> <operator pos:start="17:31" pos:end="17:31">-</operator><literal type="number" pos:start="17:32" pos:end="17:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:33"><expr pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:12">rdma</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:27">current_chunk</name></name> <operator pos:start="19:29" pos:end="19:29">=</operator> <operator pos:start="19:31" pos:end="19:31">-</operator><literal type="number" pos:start="19:32" pos:end="19:32">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:12">addr</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:42"><name pos:start="23:16" pos:end="23:25">inet_parse</name><argument_list pos:start="23:26" pos:end="23:42">(<argument pos:start="23:27" pos:end="23:35"><expr pos:start="23:27" pos:end="23:35"><name pos:start="23:27" pos:end="23:35">host_port</name></expr></argument>, <argument pos:start="23:38" pos:end="23:41"><expr pos:start="23:38" pos:end="23:41"><name pos:start="23:38" pos:end="23:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="39:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:25">(<expr pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:16">addr</name> <operator pos:start="25:18" pos:end="25:19">!=</operator> <name pos:start="25:21" pos:end="25:24">NULL</name></expr>)</condition> <block pos:start="25:27" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:46">

            <expr_stmt pos:start="27:13" pos:end="27:42"><expr pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:16">rdma</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:22">port</name></name> <operator pos:start="27:24" pos:end="27:24">=</operator> <call pos:start="27:26" pos:end="27:41"><name pos:start="27:26" pos:end="27:29">atoi</name><argument_list pos:start="27:30" pos:end="27:41">(<argument pos:start="27:31" pos:end="27:40"><expr pos:start="27:31" pos:end="27:40"><name pos:start="27:31" pos:end="27:40"><name pos:start="27:31" pos:end="27:34">addr</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:40">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:46"><expr pos:start="29:13" pos:end="29:45"><name pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:16">rdma</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:22">host</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="29:45"><name pos:start="29:26" pos:end="29:33">g_strdup</name><argument_list pos:start="29:34" pos:end="29:45">(<argument pos:start="29:35" pos:end="29:44"><expr pos:start="29:35" pos:end="29:44"><name pos:start="29:35" pos:end="29:44"><name pos:start="29:35" pos:end="29:38">addr</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:44">host</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="39:9">else <block pos:start="31:16" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:24">

            <expr_stmt pos:start="33:13" pos:end="33:70"><expr pos:start="33:13" pos:end="33:69"><call pos:start="33:13" pos:end="33:69"><name pos:start="33:13" pos:end="33:17">ERROR</name><argument_list pos:start="33:18" pos:end="33:69">(<argument pos:start="33:19" pos:end="33:22"><expr pos:start="33:19" pos:end="33:22"><name pos:start="33:19" pos:end="33:22">errp</name></expr></argument>, <argument pos:start="33:25" pos:end="33:57"><expr pos:start="33:25" pos:end="33:57"><literal type="string" pos:start="33:25" pos:end="33:57">"bad RDMA migration address '%s'"</literal></expr></argument>, <argument pos:start="33:60" pos:end="33:68"><expr pos:start="33:60" pos:end="33:68"><name pos:start="33:60" pos:end="33:68">host_port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:25"><expr pos:start="35:13" pos:end="35:24"><call pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:18">g_free</name><argument_list pos:start="35:19" pos:end="35:24">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">rdma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:24"><expr pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:16">rdma</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:23">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:42"><expr pos:start="43:9" pos:end="43:41"><call pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:35">qapi_free_InetSocketAddress</name><argument_list pos:start="43:36" pos:end="43:41">(<argument pos:start="43:37" pos:end="43:40"><expr pos:start="43:37" pos:end="43:40"><name pos:start="43:37" pos:end="43:40">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="49:5" pos:end="49:16">return <expr pos:start="49:12" pos:end="49:15"><name pos:start="49:12" pos:end="49:15">rdma</name></expr>;</return>

</block_content>}</block></function>
</unit>
