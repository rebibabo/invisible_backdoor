<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24296.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">matroska_execute_seekhead</name><parameter_list pos:start="1:38" pos:end="1:69">(<parameter pos:start="1:39" pos:end="1:68"><decl pos:start="1:39" pos:end="1:68"><type pos:start="1:39" pos:end="1:60"><name pos:start="1:39" pos:end="1:58">MatroskaDemuxContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:68">matroska</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">EbmlList</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:27">seekhead_list</name> <init pos:start="5:29" pos:end="5:49">= <expr pos:start="5:31" pos:end="5:49"><operator pos:start="5:31" pos:end="5:31">&amp;</operator><name pos:start="5:32" pos:end="5:49"><name pos:start="5:32" pos:end="5:39">matroska</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:49">seekhead</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MatroskaSeekhead</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:30">seekhead</name> <init pos:start="7:32" pos:end="7:52">= <expr pos:start="7:34" pos:end="7:52"><name pos:start="7:34" pos:end="7:52"><name pos:start="7:34" pos:end="7:46">seekhead_list</name><operator pos:start="7:47" pos:end="7:48">-&gt;</operator><name pos:start="7:49" pos:end="7:52">elem</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:22">before_pos</name> <init pos:start="9:24" pos:end="9:53">= <expr pos:start="9:26" pos:end="9:53"><call pos:start="9:26" pos:end="9:53"><name pos:start="9:26" pos:end="9:34">avio_tell</name><argument_list pos:start="9:35" pos:end="9:53">(<argument pos:start="9:36" pos:end="9:52"><expr pos:start="9:36" pos:end="9:52"><name pos:start="9:36" pos:end="9:52"><name pos:start="9:36" pos:end="9:43">matroska</name><operator pos:start="9:44" pos:end="9:45">-&gt;</operator><name pos:start="9:46" pos:end="9:48">ctx</name><operator pos:start="9:49" pos:end="9:50">-&gt;</operator><name pos:start="9:51" pos:end="9:52">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <comment type="line" pos:start="15:5" pos:end="15:57">// we should not do any seeking in the streaming case</comment>

    <if_stmt pos:start="17:5" pos:end="21:15"><if pos:start="17:5" pos:end="21:15">if <condition pos:start="17:8" pos:end="19:51">(<expr pos:start="17:9" pos:end="19:50"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:36"><name pos:start="17:10" pos:end="17:17">matroska</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:22">ctx</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:26">pb</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:36">seekable</name></name> <operator pos:start="17:38" pos:end="17:39">||</operator>

        <operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:29"><name pos:start="19:10" pos:end="19:17">matroska</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:22">ctx</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:29">flags</name></name> <operator pos:start="19:31" pos:end="19:31">&amp;</operator> <name pos:start="19:33" pos:end="19:49">AVFMT_FLAG_IGNIDX</name><operator pos:start="19:50" pos:end="19:50">)</operator></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:15"><block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return></block_content></block></if></if_stmt>



    <for pos:start="25:5" pos:end="49:5">for <control pos:start="25:9" pos:end="25:48">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:43"><expr pos:start="25:17" pos:end="25:42"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:42"><name pos:start="25:21" pos:end="25:33">seekhead_list</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:42">nb_elem</name></name></expr>;</condition> <incr pos:start="25:45" pos:end="25:47"><expr pos:start="25:45" pos:end="25:47"><name pos:start="25:45" pos:end="25:45">i</name><operator pos:start="25:46" pos:end="25:47">++</operator></expr></incr>)</control> <block pos:start="25:50" pos:end="49:5">{<block_content pos:start="27:9" pos:end="47:18">

        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:42">(<expr pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:20">seekhead</name><index pos:start="27:21" pos:end="27:23">[<expr pos:start="27:22" pos:end="27:22"><name pos:start="27:22" pos:end="27:22">i</name></expr>]</index></name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:27">pos</name> <operator pos:start="27:29" pos:end="27:30">&lt;=</operator> <name pos:start="27:32" pos:end="27:41">before_pos</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="line" pos:start="33:9" pos:end="33:62">// defer cues parsing until we actually need cue data.</comment>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:47">(<expr pos:start="35:13" pos:end="35:46"><name pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:20">seekhead</name><index pos:start="35:21" pos:end="35:23">[<expr pos:start="35:22" pos:end="35:22"><name pos:start="35:22" pos:end="35:22">i</name></expr>]</index></name><operator pos:start="35:24" pos:end="35:24">.</operator><name pos:start="35:25" pos:end="35:26">id</name> <operator pos:start="35:28" pos:end="35:29">==</operator> <name pos:start="35:31" pos:end="35:46">MATROSKA_ID_CUES</name></expr>)</condition> <block pos:start="35:49" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:21">

            <expr_stmt pos:start="37:13" pos:end="37:48"><expr pos:start="37:13" pos:end="37:47"><name pos:start="37:13" pos:end="37:43"><name pos:start="37:13" pos:end="37:20">matroska</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:43">cues_parsing_deferred</name></name> <operator pos:start="37:45" pos:end="37:45">=</operator> <literal type="number" pos:start="37:47" pos:end="37:47">1</literal></expr>;</expr_stmt>

            <continue pos:start="39:13" pos:end="39:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="45:9" pos:end="47:18"><if pos:start="45:9" pos:end="47:18">if <condition pos:start="45:12" pos:end="45:59">(<expr pos:start="45:13" pos:end="45:58"><call pos:start="45:13" pos:end="45:54"><name pos:start="45:13" pos:end="45:41">matroska_parse_seekhead_entry</name><argument_list pos:start="45:42" pos:end="45:54">(<argument pos:start="45:43" pos:end="45:50"><expr pos:start="45:43" pos:end="45:50"><name pos:start="45:43" pos:end="45:50">matroska</name></expr></argument>, <argument pos:start="45:53" pos:end="45:53"><expr pos:start="45:53" pos:end="45:53"><name pos:start="45:53" pos:end="45:53">i</name></expr></argument>)</argument_list></call> <operator pos:start="45:56" pos:end="45:56">&lt;</operator> <literal type="number" pos:start="45:58" pos:end="45:58">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:18"><block_content pos:start="47:13" pos:end="47:18">

            <break pos:start="47:13" pos:end="47:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
