<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3857.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">v9fs_statfs</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:11">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:15">fid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:18">retval</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:17">offset</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">V9fsFidState</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:17">statfs</name></name></type> <name pos:start="13:19" pos:end="13:23">stbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">V9fsPDU</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:16">pdu</name> <init pos:start="15:18" pos:end="15:25">= <expr pos:start="15:20" pos:end="15:25"><name pos:start="15:20" pos:end="15:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">V9fsState</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:16">s</name> <init pos:start="17:18" pos:end="17:25">= <expr pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:22">pdu</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:25">s</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:17">pdu_unmarshal</name><argument_list pos:start="21:18" pos:end="21:41">(<argument pos:start="21:19" pos:end="21:21"><expr pos:start="21:19" pos:end="21:21"><name pos:start="21:19" pos:end="21:21">pdu</name></expr></argument>, <argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">offset</name></expr></argument>, <argument pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><literal type="string" pos:start="21:32" pos:end="21:34">"d"</literal></expr></argument>, <argument pos:start="21:37" pos:end="21:40"><expr pos:start="21:37" pos:end="21:40"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:40">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:8">fidp</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:28"><name pos:start="23:12" pos:end="23:18">get_fid</name><argument_list pos:start="23:19" pos:end="23:28">(<argument pos:start="23:20" pos:end="23:22"><expr pos:start="23:20" pos:end="23:22"><name pos:start="23:20" pos:end="23:22">pdu</name></expr></argument>, <argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:12">fidp</name> <operator pos:start="25:14" pos:end="25:15">==</operator> <name pos:start="25:17" pos:end="25:20">NULL</name></expr>)</condition> <block pos:start="25:23" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:23">

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:14">retval</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <operator pos:start="27:18" pos:end="27:18">-</operator><name pos:start="27:19" pos:end="27:24">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:23">goto <name pos:start="29:14" pos:end="29:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:54"><expr pos:start="33:5" pos:end="33:53"><name pos:start="33:5" pos:end="33:10">retval</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:53"><name pos:start="33:14" pos:end="33:27">v9fs_co_statfs</name><argument_list pos:start="33:28" pos:end="33:53">(<argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:31">pdu</name></expr></argument>, <argument pos:start="33:34" pos:end="33:44"><expr pos:start="33:34" pos:end="33:44"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:44"><name pos:start="33:35" pos:end="33:38">fidp</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:44">path</name></name></expr></argument>, <argument pos:start="33:47" pos:end="33:52"><expr pos:start="33:47" pos:end="33:52"><operator pos:start="33:47" pos:end="33:47">&amp;</operator><name pos:start="33:48" pos:end="33:52">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:19">(<expr pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:14">retval</name> <operator pos:start="35:16" pos:end="35:16">&lt;</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>)</condition> <block pos:start="35:21" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:17">

        <goto pos:start="37:9" pos:end="37:17">goto <name pos:start="37:14" pos:end="37:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:10">retval</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:19">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:47"><expr pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:10">retval</name> <operator pos:start="43:12" pos:end="43:13">+=</operator> <call pos:start="43:15" pos:end="43:46"><name pos:start="43:15" pos:end="43:30">v9fs_fill_statfs</name><argument_list pos:start="43:31" pos:end="43:46">(<argument pos:start="43:32" pos:end="43:32"><expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">s</name></expr></argument>, <argument pos:start="43:35" pos:end="43:37"><expr pos:start="43:35" pos:end="43:37"><name pos:start="43:35" pos:end="43:37">pdu</name></expr></argument>, <argument pos:start="43:40" pos:end="43:45"><expr pos:start="43:40" pos:end="43:45"><operator pos:start="43:40" pos:end="43:40">&amp;</operator><name pos:start="43:41" pos:end="43:45">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="45:1" pos:end="45:4"><name pos:start="45:1" pos:end="45:3">out</name>:</label>

    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><call pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:11">put_fid</name><argument_list pos:start="47:12" pos:end="47:22">(<argument pos:start="47:13" pos:end="47:15"><expr pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:15">pdu</name></expr></argument>, <argument pos:start="47:18" pos:end="47:21"><expr pos:start="47:18" pos:end="47:21"><name pos:start="47:18" pos:end="47:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="49:1" pos:end="49:10"><name pos:start="49:1" pos:end="49:9">out_nofid</name>:</label>

    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><call pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:16">complete_pdu</name><argument_list pos:start="51:17" pos:end="51:32">(<argument pos:start="51:18" pos:end="51:18"><expr pos:start="51:18" pos:end="51:18"><name pos:start="51:18" pos:end="51:18">s</name></expr></argument>, <argument pos:start="51:21" pos:end="51:23"><expr pos:start="51:21" pos:end="51:23"><name pos:start="51:21" pos:end="51:23">pdu</name></expr></argument>, <argument pos:start="51:26" pos:end="51:31"><expr pos:start="51:26" pos:end="51:31"><name pos:start="51:26" pos:end="51:31">retval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:11">return;</return>

</block_content>}</block></function>
</unit>
