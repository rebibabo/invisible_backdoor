<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6347.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:14">bdrv_flush</name><parameter_list pos:start="1:15" pos:end="1:36">(<parameter pos:start="1:16" pos:end="1:35"><decl pos:start="1:16" pos:end="1:35"><type pos:start="1:16" pos:end="1:33"><name pos:start="1:16" pos:end="1:31">BlockDriverState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:24">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">Coroutine</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">co</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="13:6"><decl pos:start="7:5" pos:end="13:5"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">FlushCo</name></type> <name pos:start="7:13" pos:end="7:20">flush_co</name> <init pos:start="7:22" pos:end="13:5">= <expr pos:start="7:24" pos:end="13:5"><block pos:start="7:24" pos:end="13:5">{

        <expr pos:start="9:9" pos:end="9:16"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:11">bs</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <name pos:start="9:15" pos:end="9:16">bs</name></expr>,

        <expr pos:start="11:9" pos:end="11:23"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:12">ret</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:23">NOT_DONE</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="31:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:28">(<expr pos:start="17:9" pos:end="17:27"><call pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:25">qemu_in_coroutine</name><argument_list pos:start="17:26" pos:end="17:27">()</argument_list></call></expr>)</condition> <block pos:start="17:30" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:39">

        <comment type="block" pos:start="19:9" pos:end="19:55">/* Fast-path if already in coroutine context */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><call pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:27">bdrv_flush_co_entry</name><argument_list pos:start="21:28" pos:end="21:38">(<argument pos:start="21:29" pos:end="21:37"><expr pos:start="21:29" pos:end="21:37"><operator pos:start="21:29" pos:end="21:29">&amp;</operator><name pos:start="21:30" pos:end="21:37">flush_co</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="31:5">else <block pos:start="23:12" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:54">

        <expr_stmt pos:start="25:9" pos:end="25:67"><expr pos:start="25:9" pos:end="25:66"><name pos:start="25:9" pos:end="25:10">co</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:66"><name pos:start="25:14" pos:end="25:34">qemu_coroutine_create</name><argument_list pos:start="25:35" pos:end="25:66">(<argument pos:start="25:36" pos:end="25:54"><expr pos:start="25:36" pos:end="25:54"><name pos:start="25:36" pos:end="25:54">bdrv_flush_co_entry</name></expr></argument>, <argument pos:start="25:57" pos:end="25:65"><expr pos:start="25:57" pos:end="25:65"><operator pos:start="25:57" pos:end="25:57">&amp;</operator><name pos:start="25:58" pos:end="25:65">flush_co</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><call pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:28">qemu_coroutine_enter</name><argument_list pos:start="27:29" pos:end="27:32">(<argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><name pos:start="27:30" pos:end="27:31">co</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:54"><expr pos:start="29:9" pos:end="29:53"><call pos:start="29:9" pos:end="29:53"><name pos:start="29:9" pos:end="29:23">BDRV_POLL_WHILE</name><argument_list pos:start="29:24" pos:end="29:53">(<argument pos:start="29:25" pos:end="29:26"><expr pos:start="29:25" pos:end="29:26"><name pos:start="29:25" pos:end="29:26">bs</name></expr></argument>, <argument pos:start="29:29" pos:end="29:52"><expr pos:start="29:29" pos:end="29:52"><name pos:start="29:29" pos:end="29:40"><name pos:start="29:29" pos:end="29:36">flush_co</name><operator pos:start="29:37" pos:end="29:37">.</operator><name pos:start="29:38" pos:end="29:40">ret</name></name> <operator pos:start="29:42" pos:end="29:43">==</operator> <name pos:start="29:45" pos:end="29:52">NOT_DONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="35:5" pos:end="35:24">return <expr pos:start="35:12" pos:end="35:23"><name pos:start="35:12" pos:end="35:23"><name pos:start="35:12" pos:end="35:19">flush_co</name><operator pos:start="35:20" pos:end="35:20">.</operator><name pos:start="35:21" pos:end="35:23">ret</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
