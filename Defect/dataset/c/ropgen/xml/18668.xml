<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18668.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">pxa2xx_pic_mem_write</name><parameter_list pos:start="1:33" pos:end="3:63">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:53">hwaddr</name></type> <name pos:start="1:55" pos:end="1:60">offset</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:47"><decl pos:start="3:34" pos:end="3:47"><type pos:start="3:34" pos:end="3:47"><name pos:start="3:34" pos:end="3:41">uint64_t</name></type> <name pos:start="3:43" pos:end="3:47">value</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:62"><decl pos:start="3:50" pos:end="3:62"><type pos:start="3:50" pos:end="3:62"><name pos:start="3:50" pos:end="3:57">unsigned</name></type> <name pos:start="3:59" pos:end="3:62">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:30">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PXA2xxPICState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:49">= <expr pos:start="7:25" pos:end="7:49"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:39">PXA2xxPICState</name> <operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator> <name pos:start="7:44" pos:end="7:49">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="61:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18">offset</name></expr>)</condition> <block pos:start="11:21" pos:end="61:5">{<block_content pos:start="13:5" pos:end="59:15">

    <case pos:start="13:5" pos:end="13:14">case <expr pos:start="13:10" pos:end="13:13"><name pos:start="13:10" pos:end="13:13">ICMR</name></expr>:</case>	<comment type="block" pos:start="13:17" pos:end="13:35">/* Mask register */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:34"><expr pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:22">int_enabled</name><index pos:start="15:23" pos:end="15:25">[<expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>]</index></name> <operator pos:start="15:27" pos:end="15:27">=</operator> <name pos:start="15:29" pos:end="15:33">value</name></expr>;</expr_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>

    <case pos:start="19:5" pos:end="19:15">case <expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:14">ICMR2</name></expr>:</case>	<comment type="block" pos:start="19:17" pos:end="19:37">/* Mask register 2 */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">int_enabled</name><index pos:start="21:23" pos:end="21:25">[<expr pos:start="21:24" pos:end="21:24"><literal type="number" pos:start="21:24" pos:end="21:24">1</literal></expr>]</index></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <name pos:start="21:29" pos:end="21:33">value</name></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:14">case <expr pos:start="25:10" pos:end="25:13"><name pos:start="25:10" pos:end="25:13">ICLR</name></expr>:</case>	<comment type="block" pos:start="25:17" pos:end="25:36">/* Level register */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:17">is_fiq</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>]</index></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:28">value</name></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:15">case <expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:14">ICLR2</name></expr>:</case>	<comment type="block" pos:start="31:17" pos:end="31:38">/* Level register 2 */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:17">is_fiq</name><index pos:start="33:18" pos:end="33:20">[<expr pos:start="33:19" pos:end="33:19"><literal type="number" pos:start="33:19" pos:end="33:19">1</literal></expr>]</index></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:28">value</name></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><name pos:start="37:10" pos:end="37:13">ICCR</name></expr>:</case>	<comment type="block" pos:start="37:17" pos:end="37:31">/* Idle mask */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:43"><expr pos:start="39:9" pos:end="39:42"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:19">int_idle</name></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <ternary pos:start="39:23" pos:end="39:42"><condition pos:start="39:23" pos:end="39:35"><expr pos:start="39:23" pos:end="39:33"><operator pos:start="39:23" pos:end="39:23">(</operator><name pos:start="39:24" pos:end="39:28">value</name> <operator pos:start="39:30" pos:end="39:30">&amp;</operator> <literal type="number" pos:start="39:32" pos:end="39:32">1</literal><operator pos:start="39:33" pos:end="39:33">)</operator></expr> ?</condition><then pos:start="39:37" pos:end="39:37"> <expr pos:start="39:37" pos:end="39:37"><literal type="number" pos:start="39:37" pos:end="39:37">0</literal></expr> </then><else pos:start="39:39" pos:end="39:42">: <expr pos:start="39:41" pos:end="39:42"><operator pos:start="39:41" pos:end="39:41">~</operator><literal type="number" pos:start="39:42" pos:end="39:42">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:25">case <expr pos:start="43:10" pos:end="43:24"><name pos:start="43:10" pos:end="43:13">IPR0</name>  <operator pos:start="43:16" pos:end="43:18">...</operator> <name pos:start="43:20" pos:end="43:24">IPR31</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:71"><expr pos:start="45:9" pos:end="45:70"><name pos:start="45:9" pos:end="45:49"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:19">priority</name><index pos:start="45:20" pos:end="45:49">[<expr pos:start="45:21" pos:end="45:48"><literal type="number" pos:start="45:21" pos:end="45:21">0</literal>  <operator pos:start="45:24" pos:end="45:24">+</operator> <operator pos:start="45:26" pos:end="45:26">(</operator><operator pos:start="45:27" pos:end="45:27">(</operator><name pos:start="45:28" pos:end="45:33">offset</name> <operator pos:start="45:35" pos:end="45:35">-</operator> <name pos:start="45:37" pos:end="45:40">IPR0</name> <operator pos:start="45:42" pos:end="45:42">)</operator> <operator pos:start="45:44" pos:end="45:45">&gt;&gt;</operator> <literal type="number" pos:start="45:47" pos:end="45:47">2</literal><operator pos:start="45:48" pos:end="45:48">)</operator></expr>]</index></name> <operator pos:start="45:51" pos:end="45:51">=</operator> <name pos:start="45:53" pos:end="45:57">value</name> <operator pos:start="45:59" pos:end="45:59">&amp;</operator> <literal type="number" pos:start="45:61" pos:end="45:70">0x8000003f</literal></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:25">case <expr pos:start="49:10" pos:end="49:24"><name pos:start="49:10" pos:end="49:14">IPR32</name> <operator pos:start="49:16" pos:end="49:18">...</operator> <name pos:start="49:20" pos:end="49:24">IPR39</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:71"><expr pos:start="51:9" pos:end="51:70"><name pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:19">priority</name><index pos:start="51:20" pos:end="51:49">[<expr pos:start="51:21" pos:end="51:48"><literal type="number" pos:start="51:21" pos:end="51:22">32</literal> <operator pos:start="51:24" pos:end="51:24">+</operator> <operator pos:start="51:26" pos:end="51:26">(</operator><operator pos:start="51:27" pos:end="51:27">(</operator><name pos:start="51:28" pos:end="51:33">offset</name> <operator pos:start="51:35" pos:end="51:35">-</operator> <name pos:start="51:37" pos:end="51:41">IPR32</name><operator pos:start="51:42" pos:end="51:42">)</operator> <operator pos:start="51:44" pos:end="51:45">&gt;&gt;</operator> <literal type="number" pos:start="51:47" pos:end="51:47">2</literal><operator pos:start="51:48" pos:end="51:48">)</operator></expr>]</index></name> <operator pos:start="51:51" pos:end="51:51">=</operator> <name pos:start="51:53" pos:end="51:57">value</name> <operator pos:start="51:59" pos:end="51:59">&amp;</operator> <literal type="number" pos:start="51:61" pos:end="51:70">0x8000003f</literal></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <default pos:start="55:5" pos:end="55:12">default:</default>

        <expr_stmt pos:start="57:9" pos:end="57:78"><expr pos:start="57:9" pos:end="57:77"><call pos:start="57:9" pos:end="57:77"><name pos:start="57:9" pos:end="57:14">printf</name><argument_list pos:start="57:15" pos:end="57:77">(<argument pos:start="57:16" pos:end="57:54"><expr pos:start="57:16" pos:end="57:54"><literal type="string" pos:start="57:16" pos:end="57:41">"%s: Bad register offset "</literal> <name pos:start="57:43" pos:end="57:49">REG_FMT</name> <literal type="string" pos:start="57:51" pos:end="57:54">"\n"</literal></expr></argument>, <argument pos:start="57:57" pos:end="57:68"><expr pos:start="57:57" pos:end="57:68"><name pos:start="57:57" pos:end="57:68">__FUNCTION__</name></expr></argument>, <argument pos:start="57:71" pos:end="57:76"><expr pos:start="57:71" pos:end="57:76"><name pos:start="57:71" pos:end="57:76">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:15">return;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="63:5" pos:end="63:30"><expr pos:start="63:5" pos:end="63:29"><call pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:21">pxa2xx_pic_update</name><argument_list pos:start="63:22" pos:end="63:29">(<argument pos:start="63:23" pos:end="63:28"><expr pos:start="63:23" pos:end="63:28"><name pos:start="63:23" pos:end="63:28">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
