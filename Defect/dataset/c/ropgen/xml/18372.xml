<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18372.c" pos:tabs="8"><function pos:start="1:1" pos:end="1013:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">ff_h264_decode_mb_cabac</name><parameter_list pos:start="1:28" pos:end="1:43">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:39">H264Context</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">h</name></decl></parameter>)</parameter_list> <block pos:start="1:45" pos:end="1013:1">{<block_content pos:start="3:5" pos:end="1011:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">mb_xy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">mb_type</name></decl>, <decl pos:start="7:18" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:32">partition_count</name></decl>, <decl pos:start="7:35" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:37">cbp</name> <init pos:start="7:39" pos:end="7:41">= <expr pos:start="7:41" pos:end="7:41"><literal type="number" pos:start="7:41" pos:end="7:41">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">dct8x8_allowed</name><init pos:start="9:23" pos:end="9:49">= <expr pos:start="9:25" pos:end="9:49"><name pos:start="9:25" pos:end="9:49"><name pos:start="9:25" pos:end="9:25">h</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:30">pps</name><operator pos:start="9:31" pos:end="9:31">.</operator><name pos:start="9:32" pos:end="9:49">transform_8x8_mode</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:54"><expr pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:9">mb_xy</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <name pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:13">h</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:20">mb_xy</name></name> <operator pos:start="13:22" pos:end="13:22">=</operator> <name pos:start="13:24" pos:end="13:30"><name pos:start="13:24" pos:end="13:24">s</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:30">mb_x</name></name> <operator pos:start="13:32" pos:end="13:32">+</operator> <name pos:start="13:34" pos:end="13:40"><name pos:start="13:34" pos:end="13:34">s</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:40">mb_y</name></name><operator pos:start="13:41" pos:end="13:41">*</operator><name pos:start="13:42" pos:end="13:53"><name pos:start="13:42" pos:end="13:42">s</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:53">mb_stride</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:75"><expr pos:start="17:5" pos:end="17:74"><call pos:start="17:5" pos:end="17:74"><name pos:start="17:5" pos:end="17:11">tprintf</name><argument_list pos:start="17:12" pos:end="17:74">(<argument pos:start="17:13" pos:end="17:20"><expr pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:20">avctx</name></name></expr></argument>, <argument pos:start="17:23" pos:end="17:41"><expr pos:start="17:23" pos:end="17:41"><literal type="string" pos:start="17:23" pos:end="17:41">"pic:%d mb:%d/%d\n"</literal></expr></argument>, <argument pos:start="17:44" pos:end="17:55"><expr pos:start="17:44" pos:end="17:55"><name pos:start="17:44" pos:end="17:55"><name pos:start="17:44" pos:end="17:44">h</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:55">frame_num</name></name></expr></argument>, <argument pos:start="17:58" pos:end="17:64"><expr pos:start="17:58" pos:end="17:64"><name pos:start="17:58" pos:end="17:64"><name pos:start="17:58" pos:end="17:58">s</name><operator pos:start="17:59" pos:end="17:60">-&gt;</operator><name pos:start="17:61" pos:end="17:64">mb_x</name></name></expr></argument>, <argument pos:start="17:67" pos:end="17:73"><expr pos:start="17:67" pos:end="17:73"><name pos:start="17:67" pos:end="17:73"><name pos:start="17:67" pos:end="17:67">s</name><operator pos:start="17:68" pos:end="17:69">-&gt;</operator><name pos:start="17:70" pos:end="17:73">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="73:5"><if pos:start="19:5" pos:end="73:5">if<condition pos:start="19:7" pos:end="19:40">( <expr pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:9">h</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:25">slice_type_nos</name></name> <operator pos:start="19:27" pos:end="19:28">!=</operator> <name pos:start="19:30" pos:end="19:38">FF_I_TYPE</name></expr> )</condition> <block pos:start="19:42" pos:end="73:5">{<block_content pos:start="21:9" pos:end="71:9">

        <decl_stmt pos:start="21:9" pos:end="21:17"><decl pos:start="21:9" pos:end="21:16"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:16">skip</name></decl>;</decl_stmt>

        <comment type="block" pos:start="23:9" pos:end="23:67">/* a skipped mb needs the aff flag from the following mb */</comment>

        <if_stmt pos:start="25:9" pos:end="27:43"><if pos:start="25:9" pos:end="27:43">if<condition pos:start="25:11" pos:end="25:57">( <expr pos:start="25:13" pos:end="25:55"><name pos:start="25:13" pos:end="25:23">FRAME_MBAFF</name> <operator pos:start="25:25" pos:end="25:26">&amp;&amp;</operator> <name pos:start="25:28" pos:end="25:34"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:34">mb_x</name></name><operator pos:start="25:35" pos:end="25:36">==</operator><literal type="number" pos:start="25:37" pos:end="25:37">0</literal> <operator pos:start="25:39" pos:end="25:40">&amp;&amp;</operator> <operator pos:start="25:42" pos:end="25:42">(</operator><name pos:start="25:43" pos:end="25:49"><name pos:start="25:43" pos:end="25:43">s</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:49">mb_y</name></name><operator pos:start="25:50" pos:end="25:50">&amp;</operator><literal type="number" pos:start="25:51" pos:end="25:51">1</literal><operator pos:start="25:52" pos:end="25:52">)</operator><operator pos:start="25:53" pos:end="25:54">==</operator><literal type="number" pos:start="25:55" pos:end="25:55">0</literal></expr> )</condition><block type="pseudo" pos:start="27:13" pos:end="27:43"><block_content pos:start="27:13" pos:end="27:43">

            <expr_stmt pos:start="27:13" pos:end="27:43"><expr pos:start="27:13" pos:end="27:42"><call pos:start="27:13" pos:end="27:42"><name pos:start="27:13" pos:end="27:39">predict_field_decoding_flag</name><argument_list pos:start="27:40" pos:end="27:42">(<argument pos:start="27:41" pos:end="27:41"><expr pos:start="27:41" pos:end="27:41"><name pos:start="27:41" pos:end="27:41">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="35:63"><if pos:start="29:9" pos:end="31:38">if<condition pos:start="29:11" pos:end="29:65">( <expr pos:start="29:13" pos:end="29:63"><name pos:start="29:13" pos:end="29:23">FRAME_MBAFF</name> <operator pos:start="29:25" pos:end="29:26">&amp;&amp;</operator> <operator pos:start="29:28" pos:end="29:28">(</operator><name pos:start="29:29" pos:end="29:35"><name pos:start="29:29" pos:end="29:29">s</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:35">mb_y</name></name><operator pos:start="29:36" pos:end="29:36">&amp;</operator><literal type="number" pos:start="29:37" pos:end="29:37">1</literal><operator pos:start="29:38" pos:end="29:38">)</operator><operator pos:start="29:39" pos:end="29:40">==</operator><literal type="number" pos:start="29:41" pos:end="29:41">1</literal> <operator pos:start="29:43" pos:end="29:44">&amp;&amp;</operator> <name pos:start="29:46" pos:end="29:63"><name pos:start="29:46" pos:end="29:46">h</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:63">prev_mb_skipped</name></name></expr> )</condition><block type="pseudo" pos:start="31:13" pos:end="31:38"><block_content pos:start="31:13" pos:end="31:38">

            <expr_stmt pos:start="31:13" pos:end="31:38"><expr pos:start="31:13" pos:end="31:37"><name pos:start="31:13" pos:end="31:16">skip</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:37"><name pos:start="31:20" pos:end="31:20">h</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:37">next_mb_skipped</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="33:9" pos:end="35:63">else<block type="pseudo" pos:start="35:13" pos:end="35:63"><block_content pos:start="35:13" pos:end="35:63">

            <expr_stmt pos:start="35:13" pos:end="35:63"><expr pos:start="35:13" pos:end="35:62"><name pos:start="35:13" pos:end="35:16">skip</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:62"><name pos:start="35:20" pos:end="35:39">decode_cabac_mb_skip</name><argument_list pos:start="35:40" pos:end="35:62">( <argument pos:start="35:42" pos:end="35:42"><expr pos:start="35:42" pos:end="35:42"><name pos:start="35:42" pos:end="35:42">h</name></expr></argument>, <argument pos:start="35:45" pos:end="35:51"><expr pos:start="35:45" pos:end="35:51"><name pos:start="35:45" pos:end="35:51"><name pos:start="35:45" pos:end="35:45">s</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:51">mb_x</name></name></expr></argument>, <argument pos:start="35:54" pos:end="35:60"><expr pos:start="35:54" pos:end="35:60"><name pos:start="35:54" pos:end="35:60"><name pos:start="35:54" pos:end="35:54">s</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:60">mb_y</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <comment type="block" pos:start="37:9" pos:end="37:29">/* read skip flags */</comment>

        <if_stmt pos:start="39:9" pos:end="71:9"><if pos:start="39:9" pos:end="71:9">if<condition pos:start="39:11" pos:end="39:18">( <expr pos:start="39:13" pos:end="39:16"><name pos:start="39:13" pos:end="39:16">skip</name></expr> )</condition> <block pos:start="39:20" pos:end="71:9">{<block_content pos:start="41:13" pos:end="67:21">

            <if_stmt pos:start="41:13" pos:end="51:13"><if pos:start="41:13" pos:end="51:13">if<condition pos:start="41:15" pos:end="41:47">( <expr pos:start="41:17" pos:end="41:45"><name pos:start="41:17" pos:end="41:27">FRAME_MBAFF</name> <operator pos:start="41:29" pos:end="41:30">&amp;&amp;</operator> <operator pos:start="41:32" pos:end="41:32">(</operator><name pos:start="41:33" pos:end="41:39"><name pos:start="41:33" pos:end="41:33">s</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:39">mb_y</name></name><operator pos:start="41:40" pos:end="41:40">&amp;</operator><literal type="number" pos:start="41:41" pos:end="41:41">1</literal><operator pos:start="41:42" pos:end="41:42">)</operator><operator pos:start="41:43" pos:end="41:44">==</operator><literal type="number" pos:start="41:45" pos:end="41:45">0</literal></expr> )</condition><block pos:start="41:48" pos:end="51:13">{<block_content pos:start="43:17" pos:end="49:98">

                <expr_stmt pos:start="43:17" pos:end="43:65"><expr pos:start="43:17" pos:end="43:64"><name pos:start="43:17" pos:end="43:49"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:34">current_picture</name><operator pos:start="43:35" pos:end="43:35">.</operator><name pos:start="43:36" pos:end="43:42">mb_type</name><index pos:start="43:43" pos:end="43:49">[<expr pos:start="43:44" pos:end="43:48"><name pos:start="43:44" pos:end="43:48">mb_xy</name></expr>]</index></name> <operator pos:start="43:51" pos:end="43:51">=</operator> <name pos:start="43:53" pos:end="43:64">MB_TYPE_SKIP</name></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:83"><expr pos:start="45:17" pos:end="45:82"><name pos:start="45:17" pos:end="45:34"><name pos:start="45:17" pos:end="45:17">h</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:34">next_mb_skipped</name></name> <operator pos:start="45:36" pos:end="45:36">=</operator> <call pos:start="45:38" pos:end="45:82"><name pos:start="45:38" pos:end="45:57">decode_cabac_mb_skip</name><argument_list pos:start="45:58" pos:end="45:82">( <argument pos:start="45:60" pos:end="45:60"><expr pos:start="45:60" pos:end="45:60"><name pos:start="45:60" pos:end="45:60">h</name></expr></argument>, <argument pos:start="45:63" pos:end="45:69"><expr pos:start="45:63" pos:end="45:69"><name pos:start="45:63" pos:end="45:69"><name pos:start="45:63" pos:end="45:63">s</name><operator pos:start="45:64" pos:end="45:65">-&gt;</operator><name pos:start="45:66" pos:end="45:69">mb_x</name></name></expr></argument>, <argument pos:start="45:72" pos:end="45:80"><expr pos:start="45:72" pos:end="45:80"><name pos:start="45:72" pos:end="45:78"><name pos:start="45:72" pos:end="45:72">s</name><operator pos:start="45:73" pos:end="45:74">-&gt;</operator><name pos:start="45:75" pos:end="45:78">mb_y</name></name><operator pos:start="45:79" pos:end="45:79">+</operator><literal type="number" pos:start="45:80" pos:end="45:80">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="47:17" pos:end="49:98"><if pos:start="47:17" pos:end="49:98">if<condition pos:start="47:19" pos:end="47:39">(<expr pos:start="47:20" pos:end="47:38"><operator pos:start="47:20" pos:end="47:20">!</operator><name pos:start="47:21" pos:end="47:38"><name pos:start="47:21" pos:end="47:21">h</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:38">next_mb_skipped</name></name></expr>)</condition><block type="pseudo" pos:start="49:21" pos:end="49:98"><block_content pos:start="49:21" pos:end="49:98">

                    <expr_stmt pos:start="49:21" pos:end="49:98"><expr pos:start="49:21" pos:end="49:97"><name pos:start="49:21" pos:end="49:31"><name pos:start="49:21" pos:end="49:21">h</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:31">mb_mbaff</name></name> <operator pos:start="49:33" pos:end="49:33">=</operator> <name pos:start="49:35" pos:end="49:59"><name pos:start="49:35" pos:end="49:35">h</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:59">mb_field_decoding_flag</name></name> <operator pos:start="49:61" pos:end="49:61">=</operator> <call pos:start="49:63" pos:end="49:97"><name pos:start="49:63" pos:end="49:94">decode_cabac_field_decoding_flag</name><argument_list pos:start="49:95" pos:end="49:97">(<argument pos:start="49:96" pos:end="49:96"><expr pos:start="49:96" pos:end="49:96"><name pos:start="49:96" pos:end="49:96">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:30"><expr pos:start="55:13" pos:end="55:29"><call pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:26">decode_mb_skip</name><argument_list pos:start="55:27" pos:end="55:29">(<argument pos:start="55:28" pos:end="55:28"><expr pos:start="55:28" pos:end="55:28"><name pos:start="55:28" pos:end="55:28">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="59:13" pos:end="59:36"><expr pos:start="59:13" pos:end="59:35"><name pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:13">h</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:24">cbp_table</name><index pos:start="59:25" pos:end="59:31">[<expr pos:start="59:26" pos:end="59:30"><name pos:start="59:26" pos:end="59:30">mb_xy</name></expr>]</index></name> <operator pos:start="59:33" pos:end="59:33">=</operator> <literal type="number" pos:start="59:35" pos:end="59:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:49"><expr pos:start="61:13" pos:end="61:48"><name pos:start="61:13" pos:end="61:44"><name pos:start="61:13" pos:end="61:13">h</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:37">chroma_pred_mode_table</name><index pos:start="61:38" pos:end="61:44">[<expr pos:start="61:39" pos:end="61:43"><name pos:start="61:39" pos:end="61:43">mb_xy</name></expr>]</index></name> <operator pos:start="61:46" pos:end="61:46">=</operator> <literal type="number" pos:start="61:48" pos:end="61:48">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:36"><expr pos:start="63:13" pos:end="63:35"><name pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:13">h</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:31">last_qscale_diff</name></name> <operator pos:start="63:33" pos:end="63:33">=</operator> <literal type="number" pos:start="63:35" pos:end="63:35">0</literal></expr>;</expr_stmt>



            <return pos:start="67:13" pos:end="67:21">return <expr pos:start="67:20" pos:end="67:20"><literal type="number" pos:start="67:20" pos:end="67:20">0</literal></expr>;</return>



        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="83:5">if<condition pos:start="75:7" pos:end="75:19">(<expr pos:start="75:8" pos:end="75:18"><name pos:start="75:8" pos:end="75:18">FRAME_MBAFF</name></expr>)</condition><block pos:start="75:20" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:76">

        <if_stmt pos:start="77:9" pos:end="81:76"><if pos:start="77:9" pos:end="81:76">if<condition pos:start="77:11" pos:end="77:30">( <expr pos:start="77:13" pos:end="77:28"><operator pos:start="77:13" pos:end="77:13">(</operator><name pos:start="77:14" pos:end="77:20"><name pos:start="77:14" pos:end="77:14">s</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:20">mb_y</name></name><operator pos:start="77:21" pos:end="77:21">&amp;</operator><literal type="number" pos:start="77:22" pos:end="77:22">1</literal><operator pos:start="77:23" pos:end="77:23">)</operator> <operator pos:start="77:25" pos:end="77:26">==</operator> <literal type="number" pos:start="77:28" pos:end="77:28">0</literal></expr> )</condition><block type="pseudo" pos:start="79:13" pos:end="81:76"><block_content pos:start="79:13" pos:end="81:76">

            <expr_stmt pos:start="79:13" pos:end="81:76"><expr pos:start="79:13" pos:end="81:75"><name pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:13">h</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:23">mb_mbaff</name></name> <operator pos:start="79:25" pos:end="79:25">=</operator>

            <name pos:start="81:13" pos:end="81:37"><name pos:start="81:13" pos:end="81:13">h</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:37">mb_field_decoding_flag</name></name> <operator pos:start="81:39" pos:end="81:39">=</operator> <call pos:start="81:41" pos:end="81:75"><name pos:start="81:41" pos:end="81:72">decode_cabac_field_decoding_flag</name><argument_list pos:start="81:73" pos:end="81:75">(<argument pos:start="81:74" pos:end="81:74"><expr pos:start="81:74" pos:end="81:74"><name pos:start="81:74" pos:end="81:74">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:27"><expr pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:22"><name pos:start="87:5" pos:end="87:5">h</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:22">prev_mb_skipped</name></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:28"><expr pos:start="91:5" pos:end="91:27"><call pos:start="91:5" pos:end="91:27"><name pos:start="91:5" pos:end="91:24">compute_mb_neighbors</name><argument_list pos:start="91:25" pos:end="91:27">(<argument pos:start="91:26" pos:end="91:26"><expr pos:start="91:26" pos:end="91:26"><name pos:start="91:26" pos:end="91:26">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="95:5" pos:end="165:5"><if pos:start="95:5" pos:end="113:5">if<condition pos:start="95:7" pos:end="95:40">( <expr pos:start="95:9" pos:end="95:38"><name pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:9">h</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:25">slice_type_nos</name></name> <operator pos:start="95:27" pos:end="95:28">==</operator> <name pos:start="95:30" pos:end="95:38">FF_B_TYPE</name></expr> )</condition> <block pos:start="95:42" pos:end="113:5">{<block_content pos:start="97:9" pos:end="111:9">

        <expr_stmt pos:start="97:9" pos:end="97:46"><expr pos:start="97:9" pos:end="97:45"><name pos:start="97:9" pos:end="97:15">mb_type</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <call pos:start="97:19" pos:end="97:45"><name pos:start="97:19" pos:end="97:40">decode_cabac_mb_type_b</name><argument_list pos:start="97:41" pos:end="97:45">( <argument pos:start="97:43" pos:end="97:43"><expr pos:start="97:43" pos:end="97:43"><name pos:start="97:43" pos:end="97:43">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="111:9"><if pos:start="99:9" pos:end="105:9">if<condition pos:start="99:11" pos:end="99:26">( <expr pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:19">mb_type</name> <operator pos:start="99:21" pos:end="99:21">&lt;</operator> <literal type="number" pos:start="99:23" pos:end="99:24">23</literal></expr> )</condition><block pos:start="99:27" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:58">

            <expr_stmt pos:start="101:13" pos:end="101:69"><expr pos:start="101:13" pos:end="101:68"><name pos:start="101:13" pos:end="101:27">partition_count</name><operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:52"><name pos:start="101:30" pos:end="101:43">b_mb_type_info</name><index pos:start="101:44" pos:end="101:52">[<expr pos:start="101:45" pos:end="101:51"><name pos:start="101:45" pos:end="101:51">mb_type</name></expr>]</index></name><operator pos:start="101:53" pos:end="101:53">.</operator><name pos:start="101:54" pos:end="101:68">partition_count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:58"><expr pos:start="103:13" pos:end="103:57"><name pos:start="103:13" pos:end="103:19">mb_type</name><operator pos:start="103:20" pos:end="103:20">=</operator>         <name pos:start="103:30" pos:end="103:52"><name pos:start="103:30" pos:end="103:43">b_mb_type_info</name><index pos:start="103:44" pos:end="103:52">[<expr pos:start="103:45" pos:end="103:51"><name pos:start="103:45" pos:end="103:51">mb_type</name></expr>]</index></name><operator pos:start="103:53" pos:end="103:53">.</operator><name pos:start="103:54" pos:end="103:57">type</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="105:10" pos:end="111:9">else<block pos:start="105:14" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:33">

            <expr_stmt pos:start="107:13" pos:end="107:26"><expr pos:start="107:13" pos:end="107:25"><name pos:start="107:13" pos:end="107:19">mb_type</name> <operator pos:start="107:21" pos:end="107:22">-=</operator> <literal type="number" pos:start="107:24" pos:end="107:25">23</literal></expr>;</expr_stmt>

            <goto pos:start="109:13" pos:end="109:33">goto <name pos:start="109:18" pos:end="109:32">decode_intra_mb</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="113:7" pos:end="145:5">else if<condition pos:start="113:14" pos:end="113:47">( <expr pos:start="113:16" pos:end="113:45"><name pos:start="113:16" pos:end="113:32"><name pos:start="113:16" pos:end="113:16">h</name><operator pos:start="113:17" pos:end="113:18">-&gt;</operator><name pos:start="113:19" pos:end="113:32">slice_type_nos</name></name> <operator pos:start="113:34" pos:end="113:35">==</operator> <name pos:start="113:37" pos:end="113:45">FF_P_TYPE</name></expr> )</condition> <block pos:start="113:49" pos:end="145:5">{<block_content pos:start="115:9" pos:end="143:9">

        <if_stmt pos:start="115:9" pos:end="143:9"><if pos:start="115:9" pos:end="137:9">if<condition pos:start="115:11" pos:end="115:71">( <expr pos:start="115:13" pos:end="115:69"><call pos:start="115:13" pos:end="115:64"><name pos:start="115:13" pos:end="115:30">get_cabac_noinline</name><argument_list pos:start="115:31" pos:end="115:64">( <argument pos:start="115:33" pos:end="115:41"><expr pos:start="115:33" pos:end="115:41"><operator pos:start="115:33" pos:end="115:33">&amp;</operator><name pos:start="115:34" pos:end="115:41"><name pos:start="115:34" pos:end="115:34">h</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:41">cabac</name></name></expr></argument>, <argument pos:start="115:44" pos:end="115:62"><expr pos:start="115:44" pos:end="115:62"><operator pos:start="115:44" pos:end="115:44">&amp;</operator><name pos:start="115:45" pos:end="115:62"><name pos:start="115:45" pos:end="115:45">h</name><operator pos:start="115:46" pos:end="115:47">-&gt;</operator><name pos:start="115:48" pos:end="115:58">cabac_state</name><index pos:start="115:59" pos:end="115:62">[<expr pos:start="115:60" pos:end="115:61"><literal type="number" pos:start="115:60" pos:end="115:61">14</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="115:66" pos:end="115:67">==</operator> <literal type="number" pos:start="115:69" pos:end="115:69">0</literal></expr> )</condition> <block pos:start="115:73" pos:end="137:9">{<block_content pos:start="119:13" pos:end="135:58">

            <comment type="block" pos:start="117:13" pos:end="117:24">/* P-type */</comment>

            <if_stmt pos:start="119:13" pos:end="131:13"><if pos:start="119:13" pos:end="125:13">if<condition pos:start="119:15" pos:end="119:75">( <expr pos:start="119:17" pos:end="119:73"><call pos:start="119:17" pos:end="119:68"><name pos:start="119:17" pos:end="119:34">get_cabac_noinline</name><argument_list pos:start="119:35" pos:end="119:68">( <argument pos:start="119:37" pos:end="119:45"><expr pos:start="119:37" pos:end="119:45"><operator pos:start="119:37" pos:end="119:37">&amp;</operator><name pos:start="119:38" pos:end="119:45"><name pos:start="119:38" pos:end="119:38">h</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:45">cabac</name></name></expr></argument>, <argument pos:start="119:48" pos:end="119:66"><expr pos:start="119:48" pos:end="119:66"><operator pos:start="119:48" pos:end="119:48">&amp;</operator><name pos:start="119:49" pos:end="119:66"><name pos:start="119:49" pos:end="119:49">h</name><operator pos:start="119:50" pos:end="119:51">-&gt;</operator><name pos:start="119:52" pos:end="119:62">cabac_state</name><index pos:start="119:63" pos:end="119:66">[<expr pos:start="119:64" pos:end="119:65"><literal type="number" pos:start="119:64" pos:end="119:65">15</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="119:70" pos:end="119:71">==</operator> <literal type="number" pos:start="119:73" pos:end="119:73">0</literal></expr> )</condition> <block pos:start="119:77" pos:end="125:13">{<block_content pos:start="123:17" pos:end="123:82">

                <comment type="block" pos:start="121:17" pos:end="121:40">/* P_L0_D16x16, P_8x8 */</comment>

                <expr_stmt pos:start="123:17" pos:end="123:82"><expr pos:start="123:17" pos:end="123:81"><name pos:start="123:17" pos:end="123:23">mb_type</name><operator pos:start="123:24" pos:end="123:24">=</operator> <literal type="number" pos:start="123:26" pos:end="123:26">3</literal> <operator pos:start="123:28" pos:end="123:28">*</operator> <call pos:start="123:30" pos:end="123:81"><name pos:start="123:30" pos:end="123:47">get_cabac_noinline</name><argument_list pos:start="123:48" pos:end="123:81">( <argument pos:start="123:50" pos:end="123:58"><expr pos:start="123:50" pos:end="123:58"><operator pos:start="123:50" pos:end="123:50">&amp;</operator><name pos:start="123:51" pos:end="123:58"><name pos:start="123:51" pos:end="123:51">h</name><operator pos:start="123:52" pos:end="123:53">-&gt;</operator><name pos:start="123:54" pos:end="123:58">cabac</name></name></expr></argument>, <argument pos:start="123:61" pos:end="123:79"><expr pos:start="123:61" pos:end="123:79"><operator pos:start="123:61" pos:end="123:61">&amp;</operator><name pos:start="123:62" pos:end="123:79"><name pos:start="123:62" pos:end="123:62">h</name><operator pos:start="123:63" pos:end="123:64">-&gt;</operator><name pos:start="123:65" pos:end="123:75">cabac_state</name><index pos:start="123:76" pos:end="123:79">[<expr pos:start="123:77" pos:end="123:78"><literal type="number" pos:start="123:77" pos:end="123:78">16</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="125:15" pos:end="131:13">else <block pos:start="125:20" pos:end="131:13">{<block_content pos:start="129:17" pos:end="129:82">

                <comment type="block" pos:start="127:17" pos:end="127:44">/* P_L0_D8x16, P_L0_D16x8 */</comment>

                <expr_stmt pos:start="129:17" pos:end="129:82"><expr pos:start="129:17" pos:end="129:81"><name pos:start="129:17" pos:end="129:23">mb_type</name><operator pos:start="129:24" pos:end="129:24">=</operator> <literal type="number" pos:start="129:26" pos:end="129:28">2</literal> <operator pos:start="129:28" pos:end="129:28">-</operator> <call pos:start="129:30" pos:end="129:81"><name pos:start="129:30" pos:end="129:47">get_cabac_noinline</name><argument_list pos:start="129:48" pos:end="129:81">( <argument pos:start="129:50" pos:end="129:58"><expr pos:start="129:50" pos:end="129:58"><operator pos:start="129:50" pos:end="129:50">&amp;</operator><name pos:start="129:51" pos:end="129:58"><name pos:start="129:51" pos:end="129:51">h</name><operator pos:start="129:52" pos:end="129:53">-&gt;</operator><name pos:start="129:54" pos:end="129:58">cabac</name></name></expr></argument>, <argument pos:start="129:61" pos:end="129:79"><expr pos:start="129:61" pos:end="129:79"><operator pos:start="129:61" pos:end="129:61">&amp;</operator><name pos:start="129:62" pos:end="129:79"><name pos:start="129:62" pos:end="129:62">h</name><operator pos:start="129:63" pos:end="129:64">-&gt;</operator><name pos:start="129:65" pos:end="129:75">cabac_state</name><index pos:start="129:76" pos:end="129:79">[<expr pos:start="129:77" pos:end="129:78"><literal type="number" pos:start="129:77" pos:end="129:78">17</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:69"><expr pos:start="133:13" pos:end="133:68"><name pos:start="133:13" pos:end="133:27">partition_count</name><operator pos:start="133:28" pos:end="133:28">=</operator> <name pos:start="133:30" pos:end="133:52"><name pos:start="133:30" pos:end="133:43">p_mb_type_info</name><index pos:start="133:44" pos:end="133:52">[<expr pos:start="133:45" pos:end="133:51"><name pos:start="133:45" pos:end="133:51">mb_type</name></expr>]</index></name><operator pos:start="133:53" pos:end="133:53">.</operator><name pos:start="133:54" pos:end="133:68">partition_count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:58"><expr pos:start="135:13" pos:end="135:57"><name pos:start="135:13" pos:end="135:19">mb_type</name><operator pos:start="135:20" pos:end="135:20">=</operator>         <name pos:start="135:30" pos:end="135:52"><name pos:start="135:30" pos:end="135:43">p_mb_type_info</name><index pos:start="135:44" pos:end="135:52">[<expr pos:start="135:45" pos:end="135:51"><name pos:start="135:45" pos:end="135:51">mb_type</name></expr>]</index></name><operator pos:start="135:53" pos:end="135:53">.</operator><name pos:start="135:54" pos:end="135:57">type</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="137:11" pos:end="143:9">else <block pos:start="137:16" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:33">

            <expr_stmt pos:start="139:13" pos:end="139:58"><expr pos:start="139:13" pos:end="139:57"><name pos:start="139:13" pos:end="139:19">mb_type</name><operator pos:start="139:20" pos:end="139:20">=</operator> <call pos:start="139:22" pos:end="139:57"><name pos:start="139:22" pos:end="139:47">decode_cabac_intra_mb_type</name><argument_list pos:start="139:48" pos:end="139:57">(<argument pos:start="139:49" pos:end="139:49"><expr pos:start="139:49" pos:end="139:49"><name pos:start="139:49" pos:end="139:49">h</name></expr></argument>, <argument pos:start="139:52" pos:end="139:53"><expr pos:start="139:52" pos:end="139:53"><literal type="number" pos:start="139:52" pos:end="139:53">17</literal></expr></argument>, <argument pos:start="139:56" pos:end="139:56"><expr pos:start="139:56" pos:end="139:56"><literal type="number" pos:start="139:56" pos:end="139:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="141:13" pos:end="141:33">goto <name pos:start="141:18" pos:end="141:32">decode_intra_mb</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="145:7" pos:end="165:5">else <block pos:start="145:12" pos:end="165:5">{<block_content pos:start="147:9" pos:end="163:46">

        <expr_stmt pos:start="147:9" pos:end="147:53"><expr pos:start="147:9" pos:end="147:52"><name pos:start="147:9" pos:end="147:15">mb_type</name><operator pos:start="147:16" pos:end="147:16">=</operator> <call pos:start="147:18" pos:end="147:52"><name pos:start="147:18" pos:end="147:43">decode_cabac_intra_mb_type</name><argument_list pos:start="147:44" pos:end="147:52">(<argument pos:start="147:45" pos:end="147:45"><expr pos:start="147:45" pos:end="147:45"><name pos:start="147:45" pos:end="147:45">h</name></expr></argument>, <argument pos:start="147:48" pos:end="147:48"><expr pos:start="147:48" pos:end="147:48"><literal type="number" pos:start="147:48" pos:end="147:48">3</literal></expr></argument>, <argument pos:start="147:51" pos:end="147:51"><expr pos:start="147:51" pos:end="147:51"><literal type="number" pos:start="147:51" pos:end="147:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="151:22"><if pos:start="149:9" pos:end="151:22">if<condition pos:start="149:11" pos:end="149:50">(<expr pos:start="149:12" pos:end="149:49"><name pos:start="149:12" pos:end="149:24"><name pos:start="149:12" pos:end="149:12">h</name><operator pos:start="149:13" pos:end="149:14">-&gt;</operator><name pos:start="149:15" pos:end="149:24">slice_type</name></name> <operator pos:start="149:26" pos:end="149:27">==</operator> <name pos:start="149:29" pos:end="149:38">FF_SI_TYPE</name> <operator pos:start="149:40" pos:end="149:41">&amp;&amp;</operator> <name pos:start="149:43" pos:end="149:49">mb_type</name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:22"><block_content pos:start="151:13" pos:end="151:22">

            <expr_stmt pos:start="151:13" pos:end="151:22"><expr pos:start="151:13" pos:end="151:21"><name pos:start="151:13" pos:end="151:19">mb_type</name><operator pos:start="151:20" pos:end="151:21">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:47"><expr pos:start="153:9" pos:end="153:46"><call pos:start="153:9" pos:end="153:46"><name pos:start="153:9" pos:end="153:14">assert</name><argument_list pos:start="153:15" pos:end="153:46">(<argument pos:start="153:16" pos:end="153:45"><expr pos:start="153:16" pos:end="153:45"><name pos:start="153:16" pos:end="153:32"><name pos:start="153:16" pos:end="153:16">h</name><operator pos:start="153:17" pos:end="153:18">-&gt;</operator><name pos:start="153:19" pos:end="153:32">slice_type_nos</name></name> <operator pos:start="153:34" pos:end="153:35">==</operator> <name pos:start="153:37" pos:end="153:45">FF_I_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="155:1" pos:end="155:16"><name pos:start="155:1" pos:end="155:15">decode_intra_mb</name>:</label>

        <expr_stmt pos:start="157:9" pos:end="157:28"><expr pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:23">partition_count</name> <operator pos:start="157:25" pos:end="157:25">=</operator> <literal type="number" pos:start="157:27" pos:end="157:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:41"><expr pos:start="159:9" pos:end="159:40"><name pos:start="159:9" pos:end="159:11">cbp</name><operator pos:start="159:12" pos:end="159:12">=</operator> <name pos:start="159:14" pos:end="159:36"><name pos:start="159:14" pos:end="159:27">i_mb_type_info</name><index pos:start="159:28" pos:end="159:36">[<expr pos:start="159:29" pos:end="159:35"><name pos:start="159:29" pos:end="159:35">mb_type</name></expr>]</index></name><operator pos:start="159:37" pos:end="159:37">.</operator><name pos:start="159:38" pos:end="159:40">cbp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:67"><expr pos:start="161:9" pos:end="161:66"><name pos:start="161:9" pos:end="161:31"><name pos:start="161:9" pos:end="161:9">h</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:31">intra16x16_pred_mode</name></name><operator pos:start="161:32" pos:end="161:32">=</operator> <name pos:start="161:34" pos:end="161:56"><name pos:start="161:34" pos:end="161:47">i_mb_type_info</name><index pos:start="161:48" pos:end="161:56">[<expr pos:start="161:49" pos:end="161:55"><name pos:start="161:49" pos:end="161:55">mb_type</name></expr>]</index></name><operator pos:start="161:57" pos:end="161:57">.</operator><name pos:start="161:58" pos:end="161:66">pred_mode</name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:46"><expr pos:start="163:9" pos:end="163:45"><name pos:start="163:9" pos:end="163:15">mb_type</name><operator pos:start="163:16" pos:end="163:16">=</operator> <name pos:start="163:18" pos:end="163:40"><name pos:start="163:18" pos:end="163:31">i_mb_type_info</name><index pos:start="163:32" pos:end="163:40">[<expr pos:start="163:33" pos:end="163:39"><name pos:start="163:33" pos:end="163:39">mb_type</name></expr>]</index></name><operator pos:start="163:41" pos:end="163:41">.</operator><name pos:start="163:42" pos:end="163:45">type</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="167:5" pos:end="169:38"><if pos:start="167:5" pos:end="169:38">if<condition pos:start="167:7" pos:end="167:16">(<expr pos:start="167:8" pos:end="167:15"><name pos:start="167:8" pos:end="167:15">MB_FIELD</name></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:38"><block_content pos:start="169:9" pos:end="169:38">

        <expr_stmt pos:start="169:9" pos:end="169:38"><expr pos:start="169:9" pos:end="169:37"><name pos:start="169:9" pos:end="169:15">mb_type</name> <operator pos:start="169:17" pos:end="169:18">|=</operator> <name pos:start="169:20" pos:end="169:37">MB_TYPE_INTERLACED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:42"><expr pos:start="173:5" pos:end="173:41"><name pos:start="173:5" pos:end="173:27"><name pos:start="173:5" pos:end="173:5">h</name><operator pos:start="173:6" pos:end="173:7">-&gt;</operator><name pos:start="173:8" pos:end="173:18">slice_table</name><index pos:start="173:19" pos:end="173:27">[ <expr pos:start="173:21" pos:end="173:25"><name pos:start="173:21" pos:end="173:25">mb_xy</name></expr> ]</index></name><operator pos:start="173:28" pos:end="173:28">=</operator> <name pos:start="173:30" pos:end="173:41"><name pos:start="173:30" pos:end="173:30">h</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:41">slice_num</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="177:5" pos:end="237:5"><if pos:start="177:5" pos:end="237:5">if<condition pos:start="177:7" pos:end="177:29">(<expr pos:start="177:8" pos:end="177:28"><call pos:start="177:8" pos:end="177:28"><name pos:start="177:8" pos:end="177:19">IS_INTRA_PCM</name><argument_list pos:start="177:20" pos:end="177:28">(<argument pos:start="177:21" pos:end="177:27"><expr pos:start="177:21" pos:end="177:27"><name pos:start="177:21" pos:end="177:27">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="177:31" pos:end="237:5">{<block_content pos:start="179:9" pos:end="235:17">

        <decl_stmt pos:start="179:9" pos:end="179:27"><decl pos:start="179:9" pos:end="179:26"><type pos:start="179:9" pos:end="179:23"><specifier pos:start="179:9" pos:end="179:13">const</specifier> <name pos:start="179:15" pos:end="179:21">uint8_t</name> <modifier pos:start="179:23" pos:end="179:23">*</modifier></type><name pos:start="179:24" pos:end="179:26">ptr</name></decl>;</decl_stmt>



        <comment type="line" pos:start="183:9" pos:end="183:73">// We assume these blocks are very rare so we do not optimize it.</comment>

        <comment type="line" pos:start="185:9" pos:end="185:80">// FIXME The two following lines get the bitstream position in the cabac</comment>

        <comment type="line" pos:start="187:9" pos:end="187:83">// decode, I think it should be done by a function in cabac.h (or cabac.c).</comment>

        <expr_stmt pos:start="189:9" pos:end="189:33"><expr pos:start="189:9" pos:end="189:32"><name pos:start="189:9" pos:end="189:11">ptr</name><operator pos:start="189:12" pos:end="189:12">=</operator> <name pos:start="189:14" pos:end="189:32"><name pos:start="189:14" pos:end="189:14">h</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:21">cabac</name><operator pos:start="189:22" pos:end="189:22">.</operator><name pos:start="189:23" pos:end="189:32">bytestream</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="191:9" pos:end="191:35"><if pos:start="191:9" pos:end="191:35">if<condition pos:start="191:11" pos:end="191:28">(<expr pos:start="191:12" pos:end="191:27"><name pos:start="191:12" pos:end="191:23"><name pos:start="191:12" pos:end="191:12">h</name><operator pos:start="191:13" pos:end="191:14">-&gt;</operator><name pos:start="191:15" pos:end="191:19">cabac</name><operator pos:start="191:20" pos:end="191:20">.</operator><name pos:start="191:21" pos:end="191:23">low</name></name><operator pos:start="191:24" pos:end="191:24">&amp;</operator><literal type="number" pos:start="191:25" pos:end="191:27">0x1</literal></expr>)</condition><block type="pseudo" pos:start="191:30" pos:end="191:35"><block_content pos:start="191:30" pos:end="191:35"> <expr_stmt pos:start="191:30" pos:end="191:35"><expr pos:start="191:30" pos:end="191:34"><name pos:start="191:30" pos:end="191:32">ptr</name><operator pos:start="191:33" pos:end="191:34">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="193:9" pos:end="197:9"><if pos:start="193:9" pos:end="197:9">if<condition pos:start="193:11" pos:end="193:26">(<expr pos:start="193:12" pos:end="193:25"><name pos:start="193:12" pos:end="193:21">CABAC_BITS</name><operator pos:start="193:22" pos:end="193:23">==</operator><literal type="number" pos:start="193:24" pos:end="193:25">16</literal></expr>)</condition><block pos:start="193:27" pos:end="197:9">{<block_content pos:start="195:13" pos:end="195:41">

            <if_stmt pos:start="195:13" pos:end="195:41"><if pos:start="195:13" pos:end="195:41">if<condition pos:start="195:15" pos:end="195:34">(<expr pos:start="195:16" pos:end="195:33"><name pos:start="195:16" pos:end="195:27"><name pos:start="195:16" pos:end="195:16">h</name><operator pos:start="195:17" pos:end="195:18">-&gt;</operator><name pos:start="195:19" pos:end="195:23">cabac</name><operator pos:start="195:24" pos:end="195:24">.</operator><name pos:start="195:25" pos:end="195:27">low</name></name><operator pos:start="195:28" pos:end="195:28">&amp;</operator><literal type="number" pos:start="195:29" pos:end="195:33">0x1FF</literal></expr>)</condition><block type="pseudo" pos:start="195:36" pos:end="195:41"><block_content pos:start="195:36" pos:end="195:41"> <expr_stmt pos:start="195:36" pos:end="195:41"><expr pos:start="195:36" pos:end="195:40"><name pos:start="195:36" pos:end="195:38">ptr</name><operator pos:start="195:39" pos:end="195:40">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="201:9" pos:end="201:76">// The pixels are stored in the same order as levels in h-&gt;mb array.</comment>

        <expr_stmt pos:start="203:9" pos:end="203:32"><expr pos:start="203:9" pos:end="203:31"><call pos:start="203:9" pos:end="203:31"><name pos:start="203:9" pos:end="203:14">memcpy</name><argument_list pos:start="203:15" pos:end="203:31">(<argument pos:start="203:16" pos:end="203:20"><expr pos:start="203:16" pos:end="203:20"><name pos:start="203:16" pos:end="203:20"><name pos:start="203:16" pos:end="203:16">h</name><operator pos:start="203:17" pos:end="203:18">-&gt;</operator><name pos:start="203:19" pos:end="203:20">mb</name></name></expr></argument>, <argument pos:start="203:23" pos:end="203:25"><expr pos:start="203:23" pos:end="203:25"><name pos:start="203:23" pos:end="203:25">ptr</name></expr></argument>, <argument pos:start="203:28" pos:end="203:30"><expr pos:start="203:28" pos:end="203:30"><literal type="number" pos:start="203:28" pos:end="203:30">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="203:34" pos:end="203:42"><expr pos:start="203:34" pos:end="203:41"><name pos:start="203:34" pos:end="203:36">ptr</name><operator pos:start="203:37" pos:end="203:38">+=</operator><literal type="number" pos:start="203:39" pos:end="203:41">256</literal></expr>;</expr_stmt>

        <if_stmt pos:start="205:9" pos:end="209:9"><if pos:start="205:9" pos:end="209:9">if<condition pos:start="205:11" pos:end="205:18">(<expr pos:start="205:12" pos:end="205:17"><name pos:start="205:12" pos:end="205:17">CHROMA</name></expr>)</condition><block pos:start="205:19" pos:end="209:9">{<block_content pos:start="207:13" pos:end="207:50">

            <expr_stmt pos:start="207:13" pos:end="207:40"><expr pos:start="207:13" pos:end="207:39"><call pos:start="207:13" pos:end="207:39"><name pos:start="207:13" pos:end="207:18">memcpy</name><argument_list pos:start="207:19" pos:end="207:39">(<argument pos:start="207:20" pos:end="207:28"><expr pos:start="207:20" pos:end="207:28"><name pos:start="207:20" pos:end="207:24"><name pos:start="207:20" pos:end="207:20">h</name><operator pos:start="207:21" pos:end="207:22">-&gt;</operator><name pos:start="207:23" pos:end="207:24">mb</name></name><operator pos:start="207:25" pos:end="207:25">+</operator><literal type="number" pos:start="207:26" pos:end="207:28">128</literal></expr></argument>, <argument pos:start="207:31" pos:end="207:33"><expr pos:start="207:31" pos:end="207:33"><name pos:start="207:31" pos:end="207:33">ptr</name></expr></argument>, <argument pos:start="207:36" pos:end="207:38"><expr pos:start="207:36" pos:end="207:38"><literal type="number" pos:start="207:36" pos:end="207:38">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="207:42" pos:end="207:50"><expr pos:start="207:42" pos:end="207:49"><name pos:start="207:42" pos:end="207:44">ptr</name><operator pos:start="207:45" pos:end="207:46">+=</operator><literal type="number" pos:start="207:47" pos:end="207:49">128</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="213:9" pos:end="213:77"><expr pos:start="213:9" pos:end="213:76"><call pos:start="213:9" pos:end="213:76"><name pos:start="213:9" pos:end="213:29">ff_init_cabac_decoder</name><argument_list pos:start="213:30" pos:end="213:76">(<argument pos:start="213:31" pos:end="213:39"><expr pos:start="213:31" pos:end="213:39"><operator pos:start="213:31" pos:end="213:31">&amp;</operator><name pos:start="213:32" pos:end="213:39"><name pos:start="213:32" pos:end="213:32">h</name><operator pos:start="213:33" pos:end="213:34">-&gt;</operator><name pos:start="213:35" pos:end="213:39">cabac</name></name></expr></argument>, <argument pos:start="213:42" pos:end="213:44"><expr pos:start="213:42" pos:end="213:44"><name pos:start="213:42" pos:end="213:44">ptr</name></expr></argument>, <argument pos:start="213:47" pos:end="213:75"><expr pos:start="213:47" pos:end="213:75"><name pos:start="213:47" pos:end="213:69"><name pos:start="213:47" pos:end="213:47">h</name><operator pos:start="213:48" pos:end="213:49">-&gt;</operator><name pos:start="213:50" pos:end="213:54">cabac</name><operator pos:start="213:55" pos:end="213:55">.</operator><name pos:start="213:56" pos:end="213:69">bytestream_end</name></name> <operator pos:start="213:71" pos:end="213:71">-</operator> <name pos:start="213:73" pos:end="213:75">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="217:9" pos:end="217:33">// All blocks are present</comment>

        <expr_stmt pos:start="219:9" pos:end="219:36"><expr pos:start="219:9" pos:end="219:35"><name pos:start="219:9" pos:end="219:27"><name pos:start="219:9" pos:end="219:9">h</name><operator pos:start="219:10" pos:end="219:11">-&gt;</operator><name pos:start="219:12" pos:end="219:20">cbp_table</name><index pos:start="219:21" pos:end="219:27">[<expr pos:start="219:22" pos:end="219:26"><name pos:start="219:22" pos:end="219:26">mb_xy</name></expr>]</index></name> <operator pos:start="219:29" pos:end="219:29">=</operator> <literal type="number" pos:start="219:31" pos:end="219:35">0x1ef</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:45"><expr pos:start="221:9" pos:end="221:44"><name pos:start="221:9" pos:end="221:40"><name pos:start="221:9" pos:end="221:9">h</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:33">chroma_pred_mode_table</name><index pos:start="221:34" pos:end="221:40">[<expr pos:start="221:35" pos:end="221:39"><name pos:start="221:35" pos:end="221:39">mb_xy</name></expr>]</index></name> <operator pos:start="221:42" pos:end="221:42">=</operator> <literal type="number" pos:start="221:44" pos:end="221:44">0</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="223:9" pos:end="223:44">// In deblocking, the quantizer is 0</comment>

        <expr_stmt pos:start="225:9" pos:end="225:50"><expr pos:start="225:9" pos:end="225:49"><name pos:start="225:9" pos:end="225:46"><name pos:start="225:9" pos:end="225:9">s</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:26">current_picture</name><operator pos:start="225:27" pos:end="225:27">.</operator><name pos:start="225:28" pos:end="225:39">qscale_table</name><index pos:start="225:40" pos:end="225:46">[<expr pos:start="225:41" pos:end="225:45"><name pos:start="225:41" pos:end="225:45">mb_xy</name></expr>]</index></name><operator pos:start="225:47" pos:end="225:47">=</operator> <literal type="number" pos:start="225:49" pos:end="225:49">0</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="227:9" pos:end="227:33">// All coeffs are present</comment>

        <expr_stmt pos:start="229:9" pos:end="229:49"><expr pos:start="229:9" pos:end="229:48"><call pos:start="229:9" pos:end="229:48"><name pos:start="229:9" pos:end="229:14">memset</name><argument_list pos:start="229:15" pos:end="229:48">(<argument pos:start="229:16" pos:end="229:39"><expr pos:start="229:16" pos:end="229:39"><name pos:start="229:16" pos:end="229:39"><name pos:start="229:16" pos:end="229:16">h</name><operator pos:start="229:17" pos:end="229:18">-&gt;</operator><name pos:start="229:19" pos:end="229:32">non_zero_count</name><index pos:start="229:33" pos:end="229:39">[<expr pos:start="229:34" pos:end="229:38"><name pos:start="229:34" pos:end="229:38">mb_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="229:42" pos:end="229:43"><expr pos:start="229:42" pos:end="229:43"><literal type="number" pos:start="229:42" pos:end="229:43">16</literal></expr></argument>, <argument pos:start="229:46" pos:end="229:47"><expr pos:start="229:46" pos:end="229:47"><literal type="number" pos:start="229:46" pos:end="229:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:51"><expr pos:start="231:9" pos:end="231:50"><name pos:start="231:9" pos:end="231:41"><name pos:start="231:9" pos:end="231:9">s</name><operator pos:start="231:10" pos:end="231:11">-&gt;</operator><name pos:start="231:12" pos:end="231:26">current_picture</name><operator pos:start="231:27" pos:end="231:27">.</operator><name pos:start="231:28" pos:end="231:34">mb_type</name><index pos:start="231:35" pos:end="231:41">[<expr pos:start="231:36" pos:end="231:40"><name pos:start="231:36" pos:end="231:40">mb_xy</name></expr>]</index></name><operator pos:start="231:42" pos:end="231:42">=</operator> <name pos:start="231:44" pos:end="231:50">mb_type</name></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:32"><expr pos:start="233:9" pos:end="233:31"><name pos:start="233:9" pos:end="233:27"><name pos:start="233:9" pos:end="233:9">h</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:27">last_qscale_diff</name></name> <operator pos:start="233:29" pos:end="233:29">=</operator> <literal type="number" pos:start="233:31" pos:end="233:31">0</literal></expr>;</expr_stmt>

        <return pos:start="235:9" pos:end="235:17">return <expr pos:start="235:16" pos:end="235:16"><literal type="number" pos:start="235:16" pos:end="235:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="241:5" pos:end="247:5"><if pos:start="241:5" pos:end="247:5">if<condition pos:start="241:7" pos:end="241:16">(<expr pos:start="241:8" pos:end="241:15"><name pos:start="241:8" pos:end="241:15">MB_MBAFF</name></expr>)</condition><block pos:start="241:17" pos:end="247:5">{<block_content pos:start="243:9" pos:end="245:30">

        <expr_stmt pos:start="243:9" pos:end="243:30"><expr pos:start="243:9" pos:end="243:29"><name pos:start="243:9" pos:end="243:23"><name pos:start="243:9" pos:end="243:9">h</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:20">ref_count</name><index pos:start="243:21" pos:end="243:23">[<expr pos:start="243:22" pos:end="243:22"><literal type="number" pos:start="243:22" pos:end="243:22">0</literal></expr>]</index></name> <operator pos:start="243:25" pos:end="243:27">&lt;&lt;=</operator> <literal type="number" pos:start="243:29" pos:end="243:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:30"><expr pos:start="245:9" pos:end="245:29"><name pos:start="245:9" pos:end="245:23"><name pos:start="245:9" pos:end="245:9">h</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:20">ref_count</name><index pos:start="245:21" pos:end="245:23">[<expr pos:start="245:22" pos:end="245:22"><literal type="number" pos:start="245:22" pos:end="245:22">1</literal></expr>]</index></name> <operator pos:start="245:25" pos:end="245:27">&lt;&lt;=</operator> <literal type="number" pos:start="245:29" pos:end="245:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="251:5" pos:end="251:31"><expr pos:start="251:5" pos:end="251:30"><call pos:start="251:5" pos:end="251:30"><name pos:start="251:5" pos:end="251:15">fill_caches</name><argument_list pos:start="251:16" pos:end="251:30">(<argument pos:start="251:17" pos:end="251:17"><expr pos:start="251:17" pos:end="251:17"><name pos:start="251:17" pos:end="251:17">h</name></expr></argument>, <argument pos:start="251:20" pos:end="251:26"><expr pos:start="251:20" pos:end="251:26"><name pos:start="251:20" pos:end="251:26">mb_type</name></expr></argument>, <argument pos:start="251:29" pos:end="251:29"><expr pos:start="251:29" pos:end="251:29"><literal type="number" pos:start="251:29" pos:end="251:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="255:5" pos:end="759:5"><if pos:start="255:5" pos:end="319:5">if<condition pos:start="255:7" pos:end="255:29">( <expr pos:start="255:9" pos:end="255:27"><call pos:start="255:9" pos:end="255:27"><name pos:start="255:9" pos:end="255:16">IS_INTRA</name><argument_list pos:start="255:17" pos:end="255:27">( <argument pos:start="255:19" pos:end="255:25"><expr pos:start="255:19" pos:end="255:25"><name pos:start="255:19" pos:end="255:25">mb_type</name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="255:31" pos:end="319:5">{<block_content pos:start="257:9" pos:end="317:9">

        <decl_stmt pos:start="257:9" pos:end="257:25"><decl pos:start="257:9" pos:end="257:13"><type pos:start="257:9" pos:end="257:11"><name pos:start="257:9" pos:end="257:11">int</name></type> <name pos:start="257:13" pos:end="257:13">i</name></decl>, <decl pos:start="257:16" pos:end="257:24"><type ref="prev" pos:start="257:9" pos:end="257:11"/><name pos:start="257:16" pos:end="257:24">pred_mode</name></decl>;</decl_stmt>

        <if_stmt pos:start="259:9" pos:end="301:9"><if pos:start="259:9" pos:end="295:9">if<condition pos:start="259:11" pos:end="259:36">( <expr pos:start="259:13" pos:end="259:34"><call pos:start="259:13" pos:end="259:34"><name pos:start="259:13" pos:end="259:23">IS_INTRA4x4</name><argument_list pos:start="259:24" pos:end="259:34">( <argument pos:start="259:26" pos:end="259:32"><expr pos:start="259:26" pos:end="259:32"><name pos:start="259:26" pos:end="259:32">mb_type</name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="259:38" pos:end="295:9">{<block_content pos:start="261:13" pos:end="293:68">

            <if_stmt pos:start="261:13" pos:end="289:13"><if pos:start="261:13" pos:end="275:13">if<condition pos:start="261:15" pos:end="261:71">( <expr pos:start="261:17" pos:end="261:69"><name pos:start="261:17" pos:end="261:30">dct8x8_allowed</name> <operator pos:start="261:32" pos:end="261:33">&amp;&amp;</operator> <call pos:start="261:35" pos:end="261:69"><name pos:start="261:35" pos:end="261:64">decode_cabac_mb_transform_size</name><argument_list pos:start="261:65" pos:end="261:69">( <argument pos:start="261:67" pos:end="261:67"><expr pos:start="261:67" pos:end="261:67"><name pos:start="261:67" pos:end="261:67">h</name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="261:73" pos:end="275:13">{<block_content pos:start="263:17" pos:end="273:17">

                <expr_stmt pos:start="263:17" pos:end="263:42"><expr pos:start="263:17" pos:end="263:41"><name pos:start="263:17" pos:end="263:23">mb_type</name> <operator pos:start="263:25" pos:end="263:26">|=</operator> <name pos:start="263:28" pos:end="263:41">MB_TYPE_8x8DCT</name></expr>;</expr_stmt>

                <for pos:start="265:17" pos:end="273:17">for<control pos:start="265:20" pos:end="265:42">( <init pos:start="265:22" pos:end="265:27"><expr pos:start="265:22" pos:end="265:26"><name pos:start="265:22" pos:end="265:22">i</name> <operator pos:start="265:24" pos:end="265:24">=</operator> <literal type="number" pos:start="265:26" pos:end="265:26">0</literal></expr>;</init> <condition pos:start="265:29" pos:end="265:35"><expr pos:start="265:29" pos:end="265:34"><name pos:start="265:29" pos:end="265:29">i</name> <operator pos:start="265:31" pos:end="265:31">&lt;</operator> <literal type="number" pos:start="265:33" pos:end="265:34">16</literal></expr>;</condition> <incr pos:start="265:37" pos:end="265:40"><expr pos:start="265:37" pos:end="265:40"><name pos:start="265:37" pos:end="265:37">i</name><operator pos:start="265:38" pos:end="265:39">+=</operator><literal type="number" pos:start="265:40" pos:end="265:40">4</literal></expr></incr> )</control> <block pos:start="265:44" pos:end="273:17">{<block_content pos:start="267:21" pos:end="271:97">

                    <decl_stmt pos:start="267:21" pos:end="267:55"><decl pos:start="267:21" pos:end="267:54"><type pos:start="267:21" pos:end="267:23"><name pos:start="267:21" pos:end="267:23">int</name></type> <name pos:start="267:25" pos:end="267:28">pred</name> <init pos:start="267:30" pos:end="267:54">= <expr pos:start="267:32" pos:end="267:54"><call pos:start="267:32" pos:end="267:54"><name pos:start="267:32" pos:end="267:46">pred_intra_mode</name><argument_list pos:start="267:47" pos:end="267:54">( <argument pos:start="267:49" pos:end="267:49"><expr pos:start="267:49" pos:end="267:49"><name pos:start="267:49" pos:end="267:49">h</name></expr></argument>, <argument pos:start="267:52" pos:end="267:52"><expr pos:start="267:52" pos:end="267:52"><name pos:start="267:52" pos:end="267:52">i</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="269:21" pos:end="269:77"><decl pos:start="269:21" pos:end="269:76"><type pos:start="269:21" pos:end="269:23"><name pos:start="269:21" pos:end="269:23">int</name></type> <name pos:start="269:25" pos:end="269:28">mode</name> <init pos:start="269:30" pos:end="269:76">= <expr pos:start="269:32" pos:end="269:76"><call pos:start="269:32" pos:end="269:76"><name pos:start="269:32" pos:end="269:65">decode_cabac_mb_intra4x4_pred_mode</name><argument_list pos:start="269:66" pos:end="269:76">( <argument pos:start="269:68" pos:end="269:68"><expr pos:start="269:68" pos:end="269:68"><name pos:start="269:68" pos:end="269:68">h</name></expr></argument>, <argument pos:start="269:71" pos:end="269:74"><expr pos:start="269:71" pos:end="269:74"><name pos:start="269:71" pos:end="269:74">pred</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="271:21" pos:end="271:97"><expr pos:start="271:21" pos:end="271:96"><call pos:start="271:21" pos:end="271:96"><name pos:start="271:21" pos:end="271:34">fill_rectangle</name><argument_list pos:start="271:35" pos:end="271:96">( <argument pos:start="271:37" pos:end="271:76"><expr pos:start="271:37" pos:end="271:76"><operator pos:start="271:37" pos:end="271:37">&amp;</operator><name pos:start="271:38" pos:end="271:76"><name pos:start="271:38" pos:end="271:38">h</name><operator pos:start="271:39" pos:end="271:40">-&gt;</operator><name pos:start="271:41" pos:end="271:64">intra4x4_pred_mode_cache</name><index pos:start="271:65" pos:end="271:76">[ <expr pos:start="271:67" pos:end="271:74"><name pos:start="271:67" pos:end="271:74"><name pos:start="271:67" pos:end="271:71">scan8</name><index pos:start="271:72" pos:end="271:74">[<expr pos:start="271:73" pos:end="271:73"><name pos:start="271:73" pos:end="271:73">i</name></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="271:79" pos:end="271:79"><expr pos:start="271:79" pos:end="271:79"><literal type="number" pos:start="271:79" pos:end="271:79">2</literal></expr></argument>, <argument pos:start="271:82" pos:end="271:82"><expr pos:start="271:82" pos:end="271:82"><literal type="number" pos:start="271:82" pos:end="271:82">2</literal></expr></argument>, <argument pos:start="271:85" pos:end="271:85"><expr pos:start="271:85" pos:end="271:85"><literal type="number" pos:start="271:85" pos:end="271:85">8</literal></expr></argument>, <argument pos:start="271:88" pos:end="271:91"><expr pos:start="271:88" pos:end="271:91"><name pos:start="271:88" pos:end="271:91">mode</name></expr></argument>, <argument pos:start="271:94" pos:end="271:94"><expr pos:start="271:94" pos:end="271:94"><literal type="number" pos:start="271:94" pos:end="271:94">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="275:15" pos:end="289:13">else <block pos:start="275:20" pos:end="289:13">{<block_content pos:start="277:17" pos:end="287:17">

                <for pos:start="277:17" pos:end="287:17">for<control pos:start="277:20" pos:end="277:41">( <init pos:start="277:22" pos:end="277:27"><expr pos:start="277:22" pos:end="277:26"><name pos:start="277:22" pos:end="277:22">i</name> <operator pos:start="277:24" pos:end="277:24">=</operator> <literal type="number" pos:start="277:26" pos:end="277:26">0</literal></expr>;</init> <condition pos:start="277:29" pos:end="277:35"><expr pos:start="277:29" pos:end="277:34"><name pos:start="277:29" pos:end="277:29">i</name> <operator pos:start="277:31" pos:end="277:31">&lt;</operator> <literal type="number" pos:start="277:33" pos:end="277:34">16</literal></expr>;</condition> <incr pos:start="277:37" pos:end="277:39"><expr pos:start="277:37" pos:end="277:39"><name pos:start="277:37" pos:end="277:37">i</name><operator pos:start="277:38" pos:end="277:39">++</operator></expr></incr> )</control> <block pos:start="277:43" pos:end="287:17">{<block_content pos:start="279:21" pos:end="281:108">

                    <decl_stmt pos:start="279:21" pos:end="279:55"><decl pos:start="279:21" pos:end="279:54"><type pos:start="279:21" pos:end="279:23"><name pos:start="279:21" pos:end="279:23">int</name></type> <name pos:start="279:25" pos:end="279:28">pred</name> <init pos:start="279:30" pos:end="279:54">= <expr pos:start="279:32" pos:end="279:54"><call pos:start="279:32" pos:end="279:54"><name pos:start="279:32" pos:end="279:46">pred_intra_mode</name><argument_list pos:start="279:47" pos:end="279:54">( <argument pos:start="279:49" pos:end="279:49"><expr pos:start="279:49" pos:end="279:49"><name pos:start="279:49" pos:end="279:49">h</name></expr></argument>, <argument pos:start="279:52" pos:end="279:52"><expr pos:start="279:52" pos:end="279:52"><name pos:start="279:52" pos:end="279:52">i</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="281:21" pos:end="281:108"><expr pos:start="281:21" pos:end="281:107"><name pos:start="281:21" pos:end="281:59"><name pos:start="281:21" pos:end="281:21">h</name><operator pos:start="281:22" pos:end="281:23">-&gt;</operator><name pos:start="281:24" pos:end="281:47">intra4x4_pred_mode_cache</name><index pos:start="281:48" pos:end="281:59">[ <expr pos:start="281:50" pos:end="281:57"><name pos:start="281:50" pos:end="281:57"><name pos:start="281:50" pos:end="281:54">scan8</name><index pos:start="281:55" pos:end="281:57">[<expr pos:start="281:56" pos:end="281:56"><name pos:start="281:56" pos:end="281:56">i</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="281:61" pos:end="281:61">=</operator> <call pos:start="281:63" pos:end="281:107"><name pos:start="281:63" pos:end="281:96">decode_cabac_mb_intra4x4_pred_mode</name><argument_list pos:start="281:97" pos:end="281:107">( <argument pos:start="281:99" pos:end="281:99"><expr pos:start="281:99" pos:end="281:99"><name pos:start="281:99" pos:end="281:99">h</name></expr></argument>, <argument pos:start="281:102" pos:end="281:105"><expr pos:start="281:102" pos:end="281:105"><name pos:start="281:102" pos:end="281:105">pred</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>



                <comment type="line" pos:start="285:17" pos:end="285:124">//av_log( s-&gt;avctx, AV_LOG_ERROR, "i4x4 pred=%d mode=%d\n", pred, h-&gt;intra4x4_pred_mode_cache[ scan8[i] ] );</comment>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:50"><expr pos:start="291:13" pos:end="291:49"><call pos:start="291:13" pos:end="291:49"><name pos:start="291:13" pos:end="291:46">ff_h264_write_back_intra_pred_mode</name><argument_list pos:start="291:47" pos:end="291:49">(<argument pos:start="291:48" pos:end="291:48"><expr pos:start="291:48" pos:end="291:48"><name pos:start="291:48" pos:end="291:48">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="293:13" pos:end="293:68"><if pos:start="293:13" pos:end="293:68">if<condition pos:start="293:15" pos:end="293:57">( <expr pos:start="293:17" pos:end="293:55"><call pos:start="293:17" pos:end="293:51"><name pos:start="293:17" pos:end="293:48">ff_h264_check_intra4x4_pred_mode</name><argument_list pos:start="293:49" pos:end="293:51">(<argument pos:start="293:50" pos:end="293:50"><expr pos:start="293:50" pos:end="293:50"><name pos:start="293:50" pos:end="293:50">h</name></expr></argument>)</argument_list></call> <operator pos:start="293:53" pos:end="293:53">&lt;</operator> <literal type="number" pos:start="293:55" pos:end="293:55">0</literal></expr> )</condition><block type="pseudo" pos:start="293:59" pos:end="293:68"><block_content pos:start="293:59" pos:end="293:68"> <return pos:start="293:59" pos:end="293:68">return <expr pos:start="293:66" pos:end="293:67"><operator pos:start="293:66" pos:end="293:66">-</operator><literal type="number" pos:start="293:67" pos:end="293:67">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="295:11" pos:end="301:9">else <block pos:start="295:16" pos:end="301:9">{<block_content pos:start="297:13" pos:end="299:56">

            <expr_stmt pos:start="297:13" pos:end="297:97"><expr pos:start="297:13" pos:end="297:96"><name pos:start="297:13" pos:end="297:35"><name pos:start="297:13" pos:end="297:13">h</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:35">intra16x16_pred_mode</name></name><operator pos:start="297:36" pos:end="297:36">=</operator> <call pos:start="297:38" pos:end="297:96"><name pos:start="297:38" pos:end="297:66">ff_h264_check_intra_pred_mode</name><argument_list pos:start="297:67" pos:end="297:96">( <argument pos:start="297:69" pos:end="297:69"><expr pos:start="297:69" pos:end="297:69"><name pos:start="297:69" pos:end="297:69">h</name></expr></argument>, <argument pos:start="297:72" pos:end="297:94"><expr pos:start="297:72" pos:end="297:94"><name pos:start="297:72" pos:end="297:94"><name pos:start="297:72" pos:end="297:72">h</name><operator pos:start="297:73" pos:end="297:74">-&gt;</operator><name pos:start="297:75" pos:end="297:94">intra16x16_pred_mode</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="299:13" pos:end="299:56"><if pos:start="299:13" pos:end="299:56">if<condition pos:start="299:15" pos:end="299:45">( <expr pos:start="299:17" pos:end="299:43"><name pos:start="299:17" pos:end="299:39"><name pos:start="299:17" pos:end="299:17">h</name><operator pos:start="299:18" pos:end="299:19">-&gt;</operator><name pos:start="299:20" pos:end="299:39">intra16x16_pred_mode</name></name> <operator pos:start="299:41" pos:end="299:41">&lt;</operator> <literal type="number" pos:start="299:43" pos:end="299:43">0</literal></expr> )</condition><block type="pseudo" pos:start="299:47" pos:end="299:56"><block_content pos:start="299:47" pos:end="299:56"> <return pos:start="299:47" pos:end="299:56">return <expr pos:start="299:54" pos:end="299:55"><operator pos:start="299:54" pos:end="299:54">-</operator><literal type="number" pos:start="299:55" pos:end="299:55">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="303:9" pos:end="317:9"><if pos:start="303:9" pos:end="317:9">if<condition pos:start="303:11" pos:end="303:18">(<expr pos:start="303:12" pos:end="303:17"><name pos:start="303:12" pos:end="303:17">CHROMA</name></expr>)</condition><block pos:start="303:19" pos:end="317:9">{<block_content pos:start="305:13" pos:end="315:43">

            <expr_stmt pos:start="305:13" pos:end="307:84"><expr pos:start="305:13" pos:end="307:83"><name pos:start="305:13" pos:end="305:44"><name pos:start="305:13" pos:end="305:13">h</name><operator pos:start="305:14" pos:end="305:15">-&gt;</operator><name pos:start="305:16" pos:end="305:37">chroma_pred_mode_table</name><index pos:start="305:38" pos:end="305:44">[<expr pos:start="305:39" pos:end="305:43"><name pos:start="305:39" pos:end="305:43">mb_xy</name></expr>]</index></name> <operator pos:start="305:46" pos:end="305:46">=</operator>

            <name pos:start="307:13" pos:end="307:21">pred_mode</name>                        <operator pos:start="307:46" pos:end="307:46">=</operator> <call pos:start="307:48" pos:end="307:83"><name pos:start="307:48" pos:end="307:78">decode_cabac_mb_chroma_pre_mode</name><argument_list pos:start="307:79" pos:end="307:83">( <argument pos:start="307:81" pos:end="307:81"><expr pos:start="307:81" pos:end="307:81"><name pos:start="307:81" pos:end="307:81">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="311:13" pos:end="311:69"><expr pos:start="311:13" pos:end="311:68"><name pos:start="311:13" pos:end="311:21">pred_mode</name><operator pos:start="311:22" pos:end="311:22">=</operator> <call pos:start="311:24" pos:end="311:68"><name pos:start="311:24" pos:end="311:52">ff_h264_check_intra_pred_mode</name><argument_list pos:start="311:53" pos:end="311:68">( <argument pos:start="311:55" pos:end="311:55"><expr pos:start="311:55" pos:end="311:55"><name pos:start="311:55" pos:end="311:55">h</name></expr></argument>, <argument pos:start="311:58" pos:end="311:66"><expr pos:start="311:58" pos:end="311:66"><name pos:start="311:58" pos:end="311:66">pred_mode</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="313:13" pos:end="313:42"><if pos:start="313:13" pos:end="313:42">if<condition pos:start="313:15" pos:end="313:31">( <expr pos:start="313:17" pos:end="313:29"><name pos:start="313:17" pos:end="313:25">pred_mode</name> <operator pos:start="313:27" pos:end="313:27">&lt;</operator> <literal type="number" pos:start="313:29" pos:end="313:29">0</literal></expr> )</condition><block type="pseudo" pos:start="313:33" pos:end="313:42"><block_content pos:start="313:33" pos:end="313:42"> <return pos:start="313:33" pos:end="313:42">return <expr pos:start="313:40" pos:end="313:41"><operator pos:start="313:40" pos:end="313:40">-</operator><literal type="number" pos:start="313:41" pos:end="313:41">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:43"><expr pos:start="315:13" pos:end="315:42"><name pos:start="315:13" pos:end="315:31"><name pos:start="315:13" pos:end="315:13">h</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:31">chroma_pred_mode</name></name><operator pos:start="315:32" pos:end="315:32">=</operator> <name pos:start="315:34" pos:end="315:42">pred_mode</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="319:7" pos:end="545:5">else if<condition pos:start="319:14" pos:end="319:37">( <expr pos:start="319:16" pos:end="319:35"><name pos:start="319:16" pos:end="319:30">partition_count</name> <operator pos:start="319:32" pos:end="319:33">==</operator> <literal type="number" pos:start="319:35" pos:end="319:35">4</literal></expr> )</condition> <block pos:start="319:39" pos:end="545:5">{<block_content pos:start="321:9" pos:end="543:9">

        <decl_stmt pos:start="321:9" pos:end="321:58"><decl pos:start="321:9" pos:end="321:13"><type pos:start="321:9" pos:end="321:11"><name pos:start="321:9" pos:end="321:11">int</name></type> <name pos:start="321:13" pos:end="321:13">i</name></decl>, <decl pos:start="321:16" pos:end="321:16"><type ref="prev" pos:start="321:9" pos:end="321:11"/><name pos:start="321:16" pos:end="321:16">j</name></decl>, <decl pos:start="321:19" pos:end="321:40"><type ref="prev" pos:start="321:9" pos:end="321:11"/><name pos:start="321:19" pos:end="321:40"><name pos:start="321:19" pos:end="321:37">sub_partition_count</name><index pos:start="321:38" pos:end="321:40">[<expr pos:start="321:39" pos:end="321:39"><literal type="number" pos:start="321:39" pos:end="321:39">4</literal></expr>]</index></name></decl>, <decl pos:start="321:43" pos:end="321:46"><type ref="prev" pos:start="321:9" pos:end="321:11"/><name pos:start="321:43" pos:end="321:46">list</name></decl>, <decl pos:start="321:49" pos:end="321:57"><type ref="prev" pos:start="321:9" pos:end="321:11"/><name pos:start="321:49" pos:end="321:57"><name pos:start="321:49" pos:end="321:51">ref</name><index pos:start="321:52" pos:end="321:54">[<expr pos:start="321:53" pos:end="321:53"><literal type="number" pos:start="321:53" pos:end="321:53">2</literal></expr>]</index><index pos:start="321:55" pos:end="321:57">[<expr pos:start="321:56" pos:end="321:56"><literal type="number" pos:start="321:56" pos:end="321:56">4</literal></expr>]</index></name></decl>;</decl_stmt>



        <if_stmt pos:start="325:9" pos:end="375:9"><if pos:start="325:9" pos:end="363:9">if<condition pos:start="325:11" pos:end="325:44">( <expr pos:start="325:13" pos:end="325:42"><name pos:start="325:13" pos:end="325:29"><name pos:start="325:13" pos:end="325:13">h</name><operator pos:start="325:14" pos:end="325:15">-&gt;</operator><name pos:start="325:16" pos:end="325:29">slice_type_nos</name></name> <operator pos:start="325:31" pos:end="325:32">==</operator> <name pos:start="325:34" pos:end="325:42">FF_B_TYPE</name></expr> )</condition> <block pos:start="325:46" pos:end="363:9">{<block_content pos:start="327:13" pos:end="361:13">

            <for pos:start="327:13" pos:end="335:13">for<control pos:start="327:16" pos:end="327:36">( <init pos:start="327:18" pos:end="327:23"><expr pos:start="327:18" pos:end="327:22"><name pos:start="327:18" pos:end="327:18">i</name> <operator pos:start="327:20" pos:end="327:20">=</operator> <literal type="number" pos:start="327:22" pos:end="327:22">0</literal></expr>;</init> <condition pos:start="327:25" pos:end="327:30"><expr pos:start="327:25" pos:end="327:29"><name pos:start="327:25" pos:end="327:25">i</name> <operator pos:start="327:27" pos:end="327:27">&lt;</operator> <literal type="number" pos:start="327:29" pos:end="327:29">4</literal></expr>;</condition> <incr pos:start="327:32" pos:end="327:34"><expr pos:start="327:32" pos:end="327:34"><name pos:start="327:32" pos:end="327:32">i</name><operator pos:start="327:33" pos:end="327:34">++</operator></expr></incr> )</control> <block pos:start="327:38" pos:end="335:13">{<block_content pos:start="329:17" pos:end="333:85">

                <expr_stmt pos:start="329:17" pos:end="329:68"><expr pos:start="329:17" pos:end="329:67"><name pos:start="329:17" pos:end="329:33"><name pos:start="329:17" pos:end="329:17">h</name><operator pos:start="329:18" pos:end="329:19">-&gt;</operator><name pos:start="329:20" pos:end="329:30">sub_mb_type</name><index pos:start="329:31" pos:end="329:33">[<expr pos:start="329:32" pos:end="329:32"><name pos:start="329:32" pos:end="329:32">i</name></expr>]</index></name> <operator pos:start="329:35" pos:end="329:35">=</operator> <call pos:start="329:37" pos:end="329:67"><name pos:start="329:37" pos:end="329:62">decode_cabac_b_mb_sub_type</name><argument_list pos:start="329:63" pos:end="329:67">( <argument pos:start="329:65" pos:end="329:65"><expr pos:start="329:65" pos:end="329:65"><name pos:start="329:65" pos:end="329:65">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="331:17" pos:end="331:96"><expr pos:start="331:17" pos:end="331:95"><name pos:start="331:17" pos:end="331:38"><name pos:start="331:17" pos:end="331:35">sub_partition_count</name><index pos:start="331:36" pos:end="331:38">[<expr pos:start="331:37" pos:end="331:37"><name pos:start="331:37" pos:end="331:37">i</name></expr>]</index></name><operator pos:start="331:39" pos:end="331:39">=</operator> <name pos:start="331:41" pos:end="331:79"><name pos:start="331:41" pos:end="331:58">b_sub_mb_type_info</name><index pos:start="331:59" pos:end="331:79">[ <expr pos:start="331:61" pos:end="331:77"><name pos:start="331:61" pos:end="331:77"><name pos:start="331:61" pos:end="331:61">h</name><operator pos:start="331:62" pos:end="331:63">-&gt;</operator><name pos:start="331:64" pos:end="331:74">sub_mb_type</name><index pos:start="331:75" pos:end="331:77">[<expr pos:start="331:76" pos:end="331:76"><name pos:start="331:76" pos:end="331:76">i</name></expr>]</index></name></expr> ]</index></name><operator pos:start="331:80" pos:end="331:80">.</operator><name pos:start="331:81" pos:end="331:95">partition_count</name></expr>;</expr_stmt>

                <expr_stmt pos:start="333:17" pos:end="333:85"><expr pos:start="333:17" pos:end="333:84"><name pos:start="333:17" pos:end="333:33"><name pos:start="333:17" pos:end="333:17">h</name><operator pos:start="333:18" pos:end="333:19">-&gt;</operator><name pos:start="333:20" pos:end="333:30">sub_mb_type</name><index pos:start="333:31" pos:end="333:33">[<expr pos:start="333:32" pos:end="333:32"><name pos:start="333:32" pos:end="333:32">i</name></expr>]</index></name><operator pos:start="333:34" pos:end="333:34">=</operator>      <name pos:start="333:41" pos:end="333:79"><name pos:start="333:41" pos:end="333:58">b_sub_mb_type_info</name><index pos:start="333:59" pos:end="333:79">[ <expr pos:start="333:61" pos:end="333:77"><name pos:start="333:61" pos:end="333:77"><name pos:start="333:61" pos:end="333:61">h</name><operator pos:start="333:62" pos:end="333:63">-&gt;</operator><name pos:start="333:64" pos:end="333:74">sub_mb_type</name><index pos:start="333:75" pos:end="333:77">[<expr pos:start="333:76" pos:end="333:76"><name pos:start="333:76" pos:end="333:76">i</name></expr>]</index></name></expr> ]</index></name><operator pos:start="333:80" pos:end="333:80">.</operator><name pos:start="333:81" pos:end="333:84">type</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="337:13" pos:end="361:13"><if pos:start="337:13" pos:end="361:13">if<condition pos:start="337:15" pos:end="339:66">( <expr pos:start="337:17" pos:end="339:64"><call pos:start="337:17" pos:end="339:64"><name pos:start="337:17" pos:end="337:25">IS_DIRECT</name><argument_list pos:start="337:26" pos:end="339:64">(<argument pos:start="337:27" pos:end="339:63"><expr pos:start="337:27" pos:end="339:63"><name pos:start="337:27" pos:end="337:43"><name pos:start="337:27" pos:end="337:27">h</name><operator pos:start="337:28" pos:end="337:29">-&gt;</operator><name pos:start="337:30" pos:end="337:40">sub_mb_type</name><index pos:start="337:41" pos:end="337:43">[<expr pos:start="337:42" pos:end="337:42"><literal type="number" pos:start="337:42" pos:end="337:42">0</literal></expr>]</index></name> <operator pos:start="337:45" pos:end="337:45">|</operator> <name pos:start="337:47" pos:end="337:63"><name pos:start="337:47" pos:end="337:47">h</name><operator pos:start="337:48" pos:end="337:49">-&gt;</operator><name pos:start="337:50" pos:end="337:60">sub_mb_type</name><index pos:start="337:61" pos:end="337:63">[<expr pos:start="337:62" pos:end="337:62"><literal type="number" pos:start="337:62" pos:end="337:62">1</literal></expr>]</index></name> <operator pos:start="337:65" pos:end="337:65">|</operator>

                          <name pos:start="339:27" pos:end="339:43"><name pos:start="339:27" pos:end="339:27">h</name><operator pos:start="339:28" pos:end="339:29">-&gt;</operator><name pos:start="339:30" pos:end="339:40">sub_mb_type</name><index pos:start="339:41" pos:end="339:43">[<expr pos:start="339:42" pos:end="339:42"><literal type="number" pos:start="339:42" pos:end="339:42">2</literal></expr>]</index></name> <operator pos:start="339:45" pos:end="339:45">|</operator> <name pos:start="339:47" pos:end="339:63"><name pos:start="339:47" pos:end="339:47">h</name><operator pos:start="339:48" pos:end="339:49">-&gt;</operator><name pos:start="339:50" pos:end="339:60">sub_mb_type</name><index pos:start="339:61" pos:end="339:63">[<expr pos:start="339:62" pos:end="339:62"><literal type="number" pos:start="339:62" pos:end="339:62">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> )</condition> <block pos:start="339:68" pos:end="361:13">{<block_content pos:start="341:17" pos:end="359:17">

                <expr_stmt pos:start="341:17" pos:end="341:56"><expr pos:start="341:17" pos:end="341:55"><call pos:start="341:17" pos:end="341:55"><name pos:start="341:17" pos:end="341:42">ff_h264_pred_direct_motion</name><argument_list pos:start="341:43" pos:end="341:55">(<argument pos:start="341:44" pos:end="341:44"><expr pos:start="341:44" pos:end="341:44"><name pos:start="341:44" pos:end="341:44">h</name></expr></argument>, <argument pos:start="341:47" pos:end="341:54"><expr pos:start="341:47" pos:end="341:54"><operator pos:start="341:47" pos:end="341:47">&amp;</operator><name pos:start="341:48" pos:end="341:54">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="343:17" pos:end="349:64"><expr pos:start="343:17" pos:end="349:63"><name pos:start="343:17" pos:end="343:41"><name pos:start="343:17" pos:end="343:17">h</name><operator pos:start="343:18" pos:end="343:19">-&gt;</operator><name pos:start="343:20" pos:end="343:28">ref_cache</name><index pos:start="343:29" pos:end="343:31">[<expr pos:start="343:30" pos:end="343:30"><literal type="number" pos:start="343:30" pos:end="343:30">0</literal></expr>]</index><index pos:start="343:32" pos:end="343:41">[<expr pos:start="343:33" pos:end="343:40"><name pos:start="343:33" pos:end="343:40"><name pos:start="343:33" pos:end="343:37">scan8</name><index pos:start="343:38" pos:end="343:40">[<expr pos:start="343:39" pos:end="343:39"><literal type="number" pos:start="343:39" pos:end="343:39">4</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="343:43" pos:end="343:43">=</operator>

                <name pos:start="345:17" pos:end="345:41"><name pos:start="345:17" pos:end="345:17">h</name><operator pos:start="345:18" pos:end="345:19">-&gt;</operator><name pos:start="345:20" pos:end="345:28">ref_cache</name><index pos:start="345:29" pos:end="345:31">[<expr pos:start="345:30" pos:end="345:30"><literal type="number" pos:start="345:30" pos:end="345:30">1</literal></expr>]</index><index pos:start="345:32" pos:end="345:41">[<expr pos:start="345:33" pos:end="345:40"><name pos:start="345:33" pos:end="345:40"><name pos:start="345:33" pos:end="345:37">scan8</name><index pos:start="345:38" pos:end="345:40">[<expr pos:start="345:39" pos:end="345:39"><literal type="number" pos:start="345:39" pos:end="345:39">4</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="345:43" pos:end="345:43">=</operator>

                <name pos:start="347:17" pos:end="347:42"><name pos:start="347:17" pos:end="347:17">h</name><operator pos:start="347:18" pos:end="347:19">-&gt;</operator><name pos:start="347:20" pos:end="347:28">ref_cache</name><index pos:start="347:29" pos:end="347:31">[<expr pos:start="347:30" pos:end="347:30"><literal type="number" pos:start="347:30" pos:end="347:30">0</literal></expr>]</index><index pos:start="347:32" pos:end="347:42">[<expr pos:start="347:33" pos:end="347:41"><name pos:start="347:33" pos:end="347:41"><name pos:start="347:33" pos:end="347:37">scan8</name><index pos:start="347:38" pos:end="347:41">[<expr pos:start="347:39" pos:end="347:40"><literal type="number" pos:start="347:39" pos:end="347:40">12</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="347:44" pos:end="347:44">=</operator>

                <name pos:start="349:17" pos:end="349:42"><name pos:start="349:17" pos:end="349:17">h</name><operator pos:start="349:18" pos:end="349:19">-&gt;</operator><name pos:start="349:20" pos:end="349:28">ref_cache</name><index pos:start="349:29" pos:end="349:31">[<expr pos:start="349:30" pos:end="349:30"><literal type="number" pos:start="349:30" pos:end="349:30">1</literal></expr>]</index><index pos:start="349:32" pos:end="349:42">[<expr pos:start="349:33" pos:end="349:41"><name pos:start="349:33" pos:end="349:41"><name pos:start="349:33" pos:end="349:37">scan8</name><index pos:start="349:38" pos:end="349:41">[<expr pos:start="349:39" pos:end="349:40"><literal type="number" pos:start="349:39" pos:end="349:40">12</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="349:44" pos:end="349:44">=</operator> <name pos:start="349:46" pos:end="349:63">PART_NOT_AVAILABLE</name></expr>;</expr_stmt>

                <if_stmt pos:start="351:17" pos:end="359:17"><if pos:start="351:17" pos:end="359:17">if<condition pos:start="351:19" pos:end="351:64">( <expr pos:start="351:21" pos:end="351:62"><name pos:start="351:21" pos:end="351:35"><name pos:start="351:21" pos:end="351:21">h</name><operator pos:start="351:22" pos:end="351:23">-&gt;</operator><name pos:start="351:24" pos:end="351:32">ref_count</name><index pos:start="351:33" pos:end="351:35">[<expr pos:start="351:34" pos:end="351:34"><literal type="number" pos:start="351:34" pos:end="351:34">0</literal></expr>]</index></name> <operator pos:start="351:37" pos:end="351:37">&gt;</operator> <literal type="number" pos:start="351:39" pos:end="351:39">1</literal> <operator pos:start="351:41" pos:end="351:42">||</operator> <name pos:start="351:44" pos:end="351:58"><name pos:start="351:44" pos:end="351:44">h</name><operator pos:start="351:45" pos:end="351:46">-&gt;</operator><name pos:start="351:47" pos:end="351:55">ref_count</name><index pos:start="351:56" pos:end="351:58">[<expr pos:start="351:57" pos:end="351:57"><literal type="number" pos:start="351:57" pos:end="351:57">1</literal></expr>]</index></name> <operator pos:start="351:60" pos:end="351:60">&gt;</operator> <literal type="number" pos:start="351:62" pos:end="351:62">1</literal></expr> )</condition> <block pos:start="351:66" pos:end="359:17">{<block_content pos:start="353:21" pos:end="357:90">

                    <for pos:start="353:21" pos:end="357:90">for<control pos:start="353:24" pos:end="353:44">( <init pos:start="353:26" pos:end="353:31"><expr pos:start="353:26" pos:end="353:30"><name pos:start="353:26" pos:end="353:26">i</name> <operator pos:start="353:28" pos:end="353:28">=</operator> <literal type="number" pos:start="353:30" pos:end="353:30">0</literal></expr>;</init> <condition pos:start="353:33" pos:end="353:38"><expr pos:start="353:33" pos:end="353:37"><name pos:start="353:33" pos:end="353:33">i</name> <operator pos:start="353:35" pos:end="353:35">&lt;</operator> <literal type="number" pos:start="353:37" pos:end="353:37">4</literal></expr>;</condition> <incr pos:start="353:40" pos:end="353:42"><expr pos:start="353:40" pos:end="353:42"><name pos:start="353:40" pos:end="353:40">i</name><operator pos:start="353:41" pos:end="353:42">++</operator></expr></incr> )</control><block type="pseudo" pos:start="355:25" pos:end="357:90"><block_content pos:start="355:25" pos:end="357:90">

                        <if_stmt pos:start="355:25" pos:end="357:90"><if pos:start="355:25" pos:end="357:90">if<condition pos:start="355:27" pos:end="355:58">( <expr pos:start="355:29" pos:end="355:56"><call pos:start="355:29" pos:end="355:56"><name pos:start="355:29" pos:end="355:37">IS_DIRECT</name><argument_list pos:start="355:38" pos:end="355:56">(<argument pos:start="355:39" pos:end="355:55"><expr pos:start="355:39" pos:end="355:55"><name pos:start="355:39" pos:end="355:55"><name pos:start="355:39" pos:end="355:39">h</name><operator pos:start="355:40" pos:end="355:41">-&gt;</operator><name pos:start="355:42" pos:end="355:52">sub_mb_type</name><index pos:start="355:53" pos:end="355:55">[<expr pos:start="355:54" pos:end="355:54"><name pos:start="355:54" pos:end="355:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo" pos:start="357:29" pos:end="357:90"><block_content pos:start="357:29" pos:end="357:90">

                            <expr_stmt pos:start="357:29" pos:end="357:90"><expr pos:start="357:29" pos:end="357:89"><call pos:start="357:29" pos:end="357:89"><name pos:start="357:29" pos:end="357:42">fill_rectangle</name><argument_list pos:start="357:43" pos:end="357:89">( <argument pos:start="357:45" pos:end="357:72"><expr pos:start="357:45" pos:end="357:72"><operator pos:start="357:45" pos:end="357:45">&amp;</operator><name pos:start="357:46" pos:end="357:72"><name pos:start="357:46" pos:end="357:46">h</name><operator pos:start="357:47" pos:end="357:48">-&gt;</operator><name pos:start="357:49" pos:end="357:60">direct_cache</name><index pos:start="357:61" pos:end="357:72">[<expr pos:start="357:62" pos:end="357:71"><name pos:start="357:62" pos:end="357:71"><name pos:start="357:62" pos:end="357:66">scan8</name><index pos:start="357:67" pos:end="357:71">[<expr pos:start="357:68" pos:end="357:70"><literal type="number" pos:start="357:68" pos:end="357:68">4</literal><operator pos:start="357:69" pos:end="357:69">*</operator><name pos:start="357:70" pos:end="357:70">i</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="357:75" pos:end="357:75"><expr pos:start="357:75" pos:end="357:75"><literal type="number" pos:start="357:75" pos:end="357:75">2</literal></expr></argument>, <argument pos:start="357:78" pos:end="357:78"><expr pos:start="357:78" pos:end="357:78"><literal type="number" pos:start="357:78" pos:end="357:78">2</literal></expr></argument>, <argument pos:start="357:81" pos:end="357:81"><expr pos:start="357:81" pos:end="357:81"><literal type="number" pos:start="357:81" pos:end="357:81">8</literal></expr></argument>, <argument pos:start="357:84" pos:end="357:84"><expr pos:start="357:84" pos:end="357:84"><literal type="number" pos:start="357:84" pos:end="357:84">1</literal></expr></argument>, <argument pos:start="357:87" pos:end="357:87"><expr pos:start="357:87" pos:end="357:87"><literal type="number" pos:start="357:87" pos:end="357:87">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="363:11" pos:end="375:9">else <block pos:start="363:16" pos:end="375:9">{<block_content pos:start="365:13" pos:end="373:13">

            <for pos:start="365:13" pos:end="373:13">for<control pos:start="365:16" pos:end="365:36">( <init pos:start="365:18" pos:end="365:23"><expr pos:start="365:18" pos:end="365:22"><name pos:start="365:18" pos:end="365:18">i</name> <operator pos:start="365:20" pos:end="365:20">=</operator> <literal type="number" pos:start="365:22" pos:end="365:22">0</literal></expr>;</init> <condition pos:start="365:25" pos:end="365:30"><expr pos:start="365:25" pos:end="365:29"><name pos:start="365:25" pos:end="365:25">i</name> <operator pos:start="365:27" pos:end="365:27">&lt;</operator> <literal type="number" pos:start="365:29" pos:end="365:29">4</literal></expr>;</condition> <incr pos:start="365:32" pos:end="365:34"><expr pos:start="365:32" pos:end="365:34"><name pos:start="365:32" pos:end="365:32">i</name><operator pos:start="365:33" pos:end="365:34">++</operator></expr></incr> )</control> <block pos:start="365:38" pos:end="373:13">{<block_content pos:start="367:17" pos:end="371:85">

                <expr_stmt pos:start="367:17" pos:end="367:68"><expr pos:start="367:17" pos:end="367:67"><name pos:start="367:17" pos:end="367:33"><name pos:start="367:17" pos:end="367:17">h</name><operator pos:start="367:18" pos:end="367:19">-&gt;</operator><name pos:start="367:20" pos:end="367:30">sub_mb_type</name><index pos:start="367:31" pos:end="367:33">[<expr pos:start="367:32" pos:end="367:32"><name pos:start="367:32" pos:end="367:32">i</name></expr>]</index></name> <operator pos:start="367:35" pos:end="367:35">=</operator> <call pos:start="367:37" pos:end="367:67"><name pos:start="367:37" pos:end="367:62">decode_cabac_p_mb_sub_type</name><argument_list pos:start="367:63" pos:end="367:67">( <argument pos:start="367:65" pos:end="367:65"><expr pos:start="367:65" pos:end="367:65"><name pos:start="367:65" pos:end="367:65">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="369:17" pos:end="369:96"><expr pos:start="369:17" pos:end="369:95"><name pos:start="369:17" pos:end="369:38"><name pos:start="369:17" pos:end="369:35">sub_partition_count</name><index pos:start="369:36" pos:end="369:38">[<expr pos:start="369:37" pos:end="369:37"><name pos:start="369:37" pos:end="369:37">i</name></expr>]</index></name><operator pos:start="369:39" pos:end="369:39">=</operator> <name pos:start="369:41" pos:end="369:79"><name pos:start="369:41" pos:end="369:58">p_sub_mb_type_info</name><index pos:start="369:59" pos:end="369:79">[ <expr pos:start="369:61" pos:end="369:77"><name pos:start="369:61" pos:end="369:77"><name pos:start="369:61" pos:end="369:61">h</name><operator pos:start="369:62" pos:end="369:63">-&gt;</operator><name pos:start="369:64" pos:end="369:74">sub_mb_type</name><index pos:start="369:75" pos:end="369:77">[<expr pos:start="369:76" pos:end="369:76"><name pos:start="369:76" pos:end="369:76">i</name></expr>]</index></name></expr> ]</index></name><operator pos:start="369:80" pos:end="369:80">.</operator><name pos:start="369:81" pos:end="369:95">partition_count</name></expr>;</expr_stmt>

                <expr_stmt pos:start="371:17" pos:end="371:85"><expr pos:start="371:17" pos:end="371:84"><name pos:start="371:17" pos:end="371:33"><name pos:start="371:17" pos:end="371:17">h</name><operator pos:start="371:18" pos:end="371:19">-&gt;</operator><name pos:start="371:20" pos:end="371:30">sub_mb_type</name><index pos:start="371:31" pos:end="371:33">[<expr pos:start="371:32" pos:end="371:32"><name pos:start="371:32" pos:end="371:32">i</name></expr>]</index></name><operator pos:start="371:34" pos:end="371:34">=</operator>      <name pos:start="371:41" pos:end="371:79"><name pos:start="371:41" pos:end="371:58">p_sub_mb_type_info</name><index pos:start="371:59" pos:end="371:79">[ <expr pos:start="371:61" pos:end="371:77"><name pos:start="371:61" pos:end="371:77"><name pos:start="371:61" pos:end="371:61">h</name><operator pos:start="371:62" pos:end="371:63">-&gt;</operator><name pos:start="371:64" pos:end="371:74">sub_mb_type</name><index pos:start="371:75" pos:end="371:77">[<expr pos:start="371:76" pos:end="371:76"><name pos:start="371:76" pos:end="371:76">i</name></expr>]</index></name></expr> ]</index></name><operator pos:start="371:80" pos:end="371:80">.</operator><name pos:start="371:81" pos:end="371:84">type</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>



        <for pos:start="379:9" pos:end="415:9">for<control pos:start="379:12" pos:end="379:53">( <init pos:start="379:14" pos:end="379:22"><expr pos:start="379:14" pos:end="379:21"><name pos:start="379:14" pos:end="379:17">list</name> <operator pos:start="379:19" pos:end="379:19">=</operator> <literal type="number" pos:start="379:21" pos:end="379:21">0</literal></expr>;</init> <condition pos:start="379:24" pos:end="379:44"><expr pos:start="379:24" pos:end="379:43"><name pos:start="379:24" pos:end="379:27">list</name> <operator pos:start="379:29" pos:end="379:29">&lt;</operator> <name pos:start="379:31" pos:end="379:43"><name pos:start="379:31" pos:end="379:31">h</name><operator pos:start="379:32" pos:end="379:33">-&gt;</operator><name pos:start="379:34" pos:end="379:43">list_count</name></name></expr>;</condition> <incr pos:start="379:46" pos:end="379:51"><expr pos:start="379:46" pos:end="379:51"><name pos:start="379:46" pos:end="379:49">list</name><operator pos:start="379:50" pos:end="379:51">++</operator></expr></incr> )</control> <block pos:start="379:55" pos:end="415:9">{<block_content pos:start="381:17" pos:end="413:17">

                <for pos:start="381:17" pos:end="413:17">for<control pos:start="381:20" pos:end="381:40">( <init pos:start="381:22" pos:end="381:27"><expr pos:start="381:22" pos:end="381:26"><name pos:start="381:22" pos:end="381:22">i</name> <operator pos:start="381:24" pos:end="381:24">=</operator> <literal type="number" pos:start="381:26" pos:end="381:26">0</literal></expr>;</init> <condition pos:start="381:29" pos:end="381:34"><expr pos:start="381:29" pos:end="381:33"><name pos:start="381:29" pos:end="381:29">i</name> <operator pos:start="381:31" pos:end="381:31">&lt;</operator> <literal type="number" pos:start="381:33" pos:end="381:33">4</literal></expr>;</condition> <incr pos:start="381:36" pos:end="381:38"><expr pos:start="381:36" pos:end="381:38"><name pos:start="381:36" pos:end="381:36">i</name><operator pos:start="381:37" pos:end="381:38">++</operator></expr></incr> )</control> <block pos:start="381:42" pos:end="413:17">{<block_content pos:start="383:21" pos:end="411:104">

                    <if_stmt pos:start="383:21" pos:end="383:62"><if pos:start="383:21" pos:end="383:62">if<condition pos:start="383:23" pos:end="383:52">(<expr pos:start="383:24" pos:end="383:51"><call pos:start="383:24" pos:end="383:51"><name pos:start="383:24" pos:end="383:32">IS_DIRECT</name><argument_list pos:start="383:33" pos:end="383:51">(<argument pos:start="383:34" pos:end="383:50"><expr pos:start="383:34" pos:end="383:50"><name pos:start="383:34" pos:end="383:50"><name pos:start="383:34" pos:end="383:34">h</name><operator pos:start="383:35" pos:end="383:36">-&gt;</operator><name pos:start="383:37" pos:end="383:47">sub_mb_type</name><index pos:start="383:48" pos:end="383:50">[<expr pos:start="383:49" pos:end="383:49"><name pos:start="383:49" pos:end="383:49">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="383:54" pos:end="383:62"><block_content pos:start="383:54" pos:end="383:62"> <continue pos:start="383:54" pos:end="383:62">continue;</continue></block_content></block></if></if_stmt>

                    <if_stmt pos:start="385:21" pos:end="407:21"><if pos:start="385:21" pos:end="403:21">if<condition pos:start="385:23" pos:end="385:58">(<expr pos:start="385:24" pos:end="385:57"><call pos:start="385:24" pos:end="385:57"><name pos:start="385:24" pos:end="385:29">IS_DIR</name><argument_list pos:start="385:30" pos:end="385:57">(<argument pos:start="385:31" pos:end="385:47"><expr pos:start="385:31" pos:end="385:47"><name pos:start="385:31" pos:end="385:47"><name pos:start="385:31" pos:end="385:31">h</name><operator pos:start="385:32" pos:end="385:33">-&gt;</operator><name pos:start="385:34" pos:end="385:44">sub_mb_type</name><index pos:start="385:45" pos:end="385:47">[<expr pos:start="385:46" pos:end="385:46"><name pos:start="385:46" pos:end="385:46">i</name></expr>]</index></name></expr></argument>, <argument pos:start="385:50" pos:end="385:50"><expr pos:start="385:50" pos:end="385:50"><literal type="number" pos:start="385:50" pos:end="385:50">0</literal></expr></argument>, <argument pos:start="385:53" pos:end="385:56"><expr pos:start="385:53" pos:end="385:56"><name pos:start="385:53" pos:end="385:56">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="385:59" pos:end="403:21">{<block_content pos:start="387:25" pos:end="401:45">

                        <if_stmt pos:start="387:25" pos:end="401:45"><if pos:start="387:25" pos:end="399:25">if<condition pos:start="387:27" pos:end="387:52">( <expr pos:start="387:29" pos:end="387:50"><name pos:start="387:29" pos:end="387:46"><name pos:start="387:29" pos:end="387:29">h</name><operator pos:start="387:30" pos:end="387:31">-&gt;</operator><name pos:start="387:32" pos:end="387:40">ref_count</name><index pos:start="387:41" pos:end="387:46">[<expr pos:start="387:42" pos:end="387:45"><name pos:start="387:42" pos:end="387:45">list</name></expr>]</index></name> <operator pos:start="387:48" pos:end="387:48">&gt;</operator> <literal type="number" pos:start="387:50" pos:end="387:50">1</literal></expr> )</condition><block pos:start="387:53" pos:end="399:25">{<block_content pos:start="389:29" pos:end="397:29">

                            <expr_stmt pos:start="389:29" pos:end="389:79"><expr pos:start="389:29" pos:end="389:78"><name pos:start="389:29" pos:end="389:40"><name pos:start="389:29" pos:end="389:31">ref</name><index pos:start="389:32" pos:end="389:37">[<expr pos:start="389:33" pos:end="389:36"><name pos:start="389:33" pos:end="389:36">list</name></expr>]</index><index pos:start="389:38" pos:end="389:40">[<expr pos:start="389:39" pos:end="389:39"><name pos:start="389:39" pos:end="389:39">i</name></expr>]</index></name> <operator pos:start="389:42" pos:end="389:42">=</operator> <call pos:start="389:44" pos:end="389:78"><name pos:start="389:44" pos:end="389:62">decode_cabac_mb_ref</name><argument_list pos:start="389:63" pos:end="389:78">( <argument pos:start="389:65" pos:end="389:65"><expr pos:start="389:65" pos:end="389:65"><name pos:start="389:65" pos:end="389:65">h</name></expr></argument>, <argument pos:start="389:68" pos:end="389:71"><expr pos:start="389:68" pos:end="389:71"><name pos:start="389:68" pos:end="389:71">list</name></expr></argument>, <argument pos:start="389:74" pos:end="389:76"><expr pos:start="389:74" pos:end="389:76"><literal type="number" pos:start="389:74" pos:end="389:74">4</literal><operator pos:start="389:75" pos:end="389:75">*</operator><name pos:start="389:76" pos:end="389:76">i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="391:29" pos:end="397:29"><if pos:start="391:29" pos:end="397:29">if<condition pos:start="391:31" pos:end="391:76">(<expr pos:start="391:32" pos:end="391:75"><name pos:start="391:32" pos:end="391:43"><name pos:start="391:32" pos:end="391:34">ref</name><index pos:start="391:35" pos:end="391:40">[<expr pos:start="391:36" pos:end="391:39"><name pos:start="391:36" pos:end="391:39">list</name></expr>]</index><index pos:start="391:41" pos:end="391:43">[<expr pos:start="391:42" pos:end="391:42"><name pos:start="391:42" pos:end="391:42">i</name></expr>]</index></name> <operator pos:start="391:45" pos:end="391:46">&gt;=</operator> <operator pos:start="391:48" pos:end="391:48">(</operator><name pos:start="391:49" pos:end="391:56">unsigned</name><operator pos:start="391:57" pos:end="391:57">)</operator><name pos:start="391:58" pos:end="391:75"><name pos:start="391:58" pos:end="391:58">h</name><operator pos:start="391:59" pos:end="391:60">-&gt;</operator><name pos:start="391:61" pos:end="391:69">ref_count</name><index pos:start="391:70" pos:end="391:75">[<expr pos:start="391:71" pos:end="391:74"><name pos:start="391:71" pos:end="391:74">list</name></expr>]</index></name></expr>)</condition><block pos:start="391:77" pos:end="397:29">{<block_content pos:start="393:33" pos:end="395:42">

                                <expr_stmt pos:start="393:33" pos:end="393:121"><expr pos:start="393:33" pos:end="393:120"><call pos:start="393:33" pos:end="393:120"><name pos:start="393:33" pos:end="393:38">av_log</name><argument_list pos:start="393:39" pos:end="393:120">(<argument pos:start="393:40" pos:end="393:47"><expr pos:start="393:40" pos:end="393:47"><name pos:start="393:40" pos:end="393:47"><name pos:start="393:40" pos:end="393:40">s</name><operator pos:start="393:41" pos:end="393:42">-&gt;</operator><name pos:start="393:43" pos:end="393:47">avctx</name></name></expr></argument>, <argument pos:start="393:50" pos:end="393:61"><expr pos:start="393:50" pos:end="393:61"><name pos:start="393:50" pos:end="393:61">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="393:64" pos:end="393:85"><expr pos:start="393:64" pos:end="393:85"><literal type="string" pos:start="393:64" pos:end="393:85">"Reference %d &gt;= %d\n"</literal></expr></argument>, <argument pos:start="393:88" pos:end="393:99"><expr pos:start="393:88" pos:end="393:99"><name pos:start="393:88" pos:end="393:99"><name pos:start="393:88" pos:end="393:90">ref</name><index pos:start="393:91" pos:end="393:96">[<expr pos:start="393:92" pos:end="393:95"><name pos:start="393:92" pos:end="393:95">list</name></expr>]</index><index pos:start="393:97" pos:end="393:99">[<expr pos:start="393:98" pos:end="393:98"><name pos:start="393:98" pos:end="393:98">i</name></expr>]</index></name></expr></argument>, <argument pos:start="393:102" pos:end="393:119"><expr pos:start="393:102" pos:end="393:119"><name pos:start="393:102" pos:end="393:119"><name pos:start="393:102" pos:end="393:102">h</name><operator pos:start="393:103" pos:end="393:104">-&gt;</operator><name pos:start="393:105" pos:end="393:113">ref_count</name><index pos:start="393:114" pos:end="393:119">[<expr pos:start="393:115" pos:end="393:118"><name pos:start="393:115" pos:end="393:118">list</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <return pos:start="395:33" pos:end="395:42">return <expr pos:start="395:40" pos:end="395:41"><operator pos:start="395:40" pos:end="395:40">-</operator><literal type="number" pos:start="395:41" pos:end="395:41">1</literal></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></if><else pos:start="399:26" pos:end="401:45">else<block type="pseudo" pos:start="401:29" pos:end="401:45"><block_content pos:start="401:29" pos:end="401:45">

                            <expr_stmt pos:start="401:29" pos:end="401:45"><expr pos:start="401:29" pos:end="401:44"><name pos:start="401:29" pos:end="401:40"><name pos:start="401:29" pos:end="401:31">ref</name><index pos:start="401:32" pos:end="401:37">[<expr pos:start="401:33" pos:end="401:36"><name pos:start="401:33" pos:end="401:36">list</name></expr>]</index><index pos:start="401:38" pos:end="401:40">[<expr pos:start="401:39" pos:end="401:39"><name pos:start="401:39" pos:end="401:39">i</name></expr>]</index></name> <operator pos:start="401:42" pos:end="401:42">=</operator> <literal type="number" pos:start="401:44" pos:end="401:44">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="403:23" pos:end="407:21">else <block pos:start="403:28" pos:end="407:21">{<block_content pos:start="405:25" pos:end="405:42">

                        <expr_stmt pos:start="405:25" pos:end="405:42"><expr pos:start="405:25" pos:end="405:41"><name pos:start="405:25" pos:end="405:36"><name pos:start="405:25" pos:end="405:27">ref</name><index pos:start="405:28" pos:end="405:33">[<expr pos:start="405:29" pos:end="405:32"><name pos:start="405:29" pos:end="405:32">list</name></expr>]</index><index pos:start="405:34" pos:end="405:36">[<expr pos:start="405:35" pos:end="405:35"><name pos:start="405:35" pos:end="405:35">i</name></expr>]</index></name> <operator pos:start="405:38" pos:end="405:38">=</operator> <operator pos:start="405:40" pos:end="405:40">-</operator><literal type="number" pos:start="405:41" pos:end="405:41">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                                                       <expr_stmt pos:start="409:56" pos:end="411:104"><expr pos:start="409:56" pos:end="411:103"><name pos:start="409:56" pos:end="409:89"><name pos:start="409:56" pos:end="409:56">h</name><operator pos:start="409:57" pos:end="409:58">-&gt;</operator><name pos:start="409:59" pos:end="409:67">ref_cache</name><index pos:start="409:68" pos:end="409:73">[<expr pos:start="409:69" pos:end="409:72"><name pos:start="409:69" pos:end="409:72">list</name></expr>]</index><index pos:start="409:74" pos:end="409:89">[ <expr pos:start="409:76" pos:end="409:87"><name pos:start="409:76" pos:end="409:85"><name pos:start="409:76" pos:end="409:80">scan8</name><index pos:start="409:81" pos:end="409:85">[<expr pos:start="409:82" pos:end="409:84"><literal type="number" pos:start="409:82" pos:end="409:82">4</literal><operator pos:start="409:83" pos:end="409:83">*</operator><name pos:start="409:84" pos:end="409:84">i</name></expr>]</index></name><operator pos:start="409:86" pos:end="409:86">+</operator><literal type="number" pos:start="409:87" pos:end="409:87">1</literal></expr> ]</index></name><operator pos:start="409:90" pos:end="409:90">=</operator>

                    <name pos:start="411:21" pos:end="411:54"><name pos:start="411:21" pos:end="411:21">h</name><operator pos:start="411:22" pos:end="411:23">-&gt;</operator><name pos:start="411:24" pos:end="411:32">ref_cache</name><index pos:start="411:33" pos:end="411:38">[<expr pos:start="411:34" pos:end="411:37"><name pos:start="411:34" pos:end="411:37">list</name></expr>]</index><index pos:start="411:39" pos:end="411:54">[ <expr pos:start="411:41" pos:end="411:52"><name pos:start="411:41" pos:end="411:50"><name pos:start="411:41" pos:end="411:45">scan8</name><index pos:start="411:46" pos:end="411:50">[<expr pos:start="411:47" pos:end="411:49"><literal type="number" pos:start="411:47" pos:end="411:47">4</literal><operator pos:start="411:48" pos:end="411:48">*</operator><name pos:start="411:49" pos:end="411:49">i</name></expr>]</index></name><operator pos:start="411:51" pos:end="411:51">+</operator><literal type="number" pos:start="411:52" pos:end="411:52">8</literal></expr> ]</index></name><operator pos:start="411:55" pos:end="411:55">=</operator><name pos:start="411:56" pos:end="411:89"><name pos:start="411:56" pos:end="411:56">h</name><operator pos:start="411:57" pos:end="411:58">-&gt;</operator><name pos:start="411:59" pos:end="411:67">ref_cache</name><index pos:start="411:68" pos:end="411:73">[<expr pos:start="411:69" pos:end="411:72"><name pos:start="411:69" pos:end="411:72">list</name></expr>]</index><index pos:start="411:74" pos:end="411:89">[ <expr pos:start="411:76" pos:end="411:87"><name pos:start="411:76" pos:end="411:85"><name pos:start="411:76" pos:end="411:80">scan8</name><index pos:start="411:81" pos:end="411:85">[<expr pos:start="411:82" pos:end="411:84"><literal type="number" pos:start="411:82" pos:end="411:82">4</literal><operator pos:start="411:83" pos:end="411:83">*</operator><name pos:start="411:84" pos:end="411:84">i</name></expr>]</index></name><operator pos:start="411:86" pos:end="411:86">+</operator><literal type="number" pos:start="411:87" pos:end="411:87">9</literal></expr> ]</index></name><operator pos:start="411:90" pos:end="411:90">=</operator> <name pos:start="411:92" pos:end="411:103"><name pos:start="411:92" pos:end="411:94">ref</name><index pos:start="411:95" pos:end="411:100">[<expr pos:start="411:96" pos:end="411:99"><name pos:start="411:96" pos:end="411:99">list</name></expr>]</index><index pos:start="411:101" pos:end="411:103">[<expr pos:start="411:102" pos:end="411:102"><name pos:start="411:102" pos:end="411:102">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

        </block_content>}</block></for>



        <if_stmt pos:start="419:9" pos:end="421:51"><if pos:start="419:9" pos:end="421:51">if<condition pos:start="419:11" pos:end="419:26">(<expr pos:start="419:12" pos:end="419:25"><name pos:start="419:12" pos:end="419:25">dct8x8_allowed</name></expr>)</condition><block type="pseudo" pos:start="421:13" pos:end="421:51"><block_content pos:start="421:13" pos:end="421:51">

            <expr_stmt pos:start="421:13" pos:end="421:51"><expr pos:start="421:13" pos:end="421:50"><name pos:start="421:13" pos:end="421:26">dct8x8_allowed</name> <operator pos:start="421:28" pos:end="421:28">=</operator> <call pos:start="421:30" pos:end="421:50"><name pos:start="421:30" pos:end="421:47">get_dct8x8_allowed</name><argument_list pos:start="421:48" pos:end="421:50">(<argument pos:start="421:49" pos:end="421:49"><expr pos:start="421:49" pos:end="421:49"><name pos:start="421:49" pos:end="421:49">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="425:9" pos:end="543:9">for<control pos:start="425:12" pos:end="425:47">(<init pos:start="425:13" pos:end="425:19"><expr pos:start="425:13" pos:end="425:18"><name pos:start="425:13" pos:end="425:16">list</name><operator pos:start="425:17" pos:end="425:17">=</operator><literal type="number" pos:start="425:18" pos:end="425:18">0</literal></expr>;</init> <condition pos:start="425:21" pos:end="425:39"><expr pos:start="425:21" pos:end="425:38"><name pos:start="425:21" pos:end="425:24">list</name><operator pos:start="425:25" pos:end="425:25">&lt;</operator><name pos:start="425:26" pos:end="425:38"><name pos:start="425:26" pos:end="425:26">h</name><operator pos:start="425:27" pos:end="425:28">-&gt;</operator><name pos:start="425:29" pos:end="425:38">list_count</name></name></expr>;</condition> <incr pos:start="425:41" pos:end="425:46"><expr pos:start="425:41" pos:end="425:46"><name pos:start="425:41" pos:end="425:44">list</name><operator pos:start="425:45" pos:end="425:46">++</operator></expr></incr>)</control><block pos:start="425:48" pos:end="543:9">{<block_content pos:start="427:13" pos:end="541:13">

            <for pos:start="427:13" pos:end="541:13">for<control pos:start="427:16" pos:end="427:30">(<init pos:start="427:17" pos:end="427:20"><expr pos:start="427:17" pos:end="427:19"><name pos:start="427:17" pos:end="427:17">i</name><operator pos:start="427:18" pos:end="427:18">=</operator><literal type="number" pos:start="427:19" pos:end="427:19">0</literal></expr>;</init> <condition pos:start="427:22" pos:end="427:25"><expr pos:start="427:22" pos:end="427:24"><name pos:start="427:22" pos:end="427:22">i</name><operator pos:start="427:23" pos:end="427:23">&lt;</operator><literal type="number" pos:start="427:24" pos:end="427:24">4</literal></expr>;</condition> <incr pos:start="427:27" pos:end="427:29"><expr pos:start="427:27" pos:end="427:29"><name pos:start="427:27" pos:end="427:27">i</name><operator pos:start="427:28" pos:end="427:29">++</operator></expr></incr>)</control><block pos:start="427:31" pos:end="541:13">{<block_content pos:start="429:17" pos:end="539:17">

                <expr_stmt pos:start="429:17" pos:end="429:86"><expr pos:start="429:17" pos:end="429:85"><name pos:start="429:17" pos:end="429:50"><name pos:start="429:17" pos:end="429:17">h</name><operator pos:start="429:18" pos:end="429:19">-&gt;</operator><name pos:start="429:20" pos:end="429:28">ref_cache</name><index pos:start="429:29" pos:end="429:34">[<expr pos:start="429:30" pos:end="429:33"><name pos:start="429:30" pos:end="429:33">list</name></expr>]</index><index pos:start="429:35" pos:end="429:50">[ <expr pos:start="429:37" pos:end="429:46"><name pos:start="429:37" pos:end="429:46"><name pos:start="429:37" pos:end="429:41">scan8</name><index pos:start="429:42" pos:end="429:46">[<expr pos:start="429:43" pos:end="429:45"><literal type="number" pos:start="429:43" pos:end="429:43">4</literal><operator pos:start="429:44" pos:end="429:44">*</operator><name pos:start="429:45" pos:end="429:45">i</name></expr>]</index></name></expr>   ]</index></name><operator pos:start="429:51" pos:end="429:51">=</operator><name pos:start="429:52" pos:end="429:85"><name pos:start="429:52" pos:end="429:52">h</name><operator pos:start="429:53" pos:end="429:54">-&gt;</operator><name pos:start="429:55" pos:end="429:63">ref_cache</name><index pos:start="429:64" pos:end="429:69">[<expr pos:start="429:65" pos:end="429:68"><name pos:start="429:65" pos:end="429:68">list</name></expr>]</index><index pos:start="429:70" pos:end="429:85">[ <expr pos:start="429:72" pos:end="429:83"><name pos:start="429:72" pos:end="429:81"><name pos:start="429:72" pos:end="429:76">scan8</name><index pos:start="429:77" pos:end="429:81">[<expr pos:start="429:78" pos:end="429:80"><literal type="number" pos:start="429:78" pos:end="429:78">4</literal><operator pos:start="429:79" pos:end="429:79">*</operator><name pos:start="429:80" pos:end="429:80">i</name></expr>]</index></name><operator pos:start="429:82" pos:end="429:82">+</operator><literal type="number" pos:start="429:83" pos:end="429:83">1</literal></expr> ]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="431:17" pos:end="437:17"><if pos:start="431:17" pos:end="437:17">if<condition pos:start="431:19" pos:end="431:48">(<expr pos:start="431:20" pos:end="431:47"><call pos:start="431:20" pos:end="431:47"><name pos:start="431:20" pos:end="431:28">IS_DIRECT</name><argument_list pos:start="431:29" pos:end="431:47">(<argument pos:start="431:30" pos:end="431:46"><expr pos:start="431:30" pos:end="431:46"><name pos:start="431:30" pos:end="431:46"><name pos:start="431:30" pos:end="431:30">h</name><operator pos:start="431:31" pos:end="431:32">-&gt;</operator><name pos:start="431:33" pos:end="431:43">sub_mb_type</name><index pos:start="431:44" pos:end="431:46">[<expr pos:start="431:45" pos:end="431:45"><name pos:start="431:45" pos:end="431:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="431:49" pos:end="437:17">{<block_content pos:start="433:21" pos:end="435:29">

                    <expr_stmt pos:start="433:21" pos:end="433:82"><expr pos:start="433:21" pos:end="433:81"><call pos:start="433:21" pos:end="433:81"><name pos:start="433:21" pos:end="433:34">fill_rectangle</name><argument_list pos:start="433:35" pos:end="433:81">(<argument pos:start="433:36" pos:end="433:65"><expr pos:start="433:36" pos:end="433:65"><name pos:start="433:36" pos:end="433:65"><name pos:start="433:36" pos:end="433:36">h</name><operator pos:start="433:37" pos:end="433:38">-&gt;</operator><name pos:start="433:39" pos:end="433:47">mvd_cache</name><index pos:start="433:48" pos:end="433:53">[<expr pos:start="433:49" pos:end="433:52"><name pos:start="433:49" pos:end="433:52">list</name></expr>]</index><index pos:start="433:54" pos:end="433:65">[<expr pos:start="433:55" pos:end="433:64"><name pos:start="433:55" pos:end="433:64"><name pos:start="433:55" pos:end="433:59">scan8</name><index pos:start="433:60" pos:end="433:64">[<expr pos:start="433:61" pos:end="433:63"><literal type="number" pos:start="433:61" pos:end="433:61">4</literal><operator pos:start="433:62" pos:end="433:62">*</operator><name pos:start="433:63" pos:end="433:63">i</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="433:68" pos:end="433:68"><expr pos:start="433:68" pos:end="433:68"><literal type="number" pos:start="433:68" pos:end="433:68">2</literal></expr></argument>, <argument pos:start="433:71" pos:end="433:71"><expr pos:start="433:71" pos:end="433:71"><literal type="number" pos:start="433:71" pos:end="433:71">2</literal></expr></argument>, <argument pos:start="433:74" pos:end="433:74"><expr pos:start="433:74" pos:end="433:74"><literal type="number" pos:start="433:74" pos:end="433:74">8</literal></expr></argument>, <argument pos:start="433:77" pos:end="433:77"><expr pos:start="433:77" pos:end="433:77"><literal type="number" pos:start="433:77" pos:end="433:77">0</literal></expr></argument>, <argument pos:start="433:80" pos:end="433:80"><expr pos:start="433:80" pos:end="433:80"><literal type="number" pos:start="433:80" pos:end="433:80">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <continue pos:start="435:21" pos:end="435:29">continue;</continue>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="441:17" pos:end="539:17"><if pos:start="441:17" pos:end="529:17">if<condition pos:start="441:19" pos:end="441:87">(<expr pos:start="441:20" pos:end="441:86"><call pos:start="441:20" pos:end="441:53"><name pos:start="441:20" pos:end="441:25">IS_DIR</name><argument_list pos:start="441:26" pos:end="441:53">(<argument pos:start="441:27" pos:end="441:43"><expr pos:start="441:27" pos:end="441:43"><name pos:start="441:27" pos:end="441:43"><name pos:start="441:27" pos:end="441:27">h</name><operator pos:start="441:28" pos:end="441:29">-&gt;</operator><name pos:start="441:30" pos:end="441:40">sub_mb_type</name><index pos:start="441:41" pos:end="441:43">[<expr pos:start="441:42" pos:end="441:42"><name pos:start="441:42" pos:end="441:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="441:46" pos:end="441:46"><expr pos:start="441:46" pos:end="441:46"><literal type="number" pos:start="441:46" pos:end="441:46">0</literal></expr></argument>, <argument pos:start="441:49" pos:end="441:52"><expr pos:start="441:49" pos:end="441:52"><name pos:start="441:49" pos:end="441:52">list</name></expr></argument>)</argument_list></call> <operator pos:start="441:55" pos:end="441:56">&amp;&amp;</operator> <operator pos:start="441:58" pos:end="441:58">!</operator><call pos:start="441:59" pos:end="441:86"><name pos:start="441:59" pos:end="441:67">IS_DIRECT</name><argument_list pos:start="441:68" pos:end="441:86">(<argument pos:start="441:69" pos:end="441:85"><expr pos:start="441:69" pos:end="441:85"><name pos:start="441:69" pos:end="441:85"><name pos:start="441:69" pos:end="441:69">h</name><operator pos:start="441:70" pos:end="441:71">-&gt;</operator><name pos:start="441:72" pos:end="441:82">sub_mb_type</name><index pos:start="441:83" pos:end="441:85">[<expr pos:start="441:84" pos:end="441:84"><name pos:start="441:84" pos:end="441:84">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="441:88" pos:end="529:17">{<block_content pos:start="443:21" pos:end="527:21">

                    <decl_stmt pos:start="443:21" pos:end="443:61"><decl pos:start="443:21" pos:end="443:60"><type pos:start="443:21" pos:end="443:29"><specifier pos:start="443:21" pos:end="443:25">const</specifier> <name pos:start="443:27" pos:end="443:29">int</name></type> <name pos:start="443:31" pos:end="443:41">sub_mb_type</name><init pos:start="443:42" pos:end="443:60">= <expr pos:start="443:44" pos:end="443:60"><name pos:start="443:44" pos:end="443:60"><name pos:start="443:44" pos:end="443:44">h</name><operator pos:start="443:45" pos:end="443:46">-&gt;</operator><name pos:start="443:47" pos:end="443:57">sub_mb_type</name><index pos:start="443:58" pos:end="443:60">[<expr pos:start="443:59" pos:end="443:59"><name pos:start="443:59" pos:end="443:59">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="445:21" pos:end="445:96"><decl pos:start="445:21" pos:end="445:95"><type pos:start="445:21" pos:end="445:29"><specifier pos:start="445:21" pos:end="445:25">const</specifier> <name pos:start="445:27" pos:end="445:29">int</name></type> <name pos:start="445:31" pos:end="445:41">block_width</name><init pos:start="445:42" pos:end="445:95">= <expr pos:start="445:44" pos:end="445:95"><ternary pos:start="445:44" pos:end="445:95"><condition pos:start="445:44" pos:end="445:89"><expr pos:start="445:44" pos:end="445:87"><operator pos:start="445:44" pos:end="445:44">(</operator><name pos:start="445:45" pos:end="445:55">sub_mb_type</name> <operator pos:start="445:57" pos:end="445:57">&amp;</operator> <operator pos:start="445:59" pos:end="445:59">(</operator><name pos:start="445:60" pos:end="445:72">MB_TYPE_16x16</name><operator pos:start="445:73" pos:end="445:73">|</operator><name pos:start="445:74" pos:end="445:85">MB_TYPE_16x8</name><operator pos:start="445:86" pos:end="445:86">)</operator><operator pos:start="445:87" pos:end="445:87">)</operator></expr> ?</condition><then pos:start="445:91" pos:end="445:91"> <expr pos:start="445:91" pos:end="445:91"><literal type="number" pos:start="445:91" pos:end="445:91">2</literal></expr> </then><else pos:start="445:93" pos:end="445:95">: <expr pos:start="445:95" pos:end="445:95"><literal type="number" pos:start="445:95" pos:end="445:95">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <for pos:start="447:21" pos:end="527:21">for<control pos:start="447:24" pos:end="447:59">(<init pos:start="447:25" pos:end="447:28"><expr pos:start="447:25" pos:end="447:27"><name pos:start="447:25" pos:end="447:25">j</name><operator pos:start="447:26" pos:end="447:26">=</operator><literal type="number" pos:start="447:27" pos:end="447:27">0</literal></expr>;</init> <condition pos:start="447:30" pos:end="447:54"><expr pos:start="447:30" pos:end="447:53"><name pos:start="447:30" pos:end="447:30">j</name><operator pos:start="447:31" pos:end="447:31">&lt;</operator><name pos:start="447:32" pos:end="447:53"><name pos:start="447:32" pos:end="447:50">sub_partition_count</name><index pos:start="447:51" pos:end="447:53">[<expr pos:start="447:52" pos:end="447:52"><name pos:start="447:52" pos:end="447:52">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="447:56" pos:end="447:58"><expr pos:start="447:56" pos:end="447:58"><name pos:start="447:56" pos:end="447:56">j</name><operator pos:start="447:57" pos:end="447:58">++</operator></expr></incr>)</control><block pos:start="447:60" pos:end="527:21">{<block_content pos:start="449:25" pos:end="525:52">

                        <decl_stmt pos:start="449:25" pos:end="449:37"><decl pos:start="449:25" pos:end="449:31"><type pos:start="449:25" pos:end="449:27"><name pos:start="449:25" pos:end="449:27">int</name></type> <name pos:start="449:29" pos:end="449:31">mpx</name></decl>, <decl pos:start="449:34" pos:end="449:36"><type ref="prev" pos:start="449:25" pos:end="449:27"/><name pos:start="449:34" pos:end="449:36">mpy</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="451:25" pos:end="451:35"><decl pos:start="451:25" pos:end="451:30"><type pos:start="451:25" pos:end="451:27"><name pos:start="451:25" pos:end="451:27">int</name></type> <name pos:start="451:29" pos:end="451:30">mx</name></decl>, <decl pos:start="451:33" pos:end="451:34"><type ref="prev" pos:start="451:25" pos:end="451:27"/><name pos:start="451:33" pos:end="451:34">my</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="453:25" pos:end="453:61"><decl pos:start="453:25" pos:end="453:60"><type pos:start="453:25" pos:end="453:33"><specifier pos:start="453:25" pos:end="453:29">const</specifier> <name pos:start="453:31" pos:end="453:33">int</name></type> <name pos:start="453:35" pos:end="453:39">index</name><init pos:start="453:40" pos:end="453:60">= <expr pos:start="453:42" pos:end="453:60"><literal type="number" pos:start="453:42" pos:end="453:42">4</literal><operator pos:start="453:43" pos:end="453:43">*</operator><name pos:start="453:44" pos:end="453:44">i</name> <operator pos:start="453:46" pos:end="453:46">+</operator> <name pos:start="453:48" pos:end="453:58">block_width</name><operator pos:start="453:59" pos:end="453:59">*</operator><name pos:start="453:60" pos:end="453:60">j</name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="455:25" pos:end="455:84"><expr pos:start="455:25" pos:end="455:83"><call pos:start="455:25" pos:end="455:44"><name pos:start="455:25" pos:end="455:31">int16_t</name> <argument_list pos:start="455:33" pos:end="455:44">(<argument pos:start="455:34" pos:end="455:43"><expr pos:start="455:34" pos:end="455:43"><operator pos:start="455:34" pos:end="455:34">*</operator> <name pos:start="455:36" pos:end="455:43">mv_cache</name></expr></argument>)</argument_list></call><index pos:start="455:45" pos:end="455:47">[<expr pos:start="455:46" pos:end="455:46"><literal type="number" pos:start="455:46" pos:end="455:46">2</literal></expr>]</index><operator pos:start="455:48" pos:end="455:48">=</operator> <operator pos:start="455:50" pos:end="455:50">&amp;</operator><name pos:start="455:51" pos:end="455:83"><name pos:start="455:51" pos:end="455:51">h</name><operator pos:start="455:52" pos:end="455:53">-&gt;</operator><name pos:start="455:54" pos:end="455:61">mv_cache</name><index pos:start="455:62" pos:end="455:67">[<expr pos:start="455:63" pos:end="455:66"><name pos:start="455:63" pos:end="455:66">list</name></expr>]</index><index pos:start="455:68" pos:end="455:83">[ <expr pos:start="455:70" pos:end="455:81"><name pos:start="455:70" pos:end="455:81"><name pos:start="455:70" pos:end="455:74">scan8</name><index pos:start="455:75" pos:end="455:81">[<expr pos:start="455:76" pos:end="455:80"><name pos:start="455:76" pos:end="455:80">index</name></expr>]</index></name></expr> ]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="457:25" pos:end="457:86"><expr pos:start="457:25" pos:end="457:85"><call pos:start="457:25" pos:end="457:45"><name pos:start="457:25" pos:end="457:31">int16_t</name> <argument_list pos:start="457:33" pos:end="457:45">(<argument pos:start="457:34" pos:end="457:44"><expr pos:start="457:34" pos:end="457:44"><operator pos:start="457:34" pos:end="457:34">*</operator> <name pos:start="457:36" pos:end="457:44">mvd_cache</name></expr></argument>)</argument_list></call><index pos:start="457:46" pos:end="457:48">[<expr pos:start="457:47" pos:end="457:47"><literal type="number" pos:start="457:47" pos:end="457:47">2</literal></expr>]</index><operator pos:start="457:49" pos:end="457:49">=</operator> <operator pos:start="457:51" pos:end="457:51">&amp;</operator><name pos:start="457:52" pos:end="457:85"><name pos:start="457:52" pos:end="457:52">h</name><operator pos:start="457:53" pos:end="457:54">-&gt;</operator><name pos:start="457:55" pos:end="457:63">mvd_cache</name><index pos:start="457:64" pos:end="457:69">[<expr pos:start="457:65" pos:end="457:68"><name pos:start="457:65" pos:end="457:68">list</name></expr>]</index><index pos:start="457:70" pos:end="457:85">[ <expr pos:start="457:72" pos:end="457:83"><name pos:start="457:72" pos:end="457:83"><name pos:start="457:72" pos:end="457:76">scan8</name><index pos:start="457:77" pos:end="457:83">[<expr pos:start="457:78" pos:end="457:82"><name pos:start="457:78" pos:end="457:82">index</name></expr>]</index></name></expr> ]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="459:25" pos:end="459:113"><expr pos:start="459:25" pos:end="459:112"><call pos:start="459:25" pos:end="459:112"><name pos:start="459:25" pos:end="459:35">pred_motion</name><argument_list pos:start="459:36" pos:end="459:112">(<argument pos:start="459:37" pos:end="459:37"><expr pos:start="459:37" pos:end="459:37"><name pos:start="459:37" pos:end="459:37">h</name></expr></argument>, <argument pos:start="459:40" pos:end="459:44"><expr pos:start="459:40" pos:end="459:44"><name pos:start="459:40" pos:end="459:44">index</name></expr></argument>, <argument pos:start="459:47" pos:end="459:57"><expr pos:start="459:47" pos:end="459:57"><name pos:start="459:47" pos:end="459:57">block_width</name></expr></argument>, <argument pos:start="459:60" pos:end="459:63"><expr pos:start="459:60" pos:end="459:63"><name pos:start="459:60" pos:end="459:63">list</name></expr></argument>, <argument pos:start="459:66" pos:end="459:99"><expr pos:start="459:66" pos:end="459:99"><name pos:start="459:66" pos:end="459:99"><name pos:start="459:66" pos:end="459:66">h</name><operator pos:start="459:67" pos:end="459:68">-&gt;</operator><name pos:start="459:69" pos:end="459:77">ref_cache</name><index pos:start="459:78" pos:end="459:83">[<expr pos:start="459:79" pos:end="459:82"><name pos:start="459:79" pos:end="459:82">list</name></expr>]</index><index pos:start="459:84" pos:end="459:99">[ <expr pos:start="459:86" pos:end="459:97"><name pos:start="459:86" pos:end="459:97"><name pos:start="459:86" pos:end="459:90">scan8</name><index pos:start="459:91" pos:end="459:97">[<expr pos:start="459:92" pos:end="459:96"><name pos:start="459:92" pos:end="459:96">index</name></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="459:102" pos:end="459:105"><expr pos:start="459:102" pos:end="459:105"><operator pos:start="459:102" pos:end="459:102">&amp;</operator><name pos:start="459:103" pos:end="459:105">mpx</name></expr></argument>, <argument pos:start="459:108" pos:end="459:111"><expr pos:start="459:108" pos:end="459:111"><operator pos:start="459:108" pos:end="459:108">&amp;</operator><name pos:start="459:109" pos:end="459:111">mpy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="463:25" pos:end="463:76"><expr pos:start="463:25" pos:end="463:75"><name pos:start="463:25" pos:end="463:26">mx</name> <operator pos:start="463:28" pos:end="463:28">=</operator> <name pos:start="463:30" pos:end="463:32">mpx</name> <operator pos:start="463:34" pos:end="463:34">+</operator> <call pos:start="463:36" pos:end="463:75"><name pos:start="463:36" pos:end="463:54">decode_cabac_mb_mvd</name><argument_list pos:start="463:55" pos:end="463:75">( <argument pos:start="463:57" pos:end="463:57"><expr pos:start="463:57" pos:end="463:57"><name pos:start="463:57" pos:end="463:57">h</name></expr></argument>, <argument pos:start="463:60" pos:end="463:63"><expr pos:start="463:60" pos:end="463:63"><name pos:start="463:60" pos:end="463:63">list</name></expr></argument>, <argument pos:start="463:66" pos:end="463:70"><expr pos:start="463:66" pos:end="463:70"><name pos:start="463:66" pos:end="463:70">index</name></expr></argument>, <argument pos:start="463:73" pos:end="463:73"><expr pos:start="463:73" pos:end="463:73"><literal type="number" pos:start="463:73" pos:end="463:73">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="465:25" pos:end="465:76"><expr pos:start="465:25" pos:end="465:75"><name pos:start="465:25" pos:end="465:26">my</name> <operator pos:start="465:28" pos:end="465:28">=</operator> <name pos:start="465:30" pos:end="465:32">mpy</name> <operator pos:start="465:34" pos:end="465:34">+</operator> <call pos:start="465:36" pos:end="465:75"><name pos:start="465:36" pos:end="465:54">decode_cabac_mb_mvd</name><argument_list pos:start="465:55" pos:end="465:75">( <argument pos:start="465:57" pos:end="465:57"><expr pos:start="465:57" pos:end="465:57"><name pos:start="465:57" pos:end="465:57">h</name></expr></argument>, <argument pos:start="465:60" pos:end="465:63"><expr pos:start="465:60" pos:end="465:63"><name pos:start="465:60" pos:end="465:63">list</name></expr></argument>, <argument pos:start="465:66" pos:end="465:70"><expr pos:start="465:66" pos:end="465:70"><name pos:start="465:66" pos:end="465:70">index</name></expr></argument>, <argument pos:start="465:73" pos:end="465:73"><expr pos:start="465:73" pos:end="465:73"><literal type="number" pos:start="465:73" pos:end="465:73">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="467:25" pos:end="467:70"><expr pos:start="467:25" pos:end="467:69"><call pos:start="467:25" pos:end="467:69"><name pos:start="467:25" pos:end="467:31">tprintf</name><argument_list pos:start="467:32" pos:end="467:69">(<argument pos:start="467:33" pos:end="467:40"><expr pos:start="467:33" pos:end="467:40"><name pos:start="467:33" pos:end="467:40"><name pos:start="467:33" pos:end="467:33">s</name><operator pos:start="467:34" pos:end="467:35">-&gt;</operator><name pos:start="467:36" pos:end="467:40">avctx</name></name></expr></argument>, <argument pos:start="467:43" pos:end="467:60"><expr pos:start="467:43" pos:end="467:60"><literal type="string" pos:start="467:43" pos:end="467:60">"final mv:%d %d\n"</literal></expr></argument>, <argument pos:start="467:63" pos:end="467:64"><expr pos:start="467:63" pos:end="467:64"><name pos:start="467:63" pos:end="467:64">mx</name></expr></argument>, <argument pos:start="467:67" pos:end="467:68"><expr pos:start="467:67" pos:end="467:68"><name pos:start="467:67" pos:end="467:68">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <if_stmt pos:start="471:25" pos:end="515:25"><if pos:start="471:25" pos:end="491:25">if<condition pos:start="471:27" pos:end="471:51">(<expr pos:start="471:28" pos:end="471:50"><call pos:start="471:28" pos:end="471:50"><name pos:start="471:28" pos:end="471:37">IS_SUB_8X8</name><argument_list pos:start="471:38" pos:end="471:50">(<argument pos:start="471:39" pos:end="471:49"><expr pos:start="471:39" pos:end="471:49"><name pos:start="471:39" pos:end="471:49">sub_mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="471:52" pos:end="491:25">{<block_content pos:start="473:29" pos:end="489:75">

                            <expr_stmt pos:start="473:29" pos:end="475:67"><expr pos:start="473:29" pos:end="475:66"><name pos:start="473:29" pos:end="473:44"><name pos:start="473:29" pos:end="473:36">mv_cache</name><index pos:start="473:37" pos:end="473:41">[ <expr pos:start="473:39" pos:end="473:39"><literal type="number" pos:start="473:39" pos:end="473:39">1</literal></expr> ]</index><index pos:start="473:42" pos:end="473:44">[<expr pos:start="473:43" pos:end="473:43"><literal type="number" pos:start="473:43" pos:end="473:43">0</literal></expr>]</index></name><operator pos:start="473:45" pos:end="473:45">=</operator>

                            <name pos:start="475:29" pos:end="475:44"><name pos:start="475:29" pos:end="475:36">mv_cache</name><index pos:start="475:37" pos:end="475:41">[ <expr pos:start="475:39" pos:end="475:39"><literal type="number" pos:start="475:39" pos:end="475:39">8</literal></expr> ]</index><index pos:start="475:42" pos:end="475:44">[<expr pos:start="475:43" pos:end="475:43"><literal type="number" pos:start="475:43" pos:end="475:43">0</literal></expr>]</index></name><operator pos:start="475:45" pos:end="475:45">=</operator> <name pos:start="475:47" pos:end="475:62"><name pos:start="475:47" pos:end="475:54">mv_cache</name><index pos:start="475:55" pos:end="475:59">[ <expr pos:start="475:57" pos:end="475:57"><literal type="number" pos:start="475:57" pos:end="475:57">9</literal></expr> ]</index><index pos:start="475:60" pos:end="475:62">[<expr pos:start="475:61" pos:end="475:61"><literal type="number" pos:start="475:61" pos:end="475:61">0</literal></expr>]</index></name><operator pos:start="475:63" pos:end="475:63">=</operator> <name pos:start="475:65" pos:end="475:66">mx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="477:29" pos:end="479:67"><expr pos:start="477:29" pos:end="479:66"><name pos:start="477:29" pos:end="477:44"><name pos:start="477:29" pos:end="477:36">mv_cache</name><index pos:start="477:37" pos:end="477:41">[ <expr pos:start="477:39" pos:end="477:39"><literal type="number" pos:start="477:39" pos:end="477:39">1</literal></expr> ]</index><index pos:start="477:42" pos:end="477:44">[<expr pos:start="477:43" pos:end="477:43"><literal type="number" pos:start="477:43" pos:end="477:43">1</literal></expr>]</index></name><operator pos:start="477:45" pos:end="477:45">=</operator>

                            <name pos:start="479:29" pos:end="479:44"><name pos:start="479:29" pos:end="479:36">mv_cache</name><index pos:start="479:37" pos:end="479:41">[ <expr pos:start="479:39" pos:end="479:39"><literal type="number" pos:start="479:39" pos:end="479:39">8</literal></expr> ]</index><index pos:start="479:42" pos:end="479:44">[<expr pos:start="479:43" pos:end="479:43"><literal type="number" pos:start="479:43" pos:end="479:43">1</literal></expr>]</index></name><operator pos:start="479:45" pos:end="479:45">=</operator> <name pos:start="479:47" pos:end="479:62"><name pos:start="479:47" pos:end="479:54">mv_cache</name><index pos:start="479:55" pos:end="479:59">[ <expr pos:start="479:57" pos:end="479:57"><literal type="number" pos:start="479:57" pos:end="479:57">9</literal></expr> ]</index><index pos:start="479:60" pos:end="479:62">[<expr pos:start="479:61" pos:end="479:61"><literal type="number" pos:start="479:61" pos:end="479:61">1</literal></expr>]</index></name><operator pos:start="479:63" pos:end="479:63">=</operator> <name pos:start="479:65" pos:end="479:66">my</name></expr>;</expr_stmt>



                            <expr_stmt pos:start="483:29" pos:end="485:75"><expr pos:start="483:29" pos:end="485:74"><name pos:start="483:29" pos:end="483:45"><name pos:start="483:29" pos:end="483:37">mvd_cache</name><index pos:start="483:38" pos:end="483:42">[ <expr pos:start="483:40" pos:end="483:40"><literal type="number" pos:start="483:40" pos:end="483:40">1</literal></expr> ]</index><index pos:start="483:43" pos:end="483:45">[<expr pos:start="483:44" pos:end="483:44"><literal type="number" pos:start="483:44" pos:end="483:44">0</literal></expr>]</index></name><operator pos:start="483:46" pos:end="483:46">=</operator>

                            <name pos:start="485:29" pos:end="485:45"><name pos:start="485:29" pos:end="485:37">mvd_cache</name><index pos:start="485:38" pos:end="485:42">[ <expr pos:start="485:40" pos:end="485:40"><literal type="number" pos:start="485:40" pos:end="485:40">8</literal></expr> ]</index><index pos:start="485:43" pos:end="485:45">[<expr pos:start="485:44" pos:end="485:44"><literal type="number" pos:start="485:44" pos:end="485:44">0</literal></expr>]</index></name><operator pos:start="485:46" pos:end="485:46">=</operator> <name pos:start="485:48" pos:end="485:64"><name pos:start="485:48" pos:end="485:56">mvd_cache</name><index pos:start="485:57" pos:end="485:61">[ <expr pos:start="485:59" pos:end="485:59"><literal type="number" pos:start="485:59" pos:end="485:59">9</literal></expr> ]</index><index pos:start="485:62" pos:end="485:64">[<expr pos:start="485:63" pos:end="485:63"><literal type="number" pos:start="485:63" pos:end="485:63">0</literal></expr>]</index></name><operator pos:start="485:65" pos:end="485:65">=</operator> <name pos:start="485:67" pos:end="485:68">mx</name> <operator pos:start="485:70" pos:end="485:70">-</operator> <name pos:start="485:72" pos:end="485:74">mpx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="487:29" pos:end="489:75"><expr pos:start="487:29" pos:end="489:74"><name pos:start="487:29" pos:end="487:45"><name pos:start="487:29" pos:end="487:37">mvd_cache</name><index pos:start="487:38" pos:end="487:42">[ <expr pos:start="487:40" pos:end="487:40"><literal type="number" pos:start="487:40" pos:end="487:40">1</literal></expr> ]</index><index pos:start="487:43" pos:end="487:45">[<expr pos:start="487:44" pos:end="487:44"><literal type="number" pos:start="487:44" pos:end="487:44">1</literal></expr>]</index></name><operator pos:start="487:46" pos:end="487:46">=</operator>

                            <name pos:start="489:29" pos:end="489:45"><name pos:start="489:29" pos:end="489:37">mvd_cache</name><index pos:start="489:38" pos:end="489:42">[ <expr pos:start="489:40" pos:end="489:40"><literal type="number" pos:start="489:40" pos:end="489:40">8</literal></expr> ]</index><index pos:start="489:43" pos:end="489:45">[<expr pos:start="489:44" pos:end="489:44"><literal type="number" pos:start="489:44" pos:end="489:44">1</literal></expr>]</index></name><operator pos:start="489:46" pos:end="489:46">=</operator> <name pos:start="489:48" pos:end="489:64"><name pos:start="489:48" pos:end="489:56">mvd_cache</name><index pos:start="489:57" pos:end="489:61">[ <expr pos:start="489:59" pos:end="489:59"><literal type="number" pos:start="489:59" pos:end="489:59">9</literal></expr> ]</index><index pos:start="489:62" pos:end="489:64">[<expr pos:start="489:63" pos:end="489:63"><literal type="number" pos:start="489:63" pos:end="489:63">1</literal></expr>]</index></name><operator pos:start="489:65" pos:end="489:65">=</operator> <name pos:start="489:67" pos:end="489:68">my</name> <operator pos:start="489:70" pos:end="489:70">-</operator> <name pos:start="489:72" pos:end="489:74">mpy</name></expr>;</expr_stmt>

                        </block_content>}</block></if><if type="elseif" pos:start="491:26" pos:end="503:25">else if<condition pos:start="491:33" pos:end="491:57">(<expr pos:start="491:34" pos:end="491:56"><call pos:start="491:34" pos:end="491:56"><name pos:start="491:34" pos:end="491:43">IS_SUB_8X4</name><argument_list pos:start="491:44" pos:end="491:56">(<argument pos:start="491:45" pos:end="491:55"><expr pos:start="491:45" pos:end="491:55"><name pos:start="491:45" pos:end="491:55">sub_mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="491:58" pos:end="503:25">{<block_content pos:start="493:29" pos:end="501:56">

                            <expr_stmt pos:start="493:29" pos:end="493:49"><expr pos:start="493:29" pos:end="493:48"><name pos:start="493:29" pos:end="493:44"><name pos:start="493:29" pos:end="493:36">mv_cache</name><index pos:start="493:37" pos:end="493:41">[ <expr pos:start="493:39" pos:end="493:39"><literal type="number" pos:start="493:39" pos:end="493:39">1</literal></expr> ]</index><index pos:start="493:42" pos:end="493:44">[<expr pos:start="493:43" pos:end="493:43"><literal type="number" pos:start="493:43" pos:end="493:43">0</literal></expr>]</index></name><operator pos:start="493:45" pos:end="493:45">=</operator> <name pos:start="493:47" pos:end="493:48">mx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="495:29" pos:end="495:49"><expr pos:start="495:29" pos:end="495:48"><name pos:start="495:29" pos:end="495:44"><name pos:start="495:29" pos:end="495:36">mv_cache</name><index pos:start="495:37" pos:end="495:41">[ <expr pos:start="495:39" pos:end="495:39"><literal type="number" pos:start="495:39" pos:end="495:39">1</literal></expr> ]</index><index pos:start="495:42" pos:end="495:44">[<expr pos:start="495:43" pos:end="495:43"><literal type="number" pos:start="495:43" pos:end="495:43">1</literal></expr>]</index></name><operator pos:start="495:45" pos:end="495:45">=</operator> <name pos:start="495:47" pos:end="495:48">my</name></expr>;</expr_stmt>



                            <expr_stmt pos:start="499:29" pos:end="499:56"><expr pos:start="499:29" pos:end="499:55"><name pos:start="499:29" pos:end="499:45"><name pos:start="499:29" pos:end="499:37">mvd_cache</name><index pos:start="499:38" pos:end="499:42">[ <expr pos:start="499:40" pos:end="499:40"><literal type="number" pos:start="499:40" pos:end="499:40">1</literal></expr> ]</index><index pos:start="499:43" pos:end="499:45">[<expr pos:start="499:44" pos:end="499:44"><literal type="number" pos:start="499:44" pos:end="499:44">0</literal></expr>]</index></name><operator pos:start="499:46" pos:end="499:46">=</operator> <name pos:start="499:48" pos:end="499:49">mx</name> <operator pos:start="499:51" pos:end="499:51">-</operator> <name pos:start="499:53" pos:end="499:55">mpx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="501:29" pos:end="501:56"><expr pos:start="501:29" pos:end="501:55"><name pos:start="501:29" pos:end="501:45"><name pos:start="501:29" pos:end="501:37">mvd_cache</name><index pos:start="501:38" pos:end="501:42">[ <expr pos:start="501:40" pos:end="501:40"><literal type="number" pos:start="501:40" pos:end="501:40">1</literal></expr> ]</index><index pos:start="501:43" pos:end="501:45">[<expr pos:start="501:44" pos:end="501:44"><literal type="number" pos:start="501:44" pos:end="501:44">1</literal></expr>]</index></name><operator pos:start="501:46" pos:end="501:46">=</operator> <name pos:start="501:48" pos:end="501:49">my</name> <operator pos:start="501:51" pos:end="501:51">-</operator> <name pos:start="501:53" pos:end="501:55">mpy</name></expr>;</expr_stmt>

                        </block_content>}</block></if><if type="elseif" pos:start="503:26" pos:end="515:25">else if<condition pos:start="503:33" pos:end="503:57">(<expr pos:start="503:34" pos:end="503:56"><call pos:start="503:34" pos:end="503:56"><name pos:start="503:34" pos:end="503:43">IS_SUB_4X8</name><argument_list pos:start="503:44" pos:end="503:56">(<argument pos:start="503:45" pos:end="503:55"><expr pos:start="503:45" pos:end="503:55"><name pos:start="503:45" pos:end="503:55">sub_mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="503:58" pos:end="515:25">{<block_content pos:start="505:29" pos:end="513:56">

                            <expr_stmt pos:start="505:29" pos:end="505:49"><expr pos:start="505:29" pos:end="505:48"><name pos:start="505:29" pos:end="505:44"><name pos:start="505:29" pos:end="505:36">mv_cache</name><index pos:start="505:37" pos:end="505:41">[ <expr pos:start="505:39" pos:end="505:39"><literal type="number" pos:start="505:39" pos:end="505:39">8</literal></expr> ]</index><index pos:start="505:42" pos:end="505:44">[<expr pos:start="505:43" pos:end="505:43"><literal type="number" pos:start="505:43" pos:end="505:43">0</literal></expr>]</index></name><operator pos:start="505:45" pos:end="505:45">=</operator> <name pos:start="505:47" pos:end="505:48">mx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="507:29" pos:end="507:49"><expr pos:start="507:29" pos:end="507:48"><name pos:start="507:29" pos:end="507:44"><name pos:start="507:29" pos:end="507:36">mv_cache</name><index pos:start="507:37" pos:end="507:41">[ <expr pos:start="507:39" pos:end="507:39"><literal type="number" pos:start="507:39" pos:end="507:39">8</literal></expr> ]</index><index pos:start="507:42" pos:end="507:44">[<expr pos:start="507:43" pos:end="507:43"><literal type="number" pos:start="507:43" pos:end="507:43">1</literal></expr>]</index></name><operator pos:start="507:45" pos:end="507:45">=</operator> <name pos:start="507:47" pos:end="507:48">my</name></expr>;</expr_stmt>



                            <expr_stmt pos:start="511:29" pos:end="511:56"><expr pos:start="511:29" pos:end="511:55"><name pos:start="511:29" pos:end="511:45"><name pos:start="511:29" pos:end="511:37">mvd_cache</name><index pos:start="511:38" pos:end="511:42">[ <expr pos:start="511:40" pos:end="511:40"><literal type="number" pos:start="511:40" pos:end="511:40">8</literal></expr> ]</index><index pos:start="511:43" pos:end="511:45">[<expr pos:start="511:44" pos:end="511:44"><literal type="number" pos:start="511:44" pos:end="511:44">0</literal></expr>]</index></name><operator pos:start="511:46" pos:end="511:46">=</operator> <name pos:start="511:48" pos:end="511:49">mx</name> <operator pos:start="511:51" pos:end="511:51">-</operator> <name pos:start="511:53" pos:end="511:55">mpx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="513:29" pos:end="513:56"><expr pos:start="513:29" pos:end="513:55"><name pos:start="513:29" pos:end="513:45"><name pos:start="513:29" pos:end="513:37">mvd_cache</name><index pos:start="513:38" pos:end="513:42">[ <expr pos:start="513:40" pos:end="513:40"><literal type="number" pos:start="513:40" pos:end="513:40">8</literal></expr> ]</index><index pos:start="513:43" pos:end="513:45">[<expr pos:start="513:44" pos:end="513:44"><literal type="number" pos:start="513:44" pos:end="513:44">1</literal></expr>]</index></name><operator pos:start="513:46" pos:end="513:46">=</operator> <name pos:start="513:48" pos:end="513:49">my</name> <operator pos:start="513:51" pos:end="513:51">-</operator> <name pos:start="513:53" pos:end="513:55">mpy</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="517:25" pos:end="517:45"><expr pos:start="517:25" pos:end="517:44"><name pos:start="517:25" pos:end="517:40"><name pos:start="517:25" pos:end="517:32">mv_cache</name><index pos:start="517:33" pos:end="517:37">[ <expr pos:start="517:35" pos:end="517:35"><literal type="number" pos:start="517:35" pos:end="517:35">0</literal></expr> ]</index><index pos:start="517:38" pos:end="517:40">[<expr pos:start="517:39" pos:end="517:39"><literal type="number" pos:start="517:39" pos:end="517:39">0</literal></expr>]</index></name><operator pos:start="517:41" pos:end="517:41">=</operator> <name pos:start="517:43" pos:end="517:44">mx</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="519:25" pos:end="519:45"><expr pos:start="519:25" pos:end="519:44"><name pos:start="519:25" pos:end="519:40"><name pos:start="519:25" pos:end="519:32">mv_cache</name><index pos:start="519:33" pos:end="519:37">[ <expr pos:start="519:35" pos:end="519:35"><literal type="number" pos:start="519:35" pos:end="519:35">0</literal></expr> ]</index><index pos:start="519:38" pos:end="519:40">[<expr pos:start="519:39" pos:end="519:39"><literal type="number" pos:start="519:39" pos:end="519:39">1</literal></expr>]</index></name><operator pos:start="519:41" pos:end="519:41">=</operator> <name pos:start="519:43" pos:end="519:44">my</name></expr>;</expr_stmt>



                        <expr_stmt pos:start="523:25" pos:end="523:52"><expr pos:start="523:25" pos:end="523:51"><name pos:start="523:25" pos:end="523:41"><name pos:start="523:25" pos:end="523:33">mvd_cache</name><index pos:start="523:34" pos:end="523:38">[ <expr pos:start="523:36" pos:end="523:36"><literal type="number" pos:start="523:36" pos:end="523:36">0</literal></expr> ]</index><index pos:start="523:39" pos:end="523:41">[<expr pos:start="523:40" pos:end="523:40"><literal type="number" pos:start="523:40" pos:end="523:40">0</literal></expr>]</index></name><operator pos:start="523:42" pos:end="523:42">=</operator> <name pos:start="523:44" pos:end="523:45">mx</name> <operator pos:start="523:47" pos:end="523:47">-</operator> <name pos:start="523:49" pos:end="523:51">mpx</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="525:25" pos:end="525:52"><expr pos:start="525:25" pos:end="525:51"><name pos:start="525:25" pos:end="525:41"><name pos:start="525:25" pos:end="525:33">mvd_cache</name><index pos:start="525:34" pos:end="525:38">[ <expr pos:start="525:36" pos:end="525:36"><literal type="number" pos:start="525:36" pos:end="525:36">0</literal></expr> ]</index><index pos:start="525:39" pos:end="525:41">[<expr pos:start="525:40" pos:end="525:40"><literal type="number" pos:start="525:40" pos:end="525:40">1</literal></expr>]</index></name><operator pos:start="525:42" pos:end="525:42">=</operator> <name pos:start="525:44" pos:end="525:45">my</name> <operator pos:start="525:47" pos:end="525:47">-</operator> <name pos:start="525:49" pos:end="525:51">mpy</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if><else pos:start="529:18" pos:end="539:17">else<block pos:start="529:22" pos:end="539:17">{<block_content pos:start="531:21" pos:end="537:50">

                    <decl_stmt pos:start="531:21" pos:end="531:81"><decl pos:start="531:21" pos:end="531:80"><type pos:start="531:21" pos:end="531:30"><name pos:start="531:21" pos:end="531:28">uint32_t</name> <modifier pos:start="531:30" pos:end="531:30">*</modifier></type><name pos:start="531:31" pos:end="531:31">p</name><init pos:start="531:32" pos:end="531:80">= <expr pos:start="531:34" pos:end="531:80"><operator pos:start="531:34" pos:end="531:34">(</operator><name pos:start="531:35" pos:end="531:42">uint32_t</name> <operator pos:start="531:44" pos:end="531:44">*</operator><operator pos:start="531:45" pos:end="531:45">)</operator><operator pos:start="531:46" pos:end="531:46">&amp;</operator><name pos:start="531:47" pos:end="531:80"><name pos:start="531:47" pos:end="531:47">h</name><operator pos:start="531:48" pos:end="531:49">-&gt;</operator><name pos:start="531:50" pos:end="531:57">mv_cache</name><index pos:start="531:58" pos:end="531:63">[<expr pos:start="531:59" pos:end="531:62"><name pos:start="531:59" pos:end="531:62">list</name></expr>]</index><index pos:start="531:64" pos:end="531:77">[ <expr pos:start="531:66" pos:end="531:75"><name pos:start="531:66" pos:end="531:75"><name pos:start="531:66" pos:end="531:70">scan8</name><index pos:start="531:71" pos:end="531:75">[<expr pos:start="531:72" pos:end="531:74"><literal type="number" pos:start="531:72" pos:end="531:72">4</literal><operator pos:start="531:73" pos:end="531:73">*</operator><name pos:start="531:74" pos:end="531:74">i</name></expr>]</index></name></expr> ]</index><index pos:start="531:78" pos:end="531:80">[<expr pos:start="531:79" pos:end="531:79"><literal type="number" pos:start="531:79" pos:end="531:79">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="533:21" pos:end="533:83"><decl pos:start="533:21" pos:end="533:82"><type pos:start="533:21" pos:end="533:30"><name pos:start="533:21" pos:end="533:28">uint32_t</name> <modifier pos:start="533:30" pos:end="533:30">*</modifier></type><name pos:start="533:31" pos:end="533:32">pd</name><init pos:start="533:33" pos:end="533:82">= <expr pos:start="533:35" pos:end="533:82"><operator pos:start="533:35" pos:end="533:35">(</operator><name pos:start="533:36" pos:end="533:43">uint32_t</name> <operator pos:start="533:45" pos:end="533:45">*</operator><operator pos:start="533:46" pos:end="533:46">)</operator><operator pos:start="533:47" pos:end="533:47">&amp;</operator><name pos:start="533:48" pos:end="533:82"><name pos:start="533:48" pos:end="533:48">h</name><operator pos:start="533:49" pos:end="533:50">-&gt;</operator><name pos:start="533:51" pos:end="533:59">mvd_cache</name><index pos:start="533:60" pos:end="533:65">[<expr pos:start="533:61" pos:end="533:64"><name pos:start="533:61" pos:end="533:64">list</name></expr>]</index><index pos:start="533:66" pos:end="533:79">[ <expr pos:start="533:68" pos:end="533:77"><name pos:start="533:68" pos:end="533:77"><name pos:start="533:68" pos:end="533:72">scan8</name><index pos:start="533:73" pos:end="533:77">[<expr pos:start="533:74" pos:end="533:76"><literal type="number" pos:start="533:74" pos:end="533:74">4</literal><operator pos:start="533:75" pos:end="533:75">*</operator><name pos:start="533:76" pos:end="533:76">i</name></expr>]</index></name></expr> ]</index><index pos:start="533:80" pos:end="533:82">[<expr pos:start="533:81" pos:end="533:81"><literal type="number" pos:start="533:81" pos:end="533:81">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="535:21" pos:end="535:50"><expr pos:start="535:21" pos:end="535:49"><name pos:start="535:21" pos:end="535:24"><name pos:start="535:21" pos:end="535:21">p</name><index pos:start="535:22" pos:end="535:24">[<expr pos:start="535:23" pos:end="535:23"><literal type="number" pos:start="535:23" pos:end="535:23">0</literal></expr>]</index></name> <operator pos:start="535:26" pos:end="535:26">=</operator> <name pos:start="535:28" pos:end="535:31"><name pos:start="535:28" pos:end="535:28">p</name><index pos:start="535:29" pos:end="535:31">[<expr pos:start="535:30" pos:end="535:30"><literal type="number" pos:start="535:30" pos:end="535:30">1</literal></expr>]</index></name> <operator pos:start="535:33" pos:end="535:33">=</operator> <name pos:start="535:35" pos:end="535:38"><name pos:start="535:35" pos:end="535:35">p</name><index pos:start="535:36" pos:end="535:38">[<expr pos:start="535:37" pos:end="535:37"><literal type="number" pos:start="535:37" pos:end="535:37">8</literal></expr>]</index></name> <operator pos:start="535:40" pos:end="535:40">=</operator> <name pos:start="535:42" pos:end="535:45"><name pos:start="535:42" pos:end="535:42">p</name><index pos:start="535:43" pos:end="535:45">[<expr pos:start="535:44" pos:end="535:44"><literal type="number" pos:start="535:44" pos:end="535:44">9</literal></expr>]</index></name> <operator pos:start="535:47" pos:end="535:47">=</operator> <literal type="number" pos:start="535:49" pos:end="535:49">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="537:21" pos:end="537:50"><expr pos:start="537:21" pos:end="537:49"><name pos:start="537:21" pos:end="537:25"><name pos:start="537:21" pos:end="537:22">pd</name><index pos:start="537:23" pos:end="537:25">[<expr pos:start="537:24" pos:end="537:24"><literal type="number" pos:start="537:24" pos:end="537:24">0</literal></expr>]</index></name><operator pos:start="537:26" pos:end="537:26">=</operator> <name pos:start="537:28" pos:end="537:32"><name pos:start="537:28" pos:end="537:29">pd</name><index pos:start="537:30" pos:end="537:32">[<expr pos:start="537:31" pos:end="537:31"><literal type="number" pos:start="537:31" pos:end="537:31">1</literal></expr>]</index></name><operator pos:start="537:33" pos:end="537:33">=</operator> <name pos:start="537:35" pos:end="537:39"><name pos:start="537:35" pos:end="537:36">pd</name><index pos:start="537:37" pos:end="537:39">[<expr pos:start="537:38" pos:end="537:38"><literal type="number" pos:start="537:38" pos:end="537:38">8</literal></expr>]</index></name><operator pos:start="537:40" pos:end="537:40">=</operator> <name pos:start="537:42" pos:end="537:46"><name pos:start="537:42" pos:end="537:43">pd</name><index pos:start="537:44" pos:end="537:46">[<expr pos:start="537:45" pos:end="537:45"><literal type="number" pos:start="537:45" pos:end="537:45">9</literal></expr>]</index></name><operator pos:start="537:47" pos:end="537:47">=</operator> <literal type="number" pos:start="537:49" pos:end="537:49">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="545:7" pos:end="555:5">else if<condition pos:start="545:14" pos:end="545:35">( <expr pos:start="545:16" pos:end="545:33"><call pos:start="545:16" pos:end="545:33"><name pos:start="545:16" pos:end="545:24">IS_DIRECT</name><argument_list pos:start="545:25" pos:end="545:33">(<argument pos:start="545:26" pos:end="545:32"><expr pos:start="545:26" pos:end="545:32"><name pos:start="545:26" pos:end="545:32">mb_type</name></expr></argument>)</argument_list></call></expr> )</condition> <block pos:start="545:37" pos:end="555:5">{<block_content pos:start="547:9" pos:end="553:59">

        <expr_stmt pos:start="547:9" pos:end="547:48"><expr pos:start="547:9" pos:end="547:47"><call pos:start="547:9" pos:end="547:47"><name pos:start="547:9" pos:end="547:34">ff_h264_pred_direct_motion</name><argument_list pos:start="547:35" pos:end="547:47">(<argument pos:start="547:36" pos:end="547:36"><expr pos:start="547:36" pos:end="547:36"><name pos:start="547:36" pos:end="547:36">h</name></expr></argument>, <argument pos:start="547:39" pos:end="547:46"><expr pos:start="547:39" pos:end="547:46"><operator pos:start="547:39" pos:end="547:39">&amp;</operator><name pos:start="547:40" pos:end="547:46">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="549:9" pos:end="549:65"><expr pos:start="549:9" pos:end="549:64"><call pos:start="549:9" pos:end="549:64"><name pos:start="549:9" pos:end="549:22">fill_rectangle</name><argument_list pos:start="549:23" pos:end="549:64">(<argument pos:start="549:24" pos:end="549:48"><expr pos:start="549:24" pos:end="549:48"><name pos:start="549:24" pos:end="549:48"><name pos:start="549:24" pos:end="549:24">h</name><operator pos:start="549:25" pos:end="549:26">-&gt;</operator><name pos:start="549:27" pos:end="549:35">mvd_cache</name><index pos:start="549:36" pos:end="549:38">[<expr pos:start="549:37" pos:end="549:37"><literal type="number" pos:start="549:37" pos:end="549:37">0</literal></expr>]</index><index pos:start="549:39" pos:end="549:48">[<expr pos:start="549:40" pos:end="549:47"><name pos:start="549:40" pos:end="549:47"><name pos:start="549:40" pos:end="549:44">scan8</name><index pos:start="549:45" pos:end="549:47">[<expr pos:start="549:46" pos:end="549:46"><literal type="number" pos:start="549:46" pos:end="549:46">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="549:51" pos:end="549:51"><expr pos:start="549:51" pos:end="549:51"><literal type="number" pos:start="549:51" pos:end="549:51">4</literal></expr></argument>, <argument pos:start="549:54" pos:end="549:54"><expr pos:start="549:54" pos:end="549:54"><literal type="number" pos:start="549:54" pos:end="549:54">4</literal></expr></argument>, <argument pos:start="549:57" pos:end="549:57"><expr pos:start="549:57" pos:end="549:57"><literal type="number" pos:start="549:57" pos:end="549:57">8</literal></expr></argument>, <argument pos:start="549:60" pos:end="549:60"><expr pos:start="549:60" pos:end="549:60"><literal type="number" pos:start="549:60" pos:end="549:60">0</literal></expr></argument>, <argument pos:start="549:63" pos:end="549:63"><expr pos:start="549:63" pos:end="549:63"><literal type="number" pos:start="549:63" pos:end="549:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="551:9" pos:end="551:65"><expr pos:start="551:9" pos:end="551:64"><call pos:start="551:9" pos:end="551:64"><name pos:start="551:9" pos:end="551:22">fill_rectangle</name><argument_list pos:start="551:23" pos:end="551:64">(<argument pos:start="551:24" pos:end="551:48"><expr pos:start="551:24" pos:end="551:48"><name pos:start="551:24" pos:end="551:48"><name pos:start="551:24" pos:end="551:24">h</name><operator pos:start="551:25" pos:end="551:26">-&gt;</operator><name pos:start="551:27" pos:end="551:35">mvd_cache</name><index pos:start="551:36" pos:end="551:38">[<expr pos:start="551:37" pos:end="551:37"><literal type="number" pos:start="551:37" pos:end="551:37">1</literal></expr>]</index><index pos:start="551:39" pos:end="551:48">[<expr pos:start="551:40" pos:end="551:47"><name pos:start="551:40" pos:end="551:47"><name pos:start="551:40" pos:end="551:44">scan8</name><index pos:start="551:45" pos:end="551:47">[<expr pos:start="551:46" pos:end="551:46"><literal type="number" pos:start="551:46" pos:end="551:46">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="551:51" pos:end="551:51"><expr pos:start="551:51" pos:end="551:51"><literal type="number" pos:start="551:51" pos:end="551:51">4</literal></expr></argument>, <argument pos:start="551:54" pos:end="551:54"><expr pos:start="551:54" pos:end="551:54"><literal type="number" pos:start="551:54" pos:end="551:54">4</literal></expr></argument>, <argument pos:start="551:57" pos:end="551:57"><expr pos:start="551:57" pos:end="551:57"><literal type="number" pos:start="551:57" pos:end="551:57">8</literal></expr></argument>, <argument pos:start="551:60" pos:end="551:60"><expr pos:start="551:60" pos:end="551:60"><literal type="number" pos:start="551:60" pos:end="551:60">0</literal></expr></argument>, <argument pos:start="551:63" pos:end="551:63"><expr pos:start="551:63" pos:end="551:63"><literal type="number" pos:start="551:63" pos:end="551:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="553:9" pos:end="553:59"><expr pos:start="553:9" pos:end="553:58"><name pos:start="553:9" pos:end="553:22">dct8x8_allowed</name> <operator pos:start="553:24" pos:end="553:25">&amp;=</operator> <name pos:start="553:27" pos:end="553:58"><name pos:start="553:27" pos:end="553:27">h</name><operator pos:start="553:28" pos:end="553:29">-&gt;</operator><name pos:start="553:30" pos:end="553:32">sps</name><operator pos:start="553:33" pos:end="553:33">.</operator><name pos:start="553:34" pos:end="553:58">direct_8x8_inference_flag</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="555:7" pos:end="759:5">else <block pos:start="555:12" pos:end="759:5">{<block_content pos:start="557:9" pos:end="757:9">

        <decl_stmt pos:start="557:9" pos:end="557:38"><decl pos:start="557:9" pos:end="557:16"><type pos:start="557:9" pos:end="557:11"><name pos:start="557:9" pos:end="557:11">int</name></type> <name pos:start="557:13" pos:end="557:16">list</name></decl>, <decl pos:start="557:19" pos:end="557:20"><type ref="prev" pos:start="557:9" pos:end="557:11"/><name pos:start="557:19" pos:end="557:20">mx</name></decl>, <decl pos:start="557:23" pos:end="557:24"><type ref="prev" pos:start="557:9" pos:end="557:11"/><name pos:start="557:23" pos:end="557:24">my</name></decl>, <decl pos:start="557:27" pos:end="557:27"><type ref="prev" pos:start="557:9" pos:end="557:11"/><name pos:start="557:27" pos:end="557:27">i</name></decl>, <decl pos:start="557:30" pos:end="557:32"><type ref="prev" pos:start="557:9" pos:end="557:11"/><name pos:start="557:30" pos:end="557:32">mpx</name></decl>, <decl pos:start="557:35" pos:end="557:37"><type ref="prev" pos:start="557:9" pos:end="557:11"/><name pos:start="557:35" pos:end="557:37">mpy</name></decl>;</decl_stmt>

        <if_stmt pos:start="559:9" pos:end="757:9"><if pos:start="559:9" pos:end="617:9">if<condition pos:start="559:11" pos:end="559:29">(<expr pos:start="559:12" pos:end="559:28"><call pos:start="559:12" pos:end="559:28"><name pos:start="559:12" pos:end="559:19">IS_16X16</name><argument_list pos:start="559:20" pos:end="559:28">(<argument pos:start="559:21" pos:end="559:27"><expr pos:start="559:21" pos:end="559:27"><name pos:start="559:21" pos:end="559:27">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="559:30" pos:end="617:9">{<block_content pos:start="561:13" pos:end="615:13">

            <for pos:start="561:13" pos:end="589:13">for<control pos:start="561:16" pos:end="561:51">(<init pos:start="561:17" pos:end="561:23"><expr pos:start="561:17" pos:end="561:22"><name pos:start="561:17" pos:end="561:20">list</name><operator pos:start="561:21" pos:end="561:21">=</operator><literal type="number" pos:start="561:22" pos:end="561:22">0</literal></expr>;</init> <condition pos:start="561:25" pos:end="561:43"><expr pos:start="561:25" pos:end="561:42"><name pos:start="561:25" pos:end="561:28">list</name><operator pos:start="561:29" pos:end="561:29">&lt;</operator><name pos:start="561:30" pos:end="561:42"><name pos:start="561:30" pos:end="561:30">h</name><operator pos:start="561:31" pos:end="561:32">-&gt;</operator><name pos:start="561:33" pos:end="561:42">list_count</name></name></expr>;</condition> <incr pos:start="561:45" pos:end="561:50"><expr pos:start="561:45" pos:end="561:50"><name pos:start="561:45" pos:end="561:48">list</name><operator pos:start="561:49" pos:end="561:50">++</operator></expr></incr>)</control><block pos:start="561:52" pos:end="589:13">{<block_content pos:start="563:17" pos:end="587:104">

                <if_stmt pos:start="563:17" pos:end="587:104"><if pos:start="563:17" pos:end="585:17">if<condition pos:start="563:19" pos:end="563:44">(<expr pos:start="563:20" pos:end="563:43"><call pos:start="563:20" pos:end="563:43"><name pos:start="563:20" pos:end="563:25">IS_DIR</name><argument_list pos:start="563:26" pos:end="563:43">(<argument pos:start="563:27" pos:end="563:33"><expr pos:start="563:27" pos:end="563:33"><name pos:start="563:27" pos:end="563:33">mb_type</name></expr></argument>, <argument pos:start="563:36" pos:end="563:36"><expr pos:start="563:36" pos:end="563:36"><literal type="number" pos:start="563:36" pos:end="563:36">0</literal></expr></argument>, <argument pos:start="563:39" pos:end="563:42"><expr pos:start="563:39" pos:end="563:42"><name pos:start="563:39" pos:end="563:42">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="563:45" pos:end="585:17">{<block_content pos:start="565:21" pos:end="583:89">

                    <decl_stmt pos:start="565:21" pos:end="565:28"><decl pos:start="565:21" pos:end="565:27"><type pos:start="565:21" pos:end="565:23"><name pos:start="565:21" pos:end="565:23">int</name></type> <name pos:start="565:25" pos:end="565:27">ref</name></decl>;</decl_stmt>

                    <if_stmt pos:start="567:21" pos:end="581:30"><if pos:start="567:21" pos:end="579:21">if<condition pos:start="567:23" pos:end="567:46">(<expr pos:start="567:24" pos:end="567:45"><name pos:start="567:24" pos:end="567:41"><name pos:start="567:24" pos:end="567:24">h</name><operator pos:start="567:25" pos:end="567:26">-&gt;</operator><name pos:start="567:27" pos:end="567:35">ref_count</name><index pos:start="567:36" pos:end="567:41">[<expr pos:start="567:37" pos:end="567:40"><name pos:start="567:37" pos:end="567:40">list</name></expr>]</index></name> <operator pos:start="567:43" pos:end="567:43">&gt;</operator> <literal type="number" pos:start="567:45" pos:end="567:45">1</literal></expr>)</condition><block pos:start="567:47" pos:end="579:21">{<block_content pos:start="569:25" pos:end="577:25">

                        <expr_stmt pos:start="569:25" pos:end="569:61"><expr pos:start="569:25" pos:end="569:60"><name pos:start="569:25" pos:end="569:27">ref</name><operator pos:start="569:28" pos:end="569:28">=</operator> <call pos:start="569:30" pos:end="569:60"><name pos:start="569:30" pos:end="569:48">decode_cabac_mb_ref</name><argument_list pos:start="569:49" pos:end="569:60">(<argument pos:start="569:50" pos:end="569:50"><expr pos:start="569:50" pos:end="569:50"><name pos:start="569:50" pos:end="569:50">h</name></expr></argument>, <argument pos:start="569:53" pos:end="569:56"><expr pos:start="569:53" pos:end="569:56"><name pos:start="569:53" pos:end="569:56">list</name></expr></argument>, <argument pos:start="569:59" pos:end="569:59"><expr pos:start="569:59" pos:end="569:59"><literal type="number" pos:start="569:59" pos:end="569:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="571:25" pos:end="577:25"><if pos:start="571:25" pos:end="577:25">if<condition pos:start="571:27" pos:end="571:63">(<expr pos:start="571:28" pos:end="571:62"><name pos:start="571:28" pos:end="571:30">ref</name> <operator pos:start="571:32" pos:end="571:33">&gt;=</operator> <operator pos:start="571:35" pos:end="571:35">(</operator><name pos:start="571:36" pos:end="571:43">unsigned</name><operator pos:start="571:44" pos:end="571:44">)</operator><name pos:start="571:45" pos:end="571:62"><name pos:start="571:45" pos:end="571:45">h</name><operator pos:start="571:46" pos:end="571:47">-&gt;</operator><name pos:start="571:48" pos:end="571:56">ref_count</name><index pos:start="571:57" pos:end="571:62">[<expr pos:start="571:58" pos:end="571:61"><name pos:start="571:58" pos:end="571:61">list</name></expr>]</index></name></expr>)</condition><block pos:start="571:64" pos:end="577:25">{<block_content pos:start="573:29" pos:end="575:38">

                            <expr_stmt pos:start="573:29" pos:end="573:108"><expr pos:start="573:29" pos:end="573:107"><call pos:start="573:29" pos:end="573:107"><name pos:start="573:29" pos:end="573:34">av_log</name><argument_list pos:start="573:35" pos:end="573:107">(<argument pos:start="573:36" pos:end="573:43"><expr pos:start="573:36" pos:end="573:43"><name pos:start="573:36" pos:end="573:43"><name pos:start="573:36" pos:end="573:36">s</name><operator pos:start="573:37" pos:end="573:38">-&gt;</operator><name pos:start="573:39" pos:end="573:43">avctx</name></name></expr></argument>, <argument pos:start="573:46" pos:end="573:57"><expr pos:start="573:46" pos:end="573:57"><name pos:start="573:46" pos:end="573:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="573:60" pos:end="573:81"><expr pos:start="573:60" pos:end="573:81"><literal type="string" pos:start="573:60" pos:end="573:81">"Reference %d &gt;= %d\n"</literal></expr></argument>, <argument pos:start="573:84" pos:end="573:86"><expr pos:start="573:84" pos:end="573:86"><name pos:start="573:84" pos:end="573:86">ref</name></expr></argument>, <argument pos:start="573:89" pos:end="573:106"><expr pos:start="573:89" pos:end="573:106"><name pos:start="573:89" pos:end="573:106"><name pos:start="573:89" pos:end="573:89">h</name><operator pos:start="573:90" pos:end="573:91">-&gt;</operator><name pos:start="573:92" pos:end="573:100">ref_count</name><index pos:start="573:101" pos:end="573:106">[<expr pos:start="573:102" pos:end="573:105"><name pos:start="573:102" pos:end="573:105">list</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="575:29" pos:end="575:38">return <expr pos:start="575:36" pos:end="575:37"><operator pos:start="575:36" pos:end="575:36">-</operator><literal type="number" pos:start="575:37" pos:end="575:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if><else pos:start="579:22" pos:end="581:30">else<block type="pseudo" pos:start="581:25" pos:end="581:30"><block_content pos:start="581:25" pos:end="581:30">

                        <expr_stmt pos:start="581:25" pos:end="581:30"><expr pos:start="581:25" pos:end="581:29"><name pos:start="581:25" pos:end="581:27">ref</name><operator pos:start="581:28" pos:end="581:28">=</operator><literal type="number" pos:start="581:29" pos:end="581:29">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="583:25" pos:end="583:89"><expr pos:start="583:25" pos:end="583:88"><call pos:start="583:25" pos:end="583:88"><name pos:start="583:25" pos:end="583:38">fill_rectangle</name><argument_list pos:start="583:39" pos:end="583:88">(<argument pos:start="583:40" pos:end="583:70"><expr pos:start="583:40" pos:end="583:70"><operator pos:start="583:40" pos:end="583:40">&amp;</operator><name pos:start="583:41" pos:end="583:70"><name pos:start="583:41" pos:end="583:41">h</name><operator pos:start="583:42" pos:end="583:43">-&gt;</operator><name pos:start="583:44" pos:end="583:52">ref_cache</name><index pos:start="583:53" pos:end="583:58">[<expr pos:start="583:54" pos:end="583:57"><name pos:start="583:54" pos:end="583:57">list</name></expr>]</index><index pos:start="583:59" pos:end="583:70">[ <expr pos:start="583:61" pos:end="583:68"><name pos:start="583:61" pos:end="583:68"><name pos:start="583:61" pos:end="583:65">scan8</name><index pos:start="583:66" pos:end="583:68">[<expr pos:start="583:67" pos:end="583:67"><literal type="number" pos:start="583:67" pos:end="583:67">0</literal></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="583:73" pos:end="583:73"><expr pos:start="583:73" pos:end="583:73"><literal type="number" pos:start="583:73" pos:end="583:73">4</literal></expr></argument>, <argument pos:start="583:76" pos:end="583:76"><expr pos:start="583:76" pos:end="583:76"><literal type="number" pos:start="583:76" pos:end="583:76">4</literal></expr></argument>, <argument pos:start="583:79" pos:end="583:79"><expr pos:start="583:79" pos:end="583:79"><literal type="number" pos:start="583:79" pos:end="583:79">8</literal></expr></argument>, <argument pos:start="583:82" pos:end="583:84"><expr pos:start="583:82" pos:end="583:84"><name pos:start="583:82" pos:end="583:84">ref</name></expr></argument>, <argument pos:start="583:87" pos:end="583:87"><expr pos:start="583:87" pos:end="583:87"><literal type="number" pos:start="583:87" pos:end="583:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="585:18" pos:end="587:104">else<block type="pseudo" pos:start="587:21" pos:end="587:104"><block_content pos:start="587:21" pos:end="587:104">

                    <expr_stmt pos:start="587:21" pos:end="587:104"><expr pos:start="587:21" pos:end="587:103"><call pos:start="587:21" pos:end="587:103"><name pos:start="587:21" pos:end="587:34">fill_rectangle</name><argument_list pos:start="587:35" pos:end="587:103">(<argument pos:start="587:36" pos:end="587:66"><expr pos:start="587:36" pos:end="587:66"><operator pos:start="587:36" pos:end="587:36">&amp;</operator><name pos:start="587:37" pos:end="587:66"><name pos:start="587:37" pos:end="587:37">h</name><operator pos:start="587:38" pos:end="587:39">-&gt;</operator><name pos:start="587:40" pos:end="587:48">ref_cache</name><index pos:start="587:49" pos:end="587:54">[<expr pos:start="587:50" pos:end="587:53"><name pos:start="587:50" pos:end="587:53">list</name></expr>]</index><index pos:start="587:55" pos:end="587:66">[ <expr pos:start="587:57" pos:end="587:64"><name pos:start="587:57" pos:end="587:64"><name pos:start="587:57" pos:end="587:61">scan8</name><index pos:start="587:62" pos:end="587:64">[<expr pos:start="587:63" pos:end="587:63"><literal type="number" pos:start="587:63" pos:end="587:63">0</literal></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="587:69" pos:end="587:69"><expr pos:start="587:69" pos:end="587:69"><literal type="number" pos:start="587:69" pos:end="587:69">4</literal></expr></argument>, <argument pos:start="587:72" pos:end="587:72"><expr pos:start="587:72" pos:end="587:72"><literal type="number" pos:start="587:72" pos:end="587:72">4</literal></expr></argument>, <argument pos:start="587:75" pos:end="587:75"><expr pos:start="587:75" pos:end="587:75"><literal type="number" pos:start="587:75" pos:end="587:75">8</literal></expr></argument>, <argument pos:start="587:78" pos:end="587:99"><expr pos:start="587:78" pos:end="587:99"><operator pos:start="587:78" pos:end="587:78">(</operator><name pos:start="587:79" pos:end="587:85">uint8_t</name><operator pos:start="587:86" pos:end="587:86">)</operator><name pos:start="587:87" pos:end="587:99">LIST_NOT_USED</name></expr></argument>, <argument pos:start="587:102" pos:end="587:102"><expr pos:start="587:102" pos:end="587:102"><literal type="number" pos:start="587:102" pos:end="587:102">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="587:106" pos:end="587:156">//FIXME factorize and the other fill_rect below too</comment>

            </block_content>}</block></for>

            <for pos:start="591:13" pos:end="615:13">for<control pos:start="591:16" pos:end="591:51">(<init pos:start="591:17" pos:end="591:23"><expr pos:start="591:17" pos:end="591:22"><name pos:start="591:17" pos:end="591:20">list</name><operator pos:start="591:21" pos:end="591:21">=</operator><literal type="number" pos:start="591:22" pos:end="591:22">0</literal></expr>;</init> <condition pos:start="591:25" pos:end="591:43"><expr pos:start="591:25" pos:end="591:42"><name pos:start="591:25" pos:end="591:28">list</name><operator pos:start="591:29" pos:end="591:29">&lt;</operator><name pos:start="591:30" pos:end="591:42"><name pos:start="591:30" pos:end="591:30">h</name><operator pos:start="591:31" pos:end="591:32">-&gt;</operator><name pos:start="591:33" pos:end="591:42">list_count</name></name></expr>;</condition> <incr pos:start="591:45" pos:end="591:50"><expr pos:start="591:45" pos:end="591:50"><name pos:start="591:45" pos:end="591:48">list</name><operator pos:start="591:49" pos:end="591:50">++</operator></expr></incr>)</control><block pos:start="591:52" pos:end="615:13">{<block_content pos:start="593:17" pos:end="613:81">

                <if_stmt pos:start="593:17" pos:end="613:81"><if pos:start="593:17" pos:end="611:17">if<condition pos:start="593:19" pos:end="593:44">(<expr pos:start="593:20" pos:end="593:43"><call pos:start="593:20" pos:end="593:43"><name pos:start="593:20" pos:end="593:25">IS_DIR</name><argument_list pos:start="593:26" pos:end="593:43">(<argument pos:start="593:27" pos:end="593:33"><expr pos:start="593:27" pos:end="593:33"><name pos:start="593:27" pos:end="593:33">mb_type</name></expr></argument>, <argument pos:start="593:36" pos:end="593:36"><expr pos:start="593:36" pos:end="593:36"><literal type="number" pos:start="593:36" pos:end="593:36">0</literal></expr></argument>, <argument pos:start="593:39" pos:end="593:42"><expr pos:start="593:39" pos:end="593:42"><name pos:start="593:39" pos:end="593:42">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="593:45" pos:end="611:17">{<block_content pos:start="595:21" pos:end="609:97">

                    <expr_stmt pos:start="595:21" pos:end="595:91"><expr pos:start="595:21" pos:end="595:90"><call pos:start="595:21" pos:end="595:90"><name pos:start="595:21" pos:end="595:31">pred_motion</name><argument_list pos:start="595:32" pos:end="595:90">(<argument pos:start="595:33" pos:end="595:33"><expr pos:start="595:33" pos:end="595:33"><name pos:start="595:33" pos:end="595:33">h</name></expr></argument>, <argument pos:start="595:36" pos:end="595:36"><expr pos:start="595:36" pos:end="595:36"><literal type="number" pos:start="595:36" pos:end="595:36">0</literal></expr></argument>, <argument pos:start="595:39" pos:end="595:39"><expr pos:start="595:39" pos:end="595:39"><literal type="number" pos:start="595:39" pos:end="595:39">4</literal></expr></argument>, <argument pos:start="595:42" pos:end="595:45"><expr pos:start="595:42" pos:end="595:45"><name pos:start="595:42" pos:end="595:45">list</name></expr></argument>, <argument pos:start="595:48" pos:end="595:77"><expr pos:start="595:48" pos:end="595:77"><name pos:start="595:48" pos:end="595:77"><name pos:start="595:48" pos:end="595:48">h</name><operator pos:start="595:49" pos:end="595:50">-&gt;</operator><name pos:start="595:51" pos:end="595:59">ref_cache</name><index pos:start="595:60" pos:end="595:65">[<expr pos:start="595:61" pos:end="595:64"><name pos:start="595:61" pos:end="595:64">list</name></expr>]</index><index pos:start="595:66" pos:end="595:77">[ <expr pos:start="595:68" pos:end="595:75"><name pos:start="595:68" pos:end="595:75"><name pos:start="595:68" pos:end="595:72">scan8</name><index pos:start="595:73" pos:end="595:75">[<expr pos:start="595:74" pos:end="595:74"><literal type="number" pos:start="595:74" pos:end="595:74">0</literal></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="595:80" pos:end="595:83"><expr pos:start="595:80" pos:end="595:83"><operator pos:start="595:80" pos:end="595:80">&amp;</operator><name pos:start="595:81" pos:end="595:83">mpx</name></expr></argument>, <argument pos:start="595:86" pos:end="595:89"><expr pos:start="595:86" pos:end="595:89"><operator pos:start="595:86" pos:end="595:86">&amp;</operator><name pos:start="595:87" pos:end="595:89">mpy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="599:21" pos:end="599:68"><expr pos:start="599:21" pos:end="599:67"><name pos:start="599:21" pos:end="599:22">mx</name> <operator pos:start="599:24" pos:end="599:24">=</operator> <name pos:start="599:26" pos:end="599:28">mpx</name> <operator pos:start="599:30" pos:end="599:30">+</operator> <call pos:start="599:32" pos:end="599:67"><name pos:start="599:32" pos:end="599:50">decode_cabac_mb_mvd</name><argument_list pos:start="599:51" pos:end="599:67">( <argument pos:start="599:53" pos:end="599:53"><expr pos:start="599:53" pos:end="599:53"><name pos:start="599:53" pos:end="599:53">h</name></expr></argument>, <argument pos:start="599:56" pos:end="599:59"><expr pos:start="599:56" pos:end="599:59"><name pos:start="599:56" pos:end="599:59">list</name></expr></argument>, <argument pos:start="599:62" pos:end="599:62"><expr pos:start="599:62" pos:end="599:62"><literal type="number" pos:start="599:62" pos:end="599:62">0</literal></expr></argument>, <argument pos:start="599:65" pos:end="599:65"><expr pos:start="599:65" pos:end="599:65"><literal type="number" pos:start="599:65" pos:end="599:65">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="601:21" pos:end="601:68"><expr pos:start="601:21" pos:end="601:67"><name pos:start="601:21" pos:end="601:22">my</name> <operator pos:start="601:24" pos:end="601:24">=</operator> <name pos:start="601:26" pos:end="601:28">mpy</name> <operator pos:start="601:30" pos:end="601:30">+</operator> <call pos:start="601:32" pos:end="601:67"><name pos:start="601:32" pos:end="601:50">decode_cabac_mb_mvd</name><argument_list pos:start="601:51" pos:end="601:67">( <argument pos:start="601:53" pos:end="601:53"><expr pos:start="601:53" pos:end="601:53"><name pos:start="601:53" pos:end="601:53">h</name></expr></argument>, <argument pos:start="601:56" pos:end="601:59"><expr pos:start="601:56" pos:end="601:59"><name pos:start="601:56" pos:end="601:59">list</name></expr></argument>, <argument pos:start="601:62" pos:end="601:62"><expr pos:start="601:62" pos:end="601:62"><literal type="number" pos:start="601:62" pos:end="601:62">0</literal></expr></argument>, <argument pos:start="601:65" pos:end="601:65"><expr pos:start="601:65" pos:end="601:65"><literal type="number" pos:start="601:65" pos:end="601:65">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="603:21" pos:end="603:66"><expr pos:start="603:21" pos:end="603:65"><call pos:start="603:21" pos:end="603:65"><name pos:start="603:21" pos:end="603:27">tprintf</name><argument_list pos:start="603:28" pos:end="603:65">(<argument pos:start="603:29" pos:end="603:36"><expr pos:start="603:29" pos:end="603:36"><name pos:start="603:29" pos:end="603:36"><name pos:start="603:29" pos:end="603:29">s</name><operator pos:start="603:30" pos:end="603:31">-&gt;</operator><name pos:start="603:32" pos:end="603:36">avctx</name></name></expr></argument>, <argument pos:start="603:39" pos:end="603:56"><expr pos:start="603:39" pos:end="603:56"><literal type="string" pos:start="603:39" pos:end="603:56">"final mv:%d %d\n"</literal></expr></argument>, <argument pos:start="603:59" pos:end="603:60"><expr pos:start="603:59" pos:end="603:60"><name pos:start="603:59" pos:end="603:60">mx</name></expr></argument>, <argument pos:start="603:63" pos:end="603:64"><expr pos:start="603:63" pos:end="603:64"><name pos:start="603:63" pos:end="603:64">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="607:21" pos:end="607:106"><expr pos:start="607:21" pos:end="607:105"><call pos:start="607:21" pos:end="607:105"><name pos:start="607:21" pos:end="607:34">fill_rectangle</name><argument_list pos:start="607:35" pos:end="607:105">(<argument pos:start="607:36" pos:end="607:65"><expr pos:start="607:36" pos:end="607:65"><name pos:start="607:36" pos:end="607:65"><name pos:start="607:36" pos:end="607:36">h</name><operator pos:start="607:37" pos:end="607:38">-&gt;</operator><name pos:start="607:39" pos:end="607:47">mvd_cache</name><index pos:start="607:48" pos:end="607:53">[<expr pos:start="607:49" pos:end="607:52"><name pos:start="607:49" pos:end="607:52">list</name></expr>]</index><index pos:start="607:54" pos:end="607:65">[ <expr pos:start="607:56" pos:end="607:63"><name pos:start="607:56" pos:end="607:63"><name pos:start="607:56" pos:end="607:60">scan8</name><index pos:start="607:61" pos:end="607:63">[<expr pos:start="607:62" pos:end="607:62"><literal type="number" pos:start="607:62" pos:end="607:62">0</literal></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="607:68" pos:end="607:68"><expr pos:start="607:68" pos:end="607:68"><literal type="number" pos:start="607:68" pos:end="607:68">4</literal></expr></argument>, <argument pos:start="607:71" pos:end="607:71"><expr pos:start="607:71" pos:end="607:71"><literal type="number" pos:start="607:71" pos:end="607:71">4</literal></expr></argument>, <argument pos:start="607:74" pos:end="607:74"><expr pos:start="607:74" pos:end="607:74"><literal type="number" pos:start="607:74" pos:end="607:74">8</literal></expr></argument>, <argument pos:start="607:77" pos:end="607:101"><expr pos:start="607:77" pos:end="607:101"><call pos:start="607:77" pos:end="607:101"><name pos:start="607:77" pos:end="607:86">pack16to32</name><argument_list pos:start="607:87" pos:end="607:101">(<argument pos:start="607:88" pos:end="607:93"><expr pos:start="607:88" pos:end="607:93"><name pos:start="607:88" pos:end="607:89">mx</name><operator pos:start="607:90" pos:end="607:90">-</operator><name pos:start="607:91" pos:end="607:93">mpx</name></expr></argument>,<argument pos:start="607:95" pos:end="607:100"><expr pos:start="607:95" pos:end="607:100"><name pos:start="607:95" pos:end="607:96">my</name><operator pos:start="607:97" pos:end="607:97">-</operator><name pos:start="607:98" pos:end="607:100">mpy</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="607:104" pos:end="607:104"><expr pos:start="607:104" pos:end="607:104"><literal type="number" pos:start="607:104" pos:end="607:104">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="609:21" pos:end="609:97"><expr pos:start="609:21" pos:end="609:96"><call pos:start="609:21" pos:end="609:96"><name pos:start="609:21" pos:end="609:34">fill_rectangle</name><argument_list pos:start="609:35" pos:end="609:96">(<argument pos:start="609:36" pos:end="609:64"><expr pos:start="609:36" pos:end="609:64"><name pos:start="609:36" pos:end="609:64"><name pos:start="609:36" pos:end="609:36">h</name><operator pos:start="609:37" pos:end="609:38">-&gt;</operator><name pos:start="609:39" pos:end="609:46">mv_cache</name><index pos:start="609:47" pos:end="609:52">[<expr pos:start="609:48" pos:end="609:51"><name pos:start="609:48" pos:end="609:51">list</name></expr>]</index><index pos:start="609:53" pos:end="609:64">[ <expr pos:start="609:55" pos:end="609:62"><name pos:start="609:55" pos:end="609:62"><name pos:start="609:55" pos:end="609:59">scan8</name><index pos:start="609:60" pos:end="609:62">[<expr pos:start="609:61" pos:end="609:61"><literal type="number" pos:start="609:61" pos:end="609:61">0</literal></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="609:67" pos:end="609:67"><expr pos:start="609:67" pos:end="609:67"><literal type="number" pos:start="609:67" pos:end="609:67">4</literal></expr></argument>, <argument pos:start="609:70" pos:end="609:70"><expr pos:start="609:70" pos:end="609:70"><literal type="number" pos:start="609:70" pos:end="609:70">4</literal></expr></argument>, <argument pos:start="609:73" pos:end="609:73"><expr pos:start="609:73" pos:end="609:73"><literal type="number" pos:start="609:73" pos:end="609:73">8</literal></expr></argument>, <argument pos:start="609:76" pos:end="609:92"><expr pos:start="609:76" pos:end="609:92"><call pos:start="609:76" pos:end="609:92"><name pos:start="609:76" pos:end="609:85">pack16to32</name><argument_list pos:start="609:86" pos:end="609:92">(<argument pos:start="609:87" pos:end="609:88"><expr pos:start="609:87" pos:end="609:88"><name pos:start="609:87" pos:end="609:88">mx</name></expr></argument>,<argument pos:start="609:90" pos:end="609:91"><expr pos:start="609:90" pos:end="609:91"><name pos:start="609:90" pos:end="609:91">my</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="609:95" pos:end="609:95"><expr pos:start="609:95" pos:end="609:95"><literal type="number" pos:start="609:95" pos:end="609:95">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="611:18" pos:end="613:81">else<block type="pseudo" pos:start="613:21" pos:end="613:81"><block_content pos:start="613:21" pos:end="613:81">

                    <expr_stmt pos:start="613:21" pos:end="613:81"><expr pos:start="613:21" pos:end="613:80"><call pos:start="613:21" pos:end="613:80"><name pos:start="613:21" pos:end="613:34">fill_rectangle</name><argument_list pos:start="613:35" pos:end="613:80">(<argument pos:start="613:36" pos:end="613:64"><expr pos:start="613:36" pos:end="613:64"><name pos:start="613:36" pos:end="613:64"><name pos:start="613:36" pos:end="613:36">h</name><operator pos:start="613:37" pos:end="613:38">-&gt;</operator><name pos:start="613:39" pos:end="613:46">mv_cache</name><index pos:start="613:47" pos:end="613:52">[<expr pos:start="613:48" pos:end="613:51"><name pos:start="613:48" pos:end="613:51">list</name></expr>]</index><index pos:start="613:53" pos:end="613:64">[ <expr pos:start="613:55" pos:end="613:62"><name pos:start="613:55" pos:end="613:62"><name pos:start="613:55" pos:end="613:59">scan8</name><index pos:start="613:60" pos:end="613:62">[<expr pos:start="613:61" pos:end="613:61"><literal type="number" pos:start="613:61" pos:end="613:61">0</literal></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="613:67" pos:end="613:67"><expr pos:start="613:67" pos:end="613:67"><literal type="number" pos:start="613:67" pos:end="613:67">4</literal></expr></argument>, <argument pos:start="613:70" pos:end="613:70"><expr pos:start="613:70" pos:end="613:70"><literal type="number" pos:start="613:70" pos:end="613:70">4</literal></expr></argument>, <argument pos:start="613:73" pos:end="613:73"><expr pos:start="613:73" pos:end="613:73"><literal type="number" pos:start="613:73" pos:end="613:73">8</literal></expr></argument>, <argument pos:start="613:76" pos:end="613:76"><expr pos:start="613:76" pos:end="613:76"><literal type="number" pos:start="613:76" pos:end="613:76">0</literal></expr></argument>, <argument pos:start="613:79" pos:end="613:79"><expr pos:start="613:79" pos:end="613:79"><literal type="number" pos:start="613:79" pos:end="613:79">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if>

        <if type="elseif" pos:start="619:9" pos:end="687:9">else if<condition pos:start="619:16" pos:end="619:33">(<expr pos:start="619:17" pos:end="619:32"><call pos:start="619:17" pos:end="619:32"><name pos:start="619:17" pos:end="619:23">IS_16X8</name><argument_list pos:start="619:24" pos:end="619:32">(<argument pos:start="619:25" pos:end="619:31"><expr pos:start="619:25" pos:end="619:31"><name pos:start="619:25" pos:end="619:31">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="619:34" pos:end="687:9">{<block_content pos:start="621:13" pos:end="685:13">

            <for pos:start="621:13" pos:end="653:13">for<control pos:start="621:16" pos:end="621:51">(<init pos:start="621:17" pos:end="621:23"><expr pos:start="621:17" pos:end="621:22"><name pos:start="621:17" pos:end="621:20">list</name><operator pos:start="621:21" pos:end="621:21">=</operator><literal type="number" pos:start="621:22" pos:end="621:22">0</literal></expr>;</init> <condition pos:start="621:25" pos:end="621:43"><expr pos:start="621:25" pos:end="621:42"><name pos:start="621:25" pos:end="621:28">list</name><operator pos:start="621:29" pos:end="621:29">&lt;</operator><name pos:start="621:30" pos:end="621:42"><name pos:start="621:30" pos:end="621:30">h</name><operator pos:start="621:31" pos:end="621:32">-&gt;</operator><name pos:start="621:33" pos:end="621:42">list_count</name></name></expr>;</condition> <incr pos:start="621:45" pos:end="621:50"><expr pos:start="621:45" pos:end="621:50"><name pos:start="621:45" pos:end="621:48">list</name><operator pos:start="621:49" pos:end="621:50">++</operator></expr></incr>)</control><block pos:start="621:52" pos:end="653:13">{<block_content pos:start="623:21" pos:end="651:21">

                    <for pos:start="623:21" pos:end="651:21">for<control pos:start="623:24" pos:end="623:38">(<init pos:start="623:25" pos:end="623:28"><expr pos:start="623:25" pos:end="623:27"><name pos:start="623:25" pos:end="623:25">i</name><operator pos:start="623:26" pos:end="623:26">=</operator><literal type="number" pos:start="623:27" pos:end="623:27">0</literal></expr>;</init> <condition pos:start="623:30" pos:end="623:33"><expr pos:start="623:30" pos:end="623:32"><name pos:start="623:30" pos:end="623:30">i</name><operator pos:start="623:31" pos:end="623:31">&lt;</operator><literal type="number" pos:start="623:32" pos:end="623:32">2</literal></expr>;</condition> <incr pos:start="623:35" pos:end="623:37"><expr pos:start="623:35" pos:end="623:37"><name pos:start="623:35" pos:end="623:35">i</name><operator pos:start="623:36" pos:end="623:37">++</operator></expr></incr>)</control><block pos:start="623:39" pos:end="651:21">{<block_content pos:start="625:25" pos:end="649:117">

                        <if_stmt pos:start="625:25" pos:end="649:117"><if pos:start="625:25" pos:end="647:25">if<condition pos:start="625:27" pos:end="625:52">(<expr pos:start="625:28" pos:end="625:51"><call pos:start="625:28" pos:end="625:51"><name pos:start="625:28" pos:end="625:33">IS_DIR</name><argument_list pos:start="625:34" pos:end="625:51">(<argument pos:start="625:35" pos:end="625:41"><expr pos:start="625:35" pos:end="625:41"><name pos:start="625:35" pos:end="625:41">mb_type</name></expr></argument>, <argument pos:start="625:44" pos:end="625:44"><expr pos:start="625:44" pos:end="625:44"><name pos:start="625:44" pos:end="625:44">i</name></expr></argument>, <argument pos:start="625:47" pos:end="625:50"><expr pos:start="625:47" pos:end="625:50"><name pos:start="625:47" pos:end="625:50">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="625:53" pos:end="647:25">{<block_content pos:start="627:29" pos:end="645:100">

                            <decl_stmt pos:start="627:29" pos:end="627:36"><decl pos:start="627:29" pos:end="627:35"><type pos:start="627:29" pos:end="627:31"><name pos:start="627:29" pos:end="627:31">int</name></type> <name pos:start="627:33" pos:end="627:35">ref</name></decl>;</decl_stmt>

                            <if_stmt pos:start="629:29" pos:end="643:38"><if pos:start="629:29" pos:end="641:29">if<condition pos:start="629:31" pos:end="629:54">(<expr pos:start="629:32" pos:end="629:53"><name pos:start="629:32" pos:end="629:49"><name pos:start="629:32" pos:end="629:32">h</name><operator pos:start="629:33" pos:end="629:34">-&gt;</operator><name pos:start="629:35" pos:end="629:43">ref_count</name><index pos:start="629:44" pos:end="629:49">[<expr pos:start="629:45" pos:end="629:48"><name pos:start="629:45" pos:end="629:48">list</name></expr>]</index></name> <operator pos:start="629:51" pos:end="629:51">&gt;</operator> <literal type="number" pos:start="629:53" pos:end="629:53">1</literal></expr>)</condition><block pos:start="629:55" pos:end="641:29">{<block_content pos:start="631:33" pos:end="639:33">

                                <expr_stmt pos:start="631:33" pos:end="631:73"><expr pos:start="631:33" pos:end="631:72"><name pos:start="631:33" pos:end="631:35">ref</name><operator pos:start="631:36" pos:end="631:36">=</operator> <call pos:start="631:38" pos:end="631:72"><name pos:start="631:38" pos:end="631:56">decode_cabac_mb_ref</name><argument_list pos:start="631:57" pos:end="631:72">( <argument pos:start="631:59" pos:end="631:59"><expr pos:start="631:59" pos:end="631:59"><name pos:start="631:59" pos:end="631:59">h</name></expr></argument>, <argument pos:start="631:62" pos:end="631:65"><expr pos:start="631:62" pos:end="631:65"><name pos:start="631:62" pos:end="631:65">list</name></expr></argument>, <argument pos:start="631:68" pos:end="631:70"><expr pos:start="631:68" pos:end="631:70"><literal type="number" pos:start="631:68" pos:end="631:68">8</literal><operator pos:start="631:69" pos:end="631:69">*</operator><name pos:start="631:70" pos:end="631:70">i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                                <if_stmt pos:start="633:33" pos:end="639:33"><if pos:start="633:33" pos:end="639:33">if<condition pos:start="633:35" pos:end="633:71">(<expr pos:start="633:36" pos:end="633:70"><name pos:start="633:36" pos:end="633:38">ref</name> <operator pos:start="633:40" pos:end="633:41">&gt;=</operator> <operator pos:start="633:43" pos:end="633:43">(</operator><name pos:start="633:44" pos:end="633:51">unsigned</name><operator pos:start="633:52" pos:end="633:52">)</operator><name pos:start="633:53" pos:end="633:70"><name pos:start="633:53" pos:end="633:53">h</name><operator pos:start="633:54" pos:end="633:55">-&gt;</operator><name pos:start="633:56" pos:end="633:64">ref_count</name><index pos:start="633:65" pos:end="633:70">[<expr pos:start="633:66" pos:end="633:69"><name pos:start="633:66" pos:end="633:69">list</name></expr>]</index></name></expr>)</condition><block pos:start="633:72" pos:end="639:33">{<block_content pos:start="635:37" pos:end="637:46">

                                    <expr_stmt pos:start="635:37" pos:end="635:116"><expr pos:start="635:37" pos:end="635:115"><call pos:start="635:37" pos:end="635:115"><name pos:start="635:37" pos:end="635:42">av_log</name><argument_list pos:start="635:43" pos:end="635:115">(<argument pos:start="635:44" pos:end="635:51"><expr pos:start="635:44" pos:end="635:51"><name pos:start="635:44" pos:end="635:51"><name pos:start="635:44" pos:end="635:44">s</name><operator pos:start="635:45" pos:end="635:46">-&gt;</operator><name pos:start="635:47" pos:end="635:51">avctx</name></name></expr></argument>, <argument pos:start="635:54" pos:end="635:65"><expr pos:start="635:54" pos:end="635:65"><name pos:start="635:54" pos:end="635:65">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="635:68" pos:end="635:89"><expr pos:start="635:68" pos:end="635:89"><literal type="string" pos:start="635:68" pos:end="635:89">"Reference %d &gt;= %d\n"</literal></expr></argument>, <argument pos:start="635:92" pos:end="635:94"><expr pos:start="635:92" pos:end="635:94"><name pos:start="635:92" pos:end="635:94">ref</name></expr></argument>, <argument pos:start="635:97" pos:end="635:114"><expr pos:start="635:97" pos:end="635:114"><name pos:start="635:97" pos:end="635:114"><name pos:start="635:97" pos:end="635:97">h</name><operator pos:start="635:98" pos:end="635:99">-&gt;</operator><name pos:start="635:100" pos:end="635:108">ref_count</name><index pos:start="635:109" pos:end="635:114">[<expr pos:start="635:110" pos:end="635:113"><name pos:start="635:110" pos:end="635:113">list</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <return pos:start="637:37" pos:end="637:46">return <expr pos:start="637:44" pos:end="637:45"><operator pos:start="637:44" pos:end="637:44">-</operator><literal type="number" pos:start="637:45" pos:end="637:45">1</literal></expr>;</return>

                                </block_content>}</block></if></if_stmt>

                            </block_content>}</block></if><else pos:start="641:30" pos:end="643:38">else<block type="pseudo" pos:start="643:33" pos:end="643:38"><block_content pos:start="643:33" pos:end="643:38">

                                <expr_stmt pos:start="643:33" pos:end="643:38"><expr pos:start="643:33" pos:end="643:37"><name pos:start="643:33" pos:end="643:35">ref</name><operator pos:start="643:36" pos:end="643:36">=</operator><literal type="number" pos:start="643:37" pos:end="643:37">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                            <expr_stmt pos:start="645:29" pos:end="645:100"><expr pos:start="645:29" pos:end="645:99"><call pos:start="645:29" pos:end="645:99"><name pos:start="645:29" pos:end="645:42">fill_rectangle</name><argument_list pos:start="645:43" pos:end="645:99">(<argument pos:start="645:44" pos:end="645:81"><expr pos:start="645:44" pos:end="645:81"><operator pos:start="645:44" pos:end="645:44">&amp;</operator><name pos:start="645:45" pos:end="645:81"><name pos:start="645:45" pos:end="645:45">h</name><operator pos:start="645:46" pos:end="645:47">-&gt;</operator><name pos:start="645:48" pos:end="645:56">ref_cache</name><index pos:start="645:57" pos:end="645:62">[<expr pos:start="645:58" pos:end="645:61"><name pos:start="645:58" pos:end="645:61">list</name></expr>]</index><index pos:start="645:63" pos:end="645:81">[ <expr pos:start="645:65" pos:end="645:79"><name pos:start="645:65" pos:end="645:72"><name pos:start="645:65" pos:end="645:69">scan8</name><index pos:start="645:70" pos:end="645:72">[<expr pos:start="645:71" pos:end="645:71"><literal type="number" pos:start="645:71" pos:end="645:71">0</literal></expr>]</index></name> <operator pos:start="645:74" pos:end="645:74">+</operator> <literal type="number" pos:start="645:76" pos:end="645:77">16</literal><operator pos:start="645:78" pos:end="645:78">*</operator><name pos:start="645:79" pos:end="645:79">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="645:84" pos:end="645:84"><expr pos:start="645:84" pos:end="645:84"><literal type="number" pos:start="645:84" pos:end="645:84">4</literal></expr></argument>, <argument pos:start="645:87" pos:end="645:87"><expr pos:start="645:87" pos:end="645:87"><literal type="number" pos:start="645:87" pos:end="645:87">2</literal></expr></argument>, <argument pos:start="645:90" pos:end="645:90"><expr pos:start="645:90" pos:end="645:90"><literal type="number" pos:start="645:90" pos:end="645:90">8</literal></expr></argument>, <argument pos:start="645:93" pos:end="645:95"><expr pos:start="645:93" pos:end="645:95"><name pos:start="645:93" pos:end="645:95">ref</name></expr></argument>, <argument pos:start="645:98" pos:end="645:98"><expr pos:start="645:98" pos:end="645:98"><literal type="number" pos:start="645:98" pos:end="645:98">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if><else pos:start="647:26" pos:end="649:117">else<block type="pseudo" pos:start="649:29" pos:end="649:117"><block_content pos:start="649:29" pos:end="649:117">

                            <expr_stmt pos:start="649:29" pos:end="649:117"><expr pos:start="649:29" pos:end="649:116"><call pos:start="649:29" pos:end="649:116"><name pos:start="649:29" pos:end="649:42">fill_rectangle</name><argument_list pos:start="649:43" pos:end="649:116">(<argument pos:start="649:44" pos:end="649:81"><expr pos:start="649:44" pos:end="649:81"><operator pos:start="649:44" pos:end="649:44">&amp;</operator><name pos:start="649:45" pos:end="649:81"><name pos:start="649:45" pos:end="649:45">h</name><operator pos:start="649:46" pos:end="649:47">-&gt;</operator><name pos:start="649:48" pos:end="649:56">ref_cache</name><index pos:start="649:57" pos:end="649:62">[<expr pos:start="649:58" pos:end="649:61"><name pos:start="649:58" pos:end="649:61">list</name></expr>]</index><index pos:start="649:63" pos:end="649:81">[ <expr pos:start="649:65" pos:end="649:79"><name pos:start="649:65" pos:end="649:72"><name pos:start="649:65" pos:end="649:69">scan8</name><index pos:start="649:70" pos:end="649:72">[<expr pos:start="649:71" pos:end="649:71"><literal type="number" pos:start="649:71" pos:end="649:71">0</literal></expr>]</index></name> <operator pos:start="649:74" pos:end="649:74">+</operator> <literal type="number" pos:start="649:76" pos:end="649:77">16</literal><operator pos:start="649:78" pos:end="649:78">*</operator><name pos:start="649:79" pos:end="649:79">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="649:84" pos:end="649:84"><expr pos:start="649:84" pos:end="649:84"><literal type="number" pos:start="649:84" pos:end="649:84">4</literal></expr></argument>, <argument pos:start="649:87" pos:end="649:87"><expr pos:start="649:87" pos:end="649:87"><literal type="number" pos:start="649:87" pos:end="649:87">2</literal></expr></argument>, <argument pos:start="649:90" pos:end="649:90"><expr pos:start="649:90" pos:end="649:90"><literal type="number" pos:start="649:90" pos:end="649:90">8</literal></expr></argument>, <argument pos:start="649:93" pos:end="649:112"><expr pos:start="649:93" pos:end="649:112"><operator pos:start="649:93" pos:end="649:93">(</operator><name pos:start="649:94" pos:end="649:106">LIST_NOT_USED</name><operator pos:start="649:107" pos:end="649:107">&amp;</operator><literal type="number" pos:start="649:108" pos:end="649:111">0xFF</literal><operator pos:start="649:112" pos:end="649:112">)</operator></expr></argument>, <argument pos:start="649:115" pos:end="649:115"><expr pos:start="649:115" pos:end="649:115"><literal type="number" pos:start="649:115" pos:end="649:115">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></for>

            </block_content>}</block></for>

            <for pos:start="655:13" pos:end="685:13">for<control pos:start="655:16" pos:end="655:51">(<init pos:start="655:17" pos:end="655:23"><expr pos:start="655:17" pos:end="655:22"><name pos:start="655:17" pos:end="655:20">list</name><operator pos:start="655:21" pos:end="655:21">=</operator><literal type="number" pos:start="655:22" pos:end="655:22">0</literal></expr>;</init> <condition pos:start="655:25" pos:end="655:43"><expr pos:start="655:25" pos:end="655:42"><name pos:start="655:25" pos:end="655:28">list</name><operator pos:start="655:29" pos:end="655:29">&lt;</operator><name pos:start="655:30" pos:end="655:42"><name pos:start="655:30" pos:end="655:30">h</name><operator pos:start="655:31" pos:end="655:32">-&gt;</operator><name pos:start="655:33" pos:end="655:42">list_count</name></name></expr>;</condition> <incr pos:start="655:45" pos:end="655:50"><expr pos:start="655:45" pos:end="655:50"><name pos:start="655:45" pos:end="655:48">list</name><operator pos:start="655:49" pos:end="655:50">++</operator></expr></incr>)</control><block pos:start="655:52" pos:end="685:13">{<block_content pos:start="657:17" pos:end="683:17">

                <for pos:start="657:17" pos:end="683:17">for<control pos:start="657:20" pos:end="657:34">(<init pos:start="657:21" pos:end="657:24"><expr pos:start="657:21" pos:end="657:23"><name pos:start="657:21" pos:end="657:21">i</name><operator pos:start="657:22" pos:end="657:22">=</operator><literal type="number" pos:start="657:23" pos:end="657:23">0</literal></expr>;</init> <condition pos:start="657:26" pos:end="657:29"><expr pos:start="657:26" pos:end="657:28"><name pos:start="657:26" pos:end="657:26">i</name><operator pos:start="657:27" pos:end="657:27">&lt;</operator><literal type="number" pos:start="657:28" pos:end="657:28">2</literal></expr>;</condition> <incr pos:start="657:31" pos:end="657:33"><expr pos:start="657:31" pos:end="657:33"><name pos:start="657:31" pos:end="657:31">i</name><operator pos:start="657:32" pos:end="657:33">++</operator></expr></incr>)</control><block pos:start="657:35" pos:end="683:17">{<block_content pos:start="659:21" pos:end="681:21">

                    <if_stmt pos:start="659:21" pos:end="681:21"><if pos:start="659:21" pos:end="675:21">if<condition pos:start="659:23" pos:end="659:48">(<expr pos:start="659:24" pos:end="659:47"><call pos:start="659:24" pos:end="659:47"><name pos:start="659:24" pos:end="659:29">IS_DIR</name><argument_list pos:start="659:30" pos:end="659:47">(<argument pos:start="659:31" pos:end="659:37"><expr pos:start="659:31" pos:end="659:37"><name pos:start="659:31" pos:end="659:37">mb_type</name></expr></argument>, <argument pos:start="659:40" pos:end="659:40"><expr pos:start="659:40" pos:end="659:40"><name pos:start="659:40" pos:end="659:40">i</name></expr></argument>, <argument pos:start="659:43" pos:end="659:46"><expr pos:start="659:43" pos:end="659:46"><name pos:start="659:43" pos:end="659:46">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="659:49" pos:end="675:21">{<block_content pos:start="661:25" pos:end="673:108">

                        <expr_stmt pos:start="661:25" pos:end="661:104"><expr pos:start="661:25" pos:end="661:103"><call pos:start="661:25" pos:end="661:103"><name pos:start="661:25" pos:end="661:40">pred_16x8_motion</name><argument_list pos:start="661:41" pos:end="661:103">(<argument pos:start="661:42" pos:end="661:42"><expr pos:start="661:42" pos:end="661:42"><name pos:start="661:42" pos:end="661:42">h</name></expr></argument>, <argument pos:start="661:45" pos:end="661:47"><expr pos:start="661:45" pos:end="661:47"><literal type="number" pos:start="661:45" pos:end="661:45">8</literal><operator pos:start="661:46" pos:end="661:46">*</operator><name pos:start="661:47" pos:end="661:47">i</name></expr></argument>, <argument pos:start="661:50" pos:end="661:53"><expr pos:start="661:50" pos:end="661:53"><name pos:start="661:50" pos:end="661:53">list</name></expr></argument>, <argument pos:start="661:56" pos:end="661:90"><expr pos:start="661:56" pos:end="661:90"><name pos:start="661:56" pos:end="661:90"><name pos:start="661:56" pos:end="661:56">h</name><operator pos:start="661:57" pos:end="661:58">-&gt;</operator><name pos:start="661:59" pos:end="661:67">ref_cache</name><index pos:start="661:68" pos:end="661:73">[<expr pos:start="661:69" pos:end="661:72"><name pos:start="661:69" pos:end="661:72">list</name></expr>]</index><index pos:start="661:74" pos:end="661:90">[<expr pos:start="661:75" pos:end="661:89"><name pos:start="661:75" pos:end="661:82"><name pos:start="661:75" pos:end="661:79">scan8</name><index pos:start="661:80" pos:end="661:82">[<expr pos:start="661:81" pos:end="661:81"><literal type="number" pos:start="661:81" pos:end="661:81">0</literal></expr>]</index></name> <operator pos:start="661:84" pos:end="661:84">+</operator> <literal type="number" pos:start="661:86" pos:end="661:87">16</literal><operator pos:start="661:88" pos:end="661:88">*</operator><name pos:start="661:89" pos:end="661:89">i</name></expr>]</index></name></expr></argument>, <argument pos:start="661:93" pos:end="661:96"><expr pos:start="661:93" pos:end="661:96"><operator pos:start="661:93" pos:end="661:93">&amp;</operator><name pos:start="661:94" pos:end="661:96">mpx</name></expr></argument>, <argument pos:start="661:99" pos:end="661:102"><expr pos:start="661:99" pos:end="661:102"><operator pos:start="661:99" pos:end="661:99">&amp;</operator><name pos:start="661:100" pos:end="661:102">mpy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="663:25" pos:end="663:74"><expr pos:start="663:25" pos:end="663:73"><name pos:start="663:25" pos:end="663:26">mx</name> <operator pos:start="663:28" pos:end="663:28">=</operator> <name pos:start="663:30" pos:end="663:32">mpx</name> <operator pos:start="663:34" pos:end="663:34">+</operator> <call pos:start="663:36" pos:end="663:73"><name pos:start="663:36" pos:end="663:54">decode_cabac_mb_mvd</name><argument_list pos:start="663:55" pos:end="663:73">( <argument pos:start="663:57" pos:end="663:57"><expr pos:start="663:57" pos:end="663:57"><name pos:start="663:57" pos:end="663:57">h</name></expr></argument>, <argument pos:start="663:60" pos:end="663:63"><expr pos:start="663:60" pos:end="663:63"><name pos:start="663:60" pos:end="663:63">list</name></expr></argument>, <argument pos:start="663:66" pos:end="663:68"><expr pos:start="663:66" pos:end="663:68"><literal type="number" pos:start="663:66" pos:end="663:66">8</literal><operator pos:start="663:67" pos:end="663:67">*</operator><name pos:start="663:68" pos:end="663:68">i</name></expr></argument>, <argument pos:start="663:71" pos:end="663:71"><expr pos:start="663:71" pos:end="663:71"><literal type="number" pos:start="663:71" pos:end="663:71">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="665:25" pos:end="665:74"><expr pos:start="665:25" pos:end="665:73"><name pos:start="665:25" pos:end="665:26">my</name> <operator pos:start="665:28" pos:end="665:28">=</operator> <name pos:start="665:30" pos:end="665:32">mpy</name> <operator pos:start="665:34" pos:end="665:34">+</operator> <call pos:start="665:36" pos:end="665:73"><name pos:start="665:36" pos:end="665:54">decode_cabac_mb_mvd</name><argument_list pos:start="665:55" pos:end="665:73">( <argument pos:start="665:57" pos:end="665:57"><expr pos:start="665:57" pos:end="665:57"><name pos:start="665:57" pos:end="665:57">h</name></expr></argument>, <argument pos:start="665:60" pos:end="665:63"><expr pos:start="665:60" pos:end="665:63"><name pos:start="665:60" pos:end="665:63">list</name></expr></argument>, <argument pos:start="665:66" pos:end="665:68"><expr pos:start="665:66" pos:end="665:68"><literal type="number" pos:start="665:66" pos:end="665:66">8</literal><operator pos:start="665:67" pos:end="665:67">*</operator><name pos:start="665:68" pos:end="665:68">i</name></expr></argument>, <argument pos:start="665:71" pos:end="665:71"><expr pos:start="665:71" pos:end="665:71"><literal type="number" pos:start="665:71" pos:end="665:71">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="667:25" pos:end="667:70"><expr pos:start="667:25" pos:end="667:69"><call pos:start="667:25" pos:end="667:69"><name pos:start="667:25" pos:end="667:31">tprintf</name><argument_list pos:start="667:32" pos:end="667:69">(<argument pos:start="667:33" pos:end="667:40"><expr pos:start="667:33" pos:end="667:40"><name pos:start="667:33" pos:end="667:40"><name pos:start="667:33" pos:end="667:33">s</name><operator pos:start="667:34" pos:end="667:35">-&gt;</operator><name pos:start="667:36" pos:end="667:40">avctx</name></name></expr></argument>, <argument pos:start="667:43" pos:end="667:60"><expr pos:start="667:43" pos:end="667:60"><literal type="string" pos:start="667:43" pos:end="667:60">"final mv:%d %d\n"</literal></expr></argument>, <argument pos:start="667:63" pos:end="667:64"><expr pos:start="667:63" pos:end="667:64"><name pos:start="667:63" pos:end="667:64">mx</name></expr></argument>, <argument pos:start="667:67" pos:end="667:68"><expr pos:start="667:67" pos:end="667:68"><name pos:start="667:67" pos:end="667:68">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="671:25" pos:end="671:117"><expr pos:start="671:25" pos:end="671:116"><call pos:start="671:25" pos:end="671:116"><name pos:start="671:25" pos:end="671:38">fill_rectangle</name><argument_list pos:start="671:39" pos:end="671:116">(<argument pos:start="671:40" pos:end="671:76"><expr pos:start="671:40" pos:end="671:76"><name pos:start="671:40" pos:end="671:76"><name pos:start="671:40" pos:end="671:40">h</name><operator pos:start="671:41" pos:end="671:42">-&gt;</operator><name pos:start="671:43" pos:end="671:51">mvd_cache</name><index pos:start="671:52" pos:end="671:57">[<expr pos:start="671:53" pos:end="671:56"><name pos:start="671:53" pos:end="671:56">list</name></expr>]</index><index pos:start="671:58" pos:end="671:76">[ <expr pos:start="671:60" pos:end="671:74"><name pos:start="671:60" pos:end="671:67"><name pos:start="671:60" pos:end="671:64">scan8</name><index pos:start="671:65" pos:end="671:67">[<expr pos:start="671:66" pos:end="671:66"><literal type="number" pos:start="671:66" pos:end="671:66">0</literal></expr>]</index></name> <operator pos:start="671:69" pos:end="671:69">+</operator> <literal type="number" pos:start="671:71" pos:end="671:72">16</literal><operator pos:start="671:73" pos:end="671:73">*</operator><name pos:start="671:74" pos:end="671:74">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="671:79" pos:end="671:79"><expr pos:start="671:79" pos:end="671:79"><literal type="number" pos:start="671:79" pos:end="671:79">4</literal></expr></argument>, <argument pos:start="671:82" pos:end="671:82"><expr pos:start="671:82" pos:end="671:82"><literal type="number" pos:start="671:82" pos:end="671:82">2</literal></expr></argument>, <argument pos:start="671:85" pos:end="671:85"><expr pos:start="671:85" pos:end="671:85"><literal type="number" pos:start="671:85" pos:end="671:85">8</literal></expr></argument>, <argument pos:start="671:88" pos:end="671:112"><expr pos:start="671:88" pos:end="671:112"><call pos:start="671:88" pos:end="671:112"><name pos:start="671:88" pos:end="671:97">pack16to32</name><argument_list pos:start="671:98" pos:end="671:112">(<argument pos:start="671:99" pos:end="671:104"><expr pos:start="671:99" pos:end="671:104"><name pos:start="671:99" pos:end="671:100">mx</name><operator pos:start="671:101" pos:end="671:101">-</operator><name pos:start="671:102" pos:end="671:104">mpx</name></expr></argument>,<argument pos:start="671:106" pos:end="671:111"><expr pos:start="671:106" pos:end="671:111"><name pos:start="671:106" pos:end="671:107">my</name><operator pos:start="671:108" pos:end="671:108">-</operator><name pos:start="671:109" pos:end="671:111">mpy</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="671:115" pos:end="671:115"><expr pos:start="671:115" pos:end="671:115"><literal type="number" pos:start="671:115" pos:end="671:115">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="673:25" pos:end="673:108"><expr pos:start="673:25" pos:end="673:107"><call pos:start="673:25" pos:end="673:107"><name pos:start="673:25" pos:end="673:38">fill_rectangle</name><argument_list pos:start="673:39" pos:end="673:107">(<argument pos:start="673:40" pos:end="673:75"><expr pos:start="673:40" pos:end="673:75"><name pos:start="673:40" pos:end="673:75"><name pos:start="673:40" pos:end="673:40">h</name><operator pos:start="673:41" pos:end="673:42">-&gt;</operator><name pos:start="673:43" pos:end="673:50">mv_cache</name><index pos:start="673:51" pos:end="673:56">[<expr pos:start="673:52" pos:end="673:55"><name pos:start="673:52" pos:end="673:55">list</name></expr>]</index><index pos:start="673:57" pos:end="673:75">[ <expr pos:start="673:59" pos:end="673:73"><name pos:start="673:59" pos:end="673:66"><name pos:start="673:59" pos:end="673:63">scan8</name><index pos:start="673:64" pos:end="673:66">[<expr pos:start="673:65" pos:end="673:65"><literal type="number" pos:start="673:65" pos:end="673:65">0</literal></expr>]</index></name> <operator pos:start="673:68" pos:end="673:68">+</operator> <literal type="number" pos:start="673:70" pos:end="673:71">16</literal><operator pos:start="673:72" pos:end="673:72">*</operator><name pos:start="673:73" pos:end="673:73">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="673:78" pos:end="673:78"><expr pos:start="673:78" pos:end="673:78"><literal type="number" pos:start="673:78" pos:end="673:78">4</literal></expr></argument>, <argument pos:start="673:81" pos:end="673:81"><expr pos:start="673:81" pos:end="673:81"><literal type="number" pos:start="673:81" pos:end="673:81">2</literal></expr></argument>, <argument pos:start="673:84" pos:end="673:84"><expr pos:start="673:84" pos:end="673:84"><literal type="number" pos:start="673:84" pos:end="673:84">8</literal></expr></argument>, <argument pos:start="673:87" pos:end="673:103"><expr pos:start="673:87" pos:end="673:103"><call pos:start="673:87" pos:end="673:103"><name pos:start="673:87" pos:end="673:96">pack16to32</name><argument_list pos:start="673:97" pos:end="673:103">(<argument pos:start="673:98" pos:end="673:99"><expr pos:start="673:98" pos:end="673:99"><name pos:start="673:98" pos:end="673:99">mx</name></expr></argument>,<argument pos:start="673:101" pos:end="673:102"><expr pos:start="673:101" pos:end="673:102"><name pos:start="673:101" pos:end="673:102">my</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="673:106" pos:end="673:106"><expr pos:start="673:106" pos:end="673:106"><literal type="number" pos:start="673:106" pos:end="673:106">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="675:22" pos:end="681:21">else<block pos:start="675:26" pos:end="681:21">{<block_content pos:start="677:25" pos:end="679:93">

                        <expr_stmt pos:start="677:25" pos:end="677:93"><expr pos:start="677:25" pos:end="677:92"><call pos:start="677:25" pos:end="677:92"><name pos:start="677:25" pos:end="677:38">fill_rectangle</name><argument_list pos:start="677:39" pos:end="677:92">(<argument pos:start="677:40" pos:end="677:76"><expr pos:start="677:40" pos:end="677:76"><name pos:start="677:40" pos:end="677:76"><name pos:start="677:40" pos:end="677:40">h</name><operator pos:start="677:41" pos:end="677:42">-&gt;</operator><name pos:start="677:43" pos:end="677:51">mvd_cache</name><index pos:start="677:52" pos:end="677:57">[<expr pos:start="677:53" pos:end="677:56"><name pos:start="677:53" pos:end="677:56">list</name></expr>]</index><index pos:start="677:58" pos:end="677:76">[ <expr pos:start="677:60" pos:end="677:74"><name pos:start="677:60" pos:end="677:67"><name pos:start="677:60" pos:end="677:64">scan8</name><index pos:start="677:65" pos:end="677:67">[<expr pos:start="677:66" pos:end="677:66"><literal type="number" pos:start="677:66" pos:end="677:66">0</literal></expr>]</index></name> <operator pos:start="677:69" pos:end="677:69">+</operator> <literal type="number" pos:start="677:71" pos:end="677:72">16</literal><operator pos:start="677:73" pos:end="677:73">*</operator><name pos:start="677:74" pos:end="677:74">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="677:79" pos:end="677:79"><expr pos:start="677:79" pos:end="677:79"><literal type="number" pos:start="677:79" pos:end="677:79">4</literal></expr></argument>, <argument pos:start="677:82" pos:end="677:82"><expr pos:start="677:82" pos:end="677:82"><literal type="number" pos:start="677:82" pos:end="677:82">2</literal></expr></argument>, <argument pos:start="677:85" pos:end="677:85"><expr pos:start="677:85" pos:end="677:85"><literal type="number" pos:start="677:85" pos:end="677:85">8</literal></expr></argument>, <argument pos:start="677:88" pos:end="677:88"><expr pos:start="677:88" pos:end="677:88"><literal type="number" pos:start="677:88" pos:end="677:88">0</literal></expr></argument>, <argument pos:start="677:91" pos:end="677:91"><expr pos:start="677:91" pos:end="677:91"><literal type="number" pos:start="677:91" pos:end="677:91">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="679:25" pos:end="679:93"><expr pos:start="679:25" pos:end="679:92"><call pos:start="679:25" pos:end="679:92"><name pos:start="679:25" pos:end="679:38">fill_rectangle</name><argument_list pos:start="679:39" pos:end="679:92">(<argument pos:start="679:40" pos:end="679:76"><expr pos:start="679:40" pos:end="679:76"><name pos:start="679:40" pos:end="679:76"><name pos:start="679:40" pos:end="679:40">h</name><operator pos:start="679:41" pos:end="679:42">-&gt;</operator> <name pos:start="679:44" pos:end="679:51">mv_cache</name><index pos:start="679:52" pos:end="679:57">[<expr pos:start="679:53" pos:end="679:56"><name pos:start="679:53" pos:end="679:56">list</name></expr>]</index><index pos:start="679:58" pos:end="679:76">[ <expr pos:start="679:60" pos:end="679:74"><name pos:start="679:60" pos:end="679:67"><name pos:start="679:60" pos:end="679:64">scan8</name><index pos:start="679:65" pos:end="679:67">[<expr pos:start="679:66" pos:end="679:66"><literal type="number" pos:start="679:66" pos:end="679:66">0</literal></expr>]</index></name> <operator pos:start="679:69" pos:end="679:69">+</operator> <literal type="number" pos:start="679:71" pos:end="679:72">16</literal><operator pos:start="679:73" pos:end="679:73">*</operator><name pos:start="679:74" pos:end="679:74">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="679:79" pos:end="679:79"><expr pos:start="679:79" pos:end="679:79"><literal type="number" pos:start="679:79" pos:end="679:79">4</literal></expr></argument>, <argument pos:start="679:82" pos:end="679:82"><expr pos:start="679:82" pos:end="679:82"><literal type="number" pos:start="679:82" pos:end="679:82">2</literal></expr></argument>, <argument pos:start="679:85" pos:end="679:85"><expr pos:start="679:85" pos:end="679:85"><literal type="number" pos:start="679:85" pos:end="679:85">8</literal></expr></argument>, <argument pos:start="679:88" pos:end="679:88"><expr pos:start="679:88" pos:end="679:88"><literal type="number" pos:start="679:88" pos:end="679:88">0</literal></expr></argument>, <argument pos:start="679:91" pos:end="679:91"><expr pos:start="679:91" pos:end="679:91"><literal type="number" pos:start="679:91" pos:end="679:91">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></if><else pos:start="687:10" pos:end="757:9">else<block pos:start="687:14" pos:end="757:9">{<block_content pos:start="689:13" pos:end="755:13">

            <expr_stmt pos:start="689:13" pos:end="689:37"><expr pos:start="689:13" pos:end="689:36"><call pos:start="689:13" pos:end="689:36"><name pos:start="689:13" pos:end="689:18">assert</name><argument_list pos:start="689:19" pos:end="689:36">(<argument pos:start="689:20" pos:end="689:35"><expr pos:start="689:20" pos:end="689:35"><call pos:start="689:20" pos:end="689:35"><name pos:start="689:20" pos:end="689:26">IS_8X16</name><argument_list pos:start="689:27" pos:end="689:35">(<argument pos:start="689:28" pos:end="689:34"><expr pos:start="689:28" pos:end="689:34"><name pos:start="689:28" pos:end="689:34">mb_type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="691:13" pos:end="723:13">for<control pos:start="691:16" pos:end="691:51">(<init pos:start="691:17" pos:end="691:23"><expr pos:start="691:17" pos:end="691:22"><name pos:start="691:17" pos:end="691:20">list</name><operator pos:start="691:21" pos:end="691:21">=</operator><literal type="number" pos:start="691:22" pos:end="691:22">0</literal></expr>;</init> <condition pos:start="691:25" pos:end="691:43"><expr pos:start="691:25" pos:end="691:42"><name pos:start="691:25" pos:end="691:28">list</name><operator pos:start="691:29" pos:end="691:29">&lt;</operator><name pos:start="691:30" pos:end="691:42"><name pos:start="691:30" pos:end="691:30">h</name><operator pos:start="691:31" pos:end="691:32">-&gt;</operator><name pos:start="691:33" pos:end="691:42">list_count</name></name></expr>;</condition> <incr pos:start="691:45" pos:end="691:50"><expr pos:start="691:45" pos:end="691:50"><name pos:start="691:45" pos:end="691:48">list</name><operator pos:start="691:49" pos:end="691:50">++</operator></expr></incr>)</control><block pos:start="691:52" pos:end="723:13">{<block_content pos:start="693:21" pos:end="721:21">

                    <for pos:start="693:21" pos:end="721:21">for<control pos:start="693:24" pos:end="693:38">(<init pos:start="693:25" pos:end="693:28"><expr pos:start="693:25" pos:end="693:27"><name pos:start="693:25" pos:end="693:25">i</name><operator pos:start="693:26" pos:end="693:26">=</operator><literal type="number" pos:start="693:27" pos:end="693:27">0</literal></expr>;</init> <condition pos:start="693:30" pos:end="693:33"><expr pos:start="693:30" pos:end="693:32"><name pos:start="693:30" pos:end="693:30">i</name><operator pos:start="693:31" pos:end="693:31">&lt;</operator><literal type="number" pos:start="693:32" pos:end="693:32">2</literal></expr>;</condition> <incr pos:start="693:35" pos:end="693:37"><expr pos:start="693:35" pos:end="693:37"><name pos:start="693:35" pos:end="693:35">i</name><operator pos:start="693:36" pos:end="693:37">++</operator></expr></incr>)</control><block pos:start="693:39" pos:end="721:21">{<block_content pos:start="695:25" pos:end="719:116">

                        <if_stmt pos:start="695:25" pos:end="719:116"><if pos:start="695:25" pos:end="717:25">if<condition pos:start="695:27" pos:end="695:52">(<expr pos:start="695:28" pos:end="695:51"><call pos:start="695:28" pos:end="695:51"><name pos:start="695:28" pos:end="695:33">IS_DIR</name><argument_list pos:start="695:34" pos:end="695:51">(<argument pos:start="695:35" pos:end="695:41"><expr pos:start="695:35" pos:end="695:41"><name pos:start="695:35" pos:end="695:41">mb_type</name></expr></argument>, <argument pos:start="695:44" pos:end="695:44"><expr pos:start="695:44" pos:end="695:44"><name pos:start="695:44" pos:end="695:44">i</name></expr></argument>, <argument pos:start="695:47" pos:end="695:50"><expr pos:start="695:47" pos:end="695:50"><name pos:start="695:47" pos:end="695:50">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="695:53" pos:end="717:25">{<block_content pos:start="697:29" pos:end="715:99"> <comment type="line" pos:start="695:55" pos:end="695:70">//FIXME optimize</comment>

                            <decl_stmt pos:start="697:29" pos:end="697:36"><decl pos:start="697:29" pos:end="697:35"><type pos:start="697:29" pos:end="697:31"><name pos:start="697:29" pos:end="697:31">int</name></type> <name pos:start="697:33" pos:end="697:35">ref</name></decl>;</decl_stmt>

                            <if_stmt pos:start="699:29" pos:end="713:38"><if pos:start="699:29" pos:end="711:29">if<condition pos:start="699:31" pos:end="699:54">(<expr pos:start="699:32" pos:end="699:53"><name pos:start="699:32" pos:end="699:49"><name pos:start="699:32" pos:end="699:32">h</name><operator pos:start="699:33" pos:end="699:34">-&gt;</operator><name pos:start="699:35" pos:end="699:43">ref_count</name><index pos:start="699:44" pos:end="699:49">[<expr pos:start="699:45" pos:end="699:48"><name pos:start="699:45" pos:end="699:48">list</name></expr>]</index></name> <operator pos:start="699:51" pos:end="699:51">&gt;</operator> <literal type="number" pos:start="699:53" pos:end="699:53">1</literal></expr>)</condition><block pos:start="699:55" pos:end="711:29">{<block_content pos:start="701:33" pos:end="709:33">

                                <expr_stmt pos:start="701:33" pos:end="701:73"><expr pos:start="701:33" pos:end="701:72"><name pos:start="701:33" pos:end="701:35">ref</name><operator pos:start="701:36" pos:end="701:36">=</operator> <call pos:start="701:38" pos:end="701:72"><name pos:start="701:38" pos:end="701:56">decode_cabac_mb_ref</name><argument_list pos:start="701:57" pos:end="701:72">( <argument pos:start="701:59" pos:end="701:59"><expr pos:start="701:59" pos:end="701:59"><name pos:start="701:59" pos:end="701:59">h</name></expr></argument>, <argument pos:start="701:62" pos:end="701:65"><expr pos:start="701:62" pos:end="701:65"><name pos:start="701:62" pos:end="701:65">list</name></expr></argument>, <argument pos:start="701:68" pos:end="701:70"><expr pos:start="701:68" pos:end="701:70"><literal type="number" pos:start="701:68" pos:end="701:68">4</literal><operator pos:start="701:69" pos:end="701:69">*</operator><name pos:start="701:70" pos:end="701:70">i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                                <if_stmt pos:start="703:33" pos:end="709:33"><if pos:start="703:33" pos:end="709:33">if<condition pos:start="703:35" pos:end="703:71">(<expr pos:start="703:36" pos:end="703:70"><name pos:start="703:36" pos:end="703:38">ref</name> <operator pos:start="703:40" pos:end="703:41">&gt;=</operator> <operator pos:start="703:43" pos:end="703:43">(</operator><name pos:start="703:44" pos:end="703:51">unsigned</name><operator pos:start="703:52" pos:end="703:52">)</operator><name pos:start="703:53" pos:end="703:70"><name pos:start="703:53" pos:end="703:53">h</name><operator pos:start="703:54" pos:end="703:55">-&gt;</operator><name pos:start="703:56" pos:end="703:64">ref_count</name><index pos:start="703:65" pos:end="703:70">[<expr pos:start="703:66" pos:end="703:69"><name pos:start="703:66" pos:end="703:69">list</name></expr>]</index></name></expr>)</condition><block pos:start="703:72" pos:end="709:33">{<block_content pos:start="705:37" pos:end="707:46">

                                    <expr_stmt pos:start="705:37" pos:end="705:116"><expr pos:start="705:37" pos:end="705:115"><call pos:start="705:37" pos:end="705:115"><name pos:start="705:37" pos:end="705:42">av_log</name><argument_list pos:start="705:43" pos:end="705:115">(<argument pos:start="705:44" pos:end="705:51"><expr pos:start="705:44" pos:end="705:51"><name pos:start="705:44" pos:end="705:51"><name pos:start="705:44" pos:end="705:44">s</name><operator pos:start="705:45" pos:end="705:46">-&gt;</operator><name pos:start="705:47" pos:end="705:51">avctx</name></name></expr></argument>, <argument pos:start="705:54" pos:end="705:65"><expr pos:start="705:54" pos:end="705:65"><name pos:start="705:54" pos:end="705:65">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="705:68" pos:end="705:89"><expr pos:start="705:68" pos:end="705:89"><literal type="string" pos:start="705:68" pos:end="705:89">"Reference %d &gt;= %d\n"</literal></expr></argument>, <argument pos:start="705:92" pos:end="705:94"><expr pos:start="705:92" pos:end="705:94"><name pos:start="705:92" pos:end="705:94">ref</name></expr></argument>, <argument pos:start="705:97" pos:end="705:114"><expr pos:start="705:97" pos:end="705:114"><name pos:start="705:97" pos:end="705:114"><name pos:start="705:97" pos:end="705:97">h</name><operator pos:start="705:98" pos:end="705:99">-&gt;</operator><name pos:start="705:100" pos:end="705:108">ref_count</name><index pos:start="705:109" pos:end="705:114">[<expr pos:start="705:110" pos:end="705:113"><name pos:start="705:110" pos:end="705:113">list</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <return pos:start="707:37" pos:end="707:46">return <expr pos:start="707:44" pos:end="707:45"><operator pos:start="707:44" pos:end="707:44">-</operator><literal type="number" pos:start="707:45" pos:end="707:45">1</literal></expr>;</return>

                                </block_content>}</block></if></if_stmt>

                            </block_content>}</block></if><else pos:start="711:30" pos:end="713:38">else<block type="pseudo" pos:start="713:33" pos:end="713:38"><block_content pos:start="713:33" pos:end="713:38">

                                <expr_stmt pos:start="713:33" pos:end="713:38"><expr pos:start="713:33" pos:end="713:37"><name pos:start="713:33" pos:end="713:35">ref</name><operator pos:start="713:36" pos:end="713:36">=</operator><literal type="number" pos:start="713:37" pos:end="713:37">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                            <expr_stmt pos:start="715:29" pos:end="715:99"><expr pos:start="715:29" pos:end="715:98"><call pos:start="715:29" pos:end="715:98"><name pos:start="715:29" pos:end="715:42">fill_rectangle</name><argument_list pos:start="715:43" pos:end="715:98">(<argument pos:start="715:44" pos:end="715:80"><expr pos:start="715:44" pos:end="715:80"><operator pos:start="715:44" pos:end="715:44">&amp;</operator><name pos:start="715:45" pos:end="715:80"><name pos:start="715:45" pos:end="715:45">h</name><operator pos:start="715:46" pos:end="715:47">-&gt;</operator><name pos:start="715:48" pos:end="715:56">ref_cache</name><index pos:start="715:57" pos:end="715:62">[<expr pos:start="715:58" pos:end="715:61"><name pos:start="715:58" pos:end="715:61">list</name></expr>]</index><index pos:start="715:63" pos:end="715:80">[ <expr pos:start="715:65" pos:end="715:78"><name pos:start="715:65" pos:end="715:72"><name pos:start="715:65" pos:end="715:69">scan8</name><index pos:start="715:70" pos:end="715:72">[<expr pos:start="715:71" pos:end="715:71"><literal type="number" pos:start="715:71" pos:end="715:71">0</literal></expr>]</index></name> <operator pos:start="715:74" pos:end="715:74">+</operator> <literal type="number" pos:start="715:76" pos:end="715:76">2</literal><operator pos:start="715:77" pos:end="715:77">*</operator><name pos:start="715:78" pos:end="715:78">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="715:83" pos:end="715:83"><expr pos:start="715:83" pos:end="715:83"><literal type="number" pos:start="715:83" pos:end="715:83">2</literal></expr></argument>, <argument pos:start="715:86" pos:end="715:86"><expr pos:start="715:86" pos:end="715:86"><literal type="number" pos:start="715:86" pos:end="715:86">4</literal></expr></argument>, <argument pos:start="715:89" pos:end="715:89"><expr pos:start="715:89" pos:end="715:89"><literal type="number" pos:start="715:89" pos:end="715:89">8</literal></expr></argument>, <argument pos:start="715:92" pos:end="715:94"><expr pos:start="715:92" pos:end="715:94"><name pos:start="715:92" pos:end="715:94">ref</name></expr></argument>, <argument pos:start="715:97" pos:end="715:97"><expr pos:start="715:97" pos:end="715:97"><literal type="number" pos:start="715:97" pos:end="715:97">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if><else pos:start="717:26" pos:end="719:116">else<block type="pseudo" pos:start="719:29" pos:end="719:116"><block_content pos:start="719:29" pos:end="719:116">

                            <expr_stmt pos:start="719:29" pos:end="719:116"><expr pos:start="719:29" pos:end="719:115"><call pos:start="719:29" pos:end="719:115"><name pos:start="719:29" pos:end="719:42">fill_rectangle</name><argument_list pos:start="719:43" pos:end="719:115">(<argument pos:start="719:44" pos:end="719:80"><expr pos:start="719:44" pos:end="719:80"><operator pos:start="719:44" pos:end="719:44">&amp;</operator><name pos:start="719:45" pos:end="719:80"><name pos:start="719:45" pos:end="719:45">h</name><operator pos:start="719:46" pos:end="719:47">-&gt;</operator><name pos:start="719:48" pos:end="719:56">ref_cache</name><index pos:start="719:57" pos:end="719:62">[<expr pos:start="719:58" pos:end="719:61"><name pos:start="719:58" pos:end="719:61">list</name></expr>]</index><index pos:start="719:63" pos:end="719:80">[ <expr pos:start="719:65" pos:end="719:78"><name pos:start="719:65" pos:end="719:72"><name pos:start="719:65" pos:end="719:69">scan8</name><index pos:start="719:70" pos:end="719:72">[<expr pos:start="719:71" pos:end="719:71"><literal type="number" pos:start="719:71" pos:end="719:71">0</literal></expr>]</index></name> <operator pos:start="719:74" pos:end="719:74">+</operator> <literal type="number" pos:start="719:76" pos:end="719:76">2</literal><operator pos:start="719:77" pos:end="719:77">*</operator><name pos:start="719:78" pos:end="719:78">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="719:83" pos:end="719:83"><expr pos:start="719:83" pos:end="719:83"><literal type="number" pos:start="719:83" pos:end="719:83">2</literal></expr></argument>, <argument pos:start="719:86" pos:end="719:86"><expr pos:start="719:86" pos:end="719:86"><literal type="number" pos:start="719:86" pos:end="719:86">4</literal></expr></argument>, <argument pos:start="719:89" pos:end="719:89"><expr pos:start="719:89" pos:end="719:89"><literal type="number" pos:start="719:89" pos:end="719:89">8</literal></expr></argument>, <argument pos:start="719:92" pos:end="719:111"><expr pos:start="719:92" pos:end="719:111"><operator pos:start="719:92" pos:end="719:92">(</operator><name pos:start="719:93" pos:end="719:105">LIST_NOT_USED</name><operator pos:start="719:106" pos:end="719:106">&amp;</operator><literal type="number" pos:start="719:107" pos:end="719:110">0xFF</literal><operator pos:start="719:111" pos:end="719:111">)</operator></expr></argument>, <argument pos:start="719:114" pos:end="719:114"><expr pos:start="719:114" pos:end="719:114"><literal type="number" pos:start="719:114" pos:end="719:114">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></for>

            </block_content>}</block></for>

            <for pos:start="725:13" pos:end="755:13">for<control pos:start="725:16" pos:end="725:51">(<init pos:start="725:17" pos:end="725:23"><expr pos:start="725:17" pos:end="725:22"><name pos:start="725:17" pos:end="725:20">list</name><operator pos:start="725:21" pos:end="725:21">=</operator><literal type="number" pos:start="725:22" pos:end="725:22">0</literal></expr>;</init> <condition pos:start="725:25" pos:end="725:43"><expr pos:start="725:25" pos:end="725:42"><name pos:start="725:25" pos:end="725:28">list</name><operator pos:start="725:29" pos:end="725:29">&lt;</operator><name pos:start="725:30" pos:end="725:42"><name pos:start="725:30" pos:end="725:30">h</name><operator pos:start="725:31" pos:end="725:32">-&gt;</operator><name pos:start="725:33" pos:end="725:42">list_count</name></name></expr>;</condition> <incr pos:start="725:45" pos:end="725:50"><expr pos:start="725:45" pos:end="725:50"><name pos:start="725:45" pos:end="725:48">list</name><operator pos:start="725:49" pos:end="725:50">++</operator></expr></incr>)</control><block pos:start="725:52" pos:end="755:13">{<block_content pos:start="727:17" pos:end="753:17">

                <for pos:start="727:17" pos:end="753:17">for<control pos:start="727:20" pos:end="727:34">(<init pos:start="727:21" pos:end="727:24"><expr pos:start="727:21" pos:end="727:23"><name pos:start="727:21" pos:end="727:21">i</name><operator pos:start="727:22" pos:end="727:22">=</operator><literal type="number" pos:start="727:23" pos:end="727:23">0</literal></expr>;</init> <condition pos:start="727:26" pos:end="727:29"><expr pos:start="727:26" pos:end="727:28"><name pos:start="727:26" pos:end="727:26">i</name><operator pos:start="727:27" pos:end="727:27">&lt;</operator><literal type="number" pos:start="727:28" pos:end="727:28">2</literal></expr>;</condition> <incr pos:start="727:31" pos:end="727:33"><expr pos:start="727:31" pos:end="727:33"><name pos:start="727:31" pos:end="727:31">i</name><operator pos:start="727:32" pos:end="727:33">++</operator></expr></incr>)</control><block pos:start="727:35" pos:end="753:17">{<block_content pos:start="729:21" pos:end="751:21">

                    <if_stmt pos:start="729:21" pos:end="751:21"><if pos:start="729:21" pos:end="745:21">if<condition pos:start="729:23" pos:end="729:48">(<expr pos:start="729:24" pos:end="729:47"><call pos:start="729:24" pos:end="729:47"><name pos:start="729:24" pos:end="729:29">IS_DIR</name><argument_list pos:start="729:30" pos:end="729:47">(<argument pos:start="729:31" pos:end="729:37"><expr pos:start="729:31" pos:end="729:37"><name pos:start="729:31" pos:end="729:37">mb_type</name></expr></argument>, <argument pos:start="729:40" pos:end="729:40"><expr pos:start="729:40" pos:end="729:40"><name pos:start="729:40" pos:end="729:40">i</name></expr></argument>, <argument pos:start="729:43" pos:end="729:46"><expr pos:start="729:43" pos:end="729:46"><name pos:start="729:43" pos:end="729:46">list</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="729:49" pos:end="745:21">{<block_content pos:start="731:25" pos:end="743:107">

                        <expr_stmt pos:start="731:25" pos:end="731:105"><expr pos:start="731:25" pos:end="731:104"><call pos:start="731:25" pos:end="731:104"><name pos:start="731:25" pos:end="731:40">pred_8x16_motion</name><argument_list pos:start="731:41" pos:end="731:104">(<argument pos:start="731:42" pos:end="731:42"><expr pos:start="731:42" pos:end="731:42"><name pos:start="731:42" pos:end="731:42">h</name></expr></argument>, <argument pos:start="731:45" pos:end="731:47"><expr pos:start="731:45" pos:end="731:47"><name pos:start="731:45" pos:end="731:45">i</name><operator pos:start="731:46" pos:end="731:46">*</operator><literal type="number" pos:start="731:47" pos:end="731:47">4</literal></expr></argument>, <argument pos:start="731:50" pos:end="731:53"><expr pos:start="731:50" pos:end="731:53"><name pos:start="731:50" pos:end="731:53">list</name></expr></argument>, <argument pos:start="731:56" pos:end="731:91"><expr pos:start="731:56" pos:end="731:91"><name pos:start="731:56" pos:end="731:91"><name pos:start="731:56" pos:end="731:56">h</name><operator pos:start="731:57" pos:end="731:58">-&gt;</operator><name pos:start="731:59" pos:end="731:67">ref_cache</name><index pos:start="731:68" pos:end="731:73">[<expr pos:start="731:69" pos:end="731:72"><name pos:start="731:69" pos:end="731:72">list</name></expr>]</index><index pos:start="731:74" pos:end="731:91">[ <expr pos:start="731:76" pos:end="731:89"><name pos:start="731:76" pos:end="731:83"><name pos:start="731:76" pos:end="731:80">scan8</name><index pos:start="731:81" pos:end="731:83">[<expr pos:start="731:82" pos:end="731:82"><literal type="number" pos:start="731:82" pos:end="731:82">0</literal></expr>]</index></name> <operator pos:start="731:85" pos:end="731:85">+</operator> <literal type="number" pos:start="731:87" pos:end="731:87">2</literal><operator pos:start="731:88" pos:end="731:88">*</operator><name pos:start="731:89" pos:end="731:89">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="731:94" pos:end="731:97"><expr pos:start="731:94" pos:end="731:97"><operator pos:start="731:94" pos:end="731:94">&amp;</operator><name pos:start="731:95" pos:end="731:97">mpx</name></expr></argument>, <argument pos:start="731:100" pos:end="731:103"><expr pos:start="731:100" pos:end="731:103"><operator pos:start="731:100" pos:end="731:100">&amp;</operator><name pos:start="731:101" pos:end="731:103">mpy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="733:25" pos:end="733:74"><expr pos:start="733:25" pos:end="733:73"><name pos:start="733:25" pos:end="733:26">mx</name> <operator pos:start="733:28" pos:end="733:28">=</operator> <name pos:start="733:30" pos:end="733:32">mpx</name> <operator pos:start="733:34" pos:end="733:34">+</operator> <call pos:start="733:36" pos:end="733:73"><name pos:start="733:36" pos:end="733:54">decode_cabac_mb_mvd</name><argument_list pos:start="733:55" pos:end="733:73">( <argument pos:start="733:57" pos:end="733:57"><expr pos:start="733:57" pos:end="733:57"><name pos:start="733:57" pos:end="733:57">h</name></expr></argument>, <argument pos:start="733:60" pos:end="733:63"><expr pos:start="733:60" pos:end="733:63"><name pos:start="733:60" pos:end="733:63">list</name></expr></argument>, <argument pos:start="733:66" pos:end="733:68"><expr pos:start="733:66" pos:end="733:68"><literal type="number" pos:start="733:66" pos:end="733:66">4</literal><operator pos:start="733:67" pos:end="733:67">*</operator><name pos:start="733:68" pos:end="733:68">i</name></expr></argument>, <argument pos:start="733:71" pos:end="733:71"><expr pos:start="733:71" pos:end="733:71"><literal type="number" pos:start="733:71" pos:end="733:71">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="735:25" pos:end="735:74"><expr pos:start="735:25" pos:end="735:73"><name pos:start="735:25" pos:end="735:26">my</name> <operator pos:start="735:28" pos:end="735:28">=</operator> <name pos:start="735:30" pos:end="735:32">mpy</name> <operator pos:start="735:34" pos:end="735:34">+</operator> <call pos:start="735:36" pos:end="735:73"><name pos:start="735:36" pos:end="735:54">decode_cabac_mb_mvd</name><argument_list pos:start="735:55" pos:end="735:73">( <argument pos:start="735:57" pos:end="735:57"><expr pos:start="735:57" pos:end="735:57"><name pos:start="735:57" pos:end="735:57">h</name></expr></argument>, <argument pos:start="735:60" pos:end="735:63"><expr pos:start="735:60" pos:end="735:63"><name pos:start="735:60" pos:end="735:63">list</name></expr></argument>, <argument pos:start="735:66" pos:end="735:68"><expr pos:start="735:66" pos:end="735:68"><literal type="number" pos:start="735:66" pos:end="735:66">4</literal><operator pos:start="735:67" pos:end="735:67">*</operator><name pos:start="735:68" pos:end="735:68">i</name></expr></argument>, <argument pos:start="735:71" pos:end="735:71"><expr pos:start="735:71" pos:end="735:71"><literal type="number" pos:start="735:71" pos:end="735:71">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="739:25" pos:end="739:70"><expr pos:start="739:25" pos:end="739:69"><call pos:start="739:25" pos:end="739:69"><name pos:start="739:25" pos:end="739:31">tprintf</name><argument_list pos:start="739:32" pos:end="739:69">(<argument pos:start="739:33" pos:end="739:40"><expr pos:start="739:33" pos:end="739:40"><name pos:start="739:33" pos:end="739:40"><name pos:start="739:33" pos:end="739:33">s</name><operator pos:start="739:34" pos:end="739:35">-&gt;</operator><name pos:start="739:36" pos:end="739:40">avctx</name></name></expr></argument>, <argument pos:start="739:43" pos:end="739:60"><expr pos:start="739:43" pos:end="739:60"><literal type="string" pos:start="739:43" pos:end="739:60">"final mv:%d %d\n"</literal></expr></argument>, <argument pos:start="739:63" pos:end="739:64"><expr pos:start="739:63" pos:end="739:64"><name pos:start="739:63" pos:end="739:64">mx</name></expr></argument>, <argument pos:start="739:67" pos:end="739:68"><expr pos:start="739:67" pos:end="739:68"><name pos:start="739:67" pos:end="739:68">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="741:25" pos:end="741:116"><expr pos:start="741:25" pos:end="741:115"><call pos:start="741:25" pos:end="741:115"><name pos:start="741:25" pos:end="741:38">fill_rectangle</name><argument_list pos:start="741:39" pos:end="741:115">(<argument pos:start="741:40" pos:end="741:75"><expr pos:start="741:40" pos:end="741:75"><name pos:start="741:40" pos:end="741:75"><name pos:start="741:40" pos:end="741:40">h</name><operator pos:start="741:41" pos:end="741:42">-&gt;</operator><name pos:start="741:43" pos:end="741:51">mvd_cache</name><index pos:start="741:52" pos:end="741:57">[<expr pos:start="741:53" pos:end="741:56"><name pos:start="741:53" pos:end="741:56">list</name></expr>]</index><index pos:start="741:58" pos:end="741:75">[ <expr pos:start="741:60" pos:end="741:73"><name pos:start="741:60" pos:end="741:67"><name pos:start="741:60" pos:end="741:64">scan8</name><index pos:start="741:65" pos:end="741:67">[<expr pos:start="741:66" pos:end="741:66"><literal type="number" pos:start="741:66" pos:end="741:66">0</literal></expr>]</index></name> <operator pos:start="741:69" pos:end="741:69">+</operator> <literal type="number" pos:start="741:71" pos:end="741:71">2</literal><operator pos:start="741:72" pos:end="741:72">*</operator><name pos:start="741:73" pos:end="741:73">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="741:78" pos:end="741:78"><expr pos:start="741:78" pos:end="741:78"><literal type="number" pos:start="741:78" pos:end="741:78">2</literal></expr></argument>, <argument pos:start="741:81" pos:end="741:81"><expr pos:start="741:81" pos:end="741:81"><literal type="number" pos:start="741:81" pos:end="741:81">4</literal></expr></argument>, <argument pos:start="741:84" pos:end="741:84"><expr pos:start="741:84" pos:end="741:84"><literal type="number" pos:start="741:84" pos:end="741:84">8</literal></expr></argument>, <argument pos:start="741:87" pos:end="741:111"><expr pos:start="741:87" pos:end="741:111"><call pos:start="741:87" pos:end="741:111"><name pos:start="741:87" pos:end="741:96">pack16to32</name><argument_list pos:start="741:97" pos:end="741:111">(<argument pos:start="741:98" pos:end="741:103"><expr pos:start="741:98" pos:end="741:103"><name pos:start="741:98" pos:end="741:99">mx</name><operator pos:start="741:100" pos:end="741:100">-</operator><name pos:start="741:101" pos:end="741:103">mpx</name></expr></argument>,<argument pos:start="741:105" pos:end="741:110"><expr pos:start="741:105" pos:end="741:110"><name pos:start="741:105" pos:end="741:106">my</name><operator pos:start="741:107" pos:end="741:107">-</operator><name pos:start="741:108" pos:end="741:110">mpy</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="741:114" pos:end="741:114"><expr pos:start="741:114" pos:end="741:114"><literal type="number" pos:start="741:114" pos:end="741:114">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="743:25" pos:end="743:107"><expr pos:start="743:25" pos:end="743:106"><call pos:start="743:25" pos:end="743:106"><name pos:start="743:25" pos:end="743:38">fill_rectangle</name><argument_list pos:start="743:39" pos:end="743:106">(<argument pos:start="743:40" pos:end="743:74"><expr pos:start="743:40" pos:end="743:74"><name pos:start="743:40" pos:end="743:74"><name pos:start="743:40" pos:end="743:40">h</name><operator pos:start="743:41" pos:end="743:42">-&gt;</operator><name pos:start="743:43" pos:end="743:50">mv_cache</name><index pos:start="743:51" pos:end="743:56">[<expr pos:start="743:52" pos:end="743:55"><name pos:start="743:52" pos:end="743:55">list</name></expr>]</index><index pos:start="743:57" pos:end="743:74">[ <expr pos:start="743:59" pos:end="743:72"><name pos:start="743:59" pos:end="743:66"><name pos:start="743:59" pos:end="743:63">scan8</name><index pos:start="743:64" pos:end="743:66">[<expr pos:start="743:65" pos:end="743:65"><literal type="number" pos:start="743:65" pos:end="743:65">0</literal></expr>]</index></name> <operator pos:start="743:68" pos:end="743:68">+</operator> <literal type="number" pos:start="743:70" pos:end="743:70">2</literal><operator pos:start="743:71" pos:end="743:71">*</operator><name pos:start="743:72" pos:end="743:72">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="743:77" pos:end="743:77"><expr pos:start="743:77" pos:end="743:77"><literal type="number" pos:start="743:77" pos:end="743:77">2</literal></expr></argument>, <argument pos:start="743:80" pos:end="743:80"><expr pos:start="743:80" pos:end="743:80"><literal type="number" pos:start="743:80" pos:end="743:80">4</literal></expr></argument>, <argument pos:start="743:83" pos:end="743:83"><expr pos:start="743:83" pos:end="743:83"><literal type="number" pos:start="743:83" pos:end="743:83">8</literal></expr></argument>, <argument pos:start="743:86" pos:end="743:102"><expr pos:start="743:86" pos:end="743:102"><call pos:start="743:86" pos:end="743:102"><name pos:start="743:86" pos:end="743:95">pack16to32</name><argument_list pos:start="743:96" pos:end="743:102">(<argument pos:start="743:97" pos:end="743:98"><expr pos:start="743:97" pos:end="743:98"><name pos:start="743:97" pos:end="743:98">mx</name></expr></argument>,<argument pos:start="743:100" pos:end="743:101"><expr pos:start="743:100" pos:end="743:101"><name pos:start="743:100" pos:end="743:101">my</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="743:105" pos:end="743:105"><expr pos:start="743:105" pos:end="743:105"><literal type="number" pos:start="743:105" pos:end="743:105">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="745:22" pos:end="751:21">else<block pos:start="745:26" pos:end="751:21">{<block_content pos:start="747:25" pos:end="749:92">

                        <expr_stmt pos:start="747:25" pos:end="747:92"><expr pos:start="747:25" pos:end="747:91"><call pos:start="747:25" pos:end="747:91"><name pos:start="747:25" pos:end="747:38">fill_rectangle</name><argument_list pos:start="747:39" pos:end="747:91">(<argument pos:start="747:40" pos:end="747:75"><expr pos:start="747:40" pos:end="747:75"><name pos:start="747:40" pos:end="747:75"><name pos:start="747:40" pos:end="747:40">h</name><operator pos:start="747:41" pos:end="747:42">-&gt;</operator><name pos:start="747:43" pos:end="747:51">mvd_cache</name><index pos:start="747:52" pos:end="747:57">[<expr pos:start="747:53" pos:end="747:56"><name pos:start="747:53" pos:end="747:56">list</name></expr>]</index><index pos:start="747:58" pos:end="747:75">[ <expr pos:start="747:60" pos:end="747:73"><name pos:start="747:60" pos:end="747:67"><name pos:start="747:60" pos:end="747:64">scan8</name><index pos:start="747:65" pos:end="747:67">[<expr pos:start="747:66" pos:end="747:66"><literal type="number" pos:start="747:66" pos:end="747:66">0</literal></expr>]</index></name> <operator pos:start="747:69" pos:end="747:69">+</operator> <literal type="number" pos:start="747:71" pos:end="747:71">2</literal><operator pos:start="747:72" pos:end="747:72">*</operator><name pos:start="747:73" pos:end="747:73">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="747:78" pos:end="747:78"><expr pos:start="747:78" pos:end="747:78"><literal type="number" pos:start="747:78" pos:end="747:78">2</literal></expr></argument>, <argument pos:start="747:81" pos:end="747:81"><expr pos:start="747:81" pos:end="747:81"><literal type="number" pos:start="747:81" pos:end="747:81">4</literal></expr></argument>, <argument pos:start="747:84" pos:end="747:84"><expr pos:start="747:84" pos:end="747:84"><literal type="number" pos:start="747:84" pos:end="747:84">8</literal></expr></argument>, <argument pos:start="747:87" pos:end="747:87"><expr pos:start="747:87" pos:end="747:87"><literal type="number" pos:start="747:87" pos:end="747:87">0</literal></expr></argument>, <argument pos:start="747:90" pos:end="747:90"><expr pos:start="747:90" pos:end="747:90"><literal type="number" pos:start="747:90" pos:end="747:90">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="749:25" pos:end="749:92"><expr pos:start="749:25" pos:end="749:91"><call pos:start="749:25" pos:end="749:91"><name pos:start="749:25" pos:end="749:38">fill_rectangle</name><argument_list pos:start="749:39" pos:end="749:91">(<argument pos:start="749:40" pos:end="749:75"><expr pos:start="749:40" pos:end="749:75"><name pos:start="749:40" pos:end="749:75"><name pos:start="749:40" pos:end="749:40">h</name><operator pos:start="749:41" pos:end="749:42">-&gt;</operator> <name pos:start="749:44" pos:end="749:51">mv_cache</name><index pos:start="749:52" pos:end="749:57">[<expr pos:start="749:53" pos:end="749:56"><name pos:start="749:53" pos:end="749:56">list</name></expr>]</index><index pos:start="749:58" pos:end="749:75">[ <expr pos:start="749:60" pos:end="749:73"><name pos:start="749:60" pos:end="749:67"><name pos:start="749:60" pos:end="749:64">scan8</name><index pos:start="749:65" pos:end="749:67">[<expr pos:start="749:66" pos:end="749:66"><literal type="number" pos:start="749:66" pos:end="749:66">0</literal></expr>]</index></name> <operator pos:start="749:69" pos:end="749:69">+</operator> <literal type="number" pos:start="749:71" pos:end="749:71">2</literal><operator pos:start="749:72" pos:end="749:72">*</operator><name pos:start="749:73" pos:end="749:73">i</name></expr> ]</index></name></expr></argument>, <argument pos:start="749:78" pos:end="749:78"><expr pos:start="749:78" pos:end="749:78"><literal type="number" pos:start="749:78" pos:end="749:78">2</literal></expr></argument>, <argument pos:start="749:81" pos:end="749:81"><expr pos:start="749:81" pos:end="749:81"><literal type="number" pos:start="749:81" pos:end="749:81">4</literal></expr></argument>, <argument pos:start="749:84" pos:end="749:84"><expr pos:start="749:84" pos:end="749:84"><literal type="number" pos:start="749:84" pos:end="749:84">8</literal></expr></argument>, <argument pos:start="749:87" pos:end="749:87"><expr pos:start="749:87" pos:end="749:87"><literal type="number" pos:start="749:87" pos:end="749:87">0</literal></expr></argument>, <argument pos:start="749:90" pos:end="749:90"><expr pos:start="749:90" pos:end="749:90"><literal type="number" pos:start="749:90" pos:end="749:90">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



   <if_stmt pos:start="763:4" pos:end="769:4"><if pos:start="763:4" pos:end="769:4">if<condition pos:start="763:6" pos:end="763:28">( <expr pos:start="763:8" pos:end="763:26"><call pos:start="763:8" pos:end="763:26"><name pos:start="763:8" pos:end="763:15">IS_INTER</name><argument_list pos:start="763:16" pos:end="763:26">( <argument pos:start="763:18" pos:end="763:24"><expr pos:start="763:18" pos:end="763:24"><name pos:start="763:18" pos:end="763:24">mb_type</name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="763:30" pos:end="769:4">{<block_content pos:start="765:9" pos:end="767:40">

        <expr_stmt pos:start="765:9" pos:end="765:45"><expr pos:start="765:9" pos:end="765:44"><name pos:start="765:9" pos:end="765:40"><name pos:start="765:9" pos:end="765:9">h</name><operator pos:start="765:10" pos:end="765:11">-&gt;</operator><name pos:start="765:12" pos:end="765:33">chroma_pred_mode_table</name><index pos:start="765:34" pos:end="765:40">[<expr pos:start="765:35" pos:end="765:39"><name pos:start="765:35" pos:end="765:39">mb_xy</name></expr>]</index></name> <operator pos:start="765:42" pos:end="765:42">=</operator> <literal type="number" pos:start="765:44" pos:end="765:44">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="767:9" pos:end="767:40"><expr pos:start="767:9" pos:end="767:39"><call pos:start="767:9" pos:end="767:39"><name pos:start="767:9" pos:end="767:25">write_back_motion</name><argument_list pos:start="767:26" pos:end="767:39">( <argument pos:start="767:28" pos:end="767:28"><expr pos:start="767:28" pos:end="767:28"><name pos:start="767:28" pos:end="767:28">h</name></expr></argument>, <argument pos:start="767:31" pos:end="767:37"><expr pos:start="767:31" pos:end="767:37"><name pos:start="767:31" pos:end="767:37">mb_type</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

   </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="773:5" pos:end="781:5"><if pos:start="773:5" pos:end="781:5">if<condition pos:start="773:7" pos:end="773:35">( <expr pos:start="773:9" pos:end="773:33"><operator pos:start="773:9" pos:end="773:9">!</operator><call pos:start="773:10" pos:end="773:33"><name pos:start="773:10" pos:end="773:22">IS_INTRA16x16</name><argument_list pos:start="773:23" pos:end="773:33">( <argument pos:start="773:25" pos:end="773:31"><expr pos:start="773:25" pos:end="773:31"><name pos:start="773:25" pos:end="773:31">mb_type</name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="773:37" pos:end="781:5">{<block_content pos:start="775:9" pos:end="779:56">

        <expr_stmt pos:start="775:9" pos:end="775:45"><expr pos:start="775:9" pos:end="775:44"><name pos:start="775:9" pos:end="775:11">cbp</name>  <operator pos:start="775:14" pos:end="775:14">=</operator> <call pos:start="775:16" pos:end="775:44"><name pos:start="775:16" pos:end="775:39">decode_cabac_mb_cbp_luma</name><argument_list pos:start="775:40" pos:end="775:44">( <argument pos:start="775:42" pos:end="775:42"><expr pos:start="775:42" pos:end="775:42"><name pos:start="775:42" pos:end="775:42">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="777:9" pos:end="779:56"><if pos:start="777:9" pos:end="779:56">if<condition pos:start="777:11" pos:end="777:18">(<expr pos:start="777:12" pos:end="777:17"><name pos:start="777:12" pos:end="777:17">CHROMA</name></expr>)</condition><block type="pseudo" pos:start="779:13" pos:end="779:56"><block_content pos:start="779:13" pos:end="779:56">

            <expr_stmt pos:start="779:13" pos:end="779:56"><expr pos:start="779:13" pos:end="779:55"><name pos:start="779:13" pos:end="779:15">cbp</name> <operator pos:start="779:17" pos:end="779:18">|=</operator> <call pos:start="779:20" pos:end="779:50"><name pos:start="779:20" pos:end="779:45">decode_cabac_mb_cbp_chroma</name><argument_list pos:start="779:46" pos:end="779:50">( <argument pos:start="779:48" pos:end="779:48"><expr pos:start="779:48" pos:end="779:48"><name pos:start="779:48" pos:end="779:48">h</name></expr></argument> )</argument_list></call> <operator pos:start="779:52" pos:end="779:53">&lt;&lt;</operator> <literal type="number" pos:start="779:55" pos:end="779:55">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="785:5" pos:end="785:39"><expr pos:start="785:5" pos:end="785:38"><name pos:start="785:5" pos:end="785:23"><name pos:start="785:5" pos:end="785:5">h</name><operator pos:start="785:6" pos:end="785:7">-&gt;</operator><name pos:start="785:8" pos:end="785:16">cbp_table</name><index pos:start="785:17" pos:end="785:23">[<expr pos:start="785:18" pos:end="785:22"><name pos:start="785:18" pos:end="785:22">mb_xy</name></expr>]</index></name> <operator pos:start="785:25" pos:end="785:25">=</operator> <name pos:start="785:27" pos:end="785:32"><name pos:start="785:27" pos:end="785:27">h</name><operator pos:start="785:28" pos:end="785:29">-&gt;</operator><name pos:start="785:30" pos:end="785:32">cbp</name></name> <operator pos:start="785:34" pos:end="785:34">=</operator> <name pos:start="785:36" pos:end="785:38">cbp</name></expr>;</expr_stmt>



    <if_stmt pos:start="789:5" pos:end="795:5"><if pos:start="789:5" pos:end="795:5">if<condition pos:start="789:7" pos:end="789:60">( <expr pos:start="789:9" pos:end="789:58"><name pos:start="789:9" pos:end="789:22">dct8x8_allowed</name> <operator pos:start="789:24" pos:end="789:25">&amp;&amp;</operator> <operator pos:start="789:27" pos:end="789:27">(</operator><name pos:start="789:28" pos:end="789:30">cbp</name><operator pos:start="789:31" pos:end="789:31">&amp;</operator><literal type="number" pos:start="789:32" pos:end="789:33">15</literal><operator pos:start="789:34" pos:end="789:34">)</operator> <operator pos:start="789:36" pos:end="789:37">&amp;&amp;</operator> <operator pos:start="789:39" pos:end="789:39">!</operator><call pos:start="789:40" pos:end="789:58"><name pos:start="789:40" pos:end="789:47">IS_INTRA</name><argument_list pos:start="789:48" pos:end="789:58">( <argument pos:start="789:50" pos:end="789:56"><expr pos:start="789:50" pos:end="789:56"><name pos:start="789:50" pos:end="789:56">mb_type</name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="789:62" pos:end="795:5">{<block_content pos:start="791:9" pos:end="793:38">

        <if_stmt pos:start="791:9" pos:end="793:38"><if pos:start="791:9" pos:end="793:38">if<condition pos:start="791:11" pos:end="791:49">( <expr pos:start="791:13" pos:end="791:47"><call pos:start="791:13" pos:end="791:47"><name pos:start="791:13" pos:end="791:42">decode_cabac_mb_transform_size</name><argument_list pos:start="791:43" pos:end="791:47">( <argument pos:start="791:45" pos:end="791:45"><expr pos:start="791:45" pos:end="791:45"><name pos:start="791:45" pos:end="791:45">h</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo" pos:start="793:13" pos:end="793:38"><block_content pos:start="793:13" pos:end="793:38">

            <expr_stmt pos:start="793:13" pos:end="793:38"><expr pos:start="793:13" pos:end="793:37"><name pos:start="793:13" pos:end="793:19">mb_type</name> <operator pos:start="793:21" pos:end="793:22">|=</operator> <name pos:start="793:24" pos:end="793:37">MB_TYPE_8x8DCT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="797:5" pos:end="797:47"><expr pos:start="797:5" pos:end="797:46"><name pos:start="797:5" pos:end="797:37"><name pos:start="797:5" pos:end="797:5">s</name><operator pos:start="797:6" pos:end="797:7">-&gt;</operator><name pos:start="797:8" pos:end="797:22">current_picture</name><operator pos:start="797:23" pos:end="797:23">.</operator><name pos:start="797:24" pos:end="797:30">mb_type</name><index pos:start="797:31" pos:end="797:37">[<expr pos:start="797:32" pos:end="797:36"><name pos:start="797:32" pos:end="797:36">mb_xy</name></expr>]</index></name><operator pos:start="797:38" pos:end="797:38">=</operator> <name pos:start="797:40" pos:end="797:46">mb_type</name></expr>;</expr_stmt>



    <if_stmt pos:start="801:5" pos:end="991:5"><if pos:start="801:5" pos:end="979:5">if<condition pos:start="801:7" pos:end="801:41">( <expr pos:start="801:9" pos:end="801:39"><name pos:start="801:9" pos:end="801:11">cbp</name> <operator pos:start="801:13" pos:end="801:14">||</operator> <call pos:start="801:16" pos:end="801:39"><name pos:start="801:16" pos:end="801:28">IS_INTRA16x16</name><argument_list pos:start="801:29" pos:end="801:39">( <argument pos:start="801:31" pos:end="801:37"><expr pos:start="801:31" pos:end="801:37"><name pos:start="801:31" pos:end="801:37">mb_type</name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="801:43" pos:end="979:5">{<block_content pos:start="803:9" pos:end="977:9">

        <decl_stmt pos:start="803:9" pos:end="803:48"><decl pos:start="803:9" pos:end="803:27"><type pos:start="803:9" pos:end="803:23"><specifier pos:start="803:9" pos:end="803:13">const</specifier> <name pos:start="803:15" pos:end="803:21">uint8_t</name> <modifier pos:start="803:23" pos:end="803:23">*</modifier></type><name pos:start="803:24" pos:end="803:27">scan</name></decl>, <decl pos:start="803:30" pos:end="803:37"><type ref="prev" pos:start="803:9" pos:end="803:23"><modifier pos:start="803:30" pos:end="803:30">*</modifier></type><name pos:start="803:31" pos:end="803:37">scan8x8</name></decl>, <decl pos:start="803:40" pos:end="803:47"><type ref="prev" pos:start="803:9" pos:end="803:23"><modifier pos:start="803:40" pos:end="803:40">*</modifier></type><name pos:start="803:41" pos:end="803:47">dc_scan</name></decl>;</decl_stmt>

        <decl_stmt pos:start="805:9" pos:end="805:29"><decl pos:start="805:9" pos:end="805:28"><type pos:start="805:9" pos:end="805:24"><specifier pos:start="805:9" pos:end="805:13">const</specifier> <name pos:start="805:15" pos:end="805:22">uint32_t</name> <modifier pos:start="805:24" pos:end="805:24">*</modifier></type><name pos:start="805:25" pos:end="805:28">qmul</name></decl>;</decl_stmt>

        <decl_stmt pos:start="807:9" pos:end="807:16"><decl pos:start="807:9" pos:end="807:15"><type pos:start="807:9" pos:end="807:11"><name pos:start="807:9" pos:end="807:11">int</name></type> <name pos:start="807:13" pos:end="807:15">dqp</name></decl>;</decl_stmt>



        <if_stmt pos:start="811:9" pos:end="827:9"><if pos:start="811:9" pos:end="819:9">if<condition pos:start="811:11" pos:end="811:34">(<expr pos:start="811:12" pos:end="811:33"><call pos:start="811:12" pos:end="811:33"><name pos:start="811:12" pos:end="811:24">IS_INTERLACED</name><argument_list pos:start="811:25" pos:end="811:33">(<argument pos:start="811:26" pos:end="811:32"><expr pos:start="811:26" pos:end="811:32"><name pos:start="811:26" pos:end="811:32">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="811:35" pos:end="819:9">{<block_content pos:start="813:13" pos:end="817:40">

            <expr_stmt pos:start="813:13" pos:end="813:72"><expr pos:start="813:13" pos:end="813:71"><name pos:start="813:13" pos:end="813:19">scan8x8</name><operator pos:start="813:20" pos:end="813:20">=</operator> <ternary pos:start="813:22" pos:end="813:71"><condition pos:start="813:22" pos:end="813:32"><expr pos:start="813:22" pos:end="813:30"><name pos:start="813:22" pos:end="813:30"><name pos:start="813:22" pos:end="813:22">s</name><operator pos:start="813:23" pos:end="813:24">-&gt;</operator><name pos:start="813:25" pos:end="813:30">qscale</name></name></expr> ?</condition><then pos:start="813:34" pos:end="813:49"> <expr pos:start="813:34" pos:end="813:49"><name pos:start="813:34" pos:end="813:49"><name pos:start="813:34" pos:end="813:34">h</name><operator pos:start="813:35" pos:end="813:36">-&gt;</operator><name pos:start="813:37" pos:end="813:49">field_scan8x8</name></name></expr> </then><else pos:start="813:51" pos:end="813:71">: <expr pos:start="813:53" pos:end="813:71"><name pos:start="813:53" pos:end="813:71"><name pos:start="813:53" pos:end="813:53">h</name><operator pos:start="813:54" pos:end="813:55">-&gt;</operator><name pos:start="813:56" pos:end="813:71">field_scan8x8_q0</name></name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="815:13" pos:end="815:63"><expr pos:start="815:13" pos:end="815:62"><name pos:start="815:13" pos:end="815:16">scan</name><operator pos:start="815:17" pos:end="815:17">=</operator> <ternary pos:start="815:19" pos:end="815:62"><condition pos:start="815:19" pos:end="815:29"><expr pos:start="815:19" pos:end="815:27"><name pos:start="815:19" pos:end="815:27"><name pos:start="815:19" pos:end="815:19">s</name><operator pos:start="815:20" pos:end="815:21">-&gt;</operator><name pos:start="815:22" pos:end="815:27">qscale</name></name></expr> ?</condition><then pos:start="815:31" pos:end="815:43"> <expr pos:start="815:31" pos:end="815:43"><name pos:start="815:31" pos:end="815:43"><name pos:start="815:31" pos:end="815:31">h</name><operator pos:start="815:32" pos:end="815:33">-&gt;</operator><name pos:start="815:34" pos:end="815:43">field_scan</name></name></expr> </then><else pos:start="815:45" pos:end="815:62">: <expr pos:start="815:47" pos:end="815:62"><name pos:start="815:47" pos:end="815:62"><name pos:start="815:47" pos:end="815:47">h</name><operator pos:start="815:48" pos:end="815:49">-&gt;</operator><name pos:start="815:50" pos:end="815:62">field_scan_q0</name></name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="817:13" pos:end="817:40"><expr pos:start="817:13" pos:end="817:39"><name pos:start="817:13" pos:end="817:19">dc_scan</name><operator pos:start="817:20" pos:end="817:20">=</operator> <name pos:start="817:22" pos:end="817:39">luma_dc_field_scan</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="819:10" pos:end="827:9">else<block pos:start="819:14" pos:end="827:9">{<block_content pos:start="821:13" pos:end="825:41">

            <expr_stmt pos:start="821:13" pos:end="821:74"><expr pos:start="821:13" pos:end="821:73"><name pos:start="821:13" pos:end="821:19">scan8x8</name><operator pos:start="821:20" pos:end="821:20">=</operator> <ternary pos:start="821:22" pos:end="821:73"><condition pos:start="821:22" pos:end="821:32"><expr pos:start="821:22" pos:end="821:30"><name pos:start="821:22" pos:end="821:30"><name pos:start="821:22" pos:end="821:22">s</name><operator pos:start="821:23" pos:end="821:24">-&gt;</operator><name pos:start="821:25" pos:end="821:30">qscale</name></name></expr> ?</condition><then pos:start="821:34" pos:end="821:50"> <expr pos:start="821:34" pos:end="821:50"><name pos:start="821:34" pos:end="821:50"><name pos:start="821:34" pos:end="821:34">h</name><operator pos:start="821:35" pos:end="821:36">-&gt;</operator><name pos:start="821:37" pos:end="821:50">zigzag_scan8x8</name></name></expr> </then><else pos:start="821:52" pos:end="821:73">: <expr pos:start="821:54" pos:end="821:73"><name pos:start="821:54" pos:end="821:73"><name pos:start="821:54" pos:end="821:54">h</name><operator pos:start="821:55" pos:end="821:56">-&gt;</operator><name pos:start="821:57" pos:end="821:73">zigzag_scan8x8_q0</name></name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="823:13" pos:end="823:65"><expr pos:start="823:13" pos:end="823:64"><name pos:start="823:13" pos:end="823:16">scan</name><operator pos:start="823:17" pos:end="823:17">=</operator> <ternary pos:start="823:19" pos:end="823:64"><condition pos:start="823:19" pos:end="823:29"><expr pos:start="823:19" pos:end="823:27"><name pos:start="823:19" pos:end="823:27"><name pos:start="823:19" pos:end="823:19">s</name><operator pos:start="823:20" pos:end="823:21">-&gt;</operator><name pos:start="823:22" pos:end="823:27">qscale</name></name></expr> ?</condition><then pos:start="823:31" pos:end="823:44"> <expr pos:start="823:31" pos:end="823:44"><name pos:start="823:31" pos:end="823:44"><name pos:start="823:31" pos:end="823:31">h</name><operator pos:start="823:32" pos:end="823:33">-&gt;</operator><name pos:start="823:34" pos:end="823:44">zigzag_scan</name></name></expr> </then><else pos:start="823:46" pos:end="823:64">: <expr pos:start="823:48" pos:end="823:64"><name pos:start="823:48" pos:end="823:64"><name pos:start="823:48" pos:end="823:48">h</name><operator pos:start="823:49" pos:end="823:50">-&gt;</operator><name pos:start="823:51" pos:end="823:64">zigzag_scan_q0</name></name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="825:13" pos:end="825:41"><expr pos:start="825:13" pos:end="825:40"><name pos:start="825:13" pos:end="825:19">dc_scan</name><operator pos:start="825:20" pos:end="825:20">=</operator> <name pos:start="825:22" pos:end="825:40">luma_dc_zigzag_scan</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="831:9" pos:end="831:61"><expr pos:start="831:9" pos:end="831:60"><name pos:start="831:9" pos:end="831:27"><name pos:start="831:9" pos:end="831:9">h</name><operator pos:start="831:10" pos:end="831:11">-&gt;</operator><name pos:start="831:12" pos:end="831:27">last_qscale_diff</name></name> <operator pos:start="831:29" pos:end="831:29">=</operator> <name pos:start="831:31" pos:end="831:33">dqp</name> <operator pos:start="831:35" pos:end="831:35">=</operator> <call pos:start="831:37" pos:end="831:60"><name pos:start="831:37" pos:end="831:55">decode_cabac_mb_dqp</name><argument_list pos:start="831:56" pos:end="831:60">( <argument pos:start="831:58" pos:end="831:58"><expr pos:start="831:58" pos:end="831:58"><name pos:start="831:58" pos:end="831:58">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="833:9" pos:end="839:9"><if pos:start="833:9" pos:end="839:9">if<condition pos:start="833:11" pos:end="833:28">( <expr pos:start="833:13" pos:end="833:26"><name pos:start="833:13" pos:end="833:15">dqp</name> <operator pos:start="833:17" pos:end="833:18">==</operator> <name pos:start="833:20" pos:end="833:26">INT_MIN</name></expr> )</condition><block pos:start="833:29" pos:end="839:9">{<block_content pos:start="835:13" pos:end="837:22">

            <expr_stmt pos:start="835:13" pos:end="835:112"><expr pos:start="835:13" pos:end="835:111"><call pos:start="835:13" pos:end="835:111"><name pos:start="835:13" pos:end="835:18">av_log</name><argument_list pos:start="835:19" pos:end="835:111">(<argument pos:start="835:20" pos:end="835:29"><expr pos:start="835:20" pos:end="835:29"><name pos:start="835:20" pos:end="835:29"><name pos:start="835:20" pos:end="835:20">h</name><operator pos:start="835:21" pos:end="835:22">-&gt;</operator><name pos:start="835:23" pos:end="835:23">s</name><operator pos:start="835:24" pos:end="835:24">.</operator><name pos:start="835:25" pos:end="835:29">avctx</name></name></expr></argument>, <argument pos:start="835:32" pos:end="835:43"><expr pos:start="835:32" pos:end="835:43"><name pos:start="835:32" pos:end="835:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="835:46" pos:end="835:92"><expr pos:start="835:46" pos:end="835:92"><literal type="string" pos:start="835:46" pos:end="835:92">"cabac decode of qscale diff failed at %d %d\n"</literal></expr></argument>, <argument pos:start="835:95" pos:end="835:101"><expr pos:start="835:95" pos:end="835:101"><name pos:start="835:95" pos:end="835:101"><name pos:start="835:95" pos:end="835:95">s</name><operator pos:start="835:96" pos:end="835:97">-&gt;</operator><name pos:start="835:98" pos:end="835:101">mb_x</name></name></expr></argument>, <argument pos:start="835:104" pos:end="835:110"><expr pos:start="835:104" pos:end="835:110"><name pos:start="835:104" pos:end="835:110"><name pos:start="835:104" pos:end="835:104">s</name><operator pos:start="835:105" pos:end="835:106">-&gt;</operator><name pos:start="835:107" pos:end="835:110">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="837:13" pos:end="837:22">return <expr pos:start="837:20" pos:end="837:21"><operator pos:start="837:20" pos:end="837:20">-</operator><literal type="number" pos:start="837:21" pos:end="837:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="841:9" pos:end="841:25"><expr pos:start="841:9" pos:end="841:24"><name pos:start="841:9" pos:end="841:17"><name pos:start="841:9" pos:end="841:9">s</name><operator pos:start="841:10" pos:end="841:11">-&gt;</operator><name pos:start="841:12" pos:end="841:17">qscale</name></name> <operator pos:start="841:19" pos:end="841:20">+=</operator> <name pos:start="841:22" pos:end="841:24">dqp</name></expr>;</expr_stmt>

        <if_stmt pos:start="843:9" pos:end="849:9"><if pos:start="843:9" pos:end="849:9">if<condition pos:start="843:11" pos:end="843:38">(<expr pos:start="843:12" pos:end="843:37"><operator pos:start="843:12" pos:end="843:12">(</operator><operator pos:start="843:13" pos:end="843:13">(</operator><name pos:start="843:14" pos:end="843:21">unsigned</name><operator pos:start="843:22" pos:end="843:22">)</operator><name pos:start="843:23" pos:end="843:31"><name pos:start="843:23" pos:end="843:23">s</name><operator pos:start="843:24" pos:end="843:25">-&gt;</operator><name pos:start="843:26" pos:end="843:31">qscale</name></name><operator pos:start="843:32" pos:end="843:32">)</operator> <operator pos:start="843:34" pos:end="843:34">&gt;</operator> <literal type="number" pos:start="843:36" pos:end="843:37">51</literal></expr>)</condition><block pos:start="843:39" pos:end="849:9">{<block_content pos:start="845:13" pos:end="847:43">

            <if_stmt pos:start="845:13" pos:end="847:43"><if pos:start="845:13" pos:end="845:43">if<condition pos:start="845:15" pos:end="845:27">(<expr pos:start="845:16" pos:end="845:26"><name pos:start="845:16" pos:end="845:24"><name pos:start="845:16" pos:end="845:16">s</name><operator pos:start="845:17" pos:end="845:18">-&gt;</operator><name pos:start="845:19" pos:end="845:24">qscale</name></name><operator pos:start="845:25" pos:end="845:25">&lt;</operator><literal type="number" pos:start="845:26" pos:end="845:26">0</literal></expr>)</condition><block type="pseudo" pos:start="845:29" pos:end="845:43"><block_content pos:start="845:29" pos:end="845:43"> <expr_stmt pos:start="845:29" pos:end="845:43"><expr pos:start="845:29" pos:end="845:42"><name pos:start="845:29" pos:end="845:37"><name pos:start="845:29" pos:end="845:29">s</name><operator pos:start="845:30" pos:end="845:31">-&gt;</operator><name pos:start="845:32" pos:end="845:37">qscale</name></name><operator pos:start="845:38" pos:end="845:39">+=</operator> <literal type="number" pos:start="845:41" pos:end="845:42">52</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="847:13" pos:end="847:43">else<block type="pseudo" pos:start="847:29" pos:end="847:43"><block_content pos:start="847:29" pos:end="847:43">            <expr_stmt pos:start="847:29" pos:end="847:43"><expr pos:start="847:29" pos:end="847:42"><name pos:start="847:29" pos:end="847:37"><name pos:start="847:29" pos:end="847:29">s</name><operator pos:start="847:30" pos:end="847:31">-&gt;</operator><name pos:start="847:32" pos:end="847:37">qscale</name></name><operator pos:start="847:38" pos:end="847:39">-=</operator> <literal type="number" pos:start="847:41" pos:end="847:42">52</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="851:9" pos:end="851:57"><expr pos:start="851:9" pos:end="851:56"><name pos:start="851:9" pos:end="851:23"><name pos:start="851:9" pos:end="851:9">h</name><operator pos:start="851:10" pos:end="851:11">-&gt;</operator><name pos:start="851:12" pos:end="851:20">chroma_qp</name><index pos:start="851:21" pos:end="851:23">[<expr pos:start="851:22" pos:end="851:22"><literal type="number" pos:start="851:22" pos:end="851:22">0</literal></expr>]</index></name> <operator pos:start="851:25" pos:end="851:25">=</operator> <call pos:start="851:27" pos:end="851:56"><name pos:start="851:27" pos:end="851:39">get_chroma_qp</name><argument_list pos:start="851:40" pos:end="851:56">(<argument pos:start="851:41" pos:end="851:41"><expr pos:start="851:41" pos:end="851:41"><name pos:start="851:41" pos:end="851:41">h</name></expr></argument>, <argument pos:start="851:44" pos:end="851:44"><expr pos:start="851:44" pos:end="851:44"><literal type="number" pos:start="851:44" pos:end="851:44">0</literal></expr></argument>, <argument pos:start="851:47" pos:end="851:55"><expr pos:start="851:47" pos:end="851:55"><name pos:start="851:47" pos:end="851:55"><name pos:start="851:47" pos:end="851:47">s</name><operator pos:start="851:48" pos:end="851:49">-&gt;</operator><name pos:start="851:50" pos:end="851:55">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="853:9" pos:end="853:57"><expr pos:start="853:9" pos:end="853:56"><name pos:start="853:9" pos:end="853:23"><name pos:start="853:9" pos:end="853:9">h</name><operator pos:start="853:10" pos:end="853:11">-&gt;</operator><name pos:start="853:12" pos:end="853:20">chroma_qp</name><index pos:start="853:21" pos:end="853:23">[<expr pos:start="853:22" pos:end="853:22"><literal type="number" pos:start="853:22" pos:end="853:22">1</literal></expr>]</index></name> <operator pos:start="853:25" pos:end="853:25">=</operator> <call pos:start="853:27" pos:end="853:56"><name pos:start="853:27" pos:end="853:39">get_chroma_qp</name><argument_list pos:start="853:40" pos:end="853:56">(<argument pos:start="853:41" pos:end="853:41"><expr pos:start="853:41" pos:end="853:41"><name pos:start="853:41" pos:end="853:41">h</name></expr></argument>, <argument pos:start="853:44" pos:end="853:44"><expr pos:start="853:44" pos:end="853:44"><literal type="number" pos:start="853:44" pos:end="853:44">1</literal></expr></argument>, <argument pos:start="853:47" pos:end="853:55"><expr pos:start="853:47" pos:end="853:55"><name pos:start="853:47" pos:end="853:55"><name pos:start="853:47" pos:end="853:47">s</name><operator pos:start="853:48" pos:end="853:49">-&gt;</operator><name pos:start="853:50" pos:end="853:55">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="857:9" pos:end="929:9"><if pos:start="857:9" pos:end="885:9">if<condition pos:start="857:11" pos:end="857:38">( <expr pos:start="857:13" pos:end="857:36"><call pos:start="857:13" pos:end="857:36"><name pos:start="857:13" pos:end="857:25">IS_INTRA16x16</name><argument_list pos:start="857:26" pos:end="857:36">( <argument pos:start="857:28" pos:end="857:34"><expr pos:start="857:28" pos:end="857:34"><name pos:start="857:28" pos:end="857:34">mb_type</name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="857:40" pos:end="885:9">{<block_content pos:start="859:13" pos:end="883:13">

            <decl_stmt pos:start="859:13" pos:end="859:18"><decl pos:start="859:13" pos:end="859:17"><type pos:start="859:13" pos:end="859:15"><name pos:start="859:13" pos:end="859:15">int</name></type> <name pos:start="859:17" pos:end="859:17">i</name></decl>;</decl_stmt>

            <comment type="line" pos:start="861:13" pos:end="861:66">//av_log( s-&gt;avctx, AV_LOG_ERROR, "INTRA16x16 DC\n" );</comment>

            <expr_stmt pos:start="863:13" pos:end="863:70"><expr pos:start="863:13" pos:end="863:69"><call pos:start="863:13" pos:end="863:69"><name pos:start="863:13" pos:end="863:33">decode_cabac_residual</name><argument_list pos:start="863:34" pos:end="863:69">( <argument pos:start="863:36" pos:end="863:36"><expr pos:start="863:36" pos:end="863:36"><name pos:start="863:36" pos:end="863:36">h</name></expr></argument>, <argument pos:start="863:39" pos:end="863:43"><expr pos:start="863:39" pos:end="863:43"><name pos:start="863:39" pos:end="863:43"><name pos:start="863:39" pos:end="863:39">h</name><operator pos:start="863:40" pos:end="863:41">-&gt;</operator><name pos:start="863:42" pos:end="863:43">mb</name></name></expr></argument>, <argument pos:start="863:46" pos:end="863:46"><expr pos:start="863:46" pos:end="863:46"><literal type="number" pos:start="863:46" pos:end="863:46">0</literal></expr></argument>, <argument pos:start="863:49" pos:end="863:49"><expr pos:start="863:49" pos:end="863:49"><literal type="number" pos:start="863:49" pos:end="863:49">0</literal></expr></argument>, <argument pos:start="863:52" pos:end="863:58"><expr pos:start="863:52" pos:end="863:58"><name pos:start="863:52" pos:end="863:58">dc_scan</name></expr></argument>, <argument pos:start="863:61" pos:end="863:64"><expr pos:start="863:61" pos:end="863:64"><name pos:start="863:61" pos:end="863:64">NULL</name></expr></argument>, <argument pos:start="863:67" pos:end="863:68"><expr pos:start="863:67" pos:end="863:68"><literal type="number" pos:start="863:67" pos:end="863:68">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="867:13" pos:end="883:13"><if pos:start="867:13" pos:end="879:13">if<condition pos:start="867:15" pos:end="867:24">( <expr pos:start="867:17" pos:end="867:22"><name pos:start="867:17" pos:end="867:19">cbp</name><operator pos:start="867:20" pos:end="867:20">&amp;</operator><literal type="number" pos:start="867:21" pos:end="867:22">15</literal></expr> )</condition> <block pos:start="867:26" pos:end="879:13">{<block_content pos:start="869:17" pos:end="877:17">

                <expr_stmt pos:start="869:17" pos:end="869:55"><expr pos:start="869:17" pos:end="869:54"><name pos:start="869:17" pos:end="869:20">qmul</name> <operator pos:start="869:22" pos:end="869:22">=</operator> <name pos:start="869:24" pos:end="869:54"><name pos:start="869:24" pos:end="869:24">h</name><operator pos:start="869:25" pos:end="869:26">-&gt;</operator><name pos:start="869:27" pos:end="869:40">dequant4_coeff</name><index pos:start="869:41" pos:end="869:43">[<expr pos:start="869:42" pos:end="869:42"><literal type="number" pos:start="869:42" pos:end="869:42">0</literal></expr>]</index><index pos:start="869:44" pos:end="869:54">[<expr pos:start="869:45" pos:end="869:53"><name pos:start="869:45" pos:end="869:53"><name pos:start="869:45" pos:end="869:45">s</name><operator pos:start="869:46" pos:end="869:47">-&gt;</operator><name pos:start="869:48" pos:end="869:53">qscale</name></name></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="871:17" pos:end="877:17">for<control pos:start="871:20" pos:end="871:41">( <init pos:start="871:22" pos:end="871:27"><expr pos:start="871:22" pos:end="871:26"><name pos:start="871:22" pos:end="871:22">i</name> <operator pos:start="871:24" pos:end="871:24">=</operator> <literal type="number" pos:start="871:26" pos:end="871:26">0</literal></expr>;</init> <condition pos:start="871:29" pos:end="871:35"><expr pos:start="871:29" pos:end="871:34"><name pos:start="871:29" pos:end="871:29">i</name> <operator pos:start="871:31" pos:end="871:31">&lt;</operator> <literal type="number" pos:start="871:33" pos:end="871:34">16</literal></expr>;</condition> <incr pos:start="871:37" pos:end="871:39"><expr pos:start="871:37" pos:end="871:39"><name pos:start="871:37" pos:end="871:37">i</name><operator pos:start="871:38" pos:end="871:39">++</operator></expr></incr> )</control> <block pos:start="871:43" pos:end="877:17">{<block_content pos:start="875:21" pos:end="875:85">

                    <comment type="line" pos:start="873:21" pos:end="873:80">//av_log( s-&gt;avctx, AV_LOG_ERROR, "INTRA16x16 AC:%d\n", i );</comment>

                    <expr_stmt pos:start="875:21" pos:end="875:85"><expr pos:start="875:21" pos:end="875:84"><call pos:start="875:21" pos:end="875:84"><name pos:start="875:21" pos:end="875:41">decode_cabac_residual</name><argument_list pos:start="875:42" pos:end="875:84">(<argument pos:start="875:43" pos:end="875:43"><expr pos:start="875:43" pos:end="875:43"><name pos:start="875:43" pos:end="875:43">h</name></expr></argument>, <argument pos:start="875:46" pos:end="875:57"><expr pos:start="875:46" pos:end="875:57"><name pos:start="875:46" pos:end="875:50"><name pos:start="875:46" pos:end="875:46">h</name><operator pos:start="875:47" pos:end="875:48">-&gt;</operator><name pos:start="875:49" pos:end="875:50">mb</name></name> <operator pos:start="875:52" pos:end="875:52">+</operator> <literal type="number" pos:start="875:54" pos:end="875:55">16</literal><operator pos:start="875:56" pos:end="875:56">*</operator><name pos:start="875:57" pos:end="875:57">i</name></expr></argument>, <argument pos:start="875:60" pos:end="875:60"><expr pos:start="875:60" pos:end="875:60"><literal type="number" pos:start="875:60" pos:end="875:60">1</literal></expr></argument>, <argument pos:start="875:63" pos:end="875:63"><expr pos:start="875:63" pos:end="875:63"><name pos:start="875:63" pos:end="875:63">i</name></expr></argument>, <argument pos:start="875:66" pos:end="875:73"><expr pos:start="875:66" pos:end="875:73"><name pos:start="875:66" pos:end="875:69">scan</name> <operator pos:start="875:71" pos:end="875:71">+</operator> <literal type="number" pos:start="875:73" pos:end="875:73">1</literal></expr></argument>, <argument pos:start="875:76" pos:end="875:79"><expr pos:start="875:76" pos:end="875:79"><name pos:start="875:76" pos:end="875:79">qmul</name></expr></argument>, <argument pos:start="875:82" pos:end="875:83"><expr pos:start="875:82" pos:end="875:83"><literal type="number" pos:start="875:82" pos:end="875:83">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="879:15" pos:end="883:13">else <block pos:start="879:20" pos:end="883:13">{<block_content pos:start="881:17" pos:end="881:82">

                <expr_stmt pos:start="881:17" pos:end="881:82"><expr pos:start="881:17" pos:end="881:81"><call pos:start="881:17" pos:end="881:81"><name pos:start="881:17" pos:end="881:30">fill_rectangle</name><argument_list pos:start="881:31" pos:end="881:81">(<argument pos:start="881:32" pos:end="881:65"><expr pos:start="881:32" pos:end="881:65"><operator pos:start="881:32" pos:end="881:32">&amp;</operator><name pos:start="881:33" pos:end="881:65"><name pos:start="881:33" pos:end="881:33">h</name><operator pos:start="881:34" pos:end="881:35">-&gt;</operator><name pos:start="881:36" pos:end="881:55">non_zero_count_cache</name><index pos:start="881:56" pos:end="881:65">[<expr pos:start="881:57" pos:end="881:64"><name pos:start="881:57" pos:end="881:64"><name pos:start="881:57" pos:end="881:61">scan8</name><index pos:start="881:62" pos:end="881:64">[<expr pos:start="881:63" pos:end="881:63"><literal type="number" pos:start="881:63" pos:end="881:63">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="881:68" pos:end="881:68"><expr pos:start="881:68" pos:end="881:68"><literal type="number" pos:start="881:68" pos:end="881:68">4</literal></expr></argument>, <argument pos:start="881:71" pos:end="881:71"><expr pos:start="881:71" pos:end="881:71"><literal type="number" pos:start="881:71" pos:end="881:71">4</literal></expr></argument>, <argument pos:start="881:74" pos:end="881:74"><expr pos:start="881:74" pos:end="881:74"><literal type="number" pos:start="881:74" pos:end="881:74">8</literal></expr></argument>, <argument pos:start="881:77" pos:end="881:77"><expr pos:start="881:77" pos:end="881:77"><literal type="number" pos:start="881:77" pos:end="881:77">0</literal></expr></argument>, <argument pos:start="881:80" pos:end="881:80"><expr pos:start="881:80" pos:end="881:80"><literal type="number" pos:start="881:80" pos:end="881:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="885:11" pos:end="929:9">else <block pos:start="885:16" pos:end="929:9">{<block_content pos:start="887:13" pos:end="927:13">

            <decl_stmt pos:start="887:13" pos:end="887:27"><decl pos:start="887:13" pos:end="887:20"><type pos:start="887:13" pos:end="887:15"><name pos:start="887:13" pos:end="887:15">int</name></type> <name pos:start="887:17" pos:end="887:20">i8x8</name></decl>, <decl pos:start="887:23" pos:end="887:26"><type ref="prev" pos:start="887:13" pos:end="887:15"/><name pos:start="887:23" pos:end="887:26">i4x4</name></decl>;</decl_stmt>

            <for pos:start="889:13" pos:end="927:13">for<control pos:start="889:16" pos:end="889:45">( <init pos:start="889:18" pos:end="889:26"><expr pos:start="889:18" pos:end="889:25"><name pos:start="889:18" pos:end="889:21">i8x8</name> <operator pos:start="889:23" pos:end="889:23">=</operator> <literal type="number" pos:start="889:25" pos:end="889:25">0</literal></expr>;</init> <condition pos:start="889:28" pos:end="889:36"><expr pos:start="889:28" pos:end="889:35"><name pos:start="889:28" pos:end="889:31">i8x8</name> <operator pos:start="889:33" pos:end="889:33">&lt;</operator> <literal type="number" pos:start="889:35" pos:end="889:35">4</literal></expr>;</condition> <incr pos:start="889:38" pos:end="889:43"><expr pos:start="889:38" pos:end="889:43"><name pos:start="889:38" pos:end="889:41">i8x8</name><operator pos:start="889:42" pos:end="889:43">++</operator></expr></incr> )</control> <block pos:start="889:47" pos:end="927:13">{<block_content pos:start="891:17" pos:end="925:17">

                <if_stmt pos:start="891:17" pos:end="925:17"><if pos:start="891:17" pos:end="919:17">if<condition pos:start="891:19" pos:end="891:37">( <expr pos:start="891:21" pos:end="891:35"><name pos:start="891:21" pos:end="891:23">cbp</name> <operator pos:start="891:25" pos:end="891:25">&amp;</operator> <operator pos:start="891:27" pos:end="891:27">(</operator><literal type="number" pos:start="891:28" pos:end="891:28">1</literal><operator pos:start="891:29" pos:end="891:30">&lt;&lt;</operator><name pos:start="891:31" pos:end="891:34">i8x8</name><operator pos:start="891:35" pos:end="891:35">)</operator></expr> )</condition> <block pos:start="891:39" pos:end="919:17">{<block_content pos:start="893:21" pos:end="917:21">

                    <if_stmt pos:start="893:21" pos:end="917:21"><if pos:start="893:21" pos:end="899:21">if<condition pos:start="893:23" pos:end="893:44">( <expr pos:start="893:25" pos:end="893:42"><call pos:start="893:25" pos:end="893:42"><name pos:start="893:25" pos:end="893:33">IS_8x8DCT</name><argument_list pos:start="893:34" pos:end="893:42">(<argument pos:start="893:35" pos:end="893:41"><expr pos:start="893:35" pos:end="893:41"><name pos:start="893:35" pos:end="893:41">mb_type</name></expr></argument>)</argument_list></call></expr> )</condition> <block pos:start="893:46" pos:end="899:21">{<block_content pos:start="895:25" pos:end="897:98">

                        <expr_stmt pos:start="895:25" pos:end="897:98"><expr pos:start="895:25" pos:end="897:97"><call pos:start="895:25" pos:end="897:97"><name pos:start="895:25" pos:end="895:45">decode_cabac_residual</name><argument_list pos:start="895:46" pos:end="897:97">(<argument pos:start="895:47" pos:end="895:47"><expr pos:start="895:47" pos:end="895:47"><name pos:start="895:47" pos:end="895:47">h</name></expr></argument>, <argument pos:start="895:50" pos:end="895:64"><expr pos:start="895:50" pos:end="895:64"><name pos:start="895:50" pos:end="895:54"><name pos:start="895:50" pos:end="895:50">h</name><operator pos:start="895:51" pos:end="895:52">-&gt;</operator><name pos:start="895:53" pos:end="895:54">mb</name></name> <operator pos:start="895:56" pos:end="895:56">+</operator> <literal type="number" pos:start="895:58" pos:end="895:59">64</literal><operator pos:start="895:60" pos:end="895:60">*</operator><name pos:start="895:61" pos:end="895:64">i8x8</name></expr></argument>, <argument pos:start="895:67" pos:end="895:67"><expr pos:start="895:67" pos:end="895:67"><literal type="number" pos:start="895:67" pos:end="895:67">5</literal></expr></argument>, <argument pos:start="895:70" pos:end="895:75"><expr pos:start="895:70" pos:end="895:75"><literal type="number" pos:start="895:70" pos:end="895:70">4</literal><operator pos:start="895:71" pos:end="895:71">*</operator><name pos:start="895:72" pos:end="895:75">i8x8</name></expr></argument>,

                            <argument pos:start="897:29" pos:end="897:35"><expr pos:start="897:29" pos:end="897:35"><name pos:start="897:29" pos:end="897:35">scan8x8</name></expr></argument>, <argument pos:start="897:38" pos:end="897:92"><expr pos:start="897:38" pos:end="897:92"><name pos:start="897:38" pos:end="897:92"><name pos:start="897:38" pos:end="897:38">h</name><operator pos:start="897:39" pos:end="897:40">-&gt;</operator><name pos:start="897:41" pos:end="897:54">dequant8_coeff</name><index pos:start="897:55" pos:end="897:81">[<expr pos:start="897:56" pos:end="897:80"><ternary pos:start="897:56" pos:end="897:80"><condition pos:start="897:56" pos:end="897:76"><expr pos:start="897:56" pos:end="897:74"><call pos:start="897:56" pos:end="897:74"><name pos:start="897:56" pos:end="897:63">IS_INTRA</name><argument_list pos:start="897:64" pos:end="897:74">( <argument pos:start="897:66" pos:end="897:72"><expr pos:start="897:66" pos:end="897:72"><name pos:start="897:66" pos:end="897:72">mb_type</name></expr></argument> )</argument_list></call></expr> ?</condition><then pos:start="897:78" pos:end="897:78"> <expr pos:start="897:78" pos:end="897:78"><literal type="number" pos:start="897:78" pos:end="897:78">0</literal></expr></then><else pos:start="897:79" pos:end="897:80">:<expr pos:start="897:80" pos:end="897:80"><literal type="number" pos:start="897:80" pos:end="897:80">1</literal></expr></else></ternary></expr>]</index><index pos:start="897:82" pos:end="897:92">[<expr pos:start="897:83" pos:end="897:91"><name pos:start="897:83" pos:end="897:91"><name pos:start="897:83" pos:end="897:83">s</name><operator pos:start="897:84" pos:end="897:85">-&gt;</operator><name pos:start="897:86" pos:end="897:91">qscale</name></name></expr>]</index></name></expr></argument>, <argument pos:start="897:95" pos:end="897:96"><expr pos:start="897:95" pos:end="897:96"><literal type="number" pos:start="897:95" pos:end="897:96">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="899:23" pos:end="917:21">else <block pos:start="899:28" pos:end="917:21">{<block_content pos:start="901:25" pos:end="915:25">

                        <expr_stmt pos:start="901:25" pos:end="901:87"><expr pos:start="901:25" pos:end="901:86"><name pos:start="901:25" pos:end="901:28">qmul</name> <operator pos:start="901:30" pos:end="901:30">=</operator> <name pos:start="901:32" pos:end="901:86"><name pos:start="901:32" pos:end="901:32">h</name><operator pos:start="901:33" pos:end="901:34">-&gt;</operator><name pos:start="901:35" pos:end="901:48">dequant4_coeff</name><index pos:start="901:49" pos:end="901:75">[<expr pos:start="901:50" pos:end="901:74"><ternary pos:start="901:50" pos:end="901:74"><condition pos:start="901:50" pos:end="901:70"><expr pos:start="901:50" pos:end="901:68"><call pos:start="901:50" pos:end="901:68"><name pos:start="901:50" pos:end="901:57">IS_INTRA</name><argument_list pos:start="901:58" pos:end="901:68">( <argument pos:start="901:60" pos:end="901:66"><expr pos:start="901:60" pos:end="901:66"><name pos:start="901:60" pos:end="901:66">mb_type</name></expr></argument> )</argument_list></call></expr> ?</condition><then pos:start="901:72" pos:end="901:72"> <expr pos:start="901:72" pos:end="901:72"><literal type="number" pos:start="901:72" pos:end="901:72">0</literal></expr></then><else pos:start="901:73" pos:end="901:74">:<expr pos:start="901:74" pos:end="901:74"><literal type="number" pos:start="901:74" pos:end="901:74">3</literal></expr></else></ternary></expr>]</index><index pos:start="901:76" pos:end="901:86">[<expr pos:start="901:77" pos:end="901:85"><name pos:start="901:77" pos:end="901:85"><name pos:start="901:77" pos:end="901:77">s</name><operator pos:start="901:78" pos:end="901:79">-&gt;</operator><name pos:start="901:80" pos:end="901:85">qscale</name></name></expr>]</index></name></expr>;</expr_stmt>

                        <for pos:start="903:25" pos:end="915:25">for<control pos:start="903:28" pos:end="903:57">( <init pos:start="903:30" pos:end="903:38"><expr pos:start="903:30" pos:end="903:37"><name pos:start="903:30" pos:end="903:33">i4x4</name> <operator pos:start="903:35" pos:end="903:35">=</operator> <literal type="number" pos:start="903:37" pos:end="903:37">0</literal></expr>;</init> <condition pos:start="903:40" pos:end="903:48"><expr pos:start="903:40" pos:end="903:47"><name pos:start="903:40" pos:end="903:43">i4x4</name> <operator pos:start="903:45" pos:end="903:45">&lt;</operator> <literal type="number" pos:start="903:47" pos:end="903:47">4</literal></expr>;</condition> <incr pos:start="903:50" pos:end="903:55"><expr pos:start="903:50" pos:end="903:55"><name pos:start="903:50" pos:end="903:53">i4x4</name><operator pos:start="903:54" pos:end="903:55">++</operator></expr></incr> )</control> <block pos:start="903:59" pos:end="915:25">{<block_content pos:start="905:29" pos:end="911:97">

                            <decl_stmt pos:start="905:29" pos:end="905:60"><decl pos:start="905:29" pos:end="905:59"><type pos:start="905:29" pos:end="905:37"><specifier pos:start="905:29" pos:end="905:33">const</specifier> <name pos:start="905:35" pos:end="905:37">int</name></type> <name pos:start="905:39" pos:end="905:43">index</name> <init pos:start="905:45" pos:end="905:59">= <expr pos:start="905:47" pos:end="905:59"><literal type="number" pos:start="905:47" pos:end="905:47">4</literal><operator pos:start="905:48" pos:end="905:48">*</operator><name pos:start="905:49" pos:end="905:52">i8x8</name> <operator pos:start="905:54" pos:end="905:54">+</operator> <name pos:start="905:56" pos:end="905:59">i4x4</name></expr></init></decl>;</decl_stmt>

                            <comment type="line" pos:start="907:29" pos:end="907:87">//av_log( s-&gt;avctx, AV_LOG_ERROR, "Luma4x4: %d\n", index );</comment>

<comment type="line" pos:start="909:1" pos:end="909:13">//START_TIMER</comment>

                            <expr_stmt pos:start="911:29" pos:end="911:97"><expr pos:start="911:29" pos:end="911:96"><call pos:start="911:29" pos:end="911:96"><name pos:start="911:29" pos:end="911:49">decode_cabac_residual</name><argument_list pos:start="911:50" pos:end="911:96">(<argument pos:start="911:51" pos:end="911:51"><expr pos:start="911:51" pos:end="911:51"><name pos:start="911:51" pos:end="911:51">h</name></expr></argument>, <argument pos:start="911:54" pos:end="911:69"><expr pos:start="911:54" pos:end="911:69"><name pos:start="911:54" pos:end="911:58"><name pos:start="911:54" pos:end="911:54">h</name><operator pos:start="911:55" pos:end="911:56">-&gt;</operator><name pos:start="911:57" pos:end="911:58">mb</name></name> <operator pos:start="911:60" pos:end="911:60">+</operator> <literal type="number" pos:start="911:62" pos:end="911:63">16</literal><operator pos:start="911:64" pos:end="911:64">*</operator><name pos:start="911:65" pos:end="911:69">index</name></expr></argument>, <argument pos:start="911:72" pos:end="911:72"><expr pos:start="911:72" pos:end="911:72"><literal type="number" pos:start="911:72" pos:end="911:72">2</literal></expr></argument>, <argument pos:start="911:75" pos:end="911:79"><expr pos:start="911:75" pos:end="911:79"><name pos:start="911:75" pos:end="911:79">index</name></expr></argument>, <argument pos:start="911:82" pos:end="911:85"><expr pos:start="911:82" pos:end="911:85"><name pos:start="911:82" pos:end="911:85">scan</name></expr></argument>, <argument pos:start="911:88" pos:end="911:91"><expr pos:start="911:88" pos:end="911:91"><name pos:start="911:88" pos:end="911:91">qmul</name></expr></argument>, <argument pos:start="911:94" pos:end="911:95"><expr pos:start="911:94" pos:end="911:95"><literal type="number" pos:start="911:94" pos:end="911:95">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="913:1" pos:end="913:31">//STOP_TIMER("decode_residual")</comment>

                        </block_content>}</block></for>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="919:19" pos:end="925:17">else <block pos:start="919:24" pos:end="925:17">{<block_content pos:start="921:21" pos:end="923:58">

                    <decl_stmt pos:start="921:21" pos:end="921:83"><decl pos:start="921:21" pos:end="921:82"><type pos:start="921:21" pos:end="921:35"><name pos:start="921:21" pos:end="921:27">uint8_t</name> <modifier pos:start="921:29" pos:end="921:29">*</modifier> <specifier pos:start="921:31" pos:end="921:35">const</specifier></type> <name pos:start="921:37" pos:end="921:39">nnz</name><init pos:start="921:40" pos:end="921:82">= <expr pos:start="921:42" pos:end="921:82"><operator pos:start="921:42" pos:end="921:42">&amp;</operator><name pos:start="921:43" pos:end="921:82"><name pos:start="921:43" pos:end="921:43">h</name><operator pos:start="921:44" pos:end="921:45">-&gt;</operator><name pos:start="921:46" pos:end="921:65">non_zero_count_cache</name><index pos:start="921:66" pos:end="921:82">[ <expr pos:start="921:68" pos:end="921:80"><name pos:start="921:68" pos:end="921:80"><name pos:start="921:68" pos:end="921:72">scan8</name><index pos:start="921:73" pos:end="921:80">[<expr pos:start="921:74" pos:end="921:79"><literal type="number" pos:start="921:74" pos:end="921:74">4</literal><operator pos:start="921:75" pos:end="921:75">*</operator><name pos:start="921:76" pos:end="921:79">i8x8</name></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="923:21" pos:end="923:58"><expr pos:start="923:21" pos:end="923:57"><name pos:start="923:21" pos:end="923:26"><name pos:start="923:21" pos:end="923:23">nnz</name><index pos:start="923:24" pos:end="923:26">[<expr pos:start="923:25" pos:end="923:25"><literal type="number" pos:start="923:25" pos:end="923:25">0</literal></expr>]</index></name> <operator pos:start="923:28" pos:end="923:28">=</operator> <name pos:start="923:30" pos:end="923:35"><name pos:start="923:30" pos:end="923:32">nnz</name><index pos:start="923:33" pos:end="923:35">[<expr pos:start="923:34" pos:end="923:34"><literal type="number" pos:start="923:34" pos:end="923:34">1</literal></expr>]</index></name> <operator pos:start="923:37" pos:end="923:37">=</operator> <name pos:start="923:39" pos:end="923:44"><name pos:start="923:39" pos:end="923:41">nnz</name><index pos:start="923:42" pos:end="923:44">[<expr pos:start="923:43" pos:end="923:43"><literal type="number" pos:start="923:43" pos:end="923:43">8</literal></expr>]</index></name> <operator pos:start="923:46" pos:end="923:46">=</operator> <name pos:start="923:48" pos:end="923:53"><name pos:start="923:48" pos:end="923:50">nnz</name><index pos:start="923:51" pos:end="923:53">[<expr pos:start="923:52" pos:end="923:52"><literal type="number" pos:start="923:52" pos:end="923:52">9</literal></expr>]</index></name> <operator pos:start="923:55" pos:end="923:55">=</operator> <literal type="number" pos:start="923:57" pos:end="923:57">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="933:9" pos:end="945:9"><if pos:start="933:9" pos:end="945:9">if<condition pos:start="933:11" pos:end="933:22">( <expr pos:start="933:13" pos:end="933:20"><name pos:start="933:13" pos:end="933:15">cbp</name><operator pos:start="933:16" pos:end="933:16">&amp;</operator><literal type="number" pos:start="933:17" pos:end="933:20">0x30</literal></expr> )</condition><block pos:start="933:23" pos:end="945:9">{<block_content pos:start="935:13" pos:end="943:13">

            <decl_stmt pos:start="935:13" pos:end="935:18"><decl pos:start="935:13" pos:end="935:17"><type pos:start="935:13" pos:end="935:15"><name pos:start="935:13" pos:end="935:15">int</name></type> <name pos:start="935:17" pos:end="935:17">c</name></decl>;</decl_stmt>

            <for pos:start="937:13" pos:end="943:13">for<control pos:start="937:16" pos:end="937:36">( <init pos:start="937:18" pos:end="937:23"><expr pos:start="937:18" pos:end="937:22"><name pos:start="937:18" pos:end="937:18">c</name> <operator pos:start="937:20" pos:end="937:20">=</operator> <literal type="number" pos:start="937:22" pos:end="937:22">0</literal></expr>;</init> <condition pos:start="937:25" pos:end="937:30"><expr pos:start="937:25" pos:end="937:29"><name pos:start="937:25" pos:end="937:25">c</name> <operator pos:start="937:27" pos:end="937:27">&lt;</operator> <literal type="number" pos:start="937:29" pos:end="937:29">2</literal></expr>;</condition> <incr pos:start="937:32" pos:end="937:34"><expr pos:start="937:32" pos:end="937:34"><name pos:start="937:32" pos:end="937:32">c</name><operator pos:start="937:33" pos:end="937:34">++</operator></expr></incr> )</control> <block pos:start="937:38" pos:end="943:13">{<block_content pos:start="941:17" pos:end="941:94">

                <comment type="line" pos:start="939:17" pos:end="939:71">//av_log( s-&gt;avctx, AV_LOG_ERROR, "INTRA C%d-DC\n",c );</comment>

                <expr_stmt pos:start="941:17" pos:end="941:94"><expr pos:start="941:17" pos:end="941:93"><call pos:start="941:17" pos:end="941:93"><name pos:start="941:17" pos:end="941:37">decode_cabac_residual</name><argument_list pos:start="941:38" pos:end="941:93">(<argument pos:start="941:39" pos:end="941:39"><expr pos:start="941:39" pos:end="941:39"><name pos:start="941:39" pos:end="941:39">h</name></expr></argument>, <argument pos:start="941:42" pos:end="941:61"><expr pos:start="941:42" pos:end="941:61"><name pos:start="941:42" pos:end="941:46"><name pos:start="941:42" pos:end="941:42">h</name><operator pos:start="941:43" pos:end="941:44">-&gt;</operator><name pos:start="941:45" pos:end="941:46">mb</name></name> <operator pos:start="941:48" pos:end="941:48">+</operator> <literal type="number" pos:start="941:50" pos:end="941:54">256</literal> <operator pos:start="941:54" pos:end="941:54">+</operator> <literal type="number" pos:start="941:56" pos:end="941:57">16</literal><operator pos:start="941:58" pos:end="941:58">*</operator><literal type="number" pos:start="941:59" pos:end="941:59">4</literal><operator pos:start="941:60" pos:end="941:60">*</operator><name pos:start="941:61" pos:end="941:61">c</name></expr></argument>, <argument pos:start="941:64" pos:end="941:64"><expr pos:start="941:64" pos:end="941:64"><literal type="number" pos:start="941:64" pos:end="941:64">3</literal></expr></argument>, <argument pos:start="941:67" pos:end="941:67"><expr pos:start="941:67" pos:end="941:67"><name pos:start="941:67" pos:end="941:67">c</name></expr></argument>, <argument pos:start="941:70" pos:end="941:83"><expr pos:start="941:70" pos:end="941:83"><name pos:start="941:70" pos:end="941:83">chroma_dc_scan</name></expr></argument>, <argument pos:start="941:86" pos:end="941:89"><expr pos:start="941:86" pos:end="941:89"><name pos:start="941:86" pos:end="941:89">NULL</name></expr></argument>, <argument pos:start="941:92" pos:end="941:92"><expr pos:start="941:92" pos:end="941:92"><literal type="number" pos:start="941:92" pos:end="941:92">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="949:9" pos:end="977:9"><if pos:start="949:9" pos:end="969:9">if<condition pos:start="949:11" pos:end="949:22">( <expr pos:start="949:13" pos:end="949:20"><name pos:start="949:13" pos:end="949:15">cbp</name><operator pos:start="949:16" pos:end="949:16">&amp;</operator><literal type="number" pos:start="949:17" pos:end="949:20">0x20</literal></expr> )</condition> <block pos:start="949:24" pos:end="969:9">{<block_content pos:start="951:13" pos:end="967:13">

            <decl_stmt pos:start="951:13" pos:end="951:21"><decl pos:start="951:13" pos:end="951:17"><type pos:start="951:13" pos:end="951:15"><name pos:start="951:13" pos:end="951:15">int</name></type> <name pos:start="951:17" pos:end="951:17">c</name></decl>, <decl pos:start="951:20" pos:end="951:20"><type ref="prev" pos:start="951:13" pos:end="951:15"/><name pos:start="951:20" pos:end="951:20">i</name></decl>;</decl_stmt>

            <for pos:start="953:13" pos:end="967:13">for<control pos:start="953:16" pos:end="953:36">( <init pos:start="953:18" pos:end="953:23"><expr pos:start="953:18" pos:end="953:22"><name pos:start="953:18" pos:end="953:18">c</name> <operator pos:start="953:20" pos:end="953:20">=</operator> <literal type="number" pos:start="953:22" pos:end="953:22">0</literal></expr>;</init> <condition pos:start="953:25" pos:end="953:30"><expr pos:start="953:25" pos:end="953:29"><name pos:start="953:25" pos:end="953:25">c</name> <operator pos:start="953:27" pos:end="953:27">&lt;</operator> <literal type="number" pos:start="953:29" pos:end="953:29">2</literal></expr>;</condition> <incr pos:start="953:32" pos:end="953:34"><expr pos:start="953:32" pos:end="953:34"><name pos:start="953:32" pos:end="953:32">c</name><operator pos:start="953:33" pos:end="953:34">++</operator></expr></incr> )</control> <block pos:start="953:38" pos:end="967:13">{<block_content pos:start="955:17" pos:end="965:17">

                <expr_stmt pos:start="955:17" pos:end="955:91"><expr pos:start="955:17" pos:end="955:90"><name pos:start="955:17" pos:end="955:20">qmul</name> <operator pos:start="955:22" pos:end="955:22">=</operator> <name pos:start="955:24" pos:end="955:90"><name pos:start="955:24" pos:end="955:24">h</name><operator pos:start="955:25" pos:end="955:26">-&gt;</operator><name pos:start="955:27" pos:end="955:40">dequant4_coeff</name><index pos:start="955:41" pos:end="955:73">[<expr pos:start="955:42" pos:end="955:72"><name pos:start="955:42" pos:end="955:42">c</name><operator pos:start="955:43" pos:end="955:43">+</operator><literal type="number" pos:start="955:44" pos:end="955:45">1</literal><operator pos:start="955:45" pos:end="955:45">+</operator><operator pos:start="955:46" pos:end="955:46">(</operator><ternary pos:start="955:47" pos:end="955:71"><condition pos:start="955:47" pos:end="955:67"><expr pos:start="955:47" pos:end="955:65"><call pos:start="955:47" pos:end="955:65"><name pos:start="955:47" pos:end="955:54">IS_INTRA</name><argument_list pos:start="955:55" pos:end="955:65">( <argument pos:start="955:57" pos:end="955:63"><expr pos:start="955:57" pos:end="955:63"><name pos:start="955:57" pos:end="955:63">mb_type</name></expr></argument> )</argument_list></call></expr> ?</condition><then pos:start="955:69" pos:end="955:69"> <expr pos:start="955:69" pos:end="955:69"><literal type="number" pos:start="955:69" pos:end="955:69">0</literal></expr></then><else pos:start="955:70" pos:end="955:71">:<expr pos:start="955:71" pos:end="955:71"><literal type="number" pos:start="955:71" pos:end="955:71">3</literal></expr></else></ternary><operator pos:start="955:72" pos:end="955:72">)</operator></expr>]</index><index pos:start="955:74" pos:end="955:90">[<expr pos:start="955:75" pos:end="955:89"><name pos:start="955:75" pos:end="955:89"><name pos:start="955:75" pos:end="955:75">h</name><operator pos:start="955:76" pos:end="955:77">-&gt;</operator><name pos:start="955:78" pos:end="955:86">chroma_qp</name><index pos:start="955:87" pos:end="955:89">[<expr pos:start="955:88" pos:end="955:88"><name pos:start="955:88" pos:end="955:88">c</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="957:17" pos:end="965:17">for<control pos:start="957:20" pos:end="957:40">( <init pos:start="957:22" pos:end="957:27"><expr pos:start="957:22" pos:end="957:26"><name pos:start="957:22" pos:end="957:22">i</name> <operator pos:start="957:24" pos:end="957:24">=</operator> <literal type="number" pos:start="957:26" pos:end="957:26">0</literal></expr>;</init> <condition pos:start="957:29" pos:end="957:34"><expr pos:start="957:29" pos:end="957:33"><name pos:start="957:29" pos:end="957:29">i</name> <operator pos:start="957:31" pos:end="957:31">&lt;</operator> <literal type="number" pos:start="957:33" pos:end="957:33">4</literal></expr>;</condition> <incr pos:start="957:36" pos:end="957:38"><expr pos:start="957:36" pos:end="957:38"><name pos:start="957:36" pos:end="957:36">i</name><operator pos:start="957:37" pos:end="957:38">++</operator></expr></incr> )</control> <block pos:start="957:42" pos:end="965:17">{<block_content pos:start="959:21" pos:end="963:93">

                    <decl_stmt pos:start="959:21" pos:end="959:53"><decl pos:start="959:21" pos:end="959:52"><type pos:start="959:21" pos:end="959:29"><specifier pos:start="959:21" pos:end="959:25">const</specifier> <name pos:start="959:27" pos:end="959:29">int</name></type> <name pos:start="959:31" pos:end="959:35">index</name> <init pos:start="959:37" pos:end="959:52">= <expr pos:start="959:39" pos:end="959:52"><literal type="number" pos:start="959:39" pos:end="959:42">16</literal> <operator pos:start="959:42" pos:end="959:42">+</operator> <literal type="number" pos:start="959:44" pos:end="959:44">4</literal> <operator pos:start="959:46" pos:end="959:46">*</operator> <name pos:start="959:48" pos:end="959:48">c</name> <operator pos:start="959:50" pos:end="959:50">+</operator> <name pos:start="959:52" pos:end="959:52">i</name></expr></init></decl>;</decl_stmt>

                    <comment type="line" pos:start="961:21" pos:end="961:90">//av_log( s-&gt;avctx, AV_LOG_ERROR, "INTRA C%d-AC %d\n",c, index - 16 );</comment>

                    <expr_stmt pos:start="963:21" pos:end="963:93"><expr pos:start="963:21" pos:end="963:92"><call pos:start="963:21" pos:end="963:92"><name pos:start="963:21" pos:end="963:41">decode_cabac_residual</name><argument_list pos:start="963:42" pos:end="963:92">(<argument pos:start="963:43" pos:end="963:43"><expr pos:start="963:43" pos:end="963:43"><name pos:start="963:43" pos:end="963:43">h</name></expr></argument>, <argument pos:start="963:46" pos:end="963:61"><expr pos:start="963:46" pos:end="963:61"><name pos:start="963:46" pos:end="963:50"><name pos:start="963:46" pos:end="963:46">h</name><operator pos:start="963:47" pos:end="963:48">-&gt;</operator><name pos:start="963:49" pos:end="963:50">mb</name></name> <operator pos:start="963:52" pos:end="963:52">+</operator> <literal type="number" pos:start="963:54" pos:end="963:55">16</literal><operator pos:start="963:56" pos:end="963:56">*</operator><name pos:start="963:57" pos:end="963:61">index</name></expr></argument>, <argument pos:start="963:64" pos:end="963:64"><expr pos:start="963:64" pos:end="963:64"><literal type="number" pos:start="963:64" pos:end="963:64">4</literal></expr></argument>, <argument pos:start="963:67" pos:end="963:71"><expr pos:start="963:67" pos:end="963:71"><name pos:start="963:67" pos:end="963:71">index</name></expr></argument>, <argument pos:start="963:74" pos:end="963:81"><expr pos:start="963:74" pos:end="963:81"><name pos:start="963:74" pos:end="963:77">scan</name> <operator pos:start="963:79" pos:end="963:79">+</operator> <literal type="number" pos:start="963:81" pos:end="963:81">1</literal></expr></argument>, <argument pos:start="963:84" pos:end="963:87"><expr pos:start="963:84" pos:end="963:87"><name pos:start="963:84" pos:end="963:87">qmul</name></expr></argument>, <argument pos:start="963:90" pos:end="963:91"><expr pos:start="963:90" pos:end="963:91"><literal type="number" pos:start="963:90" pos:end="963:91">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="969:11" pos:end="977:9">else <block pos:start="969:16" pos:end="977:9">{<block_content pos:start="971:13" pos:end="975:96">

            <decl_stmt pos:start="971:13" pos:end="971:61"><decl pos:start="971:13" pos:end="971:60"><type pos:start="971:13" pos:end="971:27"><name pos:start="971:13" pos:end="971:19">uint8_t</name> <modifier pos:start="971:21" pos:end="971:21">*</modifier> <specifier pos:start="971:23" pos:end="971:27">const</specifier></type> <name pos:start="971:29" pos:end="971:31">nnz</name><init pos:start="971:32" pos:end="971:60">= <expr pos:start="971:34" pos:end="971:60"><operator pos:start="971:34" pos:end="971:34">&amp;</operator><name pos:start="971:35" pos:end="971:60"><name pos:start="971:35" pos:end="971:35">h</name><operator pos:start="971:36" pos:end="971:37">-&gt;</operator><name pos:start="971:38" pos:end="971:57">non_zero_count_cache</name><index pos:start="971:58" pos:end="971:60">[<expr pos:start="971:59" pos:end="971:59"><literal type="number" pos:start="971:59" pos:end="971:59">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="973:13" pos:end="975:96"><expr pos:start="973:13" pos:end="975:95"><name pos:start="973:13" pos:end="973:30"><name pos:start="973:13" pos:end="973:15">nnz</name><index pos:start="973:16" pos:end="973:30">[ <expr pos:start="973:18" pos:end="973:28"><name pos:start="973:18" pos:end="973:26"><name pos:start="973:18" pos:end="973:22">scan8</name><index pos:start="973:23" pos:end="973:26">[<expr pos:start="973:24" pos:end="973:25"><literal type="number" pos:start="973:24" pos:end="973:25">16</literal></expr>]</index></name><operator pos:start="973:27" pos:end="973:27">+</operator><literal type="number" pos:start="973:28" pos:end="973:28">0</literal></expr> ]</index></name> <operator pos:start="973:32" pos:end="973:32">=</operator> <name pos:start="973:34" pos:end="973:51"><name pos:start="973:34" pos:end="973:36">nnz</name><index pos:start="973:37" pos:end="973:51">[ <expr pos:start="973:39" pos:end="973:49"><name pos:start="973:39" pos:end="973:47"><name pos:start="973:39" pos:end="973:43">scan8</name><index pos:start="973:44" pos:end="973:47">[<expr pos:start="973:45" pos:end="973:46"><literal type="number" pos:start="973:45" pos:end="973:46">16</literal></expr>]</index></name><operator pos:start="973:48" pos:end="973:48">+</operator><literal type="number" pos:start="973:49" pos:end="973:49">1</literal></expr> ]</index></name> <operator pos:start="973:53" pos:end="973:53">=</operator><name pos:start="973:54" pos:end="973:71"><name pos:start="973:54" pos:end="973:56">nnz</name><index pos:start="973:57" pos:end="973:71">[ <expr pos:start="973:59" pos:end="973:69"><name pos:start="973:59" pos:end="973:67"><name pos:start="973:59" pos:end="973:63">scan8</name><index pos:start="973:64" pos:end="973:67">[<expr pos:start="973:65" pos:end="973:66"><literal type="number" pos:start="973:65" pos:end="973:66">16</literal></expr>]</index></name><operator pos:start="973:68" pos:end="973:68">+</operator><literal type="number" pos:start="973:69" pos:end="973:69">8</literal></expr> ]</index></name> <operator pos:start="973:73" pos:end="973:73">=</operator><name pos:start="973:74" pos:end="973:91"><name pos:start="973:74" pos:end="973:76">nnz</name><index pos:start="973:77" pos:end="973:91">[ <expr pos:start="973:79" pos:end="973:89"><name pos:start="973:79" pos:end="973:87"><name pos:start="973:79" pos:end="973:83">scan8</name><index pos:start="973:84" pos:end="973:87">[<expr pos:start="973:85" pos:end="973:86"><literal type="number" pos:start="973:85" pos:end="973:86">16</literal></expr>]</index></name><operator pos:start="973:88" pos:end="973:88">+</operator><literal type="number" pos:start="973:89" pos:end="973:89">9</literal></expr> ]</index></name> <operator pos:start="973:93" pos:end="973:93">=</operator>

            <name pos:start="975:13" pos:end="975:30"><name pos:start="975:13" pos:end="975:15">nnz</name><index pos:start="975:16" pos:end="975:30">[ <expr pos:start="975:18" pos:end="975:28"><name pos:start="975:18" pos:end="975:26"><name pos:start="975:18" pos:end="975:22">scan8</name><index pos:start="975:23" pos:end="975:26">[<expr pos:start="975:24" pos:end="975:25"><literal type="number" pos:start="975:24" pos:end="975:25">20</literal></expr>]</index></name><operator pos:start="975:27" pos:end="975:27">+</operator><literal type="number" pos:start="975:28" pos:end="975:28">0</literal></expr> ]</index></name> <operator pos:start="975:32" pos:end="975:32">=</operator> <name pos:start="975:34" pos:end="975:51"><name pos:start="975:34" pos:end="975:36">nnz</name><index pos:start="975:37" pos:end="975:51">[ <expr pos:start="975:39" pos:end="975:49"><name pos:start="975:39" pos:end="975:47"><name pos:start="975:39" pos:end="975:43">scan8</name><index pos:start="975:44" pos:end="975:47">[<expr pos:start="975:45" pos:end="975:46"><literal type="number" pos:start="975:45" pos:end="975:46">20</literal></expr>]</index></name><operator pos:start="975:48" pos:end="975:48">+</operator><literal type="number" pos:start="975:49" pos:end="975:49">1</literal></expr> ]</index></name> <operator pos:start="975:53" pos:end="975:53">=</operator><name pos:start="975:54" pos:end="975:71"><name pos:start="975:54" pos:end="975:56">nnz</name><index pos:start="975:57" pos:end="975:71">[ <expr pos:start="975:59" pos:end="975:69"><name pos:start="975:59" pos:end="975:67"><name pos:start="975:59" pos:end="975:63">scan8</name><index pos:start="975:64" pos:end="975:67">[<expr pos:start="975:65" pos:end="975:66"><literal type="number" pos:start="975:65" pos:end="975:66">20</literal></expr>]</index></name><operator pos:start="975:68" pos:end="975:68">+</operator><literal type="number" pos:start="975:69" pos:end="975:69">8</literal></expr> ]</index></name> <operator pos:start="975:73" pos:end="975:73">=</operator><name pos:start="975:74" pos:end="975:91"><name pos:start="975:74" pos:end="975:76">nnz</name><index pos:start="975:77" pos:end="975:91">[ <expr pos:start="975:79" pos:end="975:89"><name pos:start="975:79" pos:end="975:87"><name pos:start="975:79" pos:end="975:83">scan8</name><index pos:start="975:84" pos:end="975:87">[<expr pos:start="975:85" pos:end="975:86"><literal type="number" pos:start="975:85" pos:end="975:86">20</literal></expr>]</index></name><operator pos:start="975:88" pos:end="975:88">+</operator><literal type="number" pos:start="975:89" pos:end="975:89">9</literal></expr> ]</index></name> <operator pos:start="975:93" pos:end="975:93">=</operator> <literal type="number" pos:start="975:95" pos:end="975:95">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="979:7" pos:end="991:5">else <block pos:start="979:12" pos:end="991:5">{<block_content pos:start="981:9" pos:end="989:32">

        <decl_stmt pos:start="981:9" pos:end="981:57"><decl pos:start="981:9" pos:end="981:56"><type pos:start="981:9" pos:end="981:23"><name pos:start="981:9" pos:end="981:15">uint8_t</name> <modifier pos:start="981:17" pos:end="981:17">*</modifier> <specifier pos:start="981:19" pos:end="981:23">const</specifier></type> <name pos:start="981:25" pos:end="981:27">nnz</name><init pos:start="981:28" pos:end="981:56">= <expr pos:start="981:30" pos:end="981:56"><operator pos:start="981:30" pos:end="981:30">&amp;</operator><name pos:start="981:31" pos:end="981:56"><name pos:start="981:31" pos:end="981:31">h</name><operator pos:start="981:32" pos:end="981:33">-&gt;</operator><name pos:start="981:34" pos:end="981:53">non_zero_count_cache</name><index pos:start="981:54" pos:end="981:56">[<expr pos:start="981:55" pos:end="981:55"><literal type="number" pos:start="981:55" pos:end="981:55">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="983:9" pos:end="983:54"><expr pos:start="983:9" pos:end="983:53"><call pos:start="983:9" pos:end="983:53"><name pos:start="983:9" pos:end="983:22">fill_rectangle</name><argument_list pos:start="983:23" pos:end="983:53">(<argument pos:start="983:24" pos:end="983:37"><expr pos:start="983:24" pos:end="983:37"><operator pos:start="983:24" pos:end="983:24">&amp;</operator><name pos:start="983:25" pos:end="983:37"><name pos:start="983:25" pos:end="983:27">nnz</name><index pos:start="983:28" pos:end="983:37">[<expr pos:start="983:29" pos:end="983:36"><name pos:start="983:29" pos:end="983:36"><name pos:start="983:29" pos:end="983:33">scan8</name><index pos:start="983:34" pos:end="983:36">[<expr pos:start="983:35" pos:end="983:35"><literal type="number" pos:start="983:35" pos:end="983:35">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="983:40" pos:end="983:40"><expr pos:start="983:40" pos:end="983:40"><literal type="number" pos:start="983:40" pos:end="983:40">4</literal></expr></argument>, <argument pos:start="983:43" pos:end="983:43"><expr pos:start="983:43" pos:end="983:43"><literal type="number" pos:start="983:43" pos:end="983:43">4</literal></expr></argument>, <argument pos:start="983:46" pos:end="983:46"><expr pos:start="983:46" pos:end="983:46"><literal type="number" pos:start="983:46" pos:end="983:46">8</literal></expr></argument>, <argument pos:start="983:49" pos:end="983:49"><expr pos:start="983:49" pos:end="983:49"><literal type="number" pos:start="983:49" pos:end="983:49">0</literal></expr></argument>, <argument pos:start="983:52" pos:end="983:52"><expr pos:start="983:52" pos:end="983:52"><literal type="number" pos:start="983:52" pos:end="983:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="985:9" pos:end="987:92"><expr pos:start="985:9" pos:end="987:91"><name pos:start="985:9" pos:end="985:26"><name pos:start="985:9" pos:end="985:11">nnz</name><index pos:start="985:12" pos:end="985:26">[ <expr pos:start="985:14" pos:end="985:24"><name pos:start="985:14" pos:end="985:22"><name pos:start="985:14" pos:end="985:18">scan8</name><index pos:start="985:19" pos:end="985:22">[<expr pos:start="985:20" pos:end="985:21"><literal type="number" pos:start="985:20" pos:end="985:21">16</literal></expr>]</index></name><operator pos:start="985:23" pos:end="985:23">+</operator><literal type="number" pos:start="985:24" pos:end="985:24">0</literal></expr> ]</index></name> <operator pos:start="985:28" pos:end="985:28">=</operator> <name pos:start="985:30" pos:end="985:47"><name pos:start="985:30" pos:end="985:32">nnz</name><index pos:start="985:33" pos:end="985:47">[ <expr pos:start="985:35" pos:end="985:45"><name pos:start="985:35" pos:end="985:43"><name pos:start="985:35" pos:end="985:39">scan8</name><index pos:start="985:40" pos:end="985:43">[<expr pos:start="985:41" pos:end="985:42"><literal type="number" pos:start="985:41" pos:end="985:42">16</literal></expr>]</index></name><operator pos:start="985:44" pos:end="985:44">+</operator><literal type="number" pos:start="985:45" pos:end="985:45">1</literal></expr> ]</index></name> <operator pos:start="985:49" pos:end="985:49">=</operator><name pos:start="985:50" pos:end="985:67"><name pos:start="985:50" pos:end="985:52">nnz</name><index pos:start="985:53" pos:end="985:67">[ <expr pos:start="985:55" pos:end="985:65"><name pos:start="985:55" pos:end="985:63"><name pos:start="985:55" pos:end="985:59">scan8</name><index pos:start="985:60" pos:end="985:63">[<expr pos:start="985:61" pos:end="985:62"><literal type="number" pos:start="985:61" pos:end="985:62">16</literal></expr>]</index></name><operator pos:start="985:64" pos:end="985:64">+</operator><literal type="number" pos:start="985:65" pos:end="985:65">8</literal></expr> ]</index></name> <operator pos:start="985:69" pos:end="985:69">=</operator><name pos:start="985:70" pos:end="985:87"><name pos:start="985:70" pos:end="985:72">nnz</name><index pos:start="985:73" pos:end="985:87">[ <expr pos:start="985:75" pos:end="985:85"><name pos:start="985:75" pos:end="985:83"><name pos:start="985:75" pos:end="985:79">scan8</name><index pos:start="985:80" pos:end="985:83">[<expr pos:start="985:81" pos:end="985:82"><literal type="number" pos:start="985:81" pos:end="985:82">16</literal></expr>]</index></name><operator pos:start="985:84" pos:end="985:84">+</operator><literal type="number" pos:start="985:85" pos:end="985:85">9</literal></expr> ]</index></name> <operator pos:start="985:89" pos:end="985:89">=</operator>

        <name pos:start="987:9" pos:end="987:26"><name pos:start="987:9" pos:end="987:11">nnz</name><index pos:start="987:12" pos:end="987:26">[ <expr pos:start="987:14" pos:end="987:24"><name pos:start="987:14" pos:end="987:22"><name pos:start="987:14" pos:end="987:18">scan8</name><index pos:start="987:19" pos:end="987:22">[<expr pos:start="987:20" pos:end="987:21"><literal type="number" pos:start="987:20" pos:end="987:21">20</literal></expr>]</index></name><operator pos:start="987:23" pos:end="987:23">+</operator><literal type="number" pos:start="987:24" pos:end="987:24">0</literal></expr> ]</index></name> <operator pos:start="987:28" pos:end="987:28">=</operator> <name pos:start="987:30" pos:end="987:47"><name pos:start="987:30" pos:end="987:32">nnz</name><index pos:start="987:33" pos:end="987:47">[ <expr pos:start="987:35" pos:end="987:45"><name pos:start="987:35" pos:end="987:43"><name pos:start="987:35" pos:end="987:39">scan8</name><index pos:start="987:40" pos:end="987:43">[<expr pos:start="987:41" pos:end="987:42"><literal type="number" pos:start="987:41" pos:end="987:42">20</literal></expr>]</index></name><operator pos:start="987:44" pos:end="987:44">+</operator><literal type="number" pos:start="987:45" pos:end="987:45">1</literal></expr> ]</index></name> <operator pos:start="987:49" pos:end="987:49">=</operator><name pos:start="987:50" pos:end="987:67"><name pos:start="987:50" pos:end="987:52">nnz</name><index pos:start="987:53" pos:end="987:67">[ <expr pos:start="987:55" pos:end="987:65"><name pos:start="987:55" pos:end="987:63"><name pos:start="987:55" pos:end="987:59">scan8</name><index pos:start="987:60" pos:end="987:63">[<expr pos:start="987:61" pos:end="987:62"><literal type="number" pos:start="987:61" pos:end="987:62">20</literal></expr>]</index></name><operator pos:start="987:64" pos:end="987:64">+</operator><literal type="number" pos:start="987:65" pos:end="987:65">8</literal></expr> ]</index></name> <operator pos:start="987:69" pos:end="987:69">=</operator><name pos:start="987:70" pos:end="987:87"><name pos:start="987:70" pos:end="987:72">nnz</name><index pos:start="987:73" pos:end="987:87">[ <expr pos:start="987:75" pos:end="987:85"><name pos:start="987:75" pos:end="987:83"><name pos:start="987:75" pos:end="987:79">scan8</name><index pos:start="987:80" pos:end="987:83">[<expr pos:start="987:81" pos:end="987:82"><literal type="number" pos:start="987:81" pos:end="987:82">20</literal></expr>]</index></name><operator pos:start="987:84" pos:end="987:84">+</operator><literal type="number" pos:start="987:85" pos:end="987:85">9</literal></expr> ]</index></name> <operator pos:start="987:89" pos:end="987:89">=</operator> <literal type="number" pos:start="987:91" pos:end="987:91">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="989:9" pos:end="989:32"><expr pos:start="989:9" pos:end="989:31"><name pos:start="989:9" pos:end="989:27"><name pos:start="989:9" pos:end="989:9">h</name><operator pos:start="989:10" pos:end="989:11">-&gt;</operator><name pos:start="989:12" pos:end="989:27">last_qscale_diff</name></name> <operator pos:start="989:29" pos:end="989:29">=</operator> <literal type="number" pos:start="989:31" pos:end="989:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="995:5" pos:end="995:54"><expr pos:start="995:5" pos:end="995:53"><name pos:start="995:5" pos:end="995:42"><name pos:start="995:5" pos:end="995:5">s</name><operator pos:start="995:6" pos:end="995:7">-&gt;</operator><name pos:start="995:8" pos:end="995:22">current_picture</name><operator pos:start="995:23" pos:end="995:23">.</operator><name pos:start="995:24" pos:end="995:35">qscale_table</name><index pos:start="995:36" pos:end="995:42">[<expr pos:start="995:37" pos:end="995:41"><name pos:start="995:37" pos:end="995:41">mb_xy</name></expr>]</index></name><operator pos:start="995:43" pos:end="995:43">=</operator> <name pos:start="995:45" pos:end="995:53"><name pos:start="995:45" pos:end="995:45">s</name><operator pos:start="995:46" pos:end="995:47">-&gt;</operator><name pos:start="995:48" pos:end="995:53">qscale</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="997:5" pos:end="997:33"><expr pos:start="997:5" pos:end="997:32"><call pos:start="997:5" pos:end="997:32"><name pos:start="997:5" pos:end="997:29">write_back_non_zero_count</name><argument_list pos:start="997:30" pos:end="997:32">(<argument pos:start="997:31" pos:end="997:31"><expr pos:start="997:31" pos:end="997:31"><name pos:start="997:31" pos:end="997:31">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1001:5" pos:end="1007:5"><if pos:start="1001:5" pos:end="1007:5">if<condition pos:start="1001:7" pos:end="1001:16">(<expr pos:start="1001:8" pos:end="1001:15"><name pos:start="1001:8" pos:end="1001:15">MB_MBAFF</name></expr>)</condition><block pos:start="1001:17" pos:end="1007:5">{<block_content pos:start="1003:9" pos:end="1005:30">

        <expr_stmt pos:start="1003:9" pos:end="1003:30"><expr pos:start="1003:9" pos:end="1003:29"><name pos:start="1003:9" pos:end="1003:23"><name pos:start="1003:9" pos:end="1003:9">h</name><operator pos:start="1003:10" pos:end="1003:11">-&gt;</operator><name pos:start="1003:12" pos:end="1003:20">ref_count</name><index pos:start="1003:21" pos:end="1003:23">[<expr pos:start="1003:22" pos:end="1003:22"><literal type="number" pos:start="1003:22" pos:end="1003:22">0</literal></expr>]</index></name> <operator pos:start="1003:25" pos:end="1003:27">&gt;&gt;=</operator> <literal type="number" pos:start="1003:29" pos:end="1003:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1005:9" pos:end="1005:30"><expr pos:start="1005:9" pos:end="1005:29"><name pos:start="1005:9" pos:end="1005:23"><name pos:start="1005:9" pos:end="1005:9">h</name><operator pos:start="1005:10" pos:end="1005:11">-&gt;</operator><name pos:start="1005:12" pos:end="1005:20">ref_count</name><index pos:start="1005:21" pos:end="1005:23">[<expr pos:start="1005:22" pos:end="1005:22"><literal type="number" pos:start="1005:22" pos:end="1005:22">1</literal></expr>]</index></name> <operator pos:start="1005:25" pos:end="1005:27">&gt;&gt;=</operator> <literal type="number" pos:start="1005:29" pos:end="1005:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="1011:5" pos:end="1011:13">return <expr pos:start="1011:12" pos:end="1011:12"><literal type="number" pos:start="1011:12" pos:end="1011:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
