<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9052.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:42">pc_machine_device_post_plug_cb</name><parameter_list pos:start="1:43" pos:end="3:74">(<parameter pos:start="1:44" pos:end="1:70"><decl pos:start="1:44" pos:end="1:70"><type pos:start="1:44" pos:end="1:70"><name pos:start="1:44" pos:end="1:57">HotplugHandler</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:70">hotplug_dev</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:59"><decl pos:start="3:44" pos:end="3:59"><type pos:start="3:44" pos:end="3:59"><name pos:start="3:44" pos:end="3:54">DeviceState</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:59">dev</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:73"><decl pos:start="3:62" pos:end="3:73"><type pos:start="3:62" pos:end="3:73"><name pos:start="3:62" pos:end="3:66">Error</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier><modifier pos:start="3:69" pos:end="3:69">*</modifier></type><name pos:start="3:70" pos:end="3:73">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="13:1">{<block_content pos:start="7:5" pos:end="11:5">

    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:55">(<expr pos:start="7:9" pos:end="7:54"><call pos:start="7:9" pos:end="7:54"><name pos:start="7:9" pos:end="7:27">object_dynamic_cast</name><argument_list pos:start="7:28" pos:end="7:54">(<argument pos:start="7:29" pos:end="7:39"><expr pos:start="7:29" pos:end="7:39"><call pos:start="7:29" pos:end="7:39"><name pos:start="7:29" pos:end="7:34">OBJECT</name><argument_list pos:start="7:35" pos:end="7:39">(<argument pos:start="7:36" pos:end="7:38"><expr pos:start="7:36" pos:end="7:38"><name pos:start="7:36" pos:end="7:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="7:42" pos:end="7:53"><expr pos:start="7:42" pos:end="7:53"><name pos:start="7:42" pos:end="7:53">TYPE_PC_DIMM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:57" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:50">

        <expr_stmt pos:start="9:9" pos:end="9:50"><expr pos:start="9:9" pos:end="9:49"><call pos:start="9:9" pos:end="9:49"><name pos:start="9:9" pos:end="9:25">pc_dimm_post_plug</name><argument_list pos:start="9:26" pos:end="9:49">(<argument pos:start="9:27" pos:end="9:37"><expr pos:start="9:27" pos:end="9:37"><name pos:start="9:27" pos:end="9:37">hotplug_dev</name></expr></argument>, <argument pos:start="9:40" pos:end="9:42"><expr pos:start="9:40" pos:end="9:42"><name pos:start="9:40" pos:end="9:42">dev</name></expr></argument>, <argument pos:start="9:45" pos:end="9:48"><expr pos:start="9:45" pos:end="9:48"><name pos:start="9:45" pos:end="9:48">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
