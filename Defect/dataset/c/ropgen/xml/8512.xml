<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8512.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">init_blk_migration_it</name><parameter_list pos:start="1:34" pos:end="1:69">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:68"><decl pos:start="1:49" pos:end="1:68"><type pos:start="1:49" pos:end="1:68"><name pos:start="1:49" pos:end="1:64">BlockDriverState</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">BlkMigDevState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">bmds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:19">sectors</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="65:5"><if pos:start="11:5" pos:end="65:5">if <condition pos:start="11:8" pos:end="11:31">(<expr pos:start="11:9" pos:end="11:30"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:30"><name pos:start="11:10" pos:end="11:26">bdrv_is_read_only</name><argument_list pos:start="11:27" pos:end="11:30">(<argument pos:start="11:28" pos:end="11:29"><expr pos:start="11:28" pos:end="11:29"><name pos:start="11:28" pos:end="11:29">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:33" pos:end="65:5">{<block_content pos:start="13:9" pos:end="63:70">

        <expr_stmt pos:start="13:9" pos:end="13:38"><expr pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:15">sectors</name> <operator pos:start="13:17" pos:end="13:17">=</operator> <call pos:start="13:19" pos:end="13:37"><name pos:start="13:19" pos:end="13:33">bdrv_nb_sectors</name><argument_list pos:start="13:34" pos:end="13:37">(<argument pos:start="13:35" pos:end="13:36"><expr pos:start="13:35" pos:end="13:36"><name pos:start="13:35" pos:end="13:36">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:25">(<expr pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:19">sectors</name> <operator pos:start="15:21" pos:end="15:22">&lt;=</operator> <literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>)</condition> <block pos:start="15:27" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:19">

            <return pos:start="17:13" pos:end="17:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:49"><expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:12">bmds</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:48"><name pos:start="23:16" pos:end="23:24">g_malloc0</name><argument_list pos:start="23:25" pos:end="23:48">(<argument pos:start="23:26" pos:end="23:47"><expr pos:start="23:26" pos:end="23:47"><sizeof pos:start="23:26" pos:end="23:47">sizeof<argument_list pos:start="23:32" pos:end="23:47">(<argument pos:start="23:33" pos:end="23:46"><expr pos:start="23:33" pos:end="23:46"><name pos:start="23:33" pos:end="23:46">BlkMigDevState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:12">bmds</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:16">bs</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:21">bs</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:12">bmds</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:28">bulk_completed</name></name> <operator pos:start="27:30" pos:end="27:30">=</operator> <literal type="number" pos:start="27:32" pos:end="27:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:12">bmds</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:27">total_sectors</name></name> <operator pos:start="29:29" pos:end="29:29">=</operator> <name pos:start="29:31" pos:end="29:37">sectors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:36"><expr pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:12">bmds</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:31">completed_sectors</name></name> <operator pos:start="31:33" pos:end="31:33">=</operator> <literal type="number" pos:start="31:35" pos:end="31:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:56"><expr pos:start="33:9" pos:end="33:55"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:12">bmds</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:25">shared_base</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <name pos:start="33:29" pos:end="33:55"><name pos:start="33:29" pos:end="33:43">block_mig_state</name><operator pos:start="33:44" pos:end="33:44">.</operator><name pos:start="33:45" pos:end="33:55">shared_base</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><call pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:24">alloc_aio_bitmap</name><argument_list pos:start="35:25" pos:end="35:30">(<argument pos:start="35:26" pos:end="35:29"><expr pos:start="35:26" pos:end="35:29"><name pos:start="35:26" pos:end="35:29">bmds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:74"><expr pos:start="37:9" pos:end="37:73"><call pos:start="37:9" pos:end="37:73"><name pos:start="37:9" pos:end="37:18">error_setg</name><argument_list pos:start="37:19" pos:end="37:73">(<argument pos:start="37:20" pos:end="37:33"><expr pos:start="37:20" pos:end="37:33"><operator pos:start="37:20" pos:end="37:20">&amp;</operator><name pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:24">bmds</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:33">blocker</name></name></expr></argument>, <argument pos:start="37:36" pos:end="37:72"><expr pos:start="37:36" pos:end="37:72"><literal type="string" pos:start="37:36" pos:end="37:72">"block device is in use by migration"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:45"><expr pos:start="39:9" pos:end="39:44"><call pos:start="39:9" pos:end="39:44"><name pos:start="39:9" pos:end="39:25">bdrv_op_block_all</name><argument_list pos:start="39:26" pos:end="39:44">(<argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><name pos:start="39:27" pos:end="39:28">bs</name></expr></argument>, <argument pos:start="39:31" pos:end="39:43"><expr pos:start="39:31" pos:end="39:43"><name pos:start="39:31" pos:end="39:43"><name pos:start="39:31" pos:end="39:34">bmds</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:43">blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><call pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:16">bdrv_ref</name><argument_list pos:start="41:17" pos:end="41:20">(<argument pos:start="41:18" pos:end="41:19"><expr pos:start="41:18" pos:end="41:19"><name pos:start="41:18" pos:end="41:19">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:52"><expr pos:start="45:9" pos:end="45:51"><name pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:23">block_mig_state</name><operator pos:start="45:24" pos:end="45:24">.</operator><name pos:start="45:25" pos:end="45:40">total_sector_sum</name></name> <operator pos:start="45:42" pos:end="45:43">+=</operator> <name pos:start="45:45" pos:end="45:51">sectors</name></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="59:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:30">(<expr pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:16">bmds</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:29">shared_base</name></name></expr>)</condition> <block pos:start="49:32" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:37">

            <expr_stmt pos:start="51:13" pos:end="53:37"><expr pos:start="51:13" pos:end="53:36"><call pos:start="51:13" pos:end="53:36"><name pos:start="51:13" pos:end="51:19">DPRINTF</name><argument_list pos:start="51:20" pos:end="53:36">(<argument pos:start="51:21" pos:end="51:69"><expr pos:start="51:21" pos:end="51:69"><literal type="string" pos:start="51:21" pos:end="51:69">"Start migration for %s with shared base image\n"</literal></expr></argument>,

                    <argument pos:start="53:21" pos:end="53:35"><expr pos:start="53:21" pos:end="53:35"><name pos:start="53:21" pos:end="53:35"><name pos:start="53:21" pos:end="53:22">bs</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:35">device_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="59:9">else <block pos:start="55:16" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:70">

            <expr_stmt pos:start="57:13" pos:end="57:70"><expr pos:start="57:13" pos:end="57:69"><call pos:start="57:13" pos:end="57:69"><name pos:start="57:13" pos:end="57:19">DPRINTF</name><argument_list pos:start="57:20" pos:end="57:69">(<argument pos:start="57:21" pos:end="57:51"><expr pos:start="57:21" pos:end="57:51"><literal type="string" pos:start="57:21" pos:end="57:51">"Start full migration for %s\n"</literal></expr></argument>, <argument pos:start="57:54" pos:end="57:68"><expr pos:start="57:54" pos:end="57:68"><name pos:start="57:54" pos:end="57:68"><name pos:start="57:54" pos:end="57:55">bs</name><operator pos:start="57:56" pos:end="57:57">-&gt;</operator><name pos:start="57:58" pos:end="57:68">device_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:70"><expr pos:start="63:9" pos:end="63:69"><call pos:start="63:9" pos:end="63:69"><name pos:start="63:9" pos:end="63:28">QSIMPLEQ_INSERT_TAIL</name><argument_list pos:start="63:29" pos:end="63:69">(<argument pos:start="63:30" pos:end="63:55"><expr pos:start="63:30" pos:end="63:55"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:55"><name pos:start="63:31" pos:end="63:45">block_mig_state</name><operator pos:start="63:46" pos:end="63:46">.</operator><name pos:start="63:47" pos:end="63:55">bmds_list</name></name></expr></argument>, <argument pos:start="63:58" pos:end="63:61"><expr pos:start="63:58" pos:end="63:61"><name pos:start="63:58" pos:end="63:61">bmds</name></expr></argument>, <argument pos:start="63:64" pos:end="63:68"><expr pos:start="63:64" pos:end="63:68"><name pos:start="63:64" pos:end="63:68">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
