<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4186.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">htab_save_iterate</name><parameter_list pos:start="1:29" pos:end="1:55">(<parameter pos:start="1:30" pos:end="1:40"><decl pos:start="1:30" pos:end="1:40"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:37">QEMUFile</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">f</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:46">void</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:54">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:14">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">sPAPRMachineState</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:28">spapr</name> <init pos:start="5:30" pos:end="5:37">= <expr pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:37">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rc</name> <init pos:start="9:12" pos:end="9:14">= <expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:26">/* Iteration header */</comment>

    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:27">(<expr pos:start="15:9" pos:end="15:26"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:26"><name pos:start="15:10" pos:end="15:14">spapr</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:26">htab_shift</name></name></expr>)</condition> <block pos:start="15:29" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:17">

        <expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><call pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:21">qemu_put_be32</name><argument_list pos:start="17:22" pos:end="17:28">(<argument pos:start="17:23" pos:end="17:23"><expr pos:start="17:23" pos:end="17:23"><name pos:start="17:23" pos:end="17:23">f</name></expr></argument>, <argument pos:start="17:26" pos:end="17:27"><expr pos:start="17:26" pos:end="17:27"><operator pos:start="17:26" pos:end="17:26">-</operator><literal type="number" pos:start="17:27" pos:end="17:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="25:5">else <block pos:start="21:12" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:28">

        <expr_stmt pos:start="23:9" pos:end="23:28"><expr pos:start="23:9" pos:end="23:27"><call pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:21">qemu_put_be32</name><argument_list pos:start="23:22" pos:end="23:27">(<argument pos:start="23:23" pos:end="23:23"><expr pos:start="23:23" pos:end="23:23"><name pos:start="23:23" pos:end="23:23">f</name></expr></argument>, <argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><literal type="number" pos:start="23:26" pos:end="23:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="29:5" pos:end="61:5"><if pos:start="29:5" pos:end="53:5">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:20"><name pos:start="29:10" pos:end="29:14">spapr</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:20">htab</name></name></expr>)</condition> <block pos:start="29:23" pos:end="53:5">{<block_content pos:start="31:9" pos:end="51:9">

        <expr_stmt pos:start="31:9" pos:end="31:30"><expr pos:start="31:9" pos:end="31:29"><call pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:14">assert</name><argument_list pos:start="31:15" pos:end="31:29">(<argument pos:start="31:16" pos:end="31:28"><expr pos:start="31:16" pos:end="31:28"><call pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:26">kvm_enabled</name><argument_list pos:start="31:27" pos:end="31:28">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:32"><expr pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:10">fd</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <call pos:start="35:14" pos:end="35:31"><name pos:start="35:14" pos:end="35:24">get_htab_fd</name><argument_list pos:start="35:25" pos:end="35:31">(<argument pos:start="35:26" pos:end="35:30"><expr pos:start="35:26" pos:end="35:30"><name pos:start="35:26" pos:end="35:30">spapr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:19">(<expr pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:14">fd</name> <operator pos:start="37:16" pos:end="37:16">&lt;</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>)</condition> <block pos:start="37:21" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:22">

            <return pos:start="39:13" pos:end="39:22">return <expr pos:start="39:20" pos:end="39:21"><name pos:start="39:20" pos:end="39:21">fd</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:73"><expr pos:start="45:9" pos:end="45:72"><name pos:start="45:9" pos:end="45:10">rc</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:72"><name pos:start="45:14" pos:end="45:29">kvmppc_save_htab</name><argument_list pos:start="45:30" pos:end="45:72">(<argument pos:start="45:31" pos:end="45:31"><expr pos:start="45:31" pos:end="45:31"><name pos:start="45:31" pos:end="45:31">f</name></expr></argument>, <argument pos:start="45:34" pos:end="45:35"><expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">fd</name></expr></argument>, <argument pos:start="45:38" pos:end="45:53"><expr pos:start="45:38" pos:end="45:53"><name pos:start="45:38" pos:end="45:53">MAX_KVM_BUF_SIZE</name></expr></argument>, <argument pos:start="45:56" pos:end="45:71"><expr pos:start="45:56" pos:end="45:71"><name pos:start="45:56" pos:end="45:71">MAX_ITERATION_NS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:19">(<expr pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:14">rc</name> <operator pos:start="47:16" pos:end="47:16">&lt;</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>)</condition> <block pos:start="47:21" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:22">

            <return pos:start="49:13" pos:end="49:22">return <expr pos:start="49:20" pos:end="49:21"><name pos:start="49:20" pos:end="49:21">rc</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="57:5">else  if <condition pos:start="53:16" pos:end="53:39">(<expr pos:start="53:17" pos:end="53:38"><name pos:start="53:17" pos:end="53:38"><name pos:start="53:17" pos:end="53:21">spapr</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:38">htab_first_pass</name></name></expr>)</condition> <block pos:start="53:41" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:57">

        <expr_stmt pos:start="55:9" pos:end="55:57"><expr pos:start="55:9" pos:end="55:56"><call pos:start="55:9" pos:end="55:56"><name pos:start="55:9" pos:end="55:28">htab_save_first_pass</name><argument_list pos:start="55:29" pos:end="55:56">(<argument pos:start="55:30" pos:end="55:30"><expr pos:start="55:30" pos:end="55:30"><name pos:start="55:30" pos:end="55:30">f</name></expr></argument>, <argument pos:start="55:33" pos:end="55:37"><expr pos:start="55:33" pos:end="55:37"><name pos:start="55:33" pos:end="55:37">spapr</name></expr></argument>, <argument pos:start="55:40" pos:end="55:55"><expr pos:start="55:40" pos:end="55:55"><name pos:start="55:40" pos:end="55:55">MAX_ITERATION_NS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="61:5">else <block pos:start="57:12" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:62">

        <expr_stmt pos:start="59:9" pos:end="59:62"><expr pos:start="59:9" pos:end="59:61"><name pos:start="59:9" pos:end="59:10">rc</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <call pos:start="59:14" pos:end="59:61"><name pos:start="59:14" pos:end="59:33">htab_save_later_pass</name><argument_list pos:start="59:34" pos:end="59:61">(<argument pos:start="59:35" pos:end="59:35"><expr pos:start="59:35" pos:end="59:35"><name pos:start="59:35" pos:end="59:35">f</name></expr></argument>, <argument pos:start="59:38" pos:end="59:42"><expr pos:start="59:38" pos:end="59:42"><name pos:start="59:38" pos:end="59:42">spapr</name></expr></argument>, <argument pos:start="59:45" pos:end="59:60"><expr pos:start="59:45" pos:end="59:60"><name pos:start="59:45" pos:end="59:60">MAX_ITERATION_NS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:20">/* End marker */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:24"><expr pos:start="67:5" pos:end="67:23"><call pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:17">qemu_put_be32</name><argument_list pos:start="67:18" pos:end="67:23">(<argument pos:start="67:19" pos:end="67:19"><expr pos:start="67:19" pos:end="67:19"><name pos:start="67:19" pos:end="67:19">f</name></expr></argument>, <argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:24"><expr pos:start="69:5" pos:end="69:23"><call pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:17">qemu_put_be16</name><argument_list pos:start="69:18" pos:end="69:23">(<argument pos:start="69:19" pos:end="69:19"><expr pos:start="69:19" pos:end="69:19"><name pos:start="69:19" pos:end="69:19">f</name></expr></argument>, <argument pos:start="69:22" pos:end="69:22"><expr pos:start="69:22" pos:end="69:22"><literal type="number" pos:start="69:22" pos:end="69:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:24"><expr pos:start="71:5" pos:end="71:23"><call pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:17">qemu_put_be16</name><argument_list pos:start="71:18" pos:end="71:23">(<argument pos:start="71:19" pos:end="71:19"><expr pos:start="71:19" pos:end="71:19"><name pos:start="71:19" pos:end="71:19">f</name></expr></argument>, <argument pos:start="71:22" pos:end="71:22"><expr pos:start="71:22" pos:end="71:22"><literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="75:5" pos:end="75:14">return <expr pos:start="75:12" pos:end="75:13"><name pos:start="75:12" pos:end="75:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
