<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6257.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">omap_sti_fifo_write</name><parameter_list pos:start="1:32" pos:end="3:62">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:69"><decl pos:start="1:47" pos:end="1:69"><type pos:start="1:47" pos:end="1:69"><name pos:start="1:47" pos:end="1:64">target_phys_addr_t</name></type> <name pos:start="1:66" pos:end="1:69">addr</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:46"><decl pos:start="3:33" pos:end="3:46"><type pos:start="3:33" pos:end="3:46"><name pos:start="3:33" pos:end="3:40">uint64_t</name></type> <name pos:start="3:42" pos:end="3:46">value</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:61"><decl pos:start="3:49" pos:end="3:61"><type pos:start="3:49" pos:end="3:61"><name pos:start="3:49" pos:end="3:56">unsigned</name></type> <name pos:start="3:58" pos:end="3:61">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:5">

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">omap_sti_s</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:55">= <expr pos:start="7:28" pos:end="7:55"><operator pos:start="7:28" pos:end="7:28">(</operator>struct <name pos:start="7:36" pos:end="7:45">omap_sti_s</name> <operator pos:start="7:47" pos:end="7:47">*</operator><operator pos:start="7:48" pos:end="7:48">)</operator> <name pos:start="7:50" pos:end="7:55">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">ch</name> <init pos:start="9:12" pos:end="9:22">= <expr pos:start="9:14" pos:end="9:22"><name pos:start="9:14" pos:end="9:17">addr</name> <operator pos:start="9:19" pos:end="9:20">&gt;&gt;</operator> <literal type="number" pos:start="9:22" pos:end="9:22">6</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:16">byte</name> <init pos:start="11:18" pos:end="11:24">= <expr pos:start="11:20" pos:end="11:24"><name pos:start="11:20" pos:end="11:24">value</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:12">size</name> <operator pos:start="15:14" pos:end="15:15">!=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>)</condition> <block pos:start="15:20" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:56">

        <return pos:start="17:9" pos:end="17:56">return <expr pos:start="17:16" pos:end="17:55"><call pos:start="17:16" pos:end="17:55"><name pos:start="17:16" pos:end="17:35">omap_badwidth_write8</name><argument_list pos:start="17:36" pos:end="17:55">(<argument pos:start="17:37" pos:end="17:42"><expr pos:start="17:37" pos:end="17:42"><name pos:start="17:37" pos:end="17:42">opaque</name></expr></argument>, <argument pos:start="17:45" pos:end="17:48"><expr pos:start="17:45" pos:end="17:48"><name pos:start="17:45" pos:end="17:48">addr</name></expr></argument>, <argument pos:start="17:51" pos:end="17:54"><expr pos:start="17:51" pos:end="17:54"><name pos:start="17:51" pos:end="17:54">size</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="43:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:40">(<expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:10">ch</name> <operator pos:start="23:12" pos:end="23:13">==</operator> <name pos:start="23:15" pos:end="23:39">STI_TRACE_CONTROL_CHANNEL</name></expr>)</condition> <block pos:start="23:42" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:61">

        <comment type="block" pos:start="25:9" pos:end="25:42">/* Flush channel &lt;i&gt;value&lt;/i&gt;.  */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:61"><expr pos:start="27:9" pos:end="27:60"><call pos:start="27:9" pos:end="27:60"><name pos:start="27:9" pos:end="27:25">qemu_chr_fe_write</name><argument_list pos:start="27:26" pos:end="27:60">(<argument pos:start="27:27" pos:end="27:32"><expr pos:start="27:27" pos:end="27:32"><name pos:start="27:27" pos:end="27:32"><name pos:start="27:27" pos:end="27:27">s</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:32">chr</name></name></expr></argument>, <argument pos:start="27:35" pos:end="27:56"><expr pos:start="27:35" pos:end="27:56"><operator pos:start="27:35" pos:end="27:35">(</operator><specifier pos:start="27:36" pos:end="27:40">const</specifier> <name pos:start="27:42" pos:end="27:48">uint8_t</name> <operator pos:start="27:50" pos:end="27:50">*</operator><operator pos:start="27:51" pos:end="27:51">)</operator> <literal type="string" pos:start="27:53" pos:end="27:56">"\r"</literal></expr></argument>, <argument pos:start="27:59" pos:end="27:59"><expr pos:start="27:59" pos:end="27:59"><literal type="number" pos:start="27:59" pos:end="27:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="43:5">else if <condition pos:start="29:15" pos:end="29:52">(<expr pos:start="29:16" pos:end="29:51"><name pos:start="29:16" pos:end="29:17">ch</name> <operator pos:start="29:19" pos:end="29:20">==</operator> <name pos:start="29:22" pos:end="29:46">STI_TRACE_CONSOLE_CHANNEL</name> <operator pos:start="29:48" pos:end="29:49">||</operator> <literal type="number" pos:start="29:51" pos:end="29:51">1</literal></expr>)</condition> <block pos:start="29:54" pos:end="43:5">{<block_content pos:start="31:9" pos:end="41:48">

        <if_stmt pos:start="31:9" pos:end="41:48"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:43">(<expr pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:17">value</name> <operator pos:start="31:19" pos:end="31:20">==</operator> <literal type="number" pos:start="31:22" pos:end="31:25">0xc0</literal> <operator pos:start="31:27" pos:end="31:28">||</operator> <name pos:start="31:30" pos:end="31:34">value</name> <operator pos:start="31:36" pos:end="31:37">==</operator> <literal type="number" pos:start="31:39" pos:end="31:42">0xc3</literal></expr>)</condition> <block pos:start="31:45" pos:end="35:9">{<block_content>

            <comment type="block" pos:start="33:13" pos:end="33:42">/* Open channel &lt;i&gt;ch&lt;/i&gt;.  */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="37:65">else if <condition pos:start="35:19" pos:end="35:33">(<expr pos:start="35:20" pos:end="35:32"><name pos:start="35:20" pos:end="35:24">value</name> <operator pos:start="35:26" pos:end="35:27">==</operator> <literal type="number" pos:start="35:29" pos:end="35:32">0x00</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:65"><block_content pos:start="37:13" pos:end="37:65">

            <expr_stmt pos:start="37:13" pos:end="37:65"><expr pos:start="37:13" pos:end="37:64"><call pos:start="37:13" pos:end="37:64"><name pos:start="37:13" pos:end="37:29">qemu_chr_fe_write</name><argument_list pos:start="37:30" pos:end="37:64">(<argument pos:start="37:31" pos:end="37:36"><expr pos:start="37:31" pos:end="37:36"><name pos:start="37:31" pos:end="37:36"><name pos:start="37:31" pos:end="37:31">s</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:36">chr</name></name></expr></argument>, <argument pos:start="37:39" pos:end="37:60"><expr pos:start="37:39" pos:end="37:60"><operator pos:start="37:39" pos:end="37:39">(</operator><specifier pos:start="37:40" pos:end="37:44">const</specifier> <name pos:start="37:46" pos:end="37:52">uint8_t</name> <operator pos:start="37:54" pos:end="37:54">*</operator><operator pos:start="37:55" pos:end="37:55">)</operator> <literal type="string" pos:start="37:57" pos:end="37:60">"\n"</literal></expr></argument>, <argument pos:start="37:63" pos:end="37:63"><expr pos:start="37:63" pos:end="37:63"><literal type="number" pos:start="37:63" pos:end="37:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="39:9" pos:end="41:48">else<block type="pseudo" pos:start="41:13" pos:end="41:48"><block_content pos:start="41:13" pos:end="41:48">

            <expr_stmt pos:start="41:13" pos:end="41:48"><expr pos:start="41:13" pos:end="41:47"><call pos:start="41:13" pos:end="41:47"><name pos:start="41:13" pos:end="41:29">qemu_chr_fe_write</name><argument_list pos:start="41:30" pos:end="41:47">(<argument pos:start="41:31" pos:end="41:36"><expr pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:36">chr</name></name></expr></argument>, <argument pos:start="41:39" pos:end="41:43"><expr pos:start="41:39" pos:end="41:43"><operator pos:start="41:39" pos:end="41:39">&amp;</operator><name pos:start="41:40" pos:end="41:43">byte</name></expr></argument>, <argument pos:start="41:46" pos:end="41:46"><expr pos:start="41:46" pos:end="41:46"><literal type="number" pos:start="41:46" pos:end="41:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
