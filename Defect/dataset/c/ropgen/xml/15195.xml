<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15195.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">xen_exit_notifier</name><parameter_list pos:start="1:30" pos:end="1:54">(<parameter pos:start="1:31" pos:end="1:41"><decl pos:start="1:31" pos:end="1:41"><type pos:start="1:31" pos:end="1:41"><name pos:start="1:31" pos:end="1:38">Notifier</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">n</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:53"><decl pos:start="1:44" pos:end="1:53"><type pos:start="1:44" pos:end="1:53"><name pos:start="1:44" pos:end="1:47">void</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:37">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">XenIOState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:21">state</name> <init pos:start="5:23" pos:end="5:57">= <expr pos:start="5:25" pos:end="5:57"><call pos:start="5:25" pos:end="5:57"><name pos:start="5:25" pos:end="5:36">container_of</name><argument_list pos:start="5:37" pos:end="5:57">(<argument pos:start="5:38" pos:end="5:38"><expr pos:start="5:38" pos:end="5:38"><name pos:start="5:38" pos:end="5:38">n</name></expr></argument>, <argument pos:start="5:41" pos:end="5:50"><expr pos:start="5:41" pos:end="5:50"><name pos:start="5:41" pos:end="5:50">XenIOState</name></expr></argument>, <argument pos:start="5:53" pos:end="5:56"><expr pos:start="5:53" pos:end="5:56"><name pos:start="5:53" pos:end="5:56">exit</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:39"><expr pos:start="9:5" pos:end="9:38"><call pos:start="9:5" pos:end="9:38"><name pos:start="9:5" pos:end="9:19">xc_evtchn_close</name><argument_list pos:start="9:20" pos:end="9:38">(<argument pos:start="9:21" pos:end="9:37"><expr pos:start="9:21" pos:end="9:37"><name pos:start="9:21" pos:end="9:37"><name pos:start="9:21" pos:end="9:25">state</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:37">xce_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><call pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:19">xs_daemon_close</name><argument_list pos:start="11:20" pos:end="11:36">(<argument pos:start="11:21" pos:end="11:35"><expr pos:start="11:21" pos:end="11:35"><name pos:start="11:21" pos:end="11:35"><name pos:start="11:21" pos:end="11:25">state</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:35">xenstore</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
