<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/148.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:32">m5206_mbar_readb</name><parameter_list pos:start="1:33" pos:end="1:73">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:72"><decl pos:start="1:48" pos:end="1:72"><type pos:start="1:48" pos:end="1:72"><name pos:start="1:48" pos:end="1:65">target_phys_addr_t</name></type> <name pos:start="1:67" pos:end="1:72">offset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:41">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">m5206_mbar_state</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name> <init pos:start="5:25" pos:end="5:52">= <expr pos:start="5:27" pos:end="5:52"><operator pos:start="5:27" pos:end="5:27">(</operator><name pos:start="5:28" pos:end="5:43">m5206_mbar_state</name> <operator pos:start="5:45" pos:end="5:45">*</operator><operator pos:start="5:46" pos:end="5:46">)</operator><name pos:start="5:47" pos:end="5:52">opaque</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:10">offset</name> <operator pos:start="7:12" pos:end="7:13">&amp;=</operator> <literal type="number" pos:start="7:15" pos:end="7:19">0x3ff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:23">(<expr pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:14">offset</name> <operator pos:start="9:16" pos:end="9:16">&gt;</operator> <literal type="number" pos:start="9:18" pos:end="9:22">0x200</literal></expr>)</condition> <block pos:start="9:25" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:59">

        <expr_stmt pos:start="11:9" pos:end="11:59"><expr pos:start="11:9" pos:end="11:58"><call pos:start="11:9" pos:end="11:58"><name pos:start="11:9" pos:end="11:16">hw_error</name><argument_list pos:start="11:17" pos:end="11:58">(<argument pos:start="11:18" pos:end="11:44"><expr pos:start="11:18" pos:end="11:44"><literal type="string" pos:start="11:18" pos:end="11:44">"Bad MBAR read offset 0x%x"</literal></expr></argument>, <argument pos:start="11:47" pos:end="11:57"><expr pos:start="11:47" pos:end="11:57"><operator pos:start="11:47" pos:end="11:47">(</operator><name pos:start="11:48" pos:end="11:50">int</name><operator pos:start="11:51" pos:end="11:51">)</operator><name pos:start="11:52" pos:end="11:57">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="29:5"><if pos:start="15:5" pos:end="29:5">if <condition pos:start="15:8" pos:end="15:42">(<expr pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:24">m5206_mbar_width</name><index pos:start="15:25" pos:end="15:37">[<expr pos:start="15:26" pos:end="15:36"><name pos:start="15:26" pos:end="15:31">offset</name> <operator pos:start="15:33" pos:end="15:34">&gt;&gt;</operator> <literal type="number" pos:start="15:36" pos:end="15:36">2</literal></expr>]</index></name> <operator pos:start="15:39" pos:end="15:39">&gt;</operator> <literal type="number" pos:start="15:41" pos:end="15:41">1</literal></expr>)</condition> <block pos:start="15:44" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:26">

        <decl_stmt pos:start="17:9" pos:end="17:21"><decl pos:start="17:9" pos:end="17:20"><type pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16">uint16_t</name></type> <name pos:start="17:18" pos:end="17:20">val</name></decl>;</decl_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:52"><expr pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:11">val</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:51"><name pos:start="19:15" pos:end="19:30">m5206_mbar_readw</name><argument_list pos:start="19:31" pos:end="19:51">(<argument pos:start="19:32" pos:end="19:37"><expr pos:start="19:32" pos:end="19:37"><name pos:start="19:32" pos:end="19:37">opaque</name></expr></argument>, <argument pos:start="19:40" pos:end="19:50"><expr pos:start="19:40" pos:end="19:50"><name pos:start="19:40" pos:end="19:45">offset</name> <operator pos:start="19:47" pos:end="19:47">&amp;</operator> <operator pos:start="19:49" pos:end="19:49">~</operator><literal type="number" pos:start="19:50" pos:end="19:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:30">(<expr pos:start="21:13" pos:end="21:29"><operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:19">offset</name> <operator pos:start="21:21" pos:end="21:21">&amp;</operator> <literal type="number" pos:start="21:23" pos:end="21:23">1</literal><operator pos:start="21:24" pos:end="21:24">)</operator> <operator pos:start="21:26" pos:end="21:27">==</operator> <literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>)</condition> <block pos:start="21:32" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:22">

            <expr_stmt pos:start="23:13" pos:end="23:22"><expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:15">val</name> <operator pos:start="23:17" pos:end="23:19">&gt;&gt;=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="27:9" pos:end="27:26">return <expr pos:start="27:16" pos:end="27:25"><name pos:start="27:16" pos:end="27:18">val</name> <operator pos:start="27:20" pos:end="27:20">&amp;</operator> <literal type="number" pos:start="27:22" pos:end="27:25">0xff</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="31:5" pos:end="31:41">return <expr pos:start="31:12" pos:end="31:40"><call pos:start="31:12" pos:end="31:40"><name pos:start="31:12" pos:end="31:26">m5206_mbar_read</name><argument_list pos:start="31:27" pos:end="31:40">(<argument pos:start="31:28" pos:end="31:28"><expr pos:start="31:28" pos:end="31:28"><name pos:start="31:28" pos:end="31:28">s</name></expr></argument>, <argument pos:start="31:31" pos:end="31:36"><expr pos:start="31:31" pos:end="31:36"><name pos:start="31:31" pos:end="31:36">offset</name></expr></argument>, <argument pos:start="31:39" pos:end="31:39"><expr pos:start="31:39" pos:end="31:39"><literal type="number" pos:start="31:39" pos:end="31:39">1</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
