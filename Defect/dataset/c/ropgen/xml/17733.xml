<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17733.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:27">h_enter</name><parameter_list pos:start="1:28" pos:end="3:68">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:38">PowerPCCPU</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">cpu</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:68"><decl pos:start="1:46" pos:end="1:68"><type pos:start="1:46" pos:end="1:68"><name pos:start="1:46" pos:end="1:61">sPAPREnvironment</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:68">spapr</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:47"><decl pos:start="3:29" pos:end="3:47"><type pos:start="3:29" pos:end="3:47"><name pos:start="3:29" pos:end="3:40">target_ulong</name></type> <name pos:start="3:42" pos:end="3:47">opcode</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:67"><decl pos:start="3:50" pos:end="3:67"><type pos:start="3:50" pos:end="3:67"><name pos:start="3:50" pos:end="3:61">target_ulong</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:67">args</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="159:1">{<block_content pos:start="7:5" pos:end="157:21">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUPPCState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:22">flags</name> <init pos:start="9:24" pos:end="9:32">= <expr pos:start="9:26" pos:end="9:32"><name pos:start="9:26" pos:end="9:32"><name pos:start="9:26" pos:end="9:29">args</name><index pos:start="9:30" pos:end="9:32">[<expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:26">pte_index</name> <init pos:start="11:28" pos:end="11:36">= <expr pos:start="11:30" pos:end="11:36"><name pos:start="11:30" pos:end="11:36"><name pos:start="11:30" pos:end="11:33">args</name><index pos:start="11:34" pos:end="11:36">[<expr pos:start="11:35" pos:end="11:35"><literal type="number" pos:start="11:35" pos:end="11:35">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:21">pteh</name> <init pos:start="13:23" pos:end="13:31">= <expr pos:start="13:25" pos:end="13:31"><name pos:start="13:25" pos:end="13:31"><name pos:start="13:25" pos:end="13:28">args</name><index pos:start="13:29" pos:end="13:31">[<expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:21">ptel</name> <init pos:start="15:23" pos:end="15:31">= <expr pos:start="15:25" pos:end="15:31"><name pos:start="15:25" pos:end="15:31"><name pos:start="15:25" pos:end="15:28">args</name><index pos:start="15:29" pos:end="15:31">[<expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">target_ulong</name></type> <name pos:start="17:18" pos:end="17:27">page_shift</name> <init pos:start="17:29" pos:end="17:32">= <expr pos:start="17:31" pos:end="17:32"><literal type="number" pos:start="17:31" pos:end="17:32">12</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">target_ulong</name></type> <name pos:start="19:18" pos:end="19:22">raddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:16">target_ulong</name></type> <name pos:start="21:18" pos:end="21:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:10">hwaddr</name></type> <name pos:start="23:12" pos:end="23:15">hpte</name></decl>;</decl_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:46">/* only handle 4k and 16M pages for now */</comment>

    <if_stmt pos:start="29:5" pos:end="61:5"><if pos:start="29:5" pos:end="61:5">if <condition pos:start="29:8" pos:end="29:30">(<expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:12">pteh</name> <operator pos:start="29:14" pos:end="29:14">&amp;</operator> <name pos:start="29:16" pos:end="29:29">HPTE64_V_LARGE</name></expr>)</condition> <block pos:start="29:32" pos:end="61:5">{<block_content pos:start="41:9" pos:end="59:9">

<cpp:if pos:start="31:1" pos:end="31:5">#<cpp:directive pos:start="31:2" pos:end="31:3">if</cpp:directive> <expr pos:start="31:5" pos:end="31:5"><literal type="number" pos:start="31:5" pos:end="31:5">0</literal></expr></cpp:if> <comment type="block" pos:start="31:7" pos:end="31:42">/* We don't support 64k pages yet */</comment>

        if ((ptel &amp; 0xf000) == 0x1000) {

            <comment type="block" pos:start="35:13" pos:end="35:26">/* 64k page */</comment>

        } else

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="41:9" pos:end="59:9"><if pos:start="41:9" pos:end="55:9">if <condition pos:start="41:12" pos:end="41:34">(<expr pos:start="41:13" pos:end="41:33"><operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:17">ptel</name> <operator pos:start="41:19" pos:end="41:19">&amp;</operator> <literal type="number" pos:start="41:21" pos:end="41:27">0xff000</literal><operator pos:start="41:28" pos:end="41:28">)</operator> <operator pos:start="41:30" pos:end="41:31">==</operator> <literal type="number" pos:start="41:33" pos:end="41:33">0</literal></expr>)</condition> <block pos:start="41:36" pos:end="55:9">{<block_content pos:start="45:13" pos:end="53:13">

            <comment type="block" pos:start="43:13" pos:end="43:26">/* 16M page */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:28"><expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:22">page_shift</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:27">24</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="47:13" pos:end="47:56">/* lowest AVA bit must be 0 for 16M pages */</comment>

            <if_stmt pos:start="49:13" pos:end="53:13"><if pos:start="49:13" pos:end="53:13">if <condition pos:start="49:16" pos:end="49:28">(<expr pos:start="49:17" pos:end="49:27"><name pos:start="49:17" pos:end="49:20">pteh</name> <operator pos:start="49:22" pos:end="49:22">&amp;</operator> <literal type="number" pos:start="49:24" pos:end="49:27">0x80</literal></expr>)</condition> <block pos:start="49:30" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:35">

                <return pos:start="51:17" pos:end="51:35">return <expr pos:start="51:24" pos:end="51:34"><name pos:start="51:24" pos:end="51:34">H_PARAMETER</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="59:9">else <block pos:start="55:16" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:31">

            <return pos:start="57:13" pos:end="57:31">return <expr pos:start="57:20" pos:end="57:30"><name pos:start="57:20" pos:end="57:30">H_PARAMETER</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:64"><expr pos:start="65:5" pos:end="65:63"><name pos:start="65:5" pos:end="65:9">raddr</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:17">ptel</name> <operator pos:start="65:19" pos:end="65:19">&amp;</operator> <name pos:start="65:21" pos:end="65:32">HPTE64_R_RPN</name><operator pos:start="65:33" pos:end="65:33">)</operator> <operator pos:start="65:35" pos:end="65:35">&amp;</operator> <operator pos:start="65:37" pos:end="65:37">~</operator><operator pos:start="65:38" pos:end="65:38">(</operator><operator pos:start="65:39" pos:end="65:39">(</operator><literal type="number" pos:start="65:40" pos:end="65:43">1ULL</literal> <operator pos:start="65:45" pos:end="65:46">&lt;&lt;</operator> <name pos:start="65:48" pos:end="65:57">page_shift</name><operator pos:start="65:58" pos:end="65:58">)</operator> <operator pos:start="65:60" pos:end="65:60">-</operator> <literal type="number" pos:start="65:62" pos:end="65:62">1</literal><operator pos:start="65:63" pos:end="65:63">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="95:5"><if pos:start="69:5" pos:end="79:5">if <condition pos:start="69:8" pos:end="69:33">(<expr pos:start="69:9" pos:end="69:32"><name pos:start="69:9" pos:end="69:13">raddr</name> <operator pos:start="69:15" pos:end="69:15">&lt;</operator> <name pos:start="69:17" pos:end="69:32"><name pos:start="69:17" pos:end="69:21">spapr</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:32">ram_limit</name></name></expr>)</condition> <block pos:start="69:35" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:9">

        <comment type="block" pos:start="71:9" pos:end="71:49">/* Regular RAM - should have WIMG=0010 */</comment>

        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:49">(<expr pos:start="73:13" pos:end="73:48"><operator pos:start="73:13" pos:end="73:13">(</operator><name pos:start="73:14" pos:end="73:17">ptel</name> <operator pos:start="73:19" pos:end="73:19">&amp;</operator> <name pos:start="73:21" pos:end="73:33">HPTE64_R_WIMG</name><operator pos:start="73:34" pos:end="73:34">)</operator> <operator pos:start="73:36" pos:end="73:37">!=</operator> <name pos:start="73:39" pos:end="73:48">HPTE64_R_M</name></expr>)</condition> <block pos:start="73:51" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:31">

            <return pos:start="75:13" pos:end="75:31">return <expr pos:start="75:20" pos:end="75:30"><name pos:start="75:20" pos:end="75:30">H_PARAMETER</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="95:5">else <block pos:start="79:12" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:9">

        <comment type="block" pos:start="81:9" pos:end="81:38">/* Looks like an IO address */</comment>

        <comment type="block" pos:start="83:9" pos:end="85:63">/* FIXME: What WIMG combinations could be sensible for IO?

         * For now we allow WIMG=010x, but are there others? */</comment>

        <comment type="block" pos:start="87:9" pos:end="87:69">/* FIXME: Should we check against registered IO addresses? */</comment>

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:74">(<expr pos:start="89:13" pos:end="89:73"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:17">ptel</name> <operator pos:start="89:19" pos:end="89:19">&amp;</operator> <operator pos:start="89:21" pos:end="89:21">(</operator><name pos:start="89:22" pos:end="89:31">HPTE64_R_W</name> <operator pos:start="89:33" pos:end="89:33">|</operator> <name pos:start="89:35" pos:end="89:44">HPTE64_R_I</name> <operator pos:start="89:46" pos:end="89:46">|</operator> <name pos:start="89:48" pos:end="89:57">HPTE64_R_M</name><operator pos:start="89:58" pos:end="89:58">)</operator><operator pos:start="89:59" pos:end="89:59">)</operator> <operator pos:start="89:61" pos:end="89:62">!=</operator> <name pos:start="89:64" pos:end="89:73">HPTE64_R_I</name></expr>)</condition> <block pos:start="89:76" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:31">

            <return pos:start="91:13" pos:end="91:31">return <expr pos:start="91:20" pos:end="91:30"><name pos:start="91:20" pos:end="91:30">H_PARAMETER</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:21"><expr pos:start="99:5" pos:end="99:20"><name pos:start="99:5" pos:end="99:8">pteh</name> <operator pos:start="99:10" pos:end="99:11">&amp;=</operator> <operator pos:start="99:13" pos:end="99:13">~</operator><literal type="number" pos:start="99:14" pos:end="99:20">0x60ULL</literal></expr>;</expr_stmt>



    <if_stmt pos:start="103:5" pos:end="107:5"><if pos:start="103:5" pos:end="107:5">if <condition pos:start="103:8" pos:end="103:57">(<expr pos:start="103:9" pos:end="103:56"><operator pos:start="103:9" pos:end="103:9">(</operator><name pos:start="103:10" pos:end="103:18">pte_index</name> <operator pos:start="103:20" pos:end="103:20">*</operator> <name pos:start="103:22" pos:end="103:37">HASH_PTE_SIZE_64</name><operator pos:start="103:38" pos:end="103:38">)</operator> <operator pos:start="103:40" pos:end="103:40">&amp;</operator> <operator pos:start="103:42" pos:end="103:42">~</operator><name pos:start="103:43" pos:end="103:56"><name pos:start="103:43" pos:end="103:45">env</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:56">htab_mask</name></name></expr>)</condition> <block pos:start="103:59" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:27">

        <return pos:start="105:9" pos:end="105:27">return <expr pos:start="105:16" pos:end="105:26"><name pos:start="105:16" pos:end="105:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="109:5" pos:end="145:5"><if pos:start="109:5" pos:end="133:5">if <condition pos:start="109:8" pos:end="109:39">(<expr pos:start="109:9" pos:end="109:38"><call pos:start="109:9" pos:end="109:38"><name pos:start="109:9" pos:end="109:14">likely</name><argument_list pos:start="109:15" pos:end="109:38">(<argument pos:start="109:16" pos:end="109:37"><expr pos:start="109:16" pos:end="109:37"><operator pos:start="109:16" pos:end="109:16">(</operator><name pos:start="109:17" pos:end="109:21">flags</name> <operator pos:start="109:23" pos:end="109:23">&amp;</operator> <name pos:start="109:25" pos:end="109:31">H_EXACT</name><operator pos:start="109:32" pos:end="109:32">)</operator> <operator pos:start="109:34" pos:end="109:35">==</operator> <literal type="number" pos:start="109:37" pos:end="109:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:41" pos:end="133:5">{<block_content pos:start="111:9" pos:end="131:9">

        <expr_stmt pos:start="111:9" pos:end="111:27"><expr pos:start="111:9" pos:end="111:26"><name pos:start="111:9" pos:end="111:17">pte_index</name> <operator pos:start="111:19" pos:end="111:20">&amp;=</operator> <operator pos:start="111:22" pos:end="111:22">~</operator><literal type="number" pos:start="111:23" pos:end="111:26">7ULL</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:44"><expr pos:start="113:9" pos:end="113:43"><name pos:start="113:9" pos:end="113:12">hpte</name> <operator pos:start="113:14" pos:end="113:14">=</operator> <name pos:start="113:16" pos:end="113:24">pte_index</name> <operator pos:start="113:26" pos:end="113:26">*</operator> <name pos:start="113:28" pos:end="113:43">HASH_PTE_SIZE_64</name></expr>;</expr_stmt>

        <for pos:start="115:9" pos:end="131:9">for <control pos:start="115:13" pos:end="115:26">(<init pos:start="115:14" pos:end="115:19"><expr pos:start="115:14" pos:end="115:18"><name pos:start="115:14" pos:end="115:14">i</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <literal type="number" pos:start="115:18" pos:end="115:18">0</literal></expr>;</init> <condition pos:start="115:21" pos:end="115:21">;</condition> <incr pos:start="115:23" pos:end="115:25"><expr pos:start="115:23" pos:end="115:25"><operator pos:start="115:23" pos:end="115:24">++</operator><name pos:start="115:25" pos:end="115:25">i</name></expr></incr>)</control> <block pos:start="115:28" pos:end="131:9">{<block_content pos:start="117:13" pos:end="129:37">

            <if_stmt pos:start="117:13" pos:end="121:13"><if pos:start="117:13" pos:end="121:13">if <condition pos:start="117:16" pos:end="117:23">(<expr pos:start="117:17" pos:end="117:22"><name pos:start="117:17" pos:end="117:17">i</name> <operator pos:start="117:19" pos:end="117:20">==</operator> <literal type="number" pos:start="117:22" pos:end="117:22">8</literal></expr>)</condition> <block pos:start="117:25" pos:end="121:13">{<block_content pos:start="119:17" pos:end="119:35">

                <return pos:start="119:17" pos:end="119:35">return <expr pos:start="119:24" pos:end="119:34"><name pos:start="119:24" pos:end="119:34">H_PTEG_FULL</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="123:13" pos:end="127:13"><if pos:start="123:13" pos:end="127:13">if <condition pos:start="123:16" pos:end="123:73">(<expr pos:start="123:17" pos:end="123:72"><operator pos:start="123:17" pos:end="123:17">(</operator><call pos:start="123:18" pos:end="123:49"><name pos:start="123:18" pos:end="123:38">ppc_hash64_load_hpte0</name><argument_list pos:start="123:39" pos:end="123:49">(<argument pos:start="123:40" pos:end="123:42"><expr pos:start="123:40" pos:end="123:42"><name pos:start="123:40" pos:end="123:42">env</name></expr></argument>, <argument pos:start="123:45" pos:end="123:48"><expr pos:start="123:45" pos:end="123:48"><name pos:start="123:45" pos:end="123:48">hpte</name></expr></argument>)</argument_list></call> <operator pos:start="123:51" pos:end="123:51">&amp;</operator> <name pos:start="123:53" pos:end="123:66">HPTE64_V_VALID</name><operator pos:start="123:67" pos:end="123:67">)</operator> <operator pos:start="123:69" pos:end="123:70">==</operator> <literal type="number" pos:start="123:72" pos:end="123:72">0</literal></expr>)</condition> <block pos:start="123:75" pos:end="127:13">{<block_content pos:start="125:17" pos:end="125:22">

                <break pos:start="125:17" pos:end="125:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:37"><expr pos:start="129:13" pos:end="129:36"><name pos:start="129:13" pos:end="129:16">hpte</name> <operator pos:start="129:18" pos:end="129:19">+=</operator> <name pos:start="129:21" pos:end="129:36">HASH_PTE_SIZE_64</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="133:7" pos:end="145:5">else <block pos:start="133:12" pos:end="145:5">{<block_content pos:start="135:9" pos:end="143:9">

        <expr_stmt pos:start="135:9" pos:end="135:14"><expr pos:start="135:9" pos:end="135:13"><name pos:start="135:9" pos:end="135:9">i</name> <operator pos:start="135:11" pos:end="135:11">=</operator> <literal type="number" pos:start="135:13" pos:end="135:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:44"><expr pos:start="137:9" pos:end="137:43"><name pos:start="137:9" pos:end="137:12">hpte</name> <operator pos:start="137:14" pos:end="137:14">=</operator> <name pos:start="137:16" pos:end="137:24">pte_index</name> <operator pos:start="137:26" pos:end="137:26">*</operator> <name pos:start="137:28" pos:end="137:43">HASH_PTE_SIZE_64</name></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="143:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:62">(<expr pos:start="139:13" pos:end="139:61"><call pos:start="139:13" pos:end="139:44"><name pos:start="139:13" pos:end="139:33">ppc_hash64_load_hpte0</name><argument_list pos:start="139:34" pos:end="139:44">(<argument pos:start="139:35" pos:end="139:37"><expr pos:start="139:35" pos:end="139:37"><name pos:start="139:35" pos:end="139:37">env</name></expr></argument>, <argument pos:start="139:40" pos:end="139:43"><expr pos:start="139:40" pos:end="139:43"><name pos:start="139:40" pos:end="139:43">hpte</name></expr></argument>)</argument_list></call> <operator pos:start="139:46" pos:end="139:46">&amp;</operator> <name pos:start="139:48" pos:end="139:61">HPTE64_V_VALID</name></expr>)</condition> <block pos:start="139:64" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:31">

            <return pos:start="141:13" pos:end="141:31">return <expr pos:start="141:20" pos:end="141:30"><name pos:start="141:20" pos:end="141:30">H_PTEG_FULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:44"><expr pos:start="147:5" pos:end="147:43"><call pos:start="147:5" pos:end="147:43"><name pos:start="147:5" pos:end="147:26">ppc_hash64_store_hpte1</name><argument_list pos:start="147:27" pos:end="147:43">(<argument pos:start="147:28" pos:end="147:30"><expr pos:start="147:28" pos:end="147:30"><name pos:start="147:28" pos:end="147:30">env</name></expr></argument>, <argument pos:start="147:33" pos:end="147:36"><expr pos:start="147:33" pos:end="147:36"><name pos:start="147:33" pos:end="147:36">hpte</name></expr></argument>, <argument pos:start="147:39" pos:end="147:42"><expr pos:start="147:39" pos:end="147:42"><name pos:start="147:39" pos:end="147:42">ptel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="149:5" pos:end="149:61">/* eieio();  FIXME: need some sort of barrier for smp? */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:66"><expr pos:start="151:5" pos:end="151:65"><call pos:start="151:5" pos:end="151:65"><name pos:start="151:5" pos:end="151:26">ppc_hash64_store_hpte0</name><argument_list pos:start="151:27" pos:end="151:65">(<argument pos:start="151:28" pos:end="151:30"><expr pos:start="151:28" pos:end="151:30"><name pos:start="151:28" pos:end="151:30">env</name></expr></argument>, <argument pos:start="151:33" pos:end="151:36"><expr pos:start="151:33" pos:end="151:36"><name pos:start="151:33" pos:end="151:36">hpte</name></expr></argument>, <argument pos:start="151:39" pos:end="151:64"><expr pos:start="151:39" pos:end="151:64"><name pos:start="151:39" pos:end="151:42">pteh</name> <operator pos:start="151:44" pos:end="151:44">|</operator> <name pos:start="151:46" pos:end="151:64">HPTE64_V_HPTE_DIRTY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="155:5" pos:end="155:28"><expr pos:start="155:5" pos:end="155:27"><name pos:start="155:5" pos:end="155:11"><name pos:start="155:5" pos:end="155:8">args</name><index pos:start="155:9" pos:end="155:11">[<expr pos:start="155:10" pos:end="155:10"><literal type="number" pos:start="155:10" pos:end="155:10">0</literal></expr>]</index></name> <operator pos:start="155:13" pos:end="155:13">=</operator> <name pos:start="155:15" pos:end="155:23">pte_index</name> <operator pos:start="155:25" pos:end="155:25">+</operator> <name pos:start="155:27" pos:end="155:27">i</name></expr>;</expr_stmt>

    <return pos:start="157:5" pos:end="157:21">return <expr pos:start="157:12" pos:end="157:20"><name pos:start="157:12" pos:end="157:20">H_SUCCESS</name></expr>;</return>

</block_content>}</block></function>
</unit>
