<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1251.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">VirtIOSCSIVring</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:46">virtio_scsi_vring_init</name><parameter_list pos:start="1:47" pos:end="7:53">(<parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:57">VirtIOSCSI</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">s</name></decl></parameter>,

                                               <parameter pos:start="3:48" pos:end="3:60"><decl pos:start="3:48" pos:end="3:60"><type pos:start="3:48" pos:end="3:60"><name pos:start="3:48" pos:end="3:56">VirtQueue</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:60">vq</name></decl></parameter>,

                                               <parameter pos:start="5:48" pos:end="5:76"><decl pos:start="5:48" pos:end="5:76"><type pos:start="5:48" pos:end="5:76"><name pos:start="5:48" pos:end="5:67">EventNotifierHandler</name> <modifier pos:start="5:69" pos:end="5:69">*</modifier></type><name pos:start="5:70" pos:end="5:76">handler</name></decl></parameter>,

                                               <parameter pos:start="7:48" pos:end="7:52"><decl pos:start="7:48" pos:end="7:52"><type pos:start="7:48" pos:end="7:52"><name pos:start="7:48" pos:end="7:50">int</name></type> <name pos:start="7:52" pos:end="7:52">n</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="79:1">{<block_content pos:start="11:5" pos:end="77:16">

    <decl_stmt pos:start="11:5" pos:end="11:57"><decl pos:start="11:5" pos:end="11:56"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">BusState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">qbus</name> <init pos:start="11:20" pos:end="11:56">= <expr pos:start="11:22" pos:end="11:56"><call pos:start="11:22" pos:end="11:56"><name pos:start="11:22" pos:end="11:24">BUS</name><argument_list pos:start="11:25" pos:end="11:56">(<argument pos:start="11:26" pos:end="11:55"><expr pos:start="11:26" pos:end="11:55"><call pos:start="11:26" pos:end="11:55"><name pos:start="11:26" pos:end="11:44">qdev_get_parent_bus</name><argument_list pos:start="11:45" pos:end="11:55">(<argument pos:start="11:46" pos:end="11:54"><expr pos:start="11:46" pos:end="11:54"><call pos:start="11:46" pos:end="11:54"><name pos:start="11:46" pos:end="11:51">DEVICE</name><argument_list pos:start="11:52" pos:end="11:54">(<argument pos:start="11:53" pos:end="11:53"><expr pos:start="11:53" pos:end="11:53"><name pos:start="11:53" pos:end="11:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:50"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">VirtioBusClass</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:21">k</name> <init pos:start="13:23" pos:end="13:50">= <expr pos:start="13:25" pos:end="13:50"><call pos:start="13:25" pos:end="13:50"><name pos:start="13:25" pos:end="13:44">VIRTIO_BUS_GET_CLASS</name><argument_list pos:start="13:45" pos:end="13:50">(<argument pos:start="13:46" pos:end="13:49"><expr pos:start="13:46" pos:end="13:49"><name pos:start="13:46" pos:end="13:49">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">VirtIOSCSIVring</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:22">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:11"><decl pos:start="17:5" pos:end="17:10"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:10">rc</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:33">/* Set up virtqueue notify */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:6">rc</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:52"><name pos:start="23:10" pos:end="23:29"><name pos:start="23:10" pos:end="23:10">k</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:29">set_host_notifier</name></name><argument_list pos:start="23:30" pos:end="23:52">(<argument pos:start="23:31" pos:end="23:42"><expr pos:start="23:31" pos:end="23:42"><name pos:start="23:31" pos:end="23:42"><name pos:start="23:31" pos:end="23:34">qbus</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:42">parent</name></name></expr></argument>, <argument pos:start="23:45" pos:end="23:45"><expr pos:start="23:45" pos:end="23:45"><name pos:start="23:45" pos:end="23:45">n</name></expr></argument>, <argument pos:start="23:48" pos:end="23:51"><expr pos:start="23:48" pos:end="23:51"><name pos:start="23:48" pos:end="23:51">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:10">rc</name> <operator pos:start="25:12" pos:end="25:13">!=</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>)</condition> <block pos:start="25:18" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:20">

        <expr_stmt pos:start="27:9" pos:end="29:20"><expr pos:start="27:9" pos:end="29:19"><call pos:start="27:9" pos:end="29:19"><name pos:start="27:9" pos:end="27:15">fprintf</name><argument_list pos:start="27:16" pos:end="29:19">(<argument pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:22">stderr</name></expr></argument>, <argument pos:start="27:25" pos:end="27:73"><expr pos:start="27:25" pos:end="27:73"><literal type="string" pos:start="27:25" pos:end="27:73">"virtio-scsi: Failed to set host notifier (%d)\n"</literal></expr></argument>,

                <argument pos:start="29:17" pos:end="29:18"><expr pos:start="29:17" pos:end="29:18"><name pos:start="29:17" pos:end="29:18">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:27">dataplane_fenced</name></name> <operator pos:start="31:29" pos:end="31:29">=</operator> <name pos:start="31:31" pos:end="31:34">true</name></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:20">return <expr pos:start="33:16" pos:end="33:19"><name pos:start="33:16" pos:end="33:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:34"><expr pos:start="39:5" pos:end="39:33"><name pos:start="39:5" pos:end="39:5">r</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <call pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:13">g_new</name><argument_list pos:start="39:14" pos:end="39:33">(<argument pos:start="39:15" pos:end="39:29"><expr pos:start="39:15" pos:end="39:29"><name pos:start="39:15" pos:end="39:29">VirtIOSCSIVring</name></expr></argument>, <argument pos:start="39:32" pos:end="39:32"><expr pos:start="39:32" pos:end="39:32"><literal type="number" pos:start="39:32" pos:end="39:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:59"><expr pos:start="41:5" pos:end="41:58"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:5">r</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:20">host_notifier</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <operator pos:start="41:24" pos:end="41:24">*</operator><call pos:start="41:25" pos:end="41:58"><name pos:start="41:25" pos:end="41:54">virtio_queue_get_host_notifier</name><argument_list pos:start="41:55" pos:end="41:58">(<argument pos:start="41:56" pos:end="41:57"><expr pos:start="41:56" pos:end="41:57"><name pos:start="41:56" pos:end="41:57">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:61"><expr pos:start="43:5" pos:end="43:60"><name pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:5">r</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:21">guest_notifier</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <operator pos:start="43:25" pos:end="43:25">*</operator><call pos:start="43:26" pos:end="43:60"><name pos:start="43:26" pos:end="43:56">virtio_queue_get_guest_notifier</name><argument_list pos:start="43:57" pos:end="43:60">(<argument pos:start="43:58" pos:end="43:59"><expr pos:start="43:58" pos:end="43:59"><name pos:start="43:58" pos:end="43:59">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:36"><expr pos:start="45:5" pos:end="47:35"><call pos:start="45:5" pos:end="47:35"><name pos:start="45:5" pos:end="45:26">aio_set_event_notifier</name><argument_list pos:start="45:27" pos:end="47:35">(<argument pos:start="45:28" pos:end="45:33"><expr pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:33">ctx</name></name></expr></argument>, <argument pos:start="45:36" pos:end="45:52"><expr pos:start="45:36" pos:end="45:52"><operator pos:start="45:36" pos:end="45:36">&amp;</operator><name pos:start="45:37" pos:end="45:52"><name pos:start="45:37" pos:end="45:37">r</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:52">host_notifier</name></name></expr></argument>, <argument pos:start="45:55" pos:end="45:59"><expr pos:start="45:55" pos:end="45:59"><name pos:start="45:55" pos:end="45:59">false</name></expr></argument>,

                           <argument pos:start="47:28" pos:end="47:34"><expr pos:start="47:28" pos:end="47:34"><name pos:start="47:28" pos:end="47:34">handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:18"><expr pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:5">r</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:13">parent</name></name> <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:17">s</name></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:53">(<expr pos:start="55:9" pos:end="55:52"><operator pos:start="55:9" pos:end="55:9">!</operator><call pos:start="55:10" pos:end="55:52"><name pos:start="55:10" pos:end="55:20">vring_setup</name><argument_list pos:start="55:21" pos:end="55:52">(<argument pos:start="55:22" pos:end="55:30"><expr pos:start="55:22" pos:end="55:30"><operator pos:start="55:22" pos:end="55:22">&amp;</operator><name pos:start="55:23" pos:end="55:30"><name pos:start="55:23" pos:end="55:23">r</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:30">vring</name></name></expr></argument>, <argument pos:start="55:33" pos:end="55:48"><expr pos:start="55:33" pos:end="55:48"><call pos:start="55:33" pos:end="55:48"><name pos:start="55:33" pos:end="55:45">VIRTIO_DEVICE</name><argument_list pos:start="55:46" pos:end="55:48">(<argument pos:start="55:47" pos:end="55:47"><expr pos:start="55:47" pos:end="55:47"><name pos:start="55:47" pos:end="55:47">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:51" pos:end="55:51"><expr pos:start="55:51" pos:end="55:51"><name pos:start="55:51" pos:end="55:51">n</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:55" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:24">

        <expr_stmt pos:start="57:9" pos:end="57:61"><expr pos:start="57:9" pos:end="57:60"><call pos:start="57:9" pos:end="57:60"><name pos:start="57:9" pos:end="57:15">fprintf</name><argument_list pos:start="57:16" pos:end="57:60">(<argument pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:22">stderr</name></expr></argument>, <argument pos:start="57:25" pos:end="57:59"><expr pos:start="57:25" pos:end="57:59"><literal type="string" pos:start="57:25" pos:end="57:59">"virtio-scsi: VRing setup failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:24">goto <name pos:start="59:14" pos:end="59:23">fail_vring</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><name pos:start="63:12" pos:end="63:12">r</name></expr>;</return>



<label pos:start="67:1" pos:end="67:11"><name pos:start="67:1" pos:end="67:10">fail_vring</name>:</label>

    <expr_stmt pos:start="69:5" pos:end="71:33"><expr pos:start="69:5" pos:end="71:32"><call pos:start="69:5" pos:end="71:32"><name pos:start="69:5" pos:end="69:26">aio_set_event_notifier</name><argument_list pos:start="69:27" pos:end="71:32">(<argument pos:start="69:28" pos:end="69:33"><expr pos:start="69:28" pos:end="69:33"><name pos:start="69:28" pos:end="69:33"><name pos:start="69:28" pos:end="69:28">s</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:33">ctx</name></name></expr></argument>, <argument pos:start="69:36" pos:end="69:52"><expr pos:start="69:36" pos:end="69:52"><operator pos:start="69:36" pos:end="69:36">&amp;</operator><name pos:start="69:37" pos:end="69:52"><name pos:start="69:37" pos:end="69:37">r</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:52">host_notifier</name></name></expr></argument>, <argument pos:start="69:55" pos:end="69:59"><expr pos:start="69:55" pos:end="69:59"><name pos:start="69:55" pos:end="69:59">false</name></expr></argument>,

                           <argument pos:start="71:28" pos:end="71:31"><expr pos:start="71:28" pos:end="71:31"><name pos:start="71:28" pos:end="71:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:49"><expr pos:start="73:5" pos:end="73:48"><call pos:start="73:5" pos:end="73:48"><name pos:start="73:5" pos:end="73:24"><name pos:start="73:5" pos:end="73:5">k</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:24">set_host_notifier</name></name><argument_list pos:start="73:25" pos:end="73:48">(<argument pos:start="73:26" pos:end="73:37"><expr pos:start="73:26" pos:end="73:37"><name pos:start="73:26" pos:end="73:37"><name pos:start="73:26" pos:end="73:29">qbus</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:37">parent</name></name></expr></argument>, <argument pos:start="73:40" pos:end="73:40"><expr pos:start="73:40" pos:end="73:40"><name pos:start="73:40" pos:end="73:40">n</name></expr></argument>, <argument pos:start="73:43" pos:end="73:47"><expr pos:start="73:43" pos:end="73:47"><name pos:start="73:43" pos:end="73:47">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:14"><expr pos:start="75:5" pos:end="75:13"><call pos:start="75:5" pos:end="75:13"><name pos:start="75:5" pos:end="75:10">g_free</name><argument_list pos:start="75:11" pos:end="75:13">(<argument pos:start="75:12" pos:end="75:12"><expr pos:start="75:12" pos:end="75:12"><name pos:start="75:12" pos:end="75:12">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="77:5" pos:end="77:16">return <expr pos:start="77:12" pos:end="77:15"><name pos:start="77:12" pos:end="77:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
