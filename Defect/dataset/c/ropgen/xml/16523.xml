<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16523.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">css_do_tsch</name><parameter_list pos:start="1:16" pos:end="1:47">(<parameter pos:start="1:17" pos:end="1:29"><decl pos:start="1:17" pos:end="1:29"><type pos:start="1:17" pos:end="1:29"><name pos:start="1:17" pos:end="1:24">SubchDev</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:29">sch</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:34">IRB</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:46">target_irb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:15">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">SCSW</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:11">s</name> <init pos:start="5:13" pos:end="5:36">= <expr pos:start="5:15" pos:end="5:36"><operator pos:start="5:15" pos:end="5:15">&amp;</operator><name pos:start="5:16" pos:end="5:36"><name pos:start="5:16" pos:end="5:18">sch</name><operator pos:start="5:19" pos:end="5:20">-&gt;</operator><name pos:start="5:21" pos:end="5:31">curr_status</name><operator pos:start="5:32" pos:end="5:32">.</operator><name pos:start="5:33" pos:end="5:36">scsw</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">PMCW</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">p</name> <init pos:start="7:13" pos:end="7:36">= <expr pos:start="7:15" pos:end="7:36"><operator pos:start="7:15" pos:end="7:15">&amp;</operator><name pos:start="7:16" pos:end="7:36"><name pos:start="7:16" pos:end="7:18">sch</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:31">curr_status</name><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:36">pmcw</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:18">stctl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:17">fctl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type> <name pos:start="13:14" pos:end="13:17">actl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">IRB</name></type> <name pos:start="15:9" pos:end="15:11">irb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:66">(<expr pos:start="21:9" pos:end="21:65"><operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:18"><name pos:start="21:11" pos:end="21:11">p</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">flags</name></name> <operator pos:start="21:20" pos:end="21:20">&amp;</operator> <operator pos:start="21:22" pos:end="21:22">(</operator><name pos:start="21:23" pos:end="21:41">PMCW_FLAGS_MASK_DNV</name> <operator pos:start="21:43" pos:end="21:43">|</operator> <name pos:start="21:45" pos:end="21:63">PMCW_FLAGS_MASK_ENA</name><operator pos:start="21:64" pos:end="21:64">)</operator><operator pos:start="21:65" pos:end="21:65">)</operator></expr>)</condition> <block pos:start="21:68" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:17">

        <expr_stmt pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <literal type="number" pos:start="23:15" pos:end="23:15">3</literal></expr>;</expr_stmt>

        <goto pos:start="25:9" pos:end="25:17">goto <name pos:start="25:14" pos:end="25:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:9">stctl</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:19">ctrl</name></name> <operator pos:start="31:21" pos:end="31:21">&amp;</operator> <name pos:start="31:23" pos:end="31:42">SCSW_CTRL_MASK_STCTL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:8">fctl</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <name pos:start="33:12" pos:end="33:18"><name pos:start="33:12" pos:end="33:12">s</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:18">ctrl</name></name> <operator pos:start="33:20" pos:end="33:20">&amp;</operator> <name pos:start="33:22" pos:end="33:40">SCSW_CTRL_MASK_FCTL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:8">actl</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <name pos:start="35:12" pos:end="35:18"><name pos:start="35:12" pos:end="35:12">s</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:18">ctrl</name></name> <operator pos:start="35:20" pos:end="35:20">&amp;</operator> <name pos:start="35:22" pos:end="35:40">SCSW_CTRL_MASK_ACTL</name></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:40">/* Prepare the irb for the guest. */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><call pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:10">memset</name><argument_list pos:start="41:11" pos:end="41:32">(<argument pos:start="41:12" pos:end="41:15"><expr pos:start="41:12" pos:end="41:15"><operator pos:start="41:12" pos:end="41:12">&amp;</operator><name pos:start="41:13" pos:end="41:15">irb</name></expr></argument>, <argument pos:start="41:18" pos:end="41:18"><expr pos:start="41:18" pos:end="41:18"><literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr></argument>, <argument pos:start="41:21" pos:end="41:31"><expr pos:start="41:21" pos:end="41:31"><sizeof pos:start="41:21" pos:end="41:31">sizeof<argument_list pos:start="41:27" pos:end="41:31">(<argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">IRB</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:40">/* Copy scsw from current status. */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><call pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:10">memcpy</name><argument_list pos:start="47:11" pos:end="47:38">(<argument pos:start="47:12" pos:end="47:20"><expr pos:start="47:12" pos:end="47:20"><operator pos:start="47:12" pos:end="47:12">&amp;</operator><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:15">irb</name><operator pos:start="47:16" pos:end="47:16">.</operator><name pos:start="47:17" pos:end="47:20">scsw</name></name></expr></argument>, <argument pos:start="47:23" pos:end="47:23"><expr pos:start="47:23" pos:end="47:23"><name pos:start="47:23" pos:end="47:23">s</name></expr></argument>, <argument pos:start="47:26" pos:end="47:37"><expr pos:start="47:26" pos:end="47:37"><sizeof pos:start="47:26" pos:end="47:37">sizeof<argument_list pos:start="47:32" pos:end="47:37">(<argument pos:start="47:33" pos:end="47:36"><expr pos:start="47:33" pos:end="47:36"><name pos:start="47:33" pos:end="47:36">SCSW</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="81:5"><if pos:start="49:5" pos:end="81:5">if <condition pos:start="49:8" pos:end="49:39">(<expr pos:start="49:9" pos:end="49:38"><name pos:start="49:9" pos:end="49:13">stctl</name> <operator pos:start="49:15" pos:end="49:15">&amp;</operator> <name pos:start="49:17" pos:end="49:38">SCSW_STCTL_STATUS_PEND</name></expr>)</condition> <block pos:start="49:41" pos:end="81:5">{<block_content pos:start="51:9" pos:end="79:9">

        <if_stmt pos:start="51:9" pos:end="65:9"><if pos:start="51:9" pos:end="61:9">if <condition pos:start="51:12" pos:end="55:50">(<expr pos:start="51:13" pos:end="55:49"><name pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:20">cstat</name></name> <operator pos:start="51:22" pos:end="51:22">&amp;</operator> <operator pos:start="51:24" pos:end="51:24">(</operator><name pos:start="51:25" pos:end="51:45">SCSW_CSTAT_DATA_CHECK</name> <operator pos:start="51:47" pos:end="51:47">|</operator>

                        <name pos:start="53:25" pos:end="53:47">SCSW_CSTAT_CHN_CTRL_CHK</name> <operator pos:start="53:49" pos:end="53:49">|</operator>

                        <name pos:start="55:25" pos:end="55:48">SCSW_CSTAT_INTF_CTRL_CHK</name><operator pos:start="55:49" pos:end="55:49">)</operator></expr>)</condition> <block pos:start="55:52" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:36">

            <expr_stmt pos:start="57:13" pos:end="57:51"><expr pos:start="57:13" pos:end="57:50"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:15">irb</name><operator pos:start="57:16" pos:end="57:16">.</operator><name pos:start="57:17" pos:end="57:20">scsw</name><operator pos:start="57:21" pos:end="57:21">.</operator><name pos:start="57:22" pos:end="57:26">flags</name></name> <operator pos:start="57:28" pos:end="57:29">|=</operator> <name pos:start="57:31" pos:end="57:50">SCSW_FLAGS_MASK_ESWF</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:36"><expr pos:start="59:13" pos:end="59:35"><name pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:15">irb</name><operator pos:start="59:16" pos:end="59:16">.</operator><name pos:start="59:17" pos:end="59:19">esw</name><index pos:start="59:20" pos:end="59:22">[<expr pos:start="59:21" pos:end="59:21"><literal type="number" pos:start="59:21" pos:end="59:21">0</literal></expr>]</index></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <literal type="number" pos:start="59:26" pos:end="59:35">0x04804000</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="65:9">else <block pos:start="61:16" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:36">

            <expr_stmt pos:start="63:13" pos:end="63:36"><expr pos:start="63:13" pos:end="63:35"><name pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:15">irb</name><operator pos:start="63:16" pos:end="63:16">.</operator><name pos:start="63:17" pos:end="63:19">esw</name><index pos:start="63:20" pos:end="63:22">[<expr pos:start="63:21" pos:end="63:21"><literal type="number" pos:start="63:21" pos:end="63:21">0</literal></expr>]</index></name> <operator pos:start="63:24" pos:end="63:24">=</operator> <literal type="number" pos:start="63:26" pos:end="63:35">0x00800000</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="67:9" pos:end="67:58">/* If a unit check is pending, copy sense data. */</comment>

        <if_stmt pos:start="69:9" pos:end="79:9"><if pos:start="69:9" pos:end="79:9">if <condition pos:start="69:12" pos:end="71:48">(<expr pos:start="69:13" pos:end="71:47"><operator pos:start="69:13" pos:end="69:13">(</operator><name pos:start="69:14" pos:end="69:21"><name pos:start="69:14" pos:end="69:14">s</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:21">dstat</name></name> <operator pos:start="69:23" pos:end="69:23">&amp;</operator> <name pos:start="69:25" pos:end="69:45">SCSW_DSTAT_UNIT_CHECK</name><operator pos:start="69:46" pos:end="69:46">)</operator> <operator pos:start="69:48" pos:end="69:49">&amp;&amp;</operator>

            <operator pos:start="71:13" pos:end="71:13">(</operator><name pos:start="71:14" pos:end="71:21"><name pos:start="71:14" pos:end="71:14">p</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:21">chars</name></name> <operator pos:start="71:23" pos:end="71:23">&amp;</operator> <name pos:start="71:25" pos:end="71:46">PMCW_CHARS_MASK_CSENSE</name><operator pos:start="71:47" pos:end="71:47">)</operator></expr>)</condition> <block pos:start="71:50" pos:end="79:9">{<block_content pos:start="73:13" pos:end="77:69">

            <expr_stmt pos:start="73:13" pos:end="73:74"><expr pos:start="73:13" pos:end="73:73"><name pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:15">irb</name><operator pos:start="73:16" pos:end="73:16">.</operator><name pos:start="73:17" pos:end="73:20">scsw</name><operator pos:start="73:21" pos:end="73:21">.</operator><name pos:start="73:22" pos:end="73:26">flags</name></name> <operator pos:start="73:28" pos:end="73:29">|=</operator> <name pos:start="73:31" pos:end="73:50">SCSW_FLAGS_MASK_ESWF</name> <operator pos:start="73:52" pos:end="73:52">|</operator> <name pos:start="73:54" pos:end="73:73">SCSW_FLAGS_MASK_ECTL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:70"><expr pos:start="75:13" pos:end="75:69"><call pos:start="75:13" pos:end="75:69"><name pos:start="75:13" pos:end="75:18">memcpy</name><argument_list pos:start="75:19" pos:end="75:69">(<argument pos:start="75:20" pos:end="75:26"><expr pos:start="75:20" pos:end="75:26"><name pos:start="75:20" pos:end="75:26"><name pos:start="75:20" pos:end="75:22">irb</name><operator pos:start="75:23" pos:end="75:23">.</operator><name pos:start="75:24" pos:end="75:26">ecw</name></name></expr></argument>, <argument pos:start="75:29" pos:end="75:43"><expr pos:start="75:29" pos:end="75:43"><name pos:start="75:29" pos:end="75:43"><name pos:start="75:29" pos:end="75:31">sch</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:43">sense_data</name></name></expr></argument>, <argument pos:start="75:46" pos:end="75:68"><expr pos:start="75:46" pos:end="75:68"><sizeof pos:start="75:46" pos:end="75:68">sizeof<argument_list pos:start="75:52" pos:end="75:68">(<argument pos:start="75:53" pos:end="75:67"><expr pos:start="75:53" pos:end="75:67"><name pos:start="75:53" pos:end="75:67"><name pos:start="75:53" pos:end="75:55">sch</name><operator pos:start="75:56" pos:end="75:57">-&gt;</operator><name pos:start="75:58" pos:end="75:67">sense_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:69"><expr pos:start="77:13" pos:end="77:68"><name pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:15">irb</name><operator pos:start="77:16" pos:end="77:16">.</operator><name pos:start="77:17" pos:end="77:19">esw</name><index pos:start="77:20" pos:end="77:22">[<expr pos:start="77:21" pos:end="77:21"><literal type="number" pos:start="77:21" pos:end="77:21">1</literal></expr>]</index></name> <operator pos:start="77:24" pos:end="77:24">=</operator> <literal type="number" pos:start="77:26" pos:end="77:35">0x01000000</literal> <operator pos:start="77:37" pos:end="77:37">|</operator> <operator pos:start="77:39" pos:end="77:39">(</operator><sizeof pos:start="77:40" pos:end="77:62">sizeof<argument_list pos:start="77:46" pos:end="77:62">(<argument pos:start="77:47" pos:end="77:61"><expr pos:start="77:47" pos:end="77:61"><name pos:start="77:47" pos:end="77:61"><name pos:start="77:47" pos:end="77:49">sch</name><operator pos:start="77:50" pos:end="77:51">-&gt;</operator><name pos:start="77:52" pos:end="77:61">sense_data</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="77:64" pos:end="77:65">&lt;&lt;</operator> <literal type="number" pos:start="77:67" pos:end="77:67">8</literal><operator pos:start="77:68" pos:end="77:68">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="83:5" pos:end="83:37">/* Store the irb to the guest. */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:43"><expr pos:start="85:5" pos:end="85:42"><call pos:start="85:5" pos:end="85:42"><name pos:start="85:5" pos:end="85:21">copy_irb_to_guest</name><argument_list pos:start="85:22" pos:end="85:42">(<argument pos:start="85:23" pos:end="85:32"><expr pos:start="85:23" pos:end="85:32"><name pos:start="85:23" pos:end="85:32">target_irb</name></expr></argument>, <argument pos:start="85:35" pos:end="85:38"><expr pos:start="85:35" pos:end="85:38"><operator pos:start="85:35" pos:end="85:35">&amp;</operator><name pos:start="85:36" pos:end="85:38">irb</name></expr></argument>, <argument pos:start="85:41" pos:end="85:41"><expr pos:start="85:41" pos:end="85:41"><name pos:start="85:41" pos:end="85:41">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:56">/* Clear conditions on subchannel, if applicable. */</comment>

    <if_stmt pos:start="91:5" pos:end="157:5"><if pos:start="91:5" pos:end="157:5">if <condition pos:start="91:8" pos:end="91:39">(<expr pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:13">stctl</name> <operator pos:start="91:15" pos:end="91:15">&amp;</operator> <name pos:start="91:17" pos:end="91:38">SCSW_STCTL_STATUS_PEND</name></expr>)</condition> <block pos:start="91:41" pos:end="157:5">{<block_content pos:start="93:9" pos:end="155:9">

        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:15">ctrl</name></name> <operator pos:start="93:17" pos:end="93:18">&amp;=</operator> <operator pos:start="93:20" pos:end="93:20">~</operator><name pos:start="93:21" pos:end="93:40">SCSW_CTRL_MASK_STCTL</name></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="103:9"><if pos:start="95:9" pos:end="103:9">if <condition pos:start="95:12" pos:end="99:38">(<expr pos:start="95:13" pos:end="99:37"><operator pos:start="95:13" pos:end="95:13">(</operator><name pos:start="95:14" pos:end="95:18">stctl</name> <operator pos:start="95:20" pos:end="95:21">!=</operator> <operator pos:start="95:23" pos:end="95:23">(</operator><name pos:start="95:24" pos:end="95:46">SCSW_STCTL_INTERMEDIATE</name> <operator pos:start="95:48" pos:end="95:48">|</operator> <name pos:start="95:50" pos:end="95:71">SCSW_STCTL_STATUS_PEND</name><operator pos:start="95:72" pos:end="95:72">)</operator><operator pos:start="95:73" pos:end="95:73">)</operator> <operator pos:start="95:75" pos:end="95:76">||</operator>

            <operator pos:start="97:13" pos:end="97:13">(</operator><operator pos:start="97:14" pos:end="97:14">(</operator><name pos:start="97:15" pos:end="97:18">fctl</name> <operator pos:start="97:20" pos:end="97:20">&amp;</operator> <name pos:start="97:22" pos:end="97:40">SCSW_FCTL_HALT_FUNC</name><operator pos:start="97:41" pos:end="97:41">)</operator> <operator pos:start="97:43" pos:end="97:44">&amp;&amp;</operator>

             <operator pos:start="99:14" pos:end="99:14">(</operator><name pos:start="99:15" pos:end="99:18">actl</name> <operator pos:start="99:20" pos:end="99:20">&amp;</operator> <name pos:start="99:22" pos:end="99:35">SCSW_ACTL_SUSP</name><operator pos:start="99:36" pos:end="99:36">)</operator><operator pos:start="99:37" pos:end="99:37">)</operator></expr>)</condition> <block pos:start="99:40" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:44">

            <expr_stmt pos:start="101:13" pos:end="101:44"><expr pos:start="101:13" pos:end="101:43"><name pos:start="101:13" pos:end="101:19"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:19">ctrl</name></name> <operator pos:start="101:21" pos:end="101:22">&amp;=</operator> <operator pos:start="101:24" pos:end="101:24">~</operator><name pos:start="101:25" pos:end="101:43">SCSW_CTRL_MASK_FCTL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="105:9" pos:end="147:9"><if pos:start="105:9" pos:end="119:9">if <condition pos:start="105:12" pos:end="105:72">(<expr pos:start="105:13" pos:end="105:71"><name pos:start="105:13" pos:end="105:17">stctl</name> <operator pos:start="105:19" pos:end="105:20">!=</operator> <operator pos:start="105:22" pos:end="105:22">(</operator><name pos:start="105:23" pos:end="105:45">SCSW_STCTL_INTERMEDIATE</name> <operator pos:start="105:47" pos:end="105:47">|</operator> <name pos:start="105:49" pos:end="105:70">SCSW_STCTL_STATUS_PEND</name><operator pos:start="105:71" pos:end="105:71">)</operator></expr>)</condition> <block pos:start="105:74" pos:end="119:9">{<block_content pos:start="107:13" pos:end="117:41">

            <expr_stmt pos:start="107:13" pos:end="107:45"><expr pos:start="107:13" pos:end="107:44"><name pos:start="107:13" pos:end="107:20"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:20">flags</name></name> <operator pos:start="107:22" pos:end="107:23">&amp;=</operator> <operator pos:start="107:25" pos:end="107:25">~</operator><name pos:start="107:26" pos:end="107:44">SCSW_FLAGS_MASK_PNO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="117:41"><expr pos:start="109:13" pos:end="117:40"><name pos:start="109:13" pos:end="109:19"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:19">ctrl</name></name> <operator pos:start="109:21" pos:end="109:22">&amp;=</operator> <operator pos:start="109:24" pos:end="109:24">~</operator><operator pos:start="109:25" pos:end="109:25">(</operator><name pos:start="109:26" pos:end="109:46">SCSW_ACTL_RESUME_PEND</name> <operator pos:start="109:48" pos:end="109:48">|</operator>

                         <name pos:start="111:26" pos:end="111:45">SCSW_ACTL_START_PEND</name> <operator pos:start="111:47" pos:end="111:47">|</operator>

                         <name pos:start="113:26" pos:end="113:44">SCSW_ACTL_HALT_PEND</name> <operator pos:start="113:46" pos:end="113:46">|</operator>

                         <name pos:start="115:26" pos:end="115:45">SCSW_ACTL_CLEAR_PEND</name> <operator pos:start="115:47" pos:end="115:47">|</operator>

                         <name pos:start="117:26" pos:end="117:39">SCSW_ACTL_SUSP</name><operator pos:start="117:40" pos:end="117:40">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="147:9">else <block pos:start="119:16" pos:end="147:9">{<block_content pos:start="121:13" pos:end="145:13">

            <if_stmt pos:start="121:13" pos:end="145:13"><if pos:start="121:13" pos:end="145:13">if <condition pos:start="121:16" pos:end="123:46">(<expr pos:start="121:17" pos:end="123:45"><operator pos:start="121:17" pos:end="121:17">(</operator><name pos:start="121:18" pos:end="121:21">actl</name> <operator pos:start="121:23" pos:end="121:23">&amp;</operator> <name pos:start="121:25" pos:end="121:38">SCSW_ACTL_SUSP</name><operator pos:start="121:39" pos:end="121:39">)</operator> <operator pos:start="121:41" pos:end="121:42">&amp;&amp;</operator>

                <operator pos:start="123:17" pos:end="123:17">(</operator><name pos:start="123:18" pos:end="123:21">fctl</name> <operator pos:start="123:23" pos:end="123:23">&amp;</operator> <name pos:start="123:25" pos:end="123:44">SCSW_FCTL_START_FUNC</name><operator pos:start="123:45" pos:end="123:45">)</operator></expr>)</condition> <block pos:start="123:48" pos:end="145:13">{<block_content pos:start="125:17" pos:end="143:17">

                <expr_stmt pos:start="125:17" pos:end="125:49"><expr pos:start="125:17" pos:end="125:48"><name pos:start="125:17" pos:end="125:24"><name pos:start="125:17" pos:end="125:17">s</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:24">flags</name></name> <operator pos:start="125:26" pos:end="125:27">&amp;=</operator> <operator pos:start="125:29" pos:end="125:29">~</operator><name pos:start="125:30" pos:end="125:48">SCSW_FLAGS_MASK_PNO</name></expr>;</expr_stmt>

                <if_stmt pos:start="127:17" pos:end="143:17"><if pos:start="127:17" pos:end="139:17">if <condition pos:start="127:20" pos:end="127:47">(<expr pos:start="127:21" pos:end="127:46"><name pos:start="127:21" pos:end="127:24">fctl</name> <operator pos:start="127:26" pos:end="127:26">&amp;</operator> <name pos:start="127:28" pos:end="127:46">SCSW_FCTL_HALT_FUNC</name></expr>)</condition> <block pos:start="127:49" pos:end="139:17">{<block_content pos:start="129:21" pos:end="137:49">

                    <expr_stmt pos:start="129:21" pos:end="137:49"><expr pos:start="129:21" pos:end="137:48"><name pos:start="129:21" pos:end="129:27"><name pos:start="129:21" pos:end="129:21">s</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:27">ctrl</name></name> <operator pos:start="129:29" pos:end="129:30">&amp;=</operator> <operator pos:start="129:32" pos:end="129:32">~</operator><operator pos:start="129:33" pos:end="129:33">(</operator><name pos:start="129:34" pos:end="129:54">SCSW_ACTL_RESUME_PEND</name> <operator pos:start="129:56" pos:end="129:56">|</operator>

                                 <name pos:start="131:34" pos:end="131:53">SCSW_ACTL_START_PEND</name> <operator pos:start="131:55" pos:end="131:55">|</operator>

                                 <name pos:start="133:34" pos:end="133:52">SCSW_ACTL_HALT_PEND</name> <operator pos:start="133:54" pos:end="133:54">|</operator>

                                 <name pos:start="135:34" pos:end="135:53">SCSW_ACTL_CLEAR_PEND</name> <operator pos:start="135:55" pos:end="135:55">|</operator>

                                 <name pos:start="137:34" pos:end="137:47">SCSW_ACTL_SUSP</name><operator pos:start="137:48" pos:end="137:48">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="139:19" pos:end="143:17">else <block pos:start="139:24" pos:end="143:17">{<block_content pos:start="141:21" pos:end="141:54">

                    <expr_stmt pos:start="141:21" pos:end="141:54"><expr pos:start="141:21" pos:end="141:53"><name pos:start="141:21" pos:end="141:27"><name pos:start="141:21" pos:end="141:21">s</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:27">ctrl</name></name> <operator pos:start="141:29" pos:end="141:30">&amp;=</operator> <operator pos:start="141:32" pos:end="141:32">~</operator><name pos:start="141:33" pos:end="141:53">SCSW_ACTL_RESUME_PEND</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="149:9" pos:end="149:39">/* Clear pending sense data. */</comment>

        <if_stmt pos:start="151:9" pos:end="155:9"><if pos:start="151:9" pos:end="155:9">if <condition pos:start="151:12" pos:end="151:46">(<expr pos:start="151:13" pos:end="151:45"><name pos:start="151:13" pos:end="151:20"><name pos:start="151:13" pos:end="151:13">p</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:20">chars</name></name> <operator pos:start="151:22" pos:end="151:22">&amp;</operator> <name pos:start="151:24" pos:end="151:45">PMCW_CHARS_MASK_CSENSE</name></expr>)</condition> <block pos:start="151:48" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:65">

            <expr_stmt pos:start="153:13" pos:end="153:65"><expr pos:start="153:13" pos:end="153:64"><call pos:start="153:13" pos:end="153:64"><name pos:start="153:13" pos:end="153:18">memset</name><argument_list pos:start="153:19" pos:end="153:64">(<argument pos:start="153:20" pos:end="153:34"><expr pos:start="153:20" pos:end="153:34"><name pos:start="153:20" pos:end="153:34"><name pos:start="153:20" pos:end="153:22">sch</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:34">sense_data</name></name></expr></argument>, <argument pos:start="153:37" pos:end="153:37"><expr pos:start="153:37" pos:end="153:37"><literal type="number" pos:start="153:37" pos:end="153:37">0</literal></expr></argument> , <argument pos:start="153:41" pos:end="153:63"><expr pos:start="153:41" pos:end="153:63"><sizeof pos:start="153:41" pos:end="153:63">sizeof<argument_list pos:start="153:47" pos:end="153:63">(<argument pos:start="153:48" pos:end="153:62"><expr pos:start="153:48" pos:end="153:62"><name pos:start="153:48" pos:end="153:62"><name pos:start="153:48" pos:end="153:50">sch</name><operator pos:start="153:51" pos:end="153:52">-&gt;</operator><name pos:start="153:53" pos:end="153:62">sense_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:50"><expr pos:start="161:5" pos:end="161:49"><name pos:start="161:5" pos:end="161:7">ret</name> <operator pos:start="161:9" pos:end="161:9">=</operator> <operator pos:start="161:11" pos:end="161:11">(</operator><operator pos:start="161:12" pos:end="161:12">(</operator><name pos:start="161:13" pos:end="161:17">stctl</name> <operator pos:start="161:19" pos:end="161:19">&amp;</operator> <name pos:start="161:21" pos:end="161:42">SCSW_STCTL_STATUS_PEND</name><operator pos:start="161:43" pos:end="161:43">)</operator> <operator pos:start="161:45" pos:end="161:46">==</operator> <literal type="number" pos:start="161:48" pos:end="161:48">0</literal><operator pos:start="161:49" pos:end="161:49">)</operator></expr>;</expr_stmt>



<label pos:start="165:1" pos:end="165:4"><name pos:start="165:1" pos:end="165:3">out</name>:</label>

    <return pos:start="167:5" pos:end="167:15">return <expr pos:start="167:12" pos:end="167:14"><name pos:start="167:12" pos:end="167:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
