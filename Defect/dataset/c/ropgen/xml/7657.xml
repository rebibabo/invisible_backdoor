<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7657.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">ipmi_sim_handle_command</name><parameter_list pos:start="1:36" pos:end="7:51">(<parameter pos:start="1:37" pos:end="1:46"><decl pos:start="1:37" pos:end="1:46"><type pos:start="1:37" pos:end="1:46"><name pos:start="1:37" pos:end="1:43">IPMIBmc</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">b</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:48"><decl pos:start="3:37" pos:end="3:48"><type pos:start="3:37" pos:end="3:48"><name pos:start="3:37" pos:end="3:43">uint8_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">cmd</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:70"><decl pos:start="3:51" pos:end="3:70"><type pos:start="3:51" pos:end="3:70"><name pos:start="3:51" pos:end="3:58">unsigned</name> <name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:70">cmd_len</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:60"><decl pos:start="5:37" pos:end="5:60"><type pos:start="5:37" pos:end="5:60"><name pos:start="5:37" pos:end="5:44">unsigned</name> <name pos:start="5:46" pos:end="5:48">int</name></type> <name pos:start="5:50" pos:end="5:60">max_cmd_len</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:50"><decl pos:start="7:37" pos:end="7:50"><type pos:start="7:37" pos:end="7:50"><name pos:start="7:37" pos:end="7:43">uint8_t</name></type> <name pos:start="7:45" pos:end="7:50">msg_id</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="117:1">{<block_content pos:start="11:5" pos:end="115:22">

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">IPMIBmcSim</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:19">ibs</name> <init pos:start="11:21" pos:end="11:43">= <expr pos:start="11:23" pos:end="11:43"><call pos:start="11:23" pos:end="11:43"><name pos:start="11:23" pos:end="11:40">IPMI_BMC_SIMULATOR</name><argument_list pos:start="11:41" pos:end="11:43">(<argument pos:start="11:42" pos:end="11:42"><expr pos:start="11:42" pos:end="11:42"><name pos:start="11:42" pos:end="11:42">b</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:39"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">IPMIInterface</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">s</name> <init pos:start="13:22" pos:end="13:39">= <expr pos:start="13:24" pos:end="13:39"><name pos:start="13:24" pos:end="13:39"><name pos:start="13:24" pos:end="13:26">ibs</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:34">parent</name><operator pos:start="13:35" pos:end="13:35">.</operator><name pos:start="13:36" pos:end="13:39">intf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:56"><decl pos:start="15:5" pos:end="15:55"><type pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:22">IPMIInterfaceClass</name> <modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:25">k</name> <init pos:start="15:27" pos:end="15:55">= <expr pos:start="15:29" pos:end="15:55"><call pos:start="15:29" pos:end="15:55"><name pos:start="15:29" pos:end="15:52">IPMI_INTERFACE_GET_CLASS</name><argument_list pos:start="15:53" pos:end="15:55">(<argument pos:start="15:54" pos:end="15:54"><expr pos:start="15:54" pos:end="15:54"><name pos:start="15:54" pos:end="15:54">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:22">netfn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:35"><decl pos:start="19:5" pos:end="19:34"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">uint8_t</name></type> <name pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:15">rsp</name><index pos:start="19:16" pos:end="19:34">[<expr pos:start="19:17" pos:end="19:33"><name pos:start="19:17" pos:end="19:33">MAX_IPMI_MSG_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:36"><decl pos:start="21:5" pos:end="21:35"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:16">int</name></type> <name pos:start="21:18" pos:end="21:31">rsp_len_holder</name> <init pos:start="21:33" pos:end="21:35">= <expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:44"><decl pos:start="23:5" pos:end="23:43"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:12">unsigned</name> <name pos:start="23:14" pos:end="23:16">int</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:25">rsp_len</name> <init pos:start="23:27" pos:end="23:43">= <expr pos:start="23:29" pos:end="23:43"><operator pos:start="23:29" pos:end="23:29">&amp;</operator><name pos:start="23:30" pos:end="23:43">rsp_len_holder</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:43"><decl pos:start="25:5" pos:end="25:42"><type pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:12">unsigned</name> <name pos:start="25:14" pos:end="25:16">int</name></type> <name pos:start="25:18" pos:end="25:28">max_rsp_len</name> <init pos:start="25:30" pos:end="25:42">= <expr pos:start="25:32" pos:end="25:42"><sizeof pos:start="25:32" pos:end="25:42">sizeof<argument_list pos:start="25:38" pos:end="25:42">(<argument pos:start="25:39" pos:end="25:41"><expr pos:start="25:39" pos:end="25:41"><name pos:start="25:39" pos:end="25:41">rsp</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:56">/* Set up the response, set the low bit of NETFN. */</comment>

    <comment type="block" pos:start="31:5" pos:end="31:50">/* Note that max_rsp_len must be at least 3 */</comment>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:24">(<expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:19">max_rsp_len</name> <operator pos:start="33:21" pos:end="33:21">&lt;</operator> <literal type="number" pos:start="33:23" pos:end="33:23">3</literal></expr>)</condition> <block pos:start="33:26" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <expr_stmt pos:start="35:9" pos:end="35:48"><expr pos:start="35:9" pos:end="35:47"><name pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:11">rsp</name><index pos:start="35:12" pos:end="35:14">[<expr pos:start="35:13" pos:end="35:13"><literal type="number" pos:start="35:13" pos:end="35:13">2</literal></expr>]</index></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:47">IPMI_CC_REQUEST_DATA_TRUNCATED</name></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:17">goto <name pos:start="37:14" pos:end="37:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><call pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:21">IPMI_ADD_RSP_DATA</name><argument_list pos:start="43:22" pos:end="43:36">(<argument pos:start="43:23" pos:end="43:35"><expr pos:start="43:23" pos:end="43:35"><name pos:start="43:23" pos:end="43:28"><name pos:start="43:23" pos:end="43:25">cmd</name><index pos:start="43:26" pos:end="43:28">[<expr pos:start="43:27" pos:end="43:27"><literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr>]</index></name> <operator pos:start="43:30" pos:end="43:30">|</operator> <literal type="number" pos:start="43:32" pos:end="43:35">0x04</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><call pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:21">IPMI_ADD_RSP_DATA</name><argument_list pos:start="45:22" pos:end="45:29">(<argument pos:start="45:23" pos:end="45:28"><expr pos:start="45:23" pos:end="45:28"><name pos:start="45:23" pos:end="45:28"><name pos:start="45:23" pos:end="45:25">cmd</name><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><literal type="number" pos:start="45:27" pos:end="45:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:25"><expr pos:start="47:5" pos:end="47:24"><call pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:21">IPMI_ADD_RSP_DATA</name><argument_list pos:start="47:22" pos:end="47:24">(<argument pos:start="47:23" pos:end="47:23"><expr pos:start="47:23" pos:end="47:23"><literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="47:27" pos:end="47:46">/* Assume success */</comment>



    <comment type="block" pos:start="51:5" pos:end="51:65">/* If it's too short or it was truncated, return an error. */</comment>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:20">(<expr pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:15">cmd_len</name> <operator pos:start="53:17" pos:end="53:17">&lt;</operator> <literal type="number" pos:start="53:19" pos:end="53:19">2</literal></expr>)</condition> <block pos:start="53:22" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:17">

        <expr_stmt pos:start="55:9" pos:end="55:53"><expr pos:start="55:9" pos:end="55:52"><name pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:11">rsp</name><index pos:start="55:12" pos:end="55:14">[<expr pos:start="55:13" pos:end="55:13"><literal type="number" pos:start="55:13" pos:end="55:13">2</literal></expr>]</index></name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:52">IPMI_CC_REQUEST_DATA_LENGTH_INVALID</name></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:30">(<expr pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:15">cmd_len</name> <operator pos:start="61:17" pos:end="61:17">&gt;</operator> <name pos:start="61:19" pos:end="61:29">max_cmd_len</name></expr>)</condition> <block pos:start="61:32" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:17">

        <expr_stmt pos:start="63:9" pos:end="63:48"><expr pos:start="63:9" pos:end="63:47"><name pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:11">rsp</name><index pos:start="63:12" pos:end="63:14">[<expr pos:start="63:13" pos:end="63:13"><literal type="number" pos:start="63:13" pos:end="63:13">2</literal></expr>]</index></name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:47">IPMI_CC_REQUEST_DATA_TRUNCATED</name></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:17">goto <name pos:start="65:14" pos:end="65:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="71:29">(<expr pos:start="71:9" pos:end="71:28"><operator pos:start="71:9" pos:end="71:9">(</operator><name pos:start="71:10" pos:end="71:15"><name pos:start="71:10" pos:end="71:12">cmd</name><index pos:start="71:13" pos:end="71:15">[<expr pos:start="71:14" pos:end="71:14"><literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>]</index></name> <operator pos:start="71:17" pos:end="71:17">&amp;</operator> <literal type="number" pos:start="71:19" pos:end="71:22">0x03</literal><operator pos:start="71:23" pos:end="71:23">)</operator> <operator pos:start="71:25" pos:end="71:26">!=</operator> <literal type="number" pos:start="71:28" pos:end="71:28">0</literal></expr>)</condition> <block pos:start="71:31" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:17">

        <comment type="block" pos:start="73:9" pos:end="73:38">/* Only have stuff on LUN 0 */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:49"><expr pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:11">rsp</name><index pos:start="75:12" pos:end="75:14">[<expr pos:start="75:13" pos:end="75:13"><literal type="number" pos:start="75:13" pos:end="75:13">2</literal></expr>]</index></name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:48">IPMI_CC_COMMAND_INVALID_FOR_LUN</name></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:17">goto <name pos:start="77:14" pos:end="77:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:24"><expr pos:start="83:5" pos:end="83:23"><name pos:start="83:5" pos:end="83:9">netfn</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <name pos:start="83:13" pos:end="83:18"><name pos:start="83:13" pos:end="83:15">cmd</name><index pos:start="83:16" pos:end="83:18">[<expr pos:start="83:17" pos:end="83:17"><literal type="number" pos:start="83:17" pos:end="83:17">0</literal></expr>]</index></name> <operator pos:start="83:20" pos:end="83:21">&gt;&gt;</operator> <literal type="number" pos:start="83:23" pos:end="83:23">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:71">/* Odd netfns are not valid, make sure the command is registered */</comment>

    <if_stmt pos:start="89:5" pos:end="99:5"><if pos:start="89:5" pos:end="99:5">if <condition pos:start="89:8" pos:end="93:72">(<expr pos:start="89:9" pos:end="93:71"><operator pos:start="89:9" pos:end="89:9">(</operator><name pos:start="89:10" pos:end="89:14">netfn</name> <operator pos:start="89:16" pos:end="89:16">&amp;</operator> <literal type="number" pos:start="89:18" pos:end="89:18">1</literal><operator pos:start="89:19" pos:end="89:19">)</operator> <operator pos:start="89:21" pos:end="89:22">||</operator> <operator pos:start="89:24" pos:end="89:24">!</operator><name pos:start="89:25" pos:end="89:46"><name pos:start="89:25" pos:end="89:27">ibs</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:35">netfns</name><index pos:start="89:36" pos:end="89:46">[<expr pos:start="89:37" pos:end="89:45"><name pos:start="89:37" pos:end="89:41">netfn</name> <operator pos:start="89:43" pos:end="89:43">/</operator> <literal type="number" pos:start="89:45" pos:end="89:45">2</literal></expr>]</index></name> <operator pos:start="89:48" pos:end="89:49">||</operator>

                        <operator pos:start="91:25" pos:end="91:25">(</operator><name pos:start="91:26" pos:end="91:31"><name pos:start="91:26" pos:end="91:28">cmd</name><index pos:start="91:29" pos:end="91:31">[<expr pos:start="91:30" pos:end="91:30"><literal type="number" pos:start="91:30" pos:end="91:30">1</literal></expr>]</index></name> <operator pos:start="91:33" pos:end="91:34">&gt;=</operator> <name pos:start="91:36" pos:end="91:57"><name pos:start="91:36" pos:end="91:38">ibs</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:46">netfns</name><index pos:start="91:47" pos:end="91:57">[<expr pos:start="91:48" pos:end="91:56"><name pos:start="91:48" pos:end="91:52">netfn</name> <operator pos:start="91:54" pos:end="91:54">/</operator> <literal type="number" pos:start="91:56" pos:end="91:56">2</literal></expr>]</index></name><operator pos:start="91:58" pos:end="91:59">-&gt;</operator><name pos:start="91:60" pos:end="91:67">cmd_nums</name><operator pos:start="91:68" pos:end="91:68">)</operator> <operator pos:start="91:70" pos:end="91:71">||</operator>

                        <operator pos:start="93:25" pos:end="93:25">(</operator><operator pos:start="93:26" pos:end="93:26">!</operator><name pos:start="93:27" pos:end="93:48"><name pos:start="93:27" pos:end="93:29">ibs</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:37">netfns</name><index pos:start="93:38" pos:end="93:48">[<expr pos:start="93:39" pos:end="93:47"><name pos:start="93:39" pos:end="93:43">netfn</name> <operator pos:start="93:45" pos:end="93:45">/</operator> <literal type="number" pos:start="93:47" pos:end="93:47">2</literal></expr>]</index></name><operator pos:start="93:49" pos:end="93:50">-&gt;</operator><name pos:start="93:51" pos:end="93:70"><name pos:start="93:51" pos:end="93:62">cmd_handlers</name><index pos:start="93:63" pos:end="93:70">[<expr pos:start="93:64" pos:end="93:69"><name pos:start="93:64" pos:end="93:69"><name pos:start="93:64" pos:end="93:66">cmd</name><index pos:start="93:67" pos:end="93:69">[<expr pos:start="93:68" pos:end="93:68"><literal type="number" pos:start="93:68" pos:end="93:68">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="93:71" pos:end="93:71">)</operator></expr>)</condition> <block pos:start="93:74" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:17">

        <expr_stmt pos:start="95:9" pos:end="95:37"><expr pos:start="95:9" pos:end="95:36"><name pos:start="95:9" pos:end="95:14"><name pos:start="95:9" pos:end="95:11">rsp</name><index pos:start="95:12" pos:end="95:14">[<expr pos:start="95:13" pos:end="95:13"><literal type="number" pos:start="95:13" pos:end="95:13">2</literal></expr>]</index></name> <operator pos:start="95:16" pos:end="95:16">=</operator> <name pos:start="95:18" pos:end="95:36">IPMI_CC_INVALID_CMD</name></expr>;</expr_stmt>

        <goto pos:start="97:9" pos:end="97:17">goto <name pos:start="97:14" pos:end="97:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="105:61"><expr pos:start="103:5" pos:end="105:60"><name pos:start="103:5" pos:end="103:26"><name pos:start="103:5" pos:end="103:7">ibs</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:15">netfns</name><index pos:start="103:16" pos:end="103:26">[<expr pos:start="103:17" pos:end="103:25"><name pos:start="103:17" pos:end="103:21">netfn</name> <operator pos:start="103:23" pos:end="103:23">/</operator> <literal type="number" pos:start="103:25" pos:end="103:25">2</literal></expr>]</index></name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:48"><name pos:start="103:29" pos:end="103:40">cmd_handlers</name><index pos:start="103:41" pos:end="103:48">[<expr pos:start="103:42" pos:end="103:47"><name pos:start="103:42" pos:end="103:47"><name pos:start="103:42" pos:end="103:44">cmd</name><index pos:start="103:45" pos:end="103:47">[<expr pos:start="103:46" pos:end="103:46"><literal type="number" pos:start="103:46" pos:end="103:46">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="103:49" pos:end="103:49">(</operator><name pos:start="103:50" pos:end="103:52">ibs</name><operator pos:start="103:53" pos:end="103:53">,</operator> <name pos:start="103:55" pos:end="103:57">cmd</name><operator pos:start="103:58" pos:end="103:58">,</operator> <name pos:start="103:60" pos:end="103:66">cmd_len</name><operator pos:start="103:67" pos:end="103:67">,</operator> <name pos:start="103:69" pos:end="103:71">rsp</name><operator pos:start="103:72" pos:end="103:72">,</operator> <name pos:start="103:74" pos:end="103:80">rsp_len</name><operator pos:start="103:81" pos:end="103:81">,</operator>

                                                <name pos:start="105:49" pos:end="105:59">max_rsp_len</name><operator pos:start="105:60" pos:end="105:60">)</operator></expr>;</expr_stmt>



 <label pos:start="109:2" pos:end="109:5"><name pos:start="109:2" pos:end="109:4">out</name>:</label>

    <expr_stmt pos:start="111:5" pos:end="111:44"><expr pos:start="111:5" pos:end="111:43"><call pos:start="111:5" pos:end="111:43"><name pos:start="111:5" pos:end="111:17"><name pos:start="111:5" pos:end="111:5">k</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:17">handle_rsp</name></name><argument_list pos:start="111:18" pos:end="111:43">(<argument pos:start="111:19" pos:end="111:19"><expr pos:start="111:19" pos:end="111:19"><name pos:start="111:19" pos:end="111:19">s</name></expr></argument>, <argument pos:start="111:22" pos:end="111:27"><expr pos:start="111:22" pos:end="111:27"><name pos:start="111:22" pos:end="111:27">msg_id</name></expr></argument>, <argument pos:start="111:30" pos:end="111:32"><expr pos:start="111:30" pos:end="111:32"><name pos:start="111:30" pos:end="111:32">rsp</name></expr></argument>, <argument pos:start="111:35" pos:end="111:42"><expr pos:start="111:35" pos:end="111:42"><operator pos:start="111:35" pos:end="111:35">*</operator><name pos:start="111:36" pos:end="111:42">rsp_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:22"><expr pos:start="115:5" pos:end="115:21"><call pos:start="115:5" pos:end="115:21"><name pos:start="115:5" pos:end="115:16">next_timeout</name><argument_list pos:start="115:17" pos:end="115:21">(<argument pos:start="115:18" pos:end="115:20"><expr pos:start="115:18" pos:end="115:20"><name pos:start="115:18" pos:end="115:20">ibs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
