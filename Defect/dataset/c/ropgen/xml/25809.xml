<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25809.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">qmp_guest_file_close</name><parameter_list pos:start="1:26" pos:end="1:54">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:33">int64_t</name></type> <name pos:start="1:35" pos:end="1:40">handle</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:47">Error</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier><modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">err</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:16">

    <decl_stmt pos:start="5:5" pos:end="5:63"><decl pos:start="5:5" pos:end="5:62"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">GuestFileHandle</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">gfh</name> <init pos:start="5:26" pos:end="5:62">= <expr pos:start="5:28" pos:end="5:62"><call pos:start="5:28" pos:end="5:62"><name pos:start="5:28" pos:end="5:49">guest_file_handle_find</name><argument_list pos:start="5:50" pos:end="5:62">(<argument pos:start="5:51" pos:end="5:56"><expr pos:start="5:51" pos:end="5:56"><name pos:start="5:51" pos:end="5:56">handle</name></expr></argument>, <argument pos:start="5:59" pos:end="5:61"><expr pos:start="5:59" pos:end="5:61"><name pos:start="5:59" pos:end="5:61">err</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:57"><expr pos:start="11:5" pos:end="11:56"><call pos:start="11:5" pos:end="11:56"><name pos:start="11:5" pos:end="11:8">slog</name><argument_list pos:start="11:9" pos:end="11:56">(<argument pos:start="11:10" pos:end="11:47"><expr pos:start="11:10" pos:end="11:47"><literal type="string" pos:start="11:10" pos:end="11:47">"guest-file-close called, handle: %ld"</literal></expr></argument>, <argument pos:start="11:50" pos:end="11:55"><expr pos:start="11:50" pos:end="11:55"><name pos:start="11:50" pos:end="11:55">handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:13">(<expr pos:start="13:9" pos:end="13:12"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:12">gfh</name></expr>)</condition> <block pos:start="13:15" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:25"><name pos:start="21:11" pos:end="21:16">fclose</name><argument_list pos:start="21:17" pos:end="21:25">(<argument pos:start="21:18" pos:end="21:24"><expr pos:start="21:18" pos:end="21:24"><name pos:start="21:18" pos:end="21:24"><name pos:start="21:18" pos:end="21:20">gfh</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:24">fh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:14">==</operator> <operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>)</condition> <block pos:start="23:20" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:15">

        <expr_stmt pos:start="25:9" pos:end="25:67"><expr pos:start="25:9" pos:end="25:66"><call pos:start="25:9" pos:end="25:66"><name pos:start="25:9" pos:end="25:17">error_set</name><argument_list pos:start="25:18" pos:end="25:66">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">err</name></expr></argument>, <argument pos:start="25:24" pos:end="25:46"><expr pos:start="25:24" pos:end="25:46"><name pos:start="25:24" pos:end="25:46">QERR_QGA_COMMAND_FAILED</name></expr></argument>, <argument pos:start="25:49" pos:end="25:65"><expr pos:start="25:49" pos:end="25:65"><literal type="string" pos:start="25:49" pos:end="25:65">"fclose() failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:60"><expr pos:start="33:5" pos:end="33:59"><call pos:start="33:5" pos:end="33:59"><name pos:start="33:5" pos:end="33:17">QTAILQ_REMOVE</name><argument_list pos:start="33:18" pos:end="33:59">(<argument pos:start="33:19" pos:end="33:47"><expr pos:start="33:19" pos:end="33:47"><operator pos:start="33:19" pos:end="33:19">&amp;</operator><name pos:start="33:20" pos:end="33:47"><name pos:start="33:20" pos:end="33:35">guest_file_state</name><operator pos:start="33:36" pos:end="33:36">.</operator><name pos:start="33:37" pos:end="33:47">filehandles</name></name></expr></argument>, <argument pos:start="33:50" pos:end="33:52"><expr pos:start="33:50" pos:end="33:52"><name pos:start="33:50" pos:end="33:52">gfh</name></expr></argument>, <argument pos:start="33:55" pos:end="33:58"><expr pos:start="33:55" pos:end="33:58"><name pos:start="33:55" pos:end="33:58">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:16"><expr pos:start="35:5" pos:end="35:15"><call pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:10">g_free</name><argument_list pos:start="35:11" pos:end="35:15">(<argument pos:start="35:12" pos:end="35:14"><expr pos:start="35:12" pos:end="35:14"><name pos:start="35:12" pos:end="35:14">gfh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
