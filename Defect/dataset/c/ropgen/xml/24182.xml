<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24182.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">process_cc608</name><parameter_list pos:start="1:25" pos:end="1:86">(<parameter pos:start="1:26" pos:end="1:48"><decl pos:start="1:26" pos:end="1:48"><type pos:start="1:26" pos:end="1:48"><name pos:start="1:26" pos:end="1:43">CCaptionSubContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:57">int64_t</name></type> <name pos:start="1:59" pos:end="1:61">pts</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:73"><decl pos:start="1:64" pos:end="1:73"><type pos:start="1:64" pos:end="1:73"><name pos:start="1:64" pos:end="1:70">uint8_t</name></type> <name pos:start="1:72" pos:end="1:73">hi</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:85"><decl pos:start="1:76" pos:end="1:85"><type pos:start="1:76" pos:end="1:85"><name pos:start="1:76" pos:end="1:82">uint8_t</name></type> <name pos:start="1:84" pos:end="1:85">lo</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="119:15">

    <decl_stmt pos:start="5:5" pos:end="8:0"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

<cpp:define pos:start="7:1" pos:end="7:101">#<cpp:directive pos:start="7:2" pos:end="7:7">define</cpp:directive> <cpp:macro pos:start="7:9" pos:end="7:38"><name pos:start="7:9" pos:end="7:12">COR3</name><parameter_list pos:start="7:13" pos:end="7:38">(<parameter pos:start="7:14" pos:end="7:16"><type pos:start="7:14" pos:end="7:16"><name pos:start="7:14" pos:end="7:16">var</name></type></parameter>, <parameter pos:start="7:19" pos:end="7:23"><type pos:start="7:19" pos:end="7:23"><name pos:start="7:19" pos:end="7:23">with1</name></type></parameter>, <parameter pos:start="7:26" pos:end="7:30"><type pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:30">with2</name></type></parameter>, <parameter pos:start="7:33" pos:end="7:37"><type pos:start="7:33" pos:end="7:37"><name pos:start="7:33" pos:end="7:37">with3</name></type></parameter>)</parameter_list></cpp:macro>  <cpp:value pos:start="7:41" pos:end="7:101">( (var) == (with1) ||  (var) == (with2) || (var) == (with3) )</cpp:value></cpp:define>

    <if_stmt pos:start="9:5" pos:end="105:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:58">( <expr pos:start="9:10" pos:end="9:57"><name pos:start="9:10" pos:end="9:11">hi</name> <operator pos:start="9:13" pos:end="9:14">==</operator> <name pos:start="9:16" pos:end="9:31"><name pos:start="9:16" pos:end="9:18">ctx</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:28">prev_cmd</name><index pos:start="9:29" pos:end="9:31">[<expr pos:start="9:30" pos:end="9:30"><literal type="number" pos:start="9:30" pos:end="9:30">0</literal></expr>]</index></name> <operator pos:start="9:33" pos:end="9:34">&amp;&amp;</operator> <name pos:start="9:36" pos:end="9:37">lo</name> <operator pos:start="9:39" pos:end="9:40">==</operator> <name pos:start="9:42" pos:end="9:57"><name pos:start="9:42" pos:end="9:44">ctx</name><operator pos:start="9:45" pos:end="9:46">-&gt;</operator><name pos:start="9:47" pos:end="9:54">prev_cmd</name><index pos:start="9:55" pos:end="9:57">[<expr pos:start="9:56" pos:end="9:56"><literal type="number" pos:start="9:56" pos:end="9:56">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="9:60" pos:end="13:5">{<block_content>

    <comment type="block" pos:start="11:5" pos:end="11:34">/* ignore redundant command */</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="13:7" pos:end="19:5">else if <condition pos:start="13:15" pos:end="15:76">( <expr pos:start="13:17" pos:end="15:74"><operator pos:start="13:17" pos:end="13:17">(</operator><name pos:start="13:18" pos:end="13:19">hi</name> <operator pos:start="13:21" pos:end="13:22">==</operator> <literal type="number" pos:start="13:24" pos:end="13:27">0x10</literal> <operator pos:start="13:29" pos:end="13:30">&amp;&amp;</operator> <operator pos:start="13:32" pos:end="13:32">(</operator><name pos:start="13:33" pos:end="13:34">lo</name> <operator pos:start="13:36" pos:end="13:37">&gt;=</operator> <literal type="number" pos:start="13:39" pos:end="13:42">0x40</literal> <operator pos:start="13:44" pos:end="13:45">||</operator> <name pos:start="13:47" pos:end="13:48">lo</name> <operator pos:start="13:50" pos:end="13:51">&lt;=</operator> <literal type="number" pos:start="13:53" pos:end="13:56">0x5f</literal><operator pos:start="13:57" pos:end="13:57">)</operator><operator pos:start="13:58" pos:end="13:58">)</operator> <operator pos:start="13:60" pos:end="13:61">||</operator>

              <operator pos:start="15:15" pos:end="15:15">(</operator> <operator pos:start="15:17" pos:end="15:17">(</operator><name pos:start="15:18" pos:end="15:19">hi</name> <operator pos:start="15:21" pos:end="15:22">&gt;=</operator> <literal type="number" pos:start="15:24" pos:end="15:27">0x11</literal> <operator pos:start="15:29" pos:end="15:30">&amp;&amp;</operator> <name pos:start="15:32" pos:end="15:33">hi</name> <operator pos:start="15:35" pos:end="15:36">&lt;=</operator> <literal type="number" pos:start="15:38" pos:end="15:41">0x17</literal><operator pos:start="15:42" pos:end="15:42">)</operator> <operator pos:start="15:44" pos:end="15:45">&amp;&amp;</operator> <operator pos:start="15:47" pos:end="15:47">(</operator><name pos:start="15:48" pos:end="15:49">lo</name> <operator pos:start="15:51" pos:end="15:52">&gt;=</operator> <literal type="number" pos:start="15:54" pos:end="15:57">0x40</literal> <operator pos:start="15:59" pos:end="15:60">&amp;&amp;</operator> <name pos:start="15:62" pos:end="15:63">lo</name> <operator pos:start="15:65" pos:end="15:66">&lt;=</operator> <literal type="number" pos:start="15:68" pos:end="15:71">0x7f</literal><operator pos:start="15:72" pos:end="15:72">)</operator> <operator pos:start="15:74" pos:end="15:74">)</operator></expr> )</condition> <block pos:start="15:78" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:32">

        <expr_stmt pos:start="17:9" pos:end="17:32"><expr pos:start="17:9" pos:end="17:31"><call pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:18">handle_pac</name><argument_list pos:start="17:19" pos:end="17:31">(<argument pos:start="17:20" pos:end="17:22"><expr pos:start="17:20" pos:end="17:22"><name pos:start="17:20" pos:end="17:22">ctx</name></expr></argument>, <argument pos:start="17:25" pos:end="17:26"><expr pos:start="17:25" pos:end="17:26"><name pos:start="17:25" pos:end="17:26">hi</name></expr></argument>, <argument pos:start="17:29" pos:end="17:30"><expr pos:start="17:29" pos:end="17:30"><name pos:start="17:29" pos:end="17:30">lo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="25:5">else if <condition pos:start="19:15" pos:end="21:59">( <expr pos:start="19:17" pos:end="21:57"><operator pos:start="19:17" pos:end="19:17">(</operator> <name pos:start="19:19" pos:end="19:20">hi</name> <operator pos:start="19:22" pos:end="19:23">==</operator> <literal type="number" pos:start="19:25" pos:end="19:28">0x11</literal> <operator pos:start="19:30" pos:end="19:31">&amp;&amp;</operator> <name pos:start="19:33" pos:end="19:34">lo</name> <operator pos:start="19:36" pos:end="19:37">&gt;=</operator> <literal type="number" pos:start="19:39" pos:end="19:42">0x20</literal> <operator pos:start="19:44" pos:end="19:45">&amp;&amp;</operator> <name pos:start="19:47" pos:end="19:48">lo</name> <operator pos:start="19:50" pos:end="19:51">&lt;=</operator> <literal type="number" pos:start="19:53" pos:end="19:56">0x2f</literal> <operator pos:start="19:58" pos:end="19:58">)</operator> <operator pos:start="19:60" pos:end="19:61">||</operator>

                <operator pos:start="21:17" pos:end="21:17">(</operator> <name pos:start="21:19" pos:end="21:20">hi</name> <operator pos:start="21:22" pos:end="21:23">==</operator> <literal type="number" pos:start="21:25" pos:end="21:28">0x17</literal> <operator pos:start="21:30" pos:end="21:31">&amp;&amp;</operator> <name pos:start="21:33" pos:end="21:34">lo</name> <operator pos:start="21:36" pos:end="21:37">&gt;=</operator> <literal type="number" pos:start="21:39" pos:end="21:42">0x2e</literal> <operator pos:start="21:44" pos:end="21:45">&amp;&amp;</operator> <name pos:start="21:47" pos:end="21:48">lo</name> <operator pos:start="21:50" pos:end="21:51">&lt;=</operator> <literal type="number" pos:start="21:53" pos:end="21:56">0x2f</literal><operator pos:start="21:57" pos:end="21:57">)</operator></expr> )</condition> <block pos:start="21:61" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:37">

        <expr_stmt pos:start="23:9" pos:end="23:37"><expr pos:start="23:9" pos:end="23:36"><call pos:start="23:9" pos:end="23:36"><name pos:start="23:9" pos:end="23:23">handle_textattr</name><argument_list pos:start="23:24" pos:end="23:36">(<argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:27">ctx</name></expr></argument>, <argument pos:start="23:30" pos:end="23:31"><expr pos:start="23:30" pos:end="23:31"><name pos:start="23:30" pos:end="23:31">hi</name></expr></argument>, <argument pos:start="23:34" pos:end="23:35"><expr pos:start="23:34" pos:end="23:35"><name pos:start="23:34" pos:end="23:35">lo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="31:5">else if <condition pos:start="25:15" pos:end="25:58">( <expr pos:start="25:17" pos:end="25:56"><call pos:start="25:17" pos:end="25:42"><name pos:start="25:17" pos:end="25:20">COR3</name><argument_list pos:start="25:21" pos:end="25:42">(<argument pos:start="25:22" pos:end="25:23"><expr pos:start="25:22" pos:end="25:23"><name pos:start="25:22" pos:end="25:23">hi</name></expr></argument>, <argument pos:start="25:26" pos:end="25:29"><expr pos:start="25:26" pos:end="25:29"><literal type="number" pos:start="25:26" pos:end="25:29">0x14</literal></expr></argument>, <argument pos:start="25:32" pos:end="25:35"><expr pos:start="25:32" pos:end="25:35"><literal type="number" pos:start="25:32" pos:end="25:35">0x15</literal></expr></argument>, <argument pos:start="25:38" pos:end="25:41"><expr pos:start="25:38" pos:end="25:41"><literal type="number" pos:start="25:38" pos:end="25:41">0x1C</literal></expr></argument>)</argument_list></call> <operator pos:start="25:44" pos:end="25:45">&amp;&amp;</operator> <name pos:start="25:47" pos:end="25:48">lo</name> <operator pos:start="25:50" pos:end="25:51">==</operator> <literal type="number" pos:start="25:53" pos:end="25:56">0x20</literal></expr> )</condition> <block pos:start="25:60" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:33">

    <comment type="block" pos:start="27:5" pos:end="27:32">/* resume caption loading */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:11">ctx</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:17">mode</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:32">CCMODE_POPON</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="35:5">else if <condition pos:start="31:15" pos:end="31:58">( <expr pos:start="31:17" pos:end="31:56"><call pos:start="31:17" pos:end="31:42"><name pos:start="31:17" pos:end="31:20">COR3</name><argument_list pos:start="31:21" pos:end="31:42">(<argument pos:start="31:22" pos:end="31:23"><expr pos:start="31:22" pos:end="31:23"><name pos:start="31:22" pos:end="31:23">hi</name></expr></argument>, <argument pos:start="31:26" pos:end="31:29"><expr pos:start="31:26" pos:end="31:29"><literal type="number" pos:start="31:26" pos:end="31:29">0x14</literal></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><literal type="number" pos:start="31:32" pos:end="31:35">0x15</literal></expr></argument>, <argument pos:start="31:38" pos:end="31:41"><expr pos:start="31:38" pos:end="31:41"><literal type="number" pos:start="31:38" pos:end="31:41">0x1C</literal></expr></argument>)</argument_list></call> <operator pos:start="31:44" pos:end="31:45">&amp;&amp;</operator> <name pos:start="31:47" pos:end="31:48">lo</name> <operator pos:start="31:50" pos:end="31:51">==</operator> <literal type="number" pos:start="31:53" pos:end="31:56">0x24</literal></expr> )</condition> <block pos:start="31:60" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:46">

        <expr_stmt pos:start="33:9" pos:end="33:46"><expr pos:start="33:9" pos:end="33:45"><call pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:32">handle_delete_end_of_row</name><argument_list pos:start="33:33" pos:end="33:45">(<argument pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><name pos:start="33:34" pos:end="33:36">ctx</name></expr></argument>, <argument pos:start="33:39" pos:end="33:40"><expr pos:start="33:39" pos:end="33:40"><name pos:start="33:39" pos:end="33:40">hi</name></expr></argument>, <argument pos:start="33:43" pos:end="33:44"><expr pos:start="33:43" pos:end="33:44"><name pos:start="33:43" pos:end="33:44">lo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="41:5">else if <condition pos:start="35:15" pos:end="35:58">( <expr pos:start="35:17" pos:end="35:56"><call pos:start="35:17" pos:end="35:42"><name pos:start="35:17" pos:end="35:20">COR3</name><argument_list pos:start="35:21" pos:end="35:42">(<argument pos:start="35:22" pos:end="35:23"><expr pos:start="35:22" pos:end="35:23"><name pos:start="35:22" pos:end="35:23">hi</name></expr></argument>, <argument pos:start="35:26" pos:end="35:29"><expr pos:start="35:26" pos:end="35:29"><literal type="number" pos:start="35:26" pos:end="35:29">0x14</literal></expr></argument>, <argument pos:start="35:32" pos:end="35:35"><expr pos:start="35:32" pos:end="35:35"><literal type="number" pos:start="35:32" pos:end="35:35">0x15</literal></expr></argument>, <argument pos:start="35:38" pos:end="35:41"><expr pos:start="35:38" pos:end="35:41"><literal type="number" pos:start="35:38" pos:end="35:41">0x1C</literal></expr></argument>)</argument_list></call> <operator pos:start="35:44" pos:end="35:45">&amp;&amp;</operator> <name pos:start="35:47" pos:end="35:48">lo</name> <operator pos:start="35:50" pos:end="35:51">==</operator> <literal type="number" pos:start="35:53" pos:end="35:56">0x25</literal></expr> )</condition> <block pos:start="35:60" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:36">

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:11">ctx</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:19">rollup</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:36"><expr pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:11">ctx</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:17">mode</name></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:35">CCMODE_ROLLUP_2</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="47:5">else if <condition pos:start="41:15" pos:end="41:58">( <expr pos:start="41:17" pos:end="41:56"><call pos:start="41:17" pos:end="41:42"><name pos:start="41:17" pos:end="41:20">COR3</name><argument_list pos:start="41:21" pos:end="41:42">(<argument pos:start="41:22" pos:end="41:23"><expr pos:start="41:22" pos:end="41:23"><name pos:start="41:22" pos:end="41:23">hi</name></expr></argument>, <argument pos:start="41:26" pos:end="41:29"><expr pos:start="41:26" pos:end="41:29"><literal type="number" pos:start="41:26" pos:end="41:29">0x14</literal></expr></argument>, <argument pos:start="41:32" pos:end="41:35"><expr pos:start="41:32" pos:end="41:35"><literal type="number" pos:start="41:32" pos:end="41:35">0x15</literal></expr></argument>, <argument pos:start="41:38" pos:end="41:41"><expr pos:start="41:38" pos:end="41:41"><literal type="number" pos:start="41:38" pos:end="41:41">0x1C</literal></expr></argument>)</argument_list></call> <operator pos:start="41:44" pos:end="41:45">&amp;&amp;</operator> <name pos:start="41:47" pos:end="41:48">lo</name> <operator pos:start="41:50" pos:end="41:51">==</operator> <literal type="number" pos:start="41:53" pos:end="41:56">0x26</literal></expr> )</condition> <block pos:start="41:60" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:36">

        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:11">ctx</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:19">rollup</name></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <literal type="number" pos:start="43:23" pos:end="43:23">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:36"><expr pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:11">ctx</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:17">mode</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:35">CCMODE_ROLLUP_3</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="47:7" pos:end="53:5">else if <condition pos:start="47:15" pos:end="47:58">( <expr pos:start="47:17" pos:end="47:56"><call pos:start="47:17" pos:end="47:42"><name pos:start="47:17" pos:end="47:20">COR3</name><argument_list pos:start="47:21" pos:end="47:42">(<argument pos:start="47:22" pos:end="47:23"><expr pos:start="47:22" pos:end="47:23"><name pos:start="47:22" pos:end="47:23">hi</name></expr></argument>, <argument pos:start="47:26" pos:end="47:29"><expr pos:start="47:26" pos:end="47:29"><literal type="number" pos:start="47:26" pos:end="47:29">0x14</literal></expr></argument>, <argument pos:start="47:32" pos:end="47:35"><expr pos:start="47:32" pos:end="47:35"><literal type="number" pos:start="47:32" pos:end="47:35">0x15</literal></expr></argument>, <argument pos:start="47:38" pos:end="47:41"><expr pos:start="47:38" pos:end="47:41"><literal type="number" pos:start="47:38" pos:end="47:41">0x1C</literal></expr></argument>)</argument_list></call> <operator pos:start="47:44" pos:end="47:45">&amp;&amp;</operator> <name pos:start="47:47" pos:end="47:48">lo</name> <operator pos:start="47:50" pos:end="47:51">==</operator> <literal type="number" pos:start="47:53" pos:end="47:56">0x27</literal></expr> )</condition> <block pos:start="47:60" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:36">

        <expr_stmt pos:start="49:9" pos:end="49:24"><expr pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:11">ctx</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:19">rollup</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <literal type="number" pos:start="49:23" pos:end="49:23">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:36"><expr pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:11">ctx</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:17">mode</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:35">CCMODE_ROLLUP_4</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="59:5">else if <condition pos:start="53:15" pos:end="53:58">( <expr pos:start="53:17" pos:end="53:56"><call pos:start="53:17" pos:end="53:42"><name pos:start="53:17" pos:end="53:20">COR3</name><argument_list pos:start="53:21" pos:end="53:42">(<argument pos:start="53:22" pos:end="53:23"><expr pos:start="53:22" pos:end="53:23"><name pos:start="53:22" pos:end="53:23">hi</name></expr></argument>, <argument pos:start="53:26" pos:end="53:29"><expr pos:start="53:26" pos:end="53:29"><literal type="number" pos:start="53:26" pos:end="53:29">0x14</literal></expr></argument>, <argument pos:start="53:32" pos:end="53:35"><expr pos:start="53:32" pos:end="53:35"><literal type="number" pos:start="53:32" pos:end="53:35">0x15</literal></expr></argument>, <argument pos:start="53:38" pos:end="53:41"><expr pos:start="53:38" pos:end="53:41"><literal type="number" pos:start="53:38" pos:end="53:41">0x1C</literal></expr></argument>)</argument_list></call> <operator pos:start="53:44" pos:end="53:45">&amp;&amp;</operator> <name pos:start="53:47" pos:end="53:48">lo</name> <operator pos:start="53:50" pos:end="53:51">==</operator> <literal type="number" pos:start="53:53" pos:end="53:56">0x29</literal></expr> )</condition> <block pos:start="53:60" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:35">

    <comment type="block" pos:start="55:5" pos:end="55:34">/* resume direct captioning */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:35"><expr pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:11">ctx</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:17">mode</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:34">CCMODE_PAINTON</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="65:5">else if <condition pos:start="59:15" pos:end="59:58">( <expr pos:start="59:17" pos:end="59:56"><call pos:start="59:17" pos:end="59:42"><name pos:start="59:17" pos:end="59:20">COR3</name><argument_list pos:start="59:21" pos:end="59:42">(<argument pos:start="59:22" pos:end="59:23"><expr pos:start="59:22" pos:end="59:23"><name pos:start="59:22" pos:end="59:23">hi</name></expr></argument>, <argument pos:start="59:26" pos:end="59:29"><expr pos:start="59:26" pos:end="59:29"><literal type="number" pos:start="59:26" pos:end="59:29">0x14</literal></expr></argument>, <argument pos:start="59:32" pos:end="59:35"><expr pos:start="59:32" pos:end="59:35"><literal type="number" pos:start="59:32" pos:end="59:35">0x15</literal></expr></argument>, <argument pos:start="59:38" pos:end="59:41"><expr pos:start="59:38" pos:end="59:41"><literal type="number" pos:start="59:38" pos:end="59:41">0x1C</literal></expr></argument>)</argument_list></call> <operator pos:start="59:44" pos:end="59:45">&amp;&amp;</operator> <name pos:start="59:47" pos:end="59:48">lo</name> <operator pos:start="59:50" pos:end="59:51">==</operator> <literal type="number" pos:start="59:53" pos:end="59:56">0x2B</literal></expr> )</condition> <block pos:start="59:60" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:32">

    <comment type="block" pos:start="61:5" pos:end="61:29">/* resume text display */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:32"><expr pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:11">ctx</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:17">mode</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:31">CCMODE_TEXT</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="65:7" pos:end="71:5">else if <condition pos:start="65:15" pos:end="65:58">( <expr pos:start="65:17" pos:end="65:56"><call pos:start="65:17" pos:end="65:42"><name pos:start="65:17" pos:end="65:20">COR3</name><argument_list pos:start="65:21" pos:end="65:42">(<argument pos:start="65:22" pos:end="65:23"><expr pos:start="65:22" pos:end="65:23"><name pos:start="65:22" pos:end="65:23">hi</name></expr></argument>, <argument pos:start="65:26" pos:end="65:29"><expr pos:start="65:26" pos:end="65:29"><literal type="number" pos:start="65:26" pos:end="65:29">0x14</literal></expr></argument>, <argument pos:start="65:32" pos:end="65:35"><expr pos:start="65:32" pos:end="65:35"><literal type="number" pos:start="65:32" pos:end="65:35">0x15</literal></expr></argument>, <argument pos:start="65:38" pos:end="65:41"><expr pos:start="65:38" pos:end="65:41"><literal type="number" pos:start="65:38" pos:end="65:41">0x1C</literal></expr></argument>)</argument_list></call> <operator pos:start="65:44" pos:end="65:45">&amp;&amp;</operator> <name pos:start="65:47" pos:end="65:48">lo</name> <operator pos:start="65:50" pos:end="65:51">==</operator> <literal type="number" pos:start="65:53" pos:end="65:56">0x2C</literal></expr> )</condition> <block pos:start="65:60" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:35">

    <comment type="block" pos:start="67:5" pos:end="67:30">/* erase display memory */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:35"><expr pos:start="69:9" pos:end="69:34"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:34"><name pos:start="69:15" pos:end="69:24">handle_edm</name><argument_list pos:start="69:25" pos:end="69:34">(<argument pos:start="69:26" pos:end="69:28"><expr pos:start="69:26" pos:end="69:28"><name pos:start="69:26" pos:end="69:28">ctx</name></expr></argument>, <argument pos:start="69:31" pos:end="69:33"><expr pos:start="69:31" pos:end="69:33"><name pos:start="69:31" pos:end="69:33">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="71:7" pos:end="85:5">else if <condition pos:start="71:15" pos:end="71:58">( <expr pos:start="71:17" pos:end="71:56"><call pos:start="71:17" pos:end="71:42"><name pos:start="71:17" pos:end="71:20">COR3</name><argument_list pos:start="71:21" pos:end="71:42">(<argument pos:start="71:22" pos:end="71:23"><expr pos:start="71:22" pos:end="71:23"><name pos:start="71:22" pos:end="71:23">hi</name></expr></argument>, <argument pos:start="71:26" pos:end="71:29"><expr pos:start="71:26" pos:end="71:29"><literal type="number" pos:start="71:26" pos:end="71:29">0x14</literal></expr></argument>, <argument pos:start="71:32" pos:end="71:35"><expr pos:start="71:32" pos:end="71:35"><literal type="number" pos:start="71:32" pos:end="71:35">0x15</literal></expr></argument>, <argument pos:start="71:38" pos:end="71:41"><expr pos:start="71:38" pos:end="71:41"><literal type="number" pos:start="71:38" pos:end="71:41">0x1C</literal></expr></argument>)</argument_list></call> <operator pos:start="71:44" pos:end="71:45">&amp;&amp;</operator> <name pos:start="71:47" pos:end="71:48">lo</name> <operator pos:start="71:50" pos:end="71:51">==</operator> <literal type="number" pos:start="71:53" pos:end="71:56">0x2D</literal></expr> )</condition> <block pos:start="71:60" pos:end="85:5">{<block_content pos:start="75:9" pos:end="83:31">

    <comment type="block" pos:start="73:5" pos:end="73:25">/* carriage return */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:42"><expr pos:start="75:9" pos:end="75:41"><call pos:start="75:9" pos:end="75:41"><name pos:start="75:9" pos:end="75:15">av_dlog</name><argument_list pos:start="75:16" pos:end="75:41">(<argument pos:start="75:17" pos:end="75:19"><expr pos:start="75:17" pos:end="75:19"><name pos:start="75:17" pos:end="75:19">ctx</name></expr></argument>, <argument pos:start="75:22" pos:end="75:40"><expr pos:start="75:22" pos:end="75:40"><literal type="string" pos:start="75:22" pos:end="75:40">"carriage return\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:30"><expr pos:start="77:9" pos:end="77:29"><call pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:19">reap_screen</name><argument_list pos:start="77:20" pos:end="77:29">(<argument pos:start="77:21" pos:end="77:23"><expr pos:start="77:21" pos:end="77:23"><name pos:start="77:21" pos:end="77:23">ctx</name></expr></argument>, <argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:21"><expr pos:start="79:9" pos:end="79:20"><call pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:15">roll_up</name><argument_list pos:start="79:16" pos:end="79:20">(<argument pos:start="79:17" pos:end="79:19"><expr pos:start="79:17" pos:end="79:19"><name pos:start="79:17" pos:end="79:19">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:11">ctx</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:27">screen_changed</name></name> <operator pos:start="81:29" pos:end="81:29">=</operator> <literal type="number" pos:start="81:31" pos:end="81:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:11">ctx</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:26">cursor_column</name></name> <operator pos:start="83:28" pos:end="83:28">=</operator> <literal type="number" pos:start="83:30" pos:end="83:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="85:7" pos:end="93:5">else if <condition pos:start="85:15" pos:end="85:58">( <expr pos:start="85:17" pos:end="85:56"><call pos:start="85:17" pos:end="85:42"><name pos:start="85:17" pos:end="85:20">COR3</name><argument_list pos:start="85:21" pos:end="85:42">(<argument pos:start="85:22" pos:end="85:23"><expr pos:start="85:22" pos:end="85:23"><name pos:start="85:22" pos:end="85:23">hi</name></expr></argument>, <argument pos:start="85:26" pos:end="85:29"><expr pos:start="85:26" pos:end="85:29"><literal type="number" pos:start="85:26" pos:end="85:29">0x14</literal></expr></argument>, <argument pos:start="85:32" pos:end="85:35"><expr pos:start="85:32" pos:end="85:35"><literal type="number" pos:start="85:32" pos:end="85:35">0x15</literal></expr></argument>, <argument pos:start="85:38" pos:end="85:41"><expr pos:start="85:38" pos:end="85:41"><literal type="number" pos:start="85:38" pos:end="85:41">0x1C</literal></expr></argument>)</argument_list></call> <operator pos:start="85:44" pos:end="85:45">&amp;&amp;</operator> <name pos:start="85:47" pos:end="85:48">lo</name> <operator pos:start="85:50" pos:end="85:51">==</operator> <literal type="number" pos:start="85:53" pos:end="85:56">0x2F</literal></expr> )</condition> <block pos:start="85:60" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:35">

    <comment type="block" pos:start="87:5" pos:end="87:24">/* end of caption */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:37"><expr pos:start="89:9" pos:end="89:36"><call pos:start="89:9" pos:end="89:36"><name pos:start="89:9" pos:end="89:15">av_dlog</name><argument_list pos:start="89:16" pos:end="89:36">(<argument pos:start="89:17" pos:end="89:19"><expr pos:start="89:17" pos:end="89:19"><name pos:start="89:17" pos:end="89:19">ctx</name></expr></argument>, <argument pos:start="89:22" pos:end="89:35"><expr pos:start="89:22" pos:end="89:35"><literal type="string" pos:start="89:22" pos:end="89:35">"handle_eoc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:35"><expr pos:start="91:9" pos:end="91:34"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:34"><name pos:start="91:15" pos:end="91:24">handle_eoc</name><argument_list pos:start="91:25" pos:end="91:34">(<argument pos:start="91:26" pos:end="91:28"><expr pos:start="91:26" pos:end="91:28"><name pos:start="91:26" pos:end="91:28">ctx</name></expr></argument>, <argument pos:start="91:31" pos:end="91:33"><expr pos:start="91:31" pos:end="91:33"><name pos:start="91:31" pos:end="91:33">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="93:7" pos:end="99:5">else if <condition pos:start="93:15" pos:end="93:24">(<expr pos:start="93:16" pos:end="93:23"><name pos:start="93:16" pos:end="93:17">hi</name><operator pos:start="93:18" pos:end="93:19">&gt;=</operator><literal type="number" pos:start="93:20" pos:end="93:23">0x20</literal></expr>)</condition> <block pos:start="93:26" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:38">

    <comment type="block" pos:start="95:5" pos:end="95:47">/* Standard characters (always in pairs) */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:38"><expr pos:start="97:9" pos:end="97:37"><call pos:start="97:9" pos:end="97:37"><name pos:start="97:9" pos:end="97:19">handle_char</name><argument_list pos:start="97:20" pos:end="97:37">(<argument pos:start="97:21" pos:end="97:23"><expr pos:start="97:21" pos:end="97:23"><name pos:start="97:21" pos:end="97:23">ctx</name></expr></argument>, <argument pos:start="97:26" pos:end="97:27"><expr pos:start="97:26" pos:end="97:27"><name pos:start="97:26" pos:end="97:27">hi</name></expr></argument>, <argument pos:start="97:30" pos:end="97:31"><expr pos:start="97:30" pos:end="97:31"><name pos:start="97:30" pos:end="97:31">lo</name></expr></argument>, <argument pos:start="97:34" pos:end="97:36"><expr pos:start="97:34" pos:end="97:36"><name pos:start="97:34" pos:end="97:36">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="105:5">else <block pos:start="99:12" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:64">

    <comment type="block" pos:start="101:5" pos:end="101:42">/* Ignoring all other non data code */</comment>

        <expr_stmt pos:start="103:9" pos:end="103:64"><expr pos:start="103:9" pos:end="103:63"><call pos:start="103:9" pos:end="103:63"><name pos:start="103:9" pos:end="103:15">av_dlog</name><argument_list pos:start="103:16" pos:end="103:63">(<argument pos:start="103:17" pos:end="103:19"><expr pos:start="103:17" pos:end="103:19"><name pos:start="103:17" pos:end="103:19">ctx</name></expr></argument>, <argument pos:start="103:22" pos:end="103:54"><expr pos:start="103:22" pos:end="103:54"><literal type="string" pos:start="103:22" pos:end="103:54">"Unknown command 0x%hhx 0x%hhx\n"</literal></expr></argument>, <argument pos:start="103:57" pos:end="103:58"><expr pos:start="103:57" pos:end="103:58"><name pos:start="103:57" pos:end="103:58">hi</name></expr></argument>, <argument pos:start="103:61" pos:end="103:62"><expr pos:start="103:61" pos:end="103:62"><name pos:start="103:61" pos:end="103:62">lo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:26">/* set prev command */</comment>

     <expr_stmt pos:start="111:6" pos:end="111:27"><expr pos:start="111:6" pos:end="111:26"><name pos:start="111:6" pos:end="111:21"><name pos:start="111:6" pos:end="111:8">ctx</name><operator pos:start="111:9" pos:end="111:10">-&gt;</operator><name pos:start="111:11" pos:end="111:18">prev_cmd</name><index pos:start="111:19" pos:end="111:21">[<expr pos:start="111:20" pos:end="111:20"><literal type="number" pos:start="111:20" pos:end="111:20">0</literal></expr>]</index></name> <operator pos:start="111:23" pos:end="111:23">=</operator> <name pos:start="111:25" pos:end="111:26">hi</name></expr>;</expr_stmt>

     <expr_stmt pos:start="113:6" pos:end="118:0"><expr pos:start="113:6" pos:end="113:26"><name pos:start="113:6" pos:end="113:21"><name pos:start="113:6" pos:end="113:8">ctx</name><operator pos:start="113:9" pos:end="113:10">-&gt;</operator><name pos:start="113:11" pos:end="113:18">prev_cmd</name><index pos:start="113:19" pos:end="113:21">[<expr pos:start="113:20" pos:end="113:20"><literal type="number" pos:start="113:20" pos:end="113:20">1</literal></expr>]</index></name> <operator pos:start="113:23" pos:end="113:23">=</operator> <name pos:start="113:25" pos:end="113:26">lo</name></expr>;</expr_stmt>



<cpp:undef pos:start="117:1" pos:end="117:11">#<cpp:directive pos:start="117:2" pos:end="117:6">undef</cpp:directive> <name pos:start="117:8" pos:end="117:11">COR3</name></cpp:undef>

    <return pos:start="119:5" pos:end="119:15">return <expr pos:start="119:12" pos:end="119:14"><name pos:start="119:12" pos:end="119:14">ret</name></expr>;</return>



</block_content>}</block></function>
</unit>
