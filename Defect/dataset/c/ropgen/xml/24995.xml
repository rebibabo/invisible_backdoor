<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24995.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">xhci_er_reset</name><parameter_list pos:start="1:26" pos:end="1:49">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:35">XHCIState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">xhci</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:48"><decl pos:start="1:44" pos:end="1:48"><type pos:start="1:44" pos:end="1:48"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:48">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:46">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">XHCIInterrupter</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:25">intr</name> <init pos:start="5:27" pos:end="5:42">= <expr pos:start="5:29" pos:end="5:42"><operator pos:start="5:29" pos:end="5:29">&amp;</operator><name pos:start="5:30" pos:end="5:42"><name pos:start="5:30" pos:end="5:33">xhci</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:39">intr</name><index pos:start="5:40" pos:end="5:42">[<expr pos:start="5:41" pos:end="5:41"><name pos:start="5:41" pos:end="5:41">v</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">XHCIEvRingSeg</name></type> <name pos:start="7:19" pos:end="7:21">seg</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="21:5">if <condition pos:start="11:8" pos:end="11:26">(<expr pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:12">intr</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:20">erstsz</name></name> <operator pos:start="11:22" pos:end="11:23">==</operator> <literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr>)</condition> <block pos:start="11:28" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:15">

        <comment type="block" pos:start="13:9" pos:end="13:22">/* disabled */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:27"><expr pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:12">intr</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:22">er_start</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:12">intr</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:21">er_size</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:54">/* cache the (sole) event ring segment location */</comment>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:26">(<expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:12">intr</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:20">erstsz</name></name> <operator pos:start="25:22" pos:end="25:23">!=</operator> <literal type="number" pos:start="25:25" pos:end="25:25">1</literal></expr>)</condition> <block pos:start="25:28" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:15">

        <expr_stmt pos:start="27:9" pos:end="27:70"><expr pos:start="27:9" pos:end="27:69"><call pos:start="27:9" pos:end="27:69"><name pos:start="27:9" pos:end="27:15">DPRINTF</name><argument_list pos:start="27:16" pos:end="27:69">(<argument pos:start="27:17" pos:end="27:54"><expr pos:start="27:17" pos:end="27:54"><literal type="string" pos:start="27:17" pos:end="27:54">"xhci: invalid value for ERSTSZ: %d\n"</literal></expr></argument>, <argument pos:start="27:57" pos:end="27:68"><expr pos:start="27:57" pos:end="27:68"><name pos:start="27:57" pos:end="27:68"><name pos:start="27:57" pos:end="27:60">intr</name><operator pos:start="27:61" pos:end="27:62">-&gt;</operator><name pos:start="27:63" pos:end="27:68">erstsz</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:23"><expr pos:start="29:9" pos:end="29:22"><call pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:16">xhci_die</name><argument_list pos:start="29:17" pos:end="29:22">(<argument pos:start="29:18" pos:end="29:21"><expr pos:start="29:18" pos:end="29:21"><name pos:start="29:18" pos:end="29:21">xhci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:73"><decl pos:start="35:5" pos:end="35:72"><type pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:14">dma_addr_t</name></type> <name pos:start="35:16" pos:end="35:21">erstba</name> <init pos:start="35:23" pos:end="35:72">= <expr pos:start="35:25" pos:end="35:72"><call pos:start="35:25" pos:end="35:72"><name pos:start="35:25" pos:end="35:35">xhci_addr64</name><argument_list pos:start="35:36" pos:end="35:72">(<argument pos:start="35:37" pos:end="35:52"><expr pos:start="35:37" pos:end="35:52"><name pos:start="35:37" pos:end="35:52"><name pos:start="35:37" pos:end="35:40">intr</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:52">erstba_low</name></name></expr></argument>, <argument pos:start="35:55" pos:end="35:71"><expr pos:start="35:55" pos:end="35:71"><name pos:start="35:55" pos:end="35:71"><name pos:start="35:55" pos:end="35:58">intr</name><operator pos:start="35:59" pos:end="35:60">-&gt;</operator><name pos:start="35:61" pos:end="35:71">erstba_high</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:62"><expr pos:start="37:5" pos:end="37:61"><call pos:start="37:5" pos:end="37:61"><name pos:start="37:5" pos:end="37:16">pci_dma_read</name><argument_list pos:start="37:17" pos:end="37:61">(<argument pos:start="37:18" pos:end="37:33"><expr pos:start="37:18" pos:end="37:33"><call pos:start="37:18" pos:end="37:33"><name pos:start="37:18" pos:end="37:27">PCI_DEVICE</name><argument_list pos:start="37:28" pos:end="37:33">(<argument pos:start="37:29" pos:end="37:32"><expr pos:start="37:29" pos:end="37:32"><name pos:start="37:29" pos:end="37:32">xhci</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:36" pos:end="37:41"><expr pos:start="37:36" pos:end="37:41"><name pos:start="37:36" pos:end="37:41">erstba</name></expr></argument>, <argument pos:start="37:44" pos:end="37:47"><expr pos:start="37:44" pos:end="37:47"><operator pos:start="37:44" pos:end="37:44">&amp;</operator><name pos:start="37:45" pos:end="37:47">seg</name></expr></argument>, <argument pos:start="37:50" pos:end="37:60"><expr pos:start="37:50" pos:end="37:60"><sizeof pos:start="37:50" pos:end="37:60">sizeof<argument_list pos:start="37:56" pos:end="37:60">(<argument pos:start="37:57" pos:end="37:59"><expr pos:start="37:57" pos:end="37:59"><name pos:start="37:57" pos:end="37:59">seg</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><call pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:16">le32_to_cpus</name><argument_list pos:start="39:17" pos:end="39:31">(<argument pos:start="39:18" pos:end="39:30"><expr pos:start="39:18" pos:end="39:30"><operator pos:start="39:18" pos:end="39:18">&amp;</operator><name pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:21">seg</name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:30">addr_low</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><call pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:16">le32_to_cpus</name><argument_list pos:start="41:17" pos:end="41:32">(<argument pos:start="41:18" pos:end="41:31"><expr pos:start="41:18" pos:end="41:31"><operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:31"><name pos:start="41:19" pos:end="41:21">seg</name><operator pos:start="41:22" pos:end="41:22">.</operator><name pos:start="41:23" pos:end="41:31">addr_high</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><call pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:16">le32_to_cpus</name><argument_list pos:start="43:17" pos:end="43:27">(<argument pos:start="43:18" pos:end="43:26"><expr pos:start="43:18" pos:end="43:26"><operator pos:start="43:18" pos:end="43:18">&amp;</operator><name pos:start="43:19" pos:end="43:26"><name pos:start="43:19" pos:end="43:21">seg</name><operator pos:start="43:22" pos:end="43:22">.</operator><name pos:start="43:23" pos:end="43:26">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:41">(<expr pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:11">seg</name><operator pos:start="45:12" pos:end="45:12">.</operator><name pos:start="45:13" pos:end="45:16">size</name></name> <operator pos:start="45:18" pos:end="45:18">&lt;</operator> <literal type="number" pos:start="45:20" pos:end="45:21">16</literal> <operator pos:start="45:23" pos:end="45:24">||</operator> <name pos:start="45:26" pos:end="45:33"><name pos:start="45:26" pos:end="45:28">seg</name><operator pos:start="45:29" pos:end="45:29">.</operator><name pos:start="45:30" pos:end="45:33">size</name></name> <operator pos:start="45:35" pos:end="45:35">&gt;</operator> <literal type="number" pos:start="45:37" pos:end="45:40">4096</literal></expr>)</condition> <block pos:start="45:43" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:15">

        <expr_stmt pos:start="47:9" pos:end="47:72"><expr pos:start="47:9" pos:end="47:71"><call pos:start="47:9" pos:end="47:71"><name pos:start="47:9" pos:end="47:15">DPRINTF</name><argument_list pos:start="47:16" pos:end="47:71">(<argument pos:start="47:17" pos:end="47:60"><expr pos:start="47:17" pos:end="47:60"><literal type="string" pos:start="47:17" pos:end="47:60">"xhci: invalid value for segment size: %d\n"</literal></expr></argument>, <argument pos:start="47:63" pos:end="47:70"><expr pos:start="47:63" pos:end="47:70"><name pos:start="47:63" pos:end="47:70"><name pos:start="47:63" pos:end="47:65">seg</name><operator pos:start="47:66" pos:end="47:66">.</operator><name pos:start="47:67" pos:end="47:70">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><call pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:16">xhci_die</name><argument_list pos:start="49:17" pos:end="49:22">(<argument pos:start="49:18" pos:end="49:21"><expr pos:start="49:18" pos:end="49:21"><name pos:start="49:18" pos:end="49:21">xhci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:62"><expr pos:start="55:5" pos:end="55:61"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:8">intr</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:18">er_start</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="55:61"><name pos:start="55:22" pos:end="55:32">xhci_addr64</name><argument_list pos:start="55:33" pos:end="55:61">(<argument pos:start="55:34" pos:end="55:45"><expr pos:start="55:34" pos:end="55:45"><name pos:start="55:34" pos:end="55:45"><name pos:start="55:34" pos:end="55:36">seg</name><operator pos:start="55:37" pos:end="55:37">.</operator><name pos:start="55:38" pos:end="55:45">addr_low</name></name></expr></argument>, <argument pos:start="55:48" pos:end="55:60"><expr pos:start="55:48" pos:end="55:60"><name pos:start="55:48" pos:end="55:60"><name pos:start="55:48" pos:end="55:50">seg</name><operator pos:start="55:51" pos:end="55:51">.</operator><name pos:start="55:52" pos:end="55:60">addr_high</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:8">intr</name><operator pos:start="57:9" pos:end="57:10">-&gt;</operator><name pos:start="57:11" pos:end="57:17">er_size</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:28"><name pos:start="57:21" pos:end="57:23">seg</name><operator pos:start="57:24" pos:end="57:24">.</operator><name pos:start="57:25" pos:end="57:28">size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:24"><expr pos:start="61:5" pos:end="61:23"><name pos:start="61:5" pos:end="61:19"><name pos:start="61:5" pos:end="61:8">intr</name><operator pos:start="61:9" pos:end="61:10">-&gt;</operator><name pos:start="61:11" pos:end="61:19">er_ep_idx</name></name> <operator pos:start="61:21" pos:end="61:21">=</operator> <literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:8">intr</name><operator pos:start="63:9" pos:end="63:10">-&gt;</operator><name pos:start="63:11" pos:end="63:16">er_pcs</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <literal type="number" pos:start="63:20" pos:end="63:20">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="69:46"><expr pos:start="67:5" pos:end="69:45"><call pos:start="67:5" pos:end="69:45"><name pos:start="67:5" pos:end="67:11">DPRINTF</name><argument_list pos:start="67:12" pos:end="69:45">(<argument pos:start="67:13" pos:end="67:58"><expr pos:start="67:13" pos:end="67:58"><literal type="string" pos:start="67:13" pos:end="67:35">"xhci: event ring[%d]:"</literal> <name pos:start="67:37" pos:end="67:48">DMA_ADDR_FMT</name> <literal type="string" pos:start="67:50" pos:end="67:58">" [%d]\n"</literal></expr></argument>,

            <argument pos:start="69:13" pos:end="69:13"><expr pos:start="69:13" pos:end="69:13"><name pos:start="69:13" pos:end="69:13">v</name></expr></argument>, <argument pos:start="69:16" pos:end="69:29"><expr pos:start="69:16" pos:end="69:29"><name pos:start="69:16" pos:end="69:29"><name pos:start="69:16" pos:end="69:19">intr</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:29">er_start</name></name></expr></argument>, <argument pos:start="69:32" pos:end="69:44"><expr pos:start="69:32" pos:end="69:44"><name pos:start="69:32" pos:end="69:44"><name pos:start="69:32" pos:end="69:35">intr</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:44">er_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
