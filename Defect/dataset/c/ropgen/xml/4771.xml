<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4771.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">expand_rle_row</name><parameter_list pos:start="1:26" pos:end="3:70">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:39">uint8_t</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">in_buf</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:70"><decl pos:start="1:50" pos:end="1:70"><type pos:start="1:50" pos:end="1:70"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:62">uint8_t</name><modifier pos:start="1:63" pos:end="1:63">*</modifier></type> <name pos:start="1:65" pos:end="1:70">in_end</name></decl></parameter>,

            <parameter pos:start="3:13" pos:end="3:34"><decl pos:start="3:13" pos:end="3:34"><type pos:start="3:13" pos:end="3:34"><name pos:start="3:13" pos:end="3:20">unsigned</name> <name pos:start="3:22" pos:end="3:25">char</name> <modifier pos:start="3:27" pos:end="3:27">*</modifier></type><name pos:start="3:28" pos:end="3:34">out_buf</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:52"><decl pos:start="3:37" pos:end="3:52"><type pos:start="3:37" pos:end="3:52"><name pos:start="3:37" pos:end="3:43">uint8_t</name><modifier pos:start="3:44" pos:end="3:44">*</modifier></type> <name pos:start="3:46" pos:end="3:52">out_end</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:69"><decl pos:start="3:55" pos:end="3:69"><type pos:start="3:55" pos:end="3:69"><name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:69">pixelstride</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:5">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name></type> <name pos:start="7:19" pos:end="7:23">pixel</name></decl>, <decl pos:start="7:26" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:17"/><name pos:start="7:26" pos:end="7:30">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">orig</name> <init pos:start="9:25" pos:end="9:33">= <expr pos:start="9:27" pos:end="9:33"><name pos:start="9:27" pos:end="9:33">out_buf</name></expr></init></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="59:5">while <condition pos:start="13:11" pos:end="13:13">(<expr pos:start="13:12" pos:end="13:12"><literal type="number" pos:start="13:12" pos:end="13:12">1</literal></expr>)</condition> <block pos:start="13:15" pos:end="59:5">{<block_content pos:start="15:9" pos:end="57:9">

        <if_stmt pos:start="15:9" pos:end="15:42"><if pos:start="15:9" pos:end="15:42">if<condition pos:start="15:11" pos:end="15:31">(<expr pos:start="15:12" pos:end="15:30"><name pos:start="15:12" pos:end="15:17">in_buf</name> <operator pos:start="15:19" pos:end="15:19">+</operator> <literal type="number" pos:start="15:21" pos:end="15:21">1</literal> <operator pos:start="15:23" pos:end="15:23">&gt;</operator> <name pos:start="15:25" pos:end="15:30">in_end</name></expr>)</condition><block type="pseudo" pos:start="15:33" pos:end="15:42"><block_content pos:start="15:33" pos:end="15:42"> <return pos:start="15:33" pos:end="15:42">return <expr pos:start="15:40" pos:end="15:41"><operator pos:start="15:40" pos:end="15:40">-</operator><literal type="number" pos:start="15:41" pos:end="15:41">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:45"><expr pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:13">pixel</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:44"><name pos:start="17:17" pos:end="17:35">bytestream_get_byte</name><argument_list pos:start="17:36" pos:end="17:44">(<argument pos:start="17:37" pos:end="17:43"><expr pos:start="17:37" pos:end="17:43"><operator pos:start="17:37" pos:end="17:37">&amp;</operator><name pos:start="17:38" pos:end="17:43">in_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:38">(<expr pos:start="19:13" pos:end="19:37"><operator pos:start="19:13" pos:end="19:13">!</operator><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:19">count</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <operator pos:start="19:23" pos:end="19:23">(</operator><name pos:start="19:24" pos:end="19:28">pixel</name> <operator pos:start="19:30" pos:end="19:30">&amp;</operator> <literal type="number" pos:start="19:32" pos:end="19:35">0x7f</literal><operator pos:start="19:36" pos:end="19:36">)</operator><operator pos:start="19:37" pos:end="19:37">)</operator></expr>)</condition> <block pos:start="19:40" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:50">

            <return pos:start="21:13" pos:end="21:50">return <expr pos:start="21:20" pos:end="21:49"><operator pos:start="21:20" pos:end="21:20">(</operator><name pos:start="21:21" pos:end="21:27">out_buf</name> <operator pos:start="21:29" pos:end="21:29">-</operator> <name pos:start="21:31" pos:end="21:34">orig</name><operator pos:start="21:35" pos:end="21:35">)</operator> <operator pos:start="21:37" pos:end="21:37">/</operator> <name pos:start="21:39" pos:end="21:49">pixelstride</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="27:9" pos:end="27:40">/* Check for buffer overflow. */</comment>

        <if_stmt pos:start="29:9" pos:end="29:63"><if pos:start="29:9" pos:end="29:63">if<condition pos:start="29:11" pos:end="29:52">(<expr pos:start="29:12" pos:end="29:51"><name pos:start="29:12" pos:end="29:18">out_buf</name> <operator pos:start="29:20" pos:end="29:20">+</operator> <name pos:start="29:22" pos:end="29:32">pixelstride</name> <operator pos:start="29:34" pos:end="29:34">*</operator> <name pos:start="29:36" pos:end="29:40">count</name> <operator pos:start="29:42" pos:end="29:43">&gt;=</operator> <name pos:start="29:45" pos:end="29:51">out_end</name></expr>)</condition><block type="pseudo" pos:start="29:54" pos:end="29:63"><block_content pos:start="29:54" pos:end="29:63"> <return pos:start="29:54" pos:end="29:63">return <expr pos:start="29:61" pos:end="29:62"><operator pos:start="29:61" pos:end="29:61">-</operator><literal type="number" pos:start="29:62" pos:end="29:62">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="33:9" pos:end="57:9"><if pos:start="33:9" pos:end="43:9">if <condition pos:start="33:12" pos:end="33:25">(<expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:17">pixel</name> <operator pos:start="33:19" pos:end="33:19">&amp;</operator> <literal type="number" pos:start="33:21" pos:end="33:24">0x80</literal></expr>)</condition> <block pos:start="33:27" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:13">

            <while pos:start="35:13" pos:end="41:13">while <condition pos:start="35:19" pos:end="35:27">(<expr pos:start="35:20" pos:end="35:26"><name pos:start="35:20" pos:end="35:24">count</name><operator pos:start="35:25" pos:end="35:26">--</operator></expr>)</condition> <block pos:start="35:29" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:39">

                <expr_stmt pos:start="37:17" pos:end="37:56"><expr pos:start="37:17" pos:end="37:55"><operator pos:start="37:17" pos:end="37:17">*</operator><name pos:start="37:18" pos:end="37:24">out_buf</name> <operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="37:55"><name pos:start="37:28" pos:end="37:46">bytestream_get_byte</name><argument_list pos:start="37:47" pos:end="37:55">(<argument pos:start="37:48" pos:end="37:54"><expr pos:start="37:48" pos:end="37:54"><operator pos:start="37:48" pos:end="37:48">&amp;</operator><name pos:start="37:49" pos:end="37:54">in_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:39"><expr pos:start="39:17" pos:end="39:38"><name pos:start="39:17" pos:end="39:23">out_buf</name> <operator pos:start="39:25" pos:end="39:26">+=</operator> <name pos:start="39:28" pos:end="39:38">pixelstride</name></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="57:9">else <block pos:start="43:16" pos:end="57:9">{<block_content pos:start="45:13" pos:end="55:13">

            <expr_stmt pos:start="45:13" pos:end="45:49"><expr pos:start="45:13" pos:end="45:48"><name pos:start="45:13" pos:end="45:17">pixel</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:48"><name pos:start="45:21" pos:end="45:39">bytestream_get_byte</name><argument_list pos:start="45:40" pos:end="45:48">(<argument pos:start="45:41" pos:end="45:47"><expr pos:start="45:41" pos:end="45:47"><operator pos:start="45:41" pos:end="45:41">&amp;</operator><name pos:start="45:42" pos:end="45:47">in_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <while pos:start="49:13" pos:end="55:13">while <condition pos:start="49:19" pos:end="49:27">(<expr pos:start="49:20" pos:end="49:26"><name pos:start="49:20" pos:end="49:24">count</name><operator pos:start="49:25" pos:end="49:26">--</operator></expr>)</condition> <block pos:start="49:29" pos:end="55:13">{<block_content pos:start="51:17" pos:end="53:39">

                <expr_stmt pos:start="51:17" pos:end="51:33"><expr pos:start="51:17" pos:end="51:32"><operator pos:start="51:17" pos:end="51:17">*</operator><name pos:start="51:18" pos:end="51:24">out_buf</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:32">pixel</name></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:39"><expr pos:start="53:17" pos:end="53:38"><name pos:start="53:17" pos:end="53:23">out_buf</name> <operator pos:start="53:25" pos:end="53:26">+=</operator> <name pos:start="53:28" pos:end="53:38">pixelstride</name></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
