<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15870.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:38">small_diamond_search</name><parameter_list pos:start="1:39" pos:end="7:89">(<parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:57"><name pos:start="1:40" pos:end="1:53">MpegEncContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type> <name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">best</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:78"><decl pos:start="1:71" pos:end="1:78"><type pos:start="1:71" pos:end="1:78"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:78">dmin</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:53"><decl pos:start="3:40" pos:end="3:53"><type pos:start="3:40" pos:end="3:53"><name pos:start="3:40" pos:end="3:44">UINT8</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:53">new_pic</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:69"><decl pos:start="3:56" pos:end="3:69"><type pos:start="3:56" pos:end="3:69"><name pos:start="3:56" pos:end="3:60">UINT8</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:69">old_pic</name></decl></parameter>, <parameter pos:start="3:72" pos:end="3:85"><decl pos:start="3:72" pos:end="3:85"><type pos:start="3:72" pos:end="3:85"><name pos:start="3:72" pos:end="3:74">int</name></type> <name pos:start="3:76" pos:end="3:85">pic_stride</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:49"><decl pos:start="5:40" pos:end="5:49"><type pos:start="5:40" pos:end="5:49"><name pos:start="5:40" pos:end="5:42">int</name></type> <name pos:start="5:44" pos:end="5:49">pred_x</name></decl></parameter>, <parameter pos:start="5:52" pos:end="5:61"><decl pos:start="5:52" pos:end="5:61"><type pos:start="5:52" pos:end="5:61"><name pos:start="5:52" pos:end="5:54">int</name></type> <name pos:start="5:56" pos:end="5:61">pred_y</name></decl></parameter>, <parameter pos:start="5:64" pos:end="5:81"><decl pos:start="5:64" pos:end="5:81"><type pos:start="5:64" pos:end="5:81"><name pos:start="5:64" pos:end="5:69">UINT16</name> <modifier pos:start="5:71" pos:end="5:71">*</modifier></type><name pos:start="5:72" pos:end="5:81">mv_penalty</name></decl></parameter>, <parameter pos:start="5:84" pos:end="5:92"><decl pos:start="5:84" pos:end="5:92"><type pos:start="5:84" pos:end="5:92"><name pos:start="5:84" pos:end="5:86">int</name></type> <name pos:start="5:88" pos:end="5:92">quant</name></decl></parameter>,

                                       <parameter pos:start="7:40" pos:end="7:47"><decl pos:start="7:40" pos:end="7:47"><type pos:start="7:40" pos:end="7:47"><name pos:start="7:40" pos:end="7:42">int</name></type> <name pos:start="7:44" pos:end="7:47">xmin</name></decl></parameter>, <parameter pos:start="7:50" pos:end="7:57"><decl pos:start="7:50" pos:end="7:57"><type pos:start="7:50" pos:end="7:57"><name pos:start="7:50" pos:end="7:52">int</name></type> <name pos:start="7:54" pos:end="7:57">ymin</name></decl></parameter>, <parameter pos:start="7:60" pos:end="7:67"><decl pos:start="7:60" pos:end="7:67"><type pos:start="7:60" pos:end="7:67"><name pos:start="7:60" pos:end="7:62">int</name></type> <name pos:start="7:64" pos:end="7:67">xmax</name></decl></parameter>, <parameter pos:start="7:70" pos:end="7:77"><decl pos:start="7:70" pos:end="7:77"><type pos:start="7:70" pos:end="7:77"><name pos:start="7:70" pos:end="7:72">int</name></type> <name pos:start="7:74" pos:end="7:77">ymax</name></decl></parameter>, <parameter pos:start="7:80" pos:end="7:88"><decl pos:start="7:80" pos:end="7:88"><type pos:start="7:80" pos:end="7:88"><name pos:start="7:80" pos:end="7:82">int</name></type> <name pos:start="7:84" pos:end="7:88">shift</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="99:1">{<block_content pos:start="11:5" pos:end="47:5">

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">next_dir</name><init pos:start="11:17" pos:end="11:19">=<expr pos:start="11:18" pos:end="11:19"><operator pos:start="11:18" pos:end="11:18">-</operator><literal type="number" pos:start="11:19" pos:end="11:19">1</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="47:5">for<control pos:start="15:8" pos:end="15:11">(<init pos:start="15:9" pos:end="15:9">;</init><condition pos:start="15:10" pos:end="15:10">;</condition><incr/>)</control><block pos:start="15:12" pos:end="47:5">{<block_content pos:start="17:9" pos:end="45:9">

        <decl_stmt pos:start="17:9" pos:end="17:14"><decl pos:start="17:9" pos:end="17:13"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">d</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:32"><decl pos:start="19:9" pos:end="19:31"><type pos:start="19:9" pos:end="19:17"><specifier pos:start="19:9" pos:end="19:13">const</specifier> <name pos:start="19:15" pos:end="19:17">int</name></type> <name pos:start="19:19" pos:end="19:21">dir</name><init pos:start="19:22" pos:end="19:31">= <expr pos:start="19:24" pos:end="19:31"><name pos:start="19:24" pos:end="19:31">next_dir</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:29"><decl pos:start="21:9" pos:end="21:28"><type pos:start="21:9" pos:end="21:17"><specifier pos:start="21:9" pos:end="21:13">const</specifier> <name pos:start="21:15" pos:end="21:17">int</name></type> <name pos:start="21:19" pos:end="21:19">x</name><init pos:start="21:20" pos:end="21:28">= <expr pos:start="21:22" pos:end="21:28"><name pos:start="21:22" pos:end="21:28"><name pos:start="21:22" pos:end="21:25">best</name><index pos:start="21:26" pos:end="21:28">[<expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:29"><decl pos:start="23:9" pos:end="23:28"><type pos:start="23:9" pos:end="23:17"><specifier pos:start="23:9" pos:end="23:13">const</specifier> <name pos:start="23:15" pos:end="23:17">int</name></type> <name pos:start="23:19" pos:end="23:19">y</name><init pos:start="23:20" pos:end="23:28">= <expr pos:start="23:22" pos:end="23:28"><name pos:start="23:22" pos:end="23:28"><name pos:start="23:22" pos:end="23:25">best</name><index pos:start="23:26" pos:end="23:28">[<expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:16">next_dir</name><operator pos:start="25:17" pos:end="25:17">=</operator><operator pos:start="25:18" pos:end="25:18">-</operator><literal type="number" pos:start="25:19" pos:end="25:19">1</literal></expr>;</expr_stmt>



<comment type="line" pos:start="29:1" pos:end="29:20">//printf("%d", dir);</comment>

        <if_stmt pos:start="31:9" pos:end="45:9"><if pos:start="31:9" pos:end="45:9">if<condition pos:start="31:11" pos:end="31:28">(<expr pos:start="31:12" pos:end="31:27"><name pos:start="31:12" pos:end="31:14">dir</name><operator pos:start="31:15" pos:end="31:16">!=</operator><literal type="number" pos:start="31:17" pos:end="31:17">2</literal> <operator pos:start="31:19" pos:end="31:20">&amp;&amp;</operator> <name pos:start="31:22" pos:end="31:22">x</name><operator pos:start="31:23" pos:end="31:23">&gt;</operator><name pos:start="31:24" pos:end="31:27">xmin</name></expr>)</condition><block type="pseudo" pos:start="31:30" pos:end="45:9"><block_content pos:start="31:30" pos:end="45:9"> <macro pos:start="31:30" pos:end="31:54"><name pos:start="31:30" pos:end="31:41">CHECK_MV_DIR</name><argument_list pos:start="31:42" pos:end="31:54">(<argument pos:start="31:43" pos:end="31:45">x-<literal type="number" pos:start="31:45" pos:end="31:45">1</literal></argument>, <argument pos:start="31:48" pos:end="31:48">y</argument>  , <argument pos:start="31:53" pos:end="31:53"><literal type="number" pos:start="31:53" pos:end="31:53">0</literal></argument>)</argument_list></macro>

        <if_stmt pos:start="33:9" pos:end="45:9"><if pos:start="33:9" pos:end="45:9">if<condition pos:start="33:11" pos:end="33:28">(<expr pos:start="33:12" pos:end="33:27"><name pos:start="33:12" pos:end="33:14">dir</name><operator pos:start="33:15" pos:end="33:16">!=</operator><literal type="number" pos:start="33:17" pos:end="33:17">3</literal> <operator pos:start="33:19" pos:end="33:20">&amp;&amp;</operator> <name pos:start="33:22" pos:end="33:22">y</name><operator pos:start="33:23" pos:end="33:23">&gt;</operator><name pos:start="33:24" pos:end="33:27">ymin</name></expr>)</condition><block type="pseudo" pos:start="33:30" pos:end="45:9"><block_content pos:start="33:30" pos:end="45:9"> <macro pos:start="33:30" pos:end="33:54"><name pos:start="33:30" pos:end="33:41">CHECK_MV_DIR</name><argument_list pos:start="33:42" pos:end="33:54">(<argument pos:start="33:43" pos:end="33:43">x</argument>  , <argument pos:start="33:48" pos:end="33:50">y-<literal type="number" pos:start="33:50" pos:end="33:50">1</literal></argument>, <argument pos:start="33:53" pos:end="33:53"><literal type="number" pos:start="33:53" pos:end="33:53">1</literal></argument>)</argument_list></macro>

        <if_stmt pos:start="35:9" pos:end="45:9"><if pos:start="35:9" pos:end="45:9">if<condition pos:start="35:11" pos:end="35:28">(<expr pos:start="35:12" pos:end="35:27"><name pos:start="35:12" pos:end="35:14">dir</name><operator pos:start="35:15" pos:end="35:16">!=</operator><literal type="number" pos:start="35:17" pos:end="35:17">0</literal> <operator pos:start="35:19" pos:end="35:20">&amp;&amp;</operator> <name pos:start="35:22" pos:end="35:22">x</name><operator pos:start="35:23" pos:end="35:23">&lt;</operator><name pos:start="35:24" pos:end="35:27">xmax</name></expr>)</condition><block type="pseudo" pos:start="35:30" pos:end="45:9"><block_content pos:start="35:30" pos:end="45:9"> <macro pos:start="35:30" pos:end="35:54"><name pos:start="35:30" pos:end="35:41">CHECK_MV_DIR</name><argument_list pos:start="35:42" pos:end="35:54">(<argument pos:start="35:43" pos:end="35:45">x+<literal type="number" pos:start="35:45" pos:end="35:45">1</literal></argument>, <argument pos:start="35:48" pos:end="35:48">y</argument>  , <argument pos:start="35:53" pos:end="35:53"><literal type="number" pos:start="35:53" pos:end="35:53">2</literal></argument>)</argument_list></macro>

        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="45:9">if<condition pos:start="37:11" pos:end="37:28">(<expr pos:start="37:12" pos:end="37:27"><name pos:start="37:12" pos:end="37:14">dir</name><operator pos:start="37:15" pos:end="37:16">!=</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal> <operator pos:start="37:19" pos:end="37:20">&amp;&amp;</operator> <name pos:start="37:22" pos:end="37:22">y</name><operator pos:start="37:23" pos:end="37:23">&lt;</operator><name pos:start="37:24" pos:end="37:27">ymax</name></expr>)</condition><block type="pseudo" pos:start="37:30" pos:end="45:9"><block_content pos:start="37:30" pos:end="45:9"> <macro pos:start="37:30" pos:end="37:54"><name pos:start="37:30" pos:end="37:41">CHECK_MV_DIR</name><argument_list pos:start="37:42" pos:end="37:54">(<argument pos:start="37:43" pos:end="37:43">x</argument>  , <argument pos:start="37:48" pos:end="37:50">y+<literal type="number" pos:start="37:50" pos:end="37:50">1</literal></argument>, <argument pos:start="37:53" pos:end="37:53"><literal type="number" pos:start="37:53" pos:end="37:53">3</literal></argument>)</argument_list></macro>



        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if<condition pos:start="41:11" pos:end="41:24">(<expr pos:start="41:12" pos:end="41:23"><name pos:start="41:12" pos:end="41:19">next_dir</name><operator pos:start="41:20" pos:end="41:21">==</operator><operator pos:start="41:22" pos:end="41:22">-</operator><literal type="number" pos:start="41:23" pos:end="41:23">1</literal></expr>)</condition><block pos:start="41:25" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:24">

            <return pos:start="43:13" pos:end="43:24">return <expr pos:start="43:20" pos:end="43:23"><name pos:start="43:20" pos:end="43:23">dmin</name></expr>;</return>

        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



<comment type="block" pos:start="51:1" pos:end="97:6">/*    for(;;){

        int d;

        const int x= best[0];

        const int y= best[1];

        const int last_min=dmin;

        if(x&gt;xmin) CHECK_MV(x-1, y  )

        if(y&gt;xmin) CHECK_MV(x  , y-1)

        if(x&lt;xmax) CHECK_MV(x+1, y  )

        if(y&lt;xmax) CHECK_MV(x  , y+1)

        if(x&gt;xmin &amp;&amp; y&gt;ymin) CHECK_MV(x-1, y-1)

        if(x&gt;xmin &amp;&amp; y&lt;ymax) CHECK_MV(x-1, y+1)

        if(x&lt;xmax &amp;&amp; y&gt;ymin) CHECK_MV(x+1, y-1)

        if(x&lt;xmax &amp;&amp; y&lt;ymax) CHECK_MV(x+1, y+1)

        if(x-1&gt;xmin) CHECK_MV(x-2, y  )

        if(y-1&gt;xmin) CHECK_MV(x  , y-2)

        if(x+1&lt;xmax) CHECK_MV(x+2, y  )

        if(y+1&lt;xmax) CHECK_MV(x  , y+2)

        if(x-1&gt;xmin &amp;&amp; y-1&gt;ymin) CHECK_MV(x-2, y-2)

        if(x-1&gt;xmin &amp;&amp; y+1&lt;ymax) CHECK_MV(x-2, y+2)

        if(x+1&lt;xmax &amp;&amp; y-1&gt;ymin) CHECK_MV(x+2, y-2)

        if(x+1&lt;xmax &amp;&amp; y+1&lt;ymax) CHECK_MV(x+2, y+2)

        if(dmin==last_min) return dmin;

    }

    */</comment>

</block_content>}</block></function>
</unit>
