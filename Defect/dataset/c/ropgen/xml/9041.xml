<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9041.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">scsi_dma_complete</name><parameter_list pos:start="1:30" pos:end="1:52">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:51"><decl pos:start="1:45" pos:end="1:51"><type pos:start="1:45" pos:end="1:51"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:51">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SCSIDiskReq</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">r</name> <init pos:start="5:20" pos:end="5:42">= <expr pos:start="5:22" pos:end="5:42"><operator pos:start="5:22" pos:end="5:22">(</operator><name pos:start="5:23" pos:end="5:33">SCSIDiskReq</name> <operator pos:start="5:35" pos:end="5:35">*</operator><operator pos:start="5:36" pos:end="5:36">)</operator><name pos:start="5:37" pos:end="5:42">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:65"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SCSIDiskState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:65">= <expr pos:start="7:24" pos:end="7:65"><call pos:start="7:24" pos:end="7:65"><name pos:start="7:24" pos:end="7:32">DO_UPCAST</name><argument_list pos:start="7:33" pos:end="7:65">(<argument pos:start="7:34" pos:end="7:46"><expr pos:start="7:34" pos:end="7:46"><name pos:start="7:34" pos:end="7:46">SCSIDiskState</name></expr></argument>, <argument pos:start="7:49" pos:end="7:52"><expr pos:start="7:49" pos:end="7:52"><name pos:start="7:49" pos:end="7:52">qdev</name></expr></argument>, <argument pos:start="7:55" pos:end="7:64"><expr pos:start="7:55" pos:end="7:64"><name pos:start="7:55" pos:end="7:64"><name pos:start="7:55" pos:end="7:55">r</name><operator pos:start="7:56" pos:end="7:57">-&gt;</operator><name pos:start="7:58" pos:end="7:60">req</name><operator pos:start="7:61" pos:end="7:61">.</operator><name pos:start="7:62" pos:end="7:64">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:46"><expr pos:start="11:5" pos:end="11:45"><call pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:18">bdrv_acct_done</name><argument_list pos:start="11:19" pos:end="11:45">(<argument pos:start="11:20" pos:end="11:34"><expr pos:start="11:20" pos:end="11:34"><name pos:start="11:20" pos:end="11:34"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:26">qdev</name><operator pos:start="11:27" pos:end="11:27">.</operator><name pos:start="11:28" pos:end="11:31">conf</name><operator pos:start="11:32" pos:end="11:32">.</operator><name pos:start="11:33" pos:end="11:34">bs</name></name></expr></argument>, <argument pos:start="11:37" pos:end="11:44"><expr pos:start="11:37" pos:end="11:44"><operator pos:start="11:37" pos:end="11:37">&amp;</operator><name pos:start="11:38" pos:end="11:44"><name pos:start="11:38" pos:end="11:38">r</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:44">acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">ret</name></expr>)</condition> <block pos:start="15:14" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:9">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:42">(<expr pos:start="17:13" pos:end="17:41"><call pos:start="17:13" pos:end="17:41"><name pos:start="17:13" pos:end="17:32">scsi_handle_rw_error</name><argument_list pos:start="17:33" pos:end="17:41">(<argument pos:start="17:34" pos:end="17:34"><expr pos:start="17:34" pos:end="17:34"><name pos:start="17:34" pos:end="17:34">r</name></expr></argument>, <argument pos:start="17:37" pos:end="17:40"><expr pos:start="17:37" pos:end="17:40"><operator pos:start="17:37" pos:end="17:37">-</operator><name pos:start="17:38" pos:end="17:40">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:44" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:22">

            <goto pos:start="19:13" pos:end="19:22">goto <name pos:start="19:18" pos:end="19:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:5">r</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:13">sector</name></name> <operator pos:start="27:15" pos:end="27:16">+=</operator> <name pos:start="27:18" pos:end="27:32"><name pos:start="27:18" pos:end="27:18">r</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:32">sector_count</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:5">r</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:19">sector_count</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><call pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:21">scsi_req_complete</name><argument_list pos:start="31:22" pos:end="31:36">(<argument pos:start="31:23" pos:end="31:29"><expr pos:start="31:23" pos:end="31:29"><operator pos:start="31:23" pos:end="31:23">&amp;</operator><name pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:24">r</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:29">req</name></name></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35">GOOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="35:1" pos:end="35:5"><name pos:start="35:1" pos:end="35:4">done</name>:</label>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:28">(<expr pos:start="37:9" pos:end="37:27"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:27"><name pos:start="37:10" pos:end="37:10">r</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:15">req</name><operator pos:start="37:16" pos:end="37:16">.</operator><name pos:start="37:17" pos:end="37:27">io_canceled</name></name></expr>)</condition> <block pos:start="37:30" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:32">

        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><call pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:22">scsi_req_unref</name><argument_list pos:start="39:23" pos:end="39:31">(<argument pos:start="39:24" pos:end="39:30"><expr pos:start="39:24" pos:end="39:30"><operator pos:start="39:24" pos:end="39:24">&amp;</operator><name pos:start="39:25" pos:end="39:30"><name pos:start="39:25" pos:end="39:25">r</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:30">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
