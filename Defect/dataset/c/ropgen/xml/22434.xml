<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22434.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">init_blk_migration</name><parameter_list pos:start="1:31" pos:end="1:43">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:41"><name pos:start="1:32" pos:end="1:39">QEMUFile</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">BlkMigDevState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">bmds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:19">sectors</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:19">block_mig_state</name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:29">submitted</name></name> <operator pos:start="13:31" pos:end="13:31">=</operator> <literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:19">block_mig_state</name><operator pos:start="15:20" pos:end="15:20">.</operator><name pos:start="15:21" pos:end="15:29">read_done</name></name> <operator pos:start="15:31" pos:end="15:31">=</operator> <literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:19">block_mig_state</name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:31">transferred</name></name> <operator pos:start="17:33" pos:end="17:33">=</operator> <literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:19">block_mig_state</name><operator pos:start="19:20" pos:end="19:20">.</operator><name pos:start="19:21" pos:end="19:36">total_sector_sum</name></name> <operator pos:start="19:38" pos:end="19:38">=</operator> <literal type="number" pos:start="19:40" pos:end="19:40">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:39"><expr pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:19">block_mig_state</name><operator pos:start="21:20" pos:end="21:20">.</operator><name pos:start="21:21" pos:end="21:33">prev_progress</name></name> <operator pos:start="21:35" pos:end="21:35">=</operator> <operator pos:start="21:37" pos:end="21:37">-</operator><literal type="number" pos:start="21:38" pos:end="21:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:39"><expr pos:start="23:5" pos:end="23:38"><name pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:19">block_mig_state</name><operator pos:start="23:20" pos:end="23:20">.</operator><name pos:start="23:21" pos:end="23:34">bulk_completed</name></name> <operator pos:start="23:36" pos:end="23:36">=</operator> <literal type="number" pos:start="23:38" pos:end="23:38">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:56"><expr pos:start="25:5" pos:end="25:55"><name pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:19">block_mig_state</name><operator pos:start="25:20" pos:end="25:20">.</operator><name pos:start="25:21" pos:end="25:31">zero_blocks</name></name> <operator pos:start="25:33" pos:end="25:33">=</operator> <call pos:start="25:35" pos:end="25:55"><name pos:start="25:35" pos:end="25:53">migrate_zero_blocks</name><argument_list pos:start="25:54" pos:end="25:55">()</argument_list></call></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="91:5">for <control pos:start="29:9" pos:end="29:54">(<init pos:start="29:10" pos:end="29:30"><expr pos:start="29:10" pos:end="29:29"><name pos:start="29:10" pos:end="29:11">bs</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:29"><name pos:start="29:15" pos:end="29:23">bdrv_next</name><argument_list pos:start="29:24" pos:end="29:29">(<argument pos:start="29:25" pos:end="29:28"><expr pos:start="29:25" pos:end="29:28"><name pos:start="29:25" pos:end="29:28">NULL</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="29:32" pos:end="29:34"><expr pos:start="29:32" pos:end="29:33"><name pos:start="29:32" pos:end="29:33">bs</name></expr>;</condition> <incr pos:start="29:36" pos:end="29:53"><expr pos:start="29:36" pos:end="29:53"><name pos:start="29:36" pos:end="29:37">bs</name> <operator pos:start="29:39" pos:end="29:39">=</operator> <call pos:start="29:41" pos:end="29:53"><name pos:start="29:41" pos:end="29:49">bdrv_next</name><argument_list pos:start="29:50" pos:end="29:53">(<argument pos:start="29:51" pos:end="29:52"><expr pos:start="29:51" pos:end="29:52"><name pos:start="29:51" pos:end="29:52">bs</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="29:56" pos:end="91:5">{<block_content pos:start="31:9" pos:end="89:70">

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:34">(<expr pos:start="31:13" pos:end="31:33"><call pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:29">bdrv_is_read_only</name><argument_list pos:start="31:30" pos:end="31:33">(<argument pos:start="31:31" pos:end="31:32"><expr pos:start="31:31" pos:end="31:32"><name pos:start="31:31" pos:end="31:32">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:36" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:21">

            <continue pos:start="33:13" pos:end="33:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:15">sectors</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:37"><name pos:start="39:19" pos:end="39:33">bdrv_nb_sectors</name><argument_list pos:start="39:34" pos:end="39:37">(<argument pos:start="39:35" pos:end="39:36"><expr pos:start="39:35" pos:end="39:36"><name pos:start="39:35" pos:end="39:36">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:25">(<expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:19">sectors</name> <operator pos:start="41:21" pos:end="41:22">&lt;=</operator> <literal type="number" pos:start="41:24" pos:end="41:24">0</literal></expr>)</condition> <block pos:start="41:27" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:19">

            <return pos:start="43:13" pos:end="43:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:41"><expr pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:12">bmds</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:40"><name pos:start="49:16" pos:end="49:21">g_new0</name><argument_list pos:start="49:22" pos:end="49:40">(<argument pos:start="49:23" pos:end="49:36"><expr pos:start="49:23" pos:end="49:36"><name pos:start="49:23" pos:end="49:36">BlkMigDevState</name></expr></argument>, <argument pos:start="49:39" pos:end="49:39"><expr pos:start="49:39" pos:end="49:39"><literal type="number" pos:start="49:39" pos:end="49:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:22"><expr pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:12">bmds</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:16">bs</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:21">bs</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:33"><expr pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:12">bmds</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:28">bulk_completed</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <literal type="number" pos:start="53:32" pos:end="53:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:38"><expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:12">bmds</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:27">total_sectors</name></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <name pos:start="55:31" pos:end="55:37">sectors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:36"><expr pos:start="57:9" pos:end="57:35"><name pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:12">bmds</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:31">completed_sectors</name></name> <operator pos:start="57:33" pos:end="57:33">=</operator> <literal type="number" pos:start="57:35" pos:end="57:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:12">bmds</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:25">shared_base</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:55"><name pos:start="59:29" pos:end="59:43">block_mig_state</name><operator pos:start="59:44" pos:end="59:44">.</operator><name pos:start="59:45" pos:end="59:55">shared_base</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><call pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:24">alloc_aio_bitmap</name><argument_list pos:start="61:25" pos:end="61:30">(<argument pos:start="61:26" pos:end="61:29"><expr pos:start="61:26" pos:end="61:29"><name pos:start="61:26" pos:end="61:29">bmds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:74"><expr pos:start="63:9" pos:end="63:73"><call pos:start="63:9" pos:end="63:73"><name pos:start="63:9" pos:end="63:18">error_setg</name><argument_list pos:start="63:19" pos:end="63:73">(<argument pos:start="63:20" pos:end="63:33"><expr pos:start="63:20" pos:end="63:33"><operator pos:start="63:20" pos:end="63:20">&amp;</operator><name pos:start="63:21" pos:end="63:33"><name pos:start="63:21" pos:end="63:24">bmds</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:33">blocker</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:72"><expr pos:start="63:36" pos:end="63:72"><literal type="string" pos:start="63:36" pos:end="63:72">"block device is in use by migration"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:45"><expr pos:start="65:9" pos:end="65:44"><call pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:25">bdrv_op_block_all</name><argument_list pos:start="65:26" pos:end="65:44">(<argument pos:start="65:27" pos:end="65:28"><expr pos:start="65:27" pos:end="65:28"><name pos:start="65:27" pos:end="65:28">bs</name></expr></argument>, <argument pos:start="65:31" pos:end="65:43"><expr pos:start="65:31" pos:end="65:43"><name pos:start="65:31" pos:end="65:43"><name pos:start="65:31" pos:end="65:34">bmds</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:43">blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:21"><expr pos:start="67:9" pos:end="67:20"><call pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:16">bdrv_ref</name><argument_list pos:start="67:17" pos:end="67:20">(<argument pos:start="67:18" pos:end="67:19"><expr pos:start="67:18" pos:end="67:19"><name pos:start="67:18" pos:end="67:19">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:52"><expr pos:start="71:9" pos:end="71:51"><name pos:start="71:9" pos:end="71:40"><name pos:start="71:9" pos:end="71:23">block_mig_state</name><operator pos:start="71:24" pos:end="71:24">.</operator><name pos:start="71:25" pos:end="71:40">total_sector_sum</name></name> <operator pos:start="71:42" pos:end="71:43">+=</operator> <name pos:start="71:45" pos:end="71:51">sectors</name></expr>;</expr_stmt>



        <if_stmt pos:start="75:9" pos:end="85:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:30">(<expr pos:start="75:13" pos:end="75:29"><name pos:start="75:13" pos:end="75:29"><name pos:start="75:13" pos:end="75:16">bmds</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:29">shared_base</name></name></expr>)</condition> <block pos:start="75:32" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:46">

            <expr_stmt pos:start="77:13" pos:end="79:46"><expr pos:start="77:13" pos:end="79:45"><call pos:start="77:13" pos:end="79:45"><name pos:start="77:13" pos:end="77:19">DPRINTF</name><argument_list pos:start="77:20" pos:end="79:45">(<argument pos:start="77:21" pos:end="77:69"><expr pos:start="77:21" pos:end="77:69"><literal type="string" pos:start="77:21" pos:end="77:69">"Start migration for %s with shared base image\n"</literal></expr></argument>,

                    <argument pos:start="79:21" pos:end="79:44"><expr pos:start="79:21" pos:end="79:44"><call pos:start="79:21" pos:end="79:44"><name pos:start="79:21" pos:end="79:40">bdrv_get_device_name</name><argument_list pos:start="79:41" pos:end="79:44">(<argument pos:start="79:42" pos:end="79:43"><expr pos:start="79:42" pos:end="79:43"><name pos:start="79:42" pos:end="79:43">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="85:9">else <block pos:start="81:16" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:79">

            <expr_stmt pos:start="83:13" pos:end="83:79"><expr pos:start="83:13" pos:end="83:78"><call pos:start="83:13" pos:end="83:78"><name pos:start="83:13" pos:end="83:19">DPRINTF</name><argument_list pos:start="83:20" pos:end="83:78">(<argument pos:start="83:21" pos:end="83:51"><expr pos:start="83:21" pos:end="83:51"><literal type="string" pos:start="83:21" pos:end="83:51">"Start full migration for %s\n"</literal></expr></argument>, <argument pos:start="83:54" pos:end="83:77"><expr pos:start="83:54" pos:end="83:77"><call pos:start="83:54" pos:end="83:77"><name pos:start="83:54" pos:end="83:73">bdrv_get_device_name</name><argument_list pos:start="83:74" pos:end="83:77">(<argument pos:start="83:75" pos:end="83:76"><expr pos:start="83:75" pos:end="83:76"><name pos:start="83:75" pos:end="83:76">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:70"><expr pos:start="89:9" pos:end="89:69"><call pos:start="89:9" pos:end="89:69"><name pos:start="89:9" pos:end="89:28">QSIMPLEQ_INSERT_TAIL</name><argument_list pos:start="89:29" pos:end="89:69">(<argument pos:start="89:30" pos:end="89:55"><expr pos:start="89:30" pos:end="89:55"><operator pos:start="89:30" pos:end="89:30">&amp;</operator><name pos:start="89:31" pos:end="89:55"><name pos:start="89:31" pos:end="89:45">block_mig_state</name><operator pos:start="89:46" pos:end="89:46">.</operator><name pos:start="89:47" pos:end="89:55">bmds_list</name></name></expr></argument>, <argument pos:start="89:58" pos:end="89:61"><expr pos:start="89:58" pos:end="89:61"><name pos:start="89:58" pos:end="89:61">bmds</name></expr></argument>, <argument pos:start="89:64" pos:end="89:68"><expr pos:start="89:64" pos:end="89:68"><name pos:start="89:64" pos:end="89:68">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
