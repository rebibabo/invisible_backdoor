<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4504.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">net_init_vde</name><parameter_list pos:start="1:17" pos:end="3:52">(<parameter pos:start="1:18" pos:end="1:45"><decl pos:start="1:18" pos:end="1:45"><type pos:start="1:18" pos:end="1:45"><specifier pos:start="1:18" pos:end="1:22">const</specifier> <name pos:start="1:24" pos:end="1:39">NetClientOptions</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">opts</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">name</name></decl></parameter>,

                 <parameter pos:start="3:18" pos:end="3:37"><decl pos:start="3:18" pos:end="3:37"><type pos:start="3:18" pos:end="3:37"><name pos:start="3:18" pos:end="3:31">NetClientState</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:37">peer</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:51"><decl pos:start="3:40" pos:end="3:51"><type pos:start="3:40" pos:end="3:51"><name pos:start="3:40" pos:end="3:44">Error</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier><modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:51">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="9:5" pos:end="31:13">

    <comment type="block" pos:start="7:5" pos:end="7:48">/* FIXME error_setg(errp, ...) on failure */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:28"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:26">NetdevVdeOptions</name> <modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:31">vde</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:54"><expr pos:start="13:5" pos:end="13:53"><call pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:53">(<argument pos:start="13:12" pos:end="13:52"><expr pos:start="13:12" pos:end="13:52"><name pos:start="13:12" pos:end="13:21"><name pos:start="13:12" pos:end="13:15">opts</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:21">type</name></name> <operator pos:start="13:23" pos:end="13:24">==</operator> <name pos:start="13:26" pos:end="13:52">NET_CLIENT_OPTIONS_KIND_VDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:7">vde</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <name pos:start="15:11" pos:end="15:21"><name pos:start="15:11" pos:end="15:14">opts</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:17">u</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:21">vde</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:74">/* missing optional values have been initialized to "all bits zero" */</comment>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="23:61">(<expr pos:start="21:9" pos:end="23:60"><call pos:start="21:9" pos:end="23:54"><name pos:start="21:9" pos:end="21:20">net_vde_init</name><argument_list pos:start="21:21" pos:end="23:54">(<argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">peer</name></expr></argument>, <argument pos:start="21:28" pos:end="21:32"><expr pos:start="21:28" pos:end="21:32"><literal type="string" pos:start="21:28" pos:end="21:32">"vde"</literal></expr></argument>, <argument pos:start="21:35" pos:end="21:38"><expr pos:start="21:35" pos:end="21:38"><name pos:start="21:35" pos:end="21:38">name</name></expr></argument>, <argument pos:start="21:41" pos:end="21:49"><expr pos:start="21:41" pos:end="21:49"><name pos:start="21:41" pos:end="21:49"><name pos:start="21:41" pos:end="21:43">vde</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:49">sock</name></name></expr></argument>, <argument pos:start="21:52" pos:end="21:60"><expr pos:start="21:52" pos:end="21:60"><name pos:start="21:52" pos:end="21:60"><name pos:start="21:52" pos:end="21:54">vde</name><operator pos:start="21:55" pos:end="21:56">-&gt;</operator><name pos:start="21:57" pos:end="21:60">port</name></name></expr></argument>, <argument pos:start="21:63" pos:end="21:72"><expr pos:start="21:63" pos:end="21:72"><name pos:start="21:63" pos:end="21:72"><name pos:start="21:63" pos:end="21:65">vde</name><operator pos:start="21:66" pos:end="21:67">-&gt;</operator><name pos:start="21:68" pos:end="21:72">group</name></name></expr></argument>,

                     <argument pos:start="23:22" pos:end="23:53"><expr pos:start="23:22" pos:end="23:53"><ternary pos:start="23:22" pos:end="23:53"><condition pos:start="23:22" pos:end="23:36"><expr pos:start="23:22" pos:end="23:34"><name pos:start="23:22" pos:end="23:34"><name pos:start="23:22" pos:end="23:24">vde</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:34">has_mode</name></name></expr> ?</condition><then pos:start="23:38" pos:end="23:46"> <expr pos:start="23:38" pos:end="23:46"><name pos:start="23:38" pos:end="23:46"><name pos:start="23:38" pos:end="23:40">vde</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:46">mode</name></name></expr> </then><else pos:start="23:48" pos:end="23:53">: <expr pos:start="23:50" pos:end="23:53"><literal type="number" pos:start="23:50" pos:end="23:53">0700</literal></expr></else></ternary></expr></argument>)</argument_list></call> <operator pos:start="23:56" pos:end="23:57">==</operator> <operator pos:start="23:59" pos:end="23:59">-</operator><literal type="number" pos:start="23:60" pos:end="23:60">1</literal></expr>)</condition> <block pos:start="23:63" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
