<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/864.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">qxl_post_load</name><parameter_list pos:start="1:25" pos:end="1:51">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:50"><decl pos:start="1:40" pos:end="1:50"><type pos:start="1:40" pos:end="1:50"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:50">version</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:13">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:16">PCIQXLDevice</name><modifier pos:start="5:17" pos:end="5:17">*</modifier></type> <name pos:start="5:19" pos:end="5:19">d</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:22">ram_start</name> <init pos:start="7:24" pos:end="7:40">= <expr pos:start="7:26" pos:end="7:40"><name pos:start="7:26" pos:end="7:40"><name pos:start="7:26" pos:end="7:26">d</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:31">vga</name><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:40">vram_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">QXLCommandExt</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">cmds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">in</name></decl>, <decl pos:start="11:13" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:15">out</name></decl>, <decl pos:start="11:18" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:24">newmode</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:54"><expr pos:start="15:5" pos:end="15:53"><call pos:start="15:5" pos:end="15:53"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:53">(<argument pos:start="15:12" pos:end="15:52"><expr pos:start="15:12" pos:end="15:52"><name pos:start="15:12" pos:end="15:33"><name pos:start="15:12" pos:end="15:12">d</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:33">last_release_offset</name></name> <operator pos:start="15:35" pos:end="15:35">&lt;</operator> <name pos:start="15:37" pos:end="15:52"><name pos:start="15:37" pos:end="15:37">d</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:42">vga</name><operator pos:start="15:43" pos:end="15:43">.</operator><name pos:start="15:44" pos:end="15:52">vram_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:36">(<expr pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:9">d</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:30">last_release_offset</name></name> <operator pos:start="17:32" pos:end="17:33">==</operator> <literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr>)</condition> <block pos:start="17:38" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:31">

        <expr_stmt pos:start="19:9" pos:end="19:31"><expr pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:9">d</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:23">last_release</name></name> <operator pos:start="19:25" pos:end="19:25">=</operator> <name pos:start="19:27" pos:end="19:30">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="25:5">else <block pos:start="21:12" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:81">

        <expr_stmt pos:start="23:9" pos:end="23:81"><expr pos:start="23:9" pos:end="23:80"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:9">d</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:23">last_release</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:41">QXLReleaseInfo</name> <operator pos:start="23:43" pos:end="23:43">*</operator><operator pos:start="23:44" pos:end="23:44">)</operator><operator pos:start="23:45" pos:end="23:45">(</operator><name pos:start="23:46" pos:end="23:54">ram_start</name> <operator pos:start="23:56" pos:end="23:56">+</operator> <name pos:start="23:58" pos:end="23:79"><name pos:start="23:58" pos:end="23:58">d</name><operator pos:start="23:59" pos:end="23:60">-&gt;</operator><name pos:start="23:61" pos:end="23:79">last_release_offset</name></name><operator pos:start="23:80" pos:end="23:80">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:68"><expr pos:start="29:5" pos:end="29:67"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:5">d</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:12">modes</name></name> <operator pos:start="29:14" pos:end="29:14">=</operator> <operator pos:start="29:16" pos:end="29:16">(</operator><name pos:start="29:17" pos:end="29:24">QXLModes</name><operator pos:start="29:25" pos:end="29:25">*</operator><operator pos:start="29:26" pos:end="29:26">)</operator><operator pos:start="29:27" pos:end="29:27">(</operator><operator pos:start="29:28" pos:end="29:28">(</operator><name pos:start="29:29" pos:end="29:35">uint8_t</name><operator pos:start="29:36" pos:end="29:36">*</operator><operator pos:start="29:37" pos:end="29:37">)</operator><name pos:start="29:38" pos:end="29:43"><name pos:start="29:38" pos:end="29:38">d</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:43">rom</name></name> <operator pos:start="29:45" pos:end="29:45">+</operator> <name pos:start="29:47" pos:end="29:66"><name pos:start="29:47" pos:end="29:47">d</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:52">rom</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:66">modes_offset</name></name><operator pos:start="29:67" pos:end="29:67">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:60"><expr pos:start="33:5" pos:end="33:59"><call pos:start="33:5" pos:end="33:59"><name pos:start="33:5" pos:end="33:23">trace_qxl_post_load</name><argument_list pos:start="33:24" pos:end="33:59">(<argument pos:start="33:25" pos:end="33:29"><expr pos:start="33:25" pos:end="33:29"><name pos:start="33:25" pos:end="33:29"><name pos:start="33:25" pos:end="33:25">d</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:29">id</name></name></expr></argument>, <argument pos:start="33:32" pos:end="33:58"><expr pos:start="33:32" pos:end="33:58"><call pos:start="33:32" pos:end="33:58"><name pos:start="33:32" pos:end="33:49">qxl_mode_to_string</name><argument_list pos:start="33:50" pos:end="33:58">(<argument pos:start="33:51" pos:end="33:57"><expr pos:start="33:51" pos:end="33:57"><name pos:start="33:51" pos:end="33:57"><name pos:start="33:51" pos:end="33:51">d</name><operator pos:start="33:52" pos:end="33:53">-&gt;</operator><name pos:start="33:54" pos:end="33:57">mode</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:11">newmode</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:21"><name pos:start="35:15" pos:end="35:15">d</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:21">mode</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:5">d</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:11">mode</name></name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:32">QXL_MODE_UNDEFINED</name></expr>;</expr_stmt>



    <switch pos:start="41:5" pos:end="121:5">switch <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:19">newmode</name></expr>)</condition> <block pos:start="41:22" pos:end="121:5">{<block_content pos:start="43:5" pos:end="119:14">

    <case pos:start="43:5" pos:end="43:28">case <expr pos:start="43:10" pos:end="43:27"><name pos:start="43:10" pos:end="43:27">QXL_MODE_UNDEFINED</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><call pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:27">qxl_create_memslots</name><argument_list pos:start="45:28" pos:end="45:30">(<argument pos:start="45:29" pos:end="45:29"><expr pos:start="45:29" pos:end="45:29"><name pos:start="45:29" pos:end="45:29">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:22">case <expr pos:start="49:10" pos:end="49:21"><name pos:start="49:10" pos:end="49:21">QXL_MODE_VGA</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><call pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:27">qxl_create_memslots</name><argument_list pos:start="51:28" pos:end="51:30">(<argument pos:start="51:29" pos:end="51:29"><expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><call pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:26">qxl_enter_vga_mode</name><argument_list pos:start="53:27" pos:end="53:29">(<argument pos:start="53:28" pos:end="53:28"><expr pos:start="53:28" pos:end="53:28"><name pos:start="53:28" pos:end="53:28">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:25">case <expr pos:start="57:10" pos:end="57:24"><name pos:start="57:10" pos:end="57:24">QXL_MODE_NATIVE</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><call pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:27">qxl_create_memslots</name><argument_list pos:start="59:28" pos:end="59:30">(<argument pos:start="59:29" pos:end="59:29"><expr pos:start="59:29" pos:end="59:29"><name pos:start="59:29" pos:end="59:29">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:49"><expr pos:start="61:9" pos:end="61:48"><call pos:start="61:9" pos:end="61:48"><name pos:start="61:9" pos:end="61:32">qxl_create_guest_primary</name><argument_list pos:start="61:33" pos:end="61:48">(<argument pos:start="61:34" pos:end="61:34"><expr pos:start="61:34" pos:end="61:34"><name pos:start="61:34" pos:end="61:34">d</name></expr></argument>, <argument pos:start="61:37" pos:end="61:37"><expr pos:start="61:37" pos:end="61:37"><literal type="number" pos:start="61:37" pos:end="61:37">1</literal></expr></argument>, <argument pos:start="61:40" pos:end="61:47"><expr pos:start="61:40" pos:end="61:47"><name pos:start="61:40" pos:end="61:47">QXL_SYNC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="65:9" pos:end="65:59">/* replay surface-create and cursor-set commands */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:76"><expr pos:start="67:9" pos:end="67:75"><name pos:start="67:9" pos:end="67:12">cmds</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <call pos:start="67:16" pos:end="67:75"><name pos:start="67:16" pos:end="67:24">g_malloc0</name><argument_list pos:start="67:25" pos:end="67:75">(<argument pos:start="67:26" pos:end="67:74"><expr pos:start="67:26" pos:end="67:74"><sizeof pos:start="67:26" pos:end="67:46">sizeof<argument_list pos:start="67:32" pos:end="67:46">(<argument pos:start="67:33" pos:end="67:45"><expr pos:start="67:33" pos:end="67:45"><name pos:start="67:33" pos:end="67:45">QXLCommandExt</name></expr></argument>)</argument_list></sizeof> <operator pos:start="67:48" pos:end="67:48">*</operator> <operator pos:start="67:50" pos:end="67:50">(</operator><name pos:start="67:51" pos:end="67:69"><name pos:start="67:51" pos:end="67:51">d</name><operator pos:start="67:52" pos:end="67:53">-&gt;</operator><name pos:start="67:54" pos:end="67:56">ssd</name><operator pos:start="67:57" pos:end="67:57">.</operator><name pos:start="67:58" pos:end="67:69">num_surfaces</name></name> <operator pos:start="67:71" pos:end="67:71">+</operator> <literal type="number" pos:start="67:73" pos:end="67:73">1</literal><operator pos:start="67:74" pos:end="67:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="69:9" pos:end="85:9">for <control pos:start="69:13" pos:end="69:61">(<init pos:start="69:14" pos:end="69:29"><expr pos:start="69:14" pos:end="69:19"><name pos:start="69:14" pos:end="69:15">in</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr><operator pos:start="69:20" pos:end="69:20">,</operator> <expr pos:start="69:22" pos:end="69:28"><name pos:start="69:22" pos:end="69:24">out</name> <operator pos:start="69:26" pos:end="69:26">=</operator> <literal type="number" pos:start="69:28" pos:end="69:28">0</literal></expr>;</init> <condition pos:start="69:31" pos:end="69:55"><expr pos:start="69:31" pos:end="69:54"><name pos:start="69:31" pos:end="69:32">in</name> <operator pos:start="69:34" pos:end="69:34">&lt;</operator> <name pos:start="69:36" pos:end="69:54"><name pos:start="69:36" pos:end="69:36">d</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:41">ssd</name><operator pos:start="69:42" pos:end="69:42">.</operator><name pos:start="69:43" pos:end="69:54">num_surfaces</name></name></expr>;</condition> <incr pos:start="69:57" pos:end="69:60"><expr pos:start="69:57" pos:end="69:60"><name pos:start="69:57" pos:end="69:58">in</name><operator pos:start="69:59" pos:end="69:60">++</operator></expr></incr>)</control> <block pos:start="69:63" pos:end="85:9">{<block_content pos:start="71:13" pos:end="83:18">

            <if_stmt pos:start="71:13" pos:end="75:13"><if pos:start="71:13" pos:end="75:13">if <condition pos:start="71:16" pos:end="71:48">(<expr pos:start="71:17" pos:end="71:47"><name pos:start="71:17" pos:end="71:42"><name pos:start="71:17" pos:end="71:17">d</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:33">guest_surfaces</name><operator pos:start="71:34" pos:end="71:34">.</operator><name pos:start="71:35" pos:end="71:38">cmds</name><index pos:start="71:39" pos:end="71:42">[<expr pos:start="71:40" pos:end="71:41"><name pos:start="71:40" pos:end="71:41">in</name></expr>]</index></name> <operator pos:start="71:44" pos:end="71:45">==</operator> <literal type="number" pos:start="71:47" pos:end="71:47">0</literal></expr>)</condition> <block pos:start="71:50" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:25">

                <continue pos:start="73:17" pos:end="73:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:60"><expr pos:start="77:13" pos:end="77:59"><name pos:start="77:13" pos:end="77:21"><name pos:start="77:13" pos:end="77:16">cmds</name><index pos:start="77:17" pos:end="77:21">[<expr pos:start="77:18" pos:end="77:20"><name pos:start="77:18" pos:end="77:20">out</name></expr>]</index></name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:30"><name pos:start="77:23" pos:end="77:25">cmd</name><operator pos:start="77:26" pos:end="77:26">.</operator><name pos:start="77:27" pos:end="77:30">data</name></name> <operator pos:start="77:32" pos:end="77:32">=</operator> <name pos:start="77:34" pos:end="77:59"><name pos:start="77:34" pos:end="77:34">d</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:50">guest_surfaces</name><operator pos:start="77:51" pos:end="77:51">.</operator><name pos:start="77:52" pos:end="77:55">cmds</name><index pos:start="77:56" pos:end="77:59">[<expr pos:start="77:57" pos:end="77:58"><name pos:start="77:57" pos:end="77:58">in</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:49"><expr pos:start="79:13" pos:end="79:48"><name pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:16">cmds</name><index pos:start="79:17" pos:end="79:21">[<expr pos:start="79:18" pos:end="79:20"><name pos:start="79:18" pos:end="79:20">out</name></expr>]</index></name><operator pos:start="79:22" pos:end="79:22">.</operator><name pos:start="79:23" pos:end="79:30"><name pos:start="79:23" pos:end="79:25">cmd</name><operator pos:start="79:26" pos:end="79:26">.</operator><name pos:start="79:27" pos:end="79:30">type</name></name> <operator pos:start="79:32" pos:end="79:32">=</operator> <name pos:start="79:34" pos:end="79:48">QXL_CMD_SURFACE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:53"><expr pos:start="81:13" pos:end="81:52"><name pos:start="81:13" pos:end="81:21"><name pos:start="81:13" pos:end="81:16">cmds</name><index pos:start="81:17" pos:end="81:21">[<expr pos:start="81:18" pos:end="81:20"><name pos:start="81:18" pos:end="81:20">out</name></expr>]</index></name><operator pos:start="81:22" pos:end="81:22">.</operator><name pos:start="81:23" pos:end="81:30">group_id</name> <operator pos:start="81:32" pos:end="81:32">=</operator> <name pos:start="81:34" pos:end="81:52">MEMSLOT_GROUP_GUEST</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:18"><expr pos:start="83:13" pos:end="83:17"><name pos:start="83:13" pos:end="83:15">out</name><operator pos:start="83:16" pos:end="83:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="87:9" pos:end="97:9"><if pos:start="87:9" pos:end="97:9">if <condition pos:start="87:12" pos:end="87:28">(<expr pos:start="87:13" pos:end="87:27"><name pos:start="87:13" pos:end="87:27"><name pos:start="87:13" pos:end="87:13">d</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:27">guest_cursor</name></name></expr>)</condition> <block pos:start="87:30" pos:end="97:9">{<block_content pos:start="89:13" pos:end="95:18">

            <expr_stmt pos:start="89:13" pos:end="89:49"><expr pos:start="89:13" pos:end="89:48"><name pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:16">cmds</name><index pos:start="89:17" pos:end="89:21">[<expr pos:start="89:18" pos:end="89:20"><name pos:start="89:18" pos:end="89:20">out</name></expr>]</index></name><operator pos:start="89:22" pos:end="89:22">.</operator><name pos:start="89:23" pos:end="89:30"><name pos:start="89:23" pos:end="89:25">cmd</name><operator pos:start="89:26" pos:end="89:26">.</operator><name pos:start="89:27" pos:end="89:30">data</name></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:48"><name pos:start="89:34" pos:end="89:34">d</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:48">guest_cursor</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:48"><expr pos:start="91:13" pos:end="91:47"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:16">cmds</name><index pos:start="91:17" pos:end="91:21">[<expr pos:start="91:18" pos:end="91:20"><name pos:start="91:18" pos:end="91:20">out</name></expr>]</index></name><operator pos:start="91:22" pos:end="91:22">.</operator><name pos:start="91:23" pos:end="91:30"><name pos:start="91:23" pos:end="91:25">cmd</name><operator pos:start="91:26" pos:end="91:26">.</operator><name pos:start="91:27" pos:end="91:30">type</name></name> <operator pos:start="91:32" pos:end="91:32">=</operator> <name pos:start="91:34" pos:end="91:47">QXL_CMD_CURSOR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:53"><expr pos:start="93:13" pos:end="93:52"><name pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:16">cmds</name><index pos:start="93:17" pos:end="93:21">[<expr pos:start="93:18" pos:end="93:20"><name pos:start="93:18" pos:end="93:20">out</name></expr>]</index></name><operator pos:start="93:22" pos:end="93:22">.</operator><name pos:start="93:23" pos:end="93:30">group_id</name> <operator pos:start="93:32" pos:end="93:32">=</operator> <name pos:start="93:34" pos:end="93:52">MEMSLOT_GROUP_GUEST</name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:18"><expr pos:start="95:13" pos:end="95:17"><name pos:start="95:13" pos:end="95:15">out</name><operator pos:start="95:16" pos:end="95:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:48"><expr pos:start="99:9" pos:end="99:47"><call pos:start="99:9" pos:end="99:47"><name pos:start="99:9" pos:end="99:33">qxl_spice_loadvm_commands</name><argument_list pos:start="99:34" pos:end="99:47">(<argument pos:start="99:35" pos:end="99:35"><expr pos:start="99:35" pos:end="99:35"><name pos:start="99:35" pos:end="99:35">d</name></expr></argument>, <argument pos:start="99:38" pos:end="99:41"><expr pos:start="99:38" pos:end="99:41"><name pos:start="99:38" pos:end="99:41">cmds</name></expr></argument>, <argument pos:start="99:44" pos:end="99:46"><expr pos:start="99:44" pos:end="99:46"><name pos:start="99:44" pos:end="99:46">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:21"><expr pos:start="101:9" pos:end="101:20"><call pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:14">g_free</name><argument_list pos:start="101:15" pos:end="101:20">(<argument pos:start="101:16" pos:end="101:19"><expr pos:start="101:16" pos:end="101:19"><name pos:start="101:16" pos:end="101:19">cmds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="107:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:37">(<expr pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:13">d</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:36">guest_monitors_config</name></name></expr>)</condition> <block pos:start="103:39" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:50">

            <expr_stmt pos:start="105:13" pos:end="105:50"><expr pos:start="105:13" pos:end="105:49"><call pos:start="105:13" pos:end="105:49"><name pos:start="105:13" pos:end="105:43">qxl_spice_monitors_config_async</name><argument_list pos:start="105:44" pos:end="105:49">(<argument pos:start="105:45" pos:end="105:45"><expr pos:start="105:45" pos:end="105:45"><name pos:start="105:45" pos:end="105:45">d</name></expr></argument>, <argument pos:start="105:48" pos:end="105:48"><expr pos:start="105:48" pos:end="105:48"><literal type="number" pos:start="105:48" pos:end="105:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:25">case <expr pos:start="111:10" pos:end="111:24"><name pos:start="111:10" pos:end="111:24">QXL_MODE_COMPAT</name></expr>:</case>

        <comment type="block" pos:start="113:9" pos:end="115:35">/* note: no need to call qxl_create_memslots, qxl_set_mode

         * creates the mem slot. */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:47"><expr pos:start="117:9" pos:end="117:46"><call pos:start="117:9" pos:end="117:46"><name pos:start="117:9" pos:end="117:20">qxl_set_mode</name><argument_list pos:start="117:21" pos:end="117:46">(<argument pos:start="117:22" pos:end="117:22"><expr pos:start="117:22" pos:end="117:22"><name pos:start="117:22" pos:end="117:22">d</name></expr></argument>, <argument pos:start="117:25" pos:end="117:42"><expr pos:start="117:25" pos:end="117:42"><name pos:start="117:25" pos:end="117:42"><name pos:start="117:25" pos:end="117:25">d</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:37">shadow_rom</name><operator pos:start="117:38" pos:end="117:38">.</operator><name pos:start="117:39" pos:end="117:42">mode</name></name></expr></argument>, <argument pos:start="117:45" pos:end="117:45"><expr pos:start="117:45" pos:end="117:45"><literal type="number" pos:start="117:45" pos:end="117:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
