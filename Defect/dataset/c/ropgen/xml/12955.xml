<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12955.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">con_initialise</name><parameter_list pos:start="1:26" pos:end="1:51">(<parameter pos:start="1:27" pos:end="1:50"><decl pos:start="1:27" pos:end="1:50"><type pos:start="1:27" pos:end="1:50"><name pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:32">struct</name> <name pos:start="1:34" pos:end="1:42">XenDevice</name></name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">xendev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:13">

    <decl_stmt pos:start="5:5" pos:end="5:77"><decl pos:start="5:5" pos:end="5:76"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">XenConsole</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">con</name> <init pos:start="5:28" pos:end="5:76">= <expr pos:start="5:30" pos:end="5:76"><call pos:start="5:30" pos:end="5:76"><name pos:start="5:30" pos:end="5:41">container_of</name><argument_list pos:start="5:42" pos:end="5:76">(<argument pos:start="5:43" pos:end="5:48"><expr pos:start="5:43" pos:end="5:48"><name pos:start="5:43" pos:end="5:48">xendev</name></expr></argument>, <argument pos:start="5:51" pos:end="5:67"><expr pos:start="5:51" pos:end="5:67">struct <name pos:start="5:58" pos:end="5:67">XenConsole</name></expr></argument>, <argument pos:start="5:70" pos:end="5:75"><expr pos:start="5:70" pos:end="5:75"><name pos:start="5:70" pos:end="5:75">xendev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">limit</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:18"><if pos:start="11:5" pos:end="13:18">if <condition pos:start="11:8" pos:end="11:74">(<expr pos:start="11:9" pos:end="11:73"><call pos:start="11:9" pos:end="11:67"><name pos:start="11:9" pos:end="11:25">xenstore_read_int</name><argument_list pos:start="11:26" pos:end="11:67">(<argument pos:start="11:27" pos:end="11:38"><expr pos:start="11:27" pos:end="11:38"><name pos:start="11:27" pos:end="11:38"><name pos:start="11:27" pos:end="11:29">con</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:38">console</name></name></expr></argument>, <argument pos:start="11:41" pos:end="11:50"><expr pos:start="11:41" pos:end="11:50"><literal type="string" pos:start="11:41" pos:end="11:50">"ring-ref"</literal></expr></argument>, <argument pos:start="11:53" pos:end="11:66"><expr pos:start="11:53" pos:end="11:66"><operator pos:start="11:53" pos:end="11:53">&amp;</operator><name pos:start="11:54" pos:end="11:66"><name pos:start="11:54" pos:end="11:56">con</name><operator pos:start="11:57" pos:end="11:58">-&gt;</operator><name pos:start="11:59" pos:end="11:66">ring_ref</name></name></expr></argument>)</argument_list></call> <operator pos:start="11:69" pos:end="11:70">==</operator> <operator pos:start="11:72" pos:end="11:72">-</operator><literal type="number" pos:start="11:73" pos:end="11:73">1</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:18"><block_content pos:start="13:9" pos:end="13:18">

	<return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:80">(<expr pos:start="15:9" pos:end="15:79"><call pos:start="15:9" pos:end="15:73"><name pos:start="15:9" pos:end="15:25">xenstore_read_int</name><argument_list pos:start="15:26" pos:end="15:73">(<argument pos:start="15:27" pos:end="15:38"><expr pos:start="15:27" pos:end="15:38"><name pos:start="15:27" pos:end="15:38"><name pos:start="15:27" pos:end="15:29">con</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:38">console</name></name></expr></argument>, <argument pos:start="15:41" pos:end="15:46"><expr pos:start="15:41" pos:end="15:46"><literal type="string" pos:start="15:41" pos:end="15:46">"port"</literal></expr></argument>, <argument pos:start="15:49" pos:end="15:72"><expr pos:start="15:49" pos:end="15:72"><operator pos:start="15:49" pos:end="15:49">&amp;</operator><name pos:start="15:50" pos:end="15:72"><name pos:start="15:50" pos:end="15:52">con</name><operator pos:start="15:53" pos:end="15:54">-&gt;</operator><name pos:start="15:55" pos:end="15:60">xendev</name><operator pos:start="15:61" pos:end="15:61">.</operator><name pos:start="15:62" pos:end="15:72">remote_port</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:75" pos:end="15:76">==</operator> <operator pos:start="15:78" pos:end="15:78">-</operator><literal type="number" pos:start="15:79" pos:end="15:79">1</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

	<return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:41"><if pos:start="19:5" pos:end="21:41">if <condition pos:start="19:8" pos:end="19:62">(<expr pos:start="19:9" pos:end="19:61"><call pos:start="19:9" pos:end="19:56"><name pos:start="19:9" pos:end="19:25">xenstore_read_int</name><argument_list pos:start="19:26" pos:end="19:56">(<argument pos:start="19:27" pos:end="19:38"><expr pos:start="19:27" pos:end="19:38"><name pos:start="19:27" pos:end="19:38"><name pos:start="19:27" pos:end="19:29">con</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:38">console</name></name></expr></argument>, <argument pos:start="19:41" pos:end="19:47"><expr pos:start="19:41" pos:end="19:47"><literal type="string" pos:start="19:41" pos:end="19:47">"limit"</literal></expr></argument>, <argument pos:start="19:50" pos:end="19:55"><expr pos:start="19:50" pos:end="19:55"><operator pos:start="19:50" pos:end="19:50">&amp;</operator><name pos:start="19:51" pos:end="19:55">limit</name></expr></argument>)</argument_list></call> <operator pos:start="19:58" pos:end="19:59">==</operator> <literal type="number" pos:start="19:61" pos:end="19:61">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:41"><block_content pos:start="21:9" pos:end="21:41">

	<expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:11">con</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:19">buffer</name><operator pos:start="21:20" pos:end="21:20">.</operator><name pos:start="21:21" pos:end="21:32">max_capacity</name></name> <operator pos:start="21:34" pos:end="21:34">=</operator> <name pos:start="21:36" pos:end="21:40">limit</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="43:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:20"><name pos:start="25:10" pos:end="25:15">xendev</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:20">dev</name></name></expr>)</condition> <block pos:start="25:23" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:57">

        <expr_stmt pos:start="27:9" pos:end="33:57"><expr pos:start="27:9" pos:end="33:56"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:11">con</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:18">sring</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="33:56"><name pos:start="27:22" pos:end="27:41">xc_map_foreign_range</name><argument_list pos:start="27:42" pos:end="33:56">(<argument pos:start="27:43" pos:end="27:48"><expr pos:start="27:43" pos:end="27:48"><name pos:start="27:43" pos:end="27:48">xen_xc</name></expr></argument>, <argument pos:start="27:51" pos:end="27:65"><expr pos:start="27:51" pos:end="27:65"><name pos:start="27:51" pos:end="27:65"><name pos:start="27:51" pos:end="27:53">con</name><operator pos:start="27:54" pos:end="27:55">-&gt;</operator><name pos:start="27:56" pos:end="27:61">xendev</name><operator pos:start="27:62" pos:end="27:62">.</operator><name pos:start="27:63" pos:end="27:65">dom</name></name></expr></argument>,

                                          <argument pos:start="29:43" pos:end="29:54"><expr pos:start="29:43" pos:end="29:54"><name pos:start="29:43" pos:end="29:54">XC_PAGE_SIZE</name></expr></argument>,

                                          <argument pos:start="31:43" pos:end="31:62"><expr pos:start="31:43" pos:end="31:62"><name pos:start="31:43" pos:end="31:51">PROT_READ</name><operator pos:start="31:52" pos:end="31:52">|</operator><name pos:start="31:53" pos:end="31:62">PROT_WRITE</name></expr></argument>,

                                          <argument pos:start="33:43" pos:end="33:55"><expr pos:start="33:43" pos:end="33:55"><name pos:start="33:43" pos:end="33:55"><name pos:start="33:43" pos:end="33:45">con</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:55">ring_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="43:5">else <block pos:start="35:12" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:67">

        <expr_stmt pos:start="37:9" pos:end="41:67"><expr pos:start="37:9" pos:end="41:66"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:11">con</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:18">sring</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <call pos:start="37:22" pos:end="41:66"><name pos:start="37:22" pos:end="37:44">xengnttab_map_grant_ref</name><argument_list pos:start="37:45" pos:end="41:66">(<argument pos:start="37:46" pos:end="37:62"><expr pos:start="37:46" pos:end="37:62"><name pos:start="37:46" pos:end="37:62"><name pos:start="37:46" pos:end="37:51">xendev</name><operator pos:start="37:52" pos:end="37:53">-&gt;</operator><name pos:start="37:54" pos:end="37:62">gnttabdev</name></name></expr></argument>, <argument pos:start="37:65" pos:end="37:79"><expr pos:start="37:65" pos:end="37:79"><name pos:start="37:65" pos:end="37:79"><name pos:start="37:65" pos:end="37:67">con</name><operator pos:start="37:68" pos:end="37:69">-&gt;</operator><name pos:start="37:70" pos:end="37:75">xendev</name><operator pos:start="37:76" pos:end="37:76">.</operator><name pos:start="37:77" pos:end="37:79">dom</name></name></expr></argument>,

                                             <argument pos:start="39:46" pos:end="39:58"><expr pos:start="39:46" pos:end="39:58"><name pos:start="39:46" pos:end="39:58"><name pos:start="39:46" pos:end="39:48">con</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:58">ring_ref</name></name></expr></argument>,

                                             <argument pos:start="41:46" pos:end="41:65"><expr pos:start="41:46" pos:end="41:65"><name pos:start="41:46" pos:end="41:54">PROT_READ</name><operator pos:start="41:55" pos:end="41:55">|</operator><name pos:start="41:56" pos:end="41:65">PROT_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="45:5" pos:end="47:18"><if pos:start="45:5" pos:end="47:18">if <condition pos:start="45:8" pos:end="45:20">(<expr pos:start="45:9" pos:end="45:19"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:19"><name pos:start="45:10" pos:end="45:12">con</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:19">sring</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:18"><block_content pos:start="47:9" pos:end="47:18">

	<return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><call pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:22">xen_be_bind_evtchn</name><argument_list pos:start="51:23" pos:end="51:36">(<argument pos:start="51:24" pos:end="51:35"><expr pos:start="51:24" pos:end="51:35"><operator pos:start="51:24" pos:end="51:24">&amp;</operator><name pos:start="51:25" pos:end="51:35"><name pos:start="51:25" pos:end="51:27">con</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:35">xendev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="73:5"><if pos:start="53:5" pos:end="73:5">if <condition pos:start="53:8" pos:end="53:17">(<expr pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:11">con</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:16">chr</name></name></expr>)</condition> <block pos:start="53:19" pos:end="73:5">{<block_content pos:start="55:9" pos:end="71:9">

        <if_stmt pos:start="55:9" pos:end="71:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:45">(<expr pos:start="55:13" pos:end="55:44"><call pos:start="55:13" pos:end="55:39"><name pos:start="55:13" pos:end="55:29">qemu_chr_fe_claim</name><argument_list pos:start="55:30" pos:end="55:39">(<argument pos:start="55:31" pos:end="55:38"><expr pos:start="55:31" pos:end="55:38"><name pos:start="55:31" pos:end="55:38"><name pos:start="55:31" pos:end="55:33">con</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:38">chr</name></name></expr></argument>)</argument_list></call> <operator pos:start="55:41" pos:end="55:42">==</operator> <literal type="number" pos:start="55:44" pos:end="55:44">0</literal></expr>)</condition> <block pos:start="55:47" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:62">

            <expr_stmt pos:start="57:13" pos:end="59:62"><expr pos:start="57:13" pos:end="59:61"><call pos:start="57:13" pos:end="59:61"><name pos:start="57:13" pos:end="57:33">qemu_chr_add_handlers</name><argument_list pos:start="57:34" pos:end="59:61">(<argument pos:start="57:35" pos:end="57:42"><expr pos:start="57:35" pos:end="57:42"><name pos:start="57:35" pos:end="57:42"><name pos:start="57:35" pos:end="57:37">con</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:42">chr</name></name></expr></argument>, <argument pos:start="57:45" pos:end="57:63"><expr pos:start="57:45" pos:end="57:63"><name pos:start="57:45" pos:end="57:63">xencons_can_receive</name></expr></argument>,

                                  <argument pos:start="59:35" pos:end="59:49"><expr pos:start="59:35" pos:end="59:49"><name pos:start="59:35" pos:end="59:49">xencons_receive</name></expr></argument>, <argument pos:start="59:52" pos:end="59:55"><expr pos:start="59:52" pos:end="59:55"><name pos:start="59:52" pos:end="59:55">NULL</name></expr></argument>, <argument pos:start="59:58" pos:end="59:60"><expr pos:start="59:58" pos:end="59:60"><name pos:start="59:58" pos:end="59:60">con</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="71:9">else <block pos:start="61:16" pos:end="71:9">{<block_content pos:start="63:13" pos:end="69:28">

            <expr_stmt pos:start="63:13" pos:end="67:43"><expr pos:start="63:13" pos:end="67:42"><call pos:start="63:13" pos:end="67:42"><name pos:start="63:13" pos:end="63:25">xen_be_printf</name><argument_list pos:start="63:26" pos:end="67:42">(<argument pos:start="63:27" pos:end="63:32"><expr pos:start="63:27" pos:end="63:32"><name pos:start="63:27" pos:end="63:32">xendev</name></expr></argument>, <argument pos:start="63:35" pos:end="63:35"><expr pos:start="63:35" pos:end="63:35"><literal type="number" pos:start="63:35" pos:end="63:35">0</literal></expr></argument>,

                          <argument pos:start="65:27" pos:end="65:76"><expr pos:start="65:27" pos:end="65:76"><literal type="string" pos:start="65:27" pos:end="65:76">"xen_console_init error chardev %s already used\n"</literal></expr></argument>,

                          <argument pos:start="67:27" pos:end="67:41"><expr pos:start="67:27" pos:end="67:41"><name pos:start="67:27" pos:end="67:41"><name pos:start="67:27" pos:end="67:29">con</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:34">chr</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:41">label</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:28"><expr pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:20"><name pos:start="69:13" pos:end="69:15">con</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:20">chr</name></name> <operator pos:start="69:22" pos:end="69:22">=</operator> <name pos:start="69:24" pos:end="69:27">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="85:44"><expr pos:start="77:5" pos:end="85:43"><call pos:start="77:5" pos:end="85:43"><name pos:start="77:5" pos:end="77:17">xen_be_printf</name><argument_list pos:start="77:18" pos:end="85:43">(<argument pos:start="77:19" pos:end="77:24"><expr pos:start="77:19" pos:end="77:24"><name pos:start="77:19" pos:end="77:24">xendev</name></expr></argument>, <argument pos:start="77:27" pos:end="77:27"><expr pos:start="77:27" pos:end="77:27"><literal type="number" pos:start="77:27" pos:end="77:27">1</literal></expr></argument>, <argument pos:start="77:30" pos:end="77:86"><expr pos:start="77:30" pos:end="77:86"><literal type="string" pos:start="77:30" pos:end="77:86">"ring mfn %d, remote port %d, local port %d, limit %zd\n"</literal></expr></argument>,

		  <argument pos:start="79:19" pos:end="79:31"><expr pos:start="79:19" pos:end="79:31"><name pos:start="79:19" pos:end="79:31"><name pos:start="79:19" pos:end="79:21">con</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:31">ring_ref</name></name></expr></argument>,

		  <argument pos:start="81:19" pos:end="81:41"><expr pos:start="81:19" pos:end="81:41"><name pos:start="81:19" pos:end="81:41"><name pos:start="81:19" pos:end="81:21">con</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:29">xendev</name><operator pos:start="81:30" pos:end="81:30">.</operator><name pos:start="81:31" pos:end="81:41">remote_port</name></name></expr></argument>,

		  <argument pos:start="83:19" pos:end="83:40"><expr pos:start="83:19" pos:end="83:40"><name pos:start="83:19" pos:end="83:40"><name pos:start="83:19" pos:end="83:21">con</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:29">xendev</name><operator pos:start="83:30" pos:end="83:30">.</operator><name pos:start="83:31" pos:end="83:40">local_port</name></name></expr></argument>,

		  <argument pos:start="85:19" pos:end="85:42"><expr pos:start="85:19" pos:end="85:42"><name pos:start="85:19" pos:end="85:42"><name pos:start="85:19" pos:end="85:21">con</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:29">buffer</name><operator pos:start="85:30" pos:end="85:30">.</operator><name pos:start="85:31" pos:end="85:42">max_capacity</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
