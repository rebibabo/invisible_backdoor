<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13813.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">spapr_hotplug_req_event</name><parameter_list pos:start="1:36" pos:end="5:65">(<parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:43">uint8_t</name></type> <name pos:start="1:45" pos:end="1:49">hp_id</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:68"><decl pos:start="1:52" pos:end="1:68"><type pos:start="1:52" pos:end="1:68"><name pos:start="1:52" pos:end="1:58">uint8_t</name></type> <name pos:start="1:60" pos:end="1:68">hp_action</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:65"><decl pos:start="3:37" pos:end="3:65"><type pos:start="3:37" pos:end="3:65"><name pos:start="3:37" pos:end="3:56">sPAPRDRConnectorType</name></type> <name pos:start="3:58" pos:end="3:65">drc_type</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:64"><decl pos:start="5:37" pos:end="5:64"><type pos:start="5:37" pos:end="5:64"><name pos:start="5:37" pos:end="5:56"><name pos:start="5:37" pos:end="5:41">union</name> <name pos:start="5:43" pos:end="5:56">drc_identifier</name></name> <modifier pos:start="5:58" pos:end="5:58">*</modifier></type><name pos:start="5:59" pos:end="5:64">drc_id</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="169:1">{<block_content pos:start="9:5" pos:end="167:80">

    <decl_stmt pos:start="9:5" pos:end="9:65"><decl pos:start="9:5" pos:end="9:64"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">sPAPRMachineState</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:28">spapr</name> <init pos:start="9:30" pos:end="9:64">= <expr pos:start="9:32" pos:end="9:64"><call pos:start="9:32" pos:end="9:64"><name pos:start="9:32" pos:end="9:44">SPAPR_MACHINE</name><argument_list pos:start="9:45" pos:end="9:64">(<argument pos:start="9:46" pos:end="9:63"><expr pos:start="9:46" pos:end="9:63"><call pos:start="9:46" pos:end="9:63"><name pos:start="9:46" pos:end="9:61">qdev_get_machine</name><argument_list pos:start="9:62" pos:end="9:63">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:22">hp_log_full</name></name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:30">new_hp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:25">rtas_error_log</name></name> <modifier pos:start="13:27" pos:end="13:27">*</modifier></type><name pos:start="13:28" pos:end="13:30">hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:35"><type pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:28">rtas_event_log_v6</name></name> <modifier pos:start="15:30" pos:end="15:30">*</modifier></type><name pos:start="15:31" pos:end="15:35">v6hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:42"><decl pos:start="17:5" pos:end="17:41"><type pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:34">rtas_event_log_v6_maina</name></name> <modifier pos:start="17:36" pos:end="17:36">*</modifier></type><name pos:start="17:37" pos:end="17:41">maina</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:41"><type pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:10">struct</name> <name pos:start="19:12" pos:end="19:34">rtas_event_log_v6_mainb</name></name> <modifier pos:start="19:36" pos:end="19:36">*</modifier></type><name pos:start="19:37" pos:end="19:41">mainb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:36"><decl pos:start="21:5" pos:end="21:35"><type pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:10">struct</name> <name pos:start="21:12" pos:end="21:31">rtas_event_log_v6_hp</name></name> <modifier pos:start="21:33" pos:end="21:33">*</modifier></type><name pos:start="21:34" pos:end="21:35">hp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:51"><expr pos:start="25:5" pos:end="25:50"><name pos:start="25:5" pos:end="25:10">new_hp</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:50"><name pos:start="25:14" pos:end="25:22">g_malloc0</name><argument_list pos:start="25:23" pos:end="25:50">(<argument pos:start="25:24" pos:end="25:49"><expr pos:start="25:24" pos:end="25:49"><sizeof pos:start="25:24" pos:end="25:49">sizeof<argument_list pos:start="25:30" pos:end="25:49">(<argument pos:start="25:31" pos:end="25:48"><expr pos:start="25:31" pos:end="25:48">struct <name pos:start="25:38" pos:end="25:48">hp_log_full</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:23"><expr pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:7">hdr</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <operator pos:start="27:11" pos:end="27:11">&amp;</operator><name pos:start="27:12" pos:end="27:22"><name pos:start="27:12" pos:end="27:17">new_hp</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:22">hdr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:9">v6hdr</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <operator pos:start="29:13" pos:end="29:13">&amp;</operator><name pos:start="29:14" pos:end="29:26"><name pos:start="29:14" pos:end="29:19">new_hp</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:26">v6hdr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:9">maina</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <operator pos:start="31:13" pos:end="31:13">&amp;</operator><name pos:start="31:14" pos:end="31:26"><name pos:start="31:14" pos:end="31:19">new_hp</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:26">maina</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:9">mainb</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <operator pos:start="33:13" pos:end="33:13">&amp;</operator><name pos:start="33:14" pos:end="33:26"><name pos:start="33:14" pos:end="33:19">new_hp</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:26">mainb</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:6">hp</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <operator pos:start="35:10" pos:end="35:10">&amp;</operator><name pos:start="35:11" pos:end="35:20"><name pos:start="35:11" pos:end="35:16">new_hp</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:20">hp</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="49:56"><expr pos:start="39:5" pos:end="49:55"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:7">hdr</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:16">summary</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="49:55"><name pos:start="39:20" pos:end="39:30">cpu_to_be32</name><argument_list pos:start="39:31" pos:end="49:55">(<argument pos:start="39:32" pos:end="49:54"><expr pos:start="39:32" pos:end="49:54"><name pos:start="39:32" pos:end="39:49">RTAS_LOG_VERSION_6</name>

                               <operator pos:start="41:32" pos:end="41:32">|</operator> <name pos:start="41:34" pos:end="41:56">RTAS_LOG_SEVERITY_EVENT</name>

                               <operator pos:start="43:32" pos:end="43:32">|</operator> <name pos:start="43:34" pos:end="43:67">RTAS_LOG_DISPOSITION_NOT_RECOVERED</name>

                               <operator pos:start="45:32" pos:end="45:32">|</operator> <name pos:start="45:34" pos:end="45:63">RTAS_LOG_OPTIONAL_PART_PRESENT</name>

                               <operator pos:start="47:32" pos:end="47:32">|</operator> <name pos:start="47:34" pos:end="47:59">RTAS_LOG_INITIATOR_HOTPLUG</name>

                               <operator pos:start="49:32" pos:end="49:32">|</operator> <name pos:start="49:34" pos:end="49:54">RTAS_LOG_TYPE_HOTPLUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="53:62"><expr pos:start="51:5" pos:end="53:61"><name pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:7">hdr</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:24">extended_length</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <call pos:start="51:28" pos:end="53:61"><name pos:start="51:28" pos:end="51:38">cpu_to_be32</name><argument_list pos:start="51:39" pos:end="53:61">(<argument pos:start="51:40" pos:end="53:60"><expr pos:start="51:40" pos:end="53:60"><sizeof pos:start="51:40" pos:end="51:54">sizeof<argument_list pos:start="51:46" pos:end="51:54">(<argument pos:start="51:47" pos:end="51:53"><expr pos:start="51:47" pos:end="51:53"><operator pos:start="51:47" pos:end="51:47">*</operator><name pos:start="51:48" pos:end="51:53">new_hp</name></expr></argument>)</argument_list></sizeof>

                                       <operator pos:start="53:40" pos:end="53:40">-</operator> <sizeof pos:start="53:42" pos:end="53:60">sizeof<argument_list pos:start="53:48" pos:end="53:60">(<argument pos:start="53:49" pos:end="53:59"><expr pos:start="53:49" pos:end="53:59"><name pos:start="53:49" pos:end="53:59"><name pos:start="53:49" pos:end="53:54">new_hp</name><operator pos:start="53:55" pos:end="53:56">-&gt;</operator><name pos:start="53:57" pos:end="53:59">hdr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:28"><expr pos:start="57:5" pos:end="57:27"><call pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:20">spapr_init_v6hdr</name><argument_list pos:start="57:21" pos:end="57:27">(<argument pos:start="57:22" pos:end="57:26"><expr pos:start="57:22" pos:end="57:26"><name pos:start="57:22" pos:end="57:26">v6hdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:56"><expr pos:start="59:5" pos:end="59:55"><call pos:start="59:5" pos:end="59:55"><name pos:start="59:5" pos:end="59:20">spapr_init_maina</name><argument_list pos:start="59:21" pos:end="59:55">(<argument pos:start="59:22" pos:end="59:26"><expr pos:start="59:22" pos:end="59:26"><name pos:start="59:22" pos:end="59:26">maina</name></expr></argument>, <argument pos:start="59:29" pos:end="59:29"><expr pos:start="59:29" pos:end="59:29"><literal type="number" pos:start="59:29" pos:end="59:29">3</literal></expr></argument> <comment type="block" pos:start="59:31" pos:end="59:54">/* Main-A, Main-B, HP */</comment>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:70"><expr pos:start="63:5" pos:end="63:69"><name pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:9">mainb</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:14">hdr</name><operator pos:start="63:15" pos:end="63:15">.</operator><name pos:start="63:16" pos:end="63:25">section_id</name></name> <operator pos:start="63:27" pos:end="63:27">=</operator> <call pos:start="63:29" pos:end="63:69"><name pos:start="63:29" pos:end="63:39">cpu_to_be16</name><argument_list pos:start="63:40" pos:end="63:69">(<argument pos:start="63:41" pos:end="63:68"><expr pos:start="63:41" pos:end="63:68"><name pos:start="63:41" pos:end="63:68">RTAS_LOG_V6_SECTION_ID_MAINB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:60"><expr pos:start="65:5" pos:end="65:59"><name pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:9">mainb</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:14">hdr</name><operator pos:start="65:15" pos:end="65:15">.</operator><name pos:start="65:16" pos:end="65:29">section_length</name></name> <operator pos:start="65:31" pos:end="65:31">=</operator> <call pos:start="65:33" pos:end="65:59"><name pos:start="65:33" pos:end="65:43">cpu_to_be16</name><argument_list pos:start="65:44" pos:end="65:59">(<argument pos:start="65:45" pos:end="65:58"><expr pos:start="65:45" pos:end="65:58"><sizeof pos:start="65:45" pos:end="65:58">sizeof<argument_list pos:start="65:51" pos:end="65:58">(<argument pos:start="65:52" pos:end="65:57"><expr pos:start="65:52" pos:end="65:57"><operator pos:start="65:52" pos:end="65:52">*</operator><name pos:start="65:53" pos:end="65:57">mainb</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:9">mainb</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:23">subsystem_id</name></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <literal type="number" pos:start="67:27" pos:end="67:30">0x80</literal></expr>;</expr_stmt> <comment type="block" pos:start="67:33" pos:end="67:58">/* External environment */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:33"><expr pos:start="69:5" pos:end="69:32"><name pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:9">mainb</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:25">event_severity</name></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <literal type="number" pos:start="69:29" pos:end="69:32">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="69:35" pos:end="69:65">/* Informational / non-error */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:32"><expr pos:start="71:5" pos:end="71:31"><name pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:9">mainb</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:24">event_subtype</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <literal type="number" pos:start="71:28" pos:end="71:31">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="71:34" pos:end="71:54">/* Normal shutdown */</comment>



    <expr_stmt pos:start="75:5" pos:end="75:69"><expr pos:start="75:5" pos:end="75:68"><name pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:6">hp</name><operator pos:start="75:7" pos:end="75:8">-&gt;</operator><name pos:start="75:9" pos:end="75:11">hdr</name><operator pos:start="75:12" pos:end="75:12">.</operator><name pos:start="75:13" pos:end="75:22">section_id</name></name> <operator pos:start="75:24" pos:end="75:24">=</operator> <call pos:start="75:26" pos:end="75:68"><name pos:start="75:26" pos:end="75:36">cpu_to_be16</name><argument_list pos:start="75:37" pos:end="75:68">(<argument pos:start="75:38" pos:end="75:67"><expr pos:start="75:38" pos:end="75:67"><name pos:start="75:38" pos:end="75:67">RTAS_LOG_V6_SECTION_ID_HOTPLUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:54"><expr pos:start="77:5" pos:end="77:53"><name pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:6">hp</name><operator pos:start="77:7" pos:end="77:8">-&gt;</operator><name pos:start="77:9" pos:end="77:11">hdr</name><operator pos:start="77:12" pos:end="77:12">.</operator><name pos:start="77:13" pos:end="77:26">section_length</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <call pos:start="77:30" pos:end="77:53"><name pos:start="77:30" pos:end="77:40">cpu_to_be16</name><argument_list pos:start="77:41" pos:end="77:53">(<argument pos:start="77:42" pos:end="77:52"><expr pos:start="77:42" pos:end="77:52"><sizeof pos:start="77:42" pos:end="77:52">sizeof<argument_list pos:start="77:48" pos:end="77:52">(<argument pos:start="77:49" pos:end="77:51"><expr pos:start="77:49" pos:end="77:51"><operator pos:start="77:49" pos:end="77:49">*</operator><name pos:start="77:50" pos:end="77:51">hp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:32"><expr pos:start="79:5" pos:end="79:31"><name pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:6">hp</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:11">hdr</name><operator pos:start="79:12" pos:end="79:12">.</operator><name pos:start="79:13" pos:end="79:27">section_version</name></name> <operator pos:start="79:29" pos:end="79:29">=</operator> <literal type="number" pos:start="79:31" pos:end="79:31">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="79:34" pos:end="79:65">/* includes extended modifier */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:35"><expr pos:start="81:5" pos:end="81:34"><name pos:start="81:5" pos:end="81:22"><name pos:start="81:5" pos:end="81:6">hp</name><operator pos:start="81:7" pos:end="81:8">-&gt;</operator><name pos:start="81:9" pos:end="81:22">hotplug_action</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:34">hp_action</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:35"><expr pos:start="83:5" pos:end="83:34"><name pos:start="83:5" pos:end="83:26"><name pos:start="83:5" pos:end="83:6">hp</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:26">hotplug_identifier</name></name> <operator pos:start="83:28" pos:end="83:28">=</operator> <name pos:start="83:30" pos:end="83:34">hp_id</name></expr>;</expr_stmt>



    <switch pos:start="87:5" pos:end="125:5">switch <condition pos:start="87:12" pos:end="87:21">(<expr pos:start="87:13" pos:end="87:20"><name pos:start="87:13" pos:end="87:20">drc_type</name></expr>)</condition> <block pos:start="87:23" pos:end="125:5">{<block_content pos:start="89:5" pos:end="123:15">

    <case pos:start="89:5" pos:end="89:37">case <expr pos:start="89:10" pos:end="89:36"><name pos:start="89:10" pos:end="89:36">SPAPR_DR_CONNECTOR_TYPE_PCI</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:51"><expr pos:start="91:9" pos:end="91:50"><name pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:10">hp</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:24">hotplug_type</name></name> <operator pos:start="91:26" pos:end="91:26">=</operator> <name pos:start="91:28" pos:end="91:50">RTAS_LOG_V6_HP_TYPE_PCI</name></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="97:9"><if pos:start="93:9" pos:end="97:9">if <condition pos:start="93:12" pos:end="93:60">(<expr pos:start="93:13" pos:end="93:59"><name pos:start="93:13" pos:end="93:30"><name pos:start="93:13" pos:end="93:14">hp</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:30">hotplug_action</name></name> <operator pos:start="93:32" pos:end="93:33">==</operator> <name pos:start="93:35" pos:end="93:59">RTAS_LOG_V6_HP_ACTION_ADD</name></expr>)</condition> <block pos:start="93:62" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:55">

            <expr_stmt pos:start="95:13" pos:end="95:55"><expr pos:start="95:13" pos:end="95:54"><call pos:start="95:13" pos:end="95:54"><name pos:start="95:13" pos:end="95:39">spapr_hotplug_set_signalled</name><argument_list pos:start="95:40" pos:end="95:54">(<argument pos:start="95:41" pos:end="95:53"><expr pos:start="95:41" pos:end="95:53"><name pos:start="95:41" pos:end="95:53"><name pos:start="95:41" pos:end="95:46">drc_id</name><operator pos:start="95:47" pos:end="95:48">-&gt;</operator><name pos:start="95:49" pos:end="95:53">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:37">case <expr pos:start="101:10" pos:end="101:36"><name pos:start="101:10" pos:end="101:36">SPAPR_DR_CONNECTOR_TYPE_LMB</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:54"><expr pos:start="103:9" pos:end="103:53"><name pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:10">hp</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:24">hotplug_type</name></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <name pos:start="103:28" pos:end="103:53">RTAS_LOG_V6_HP_TYPE_MEMORY</name></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:37">case <expr pos:start="107:10" pos:end="107:36"><name pos:start="107:10" pos:end="107:36">SPAPR_DR_CONNECTOR_TYPE_CPU</name></expr>:</case>

        <expr_stmt pos:start="109:9" pos:end="109:51"><expr pos:start="109:9" pos:end="109:50"><name pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:10">hp</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:24">hotplug_type</name></name> <operator pos:start="109:26" pos:end="109:26">=</operator> <name pos:start="109:28" pos:end="109:50">RTAS_LOG_V6_HP_TYPE_CPU</name></expr>;</expr_stmt>

        <break pos:start="111:9" pos:end="111:14">break;</break>

    <default pos:start="113:5" pos:end="113:12">default:</default>

        <comment type="block" pos:start="115:9" pos:end="119:11">/* we shouldn't be signaling hotplug events for resources

         * that don't support them

         */</comment>

        <expr_stmt pos:start="121:9" pos:end="121:24"><expr pos:start="121:9" pos:end="121:23"><call pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:16">g_assert</name><argument_list pos:start="121:17" pos:end="121:23">(<argument pos:start="121:18" pos:end="121:22"><expr pos:start="121:18" pos:end="121:22"><name pos:start="121:18" pos:end="121:22">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="123:9" pos:end="123:15">return;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="129:5" pos:end="155:5"><if pos:start="129:5" pos:end="133:5">if <condition pos:start="129:8" pos:end="129:45">(<expr pos:start="129:9" pos:end="129:44"><name pos:start="129:9" pos:end="129:13">hp_id</name> <operator pos:start="129:15" pos:end="129:16">==</operator> <name pos:start="129:18" pos:end="129:44">RTAS_LOG_V6_HP_ID_DRC_COUNT</name></expr>)</condition> <block pos:start="129:47" pos:end="133:5">{<block_content pos:start="131:9" pos:end="131:54">

        <expr_stmt pos:start="131:9" pos:end="131:54"><expr pos:start="131:9" pos:end="131:53"><name pos:start="131:9" pos:end="131:24"><name pos:start="131:9" pos:end="131:10">hp</name><operator pos:start="131:11" pos:end="131:12">-&gt;</operator><name pos:start="131:13" pos:end="131:18">drc_id</name><operator pos:start="131:19" pos:end="131:19">.</operator><name pos:start="131:20" pos:end="131:24">count</name></name> <operator pos:start="131:26" pos:end="131:26">=</operator> <call pos:start="131:28" pos:end="131:53"><name pos:start="131:28" pos:end="131:38">cpu_to_be32</name><argument_list pos:start="131:39" pos:end="131:53">(<argument pos:start="131:40" pos:end="131:52"><expr pos:start="131:40" pos:end="131:52"><name pos:start="131:40" pos:end="131:52"><name pos:start="131:40" pos:end="131:45">drc_id</name><operator pos:start="131:46" pos:end="131:47">-&gt;</operator><name pos:start="131:48" pos:end="131:52">count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="133:7" pos:end="137:5">else if <condition pos:start="133:15" pos:end="133:52">(<expr pos:start="133:16" pos:end="133:51"><name pos:start="133:16" pos:end="133:20">hp_id</name> <operator pos:start="133:22" pos:end="133:23">==</operator> <name pos:start="133:25" pos:end="133:51">RTAS_LOG_V6_HP_ID_DRC_INDEX</name></expr>)</condition> <block pos:start="133:54" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:54">

        <expr_stmt pos:start="135:9" pos:end="135:54"><expr pos:start="135:9" pos:end="135:53"><name pos:start="135:9" pos:end="135:24"><name pos:start="135:9" pos:end="135:10">hp</name><operator pos:start="135:11" pos:end="135:12">-&gt;</operator><name pos:start="135:13" pos:end="135:18">drc_id</name><operator pos:start="135:19" pos:end="135:19">.</operator><name pos:start="135:20" pos:end="135:24">index</name></name> <operator pos:start="135:26" pos:end="135:26">=</operator> <call pos:start="135:28" pos:end="135:53"><name pos:start="135:28" pos:end="135:38">cpu_to_be32</name><argument_list pos:start="135:39" pos:end="135:53">(<argument pos:start="135:40" pos:end="135:52"><expr pos:start="135:40" pos:end="135:52"><name pos:start="135:40" pos:end="135:52"><name pos:start="135:40" pos:end="135:45">drc_id</name><operator pos:start="135:46" pos:end="135:47">-&gt;</operator><name pos:start="135:48" pos:end="135:52">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="137:7" pos:end="155:5">else if <condition pos:start="137:15" pos:end="137:60">(<expr pos:start="137:16" pos:end="137:59"><name pos:start="137:16" pos:end="137:20">hp_id</name> <operator pos:start="137:22" pos:end="137:23">==</operator> <name pos:start="137:25" pos:end="137:59">RTAS_LOG_V6_HP_ID_DRC_COUNT_INDEXED</name></expr>)</condition> <block pos:start="137:62" pos:end="155:5">{<block_content pos:start="145:9" pos:end="153:53">

        <comment type="block" pos:start="139:9" pos:end="143:11">/* we should not be using count_indexed value unless the guest

         * supports dedicated hotplug event source

         */</comment>

        <expr_stmt pos:start="145:9" pos:end="145:62"><expr pos:start="145:9" pos:end="145:61"><call pos:start="145:9" pos:end="145:61"><name pos:start="145:9" pos:end="145:16">g_assert</name><argument_list pos:start="145:17" pos:end="145:61">(<argument pos:start="145:18" pos:end="145:60"><expr pos:start="145:18" pos:end="145:60"><call pos:start="145:18" pos:end="145:60"><name pos:start="145:18" pos:end="145:32">spapr_ovec_test</name><argument_list pos:start="145:33" pos:end="145:60">(<argument pos:start="145:34" pos:end="145:47"><expr pos:start="145:34" pos:end="145:47"><name pos:start="145:34" pos:end="145:47"><name pos:start="145:34" pos:end="145:38">spapr</name><operator pos:start="145:39" pos:end="145:40">-&gt;</operator><name pos:start="145:41" pos:end="145:47">ov5_cas</name></name></expr></argument>, <argument pos:start="145:50" pos:end="145:59"><expr pos:start="145:50" pos:end="145:59"><name pos:start="145:50" pos:end="145:59">OV5_HP_EVT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="149:53"><expr pos:start="147:9" pos:end="149:52"><name pos:start="147:9" pos:end="147:38"><name pos:start="147:9" pos:end="147:10">hp</name><operator pos:start="147:11" pos:end="147:12">-&gt;</operator><name pos:start="147:13" pos:end="147:18">drc_id</name><operator pos:start="147:19" pos:end="147:19">.</operator><name pos:start="147:20" pos:end="147:32">count_indexed</name><operator pos:start="147:33" pos:end="147:33">.</operator><name pos:start="147:34" pos:end="147:38">count</name></name> <operator pos:start="147:40" pos:end="147:40">=</operator>

            <call pos:start="149:13" pos:end="149:52"><name pos:start="149:13" pos:end="149:23">cpu_to_be32</name><argument_list pos:start="149:24" pos:end="149:52">(<argument pos:start="149:25" pos:end="149:51"><expr pos:start="149:25" pos:end="149:51"><name pos:start="149:25" pos:end="149:51"><name pos:start="149:25" pos:end="149:30">drc_id</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:45">count_indexed</name><operator pos:start="149:46" pos:end="149:46">.</operator><name pos:start="149:47" pos:end="149:51">count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="153:53"><expr pos:start="151:9" pos:end="153:52"><name pos:start="151:9" pos:end="151:38"><name pos:start="151:9" pos:end="151:10">hp</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:18">drc_id</name><operator pos:start="151:19" pos:end="151:19">.</operator><name pos:start="151:20" pos:end="151:32">count_indexed</name><operator pos:start="151:33" pos:end="151:33">.</operator><name pos:start="151:34" pos:end="151:38">index</name></name> <operator pos:start="151:40" pos:end="151:40">=</operator>

            <call pos:start="153:13" pos:end="153:52"><name pos:start="153:13" pos:end="153:23">cpu_to_be32</name><argument_list pos:start="153:24" pos:end="153:52">(<argument pos:start="153:25" pos:end="153:51"><expr pos:start="153:25" pos:end="153:51"><name pos:start="153:25" pos:end="153:51"><name pos:start="153:25" pos:end="153:30">drc_id</name><operator pos:start="153:31" pos:end="153:32">-&gt;</operator><name pos:start="153:33" pos:end="153:45">count_indexed</name><operator pos:start="153:46" pos:end="153:46">.</operator><name pos:start="153:47" pos:end="153:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:62"><expr pos:start="159:5" pos:end="159:61"><call pos:start="159:5" pos:end="159:61"><name pos:start="159:5" pos:end="159:24">rtas_event_log_queue</name><argument_list pos:start="159:25" pos:end="159:61">(<argument pos:start="159:26" pos:end="159:46"><expr pos:start="159:26" pos:end="159:46"><name pos:start="159:26" pos:end="159:46">RTAS_LOG_TYPE_HOTPLUG</name></expr></argument>, <argument pos:start="159:49" pos:end="159:54"><expr pos:start="159:49" pos:end="159:54"><name pos:start="159:49" pos:end="159:54">new_hp</name></expr></argument>, <argument pos:start="159:57" pos:end="159:60"><expr pos:start="159:57" pos:end="159:60"><name pos:start="159:57" pos:end="159:60">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="163:5" pos:end="167:80"><expr pos:start="163:5" pos:end="167:79"><call pos:start="163:5" pos:end="167:79"><name pos:start="163:5" pos:end="163:18">qemu_irq_pulse</name><argument_list pos:start="163:19" pos:end="167:79">(<argument pos:start="163:20" pos:end="167:78"><expr pos:start="163:20" pos:end="167:78"><call pos:start="163:20" pos:end="167:78"><name pos:start="163:20" pos:end="163:32">xics_get_qirq</name><argument_list pos:start="163:33" pos:end="167:78">(<argument pos:start="163:34" pos:end="163:51"><expr pos:start="163:34" pos:end="163:51"><call pos:start="163:34" pos:end="163:51"><name pos:start="163:34" pos:end="163:44">XICS_FABRIC</name><argument_list pos:start="163:45" pos:end="163:51">(<argument pos:start="163:46" pos:end="163:50"><expr pos:start="163:46" pos:end="163:50"><name pos:start="163:46" pos:end="163:50">spapr</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="165:34" pos:end="167:77"><expr pos:start="165:34" pos:end="167:77"><call pos:start="165:34" pos:end="167:77"><name pos:start="165:34" pos:end="165:54">rtas_event_log_to_irq</name><argument_list pos:start="165:55" pos:end="167:77">(<argument pos:start="165:56" pos:end="165:60"><expr pos:start="165:56" pos:end="165:60"><name pos:start="165:56" pos:end="165:60">spapr</name></expr></argument>,

                                                       <argument pos:start="167:56" pos:end="167:76"><expr pos:start="167:56" pos:end="167:76"><name pos:start="167:56" pos:end="167:76">RTAS_LOG_TYPE_HOTPLUG</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
