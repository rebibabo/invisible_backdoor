<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11419.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_trak</name><parameter_list pos:start="1:25" pos:end="1:72">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:66">MOVAtom</name></type> <name pos:start="1:68" pos:end="1:71">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:6">st</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:48"><name pos:start="13:10" pos:end="13:22">av_new_stream</name><argument_list pos:start="13:23" pos:end="13:48">(<argument pos:start="13:24" pos:end="13:28"><expr pos:start="13:24" pos:end="13:28"><name pos:start="13:24" pos:end="13:28"><name pos:start="13:24" pos:end="13:24">c</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:28">fc</name></name></expr></argument>, <argument pos:start="13:31" pos:end="13:47"><expr pos:start="13:31" pos:end="13:47"><name pos:start="13:31" pos:end="13:47"><name pos:start="13:31" pos:end="13:31">c</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:35">fc</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:47">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="15:36"><if pos:start="15:5" pos:end="15:36">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:11">st</name></expr>)</condition><block type="pseudo" pos:start="15:14" pos:end="15:36"><block_content pos:start="15:14" pos:end="15:36"> <return pos:start="15:14" pos:end="15:36">return <expr pos:start="15:21" pos:end="15:35"><call pos:start="15:21" pos:end="15:35"><name pos:start="15:21" pos:end="15:27">AVERROR</name><argument_list pos:start="15:28" pos:end="15:35">(<argument pos:start="15:29" pos:end="15:34"><expr pos:start="15:29" pos:end="15:34"><name pos:start="15:29" pos:end="15:34">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:6">sc</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:45"><name pos:start="17:10" pos:end="17:19">av_mallocz</name><argument_list pos:start="17:20" pos:end="17:45">(<argument pos:start="17:21" pos:end="17:44"><expr pos:start="17:21" pos:end="17:44"><sizeof pos:start="17:21" pos:end="17:44">sizeof<argument_list pos:start="17:27" pos:end="17:44">(<argument pos:start="17:28" pos:end="17:43"><expr pos:start="17:28" pos:end="17:43"><name pos:start="17:28" pos:end="17:43">MOVStreamContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="19:36"><if pos:start="19:5" pos:end="19:36">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:11">sc</name></expr>)</condition><block type="pseudo" pos:start="19:14" pos:end="19:36"><block_content pos:start="19:14" pos:end="19:36"> <return pos:start="19:14" pos:end="19:36">return <expr pos:start="19:21" pos:end="19:35"><call pos:start="19:21" pos:end="19:35"><name pos:start="19:21" pos:end="19:27">AVERROR</name><argument_list pos:start="19:28" pos:end="19:35">(<argument pos:start="19:29" pos:end="19:34"><expr pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:34">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:6">st</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:17">priv_data</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:22">sc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:44"><expr pos:start="25:5" pos:end="25:43"><name pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:6">st</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:13">codec</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:25">codec_type</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:43">CODEC_TYPE_DATA</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:6">sc</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:15">ffindex</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:27"><name pos:start="27:19" pos:end="27:20">st</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:27">index</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:19"><if pos:start="31:5" pos:end="33:19">if <condition pos:start="31:8" pos:end="31:50">(<expr pos:start="31:9" pos:end="31:49"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:12">ret</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:44"><name pos:start="31:16" pos:end="31:31">mov_read_default</name><argument_list pos:start="31:32" pos:end="31:44">(<argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><name pos:start="31:33" pos:end="31:33">c</name></expr></argument>, <argument pos:start="31:36" pos:end="31:37"><expr pos:start="31:36" pos:end="31:37"><name pos:start="31:36" pos:end="31:37">pb</name></expr></argument>, <argument pos:start="31:40" pos:end="31:43"><expr pos:start="31:40" pos:end="31:43"><name pos:start="31:40" pos:end="31:43">atom</name></expr></argument>)</argument_list></call><operator pos:start="31:45" pos:end="31:45">)</operator> <operator pos:start="31:47" pos:end="31:47">&lt;</operator> <literal type="number" pos:start="31:49" pos:end="31:49">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:19"><block_content pos:start="33:9" pos:end="33:19">

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:23">/* sanity checks */</comment>

    <if_stmt pos:start="39:5" pos:end="51:5"><if pos:start="39:5" pos:end="51:5">if<condition pos:start="39:7" pos:end="41:68">(<expr pos:start="39:8" pos:end="41:67"><name pos:start="39:8" pos:end="39:22"><name pos:start="39:8" pos:end="39:9">sc</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:22">chunk_count</name></name> <operator pos:start="39:24" pos:end="39:25">&amp;&amp;</operator> <operator pos:start="39:27" pos:end="39:27">(</operator><operator pos:start="39:28" pos:end="39:28">!</operator><name pos:start="39:29" pos:end="39:42"><name pos:start="39:29" pos:end="39:30">sc</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:42">stts_count</name></name> <operator pos:start="39:44" pos:end="39:45">||</operator> <operator pos:start="39:47" pos:end="39:47">!</operator><name pos:start="39:48" pos:end="39:61"><name pos:start="39:48" pos:end="39:49">sc</name><operator pos:start="39:50" pos:end="39:51">-&gt;</operator><name pos:start="39:52" pos:end="39:61">stsc_count</name></name> <operator pos:start="39:63" pos:end="39:64">||</operator>

                           <operator pos:start="41:28" pos:end="41:28">(</operator><operator pos:start="41:29" pos:end="41:29">!</operator><name pos:start="41:30" pos:end="41:44"><name pos:start="41:30" pos:end="41:31">sc</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:44">sample_size</name></name> <operator pos:start="41:46" pos:end="41:47">&amp;&amp;</operator> <operator pos:start="41:49" pos:end="41:49">!</operator><name pos:start="41:50" pos:end="41:65"><name pos:start="41:50" pos:end="41:51">sc</name><operator pos:start="41:52" pos:end="41:53">-&gt;</operator><name pos:start="41:54" pos:end="41:65">sample_count</name></name><operator pos:start="41:66" pos:end="41:66">)</operator><operator pos:start="41:67" pos:end="41:67">)</operator></expr>)</condition><block pos:start="41:69" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:17">

        <expr_stmt pos:start="43:9" pos:end="45:26"><expr pos:start="43:9" pos:end="45:25"><call pos:start="43:9" pos:end="45:25"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="45:25">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:16">c</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:20">fc</name></name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:37" pos:end="43:89"><expr pos:start="43:37" pos:end="43:89"><literal type="string" pos:start="43:37" pos:end="43:89">"stream %d, missing mandatory atoms, broken header\n"</literal></expr></argument>,

               <argument pos:start="45:16" pos:end="45:24"><expr pos:start="45:16" pos:end="45:24"><name pos:start="45:16" pos:end="45:24"><name pos:start="45:16" pos:end="45:17">st</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:24">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:29"><expr pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:10">sc</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:24">sample_count</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <literal type="number" pos:start="47:28" pos:end="47:28">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="47:31" pos:end="47:44">//ignore track</comment>

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="55:24"><if pos:start="53:5" pos:end="55:24">if<condition pos:start="53:7" pos:end="53:22">(<expr pos:start="53:8" pos:end="53:21"><operator pos:start="53:8" pos:end="53:8">!</operator><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:10">sc</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:21">time_rate</name></name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:24"><block_content pos:start="55:9" pos:end="55:24">

        <expr_stmt pos:start="55:9" pos:end="55:24"><expr pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:10">sc</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:21">time_rate</name></name><operator pos:start="55:22" pos:end="55:22">=</operator><literal type="number" pos:start="55:23" pos:end="55:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="59:38"><if pos:start="57:5" pos:end="59:38">if<condition pos:start="57:7" pos:end="57:23">(<expr pos:start="57:8" pos:end="57:22"><operator pos:start="57:8" pos:end="57:8">!</operator><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:10">sc</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:22">time_scale</name></name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:38"><block_content pos:start="59:9" pos:end="59:38">

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:10">sc</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:22">time_scale</name></name><operator pos:start="59:23" pos:end="59:23">=</operator> <name pos:start="59:25" pos:end="59:37"><name pos:start="59:25" pos:end="59:25">c</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:37">time_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:59"><expr pos:start="61:5" pos:end="61:58"><call pos:start="61:5" pos:end="61:58"><name pos:start="61:5" pos:end="61:19">av_set_pts_info</name><argument_list pos:start="61:20" pos:end="61:58">(<argument pos:start="61:21" pos:end="61:22"><expr pos:start="61:21" pos:end="61:22"><name pos:start="61:21" pos:end="61:22">st</name></expr></argument>, <argument pos:start="61:25" pos:end="61:26"><expr pos:start="61:25" pos:end="61:26"><literal type="number" pos:start="61:25" pos:end="61:26">64</literal></expr></argument>, <argument pos:start="61:29" pos:end="61:41"><expr pos:start="61:29" pos:end="61:41"><name pos:start="61:29" pos:end="61:41"><name pos:start="61:29" pos:end="61:30">sc</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:41">time_rate</name></name></expr></argument>, <argument pos:start="61:44" pos:end="61:57"><expr pos:start="61:44" pos:end="61:57"><name pos:start="61:44" pos:end="61:57"><name pos:start="61:44" pos:end="61:45">sc</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:57">time_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="75:5"><if pos:start="65:5" pos:end="75:5">if <condition pos:start="65:8" pos:end="67:54">(<expr pos:start="65:9" pos:end="67:53"><name pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:10">st</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:17">codec</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:29">codec_type</name></name> <operator pos:start="65:31" pos:end="65:32">==</operator> <name pos:start="65:34" pos:end="65:49">CODEC_TYPE_AUDIO</name> <operator pos:start="65:51" pos:end="65:52">&amp;&amp;</operator>

        <operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:30"><name pos:start="67:10" pos:end="67:11">st</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:18">codec</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:30">frame_size</name></name> <operator pos:start="67:32" pos:end="67:33">&amp;&amp;</operator> <name pos:start="67:35" pos:end="67:48"><name pos:start="67:35" pos:end="67:36">sc</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:48">stts_count</name></name> <operator pos:start="67:50" pos:end="67:51">==</operator> <literal type="number" pos:start="67:53" pos:end="67:53">1</literal></expr>)</condition> <block pos:start="67:56" pos:end="75:5">{<block_content pos:start="69:9" pos:end="73:65">

        <expr_stmt pos:start="69:9" pos:end="71:83"><expr pos:start="69:9" pos:end="71:82"><name pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:10">st</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:17">codec</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:29">frame_size</name></name> <operator pos:start="69:31" pos:end="69:31">=</operator> <call pos:start="69:33" pos:end="71:82"><name pos:start="69:33" pos:end="69:42">av_rescale</name><argument_list pos:start="69:43" pos:end="71:82">(<argument pos:start="69:44" pos:end="69:68"><expr pos:start="69:44" pos:end="69:68"><name pos:start="69:44" pos:end="69:59"><name pos:start="69:44" pos:end="69:45">sc</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:56">stts_data</name><index pos:start="69:57" pos:end="69:59">[<expr pos:start="69:58" pos:end="69:58"><literal type="number" pos:start="69:58" pos:end="69:58">0</literal></expr>]</index></name><operator pos:start="69:60" pos:end="69:60">.</operator><name pos:start="69:61" pos:end="69:68">duration</name></expr></argument>,

                                           <argument pos:start="71:44" pos:end="71:65"><expr pos:start="71:44" pos:end="71:65"><name pos:start="71:44" pos:end="71:65"><name pos:start="71:44" pos:end="71:45">st</name><operator pos:start="71:46" pos:end="71:47">-&gt;</operator><name pos:start="71:48" pos:end="71:52">codec</name><operator pos:start="71:53" pos:end="71:54">-&gt;</operator><name pos:start="71:55" pos:end="71:65">sample_rate</name></name></expr></argument>, <argument pos:start="71:68" pos:end="71:81"><expr pos:start="71:68" pos:end="71:81"><name pos:start="71:68" pos:end="71:81"><name pos:start="71:68" pos:end="71:69">sc</name><operator pos:start="71:70" pos:end="71:71">-&gt;</operator><name pos:start="71:72" pos:end="71:81">time_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:65"><expr pos:start="73:9" pos:end="73:64"><call pos:start="73:9" pos:end="73:64"><name pos:start="73:9" pos:end="73:15">dprintf</name><argument_list pos:start="73:16" pos:end="73:64">(<argument pos:start="73:17" pos:end="73:21"><expr pos:start="73:17" pos:end="73:21"><name pos:start="73:17" pos:end="73:21"><name pos:start="73:17" pos:end="73:17">c</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:21">fc</name></name></expr></argument>, <argument pos:start="73:24" pos:end="73:40"><expr pos:start="73:24" pos:end="73:40"><literal type="string" pos:start="73:24" pos:end="73:40">"frame size %d\n"</literal></expr></argument>, <argument pos:start="73:43" pos:end="73:63"><expr pos:start="73:43" pos:end="73:63"><name pos:start="73:43" pos:end="73:63"><name pos:start="73:43" pos:end="73:44">st</name><operator pos:start="73:45" pos:end="73:46">-&gt;</operator><name pos:start="73:47" pos:end="73:51">codec</name><operator pos:start="73:52" pos:end="73:53">-&gt;</operator><name pos:start="73:54" pos:end="73:63">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if<condition pos:start="79:7" pos:end="79:38">(<expr pos:start="79:8" pos:end="79:37"><name pos:start="79:8" pos:end="79:19"><name pos:start="79:8" pos:end="79:9">st</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:19">duration</name></name> <operator pos:start="79:21" pos:end="79:22">!=</operator> <name pos:start="79:24" pos:end="79:37">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="79:39" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:38">

        <expr_stmt pos:start="81:9" pos:end="81:50"><expr pos:start="81:9" pos:end="81:49"><call pos:start="81:9" pos:end="81:49"><name pos:start="81:9" pos:end="81:14">assert</name><argument_list pos:start="81:15" pos:end="81:49">(<argument pos:start="81:16" pos:end="81:48"><expr pos:start="81:16" pos:end="81:48"><name pos:start="81:16" pos:end="81:27"><name pos:start="81:16" pos:end="81:17">st</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:27">duration</name></name> <operator pos:start="81:29" pos:end="81:29">%</operator> <name pos:start="81:31" pos:end="81:43"><name pos:start="81:31" pos:end="81:32">sc</name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:43">time_rate</name></name> <operator pos:start="81:45" pos:end="81:46">==</operator> <literal type="number" pos:start="81:48" pos:end="81:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:38"><expr pos:start="83:9" pos:end="83:37"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:10">st</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:20">duration</name></name> <operator pos:start="83:22" pos:end="83:23">/=</operator> <name pos:start="83:25" pos:end="83:37"><name pos:start="83:25" pos:end="83:26">sc</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:37">time_rate</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:27"><expr pos:start="89:5" pos:end="89:26"><call pos:start="89:5" pos:end="89:26"><name pos:start="89:5" pos:end="89:19">mov_build_index</name><argument_list pos:start="89:20" pos:end="89:26">(<argument pos:start="89:21" pos:end="89:21"><expr pos:start="89:21" pos:end="89:21"><name pos:start="89:21" pos:end="89:21">c</name></expr></argument>, <argument pos:start="89:24" pos:end="89:25"><expr pos:start="89:24" pos:end="89:25"><name pos:start="89:24" pos:end="89:25">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="103:27"><if pos:start="93:5" pos:end="101:5">if <condition pos:start="93:8" pos:end="93:73">(<expr pos:start="93:9" pos:end="93:72"><name pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:10">sc</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:19">dref_id</name></name><operator pos:start="93:20" pos:end="93:20">-</operator><literal type="number" pos:start="93:21" pos:end="93:21">1</literal> <operator pos:start="93:23" pos:end="93:23">&lt;</operator> <name pos:start="93:25" pos:end="93:39"><name pos:start="93:25" pos:end="93:26">sc</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:39">drefs_count</name></name> <operator pos:start="93:41" pos:end="93:42">&amp;&amp;</operator> <name pos:start="93:44" pos:end="93:67"><name pos:start="93:44" pos:end="93:45">sc</name><operator pos:start="93:46" pos:end="93:47">-&gt;</operator><name pos:start="93:48" pos:end="93:52">drefs</name><index pos:start="93:53" pos:end="93:67">[<expr pos:start="93:54" pos:end="93:66"><name pos:start="93:54" pos:end="93:64"><name pos:start="93:54" pos:end="93:55">sc</name><operator pos:start="93:56" pos:end="93:57">-&gt;</operator><name pos:start="93:58" pos:end="93:64">dref_id</name></name><operator pos:start="93:65" pos:end="93:65">-</operator><literal type="number" pos:start="93:66" pos:end="93:66">1</literal></expr>]</index></name><operator pos:start="93:68" pos:end="93:68">.</operator><name pos:start="93:69" pos:end="93:72">path</name></expr>)</condition> <block pos:start="93:75" pos:end="101:5">{<block_content pos:start="95:9" pos:end="99:78">

        <if_stmt pos:start="95:9" pos:end="99:78"><if pos:start="95:9" pos:end="99:78">if <condition pos:start="95:12" pos:end="95:78">(<expr pos:start="95:13" pos:end="95:77"><call pos:start="95:13" pos:end="95:73"><name pos:start="95:13" pos:end="95:21">url_fopen</name><argument_list pos:start="95:22" pos:end="95:73">(<argument pos:start="95:23" pos:end="95:29"><expr pos:start="95:23" pos:end="95:29"><operator pos:start="95:23" pos:end="95:23">&amp;</operator><name pos:start="95:24" pos:end="95:29"><name pos:start="95:24" pos:end="95:25">sc</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:29">pb</name></name></expr></argument>, <argument pos:start="95:32" pos:end="95:60"><expr pos:start="95:32" pos:end="95:60"><name pos:start="95:32" pos:end="95:55"><name pos:start="95:32" pos:end="95:33">sc</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:40">drefs</name><index pos:start="95:41" pos:end="95:55">[<expr pos:start="95:42" pos:end="95:54"><name pos:start="95:42" pos:end="95:52"><name pos:start="95:42" pos:end="95:43">sc</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:52">dref_id</name></name><operator pos:start="95:53" pos:end="95:53">-</operator><literal type="number" pos:start="95:54" pos:end="95:54">1</literal></expr>]</index></name><operator pos:start="95:56" pos:end="95:56">.</operator><name pos:start="95:57" pos:end="95:60">path</name></expr></argument>, <argument pos:start="95:63" pos:end="95:72"><expr pos:start="95:63" pos:end="95:72"><name pos:start="95:63" pos:end="95:72">URL_RDONLY</name></expr></argument>)</argument_list></call> <operator pos:start="95:75" pos:end="95:75">&lt;</operator> <literal type="number" pos:start="95:77" pos:end="95:77">0</literal></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="99:78"><block_content pos:start="97:13" pos:end="99:78">

            <expr_stmt pos:start="97:13" pos:end="99:78"><expr pos:start="97:13" pos:end="99:77"><call pos:start="97:13" pos:end="99:77"><name pos:start="97:13" pos:end="97:18">av_log</name><argument_list pos:start="97:19" pos:end="99:77">(<argument pos:start="97:20" pos:end="97:24"><expr pos:start="97:20" pos:end="97:24"><name pos:start="97:20" pos:end="97:24"><name pos:start="97:20" pos:end="97:20">c</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:24">fc</name></name></expr></argument>, <argument pos:start="97:27" pos:end="97:38"><expr pos:start="97:27" pos:end="97:38"><name pos:start="97:27" pos:end="97:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:41" pos:end="97:80"><expr pos:start="97:41" pos:end="97:80"><literal type="string" pos:start="97:41" pos:end="97:80">"stream %d, error opening file %s: %s\n"</literal></expr></argument>,

                   <argument pos:start="99:20" pos:end="99:28"><expr pos:start="99:20" pos:end="99:28"><name pos:start="99:20" pos:end="99:28"><name pos:start="99:20" pos:end="99:21">st</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:28">index</name></name></expr></argument>, <argument pos:start="99:31" pos:end="99:59"><expr pos:start="99:31" pos:end="99:59"><name pos:start="99:31" pos:end="99:54"><name pos:start="99:31" pos:end="99:32">sc</name><operator pos:start="99:33" pos:end="99:34">-&gt;</operator><name pos:start="99:35" pos:end="99:39">drefs</name><index pos:start="99:40" pos:end="99:54">[<expr pos:start="99:41" pos:end="99:53"><name pos:start="99:41" pos:end="99:51"><name pos:start="99:41" pos:end="99:42">sc</name><operator pos:start="99:43" pos:end="99:44">-&gt;</operator><name pos:start="99:45" pos:end="99:51">dref_id</name></name><operator pos:start="99:52" pos:end="99:52">-</operator><literal type="number" pos:start="99:53" pos:end="99:53">1</literal></expr>]</index></name><operator pos:start="99:55" pos:end="99:55">.</operator><name pos:start="99:56" pos:end="99:59">path</name></expr></argument>, <argument pos:start="99:62" pos:end="99:76"><expr pos:start="99:62" pos:end="99:76"><call pos:start="99:62" pos:end="99:76"><name pos:start="99:62" pos:end="99:69">strerror</name><argument_list pos:start="99:70" pos:end="99:76">(<argument pos:start="99:71" pos:end="99:75"><expr pos:start="99:71" pos:end="99:75"><name pos:start="99:71" pos:end="99:75">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="101:7" pos:end="103:27">else<block type="pseudo" pos:start="103:9" pos:end="103:27"><block_content pos:start="103:9" pos:end="103:27">

        <expr_stmt pos:start="103:9" pos:end="103:27"><expr pos:start="103:9" pos:end="103:26"><name pos:start="103:9" pos:end="103:14"><name pos:start="103:9" pos:end="103:10">sc</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:14">pb</name></name> <operator pos:start="103:16" pos:end="103:16">=</operator> <name pos:start="103:18" pos:end="103:26"><name pos:start="103:18" pos:end="103:18">c</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:22">fc</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:26">pb</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <switch pos:start="107:5" pos:end="133:5">switch <condition pos:start="107:12" pos:end="107:32">(<expr pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:14">st</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:21">codec</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:31">codec_id</name></name></expr>)</condition> <block pos:start="107:34" pos:end="133:5">{<block_content pos:start="111:5" pos:end="131:14">

<cpp:if pos:start="109:1" pos:end="109:23">#<cpp:directive pos:start="109:2" pos:end="109:3">if</cpp:directive> <expr pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:23">CONFIG_H261_DECODER</name></expr></cpp:if>

    <case pos:start="111:5" pos:end="116:0">case <expr pos:start="111:10" pos:end="111:22"><name pos:start="111:10" pos:end="111:22">CODEC_ID_H261</name></expr>:</case>

<cpp:endif pos:start="113:1" pos:end="113:6">#<cpp:directive pos:start="113:2" pos:end="113:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="115:1" pos:end="115:23">#<cpp:directive pos:start="115:2" pos:end="115:3">if</cpp:directive> <expr pos:start="115:5" pos:end="115:23"><name pos:start="115:5" pos:end="115:23">CONFIG_H263_DECODER</name></expr></cpp:if>

    <case pos:start="117:5" pos:end="122:0">case <expr pos:start="117:10" pos:end="117:22"><name pos:start="117:10" pos:end="117:22">CODEC_ID_H263</name></expr>:</case>

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="121:1" pos:end="121:24">#<cpp:directive pos:start="121:2" pos:end="121:3">if</cpp:directive> <expr pos:start="121:5" pos:end="121:24"><name pos:start="121:5" pos:end="121:24">CONFIG_MPEG4_DECODER</name></expr></cpp:if>

    <case pos:start="123:5" pos:end="126:0">case <expr pos:start="123:10" pos:end="123:23"><name pos:start="123:10" pos:end="123:23">CODEC_ID_MPEG4</name></expr>:</case>

<cpp:endif pos:start="125:1" pos:end="125:6">#<cpp:directive pos:start="125:2" pos:end="125:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="127:9" pos:end="127:28"><expr pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:10">st</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:17">codec</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:24">width</name></name><operator pos:start="127:25" pos:end="127:25">=</operator> <literal type="number" pos:start="127:27" pos:end="127:27">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="127:30" pos:end="127:64">/* let decoder init width/height */</comment>

        <expr_stmt pos:start="129:9" pos:end="129:29"><expr pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:25"><name pos:start="129:9" pos:end="129:10">st</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:17">codec</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:25">height</name></name><operator pos:start="129:26" pos:end="129:26">=</operator> <literal type="number" pos:start="129:28" pos:end="129:28">0</literal></expr>;</expr_stmt>

        <break pos:start="131:9" pos:end="131:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="137:5" pos:end="137:36">/* Do not need those anymore. */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:33"><expr pos:start="139:5" pos:end="139:32"><call pos:start="139:5" pos:end="139:32"><name pos:start="139:5" pos:end="139:12">av_freep</name><argument_list pos:start="139:13" pos:end="139:32">(<argument pos:start="139:14" pos:end="139:31"><expr pos:start="139:14" pos:end="139:31"><operator pos:start="139:14" pos:end="139:14">&amp;</operator><name pos:start="139:15" pos:end="139:31"><name pos:start="139:15" pos:end="139:16">sc</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:31">chunk_offsets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:29"><expr pos:start="141:5" pos:end="141:28"><call pos:start="141:5" pos:end="141:28"><name pos:start="141:5" pos:end="141:12">av_freep</name><argument_list pos:start="141:13" pos:end="141:28">(<argument pos:start="141:14" pos:end="141:27"><expr pos:start="141:14" pos:end="141:27"><operator pos:start="141:14" pos:end="141:14">&amp;</operator><name pos:start="141:15" pos:end="141:27"><name pos:start="141:15" pos:end="141:16">sc</name><operator pos:start="141:17" pos:end="141:18">-&gt;</operator><name pos:start="141:19" pos:end="141:27">stsc_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:32"><expr pos:start="143:5" pos:end="143:31"><call pos:start="143:5" pos:end="143:31"><name pos:start="143:5" pos:end="143:12">av_freep</name><argument_list pos:start="143:13" pos:end="143:31">(<argument pos:start="143:14" pos:end="143:30"><expr pos:start="143:14" pos:end="143:30"><operator pos:start="143:14" pos:end="143:14">&amp;</operator><name pos:start="143:15" pos:end="143:30"><name pos:start="143:15" pos:end="143:16">sc</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:30">sample_sizes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:29"><expr pos:start="145:5" pos:end="145:28"><call pos:start="145:5" pos:end="145:28"><name pos:start="145:5" pos:end="145:12">av_freep</name><argument_list pos:start="145:13" pos:end="145:28">(<argument pos:start="145:14" pos:end="145:27"><expr pos:start="145:14" pos:end="145:27"><operator pos:start="145:14" pos:end="145:14">&amp;</operator><name pos:start="145:15" pos:end="145:27"><name pos:start="145:15" pos:end="145:16">sc</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:27">keyframes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:29"><expr pos:start="147:5" pos:end="147:28"><call pos:start="147:5" pos:end="147:28"><name pos:start="147:5" pos:end="147:12">av_freep</name><argument_list pos:start="147:13" pos:end="147:28">(<argument pos:start="147:14" pos:end="147:27"><expr pos:start="147:14" pos:end="147:27"><operator pos:start="147:14" pos:end="147:14">&amp;</operator><name pos:start="147:15" pos:end="147:27"><name pos:start="147:15" pos:end="147:16">sc</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:27">stts_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="151:5" pos:end="151:13">return <expr pos:start="151:12" pos:end="151:12"><literal type="number" pos:start="151:12" pos:end="151:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
