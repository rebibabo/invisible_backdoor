<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16495.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">size_t</name></type> <name pos:start="1:15" pos:end="1:29">v9fs_packunpack</name><parameter_list pos:start="1:30" pos:end="3:67">(<parameter pos:start="1:31" pos:end="1:40"><decl pos:start="1:31" pos:end="1:40"><type pos:start="1:31" pos:end="1:40"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:40">addr</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><name pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:48">struct</name> <name pos:start="1:50" pos:end="1:54">iovec</name></name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">sg</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:72">sg_count</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:43"><decl pos:start="3:31" pos:end="3:43"><type pos:start="3:31" pos:end="3:43"><name pos:start="3:31" pos:end="3:36">size_t</name></type> <name pos:start="3:38" pos:end="3:43">offset</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:56"><decl pos:start="3:46" pos:end="3:56"><type pos:start="3:46" pos:end="3:56"><name pos:start="3:46" pos:end="3:51">size_t</name></type> <name pos:start="3:53" pos:end="3:56">size</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:66"><decl pos:start="3:59" pos:end="3:66"><type pos:start="3:59" pos:end="3:66"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:66">pack</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:18">

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name> <init pos:start="7:11" pos:end="7:13">= <expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:17">copied</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="55:5">for <control pos:start="13:9" pos:end="13:42">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:37"><expr pos:start="13:17" pos:end="13:36"><name pos:start="13:17" pos:end="13:20">size</name> <operator pos:start="13:22" pos:end="13:23">&amp;&amp;</operator> <name pos:start="13:25" pos:end="13:25">i</name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <name pos:start="13:29" pos:end="13:36">sg_count</name></expr>;</condition> <incr pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:39">i</name><operator pos:start="13:40" pos:end="13:41">++</operator></expr></incr>)</control> <block pos:start="13:44" pos:end="55:5">{<block_content pos:start="15:9" pos:end="53:9">

        <decl_stmt pos:start="15:9" pos:end="15:19"><decl pos:start="15:9" pos:end="15:18"><type pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:14">size_t</name></type> <name pos:start="15:16" pos:end="15:18">len</name></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="53:9"><if pos:start="17:9" pos:end="25:9">if <condition pos:start="17:12" pos:end="17:36">(<expr pos:start="17:13" pos:end="17:35"><name pos:start="17:13" pos:end="17:18">offset</name> <operator pos:start="17:20" pos:end="17:21">&gt;=</operator> <name pos:start="17:23" pos:end="17:27"><name pos:start="17:23" pos:end="17:24">sg</name><index pos:start="17:25" pos:end="17:27">[<expr pos:start="17:26" pos:end="17:26"><name pos:start="17:26" pos:end="17:26">i</name></expr>]</index></name><operator pos:start="17:28" pos:end="17:28">.</operator><name pos:start="17:29" pos:end="17:35">iov_len</name></expr>)</condition> <block pos:start="17:38" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:21">

            <comment type="block" pos:start="19:13" pos:end="19:30">/* skip this sg */</comment>

            <expr_stmt pos:start="21:13" pos:end="21:36"><expr pos:start="21:13" pos:end="21:35"><name pos:start="21:13" pos:end="21:18">offset</name> <operator pos:start="21:20" pos:end="21:21">-=</operator> <name pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:24">sg</name><index pos:start="21:25" pos:end="21:27">[<expr pos:start="21:26" pos:end="21:26"><name pos:start="21:26" pos:end="21:26">i</name></expr>]</index></name><operator pos:start="21:28" pos:end="21:28">.</operator><name pos:start="21:29" pos:end="21:35">iov_len</name></expr>;</expr_stmt>

            <continue pos:start="23:13" pos:end="23:21">continue;</continue>

        </block_content>}</block></if> <else pos:start="25:11" pos:end="53:9">else <block pos:start="25:16" pos:end="53:9">{<block_content pos:start="27:13" pos:end="51:13">

            <expr_stmt pos:start="27:13" pos:end="27:52"><expr pos:start="27:13" pos:end="27:51"><name pos:start="27:13" pos:end="27:15">len</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:51"><name pos:start="27:19" pos:end="27:21">MIN</name><argument_list pos:start="27:22" pos:end="27:51">(<argument pos:start="27:23" pos:end="27:44"><expr pos:start="27:23" pos:end="27:44"><name pos:start="27:23" pos:end="27:27"><name pos:start="27:23" pos:end="27:24">sg</name><index pos:start="27:25" pos:end="27:27">[<expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">i</name></expr>]</index></name><operator pos:start="27:28" pos:end="27:28">.</operator><name pos:start="27:29" pos:end="27:35">iov_len</name> <operator pos:start="27:37" pos:end="27:37">-</operator> <name pos:start="27:39" pos:end="27:44">offset</name></expr></argument>, <argument pos:start="27:47" pos:end="27:50"><expr pos:start="27:47" pos:end="27:50"><name pos:start="27:47" pos:end="27:50">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="37:13"><if pos:start="29:13" pos:end="33:13">if <condition pos:start="29:16" pos:end="29:21">(<expr pos:start="29:17" pos:end="29:20"><name pos:start="29:17" pos:end="29:20">pack</name></expr>)</condition> <block pos:start="29:23" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:59">

                <expr_stmt pos:start="31:17" pos:end="31:59"><expr pos:start="31:17" pos:end="31:58"><call pos:start="31:17" pos:end="31:58"><name pos:start="31:17" pos:end="31:22">memcpy</name><argument_list pos:start="31:23" pos:end="31:58">(<argument pos:start="31:24" pos:end="31:46"><expr pos:start="31:24" pos:end="31:46"><name pos:start="31:24" pos:end="31:28"><name pos:start="31:24" pos:end="31:25">sg</name><index pos:start="31:26" pos:end="31:28">[<expr pos:start="31:27" pos:end="31:27"><name pos:start="31:27" pos:end="31:27">i</name></expr>]</index></name><operator pos:start="31:29" pos:end="31:29">.</operator><name pos:start="31:30" pos:end="31:37">iov_base</name> <operator pos:start="31:39" pos:end="31:39">+</operator> <name pos:start="31:41" pos:end="31:46">offset</name></expr></argument>, <argument pos:start="31:49" pos:end="31:52"><expr pos:start="31:49" pos:end="31:52"><name pos:start="31:49" pos:end="31:52">addr</name></expr></argument>, <argument pos:start="31:55" pos:end="31:57"><expr pos:start="31:55" pos:end="31:57"><name pos:start="31:55" pos:end="31:57">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="33:15" pos:end="37:13">else <block pos:start="33:20" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:59">

                <expr_stmt pos:start="35:17" pos:end="35:59"><expr pos:start="35:17" pos:end="35:58"><call pos:start="35:17" pos:end="35:58"><name pos:start="35:17" pos:end="35:22">memcpy</name><argument_list pos:start="35:23" pos:end="35:58">(<argument pos:start="35:24" pos:end="35:27"><expr pos:start="35:24" pos:end="35:27"><name pos:start="35:24" pos:end="35:27">addr</name></expr></argument>, <argument pos:start="35:30" pos:end="35:52"><expr pos:start="35:30" pos:end="35:52"><name pos:start="35:30" pos:end="35:34"><name pos:start="35:30" pos:end="35:31">sg</name><index pos:start="35:32" pos:end="35:34">[<expr pos:start="35:33" pos:end="35:33"><name pos:start="35:33" pos:end="35:33">i</name></expr>]</index></name><operator pos:start="35:35" pos:end="35:35">.</operator><name pos:start="35:36" pos:end="35:43">iov_base</name> <operator pos:start="35:45" pos:end="35:45">+</operator> <name pos:start="35:47" pos:end="35:52">offset</name></expr></argument>, <argument pos:start="35:55" pos:end="35:57"><expr pos:start="35:55" pos:end="35:57"><name pos:start="35:55" pos:end="35:57">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:24"><expr pos:start="39:13" pos:end="39:23"><name pos:start="39:13" pos:end="39:16">size</name> <operator pos:start="39:18" pos:end="39:19">-=</operator> <name pos:start="39:21" pos:end="39:23">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:26"><expr pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:18">copied</name> <operator pos:start="41:20" pos:end="41:21">+=</operator> <name pos:start="41:23" pos:end="41:25">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:24"><expr pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:16">addr</name> <operator pos:start="43:18" pos:end="43:19">+=</operator> <name pos:start="43:21" pos:end="43:23">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="51:13"><if pos:start="45:13" pos:end="51:13">if <condition pos:start="45:16" pos:end="45:21">(<expr pos:start="45:17" pos:end="45:20"><name pos:start="45:17" pos:end="45:20">size</name></expr>)</condition> <block pos:start="45:23" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:25">

                <expr_stmt pos:start="47:17" pos:end="47:27"><expr pos:start="47:17" pos:end="47:26"><name pos:start="47:17" pos:end="47:22">offset</name> <operator pos:start="47:24" pos:end="47:24">=</operator> <literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr>;</expr_stmt>

                <continue pos:start="49:17" pos:end="49:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <return pos:start="59:5" pos:end="59:18">return <expr pos:start="59:12" pos:end="59:17"><name pos:start="59:12" pos:end="59:17">copied</name></expr>;</return>

</block_content>}</block></function>
</unit>
