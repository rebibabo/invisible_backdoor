<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2723.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">net_host_device_add</name><parameter_list pos:start="1:25" pos:end="1:76">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:32">Monitor</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">mon</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:57"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:57">device</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:75"><decl pos:start="1:60" pos:end="1:75"><type pos:start="1:60" pos:end="1:75"><specifier pos:start="1:60" pos:end="1:64">const</specifier> <name pos:start="1:66" pos:end="1:69">char</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">opts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:5">

    <if_stmt pos:start="5:5" pos:end="11:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:39">(<expr pos:start="5:9" pos:end="5:38"><operator pos:start="5:9" pos:end="5:9">!</operator><call pos:start="5:10" pos:end="5:38"><name pos:start="5:10" pos:end="5:30">net_host_check_device</name><argument_list pos:start="5:31" pos:end="5:38">(<argument pos:start="5:32" pos:end="5:37"><expr pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:37">device</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:41" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:15">

        <expr_stmt pos:start="7:9" pos:end="7:72"><expr pos:start="7:9" pos:end="7:71"><call pos:start="7:9" pos:end="7:71"><name pos:start="7:9" pos:end="7:22">monitor_printf</name><argument_list pos:start="7:23" pos:end="7:71">(<argument pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">mon</name></expr></argument>, <argument pos:start="7:29" pos:end="7:62"><expr pos:start="7:29" pos:end="7:62"><literal type="string" pos:start="7:29" pos:end="7:62">"invalid host network device %s\n"</literal></expr></argument>, <argument pos:start="7:65" pos:end="7:70"><expr pos:start="7:65" pos:end="7:70"><name pos:start="7:65" pos:end="7:70">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="9:9" pos:end="9:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:49">(<expr pos:start="13:9" pos:end="13:48"><call pos:start="13:9" pos:end="13:44"><name pos:start="13:9" pos:end="13:23">net_client_init</name><argument_list pos:start="13:24" pos:end="13:44">(<argument pos:start="13:25" pos:end="13:30"><expr pos:start="13:25" pos:end="13:30"><name pos:start="13:25" pos:end="13:30">device</name></expr></argument>, <argument pos:start="13:33" pos:end="13:43"><expr pos:start="13:33" pos:end="13:43"><ternary pos:start="13:33" pos:end="13:43"><condition pos:start="13:33" pos:end="13:38"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">opts</name></expr> ?</condition><then> </then><else pos:start="13:40" pos:end="13:43">: <expr pos:start="13:42" pos:end="13:43"><literal type="string" pos:start="13:42" pos:end="13:43">""</literal></expr></else></ternary></expr></argument>)</argument_list></call> <operator pos:start="13:46" pos:end="13:46">&lt;</operator> <literal type="number" pos:start="13:48" pos:end="13:48">0</literal></expr>)</condition> <block pos:start="13:51" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:78">

        <expr_stmt pos:start="15:9" pos:end="15:78"><expr pos:start="15:9" pos:end="15:77"><call pos:start="15:9" pos:end="15:77"><name pos:start="15:9" pos:end="15:22">monitor_printf</name><argument_list pos:start="15:23" pos:end="15:77">(<argument pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:26">mon</name></expr></argument>, <argument pos:start="15:29" pos:end="15:68"><expr pos:start="15:29" pos:end="15:68"><literal type="string" pos:start="15:29" pos:end="15:68">"adding host network device %s failed\n"</literal></expr></argument>, <argument pos:start="15:71" pos:end="15:76"><expr pos:start="15:71" pos:end="15:76"><name pos:start="15:71" pos:end="15:76">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
