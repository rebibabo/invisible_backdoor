<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1875.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_zbuf</name><parameter_list pos:start="1:23" pos:end="3:47">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:31">AVBPrint</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">bp</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:56"><decl pos:start="1:38" pos:end="1:56"><type pos:start="1:38" pos:end="1:56"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">data</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:46"><decl pos:start="3:24" pos:end="3:46"><type pos:start="3:24" pos:end="3:46"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:36">uint8_t</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:46">data_end</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:15">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">z_stream</name></type> <name pos:start="7:14" pos:end="7:20">zstream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:21">buf_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:11">zstream</name><operator pos:start="17:12" pos:end="17:12">.</operator><name pos:start="17:13" pos:end="17:18">zalloc</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:34">ff_png_zalloc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:11">zstream</name><operator pos:start="19:12" pos:end="19:12">.</operator><name pos:start="19:13" pos:end="19:17">zfree</name></name>  <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:33">ff_png_zfree</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:11">zstream</name><operator pos:start="21:12" pos:end="21:12">.</operator><name pos:start="21:13" pos:end="21:18">opaque</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:25">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:32"><if pos:start="23:5" pos:end="25:32">if <condition pos:start="23:8" pos:end="23:38">(<expr pos:start="23:9" pos:end="23:37"><call pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:19">inflateInit</name><argument_list pos:start="23:20" pos:end="23:29">(<argument pos:start="23:21" pos:end="23:28"><expr pos:start="23:21" pos:end="23:28"><operator pos:start="23:21" pos:end="23:21">&amp;</operator><name pos:start="23:22" pos:end="23:28">zstream</name></expr></argument>)</argument_list></call> <operator pos:start="23:31" pos:end="23:32">!=</operator> <name pos:start="23:34" pos:end="23:37">Z_OK</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:32"><block_content pos:start="25:9" pos:end="25:32">

        <return pos:start="25:9" pos:end="25:32">return <expr pos:start="25:16" pos:end="25:31"><name pos:start="25:16" pos:end="25:31">AVERROR_EXTERNAL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:11">zstream</name><operator pos:start="27:12" pos:end="27:12">.</operator><name pos:start="27:13" pos:end="27:19">next_in</name></name>  <operator pos:start="27:22" pos:end="27:22">=</operator> <operator pos:start="27:24" pos:end="27:24">(</operator><name pos:start="27:25" pos:end="27:32">unsigned</name> <name pos:start="27:34" pos:end="27:37">char</name> <operator pos:start="27:39" pos:end="27:39">*</operator><operator pos:start="27:40" pos:end="27:40">)</operator><name pos:start="27:41" pos:end="27:44">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:11">zstream</name><operator pos:start="29:12" pos:end="29:12">.</operator><name pos:start="29:13" pos:end="29:20">avail_in</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:31">data_end</name> <operator pos:start="29:33" pos:end="29:33">-</operator> <name pos:start="29:35" pos:end="29:38">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><call pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:18">av_bprint_init</name><argument_list pos:start="31:19" pos:end="31:29">(<argument pos:start="31:20" pos:end="31:21"><expr pos:start="31:20" pos:end="31:21"><name pos:start="31:20" pos:end="31:21">bp</name></expr></argument>, <argument pos:start="31:24" pos:end="31:24"><expr pos:start="31:24" pos:end="31:24"><literal type="number" pos:start="31:24" pos:end="31:24">0</literal></expr></argument>, <argument pos:start="31:27" pos:end="31:28"><expr pos:start="31:27" pos:end="31:28"><operator pos:start="31:27" pos:end="31:27">-</operator><literal type="number" pos:start="31:28" pos:end="31:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="35:5" pos:end="67:5">while <condition pos:start="35:11" pos:end="35:32">(<expr pos:start="35:12" pos:end="35:31"><name pos:start="35:12" pos:end="35:27"><name pos:start="35:12" pos:end="35:18">zstream</name><operator pos:start="35:19" pos:end="35:19">.</operator><name pos:start="35:20" pos:end="35:27">avail_in</name></name> <operator pos:start="35:29" pos:end="35:29">&gt;</operator> <literal type="number" pos:start="35:31" pos:end="35:31">0</literal></expr>)</condition> <block pos:start="35:34" pos:end="67:5">{<block_content pos:start="37:9" pos:end="65:18">

        <expr_stmt pos:start="37:9" pos:end="37:53"><expr pos:start="37:9" pos:end="37:52"><call pos:start="37:9" pos:end="37:52"><name pos:start="37:9" pos:end="37:28">av_bprint_get_buffer</name><argument_list pos:start="37:29" pos:end="37:52">(<argument pos:start="37:30" pos:end="37:31"><expr pos:start="37:30" pos:end="37:31"><name pos:start="37:30" pos:end="37:31">bp</name></expr></argument>, <argument pos:start="37:34" pos:end="37:34"><expr pos:start="37:34" pos:end="37:34"><literal type="number" pos:start="37:34" pos:end="37:34">1</literal></expr></argument>, <argument pos:start="37:37" pos:end="37:40"><expr pos:start="37:37" pos:end="37:40"><operator pos:start="37:37" pos:end="37:37">&amp;</operator><name pos:start="37:38" pos:end="37:40">buf</name></expr></argument>, <argument pos:start="37:43" pos:end="37:51"><expr pos:start="37:43" pos:end="37:51"><operator pos:start="37:43" pos:end="37:43">&amp;</operator><name pos:start="37:44" pos:end="37:51">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:22">(<expr pos:start="39:13" pos:end="39:21"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:21">buf_size</name></expr>)</condition> <block pos:start="39:24" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:22">

            <expr_stmt pos:start="41:13" pos:end="41:34"><expr pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:33"><name pos:start="41:19" pos:end="41:25">AVERROR</name><argument_list pos:start="41:26" pos:end="41:33">(<argument pos:start="41:27" pos:end="41:32"><expr pos:start="41:27" pos:end="41:32"><name pos:start="41:27" pos:end="41:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="43:13" pos:end="43:22">goto <name pos:start="43:18" pos:end="43:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:32"><expr pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:15">zstream</name><operator pos:start="47:16" pos:end="47:16">.</operator><name pos:start="47:17" pos:end="47:24">next_out</name></name>  <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:31">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:15">zstream</name><operator pos:start="49:16" pos:end="49:16">.</operator><name pos:start="49:17" pos:end="49:25">avail_out</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:36">buf_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:48"><name pos:start="51:15" pos:end="51:21">inflate</name><argument_list pos:start="51:22" pos:end="51:48">(<argument pos:start="51:23" pos:end="51:30"><expr pos:start="51:23" pos:end="51:30"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:30">zstream</name></expr></argument>, <argument pos:start="51:33" pos:end="51:47"><expr pos:start="51:33" pos:end="51:47"><name pos:start="51:33" pos:end="51:47">Z_PARTIAL_FLUSH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:47">(<expr pos:start="53:13" pos:end="53:46"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:18">!=</operator> <name pos:start="53:20" pos:end="53:23">Z_OK</name> <operator pos:start="53:25" pos:end="53:26">&amp;&amp;</operator> <name pos:start="53:28" pos:end="53:30">ret</name> <operator pos:start="53:32" pos:end="53:33">!=</operator> <name pos:start="53:35" pos:end="53:46">Z_STREAM_END</name></expr>)</condition> <block pos:start="53:49" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:22">

            <expr_stmt pos:start="55:13" pos:end="55:35"><expr pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:34">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

            <goto pos:start="57:13" pos:end="57:22">goto <name pos:start="57:18" pos:end="57:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:42"><expr pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:10">bp</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:15">len</name></name> <operator pos:start="61:17" pos:end="61:18">+=</operator> <name pos:start="61:20" pos:end="61:35"><name pos:start="61:20" pos:end="61:26">zstream</name><operator pos:start="61:27" pos:end="61:27">.</operator><name pos:start="61:28" pos:end="61:35">next_out</name></name> <operator pos:start="61:37" pos:end="61:37">-</operator> <name pos:start="61:39" pos:end="61:41">buf</name></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:18"><if pos:start="63:9" pos:end="65:18">if <condition pos:start="63:12" pos:end="63:32">(<expr pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:18">==</operator> <name pos:start="63:20" pos:end="63:31">Z_STREAM_END</name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:18"><block_content pos:start="65:13" pos:end="65:18">

            <break pos:start="65:13" pos:end="65:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="69:5" pos:end="69:25"><expr pos:start="69:5" pos:end="69:24"><call pos:start="69:5" pos:end="69:24"><name pos:start="69:5" pos:end="69:14">inflateEnd</name><argument_list pos:start="69:15" pos:end="69:24">(<argument pos:start="69:16" pos:end="69:23"><expr pos:start="69:16" pos:end="69:23"><operator pos:start="69:16" pos:end="69:16">&amp;</operator><name pos:start="69:17" pos:end="69:23">zstream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:25"><expr pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:6">bp</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:11">str</name><index pos:start="71:12" pos:end="71:20">[<expr pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:14">bp</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:19">len</name></name></expr>]</index></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <literal type="number" pos:start="71:24" pos:end="71:24">0</literal></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>



<label pos:start="77:1" pos:end="77:5"><name pos:start="77:1" pos:end="77:4">fail</name>:</label>

    <expr_stmt pos:start="79:5" pos:end="79:25"><expr pos:start="79:5" pos:end="79:24"><call pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:14">inflateEnd</name><argument_list pos:start="79:15" pos:end="79:24">(<argument pos:start="79:16" pos:end="79:23"><expr pos:start="79:16" pos:end="79:23"><operator pos:start="79:16" pos:end="79:16">&amp;</operator><name pos:start="79:17" pos:end="79:23">zstream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:33"><expr pos:start="81:5" pos:end="81:32"><call pos:start="81:5" pos:end="81:32"><name pos:start="81:5" pos:end="81:22">av_bprint_finalize</name><argument_list pos:start="81:23" pos:end="81:32">(<argument pos:start="81:24" pos:end="81:25"><expr pos:start="81:24" pos:end="81:25"><name pos:start="81:24" pos:end="81:25">bp</name></expr></argument>, <argument pos:start="81:28" pos:end="81:31"><expr pos:start="81:28" pos:end="81:31"><name pos:start="81:28" pos:end="81:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:15">return <expr pos:start="83:12" pos:end="83:14"><name pos:start="83:12" pos:end="83:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
