<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3739.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">jpeg2000_decode_packet</name><parameter_list pos:start="1:34" pos:end="7:73">(<parameter pos:start="1:35" pos:end="1:59"><decl pos:start="1:35" pos:end="1:59"><type pos:start="1:35" pos:end="1:59"><name pos:start="1:35" pos:end="1:56">Jpeg2000DecoderContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:61"><decl pos:start="3:35" pos:end="3:61"><type pos:start="3:35" pos:end="3:61"><name pos:start="3:35" pos:end="3:53">Jpeg2000CodingStyle</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:61">codsty</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:58"><decl pos:start="5:35" pos:end="5:58"><type pos:start="5:35" pos:end="5:58"><name pos:start="5:35" pos:end="5:50">Jpeg2000ResLevel</name> <modifier pos:start="5:52" pos:end="5:52">*</modifier></type><name pos:start="5:53" pos:end="5:58">rlevel</name></decl></parameter>, <parameter pos:start="5:61" pos:end="5:70"><decl pos:start="5:61" pos:end="5:70"><type pos:start="5:61" pos:end="5:70"><name pos:start="5:61" pos:end="5:63">int</name></type> <name pos:start="5:65" pos:end="5:70">precno</name></decl></parameter>,

                                  <parameter pos:start="7:35" pos:end="7:43"><decl pos:start="7:35" pos:end="7:43"><type pos:start="7:35" pos:end="7:43"><name pos:start="7:35" pos:end="7:37">int</name></type> <name pos:start="7:39" pos:end="7:43">layno</name></decl></parameter>, <parameter pos:start="7:46" pos:end="7:58"><decl pos:start="7:46" pos:end="7:58"><type pos:start="7:46" pos:end="7:58"><name pos:start="7:46" pos:end="7:52">uint8_t</name> <modifier pos:start="7:54" pos:end="7:54">*</modifier></type><name pos:start="7:55" pos:end="7:58">expn</name></decl></parameter>, <parameter pos:start="7:61" pos:end="7:72"><decl pos:start="7:61" pos:end="7:72"><type pos:start="7:61" pos:end="7:72"><name pos:start="7:61" pos:end="7:63">int</name></type> <name pos:start="7:65" pos:end="7:72">numgbits</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="167:1">{<block_content pos:start="11:5" pos:end="165:13">

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">bandno</name></decl>, <decl pos:start="11:17" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:22">cblkno</name></decl>, <decl pos:start="11:25" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:27">ret</name></decl>, <decl pos:start="11:30" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:43">nb_code_blocks</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="23:19"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:32">(<expr pos:start="15:9" pos:end="15:31"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:13">ret</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="15:30"><name pos:start="15:17" pos:end="15:24">get_bits</name><argument_list pos:start="15:25" pos:end="15:30">(<argument pos:start="15:26" pos:end="15:26"><expr pos:start="15:26" pos:end="15:26"><name pos:start="15:26" pos:end="15:26">s</name></expr></argument>, <argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">1</literal></expr></argument>)</argument_list></call><operator pos:start="15:31" pos:end="15:31">)</operator></expr>)</condition> <block pos:start="15:34" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:17">

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><call pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:22">jpeg2000_flush</name><argument_list pos:start="17:23" pos:end="17:25">(<argument pos:start="17:24" pos:end="17:24"><expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="21:7" pos:end="23:19">else if <condition pos:start="21:15" pos:end="21:23">(<expr pos:start="21:16" pos:end="21:22"><name pos:start="21:16" pos:end="21:18">ret</name> <operator pos:start="21:20" pos:end="21:20">&lt;</operator> <literal type="number" pos:start="21:22" pos:end="21:22">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:19"><block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="27:5" pos:end="103:5">for <control pos:start="27:9" pos:end="27:55">(<init pos:start="27:10" pos:end="27:20"><expr pos:start="27:10" pos:end="27:19"><name pos:start="27:10" pos:end="27:15">bandno</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>;</init> <condition pos:start="27:22" pos:end="27:45"><expr pos:start="27:22" pos:end="27:44"><name pos:start="27:22" pos:end="27:27">bandno</name> <operator pos:start="27:29" pos:end="27:29">&lt;</operator> <name pos:start="27:31" pos:end="27:44"><name pos:start="27:31" pos:end="27:36">rlevel</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:44">nbands</name></name></expr>;</condition> <incr pos:start="27:47" pos:end="27:54"><expr pos:start="27:47" pos:end="27:54"><name pos:start="27:47" pos:end="27:52">bandno</name><operator pos:start="27:53" pos:end="27:54">++</operator></expr></incr>)</control> <block pos:start="27:57" pos:end="103:5">{<block_content pos:start="29:9" pos:end="101:9">

        <decl_stmt pos:start="29:9" pos:end="29:51"><decl pos:start="29:9" pos:end="29:50"><type pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:20">Jpeg2000Band</name> <modifier pos:start="29:22" pos:end="29:22">*</modifier></type><name pos:start="29:23" pos:end="29:26">band</name> <init pos:start="29:28" pos:end="29:50">= <expr pos:start="29:30" pos:end="29:50"><name pos:start="29:30" pos:end="29:41"><name pos:start="29:30" pos:end="29:35">rlevel</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:41">band</name></name> <operator pos:start="29:43" pos:end="29:43">+</operator> <name pos:start="29:45" pos:end="29:50">bandno</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:49"><decl pos:start="31:9" pos:end="31:48"><type pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:20">Jpeg2000Prec</name> <modifier pos:start="31:22" pos:end="31:22">*</modifier></type><name pos:start="31:23" pos:end="31:26">prec</name> <init pos:start="31:28" pos:end="31:48">= <expr pos:start="31:30" pos:end="31:48"><name pos:start="31:30" pos:end="31:39"><name pos:start="31:30" pos:end="31:33">band</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:39">prec</name></name> <operator pos:start="31:41" pos:end="31:41">+</operator> <name pos:start="31:43" pos:end="31:48">precno</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="35:9" pos:end="39:21"><if pos:start="35:9" pos:end="39:21">if <condition pos:start="35:12" pos:end="37:51">(<expr pos:start="35:13" pos:end="37:50"><name pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:16">band</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:23">coord</name><index pos:start="35:24" pos:end="35:26">[<expr pos:start="35:25" pos:end="35:25"><literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>]</index><index pos:start="35:27" pos:end="35:29">[<expr pos:start="35:28" pos:end="35:28"><literal type="number" pos:start="35:28" pos:end="35:28">0</literal></expr>]</index></name> <operator pos:start="35:31" pos:end="35:32">==</operator> <name pos:start="35:34" pos:end="35:50"><name pos:start="35:34" pos:end="35:37">band</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:44">coord</name><index pos:start="35:45" pos:end="35:47">[<expr pos:start="35:46" pos:end="35:46"><literal type="number" pos:start="35:46" pos:end="35:46">0</literal></expr>]</index><index pos:start="35:48" pos:end="35:50">[<expr pos:start="35:49" pos:end="35:49"><literal type="number" pos:start="35:49" pos:end="35:49">1</literal></expr>]</index></name> <operator pos:start="35:52" pos:end="35:53">||</operator>

            <name pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:16">band</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">coord</name><index pos:start="37:24" pos:end="37:26">[<expr pos:start="37:25" pos:end="37:25"><literal type="number" pos:start="37:25" pos:end="37:25">1</literal></expr>]</index><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><literal type="number" pos:start="37:28" pos:end="37:28">0</literal></expr>]</index></name> <operator pos:start="37:31" pos:end="37:32">==</operator> <name pos:start="37:34" pos:end="37:50"><name pos:start="37:34" pos:end="37:37">band</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:44">coord</name><index pos:start="37:45" pos:end="37:47">[<expr pos:start="37:46" pos:end="37:46"><literal type="number" pos:start="37:46" pos:end="37:46">1</literal></expr>]</index><index pos:start="37:48" pos:end="37:50">[<expr pos:start="37:49" pos:end="37:49"><literal type="number" pos:start="37:49" pos:end="37:49">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:21"><block_content pos:start="39:13" pos:end="39:21">

            <continue pos:start="39:13" pos:end="39:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:12">prec</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:17">yi0</name></name> <operator pos:start="41:19" pos:end="41:19">=</operator> <literal type="number" pos:start="41:21" pos:end="41:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:12">prec</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:17">xi0</name></name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="47:52"><expr pos:start="45:9" pos:end="47:51"><name pos:start="45:9" pos:end="45:22">nb_code_blocks</name> <operator pos:start="45:24" pos:end="45:24">=</operator>  <name pos:start="45:27" pos:end="45:52"><name pos:start="45:27" pos:end="45:30">prec</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:52">nb_codeblocks_height</name></name> <operator pos:start="45:54" pos:end="45:54">*</operator>

                          <name pos:start="47:27" pos:end="47:51"><name pos:start="47:27" pos:end="47:30">prec</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:51">nb_codeblocks_width</name></name></expr>;</expr_stmt>

        <for pos:start="49:9" pos:end="101:9">for <control pos:start="49:13" pos:end="49:59">(<init pos:start="49:14" pos:end="49:24"><expr pos:start="49:14" pos:end="49:23"><name pos:start="49:14" pos:end="49:19">cblkno</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr>;</init> <condition pos:start="49:26" pos:end="49:49"><expr pos:start="49:26" pos:end="49:48"><name pos:start="49:26" pos:end="49:31">cblkno</name> <operator pos:start="49:33" pos:end="49:33">&lt;</operator> <name pos:start="49:35" pos:end="49:48">nb_code_blocks</name></expr>;</condition> <incr pos:start="49:51" pos:end="49:58"><expr pos:start="49:51" pos:end="49:58"><name pos:start="49:51" pos:end="49:56">cblkno</name><operator pos:start="49:57" pos:end="49:58">++</operator></expr></incr>)</control> <block pos:start="49:61" pos:end="101:9">{<block_content pos:start="51:13" pos:end="99:40">

            <decl_stmt pos:start="51:13" pos:end="51:53"><decl pos:start="51:13" pos:end="51:52"><type pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:24">Jpeg2000Cblk</name> <modifier pos:start="51:26" pos:end="51:26">*</modifier></type><name pos:start="51:27" pos:end="51:30">cblk</name> <init pos:start="51:32" pos:end="51:52">= <expr pos:start="51:34" pos:end="51:52"><name pos:start="51:34" pos:end="51:43"><name pos:start="51:34" pos:end="51:37">prec</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:43">cblk</name></name> <operator pos:start="51:45" pos:end="51:45">+</operator> <name pos:start="51:47" pos:end="51:52">cblkno</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:38"><decl pos:start="53:13" pos:end="53:20"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:20">incl</name></decl>, <decl pos:start="53:23" pos:end="53:31"><type ref="prev" pos:start="53:13" pos:end="53:15"/><name pos:start="53:23" pos:end="53:31">newpasses</name></decl>, <decl pos:start="53:34" pos:end="53:37"><type ref="prev" pos:start="53:13" pos:end="53:15"/><name pos:start="53:34" pos:end="53:37">llen</name></decl>;</decl_stmt>



            <if_stmt pos:start="57:13" pos:end="63:87"><if pos:start="57:13" pos:end="59:38">if <condition pos:start="57:16" pos:end="57:30">(<expr pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:20">cblk</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:29">npasses</name></name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:38"><block_content pos:start="59:17" pos:end="59:38">

                <expr_stmt pos:start="59:17" pos:end="59:38"><expr pos:start="59:17" pos:end="59:37"><name pos:start="59:17" pos:end="59:20">incl</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <call pos:start="59:24" pos:end="59:37"><name pos:start="59:24" pos:end="59:31">get_bits</name><argument_list pos:start="59:32" pos:end="59:37">(<argument pos:start="59:33" pos:end="59:33"><expr pos:start="59:33" pos:end="59:33"><name pos:start="59:33" pos:end="59:33">s</name></expr></argument>, <argument pos:start="59:36" pos:end="59:36"><expr pos:start="59:36" pos:end="59:36"><literal type="number" pos:start="59:36" pos:end="59:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="61:13" pos:end="63:87">else<block type="pseudo" pos:start="63:17" pos:end="63:87"><block_content pos:start="63:17" pos:end="63:87">

                <expr_stmt pos:start="63:17" pos:end="63:87"><expr pos:start="63:17" pos:end="63:86"><name pos:start="63:17" pos:end="63:20">incl</name> <operator pos:start="63:22" pos:end="63:22">=</operator> <call pos:start="63:24" pos:end="63:77"><name pos:start="63:24" pos:end="63:38">tag_tree_decode</name><argument_list pos:start="63:39" pos:end="63:77">(<argument pos:start="63:40" pos:end="63:40"><expr pos:start="63:40" pos:end="63:40"><name pos:start="63:40" pos:end="63:40">s</name></expr></argument>, <argument pos:start="63:43" pos:end="63:65"><expr pos:start="63:43" pos:end="63:65"><name pos:start="63:43" pos:end="63:56"><name pos:start="63:43" pos:end="63:46">prec</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:56">cblkincl</name></name> <operator pos:start="63:58" pos:end="63:58">+</operator> <name pos:start="63:60" pos:end="63:65">cblkno</name></expr></argument>, <argument pos:start="63:68" pos:end="63:76"><expr pos:start="63:68" pos:end="63:76"><name pos:start="63:68" pos:end="63:72">layno</name> <operator pos:start="63:74" pos:end="63:74">+</operator> <literal type="number" pos:start="63:76" pos:end="63:76">1</literal></expr></argument>)</argument_list></call> <operator pos:start="63:79" pos:end="63:80">==</operator> <name pos:start="63:82" pos:end="63:86">layno</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="65:13" pos:end="71:28"><if pos:start="65:13" pos:end="67:25">if <condition pos:start="65:16" pos:end="65:22">(<expr pos:start="65:17" pos:end="65:21"><operator pos:start="65:17" pos:end="65:17">!</operator><name pos:start="65:18" pos:end="65:21">incl</name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:25"><block_content pos:start="67:17" pos:end="67:25">

                <continue pos:start="67:17" pos:end="67:25">continue;</continue></block_content></block></if>

            <if type="elseif" pos:start="69:13" pos:end="71:28">else if <condition pos:start="69:21" pos:end="69:30">(<expr pos:start="69:22" pos:end="69:29"><name pos:start="69:22" pos:end="69:25">incl</name> <operator pos:start="69:27" pos:end="69:27">&lt;</operator> <literal type="number" pos:start="69:29" pos:end="69:29">0</literal></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:28"><block_content pos:start="71:17" pos:end="71:28">

                <return pos:start="71:17" pos:end="71:28">return <expr pos:start="71:24" pos:end="71:27"><name pos:start="71:24" pos:end="71:27">incl</name></expr>;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="75:13" pos:end="81:57"><if pos:start="75:13" pos:end="81:57">if <condition pos:start="75:16" pos:end="75:31">(<expr pos:start="75:17" pos:end="75:30"><operator pos:start="75:17" pos:end="75:17">!</operator><name pos:start="75:18" pos:end="75:30"><name pos:start="75:18" pos:end="75:21">cblk</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:30">npasses</name></name></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="81:57"><block_content pos:start="77:17" pos:end="81:57">

                <expr_stmt pos:start="77:17" pos:end="81:57"><expr pos:start="77:17" pos:end="81:56"><name pos:start="77:17" pos:end="77:33"><name pos:start="77:17" pos:end="77:20">cblk</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:33">nonzerobits</name></name> <operator pos:start="77:35" pos:end="77:35">=</operator> <name pos:start="77:37" pos:end="77:48"><name pos:start="77:37" pos:end="77:40">expn</name><index pos:start="77:41" pos:end="77:48">[<expr pos:start="77:42" pos:end="77:47"><name pos:start="77:42" pos:end="77:47">bandno</name></expr>]</index></name> <operator pos:start="77:50" pos:end="77:50">+</operator> <name pos:start="77:52" pos:end="77:59">numgbits</name> <operator pos:start="77:61" pos:end="77:61">-</operator> <literal type="number" pos:start="77:63" pos:end="77:65">1</literal> <operator pos:start="77:65" pos:end="77:65">-</operator>

                                    <call pos:start="79:37" pos:end="81:56"><name pos:start="79:37" pos:end="79:51">tag_tree_decode</name><argument_list pos:start="79:52" pos:end="81:56">(<argument pos:start="79:53" pos:end="79:53"><expr pos:start="79:53" pos:end="79:53"><name pos:start="79:53" pos:end="79:53">s</name></expr></argument>, <argument pos:start="79:56" pos:end="79:78"><expr pos:start="79:56" pos:end="79:78"><name pos:start="79:56" pos:end="79:69"><name pos:start="79:56" pos:end="79:59">prec</name><operator pos:start="79:60" pos:end="79:61">-&gt;</operator><name pos:start="79:62" pos:end="79:69">zerobits</name></name> <operator pos:start="79:71" pos:end="79:71">+</operator> <name pos:start="79:73" pos:end="79:78">cblkno</name></expr></argument>,

                                                    <argument pos:start="81:53" pos:end="81:55"><expr pos:start="81:53" pos:end="81:55"><literal type="number" pos:start="81:53" pos:end="81:55">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="83:13" pos:end="85:33"><if pos:start="83:13" pos:end="85:33">if <condition pos:start="83:16" pos:end="83:48">(<expr pos:start="83:17" pos:end="83:47"><operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:26">newpasses</name> <operator pos:start="83:28" pos:end="83:28">=</operator> <call pos:start="83:30" pos:end="83:42"><name pos:start="83:30" pos:end="83:39">getnpasses</name><argument_list pos:start="83:40" pos:end="83:42">(<argument pos:start="83:41" pos:end="83:41"><expr pos:start="83:41" pos:end="83:41"><name pos:start="83:41" pos:end="83:41">s</name></expr></argument>)</argument_list></call><operator pos:start="83:43" pos:end="83:43">)</operator> <operator pos:start="83:45" pos:end="83:45">&lt;</operator> <literal type="number" pos:start="83:47" pos:end="83:47">0</literal></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:33"><block_content pos:start="85:17" pos:end="85:33">

                <return pos:start="85:17" pos:end="85:33">return <expr pos:start="85:24" pos:end="85:32"><name pos:start="85:24" pos:end="85:32">newpasses</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="87:13" pos:end="89:28"><if pos:start="87:13" pos:end="89:28">if <condition pos:start="87:16" pos:end="87:45">(<expr pos:start="87:17" pos:end="87:44"><operator pos:start="87:17" pos:end="87:17">(</operator><name pos:start="87:18" pos:end="87:21">llen</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <call pos:start="87:25" pos:end="87:39"><name pos:start="87:25" pos:end="87:36">getlblockinc</name><argument_list pos:start="87:37" pos:end="87:39">(<argument pos:start="87:38" pos:end="87:38"><expr pos:start="87:38" pos:end="87:38"><name pos:start="87:38" pos:end="87:38">s</name></expr></argument>)</argument_list></call><operator pos:start="87:40" pos:end="87:40">)</operator> <operator pos:start="87:42" pos:end="87:42">&lt;</operator> <literal type="number" pos:start="87:44" pos:end="87:44">0</literal></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:28"><block_content pos:start="89:17" pos:end="89:28">

                <return pos:start="89:17" pos:end="89:28">return <expr pos:start="89:24" pos:end="89:27"><name pos:start="89:24" pos:end="89:27">llen</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:33"><expr pos:start="91:13" pos:end="91:32"><name pos:start="91:13" pos:end="91:24"><name pos:start="91:13" pos:end="91:16">cblk</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:24">lblock</name></name> <operator pos:start="91:26" pos:end="91:27">+=</operator> <name pos:start="91:29" pos:end="91:32">llen</name></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="95:27"><if pos:start="93:13" pos:end="95:27">if <condition pos:start="93:16" pos:end="93:75">(<expr pos:start="93:17" pos:end="93:74"><operator pos:start="93:17" pos:end="93:17">(</operator><name pos:start="93:18" pos:end="93:20">ret</name> <operator pos:start="93:22" pos:end="93:22">=</operator> <call pos:start="93:24" pos:end="93:69"><name pos:start="93:24" pos:end="93:31">get_bits</name><argument_list pos:start="93:32" pos:end="93:69">(<argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><name pos:start="93:33" pos:end="93:33">s</name></expr></argument>, <argument pos:start="93:36" pos:end="93:68"><expr pos:start="93:36" pos:end="93:68"><call pos:start="93:36" pos:end="93:53"><name pos:start="93:36" pos:end="93:42">av_log2</name><argument_list pos:start="93:43" pos:end="93:53">(<argument pos:start="93:44" pos:end="93:52"><expr pos:start="93:44" pos:end="93:52"><name pos:start="93:44" pos:end="93:52">newpasses</name></expr></argument>)</argument_list></call> <operator pos:start="93:55" pos:end="93:55">+</operator> <name pos:start="93:57" pos:end="93:68"><name pos:start="93:57" pos:end="93:60">cblk</name><operator pos:start="93:61" pos:end="93:62">-&gt;</operator><name pos:start="93:63" pos:end="93:68">lblock</name></name></expr></argument>)</argument_list></call><operator pos:start="93:70" pos:end="93:70">)</operator> <operator pos:start="93:72" pos:end="93:72">&lt;</operator> <literal type="number" pos:start="93:74" pos:end="93:74">0</literal></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:27"><block_content pos:start="95:17" pos:end="95:27">

                <return pos:start="95:17" pos:end="95:27">return <expr pos:start="95:24" pos:end="95:26"><name pos:start="95:24" pos:end="95:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:34"><expr pos:start="97:13" pos:end="97:33"><name pos:start="97:13" pos:end="97:27"><name pos:start="97:13" pos:end="97:16">cblk</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:27">lengthinc</name></name> <operator pos:start="97:29" pos:end="97:29">=</operator> <name pos:start="97:31" pos:end="97:33">ret</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:40"><expr pos:start="99:13" pos:end="99:39"><name pos:start="99:13" pos:end="99:25"><name pos:start="99:13" pos:end="99:16">cblk</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:25">npasses</name></name>  <operator pos:start="99:28" pos:end="99:29">+=</operator> <name pos:start="99:31" pos:end="99:39">newpasses</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="105:5" pos:end="105:22"><expr pos:start="105:5" pos:end="105:21"><call pos:start="105:5" pos:end="105:21"><name pos:start="105:5" pos:end="105:18">jpeg2000_flush</name><argument_list pos:start="105:19" pos:end="105:21">(<argument pos:start="105:20" pos:end="105:20"><expr pos:start="105:20" pos:end="105:20"><name pos:start="105:20" pos:end="105:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="119:5"><if pos:start="109:5" pos:end="119:5">if <condition pos:start="109:8" pos:end="109:41">(<expr pos:start="109:9" pos:end="109:40"><name pos:start="109:9" pos:end="109:20"><name pos:start="109:9" pos:end="109:14">codsty</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:20">csty</name></name> <operator pos:start="109:22" pos:end="109:22">&amp;</operator> <name pos:start="109:24" pos:end="109:40">JPEG2000_CSTY_EPH</name></expr>)</condition> <block pos:start="109:43" pos:end="119:5">{<block_content pos:start="111:9" pos:end="117:70">

        <if_stmt pos:start="111:9" pos:end="117:70"><if pos:start="111:9" pos:end="113:39">if <condition pos:start="111:12" pos:end="111:57">(<expr pos:start="111:13" pos:end="111:56"><call pos:start="111:13" pos:end="111:40"><name pos:start="111:13" pos:end="111:33">bytestream2_peek_be16</name><argument_list pos:start="111:34" pos:end="111:40">(<argument pos:start="111:35" pos:end="111:39"><expr pos:start="111:35" pos:end="111:39"><operator pos:start="111:35" pos:end="111:35">&amp;</operator><name pos:start="111:36" pos:end="111:39"><name pos:start="111:36" pos:end="111:36">s</name><operator pos:start="111:37" pos:end="111:38">-&gt;</operator><name pos:start="111:39" pos:end="111:39">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="111:42" pos:end="111:43">==</operator> <name pos:start="111:45" pos:end="111:56">JPEG2000_EPH</name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:39"><block_content pos:start="113:13" pos:end="113:39">

            <expr_stmt pos:start="113:13" pos:end="113:39"><expr pos:start="113:13" pos:end="113:38"><call pos:start="113:13" pos:end="113:38"><name pos:start="113:13" pos:end="113:28">bytestream2_skip</name><argument_list pos:start="113:29" pos:end="113:38">(<argument pos:start="113:30" pos:end="113:34"><expr pos:start="113:30" pos:end="113:34"><operator pos:start="113:30" pos:end="113:30">&amp;</operator><name pos:start="113:31" pos:end="113:34"><name pos:start="113:31" pos:end="113:31">s</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:34">g</name></name></expr></argument>, <argument pos:start="113:37" pos:end="113:37"><expr pos:start="113:37" pos:end="113:37"><literal type="number" pos:start="113:37" pos:end="113:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="115:9" pos:end="117:70">else<block type="pseudo" pos:start="117:13" pos:end="117:70"><block_content pos:start="117:13" pos:end="117:70">

            <expr_stmt pos:start="117:13" pos:end="117:70"><expr pos:start="117:13" pos:end="117:69"><call pos:start="117:13" pos:end="117:69"><name pos:start="117:13" pos:end="117:18">av_log</name><argument_list pos:start="117:19" pos:end="117:69">(<argument pos:start="117:20" pos:end="117:27"><expr pos:start="117:20" pos:end="117:27"><name pos:start="117:20" pos:end="117:27"><name pos:start="117:20" pos:end="117:20">s</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:27">avctx</name></name></expr></argument>, <argument pos:start="117:30" pos:end="117:41"><expr pos:start="117:30" pos:end="117:41"><name pos:start="117:30" pos:end="117:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="117:44" pos:end="117:68"><expr pos:start="117:44" pos:end="117:68"><literal type="string" pos:start="117:44" pos:end="117:68">"EPH marker not found.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="123:5" pos:end="163:5">for <control pos:start="123:9" pos:end="123:55">(<init pos:start="123:10" pos:end="123:20"><expr pos:start="123:10" pos:end="123:19"><name pos:start="123:10" pos:end="123:15">bandno</name> <operator pos:start="123:17" pos:end="123:17">=</operator> <literal type="number" pos:start="123:19" pos:end="123:19">0</literal></expr>;</init> <condition pos:start="123:22" pos:end="123:45"><expr pos:start="123:22" pos:end="123:44"><name pos:start="123:22" pos:end="123:27">bandno</name> <operator pos:start="123:29" pos:end="123:29">&lt;</operator> <name pos:start="123:31" pos:end="123:44"><name pos:start="123:31" pos:end="123:36">rlevel</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:44">nbands</name></name></expr>;</condition> <incr pos:start="123:47" pos:end="123:54"><expr pos:start="123:47" pos:end="123:54"><name pos:start="123:47" pos:end="123:52">bandno</name><operator pos:start="123:53" pos:end="123:54">++</operator></expr></incr>)</control> <block pos:start="123:57" pos:end="163:5">{<block_content pos:start="125:9" pos:end="161:9">

        <decl_stmt pos:start="125:9" pos:end="125:51"><decl pos:start="125:9" pos:end="125:50"><type pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:20">Jpeg2000Band</name> <modifier pos:start="125:22" pos:end="125:22">*</modifier></type><name pos:start="125:23" pos:end="125:26">band</name> <init pos:start="125:28" pos:end="125:50">= <expr pos:start="125:30" pos:end="125:50"><name pos:start="125:30" pos:end="125:41"><name pos:start="125:30" pos:end="125:35">rlevel</name><operator pos:start="125:36" pos:end="125:37">-&gt;</operator><name pos:start="125:38" pos:end="125:41">band</name></name> <operator pos:start="125:43" pos:end="125:43">+</operator> <name pos:start="125:45" pos:end="125:50">bandno</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="127:9" pos:end="127:49"><decl pos:start="127:9" pos:end="127:48"><type pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:20">Jpeg2000Prec</name> <modifier pos:start="127:22" pos:end="127:22">*</modifier></type><name pos:start="127:23" pos:end="127:26">prec</name> <init pos:start="127:28" pos:end="127:48">= <expr pos:start="127:30" pos:end="127:48"><name pos:start="127:30" pos:end="127:39"><name pos:start="127:30" pos:end="127:33">band</name><operator pos:start="127:34" pos:end="127:35">-&gt;</operator><name pos:start="127:36" pos:end="127:39">prec</name></name> <operator pos:start="127:41" pos:end="127:41">+</operator> <name pos:start="127:43" pos:end="127:48">precno</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:80"><expr pos:start="131:9" pos:end="131:79"><name pos:start="131:9" pos:end="131:22">nb_code_blocks</name> <operator pos:start="131:24" pos:end="131:24">=</operator> <name pos:start="131:26" pos:end="131:51"><name pos:start="131:26" pos:end="131:29">prec</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:51">nb_codeblocks_height</name></name> <operator pos:start="131:53" pos:end="131:53">*</operator> <name pos:start="131:55" pos:end="131:79"><name pos:start="131:55" pos:end="131:58">prec</name><operator pos:start="131:59" pos:end="131:60">-&gt;</operator><name pos:start="131:61" pos:end="131:79">nb_codeblocks_width</name></name></expr>;</expr_stmt>

        <for pos:start="133:9" pos:end="161:9">for <control pos:start="133:13" pos:end="133:59">(<init pos:start="133:14" pos:end="133:24"><expr pos:start="133:14" pos:end="133:23"><name pos:start="133:14" pos:end="133:19">cblkno</name> <operator pos:start="133:21" pos:end="133:21">=</operator> <literal type="number" pos:start="133:23" pos:end="133:23">0</literal></expr>;</init> <condition pos:start="133:26" pos:end="133:49"><expr pos:start="133:26" pos:end="133:48"><name pos:start="133:26" pos:end="133:31">cblkno</name> <operator pos:start="133:33" pos:end="133:33">&lt;</operator> <name pos:start="133:35" pos:end="133:48">nb_code_blocks</name></expr>;</condition> <incr pos:start="133:51" pos:end="133:58"><expr pos:start="133:51" pos:end="133:58"><name pos:start="133:51" pos:end="133:56">cblkno</name><operator pos:start="133:57" pos:end="133:58">++</operator></expr></incr>)</control> <block pos:start="133:61" pos:end="161:9">{<block_content pos:start="135:13" pos:end="159:32">

            <decl_stmt pos:start="135:13" pos:end="135:53"><decl pos:start="135:13" pos:end="135:52"><type pos:start="135:13" pos:end="135:26"><name pos:start="135:13" pos:end="135:24">Jpeg2000Cblk</name> <modifier pos:start="135:26" pos:end="135:26">*</modifier></type><name pos:start="135:27" pos:end="135:30">cblk</name> <init pos:start="135:32" pos:end="135:52">= <expr pos:start="135:34" pos:end="135:52"><name pos:start="135:34" pos:end="135:43"><name pos:start="135:34" pos:end="135:37">prec</name><operator pos:start="135:38" pos:end="135:39">-&gt;</operator><name pos:start="135:40" pos:end="135:43">cblk</name></name> <operator pos:start="135:45" pos:end="135:45">+</operator> <name pos:start="135:47" pos:end="135:52">cblkno</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="137:13" pos:end="139:39"><if pos:start="137:13" pos:end="139:39">if <condition pos:start="137:16" pos:end="137:68">(<expr pos:start="137:17" pos:end="137:67"><call pos:start="137:17" pos:end="137:49"><name pos:start="137:17" pos:end="137:42">bytestream2_get_bytes_left</name><argument_list pos:start="137:43" pos:end="137:49">(<argument pos:start="137:44" pos:end="137:48"><expr pos:start="137:44" pos:end="137:48"><operator pos:start="137:44" pos:end="137:44">&amp;</operator><name pos:start="137:45" pos:end="137:48"><name pos:start="137:45" pos:end="137:45">s</name><operator pos:start="137:46" pos:end="137:47">-&gt;</operator><name pos:start="137:48" pos:end="137:48">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="137:51" pos:end="137:51">&lt;</operator> <name pos:start="137:53" pos:end="137:67"><name pos:start="137:53" pos:end="137:56">cblk</name><operator pos:start="137:57" pos:end="137:58">-&gt;</operator><name pos:start="137:59" pos:end="137:67">lengthinc</name></name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:39"><block_content pos:start="139:17" pos:end="139:39">

                <return pos:start="139:17" pos:end="139:39">return <expr pos:start="139:24" pos:end="139:38"><call pos:start="139:24" pos:end="139:38"><name pos:start="139:24" pos:end="139:30">AVERROR</name><argument_list pos:start="139:31" pos:end="139:38">(<argument pos:start="139:32" pos:end="139:37"><expr pos:start="139:32" pos:end="139:37"><name pos:start="139:32" pos:end="139:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="141:13" pos:end="143:30">/* Code-block data can be empty. In that case initialize data

             * with 0xFFFF. */</comment>

            <if_stmt pos:start="145:13" pos:end="155:13"><if pos:start="145:13" pos:end="149:13">if <condition pos:start="145:16" pos:end="145:36">(<expr pos:start="145:17" pos:end="145:35"><name pos:start="145:17" pos:end="145:31"><name pos:start="145:17" pos:end="145:20">cblk</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:31">lengthinc</name></name> <operator pos:start="145:33" pos:end="145:33">&gt;</operator> <literal type="number" pos:start="145:35" pos:end="145:35">0</literal></expr>)</condition> <block pos:start="145:38" pos:end="149:13">{<block_content pos:start="147:17" pos:end="147:76">

                <expr_stmt pos:start="147:17" pos:end="147:76"><expr pos:start="147:17" pos:end="147:75"><call pos:start="147:17" pos:end="147:75"><name pos:start="147:17" pos:end="147:39">bytestream2_get_bufferu</name><argument_list pos:start="147:40" pos:end="147:75">(<argument pos:start="147:41" pos:end="147:45"><expr pos:start="147:41" pos:end="147:45"><operator pos:start="147:41" pos:end="147:41">&amp;</operator><name pos:start="147:42" pos:end="147:45"><name pos:start="147:42" pos:end="147:42">s</name><operator pos:start="147:43" pos:end="147:44">-&gt;</operator><name pos:start="147:45" pos:end="147:45">g</name></name></expr></argument>, <argument pos:start="147:48" pos:end="147:57"><expr pos:start="147:48" pos:end="147:57"><name pos:start="147:48" pos:end="147:57"><name pos:start="147:48" pos:end="147:51">cblk</name><operator pos:start="147:52" pos:end="147:53">-&gt;</operator><name pos:start="147:54" pos:end="147:57">data</name></name></expr></argument>, <argument pos:start="147:60" pos:end="147:74"><expr pos:start="147:60" pos:end="147:74"><name pos:start="147:60" pos:end="147:74"><name pos:start="147:60" pos:end="147:63">cblk</name><operator pos:start="147:64" pos:end="147:65">-&gt;</operator><name pos:start="147:66" pos:end="147:74">lengthinc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="149:15" pos:end="155:13">else <block pos:start="149:20" pos:end="155:13">{<block_content pos:start="151:17" pos:end="153:37">

                <expr_stmt pos:start="151:17" pos:end="151:37"><expr pos:start="151:17" pos:end="151:36"><name pos:start="151:17" pos:end="151:29"><name pos:start="151:17" pos:end="151:20">cblk</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:26">data</name><index pos:start="151:27" pos:end="151:29">[<expr pos:start="151:28" pos:end="151:28"><literal type="number" pos:start="151:28" pos:end="151:28">0</literal></expr>]</index></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <literal type="number" pos:start="151:33" pos:end="151:36">0xFF</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:37"><expr pos:start="153:17" pos:end="153:36"><name pos:start="153:17" pos:end="153:29"><name pos:start="153:17" pos:end="153:20">cblk</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:26">data</name><index pos:start="153:27" pos:end="153:29">[<expr pos:start="153:28" pos:end="153:28"><literal type="number" pos:start="153:28" pos:end="153:28">1</literal></expr>]</index></name> <operator pos:start="153:31" pos:end="153:31">=</operator> <literal type="number" pos:start="153:33" pos:end="153:36">0xFF</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:46"><expr pos:start="157:13" pos:end="157:45"><name pos:start="157:13" pos:end="157:24"><name pos:start="157:13" pos:end="157:16">cblk</name><operator pos:start="157:17" pos:end="157:18">-&gt;</operator><name pos:start="157:19" pos:end="157:24">length</name></name>   <operator pos:start="157:28" pos:end="157:29">+=</operator> <name pos:start="157:31" pos:end="157:45"><name pos:start="157:31" pos:end="157:34">cblk</name><operator pos:start="157:35" pos:end="157:36">-&gt;</operator><name pos:start="157:37" pos:end="157:45">lengthinc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:32"><expr pos:start="159:13" pos:end="159:31"><name pos:start="159:13" pos:end="159:27"><name pos:start="159:13" pos:end="159:16">cblk</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:27">lengthinc</name></name> <operator pos:start="159:29" pos:end="159:29">=</operator> <literal type="number" pos:start="159:31" pos:end="159:31">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="165:5" pos:end="165:13">return <expr pos:start="165:12" pos:end="165:12"><literal type="number" pos:start="165:12" pos:end="165:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
