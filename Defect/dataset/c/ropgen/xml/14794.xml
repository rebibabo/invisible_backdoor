<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14794.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">cow_open</name><parameter_list pos:start="1:20" pos:end="3:33">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:36">BlockDriverState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">bs</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:47">QDict</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:56">options</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:67">flags</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:32"><decl pos:start="3:21" pos:end="3:32"><type pos:start="3:21" pos:end="3:32"><name pos:start="3:21" pos:end="3:25">Error</name> <modifier pos:start="3:27" pos:end="3:27">*</modifier><modifier pos:start="3:28" pos:end="3:28">*</modifier></type><name pos:start="3:29" pos:end="3:32">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BDRVCowState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:24">bs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:24">cow_header_v2</name></name></type> <name pos:start="9:26" pos:end="9:35">cow_header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">bitmap_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:16">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:34">/* see if it is a cow image */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:67"><expr pos:start="21:5" pos:end="21:66"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:66"><name pos:start="21:11" pos:end="21:20">bdrv_pread</name><argument_list pos:start="21:21" pos:end="21:66">(<argument pos:start="21:22" pos:end="21:29"><expr pos:start="21:22" pos:end="21:29"><name pos:start="21:22" pos:end="21:29"><name pos:start="21:22" pos:end="21:23">bs</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:29">file</name></name></expr></argument>, <argument pos:start="21:32" pos:end="21:32"><expr pos:start="21:32" pos:end="21:32"><literal type="number" pos:start="21:32" pos:end="21:32">0</literal></expr></argument>, <argument pos:start="21:35" pos:end="21:45"><expr pos:start="21:35" pos:end="21:45"><operator pos:start="21:35" pos:end="21:35">&amp;</operator><name pos:start="21:36" pos:end="21:45">cow_header</name></expr></argument>, <argument pos:start="21:48" pos:end="21:65"><expr pos:start="21:48" pos:end="21:65"><sizeof pos:start="21:48" pos:end="21:65">sizeof<argument_list pos:start="21:54" pos:end="21:65">(<argument pos:start="21:55" pos:end="21:64"><expr pos:start="21:55" pos:end="21:64"><name pos:start="21:55" pos:end="21:64">cow_header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition> <block pos:start="23:18" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:18">

        <goto pos:start="25:9" pos:end="25:18">goto <name pos:start="25:14" pos:end="25:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:51">(<expr pos:start="31:9" pos:end="31:50"><call pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:19">be32_to_cpu</name><argument_list pos:start="31:20" pos:end="31:37">(<argument pos:start="31:21" pos:end="31:36"><expr pos:start="31:21" pos:end="31:36"><name pos:start="31:21" pos:end="31:36"><name pos:start="31:21" pos:end="31:30">cow_header</name><operator pos:start="31:31" pos:end="31:31">.</operator><name pos:start="31:32" pos:end="31:36">magic</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:39" pos:end="31:40">!=</operator> <name pos:start="31:42" pos:end="31:50">COW_MAGIC</name></expr>)</condition> <block pos:start="31:53" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:18">

        <expr_stmt pos:start="33:9" pos:end="33:52"><expr pos:start="33:9" pos:end="33:51"><call pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:18">error_setg</name><argument_list pos:start="33:19" pos:end="33:51">(<argument pos:start="33:20" pos:end="33:23"><expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">errp</name></expr></argument>, <argument pos:start="33:26" pos:end="33:50"><expr pos:start="33:26" pos:end="33:50"><literal type="string" pos:start="33:26" pos:end="33:50">"Image not in COW format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:22"><expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <operator pos:start="35:15" pos:end="35:15">-</operator><name pos:start="35:16" pos:end="35:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:18">goto <name pos:start="37:14" pos:end="37:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="59:5"><if pos:start="43:5" pos:end="59:5">if <condition pos:start="43:8" pos:end="43:55">(<expr pos:start="43:9" pos:end="43:54"><call pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:19">be32_to_cpu</name><argument_list pos:start="43:20" pos:end="43:39">(<argument pos:start="43:21" pos:end="43:38"><expr pos:start="43:21" pos:end="43:38"><name pos:start="43:21" pos:end="43:38"><name pos:start="43:21" pos:end="43:30">cow_header</name><operator pos:start="43:31" pos:end="43:31">.</operator><name pos:start="43:32" pos:end="43:38">version</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:41" pos:end="43:42">!=</operator> <name pos:start="43:44" pos:end="43:54">COW_VERSION</name></expr>)</condition> <block pos:start="43:57" pos:end="59:5">{<block_content pos:start="45:9" pos:end="57:18">

        <decl_stmt pos:start="45:9" pos:end="45:25"><decl pos:start="45:9" pos:end="45:24"><type pos:start="45:9" pos:end="45:12"><name pos:start="45:9" pos:end="45:12">char</name></type> <name pos:start="45:14" pos:end="45:24"><name pos:start="45:14" pos:end="45:20">version</name><index pos:start="45:21" pos:end="45:24">[<expr pos:start="45:22" pos:end="45:23"><literal type="number" pos:start="45:22" pos:end="45:23">64</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="47:9" pos:end="49:59"><expr pos:start="47:9" pos:end="49:58"><call pos:start="47:9" pos:end="49:58"><name pos:start="47:9" pos:end="47:16">snprintf</name><argument_list pos:start="47:17" pos:end="49:58">(<argument pos:start="47:18" pos:end="47:24"><expr pos:start="47:18" pos:end="47:24"><name pos:start="47:18" pos:end="47:24">version</name></expr></argument>, <argument pos:start="47:27" pos:end="47:41"><expr pos:start="47:27" pos:end="47:41"><sizeof pos:start="47:27" pos:end="47:41">sizeof<argument_list pos:start="47:33" pos:end="47:41">(<argument pos:start="47:34" pos:end="47:40"><expr pos:start="47:34" pos:end="47:40"><name pos:start="47:34" pos:end="47:40">version</name></expr></argument>)</argument_list></sizeof></expr></argument>,

               <argument pos:start="49:16" pos:end="49:37"><expr pos:start="49:16" pos:end="49:37"><literal type="string" pos:start="49:16" pos:end="49:30">"COW version %"</literal> <name pos:start="49:32" pos:end="49:37">PRIu32</name></expr></argument>, <argument pos:start="49:40" pos:end="49:57"><expr pos:start="49:40" pos:end="49:57"><name pos:start="49:40" pos:end="49:57"><name pos:start="49:40" pos:end="49:49">cow_header</name><operator pos:start="49:50" pos:end="49:50">.</operator><name pos:start="49:51" pos:end="49:57">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="53:45"><expr pos:start="51:9" pos:end="53:44"><call pos:start="51:9" pos:end="53:44"><name pos:start="51:9" pos:end="51:17">error_set</name><argument_list pos:start="51:18" pos:end="53:44">(<argument pos:start="51:19" pos:end="51:22"><expr pos:start="51:19" pos:end="51:22"><name pos:start="51:19" pos:end="51:22">errp</name></expr></argument>, <argument pos:start="51:25" pos:end="51:57"><expr pos:start="51:25" pos:end="51:57"><name pos:start="51:25" pos:end="51:57">QERR_UNKNOWN_BLOCK_FORMAT_FEATURE</name></expr></argument>,

            <argument pos:start="53:13" pos:end="53:27"><expr pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:14">bs</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:27">device_name</name></name></expr></argument>, <argument pos:start="53:30" pos:end="53:34"><expr pos:start="53:30" pos:end="53:34"><literal type="string" pos:start="53:30" pos:end="53:34">"cow"</literal></expr></argument>, <argument pos:start="53:37" pos:end="53:43"><expr pos:start="53:37" pos:end="53:43"><name pos:start="53:37" pos:end="53:43">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <operator pos:start="55:15" pos:end="55:15">-</operator><name pos:start="55:16" pos:end="55:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:18">goto <name pos:start="57:14" pos:end="57:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:25">/* cow image found */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:40"><expr pos:start="65:5" pos:end="65:39"><name pos:start="65:5" pos:end="65:8">size</name> <operator pos:start="65:10" pos:end="65:10">=</operator> <call pos:start="65:12" pos:end="65:39"><name pos:start="65:12" pos:end="65:22">be64_to_cpu</name><argument_list pos:start="65:23" pos:end="65:39">(<argument pos:start="65:24" pos:end="65:38"><expr pos:start="65:24" pos:end="65:38"><name pos:start="65:24" pos:end="65:38"><name pos:start="65:24" pos:end="65:33">cow_header</name><operator pos:start="65:34" pos:end="65:34">.</operator><name pos:start="65:35" pos:end="65:38">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:6">bs</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:21">total_sectors</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:28">size</name> <operator pos:start="67:30" pos:end="67:30">/</operator> <literal type="number" pos:start="67:32" pos:end="67:34">512</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="73:37"><expr pos:start="71:5" pos:end="73:36"><call pos:start="71:5" pos:end="73:36"><name pos:start="71:5" pos:end="71:11">pstrcpy</name><argument_list pos:start="71:12" pos:end="73:36">(<argument pos:start="71:13" pos:end="71:28"><expr pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:14">bs</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:28">backing_file</name></name></expr></argument>, <argument pos:start="71:31" pos:end="71:54"><expr pos:start="71:31" pos:end="71:54"><sizeof pos:start="71:31" pos:end="71:54">sizeof<argument_list pos:start="71:37" pos:end="71:54">(<argument pos:start="71:38" pos:end="71:53"><expr pos:start="71:38" pos:end="71:53"><name pos:start="71:38" pos:end="71:53"><name pos:start="71:38" pos:end="71:39">bs</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:53">backing_file</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

            <argument pos:start="73:13" pos:end="73:35"><expr pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:22">cow_header</name><operator pos:start="73:23" pos:end="73:23">.</operator><name pos:start="73:24" pos:end="73:35">backing_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:70"><expr pos:start="77:5" pos:end="77:69"><name pos:start="77:5" pos:end="77:15">bitmap_size</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <operator pos:start="77:19" pos:end="77:19">(</operator><operator pos:start="77:20" pos:end="77:20">(</operator><name pos:start="77:21" pos:end="77:37"><name pos:start="77:21" pos:end="77:22">bs</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:37">total_sectors</name></name> <operator pos:start="77:39" pos:end="77:39">+</operator> <literal type="number" pos:start="77:41" pos:end="77:41">7</literal><operator pos:start="77:42" pos:end="77:42">)</operator> <operator pos:start="77:44" pos:end="77:45">&gt;&gt;</operator> <literal type="number" pos:start="77:47" pos:end="77:47">3</literal><operator pos:start="77:48" pos:end="77:48">)</operator> <operator pos:start="77:50" pos:end="77:50">+</operator> <sizeof pos:start="77:52" pos:end="77:69">sizeof<argument_list pos:start="77:58" pos:end="77:69">(<argument pos:start="77:59" pos:end="77:68"><expr pos:start="77:59" pos:end="77:68"><name pos:start="77:59" pos:end="77:68">cow_header</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:55"><expr pos:start="79:5" pos:end="79:54"><name pos:start="79:5" pos:end="79:25"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:25">cow_sectors_offset</name></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <operator pos:start="79:29" pos:end="79:29">(</operator><name pos:start="79:30" pos:end="79:40">bitmap_size</name> <operator pos:start="79:42" pos:end="79:42">+</operator> <literal type="number" pos:start="79:44" pos:end="79:46">511</literal><operator pos:start="79:47" pos:end="79:47">)</operator> <operator pos:start="79:49" pos:end="79:49">&amp;</operator> <operator pos:start="79:51" pos:end="79:51">~</operator><literal type="number" pos:start="79:52" pos:end="79:54">511</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:33"><expr pos:start="81:5" pos:end="81:32"><call pos:start="81:5" pos:end="81:32"><name pos:start="81:5" pos:end="81:22">qemu_co_mutex_init</name><argument_list pos:start="81:23" pos:end="81:32">(<argument pos:start="81:24" pos:end="81:31"><expr pos:start="81:24" pos:end="81:31"><operator pos:start="81:24" pos:end="81:24">&amp;</operator><name pos:start="81:25" pos:end="81:31"><name pos:start="81:25" pos:end="81:25">s</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

 <label pos:start="85:2" pos:end="85:6"><name pos:start="85:2" pos:end="85:5">fail</name>:</label>

    <return pos:start="87:5" pos:end="87:15">return <expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
