<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5322.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">print_samplesref</name><parameter_list pos:start="1:29" pos:end="1:59">(<parameter pos:start="1:30" pos:end="1:58"><decl pos:start="1:30" pos:end="1:58"><type pos:start="1:30" pos:end="1:48"><name pos:start="1:30" pos:end="1:46">AVFilterBufferRef</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:58">samplesref</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:19">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:39"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:37">AVFilterBufferRefAudioProps</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:44">props</name> <init pos:start="5:46" pos:end="5:64">= <expr pos:start="5:48" pos:end="5:64"><name pos:start="5:48" pos:end="5:64"><name pos:start="5:48" pos:end="5:57">samplesref</name><operator pos:start="5:58" pos:end="5:59">-&gt;</operator><name pos:start="5:60" pos:end="5:64">audio</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:95"><decl pos:start="7:5" pos:end="7:94"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:15">n</name> <init pos:start="7:17" pos:end="7:94">= <expr pos:start="7:19" pos:end="7:94"><name pos:start="7:19" pos:end="7:35"><name pos:start="7:19" pos:end="7:23">props</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:35">nb_samples</name></name> <operator pos:start="7:37" pos:end="7:37">*</operator> <call pos:start="7:39" pos:end="7:94"><name pos:start="7:39" pos:end="7:71">av_get_channel_layout_nb_channels</name><argument_list pos:start="7:72" pos:end="7:94">(<argument pos:start="7:73" pos:end="7:93"><expr pos:start="7:73" pos:end="7:93"><name pos:start="7:73" pos:end="7:93"><name pos:start="7:73" pos:end="7:77">props</name><operator pos:start="7:78" pos:end="7:79">-&gt;</operator><name pos:start="7:80" pos:end="7:93">channel_layout</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:59"><decl pos:start="9:5" pos:end="9:58"><type pos:start="9:5" pos:end="9:20"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:18">uint16_t</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">p</name>     <init pos:start="9:27" pos:end="9:58">= <expr pos:start="9:29" pos:end="9:58"><operator pos:start="9:29" pos:end="9:29">(</operator><name pos:start="9:30" pos:end="9:37">uint16_t</name><operator pos:start="9:38" pos:end="9:38">*</operator><operator pos:start="9:39" pos:end="9:39">)</operator><name pos:start="9:40" pos:end="9:58"><name pos:start="9:40" pos:end="9:49">samplesref</name><operator pos:start="9:50" pos:end="9:51">-&gt;</operator><name pos:start="9:52" pos:end="9:55">data</name><index pos:start="9:56" pos:end="9:58">[<expr pos:start="9:57" pos:end="9:57"><literal type="number" pos:start="9:57" pos:end="9:57">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:20"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">uint16_t</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">p_end</name> <init pos:start="11:27" pos:end="11:33">= <expr pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:29">p</name> <operator pos:start="11:31" pos:end="11:31">+</operator> <name pos:start="11:33" pos:end="11:33">n</name></expr></init></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="23:5">while <condition pos:start="15:11" pos:end="15:21">(<expr pos:start="15:12" pos:end="15:20"><name pos:start="15:12" pos:end="15:12">p</name> <operator pos:start="15:14" pos:end="15:14">&lt;</operator> <name pos:start="15:16" pos:end="15:20">p_end</name></expr>)</condition> <block pos:start="15:23" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:12">

        <expr_stmt pos:start="17:9" pos:end="17:36"><expr pos:start="17:9" pos:end="17:35"><call pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:13">fputc</name><argument_list pos:start="17:14" pos:end="17:35">(<argument pos:start="17:15" pos:end="17:26"><expr pos:start="17:15" pos:end="17:26"><operator pos:start="17:15" pos:end="17:15">*</operator><name pos:start="17:16" pos:end="17:16">p</name>    <operator pos:start="17:21" pos:end="17:21">&amp;</operator> <literal type="number" pos:start="17:23" pos:end="17:26">0xff</literal></expr></argument>, <argument pos:start="17:29" pos:end="17:34"><expr pos:start="17:29" pos:end="17:34"><name pos:start="17:29" pos:end="17:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><call pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:13">fputc</name><argument_list pos:start="19:14" pos:end="19:35">(<argument pos:start="19:15" pos:end="19:26"><expr pos:start="19:15" pos:end="19:26"><operator pos:start="19:15" pos:end="19:15">*</operator><name pos:start="19:16" pos:end="19:16">p</name><operator pos:start="19:17" pos:end="19:18">&gt;&gt;</operator><literal type="number" pos:start="19:19" pos:end="19:19">8</literal> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <literal type="number" pos:start="19:23" pos:end="19:26">0xff</literal></expr></argument>, <argument pos:start="19:29" pos:end="19:34"><expr pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:34">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:12"><expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:9">p</name><operator pos:start="21:10" pos:end="21:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><call pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:10">fflush</name><argument_list pos:start="25:11" pos:end="25:18">(<argument pos:start="25:12" pos:end="25:17"><expr pos:start="25:12" pos:end="25:17"><name pos:start="25:12" pos:end="25:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
