<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10162.c" pos:tabs="8"><function pos:start="1:1" pos:end="297:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">rv20_decode_picture_header</name><parameter_list pos:start="1:38" pos:end="1:55">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:50">RVDecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">rv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="297:1">{<block_content pos:start="5:5" pos:end="295:45">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:27">rv</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:30">m</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">seq</name></decl>, <decl pos:start="7:14" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:19">mb_pos</name></decl>, <decl pos:start="7:22" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:22">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="44:0"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">rpr_bits</name></decl>;</decl_stmt>



<cpp:if pos:start="13:1" pos:end="13:5">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:5"><literal type="number" pos:start="13:5" pos:end="13:5">0</literal></expr></cpp:if>

    GetBitContext gb= s-&gt;gb;

    for(i=0; i&lt;64; i++){

        av_log(s-&gt;avctx, AV_LOG_DEBUG, "%d", get_bits1(&amp;gb));

        if(i%4==3) av_log(s-&gt;avctx, AV_LOG_DEBUG, " ");

    }

    av_log(s-&gt;avctx, AV_LOG_DEBUG, "\n");

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="29:1" pos:end="29:5">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:5"><literal type="number" pos:start="29:5" pos:end="29:5">0</literal></expr></cpp:if>

    av_log(s-&gt;avctx, AV_LOG_DEBUG, "%3dx%03d/%02Xx%02X ", s-&gt;width, s-&gt;height, s-&gt;width/4, s-&gt;height/4);

    for(i=0; i&lt;s-&gt;avctx-&gt;extradata_size; i++){

        av_log(s-&gt;avctx, AV_LOG_DEBUG, "%02X ", ((uint8_t*)s-&gt;avctx-&gt;extradata)[i]);

        if(i%4==3) av_log(s-&gt;avctx, AV_LOG_DEBUG, " ");

    }

    av_log(s-&gt;avctx, AV_LOG_DEBUG, "\n");

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:5">i</name><operator pos:start="47:6" pos:end="47:6">=</operator> <call pos:start="47:8" pos:end="47:26"><name pos:start="47:8" pos:end="47:15">get_bits</name><argument_list pos:start="47:16" pos:end="47:26">(<argument pos:start="47:17" pos:end="47:22"><expr pos:start="47:17" pos:end="47:22"><operator pos:start="47:17" pos:end="47:17">&amp;</operator><name pos:start="47:18" pos:end="47:22"><name pos:start="47:18" pos:end="47:18">s</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:22">gb</name></name></expr></argument>, <argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><literal type="number" pos:start="47:25" pos:end="47:25">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="49:5" pos:end="65:5">switch<condition pos:start="49:11" pos:end="49:13">(<expr pos:start="49:12" pos:end="49:12"><name pos:start="49:12" pos:end="49:12">i</name></expr>)</condition><block pos:start="49:14" pos:end="65:5">{<block_content pos:start="51:5" pos:end="63:18">

    <case pos:start="51:5" pos:end="51:11">case <expr pos:start="51:10" pos:end="51:10"><literal type="number" pos:start="51:10" pos:end="51:10">0</literal></expr>:</case> <expr_stmt pos:start="51:13" pos:end="51:44"><expr pos:start="51:13" pos:end="51:43"><name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:24">pict_type</name></name><operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:43">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt> <break pos:start="51:46" pos:end="51:51">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">1</literal></expr>:</case> <expr_stmt pos:start="53:13" pos:end="53:44"><expr pos:start="53:13" pos:end="53:43"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:24">pict_type</name></name><operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:43">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt> <break pos:start="53:46" pos:end="53:51">break;</break> <comment type="line" pos:start="53:53" pos:end="53:61">//hmm ...</comment>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">2</literal></expr>:</case> <expr_stmt pos:start="55:13" pos:end="55:44"><expr pos:start="55:13" pos:end="55:43"><name pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:24">pict_type</name></name><operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:43">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt> <break pos:start="55:46" pos:end="55:51">break;</break>

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">3</literal></expr>:</case> <expr_stmt pos:start="57:13" pos:end="57:44"><expr pos:start="57:13" pos:end="57:43"><name pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:24">pict_type</name></name><operator pos:start="57:25" pos:end="57:25">=</operator> <name pos:start="57:27" pos:end="57:43">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt> <break pos:start="57:46" pos:end="57:51">break;</break>

    <default pos:start="59:5" pos:end="59:12">default:</default>

        <expr_stmt pos:start="61:9" pos:end="61:63"><expr pos:start="61:9" pos:end="61:62"><call pos:start="61:9" pos:end="61:62"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:62">(<argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:23">avctx</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:37"><expr pos:start="61:26" pos:end="61:37"><name pos:start="61:26" pos:end="61:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:40" pos:end="61:61"><expr pos:start="61:40" pos:end="61:61"><literal type="string" pos:start="61:40" pos:end="61:61">"unknown frame type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if<condition pos:start="69:7" pos:end="69:55">(<expr pos:start="69:8" pos:end="69:54"><name pos:start="69:8" pos:end="69:19"><name pos:start="69:8" pos:end="69:8">s</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:19">low_delay</name></name> <operator pos:start="69:21" pos:end="69:22">&amp;&amp;</operator> <name pos:start="69:24" pos:end="69:35"><name pos:start="69:24" pos:end="69:24">s</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:35">pict_type</name></name><operator pos:start="69:36" pos:end="69:37">==</operator><name pos:start="69:38" pos:end="69:54">AV_PICTURE_TYPE_B</name></expr>)</condition><block pos:start="69:56" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:18">

        <expr_stmt pos:start="71:9" pos:end="71:56"><expr pos:start="71:9" pos:end="71:55"><call pos:start="71:9" pos:end="71:55"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:55">(<argument pos:start="71:16" pos:end="71:23"><expr pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:23">avctx</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:37"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:40" pos:end="71:54"><expr pos:start="71:40" pos:end="71:54"><literal type="string" pos:start="71:40" pos:end="71:54">"low delay B\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if<condition pos:start="77:7" pos:end="77:68">(<expr pos:start="77:8" pos:end="77:67"><name pos:start="77:8" pos:end="77:26"><name pos:start="77:8" pos:end="77:8">s</name><operator pos:start="77:9" pos:end="77:10">-&gt;</operator><name pos:start="77:11" pos:end="77:26">last_picture_ptr</name></name><operator pos:start="77:27" pos:end="77:28">==</operator><name pos:start="77:29" pos:end="77:32">NULL</name> <operator pos:start="77:34" pos:end="77:35">&amp;&amp;</operator> <name pos:start="77:37" pos:end="77:48"><name pos:start="77:37" pos:end="77:37">s</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:48">pict_type</name></name><operator pos:start="77:49" pos:end="77:50">==</operator><name pos:start="77:51" pos:end="77:67">AV_PICTURE_TYPE_B</name></expr>)</condition><block pos:start="77:69" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:18">

        <expr_stmt pos:start="79:9" pos:end="79:56"><expr pos:start="79:9" pos:end="79:55"><call pos:start="79:9" pos:end="79:55"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:55">(<argument pos:start="79:16" pos:end="79:23"><expr pos:start="79:16" pos:end="79:23"><name pos:start="79:16" pos:end="79:23"><name pos:start="79:16" pos:end="79:16">s</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:23">avctx</name></name></expr></argument>, <argument pos:start="79:26" pos:end="79:37"><expr pos:start="79:26" pos:end="79:37"><name pos:start="79:26" pos:end="79:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:40" pos:end="79:54"><expr pos:start="79:40" pos:end="79:54"><literal type="string" pos:start="79:40" pos:end="79:54">"early B pix\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:18">return <expr pos:start="81:16" pos:end="81:17"><operator pos:start="81:16" pos:end="81:16">-</operator><literal type="number" pos:start="81:17" pos:end="81:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:26">(<expr pos:start="87:9" pos:end="87:25"><call pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:17">get_bits1</name><argument_list pos:start="87:18" pos:end="87:25">(<argument pos:start="87:19" pos:end="87:24"><expr pos:start="87:19" pos:end="87:24"><operator pos:start="87:19" pos:end="87:19">&amp;</operator><name pos:start="87:20" pos:end="87:24"><name pos:start="87:20" pos:end="87:20">s</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:24">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="87:27" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:18">

        <expr_stmt pos:start="89:9" pos:end="89:61"><expr pos:start="89:9" pos:end="89:60"><call pos:start="89:9" pos:end="89:60"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:60">(<argument pos:start="89:16" pos:end="89:23"><expr pos:start="89:16" pos:end="89:23"><name pos:start="89:16" pos:end="89:23"><name pos:start="89:16" pos:end="89:16">s</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:23">avctx</name></name></expr></argument>, <argument pos:start="89:26" pos:end="89:37"><expr pos:start="89:26" pos:end="89:37"><name pos:start="89:26" pos:end="89:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:40" pos:end="89:59"><expr pos:start="89:40" pos:end="89:59"><literal type="string" pos:start="89:40" pos:end="89:59">"reserved bit set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:18">return <expr pos:start="91:16" pos:end="91:17"><operator pos:start="91:16" pos:end="91:16">-</operator><literal type="number" pos:start="91:17" pos:end="91:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:36"><expr pos:start="97:5" pos:end="97:35"><name pos:start="97:5" pos:end="97:13"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:13">qscale</name></name> <operator pos:start="97:15" pos:end="97:15">=</operator> <call pos:start="97:17" pos:end="97:35"><name pos:start="97:17" pos:end="97:24">get_bits</name><argument_list pos:start="97:25" pos:end="97:35">(<argument pos:start="97:26" pos:end="97:31"><expr pos:start="97:26" pos:end="97:31"><operator pos:start="97:26" pos:end="97:26">&amp;</operator><name pos:start="97:27" pos:end="97:31"><name pos:start="97:27" pos:end="97:27">s</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:31">gb</name></name></expr></argument>, <argument pos:start="97:34" pos:end="97:34"><expr pos:start="97:34" pos:end="97:34"><literal type="number" pos:start="97:34" pos:end="97:34">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if<condition pos:start="99:7" pos:end="99:20">(<expr pos:start="99:8" pos:end="99:19"><name pos:start="99:8" pos:end="99:16"><name pos:start="99:8" pos:end="99:8">s</name><operator pos:start="99:9" pos:end="99:10">-&gt;</operator><name pos:start="99:11" pos:end="99:16">qscale</name></name><operator pos:start="99:17" pos:end="99:18">==</operator><literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>)</condition><block pos:start="99:21" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:18">

        <expr_stmt pos:start="101:9" pos:end="101:60"><expr pos:start="101:9" pos:end="101:59"><call pos:start="101:9" pos:end="101:59"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:59">(<argument pos:start="101:16" pos:end="101:23"><expr pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:16">s</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:23">avctx</name></name></expr></argument>, <argument pos:start="101:26" pos:end="101:37"><expr pos:start="101:26" pos:end="101:37"><name pos:start="101:26" pos:end="101:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:40" pos:end="101:58"><expr pos:start="101:40" pos:end="101:58"><literal type="string" pos:start="101:40" pos:end="101:58">"error, qscale:0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:18">return <expr pos:start="103:16" pos:end="103:17"><operator pos:start="103:16" pos:end="103:16">-</operator><literal type="number" pos:start="103:17" pos:end="103:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="111:64"><if pos:start="109:5" pos:end="111:64">if<condition pos:start="109:7" pos:end="109:41">(<expr pos:start="109:8" pos:end="109:40"><call pos:start="109:8" pos:end="109:35"><name pos:start="109:8" pos:end="109:23">RV_GET_MINOR_VER</name><argument_list pos:start="109:24" pos:end="109:35">(<argument pos:start="109:25" pos:end="109:34"><expr pos:start="109:25" pos:end="109:34"><name pos:start="109:25" pos:end="109:34"><name pos:start="109:25" pos:end="109:26">rv</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:34">sub_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="109:37" pos:end="109:38">&gt;=</operator> <literal type="number" pos:start="109:40" pos:end="109:40">2</literal></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:64"><block_content pos:start="111:9" pos:end="111:64">

        <expr_stmt pos:start="111:9" pos:end="111:64"><expr pos:start="111:9" pos:end="111:63"><name pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:22">loop_filter</name></name> <operator pos:start="111:24" pos:end="111:24">=</operator> <call pos:start="111:26" pos:end="111:42"><name pos:start="111:26" pos:end="111:34">get_bits1</name><argument_list pos:start="111:35" pos:end="111:42">(<argument pos:start="111:36" pos:end="111:41"><expr pos:start="111:36" pos:end="111:41"><operator pos:start="111:36" pos:end="111:36">&amp;</operator><name pos:start="111:37" pos:end="111:41"><name pos:start="111:37" pos:end="111:37">s</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="111:44" pos:end="111:45">&amp;&amp;</operator> <operator pos:start="111:47" pos:end="111:47">!</operator><name pos:start="111:48" pos:end="111:63"><name pos:start="111:48" pos:end="111:48">s</name><operator pos:start="111:49" pos:end="111:50">-&gt;</operator><name pos:start="111:51" pos:end="111:55">avctx</name><operator pos:start="111:56" pos:end="111:57">-&gt;</operator><name pos:start="111:58" pos:end="111:63">lowres</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="115:5" pos:end="121:40"><if pos:start="115:5" pos:end="117:39">if<condition pos:start="115:7" pos:end="115:41">(<expr pos:start="115:8" pos:end="115:40"><call pos:start="115:8" pos:end="115:35"><name pos:start="115:8" pos:end="115:23">RV_GET_MINOR_VER</name><argument_list pos:start="115:24" pos:end="115:35">(<argument pos:start="115:25" pos:end="115:34"><expr pos:start="115:25" pos:end="115:34"><name pos:start="115:25" pos:end="115:34"><name pos:start="115:25" pos:end="115:26">rv</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:34">sub_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="115:37" pos:end="115:38">&lt;=</operator> <literal type="number" pos:start="115:40" pos:end="115:40">1</literal></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:39"><block_content pos:start="117:9" pos:end="117:39">

        <expr_stmt pos:start="117:9" pos:end="117:39"><expr pos:start="117:9" pos:end="117:38"><name pos:start="117:9" pos:end="117:11">seq</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <call pos:start="117:15" pos:end="117:33"><name pos:start="117:15" pos:end="117:22">get_bits</name><argument_list pos:start="117:23" pos:end="117:33">(<argument pos:start="117:24" pos:end="117:29"><expr pos:start="117:24" pos:end="117:29"><operator pos:start="117:24" pos:end="117:24">&amp;</operator><name pos:start="117:25" pos:end="117:29"><name pos:start="117:25" pos:end="117:25">s</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:29">gb</name></name></expr></argument>, <argument pos:start="117:32" pos:end="117:32"><expr pos:start="117:32" pos:end="117:32"><literal type="number" pos:start="117:32" pos:end="117:32">8</literal></expr></argument>)</argument_list></call> <operator pos:start="117:35" pos:end="117:36">&lt;&lt;</operator> <literal type="number" pos:start="117:38" pos:end="117:38">7</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="119:5" pos:end="121:40">else<block type="pseudo" pos:start="121:9" pos:end="121:40"><block_content pos:start="121:9" pos:end="121:40">

        <expr_stmt pos:start="121:9" pos:end="121:40"><expr pos:start="121:9" pos:end="121:39"><name pos:start="121:9" pos:end="121:11">seq</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <call pos:start="121:15" pos:end="121:34"><name pos:start="121:15" pos:end="121:22">get_bits</name><argument_list pos:start="121:23" pos:end="121:34">(<argument pos:start="121:24" pos:end="121:29"><expr pos:start="121:24" pos:end="121:29"><operator pos:start="121:24" pos:end="121:24">&amp;</operator><name pos:start="121:25" pos:end="121:29"><name pos:start="121:25" pos:end="121:25">s</name><operator pos:start="121:26" pos:end="121:27">-&gt;</operator><name pos:start="121:28" pos:end="121:29">gb</name></name></expr></argument>, <argument pos:start="121:32" pos:end="121:33"><expr pos:start="121:32" pos:end="121:33"><literal type="number" pos:start="121:32" pos:end="121:33">13</literal></expr></argument>)</argument_list></call> <operator pos:start="121:36" pos:end="121:37">&lt;&lt;</operator> <literal type="number" pos:start="121:39" pos:end="121:39">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:42"><expr pos:start="125:5" pos:end="125:41"><name pos:start="125:5" pos:end="125:12">rpr_bits</name> <operator pos:start="125:14" pos:end="125:14">=</operator> <name pos:start="125:16" pos:end="125:37"><name pos:start="125:16" pos:end="125:16">s</name><operator pos:start="125:17" pos:end="125:18">-&gt;</operator><name pos:start="125:19" pos:end="125:23">avctx</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:34">extradata</name><index pos:start="125:35" pos:end="125:37">[<expr pos:start="125:36" pos:end="125:36"><literal type="number" pos:start="125:36" pos:end="125:36">1</literal></expr>]</index></name> <operator pos:start="125:39" pos:end="125:39">&amp;</operator> <literal type="number" pos:start="125:41" pos:end="125:41">7</literal></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="201:5"><if pos:start="127:5" pos:end="201:5">if<condition pos:start="127:7" pos:end="127:16">(<expr pos:start="127:8" pos:end="127:15"><name pos:start="127:8" pos:end="127:15">rpr_bits</name></expr>)</condition><block pos:start="127:17" pos:end="201:5">{<block_content pos:start="129:9" pos:end="199:9">

        <decl_stmt pos:start="129:9" pos:end="129:28"><decl pos:start="129:9" pos:end="129:13"><type pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:11">int</name></type> <name pos:start="129:13" pos:end="129:13">f</name></decl>, <decl pos:start="129:16" pos:end="129:20"><type ref="prev" pos:start="129:9" pos:end="129:11"/><name pos:start="129:16" pos:end="129:20">new_w</name></decl>, <decl pos:start="129:23" pos:end="129:27"><type ref="prev" pos:start="129:9" pos:end="129:11"/><name pos:start="129:23" pos:end="129:27">new_h</name></decl>;</decl_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:49"><expr pos:start="131:9" pos:end="131:48"><name pos:start="131:9" pos:end="131:16">rpr_bits</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <call pos:start="131:20" pos:end="131:48"><name pos:start="131:20" pos:end="131:24">FFMIN</name><argument_list pos:start="131:25" pos:end="131:48">(<argument pos:start="131:26" pos:end="131:44"><expr pos:start="131:26" pos:end="131:44"><operator pos:start="131:26" pos:end="131:26">(</operator><name pos:start="131:27" pos:end="131:34">rpr_bits</name> <operator pos:start="131:36" pos:end="131:37">&gt;&gt;</operator> <literal type="number" pos:start="131:39" pos:end="131:39">1</literal><operator pos:start="131:40" pos:end="131:40">)</operator> <operator pos:start="131:42" pos:end="131:42">+</operator> <literal type="number" pos:start="131:44" pos:end="131:44">1</literal></expr></argument>, <argument pos:start="131:47" pos:end="131:47"><expr pos:start="131:47" pos:end="131:47"><literal type="number" pos:start="131:47" pos:end="131:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:39"><expr pos:start="135:9" pos:end="135:38"><name pos:start="135:9" pos:end="135:9">f</name> <operator pos:start="135:11" pos:end="135:11">=</operator> <call pos:start="135:13" pos:end="135:38"><name pos:start="135:13" pos:end="135:20">get_bits</name><argument_list pos:start="135:21" pos:end="135:38">(<argument pos:start="135:22" pos:end="135:27"><expr pos:start="135:22" pos:end="135:27"><operator pos:start="135:22" pos:end="135:22">&amp;</operator><name pos:start="135:23" pos:end="135:27"><name pos:start="135:23" pos:end="135:23">s</name><operator pos:start="135:24" pos:end="135:25">-&gt;</operator><name pos:start="135:26" pos:end="135:27">gb</name></name></expr></argument>, <argument pos:start="135:30" pos:end="135:37"><expr pos:start="135:30" pos:end="135:37"><name pos:start="135:30" pos:end="135:37">rpr_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="139:9" pos:end="151:9"><if pos:start="139:9" pos:end="145:9">if<condition pos:start="139:11" pos:end="139:13">(<expr pos:start="139:12" pos:end="139:12"><name pos:start="139:12" pos:end="139:12">f</name></expr>)</condition><block pos:start="139:14" pos:end="145:9">{<block_content pos:start="141:13" pos:end="143:60">

            <expr_stmt pos:start="141:13" pos:end="141:60"><expr pos:start="141:13" pos:end="141:59"><name pos:start="141:13" pos:end="141:17">new_w</name><operator pos:start="141:18" pos:end="141:18">=</operator> <literal type="number" pos:start="141:20" pos:end="141:20">4</literal><operator pos:start="141:21" pos:end="141:21">*</operator><operator pos:start="141:22" pos:end="141:22">(</operator><operator pos:start="141:23" pos:end="141:23">(</operator><name pos:start="141:24" pos:end="141:30">uint8_t</name><operator pos:start="141:31" pos:end="141:31">*</operator><operator pos:start="141:32" pos:end="141:32">)</operator><name pos:start="141:33" pos:end="141:51"><name pos:start="141:33" pos:end="141:33">s</name><operator pos:start="141:34" pos:end="141:35">-&gt;</operator><name pos:start="141:36" pos:end="141:40">avctx</name><operator pos:start="141:41" pos:end="141:42">-&gt;</operator><name pos:start="141:43" pos:end="141:51">extradata</name></name><operator pos:start="141:52" pos:end="141:52">)</operator><index pos:start="141:53" pos:end="141:59">[<expr pos:start="141:54" pos:end="141:58"><literal type="number" pos:start="141:54" pos:end="141:55">6</literal><operator pos:start="141:55" pos:end="141:55">+</operator><literal type="number" pos:start="141:56" pos:end="141:56">2</literal><operator pos:start="141:57" pos:end="141:57">*</operator><name pos:start="141:58" pos:end="141:58">f</name></expr>]</index></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:60"><expr pos:start="143:13" pos:end="143:59"><name pos:start="143:13" pos:end="143:17">new_h</name><operator pos:start="143:18" pos:end="143:18">=</operator> <literal type="number" pos:start="143:20" pos:end="143:20">4</literal><operator pos:start="143:21" pos:end="143:21">*</operator><operator pos:start="143:22" pos:end="143:22">(</operator><operator pos:start="143:23" pos:end="143:23">(</operator><name pos:start="143:24" pos:end="143:30">uint8_t</name><operator pos:start="143:31" pos:end="143:31">*</operator><operator pos:start="143:32" pos:end="143:32">)</operator><name pos:start="143:33" pos:end="143:51"><name pos:start="143:33" pos:end="143:33">s</name><operator pos:start="143:34" pos:end="143:35">-&gt;</operator><name pos:start="143:36" pos:end="143:40">avctx</name><operator pos:start="143:41" pos:end="143:42">-&gt;</operator><name pos:start="143:43" pos:end="143:51">extradata</name></name><operator pos:start="143:52" pos:end="143:52">)</operator><index pos:start="143:53" pos:end="143:59">[<expr pos:start="143:54" pos:end="143:58"><literal type="number" pos:start="143:54" pos:end="143:55">7</literal><operator pos:start="143:55" pos:end="143:55">+</operator><literal type="number" pos:start="143:56" pos:end="143:56">2</literal><operator pos:start="143:57" pos:end="143:57">*</operator><name pos:start="143:58" pos:end="143:58">f</name></expr>]</index></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="145:10" pos:end="151:9">else<block pos:start="145:14" pos:end="151:9">{<block_content pos:start="147:13" pos:end="149:34">

            <expr_stmt pos:start="147:13" pos:end="147:34"><expr pos:start="147:13" pos:end="147:32"><name pos:start="147:13" pos:end="147:17">new_w</name><operator pos:start="147:18" pos:end="147:18">=</operator> <name pos:start="147:20" pos:end="147:32"><name pos:start="147:20" pos:end="147:20">s</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:32">orig_width</name></name></expr> ;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:34"><expr pos:start="149:13" pos:end="149:33"><name pos:start="149:13" pos:end="149:17">new_h</name><operator pos:start="149:18" pos:end="149:18">=</operator> <name pos:start="149:20" pos:end="149:33"><name pos:start="149:20" pos:end="149:20">s</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:33">orig_height</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="153:9" pos:end="191:9"><if pos:start="153:9" pos:end="191:9">if<condition pos:start="153:11" pos:end="153:51">(<expr pos:start="153:12" pos:end="153:50"><name pos:start="153:12" pos:end="153:16">new_w</name> <operator pos:start="153:18" pos:end="153:19">!=</operator> <name pos:start="153:21" pos:end="153:28"><name pos:start="153:21" pos:end="153:21">s</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:28">width</name></name> <operator pos:start="153:30" pos:end="153:31">||</operator> <name pos:start="153:33" pos:end="153:37">new_h</name> <operator pos:start="153:39" pos:end="153:40">!=</operator> <name pos:start="153:42" pos:end="153:50"><name pos:start="153:42" pos:end="153:42">s</name><operator pos:start="153:43" pos:end="153:44">-&gt;</operator><name pos:start="153:45" pos:end="153:50">height</name></name></expr>)</condition><block pos:start="153:52" pos:end="191:9">{<block_content pos:start="155:13" pos:end="189:26">

            <decl_stmt pos:start="155:13" pos:end="155:66"><decl pos:start="155:13" pos:end="155:65"><type pos:start="155:13" pos:end="155:22"><name pos:start="155:13" pos:end="155:22">AVRational</name></type> <name pos:start="155:24" pos:end="155:33">old_aspect</name> <init pos:start="155:35" pos:end="155:65">= <expr pos:start="155:37" pos:end="155:65"><name pos:start="155:37" pos:end="155:65"><name pos:start="155:37" pos:end="155:37">s</name><operator pos:start="155:38" pos:end="155:39">-&gt;</operator><name pos:start="155:40" pos:end="155:44">avctx</name><operator pos:start="155:45" pos:end="155:46">-&gt;</operator><name pos:start="155:47" pos:end="155:65">sample_aspect_ratio</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:103"><expr pos:start="157:13" pos:end="157:102"><call pos:start="157:13" pos:end="157:102"><name pos:start="157:13" pos:end="157:18">av_log</name><argument_list pos:start="157:19" pos:end="157:102">(<argument pos:start="157:20" pos:end="157:27"><expr pos:start="157:20" pos:end="157:27"><name pos:start="157:20" pos:end="157:27"><name pos:start="157:20" pos:end="157:20">s</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator><name pos:start="157:23" pos:end="157:27">avctx</name></name></expr></argument>, <argument pos:start="157:30" pos:end="157:41"><expr pos:start="157:30" pos:end="157:41"><name pos:start="157:30" pos:end="157:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="157:44" pos:end="157:87"><expr pos:start="157:44" pos:end="157:87"><literal type="string" pos:start="157:44" pos:end="157:87">"attempting to change resolution to %dx%d\n"</literal></expr></argument>, <argument pos:start="157:90" pos:end="157:94"><expr pos:start="157:90" pos:end="157:94"><name pos:start="157:90" pos:end="157:94">new_w</name></expr></argument>, <argument pos:start="157:97" pos:end="157:101"><expr pos:start="157:97" pos:end="157:101"><name pos:start="157:97" pos:end="157:101">new_h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="161:26"><if pos:start="159:13" pos:end="161:26">if <condition pos:start="159:16" pos:end="159:67">(<expr pos:start="159:17" pos:end="159:66"><call pos:start="159:17" pos:end="159:62"><name pos:start="159:17" pos:end="159:35">av_image_check_size</name><argument_list pos:start="159:36" pos:end="159:62">(<argument pos:start="159:37" pos:end="159:41"><expr pos:start="159:37" pos:end="159:41"><name pos:start="159:37" pos:end="159:41">new_w</name></expr></argument>, <argument pos:start="159:44" pos:end="159:48"><expr pos:start="159:44" pos:end="159:48"><name pos:start="159:44" pos:end="159:48">new_h</name></expr></argument>, <argument pos:start="159:51" pos:end="159:51"><expr pos:start="159:51" pos:end="159:51"><literal type="number" pos:start="159:51" pos:end="159:51">0</literal></expr></argument>, <argument pos:start="159:54" pos:end="159:61"><expr pos:start="159:54" pos:end="159:61"><name pos:start="159:54" pos:end="159:61"><name pos:start="159:54" pos:end="159:54">s</name><operator pos:start="159:55" pos:end="159:56">-&gt;</operator><name pos:start="159:57" pos:end="159:61">avctx</name></name></expr></argument>)</argument_list></call> <operator pos:start="159:64" pos:end="159:64">&lt;</operator> <literal type="number" pos:start="159:66" pos:end="159:66">0</literal></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:26"><block_content pos:start="161:17" pos:end="161:26">

                <return pos:start="161:17" pos:end="161:26">return <expr pos:start="161:24" pos:end="161:25"><operator pos:start="161:24" pos:end="161:24">-</operator><literal type="number" pos:start="161:25" pos:end="161:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:33"><expr pos:start="163:13" pos:end="163:32"><call pos:start="163:13" pos:end="163:32"><name pos:start="163:13" pos:end="163:29">ff_MPV_common_end</name><argument_list pos:start="163:30" pos:end="163:32">(<argument pos:start="163:31" pos:end="163:31"><expr pos:start="163:31" pos:end="163:31"><name pos:start="163:31" pos:end="163:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="line" pos:start="167:13" pos:end="167:72">// attempt to keep aspect during typical resolution switches</comment>

            <if_stmt pos:start="169:13" pos:end="171:48"><if pos:start="169:13" pos:end="171:48">if <condition pos:start="169:16" pos:end="169:32">(<expr pos:start="169:17" pos:end="169:31"><operator pos:start="169:17" pos:end="169:17">!</operator><name pos:start="169:18" pos:end="169:31"><name pos:start="169:18" pos:end="169:27">old_aspect</name><operator pos:start="169:28" pos:end="169:28">.</operator><name pos:start="169:29" pos:end="169:31">num</name></name></expr>)</condition><block type="pseudo" pos:start="171:17" pos:end="171:48"><block_content pos:start="171:17" pos:end="171:48">

                <expr_stmt pos:start="171:17" pos:end="171:48"><expr pos:start="171:17" pos:end="171:47"><name pos:start="171:17" pos:end="171:26">old_aspect</name> <operator pos:start="171:28" pos:end="171:28">=</operator> <operator pos:start="171:30" pos:end="171:30">(</operator><name pos:start="171:31" pos:end="171:40">AVRational</name><operator pos:start="171:41" pos:end="171:41">)</operator><block pos:start="171:42" pos:end="171:47">{<expr pos:start="171:43" pos:end="171:43"><literal type="number" pos:start="171:43" pos:end="171:43">1</literal></expr>, <expr pos:start="171:46" pos:end="171:46"><literal type="number" pos:start="171:46" pos:end="171:46">1</literal></expr>}</block></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="173:13" pos:end="175:89"><if pos:start="173:13" pos:end="175:89">if <condition pos:start="173:16" pos:end="173:58">(<expr pos:start="173:17" pos:end="173:57"><literal type="number" pos:start="173:17" pos:end="173:17">2</literal> <operator pos:start="173:19" pos:end="173:19">*</operator> <name pos:start="173:21" pos:end="173:25">new_w</name> <operator pos:start="173:27" pos:end="173:27">*</operator> <name pos:start="173:29" pos:end="173:37"><name pos:start="173:29" pos:end="173:29">s</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:37">height</name></name> <operator pos:start="173:39" pos:end="173:40">==</operator> <name pos:start="173:42" pos:end="173:46">new_h</name> <operator pos:start="173:48" pos:end="173:48">*</operator> <name pos:start="173:50" pos:end="173:57"><name pos:start="173:50" pos:end="173:50">s</name><operator pos:start="173:51" pos:end="173:52">-&gt;</operator><name pos:start="173:53" pos:end="173:57">width</name></name></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="175:89"><block_content pos:start="175:17" pos:end="175:89">

                <expr_stmt pos:start="175:17" pos:end="175:89"><expr pos:start="175:17" pos:end="175:88"><name pos:start="175:17" pos:end="175:45"><name pos:start="175:17" pos:end="175:17">s</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:24">avctx</name><operator pos:start="175:25" pos:end="175:26">-&gt;</operator><name pos:start="175:27" pos:end="175:45">sample_aspect_ratio</name></name> <operator pos:start="175:47" pos:end="175:47">=</operator> <macro pos:start="175:49" pos:end="175:88"><name pos:start="175:49" pos:end="175:56">av_mul_q</name><argument_list pos:start="175:57" pos:end="175:88">(<argument pos:start="175:58" pos:end="175:67">old_aspect</argument>, <argument pos:start="175:70" pos:end="175:83">(AVRational){<literal type="number" pos:start="175:83" pos:end="175:83">2</literal></argument>, <argument pos:start="175:86" pos:end="175:87"><literal type="number" pos:start="175:86" pos:end="175:86">1</literal>}</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="177:13" pos:end="179:89"><if pos:start="177:13" pos:end="179:89">if <condition pos:start="177:16" pos:end="177:58">(<expr pos:start="177:17" pos:end="177:57"><name pos:start="177:17" pos:end="177:21">new_w</name> <operator pos:start="177:23" pos:end="177:23">*</operator> <name pos:start="177:25" pos:end="177:33"><name pos:start="177:25" pos:end="177:25">s</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:33">height</name></name> <operator pos:start="177:35" pos:end="177:36">==</operator> <literal type="number" pos:start="177:38" pos:end="177:38">2</literal> <operator pos:start="177:40" pos:end="177:40">*</operator> <name pos:start="177:42" pos:end="177:46">new_h</name> <operator pos:start="177:48" pos:end="177:48">*</operator> <name pos:start="177:50" pos:end="177:57"><name pos:start="177:50" pos:end="177:50">s</name><operator pos:start="177:51" pos:end="177:52">-&gt;</operator><name pos:start="177:53" pos:end="177:57">width</name></name></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="179:89"><block_content pos:start="179:17" pos:end="179:89">

                <expr_stmt pos:start="179:17" pos:end="179:89"><expr pos:start="179:17" pos:end="179:88"><name pos:start="179:17" pos:end="179:45"><name pos:start="179:17" pos:end="179:17">s</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:24">avctx</name><operator pos:start="179:25" pos:end="179:26">-&gt;</operator><name pos:start="179:27" pos:end="179:45">sample_aspect_ratio</name></name> <operator pos:start="179:47" pos:end="179:47">=</operator> <macro pos:start="179:49" pos:end="179:88"><name pos:start="179:49" pos:end="179:56">av_mul_q</name><argument_list pos:start="179:57" pos:end="179:88">(<argument pos:start="179:58" pos:end="179:67">old_aspect</argument>, <argument pos:start="179:70" pos:end="179:83">(AVRational){<literal type="number" pos:start="179:83" pos:end="179:83">1</literal></argument>, <argument pos:start="179:86" pos:end="179:87"><literal type="number" pos:start="179:86" pos:end="179:86">2</literal>}</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:59"><expr pos:start="181:13" pos:end="181:58"><call pos:start="181:13" pos:end="181:58"><name pos:start="181:13" pos:end="181:34">avcodec_set_dimensions</name><argument_list pos:start="181:35" pos:end="181:58">(<argument pos:start="181:36" pos:end="181:43"><expr pos:start="181:36" pos:end="181:43"><name pos:start="181:36" pos:end="181:43"><name pos:start="181:36" pos:end="181:36">s</name><operator pos:start="181:37" pos:end="181:38">-&gt;</operator><name pos:start="181:39" pos:end="181:43">avctx</name></name></expr></argument>, <argument pos:start="181:46" pos:end="181:50"><expr pos:start="181:46" pos:end="181:50"><name pos:start="181:46" pos:end="181:50">new_w</name></expr></argument>, <argument pos:start="181:53" pos:end="181:57"><expr pos:start="181:53" pos:end="181:57"><name pos:start="181:53" pos:end="181:57">new_h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:30"><expr pos:start="183:13" pos:end="183:29"><name pos:start="183:13" pos:end="183:20"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:20">width</name></name>  <operator pos:start="183:23" pos:end="183:23">=</operator> <name pos:start="183:25" pos:end="183:29">new_w</name></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:30"><expr pos:start="185:13" pos:end="185:29"><name pos:start="185:13" pos:end="185:21"><name pos:start="185:13" pos:end="185:13">s</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:21">height</name></name> <operator pos:start="185:23" pos:end="185:23">=</operator> <name pos:start="185:25" pos:end="185:29">new_h</name></expr>;</expr_stmt>

            <if_stmt pos:start="187:13" pos:end="189:26"><if pos:start="187:13" pos:end="189:26">if <condition pos:start="187:16" pos:end="187:42">(<expr pos:start="187:17" pos:end="187:41"><call pos:start="187:17" pos:end="187:37"><name pos:start="187:17" pos:end="187:34">ff_MPV_common_init</name><argument_list pos:start="187:35" pos:end="187:37">(<argument pos:start="187:36" pos:end="187:36"><expr pos:start="187:36" pos:end="187:36"><name pos:start="187:36" pos:end="187:36">s</name></expr></argument>)</argument_list></call> <operator pos:start="187:39" pos:end="187:39">&lt;</operator> <literal type="number" pos:start="187:41" pos:end="187:41">0</literal></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:26"><block_content pos:start="189:17" pos:end="189:26">

                <return pos:start="189:17" pos:end="189:26">return <expr pos:start="189:24" pos:end="189:25"><operator pos:start="189:24" pos:end="189:24">-</operator><literal type="number" pos:start="189:25" pos:end="189:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="195:9" pos:end="199:9"><if pos:start="195:9" pos:end="199:9">if<condition pos:start="195:11" pos:end="195:48">(<expr pos:start="195:12" pos:end="195:47"><name pos:start="195:12" pos:end="195:26"><name pos:start="195:12" pos:end="195:12">s</name><operator pos:start="195:13" pos:end="195:14">-&gt;</operator><name pos:start="195:15" pos:end="195:19">avctx</name><operator pos:start="195:20" pos:end="195:21">-&gt;</operator><name pos:start="195:22" pos:end="195:26">debug</name></name> <operator pos:start="195:28" pos:end="195:28">&amp;</operator> <name pos:start="195:30" pos:end="195:47">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="195:49" pos:end="199:9">{<block_content pos:start="197:13" pos:end="197:69">

            <expr_stmt pos:start="197:13" pos:end="197:69"><expr pos:start="197:13" pos:end="197:68"><call pos:start="197:13" pos:end="197:68"><name pos:start="197:13" pos:end="197:18">av_log</name><argument_list pos:start="197:19" pos:end="197:68">(<argument pos:start="197:20" pos:end="197:27"><expr pos:start="197:20" pos:end="197:27"><name pos:start="197:20" pos:end="197:27"><name pos:start="197:20" pos:end="197:20">s</name><operator pos:start="197:21" pos:end="197:22">-&gt;</operator><name pos:start="197:23" pos:end="197:27">avctx</name></name></expr></argument>, <argument pos:start="197:30" pos:end="197:41"><expr pos:start="197:30" pos:end="197:41"><name pos:start="197:30" pos:end="197:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="197:44" pos:end="197:54"><expr pos:start="197:44" pos:end="197:54"><literal type="string" pos:start="197:44" pos:end="197:54">"F %d/%d\n"</literal></expr></argument>, <argument pos:start="197:57" pos:end="197:57"><expr pos:start="197:57" pos:end="197:57"><name pos:start="197:57" pos:end="197:57">f</name></expr></argument>, <argument pos:start="197:60" pos:end="197:67"><expr pos:start="197:60" pos:end="197:67"><name pos:start="197:60" pos:end="197:67">rpr_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="203:5" pos:end="205:35"><if pos:start="203:5" pos:end="205:35">if <condition pos:start="203:8" pos:end="203:66">(<expr pos:start="203:9" pos:end="203:65"><call pos:start="203:9" pos:end="203:61"><name pos:start="203:9" pos:end="203:27">av_image_check_size</name><argument_list pos:start="203:28" pos:end="203:61">(<argument pos:start="203:29" pos:end="203:36"><expr pos:start="203:29" pos:end="203:36"><name pos:start="203:29" pos:end="203:36"><name pos:start="203:29" pos:end="203:29">s</name><operator pos:start="203:30" pos:end="203:31">-&gt;</operator><name pos:start="203:32" pos:end="203:36">width</name></name></expr></argument>, <argument pos:start="203:39" pos:end="203:47"><expr pos:start="203:39" pos:end="203:47"><name pos:start="203:39" pos:end="203:47"><name pos:start="203:39" pos:end="203:39">s</name><operator pos:start="203:40" pos:end="203:41">-&gt;</operator><name pos:start="203:42" pos:end="203:47">height</name></name></expr></argument>, <argument pos:start="203:50" pos:end="203:50"><expr pos:start="203:50" pos:end="203:50"><literal type="number" pos:start="203:50" pos:end="203:50">0</literal></expr></argument>, <argument pos:start="203:53" pos:end="203:60"><expr pos:start="203:53" pos:end="203:60"><name pos:start="203:53" pos:end="203:60"><name pos:start="203:53" pos:end="203:53">s</name><operator pos:start="203:54" pos:end="203:55">-&gt;</operator><name pos:start="203:56" pos:end="203:60">avctx</name></name></expr></argument>)</argument_list></call> <operator pos:start="203:63" pos:end="203:63">&lt;</operator> <literal type="number" pos:start="203:65" pos:end="203:65">0</literal></expr>)</condition><block type="pseudo" pos:start="205:9" pos:end="205:35"><block_content pos:start="205:9" pos:end="205:35">

        <return pos:start="205:9" pos:end="205:35">return <expr pos:start="205:16" pos:end="205:34"><name pos:start="205:16" pos:end="205:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:35"><expr pos:start="209:5" pos:end="209:34"><name pos:start="209:5" pos:end="209:10">mb_pos</name> <operator pos:start="209:12" pos:end="209:12">=</operator> <call pos:start="209:14" pos:end="209:34"><name pos:start="209:14" pos:end="209:31">ff_h263_decode_mba</name><argument_list pos:start="209:32" pos:end="209:34">(<argument pos:start="209:33" pos:end="209:33"><expr pos:start="209:33" pos:end="209:33"><name pos:start="209:33" pos:end="209:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="213:5" pos:end="213:28"><expr pos:start="213:5" pos:end="213:27"><name pos:start="213:5" pos:end="213:7">seq</name> <operator pos:start="213:9" pos:end="213:10">|=</operator> <name pos:start="213:12" pos:end="213:18"><name pos:start="213:12" pos:end="213:12">s</name><operator pos:start="213:13" pos:end="213:14">-&gt;</operator><name pos:start="213:15" pos:end="213:18">time</name></name> <operator pos:start="213:20" pos:end="213:20">&amp;</operator><operator pos:start="213:21" pos:end="213:21">~</operator><literal type="number" pos:start="213:22" pos:end="213:27">0x7FFF</literal></expr>;</expr_stmt>

    <if_stmt pos:start="215:5" pos:end="215:46"><if pos:start="215:5" pos:end="215:46">if<condition pos:start="215:7" pos:end="215:31">(<expr pos:start="215:8" pos:end="215:30"><name pos:start="215:8" pos:end="215:10">seq</name> <operator pos:start="215:12" pos:end="215:12">-</operator> <name pos:start="215:14" pos:end="215:20"><name pos:start="215:14" pos:end="215:14">s</name><operator pos:start="215:15" pos:end="215:16">-&gt;</operator><name pos:start="215:17" pos:end="215:20">time</name></name> <operator pos:start="215:22" pos:end="215:22">&gt;</operator>  <literal type="number" pos:start="215:25" pos:end="215:30">0x4000</literal></expr>)</condition><block type="pseudo" pos:start="215:33" pos:end="215:46"><block_content pos:start="215:33" pos:end="215:46"> <expr_stmt pos:start="215:33" pos:end="215:46"><expr pos:start="215:33" pos:end="215:45"><name pos:start="215:33" pos:end="215:35">seq</name> <operator pos:start="215:37" pos:end="215:38">-=</operator> <literal type="number" pos:start="215:40" pos:end="215:45">0x8000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="217:5" pos:end="217:46"><if pos:start="217:5" pos:end="217:46">if<condition pos:start="217:7" pos:end="217:31">(<expr pos:start="217:8" pos:end="217:30"><name pos:start="217:8" pos:end="217:10">seq</name> <operator pos:start="217:12" pos:end="217:12">-</operator> <name pos:start="217:14" pos:end="217:20"><name pos:start="217:14" pos:end="217:14">s</name><operator pos:start="217:15" pos:end="217:16">-&gt;</operator><name pos:start="217:17" pos:end="217:20">time</name></name> <operator pos:start="217:22" pos:end="217:22">&lt;</operator> <operator pos:start="217:24" pos:end="217:24">-</operator><literal type="number" pos:start="217:25" pos:end="217:30">0x4000</literal></expr>)</condition><block type="pseudo" pos:start="217:33" pos:end="217:46"><block_content pos:start="217:33" pos:end="217:46"> <expr_stmt pos:start="217:33" pos:end="217:46"><expr pos:start="217:33" pos:end="217:45"><name pos:start="217:33" pos:end="217:35">seq</name> <operator pos:start="217:37" pos:end="217:38">+=</operator> <literal type="number" pos:start="217:40" pos:end="217:45">0x8000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="219:5" pos:end="247:5"><if pos:start="219:5" pos:end="247:5">if<condition pos:start="219:7" pos:end="219:22">(<expr pos:start="219:8" pos:end="219:21"><name pos:start="219:8" pos:end="219:10">seq</name> <operator pos:start="219:12" pos:end="219:13">!=</operator> <name pos:start="219:15" pos:end="219:21"><name pos:start="219:15" pos:end="219:15">s</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:21">time</name></name></expr>)</condition><block pos:start="219:23" pos:end="247:5">{<block_content pos:start="221:9" pos:end="245:9">

        <if_stmt pos:start="221:9" pos:end="245:9"><if pos:start="221:9" pos:end="229:9">if<condition pos:start="221:11" pos:end="221:43">(<expr pos:start="221:12" pos:end="221:42"><name pos:start="221:12" pos:end="221:23"><name pos:start="221:12" pos:end="221:12">s</name><operator pos:start="221:13" pos:end="221:14">-&gt;</operator><name pos:start="221:15" pos:end="221:23">pict_type</name></name><operator pos:start="221:24" pos:end="221:25">!=</operator><name pos:start="221:26" pos:end="221:42">AV_PICTURE_TYPE_B</name></expr>)</condition><block pos:start="221:44" pos:end="229:9">{<block_content pos:start="223:13" pos:end="227:40">

            <expr_stmt pos:start="223:13" pos:end="223:25"><expr pos:start="223:13" pos:end="223:24"><name pos:start="223:13" pos:end="223:19"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:19">time</name></name><operator pos:start="223:20" pos:end="223:20">=</operator> <name pos:start="223:22" pos:end="223:24">seq</name></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:53"><expr pos:start="225:13" pos:end="225:52"><name pos:start="225:13" pos:end="225:22"><name pos:start="225:13" pos:end="225:13">s</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:22">pp_time</name></name><operator pos:start="225:23" pos:end="225:23">=</operator> <name pos:start="225:25" pos:end="225:31"><name pos:start="225:25" pos:end="225:25">s</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:31">time</name></name> <operator pos:start="225:33" pos:end="225:33">-</operator> <name pos:start="225:35" pos:end="225:52"><name pos:start="225:35" pos:end="225:35">s</name><operator pos:start="225:36" pos:end="225:37">-&gt;</operator><name pos:start="225:38" pos:end="225:52">last_non_b_time</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:40"><expr pos:start="227:13" pos:end="227:39"><name pos:start="227:13" pos:end="227:30"><name pos:start="227:13" pos:end="227:13">s</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:30">last_non_b_time</name></name><operator pos:start="227:31" pos:end="227:31">=</operator> <name pos:start="227:33" pos:end="227:39"><name pos:start="227:33" pos:end="227:33">s</name><operator pos:start="227:34" pos:end="227:35">-&gt;</operator><name pos:start="227:36" pos:end="227:39">time</name></name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="229:10" pos:end="245:9">else<block pos:start="229:14" pos:end="245:9">{<block_content pos:start="231:13" pos:end="243:39">

            <expr_stmt pos:start="231:13" pos:end="231:25"><expr pos:start="231:13" pos:end="231:24"><name pos:start="231:13" pos:end="231:19"><name pos:start="231:13" pos:end="231:13">s</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:19">time</name></name><operator pos:start="231:20" pos:end="231:20">=</operator> <name pos:start="231:22" pos:end="231:24">seq</name></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:68"><expr pos:start="233:13" pos:end="233:67"><name pos:start="233:13" pos:end="233:22"><name pos:start="233:13" pos:end="233:13">s</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:22">pb_time</name></name><operator pos:start="233:23" pos:end="233:23">=</operator> <name pos:start="233:25" pos:end="233:34"><name pos:start="233:25" pos:end="233:25">s</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:34">pp_time</name></name> <operator pos:start="233:36" pos:end="233:36">-</operator> <operator pos:start="233:38" pos:end="233:38">(</operator><name pos:start="233:39" pos:end="233:56"><name pos:start="233:39" pos:end="233:39">s</name><operator pos:start="233:40" pos:end="233:41">-&gt;</operator><name pos:start="233:42" pos:end="233:56">last_non_b_time</name></name> <operator pos:start="233:58" pos:end="233:58">-</operator> <name pos:start="233:60" pos:end="233:66"><name pos:start="233:60" pos:end="233:60">s</name><operator pos:start="233:61" pos:end="233:62">-&gt;</operator><name pos:start="233:63" pos:end="233:66">time</name></name><operator pos:start="233:67" pos:end="233:67">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="235:13" pos:end="241:13"><if pos:start="235:13" pos:end="241:13">if<condition pos:start="235:15" pos:end="235:97">(<expr pos:start="235:16" pos:end="235:96"><name pos:start="235:16" pos:end="235:25"><name pos:start="235:16" pos:end="235:16">s</name><operator pos:start="235:17" pos:end="235:18">-&gt;</operator><name pos:start="235:19" pos:end="235:25">pp_time</name></name> <operator pos:start="235:27" pos:end="235:28">&lt;=</operator><name pos:start="235:29" pos:end="235:38"><name pos:start="235:29" pos:end="235:29">s</name><operator pos:start="235:30" pos:end="235:31">-&gt;</operator><name pos:start="235:32" pos:end="235:38">pb_time</name></name> <operator pos:start="235:40" pos:end="235:41">||</operator> <name pos:start="235:43" pos:end="235:52"><name pos:start="235:43" pos:end="235:43">s</name><operator pos:start="235:44" pos:end="235:45">-&gt;</operator><name pos:start="235:46" pos:end="235:52">pp_time</name></name> <operator pos:start="235:54" pos:end="235:55">&lt;=</operator> <name pos:start="235:57" pos:end="235:66"><name pos:start="235:57" pos:end="235:57">s</name><operator pos:start="235:58" pos:end="235:59">-&gt;</operator><name pos:start="235:60" pos:end="235:66">pp_time</name></name> <operator pos:start="235:68" pos:end="235:68">-</operator> <name pos:start="235:70" pos:end="235:79"><name pos:start="235:70" pos:end="235:70">s</name><operator pos:start="235:71" pos:end="235:72">-&gt;</operator><name pos:start="235:73" pos:end="235:79">pb_time</name></name> <operator pos:start="235:81" pos:end="235:82">||</operator> <name pos:start="235:84" pos:end="235:93"><name pos:start="235:84" pos:end="235:84">s</name><operator pos:start="235:85" pos:end="235:86">-&gt;</operator><name pos:start="235:87" pos:end="235:93">pp_time</name></name><operator pos:start="235:94" pos:end="235:95">&lt;=</operator><literal type="number" pos:start="235:96" pos:end="235:96">0</literal></expr>)</condition><block pos:start="235:98" pos:end="241:13">{<block_content pos:start="237:17" pos:end="239:37">

                <expr_stmt pos:start="237:17" pos:end="237:117"><expr pos:start="237:17" pos:end="237:116"><call pos:start="237:17" pos:end="237:116"><name pos:start="237:17" pos:end="237:22">av_log</name><argument_list pos:start="237:23" pos:end="237:116">(<argument pos:start="237:24" pos:end="237:31"><expr pos:start="237:24" pos:end="237:31"><name pos:start="237:24" pos:end="237:31"><name pos:start="237:24" pos:end="237:24">s</name><operator pos:start="237:25" pos:end="237:26">-&gt;</operator><name pos:start="237:27" pos:end="237:31">avctx</name></name></expr></argument>, <argument pos:start="237:34" pos:end="237:45"><expr pos:start="237:34" pos:end="237:45"><name pos:start="237:34" pos:end="237:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="237:48" pos:end="237:115"><expr pos:start="237:48" pos:end="237:115"><literal type="string" pos:start="237:48" pos:end="237:115">"messed up order, possible from seeking? skipping current b frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="239:17" pos:end="239:37">return <expr pos:start="239:24" pos:end="239:36"><name pos:start="239:24" pos:end="239:36">FRAME_SKIPPED</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:39"><expr pos:start="243:13" pos:end="243:38"><call pos:start="243:13" pos:end="243:38"><name pos:start="243:13" pos:end="243:35">ff_mpeg4_init_direct_mv</name><argument_list pos:start="243:36" pos:end="243:38">(<argument pos:start="243:37" pos:end="243:37"><expr pos:start="243:37" pos:end="243:37"><name pos:start="243:37" pos:end="243:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="251:5" pos:end="251:38"><expr pos:start="251:5" pos:end="251:37"><name pos:start="251:5" pos:end="251:18"><name pos:start="251:5" pos:end="251:5">s</name><operator pos:start="251:6" pos:end="251:7">-&gt;</operator><name pos:start="251:8" pos:end="251:18">no_rounding</name></name><operator pos:start="251:19" pos:end="251:19">=</operator> <call pos:start="251:21" pos:end="251:37"><name pos:start="251:21" pos:end="251:29">get_bits1</name><argument_list pos:start="251:30" pos:end="251:37">(<argument pos:start="251:31" pos:end="251:36"><expr pos:start="251:31" pos:end="251:36"><operator pos:start="251:31" pos:end="251:31">&amp;</operator><name pos:start="251:32" pos:end="251:36"><name pos:start="251:32" pos:end="251:32">s</name><operator pos:start="251:33" pos:end="251:34">-&gt;</operator><name pos:start="251:35" pos:end="251:36">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="255:5" pos:end="257:29"><if pos:start="255:5" pos:end="257:29">if<condition pos:start="255:7" pos:end="255:78">(<expr pos:start="255:8" pos:end="255:77"><call pos:start="255:8" pos:end="255:35"><name pos:start="255:8" pos:end="255:23">RV_GET_MINOR_VER</name><argument_list pos:start="255:24" pos:end="255:35">(<argument pos:start="255:25" pos:end="255:34"><expr pos:start="255:25" pos:end="255:34"><name pos:start="255:25" pos:end="255:34"><name pos:start="255:25" pos:end="255:26">rv</name><operator pos:start="255:27" pos:end="255:28">-&gt;</operator><name pos:start="255:29" pos:end="255:34">sub_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="255:37" pos:end="255:38">&lt;=</operator> <literal type="number" pos:start="255:40" pos:end="255:40">1</literal> <operator pos:start="255:42" pos:end="255:43">&amp;&amp;</operator> <name pos:start="255:45" pos:end="255:56"><name pos:start="255:45" pos:end="255:45">s</name><operator pos:start="255:46" pos:end="255:47">-&gt;</operator><name pos:start="255:48" pos:end="255:56">pict_type</name></name> <operator pos:start="255:58" pos:end="255:59">==</operator> <name pos:start="255:61" pos:end="255:77">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="257:9" pos:end="257:29"><block_content pos:start="257:9" pos:end="257:29">

        <expr_stmt pos:start="257:9" pos:end="257:29"><expr pos:start="257:9" pos:end="257:28"><call pos:start="257:9" pos:end="257:28"><name pos:start="257:9" pos:end="257:17">skip_bits</name><argument_list pos:start="257:18" pos:end="257:28">(<argument pos:start="257:19" pos:end="257:24"><expr pos:start="257:19" pos:end="257:24"><operator pos:start="257:19" pos:end="257:19">&amp;</operator><name pos:start="257:20" pos:end="257:24"><name pos:start="257:20" pos:end="257:20">s</name><operator pos:start="257:21" pos:end="257:22">-&gt;</operator><name pos:start="257:23" pos:end="257:24">gb</name></name></expr></argument>, <argument pos:start="257:27" pos:end="257:27"><expr pos:start="257:27" pos:end="257:27"><literal type="number" pos:start="257:27" pos:end="257:27">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="257:31" pos:end="257:98">// binary decoder reads 3+2 bits here but they don't seem to be used</comment>



    <expr_stmt pos:start="261:5" pos:end="261:18"><expr pos:start="261:5" pos:end="261:17"><name pos:start="261:5" pos:end="261:13"><name pos:start="261:5" pos:end="261:5">s</name><operator pos:start="261:6" pos:end="261:7">-&gt;</operator><name pos:start="261:8" pos:end="261:13">f_code</name></name> <operator pos:start="261:15" pos:end="261:15">=</operator> <literal type="number" pos:start="261:17" pos:end="261:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:27"><expr pos:start="263:5" pos:end="263:26"><name pos:start="263:5" pos:end="263:22"><name pos:start="263:5" pos:end="263:5">s</name><operator pos:start="263:6" pos:end="263:7">-&gt;</operator><name pos:start="263:8" pos:end="263:22">unrestricted_mv</name></name> <operator pos:start="263:24" pos:end="263:24">=</operator> <literal type="number" pos:start="263:26" pos:end="263:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:51"><expr pos:start="265:5" pos:end="265:50"><name pos:start="265:5" pos:end="265:15"><name pos:start="265:5" pos:end="265:5">s</name><operator pos:start="265:6" pos:end="265:7">-&gt;</operator><name pos:start="265:8" pos:end="265:15">h263_aic</name></name><operator pos:start="265:16" pos:end="265:16">=</operator> <name pos:start="265:18" pos:end="265:29"><name pos:start="265:18" pos:end="265:18">s</name><operator pos:start="265:19" pos:end="265:20">-&gt;</operator><name pos:start="265:21" pos:end="265:29">pict_type</name></name> <operator pos:start="265:31" pos:end="265:32">==</operator> <name pos:start="265:34" pos:end="265:50">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

<comment type="line" pos:start="267:1" pos:end="267:25">//    s-&gt;alt_inter_vlc=1;</comment>

<comment type="line" pos:start="269:1" pos:end="269:16">//    s-&gt;obmc=1;</comment>

<comment type="line" pos:start="271:1" pos:end="271:19">//    s-&gt;umvplus=1;</comment>

    <expr_stmt pos:start="273:5" pos:end="273:24"><expr pos:start="273:5" pos:end="273:23"><name pos:start="273:5" pos:end="273:21"><name pos:start="273:5" pos:end="273:5">s</name><operator pos:start="273:6" pos:end="273:7">-&gt;</operator><name pos:start="273:8" pos:end="273:21">modified_quant</name></name><operator pos:start="273:22" pos:end="273:22">=</operator><literal type="number" pos:start="273:23" pos:end="273:23">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="275:5" pos:end="277:25"><if pos:start="275:5" pos:end="277:25">if<condition pos:start="275:7" pos:end="275:25">(<expr pos:start="275:8" pos:end="275:24"><operator pos:start="275:8" pos:end="275:8">!</operator><name pos:start="275:9" pos:end="275:24"><name pos:start="275:9" pos:end="275:9">s</name><operator pos:start="275:10" pos:end="275:11">-&gt;</operator><name pos:start="275:12" pos:end="275:16">avctx</name><operator pos:start="275:17" pos:end="275:18">-&gt;</operator><name pos:start="275:19" pos:end="275:24">lowres</name></name></expr>)</condition><block type="pseudo" pos:start="277:9" pos:end="277:25"><block_content pos:start="277:9" pos:end="277:25">

        <expr_stmt pos:start="277:9" pos:end="277:25"><expr pos:start="277:9" pos:end="277:24"><name pos:start="277:9" pos:end="277:22"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:22">loop_filter</name></name><operator pos:start="277:23" pos:end="277:23">=</operator><literal type="number" pos:start="277:24" pos:end="277:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="281:5" pos:end="287:5"><if pos:start="281:5" pos:end="287:5">if<condition pos:start="281:7" pos:end="281:44">(<expr pos:start="281:8" pos:end="281:43"><name pos:start="281:8" pos:end="281:22"><name pos:start="281:8" pos:end="281:8">s</name><operator pos:start="281:9" pos:end="281:10">-&gt;</operator><name pos:start="281:11" pos:end="281:15">avctx</name><operator pos:start="281:16" pos:end="281:17">-&gt;</operator><name pos:start="281:18" pos:end="281:22">debug</name></name> <operator pos:start="281:24" pos:end="281:24">&amp;</operator> <name pos:start="281:26" pos:end="281:43">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="281:45" pos:end="287:5">{<block_content pos:start="283:13" pos:end="285:83">

            <expr_stmt pos:start="283:13" pos:end="285:83"><expr pos:start="283:13" pos:end="285:82"><call pos:start="283:13" pos:end="285:82"><name pos:start="283:13" pos:end="283:18">av_log</name><argument_list pos:start="283:19" pos:end="285:82">(<argument pos:start="283:20" pos:end="283:27"><expr pos:start="283:20" pos:end="283:27"><name pos:start="283:20" pos:end="283:27"><name pos:start="283:20" pos:end="283:20">s</name><operator pos:start="283:21" pos:end="283:22">-&gt;</operator><name pos:start="283:23" pos:end="283:27">avctx</name></name></expr></argument>, <argument pos:start="283:30" pos:end="283:40"><expr pos:start="283:30" pos:end="283:40"><name pos:start="283:30" pos:end="283:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="283:43" pos:end="283:91"><expr pos:start="283:43" pos:end="283:91"><literal type="string" pos:start="283:43" pos:end="283:91">"num:%5d x:%2d y:%2d type:%d qscale:%2d rnd:%d\n"</literal></expr></argument>,

                   <argument pos:start="285:20" pos:end="285:22"><expr pos:start="285:20" pos:end="285:22"><name pos:start="285:20" pos:end="285:22">seq</name></expr></argument>, <argument pos:start="285:25" pos:end="285:31"><expr pos:start="285:25" pos:end="285:31"><name pos:start="285:25" pos:end="285:31"><name pos:start="285:25" pos:end="285:25">s</name><operator pos:start="285:26" pos:end="285:27">-&gt;</operator><name pos:start="285:28" pos:end="285:31">mb_x</name></name></expr></argument>, <argument pos:start="285:34" pos:end="285:40"><expr pos:start="285:34" pos:end="285:40"><name pos:start="285:34" pos:end="285:40"><name pos:start="285:34" pos:end="285:34">s</name><operator pos:start="285:35" pos:end="285:36">-&gt;</operator><name pos:start="285:37" pos:end="285:40">mb_y</name></name></expr></argument>, <argument pos:start="285:43" pos:end="285:54"><expr pos:start="285:43" pos:end="285:54"><name pos:start="285:43" pos:end="285:54"><name pos:start="285:43" pos:end="285:43">s</name><operator pos:start="285:44" pos:end="285:45">-&gt;</operator><name pos:start="285:46" pos:end="285:54">pict_type</name></name></expr></argument>, <argument pos:start="285:57" pos:end="285:65"><expr pos:start="285:57" pos:end="285:65"><name pos:start="285:57" pos:end="285:65"><name pos:start="285:57" pos:end="285:57">s</name><operator pos:start="285:58" pos:end="285:59">-&gt;</operator><name pos:start="285:60" pos:end="285:65">qscale</name></name></expr></argument>, <argument pos:start="285:68" pos:end="285:81"><expr pos:start="285:68" pos:end="285:81"><name pos:start="285:68" pos:end="285:81"><name pos:start="285:68" pos:end="285:68">s</name><operator pos:start="285:69" pos:end="285:70">-&gt;</operator><name pos:start="285:71" pos:end="285:81">no_rounding</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="291:5" pos:end="291:67"><expr pos:start="291:5" pos:end="291:66"><call pos:start="291:5" pos:end="291:66"><name pos:start="291:5" pos:end="291:14">av_assert0</name><argument_list pos:start="291:15" pos:end="291:66">(<argument pos:start="291:16" pos:end="291:65"><expr pos:start="291:16" pos:end="291:65"><name pos:start="291:16" pos:end="291:27"><name pos:start="291:16" pos:end="291:16">s</name><operator pos:start="291:17" pos:end="291:18">-&gt;</operator><name pos:start="291:19" pos:end="291:27">pict_type</name></name> <operator pos:start="291:29" pos:end="291:30">!=</operator> <name pos:start="291:32" pos:end="291:48">AV_PICTURE_TYPE_B</name> <operator pos:start="291:50" pos:end="291:51">||</operator> <operator pos:start="291:53" pos:end="291:53">!</operator><name pos:start="291:54" pos:end="291:65"><name pos:start="291:54" pos:end="291:54">s</name><operator pos:start="291:55" pos:end="291:56">-&gt;</operator><name pos:start="291:57" pos:end="291:65">low_delay</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="295:5" pos:end="295:45">return <expr pos:start="295:12" pos:end="295:44"><name pos:start="295:12" pos:end="295:22"><name pos:start="295:12" pos:end="295:12">s</name><operator pos:start="295:13" pos:end="295:14">-&gt;</operator><name pos:start="295:15" pos:end="295:22">mb_width</name></name><operator pos:start="295:23" pos:end="295:23">*</operator><name pos:start="295:24" pos:end="295:35"><name pos:start="295:24" pos:end="295:24">s</name><operator pos:start="295:25" pos:end="295:26">-&gt;</operator><name pos:start="295:27" pos:end="295:35">mb_height</name></name> <operator pos:start="295:37" pos:end="295:37">-</operator> <name pos:start="295:39" pos:end="295:44">mb_pos</name></expr>;</return>

</block_content>}</block></function>
</unit>
