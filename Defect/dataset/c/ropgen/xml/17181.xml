<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17181.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">scsi_req_parse_cdb</name><parameter_list pos:start="1:23" pos:end="1:71">(<parameter pos:start="1:24" pos:end="1:38"><decl pos:start="1:24" pos:end="1:38"><type pos:start="1:24" pos:end="1:38"><name pos:start="1:24" pos:end="1:33">SCSIDevice</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">dev</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:51">SCSICommand</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">cmd</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:65">uint8_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:13">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:18"><expr pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">cmd</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:12">lba</name></name> <operator pos:start="9:14" pos:end="9:14">=</operator> <operator pos:start="9:16" pos:end="9:16">-</operator><literal type="number" pos:start="9:17" pos:end="9:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:7">cmd</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:12">len</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <call pos:start="11:16" pos:end="11:35"><name pos:start="11:16" pos:end="11:30">scsi_cdb_length</name><argument_list pos:start="11:31" pos:end="11:35">(<argument pos:start="11:32" pos:end="11:34"><expr pos:start="11:32" pos:end="11:34"><name pos:start="11:32" pos:end="11:34">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="15:5" pos:end="35:5">switch <condition pos:start="15:12" pos:end="15:22">(<expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:15">dev</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:21">type</name></name></expr>)</condition> <block pos:start="15:24" pos:end="35:5">{<block_content pos:start="17:5" pos:end="33:14">

    <case pos:start="17:5" pos:end="17:19">case <expr pos:start="17:10" pos:end="17:18"><name pos:start="17:10" pos:end="17:18">TYPE_TAPE</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:49"><expr pos:start="19:9" pos:end="19:48"><name pos:start="19:9" pos:end="19:10">rc</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:48"><name pos:start="19:14" pos:end="19:33">scsi_req_stream_xfer</name><argument_list pos:start="19:34" pos:end="19:48">(<argument pos:start="19:35" pos:end="19:37"><expr pos:start="19:35" pos:end="19:37"><name pos:start="19:35" pos:end="19:37">cmd</name></expr></argument>, <argument pos:start="19:40" pos:end="19:42"><expr pos:start="19:40" pos:end="19:42"><name pos:start="19:40" pos:end="19:42">dev</name></expr></argument>, <argument pos:start="19:45" pos:end="19:47"><expr pos:start="19:45" pos:end="19:47"><name pos:start="19:45" pos:end="19:47">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:29">case <expr pos:start="23:10" pos:end="23:28"><name pos:start="23:10" pos:end="23:28">TYPE_MEDIUM_CHANGER</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:57"><expr pos:start="25:9" pos:end="25:56"><name pos:start="25:9" pos:end="25:10">rc</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:56"><name pos:start="25:14" pos:end="25:41">scsi_req_medium_changer_xfer</name><argument_list pos:start="25:42" pos:end="25:56">(<argument pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:45">cmd</name></expr></argument>, <argument pos:start="25:48" pos:end="25:50"><expr pos:start="25:48" pos:end="25:50"><name pos:start="25:48" pos:end="25:50">dev</name></expr></argument>, <argument pos:start="25:53" pos:end="25:55"><expr pos:start="25:53" pos:end="25:55"><name pos:start="25:53" pos:end="25:55">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <default pos:start="29:5" pos:end="29:12">default:</default>

        <expr_stmt pos:start="31:9" pos:end="31:42"><expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:10">rc</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:41"><name pos:start="31:14" pos:end="31:26">scsi_req_xfer</name><argument_list pos:start="31:27" pos:end="31:41">(<argument pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:30">cmd</name></expr></argument>, <argument pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:35">dev</name></expr></argument>, <argument pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:40">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:10">rc</name> <operator pos:start="39:12" pos:end="39:13">!=</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><name pos:start="41:16" pos:end="41:17">rc</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><call pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:10">memcpy</name><argument_list pos:start="45:11" pos:end="45:35">(<argument pos:start="45:12" pos:end="45:19"><expr pos:start="45:12" pos:end="45:19"><name pos:start="45:12" pos:end="45:19"><name pos:start="45:12" pos:end="45:14">cmd</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:19">buf</name></name></expr></argument>, <argument pos:start="45:22" pos:end="45:24"><expr pos:start="45:22" pos:end="45:24"><name pos:start="45:22" pos:end="45:24">buf</name></expr></argument>, <argument pos:start="45:27" pos:end="45:34"><expr pos:start="45:27" pos:end="45:34"><name pos:start="45:27" pos:end="45:34"><name pos:start="45:27" pos:end="45:29">cmd</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:34">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:28"><expr pos:start="47:5" pos:end="47:27"><call pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:22">scsi_cmd_xfer_mode</name><argument_list pos:start="47:23" pos:end="47:27">(<argument pos:start="47:24" pos:end="47:26"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:26">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:7">cmd</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:12">lba</name></name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:32"><name pos:start="49:16" pos:end="49:27">scsi_cmd_lba</name><argument_list pos:start="49:28" pos:end="49:32">(<argument pos:start="49:29" pos:end="49:31"><expr pos:start="49:29" pos:end="49:31"><name pos:start="49:29" pos:end="49:31">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
