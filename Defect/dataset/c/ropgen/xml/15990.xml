<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15990.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">cin_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CinDemuxContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">cin</name> <init pos:start="5:26" pos:end="5:39">= <expr pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:28">s</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pb</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">CinFrameHeader</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">hdr</name> <init pos:start="9:25" pos:end="9:44">= <expr pos:start="9:27" pos:end="9:44"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:44"><name pos:start="9:28" pos:end="9:30">cin</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:44">frame_header</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">rc</name></decl>, <decl pos:start="11:13" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:24">palette_type</name></decl>, <decl pos:start="11:27" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:27" pos:end="11:34">pkt_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="79:5"><if pos:start="15:5" pos:end="79:5">if <condition pos:start="15:8" pos:end="15:36">(<expr pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:11">cin</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:30">audio_buffer_size</name></name> <operator pos:start="15:32" pos:end="15:33">==</operator> <literal type="number" pos:start="15:35" pos:end="15:35">0</literal></expr>)</condition> <block pos:start="15:38" pos:end="79:5">{<block_content pos:start="17:9" pos:end="77:17">

        <expr_stmt pos:start="17:9" pos:end="17:44"><expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:10">rc</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:43"><name pos:start="17:14" pos:end="17:34">cin_read_frame_header</name><argument_list pos:start="17:35" pos:end="17:43">(<argument pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:38">cin</name></expr></argument>, <argument pos:start="17:41" pos:end="17:42"><expr pos:start="17:41" pos:end="17:42"><name pos:start="17:41" pos:end="17:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:22"><if pos:start="19:9" pos:end="21:22">if <condition pos:start="19:12" pos:end="19:15">(<expr pos:start="19:13" pos:end="19:14"><name pos:start="19:13" pos:end="19:14">rc</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:22"><block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><name pos:start="21:20" pos:end="21:21">rc</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:47">(<expr pos:start="25:13" pos:end="25:46"><operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:20">int16_t</name><operator pos:start="25:21" pos:end="25:21">)</operator><name pos:start="25:22" pos:end="25:42"><name pos:start="25:22" pos:end="25:24">hdr</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:42">pal_colors_count</name></name> <operator pos:start="25:44" pos:end="25:44">&lt;</operator> <literal type="number" pos:start="25:46" pos:end="25:46">0</literal></expr>)</condition> <block pos:start="25:49" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:29">

            <expr_stmt pos:start="27:13" pos:end="27:68"><expr pos:start="27:13" pos:end="27:67"><name pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:15">hdr</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:33">pal_colors_count</name></name> <operator pos:start="27:35" pos:end="27:35">=</operator> <operator pos:start="27:37" pos:end="27:37">-</operator><operator pos:start="27:38" pos:end="27:38">(</operator><name pos:start="27:39" pos:end="27:45">int16_t</name><operator pos:start="27:46" pos:end="27:46">)</operator><name pos:start="27:47" pos:end="27:67"><name pos:start="27:47" pos:end="27:49">hdr</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:67">pal_colors_count</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:29"><expr pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:24">palette_type</name> <operator pos:start="29:26" pos:end="29:26">=</operator> <literal type="number" pos:start="29:28" pos:end="29:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="35:9">else <block pos:start="31:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:29">

            <expr_stmt pos:start="33:13" pos:end="33:29"><expr pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:24">palette_type</name> <operator pos:start="33:26" pos:end="33:26">=</operator> <literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="39:9" pos:end="39:38">/* palette and video packet */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:86"><expr pos:start="41:9" pos:end="41:85"><name pos:start="41:9" pos:end="41:16">pkt_size</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <operator pos:start="41:20" pos:end="41:20">(</operator><name pos:start="41:21" pos:end="41:32">palette_type</name> <operator pos:start="41:34" pos:end="41:34">+</operator> <literal type="number" pos:start="41:36" pos:end="41:36">3</literal><operator pos:start="41:37" pos:end="41:37">)</operator> <operator pos:start="41:39" pos:end="41:39">*</operator> <name pos:start="41:41" pos:end="41:61"><name pos:start="41:41" pos:end="41:43">hdr</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:61">pal_colors_count</name></name> <operator pos:start="41:63" pos:end="41:63">+</operator> <name pos:start="41:65" pos:end="41:85"><name pos:start="41:65" pos:end="41:67">hdr</name><operator pos:start="41:68" pos:end="41:69">-&gt;</operator><name pos:start="41:70" pos:end="41:85">video_frame_size</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="47:35"><if pos:start="45:9" pos:end="47:35">if <condition pos:start="45:12" pos:end="45:45">(<expr pos:start="45:13" pos:end="45:44"><call pos:start="45:13" pos:end="45:44"><name pos:start="45:13" pos:end="45:25">av_new_packet</name><argument_list pos:start="45:26" pos:end="45:44">(<argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:29">pkt</name></expr></argument>, <argument pos:start="45:32" pos:end="45:43"><expr pos:start="45:32" pos:end="45:43"><literal type="number" pos:start="45:32" pos:end="45:34">4</literal> <operator pos:start="45:34" pos:end="45:34">+</operator> <name pos:start="45:36" pos:end="45:43">pkt_size</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:35"><block_content pos:start="47:13" pos:end="47:35">

            <return pos:start="47:13" pos:end="47:35">return <expr pos:start="47:20" pos:end="47:34"><call pos:start="47:20" pos:end="47:34"><name pos:start="47:20" pos:end="47:26">AVERROR</name><argument_list pos:start="47:27" pos:end="47:34">(<argument pos:start="47:28" pos:end="47:33"><expr pos:start="47:28" pos:end="47:33"><name pos:start="47:28" pos:end="47:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:52"><expr pos:start="51:9" pos:end="51:51"><name pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:11">pkt</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:25">stream_index</name></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:51"><name pos:start="51:29" pos:end="51:31">cin</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:51">video_stream_index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:11">pkt</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:16">pts</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:40"><name pos:start="53:20" pos:end="53:22">cin</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:40">video_stream_pts</name></name><operator pos:start="53:41" pos:end="53:42">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:36"><expr pos:start="57:9" pos:end="57:35"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:11">pkt</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:17">data</name><index pos:start="57:18" pos:end="57:20">[<expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>]</index></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:35">palette_type</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:52"><expr pos:start="59:9" pos:end="59:51"><name pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:11">pkt</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:17">data</name><index pos:start="59:18" pos:end="59:20">[<expr pos:start="59:19" pos:end="59:19"><literal type="number" pos:start="59:19" pos:end="59:19">1</literal></expr>]</index></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:44"><name pos:start="59:24" pos:end="59:26">hdr</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:44">pal_colors_count</name></name> <operator pos:start="59:46" pos:end="59:46">&amp;</operator> <literal type="number" pos:start="59:48" pos:end="59:51">0xFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:50"><expr pos:start="61:9" pos:end="61:49"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:11">pkt</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:17">data</name><index pos:start="61:18" pos:end="61:20">[<expr pos:start="61:19" pos:end="61:19"><literal type="number" pos:start="61:19" pos:end="61:19">2</literal></expr>]</index></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:44"><name pos:start="61:24" pos:end="61:26">hdr</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:44">pal_colors_count</name></name> <operator pos:start="61:46" pos:end="61:47">&gt;&gt;</operator> <literal type="number" pos:start="61:49" pos:end="61:49">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:11">pkt</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:17">data</name><index pos:start="63:18" pos:end="63:20">[<expr pos:start="63:19" pos:end="63:19"><literal type="number" pos:start="63:19" pos:end="63:19">3</literal></expr>]</index></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:44"><name pos:start="63:24" pos:end="63:26">hdr</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:44">video_frame_type</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="67:9" pos:end="69:32"><if pos:start="67:9" pos:end="69:32">if <condition pos:start="67:12" pos:end="67:64">(<expr pos:start="67:13" pos:end="67:63"><call pos:start="67:13" pos:end="67:51"><name pos:start="67:13" pos:end="67:22">get_buffer</name><argument_list pos:start="67:23" pos:end="67:51">(<argument pos:start="67:24" pos:end="67:25"><expr pos:start="67:24" pos:end="67:25"><name pos:start="67:24" pos:end="67:25">pb</name></expr></argument>, <argument pos:start="67:28" pos:end="67:40"><expr pos:start="67:28" pos:end="67:40"><operator pos:start="67:28" pos:end="67:28">&amp;</operator><name pos:start="67:29" pos:end="67:40"><name pos:start="67:29" pos:end="67:31">pkt</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:37">data</name><index pos:start="67:38" pos:end="67:40">[<expr pos:start="67:39" pos:end="67:39"><literal type="number" pos:start="67:39" pos:end="67:39">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:43" pos:end="67:50"><expr pos:start="67:43" pos:end="67:50"><name pos:start="67:43" pos:end="67:50">pkt_size</name></expr></argument>)</argument_list></call> <operator pos:start="67:53" pos:end="67:54">!=</operator> <name pos:start="67:56" pos:end="67:63">pkt_size</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:32"><block_content pos:start="69:13" pos:end="69:32">

            <return pos:start="69:13" pos:end="69:32">return <expr pos:start="69:20" pos:end="69:31"><call pos:start="69:20" pos:end="69:31"><name pos:start="69:20" pos:end="69:26">AVERROR</name><argument_list pos:start="69:27" pos:end="69:31">(<argument pos:start="69:28" pos:end="69:30"><expr pos:start="69:28" pos:end="69:30"><name pos:start="69:28" pos:end="69:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="73:9" pos:end="73:71">/* sound buffer will be processed on next read_packet() call */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:55"><expr pos:start="75:9" pos:end="75:54"><name pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:11">cin</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:30">audio_buffer_size</name></name> <operator pos:start="75:32" pos:end="75:32">=</operator> <name pos:start="75:34" pos:end="75:54"><name pos:start="75:34" pos:end="75:36">hdr</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:54">audio_frame_size</name></name></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:17">return <expr pos:start="77:16" pos:end="77:16"><literal type="number" pos:start="77:16" pos:end="77:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:22">/* audio packet */</comment>

    <if_stmt pos:start="85:5" pos:end="87:31"><if pos:start="85:5" pos:end="87:31">if <condition pos:start="85:8" pos:end="85:51">(<expr pos:start="85:9" pos:end="85:50"><call pos:start="85:9" pos:end="85:50"><name pos:start="85:9" pos:end="85:21">av_new_packet</name><argument_list pos:start="85:22" pos:end="85:50">(<argument pos:start="85:23" pos:end="85:25"><expr pos:start="85:23" pos:end="85:25"><name pos:start="85:23" pos:end="85:25">pkt</name></expr></argument>, <argument pos:start="85:28" pos:end="85:49"><expr pos:start="85:28" pos:end="85:49"><name pos:start="85:28" pos:end="85:49"><name pos:start="85:28" pos:end="85:30">cin</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:49">audio_buffer_size</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:31"><block_content pos:start="87:9" pos:end="87:31">

        <return pos:start="87:9" pos:end="87:31">return <expr pos:start="87:16" pos:end="87:30"><call pos:start="87:16" pos:end="87:30"><name pos:start="87:16" pos:end="87:22">AVERROR</name><argument_list pos:start="87:23" pos:end="87:30">(<argument pos:start="87:24" pos:end="87:29"><expr pos:start="87:24" pos:end="87:29"><name pos:start="87:24" pos:end="87:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:48"><expr pos:start="91:5" pos:end="91:47"><name pos:start="91:5" pos:end="91:21"><name pos:start="91:5" pos:end="91:7">pkt</name><operator pos:start="91:8" pos:end="91:9">-&gt;</operator><name pos:start="91:10" pos:end="91:21">stream_index</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:47"><name pos:start="91:25" pos:end="91:27">cin</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:47">audio_stream_index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:37"><expr pos:start="93:5" pos:end="93:36"><name pos:start="93:5" pos:end="93:12"><name pos:start="93:5" pos:end="93:7">pkt</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:12">pts</name></name> <operator pos:start="93:14" pos:end="93:14">=</operator> <name pos:start="93:16" pos:end="93:36"><name pos:start="93:16" pos:end="93:18">cin</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:36">audio_stream_pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:92"><expr pos:start="95:5" pos:end="95:91"><name pos:start="95:5" pos:end="95:25"><name pos:start="95:5" pos:end="95:7">cin</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:25">audio_stream_pts</name></name> <operator pos:start="95:27" pos:end="95:28">+=</operator> <name pos:start="95:30" pos:end="95:51"><name pos:start="95:30" pos:end="95:32">cin</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:51">audio_buffer_size</name></name> <operator pos:start="95:53" pos:end="95:53">*</operator> <literal type="number" pos:start="95:55" pos:end="95:55">2</literal> <operator pos:start="95:57" pos:end="95:57">/</operator> <name pos:start="95:59" pos:end="95:91"><name pos:start="95:59" pos:end="95:61">cin</name><operator pos:start="95:62" pos:end="95:63">-&gt;</operator><name pos:start="95:64" pos:end="95:74">file_header</name><operator pos:start="95:75" pos:end="95:75">.</operator><name pos:start="95:76" pos:end="95:91">audio_frame_size</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="101:28"><if pos:start="99:5" pos:end="101:28">if <condition pos:start="99:8" pos:end="99:84">(<expr pos:start="99:9" pos:end="99:83"><call pos:start="99:9" pos:end="99:57"><name pos:start="99:9" pos:end="99:18">get_buffer</name><argument_list pos:start="99:19" pos:end="99:57">(<argument pos:start="99:20" pos:end="99:21"><expr pos:start="99:20" pos:end="99:21"><name pos:start="99:20" pos:end="99:21">pb</name></expr></argument>, <argument pos:start="99:24" pos:end="99:32"><expr pos:start="99:24" pos:end="99:32"><name pos:start="99:24" pos:end="99:32"><name pos:start="99:24" pos:end="99:26">pkt</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:32">data</name></name></expr></argument>, <argument pos:start="99:35" pos:end="99:56"><expr pos:start="99:35" pos:end="99:56"><name pos:start="99:35" pos:end="99:56"><name pos:start="99:35" pos:end="99:37">cin</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:56">audio_buffer_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="99:59" pos:end="99:60">!=</operator> <name pos:start="99:62" pos:end="99:83"><name pos:start="99:62" pos:end="99:64">cin</name><operator pos:start="99:65" pos:end="99:66">-&gt;</operator><name pos:start="99:67" pos:end="99:83">audio_buffer_size</name></name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:28"><block_content pos:start="101:9" pos:end="101:28">

        <return pos:start="101:9" pos:end="101:28">return <expr pos:start="101:16" pos:end="101:27"><call pos:start="101:16" pos:end="101:27"><name pos:start="101:16" pos:end="101:22">AVERROR</name><argument_list pos:start="101:23" pos:end="101:27">(<argument pos:start="101:24" pos:end="101:26"><expr pos:start="101:24" pos:end="101:26"><name pos:start="101:24" pos:end="101:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:31"><expr pos:start="105:5" pos:end="105:30"><name pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:7">cin</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:26">audio_buffer_size</name></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <literal type="number" pos:start="105:30" pos:end="105:30">0</literal></expr>;</expr_stmt>

    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
