<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13610.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">decode</name><parameter_list pos:start="1:18" pos:end="3:32">(<parameter pos:start="1:19" pos:end="1:35"><decl pos:start="1:19" pos:end="1:35"><type pos:start="1:19" pos:end="1:35"><name pos:start="1:19" pos:end="1:30">MimicContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">ctx</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:48"><decl pos:start="1:38" pos:end="1:48"><type pos:start="1:38" pos:end="1:48"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:48">quality</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:64">num_coeffs</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:31"><decl pos:start="3:19" pos:end="3:31"><type pos:start="3:19" pos:end="3:31"><name pos:start="3:19" pos:end="3:21">int</name></type> <name pos:start="3:23" pos:end="3:31">is_iframe</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="119:1">{<block_content pos:start="7:5" pos:end="117:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">y</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">x</name></decl>, <decl pos:start="7:15" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">plane</name></decl>, <decl pos:start="7:22" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:28">cur_row</name> <init pos:start="7:30" pos:end="7:32">= <expr pos:start="7:32" pos:end="7:32"><literal type="number" pos:start="7:32" pos:end="7:32">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="113:5">for<control pos:start="11:8" pos:end="11:38">(<init pos:start="11:9" pos:end="11:18"><expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:13">plane</name> <operator pos:start="11:15" pos:end="11:15">=</operator> <literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr>;</init> <condition pos:start="11:20" pos:end="11:29"><expr pos:start="11:20" pos:end="11:28"><name pos:start="11:20" pos:end="11:24">plane</name> <operator pos:start="11:26" pos:end="11:26">&lt;</operator> <literal type="number" pos:start="11:28" pos:end="11:28">3</literal></expr>;</condition> <incr pos:start="11:31" pos:end="11:37"><expr pos:start="11:31" pos:end="11:37"><name pos:start="11:31" pos:end="11:35">plane</name><operator pos:start="11:36" pos:end="11:37">++</operator></expr></incr>)</control> <block pos:start="11:40" pos:end="113:5">{<block_content pos:start="13:9" pos:end="111:9">

        <decl_stmt pos:start="13:9" pos:end="13:38"><decl pos:start="13:9" pos:end="13:37"><type pos:start="13:9" pos:end="13:17"><specifier pos:start="13:9" pos:end="13:13">const</specifier> <name pos:start="13:15" pos:end="13:17">int</name></type> <name pos:start="13:19" pos:end="13:27">is_chroma</name> <init pos:start="13:29" pos:end="13:37">= <expr pos:start="13:31" pos:end="13:37"><operator pos:start="13:31" pos:end="13:31">!</operator><operator pos:start="13:32" pos:end="13:32">!</operator><name pos:start="13:33" pos:end="13:37">plane</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:79"><decl pos:start="15:9" pos:end="15:78"><type pos:start="15:9" pos:end="15:17"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:17">int</name></type> <name pos:start="15:19" pos:end="15:24">qscale</name> <init pos:start="15:26" pos:end="15:78">= <expr pos:start="15:28" pos:end="15:78"><call pos:start="15:28" pos:end="15:75"><name pos:start="15:28" pos:end="15:34">av_clip</name><argument_list pos:start="15:35" pos:end="15:75">(<argument pos:start="15:36" pos:end="15:48"><expr pos:start="15:36" pos:end="15:48"><literal type="number" pos:start="15:36" pos:end="15:41">10000</literal><operator pos:start="15:41" pos:end="15:41">-</operator><name pos:start="15:42" pos:end="15:48">quality</name></expr></argument>,<argument pos:start="15:50" pos:end="15:68"><expr pos:start="15:50" pos:end="15:68"><ternary pos:start="15:50" pos:end="15:68"><condition pos:start="15:50" pos:end="15:59"><expr pos:start="15:50" pos:end="15:58"><name pos:start="15:50" pos:end="15:58">is_chroma</name></expr>?</condition><then pos:start="15:60" pos:end="15:63"><expr pos:start="15:60" pos:end="15:63"><literal type="number" pos:start="15:60" pos:end="15:63">1000</literal></expr></then><else pos:start="15:64" pos:end="15:68">:<expr pos:start="15:65" pos:end="15:68"><literal type="number" pos:start="15:65" pos:end="15:68">2000</literal></expr></else></ternary></expr></argument>,<argument pos:start="15:70" pos:end="15:74"><expr pos:start="15:70" pos:end="15:74"><literal type="number" pos:start="15:70" pos:end="15:74">10000</literal></expr></argument>)</argument_list></call><operator pos:start="15:76" pos:end="15:77">&lt;&lt;</operator><literal type="number" pos:start="15:78" pos:end="15:78">2</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:77"><decl pos:start="17:9" pos:end="17:76"><type pos:start="17:9" pos:end="17:17"><specifier pos:start="17:9" pos:end="17:13">const</specifier> <name pos:start="17:15" pos:end="17:17">int</name></type> <name pos:start="17:19" pos:end="17:24">stride</name> <init pos:start="17:26" pos:end="17:76">= <expr pos:start="17:28" pos:end="17:76"><name pos:start="17:28" pos:end="17:60"><name pos:start="17:28" pos:end="17:30">ctx</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:44">flipped_ptrs</name><index pos:start="17:45" pos:end="17:60">[<expr pos:start="17:46" pos:end="17:59"><name pos:start="17:46" pos:end="17:59"><name pos:start="17:46" pos:end="17:48">ctx</name><operator pos:start="17:49" pos:end="17:50">-&gt;</operator><name pos:start="17:51" pos:end="17:59">cur_index</name></name></expr>]</index></name><operator pos:start="17:61" pos:end="17:61">.</operator><name pos:start="17:62" pos:end="17:76"><name pos:start="17:62" pos:end="17:69">linesize</name><index pos:start="17:70" pos:end="17:76">[<expr pos:start="17:71" pos:end="17:75"><name pos:start="17:71" pos:end="17:75">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:76"><decl pos:start="19:9" pos:end="19:75"><type pos:start="19:9" pos:end="19:23"><specifier pos:start="19:9" pos:end="19:13">const</specifier> <name pos:start="19:15" pos:end="19:21">uint8_t</name> <modifier pos:start="19:23" pos:end="19:23">*</modifier></type><name pos:start="19:24" pos:end="19:26">src</name> <init pos:start="19:28" pos:end="19:75">= <expr pos:start="19:30" pos:end="19:75"><name pos:start="19:30" pos:end="19:63"><name pos:start="19:30" pos:end="19:32">ctx</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:46">flipped_ptrs</name><index pos:start="19:47" pos:end="19:63">[<expr pos:start="19:48" pos:end="19:62"><name pos:start="19:48" pos:end="19:62"><name pos:start="19:48" pos:end="19:50">ctx</name><operator pos:start="19:51" pos:end="19:52">-&gt;</operator><name pos:start="19:53" pos:end="19:62">prev_index</name></name></expr>]</index></name><operator pos:start="19:64" pos:end="19:64">.</operator><name pos:start="19:65" pos:end="19:75"><name pos:start="19:65" pos:end="19:68">data</name><index pos:start="19:69" pos:end="19:75">[<expr pos:start="19:70" pos:end="19:74"><name pos:start="19:70" pos:end="19:74">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:76"><decl pos:start="21:9" pos:end="21:75"><type pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:15">uint8_t</name>       <modifier pos:start="21:23" pos:end="21:23">*</modifier></type><name pos:start="21:24" pos:end="21:26">dst</name> <init pos:start="21:28" pos:end="21:75">= <expr pos:start="21:30" pos:end="21:75"><name pos:start="21:30" pos:end="21:63"><name pos:start="21:30" pos:end="21:32">ctx</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:46">flipped_ptrs</name><index pos:start="21:47" pos:end="21:63">[<expr pos:start="21:48" pos:end="21:61"><name pos:start="21:48" pos:end="21:61"><name pos:start="21:48" pos:end="21:50">ctx</name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:61">cur_index</name></name></expr> ]</index></name><operator pos:start="21:64" pos:end="21:64">.</operator><name pos:start="21:65" pos:end="21:75"><name pos:start="21:65" pos:end="21:68">data</name><index pos:start="21:69" pos:end="21:75">[<expr pos:start="21:70" pos:end="21:74"><name pos:start="21:70" pos:end="21:74">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <for pos:start="25:9" pos:end="111:9">for<control pos:start="25:12" pos:end="25:52">(<init pos:start="25:13" pos:end="25:18"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:13">y</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr>;</init> <condition pos:start="25:20" pos:end="25:47"><expr pos:start="25:20" pos:end="25:46"><name pos:start="25:20" pos:end="25:20">y</name> <operator pos:start="25:22" pos:end="25:22">&lt;</operator> <name pos:start="25:24" pos:end="25:46"><name pos:start="25:24" pos:end="25:26">ctx</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:39">num_vblocks</name><index pos:start="25:40" pos:end="25:46">[<expr pos:start="25:41" pos:end="25:45"><name pos:start="25:41" pos:end="25:45">plane</name></expr>]</index></name></expr>;</condition> <incr pos:start="25:49" pos:end="25:51"><expr pos:start="25:49" pos:end="25:51"><name pos:start="25:49" pos:end="25:49">y</name><operator pos:start="25:50" pos:end="25:51">++</operator></expr></incr>)</control> <block pos:start="25:54" pos:end="111:9">{<block_content pos:start="27:13" pos:end="109:84">

            <for pos:start="27:13" pos:end="101:13">for<control pos:start="27:16" pos:end="27:56">(<init pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:21"><name pos:start="27:17" pos:end="27:17">x</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>;</init> <condition pos:start="27:24" pos:end="27:51"><expr pos:start="27:24" pos:end="27:50"><name pos:start="27:24" pos:end="27:24">x</name> <operator pos:start="27:26" pos:end="27:26">&lt;</operator> <name pos:start="27:28" pos:end="27:50"><name pos:start="27:28" pos:end="27:30">ctx</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:43">num_hblocks</name><index pos:start="27:44" pos:end="27:50">[<expr pos:start="27:45" pos:end="27:49"><name pos:start="27:45" pos:end="27:49">plane</name></expr>]</index></name></expr>;</condition> <incr pos:start="27:53" pos:end="27:55"><expr pos:start="27:53" pos:end="27:55"><name pos:start="27:53" pos:end="27:53">x</name><operator pos:start="27:54" pos:end="27:55">++</operator></expr></incr>)</control> <block pos:start="27:58" pos:end="101:13">{<block_content pos:start="39:17" pos:end="99:25">



                <comment type="block" pos:start="31:17" pos:end="37:62">/* Check for a change condition in the current block.

                 * - iframes always change.

                 * - Luma plane changes on get_bits1 == 0

                 * - Chroma planes change on get_bits1 == 1 */</comment>

                <if_stmt pos:start="39:17" pos:end="95:17"><if pos:start="39:17" pos:end="89:17">if<condition pos:start="39:19" pos:end="39:65">(<expr pos:start="39:20" pos:end="39:64"><name pos:start="39:20" pos:end="39:28">is_iframe</name> <operator pos:start="39:30" pos:end="39:31">||</operator> <call pos:start="39:33" pos:end="39:51"><name pos:start="39:33" pos:end="39:41">get_bits1</name><argument_list pos:start="39:42" pos:end="39:51">(<argument pos:start="39:43" pos:end="39:50"><expr pos:start="39:43" pos:end="39:50"><operator pos:start="39:43" pos:end="39:43">&amp;</operator><name pos:start="39:44" pos:end="39:50"><name pos:start="39:44" pos:end="39:46">ctx</name><operator pos:start="39:47" pos:end="39:48">-&gt;</operator><name pos:start="39:49" pos:end="39:50">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:53" pos:end="39:54">==</operator> <name pos:start="39:56" pos:end="39:64">is_chroma</name></expr>)</condition> <block pos:start="39:67" pos:end="89:17">{<block_content pos:start="49:21" pos:end="87:21">



                    <comment type="block" pos:start="43:21" pos:end="47:65">/* Luma planes may use a backreference from the 15 last

                     * frames preceding the previous. (get_bits1 == 1)

                     * Chroma planes don't use backreferences. */</comment>

                    <if_stmt pos:start="49:21" pos:end="87:21"><if pos:start="49:21" pos:end="59:21">if<condition pos:start="49:23" pos:end="49:70">(<expr pos:start="49:24" pos:end="49:69"><name pos:start="49:24" pos:end="49:32">is_chroma</name> <operator pos:start="49:34" pos:end="49:35">||</operator> <name pos:start="49:37" pos:end="49:45">is_iframe</name> <operator pos:start="49:47" pos:end="49:48">||</operator> <operator pos:start="49:50" pos:end="49:50">!</operator><call pos:start="49:51" pos:end="49:69"><name pos:start="49:51" pos:end="49:59">get_bits1</name><argument_list pos:start="49:60" pos:end="49:69">(<argument pos:start="49:61" pos:end="49:68"><expr pos:start="49:61" pos:end="49:68"><operator pos:start="49:61" pos:end="49:61">&amp;</operator><name pos:start="49:62" pos:end="49:68"><name pos:start="49:62" pos:end="49:64">ctx</name><operator pos:start="49:65" pos:end="49:66">-&gt;</operator><name pos:start="49:67" pos:end="49:68">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:72" pos:end="59:21">{<block_content pos:start="53:25" pos:end="57:71">



                        <if_stmt pos:start="53:25" pos:end="55:37"><if pos:start="53:25" pos:end="55:37">if<condition pos:start="53:27" pos:end="53:70">(<expr pos:start="53:28" pos:end="53:69"><operator pos:start="53:28" pos:end="53:28">!</operator><call pos:start="53:29" pos:end="53:69"><name pos:start="53:29" pos:end="53:44">vlc_decode_block</name><argument_list pos:start="53:45" pos:end="53:69">(<argument pos:start="53:46" pos:end="53:48"><expr pos:start="53:46" pos:end="53:48"><name pos:start="53:46" pos:end="53:48">ctx</name></expr></argument>, <argument pos:start="53:51" pos:end="53:60"><expr pos:start="53:51" pos:end="53:60"><name pos:start="53:51" pos:end="53:60">num_coeffs</name></expr></argument>, <argument pos:start="53:63" pos:end="53:68"><expr pos:start="53:63" pos:end="53:68"><name pos:start="53:63" pos:end="53:68">qscale</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:29" pos:end="55:37"><block_content pos:start="55:29" pos:end="55:37">

                            <return pos:start="55:29" pos:end="55:37">return <expr pos:start="55:36" pos:end="55:36"><literal type="number" pos:start="55:36" pos:end="55:36">0</literal></expr>;</return></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="57:25" pos:end="57:71"><expr pos:start="57:25" pos:end="57:70"><call pos:start="57:25" pos:end="57:70"><name pos:start="57:25" pos:end="57:41"><name pos:start="57:25" pos:end="57:27">ctx</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:32">dsp</name><operator pos:start="57:33" pos:end="57:33">.</operator><name pos:start="57:34" pos:end="57:41">idct_put</name></name><argument_list pos:start="57:42" pos:end="57:70">(<argument pos:start="57:43" pos:end="57:45"><expr pos:start="57:43" pos:end="57:45"><name pos:start="57:43" pos:end="57:45">dst</name></expr></argument>, <argument pos:start="57:48" pos:end="57:53"><expr pos:start="57:48" pos:end="57:53"><name pos:start="57:48" pos:end="57:53">stride</name></expr></argument>, <argument pos:start="57:56" pos:end="57:69"><expr pos:start="57:56" pos:end="57:69"><name pos:start="57:56" pos:end="57:69"><name pos:start="57:56" pos:end="57:58">ctx</name><operator pos:start="57:59" pos:end="57:60">-&gt;</operator><name pos:start="57:61" pos:end="57:69">dct_block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="59:23" pos:end="87:21">else <block pos:start="59:28" pos:end="87:21">{<block_content pos:start="61:25" pos:end="85:25">

                        <decl_stmt pos:start="61:25" pos:end="61:69"><decl pos:start="61:25" pos:end="61:68"><type pos:start="61:25" pos:end="61:36"><name pos:start="61:25" pos:end="61:32">unsigned</name> <name pos:start="61:34" pos:end="61:36">int</name></type> <name pos:start="61:38" pos:end="61:44">backref</name> <init pos:start="61:46" pos:end="61:68">= <expr pos:start="61:48" pos:end="61:68"><call pos:start="61:48" pos:end="61:68"><name pos:start="61:48" pos:end="61:55">get_bits</name><argument_list pos:start="61:56" pos:end="61:68">(<argument pos:start="61:57" pos:end="61:64"><expr pos:start="61:57" pos:end="61:64"><operator pos:start="61:57" pos:end="61:57">&amp;</operator><name pos:start="61:58" pos:end="61:64"><name pos:start="61:58" pos:end="61:60">ctx</name><operator pos:start="61:61" pos:end="61:62">-&gt;</operator><name pos:start="61:63" pos:end="61:64">gb</name></name></expr></argument>, <argument pos:start="61:67" pos:end="61:67"><expr pos:start="61:67" pos:end="61:67"><literal type="number" pos:start="61:67" pos:end="61:67">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="63:25" pos:end="63:64"><decl pos:start="63:25" pos:end="63:63"><type pos:start="63:25" pos:end="63:27"><name pos:start="63:25" pos:end="63:27">int</name></type> <name pos:start="63:29" pos:end="63:33">index</name> <init pos:start="63:35" pos:end="63:63">= <expr pos:start="63:37" pos:end="63:63"><operator pos:start="63:37" pos:end="63:37">(</operator><name pos:start="63:38" pos:end="63:51"><name pos:start="63:38" pos:end="63:40">ctx</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:51">cur_index</name></name><operator pos:start="63:52" pos:end="63:52">+</operator><name pos:start="63:53" pos:end="63:59">backref</name><operator pos:start="63:60" pos:end="63:60">)</operator><operator pos:start="63:61" pos:end="63:61">&amp;</operator><literal type="number" pos:start="63:62" pos:end="63:63">15</literal></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="65:25" pos:end="65:70"><decl pos:start="65:25" pos:end="65:69"><type pos:start="65:25" pos:end="65:33"><name pos:start="65:25" pos:end="65:31">uint8_t</name> <modifier pos:start="65:33" pos:end="65:33">*</modifier></type><name pos:start="65:34" pos:end="65:34">p</name> <init pos:start="65:36" pos:end="65:69">= <expr pos:start="65:38" pos:end="65:69"><name pos:start="65:38" pos:end="65:61"><name pos:start="65:38" pos:end="65:40">ctx</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:54">flipped_ptrs</name><index pos:start="65:55" pos:end="65:61">[<expr pos:start="65:56" pos:end="65:60"><name pos:start="65:56" pos:end="65:60">index</name></expr>]</index></name><operator pos:start="65:62" pos:end="65:62">.</operator><name pos:start="65:63" pos:end="65:69"><name pos:start="65:63" pos:end="65:66">data</name><index pos:start="65:67" pos:end="65:69">[<expr pos:start="65:68" pos:end="65:68"><literal type="number" pos:start="65:68" pos:end="65:68">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



                        <expr_stmt pos:start="69:25" pos:end="69:84"><expr pos:start="69:25" pos:end="69:83"><call pos:start="69:25" pos:end="69:83"><name pos:start="69:25" pos:end="69:48">ff_thread_await_progress</name><argument_list pos:start="69:49" pos:end="69:83">(<argument pos:start="69:50" pos:end="69:70"><expr pos:start="69:50" pos:end="69:70"><operator pos:start="69:50" pos:end="69:50">&amp;</operator><name pos:start="69:51" pos:end="69:70"><name pos:start="69:51" pos:end="69:53">ctx</name><operator pos:start="69:54" pos:end="69:55">-&gt;</operator><name pos:start="69:56" pos:end="69:63">buf_ptrs</name><index pos:start="69:64" pos:end="69:70">[<expr pos:start="69:65" pos:end="69:69"><name pos:start="69:65" pos:end="69:69">index</name></expr>]</index></name></expr></argument>, <argument pos:start="69:73" pos:end="69:79"><expr pos:start="69:73" pos:end="69:79"><name pos:start="69:73" pos:end="69:79">cur_row</name></expr></argument>, <argument pos:start="69:82" pos:end="69:82"><expr pos:start="69:82" pos:end="69:82"><literal type="number" pos:start="69:82" pos:end="69:82">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="71:25" pos:end="85:25"><if pos:start="71:25" pos:end="79:25">if<condition pos:start="71:27" pos:end="71:29">(<expr pos:start="71:28" pos:end="71:28"><name pos:start="71:28" pos:end="71:28">p</name></expr>)</condition> <block pos:start="71:31" pos:end="79:25">{<block_content pos:start="73:29" pos:end="77:77">

                            <expr_stmt pos:start="73:29" pos:end="75:79"><expr pos:start="73:29" pos:end="75:78"><name pos:start="73:29" pos:end="73:29">p</name> <operator pos:start="73:31" pos:end="73:32">+=</operator> <name pos:start="73:34" pos:end="73:36">src</name> <operator pos:start="73:38" pos:end="73:38">-</operator>

                                <name pos:start="75:33" pos:end="75:66"><name pos:start="75:33" pos:end="75:35">ctx</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:49">flipped_ptrs</name><index pos:start="75:50" pos:end="75:66">[<expr pos:start="75:51" pos:end="75:65"><name pos:start="75:51" pos:end="75:65"><name pos:start="75:51" pos:end="75:53">ctx</name><operator pos:start="75:54" pos:end="75:55">-&gt;</operator><name pos:start="75:56" pos:end="75:65">prev_index</name></name></expr>]</index></name><operator pos:start="75:67" pos:end="75:67">.</operator><name pos:start="75:68" pos:end="75:78"><name pos:start="75:68" pos:end="75:71">data</name><index pos:start="75:72" pos:end="75:78">[<expr pos:start="75:73" pos:end="75:77"><name pos:start="75:73" pos:end="75:77">plane</name></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="77:29" pos:end="77:77"><expr pos:start="77:29" pos:end="77:76"><name pos:start="77:29" pos:end="77:57"><name pos:start="77:29" pos:end="77:31">ctx</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:36">dsp</name><operator pos:start="77:37" pos:end="77:37">.</operator><name pos:start="77:38" pos:end="77:51">put_pixels_tab</name><index pos:start="77:52" pos:end="77:54">[<expr pos:start="77:53" pos:end="77:53"><literal type="number" pos:start="77:53" pos:end="77:53">1</literal></expr>]</index><index pos:start="77:55" pos:end="77:57">[<expr pos:start="77:56" pos:end="77:56"><literal type="number" pos:start="77:56" pos:end="77:56">0</literal></expr>]</index></name><operator pos:start="77:58" pos:end="77:58">(</operator><name pos:start="77:59" pos:end="77:61">dst</name><operator pos:start="77:62" pos:end="77:62">,</operator> <name pos:start="77:64" pos:end="77:64">p</name><operator pos:start="77:65" pos:end="77:65">,</operator> <name pos:start="77:67" pos:end="77:72">stride</name><operator pos:start="77:73" pos:end="77:73">,</operator> <literal type="number" pos:start="77:75" pos:end="77:75">8</literal><operator pos:start="77:76" pos:end="77:76">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="79:27" pos:end="85:25">else <block pos:start="79:32" pos:end="85:25">{<block_content pos:start="81:29" pos:end="83:79">

                            <expr_stmt pos:start="81:29" pos:end="83:79"><expr pos:start="81:29" pos:end="83:78"><call pos:start="81:29" pos:end="83:78"><name pos:start="81:29" pos:end="81:34">av_log</name><argument_list pos:start="81:35" pos:end="83:78">(<argument pos:start="81:36" pos:end="81:45"><expr pos:start="81:36" pos:end="81:45"><name pos:start="81:36" pos:end="81:45"><name pos:start="81:36" pos:end="81:38">ctx</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:45">avctx</name></name></expr></argument>, <argument pos:start="81:48" pos:end="81:59"><expr pos:start="81:48" pos:end="81:59"><name pos:start="81:48" pos:end="81:59">AV_LOG_ERROR</name></expr></argument>,

                                     <argument pos:start="83:38" pos:end="83:77"><expr pos:start="83:38" pos:end="83:77"><literal type="string" pos:start="83:38" pos:end="83:77">"No such backreference! Buggy sample.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="89:19" pos:end="95:17">else <block pos:start="89:24" pos:end="95:17">{<block_content pos:start="91:21" pos:end="93:71">

                    <expr_stmt pos:start="91:21" pos:end="91:90"><expr pos:start="91:21" pos:end="91:89"><call pos:start="91:21" pos:end="91:89"><name pos:start="91:21" pos:end="91:44">ff_thread_await_progress</name><argument_list pos:start="91:45" pos:end="91:89">(<argument pos:start="91:46" pos:end="91:76"><expr pos:start="91:46" pos:end="91:76"><operator pos:start="91:46" pos:end="91:46">&amp;</operator><name pos:start="91:47" pos:end="91:76"><name pos:start="91:47" pos:end="91:49">ctx</name><operator pos:start="91:50" pos:end="91:51">-&gt;</operator><name pos:start="91:52" pos:end="91:59">buf_ptrs</name><index pos:start="91:60" pos:end="91:76">[<expr pos:start="91:61" pos:end="91:75"><name pos:start="91:61" pos:end="91:75"><name pos:start="91:61" pos:end="91:63">ctx</name><operator pos:start="91:64" pos:end="91:65">-&gt;</operator><name pos:start="91:66" pos:end="91:75">prev_index</name></name></expr>]</index></name></expr></argument>, <argument pos:start="91:79" pos:end="91:85"><expr pos:start="91:79" pos:end="91:85"><name pos:start="91:79" pos:end="91:85">cur_row</name></expr></argument>, <argument pos:start="91:88" pos:end="91:88"><expr pos:start="91:88" pos:end="91:88"><literal type="number" pos:start="91:88" pos:end="91:88">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:71"><expr pos:start="93:21" pos:end="93:70"><name pos:start="93:21" pos:end="93:49"><name pos:start="93:21" pos:end="93:23">ctx</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:28">dsp</name><operator pos:start="93:29" pos:end="93:29">.</operator><name pos:start="93:30" pos:end="93:43">put_pixels_tab</name><index pos:start="93:44" pos:end="93:46">[<expr pos:start="93:45" pos:end="93:45"><literal type="number" pos:start="93:45" pos:end="93:45">1</literal></expr>]</index><index pos:start="93:47" pos:end="93:49">[<expr pos:start="93:48" pos:end="93:48"><literal type="number" pos:start="93:48" pos:end="93:48">0</literal></expr>]</index></name><operator pos:start="93:50" pos:end="93:50">(</operator><name pos:start="93:51" pos:end="93:53">dst</name><operator pos:start="93:54" pos:end="93:54">,</operator> <name pos:start="93:56" pos:end="93:58">src</name><operator pos:start="93:59" pos:end="93:59">,</operator> <name pos:start="93:61" pos:end="93:66">stride</name><operator pos:start="93:67" pos:end="93:67">,</operator> <literal type="number" pos:start="93:69" pos:end="93:69">8</literal><operator pos:start="93:70" pos:end="93:70">)</operator></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:25"><expr pos:start="97:17" pos:end="97:24"><name pos:start="97:17" pos:end="97:19">src</name> <operator pos:start="97:21" pos:end="97:22">+=</operator> <literal type="number" pos:start="97:24" pos:end="97:24">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:25"><expr pos:start="99:17" pos:end="99:24"><name pos:start="99:17" pos:end="99:19">dst</name> <operator pos:start="99:21" pos:end="99:22">+=</operator> <literal type="number" pos:start="99:24" pos:end="99:24">8</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="103:13" pos:end="103:57"><expr pos:start="103:13" pos:end="103:56"><name pos:start="103:13" pos:end="103:15">src</name> <operator pos:start="103:17" pos:end="103:18">+=</operator> <operator pos:start="103:20" pos:end="103:20">(</operator><name pos:start="103:21" pos:end="103:26">stride</name> <operator pos:start="103:28" pos:end="103:28">-</operator> <name pos:start="103:30" pos:end="103:52"><name pos:start="103:30" pos:end="103:32">ctx</name><operator pos:start="103:33" pos:end="103:34">-&gt;</operator><name pos:start="103:35" pos:end="103:45">num_hblocks</name><index pos:start="103:46" pos:end="103:52">[<expr pos:start="103:47" pos:end="103:51"><name pos:start="103:47" pos:end="103:51">plane</name></expr>]</index></name><operator pos:start="103:53" pos:end="103:53">)</operator><operator pos:start="103:54" pos:end="103:55">&lt;&lt;</operator><literal type="number" pos:start="103:56" pos:end="103:56">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:57"><expr pos:start="105:13" pos:end="105:56"><name pos:start="105:13" pos:end="105:15">dst</name> <operator pos:start="105:17" pos:end="105:18">+=</operator> <operator pos:start="105:20" pos:end="105:20">(</operator><name pos:start="105:21" pos:end="105:26">stride</name> <operator pos:start="105:28" pos:end="105:28">-</operator> <name pos:start="105:30" pos:end="105:52"><name pos:start="105:30" pos:end="105:32">ctx</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:45">num_hblocks</name><index pos:start="105:46" pos:end="105:52">[<expr pos:start="105:47" pos:end="105:51"><name pos:start="105:47" pos:end="105:51">plane</name></expr>]</index></name><operator pos:start="105:53" pos:end="105:53">)</operator><operator pos:start="105:54" pos:end="105:55">&lt;&lt;</operator><literal type="number" pos:start="105:56" pos:end="105:56">3</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="109:13" pos:end="109:84"><expr pos:start="109:13" pos:end="109:83"><call pos:start="109:13" pos:end="109:83"><name pos:start="109:13" pos:end="109:37">ff_thread_report_progress</name><argument_list pos:start="109:38" pos:end="109:83">(<argument pos:start="109:39" pos:end="109:68"><expr pos:start="109:39" pos:end="109:68"><operator pos:start="109:39" pos:end="109:39">&amp;</operator><name pos:start="109:40" pos:end="109:68"><name pos:start="109:40" pos:end="109:42">ctx</name><operator pos:start="109:43" pos:end="109:44">-&gt;</operator><name pos:start="109:45" pos:end="109:52">buf_ptrs</name><index pos:start="109:53" pos:end="109:68">[<expr pos:start="109:54" pos:end="109:67"><name pos:start="109:54" pos:end="109:67"><name pos:start="109:54" pos:end="109:56">ctx</name><operator pos:start="109:57" pos:end="109:58">-&gt;</operator><name pos:start="109:59" pos:end="109:67">cur_index</name></name></expr>]</index></name></expr></argument>, <argument pos:start="109:71" pos:end="109:79"><expr pos:start="109:71" pos:end="109:79"><name pos:start="109:71" pos:end="109:77">cur_row</name><operator pos:start="109:78" pos:end="109:79">++</operator></expr></argument>, <argument pos:start="109:82" pos:end="109:82"><expr pos:start="109:82" pos:end="109:82"><literal type="number" pos:start="109:82" pos:end="109:82">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
