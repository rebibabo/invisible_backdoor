<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17773.c" pos:tabs="8"><function pos:start="1:1" pos:end="227:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">v_resample16_altivec</name><parameter_list pos:start="1:26" pos:end="3:52">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:33">uint8_t</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">dst</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:53">dst_width</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:68">uint8_t</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">src</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:34"><decl pos:start="3:27" pos:end="3:34"><type pos:start="3:27" pos:end="3:34"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:34">wrap</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:51"><decl pos:start="3:37" pos:end="3:51"><type pos:start="3:37" pos:end="3:51"><name pos:start="3:37" pos:end="3:43">int16_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:51">filter</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="227:1">{<block_content pos:start="7:5" pos:end="225:5">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">sum</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:20">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:10">vector</name> <name pos:start="11:12" pos:end="11:19">unsigned</name> <name pos:start="11:21" pos:end="11:24">char</name> <modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:28">tv</name></decl>, <decl pos:start="11:31" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:26"/><name pos:start="11:31" pos:end="11:33">tmp</name></decl>, <decl pos:start="11:36" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:26"/><name pos:start="11:36" pos:end="11:39">dstv</name></decl>, <decl pos:start="11:42" pos:end="11:45"><type ref="prev" pos:start="11:5" pos:end="11:26"/><name pos:start="11:42" pos:end="11:45">zero</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">vec_ss_t</name></type> <name pos:start="13:14" pos:end="13:21"><name pos:start="13:14" pos:end="13:18">srchv</name><index pos:start="13:19" pos:end="13:21">[<expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">4</literal></expr>]</index></name></decl>, <decl pos:start="13:24" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:24" pos:end="13:31"><name pos:start="13:24" pos:end="13:28">srclv</name><index pos:start="13:29" pos:end="13:31">[<expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">4</literal></expr>]</index></name></decl>, <decl pos:start="13:34" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:34" pos:end="13:38"><name pos:start="13:34" pos:end="13:35">fv</name><index pos:start="13:36" pos:end="13:38">[<expr pos:start="13:37" pos:end="13:37"><literal type="number" pos:start="13:37" pos:end="13:37">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:10">vector</name> <name pos:start="15:12" pos:end="15:17">signed</name> <name pos:start="15:19" pos:end="15:23">short</name></type> <name pos:start="15:25" pos:end="15:29">zeros</name></decl>, <decl pos:start="15:32" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:23"/><name pos:start="15:32" pos:end="15:36">sumhv</name></decl>, <decl pos:start="15:39" pos:end="15:43"><type ref="prev" pos:start="15:5" pos:end="15:23"/><name pos:start="15:39" pos:end="15:43">sumlv</name></decl>;</decl_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:12"><expr pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:5">s</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <name pos:start="17:9" pos:end="17:11">src</name></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="41:5">for<control pos:start="21:8" pos:end="21:20">(<init pos:start="21:9" pos:end="21:12"><expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:9">i</name><operator pos:start="21:10" pos:end="21:10">=</operator><literal type="number" pos:start="21:11" pos:end="21:11">0</literal></expr>;</init><condition pos:start="21:13" pos:end="21:16"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:13">i</name><operator pos:start="21:14" pos:end="21:14">&lt;</operator><literal type="number" pos:start="21:15" pos:end="21:15">4</literal></expr>;</condition><incr pos:start="21:17" pos:end="21:19"><expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:17">i</name><operator pos:start="21:18" pos:end="21:19">++</operator></expr></incr>)</control>

    <block pos:start="23:5" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:40">

        <comment type="block" pos:start="25:9" pos:end="35:10">/*

           The vec_madds later on does an implicit &gt;&gt;15 on the result.

           Since FILTER_BITS is 8, and we have 15 bits of magnitude in

           a signed short, we have just enough bits to pre-shift our

           filter constants &lt;&lt;7 to compensate for vec_madds.

        */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:51"><expr pos:start="37:9" pos:end="37:50"><name pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:10">fv</name><index pos:start="37:11" pos:end="37:13">[<expr pos:start="37:12" pos:end="37:12"><name pos:start="37:12" pos:end="37:12">i</name></expr>]</index></name><operator pos:start="37:14" pos:end="37:14">.</operator><name pos:start="37:15" pos:end="37:18"><name pos:start="37:15" pos:end="37:15">s</name><index pos:start="37:16" pos:end="37:18">[<expr pos:start="37:17" pos:end="37:17"><literal type="number" pos:start="37:17" pos:end="37:17">0</literal></expr>]</index></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:30"><name pos:start="37:22" pos:end="37:27">filter</name><index pos:start="37:28" pos:end="37:30">[<expr pos:start="37:29" pos:end="37:29"><name pos:start="37:29" pos:end="37:29">i</name></expr>]</index></name> <operator pos:start="37:32" pos:end="37:33">&lt;&lt;</operator> <operator pos:start="37:35" pos:end="37:35">(</operator><literal type="number" pos:start="37:36" pos:end="37:38">15</literal><operator pos:start="37:38" pos:end="37:38">-</operator><name pos:start="37:39" pos:end="37:49">FILTER_BITS</name><operator pos:start="37:50" pos:end="37:50">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:10">fv</name><index pos:start="39:11" pos:end="39:13">[<expr pos:start="39:12" pos:end="39:12"><name pos:start="39:12" pos:end="39:12">i</name></expr>]</index></name><operator pos:start="39:14" pos:end="39:14">.</operator><name pos:start="39:15" pos:end="39:15">v</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:39"><name pos:start="39:19" pos:end="39:27">vec_splat</name><argument_list pos:start="39:28" pos:end="39:39">(<argument pos:start="39:29" pos:end="39:35"><expr pos:start="39:29" pos:end="39:35"><name pos:start="39:29" pos:end="39:33"><name pos:start="39:29" pos:end="39:30">fv</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">i</name></expr>]</index></name><operator pos:start="39:34" pos:end="39:34">.</operator><name pos:start="39:35" pos:end="39:35">v</name></expr></argument>, <argument pos:start="39:38" pos:end="39:38"><expr pos:start="39:38" pos:end="39:38"><literal type="number" pos:start="39:38" pos:end="39:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="45:5" pos:end="45:27"><expr pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:8">zero</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:26"><name pos:start="45:12" pos:end="45:23">vec_splat_u8</name><argument_list pos:start="45:24" pos:end="45:26">(<argument pos:start="45:25" pos:end="45:25"><expr pos:start="45:25" pos:end="45:25"><literal type="number" pos:start="45:25" pos:end="45:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:9">zeros</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:28"><name pos:start="47:13" pos:end="47:25">vec_splat_s16</name><argument_list pos:start="47:26" pos:end="47:28">(<argument pos:start="47:27" pos:end="47:27"><expr pos:start="47:27" pos:end="47:27"><literal type="number" pos:start="47:27" pos:end="47:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <comment type="block" pos:start="53:5" pos:end="65:6">/*

       When we're resampling, we'd ideally like both our input buffers,

       and output buffers to be 16-byte aligned, so we can do both aligned

       reads and writes. Sadly we can't always have this at the moment, so

       we opt for aligned writes, as unaligned writes have a huge overhead.

       To do this, do enough scalar resamples to get dst 16-byte aligned.

    */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:26"><expr pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:5">i</name> <operator pos:start="67:7" pos:end="67:7">=</operator> <operator pos:start="67:9" pos:end="67:9">(</operator><operator pos:start="67:10" pos:end="67:10">-</operator><operator pos:start="67:11" pos:end="67:11">(</operator><name pos:start="67:12" pos:end="67:14">int</name><operator pos:start="67:15" pos:end="67:15">)</operator><name pos:start="67:16" pos:end="67:18">dst</name><operator pos:start="67:19" pos:end="67:19">)</operator> <operator pos:start="67:21" pos:end="67:21">&amp;</operator> <literal type="number" pos:start="67:23" pos:end="67:25">0xf</literal></expr>;</expr_stmt>

    <while pos:start="69:5" pos:end="93:5">while<condition pos:start="69:10" pos:end="69:14">(<expr pos:start="69:11" pos:end="69:13"><name pos:start="69:11" pos:end="69:11">i</name><operator pos:start="69:12" pos:end="69:12">&gt;</operator><literal type="number" pos:start="69:13" pos:end="69:13">0</literal></expr>)</condition> <block pos:start="69:16" pos:end="93:5">{<block_content pos:start="71:9" pos:end="91:12">

        <expr_stmt pos:start="71:9" pos:end="77:32"><expr pos:start="71:9" pos:end="77:31"><name pos:start="71:9" pos:end="71:11">sum</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <name pos:start="71:15" pos:end="71:25"><name pos:start="71:15" pos:end="71:15">s</name><index pos:start="71:16" pos:end="71:25">[<expr pos:start="71:17" pos:end="71:24"><literal type="number" pos:start="71:17" pos:end="71:17">0</literal> <operator pos:start="71:19" pos:end="71:19">*</operator> <name pos:start="71:21" pos:end="71:24">wrap</name></expr>]</index></name> <operator pos:start="71:27" pos:end="71:27">*</operator> <name pos:start="71:29" pos:end="71:37"><name pos:start="71:29" pos:end="71:34">filter</name><index pos:start="71:35" pos:end="71:37">[<expr pos:start="71:36" pos:end="71:36"><literal type="number" pos:start="71:36" pos:end="71:36">0</literal></expr>]</index></name> <operator pos:start="71:39" pos:end="71:39">+</operator>

        <name pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:9">s</name><index pos:start="73:10" pos:end="73:19">[<expr pos:start="73:11" pos:end="73:18"><literal type="number" pos:start="73:11" pos:end="73:11">1</literal> <operator pos:start="73:13" pos:end="73:13">*</operator> <name pos:start="73:15" pos:end="73:18">wrap</name></expr>]</index></name> <operator pos:start="73:21" pos:end="73:21">*</operator> <name pos:start="73:23" pos:end="73:31"><name pos:start="73:23" pos:end="73:28">filter</name><index pos:start="73:29" pos:end="73:31">[<expr pos:start="73:30" pos:end="73:30"><literal type="number" pos:start="73:30" pos:end="73:30">1</literal></expr>]</index></name> <operator pos:start="73:33" pos:end="73:33">+</operator>

        <name pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:9">s</name><index pos:start="75:10" pos:end="75:19">[<expr pos:start="75:11" pos:end="75:18"><literal type="number" pos:start="75:11" pos:end="75:11">2</literal> <operator pos:start="75:13" pos:end="75:13">*</operator> <name pos:start="75:15" pos:end="75:18">wrap</name></expr>]</index></name> <operator pos:start="75:21" pos:end="75:21">*</operator> <name pos:start="75:23" pos:end="75:31"><name pos:start="75:23" pos:end="75:28">filter</name><index pos:start="75:29" pos:end="75:31">[<expr pos:start="75:30" pos:end="75:30"><literal type="number" pos:start="75:30" pos:end="75:30">2</literal></expr>]</index></name> <operator pos:start="75:33" pos:end="75:33">+</operator>

        <name pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:9">s</name><index pos:start="77:10" pos:end="77:19">[<expr pos:start="77:11" pos:end="77:18"><literal type="number" pos:start="77:11" pos:end="77:11">3</literal> <operator pos:start="77:13" pos:end="77:13">*</operator> <name pos:start="77:15" pos:end="77:18">wrap</name></expr>]</index></name> <operator pos:start="77:21" pos:end="77:21">*</operator> <name pos:start="77:23" pos:end="77:31"><name pos:start="77:23" pos:end="77:28">filter</name><index pos:start="77:29" pos:end="77:31">[<expr pos:start="77:30" pos:end="77:30"><literal type="number" pos:start="77:30" pos:end="77:30">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:33"><expr pos:start="79:9" pos:end="79:32"><name pos:start="79:9" pos:end="79:11">sum</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:17">sum</name> <operator pos:start="79:19" pos:end="79:20">&gt;&gt;</operator> <name pos:start="79:22" pos:end="79:32">FILTER_BITS</name></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="81:54"><if pos:start="81:9" pos:end="81:27">if <condition pos:start="81:12" pos:end="81:18">(<expr pos:start="81:13" pos:end="81:17"><name pos:start="81:13" pos:end="81:15">sum</name><operator pos:start="81:16" pos:end="81:16">&lt;</operator><literal type="number" pos:start="81:17" pos:end="81:17">0</literal></expr>)</condition><block type="pseudo" pos:start="81:20" pos:end="81:27"><block_content pos:start="81:20" pos:end="81:27"> <expr_stmt pos:start="81:20" pos:end="81:27"><expr pos:start="81:20" pos:end="81:26"><name pos:start="81:20" pos:end="81:22">sum</name> <operator pos:start="81:24" pos:end="81:24">=</operator> <literal type="number" pos:start="81:26" pos:end="81:26">0</literal></expr>;</expr_stmt></block_content></block></if> <if type="elseif" pos:start="81:29" pos:end="81:54">else if <condition pos:start="81:37" pos:end="81:45">(<expr pos:start="81:38" pos:end="81:44"><name pos:start="81:38" pos:end="81:40">sum</name><operator pos:start="81:41" pos:end="81:41">&gt;</operator><literal type="number" pos:start="81:42" pos:end="81:44">255</literal></expr>)</condition><block type="pseudo" pos:start="81:47" pos:end="81:54"><block_content pos:start="81:47" pos:end="81:54"> <expr_stmt pos:start="81:47" pos:end="81:54"><expr pos:start="81:47" pos:end="81:53"><name pos:start="81:47" pos:end="81:49">sum</name><operator pos:start="81:50" pos:end="81:50">=</operator><literal type="number" pos:start="81:51" pos:end="81:53">255</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:21"><expr pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:14"><name pos:start="83:9" pos:end="83:11">dst</name><index pos:start="83:12" pos:end="83:14">[<expr pos:start="83:13" pos:end="83:13"><literal type="number" pos:start="83:13" pos:end="83:13">0</literal></expr>]</index></name> <operator pos:start="83:16" pos:end="83:16">=</operator> <name pos:start="83:18" pos:end="83:20">sum</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:14"><expr pos:start="85:9" pos:end="85:13"><name pos:start="85:9" pos:end="85:11">dst</name><operator pos:start="85:12" pos:end="85:13">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:12"><expr pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:20"><expr pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:17">dst_width</name><operator pos:start="89:18" pos:end="89:19">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:12"><expr pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:9">i</name><operator pos:start="91:10" pos:end="91:11">--</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="97:5" pos:end="97:57">/* Do our altivec resampling on 16 pixels at once. */</comment>

    <while pos:start="99:5" pos:end="191:5">while<condition pos:start="99:10" pos:end="99:24">(<expr pos:start="99:11" pos:end="99:23"><name pos:start="99:11" pos:end="99:19">dst_width</name><operator pos:start="99:20" pos:end="99:21">&gt;=</operator><literal type="number" pos:start="99:22" pos:end="99:23">16</literal></expr>)</condition> <block pos:start="99:26" pos:end="191:5">{<block_content pos:start="115:9" pos:end="189:22">

        <comment type="block" pos:start="101:9" pos:end="113:10">/*

           Read 16 (potentially unaligned) bytes from each of

           4 lines into 4 vectors, and split them into shorts.

           Interleave the multipy/accumulate for the resample

           filter with the loads to hide the 3 cycle latency

           the vec_madds have.

        */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:51"><expr pos:start="115:9" pos:end="115:50"><name pos:start="115:9" pos:end="115:10">tv</name> <operator pos:start="115:12" pos:end="115:12">=</operator> <operator pos:start="115:14" pos:end="115:14">(</operator><name pos:start="115:15" pos:end="115:20">vector</name> <name pos:start="115:22" pos:end="115:29">unsigned</name> <name pos:start="115:31" pos:end="115:34">char</name> <operator pos:start="115:36" pos:end="115:36">*</operator><operator pos:start="115:37" pos:end="115:37">)</operator> <operator pos:start="115:39" pos:end="115:39">&amp;</operator><name pos:start="115:40" pos:end="115:50"><name pos:start="115:40" pos:end="115:40">s</name><index pos:start="115:41" pos:end="115:50">[<expr pos:start="115:42" pos:end="115:49"><literal type="number" pos:start="115:42" pos:end="115:42">0</literal> <operator pos:start="115:44" pos:end="115:44">*</operator> <name pos:start="115:46" pos:end="115:49">wrap</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:64"><expr pos:start="117:9" pos:end="117:63"><name pos:start="117:9" pos:end="117:11">tmp</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <call pos:start="117:15" pos:end="117:63"><name pos:start="117:15" pos:end="117:22">vec_perm</name><argument_list pos:start="117:23" pos:end="117:63">(<argument pos:start="117:24" pos:end="117:28"><expr pos:start="117:24" pos:end="117:28"><name pos:start="117:24" pos:end="117:28"><name pos:start="117:24" pos:end="117:25">tv</name><index pos:start="117:26" pos:end="117:28">[<expr pos:start="117:27" pos:end="117:27"><literal type="number" pos:start="117:27" pos:end="117:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="117:31" pos:end="117:35"><expr pos:start="117:31" pos:end="117:35"><name pos:start="117:31" pos:end="117:35"><name pos:start="117:31" pos:end="117:32">tv</name><index pos:start="117:33" pos:end="117:35">[<expr pos:start="117:34" pos:end="117:34"><literal type="number" pos:start="117:34" pos:end="117:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="117:38" pos:end="117:62"><expr pos:start="117:38" pos:end="117:62"><call pos:start="117:38" pos:end="117:62"><name pos:start="117:38" pos:end="117:45">vec_lvsl</name><argument_list pos:start="117:46" pos:end="117:62">(<argument pos:start="117:47" pos:end="117:47"><expr pos:start="117:47" pos:end="117:47"><literal type="number" pos:start="117:47" pos:end="117:47">0</literal></expr></argument>, <argument pos:start="117:50" pos:end="117:61"><expr pos:start="117:50" pos:end="117:61"><operator pos:start="117:50" pos:end="117:50">&amp;</operator><name pos:start="117:51" pos:end="117:61"><name pos:start="117:51" pos:end="117:51">s</name><index pos:start="117:52" pos:end="117:61">[<expr pos:start="117:53" pos:end="117:60"><name pos:start="117:53" pos:end="117:53">i</name> <operator pos:start="117:55" pos:end="117:55">*</operator> <name pos:start="117:57" pos:end="117:60">wrap</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:65"><expr pos:start="119:9" pos:end="119:64"><name pos:start="119:9" pos:end="119:16"><name pos:start="119:9" pos:end="119:13">srchv</name><index pos:start="119:14" pos:end="119:16">[<expr pos:start="119:15" pos:end="119:15"><literal type="number" pos:start="119:15" pos:end="119:15">0</literal></expr>]</index></name><operator pos:start="119:17" pos:end="119:17">.</operator><name pos:start="119:18" pos:end="119:18">v</name> <operator pos:start="119:20" pos:end="119:20">=</operator> <operator pos:start="119:22" pos:end="119:22">(</operator><name pos:start="119:23" pos:end="119:28">vector</name> <name pos:start="119:30" pos:end="119:35">signed</name> <name pos:start="119:37" pos:end="119:41">short</name><operator pos:start="119:42" pos:end="119:42">)</operator> <call pos:start="119:44" pos:end="119:64"><name pos:start="119:44" pos:end="119:53">vec_mergeh</name><argument_list pos:start="119:54" pos:end="119:64">(<argument pos:start="119:55" pos:end="119:58"><expr pos:start="119:55" pos:end="119:58"><name pos:start="119:55" pos:end="119:58">zero</name></expr></argument>, <argument pos:start="119:61" pos:end="119:63"><expr pos:start="119:61" pos:end="119:63"><name pos:start="119:61" pos:end="119:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:65"><expr pos:start="121:9" pos:end="121:64"><name pos:start="121:9" pos:end="121:16"><name pos:start="121:9" pos:end="121:13">srclv</name><index pos:start="121:14" pos:end="121:16">[<expr pos:start="121:15" pos:end="121:15"><literal type="number" pos:start="121:15" pos:end="121:15">0</literal></expr>]</index></name><operator pos:start="121:17" pos:end="121:17">.</operator><name pos:start="121:18" pos:end="121:18">v</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <operator pos:start="121:22" pos:end="121:22">(</operator><name pos:start="121:23" pos:end="121:28">vector</name> <name pos:start="121:30" pos:end="121:35">signed</name> <name pos:start="121:37" pos:end="121:41">short</name><operator pos:start="121:42" pos:end="121:42">)</operator> <call pos:start="121:44" pos:end="121:64"><name pos:start="121:44" pos:end="121:53">vec_mergel</name><argument_list pos:start="121:54" pos:end="121:64">(<argument pos:start="121:55" pos:end="121:58"><expr pos:start="121:55" pos:end="121:58"><name pos:start="121:55" pos:end="121:58">zero</name></expr></argument>, <argument pos:start="121:61" pos:end="121:63"><expr pos:start="121:61" pos:end="121:63"><name pos:start="121:61" pos:end="121:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:54"><expr pos:start="123:9" pos:end="123:53"><name pos:start="123:9" pos:end="123:13">sumhv</name> <operator pos:start="123:15" pos:end="123:15">=</operator> <call pos:start="123:17" pos:end="123:53"><name pos:start="123:17" pos:end="123:25">vec_madds</name><argument_list pos:start="123:26" pos:end="123:53">(<argument pos:start="123:27" pos:end="123:36"><expr pos:start="123:27" pos:end="123:36"><name pos:start="123:27" pos:end="123:34"><name pos:start="123:27" pos:end="123:31">srchv</name><index pos:start="123:32" pos:end="123:34">[<expr pos:start="123:33" pos:end="123:33"><literal type="number" pos:start="123:33" pos:end="123:33">0</literal></expr>]</index></name><operator pos:start="123:35" pos:end="123:35">.</operator><name pos:start="123:36" pos:end="123:36">v</name></expr></argument>, <argument pos:start="123:39" pos:end="123:45"><expr pos:start="123:39" pos:end="123:45"><name pos:start="123:39" pos:end="123:43"><name pos:start="123:39" pos:end="123:40">fv</name><index pos:start="123:41" pos:end="123:43">[<expr pos:start="123:42" pos:end="123:42"><literal type="number" pos:start="123:42" pos:end="123:42">0</literal></expr>]</index></name><operator pos:start="123:44" pos:end="123:44">.</operator><name pos:start="123:45" pos:end="123:45">v</name></expr></argument>, <argument pos:start="123:48" pos:end="123:52"><expr pos:start="123:48" pos:end="123:52"><name pos:start="123:48" pos:end="123:52">zeros</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:54"><expr pos:start="125:9" pos:end="125:53"><name pos:start="125:9" pos:end="125:13">sumlv</name> <operator pos:start="125:15" pos:end="125:15">=</operator> <call pos:start="125:17" pos:end="125:53"><name pos:start="125:17" pos:end="125:25">vec_madds</name><argument_list pos:start="125:26" pos:end="125:53">(<argument pos:start="125:27" pos:end="125:36"><expr pos:start="125:27" pos:end="125:36"><name pos:start="125:27" pos:end="125:34"><name pos:start="125:27" pos:end="125:31">srclv</name><index pos:start="125:32" pos:end="125:34">[<expr pos:start="125:33" pos:end="125:33"><literal type="number" pos:start="125:33" pos:end="125:33">0</literal></expr>]</index></name><operator pos:start="125:35" pos:end="125:35">.</operator><name pos:start="125:36" pos:end="125:36">v</name></expr></argument>, <argument pos:start="125:39" pos:end="125:45"><expr pos:start="125:39" pos:end="125:45"><name pos:start="125:39" pos:end="125:43"><name pos:start="125:39" pos:end="125:40">fv</name><index pos:start="125:41" pos:end="125:43">[<expr pos:start="125:42" pos:end="125:42"><literal type="number" pos:start="125:42" pos:end="125:42">0</literal></expr>]</index></name><operator pos:start="125:44" pos:end="125:44">.</operator><name pos:start="125:45" pos:end="125:45">v</name></expr></argument>, <argument pos:start="125:48" pos:end="125:52"><expr pos:start="125:48" pos:end="125:52"><name pos:start="125:48" pos:end="125:52">zeros</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:51"><expr pos:start="129:9" pos:end="129:50"><name pos:start="129:9" pos:end="129:10">tv</name> <operator pos:start="129:12" pos:end="129:12">=</operator> <operator pos:start="129:14" pos:end="129:14">(</operator><name pos:start="129:15" pos:end="129:20">vector</name> <name pos:start="129:22" pos:end="129:29">unsigned</name> <name pos:start="129:31" pos:end="129:34">char</name> <operator pos:start="129:36" pos:end="129:36">*</operator><operator pos:start="129:37" pos:end="129:37">)</operator> <operator pos:start="129:39" pos:end="129:39">&amp;</operator><name pos:start="129:40" pos:end="129:50"><name pos:start="129:40" pos:end="129:40">s</name><index pos:start="129:41" pos:end="129:50">[<expr pos:start="129:42" pos:end="129:49"><literal type="number" pos:start="129:42" pos:end="129:42">1</literal> <operator pos:start="129:44" pos:end="129:44">*</operator> <name pos:start="129:46" pos:end="129:49">wrap</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:64"><expr pos:start="131:9" pos:end="131:63"><name pos:start="131:9" pos:end="131:11">tmp</name> <operator pos:start="131:13" pos:end="131:13">=</operator> <call pos:start="131:15" pos:end="131:63"><name pos:start="131:15" pos:end="131:22">vec_perm</name><argument_list pos:start="131:23" pos:end="131:63">(<argument pos:start="131:24" pos:end="131:28"><expr pos:start="131:24" pos:end="131:28"><name pos:start="131:24" pos:end="131:28"><name pos:start="131:24" pos:end="131:25">tv</name><index pos:start="131:26" pos:end="131:28">[<expr pos:start="131:27" pos:end="131:27"><literal type="number" pos:start="131:27" pos:end="131:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="131:31" pos:end="131:35"><expr pos:start="131:31" pos:end="131:35"><name pos:start="131:31" pos:end="131:35"><name pos:start="131:31" pos:end="131:32">tv</name><index pos:start="131:33" pos:end="131:35">[<expr pos:start="131:34" pos:end="131:34"><literal type="number" pos:start="131:34" pos:end="131:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="131:38" pos:end="131:62"><expr pos:start="131:38" pos:end="131:62"><call pos:start="131:38" pos:end="131:62"><name pos:start="131:38" pos:end="131:45">vec_lvsl</name><argument_list pos:start="131:46" pos:end="131:62">(<argument pos:start="131:47" pos:end="131:47"><expr pos:start="131:47" pos:end="131:47"><literal type="number" pos:start="131:47" pos:end="131:47">0</literal></expr></argument>, <argument pos:start="131:50" pos:end="131:61"><expr pos:start="131:50" pos:end="131:61"><operator pos:start="131:50" pos:end="131:50">&amp;</operator><name pos:start="131:51" pos:end="131:61"><name pos:start="131:51" pos:end="131:51">s</name><index pos:start="131:52" pos:end="131:61">[<expr pos:start="131:53" pos:end="131:60"><literal type="number" pos:start="131:53" pos:end="131:53">1</literal> <operator pos:start="131:55" pos:end="131:55">*</operator> <name pos:start="131:57" pos:end="131:60">wrap</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:65"><expr pos:start="133:9" pos:end="133:64"><name pos:start="133:9" pos:end="133:16"><name pos:start="133:9" pos:end="133:13">srchv</name><index pos:start="133:14" pos:end="133:16">[<expr pos:start="133:15" pos:end="133:15"><literal type="number" pos:start="133:15" pos:end="133:15">1</literal></expr>]</index></name><operator pos:start="133:17" pos:end="133:17">.</operator><name pos:start="133:18" pos:end="133:18">v</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <operator pos:start="133:22" pos:end="133:22">(</operator><name pos:start="133:23" pos:end="133:28">vector</name> <name pos:start="133:30" pos:end="133:35">signed</name> <name pos:start="133:37" pos:end="133:41">short</name><operator pos:start="133:42" pos:end="133:42">)</operator> <call pos:start="133:44" pos:end="133:64"><name pos:start="133:44" pos:end="133:53">vec_mergeh</name><argument_list pos:start="133:54" pos:end="133:64">(<argument pos:start="133:55" pos:end="133:58"><expr pos:start="133:55" pos:end="133:58"><name pos:start="133:55" pos:end="133:58">zero</name></expr></argument>, <argument pos:start="133:61" pos:end="133:63"><expr pos:start="133:61" pos:end="133:63"><name pos:start="133:61" pos:end="133:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:65"><expr pos:start="135:9" pos:end="135:64"><name pos:start="135:9" pos:end="135:16"><name pos:start="135:9" pos:end="135:13">srclv</name><index pos:start="135:14" pos:end="135:16">[<expr pos:start="135:15" pos:end="135:15"><literal type="number" pos:start="135:15" pos:end="135:15">1</literal></expr>]</index></name><operator pos:start="135:17" pos:end="135:17">.</operator><name pos:start="135:18" pos:end="135:18">v</name> <operator pos:start="135:20" pos:end="135:20">=</operator> <operator pos:start="135:22" pos:end="135:22">(</operator><name pos:start="135:23" pos:end="135:28">vector</name> <name pos:start="135:30" pos:end="135:35">signed</name> <name pos:start="135:37" pos:end="135:41">short</name><operator pos:start="135:42" pos:end="135:42">)</operator> <call pos:start="135:44" pos:end="135:64"><name pos:start="135:44" pos:end="135:53">vec_mergel</name><argument_list pos:start="135:54" pos:end="135:64">(<argument pos:start="135:55" pos:end="135:58"><expr pos:start="135:55" pos:end="135:58"><name pos:start="135:55" pos:end="135:58">zero</name></expr></argument>, <argument pos:start="135:61" pos:end="135:63"><expr pos:start="135:61" pos:end="135:63"><name pos:start="135:61" pos:end="135:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:54"><expr pos:start="137:9" pos:end="137:53"><name pos:start="137:9" pos:end="137:13">sumhv</name> <operator pos:start="137:15" pos:end="137:15">=</operator> <call pos:start="137:17" pos:end="137:53"><name pos:start="137:17" pos:end="137:25">vec_madds</name><argument_list pos:start="137:26" pos:end="137:53">(<argument pos:start="137:27" pos:end="137:36"><expr pos:start="137:27" pos:end="137:36"><name pos:start="137:27" pos:end="137:34"><name pos:start="137:27" pos:end="137:31">srchv</name><index pos:start="137:32" pos:end="137:34">[<expr pos:start="137:33" pos:end="137:33"><literal type="number" pos:start="137:33" pos:end="137:33">1</literal></expr>]</index></name><operator pos:start="137:35" pos:end="137:35">.</operator><name pos:start="137:36" pos:end="137:36">v</name></expr></argument>, <argument pos:start="137:39" pos:end="137:45"><expr pos:start="137:39" pos:end="137:45"><name pos:start="137:39" pos:end="137:43"><name pos:start="137:39" pos:end="137:40">fv</name><index pos:start="137:41" pos:end="137:43">[<expr pos:start="137:42" pos:end="137:42"><literal type="number" pos:start="137:42" pos:end="137:42">1</literal></expr>]</index></name><operator pos:start="137:44" pos:end="137:44">.</operator><name pos:start="137:45" pos:end="137:45">v</name></expr></argument>, <argument pos:start="137:48" pos:end="137:52"><expr pos:start="137:48" pos:end="137:52"><name pos:start="137:48" pos:end="137:52">sumhv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:54"><expr pos:start="139:9" pos:end="139:53"><name pos:start="139:9" pos:end="139:13">sumlv</name> <operator pos:start="139:15" pos:end="139:15">=</operator> <call pos:start="139:17" pos:end="139:53"><name pos:start="139:17" pos:end="139:25">vec_madds</name><argument_list pos:start="139:26" pos:end="139:53">(<argument pos:start="139:27" pos:end="139:36"><expr pos:start="139:27" pos:end="139:36"><name pos:start="139:27" pos:end="139:34"><name pos:start="139:27" pos:end="139:31">srclv</name><index pos:start="139:32" pos:end="139:34">[<expr pos:start="139:33" pos:end="139:33"><literal type="number" pos:start="139:33" pos:end="139:33">1</literal></expr>]</index></name><operator pos:start="139:35" pos:end="139:35">.</operator><name pos:start="139:36" pos:end="139:36">v</name></expr></argument>, <argument pos:start="139:39" pos:end="139:45"><expr pos:start="139:39" pos:end="139:45"><name pos:start="139:39" pos:end="139:43"><name pos:start="139:39" pos:end="139:40">fv</name><index pos:start="139:41" pos:end="139:43">[<expr pos:start="139:42" pos:end="139:42"><literal type="number" pos:start="139:42" pos:end="139:42">1</literal></expr>]</index></name><operator pos:start="139:44" pos:end="139:44">.</operator><name pos:start="139:45" pos:end="139:45">v</name></expr></argument>, <argument pos:start="139:48" pos:end="139:52"><expr pos:start="139:48" pos:end="139:52"><name pos:start="139:48" pos:end="139:52">sumlv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:51"><expr pos:start="143:9" pos:end="143:50"><name pos:start="143:9" pos:end="143:10">tv</name> <operator pos:start="143:12" pos:end="143:12">=</operator> <operator pos:start="143:14" pos:end="143:14">(</operator><name pos:start="143:15" pos:end="143:20">vector</name> <name pos:start="143:22" pos:end="143:29">unsigned</name> <name pos:start="143:31" pos:end="143:34">char</name> <operator pos:start="143:36" pos:end="143:36">*</operator><operator pos:start="143:37" pos:end="143:37">)</operator> <operator pos:start="143:39" pos:end="143:39">&amp;</operator><name pos:start="143:40" pos:end="143:50"><name pos:start="143:40" pos:end="143:40">s</name><index pos:start="143:41" pos:end="143:50">[<expr pos:start="143:42" pos:end="143:49"><literal type="number" pos:start="143:42" pos:end="143:42">2</literal> <operator pos:start="143:44" pos:end="143:44">*</operator> <name pos:start="143:46" pos:end="143:49">wrap</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:64"><expr pos:start="145:9" pos:end="145:63"><name pos:start="145:9" pos:end="145:11">tmp</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <call pos:start="145:15" pos:end="145:63"><name pos:start="145:15" pos:end="145:22">vec_perm</name><argument_list pos:start="145:23" pos:end="145:63">(<argument pos:start="145:24" pos:end="145:28"><expr pos:start="145:24" pos:end="145:28"><name pos:start="145:24" pos:end="145:28"><name pos:start="145:24" pos:end="145:25">tv</name><index pos:start="145:26" pos:end="145:28">[<expr pos:start="145:27" pos:end="145:27"><literal type="number" pos:start="145:27" pos:end="145:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="145:31" pos:end="145:35"><expr pos:start="145:31" pos:end="145:35"><name pos:start="145:31" pos:end="145:35"><name pos:start="145:31" pos:end="145:32">tv</name><index pos:start="145:33" pos:end="145:35">[<expr pos:start="145:34" pos:end="145:34"><literal type="number" pos:start="145:34" pos:end="145:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="145:38" pos:end="145:62"><expr pos:start="145:38" pos:end="145:62"><call pos:start="145:38" pos:end="145:62"><name pos:start="145:38" pos:end="145:45">vec_lvsl</name><argument_list pos:start="145:46" pos:end="145:62">(<argument pos:start="145:47" pos:end="145:47"><expr pos:start="145:47" pos:end="145:47"><literal type="number" pos:start="145:47" pos:end="145:47">0</literal></expr></argument>, <argument pos:start="145:50" pos:end="145:61"><expr pos:start="145:50" pos:end="145:61"><operator pos:start="145:50" pos:end="145:50">&amp;</operator><name pos:start="145:51" pos:end="145:61"><name pos:start="145:51" pos:end="145:51">s</name><index pos:start="145:52" pos:end="145:61">[<expr pos:start="145:53" pos:end="145:60"><literal type="number" pos:start="145:53" pos:end="145:53">2</literal> <operator pos:start="145:55" pos:end="145:55">*</operator> <name pos:start="145:57" pos:end="145:60">wrap</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:65"><expr pos:start="147:9" pos:end="147:64"><name pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:13">srchv</name><index pos:start="147:14" pos:end="147:16">[<expr pos:start="147:15" pos:end="147:15"><literal type="number" pos:start="147:15" pos:end="147:15">2</literal></expr>]</index></name><operator pos:start="147:17" pos:end="147:17">.</operator><name pos:start="147:18" pos:end="147:18">v</name> <operator pos:start="147:20" pos:end="147:20">=</operator> <operator pos:start="147:22" pos:end="147:22">(</operator><name pos:start="147:23" pos:end="147:28">vector</name> <name pos:start="147:30" pos:end="147:35">signed</name> <name pos:start="147:37" pos:end="147:41">short</name><operator pos:start="147:42" pos:end="147:42">)</operator> <call pos:start="147:44" pos:end="147:64"><name pos:start="147:44" pos:end="147:53">vec_mergeh</name><argument_list pos:start="147:54" pos:end="147:64">(<argument pos:start="147:55" pos:end="147:58"><expr pos:start="147:55" pos:end="147:58"><name pos:start="147:55" pos:end="147:58">zero</name></expr></argument>, <argument pos:start="147:61" pos:end="147:63"><expr pos:start="147:61" pos:end="147:63"><name pos:start="147:61" pos:end="147:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:65"><expr pos:start="149:9" pos:end="149:64"><name pos:start="149:9" pos:end="149:16"><name pos:start="149:9" pos:end="149:13">srclv</name><index pos:start="149:14" pos:end="149:16">[<expr pos:start="149:15" pos:end="149:15"><literal type="number" pos:start="149:15" pos:end="149:15">2</literal></expr>]</index></name><operator pos:start="149:17" pos:end="149:17">.</operator><name pos:start="149:18" pos:end="149:18">v</name> <operator pos:start="149:20" pos:end="149:20">=</operator> <operator pos:start="149:22" pos:end="149:22">(</operator><name pos:start="149:23" pos:end="149:28">vector</name> <name pos:start="149:30" pos:end="149:35">signed</name> <name pos:start="149:37" pos:end="149:41">short</name><operator pos:start="149:42" pos:end="149:42">)</operator> <call pos:start="149:44" pos:end="149:64"><name pos:start="149:44" pos:end="149:53">vec_mergel</name><argument_list pos:start="149:54" pos:end="149:64">(<argument pos:start="149:55" pos:end="149:58"><expr pos:start="149:55" pos:end="149:58"><name pos:start="149:55" pos:end="149:58">zero</name></expr></argument>, <argument pos:start="149:61" pos:end="149:63"><expr pos:start="149:61" pos:end="149:63"><name pos:start="149:61" pos:end="149:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:54"><expr pos:start="151:9" pos:end="151:53"><name pos:start="151:9" pos:end="151:13">sumhv</name> <operator pos:start="151:15" pos:end="151:15">=</operator> <call pos:start="151:17" pos:end="151:53"><name pos:start="151:17" pos:end="151:25">vec_madds</name><argument_list pos:start="151:26" pos:end="151:53">(<argument pos:start="151:27" pos:end="151:36"><expr pos:start="151:27" pos:end="151:36"><name pos:start="151:27" pos:end="151:34"><name pos:start="151:27" pos:end="151:31">srchv</name><index pos:start="151:32" pos:end="151:34">[<expr pos:start="151:33" pos:end="151:33"><literal type="number" pos:start="151:33" pos:end="151:33">2</literal></expr>]</index></name><operator pos:start="151:35" pos:end="151:35">.</operator><name pos:start="151:36" pos:end="151:36">v</name></expr></argument>, <argument pos:start="151:39" pos:end="151:45"><expr pos:start="151:39" pos:end="151:45"><name pos:start="151:39" pos:end="151:43"><name pos:start="151:39" pos:end="151:40">fv</name><index pos:start="151:41" pos:end="151:43">[<expr pos:start="151:42" pos:end="151:42"><literal type="number" pos:start="151:42" pos:end="151:42">2</literal></expr>]</index></name><operator pos:start="151:44" pos:end="151:44">.</operator><name pos:start="151:45" pos:end="151:45">v</name></expr></argument>, <argument pos:start="151:48" pos:end="151:52"><expr pos:start="151:48" pos:end="151:52"><name pos:start="151:48" pos:end="151:52">sumhv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:54"><expr pos:start="153:9" pos:end="153:53"><name pos:start="153:9" pos:end="153:13">sumlv</name> <operator pos:start="153:15" pos:end="153:15">=</operator> <call pos:start="153:17" pos:end="153:53"><name pos:start="153:17" pos:end="153:25">vec_madds</name><argument_list pos:start="153:26" pos:end="153:53">(<argument pos:start="153:27" pos:end="153:36"><expr pos:start="153:27" pos:end="153:36"><name pos:start="153:27" pos:end="153:34"><name pos:start="153:27" pos:end="153:31">srclv</name><index pos:start="153:32" pos:end="153:34">[<expr pos:start="153:33" pos:end="153:33"><literal type="number" pos:start="153:33" pos:end="153:33">2</literal></expr>]</index></name><operator pos:start="153:35" pos:end="153:35">.</operator><name pos:start="153:36" pos:end="153:36">v</name></expr></argument>, <argument pos:start="153:39" pos:end="153:45"><expr pos:start="153:39" pos:end="153:45"><name pos:start="153:39" pos:end="153:43"><name pos:start="153:39" pos:end="153:40">fv</name><index pos:start="153:41" pos:end="153:43">[<expr pos:start="153:42" pos:end="153:42"><literal type="number" pos:start="153:42" pos:end="153:42">2</literal></expr>]</index></name><operator pos:start="153:44" pos:end="153:44">.</operator><name pos:start="153:45" pos:end="153:45">v</name></expr></argument>, <argument pos:start="153:48" pos:end="153:52"><expr pos:start="153:48" pos:end="153:52"><name pos:start="153:48" pos:end="153:52">sumlv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:51"><expr pos:start="157:9" pos:end="157:50"><name pos:start="157:9" pos:end="157:10">tv</name> <operator pos:start="157:12" pos:end="157:12">=</operator> <operator pos:start="157:14" pos:end="157:14">(</operator><name pos:start="157:15" pos:end="157:20">vector</name> <name pos:start="157:22" pos:end="157:29">unsigned</name> <name pos:start="157:31" pos:end="157:34">char</name> <operator pos:start="157:36" pos:end="157:36">*</operator><operator pos:start="157:37" pos:end="157:37">)</operator> <operator pos:start="157:39" pos:end="157:39">&amp;</operator><name pos:start="157:40" pos:end="157:50"><name pos:start="157:40" pos:end="157:40">s</name><index pos:start="157:41" pos:end="157:50">[<expr pos:start="157:42" pos:end="157:49"><literal type="number" pos:start="157:42" pos:end="157:42">3</literal> <operator pos:start="157:44" pos:end="157:44">*</operator> <name pos:start="157:46" pos:end="157:49">wrap</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:64"><expr pos:start="159:9" pos:end="159:63"><name pos:start="159:9" pos:end="159:11">tmp</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <call pos:start="159:15" pos:end="159:63"><name pos:start="159:15" pos:end="159:22">vec_perm</name><argument_list pos:start="159:23" pos:end="159:63">(<argument pos:start="159:24" pos:end="159:28"><expr pos:start="159:24" pos:end="159:28"><name pos:start="159:24" pos:end="159:28"><name pos:start="159:24" pos:end="159:25">tv</name><index pos:start="159:26" pos:end="159:28">[<expr pos:start="159:27" pos:end="159:27"><literal type="number" pos:start="159:27" pos:end="159:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="159:31" pos:end="159:35"><expr pos:start="159:31" pos:end="159:35"><name pos:start="159:31" pos:end="159:35"><name pos:start="159:31" pos:end="159:32">tv</name><index pos:start="159:33" pos:end="159:35">[<expr pos:start="159:34" pos:end="159:34"><literal type="number" pos:start="159:34" pos:end="159:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="159:38" pos:end="159:62"><expr pos:start="159:38" pos:end="159:62"><call pos:start="159:38" pos:end="159:62"><name pos:start="159:38" pos:end="159:45">vec_lvsl</name><argument_list pos:start="159:46" pos:end="159:62">(<argument pos:start="159:47" pos:end="159:47"><expr pos:start="159:47" pos:end="159:47"><literal type="number" pos:start="159:47" pos:end="159:47">0</literal></expr></argument>, <argument pos:start="159:50" pos:end="159:61"><expr pos:start="159:50" pos:end="159:61"><operator pos:start="159:50" pos:end="159:50">&amp;</operator><name pos:start="159:51" pos:end="159:61"><name pos:start="159:51" pos:end="159:51">s</name><index pos:start="159:52" pos:end="159:61">[<expr pos:start="159:53" pos:end="159:60"><literal type="number" pos:start="159:53" pos:end="159:53">3</literal> <operator pos:start="159:55" pos:end="159:55">*</operator> <name pos:start="159:57" pos:end="159:60">wrap</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:65"><expr pos:start="161:9" pos:end="161:64"><name pos:start="161:9" pos:end="161:16"><name pos:start="161:9" pos:end="161:13">srchv</name><index pos:start="161:14" pos:end="161:16">[<expr pos:start="161:15" pos:end="161:15"><literal type="number" pos:start="161:15" pos:end="161:15">3</literal></expr>]</index></name><operator pos:start="161:17" pos:end="161:17">.</operator><name pos:start="161:18" pos:end="161:18">v</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <operator pos:start="161:22" pos:end="161:22">(</operator><name pos:start="161:23" pos:end="161:28">vector</name> <name pos:start="161:30" pos:end="161:35">signed</name> <name pos:start="161:37" pos:end="161:41">short</name><operator pos:start="161:42" pos:end="161:42">)</operator> <call pos:start="161:44" pos:end="161:64"><name pos:start="161:44" pos:end="161:53">vec_mergeh</name><argument_list pos:start="161:54" pos:end="161:64">(<argument pos:start="161:55" pos:end="161:58"><expr pos:start="161:55" pos:end="161:58"><name pos:start="161:55" pos:end="161:58">zero</name></expr></argument>, <argument pos:start="161:61" pos:end="161:63"><expr pos:start="161:61" pos:end="161:63"><name pos:start="161:61" pos:end="161:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:65"><expr pos:start="163:9" pos:end="163:64"><name pos:start="163:9" pos:end="163:16"><name pos:start="163:9" pos:end="163:13">srclv</name><index pos:start="163:14" pos:end="163:16">[<expr pos:start="163:15" pos:end="163:15"><literal type="number" pos:start="163:15" pos:end="163:15">3</literal></expr>]</index></name><operator pos:start="163:17" pos:end="163:17">.</operator><name pos:start="163:18" pos:end="163:18">v</name> <operator pos:start="163:20" pos:end="163:20">=</operator> <operator pos:start="163:22" pos:end="163:22">(</operator><name pos:start="163:23" pos:end="163:28">vector</name> <name pos:start="163:30" pos:end="163:35">signed</name> <name pos:start="163:37" pos:end="163:41">short</name><operator pos:start="163:42" pos:end="163:42">)</operator> <call pos:start="163:44" pos:end="163:64"><name pos:start="163:44" pos:end="163:53">vec_mergel</name><argument_list pos:start="163:54" pos:end="163:64">(<argument pos:start="163:55" pos:end="163:58"><expr pos:start="163:55" pos:end="163:58"><name pos:start="163:55" pos:end="163:58">zero</name></expr></argument>, <argument pos:start="163:61" pos:end="163:63"><expr pos:start="163:61" pos:end="163:63"><name pos:start="163:61" pos:end="163:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:54"><expr pos:start="165:9" pos:end="165:53"><name pos:start="165:9" pos:end="165:13">sumhv</name> <operator pos:start="165:15" pos:end="165:15">=</operator> <call pos:start="165:17" pos:end="165:53"><name pos:start="165:17" pos:end="165:25">vec_madds</name><argument_list pos:start="165:26" pos:end="165:53">(<argument pos:start="165:27" pos:end="165:36"><expr pos:start="165:27" pos:end="165:36"><name pos:start="165:27" pos:end="165:34"><name pos:start="165:27" pos:end="165:31">srchv</name><index pos:start="165:32" pos:end="165:34">[<expr pos:start="165:33" pos:end="165:33"><literal type="number" pos:start="165:33" pos:end="165:33">3</literal></expr>]</index></name><operator pos:start="165:35" pos:end="165:35">.</operator><name pos:start="165:36" pos:end="165:36">v</name></expr></argument>, <argument pos:start="165:39" pos:end="165:45"><expr pos:start="165:39" pos:end="165:45"><name pos:start="165:39" pos:end="165:43"><name pos:start="165:39" pos:end="165:40">fv</name><index pos:start="165:41" pos:end="165:43">[<expr pos:start="165:42" pos:end="165:42"><literal type="number" pos:start="165:42" pos:end="165:42">3</literal></expr>]</index></name><operator pos:start="165:44" pos:end="165:44">.</operator><name pos:start="165:45" pos:end="165:45">v</name></expr></argument>, <argument pos:start="165:48" pos:end="165:52"><expr pos:start="165:48" pos:end="165:52"><name pos:start="165:48" pos:end="165:52">sumhv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:54"><expr pos:start="167:9" pos:end="167:53"><name pos:start="167:9" pos:end="167:13">sumlv</name> <operator pos:start="167:15" pos:end="167:15">=</operator> <call pos:start="167:17" pos:end="167:53"><name pos:start="167:17" pos:end="167:25">vec_madds</name><argument_list pos:start="167:26" pos:end="167:53">(<argument pos:start="167:27" pos:end="167:36"><expr pos:start="167:27" pos:end="167:36"><name pos:start="167:27" pos:end="167:34"><name pos:start="167:27" pos:end="167:31">srclv</name><index pos:start="167:32" pos:end="167:34">[<expr pos:start="167:33" pos:end="167:33"><literal type="number" pos:start="167:33" pos:end="167:33">3</literal></expr>]</index></name><operator pos:start="167:35" pos:end="167:35">.</operator><name pos:start="167:36" pos:end="167:36">v</name></expr></argument>, <argument pos:start="167:39" pos:end="167:45"><expr pos:start="167:39" pos:end="167:45"><name pos:start="167:39" pos:end="167:43"><name pos:start="167:39" pos:end="167:40">fv</name><index pos:start="167:41" pos:end="167:43">[<expr pos:start="167:42" pos:end="167:42"><literal type="number" pos:start="167:42" pos:end="167:42">3</literal></expr>]</index></name><operator pos:start="167:44" pos:end="167:44">.</operator><name pos:start="167:45" pos:end="167:45">v</name></expr></argument>, <argument pos:start="167:48" pos:end="167:52"><expr pos:start="167:48" pos:end="167:52"><name pos:start="167:48" pos:end="167:52">sumlv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="171:9" pos:end="177:10">/*

           Pack the results into our destination vector,

           and do an aligned write of that back to memory.

        */</comment>

        <expr_stmt pos:start="179:9" pos:end="179:41"><expr pos:start="179:9" pos:end="179:39"><name pos:start="179:9" pos:end="179:12">dstv</name> <operator pos:start="179:14" pos:end="179:14">=</operator> <call pos:start="179:16" pos:end="179:39"><name pos:start="179:16" pos:end="179:25">vec_packsu</name><argument_list pos:start="179:26" pos:end="179:39">(<argument pos:start="179:27" pos:end="179:31"><expr pos:start="179:27" pos:end="179:31"><name pos:start="179:27" pos:end="179:31">sumhv</name></expr></argument>, <argument pos:start="179:34" pos:end="179:38"><expr pos:start="179:34" pos:end="179:38"><name pos:start="179:34" pos:end="179:38">sumlv</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:54"><expr pos:start="181:9" pos:end="181:53"><call pos:start="181:9" pos:end="181:53"><name pos:start="181:9" pos:end="181:14">vec_st</name><argument_list pos:start="181:15" pos:end="181:53">(<argument pos:start="181:16" pos:end="181:19"><expr pos:start="181:16" pos:end="181:19"><name pos:start="181:16" pos:end="181:19">dstv</name></expr></argument>, <argument pos:start="181:22" pos:end="181:22"><expr pos:start="181:22" pos:end="181:22"><literal type="number" pos:start="181:22" pos:end="181:22">0</literal></expr></argument>, <argument pos:start="181:25" pos:end="181:52"><expr pos:start="181:25" pos:end="181:52"><operator pos:start="181:25" pos:end="181:25">(</operator><name pos:start="181:26" pos:end="181:31">vector</name> <name pos:start="181:33" pos:end="181:40">unsigned</name> <name pos:start="181:42" pos:end="181:45">char</name> <operator pos:start="181:47" pos:end="181:47">*</operator><operator pos:start="181:48" pos:end="181:48">)</operator> <name pos:start="181:50" pos:end="181:52">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="185:9" pos:end="185:16"><expr pos:start="185:9" pos:end="185:15"><name pos:start="185:9" pos:end="185:11">dst</name><operator pos:start="185:12" pos:end="185:13">+=</operator><literal type="number" pos:start="185:14" pos:end="185:15">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:14"><expr pos:start="187:9" pos:end="187:13"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">+=</operator><literal type="number" pos:start="187:12" pos:end="187:13">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:22"><expr pos:start="189:9" pos:end="189:21"><name pos:start="189:9" pos:end="189:17">dst_width</name><operator pos:start="189:18" pos:end="189:19">-=</operator><literal type="number" pos:start="189:20" pos:end="189:21">16</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="195:5" pos:end="201:6">/*

       If there are any leftover pixels, resample them

       with the slow scalar method.

    */</comment>

    <while pos:start="203:5" pos:end="225:5">while<condition pos:start="203:10" pos:end="203:22">(<expr pos:start="203:11" pos:end="203:21"><name pos:start="203:11" pos:end="203:19">dst_width</name><operator pos:start="203:20" pos:end="203:20">&gt;</operator><literal type="number" pos:start="203:21" pos:end="203:21">0</literal></expr>)</condition> <block pos:start="203:24" pos:end="225:5">{<block_content pos:start="205:9" pos:end="223:20">

        <expr_stmt pos:start="205:9" pos:end="211:32"><expr pos:start="205:9" pos:end="211:31"><name pos:start="205:9" pos:end="205:11">sum</name> <operator pos:start="205:13" pos:end="205:13">=</operator> <name pos:start="205:15" pos:end="205:25"><name pos:start="205:15" pos:end="205:15">s</name><index pos:start="205:16" pos:end="205:25">[<expr pos:start="205:17" pos:end="205:24"><literal type="number" pos:start="205:17" pos:end="205:17">0</literal> <operator pos:start="205:19" pos:end="205:19">*</operator> <name pos:start="205:21" pos:end="205:24">wrap</name></expr>]</index></name> <operator pos:start="205:27" pos:end="205:27">*</operator> <name pos:start="205:29" pos:end="205:37"><name pos:start="205:29" pos:end="205:34">filter</name><index pos:start="205:35" pos:end="205:37">[<expr pos:start="205:36" pos:end="205:36"><literal type="number" pos:start="205:36" pos:end="205:36">0</literal></expr>]</index></name> <operator pos:start="205:39" pos:end="205:39">+</operator>

        <name pos:start="207:9" pos:end="207:19"><name pos:start="207:9" pos:end="207:9">s</name><index pos:start="207:10" pos:end="207:19">[<expr pos:start="207:11" pos:end="207:18"><literal type="number" pos:start="207:11" pos:end="207:11">1</literal> <operator pos:start="207:13" pos:end="207:13">*</operator> <name pos:start="207:15" pos:end="207:18">wrap</name></expr>]</index></name> <operator pos:start="207:21" pos:end="207:21">*</operator> <name pos:start="207:23" pos:end="207:31"><name pos:start="207:23" pos:end="207:28">filter</name><index pos:start="207:29" pos:end="207:31">[<expr pos:start="207:30" pos:end="207:30"><literal type="number" pos:start="207:30" pos:end="207:30">1</literal></expr>]</index></name> <operator pos:start="207:33" pos:end="207:33">+</operator>

        <name pos:start="209:9" pos:end="209:19"><name pos:start="209:9" pos:end="209:9">s</name><index pos:start="209:10" pos:end="209:19">[<expr pos:start="209:11" pos:end="209:18"><literal type="number" pos:start="209:11" pos:end="209:11">2</literal> <operator pos:start="209:13" pos:end="209:13">*</operator> <name pos:start="209:15" pos:end="209:18">wrap</name></expr>]</index></name> <operator pos:start="209:21" pos:end="209:21">*</operator> <name pos:start="209:23" pos:end="209:31"><name pos:start="209:23" pos:end="209:28">filter</name><index pos:start="209:29" pos:end="209:31">[<expr pos:start="209:30" pos:end="209:30"><literal type="number" pos:start="209:30" pos:end="209:30">2</literal></expr>]</index></name> <operator pos:start="209:33" pos:end="209:33">+</operator>

        <name pos:start="211:9" pos:end="211:19"><name pos:start="211:9" pos:end="211:9">s</name><index pos:start="211:10" pos:end="211:19">[<expr pos:start="211:11" pos:end="211:18"><literal type="number" pos:start="211:11" pos:end="211:11">3</literal> <operator pos:start="211:13" pos:end="211:13">*</operator> <name pos:start="211:15" pos:end="211:18">wrap</name></expr>]</index></name> <operator pos:start="211:21" pos:end="211:21">*</operator> <name pos:start="211:23" pos:end="211:31"><name pos:start="211:23" pos:end="211:28">filter</name><index pos:start="211:29" pos:end="211:31">[<expr pos:start="211:30" pos:end="211:30"><literal type="number" pos:start="211:30" pos:end="211:30">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:33"><expr pos:start="213:9" pos:end="213:32"><name pos:start="213:9" pos:end="213:11">sum</name> <operator pos:start="213:13" pos:end="213:13">=</operator> <name pos:start="213:15" pos:end="213:17">sum</name> <operator pos:start="213:19" pos:end="213:20">&gt;&gt;</operator> <name pos:start="213:22" pos:end="213:32">FILTER_BITS</name></expr>;</expr_stmt>

        <if_stmt pos:start="215:9" pos:end="215:54"><if pos:start="215:9" pos:end="215:27">if <condition pos:start="215:12" pos:end="215:18">(<expr pos:start="215:13" pos:end="215:17"><name pos:start="215:13" pos:end="215:15">sum</name><operator pos:start="215:16" pos:end="215:16">&lt;</operator><literal type="number" pos:start="215:17" pos:end="215:17">0</literal></expr>)</condition><block type="pseudo" pos:start="215:20" pos:end="215:27"><block_content pos:start="215:20" pos:end="215:27"> <expr_stmt pos:start="215:20" pos:end="215:27"><expr pos:start="215:20" pos:end="215:26"><name pos:start="215:20" pos:end="215:22">sum</name> <operator pos:start="215:24" pos:end="215:24">=</operator> <literal type="number" pos:start="215:26" pos:end="215:26">0</literal></expr>;</expr_stmt></block_content></block></if> <if type="elseif" pos:start="215:29" pos:end="215:54">else if <condition pos:start="215:37" pos:end="215:45">(<expr pos:start="215:38" pos:end="215:44"><name pos:start="215:38" pos:end="215:40">sum</name><operator pos:start="215:41" pos:end="215:41">&gt;</operator><literal type="number" pos:start="215:42" pos:end="215:44">255</literal></expr>)</condition><block type="pseudo" pos:start="215:47" pos:end="215:54"><block_content pos:start="215:47" pos:end="215:54"> <expr_stmt pos:start="215:47" pos:end="215:54"><expr pos:start="215:47" pos:end="215:53"><name pos:start="215:47" pos:end="215:49">sum</name><operator pos:start="215:50" pos:end="215:50">=</operator><literal type="number" pos:start="215:51" pos:end="215:53">255</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:21"><expr pos:start="217:9" pos:end="217:20"><name pos:start="217:9" pos:end="217:14"><name pos:start="217:9" pos:end="217:11">dst</name><index pos:start="217:12" pos:end="217:14">[<expr pos:start="217:13" pos:end="217:13"><literal type="number" pos:start="217:13" pos:end="217:13">0</literal></expr>]</index></name> <operator pos:start="217:16" pos:end="217:16">=</operator> <name pos:start="217:18" pos:end="217:20">sum</name></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:14"><expr pos:start="219:9" pos:end="219:13"><name pos:start="219:9" pos:end="219:11">dst</name><operator pos:start="219:12" pos:end="219:13">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:12"><expr pos:start="221:9" pos:end="221:11"><name pos:start="221:9" pos:end="221:9">s</name><operator pos:start="221:10" pos:end="221:11">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:20"><expr pos:start="223:9" pos:end="223:19"><name pos:start="223:9" pos:end="223:17">dst_width</name><operator pos:start="223:18" pos:end="223:19">--</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
