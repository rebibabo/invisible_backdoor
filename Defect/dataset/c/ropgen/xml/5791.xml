<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5791.c" pos:tabs="8"><function pos:start="1:1" pos:end="605:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">opt_output_file</name><parameter_list pos:start="1:28" pos:end="1:63">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">optctx</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:62"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:62">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="605:1">{<block_content pos:start="5:5" pos:end="603:24">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">OptionsContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">o</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">optctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVOutputFormat</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:32">file_oformat</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">OutputStream</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:15">InputStream</name>  <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:21">ist</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:27"><if pos:start="19:5" pos:end="21:27">if <condition pos:start="19:8" pos:end="19:31">(<expr pos:start="19:9" pos:end="19:30"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:30"><name pos:start="19:10" pos:end="19:15">strcmp</name><argument_list pos:start="19:16" pos:end="19:30">(<argument pos:start="19:17" pos:end="19:24"><expr pos:start="19:17" pos:end="19:24"><name pos:start="19:17" pos:end="19:24">filename</name></expr></argument>, <argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><literal type="string" pos:start="19:27" pos:end="19:29">"-"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:27"><block_content pos:start="21:9" pos:end="21:27">

        <expr_stmt pos:start="21:9" pos:end="21:27"><expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:16">filename</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <literal type="string" pos:start="21:20" pos:end="21:26">"pipe:"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:73"><expr pos:start="25:5" pos:end="25:72"><name pos:start="25:5" pos:end="25:7">err</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:72"><name pos:start="25:11" pos:end="25:40">avformat_alloc_output_context2</name><argument_list pos:start="25:41" pos:end="25:72">(<argument pos:start="25:42" pos:end="25:44"><expr pos:start="25:42" pos:end="25:44"><operator pos:start="25:42" pos:end="25:42">&amp;</operator><name pos:start="25:43" pos:end="25:44">oc</name></expr></argument>, <argument pos:start="25:47" pos:end="25:50"><expr pos:start="25:47" pos:end="25:50"><name pos:start="25:47" pos:end="25:50">NULL</name></expr></argument>, <argument pos:start="25:53" pos:end="25:61"><expr pos:start="25:53" pos:end="25:61"><name pos:start="25:53" pos:end="25:61"><name pos:start="25:53" pos:end="25:53">o</name><operator pos:start="25:54" pos:end="25:55">-&gt;</operator><name pos:start="25:56" pos:end="25:61">format</name></name></expr></argument>, <argument pos:start="25:64" pos:end="25:71"><expr pos:start="25:64" pos:end="25:71"><name pos:start="25:64" pos:end="25:71">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:11">oc</name></expr>)</condition> <block pos:start="27:14" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:24">

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><call pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:19">print_error</name><argument_list pos:start="29:20" pos:end="29:34">(<argument pos:start="29:21" pos:end="29:28"><expr pos:start="29:21" pos:end="29:28"><name pos:start="29:21" pos:end="29:28">filename</name></expr></argument>, <argument pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:24"><expr pos:start="31:9" pos:end="31:23"><call pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:20">exit_program</name><argument_list pos:start="31:21" pos:end="31:23">(<argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:16">file_oformat</name><operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:29"><name pos:start="35:19" pos:end="35:20">oc</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:29">oformat</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:6">oc</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:26">interrupt_callback</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:35">int_cb</name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="255:5"><if pos:start="41:5" pos:end="93:5">if <condition pos:start="41:8" pos:end="43:45">(<expr pos:start="41:9" pos:end="43:44"><operator pos:start="41:9" pos:end="41:9">!</operator><call pos:start="41:10" pos:end="41:42"><name pos:start="41:10" pos:end="41:15">strcmp</name><argument_list pos:start="41:16" pos:end="41:42">(<argument pos:start="41:17" pos:end="41:34"><expr pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:28">file_oformat</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:34">name</name></name></expr></argument>, <argument pos:start="41:37" pos:end="41:41"><expr pos:start="41:37" pos:end="41:41"><literal type="string" pos:start="41:37" pos:end="41:41">"ffm"</literal></expr></argument>)</argument_list></call> <operator pos:start="41:44" pos:end="41:45">&amp;&amp;</operator>

        <call pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:19">av_strstart</name><argument_list pos:start="43:20" pos:end="43:44">(<argument pos:start="43:21" pos:end="43:28"><expr pos:start="43:21" pos:end="43:28"><name pos:start="43:21" pos:end="43:28">filename</name></expr></argument>, <argument pos:start="43:31" pos:end="43:37"><expr pos:start="43:31" pos:end="43:37"><literal type="string" pos:start="43:31" pos:end="43:37">"http:"</literal></expr></argument>, <argument pos:start="43:40" pos:end="43:43"><expr pos:start="43:40" pos:end="43:43"><name pos:start="43:40" pos:end="43:43">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:47" pos:end="93:5">{<block_content pos:start="45:9" pos:end="91:9">

        <decl_stmt pos:start="45:9" pos:end="45:14"><decl pos:start="45:9" pos:end="45:13"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:13">j</name></decl>;</decl_stmt>

        <comment type="block" pos:start="47:9" pos:end="49:38">/* special case for files sent to ffserver: we get the stream

           parameters from ffserver */</comment>

        <decl_stmt pos:start="51:9" pos:end="51:57"><decl pos:start="51:9" pos:end="51:56"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:15">err</name> <init pos:start="51:17" pos:end="51:56">= <expr pos:start="51:19" pos:end="51:56"><call pos:start="51:19" pos:end="51:56"><name pos:start="51:19" pos:end="51:39">read_ffserver_streams</name><argument_list pos:start="51:40" pos:end="51:56">(<argument pos:start="51:41" pos:end="51:41"><expr pos:start="51:41" pos:end="51:41"><name pos:start="51:41" pos:end="51:41">o</name></expr></argument>, <argument pos:start="51:44" pos:end="51:45"><expr pos:start="51:44" pos:end="51:45"><name pos:start="51:44" pos:end="51:45">oc</name></expr></argument>, <argument pos:start="51:48" pos:end="51:55"><expr pos:start="51:48" pos:end="51:55"><name pos:start="51:48" pos:end="51:55">filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:20">(<expr pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:15">err</name> <operator pos:start="53:17" pos:end="53:17">&lt;</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>)</condition> <block pos:start="53:22" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:28">

            <expr_stmt pos:start="55:13" pos:end="55:39"><expr pos:start="55:13" pos:end="55:38"><call pos:start="55:13" pos:end="55:38"><name pos:start="55:13" pos:end="55:23">print_error</name><argument_list pos:start="55:24" pos:end="55:38">(<argument pos:start="55:25" pos:end="55:32"><expr pos:start="55:25" pos:end="55:32"><name pos:start="55:25" pos:end="55:32">filename</name></expr></argument>, <argument pos:start="55:35" pos:end="55:37"><expr pos:start="55:35" pos:end="55:37"><name pos:start="55:35" pos:end="55:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:28"><expr pos:start="57:13" pos:end="57:27"><call pos:start="57:13" pos:end="57:27"><name pos:start="57:13" pos:end="57:24">exit_program</name><argument_list pos:start="57:25" pos:end="57:27">(<argument pos:start="57:26" pos:end="57:26"><expr pos:start="57:26" pos:end="57:26"><literal type="number" pos:start="57:26" pos:end="57:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="61:9" pos:end="91:9">for<control pos:start="61:12" pos:end="61:79">(<init pos:start="61:13" pos:end="61:51"><expr pos:start="61:13" pos:end="61:50"><name pos:start="61:13" pos:end="61:13">j</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:33">nb_output_streams</name> <operator pos:start="61:35" pos:end="61:35">-</operator> <name pos:start="61:37" pos:end="61:50"><name pos:start="61:37" pos:end="61:38">oc</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:50">nb_streams</name></name></expr>;</init> <condition pos:start="61:53" pos:end="61:74"><expr pos:start="61:53" pos:end="61:73"><name pos:start="61:53" pos:end="61:53">j</name> <operator pos:start="61:55" pos:end="61:55">&lt;</operator> <name pos:start="61:57" pos:end="61:73">nb_output_streams</name></expr>;</condition> <incr pos:start="61:76" pos:end="61:78"><expr pos:start="61:76" pos:end="61:78"><name pos:start="61:76" pos:end="61:76">j</name><operator pos:start="61:77" pos:end="61:78">++</operator></expr></incr>)</control> <block pos:start="61:81" pos:end="91:9">{<block_content pos:start="63:13" pos:end="89:13">

            <expr_stmt pos:start="63:13" pos:end="63:37"><expr pos:start="63:13" pos:end="63:36"><name pos:start="63:13" pos:end="63:15">ost</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <operator pos:start="63:19" pos:end="63:19">&amp;</operator><name pos:start="63:20" pos:end="63:36"><name pos:start="63:20" pos:end="63:33">output_streams</name><index pos:start="63:34" pos:end="63:36">[<expr pos:start="63:35" pos:end="63:35"><name pos:start="63:35" pos:end="63:35">j</name></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="65:13" pos:end="81:13">for <control pos:start="65:17" pos:end="65:50">(<init pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:18">i</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</init> <condition pos:start="65:25" pos:end="65:45"><expr pos:start="65:25" pos:end="65:44"><name pos:start="65:25" pos:end="65:25">i</name> <operator pos:start="65:27" pos:end="65:27">&lt;</operator> <name pos:start="65:29" pos:end="65:44">nb_input_streams</name></expr>;</condition> <incr pos:start="65:47" pos:end="65:49"><expr pos:start="65:47" pos:end="65:49"><name pos:start="65:47" pos:end="65:47">i</name><operator pos:start="65:48" pos:end="65:49">++</operator></expr></incr>)</control> <block pos:start="65:52" pos:end="81:13">{<block_content pos:start="67:17" pos:end="79:17">

                <expr_stmt pos:start="67:17" pos:end="67:40"><expr pos:start="67:17" pos:end="67:39"><name pos:start="67:17" pos:end="67:19">ist</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <operator pos:start="67:23" pos:end="67:23">&amp;</operator><name pos:start="67:24" pos:end="67:39"><name pos:start="67:24" pos:end="67:36">input_streams</name><index pos:start="67:37" pos:end="67:39">[<expr pos:start="67:38" pos:end="67:38"><name pos:start="67:38" pos:end="67:38">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="69:17" pos:end="79:17"><if pos:start="69:17" pos:end="79:17">if<condition pos:start="69:19" pos:end="69:76">(<expr pos:start="69:20" pos:end="69:75"><name pos:start="69:20" pos:end="69:45"><name pos:start="69:20" pos:end="69:22">ist</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:26">st</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:33">codec</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:45">codec_type</name></name> <operator pos:start="69:47" pos:end="69:48">==</operator> <name pos:start="69:50" pos:end="69:75"><name pos:start="69:50" pos:end="69:52">ost</name><operator pos:start="69:53" pos:end="69:54">-&gt;</operator><name pos:start="69:55" pos:end="69:56">st</name><operator pos:start="69:57" pos:end="69:58">-&gt;</operator><name pos:start="69:59" pos:end="69:63">codec</name><operator pos:start="69:64" pos:end="69:65">-&gt;</operator><name pos:start="69:66" pos:end="69:75">codec_type</name></name></expr>)</condition><block pos:start="69:77" pos:end="79:17">{<block_content pos:start="71:21" pos:end="77:26">

                    <expr_stmt pos:start="71:21" pos:end="71:39"><expr pos:start="71:21" pos:end="71:38"><name pos:start="71:21" pos:end="71:33"><name pos:start="71:21" pos:end="71:23">ost</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:33">sync_ist</name></name><operator pos:start="71:34" pos:end="71:34">=</operator> <name pos:start="71:36" pos:end="71:38">ist</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:41"><expr pos:start="73:21" pos:end="73:40"><name pos:start="73:21" pos:end="73:37"><name pos:start="73:21" pos:end="73:23">ost</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:37">source_index</name></name><operator pos:start="73:38" pos:end="73:38">=</operator> <name pos:start="73:40" pos:end="73:40">i</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:37"><expr pos:start="75:21" pos:end="75:36"><name pos:start="75:21" pos:end="75:32"><name pos:start="75:21" pos:end="75:23">ist</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:32">discard</name></name> <operator pos:start="75:34" pos:end="75:34">=</operator> <literal type="number" pos:start="75:36" pos:end="75:36">0</literal></expr>;</expr_stmt>

                    <break pos:start="77:21" pos:end="77:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if<condition pos:start="83:15" pos:end="83:30">(<expr pos:start="83:16" pos:end="83:29"><operator pos:start="83:16" pos:end="83:16">!</operator><name pos:start="83:17" pos:end="83:29"><name pos:start="83:17" pos:end="83:19">ost</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:29">sync_ist</name></name></expr>)</condition><block pos:start="83:31" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:32">

                <expr_stmt pos:start="85:17" pos:end="85:150"><expr pos:start="85:17" pos:end="85:149"><call pos:start="85:17" pos:end="85:149"><name pos:start="85:17" pos:end="85:22">av_log</name><argument_list pos:start="85:23" pos:end="85:149">(<argument pos:start="85:24" pos:end="85:27"><expr pos:start="85:24" pos:end="85:27"><name pos:start="85:24" pos:end="85:27">NULL</name></expr></argument>, <argument pos:start="85:30" pos:end="85:41"><expr pos:start="85:30" pos:end="85:41"><name pos:start="85:30" pos:end="85:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="85:44" pos:end="85:94"><expr pos:start="85:44" pos:end="85:94"><literal type="string" pos:start="85:44" pos:end="85:94">"Missing %s stream which is required by this ffm\n"</literal></expr></argument>, <argument pos:start="85:97" pos:end="85:148"><expr pos:start="85:97" pos:end="85:148"><call pos:start="85:97" pos:end="85:148"><name pos:start="85:97" pos:end="85:120">av_get_media_type_string</name><argument_list pos:start="85:121" pos:end="85:148">(<argument pos:start="85:122" pos:end="85:147"><expr pos:start="85:122" pos:end="85:147"><name pos:start="85:122" pos:end="85:147"><name pos:start="85:122" pos:end="85:124">ost</name><operator pos:start="85:125" pos:end="85:126">-&gt;</operator><name pos:start="85:127" pos:end="85:128">st</name><operator pos:start="85:129" pos:end="85:130">-&gt;</operator><name pos:start="85:131" pos:end="85:135">codec</name><operator pos:start="85:136" pos:end="85:137">-&gt;</operator><name pos:start="85:138" pos:end="85:147">codec_type</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:32"><expr pos:start="87:17" pos:end="87:31"><call pos:start="87:17" pos:end="87:31"><name pos:start="87:17" pos:end="87:28">exit_program</name><argument_list pos:start="87:29" pos:end="87:31">(<argument pos:start="87:30" pos:end="87:30"><expr pos:start="87:30" pos:end="87:30"><literal type="number" pos:start="87:30" pos:end="87:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="93:7" pos:end="187:5">else if <condition pos:start="93:15" pos:end="93:34">(<expr pos:start="93:16" pos:end="93:33"><operator pos:start="93:16" pos:end="93:16">!</operator><name pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:17">o</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:33">nb_stream_maps</name></name></expr>)</condition> <block pos:start="93:36" pos:end="187:5">{<block_content pos:start="115:9" pos:end="183:9">

        <comment type="block" pos:start="95:9" pos:end="95:49">/* pick the "best" stream of each type */</comment>

<cpp:define pos:start="97:1" pos:end="109:9">#<cpp:directive pos:start="97:2" pos:end="97:7">define</cpp:directive> <cpp:macro pos:start="97:9" pos:end="97:31"><name pos:start="97:9" pos:end="97:18">NEW_STREAM</name><parameter_list pos:start="97:19" pos:end="97:31">(<parameter pos:start="97:20" pos:end="97:23"><type pos:start="97:20" pos:end="97:23"><name pos:start="97:20" pos:end="97:23">type</name></type></parameter>, <parameter pos:start="97:26" pos:end="97:30"><type pos:start="97:26" pos:end="97:30"><name pos:start="97:26" pos:end="97:30">index</name></type></parameter>)</parameter_list></cpp:macro>\

        <cpp:value pos:start="99:9" pos:end="109:9">if (index &gt;= 0) {\

            ost = new_ ## type ## _stream(o, oc);\

            ost-&gt;source_index = index;\

            ost-&gt;sync_ist     = &amp;input_streams[index];\

            input_streams[index].discard = 0;\

        }</cpp:value></cpp:define>



        <comment type="block" pos:start="113:9" pos:end="113:39">/* video: highest resolution */</comment>

        <if_stmt pos:start="115:9" pos:end="137:9"><if pos:start="115:9" pos:end="137:9">if <condition pos:start="115:12" pos:end="115:75">(<expr pos:start="115:13" pos:end="115:74"><operator pos:start="115:13" pos:end="115:13">!</operator><name pos:start="115:14" pos:end="115:29"><name pos:start="115:14" pos:end="115:14">o</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:29">video_disable</name></name> <operator pos:start="115:31" pos:end="115:32">&amp;&amp;</operator> <name pos:start="115:34" pos:end="115:57"><name pos:start="115:34" pos:end="115:35">oc</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:44">oformat</name><operator pos:start="115:45" pos:end="115:46">-&gt;</operator><name pos:start="115:47" pos:end="115:57">video_codec</name></name> <operator pos:start="115:59" pos:end="115:60">!=</operator> <name pos:start="115:62" pos:end="115:74">CODEC_ID_NONE</name></expr>)</condition> <block pos:start="115:77" pos:end="137:9">{<block_content pos:start="117:13" pos:end="135:35">

            <decl_stmt pos:start="117:13" pos:end="117:35"><decl pos:start="117:13" pos:end="117:24"><type pos:start="117:13" pos:end="117:15"><name pos:start="117:13" pos:end="117:15">int</name></type> <name pos:start="117:17" pos:end="117:20">area</name> <init pos:start="117:22" pos:end="117:24">= <expr pos:start="117:24" pos:end="117:24"><literal type="number" pos:start="117:24" pos:end="117:24">0</literal></expr></init></decl>, <decl pos:start="117:27" pos:end="117:34"><type ref="prev" pos:start="117:13" pos:end="117:15"/><name pos:start="117:27" pos:end="117:29">idx</name> <init pos:start="117:31" pos:end="117:34">= <expr pos:start="117:33" pos:end="117:34"><operator pos:start="117:33" pos:end="117:33">-</operator><literal type="number" pos:start="117:34" pos:end="117:34">1</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="119:13" pos:end="133:13">for <control pos:start="119:17" pos:end="119:50">(<init pos:start="119:18" pos:end="119:23"><expr pos:start="119:18" pos:end="119:22"><name pos:start="119:18" pos:end="119:18">i</name> <operator pos:start="119:20" pos:end="119:20">=</operator> <literal type="number" pos:start="119:22" pos:end="119:22">0</literal></expr>;</init> <condition pos:start="119:25" pos:end="119:45"><expr pos:start="119:25" pos:end="119:44"><name pos:start="119:25" pos:end="119:25">i</name> <operator pos:start="119:27" pos:end="119:27">&lt;</operator> <name pos:start="119:29" pos:end="119:44">nb_input_streams</name></expr>;</condition> <incr pos:start="119:47" pos:end="119:49"><expr pos:start="119:47" pos:end="119:49"><name pos:start="119:47" pos:end="119:47">i</name><operator pos:start="119:48" pos:end="119:49">++</operator></expr></incr>)</control> <block pos:start="119:52" pos:end="133:13">{<block_content pos:start="121:17" pos:end="131:17">

                <expr_stmt pos:start="121:17" pos:end="121:40"><expr pos:start="121:17" pos:end="121:39"><name pos:start="121:17" pos:end="121:19">ist</name> <operator pos:start="121:21" pos:end="121:21">=</operator> <operator pos:start="121:23" pos:end="121:23">&amp;</operator><name pos:start="121:24" pos:end="121:39"><name pos:start="121:24" pos:end="121:36">input_streams</name><index pos:start="121:37" pos:end="121:39">[<expr pos:start="121:38" pos:end="121:38"><name pos:start="121:38" pos:end="121:38">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="123:17" pos:end="131:17"><if pos:start="123:17" pos:end="131:17">if <condition pos:start="123:20" pos:end="125:74">(<expr pos:start="123:21" pos:end="125:73"><name pos:start="123:21" pos:end="123:46"><name pos:start="123:21" pos:end="123:23">ist</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:27">st</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:34">codec</name><operator pos:start="123:35" pos:end="123:36">-&gt;</operator><name pos:start="123:37" pos:end="123:46">codec_type</name></name> <operator pos:start="123:48" pos:end="123:49">==</operator> <name pos:start="123:51" pos:end="123:68">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="123:70" pos:end="123:71">&amp;&amp;</operator>

                    <name pos:start="125:21" pos:end="125:41"><name pos:start="125:21" pos:end="125:23">ist</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:27">st</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:34">codec</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:41">width</name></name> <operator pos:start="125:43" pos:end="125:43">*</operator> <name pos:start="125:45" pos:end="125:66"><name pos:start="125:45" pos:end="125:47">ist</name><operator pos:start="125:48" pos:end="125:49">-&gt;</operator><name pos:start="125:50" pos:end="125:51">st</name><operator pos:start="125:52" pos:end="125:53">-&gt;</operator><name pos:start="125:54" pos:end="125:58">codec</name><operator pos:start="125:59" pos:end="125:60">-&gt;</operator><name pos:start="125:61" pos:end="125:66">height</name></name> <operator pos:start="125:68" pos:end="125:68">&gt;</operator> <name pos:start="125:70" pos:end="125:73">area</name></expr>)</condition> <block pos:start="125:76" pos:end="131:17">{<block_content pos:start="127:21" pos:end="129:28">

                    <expr_stmt pos:start="127:21" pos:end="127:74"><expr pos:start="127:21" pos:end="127:73"><name pos:start="127:21" pos:end="127:24">area</name> <operator pos:start="127:26" pos:end="127:26">=</operator> <name pos:start="127:28" pos:end="127:48"><name pos:start="127:28" pos:end="127:30">ist</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:34">st</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:41">codec</name><operator pos:start="127:42" pos:end="127:43">-&gt;</operator><name pos:start="127:44" pos:end="127:48">width</name></name> <operator pos:start="127:50" pos:end="127:50">*</operator> <name pos:start="127:52" pos:end="127:73"><name pos:start="127:52" pos:end="127:54">ist</name><operator pos:start="127:55" pos:end="127:56">-&gt;</operator><name pos:start="127:57" pos:end="127:58">st</name><operator pos:start="127:59" pos:end="127:60">-&gt;</operator><name pos:start="127:61" pos:end="127:65">codec</name><operator pos:start="127:66" pos:end="127:67">-&gt;</operator><name pos:start="127:68" pos:end="127:73">height</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="129:21" pos:end="129:28"><expr pos:start="129:21" pos:end="129:27"><name pos:start="129:21" pos:end="129:23">idx</name> <operator pos:start="129:25" pos:end="129:25">=</operator> <name pos:start="129:27" pos:end="129:27">i</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="135:13" pos:end="135:35"><expr pos:start="135:13" pos:end="135:34"><call pos:start="135:13" pos:end="135:34"><name pos:start="135:13" pos:end="135:22">NEW_STREAM</name><argument_list pos:start="135:23" pos:end="135:34">(<argument pos:start="135:24" pos:end="135:28"><expr pos:start="135:24" pos:end="135:28"><name pos:start="135:24" pos:end="135:28">video</name></expr></argument>, <argument pos:start="135:31" pos:end="135:33"><expr pos:start="135:31" pos:end="135:33"><name pos:start="135:31" pos:end="135:33">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="141:9" pos:end="141:34">/* audio: most channels */</comment>

        <if_stmt pos:start="143:9" pos:end="165:9"><if pos:start="143:9" pos:end="165:9">if <condition pos:start="143:12" pos:end="143:75">(<expr pos:start="143:13" pos:end="143:74"><operator pos:start="143:13" pos:end="143:13">!</operator><name pos:start="143:14" pos:end="143:29"><name pos:start="143:14" pos:end="143:14">o</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:29">audio_disable</name></name> <operator pos:start="143:31" pos:end="143:32">&amp;&amp;</operator> <name pos:start="143:34" pos:end="143:57"><name pos:start="143:34" pos:end="143:35">oc</name><operator pos:start="143:36" pos:end="143:37">-&gt;</operator><name pos:start="143:38" pos:end="143:44">oformat</name><operator pos:start="143:45" pos:end="143:46">-&gt;</operator><name pos:start="143:47" pos:end="143:57">audio_codec</name></name> <operator pos:start="143:59" pos:end="143:60">!=</operator> <name pos:start="143:62" pos:end="143:74">CODEC_ID_NONE</name></expr>)</condition> <block pos:start="143:77" pos:end="165:9">{<block_content pos:start="145:13" pos:end="163:35">

            <decl_stmt pos:start="145:13" pos:end="145:39"><decl pos:start="145:13" pos:end="145:28"><type pos:start="145:13" pos:end="145:15"><name pos:start="145:13" pos:end="145:15">int</name></type> <name pos:start="145:17" pos:end="145:24">channels</name> <init pos:start="145:26" pos:end="145:28">= <expr pos:start="145:28" pos:end="145:28"><literal type="number" pos:start="145:28" pos:end="145:28">0</literal></expr></init></decl>, <decl pos:start="145:31" pos:end="145:38"><type ref="prev" pos:start="145:13" pos:end="145:15"/><name pos:start="145:31" pos:end="145:33">idx</name> <init pos:start="145:35" pos:end="145:38">= <expr pos:start="145:37" pos:end="145:38"><operator pos:start="145:37" pos:end="145:37">-</operator><literal type="number" pos:start="145:38" pos:end="145:38">1</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="147:13" pos:end="161:13">for <control pos:start="147:17" pos:end="147:50">(<init pos:start="147:18" pos:end="147:23"><expr pos:start="147:18" pos:end="147:22"><name pos:start="147:18" pos:end="147:18">i</name> <operator pos:start="147:20" pos:end="147:20">=</operator> <literal type="number" pos:start="147:22" pos:end="147:22">0</literal></expr>;</init> <condition pos:start="147:25" pos:end="147:45"><expr pos:start="147:25" pos:end="147:44"><name pos:start="147:25" pos:end="147:25">i</name> <operator pos:start="147:27" pos:end="147:27">&lt;</operator> <name pos:start="147:29" pos:end="147:44">nb_input_streams</name></expr>;</condition> <incr pos:start="147:47" pos:end="147:49"><expr pos:start="147:47" pos:end="147:49"><name pos:start="147:47" pos:end="147:47">i</name><operator pos:start="147:48" pos:end="147:49">++</operator></expr></incr>)</control> <block pos:start="147:52" pos:end="161:13">{<block_content pos:start="149:17" pos:end="159:17">

                <expr_stmt pos:start="149:17" pos:end="149:40"><expr pos:start="149:17" pos:end="149:39"><name pos:start="149:17" pos:end="149:19">ist</name> <operator pos:start="149:21" pos:end="149:21">=</operator> <operator pos:start="149:23" pos:end="149:23">&amp;</operator><name pos:start="149:24" pos:end="149:39"><name pos:start="149:24" pos:end="149:36">input_streams</name><index pos:start="149:37" pos:end="149:39">[<expr pos:start="149:38" pos:end="149:38"><name pos:start="149:38" pos:end="149:38">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="151:17" pos:end="159:17"><if pos:start="151:17" pos:end="159:17">if <condition pos:start="151:20" pos:end="153:56">(<expr pos:start="151:21" pos:end="153:55"><name pos:start="151:21" pos:end="151:46"><name pos:start="151:21" pos:end="151:23">ist</name><operator pos:start="151:24" pos:end="151:25">-&gt;</operator><name pos:start="151:26" pos:end="151:27">st</name><operator pos:start="151:28" pos:end="151:29">-&gt;</operator><name pos:start="151:30" pos:end="151:34">codec</name><operator pos:start="151:35" pos:end="151:36">-&gt;</operator><name pos:start="151:37" pos:end="151:46">codec_type</name></name> <operator pos:start="151:48" pos:end="151:49">==</operator> <name pos:start="151:51" pos:end="151:68">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="151:70" pos:end="151:71">&amp;&amp;</operator>

                    <name pos:start="153:21" pos:end="153:44"><name pos:start="153:21" pos:end="153:23">ist</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:27">st</name><operator pos:start="153:28" pos:end="153:29">-&gt;</operator><name pos:start="153:30" pos:end="153:34">codec</name><operator pos:start="153:35" pos:end="153:36">-&gt;</operator><name pos:start="153:37" pos:end="153:44">channels</name></name> <operator pos:start="153:46" pos:end="153:46">&gt;</operator> <name pos:start="153:48" pos:end="153:55">channels</name></expr>)</condition> <block pos:start="153:58" pos:end="159:17">{<block_content pos:start="155:21" pos:end="157:28">

                    <expr_stmt pos:start="155:21" pos:end="155:56"><expr pos:start="155:21" pos:end="155:55"><name pos:start="155:21" pos:end="155:28">channels</name> <operator pos:start="155:30" pos:end="155:30">=</operator> <name pos:start="155:32" pos:end="155:55"><name pos:start="155:32" pos:end="155:34">ist</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:38">st</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:45">codec</name><operator pos:start="155:46" pos:end="155:47">-&gt;</operator><name pos:start="155:48" pos:end="155:55">channels</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:28"><expr pos:start="157:21" pos:end="157:27"><name pos:start="157:21" pos:end="157:23">idx</name> <operator pos:start="157:25" pos:end="157:25">=</operator> <name pos:start="157:27" pos:end="157:27">i</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="163:13" pos:end="163:35"><expr pos:start="163:13" pos:end="163:34"><call pos:start="163:13" pos:end="163:34"><name pos:start="163:13" pos:end="163:22">NEW_STREAM</name><argument_list pos:start="163:23" pos:end="163:34">(<argument pos:start="163:24" pos:end="163:28"><expr pos:start="163:24" pos:end="163:28"><name pos:start="163:24" pos:end="163:28">audio</name></expr></argument>, <argument pos:start="163:31" pos:end="163:33"><expr pos:start="163:31" pos:end="163:33"><name pos:start="163:31" pos:end="163:33">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="169:9" pos:end="169:35">/* subtitles: pick first */</comment>

        <if_stmt pos:start="171:9" pos:end="183:9"><if pos:start="171:9" pos:end="183:9">if <condition pos:start="171:12" pos:end="171:106">(<expr pos:start="171:13" pos:end="171:105"><operator pos:start="171:13" pos:end="171:13">!</operator><name pos:start="171:14" pos:end="171:32"><name pos:start="171:14" pos:end="171:14">o</name><operator pos:start="171:15" pos:end="171:16">-&gt;</operator><name pos:start="171:17" pos:end="171:32">subtitle_disable</name></name> <operator pos:start="171:34" pos:end="171:35">&amp;&amp;</operator> <operator pos:start="171:37" pos:end="171:37">(</operator><name pos:start="171:38" pos:end="171:64"><name pos:start="171:38" pos:end="171:39">oc</name><operator pos:start="171:40" pos:end="171:41">-&gt;</operator><name pos:start="171:42" pos:end="171:48">oformat</name><operator pos:start="171:49" pos:end="171:50">-&gt;</operator><name pos:start="171:51" pos:end="171:64">subtitle_codec</name></name> <operator pos:start="171:66" pos:end="171:67">!=</operator> <name pos:start="171:69" pos:end="171:81">CODEC_ID_NONE</name> <operator pos:start="171:83" pos:end="171:84">||</operator> <name pos:start="171:86" pos:end="171:104">subtitle_codec_name</name><operator pos:start="171:105" pos:end="171:105">)</operator></expr>)</condition> <block pos:start="171:108" pos:end="183:9">{<block_content pos:start="173:13" pos:end="181:17">

            <for pos:start="173:13" pos:end="181:17">for <control pos:start="173:17" pos:end="173:50">(<init pos:start="173:18" pos:end="173:23"><expr pos:start="173:18" pos:end="173:22"><name pos:start="173:18" pos:end="173:18">i</name> <operator pos:start="173:20" pos:end="173:20">=</operator> <literal type="number" pos:start="173:22" pos:end="173:22">0</literal></expr>;</init> <condition pos:start="173:25" pos:end="173:45"><expr pos:start="173:25" pos:end="173:44"><name pos:start="173:25" pos:end="173:25">i</name> <operator pos:start="173:27" pos:end="173:27">&lt;</operator> <name pos:start="173:29" pos:end="173:44">nb_input_streams</name></expr>;</condition> <incr pos:start="173:47" pos:end="173:49"><expr pos:start="173:47" pos:end="173:49"><name pos:start="173:47" pos:end="173:47">i</name><operator pos:start="173:48" pos:end="173:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="175:17" pos:end="181:17"><block_content pos:start="175:17" pos:end="181:17">

                <if_stmt pos:start="175:17" pos:end="181:17"><if pos:start="175:17" pos:end="181:17">if <condition pos:start="175:20" pos:end="175:84">(<expr pos:start="175:21" pos:end="175:83"><name pos:start="175:21" pos:end="175:36"><name pos:start="175:21" pos:end="175:33">input_streams</name><index pos:start="175:34" pos:end="175:36">[<expr pos:start="175:35" pos:end="175:35"><name pos:start="175:35" pos:end="175:35">i</name></expr>]</index></name><operator pos:start="175:37" pos:end="175:37">.</operator><name pos:start="175:38" pos:end="175:58"><name pos:start="175:38" pos:end="175:39">st</name><operator pos:start="175:40" pos:end="175:41">-&gt;</operator><name pos:start="175:42" pos:end="175:46">codec</name><operator pos:start="175:47" pos:end="175:48">-&gt;</operator><name pos:start="175:49" pos:end="175:58">codec_type</name></name> <operator pos:start="175:60" pos:end="175:61">==</operator> <name pos:start="175:63" pos:end="175:83">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="175:86" pos:end="181:17">{<block_content pos:start="177:21" pos:end="179:26">

                    <expr_stmt pos:start="177:21" pos:end="177:44"><expr pos:start="177:21" pos:end="177:43"><call pos:start="177:21" pos:end="177:43"><name pos:start="177:21" pos:end="177:30">NEW_STREAM</name><argument_list pos:start="177:31" pos:end="177:43">(<argument pos:start="177:32" pos:end="177:39"><expr pos:start="177:32" pos:end="177:39"><name pos:start="177:32" pos:end="177:39">subtitle</name></expr></argument>, <argument pos:start="177:42" pos:end="177:42"><expr pos:start="177:42" pos:end="177:42"><name pos:start="177:42" pos:end="177:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="179:21" pos:end="179:26">break;</break>

                </block_content>}</block></if></if_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="185:9" pos:end="185:37">/* do something with data? */</comment>

    </block_content>}</block></if> <else pos:start="187:7" pos:end="255:5">else <block pos:start="187:12" pos:end="255:5">{<block_content pos:start="189:9" pos:end="253:9">

        <for pos:start="189:9" pos:end="253:9">for <control pos:start="189:13" pos:end="189:47">(<init pos:start="189:14" pos:end="189:19"><expr pos:start="189:14" pos:end="189:18"><name pos:start="189:14" pos:end="189:14">i</name> <operator pos:start="189:16" pos:end="189:16">=</operator> <literal type="number" pos:start="189:18" pos:end="189:18">0</literal></expr>;</init> <condition pos:start="189:21" pos:end="189:42"><expr pos:start="189:21" pos:end="189:41"><name pos:start="189:21" pos:end="189:21">i</name> <operator pos:start="189:23" pos:end="189:23">&lt;</operator> <name pos:start="189:25" pos:end="189:41"><name pos:start="189:25" pos:end="189:25">o</name><operator pos:start="189:26" pos:end="189:27">-&gt;</operator><name pos:start="189:28" pos:end="189:41">nb_stream_maps</name></name></expr>;</condition> <incr pos:start="189:44" pos:end="189:46"><expr pos:start="189:44" pos:end="189:46"><name pos:start="189:44" pos:end="189:44">i</name><operator pos:start="189:45" pos:end="189:46">++</operator></expr></incr>)</control> <block pos:start="189:49" pos:end="253:9">{<block_content pos:start="191:13" pos:end="251:29">

            <decl_stmt pos:start="191:13" pos:end="191:48"><decl pos:start="191:13" pos:end="191:47"><type pos:start="191:13" pos:end="191:23"><name pos:start="191:13" pos:end="191:21">StreamMap</name> <modifier pos:start="191:23" pos:end="191:23">*</modifier></type><name pos:start="191:24" pos:end="191:26">map</name> <init pos:start="191:28" pos:end="191:47">= <expr pos:start="191:30" pos:end="191:47"><operator pos:start="191:30" pos:end="191:30">&amp;</operator><name pos:start="191:31" pos:end="191:47"><name pos:start="191:31" pos:end="191:31">o</name><operator pos:start="191:32" pos:end="191:33">-&gt;</operator><name pos:start="191:34" pos:end="191:44">stream_maps</name><index pos:start="191:45" pos:end="191:47">[<expr pos:start="191:46" pos:end="191:46"><name pos:start="191:46" pos:end="191:46">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="195:13" pos:end="197:25"><if pos:start="195:13" pos:end="197:25">if <condition pos:start="195:16" pos:end="195:30">(<expr pos:start="195:17" pos:end="195:29"><name pos:start="195:17" pos:end="195:29"><name pos:start="195:17" pos:end="195:19">map</name><operator pos:start="195:20" pos:end="195:21">-&gt;</operator><name pos:start="195:22" pos:end="195:29">disabled</name></name></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:25"><block_content pos:start="197:17" pos:end="197:25">

                <continue pos:start="197:17" pos:end="197:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="201:13" pos:end="201:93"><expr pos:start="201:13" pos:end="201:92"><name pos:start="201:13" pos:end="201:15">ist</name> <operator pos:start="201:17" pos:end="201:17">=</operator> <operator pos:start="201:19" pos:end="201:19">&amp;</operator><name pos:start="201:20" pos:end="201:92"><name pos:start="201:20" pos:end="201:32">input_streams</name><index pos:start="201:33" pos:end="201:92">[<expr pos:start="201:34" pos:end="201:91"><name pos:start="201:34" pos:end="201:61"><name pos:start="201:34" pos:end="201:44">input_files</name><index pos:start="201:45" pos:end="201:61">[<expr pos:start="201:46" pos:end="201:60"><name pos:start="201:46" pos:end="201:60"><name pos:start="201:46" pos:end="201:48">map</name><operator pos:start="201:49" pos:end="201:50">-&gt;</operator><name pos:start="201:51" pos:end="201:60">file_index</name></name></expr>]</index></name><operator pos:start="201:62" pos:end="201:62">.</operator><name pos:start="201:63" pos:end="201:71">ist_index</name> <operator pos:start="201:73" pos:end="201:73">+</operator> <name pos:start="201:75" pos:end="201:91"><name pos:start="201:75" pos:end="201:77">map</name><operator pos:start="201:78" pos:end="201:79">-&gt;</operator><name pos:start="201:80" pos:end="201:91">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="203:13" pos:end="205:25"><if pos:start="203:13" pos:end="205:25">if<condition pos:start="203:15" pos:end="203:90">(<expr pos:start="203:16" pos:end="203:89"><name pos:start="203:16" pos:end="203:34"><name pos:start="203:16" pos:end="203:16">o</name><operator pos:start="203:17" pos:end="203:18">-&gt;</operator><name pos:start="203:19" pos:end="203:34">subtitle_disable</name></name> <operator pos:start="203:36" pos:end="203:37">&amp;&amp;</operator> <name pos:start="203:39" pos:end="203:64"><name pos:start="203:39" pos:end="203:41">ist</name><operator pos:start="203:42" pos:end="203:43">-&gt;</operator><name pos:start="203:44" pos:end="203:45">st</name><operator pos:start="203:46" pos:end="203:47">-&gt;</operator><name pos:start="203:48" pos:end="203:52">codec</name><operator pos:start="203:53" pos:end="203:54">-&gt;</operator><name pos:start="203:55" pos:end="203:64">codec_type</name></name> <operator pos:start="203:66" pos:end="203:67">==</operator> <name pos:start="203:69" pos:end="203:89">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition><block type="pseudo" pos:start="205:17" pos:end="205:25"><block_content pos:start="205:17" pos:end="205:25">

                <continue pos:start="205:17" pos:end="205:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="207:13" pos:end="209:25"><if pos:start="207:13" pos:end="209:25">if<condition pos:start="207:15" pos:end="207:87">(<expr pos:start="207:16" pos:end="207:86"><name pos:start="207:16" pos:end="207:34"><name pos:start="207:16" pos:end="207:16">o</name><operator pos:start="207:17" pos:end="207:18">-&gt;</operator>   <name pos:start="207:22" pos:end="207:34">audio_disable</name></name> <operator pos:start="207:36" pos:end="207:37">&amp;&amp;</operator> <name pos:start="207:39" pos:end="207:64"><name pos:start="207:39" pos:end="207:41">ist</name><operator pos:start="207:42" pos:end="207:43">-&gt;</operator><name pos:start="207:44" pos:end="207:45">st</name><operator pos:start="207:46" pos:end="207:47">-&gt;</operator><name pos:start="207:48" pos:end="207:52">codec</name><operator pos:start="207:53" pos:end="207:54">-&gt;</operator><name pos:start="207:55" pos:end="207:64">codec_type</name></name> <operator pos:start="207:66" pos:end="207:67">==</operator> <name pos:start="207:69" pos:end="207:86">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="209:17" pos:end="209:25"><block_content pos:start="209:17" pos:end="209:25">

                <continue pos:start="209:17" pos:end="209:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="211:13" pos:end="213:25"><if pos:start="211:13" pos:end="213:25">if<condition pos:start="211:15" pos:end="211:87">(<expr pos:start="211:16" pos:end="211:86"><name pos:start="211:16" pos:end="211:34"><name pos:start="211:16" pos:end="211:16">o</name><operator pos:start="211:17" pos:end="211:18">-&gt;</operator>   <name pos:start="211:22" pos:end="211:34">video_disable</name></name> <operator pos:start="211:36" pos:end="211:37">&amp;&amp;</operator> <name pos:start="211:39" pos:end="211:64"><name pos:start="211:39" pos:end="211:41">ist</name><operator pos:start="211:42" pos:end="211:43">-&gt;</operator><name pos:start="211:44" pos:end="211:45">st</name><operator pos:start="211:46" pos:end="211:47">-&gt;</operator><name pos:start="211:48" pos:end="211:52">codec</name><operator pos:start="211:53" pos:end="211:54">-&gt;</operator><name pos:start="211:55" pos:end="211:64">codec_type</name></name> <operator pos:start="211:66" pos:end="211:67">==</operator> <name pos:start="211:69" pos:end="211:86">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:25"><block_content pos:start="213:17" pos:end="213:25">

                <continue pos:start="213:17" pos:end="213:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="215:13" pos:end="217:25"><if pos:start="215:13" pos:end="217:25">if<condition pos:start="215:15" pos:end="215:86">(<expr pos:start="215:16" pos:end="215:85"><name pos:start="215:16" pos:end="215:34"><name pos:start="215:16" pos:end="215:16">o</name><operator pos:start="215:17" pos:end="215:18">-&gt;</operator>    <name pos:start="215:23" pos:end="215:34">data_disable</name></name> <operator pos:start="215:36" pos:end="215:37">&amp;&amp;</operator> <name pos:start="215:39" pos:end="215:64"><name pos:start="215:39" pos:end="215:41">ist</name><operator pos:start="215:42" pos:end="215:43">-&gt;</operator><name pos:start="215:44" pos:end="215:45">st</name><operator pos:start="215:46" pos:end="215:47">-&gt;</operator><name pos:start="215:48" pos:end="215:52">codec</name><operator pos:start="215:53" pos:end="215:54">-&gt;</operator><name pos:start="215:55" pos:end="215:64">codec_type</name></name> <operator pos:start="215:66" pos:end="215:67">==</operator> <name pos:start="215:69" pos:end="215:85">AVMEDIA_TYPE_DATA</name></expr>)</condition><block type="pseudo" pos:start="217:17" pos:end="217:25"><block_content pos:start="217:17" pos:end="217:25">

                <continue pos:start="217:17" pos:end="217:25">continue;</continue></block_content></block></if></if_stmt>



            <switch pos:start="221:13" pos:end="241:13">switch <condition pos:start="221:20" pos:end="221:47">(<expr pos:start="221:21" pos:end="221:46"><name pos:start="221:21" pos:end="221:46"><name pos:start="221:21" pos:end="221:23">ist</name><operator pos:start="221:24" pos:end="221:25">-&gt;</operator><name pos:start="221:26" pos:end="221:27">st</name><operator pos:start="221:28" pos:end="221:29">-&gt;</operator><name pos:start="221:30" pos:end="221:34">codec</name><operator pos:start="221:35" pos:end="221:36">-&gt;</operator><name pos:start="221:37" pos:end="221:46">codec_type</name></name></expr>)</condition> <block pos:start="221:49" pos:end="241:13">{<block_content pos:start="223:13" pos:end="239:32">

            <case pos:start="223:13" pos:end="223:36">case <expr pos:start="223:18" pos:end="223:35"><name pos:start="223:18" pos:end="223:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>    <expr_stmt pos:start="223:41" pos:end="223:70"><expr pos:start="223:41" pos:end="223:69"><name pos:start="223:41" pos:end="223:43">ost</name> <operator pos:start="223:45" pos:end="223:45">=</operator> <call pos:start="223:47" pos:end="223:69"><name pos:start="223:47" pos:end="223:62">new_video_stream</name><argument_list pos:start="223:63" pos:end="223:69">(<argument pos:start="223:64" pos:end="223:64"><expr pos:start="223:64" pos:end="223:64"><name pos:start="223:64" pos:end="223:64">o</name></expr></argument>, <argument pos:start="223:67" pos:end="223:68"><expr pos:start="223:67" pos:end="223:68"><name pos:start="223:67" pos:end="223:68">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="223:75" pos:end="223:80">break;</break>

            <case pos:start="225:13" pos:end="225:36">case <expr pos:start="225:18" pos:end="225:35"><name pos:start="225:18" pos:end="225:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>    <expr_stmt pos:start="225:41" pos:end="225:70"><expr pos:start="225:41" pos:end="225:69"><name pos:start="225:41" pos:end="225:43">ost</name> <operator pos:start="225:45" pos:end="225:45">=</operator> <call pos:start="225:47" pos:end="225:69"><name pos:start="225:47" pos:end="225:62">new_audio_stream</name><argument_list pos:start="225:63" pos:end="225:69">(<argument pos:start="225:64" pos:end="225:64"><expr pos:start="225:64" pos:end="225:64"><name pos:start="225:64" pos:end="225:64">o</name></expr></argument>, <argument pos:start="225:67" pos:end="225:68"><expr pos:start="225:67" pos:end="225:68"><name pos:start="225:67" pos:end="225:68">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="225:75" pos:end="225:80">break;</break>

            <case pos:start="227:13" pos:end="227:39">case <expr pos:start="227:18" pos:end="227:38"><name pos:start="227:18" pos:end="227:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case> <expr_stmt pos:start="227:41" pos:end="227:73"><expr pos:start="227:41" pos:end="227:72"><name pos:start="227:41" pos:end="227:43">ost</name> <operator pos:start="227:45" pos:end="227:45">=</operator> <call pos:start="227:47" pos:end="227:72"><name pos:start="227:47" pos:end="227:65">new_subtitle_stream</name><argument_list pos:start="227:66" pos:end="227:72">(<argument pos:start="227:67" pos:end="227:67"><expr pos:start="227:67" pos:end="227:67"><name pos:start="227:67" pos:end="227:67">o</name></expr></argument>, <argument pos:start="227:70" pos:end="227:71"><expr pos:start="227:70" pos:end="227:71"><name pos:start="227:70" pos:end="227:71">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="227:75" pos:end="227:80">break;</break>

            <case pos:start="229:13" pos:end="229:35">case <expr pos:start="229:18" pos:end="229:34"><name pos:start="229:18" pos:end="229:34">AVMEDIA_TYPE_DATA</name></expr>:</case>     <expr_stmt pos:start="229:41" pos:end="229:69"><expr pos:start="229:41" pos:end="229:68"><name pos:start="229:41" pos:end="229:43">ost</name> <operator pos:start="229:45" pos:end="229:45">=</operator> <call pos:start="229:47" pos:end="229:68"><name pos:start="229:47" pos:end="229:61">new_data_stream</name><argument_list pos:start="229:62" pos:end="229:68">(<argument pos:start="229:63" pos:end="229:63"><expr pos:start="229:63" pos:end="229:63"><name pos:start="229:63" pos:end="229:63">o</name></expr></argument>, <argument pos:start="229:66" pos:end="229:67"><expr pos:start="229:66" pos:end="229:67"><name pos:start="229:66" pos:end="229:67">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <break pos:start="229:75" pos:end="229:80">break;</break>

            <case pos:start="231:13" pos:end="231:41">case <expr pos:start="231:18" pos:end="231:40"><name pos:start="231:18" pos:end="231:40">AVMEDIA_TYPE_ATTACHMENT</name></expr>:</case> <expr_stmt pos:start="231:43" pos:end="231:77"><expr pos:start="231:43" pos:end="231:76"><name pos:start="231:43" pos:end="231:45">ost</name> <operator pos:start="231:47" pos:end="231:47">=</operator> <call pos:start="231:49" pos:end="231:76"><name pos:start="231:49" pos:end="231:69">new_attachment_stream</name><argument_list pos:start="231:70" pos:end="231:76">(<argument pos:start="231:71" pos:end="231:71"><expr pos:start="231:71" pos:end="231:71"><name pos:start="231:71" pos:end="231:71">o</name></expr></argument>, <argument pos:start="231:74" pos:end="231:75"><expr pos:start="231:74" pos:end="231:75"><name pos:start="231:74" pos:end="231:75">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="231:79" pos:end="231:84">break;</break>

            <default pos:start="233:13" pos:end="233:20">default:</default>

                <expr_stmt pos:start="235:17" pos:end="237:59"><expr pos:start="235:17" pos:end="237:58"><call pos:start="235:17" pos:end="237:58"><name pos:start="235:17" pos:end="235:22">av_log</name><argument_list pos:start="235:23" pos:end="237:58">(<argument pos:start="235:24" pos:end="235:27"><expr pos:start="235:24" pos:end="235:27"><name pos:start="235:24" pos:end="235:27">NULL</name></expr></argument>, <argument pos:start="235:30" pos:end="235:41"><expr pos:start="235:30" pos:end="235:41"><name pos:start="235:30" pos:end="235:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="235:44" pos:end="235:91"><expr pos:start="235:44" pos:end="235:91"><literal type="string" pos:start="235:44" pos:end="235:91">"Cannot map stream #%d:%d - unsupported type.\n"</literal></expr></argument>,

                       <argument pos:start="237:24" pos:end="237:38"><expr pos:start="237:24" pos:end="237:38"><name pos:start="237:24" pos:end="237:38"><name pos:start="237:24" pos:end="237:26">map</name><operator pos:start="237:27" pos:end="237:28">-&gt;</operator><name pos:start="237:29" pos:end="237:38">file_index</name></name></expr></argument>, <argument pos:start="237:41" pos:end="237:57"><expr pos:start="237:41" pos:end="237:57"><name pos:start="237:41" pos:end="237:57"><name pos:start="237:41" pos:end="237:43">map</name><operator pos:start="237:44" pos:end="237:45">-&gt;</operator><name pos:start="237:46" pos:end="237:57">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="239:17" pos:end="239:32"><expr pos:start="239:17" pos:end="239:31"><call pos:start="239:17" pos:end="239:31"><name pos:start="239:17" pos:end="239:28">exit_program</name><argument_list pos:start="239:29" pos:end="239:31">(<argument pos:start="239:30" pos:end="239:30"><expr pos:start="239:30" pos:end="239:30"><literal type="number" pos:start="239:30" pos:end="239:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>



            <expr_stmt pos:start="245:13" pos:end="245:91"><expr pos:start="245:13" pos:end="245:90"><name pos:start="245:13" pos:end="245:29"><name pos:start="245:13" pos:end="245:15">ost</name><operator pos:start="245:16" pos:end="245:17">-&gt;</operator><name pos:start="245:18" pos:end="245:29">source_index</name></name> <operator pos:start="245:31" pos:end="245:31">=</operator> <name pos:start="245:33" pos:end="245:60"><name pos:start="245:33" pos:end="245:43">input_files</name><index pos:start="245:44" pos:end="245:60">[<expr pos:start="245:45" pos:end="245:59"><name pos:start="245:45" pos:end="245:59"><name pos:start="245:45" pos:end="245:47">map</name><operator pos:start="245:48" pos:end="245:49">-&gt;</operator><name pos:start="245:50" pos:end="245:59">file_index</name></name></expr>]</index></name><operator pos:start="245:61" pos:end="245:61">.</operator><name pos:start="245:62" pos:end="245:70">ist_index</name> <operator pos:start="245:72" pos:end="245:72">+</operator> <name pos:start="245:74" pos:end="245:90"><name pos:start="245:74" pos:end="245:76">map</name><operator pos:start="245:77" pos:end="245:78">-&gt;</operator><name pos:start="245:79" pos:end="245:90">stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="249:67"><expr pos:start="247:13" pos:end="249:66"><name pos:start="247:13" pos:end="247:25"><name pos:start="247:13" pos:end="247:15">ost</name><operator pos:start="247:16" pos:end="247:17">-&gt;</operator><name pos:start="247:18" pos:end="247:25">sync_ist</name></name>     <operator pos:start="247:31" pos:end="247:31">=</operator> <operator pos:start="247:33" pos:end="247:33">&amp;</operator><name pos:start="247:34" pos:end="249:66"><name pos:start="247:34" pos:end="247:46">input_streams</name><index pos:start="247:47" pos:end="249:66">[<expr pos:start="247:48" pos:end="249:65"><name pos:start="247:48" pos:end="247:80"><name pos:start="247:48" pos:end="247:58">input_files</name><index pos:start="247:59" pos:end="247:80">[<expr pos:start="247:60" pos:end="247:79"><name pos:start="247:60" pos:end="247:79"><name pos:start="247:60" pos:end="247:62">map</name><operator pos:start="247:63" pos:end="247:64">-&gt;</operator><name pos:start="247:65" pos:end="247:79">sync_file_index</name></name></expr>]</index></name><operator pos:start="247:81" pos:end="247:81">.</operator><name pos:start="247:82" pos:end="247:90">ist_index</name> <operator pos:start="247:92" pos:end="247:92">+</operator>

                                           <name pos:start="249:44" pos:end="249:65"><name pos:start="249:44" pos:end="249:46">map</name><operator pos:start="249:47" pos:end="249:48">-&gt;</operator><name pos:start="249:49" pos:end="249:65">sync_stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:29"><expr pos:start="251:13" pos:end="251:28"><name pos:start="251:13" pos:end="251:24"><name pos:start="251:13" pos:end="251:15">ist</name><operator pos:start="251:16" pos:end="251:17">-&gt;</operator><name pos:start="251:18" pos:end="251:24">discard</name></name> <operator pos:start="251:26" pos:end="251:26">=</operator> <literal type="number" pos:start="251:28" pos:end="251:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="259:5" pos:end="259:31">/* handle attached files */</comment>

    <for pos:start="261:5" pos:end="327:5">for <control pos:start="261:9" pos:end="261:43">(<init pos:start="261:10" pos:end="261:15"><expr pos:start="261:10" pos:end="261:14"><name pos:start="261:10" pos:end="261:10">i</name> <operator pos:start="261:12" pos:end="261:12">=</operator> <literal type="number" pos:start="261:14" pos:end="261:14">0</literal></expr>;</init> <condition pos:start="261:17" pos:end="261:38"><expr pos:start="261:17" pos:end="261:37"><name pos:start="261:17" pos:end="261:17">i</name> <operator pos:start="261:19" pos:end="261:19">&lt;</operator> <name pos:start="261:21" pos:end="261:37"><name pos:start="261:21" pos:end="261:21">o</name><operator pos:start="261:22" pos:end="261:23">-&gt;</operator><name pos:start="261:24" pos:end="261:37">nb_attachments</name></name></expr>;</condition> <incr pos:start="261:40" pos:end="261:42"><expr pos:start="261:40" pos:end="261:42"><name pos:start="261:40" pos:end="261:40">i</name><operator pos:start="261:41" pos:end="261:42">++</operator></expr></incr>)</control> <block pos:start="261:45" pos:end="327:5">{<block_content pos:start="263:9" pos:end="325:23">

        <decl_stmt pos:start="263:9" pos:end="263:24"><decl pos:start="263:9" pos:end="263:23"><type pos:start="263:9" pos:end="263:21"><name pos:start="263:9" pos:end="263:19">AVIOContext</name> <modifier pos:start="263:21" pos:end="263:21">*</modifier></type><name pos:start="263:22" pos:end="263:23">pb</name></decl>;</decl_stmt>

        <decl_stmt pos:start="265:9" pos:end="265:28"><decl pos:start="265:9" pos:end="265:27"><type pos:start="265:9" pos:end="265:17"><name pos:start="265:9" pos:end="265:15">uint8_t</name> <modifier pos:start="265:17" pos:end="265:17">*</modifier></type><name pos:start="265:18" pos:end="265:27">attachment</name></decl>;</decl_stmt>

        <decl_stmt pos:start="267:9" pos:end="267:22"><decl pos:start="267:9" pos:end="267:21"><type pos:start="267:9" pos:end="267:20"><specifier pos:start="267:9" pos:end="267:13">const</specifier> <name pos:start="267:15" pos:end="267:18">char</name> <modifier pos:start="267:20" pos:end="267:20">*</modifier></type><name pos:start="267:21" pos:end="267:21">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="269:9" pos:end="269:20"><decl pos:start="269:9" pos:end="269:19"><type pos:start="269:9" pos:end="269:15"><name pos:start="269:9" pos:end="269:15">int64_t</name></type> <name pos:start="269:17" pos:end="269:19">len</name></decl>;</decl_stmt>



        <if_stmt pos:start="273:9" pos:end="281:9"><if pos:start="273:9" pos:end="281:9">if <condition pos:start="273:12" pos:end="273:90">(<expr pos:start="273:13" pos:end="273:89"><operator pos:start="273:13" pos:end="273:13">(</operator><name pos:start="273:14" pos:end="273:16">err</name> <operator pos:start="273:18" pos:end="273:18">=</operator> <call pos:start="273:20" pos:end="273:84"><name pos:start="273:20" pos:end="273:29">avio_open2</name><argument_list pos:start="273:30" pos:end="273:84">(<argument pos:start="273:31" pos:end="273:33"><expr pos:start="273:31" pos:end="273:33"><operator pos:start="273:31" pos:end="273:31">&amp;</operator><name pos:start="273:32" pos:end="273:33">pb</name></expr></argument>, <argument pos:start="273:36" pos:end="273:52"><expr pos:start="273:36" pos:end="273:52"><name pos:start="273:36" pos:end="273:52"><name pos:start="273:36" pos:end="273:36">o</name><operator pos:start="273:37" pos:end="273:38">-&gt;</operator><name pos:start="273:39" pos:end="273:49">attachments</name><index pos:start="273:50" pos:end="273:52">[<expr pos:start="273:51" pos:end="273:51"><name pos:start="273:51" pos:end="273:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="273:55" pos:end="273:68"><expr pos:start="273:55" pos:end="273:68"><name pos:start="273:55" pos:end="273:68">AVIO_FLAG_READ</name></expr></argument>, <argument pos:start="273:71" pos:end="273:77"><expr pos:start="273:71" pos:end="273:77"><operator pos:start="273:71" pos:end="273:71">&amp;</operator><name pos:start="273:72" pos:end="273:77">int_cb</name></expr></argument>, <argument pos:start="273:80" pos:end="273:83"><expr pos:start="273:80" pos:end="273:83"><name pos:start="273:80" pos:end="273:83">NULL</name></expr></argument>)</argument_list></call><operator pos:start="273:85" pos:end="273:85">)</operator> <operator pos:start="273:87" pos:end="273:87">&lt;</operator> <literal type="number" pos:start="273:89" pos:end="273:89">0</literal></expr>)</condition> <block pos:start="273:92" pos:end="281:9">{<block_content pos:start="275:13" pos:end="279:28">

            <expr_stmt pos:start="275:13" pos:end="277:38"><expr pos:start="275:13" pos:end="277:37"><call pos:start="275:13" pos:end="277:37"><name pos:start="275:13" pos:end="275:18">av_log</name><argument_list pos:start="275:19" pos:end="277:37">(<argument pos:start="275:20" pos:end="275:23"><expr pos:start="275:20" pos:end="275:23"><name pos:start="275:20" pos:end="275:23">NULL</name></expr></argument>, <argument pos:start="275:26" pos:end="275:37"><expr pos:start="275:26" pos:end="275:37"><name pos:start="275:26" pos:end="275:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="275:40" pos:end="275:77"><expr pos:start="275:40" pos:end="275:77"><literal type="string" pos:start="275:40" pos:end="275:77">"Could not open attachment file %s.\n"</literal></expr></argument>,

                   <argument pos:start="277:20" pos:end="277:36"><expr pos:start="277:20" pos:end="277:36"><name pos:start="277:20" pos:end="277:36"><name pos:start="277:20" pos:end="277:20">o</name><operator pos:start="277:21" pos:end="277:22">-&gt;</operator><name pos:start="277:23" pos:end="277:33">attachments</name><index pos:start="277:34" pos:end="277:36">[<expr pos:start="277:35" pos:end="277:35"><name pos:start="277:35" pos:end="277:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:28"><expr pos:start="279:13" pos:end="279:27"><call pos:start="279:13" pos:end="279:27"><name pos:start="279:13" pos:end="279:24">exit_program</name><argument_list pos:start="279:25" pos:end="279:27">(<argument pos:start="279:26" pos:end="279:26"><expr pos:start="279:26" pos:end="279:26"><literal type="number" pos:start="279:26" pos:end="279:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="283:9" pos:end="291:9"><if pos:start="283:9" pos:end="291:9">if <condition pos:start="283:12" pos:end="283:39">(<expr pos:start="283:13" pos:end="283:38"><operator pos:start="283:13" pos:end="283:13">(</operator><name pos:start="283:14" pos:end="283:16">len</name> <operator pos:start="283:18" pos:end="283:18">=</operator> <call pos:start="283:20" pos:end="283:32"><name pos:start="283:20" pos:end="283:28">avio_size</name><argument_list pos:start="283:29" pos:end="283:32">(<argument pos:start="283:30" pos:end="283:31"><expr pos:start="283:30" pos:end="283:31"><name pos:start="283:30" pos:end="283:31">pb</name></expr></argument>)</argument_list></call><operator pos:start="283:33" pos:end="283:33">)</operator> <operator pos:start="283:35" pos:end="283:36">&lt;=</operator> <literal type="number" pos:start="283:38" pos:end="283:38">0</literal></expr>)</condition> <block pos:start="283:41" pos:end="291:9">{<block_content pos:start="285:13" pos:end="289:28">

            <expr_stmt pos:start="285:13" pos:end="287:38"><expr pos:start="285:13" pos:end="287:37"><call pos:start="285:13" pos:end="287:37"><name pos:start="285:13" pos:end="285:18">av_log</name><argument_list pos:start="285:19" pos:end="287:37">(<argument pos:start="285:20" pos:end="285:23"><expr pos:start="285:20" pos:end="285:23"><name pos:start="285:20" pos:end="285:23">NULL</name></expr></argument>, <argument pos:start="285:26" pos:end="285:37"><expr pos:start="285:26" pos:end="285:37"><name pos:start="285:26" pos:end="285:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="285:40" pos:end="285:83"><expr pos:start="285:40" pos:end="285:83"><literal type="string" pos:start="285:40" pos:end="285:83">"Could not get size of the attachment %s.\n"</literal></expr></argument>,

                   <argument pos:start="287:20" pos:end="287:36"><expr pos:start="287:20" pos:end="287:36"><name pos:start="287:20" pos:end="287:36"><name pos:start="287:20" pos:end="287:20">o</name><operator pos:start="287:21" pos:end="287:22">-&gt;</operator><name pos:start="287:23" pos:end="287:33">attachments</name><index pos:start="287:34" pos:end="287:36">[<expr pos:start="287:35" pos:end="287:35"><name pos:start="287:35" pos:end="287:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:28"><expr pos:start="289:13" pos:end="289:27"><call pos:start="289:13" pos:end="289:27"><name pos:start="289:13" pos:end="289:24">exit_program</name><argument_list pos:start="289:25" pos:end="289:27">(<argument pos:start="289:26" pos:end="289:26"><expr pos:start="289:26" pos:end="289:26"><literal type="number" pos:start="289:26" pos:end="289:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="293:9" pos:end="301:9"><if pos:start="293:9" pos:end="301:9">if <condition pos:start="293:12" pos:end="293:43">(<expr pos:start="293:13" pos:end="293:42"><operator pos:start="293:13" pos:end="293:13">!</operator><operator pos:start="293:14" pos:end="293:14">(</operator><name pos:start="293:15" pos:end="293:24">attachment</name> <operator pos:start="293:26" pos:end="293:26">=</operator> <call pos:start="293:28" pos:end="293:41"><name pos:start="293:28" pos:end="293:36">av_malloc</name><argument_list pos:start="293:37" pos:end="293:41">(<argument pos:start="293:38" pos:end="293:40"><expr pos:start="293:38" pos:end="293:40"><name pos:start="293:38" pos:end="293:40">len</name></expr></argument>)</argument_list></call><operator pos:start="293:42" pos:end="293:42">)</operator></expr>)</condition> <block pos:start="293:45" pos:end="301:9">{<block_content pos:start="295:13" pos:end="299:28">

            <expr_stmt pos:start="295:13" pos:end="297:38"><expr pos:start="295:13" pos:end="297:37"><call pos:start="295:13" pos:end="297:37"><name pos:start="295:13" pos:end="295:18">av_log</name><argument_list pos:start="295:19" pos:end="297:37">(<argument pos:start="295:20" pos:end="295:23"><expr pos:start="295:20" pos:end="295:23"><name pos:start="295:20" pos:end="295:23">NULL</name></expr></argument>, <argument pos:start="295:26" pos:end="295:37"><expr pos:start="295:26" pos:end="295:37"><name pos:start="295:26" pos:end="295:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="295:40" pos:end="295:86"><expr pos:start="295:40" pos:end="295:86"><literal type="string" pos:start="295:40" pos:end="295:86">"Attachment %s too large to fit into memory.\n"</literal></expr></argument>,

                   <argument pos:start="297:20" pos:end="297:36"><expr pos:start="297:20" pos:end="297:36"><name pos:start="297:20" pos:end="297:36"><name pos:start="297:20" pos:end="297:20">o</name><operator pos:start="297:21" pos:end="297:22">-&gt;</operator><name pos:start="297:23" pos:end="297:33">attachments</name><index pos:start="297:34" pos:end="297:36">[<expr pos:start="297:35" pos:end="297:35"><name pos:start="297:35" pos:end="297:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:28"><expr pos:start="299:13" pos:end="299:27"><call pos:start="299:13" pos:end="299:27"><name pos:start="299:13" pos:end="299:24">exit_program</name><argument_list pos:start="299:25" pos:end="299:27">(<argument pos:start="299:26" pos:end="299:26"><expr pos:start="299:26" pos:end="299:26"><literal type="number" pos:start="299:26" pos:end="299:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:39"><expr pos:start="303:9" pos:end="303:38"><call pos:start="303:9" pos:end="303:38"><name pos:start="303:9" pos:end="303:17">avio_read</name><argument_list pos:start="303:18" pos:end="303:38">(<argument pos:start="303:19" pos:end="303:20"><expr pos:start="303:19" pos:end="303:20"><name pos:start="303:19" pos:end="303:20">pb</name></expr></argument>, <argument pos:start="303:23" pos:end="303:32"><expr pos:start="303:23" pos:end="303:32"><name pos:start="303:23" pos:end="303:32">attachment</name></expr></argument>, <argument pos:start="303:35" pos:end="303:37"><expr pos:start="303:35" pos:end="303:37"><name pos:start="303:35" pos:end="303:37">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="307:9" pos:end="307:43"><expr pos:start="307:9" pos:end="307:42"><name pos:start="307:9" pos:end="307:11">ost</name> <operator pos:start="307:13" pos:end="307:13">=</operator> <call pos:start="307:15" pos:end="307:42"><name pos:start="307:15" pos:end="307:35">new_attachment_stream</name><argument_list pos:start="307:36" pos:end="307:42">(<argument pos:start="307:37" pos:end="307:37"><expr pos:start="307:37" pos:end="307:37"><name pos:start="307:37" pos:end="307:37">o</name></expr></argument>, <argument pos:start="307:40" pos:end="307:41"><expr pos:start="307:40" pos:end="307:41"><name pos:start="307:40" pos:end="307:41">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:43"><expr pos:start="309:9" pos:end="309:42"><name pos:start="309:9" pos:end="309:24"><name pos:start="309:9" pos:end="309:11">ost</name><operator pos:start="309:12" pos:end="309:13">-&gt;</operator><name pos:start="309:14" pos:end="309:24">stream_copy</name></name>               <operator pos:start="309:40" pos:end="309:40">=</operator> <literal type="number" pos:start="309:42" pos:end="309:42">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:44"><expr pos:start="311:9" pos:end="311:43"><name pos:start="311:9" pos:end="311:25"><name pos:start="311:9" pos:end="311:11">ost</name><operator pos:start="311:12" pos:end="311:13">-&gt;</operator><name pos:start="311:14" pos:end="311:25">source_index</name></name>              <operator pos:start="311:40" pos:end="311:40">=</operator> <operator pos:start="311:42" pos:end="311:42">-</operator><literal type="number" pos:start="311:43" pos:end="311:43">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:59"><expr pos:start="313:9" pos:end="313:58"><name pos:start="313:9" pos:end="313:32"><name pos:start="313:9" pos:end="313:11">ost</name><operator pos:start="313:12" pos:end="313:13">-&gt;</operator><name pos:start="313:14" pos:end="313:32">attachment_filename</name></name>       <operator pos:start="313:40" pos:end="313:40">=</operator> <name pos:start="313:42" pos:end="313:58"><name pos:start="313:42" pos:end="313:42">o</name><operator pos:start="313:43" pos:end="313:44">-&gt;</operator><name pos:start="313:45" pos:end="313:55">attachments</name><index pos:start="313:56" pos:end="313:58">[<expr pos:start="313:57" pos:end="313:57"><name pos:start="313:57" pos:end="313:57">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:52"><expr pos:start="315:9" pos:end="315:51"><name pos:start="315:9" pos:end="315:33"><name pos:start="315:9" pos:end="315:11">ost</name><operator pos:start="315:12" pos:end="315:13">-&gt;</operator><name pos:start="315:14" pos:end="315:15">st</name><operator pos:start="315:16" pos:end="315:17">-&gt;</operator><name pos:start="315:18" pos:end="315:22">codec</name><operator pos:start="315:23" pos:end="315:24">-&gt;</operator><name pos:start="315:25" pos:end="315:33">extradata</name></name>      <operator pos:start="315:40" pos:end="315:40">=</operator> <name pos:start="315:42" pos:end="315:51">attachment</name></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:45"><expr pos:start="317:9" pos:end="317:44"><name pos:start="317:9" pos:end="317:38"><name pos:start="317:9" pos:end="317:11">ost</name><operator pos:start="317:12" pos:end="317:13">-&gt;</operator><name pos:start="317:14" pos:end="317:15">st</name><operator pos:start="317:16" pos:end="317:17">-&gt;</operator><name pos:start="317:18" pos:end="317:22">codec</name><operator pos:start="317:23" pos:end="317:24">-&gt;</operator><name pos:start="317:25" pos:end="317:38">extradata_size</name></name> <operator pos:start="317:40" pos:end="317:40">=</operator> <name pos:start="317:42" pos:end="317:44">len</name></expr>;</expr_stmt>



        <expr_stmt pos:start="321:9" pos:end="321:44"><expr pos:start="321:9" pos:end="321:43"><name pos:start="321:9" pos:end="321:9">p</name> <operator pos:start="321:11" pos:end="321:11">=</operator> <call pos:start="321:13" pos:end="321:43"><name pos:start="321:13" pos:end="321:19">strrchr</name><argument_list pos:start="321:20" pos:end="321:43">(<argument pos:start="321:21" pos:end="321:37"><expr pos:start="321:21" pos:end="321:37"><name pos:start="321:21" pos:end="321:37"><name pos:start="321:21" pos:end="321:21">o</name><operator pos:start="321:22" pos:end="321:23">-&gt;</operator><name pos:start="321:24" pos:end="321:34">attachments</name><index pos:start="321:35" pos:end="321:37">[<expr pos:start="321:36" pos:end="321:36"><name pos:start="321:36" pos:end="321:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="321:40" pos:end="321:42"><expr pos:start="321:40" pos:end="321:42"><literal type="char" pos:start="321:40" pos:end="321:42">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:115"><expr pos:start="323:9" pos:end="323:114"><call pos:start="323:9" pos:end="323:114"><name pos:start="323:9" pos:end="323:19">av_dict_set</name><argument_list pos:start="323:20" pos:end="323:114">(<argument pos:start="323:21" pos:end="323:38"><expr pos:start="323:21" pos:end="323:38"><operator pos:start="323:21" pos:end="323:21">&amp;</operator><name pos:start="323:22" pos:end="323:38"><name pos:start="323:22" pos:end="323:24">ost</name><operator pos:start="323:25" pos:end="323:26">-&gt;</operator><name pos:start="323:27" pos:end="323:28">st</name><operator pos:start="323:29" pos:end="323:30">-&gt;</operator><name pos:start="323:31" pos:end="323:38">metadata</name></name></expr></argument>, <argument pos:start="323:41" pos:end="323:50"><expr pos:start="323:41" pos:end="323:50"><literal type="string" pos:start="323:41" pos:end="323:50">"filename"</literal></expr></argument>, <argument pos:start="323:53" pos:end="323:89"><expr pos:start="323:53" pos:end="323:89"><ternary pos:start="323:53" pos:end="323:89"><condition pos:start="323:53" pos:end="323:63"><expr pos:start="323:53" pos:end="323:61"><operator pos:start="323:53" pos:end="323:53">(</operator><name pos:start="323:54" pos:end="323:54">p</name> <operator pos:start="323:56" pos:end="323:57">&amp;&amp;</operator> <operator pos:start="323:59" pos:end="323:59">*</operator><name pos:start="323:60" pos:end="323:60">p</name><operator pos:start="323:61" pos:end="323:61">)</operator></expr> ?</condition><then pos:start="323:65" pos:end="323:69"> <expr pos:start="323:65" pos:end="323:69"><name pos:start="323:65" pos:end="323:65">p</name> <operator pos:start="323:67" pos:end="323:67">+</operator> <literal type="number" pos:start="323:69" pos:end="323:69">1</literal></expr> </then><else pos:start="323:71" pos:end="323:89">: <expr pos:start="323:73" pos:end="323:89"><name pos:start="323:73" pos:end="323:89"><name pos:start="323:73" pos:end="323:73">o</name><operator pos:start="323:74" pos:end="323:75">-&gt;</operator><name pos:start="323:76" pos:end="323:86">attachments</name><index pos:start="323:87" pos:end="323:89">[<expr pos:start="323:88" pos:end="323:88"><name pos:start="323:88" pos:end="323:88">i</name></expr>]</index></name></expr></else></ternary></expr></argument>, <argument pos:start="323:92" pos:end="323:113"><expr pos:start="323:92" pos:end="323:113"><name pos:start="323:92" pos:end="323:113">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:23"><expr pos:start="325:9" pos:end="325:22"><call pos:start="325:9" pos:end="325:22"><name pos:start="325:9" pos:end="325:18">avio_close</name><argument_list pos:start="325:19" pos:end="325:22">(<argument pos:start="325:20" pos:end="325:21"><expr pos:start="325:20" pos:end="325:21"><name pos:start="325:20" pos:end="325:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="331:5" pos:end="331:106"><expr pos:start="331:5" pos:end="331:105"><name pos:start="331:5" pos:end="331:16">output_files</name> <operator pos:start="331:18" pos:end="331:18">=</operator> <call pos:start="331:20" pos:end="331:105"><name pos:start="331:20" pos:end="331:29">grow_array</name><argument_list pos:start="331:30" pos:end="331:105">(<argument pos:start="331:31" pos:end="331:42"><expr pos:start="331:31" pos:end="331:42"><name pos:start="331:31" pos:end="331:42">output_files</name></expr></argument>, <argument pos:start="331:45" pos:end="331:65"><expr pos:start="331:45" pos:end="331:65"><sizeof pos:start="331:45" pos:end="331:65">sizeof<argument_list pos:start="331:51" pos:end="331:65">(<argument pos:start="331:52" pos:end="331:64"><expr pos:start="331:52" pos:end="331:64"><operator pos:start="331:52" pos:end="331:52">*</operator><name pos:start="331:53" pos:end="331:64">output_files</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="331:68" pos:end="331:83"><expr pos:start="331:68" pos:end="331:83"><operator pos:start="331:68" pos:end="331:68">&amp;</operator><name pos:start="331:69" pos:end="331:83">nb_output_files</name></expr></argument>, <argument pos:start="331:86" pos:end="331:104"><expr pos:start="331:86" pos:end="331:104"><name pos:start="331:86" pos:end="331:100">nb_output_files</name> <operator pos:start="331:102" pos:end="331:102">+</operator> <literal type="number" pos:start="331:104" pos:end="331:104">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="333:5" pos:end="333:53"><expr pos:start="333:5" pos:end="333:52"><name pos:start="333:5" pos:end="333:37"><name pos:start="333:5" pos:end="333:16">output_files</name><index pos:start="333:17" pos:end="333:37">[<expr pos:start="333:18" pos:end="333:36"><name pos:start="333:18" pos:end="333:32">nb_output_files</name> <operator pos:start="333:34" pos:end="333:34">-</operator> <literal type="number" pos:start="333:36" pos:end="333:36">1</literal></expr>]</index></name><operator pos:start="333:38" pos:end="333:38">.</operator><name pos:start="333:39" pos:end="333:41">ctx</name>       <operator pos:start="333:49" pos:end="333:49">=</operator> <name pos:start="333:51" pos:end="333:52">oc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:85"><expr pos:start="335:5" pos:end="335:84"><name pos:start="335:5" pos:end="335:37"><name pos:start="335:5" pos:end="335:16">output_files</name><index pos:start="335:17" pos:end="335:37">[<expr pos:start="335:18" pos:end="335:36"><name pos:start="335:18" pos:end="335:32">nb_output_files</name> <operator pos:start="335:34" pos:end="335:34">-</operator> <literal type="number" pos:start="335:36" pos:end="335:36">1</literal></expr>]</index></name><operator pos:start="335:38" pos:end="335:38">.</operator><name pos:start="335:39" pos:end="335:47">ost_index</name> <operator pos:start="335:49" pos:end="335:49">=</operator> <name pos:start="335:51" pos:end="335:67">nb_output_streams</name> <operator pos:start="335:69" pos:end="335:69">-</operator> <name pos:start="335:71" pos:end="335:84"><name pos:start="335:71" pos:end="335:72">oc</name><operator pos:start="335:73" pos:end="335:74">-&gt;</operator><name pos:start="335:75" pos:end="335:84">nb_streams</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="337:73"><expr pos:start="337:5" pos:end="337:72"><name pos:start="337:5" pos:end="337:37"><name pos:start="337:5" pos:end="337:16">output_files</name><index pos:start="337:17" pos:end="337:37">[<expr pos:start="337:18" pos:end="337:36"><name pos:start="337:18" pos:end="337:32">nb_output_files</name> <operator pos:start="337:34" pos:end="337:34">-</operator> <literal type="number" pos:start="337:36" pos:end="337:36">1</literal></expr>]</index></name><operator pos:start="337:38" pos:end="337:38">.</operator><name pos:start="337:39" pos:end="337:52">recording_time</name> <operator pos:start="337:54" pos:end="337:54">=</operator> <name pos:start="337:56" pos:end="337:72"><name pos:start="337:56" pos:end="337:56">o</name><operator pos:start="337:57" pos:end="337:58">-&gt;</operator><name pos:start="337:59" pos:end="337:72">recording_time</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="339:5" pos:end="339:69"><expr pos:start="339:5" pos:end="339:68"><name pos:start="339:5" pos:end="339:37"><name pos:start="339:5" pos:end="339:16">output_files</name><index pos:start="339:17" pos:end="339:37">[<expr pos:start="339:18" pos:end="339:36"><name pos:start="339:18" pos:end="339:32">nb_output_files</name> <operator pos:start="339:34" pos:end="339:34">-</operator> <literal type="number" pos:start="339:36" pos:end="339:36">1</literal></expr>]</index></name><operator pos:start="339:38" pos:end="339:38">.</operator><name pos:start="339:39" pos:end="339:48">start_time</name>     <operator pos:start="339:54" pos:end="339:54">=</operator> <name pos:start="339:56" pos:end="339:68"><name pos:start="339:56" pos:end="339:56">o</name><operator pos:start="339:57" pos:end="339:58">-&gt;</operator><name pos:start="339:59" pos:end="339:68">start_time</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="341:5" pos:end="341:73"><expr pos:start="341:5" pos:end="341:72"><name pos:start="341:5" pos:end="341:37"><name pos:start="341:5" pos:end="341:16">output_files</name><index pos:start="341:17" pos:end="341:37">[<expr pos:start="341:18" pos:end="341:36"><name pos:start="341:18" pos:end="341:32">nb_output_files</name> <operator pos:start="341:34" pos:end="341:34">-</operator> <literal type="number" pos:start="341:36" pos:end="341:36">1</literal></expr>]</index></name><operator pos:start="341:38" pos:end="341:38">.</operator><name pos:start="341:39" pos:end="341:52">limit_filesize</name> <operator pos:start="341:54" pos:end="341:54">=</operator> <name pos:start="341:56" pos:end="341:72"><name pos:start="341:56" pos:end="341:56">o</name><operator pos:start="341:57" pos:end="341:58">-&gt;</operator><name pos:start="341:59" pos:end="341:72">limit_filesize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:74"><expr pos:start="343:5" pos:end="343:73"><call pos:start="343:5" pos:end="343:73"><name pos:start="343:5" pos:end="343:16">av_dict_copy</name><argument_list pos:start="343:17" pos:end="343:73">(<argument pos:start="343:18" pos:end="343:56"><expr pos:start="343:18" pos:end="343:56"><operator pos:start="343:18" pos:end="343:18">&amp;</operator><name pos:start="343:19" pos:end="343:51"><name pos:start="343:19" pos:end="343:30">output_files</name><index pos:start="343:31" pos:end="343:51">[<expr pos:start="343:32" pos:end="343:50"><name pos:start="343:32" pos:end="343:46">nb_output_files</name> <operator pos:start="343:48" pos:end="343:48">-</operator> <literal type="number" pos:start="343:50" pos:end="343:50">1</literal></expr>]</index></name><operator pos:start="343:52" pos:end="343:52">.</operator><name pos:start="343:53" pos:end="343:56">opts</name></expr></argument>, <argument pos:start="343:59" pos:end="343:69"><expr pos:start="343:59" pos:end="343:69"><name pos:start="343:59" pos:end="343:69">format_opts</name></expr></argument>, <argument pos:start="343:72" pos:end="343:72"><expr pos:start="343:72" pos:end="343:72"><literal type="number" pos:start="343:72" pos:end="343:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="347:5" pos:end="347:63">/* check filename in case of an image number is expected */</comment>

    <if_stmt pos:start="349:5" pos:end="359:5"><if pos:start="349:5" pos:end="359:5">if <condition pos:start="349:8" pos:end="349:46">(<expr pos:start="349:9" pos:end="349:45"><name pos:start="349:9" pos:end="349:26"><name pos:start="349:9" pos:end="349:10">oc</name><operator pos:start="349:11" pos:end="349:12">-&gt;</operator><name pos:start="349:13" pos:end="349:19">oformat</name><operator pos:start="349:20" pos:end="349:21">-&gt;</operator><name pos:start="349:22" pos:end="349:26">flags</name></name> <operator pos:start="349:28" pos:end="349:28">&amp;</operator> <name pos:start="349:30" pos:end="349:45">AVFMT_NEEDNUMBER</name></expr>)</condition> <block pos:start="349:48" pos:end="359:5">{<block_content pos:start="351:9" pos:end="357:9">

        <if_stmt pos:start="351:9" pos:end="357:9"><if pos:start="351:9" pos:end="357:9">if <condition pos:start="351:12" pos:end="351:51">(<expr pos:start="351:13" pos:end="351:50"><operator pos:start="351:13" pos:end="351:13">!</operator><call pos:start="351:14" pos:end="351:50"><name pos:start="351:14" pos:end="351:36">av_filename_number_test</name><argument_list pos:start="351:37" pos:end="351:50">(<argument pos:start="351:38" pos:end="351:49"><expr pos:start="351:38" pos:end="351:49"><name pos:start="351:38" pos:end="351:49"><name pos:start="351:38" pos:end="351:39">oc</name><operator pos:start="351:40" pos:end="351:41">-&gt;</operator><name pos:start="351:42" pos:end="351:49">filename</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="351:53" pos:end="357:9">{<block_content pos:start="353:13" pos:end="355:28">

            <expr_stmt pos:start="353:13" pos:end="353:55"><expr pos:start="353:13" pos:end="353:54"><call pos:start="353:13" pos:end="353:54"><name pos:start="353:13" pos:end="353:23">print_error</name><argument_list pos:start="353:24" pos:end="353:54">(<argument pos:start="353:25" pos:end="353:36"><expr pos:start="353:25" pos:end="353:36"><name pos:start="353:25" pos:end="353:36"><name pos:start="353:25" pos:end="353:26">oc</name><operator pos:start="353:27" pos:end="353:28">-&gt;</operator><name pos:start="353:29" pos:end="353:36">filename</name></name></expr></argument>, <argument pos:start="353:39" pos:end="353:53"><expr pos:start="353:39" pos:end="353:53"><call pos:start="353:39" pos:end="353:53"><name pos:start="353:39" pos:end="353:45">AVERROR</name><argument_list pos:start="353:46" pos:end="353:53">(<argument pos:start="353:47" pos:end="353:52"><expr pos:start="353:47" pos:end="353:52"><name pos:start="353:47" pos:end="353:52">EINVAL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="355:13" pos:end="355:28"><expr pos:start="355:13" pos:end="355:27"><call pos:start="355:13" pos:end="355:27"><name pos:start="355:13" pos:end="355:24">exit_program</name><argument_list pos:start="355:25" pos:end="355:27">(<argument pos:start="355:26" pos:end="355:26"><expr pos:start="355:26" pos:end="355:26"><literal type="number" pos:start="355:26" pos:end="355:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="363:5" pos:end="385:5"><if pos:start="363:5" pos:end="385:5">if <condition pos:start="363:8" pos:end="363:45">(<expr pos:start="363:9" pos:end="363:44"><operator pos:start="363:9" pos:end="363:9">!</operator><operator pos:start="363:10" pos:end="363:10">(</operator><name pos:start="363:11" pos:end="363:28"><name pos:start="363:11" pos:end="363:12">oc</name><operator pos:start="363:13" pos:end="363:14">-&gt;</operator><name pos:start="363:15" pos:end="363:21">oformat</name><operator pos:start="363:22" pos:end="363:23">-&gt;</operator><name pos:start="363:24" pos:end="363:28">flags</name></name> <operator pos:start="363:30" pos:end="363:30">&amp;</operator> <name pos:start="363:32" pos:end="363:43">AVFMT_NOFILE</name><operator pos:start="363:44" pos:end="363:44">)</operator></expr>)</condition> <block pos:start="363:47" pos:end="385:5">{<block_content pos:start="367:9" pos:end="383:9">

        <comment type="block" pos:start="365:9" pos:end="365:70">/* test if it already exists to avoid losing precious files */</comment>

        <expr_stmt pos:start="367:9" pos:end="367:40"><expr pos:start="367:9" pos:end="367:39"><call pos:start="367:9" pos:end="367:39"><name pos:start="367:9" pos:end="367:29">assert_file_overwrite</name><argument_list pos:start="367:30" pos:end="367:39">(<argument pos:start="367:31" pos:end="367:38"><expr pos:start="367:31" pos:end="367:38"><name pos:start="367:31" pos:end="367:38">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="371:9" pos:end="371:27">/* open the file */</comment>

        <if_stmt pos:start="373:9" pos:end="383:9"><if pos:start="373:9" pos:end="383:9">if <condition pos:start="373:12" pos:end="377:76">(<expr pos:start="373:13" pos:end="377:75"><operator pos:start="373:13" pos:end="373:13">(</operator><name pos:start="373:14" pos:end="373:16">err</name> <operator pos:start="373:18" pos:end="373:18">=</operator> <call pos:start="373:20" pos:end="377:70"><name pos:start="373:20" pos:end="373:29">avio_open2</name><argument_list pos:start="373:30" pos:end="377:70">(<argument pos:start="373:31" pos:end="373:37"><expr pos:start="373:31" pos:end="373:37"><operator pos:start="373:31" pos:end="373:31">&amp;</operator><name pos:start="373:32" pos:end="373:37"><name pos:start="373:32" pos:end="373:33">oc</name><operator pos:start="373:34" pos:end="373:35">-&gt;</operator><name pos:start="373:36" pos:end="373:37">pb</name></name></expr></argument>, <argument pos:start="373:40" pos:end="373:47"><expr pos:start="373:40" pos:end="373:47"><name pos:start="373:40" pos:end="373:47">filename</name></expr></argument>, <argument pos:start="373:50" pos:end="373:64"><expr pos:start="373:50" pos:end="373:64"><name pos:start="373:50" pos:end="373:64">AVIO_FLAG_WRITE</name></expr></argument>,

                              <argument pos:start="375:31" pos:end="375:53"><expr pos:start="375:31" pos:end="375:53"><operator pos:start="375:31" pos:end="375:31">&amp;</operator><name pos:start="375:32" pos:end="375:53"><name pos:start="375:32" pos:end="375:33">oc</name><operator pos:start="375:34" pos:end="375:35">-&gt;</operator><name pos:start="375:36" pos:end="375:53">interrupt_callback</name></name></expr></argument>,

                              <argument pos:start="377:31" pos:end="377:69"><expr pos:start="377:31" pos:end="377:69"><operator pos:start="377:31" pos:end="377:31">&amp;</operator><name pos:start="377:32" pos:end="377:64"><name pos:start="377:32" pos:end="377:43">output_files</name><index pos:start="377:44" pos:end="377:64">[<expr pos:start="377:45" pos:end="377:63"><name pos:start="377:45" pos:end="377:59">nb_output_files</name> <operator pos:start="377:61" pos:end="377:61">-</operator> <literal type="number" pos:start="377:63" pos:end="377:63">1</literal></expr>]</index></name><operator pos:start="377:65" pos:end="377:65">.</operator><name pos:start="377:66" pos:end="377:69">opts</name></expr></argument>)</argument_list></call><operator pos:start="377:71" pos:end="377:71">)</operator> <operator pos:start="377:73" pos:end="377:73">&lt;</operator> <literal type="number" pos:start="377:75" pos:end="377:75">0</literal></expr>)</condition> <block pos:start="377:78" pos:end="383:9">{<block_content pos:start="379:13" pos:end="381:28">

            <expr_stmt pos:start="379:13" pos:end="379:39"><expr pos:start="379:13" pos:end="379:38"><call pos:start="379:13" pos:end="379:38"><name pos:start="379:13" pos:end="379:23">print_error</name><argument_list pos:start="379:24" pos:end="379:38">(<argument pos:start="379:25" pos:end="379:32"><expr pos:start="379:25" pos:end="379:32"><name pos:start="379:25" pos:end="379:32">filename</name></expr></argument>, <argument pos:start="379:35" pos:end="379:37"><expr pos:start="379:35" pos:end="379:37"><name pos:start="379:35" pos:end="379:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:28"><expr pos:start="381:13" pos:end="381:27"><call pos:start="381:13" pos:end="381:27"><name pos:start="381:13" pos:end="381:24">exit_program</name><argument_list pos:start="381:25" pos:end="381:27">(<argument pos:start="381:26" pos:end="381:26"><expr pos:start="381:26" pos:end="381:26"><literal type="number" pos:start="381:26" pos:end="381:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="389:5" pos:end="397:5"><if pos:start="389:5" pos:end="397:5">if <condition pos:start="389:8" pos:end="389:23">(<expr pos:start="389:9" pos:end="389:22"><name pos:start="389:9" pos:end="389:22"><name pos:start="389:9" pos:end="389:9">o</name><operator pos:start="389:10" pos:end="389:11">-&gt;</operator><name pos:start="389:12" pos:end="389:22">mux_preload</name></name></expr>)</condition> <block pos:start="389:25" pos:end="397:5">{<block_content pos:start="391:9" pos:end="395:80">

        <decl_stmt pos:start="391:9" pos:end="391:24"><decl pos:start="391:9" pos:end="391:23"><type pos:start="391:9" pos:end="391:15"><name pos:start="391:9" pos:end="391:15">uint8_t</name></type> <name pos:start="391:17" pos:end="391:23"><name pos:start="391:17" pos:end="391:19">buf</name><index pos:start="391:20" pos:end="391:23">[<expr pos:start="391:21" pos:end="391:22"><literal type="number" pos:start="391:21" pos:end="391:22">64</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="393:9" pos:end="393:77"><expr pos:start="393:9" pos:end="393:76"><call pos:start="393:9" pos:end="393:76"><name pos:start="393:9" pos:end="393:16">snprintf</name><argument_list pos:start="393:17" pos:end="393:76">(<argument pos:start="393:18" pos:end="393:20"><expr pos:start="393:18" pos:end="393:20"><name pos:start="393:18" pos:end="393:20">buf</name></expr></argument>, <argument pos:start="393:23" pos:end="393:33"><expr pos:start="393:23" pos:end="393:33"><sizeof pos:start="393:23" pos:end="393:33">sizeof<argument_list pos:start="393:29" pos:end="393:33">(<argument pos:start="393:30" pos:end="393:32"><expr pos:start="393:30" pos:end="393:32"><name pos:start="393:30" pos:end="393:32">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="393:36" pos:end="393:39"><expr pos:start="393:36" pos:end="393:39"><literal type="string" pos:start="393:36" pos:end="393:39">"%d"</literal></expr></argument>, <argument pos:start="393:42" pos:end="393:75"><expr pos:start="393:42" pos:end="393:75"><operator pos:start="393:42" pos:end="393:42">(</operator><name pos:start="393:43" pos:end="393:45">int</name><operator pos:start="393:46" pos:end="393:46">)</operator><operator pos:start="393:47" pos:end="393:47">(</operator><name pos:start="393:48" pos:end="393:61"><name pos:start="393:48" pos:end="393:48">o</name><operator pos:start="393:49" pos:end="393:50">-&gt;</operator><name pos:start="393:51" pos:end="393:61">mux_preload</name></name><operator pos:start="393:62" pos:end="393:62">*</operator><name pos:start="393:63" pos:end="393:74">AV_TIME_BASE</name><operator pos:start="393:75" pos:end="393:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="395:9" pos:end="395:80"><expr pos:start="395:9" pos:end="395:79"><call pos:start="395:9" pos:end="395:79"><name pos:start="395:9" pos:end="395:19">av_dict_set</name><argument_list pos:start="395:20" pos:end="395:79">(<argument pos:start="395:21" pos:end="395:59"><expr pos:start="395:21" pos:end="395:59"><operator pos:start="395:21" pos:end="395:21">&amp;</operator><name pos:start="395:22" pos:end="395:54"><name pos:start="395:22" pos:end="395:33">output_files</name><index pos:start="395:34" pos:end="395:54">[<expr pos:start="395:35" pos:end="395:53"><name pos:start="395:35" pos:end="395:49">nb_output_files</name> <operator pos:start="395:51" pos:end="395:51">-</operator> <literal type="number" pos:start="395:53" pos:end="395:53">1</literal></expr>]</index></name><operator pos:start="395:55" pos:end="395:55">.</operator><name pos:start="395:56" pos:end="395:59">opts</name></expr></argument>, <argument pos:start="395:62" pos:end="395:70"><expr pos:start="395:62" pos:end="395:70"><literal type="string" pos:start="395:62" pos:end="395:70">"preload"</literal></expr></argument>, <argument pos:start="395:73" pos:end="395:75"><expr pos:start="395:73" pos:end="395:75"><name pos:start="395:73" pos:end="395:75">buf</name></expr></argument>, <argument pos:start="395:78" pos:end="395:78"><expr pos:start="395:78" pos:end="395:78"><literal type="number" pos:start="395:78" pos:end="395:78">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="399:5" pos:end="399:59"><expr pos:start="399:5" pos:end="399:58"><name pos:start="399:5" pos:end="399:17"><name pos:start="399:5" pos:end="399:6">oc</name><operator pos:start="399:7" pos:end="399:8">-&gt;</operator><name pos:start="399:9" pos:end="399:17">max_delay</name></name> <operator pos:start="399:19" pos:end="399:19">=</operator> <operator pos:start="399:21" pos:end="399:21">(</operator><name pos:start="399:22" pos:end="399:24">int</name><operator pos:start="399:25" pos:end="399:25">)</operator><operator pos:start="399:26" pos:end="399:26">(</operator><name pos:start="399:27" pos:end="399:42"><name pos:start="399:27" pos:end="399:27">o</name><operator pos:start="399:28" pos:end="399:29">-&gt;</operator><name pos:start="399:30" pos:end="399:42">mux_max_delay</name></name> <operator pos:start="399:44" pos:end="399:44">*</operator> <name pos:start="399:46" pos:end="399:57">AV_TIME_BASE</name><operator pos:start="399:58" pos:end="399:58">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="403:5" pos:end="409:5"><if pos:start="403:5" pos:end="409:5">if <condition pos:start="403:8" pos:end="403:25">(<expr pos:start="403:9" pos:end="403:24"><name pos:start="403:9" pos:end="403:19">loop_output</name> <operator pos:start="403:21" pos:end="403:22">&gt;=</operator> <literal type="number" pos:start="403:24" pos:end="403:24">0</literal></expr>)</condition> <block pos:start="403:27" pos:end="409:5">{<block_content pos:start="405:9" pos:end="407:38">

        <expr_stmt pos:start="405:9" pos:end="405:80"><expr pos:start="405:9" pos:end="405:79"><call pos:start="405:9" pos:end="405:79"><name pos:start="405:9" pos:end="405:14">av_log</name><argument_list pos:start="405:15" pos:end="405:79">(<argument pos:start="405:16" pos:end="405:19"><expr pos:start="405:16" pos:end="405:19"><name pos:start="405:16" pos:end="405:19">NULL</name></expr></argument>, <argument pos:start="405:22" pos:end="405:35"><expr pos:start="405:22" pos:end="405:35"><name pos:start="405:22" pos:end="405:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="405:38" pos:end="405:78"><expr pos:start="405:38" pos:end="405:78"><literal type="string" pos:start="405:38" pos:end="405:78">"-loop_output is deprecated, use -loop\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="407:9" pos:end="407:38"><expr pos:start="407:9" pos:end="407:37"><name pos:start="407:9" pos:end="407:23"><name pos:start="407:9" pos:end="407:10">oc</name><operator pos:start="407:11" pos:end="407:12">-&gt;</operator><name pos:start="407:13" pos:end="407:23">loop_output</name></name> <operator pos:start="407:25" pos:end="407:25">=</operator> <name pos:start="407:27" pos:end="407:37">loop_output</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="413:5" pos:end="413:23">/* copy metadata */</comment>

    <for pos:start="415:5" pos:end="437:5">for <control pos:start="415:9" pos:end="415:44">(<init pos:start="415:10" pos:end="415:15"><expr pos:start="415:10" pos:end="415:14"><name pos:start="415:10" pos:end="415:10">i</name> <operator pos:start="415:12" pos:end="415:12">=</operator> <literal type="number" pos:start="415:14" pos:end="415:14">0</literal></expr>;</init> <condition pos:start="415:17" pos:end="415:39"><expr pos:start="415:17" pos:end="415:38"><name pos:start="415:17" pos:end="415:17">i</name> <operator pos:start="415:19" pos:end="415:19">&lt;</operator> <name pos:start="415:21" pos:end="415:38"><name pos:start="415:21" pos:end="415:21">o</name><operator pos:start="415:22" pos:end="415:23">-&gt;</operator><name pos:start="415:24" pos:end="415:38">nb_metadata_map</name></name></expr>;</condition> <incr pos:start="415:41" pos:end="415:43"><expr pos:start="415:41" pos:end="415:43"><name pos:start="415:41" pos:end="415:41">i</name><operator pos:start="415:42" pos:end="415:43">++</operator></expr></incr>)</control> <block pos:start="415:46" pos:end="437:5">{<block_content pos:start="417:9" pos:end="435:107">

        <decl_stmt pos:start="417:9" pos:end="417:16"><decl pos:start="417:9" pos:end="417:15"><type pos:start="417:9" pos:end="417:14"><name pos:start="417:9" pos:end="417:12">char</name> <modifier pos:start="417:14" pos:end="417:14">*</modifier></type><name pos:start="417:15" pos:end="417:15">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="419:9" pos:end="419:68"><decl pos:start="419:9" pos:end="419:67"><type pos:start="419:9" pos:end="419:11"><name pos:start="419:9" pos:end="419:11">int</name></type> <name pos:start="419:13" pos:end="419:25">in_file_index</name> <init pos:start="419:27" pos:end="419:67">= <expr pos:start="419:29" pos:end="419:67"><call pos:start="419:29" pos:end="419:67"><name pos:start="419:29" pos:end="419:34">strtol</name><argument_list pos:start="419:35" pos:end="419:67">(<argument pos:start="419:36" pos:end="419:59"><expr pos:start="419:36" pos:end="419:59"><name pos:start="419:36" pos:end="419:53"><name pos:start="419:36" pos:end="419:36">o</name><operator pos:start="419:37" pos:end="419:38">-&gt;</operator><name pos:start="419:39" pos:end="419:50">metadata_map</name><index pos:start="419:51" pos:end="419:53">[<expr pos:start="419:52" pos:end="419:52"><name pos:start="419:52" pos:end="419:52">i</name></expr>]</index></name><operator pos:start="419:54" pos:end="419:54">.</operator><name pos:start="419:55" pos:end="419:59"><name pos:start="419:55" pos:end="419:55">u</name><operator pos:start="419:56" pos:end="419:56">.</operator><name pos:start="419:57" pos:end="419:59">str</name></name></expr></argument>, <argument pos:start="419:62" pos:end="419:63"><expr pos:start="419:62" pos:end="419:63"><operator pos:start="419:62" pos:end="419:62">&amp;</operator><name pos:start="419:63" pos:end="419:63">p</name></expr></argument>, <argument pos:start="419:66" pos:end="419:66"><expr pos:start="419:66" pos:end="419:66"><literal type="number" pos:start="419:66" pos:end="419:66">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="423:9" pos:end="425:21"><if pos:start="423:9" pos:end="425:21">if <condition pos:start="423:12" pos:end="423:30">(<expr pos:start="423:13" pos:end="423:29"><name pos:start="423:13" pos:end="423:25">in_file_index</name> <operator pos:start="423:27" pos:end="423:27">&lt;</operator> <literal type="number" pos:start="423:29" pos:end="423:29">0</literal></expr>)</condition><block type="pseudo" pos:start="425:13" pos:end="425:21"><block_content pos:start="425:13" pos:end="425:21">

            <continue pos:start="425:13" pos:end="425:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="427:9" pos:end="433:9"><if pos:start="427:9" pos:end="433:9">if <condition pos:start="427:12" pos:end="427:44">(<expr pos:start="427:13" pos:end="427:43"><name pos:start="427:13" pos:end="427:25">in_file_index</name> <operator pos:start="427:27" pos:end="427:28">&gt;=</operator> <name pos:start="427:30" pos:end="427:43">nb_input_files</name></expr>)</condition> <block pos:start="427:46" pos:end="433:9">{<block_content pos:start="429:13" pos:end="431:28">

            <expr_stmt pos:start="429:13" pos:end="429:118"><expr pos:start="429:13" pos:end="429:117"><call pos:start="429:13" pos:end="429:117"><name pos:start="429:13" pos:end="429:18">av_log</name><argument_list pos:start="429:19" pos:end="429:117">(<argument pos:start="429:20" pos:end="429:23"><expr pos:start="429:20" pos:end="429:23"><name pos:start="429:20" pos:end="429:23">NULL</name></expr></argument>, <argument pos:start="429:26" pos:end="429:37"><expr pos:start="429:26" pos:end="429:37"><name pos:start="429:26" pos:end="429:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="429:40" pos:end="429:101"><expr pos:start="429:40" pos:end="429:101"><literal type="string" pos:start="429:40" pos:end="429:101">"Invalid input file index %d while processing metadata maps\n"</literal></expr></argument>, <argument pos:start="429:104" pos:end="429:116"><expr pos:start="429:104" pos:end="429:116"><name pos:start="429:104" pos:end="429:116">in_file_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:28"><expr pos:start="431:13" pos:end="431:27"><call pos:start="431:13" pos:end="431:27"><name pos:start="431:13" pos:end="431:24">exit_program</name><argument_list pos:start="431:25" pos:end="431:27">(<argument pos:start="431:26" pos:end="431:26"><expr pos:start="431:26" pos:end="431:26"><literal type="number" pos:start="431:26" pos:end="431:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="435:9" pos:end="435:107"><expr pos:start="435:9" pos:end="435:106"><call pos:start="435:9" pos:end="435:106"><name pos:start="435:9" pos:end="435:21">copy_metadata</name><argument_list pos:start="435:22" pos:end="435:106">(<argument pos:start="435:23" pos:end="435:50"><expr pos:start="435:23" pos:end="435:50"><name pos:start="435:23" pos:end="435:40"><name pos:start="435:23" pos:end="435:23">o</name><operator pos:start="435:24" pos:end="435:25">-&gt;</operator><name pos:start="435:26" pos:end="435:37">metadata_map</name><index pos:start="435:38" pos:end="435:40">[<expr pos:start="435:39" pos:end="435:39"><name pos:start="435:39" pos:end="435:39">i</name></expr>]</index></name><operator pos:start="435:41" pos:end="435:41">.</operator><name pos:start="435:42" pos:end="435:50">specifier</name></expr></argument>, <argument pos:start="435:53" pos:end="435:66"><expr pos:start="435:53" pos:end="435:66"><ternary pos:start="435:53" pos:end="435:66"><condition pos:start="435:53" pos:end="435:56"><expr pos:start="435:53" pos:end="435:54"><operator pos:start="435:53" pos:end="435:53">*</operator><name pos:start="435:54" pos:end="435:54">p</name></expr> ?</condition><then pos:start="435:58" pos:end="435:62"> <expr pos:start="435:58" pos:end="435:62"><name pos:start="435:58" pos:end="435:58">p</name> <operator pos:start="435:60" pos:end="435:60">+</operator> <literal type="number" pos:start="435:62" pos:end="435:62">1</literal></expr> </then><else pos:start="435:64" pos:end="435:66">: <expr pos:start="435:66" pos:end="435:66"><name pos:start="435:66" pos:end="435:66">p</name></expr></else></ternary></expr></argument>, <argument pos:start="435:69" pos:end="435:70"><expr pos:start="435:69" pos:end="435:70"><name pos:start="435:69" pos:end="435:70">oc</name></expr></argument>, <argument pos:start="435:73" pos:end="435:102"><expr pos:start="435:73" pos:end="435:102"><name pos:start="435:73" pos:end="435:98"><name pos:start="435:73" pos:end="435:83">input_files</name><index pos:start="435:84" pos:end="435:98">[<expr pos:start="435:85" pos:end="435:97"><name pos:start="435:85" pos:end="435:97">in_file_index</name></expr>]</index></name><operator pos:start="435:99" pos:end="435:99">.</operator><name pos:start="435:100" pos:end="435:102">ctx</name></expr></argument>, <argument pos:start="435:105" pos:end="435:105"><expr pos:start="435:105" pos:end="435:105"><name pos:start="435:105" pos:end="435:105">o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="441:5" pos:end="441:23">/* copy chapters */</comment>

    <if_stmt pos:start="443:5" pos:end="471:5"><if pos:start="443:5" pos:end="471:5">if <condition pos:start="443:8" pos:end="443:49">(<expr pos:start="443:9" pos:end="443:48"><name pos:start="443:9" pos:end="443:30"><name pos:start="443:9" pos:end="443:9">o</name><operator pos:start="443:10" pos:end="443:11">-&gt;</operator><name pos:start="443:12" pos:end="443:30">chapters_input_file</name></name> <operator pos:start="443:32" pos:end="443:33">&gt;=</operator> <name pos:start="443:35" pos:end="443:48">nb_input_files</name></expr>)</condition> <block pos:start="443:51" pos:end="471:5">{<block_content pos:start="445:9" pos:end="469:9">

        <if_stmt pos:start="445:9" pos:end="469:9"><if pos:start="445:9" pos:end="461:9">if <condition pos:start="445:12" pos:end="445:46">(<expr pos:start="445:13" pos:end="445:45"><name pos:start="445:13" pos:end="445:34"><name pos:start="445:13" pos:end="445:13">o</name><operator pos:start="445:14" pos:end="445:15">-&gt;</operator><name pos:start="445:16" pos:end="445:34">chapters_input_file</name></name> <operator pos:start="445:36" pos:end="445:37">==</operator> <name pos:start="445:39" pos:end="445:45">INT_MAX</name></expr>)</condition> <block pos:start="445:48" pos:end="461:9">{<block_content pos:start="449:13" pos:end="459:17">

            <comment type="block" pos:start="447:13" pos:end="447:70">/* copy chapters from the first input file that has them*/</comment>

            <expr_stmt pos:start="449:13" pos:end="449:40"><expr pos:start="449:13" pos:end="449:39"><name pos:start="449:13" pos:end="449:34"><name pos:start="449:13" pos:end="449:13">o</name><operator pos:start="449:14" pos:end="449:15">-&gt;</operator><name pos:start="449:16" pos:end="449:34">chapters_input_file</name></name> <operator pos:start="449:36" pos:end="449:36">=</operator> <operator pos:start="449:38" pos:end="449:38">-</operator><literal type="number" pos:start="449:39" pos:end="449:39">1</literal></expr>;</expr_stmt>

            <for pos:start="451:13" pos:end="459:17">for <control pos:start="451:17" pos:end="451:48">(<init pos:start="451:18" pos:end="451:23"><expr pos:start="451:18" pos:end="451:22"><name pos:start="451:18" pos:end="451:18">i</name> <operator pos:start="451:20" pos:end="451:20">=</operator> <literal type="number" pos:start="451:22" pos:end="451:22">0</literal></expr>;</init> <condition pos:start="451:25" pos:end="451:43"><expr pos:start="451:25" pos:end="451:42"><name pos:start="451:25" pos:end="451:25">i</name> <operator pos:start="451:27" pos:end="451:27">&lt;</operator> <name pos:start="451:29" pos:end="451:42">nb_input_files</name></expr>;</condition> <incr pos:start="451:45" pos:end="451:47"><expr pos:start="451:45" pos:end="451:47"><name pos:start="451:45" pos:end="451:45">i</name><operator pos:start="451:46" pos:end="451:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="453:17" pos:end="459:17"><block_content pos:start="453:17" pos:end="459:17">

                <if_stmt pos:start="453:17" pos:end="459:17"><if pos:start="453:17" pos:end="459:17">if <condition pos:start="453:20" pos:end="453:52">(<expr pos:start="453:21" pos:end="453:51"><name pos:start="453:21" pos:end="453:34"><name pos:start="453:21" pos:end="453:31">input_files</name><index pos:start="453:32" pos:end="453:34">[<expr pos:start="453:33" pos:end="453:33"><name pos:start="453:33" pos:end="453:33">i</name></expr>]</index></name><operator pos:start="453:35" pos:end="453:35">.</operator><name pos:start="453:36" pos:end="453:51"><name pos:start="453:36" pos:end="453:38">ctx</name><operator pos:start="453:39" pos:end="453:40">-&gt;</operator><name pos:start="453:41" pos:end="453:51">nb_chapters</name></name></expr>)</condition> <block pos:start="453:54" pos:end="459:17">{<block_content pos:start="455:21" pos:end="457:26">

                    <expr_stmt pos:start="455:21" pos:end="455:47"><expr pos:start="455:21" pos:end="455:46"><name pos:start="455:21" pos:end="455:42"><name pos:start="455:21" pos:end="455:21">o</name><operator pos:start="455:22" pos:end="455:23">-&gt;</operator><name pos:start="455:24" pos:end="455:42">chapters_input_file</name></name> <operator pos:start="455:44" pos:end="455:44">=</operator> <name pos:start="455:46" pos:end="455:46">i</name></expr>;</expr_stmt>

                    <break pos:start="457:21" pos:end="457:26">break;</break>

                </block_content>}</block></if></if_stmt></block_content></block></for>

        </block_content>}</block></if> <else pos:start="461:11" pos:end="469:9">else <block pos:start="461:16" pos:end="469:9">{<block_content pos:start="463:13" pos:end="467:28">

            <expr_stmt pos:start="463:13" pos:end="465:43"><expr pos:start="463:13" pos:end="465:42"><call pos:start="463:13" pos:end="465:42"><name pos:start="463:13" pos:end="463:18">av_log</name><argument_list pos:start="463:19" pos:end="465:42">(<argument pos:start="463:20" pos:end="463:23"><expr pos:start="463:20" pos:end="463:23"><name pos:start="463:20" pos:end="463:23">NULL</name></expr></argument>, <argument pos:start="463:26" pos:end="463:37"><expr pos:start="463:26" pos:end="463:37"><name pos:start="463:26" pos:end="463:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="463:40" pos:end="463:90"><expr pos:start="463:40" pos:end="463:90"><literal type="string" pos:start="463:40" pos:end="463:90">"Invalid input file index %d in chapter mapping.\n"</literal></expr></argument>,

                   <argument pos:start="465:20" pos:end="465:41"><expr pos:start="465:20" pos:end="465:41"><name pos:start="465:20" pos:end="465:41"><name pos:start="465:20" pos:end="465:20">o</name><operator pos:start="465:21" pos:end="465:22">-&gt;</operator><name pos:start="465:23" pos:end="465:41">chapters_input_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="467:13" pos:end="467:28"><expr pos:start="467:13" pos:end="467:27"><call pos:start="467:13" pos:end="467:27"><name pos:start="467:13" pos:end="467:24">exit_program</name><argument_list pos:start="467:25" pos:end="467:27">(<argument pos:start="467:26" pos:end="467:26"><expr pos:start="467:26" pos:end="467:26"><literal type="number" pos:start="467:26" pos:end="467:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="473:5" pos:end="477:52"><if pos:start="473:5" pos:end="477:52">if <condition pos:start="473:8" pos:end="473:36">(<expr pos:start="473:9" pos:end="473:35"><name pos:start="473:9" pos:end="473:30"><name pos:start="473:9" pos:end="473:9">o</name><operator pos:start="473:10" pos:end="473:11">-&gt;</operator><name pos:start="473:12" pos:end="473:30">chapters_input_file</name></name> <operator pos:start="473:32" pos:end="473:33">&gt;=</operator> <literal type="number" pos:start="473:35" pos:end="473:35">0</literal></expr>)</condition><block type="pseudo" pos:start="475:9" pos:end="477:52"><block_content pos:start="475:9" pos:end="477:52">

        <expr_stmt pos:start="475:9" pos:end="477:52"><expr pos:start="475:9" pos:end="477:51"><call pos:start="475:9" pos:end="477:51"><name pos:start="475:9" pos:end="475:21">copy_chapters</name><argument_list pos:start="475:22" pos:end="477:51">(<argument pos:start="475:23" pos:end="475:58"><expr pos:start="475:23" pos:end="475:58"><operator pos:start="475:23" pos:end="475:23">&amp;</operator><name pos:start="475:24" pos:end="475:58"><name pos:start="475:24" pos:end="475:34">input_files</name><index pos:start="475:35" pos:end="475:58">[<expr pos:start="475:36" pos:end="475:57"><name pos:start="475:36" pos:end="475:57"><name pos:start="475:36" pos:end="475:36">o</name><operator pos:start="475:37" pos:end="475:38">-&gt;</operator><name pos:start="475:39" pos:end="475:57">chapters_input_file</name></name></expr>]</index></name></expr></argument>, <argument pos:start="475:61" pos:end="475:94"><expr pos:start="475:61" pos:end="475:94"><operator pos:start="475:61" pos:end="475:61">&amp;</operator><name pos:start="475:62" pos:end="475:94"><name pos:start="475:62" pos:end="475:73">output_files</name><index pos:start="475:74" pos:end="475:94">[<expr pos:start="475:75" pos:end="475:93"><name pos:start="475:75" pos:end="475:89">nb_output_files</name> <operator pos:start="475:91" pos:end="475:91">-</operator> <literal type="number" pos:start="475:93" pos:end="475:93">1</literal></expr>]</index></name></expr></argument>,

                      <argument pos:start="477:23" pos:end="477:50"><expr pos:start="477:23" pos:end="477:50"><operator pos:start="477:23" pos:end="477:23">!</operator><name pos:start="477:24" pos:end="477:50"><name pos:start="477:24" pos:end="477:24">o</name><operator pos:start="477:25" pos:end="477:26">-&gt;</operator><name pos:start="477:27" pos:end="477:50">metadata_chapters_manual</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="481:5" pos:end="481:41">/* copy global metadata by default */</comment>

    <if_stmt pos:start="483:5" pos:end="493:5"><if pos:start="483:5" pos:end="493:5">if <condition pos:start="483:8" pos:end="483:53">(<expr pos:start="483:9" pos:end="483:52"><operator pos:start="483:9" pos:end="483:9">!</operator><name pos:start="483:10" pos:end="483:34"><name pos:start="483:10" pos:end="483:10">o</name><operator pos:start="483:11" pos:end="483:12">-&gt;</operator><name pos:start="483:13" pos:end="483:34">metadata_global_manual</name></name> <operator pos:start="483:36" pos:end="483:37">&amp;&amp;</operator> <name pos:start="483:39" pos:end="483:52">nb_input_files</name></expr>)</condition><block pos:start="483:54" pos:end="493:5">{<block_content pos:start="485:9" pos:end="491:60">

        <expr_stmt pos:start="485:9" pos:end="487:45"><expr pos:start="485:9" pos:end="487:44"><call pos:start="485:9" pos:end="487:44"><name pos:start="485:9" pos:end="485:20">av_dict_copy</name><argument_list pos:start="485:21" pos:end="487:44">(<argument pos:start="485:22" pos:end="485:34"><expr pos:start="485:22" pos:end="485:34"><operator pos:start="485:22" pos:end="485:22">&amp;</operator><name pos:start="485:23" pos:end="485:34"><name pos:start="485:23" pos:end="485:24">oc</name><operator pos:start="485:25" pos:end="485:26">-&gt;</operator><name pos:start="485:27" pos:end="485:34">metadata</name></name></expr></argument>, <argument pos:start="485:37" pos:end="485:64"><expr pos:start="485:37" pos:end="485:64"><name pos:start="485:37" pos:end="485:50"><name pos:start="485:37" pos:end="485:47">input_files</name><index pos:start="485:48" pos:end="485:50">[<expr pos:start="485:49" pos:end="485:49"><literal type="number" pos:start="485:49" pos:end="485:49">0</literal></expr>]</index></name><operator pos:start="485:51" pos:end="485:51">.</operator><name pos:start="485:52" pos:end="485:64"><name pos:start="485:52" pos:end="485:54">ctx</name><operator pos:start="485:55" pos:end="485:56">-&gt;</operator><name pos:start="485:57" pos:end="485:64">metadata</name></name></expr></argument>,

                     <argument pos:start="487:22" pos:end="487:43"><expr pos:start="487:22" pos:end="487:43"><name pos:start="487:22" pos:end="487:43">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="489:9" pos:end="491:60"><if pos:start="489:9" pos:end="491:60">if<condition pos:start="489:11" pos:end="489:42">(<expr pos:start="489:12" pos:end="489:41"><name pos:start="489:12" pos:end="489:28"><name pos:start="489:12" pos:end="489:12">o</name><operator pos:start="489:13" pos:end="489:14">-&gt;</operator><name pos:start="489:15" pos:end="489:28">recording_time</name></name> <operator pos:start="489:30" pos:end="489:31">!=</operator> <name pos:start="489:33" pos:end="489:41">INT64_MAX</name></expr>)</condition><block type="pseudo" pos:start="491:13" pos:end="491:60"><block_content pos:start="491:13" pos:end="491:60">

            <expr_stmt pos:start="491:13" pos:end="491:60"><expr pos:start="491:13" pos:end="491:59"><call pos:start="491:13" pos:end="491:59"><name pos:start="491:13" pos:end="491:23">av_dict_set</name><argument_list pos:start="491:24" pos:end="491:59">(<argument pos:start="491:25" pos:end="491:37"><expr pos:start="491:25" pos:end="491:37"><operator pos:start="491:25" pos:end="491:25">&amp;</operator><name pos:start="491:26" pos:end="491:37"><name pos:start="491:26" pos:end="491:27">oc</name><operator pos:start="491:28" pos:end="491:29">-&gt;</operator><name pos:start="491:30" pos:end="491:37">metadata</name></name></expr></argument>, <argument pos:start="491:40" pos:end="491:49"><expr pos:start="491:40" pos:end="491:49"><literal type="string" pos:start="491:40" pos:end="491:49">"duration"</literal></expr></argument>, <argument pos:start="491:52" pos:end="491:55"><expr pos:start="491:52" pos:end="491:55"><name pos:start="491:52" pos:end="491:55">NULL</name></expr></argument>, <argument pos:start="491:58" pos:end="491:58"><expr pos:start="491:58" pos:end="491:58"><literal type="number" pos:start="491:58" pos:end="491:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="495:5" pos:end="509:9"><if pos:start="495:5" pos:end="509:9">if <condition pos:start="495:8" pos:end="495:36">(<expr pos:start="495:9" pos:end="495:35"><operator pos:start="495:9" pos:end="495:9">!</operator><name pos:start="495:10" pos:end="495:35"><name pos:start="495:10" pos:end="495:10">o</name><operator pos:start="495:11" pos:end="495:12">-&gt;</operator><name pos:start="495:13" pos:end="495:35">metadata_streams_manual</name></name></expr>)</condition><block type="pseudo" pos:start="497:9" pos:end="509:9"><block_content pos:start="497:9" pos:end="509:9">

        <for pos:start="497:9" pos:end="509:9">for <control pos:start="497:13" pos:end="497:89">(<init pos:start="497:14" pos:end="497:61"><expr pos:start="497:14" pos:end="497:60"><name pos:start="497:14" pos:end="497:14">i</name> <operator pos:start="497:16" pos:end="497:16">=</operator> <name pos:start="497:18" pos:end="497:50"><name pos:start="497:18" pos:end="497:29">output_files</name><index pos:start="497:30" pos:end="497:50">[<expr pos:start="497:31" pos:end="497:49"><name pos:start="497:31" pos:end="497:45">nb_output_files</name> <operator pos:start="497:47" pos:end="497:47">-</operator> <literal type="number" pos:start="497:49" pos:end="497:49">1</literal></expr>]</index></name><operator pos:start="497:51" pos:end="497:51">.</operator><name pos:start="497:52" pos:end="497:60">ost_index</name></expr>;</init> <condition pos:start="497:63" pos:end="497:84"><expr pos:start="497:63" pos:end="497:83"><name pos:start="497:63" pos:end="497:63">i</name> <operator pos:start="497:65" pos:end="497:65">&lt;</operator> <name pos:start="497:67" pos:end="497:83">nb_output_streams</name></expr>;</condition> <incr pos:start="497:86" pos:end="497:88"><expr pos:start="497:86" pos:end="497:88"><name pos:start="497:86" pos:end="497:86">i</name><operator pos:start="497:87" pos:end="497:88">++</operator></expr></incr>)</control> <block pos:start="497:91" pos:end="509:9">{<block_content pos:start="499:13" pos:end="507:101">

            <decl_stmt pos:start="499:13" pos:end="499:29"><decl pos:start="499:13" pos:end="499:28"><type pos:start="499:13" pos:end="499:25"><name pos:start="499:13" pos:end="499:23">InputStream</name> <modifier pos:start="499:25" pos:end="499:25">*</modifier></type><name pos:start="499:26" pos:end="499:28">ist</name></decl>;</decl_stmt>

            <if_stmt pos:start="501:13" pos:end="503:25"><if pos:start="501:13" pos:end="503:25">if <condition pos:start="501:16" pos:end="501:51">(<expr pos:start="501:17" pos:end="501:50"><name pos:start="501:17" pos:end="501:33"><name pos:start="501:17" pos:end="501:30">output_streams</name><index pos:start="501:31" pos:end="501:33">[<expr pos:start="501:32" pos:end="501:32"><name pos:start="501:32" pos:end="501:32">i</name></expr>]</index></name><operator pos:start="501:34" pos:end="501:34">.</operator><name pos:start="501:35" pos:end="501:46">source_index</name> <operator pos:start="501:48" pos:end="501:48">&lt;</operator> <literal type="number" pos:start="501:50" pos:end="501:50">0</literal></expr>)</condition><block type="pseudo" pos:start="503:17" pos:end="503:25"><block_content pos:start="503:17" pos:end="503:25">         <comment type="block" pos:start="501:61" pos:end="501:102">/* this is true e.g. for attached files */</comment>

                <continue pos:start="503:17" pos:end="503:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="505:13" pos:end="505:65"><expr pos:start="505:13" pos:end="505:64"><name pos:start="505:13" pos:end="505:15">ist</name> <operator pos:start="505:17" pos:end="505:17">=</operator> <operator pos:start="505:19" pos:end="505:19">&amp;</operator><name pos:start="505:20" pos:end="505:64"><name pos:start="505:20" pos:end="505:32">input_streams</name><index pos:start="505:33" pos:end="505:64">[<expr pos:start="505:34" pos:end="505:63"><name pos:start="505:34" pos:end="505:50"><name pos:start="505:34" pos:end="505:47">output_streams</name><index pos:start="505:48" pos:end="505:50">[<expr pos:start="505:49" pos:end="505:49"><name pos:start="505:49" pos:end="505:49">i</name></expr>]</index></name><operator pos:start="505:51" pos:end="505:51">.</operator><name pos:start="505:52" pos:end="505:63">source_index</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="507:13" pos:end="507:101"><expr pos:start="507:13" pos:end="507:100"><call pos:start="507:13" pos:end="507:100"><name pos:start="507:13" pos:end="507:24">av_dict_copy</name><argument_list pos:start="507:25" pos:end="507:100">(<argument pos:start="507:26" pos:end="507:56"><expr pos:start="507:26" pos:end="507:56"><operator pos:start="507:26" pos:end="507:26">&amp;</operator><name pos:start="507:27" pos:end="507:43"><name pos:start="507:27" pos:end="507:40">output_streams</name><index pos:start="507:41" pos:end="507:43">[<expr pos:start="507:42" pos:end="507:42"><name pos:start="507:42" pos:end="507:42">i</name></expr>]</index></name><operator pos:start="507:44" pos:end="507:44">.</operator><name pos:start="507:45" pos:end="507:56"><name pos:start="507:45" pos:end="507:46">st</name><operator pos:start="507:47" pos:end="507:48">-&gt;</operator><name pos:start="507:49" pos:end="507:56">metadata</name></name></expr></argument>, <argument pos:start="507:59" pos:end="507:75"><expr pos:start="507:59" pos:end="507:75"><name pos:start="507:59" pos:end="507:75"><name pos:start="507:59" pos:end="507:61">ist</name><operator pos:start="507:62" pos:end="507:63">-&gt;</operator><name pos:start="507:64" pos:end="507:65">st</name><operator pos:start="507:66" pos:end="507:67">-&gt;</operator><name pos:start="507:68" pos:end="507:75">metadata</name></name></expr></argument>, <argument pos:start="507:78" pos:end="507:99"><expr pos:start="507:78" pos:end="507:99"><name pos:start="507:78" pos:end="507:99">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="block" pos:start="513:5" pos:end="513:39">/* process manually set metadata */</comment>

    <for pos:start="515:5" pos:end="599:5">for <control pos:start="515:9" pos:end="515:40">(<init pos:start="515:10" pos:end="515:15"><expr pos:start="515:10" pos:end="515:14"><name pos:start="515:10" pos:end="515:10">i</name> <operator pos:start="515:12" pos:end="515:12">=</operator> <literal type="number" pos:start="515:14" pos:end="515:14">0</literal></expr>;</init> <condition pos:start="515:17" pos:end="515:35"><expr pos:start="515:17" pos:end="515:34"><name pos:start="515:17" pos:end="515:17">i</name> <operator pos:start="515:19" pos:end="515:19">&lt;</operator> <name pos:start="515:21" pos:end="515:34"><name pos:start="515:21" pos:end="515:21">o</name><operator pos:start="515:22" pos:end="515:23">-&gt;</operator><name pos:start="515:24" pos:end="515:34">nb_metadata</name></name></expr>;</condition> <incr pos:start="515:37" pos:end="515:39"><expr pos:start="515:37" pos:end="515:39"><name pos:start="515:37" pos:end="515:37">i</name><operator pos:start="515:38" pos:end="515:39">++</operator></expr></incr>)</control> <block pos:start="515:42" pos:end="599:5">{<block_content pos:start="517:9" pos:end="597:9">

        <decl_stmt pos:start="517:9" pos:end="517:25"><decl pos:start="517:9" pos:end="517:24"><type pos:start="517:9" pos:end="517:23"><name pos:start="517:9" pos:end="517:20">AVDictionary</name> <modifier pos:start="517:22" pos:end="517:22">*</modifier><modifier pos:start="517:23" pos:end="517:23">*</modifier></type><name pos:start="517:24" pos:end="517:24">m</name></decl>;</decl_stmt>

        <decl_stmt pos:start="519:9" pos:end="519:24"><decl pos:start="519:9" pos:end="519:17"><type pos:start="519:9" pos:end="519:12"><name pos:start="519:9" pos:end="519:12">char</name></type> <name pos:start="519:14" pos:end="519:17">type</name></decl>, <decl pos:start="519:20" pos:end="519:23"><type ref="prev" pos:start="519:9" pos:end="519:12"><modifier pos:start="519:20" pos:end="519:20">*</modifier></type><name pos:start="519:21" pos:end="519:23">val</name></decl>;</decl_stmt>

        <decl_stmt pos:start="521:9" pos:end="521:32"><decl pos:start="521:9" pos:end="521:31"><type pos:start="521:9" pos:end="521:20"><specifier pos:start="521:9" pos:end="521:13">const</specifier> <name pos:start="521:15" pos:end="521:18">char</name> <modifier pos:start="521:20" pos:end="521:20">*</modifier></type><name pos:start="521:21" pos:end="521:31">stream_spec</name></decl>;</decl_stmt>

        <decl_stmt pos:start="523:9" pos:end="523:30"><decl pos:start="523:9" pos:end="523:21"><type pos:start="523:9" pos:end="523:11"><name pos:start="523:9" pos:end="523:11">int</name></type> <name pos:start="523:13" pos:end="523:17">index</name> <init pos:start="523:19" pos:end="523:21">= <expr pos:start="523:21" pos:end="523:21"><literal type="number" pos:start="523:21" pos:end="523:21">0</literal></expr></init></decl>, <decl pos:start="523:24" pos:end="523:24"><type ref="prev" pos:start="523:9" pos:end="523:11"/><name pos:start="523:24" pos:end="523:24">j</name></decl>, <decl pos:start="523:27" pos:end="523:29"><type ref="prev" pos:start="523:9" pos:end="523:11"/><name pos:start="523:27" pos:end="523:29">ret</name></decl>;</decl_stmt>



        <expr_stmt pos:start="527:9" pos:end="527:48"><expr pos:start="527:9" pos:end="527:47"><name pos:start="527:9" pos:end="527:11">val</name> <operator pos:start="527:13" pos:end="527:13">=</operator> <call pos:start="527:15" pos:end="527:47"><name pos:start="527:15" pos:end="527:20">strchr</name><argument_list pos:start="527:21" pos:end="527:47">(<argument pos:start="527:22" pos:end="527:41"><expr pos:start="527:22" pos:end="527:41"><name pos:start="527:22" pos:end="527:35"><name pos:start="527:22" pos:end="527:22">o</name><operator pos:start="527:23" pos:end="527:24">-&gt;</operator><name pos:start="527:25" pos:end="527:32">metadata</name><index pos:start="527:33" pos:end="527:35">[<expr pos:start="527:34" pos:end="527:34"><name pos:start="527:34" pos:end="527:34">i</name></expr>]</index></name><operator pos:start="527:36" pos:end="527:36">.</operator><name pos:start="527:37" pos:end="527:41"><name pos:start="527:37" pos:end="527:37">u</name><operator pos:start="527:38" pos:end="527:38">.</operator><name pos:start="527:39" pos:end="527:41">str</name></name></expr></argument>, <argument pos:start="527:44" pos:end="527:46"><expr pos:start="527:44" pos:end="527:46"><literal type="char" pos:start="527:44" pos:end="527:46">'='</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="529:9" pos:end="537:9"><if pos:start="529:9" pos:end="537:9">if <condition pos:start="529:12" pos:end="529:17">(<expr pos:start="529:13" pos:end="529:16"><operator pos:start="529:13" pos:end="529:13">!</operator><name pos:start="529:14" pos:end="529:16">val</name></expr>)</condition> <block pos:start="529:19" pos:end="537:9">{<block_content pos:start="531:13" pos:end="535:28">

            <expr_stmt pos:start="531:13" pos:end="533:41"><expr pos:start="531:13" pos:end="533:40"><call pos:start="531:13" pos:end="533:40"><name pos:start="531:13" pos:end="531:18">av_log</name><argument_list pos:start="531:19" pos:end="533:40">(<argument pos:start="531:20" pos:end="531:23"><expr pos:start="531:20" pos:end="531:23"><name pos:start="531:20" pos:end="531:23">NULL</name></expr></argument>, <argument pos:start="531:26" pos:end="531:37"><expr pos:start="531:26" pos:end="531:37"><name pos:start="531:26" pos:end="531:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="531:40" pos:end="531:82"><expr pos:start="531:40" pos:end="531:82"><literal type="string" pos:start="531:40" pos:end="531:82">"No '=' character in metadata string %s.\n"</literal></expr></argument>,

                   <argument pos:start="533:20" pos:end="533:39"><expr pos:start="533:20" pos:end="533:39"><name pos:start="533:20" pos:end="533:33"><name pos:start="533:20" pos:end="533:20">o</name><operator pos:start="533:21" pos:end="533:22">-&gt;</operator><name pos:start="533:23" pos:end="533:30">metadata</name><index pos:start="533:31" pos:end="533:33">[<expr pos:start="533:32" pos:end="533:32"><name pos:start="533:32" pos:end="533:32">i</name></expr>]</index></name><operator pos:start="533:34" pos:end="533:34">.</operator><name pos:start="533:35" pos:end="533:39"><name pos:start="533:35" pos:end="533:35">u</name><operator pos:start="533:36" pos:end="533:36">.</operator><name pos:start="533:37" pos:end="533:39">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="535:13" pos:end="535:28"><expr pos:start="535:13" pos:end="535:27"><call pos:start="535:13" pos:end="535:27"><name pos:start="535:13" pos:end="535:24">exit_program</name><argument_list pos:start="535:25" pos:end="535:27">(<argument pos:start="535:26" pos:end="535:26"><expr pos:start="535:26" pos:end="535:26"><literal type="number" pos:start="535:26" pos:end="535:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="539:9" pos:end="539:19"><expr pos:start="539:9" pos:end="539:18"><operator pos:start="539:9" pos:end="539:9">*</operator><name pos:start="539:10" pos:end="539:12">val</name><operator pos:start="539:13" pos:end="539:14">++</operator> <operator pos:start="539:16" pos:end="539:16">=</operator> <literal type="number" pos:start="539:18" pos:end="539:18">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="543:9" pos:end="543:79"><expr pos:start="543:9" pos:end="543:78"><call pos:start="543:9" pos:end="543:78"><name pos:start="543:9" pos:end="543:23">parse_meta_type</name><argument_list pos:start="543:24" pos:end="543:78">(<argument pos:start="543:25" pos:end="543:48"><expr pos:start="543:25" pos:end="543:48"><name pos:start="543:25" pos:end="543:38"><name pos:start="543:25" pos:end="543:25">o</name><operator pos:start="543:26" pos:end="543:27">-&gt;</operator><name pos:start="543:28" pos:end="543:35">metadata</name><index pos:start="543:36" pos:end="543:38">[<expr pos:start="543:37" pos:end="543:37"><name pos:start="543:37" pos:end="543:37">i</name></expr>]</index></name><operator pos:start="543:39" pos:end="543:39">.</operator><name pos:start="543:40" pos:end="543:48">specifier</name></expr></argument>, <argument pos:start="543:51" pos:end="543:55"><expr pos:start="543:51" pos:end="543:55"><operator pos:start="543:51" pos:end="543:51">&amp;</operator><name pos:start="543:52" pos:end="543:55">type</name></expr></argument>, <argument pos:start="543:58" pos:end="543:63"><expr pos:start="543:58" pos:end="543:63"><operator pos:start="543:58" pos:end="543:58">&amp;</operator><name pos:start="543:59" pos:end="543:63">index</name></expr></argument>, <argument pos:start="543:66" pos:end="543:77"><expr pos:start="543:66" pos:end="543:77"><operator pos:start="543:66" pos:end="543:66">&amp;</operator><name pos:start="543:67" pos:end="543:77">stream_spec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="545:9" pos:end="597:9"><if pos:start="545:9" pos:end="561:9">if <condition pos:start="545:12" pos:end="545:24">(<expr pos:start="545:13" pos:end="545:23"><name pos:start="545:13" pos:end="545:16">type</name> <operator pos:start="545:18" pos:end="545:19">==</operator> <literal type="char" pos:start="545:21" pos:end="545:23">'s'</literal></expr>)</condition> <block pos:start="545:26" pos:end="561:9">{<block_content pos:start="547:13" pos:end="559:65">

            <for pos:start="547:13" pos:end="557:13">for <control pos:start="547:17" pos:end="547:48">(<init pos:start="547:18" pos:end="547:23"><expr pos:start="547:18" pos:end="547:22"><name pos:start="547:18" pos:end="547:18">j</name> <operator pos:start="547:20" pos:end="547:20">=</operator> <literal type="number" pos:start="547:22" pos:end="547:22">0</literal></expr>;</init> <condition pos:start="547:25" pos:end="547:43"><expr pos:start="547:25" pos:end="547:42"><name pos:start="547:25" pos:end="547:25">j</name> <operator pos:start="547:27" pos:end="547:27">&lt;</operator> <name pos:start="547:29" pos:end="547:42"><name pos:start="547:29" pos:end="547:30">oc</name><operator pos:start="547:31" pos:end="547:32">-&gt;</operator><name pos:start="547:33" pos:end="547:42">nb_streams</name></name></expr>;</condition> <incr pos:start="547:45" pos:end="547:47"><expr pos:start="547:45" pos:end="547:47"><name pos:start="547:45" pos:end="547:45">j</name><operator pos:start="547:46" pos:end="547:47">++</operator></expr></incr>)</control> <block pos:start="547:50" pos:end="557:13">{<block_content pos:start="549:17" pos:end="555:36">

                <if_stmt pos:start="549:17" pos:end="555:36"><if pos:start="549:17" pos:end="553:17">if <condition pos:start="549:20" pos:end="549:88">(<expr pos:start="549:21" pos:end="549:87"><operator pos:start="549:21" pos:end="549:21">(</operator><name pos:start="549:22" pos:end="549:24">ret</name> <operator pos:start="549:26" pos:end="549:26">=</operator> <call pos:start="549:28" pos:end="549:82"><name pos:start="549:28" pos:end="549:49">check_stream_specifier</name><argument_list pos:start="549:50" pos:end="549:82">(<argument pos:start="549:51" pos:end="549:52"><expr pos:start="549:51" pos:end="549:52"><name pos:start="549:51" pos:end="549:52">oc</name></expr></argument>, <argument pos:start="549:55" pos:end="549:68"><expr pos:start="549:55" pos:end="549:68"><name pos:start="549:55" pos:end="549:68"><name pos:start="549:55" pos:end="549:56">oc</name><operator pos:start="549:57" pos:end="549:58">-&gt;</operator><name pos:start="549:59" pos:end="549:65">streams</name><index pos:start="549:66" pos:end="549:68">[<expr pos:start="549:67" pos:end="549:67"><name pos:start="549:67" pos:end="549:67">j</name></expr>]</index></name></expr></argument>, <argument pos:start="549:71" pos:end="549:81"><expr pos:start="549:71" pos:end="549:81"><name pos:start="549:71" pos:end="549:81">stream_spec</name></expr></argument>)</argument_list></call><operator pos:start="549:83" pos:end="549:83">)</operator> <operator pos:start="549:85" pos:end="549:85">&gt;</operator> <literal type="number" pos:start="549:87" pos:end="549:87">0</literal></expr>)</condition> <block pos:start="549:90" pos:end="553:17">{<block_content pos:start="551:21" pos:end="551:103">

                    <expr_stmt pos:start="551:21" pos:end="551:103"><expr pos:start="551:21" pos:end="551:102"><call pos:start="551:21" pos:end="551:102"><name pos:start="551:21" pos:end="551:31">av_dict_set</name><argument_list pos:start="551:32" pos:end="551:102">(<argument pos:start="551:33" pos:end="551:57"><expr pos:start="551:33" pos:end="551:57"><operator pos:start="551:33" pos:end="551:33">&amp;</operator><name pos:start="551:34" pos:end="551:47"><name pos:start="551:34" pos:end="551:35">oc</name><operator pos:start="551:36" pos:end="551:37">-&gt;</operator><name pos:start="551:38" pos:end="551:44">streams</name><index pos:start="551:45" pos:end="551:47">[<expr pos:start="551:46" pos:end="551:46"><name pos:start="551:46" pos:end="551:46">j</name></expr>]</index></name><operator pos:start="551:48" pos:end="551:49">-&gt;</operator><name pos:start="551:50" pos:end="551:57">metadata</name></expr></argument>, <argument pos:start="551:60" pos:end="551:79"><expr pos:start="551:60" pos:end="551:79"><name pos:start="551:60" pos:end="551:73"><name pos:start="551:60" pos:end="551:60">o</name><operator pos:start="551:61" pos:end="551:62">-&gt;</operator><name pos:start="551:63" pos:end="551:70">metadata</name><index pos:start="551:71" pos:end="551:73">[<expr pos:start="551:72" pos:end="551:72"><name pos:start="551:72" pos:end="551:72">i</name></expr>]</index></name><operator pos:start="551:74" pos:end="551:74">.</operator><name pos:start="551:75" pos:end="551:79"><name pos:start="551:75" pos:end="551:75">u</name><operator pos:start="551:76" pos:end="551:76">.</operator><name pos:start="551:77" pos:end="551:79">str</name></name></expr></argument>, <argument pos:start="551:82" pos:end="551:98"><expr pos:start="551:82" pos:end="551:98"><ternary pos:start="551:82" pos:end="551:98"><condition pos:start="551:82" pos:end="551:87"><expr pos:start="551:82" pos:end="551:85"><operator pos:start="551:82" pos:end="551:82">*</operator><name pos:start="551:83" pos:end="551:85">val</name></expr> ?</condition><then pos:start="551:89" pos:end="551:91"> <expr pos:start="551:89" pos:end="551:91"><name pos:start="551:89" pos:end="551:91">val</name></expr> </then><else pos:start="551:93" pos:end="551:98">: <expr pos:start="551:95" pos:end="551:98"><name pos:start="551:95" pos:end="551:98">NULL</name></expr></else></ternary></expr></argument>, <argument pos:start="551:101" pos:end="551:101"><expr pos:start="551:101" pos:end="551:101"><literal type="number" pos:start="551:101" pos:end="551:101">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="553:19" pos:end="555:36">else if <condition pos:start="553:27" pos:end="553:35">(<expr pos:start="553:28" pos:end="553:34"><name pos:start="553:28" pos:end="553:30">ret</name> <operator pos:start="553:32" pos:end="553:32">&lt;</operator> <literal type="number" pos:start="553:34" pos:end="553:34">0</literal></expr>)</condition><block type="pseudo" pos:start="555:21" pos:end="555:36"><block_content pos:start="555:21" pos:end="555:36">

                    <expr_stmt pos:start="555:21" pos:end="555:36"><expr pos:start="555:21" pos:end="555:35"><call pos:start="555:21" pos:end="555:35"><name pos:start="555:21" pos:end="555:32">exit_program</name><argument_list pos:start="555:33" pos:end="555:35">(<argument pos:start="555:34" pos:end="555:34"><expr pos:start="555:34" pos:end="555:34"><literal type="number" pos:start="555:34" pos:end="555:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="559:13" pos:end="559:65"><expr pos:start="559:13" pos:end="559:64"><call pos:start="559:13" pos:end="559:64"><name pos:start="559:13" pos:end="559:18">printf</name><argument_list pos:start="559:19" pos:end="559:64">(<argument pos:start="559:20" pos:end="559:45"><expr pos:start="559:20" pos:end="559:45"><literal type="string" pos:start="559:20" pos:end="559:45">"ret %d, stream_spec %s\n"</literal></expr></argument>, <argument pos:start="559:48" pos:end="559:50"><expr pos:start="559:48" pos:end="559:50"><name pos:start="559:48" pos:end="559:50">ret</name></expr></argument>, <argument pos:start="559:53" pos:end="559:63"><expr pos:start="559:53" pos:end="559:63"><name pos:start="559:53" pos:end="559:63">stream_spec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="563:9" pos:end="597:9">else <block pos:start="563:14" pos:end="597:9">{<block_content pos:start="565:13" pos:end="595:71">

            <switch pos:start="565:13" pos:end="593:13">switch <condition pos:start="565:20" pos:end="565:25">(<expr pos:start="565:21" pos:end="565:24"><name pos:start="565:21" pos:end="565:24">type</name></expr>)</condition> <block pos:start="565:27" pos:end="593:13">{<block_content pos:start="567:13" pos:end="591:32">

            <case pos:start="567:13" pos:end="567:21">case <expr pos:start="567:18" pos:end="567:20"><literal type="char" pos:start="567:18" pos:end="567:20">'g'</literal></expr>:</case>

                <expr_stmt pos:start="569:17" pos:end="569:34"><expr pos:start="569:17" pos:end="569:33"><name pos:start="569:17" pos:end="569:17">m</name> <operator pos:start="569:19" pos:end="569:19">=</operator> <operator pos:start="569:21" pos:end="569:21">&amp;</operator><name pos:start="569:22" pos:end="569:33"><name pos:start="569:22" pos:end="569:23">oc</name><operator pos:start="569:24" pos:end="569:25">-&gt;</operator><name pos:start="569:26" pos:end="569:33">metadata</name></name></expr>;</expr_stmt>

                <break pos:start="571:17" pos:end="571:22">break;</break>

            <case pos:start="573:13" pos:end="573:21">case <expr pos:start="573:18" pos:end="573:20"><literal type="char" pos:start="573:18" pos:end="573:20">'c'</literal></expr>:</case>

                <if_stmt pos:start="575:17" pos:end="581:17"><if pos:start="575:17" pos:end="581:17">if <condition pos:start="575:20" pos:end="575:58">(<expr pos:start="575:21" pos:end="575:57"><name pos:start="575:21" pos:end="575:25">index</name> <operator pos:start="575:27" pos:end="575:27">&lt;</operator> <literal type="number" pos:start="575:29" pos:end="575:29">0</literal> <operator pos:start="575:31" pos:end="575:32">||</operator> <name pos:start="575:34" pos:end="575:38">index</name> <operator pos:start="575:40" pos:end="575:41">&gt;=</operator> <name pos:start="575:43" pos:end="575:57"><name pos:start="575:43" pos:end="575:44">oc</name><operator pos:start="575:45" pos:end="575:46">-&gt;</operator><name pos:start="575:47" pos:end="575:57">nb_chapters</name></name></expr>)</condition> <block pos:start="575:60" pos:end="581:17">{<block_content pos:start="577:21" pos:end="579:36">

                    <expr_stmt pos:start="577:21" pos:end="577:107"><expr pos:start="577:21" pos:end="577:106"><call pos:start="577:21" pos:end="577:106"><name pos:start="577:21" pos:end="577:26">av_log</name><argument_list pos:start="577:27" pos:end="577:106">(<argument pos:start="577:28" pos:end="577:31"><expr pos:start="577:28" pos:end="577:31"><name pos:start="577:28" pos:end="577:31">NULL</name></expr></argument>, <argument pos:start="577:34" pos:end="577:45"><expr pos:start="577:34" pos:end="577:45"><name pos:start="577:34" pos:end="577:45">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="577:48" pos:end="577:98"><expr pos:start="577:48" pos:end="577:98"><literal type="string" pos:start="577:48" pos:end="577:98">"Invalid chapter index %d in metadata specifier.\n"</literal></expr></argument>, <argument pos:start="577:101" pos:end="577:105"><expr pos:start="577:101" pos:end="577:105"><name pos:start="577:101" pos:end="577:105">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="579:21" pos:end="579:36"><expr pos:start="579:21" pos:end="579:35"><call pos:start="579:21" pos:end="579:35"><name pos:start="579:21" pos:end="579:32">exit_program</name><argument_list pos:start="579:33" pos:end="579:35">(<argument pos:start="579:34" pos:end="579:34"><expr pos:start="579:34" pos:end="579:34"><literal type="number" pos:start="579:34" pos:end="579:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="583:17" pos:end="583:51"><expr pos:start="583:17" pos:end="583:50"><name pos:start="583:17" pos:end="583:17">m</name> <operator pos:start="583:19" pos:end="583:19">=</operator> <operator pos:start="583:21" pos:end="583:21">&amp;</operator><name pos:start="583:22" pos:end="583:40"><name pos:start="583:22" pos:end="583:23">oc</name><operator pos:start="583:24" pos:end="583:25">-&gt;</operator><name pos:start="583:26" pos:end="583:33">chapters</name><index pos:start="583:34" pos:end="583:40">[<expr pos:start="583:35" pos:end="583:39"><name pos:start="583:35" pos:end="583:39">index</name></expr>]</index></name><operator pos:start="583:41" pos:end="583:42">-&gt;</operator><name pos:start="583:43" pos:end="583:50">metadata</name></expr>;</expr_stmt>

                <break pos:start="585:17" pos:end="585:22">break;</break>

            <default pos:start="587:13" pos:end="587:20">default:</default>

                <expr_stmt pos:start="589:17" pos:end="589:105"><expr pos:start="589:17" pos:end="589:104"><call pos:start="589:17" pos:end="589:104"><name pos:start="589:17" pos:end="589:22">av_log</name><argument_list pos:start="589:23" pos:end="589:104">(<argument pos:start="589:24" pos:end="589:27"><expr pos:start="589:24" pos:end="589:27"><name pos:start="589:24" pos:end="589:27">NULL</name></expr></argument>, <argument pos:start="589:30" pos:end="589:41"><expr pos:start="589:30" pos:end="589:41"><name pos:start="589:30" pos:end="589:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="589:44" pos:end="589:77"><expr pos:start="589:44" pos:end="589:77"><literal type="string" pos:start="589:44" pos:end="589:77">"Invalid metadata specifier %s.\n"</literal></expr></argument>, <argument pos:start="589:80" pos:end="589:103"><expr pos:start="589:80" pos:end="589:103"><name pos:start="589:80" pos:end="589:93"><name pos:start="589:80" pos:end="589:80">o</name><operator pos:start="589:81" pos:end="589:82">-&gt;</operator><name pos:start="589:83" pos:end="589:90">metadata</name><index pos:start="589:91" pos:end="589:93">[<expr pos:start="589:92" pos:end="589:92"><name pos:start="589:92" pos:end="589:92">i</name></expr>]</index></name><operator pos:start="589:94" pos:end="589:94">.</operator><name pos:start="589:95" pos:end="589:103">specifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="591:17" pos:end="591:32"><expr pos:start="591:17" pos:end="591:31"><call pos:start="591:17" pos:end="591:31"><name pos:start="591:17" pos:end="591:28">exit_program</name><argument_list pos:start="591:29" pos:end="591:31">(<argument pos:start="591:30" pos:end="591:30"><expr pos:start="591:30" pos:end="591:30"><literal type="number" pos:start="591:30" pos:end="591:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <expr_stmt pos:start="595:13" pos:end="595:71"><expr pos:start="595:13" pos:end="595:70"><call pos:start="595:13" pos:end="595:70"><name pos:start="595:13" pos:end="595:23">av_dict_set</name><argument_list pos:start="595:24" pos:end="595:70">(<argument pos:start="595:25" pos:end="595:25"><expr pos:start="595:25" pos:end="595:25"><name pos:start="595:25" pos:end="595:25">m</name></expr></argument>, <argument pos:start="595:28" pos:end="595:47"><expr pos:start="595:28" pos:end="595:47"><name pos:start="595:28" pos:end="595:41"><name pos:start="595:28" pos:end="595:28">o</name><operator pos:start="595:29" pos:end="595:30">-&gt;</operator><name pos:start="595:31" pos:end="595:38">metadata</name><index pos:start="595:39" pos:end="595:41">[<expr pos:start="595:40" pos:end="595:40"><name pos:start="595:40" pos:end="595:40">i</name></expr>]</index></name><operator pos:start="595:42" pos:end="595:42">.</operator><name pos:start="595:43" pos:end="595:47"><name pos:start="595:43" pos:end="595:43">u</name><operator pos:start="595:44" pos:end="595:44">.</operator><name pos:start="595:45" pos:end="595:47">str</name></name></expr></argument>, <argument pos:start="595:50" pos:end="595:66"><expr pos:start="595:50" pos:end="595:66"><ternary pos:start="595:50" pos:end="595:66"><condition pos:start="595:50" pos:end="595:55"><expr pos:start="595:50" pos:end="595:53"><operator pos:start="595:50" pos:end="595:50">*</operator><name pos:start="595:51" pos:end="595:53">val</name></expr> ?</condition><then pos:start="595:57" pos:end="595:59"> <expr pos:start="595:57" pos:end="595:59"><name pos:start="595:57" pos:end="595:59">val</name></expr> </then><else pos:start="595:61" pos:end="595:66">: <expr pos:start="595:63" pos:end="595:66"><name pos:start="595:63" pos:end="595:66">NULL</name></expr></else></ternary></expr></argument>, <argument pos:start="595:69" pos:end="595:69"><expr pos:start="595:69" pos:end="595:69"><literal type="number" pos:start="595:69" pos:end="595:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="603:5" pos:end="603:24"><expr pos:start="603:5" pos:end="603:23"><call pos:start="603:5" pos:end="603:23"><name pos:start="603:5" pos:end="603:17">reset_options</name><argument_list pos:start="603:18" pos:end="603:23">(<argument pos:start="603:19" pos:end="603:19"><expr pos:start="603:19" pos:end="603:19"><name pos:start="603:19" pos:end="603:19">o</name></expr></argument>, <argument pos:start="603:22" pos:end="603:22"><expr pos:start="603:22" pos:end="603:22"><literal type="number" pos:start="603:22" pos:end="603:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
