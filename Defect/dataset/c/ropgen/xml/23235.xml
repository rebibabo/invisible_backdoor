<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23235.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:73"><name pos:start="1:1" pos:end="1:10">build_madt</name><argument_list pos:start="1:11" pos:end="1:73">(<argument pos:start="1:12" pos:end="1:29">GArray *table_data</argument>, <argument pos:start="1:32" pos:end="1:45">GArray *linker</argument>, <argument pos:start="1:48" pos:end="1:72">VirtGuestInfo *guest_info</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:62">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">madt_start</name> <init pos:start="5:20" pos:end="5:36">= <expr pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:31">table_data</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:36">len</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:23"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:21">MemMapEntry</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:29">memmap</name> <init pos:start="7:31" pos:end="7:50">= <expr pos:start="7:33" pos:end="7:50"><name pos:start="7:33" pos:end="7:50"><name pos:start="7:33" pos:end="7:42">guest_info</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:50">memmap</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:15"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:21">irqmap</name> <init pos:start="9:23" pos:end="9:42">= <expr pos:start="9:25" pos:end="9:42"><name pos:start="9:25" pos:end="9:42"><name pos:start="9:25" pos:end="9:34">guest_info</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:42">irqmap</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:25">AcpiMultipleApicTable</name> <modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:31">madt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:30">AcpiMadtGenericDistributor</name> <modifier pos:start="13:32" pos:end="13:32">*</modifier></type><name pos:start="13:33" pos:end="13:36">gicd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:27">AcpiMadtGenericMsiFrame</name> <modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:36">gic_msi</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:52"><expr pos:start="21:5" pos:end="21:51"><name pos:start="21:5" pos:end="21:8">madt</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:51"><name pos:start="21:12" pos:end="21:25">acpi_data_push</name><argument_list pos:start="21:26" pos:end="21:51">(<argument pos:start="21:27" pos:end="21:36"><expr pos:start="21:27" pos:end="21:36"><name pos:start="21:27" pos:end="21:36">table_data</name></expr></argument>, <argument pos:start="21:39" pos:end="21:50"><expr pos:start="21:39" pos:end="21:50"><sizeof pos:start="21:39" pos:end="21:44">sizeof <name/></sizeof>*<name pos:start="21:47" pos:end="21:50">madt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:52"><expr pos:start="25:5" pos:end="25:51"><name pos:start="25:5" pos:end="25:8">gicd</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:51"><name pos:start="25:12" pos:end="25:25">acpi_data_push</name><argument_list pos:start="25:26" pos:end="25:51">(<argument pos:start="25:27" pos:end="25:36"><expr pos:start="25:27" pos:end="25:36"><name pos:start="25:27" pos:end="25:36">table_data</name></expr></argument>, <argument pos:start="25:39" pos:end="25:50"><expr pos:start="25:39" pos:end="25:50"><sizeof pos:start="25:39" pos:end="25:44">sizeof <name/></sizeof>*<name pos:start="25:47" pos:end="25:50">gicd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:8">gicd</name><operator pos:start="27:9" pos:end="27:10">-&gt;</operator><name pos:start="27:11" pos:end="27:14">type</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:46">ACPI_APIC_GENERIC_DISTRIBUTOR</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:8">gicd</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:16">length</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <sizeof pos:start="29:20" pos:end="29:32">sizeof<argument_list pos:start="29:26" pos:end="29:32">(<argument pos:start="29:27" pos:end="29:31"><expr pos:start="29:27" pos:end="29:31"><operator pos:start="29:27" pos:end="29:27">*</operator><name pos:start="29:28" pos:end="29:31">gicd</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:52"><expr pos:start="31:5" pos:end="31:51"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:8">gicd</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:22">base_address</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:46"><name pos:start="31:26" pos:end="31:31">memmap</name><index pos:start="31:32" pos:end="31:46">[<expr pos:start="31:33" pos:end="31:45"><name pos:start="31:33" pos:end="31:45">VIRT_GIC_DIST</name></expr>]</index></name><operator pos:start="31:47" pos:end="31:47">.</operator><name pos:start="31:48" pos:end="31:51">base</name></expr>;</expr_stmt>



    <for pos:start="35:5" pos:end="63:5">for <control pos:start="35:9" pos:end="35:46">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:41"><expr pos:start="35:17" pos:end="35:40"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:40"><name pos:start="35:21" pos:end="35:30">guest_info</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:40">smp_cpus</name></name></expr>;</condition> <incr pos:start="35:43" pos:end="35:45"><expr pos:start="35:43" pos:end="35:45"><name pos:start="35:43" pos:end="35:43">i</name><operator pos:start="35:44" pos:end="35:45">++</operator></expr></incr>)</control> <block pos:start="35:48" pos:end="63:5">{<block_content pos:start="37:9" pos:end="61:53">

        <decl_stmt pos:start="37:9" pos:end="39:67"><decl pos:start="37:9" pos:end="39:66"><type pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:32">AcpiMadtGenericInterrupt</name> <modifier pos:start="37:34" pos:end="37:34">*</modifier></type><name pos:start="37:35" pos:end="37:38">gicc</name> <init pos:start="37:40" pos:end="39:66">= <expr pos:start="37:42" pos:end="39:66"><call pos:start="37:42" pos:end="39:66"><name pos:start="37:42" pos:end="37:55">acpi_data_push</name><argument_list pos:start="37:56" pos:end="39:66">(<argument pos:start="37:57" pos:end="37:66"><expr pos:start="37:57" pos:end="37:66"><name pos:start="37:57" pos:end="37:66">table_data</name></expr></argument>,

                                                     <argument pos:start="39:54" pos:end="39:65"><expr pos:start="39:54" pos:end="39:65"><sizeof pos:start="39:54" pos:end="39:59">sizeof <name/></sizeof>*<name pos:start="39:62" pos:end="39:65">gicc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:50"><decl pos:start="41:9" pos:end="41:49"><type pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:14">ARMCPU</name> <modifier pos:start="41:16" pos:end="41:16">*</modifier></type><name pos:start="41:17" pos:end="41:22">armcpu</name> <init pos:start="41:24" pos:end="41:49">= <expr pos:start="41:26" pos:end="41:49"><call pos:start="41:26" pos:end="41:49"><name pos:start="41:26" pos:end="41:32">ARM_CPU</name><argument_list pos:start="41:33" pos:end="41:49">(<argument pos:start="41:34" pos:end="41:48"><expr pos:start="41:34" pos:end="41:48"><call pos:start="41:34" pos:end="41:48"><name pos:start="41:34" pos:end="41:45">qemu_get_cpu</name><argument_list pos:start="41:46" pos:end="41:48">(<argument pos:start="41:47" pos:end="41:47"><expr pos:start="41:47" pos:end="41:47"><name pos:start="41:47" pos:end="41:47">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:12">gicc</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:18">type</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:48">ACPI_APIC_GENERIC_INTERRUPT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:12">gicc</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:20">length</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <sizeof pos:start="47:24" pos:end="47:36">sizeof<argument_list pos:start="47:30" pos:end="47:36">(<argument pos:start="47:31" pos:end="47:35"><expr pos:start="47:31" pos:end="47:35"><operator pos:start="47:31" pos:end="47:31">*</operator><name pos:start="47:32" pos:end="47:35">gicc</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:41">(<expr pos:start="49:13" pos:end="49:40"><name pos:start="49:13" pos:end="49:35"><name pos:start="49:13" pos:end="49:22">guest_info</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:35">gic_version</name></name> <operator pos:start="49:37" pos:end="49:38">==</operator> <literal type="number" pos:start="49:40" pos:end="49:40">2</literal></expr>)</condition> <block pos:start="49:43" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:59">

            <expr_stmt pos:start="51:13" pos:end="51:59"><expr pos:start="51:13" pos:end="51:58"><name pos:start="51:13" pos:end="51:30"><name pos:start="51:13" pos:end="51:16">gicc</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:30">base_address</name></name> <operator pos:start="51:32" pos:end="51:32">=</operator> <name pos:start="51:34" pos:end="51:53"><name pos:start="51:34" pos:end="51:39">memmap</name><index pos:start="51:40" pos:end="51:53">[<expr pos:start="51:41" pos:end="51:52"><name pos:start="51:41" pos:end="51:52">VIRT_GIC_CPU</name></expr>]</index></name><operator pos:start="51:54" pos:end="51:54">.</operator><name pos:start="51:55" pos:end="51:58">base</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:12">gicc</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:34">cpu_interface_number</name></name> <operator pos:start="55:36" pos:end="55:36">=</operator> <name pos:start="55:38" pos:end="55:38">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:46"><expr pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:12">gicc</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:23">arm_mpidr</name></name> <operator pos:start="57:25" pos:end="57:25">=</operator> <name pos:start="57:27" pos:end="57:45"><name pos:start="57:27" pos:end="57:32">armcpu</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:45">mp_affinity</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:12">gicc</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:17">uid</name></name> <operator pos:start="59:19" pos:end="59:19">=</operator> <name pos:start="59:21" pos:end="59:21">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:53"><expr pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:12">gicc</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:19">flags</name></name> <operator pos:start="61:21" pos:end="61:21">=</operator> <call pos:start="61:23" pos:end="61:52"><name pos:start="61:23" pos:end="61:33">cpu_to_le32</name><argument_list pos:start="61:34" pos:end="61:52">(<argument pos:start="61:35" pos:end="61:51"><expr pos:start="61:35" pos:end="61:51"><name pos:start="61:35" pos:end="61:51">ACPI_GICC_ENABLED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="67:5" pos:end="101:5"><if pos:start="67:5" pos:end="83:5">if <condition pos:start="67:8" pos:end="67:37">(<expr pos:start="67:9" pos:end="67:36"><name pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:18">guest_info</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:31">gic_version</name></name> <operator pos:start="67:33" pos:end="67:34">==</operator> <literal type="number" pos:start="67:36" pos:end="67:36">3</literal></expr>)</condition> <block pos:start="67:39" pos:end="83:5">{<block_content pos:start="69:9" pos:end="81:71">

        <decl_stmt pos:start="69:9" pos:end="71:71"><decl pos:start="69:9" pos:end="71:70"><type pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:36">AcpiMadtGenericRedistributor</name> <modifier pos:start="69:38" pos:end="69:38">*</modifier></type><name pos:start="69:39" pos:end="69:42">gicr</name> <init pos:start="69:44" pos:end="71:70">= <expr pos:start="69:46" pos:end="71:70"><call pos:start="69:46" pos:end="71:70"><name pos:start="69:46" pos:end="69:59">acpi_data_push</name><argument_list pos:start="69:60" pos:end="71:70">(<argument pos:start="69:61" pos:end="69:70"><expr pos:start="69:61" pos:end="69:70"><name pos:start="69:61" pos:end="69:70">table_data</name></expr></argument>,

                                                         <argument pos:start="71:58" pos:end="71:69"><expr pos:start="71:58" pos:end="71:69"><sizeof pos:start="71:58" pos:end="71:63">sizeof <name/></sizeof>*<name pos:start="71:66" pos:end="71:69">gicr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:53"><expr pos:start="75:9" pos:end="75:52"><name pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:12">gicr</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:18">type</name></name> <operator pos:start="75:20" pos:end="75:20">=</operator> <name pos:start="75:22" pos:end="75:52">ACPI_APIC_GENERIC_REDISTRIBUTOR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:37"><expr pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:12">gicr</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:20">length</name></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <sizeof pos:start="77:24" pos:end="77:36">sizeof<argument_list pos:start="77:30" pos:end="77:36">(<argument pos:start="77:31" pos:end="77:35"><expr pos:start="77:31" pos:end="77:35"><operator pos:start="77:31" pos:end="77:31">*</operator><name pos:start="77:32" pos:end="77:35">gicr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:71"><expr pos:start="79:9" pos:end="79:70"><name pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:12">gicr</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:26">base_address</name></name> <operator pos:start="79:28" pos:end="79:28">=</operator> <call pos:start="79:30" pos:end="79:70"><name pos:start="79:30" pos:end="79:40">cpu_to_le64</name><argument_list pos:start="79:41" pos:end="79:70">(<argument pos:start="79:42" pos:end="79:69"><expr pos:start="79:42" pos:end="79:69"><name pos:start="79:42" pos:end="79:64"><name pos:start="79:42" pos:end="79:47">memmap</name><index pos:start="79:48" pos:end="79:64">[<expr pos:start="79:49" pos:end="79:63"><name pos:start="79:49" pos:end="79:63">VIRT_GIC_REDIST</name></expr>]</index></name><operator pos:start="79:65" pos:end="79:65">.</operator><name pos:start="79:66" pos:end="79:69">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:71"><expr pos:start="81:9" pos:end="81:70"><name pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:12">gicr</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:26">range_length</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <call pos:start="81:30" pos:end="81:70"><name pos:start="81:30" pos:end="81:40">cpu_to_le32</name><argument_list pos:start="81:41" pos:end="81:70">(<argument pos:start="81:42" pos:end="81:69"><expr pos:start="81:42" pos:end="81:69"><name pos:start="81:42" pos:end="81:64"><name pos:start="81:42" pos:end="81:47">memmap</name><index pos:start="81:48" pos:end="81:64">[<expr pos:start="81:49" pos:end="81:63"><name pos:start="81:49" pos:end="81:63">VIRT_GIC_REDIST</name></expr>]</index></name><operator pos:start="81:65" pos:end="81:65">.</operator><name pos:start="81:66" pos:end="81:69">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="101:5">else <block pos:start="83:12" pos:end="101:5">{<block_content pos:start="85:9" pos:end="99:77">

        <expr_stmt pos:start="85:9" pos:end="85:62"><expr pos:start="85:9" pos:end="85:61"><name pos:start="85:9" pos:end="85:15">gic_msi</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <call pos:start="85:19" pos:end="85:61"><name pos:start="85:19" pos:end="85:32">acpi_data_push</name><argument_list pos:start="85:33" pos:end="85:61">(<argument pos:start="85:34" pos:end="85:43"><expr pos:start="85:34" pos:end="85:43"><name pos:start="85:34" pos:end="85:43">table_data</name></expr></argument>, <argument pos:start="85:46" pos:end="85:60"><expr pos:start="85:46" pos:end="85:60"><sizeof pos:start="85:46" pos:end="85:51">sizeof <name/></sizeof>*<name pos:start="85:54" pos:end="85:60">gic_msi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:52"><expr pos:start="87:9" pos:end="87:51"><name pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:15">gic_msi</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:21">type</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:51">ACPI_APIC_GENERIC_MSI_FRAME</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:43"><expr pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:15">gic_msi</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:23">length</name></name> <operator pos:start="89:25" pos:end="89:25">=</operator> <sizeof pos:start="89:27" pos:end="89:42">sizeof<argument_list pos:start="89:33" pos:end="89:42">(<argument pos:start="89:34" pos:end="89:41"><expr pos:start="89:34" pos:end="89:41"><operator pos:start="89:34" pos:end="89:34">*</operator><name pos:start="89:35" pos:end="89:41">gic_msi</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:38"><expr pos:start="91:9" pos:end="91:37"><name pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:15">gic_msi</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:33">gic_msi_frame_id</name></name> <operator pos:start="91:35" pos:end="91:35">=</operator> <literal type="number" pos:start="91:37" pos:end="91:37">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:71"><expr pos:start="93:9" pos:end="93:70"><name pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:15">gic_msi</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:29">base_address</name></name> <operator pos:start="93:31" pos:end="93:31">=</operator> <call pos:start="93:33" pos:end="93:70"><name pos:start="93:33" pos:end="93:43">cpu_to_le64</name><argument_list pos:start="93:44" pos:end="93:70">(<argument pos:start="93:45" pos:end="93:69"><expr pos:start="93:45" pos:end="93:69"><name pos:start="93:45" pos:end="93:64"><name pos:start="93:45" pos:end="93:50">memmap</name><index pos:start="93:51" pos:end="93:64">[<expr pos:start="93:52" pos:end="93:63"><name pos:start="93:52" pos:end="93:63">VIRT_GIC_V2M</name></expr>]</index></name><operator pos:start="93:65" pos:end="93:65">.</operator><name pos:start="93:66" pos:end="93:69">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:40"><expr pos:start="95:9" pos:end="95:39"><name pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:15">gic_msi</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:22">flags</name></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <call pos:start="95:26" pos:end="95:39"><name pos:start="95:26" pos:end="95:36">cpu_to_le32</name><argument_list pos:start="95:37" pos:end="95:39">(<argument pos:start="95:38" pos:end="95:38"><expr pos:start="95:38" pos:end="95:38"><literal type="number" pos:start="95:38" pos:end="95:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:58"><expr pos:start="97:9" pos:end="97:57"><name pos:start="97:9" pos:end="97:26"><name pos:start="97:9" pos:end="97:15">gic_msi</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:26">spi_count</name></name> <operator pos:start="97:28" pos:end="97:28">=</operator> <call pos:start="97:30" pos:end="97:57"><name pos:start="97:30" pos:end="97:40">cpu_to_le16</name><argument_list pos:start="97:41" pos:end="97:57">(<argument pos:start="97:42" pos:end="97:56"><expr pos:start="97:42" pos:end="97:56"><name pos:start="97:42" pos:end="97:56">NUM_GICV2M_SPIS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:77"><expr pos:start="99:9" pos:end="99:76"><name pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:15">gic_msi</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:25">spi_base</name></name> <operator pos:start="99:27" pos:end="99:27">=</operator> <call pos:start="99:29" pos:end="99:76"><name pos:start="99:29" pos:end="99:39">cpu_to_le16</name><argument_list pos:start="99:40" pos:end="99:76">(<argument pos:start="99:41" pos:end="99:75"><expr pos:start="99:41" pos:end="99:75"><name pos:start="99:41" pos:end="99:60"><name pos:start="99:41" pos:end="99:46">irqmap</name><index pos:start="99:47" pos:end="99:60">[<expr pos:start="99:48" pos:end="99:59"><name pos:start="99:48" pos:end="99:59">VIRT_GIC_V2M</name></expr>]</index></name> <operator pos:start="99:62" pos:end="99:62">+</operator> <name pos:start="99:64" pos:end="99:75">ARM_SPI_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="109:62"><expr pos:start="105:5" pos:end="109:61"><call pos:start="105:5" pos:end="109:61"><name pos:start="105:5" pos:end="105:16">build_header</name><argument_list pos:start="105:17" pos:end="109:61">(<argument pos:start="105:18" pos:end="105:23"><expr pos:start="105:18" pos:end="105:23"><name pos:start="105:18" pos:end="105:23">linker</name></expr></argument>, <argument pos:start="105:26" pos:end="105:35"><expr pos:start="105:26" pos:end="105:35"><name pos:start="105:26" pos:end="105:35">table_data</name></expr></argument>,

                 <argument pos:start="107:18" pos:end="107:56"><expr pos:start="107:18" pos:end="107:56"><operator pos:start="107:18" pos:end="107:18">(</operator><name pos:start="107:19" pos:end="107:22">void</name> <operator pos:start="107:24" pos:end="107:24">*</operator><operator pos:start="107:25" pos:end="107:25">)</operator><operator pos:start="107:26" pos:end="107:26">(</operator><name pos:start="107:27" pos:end="107:42"><name pos:start="107:27" pos:end="107:36">table_data</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:42">data</name></name> <operator pos:start="107:44" pos:end="107:44">+</operator> <name pos:start="107:46" pos:end="107:55">madt_start</name><operator pos:start="107:56" pos:end="107:56">)</operator></expr></argument>, <argument pos:start="107:59" pos:end="107:64"><expr pos:start="107:59" pos:end="107:64"><literal type="string" pos:start="107:59" pos:end="107:64">"APIC"</literal></expr></argument>,

                 <argument pos:start="109:18" pos:end="109:45"><expr pos:start="109:18" pos:end="109:45"><name pos:start="109:18" pos:end="109:32"><name pos:start="109:18" pos:end="109:27">table_data</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:32">len</name></name> <operator pos:start="109:34" pos:end="109:34">-</operator> <name pos:start="109:36" pos:end="109:45">madt_start</name></expr></argument>, <argument pos:start="109:48" pos:end="109:48"><expr pos:start="109:48" pos:end="109:48"><literal type="number" pos:start="109:48" pos:end="109:48">3</literal></expr></argument>, <argument pos:start="109:51" pos:end="109:54"><expr pos:start="109:51" pos:end="109:54"><name pos:start="109:51" pos:end="109:54">NULL</name></expr></argument>, <argument pos:start="109:57" pos:end="109:60"><expr pos:start="109:57" pos:end="109:60"><name pos:start="109:57" pos:end="109:60">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
