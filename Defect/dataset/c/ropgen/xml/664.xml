<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/664.c" pos:tabs="8"><function pos:start="1:1" pos:end="12:35"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">rng_egd_opened</name><parameter_list pos:start="1:27" pos:end="1:55">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:37">RngBackend</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">b</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:47">Error</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier><modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">errp</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="12:35">{<block_content pos:start="3:5" pos:end="12:35">
    <decl_stmt pos:start="3:5" pos:end="3:27"><decl pos:start="3:5" pos:end="3:26"><type pos:start="3:5" pos:end="3:12"><name pos:start="3:5" pos:end="3:10">RngEgd</name> <modifier pos:start="3:12" pos:end="3:12">*</modifier></type><name pos:start="3:13" pos:end="3:13">s</name> <init pos:start="3:15" pos:end="3:26">= <expr pos:start="3:17" pos:end="3:26"><call pos:start="3:17" pos:end="3:26"><name pos:start="3:17" pos:end="3:23">RNG_EGD</name><argument_list pos:start="3:24" pos:end="3:26">(<argument pos:start="3:25" pos:end="3:25"><expr pos:start="3:25" pos:end="3:25"><name pos:start="3:25" pos:end="3:25">b</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="4:5" pos:end="12:35"><if pos:start="4:5" pos:end="12:35">if <condition pos:start="4:8" pos:end="4:28">(<expr pos:start="4:9" pos:end="4:27"><name pos:start="4:9" pos:end="4:19"><name pos:start="4:9" pos:end="4:9">s</name><operator pos:start="4:10" pos:end="4:11">-&gt;</operator><name pos:start="4:12" pos:end="4:19">chr_name</name></name> <operator pos:start="4:21" pos:end="4:22">==</operator> <name pos:start="4:24" pos:end="4:27">NULL</name></expr>)</condition> <block pos:start="4:30" pos:end="12:35">{<block_content pos:start="5:9" pos:end="12:35">
        <expr_stmt pos:start="5:9" pos:end="6:57"><expr pos:start="5:9" pos:end="6:56"><call pos:start="5:9" pos:end="6:56"><name pos:start="5:9" pos:end="5:17">error_set</name><argument_list pos:start="5:18" pos:end="6:56">(<argument pos:start="5:19" pos:end="5:22"><expr pos:start="5:19" pos:end="5:22"><name pos:start="5:19" pos:end="5:22">errp</name></expr></argument>, <argument pos:start="5:25" pos:end="5:52"><expr pos:start="5:25" pos:end="5:52"><name pos:start="5:25" pos:end="5:52">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>,
                  <argument pos:start="6:19" pos:end="6:27"><expr pos:start="6:19" pos:end="6:27"><literal type="string" pos:start="6:19" pos:end="6:27">"chardev"</literal></expr></argument>, <argument pos:start="6:30" pos:end="6:55"><expr pos:start="6:30" pos:end="6:55"><literal type="string" pos:start="6:30" pos:end="6:55">"a valid character device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:40"><expr pos:start="7:5" pos:end="7:39"><name pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:10">chr</name></name> <operator pos:start="7:12" pos:end="7:12">=</operator> <call pos:start="7:14" pos:end="7:39"><name pos:start="7:14" pos:end="7:26">qemu_chr_find</name><argument_list pos:start="7:27" pos:end="7:39">(<argument pos:start="7:28" pos:end="7:38"><expr pos:start="7:28" pos:end="7:38"><name pos:start="7:28" pos:end="7:38"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:38">chr_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="8:5" pos:end="12:35"><if pos:start="8:5" pos:end="12:35">if <condition pos:start="8:8" pos:end="8:23">(<expr pos:start="8:9" pos:end="8:22"><name pos:start="8:9" pos:end="8:14"><name pos:start="8:9" pos:end="8:9">s</name><operator pos:start="8:10" pos:end="8:11">-&gt;</operator><name pos:start="8:12" pos:end="8:14">chr</name></name> <operator pos:start="8:16" pos:end="8:17">==</operator> <name pos:start="8:19" pos:end="8:22">NULL</name></expr>)</condition> <block pos:start="8:25" pos:end="12:35">{<block_content pos:start="9:9" pos:end="12:35">
        <expr_stmt pos:start="9:9" pos:end="9:60"><expr pos:start="9:9" pos:end="9:59"><call pos:start="9:9" pos:end="9:59"><name pos:start="9:9" pos:end="9:17">error_set</name><argument_list pos:start="9:18" pos:end="9:59">(<argument pos:start="9:19" pos:end="9:22"><expr pos:start="9:19" pos:end="9:22"><name pos:start="9:19" pos:end="9:22">errp</name></expr></argument>, <argument pos:start="9:25" pos:end="9:45"><expr pos:start="9:25" pos:end="9:45"><name pos:start="9:25" pos:end="9:45">QERR_DEVICE_NOT_FOUND</name></expr></argument>, <argument pos:start="9:48" pos:end="9:58"><expr pos:start="9:48" pos:end="9:58"><name pos:start="9:48" pos:end="9:58"><name pos:start="9:48" pos:end="9:48">s</name><operator pos:start="9:49" pos:end="9:50">-&gt;</operator><name pos:start="9:51" pos:end="9:58">chr_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="10:5" pos:end="10:76">/* FIXME we should resubmit pending requests when the CDS reconnects. */</comment>
    <expr_stmt pos:start="11:5" pos:end="12:35"><expr pos:start="11:5" pos:end="12:34"><call pos:start="11:5" pos:end="12:34"><name pos:start="11:5" pos:end="11:25">qemu_chr_add_handlers</name><argument_list pos:start="11:26" pos:end="12:34">(<argument pos:start="11:27" pos:end="11:32"><expr pos:start="11:27" pos:end="11:32"><name pos:start="11:27" pos:end="11:32"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:32">chr</name></name></expr></argument>, <argument pos:start="11:35" pos:end="11:54"><expr pos:start="11:35" pos:end="11:54"><name pos:start="11:35" pos:end="11:54">rng_egd_chr_can_read</name></expr></argument>, <argument pos:start="11:57" pos:end="11:72"><expr pos:start="11:57" pos:end="11:72"><name pos:start="11:57" pos:end="11:72">rng_egd_chr_read</name></expr></argument>,
                          <argument pos:start="12:27" pos:end="12:30"><expr pos:start="12:27" pos:end="12:30"><name pos:start="12:27" pos:end="12:30">NULL</name></expr></argument>, <argument pos:start="12:33" pos:end="12:33"><expr pos:start="12:33" pos:end="12:33"><name pos:start="12:33" pos:end="12:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
