<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11107.c" pos:tabs="8"><function pos:start="1:1" pos:end="46:1"><type pos:start="1:1" pos:end="1:31"><name pos:start="1:1" pos:end="1:29">MigrationCapabilityStatusList</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:61">qmp_query_migrate_capabilities</name><parameter_list pos:start="1:62" pos:end="1:75">(<parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:70"><name pos:start="1:63" pos:end="1:67">Error</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier><modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:74">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="46:1">{<block_content pos:start="5:5" pos:end="44:16">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:35"><name pos:start="5:5" pos:end="5:33">MigrationCapabilityStatusList</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:39">head</name> <init pos:start="5:41" pos:end="5:46">= <expr pos:start="5:43" pos:end="5:46"><name pos:start="5:43" pos:end="5:46">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:33">MigrationCapabilityStatusList</name> <modifier pos:start="7:35" pos:end="7:35">*</modifier></type><name pos:start="7:36" pos:end="7:39">caps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">MigrationState</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:45">= <expr pos:start="9:25" pos:end="9:45"><call pos:start="9:25" pos:end="9:45"><name pos:start="9:25" pos:end="9:43">migrate_get_current</name><argument_list pos:start="9:44" pos:end="9:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>




    <for pos:start="16:5" pos:end="40:5">for <control pos:start="16:9" pos:end="16:50">(<init pos:start="16:10" pos:end="16:15"><expr pos:start="16:10" pos:end="16:14"><name pos:start="16:10" pos:end="16:10">i</name> <operator pos:start="16:12" pos:end="16:12">=</operator> <literal type="number" pos:start="16:14" pos:end="16:14">0</literal></expr>;</init> <condition pos:start="16:17" pos:end="16:45"><expr pos:start="16:17" pos:end="16:44"><name pos:start="16:17" pos:end="16:17">i</name> <operator pos:start="16:19" pos:end="16:19">&lt;</operator> <name pos:start="16:21" pos:end="16:44">MIGRATION_CAPABILITY_MAX</name></expr>;</condition> <incr pos:start="16:47" pos:end="16:49"><expr pos:start="16:47" pos:end="16:49"><name pos:start="16:47" pos:end="16:47">i</name><operator pos:start="16:48" pos:end="16:49">++</operator></expr></incr>)</control> <block pos:start="16:52" pos:end="40:5">{<block_content pos:start="18:9" pos:end="38:56">

        <if_stmt pos:start="18:9" pos:end="30:9"><if pos:start="18:9" pos:end="24:9">if <condition pos:start="18:12" pos:end="18:25">(<expr pos:start="18:13" pos:end="18:24"><name pos:start="18:13" pos:end="18:16">head</name> <operator pos:start="18:18" pos:end="18:19">==</operator> <name pos:start="18:21" pos:end="18:24">NULL</name></expr>)</condition> <block pos:start="18:27" pos:end="24:9">{<block_content pos:start="20:13" pos:end="22:24">

            <expr_stmt pos:start="20:13" pos:end="20:44"><expr pos:start="20:13" pos:end="20:43"><name pos:start="20:13" pos:end="20:16">head</name> <operator pos:start="20:18" pos:end="20:18">=</operator> <call pos:start="20:20" pos:end="20:43"><name pos:start="20:20" pos:end="20:28">g_malloc0</name><argument_list pos:start="20:29" pos:end="20:43">(<argument pos:start="20:30" pos:end="20:42"><expr pos:start="20:30" pos:end="20:42"><sizeof pos:start="20:30" pos:end="20:42">sizeof<argument_list pos:start="20:36" pos:end="20:42">(<argument pos:start="20:37" pos:end="20:41"><expr pos:start="20:37" pos:end="20:41"><operator pos:start="20:37" pos:end="20:37">*</operator><name pos:start="20:38" pos:end="20:41">caps</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="22:13" pos:end="22:24"><expr pos:start="22:13" pos:end="22:23"><name pos:start="22:13" pos:end="22:16">caps</name> <operator pos:start="22:18" pos:end="22:18">=</operator> <name pos:start="22:20" pos:end="22:23">head</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="24:11" pos:end="30:9">else <block pos:start="24:16" pos:end="30:9">{<block_content pos:start="26:13" pos:end="28:30">

            <expr_stmt pos:start="26:13" pos:end="26:50"><expr pos:start="26:13" pos:end="26:49"><name pos:start="26:13" pos:end="26:22"><name pos:start="26:13" pos:end="26:16">caps</name><operator pos:start="26:17" pos:end="26:18">-&gt;</operator><name pos:start="26:19" pos:end="26:22">next</name></name> <operator pos:start="26:24" pos:end="26:24">=</operator> <call pos:start="26:26" pos:end="26:49"><name pos:start="26:26" pos:end="26:34">g_malloc0</name><argument_list pos:start="26:35" pos:end="26:49">(<argument pos:start="26:36" pos:end="26:48"><expr pos:start="26:36" pos:end="26:48"><sizeof pos:start="26:36" pos:end="26:48">sizeof<argument_list pos:start="26:42" pos:end="26:48">(<argument pos:start="26:43" pos:end="26:47"><expr pos:start="26:43" pos:end="26:47"><operator pos:start="26:43" pos:end="26:43">*</operator><name pos:start="26:44" pos:end="26:47">caps</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="28:13" pos:end="28:30"><expr pos:start="28:13" pos:end="28:29"><name pos:start="28:13" pos:end="28:16">caps</name> <operator pos:start="28:18" pos:end="28:18">=</operator> <name pos:start="28:20" pos:end="28:29"><name pos:start="28:20" pos:end="28:23">caps</name><operator pos:start="28:24" pos:end="28:25">-&gt;</operator><name pos:start="28:26" pos:end="28:29">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="32:9" pos:end="34:43"><expr pos:start="32:9" pos:end="34:42"><name pos:start="32:9" pos:end="32:19"><name pos:start="32:9" pos:end="32:12">caps</name><operator pos:start="32:13" pos:end="32:14">-&gt;</operator><name pos:start="32:15" pos:end="32:19">value</name></name> <operator pos:start="32:21" pos:end="32:21">=</operator>

            <call pos:start="34:13" pos:end="34:42"><name pos:start="34:13" pos:end="34:20">g_malloc</name><argument_list pos:start="34:21" pos:end="34:42">(<argument pos:start="34:22" pos:end="34:41"><expr pos:start="34:22" pos:end="34:41"><sizeof pos:start="34:22" pos:end="34:41">sizeof<argument_list pos:start="34:28" pos:end="34:41">(<argument pos:start="34:29" pos:end="34:40"><expr pos:start="34:29" pos:end="34:40"><operator pos:start="34:29" pos:end="34:29">*</operator><name pos:start="34:30" pos:end="34:40"><name pos:start="34:30" pos:end="34:33">caps</name><operator pos:start="34:34" pos:end="34:35">-&gt;</operator><name pos:start="34:36" pos:end="34:40">value</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="36:9" pos:end="36:36"><expr pos:start="36:9" pos:end="36:35"><name pos:start="36:9" pos:end="36:31"><name pos:start="36:9" pos:end="36:12">caps</name><operator pos:start="36:13" pos:end="36:14">-&gt;</operator><name pos:start="36:15" pos:end="36:19">value</name><operator pos:start="36:20" pos:end="36:21">-&gt;</operator><name pos:start="36:22" pos:end="36:31">capability</name></name> <operator pos:start="36:33" pos:end="36:33">=</operator> <name pos:start="36:35" pos:end="36:35">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="38:9" pos:end="38:56"><expr pos:start="38:9" pos:end="38:55"><name pos:start="38:9" pos:end="38:26"><name pos:start="38:9" pos:end="38:12">caps</name><operator pos:start="38:13" pos:end="38:14">-&gt;</operator><name pos:start="38:15" pos:end="38:19">value</name><operator pos:start="38:20" pos:end="38:21">-&gt;</operator><name pos:start="38:22" pos:end="38:26">state</name></name> <operator pos:start="38:28" pos:end="38:28">=</operator> <name pos:start="38:30" pos:end="38:55"><name pos:start="38:30" pos:end="38:30">s</name><operator pos:start="38:31" pos:end="38:32">-&gt;</operator><name pos:start="38:33" pos:end="38:52">enabled_capabilities</name><index pos:start="38:53" pos:end="38:55">[<expr pos:start="38:54" pos:end="38:54"><name pos:start="38:54" pos:end="38:54">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="44:5" pos:end="44:16">return <expr pos:start="44:12" pos:end="44:15"><name pos:start="44:12" pos:end="44:15">head</name></expr>;</return>

</block_content>}</block></function></unit>
