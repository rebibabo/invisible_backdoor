<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1078.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">openfile</name><parameter_list pos:start="1:20" pos:end="1:56">(<parameter pos:start="1:21" pos:end="1:30"><decl pos:start="1:21" pos:end="1:30"><type pos:start="1:21" pos:end="1:30"><name pos:start="1:21" pos:end="1:24">char</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:30">name</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:41"><decl pos:start="1:33" pos:end="1:41"><type pos:start="1:33" pos:end="1:41"><name pos:start="1:33" pos:end="1:35">int</name></type> <name pos:start="1:37" pos:end="1:41">flags</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:55">growable</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:9" pos:end="49:17">

	<if_stmt pos:start="5:9" pos:end="11:9"><if pos:start="5:9" pos:end="11:9">if <condition pos:start="5:12" pos:end="5:15">(<expr pos:start="5:13" pos:end="5:14"><name pos:start="5:13" pos:end="5:14">bs</name></expr>)</condition> <block pos:start="5:17" pos:end="11:9">{<block_content pos:start="7:17" pos:end="9:25">

		<expr_stmt pos:start="7:17" pos:end="7:73"><expr pos:start="7:17" pos:end="7:72"><call pos:start="7:17" pos:end="7:72"><name pos:start="7:17" pos:end="7:23">fprintf</name><argument_list pos:start="7:24" pos:end="7:72">(<argument pos:start="7:25" pos:end="7:30"><expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30">stderr</name></expr></argument>, <argument pos:start="7:33" pos:end="7:71"><expr pos:start="7:33" pos:end="7:71"><literal type="string" pos:start="7:33" pos:end="7:71">"file open already, try 'help close'\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="9:17" pos:end="9:25">return <expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">1</literal></expr>;</return>

	</block_content>}</block></if></if_stmt>



	<expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:10">bs</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:28"><name pos:start="15:14" pos:end="15:21">bdrv_new</name><argument_list pos:start="15:22" pos:end="15:28">(<argument pos:start="15:23" pos:end="15:27"><expr pos:start="15:23" pos:end="15:27"><literal type="string" pos:start="15:23" pos:end="15:27">"hda"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="17:9" pos:end="19:25"><if pos:start="17:9" pos:end="19:25">if <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:15">bs</name></expr>)</condition><block type="pseudo" pos:start="19:17" pos:end="19:25"><block_content pos:start="19:17" pos:end="19:25">

		<return pos:start="19:17" pos:end="19:25">return <expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">1</literal></expr>;</return></block_content></block></if></if_stmt>



	<if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:21">(<expr pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:20">growable</name></expr>)</condition> <block pos:start="23:23" pos:end="27:9">{<block_content pos:start="25:17" pos:end="25:37">

		<expr_stmt pos:start="25:17" pos:end="25:37"><expr pos:start="25:17" pos:end="25:36"><name pos:start="25:17" pos:end="25:21">flags</name> <operator pos:start="25:23" pos:end="25:24">|=</operator> <name pos:start="25:26" pos:end="25:36">BDRV_O_FILE</name></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>



	<if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="39:9">if <condition pos:start="31:12" pos:end="31:45">(<expr pos:start="31:13" pos:end="31:44"><call pos:start="31:13" pos:end="31:38"><name pos:start="31:13" pos:end="31:21">bdrv_open</name><argument_list pos:start="31:22" pos:end="31:38">(<argument pos:start="31:23" pos:end="31:24"><expr pos:start="31:23" pos:end="31:24"><name pos:start="31:23" pos:end="31:24">bs</name></expr></argument>, <argument pos:start="31:27" pos:end="31:30"><expr pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:30">name</name></expr></argument>, <argument pos:start="31:33" pos:end="31:37"><expr pos:start="31:33" pos:end="31:37"><name pos:start="31:33" pos:end="31:37">flags</name></expr></argument>)</argument_list></call> <operator pos:start="31:40" pos:end="31:41">==</operator> <operator pos:start="31:43" pos:end="31:43">-</operator><literal type="number" pos:start="31:44" pos:end="31:44">1</literal></expr>)</condition> <block pos:start="31:47" pos:end="39:9">{<block_content pos:start="33:17" pos:end="37:25">

		<expr_stmt pos:start="33:17" pos:end="33:78"><expr pos:start="33:17" pos:end="33:77"><call pos:start="33:17" pos:end="33:77"><name pos:start="33:17" pos:end="33:23">fprintf</name><argument_list pos:start="33:24" pos:end="33:77">(<argument pos:start="33:25" pos:end="33:30"><expr pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:30">stderr</name></expr></argument>, <argument pos:start="33:33" pos:end="33:60"><expr pos:start="33:33" pos:end="33:60"><literal type="string" pos:start="33:33" pos:end="33:60">"%s: can't open device %s\n"</literal></expr></argument>, <argument pos:start="33:63" pos:end="33:70"><expr pos:start="33:63" pos:end="33:70"><name pos:start="33:63" pos:end="33:70">progname</name></expr></argument>, <argument pos:start="33:73" pos:end="33:76"><expr pos:start="33:73" pos:end="33:76"><name pos:start="33:73" pos:end="33:76">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="35:17" pos:end="35:26"><expr pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:18">bs</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:25">NULL</name></expr>;</expr_stmt>

		<return pos:start="37:17" pos:end="37:25">return <expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">1</literal></expr>;</return>

	</block_content>}</block></if></if_stmt>



	<if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:21">(<expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:20">growable</name></expr>)</condition> <block pos:start="43:23" pos:end="47:9">{<block_content pos:start="45:17" pos:end="45:33">

		<expr_stmt pos:start="45:17" pos:end="45:33"><expr pos:start="45:17" pos:end="45:32"><name pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:18">bs</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:28">growable</name></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <literal type="number" pos:start="45:32" pos:end="45:32">1</literal></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

	<return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
