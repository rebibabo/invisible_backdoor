<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1166.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">bonito_spciconf_writel</name><parameter_list pos:start="1:35" pos:end="3:48">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:72"><decl pos:start="1:50" pos:end="1:72"><type pos:start="1:50" pos:end="1:72"><name pos:start="1:50" pos:end="1:67">target_phys_addr_t</name></type> <name pos:start="1:69" pos:end="1:72">addr</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:47"><decl pos:start="3:36" pos:end="3:47"><type pos:start="3:36" pos:end="3:47"><name pos:start="3:36" pos:end="3:43">uint32_t</name></type> <name pos:start="3:45" pos:end="3:47">val</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:53">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PCIBonitoState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">pciaddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:19">status</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:76"><expr pos:start="15:5" pos:end="15:75"><call pos:start="15:5" pos:end="15:75"><name pos:start="15:5" pos:end="15:11">DPRINTF</name><argument_list pos:start="15:12" pos:end="15:75">(<argument pos:start="15:13" pos:end="15:63"><expr pos:start="15:13" pos:end="15:63"><literal type="string" pos:start="15:13" pos:end="15:37">"bonito_spciconf_writel "</literal><name pos:start="15:38" pos:end="15:51">TARGET_FMT_plx</name><literal type="string" pos:start="15:52" pos:end="15:63">" val %x \n"</literal></expr></argument>, <argument pos:start="15:66" pos:end="15:69"><expr pos:start="15:66" pos:end="15:69"><name pos:start="15:66" pos:end="15:69">addr</name></expr></argument>, <argument pos:start="15:72" pos:end="15:74"><expr pos:start="15:72" pos:end="15:74"><name pos:start="15:72" pos:end="15:74">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><call pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:25">(<argument pos:start="17:12" pos:end="17:24"><expr pos:start="17:12" pos:end="17:24"><operator pos:start="17:12" pos:end="17:12">(</operator><name pos:start="17:13" pos:end="17:16">addr</name><operator pos:start="17:17" pos:end="17:17">&amp;</operator><literal type="number" pos:start="17:18" pos:end="17:20">0x3</literal><operator pos:start="17:21" pos:end="17:21">)</operator><operator pos:start="17:22" pos:end="17:23">==</operator><literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:11">pciaddr</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:45"><name pos:start="21:15" pos:end="21:36">bonito_sbridge_pciaddr</name><argument_list pos:start="21:37" pos:end="21:45">(<argument pos:start="21:38" pos:end="21:38"><expr pos:start="21:38" pos:end="21:38"><name pos:start="21:38" pos:end="21:38">s</name></expr></argument>, <argument pos:start="21:41" pos:end="21:44"><expr pos:start="21:41" pos:end="21:44"><name pos:start="21:41" pos:end="21:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:30">(<expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:15">pciaddr</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <literal type="number" pos:start="25:20" pos:end="25:29">0xffffffff</literal></expr>)</condition> <block pos:start="25:32" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:15">

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:46">/* set the pci address in s-&gt;config_reg */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:52"><expr pos:start="35:5" pos:end="35:51"><name pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:14">pcihost</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:26">config_reg</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <operator pos:start="35:30" pos:end="35:30">(</operator><name pos:start="35:31" pos:end="35:37">pciaddr</name><operator pos:start="35:38" pos:end="35:38">)</operator> <operator pos:start="35:40" pos:end="35:40">|</operator> <operator pos:start="35:42" pos:end="35:42">(</operator><literal type="number" pos:start="35:43" pos:end="35:44">1u</literal> <operator pos:start="35:46" pos:end="35:47">&lt;&lt;</operator> <literal type="number" pos:start="35:49" pos:end="35:50">31</literal><operator pos:start="35:51" pos:end="35:51">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:68"><expr pos:start="37:5" pos:end="37:67"><call pos:start="37:5" pos:end="37:67"><name pos:start="37:5" pos:end="37:18">pci_data_write</name><argument_list pos:start="37:19" pos:end="37:67">(<argument pos:start="37:20" pos:end="37:34"><expr pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:29">pcihost</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:34">bus</name></name></expr></argument>, <argument pos:start="37:37" pos:end="37:58"><expr pos:start="37:37" pos:end="37:58"><name pos:start="37:37" pos:end="37:58"><name pos:start="37:37" pos:end="37:37">s</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:46">pcihost</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:58">config_reg</name></name></expr></argument>, <argument pos:start="37:61" pos:end="37:63"><expr pos:start="37:61" pos:end="37:63"><name pos:start="37:61" pos:end="37:63">val</name></expr></argument>, <argument pos:start="37:66" pos:end="37:66"><expr pos:start="37:66" pos:end="37:66"><literal type="number" pos:start="37:66" pos:end="37:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:75">/* clear PCI_STATUS_REC_MASTER_ABORT and PCI_STATUS_REC_TARGET_ABORT */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:54"><expr pos:start="43:5" pos:end="43:53"><name pos:start="43:5" pos:end="43:10">status</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:53"><name pos:start="43:14" pos:end="43:25">pci_get_word</name><argument_list pos:start="43:26" pos:end="43:53">(<argument pos:start="43:27" pos:end="43:52"><expr pos:start="43:27" pos:end="43:52"><name pos:start="43:27" pos:end="43:39"><name pos:start="43:27" pos:end="43:27">s</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:32">dev</name><operator pos:start="43:33" pos:end="43:33">.</operator><name pos:start="43:34" pos:end="43:39">config</name></name> <operator pos:start="43:41" pos:end="43:41">+</operator> <name pos:start="43:43" pos:end="43:52">PCI_STATUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:75"><expr pos:start="45:5" pos:end="45:74"><name pos:start="45:5" pos:end="45:10">status</name> <operator pos:start="45:12" pos:end="45:13">&amp;=</operator> <operator pos:start="45:15" pos:end="45:15">~</operator><operator pos:start="45:16" pos:end="45:16">(</operator><name pos:start="45:17" pos:end="45:43">PCI_STATUS_REC_MASTER_ABORT</name> <operator pos:start="45:45" pos:end="45:45">|</operator> <name pos:start="45:47" pos:end="45:73">PCI_STATUS_REC_TARGET_ABORT</name><operator pos:start="45:74" pos:end="45:74">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><call pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:16">pci_set_word</name><argument_list pos:start="47:17" pos:end="47:52">(<argument pos:start="47:18" pos:end="47:43"><expr pos:start="47:18" pos:end="47:43"><name pos:start="47:18" pos:end="47:30"><name pos:start="47:18" pos:end="47:18">s</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:23">dev</name><operator pos:start="47:24" pos:end="47:24">.</operator><name pos:start="47:25" pos:end="47:30">config</name></name> <operator pos:start="47:32" pos:end="47:32">+</operator> <name pos:start="47:34" pos:end="47:43">PCI_STATUS</name></expr></argument>, <argument pos:start="47:46" pos:end="47:51"><expr pos:start="47:46" pos:end="47:51"><name pos:start="47:46" pos:end="47:51">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
