<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8957.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">ide_sector_write</name><parameter_list pos:start="1:22" pos:end="1:34">(<parameter pos:start="1:23" pos:end="1:33"><decl pos:start="1:23" pos:end="1:33"><type pos:start="1:23" pos:end="1:32"><name pos:start="1:23" pos:end="1:30">IDEState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:59">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:22">sector_num</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:13">status</name></name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:26">READY_STAT</name> <operator pos:start="11:28" pos:end="11:28">|</operator> <name pos:start="11:30" pos:end="11:38">SEEK_STAT</name> <operator pos:start="11:40" pos:end="11:40">|</operator> <name pos:start="11:42" pos:end="11:50">BUSY_STAT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="16:0"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:14">sector_num</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:34"><name pos:start="13:18" pos:end="13:31">ide_get_sector</name><argument_list pos:start="13:32" pos:end="13:34">(<argument pos:start="13:33" pos:end="13:33"><expr pos:start="13:33" pos:end="13:33"><name pos:start="13:33" pos:end="13:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="15:1" pos:end="15:22">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:22"><call pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:11">defined</name><argument_list pos:start="15:12" pos:end="15:22">(<argument pos:start="15:13" pos:end="15:21"><expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:21">DEBUG_IDE</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:46"><call pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:10">printf</name><argument_list pos:start="17:11" pos:end="17:46">(<argument pos:start="17:12" pos:end="17:33"><expr pos:start="17:12" pos:end="17:33"><literal type="string" pos:start="17:12" pos:end="17:21">"sector=%"</literal> <name pos:start="17:23" pos:end="17:28">PRId64</name> <literal type="string" pos:start="17:30" pos:end="17:33">"\n"</literal></expr></argument>, <argument pos:start="17:36" pos:end="17:45"><expr pos:start="17:36" pos:end="17:45"><name pos:start="17:36" pos:end="17:45">sector_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:5">n</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:18">nsector</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:30">(<expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:9">n</name> <operator pos:start="23:11" pos:end="23:11">&gt;</operator> <name pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:29">req_nb_sectors</name></name></expr>)</condition> <block pos:start="23:32" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:30">

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:9">n</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:29">req_nb_sectors</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:45">(<expr pos:start="31:9" pos:end="31:44"><operator pos:start="31:9" pos:end="31:9">!</operator><call pos:start="31:10" pos:end="31:44"><name pos:start="31:10" pos:end="31:26">ide_sect_range_ok</name><argument_list pos:start="31:27" pos:end="31:44">(<argument pos:start="31:28" pos:end="31:28"><expr pos:start="31:28" pos:end="31:28"><name pos:start="31:28" pos:end="31:28">s</name></expr></argument>, <argument pos:start="31:31" pos:end="31:40"><expr pos:start="31:31" pos:end="31:40"><name pos:start="31:31" pos:end="31:40">sector_num</name></expr></argument>, <argument pos:start="31:43" pos:end="31:43"><expr pos:start="31:43" pos:end="31:43"><name pos:start="31:43" pos:end="31:43">n</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:47" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:15">

        <expr_stmt pos:start="33:9" pos:end="33:24"><expr pos:start="33:9" pos:end="33:23"><call pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:20">ide_rw_error</name><argument_list pos:start="33:21" pos:end="33:23">(<argument pos:start="33:22" pos:end="33:22"><expr pos:start="33:22" pos:end="33:22"><name pos:start="33:22" pos:end="33:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:10">iov</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:19">iov_base</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:34"><name pos:start="41:23" pos:end="41:23">s</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:34">io_buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:43"><expr pos:start="43:5" pos:end="43:42"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:10">iov</name><operator pos:start="43:11" pos:end="43:11">.</operator><name pos:start="43:12" pos:end="43:18">iov_len</name></name>  <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:23">n</name> <operator pos:start="43:25" pos:end="43:25">*</operator> <name pos:start="43:27" pos:end="43:42">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:51"><expr pos:start="45:5" pos:end="45:50"><call pos:start="45:5" pos:end="45:50"><name pos:start="45:5" pos:end="45:28">qemu_iovec_init_external</name><argument_list pos:start="45:29" pos:end="45:50">(<argument pos:start="45:30" pos:end="45:37"><expr pos:start="45:30" pos:end="45:37"><operator pos:start="45:30" pos:end="45:30">&amp;</operator><name pos:start="45:31" pos:end="45:37"><name pos:start="45:31" pos:end="45:31">s</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:37">qiov</name></name></expr></argument>, <argument pos:start="45:40" pos:end="45:46"><expr pos:start="45:40" pos:end="45:46"><operator pos:start="45:40" pos:end="45:40">&amp;</operator><name pos:start="45:41" pos:end="45:46"><name pos:start="45:41" pos:end="45:41">s</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:46">iov</name></name></expr></argument>, <argument pos:start="45:49" pos:end="45:49"><expr pos:start="45:49" pos:end="45:49"><literal type="number" pos:start="45:49" pos:end="45:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="51:60"><expr pos:start="49:5" pos:end="51:59"><call pos:start="49:5" pos:end="51:59"><name pos:start="49:5" pos:end="49:20">block_acct_start</name><argument_list pos:start="49:21" pos:end="51:59">(<argument pos:start="49:22" pos:end="49:42"><expr pos:start="49:22" pos:end="49:42"><call pos:start="49:22" pos:end="49:42"><name pos:start="49:22" pos:end="49:35">bdrv_get_stats</name><argument_list pos:start="49:36" pos:end="49:42">(<argument pos:start="49:37" pos:end="49:41"><expr pos:start="49:37" pos:end="49:41"><name pos:start="49:37" pos:end="49:41"><name pos:start="49:37" pos:end="49:37">s</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:41">bs</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:45" pos:end="49:52"><expr pos:start="49:45" pos:end="49:52"><operator pos:start="49:45" pos:end="49:45">&amp;</operator><name pos:start="49:46" pos:end="49:52"><name pos:start="49:46" pos:end="49:46">s</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:52">acct</name></name></expr></argument>,

                     <argument pos:start="51:22" pos:end="51:41"><expr pos:start="51:22" pos:end="51:41"><name pos:start="51:22" pos:end="51:22">n</name> <operator pos:start="51:24" pos:end="51:24">*</operator> <name pos:start="51:26" pos:end="51:41">BDRV_SECTOR_SIZE</name></expr></argument>, <argument pos:start="51:44" pos:end="51:58"><expr pos:start="51:44" pos:end="51:58"><name pos:start="51:44" pos:end="51:58">BLOCK_ACCT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:59"><expr pos:start="53:5" pos:end="55:58"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:16">pio_aiocb</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="55:58"><name pos:start="53:20" pos:end="53:34">bdrv_aio_writev</name><argument_list pos:start="53:35" pos:end="55:58">(<argument pos:start="53:36" pos:end="53:40"><expr pos:start="53:36" pos:end="53:40"><name pos:start="53:36" pos:end="53:40"><name pos:start="53:36" pos:end="53:36">s</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:40">bs</name></name></expr></argument>, <argument pos:start="53:43" pos:end="53:52"><expr pos:start="53:43" pos:end="53:52"><name pos:start="53:43" pos:end="53:52">sector_num</name></expr></argument>, <argument pos:start="53:55" pos:end="53:62"><expr pos:start="53:55" pos:end="53:62"><operator pos:start="53:55" pos:end="53:55">&amp;</operator><name pos:start="53:56" pos:end="53:62"><name pos:start="53:56" pos:end="53:56">s</name><operator pos:start="53:57" pos:end="53:58">-&gt;</operator><name pos:start="53:59" pos:end="53:62">qiov</name></name></expr></argument>, <argument pos:start="53:65" pos:end="53:65"><expr pos:start="53:65" pos:end="53:65"><name pos:start="53:65" pos:end="53:65">n</name></expr></argument>,

                                   <argument pos:start="55:36" pos:end="55:54"><expr pos:start="55:36" pos:end="55:54"><name pos:start="55:36" pos:end="55:54">ide_sector_write_cb</name></expr></argument>, <argument pos:start="55:57" pos:end="55:57"><expr pos:start="55:57" pos:end="55:57"><name pos:start="55:57" pos:end="55:57">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
