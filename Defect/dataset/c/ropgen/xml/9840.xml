<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9840.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">reclaim_ramblock</name><parameter_list pos:start="1:29" pos:end="1:45">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:39"><name pos:start="1:30" pos:end="1:37">RAMBlock</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:44">block</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:18">

    <if_stmt pos:start="5:5" pos:end="27:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:36">(<expr pos:start="5:9" pos:end="5:35"><name pos:start="5:9" pos:end="5:20"><name pos:start="5:9" pos:end="5:13">block</name><operator pos:start="5:14" pos:end="5:15">-&gt;</operator><name pos:start="5:16" pos:end="5:20">flags</name></name> <operator pos:start="5:22" pos:end="5:22">&amp;</operator> <name pos:start="5:24" pos:end="5:35">RAM_PREALLOC</name></expr>)</condition> <block pos:start="5:38" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:9">

        <empty_stmt pos:start="7:9" pos:end="7:9">;</empty_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="9:7" pos:end="15:5">else if <condition pos:start="9:15" pos:end="9:29">(<expr pos:start="9:16" pos:end="9:28"><call pos:start="9:16" pos:end="9:28"><name pos:start="9:16" pos:end="9:26">xen_enabled</name><argument_list pos:start="9:27" pos:end="9:28">()</argument_list></call></expr>)</condition> <block pos:start="9:31" pos:end="15:5">{<block_content pos:start="11:9" pos:end="14:0">

        <expr_stmt pos:start="11:9" pos:end="14:0"><expr pos:start="11:9" pos:end="11:51"><call pos:start="11:9" pos:end="11:51"><name pos:start="11:9" pos:end="11:38">xen_invalidate_map_cache_entry</name><argument_list pos:start="11:39" pos:end="11:51">(<argument pos:start="11:40" pos:end="11:50"><expr pos:start="11:40" pos:end="11:50"><name pos:start="11:40" pos:end="11:50"><name pos:start="11:40" pos:end="11:44">block</name><operator pos:start="11:45" pos:end="11:46">-&gt;</operator><name pos:start="11:47" pos:end="11:50">host</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifndef pos:start="13:1" pos:end="13:14">#<cpp:directive pos:start="13:2" pos:end="13:7">ifndef</cpp:directive> <name pos:start="13:9" pos:end="13:14">_WIN32</name></cpp:ifndef>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="23:5">else if <condition pos:start="15:15" pos:end="15:30">(<expr pos:start="15:16" pos:end="15:29"><name pos:start="15:16" pos:end="15:24"><name pos:start="15:16" pos:end="15:20">block</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:24">fd</name></name> <operator pos:start="15:26" pos:end="15:27">&gt;=</operator> <literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr>)</condition> <block pos:start="15:32" pos:end="23:5">{<block_content pos:start="17:9" pos:end="22:0">

        <expr_stmt pos:start="17:9" pos:end="17:47"><expr pos:start="17:9" pos:end="17:46"><call pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:14">munmap</name><argument_list pos:start="17:15" pos:end="17:46">(<argument pos:start="17:16" pos:end="17:26"><expr pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:20">block</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:26">host</name></name></expr></argument>, <argument pos:start="17:29" pos:end="17:45"><expr pos:start="17:29" pos:end="17:45"><name pos:start="17:29" pos:end="17:45"><name pos:start="17:29" pos:end="17:33">block</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:45">max_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="22:0"><expr pos:start="19:9" pos:end="19:24"><call pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:13">close</name><argument_list pos:start="19:14" pos:end="19:24">(<argument pos:start="19:15" pos:end="19:23"><expr pos:start="19:15" pos:end="19:23"><name pos:start="19:15" pos:end="19:23"><name pos:start="19:15" pos:end="19:19">block</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:23">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="27:5">else <block pos:start="23:12" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:59">

        <expr_stmt pos:start="25:9" pos:end="25:59"><expr pos:start="25:9" pos:end="25:58"><call pos:start="25:9" pos:end="25:58"><name pos:start="25:9" pos:end="25:26">qemu_anon_ram_free</name><argument_list pos:start="25:27" pos:end="25:58">(<argument pos:start="25:28" pos:end="25:38"><expr pos:start="25:28" pos:end="25:38"><name pos:start="25:28" pos:end="25:38"><name pos:start="25:28" pos:end="25:32">block</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:38">host</name></name></expr></argument>, <argument pos:start="25:41" pos:end="25:57"><expr pos:start="25:41" pos:end="25:57"><name pos:start="25:41" pos:end="25:57"><name pos:start="25:41" pos:end="25:45">block</name><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:57">max_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><call pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:10">g_free</name><argument_list pos:start="29:11" pos:end="29:17">(<argument pos:start="29:12" pos:end="29:16"><expr pos:start="29:12" pos:end="29:16"><name pos:start="29:12" pos:end="29:16">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
