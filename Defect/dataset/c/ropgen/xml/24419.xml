<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24419.c" pos:tabs="8"><function pos:start="1:1" pos:end="423:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">svq3_decode_frame</name> <parameter_list pos:start="1:30" pos:end="5:57">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:40"><decl pos:start="3:31" pos:end="3:40"><type pos:start="3:31" pos:end="3:40"><name pos:start="3:31" pos:end="3:34">void</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">data</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:56">data_size</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:42"><decl pos:start="5:31" pos:end="5:42"><type pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:37">uint8_t</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:42">buf</name></decl></parameter>, <parameter pos:start="5:45" pos:end="5:56"><decl pos:start="5:45" pos:end="5:56"><type pos:start="5:45" pos:end="5:56"><name pos:start="5:45" pos:end="5:47">int</name></type> <name pos:start="5:49" pos:end="5:56">buf_size</name></decl></parameter>)</parameter_list> <block pos:start="5:59" pos:end="423:1">{<block_content pos:start="7:3" pos:end="421:18">

  <decl_stmt pos:start="7:3" pos:end="7:45"><decl pos:start="7:3" pos:end="7:44"><type pos:start="7:3" pos:end="7:23"><name pos:start="7:3" pos:end="7:16">MpegEncContext</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier><specifier pos:start="7:19" pos:end="7:23">const</specifier></type> <name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:44">= <expr pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:33">avctx</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="9:3" pos:end="9:42"><decl pos:start="9:3" pos:end="9:41"><type pos:start="9:3" pos:end="9:20"><name pos:start="9:3" pos:end="9:13">H264Context</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier><specifier pos:start="9:16" pos:end="9:20">const</specifier></type> <name pos:start="9:22" pos:end="9:22">h</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:30">avctx</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="11:3" pos:end="11:17"><decl pos:start="11:3" pos:end="11:7"><type pos:start="11:3" pos:end="11:5"><name pos:start="11:3" pos:end="11:5">int</name></type> <name pos:start="11:7" pos:end="11:7">m</name></decl>, <decl pos:start="11:10" pos:end="11:16"><type ref="prev" pos:start="11:3" pos:end="11:5"/><name pos:start="11:10" pos:end="11:16">mb_type</name></decl>;</decl_stmt>

  <decl_stmt pos:start="13:3" pos:end="13:27"><decl pos:start="13:3" pos:end="13:26"><type pos:start="13:3" pos:end="13:17"><name pos:start="13:3" pos:end="13:10">unsigned</name> <name pos:start="13:12" pos:end="13:15">char</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:26">extradata</name></decl>;</decl_stmt>

  <decl_stmt pos:start="15:3" pos:end="15:20"><decl pos:start="15:3" pos:end="15:19"><type pos:start="15:3" pos:end="15:14"><name pos:start="15:3" pos:end="15:10">unsigned</name> <name pos:start="15:12" pos:end="15:14">int</name></type> <name pos:start="15:16" pos:end="15:19">size</name></decl>;</decl_stmt>



  <expr_stmt pos:start="19:3" pos:end="19:26"><expr pos:start="19:3" pos:end="19:25"><name pos:start="19:3" pos:end="19:10"><name pos:start="19:3" pos:end="19:3">s</name><operator pos:start="19:4" pos:end="19:5">-&gt;</operator><name pos:start="19:6" pos:end="19:10">flags</name></name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:25"><name pos:start="19:14" pos:end="19:18">avctx</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:25">flags</name></name></expr>;</expr_stmt>

  <expr_stmt pos:start="21:3" pos:end="21:28"><expr pos:start="21:3" pos:end="21:27"><name pos:start="21:3" pos:end="21:11"><name pos:start="21:3" pos:end="21:3">s</name><operator pos:start="21:4" pos:end="21:5">-&gt;</operator><name pos:start="21:6" pos:end="21:11">flags2</name></name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:27"><name pos:start="21:15" pos:end="21:19">avctx</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:27">flags2</name></name></expr>;</expr_stmt>

  <expr_stmt pos:start="23:3" pos:end="23:25"><expr pos:start="23:3" pos:end="23:24"><name pos:start="23:3" pos:end="23:20"><name pos:start="23:3" pos:end="23:3">s</name><operator pos:start="23:4" pos:end="23:5">-&gt;</operator><name pos:start="23:6" pos:end="23:20">unrestricted_mv</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <literal type="number" pos:start="23:24" pos:end="23:24">1</literal></expr>;</expr_stmt>



  <if_stmt pos:start="27:3" pos:end="147:3"><if pos:start="27:3" pos:end="147:3">if <condition pos:start="27:6" pos:end="27:30">(<expr pos:start="27:7" pos:end="27:29"><operator pos:start="27:7" pos:end="27:7">!</operator><name pos:start="27:8" pos:end="27:29"><name pos:start="27:8" pos:end="27:8">s</name><operator pos:start="27:9" pos:end="27:10">-&gt;</operator><name pos:start="27:11" pos:end="27:29">context_initialized</name></name></expr>)</condition> <block pos:start="27:32" pos:end="147:3">{<block_content pos:start="29:5" pos:end="145:5">

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:12">width</name></name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:20">avctx</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:27">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:13">height</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:29"><name pos:start="31:17" pos:end="31:21">avctx</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:29">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:63"><expr pos:start="33:5" pos:end="33:62"><name pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:5">h</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:14">pred4x4</name><index pos:start="33:15" pos:end="33:35">[<expr pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:34">DIAG_DOWN_LEFT_PRED</name></expr>]</index></name> <operator pos:start="33:37" pos:end="33:37">=</operator> <name pos:start="33:39" pos:end="33:62">pred4x4_down_left_svq3_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:57"><expr pos:start="35:5" pos:end="35:56"><name pos:start="35:5" pos:end="35:31"><name pos:start="35:5" pos:end="35:5">h</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:16">pred16x16</name><index pos:start="35:17" pos:end="35:31">[<expr pos:start="35:18" pos:end="35:30"><name pos:start="35:18" pos:end="35:30">PLANE_PRED8x8</name></expr>]</index></name> <operator pos:start="35:33" pos:end="35:33">=</operator> <name pos:start="35:35" pos:end="35:56">pred16x16_plane_svq3_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:5">h</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:19">halfpel_flag</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:5">h</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:20">thirdpel_flag</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <literal type="number" pos:start="39:24" pos:end="39:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:29"><expr pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:5">h</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:24">unknown_svq3_flag</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:5">h</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:16">chroma_qp</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <literal type="number" pos:start="43:20" pos:end="43:20">4</literal></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="49:16"><if pos:start="47:5" pos:end="49:16">if <condition pos:start="47:8" pos:end="47:32">(<expr pos:start="47:9" pos:end="47:31"><call pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:23">MPV_common_init</name> <argument_list pos:start="47:25" pos:end="47:27">(<argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><name pos:start="47:26" pos:end="47:26">s</name></expr></argument>)</argument_list></call> <operator pos:start="47:29" pos:end="47:29">&lt;</operator> <literal type="number" pos:start="47:31" pos:end="47:31">0</literal></expr>)</condition><block type="pseudo" pos:start="49:7" pos:end="49:16"><block_content pos:start="49:7" pos:end="49:16">

      <return pos:start="49:7" pos:end="49:16">return <expr pos:start="49:14" pos:end="49:15"><operator pos:start="49:14" pos:end="49:14">-</operator><literal type="number" pos:start="49:15" pos:end="49:15">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:5">h</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:15">b_stride</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <literal type="number" pos:start="53:19" pos:end="53:19">4</literal><operator pos:start="53:20" pos:end="53:20">*</operator><name pos:start="53:21" pos:end="53:31"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:31">mb_width</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:21"><expr pos:start="57:5" pos:end="57:20"><call pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:16">alloc_tables</name> <argument_list pos:start="57:18" pos:end="57:20">(<argument pos:start="57:19" pos:end="57:19"><expr pos:start="57:19" pos:end="57:19"><name pos:start="57:19" pos:end="57:19">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:54">/* prowl for the "SEQH" marker in the extradata */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:50"><expr pos:start="63:5" pos:end="63:49"><name pos:start="63:5" pos:end="63:13">extradata</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <operator pos:start="63:17" pos:end="63:17">(</operator><name pos:start="63:18" pos:end="63:25">unsigned</name> <name pos:start="63:27" pos:end="63:30">char</name> <operator pos:start="63:32" pos:end="63:32">*</operator><operator pos:start="63:33" pos:end="63:33">)</operator><name pos:start="63:34" pos:end="63:49"><name pos:start="63:34" pos:end="63:38">avctx</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:49">extradata</name></name></expr>;</expr_stmt>

    <for pos:start="65:5" pos:end="73:5">for <control pos:start="65:9" pos:end="65:47">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">m</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:42"><expr pos:start="65:17" pos:end="65:41"><name pos:start="65:17" pos:end="65:17">m</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <name pos:start="65:21" pos:end="65:41"><name pos:start="65:21" pos:end="65:25">avctx</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:41">extradata_size</name></name></expr>;</condition> <incr pos:start="65:44" pos:end="65:46"><expr pos:start="65:44" pos:end="65:46"><name pos:start="65:44" pos:end="65:44">m</name><operator pos:start="65:45" pos:end="65:46">++</operator></expr></incr>)</control> <block pos:start="65:49" pos:end="73:5">{<block_content pos:start="67:7" pos:end="71:18">

      <if_stmt pos:start="67:7" pos:end="69:14"><if pos:start="67:7" pos:end="69:14">if <condition pos:start="67:10" pos:end="67:41">(<expr pos:start="67:11" pos:end="67:40"><operator pos:start="67:11" pos:end="67:11">!</operator><call pos:start="67:12" pos:end="67:40"><name pos:start="67:12" pos:end="67:17">memcmp</name> <argument_list pos:start="67:19" pos:end="67:40">(<argument pos:start="67:20" pos:end="67:28"><expr pos:start="67:20" pos:end="67:28"><name pos:start="67:20" pos:end="67:28">extradata</name></expr></argument>, <argument pos:start="67:31" pos:end="67:36"><expr pos:start="67:31" pos:end="67:36"><literal type="string" pos:start="67:31" pos:end="67:36">"SEQH"</literal></expr></argument>, <argument pos:start="67:39" pos:end="67:39"><expr pos:start="67:39" pos:end="67:39"><literal type="number" pos:start="67:39" pos:end="67:39">4</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:14"><block_content pos:start="69:9" pos:end="69:14">

        <break pos:start="69:9" pos:end="69:14">break;</break></block_content></block></if></if_stmt>

      <expr_stmt pos:start="71:7" pos:end="71:18"><expr pos:start="71:7" pos:end="71:17"><name pos:start="71:7" pos:end="71:15">extradata</name><operator pos:start="71:16" pos:end="71:17">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="77:5" pos:end="77:52">/* if a match was found, parse the extra data */</comment>

    <if_stmt pos:start="79:5" pos:end="145:5"><if pos:start="79:5" pos:end="145:5">if <condition pos:start="79:8" pos:end="79:52">(<expr pos:start="79:9" pos:end="79:51"><name pos:start="79:9" pos:end="79:17">extradata</name> <operator pos:start="79:19" pos:end="79:20">&amp;&amp;</operator> <operator pos:start="79:22" pos:end="79:22">!</operator><call pos:start="79:23" pos:end="79:51"><name pos:start="79:23" pos:end="79:28">memcmp</name> <argument_list pos:start="79:30" pos:end="79:51">(<argument pos:start="79:31" pos:end="79:39"><expr pos:start="79:31" pos:end="79:39"><name pos:start="79:31" pos:end="79:39">extradata</name></expr></argument>, <argument pos:start="79:42" pos:end="79:47"><expr pos:start="79:42" pos:end="79:47"><literal type="string" pos:start="79:42" pos:end="79:47">"SEQH"</literal></expr></argument>, <argument pos:start="79:50" pos:end="79:50"><expr pos:start="79:50" pos:end="79:50"><literal type="number" pos:start="79:50" pos:end="79:50">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:54" pos:end="145:5">{<block_content pos:start="83:7" pos:end="143:42">



      <decl_stmt pos:start="83:7" pos:end="83:23"><decl pos:start="83:7" pos:end="83:22"><type pos:start="83:7" pos:end="83:19"><name pos:start="83:7" pos:end="83:19">GetBitContext</name></type> <name pos:start="83:21" pos:end="83:22">gb</name></decl>;</decl_stmt>



      <expr_stmt pos:start="87:7" pos:end="87:36"><expr pos:start="87:7" pos:end="87:35"><name pos:start="87:7" pos:end="87:10">size</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <call pos:start="87:14" pos:end="87:35"><name pos:start="87:14" pos:end="87:20">AV_RB32</name><argument_list pos:start="87:21" pos:end="87:35">(<argument pos:start="87:22" pos:end="87:34"><expr pos:start="87:22" pos:end="87:34"><operator pos:start="87:22" pos:end="87:22">&amp;</operator><name pos:start="87:23" pos:end="87:34"><name pos:start="87:23" pos:end="87:31">extradata</name><index pos:start="87:32" pos:end="87:34">[<expr pos:start="87:33" pos:end="87:33"><literal type="number" pos:start="87:33" pos:end="87:33">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="89:7" pos:end="89:49"><expr pos:start="89:7" pos:end="89:48"><call pos:start="89:7" pos:end="89:48"><name pos:start="89:7" pos:end="89:19">init_get_bits</name> <argument_list pos:start="89:21" pos:end="89:48">(<argument pos:start="89:22" pos:end="89:24"><expr pos:start="89:22" pos:end="89:24"><operator pos:start="89:22" pos:end="89:22">&amp;</operator><name pos:start="89:23" pos:end="89:24">gb</name></expr></argument>, <argument pos:start="89:27" pos:end="89:39"><expr pos:start="89:27" pos:end="89:39"><name pos:start="89:27" pos:end="89:35">extradata</name> <operator pos:start="89:37" pos:end="89:37">+</operator> <literal type="number" pos:start="89:39" pos:end="89:39">8</literal></expr></argument>, <argument pos:start="89:42" pos:end="89:47"><expr pos:start="89:42" pos:end="89:47"><name pos:start="89:42" pos:end="89:45">size</name><operator pos:start="89:46" pos:end="89:46">*</operator><literal type="number" pos:start="89:47" pos:end="89:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <comment type="block" pos:start="93:7" pos:end="93:58">/* 'frame size code' and optional 'width, height' */</comment>

      <if_stmt pos:start="95:7" pos:end="101:7"><if pos:start="95:7" pos:end="101:7">if <condition pos:start="95:10" pos:end="95:33">(<expr pos:start="95:11" pos:end="95:32"><call pos:start="95:11" pos:end="95:27"><name pos:start="95:11" pos:end="95:18">get_bits</name> <argument_list pos:start="95:20" pos:end="95:27">(<argument pos:start="95:21" pos:end="95:23"><expr pos:start="95:21" pos:end="95:23"><operator pos:start="95:21" pos:end="95:21">&amp;</operator><name pos:start="95:22" pos:end="95:23">gb</name></expr></argument>, <argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><literal type="number" pos:start="95:26" pos:end="95:26">3</literal></expr></argument>)</argument_list></call> <operator pos:start="95:29" pos:end="95:30">==</operator> <literal type="number" pos:start="95:32" pos:end="95:32">7</literal></expr>)</condition> <block pos:start="95:35" pos:end="101:7">{<block_content pos:start="97:9" pos:end="99:27">

        <expr_stmt pos:start="97:9" pos:end="97:27"><expr pos:start="97:9" pos:end="97:26"><call pos:start="97:9" pos:end="97:26"><name pos:start="97:9" pos:end="97:16">get_bits</name> <argument_list pos:start="97:18" pos:end="97:26">(<argument pos:start="97:19" pos:end="97:21"><expr pos:start="97:19" pos:end="97:21"><operator pos:start="97:19" pos:end="97:19">&amp;</operator><name pos:start="97:20" pos:end="97:21">gb</name></expr></argument>, <argument pos:start="97:24" pos:end="97:25"><expr pos:start="97:24" pos:end="97:25"><literal type="number" pos:start="97:24" pos:end="97:25">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:27"><expr pos:start="99:9" pos:end="99:26"><call pos:start="99:9" pos:end="99:26"><name pos:start="99:9" pos:end="99:16">get_bits</name> <argument_list pos:start="99:18" pos:end="99:26">(<argument pos:start="99:19" pos:end="99:21"><expr pos:start="99:19" pos:end="99:21"><operator pos:start="99:19" pos:end="99:19">&amp;</operator><name pos:start="99:20" pos:end="99:21">gb</name></expr></argument>, <argument pos:start="99:24" pos:end="99:25"><expr pos:start="99:24" pos:end="99:25"><literal type="number" pos:start="99:24" pos:end="99:25">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></if></if_stmt>



      <expr_stmt pos:start="105:7" pos:end="105:40"><expr pos:start="105:7" pos:end="105:39"><name pos:start="105:7" pos:end="105:21"><name pos:start="105:7" pos:end="105:7">h</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:21">halfpel_flag</name></name> <operator pos:start="105:23" pos:end="105:23">=</operator> <call pos:start="105:25" pos:end="105:39"><name pos:start="105:25" pos:end="105:33">get_bits1</name> <argument_list pos:start="105:35" pos:end="105:39">(<argument pos:start="105:36" pos:end="105:38"><expr pos:start="105:36" pos:end="105:38"><operator pos:start="105:36" pos:end="105:36">&amp;</operator><name pos:start="105:37" pos:end="105:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="107:7" pos:end="107:41"><expr pos:start="107:7" pos:end="107:40"><name pos:start="107:7" pos:end="107:22"><name pos:start="107:7" pos:end="107:7">h</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:22">thirdpel_flag</name></name> <operator pos:start="107:24" pos:end="107:24">=</operator> <call pos:start="107:26" pos:end="107:40"><name pos:start="107:26" pos:end="107:34">get_bits1</name> <argument_list pos:start="107:36" pos:end="107:40">(<argument pos:start="107:37" pos:end="107:39"><expr pos:start="107:37" pos:end="107:39"><operator pos:start="107:37" pos:end="107:37">&amp;</operator><name pos:start="107:38" pos:end="107:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <comment type="block" pos:start="111:7" pos:end="111:26">/* unknown fields */</comment>

      <expr_stmt pos:start="113:7" pos:end="113:22"><expr pos:start="113:7" pos:end="113:21"><call pos:start="113:7" pos:end="113:21"><name pos:start="113:7" pos:end="113:15">get_bits1</name> <argument_list pos:start="113:17" pos:end="113:21">(<argument pos:start="113:18" pos:end="113:20"><expr pos:start="113:18" pos:end="113:20"><operator pos:start="113:18" pos:end="113:18">&amp;</operator><name pos:start="113:19" pos:end="113:20">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="115:7" pos:end="115:22"><expr pos:start="115:7" pos:end="115:21"><call pos:start="115:7" pos:end="115:21"><name pos:start="115:7" pos:end="115:15">get_bits1</name> <argument_list pos:start="115:17" pos:end="115:21">(<argument pos:start="115:18" pos:end="115:20"><expr pos:start="115:18" pos:end="115:20"><operator pos:start="115:18" pos:end="115:18">&amp;</operator><name pos:start="115:19" pos:end="115:20">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="117:7" pos:end="117:22"><expr pos:start="117:7" pos:end="117:21"><call pos:start="117:7" pos:end="117:21"><name pos:start="117:7" pos:end="117:15">get_bits1</name> <argument_list pos:start="117:17" pos:end="117:21">(<argument pos:start="117:18" pos:end="117:20"><expr pos:start="117:18" pos:end="117:20"><operator pos:start="117:18" pos:end="117:18">&amp;</operator><name pos:start="117:19" pos:end="117:20">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="119:7" pos:end="119:22"><expr pos:start="119:7" pos:end="119:21"><call pos:start="119:7" pos:end="119:21"><name pos:start="119:7" pos:end="119:15">get_bits1</name> <argument_list pos:start="119:17" pos:end="119:21">(<argument pos:start="119:18" pos:end="119:20"><expr pos:start="119:18" pos:end="119:20"><operator pos:start="119:18" pos:end="119:18">&amp;</operator><name pos:start="119:19" pos:end="119:20">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <expr_stmt pos:start="123:7" pos:end="123:37"><expr pos:start="123:7" pos:end="123:36"><name pos:start="123:7" pos:end="123:18"><name pos:start="123:7" pos:end="123:7">s</name><operator pos:start="123:8" pos:end="123:9">-&gt;</operator><name pos:start="123:10" pos:end="123:18">low_delay</name></name> <operator pos:start="123:20" pos:end="123:20">=</operator> <call pos:start="123:22" pos:end="123:36"><name pos:start="123:22" pos:end="123:30">get_bits1</name> <argument_list pos:start="123:32" pos:end="123:36">(<argument pos:start="123:33" pos:end="123:35"><expr pos:start="123:33" pos:end="123:35"><operator pos:start="123:33" pos:end="123:33">&amp;</operator><name pos:start="123:34" pos:end="123:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <comment type="block" pos:start="127:7" pos:end="127:25">/* unknown field */</comment>

      <expr_stmt pos:start="129:7" pos:end="129:22"><expr pos:start="129:7" pos:end="129:21"><call pos:start="129:7" pos:end="129:21"><name pos:start="129:7" pos:end="129:15">get_bits1</name> <argument_list pos:start="129:17" pos:end="129:21">(<argument pos:start="129:18" pos:end="129:20"><expr pos:start="129:18" pos:end="129:20"><operator pos:start="129:18" pos:end="129:18">&amp;</operator><name pos:start="129:19" pos:end="129:20">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <while pos:start="133:7" pos:end="137:7">while <condition pos:start="133:13" pos:end="133:29">(<expr pos:start="133:14" pos:end="133:28"><call pos:start="133:14" pos:end="133:28"><name pos:start="133:14" pos:end="133:22">get_bits1</name> <argument_list pos:start="133:24" pos:end="133:28">(<argument pos:start="133:25" pos:end="133:27"><expr pos:start="133:25" pos:end="133:27"><operator pos:start="133:25" pos:end="133:25">&amp;</operator><name pos:start="133:26" pos:end="133:27">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:31" pos:end="137:7">{<block_content pos:start="135:9" pos:end="135:26">

        <expr_stmt pos:start="135:9" pos:end="135:26"><expr pos:start="135:9" pos:end="135:25"><call pos:start="135:9" pos:end="135:25"><name pos:start="135:9" pos:end="135:16">get_bits</name> <argument_list pos:start="135:18" pos:end="135:25">(<argument pos:start="135:19" pos:end="135:21"><expr pos:start="135:19" pos:end="135:21"><operator pos:start="135:19" pos:end="135:19">&amp;</operator><name pos:start="135:20" pos:end="135:21">gb</name></expr></argument>, <argument pos:start="135:24" pos:end="135:24"><expr pos:start="135:24" pos:end="135:24"><literal type="number" pos:start="135:24" pos:end="135:24">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></while>



      <expr_stmt pos:start="141:7" pos:end="141:45"><expr pos:start="141:7" pos:end="141:44"><name pos:start="141:7" pos:end="141:26"><name pos:start="141:7" pos:end="141:7">h</name><operator pos:start="141:8" pos:end="141:9">-&gt;</operator><name pos:start="141:10" pos:end="141:26">unknown_svq3_flag</name></name> <operator pos:start="141:28" pos:end="141:28">=</operator> <call pos:start="141:30" pos:end="141:44"><name pos:start="141:30" pos:end="141:38">get_bits1</name> <argument_list pos:start="141:40" pos:end="141:44">(<argument pos:start="141:41" pos:end="141:43"><expr pos:start="141:41" pos:end="141:43"><operator pos:start="141:41" pos:end="141:41">&amp;</operator><name pos:start="141:42" pos:end="141:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="143:7" pos:end="143:42"><expr pos:start="143:7" pos:end="143:41"><name pos:start="143:7" pos:end="143:25"><name pos:start="143:7" pos:end="143:11">avctx</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:25">has_b_frames</name></name> <operator pos:start="143:27" pos:end="143:27">=</operator> <operator pos:start="143:29" pos:end="143:29">!</operator><name pos:start="143:30" pos:end="143:41"><name pos:start="143:30" pos:end="143:30">s</name><operator pos:start="143:31" pos:end="143:32">-&gt;</operator><name pos:start="143:33" pos:end="143:41">low_delay</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

  </block_content>}</block></if></if_stmt>



  <comment type="block" pos:start="151:3" pos:end="151:37">/* special case for last picture */</comment>

  <if_stmt pos:start="153:3" pos:end="165:3"><if pos:start="153:3" pos:end="165:3">if <condition pos:start="153:6" pos:end="153:20">(<expr pos:start="153:7" pos:end="153:19"><name pos:start="153:7" pos:end="153:14">buf_size</name> <operator pos:start="153:16" pos:end="153:17">==</operator> <literal type="number" pos:start="153:19" pos:end="153:19">0</literal></expr>)</condition> <block pos:start="153:22" pos:end="165:3">{<block_content pos:start="155:5" pos:end="163:13">

    <if_stmt pos:start="155:5" pos:end="161:5"><if pos:start="155:5" pos:end="161:5">if <condition pos:start="155:8" pos:end="155:45">(<expr pos:start="155:9" pos:end="155:44"><name pos:start="155:9" pos:end="155:27"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:27">next_picture_ptr</name></name> <operator pos:start="155:29" pos:end="155:30">&amp;&amp;</operator> <operator pos:start="155:32" pos:end="155:32">!</operator><name pos:start="155:33" pos:end="155:44"><name pos:start="155:33" pos:end="155:33">s</name><operator pos:start="155:34" pos:end="155:35">-&gt;</operator><name pos:start="155:36" pos:end="155:44">low_delay</name></name></expr>)</condition> <block pos:start="155:47" pos:end="161:5">{<block_content pos:start="157:7" pos:end="159:35">

      <expr_stmt pos:start="157:7" pos:end="157:56"><expr pos:start="157:7" pos:end="157:55"><operator pos:start="157:7" pos:end="157:7">*</operator><operator pos:start="157:8" pos:end="157:8">(</operator><name pos:start="157:9" pos:end="157:15">AVFrame</name> <operator pos:start="157:17" pos:end="157:17">*</operator><operator pos:start="157:18" pos:end="157:18">)</operator> <name pos:start="157:20" pos:end="157:23">data</name> <operator pos:start="157:25" pos:end="157:25">=</operator> <operator pos:start="157:27" pos:end="157:27">*</operator><operator pos:start="157:28" pos:end="157:28">(</operator><name pos:start="157:29" pos:end="157:35">AVFrame</name> <operator pos:start="157:37" pos:end="157:37">*</operator><operator pos:start="157:38" pos:end="157:38">)</operator> <operator pos:start="157:40" pos:end="157:40">&amp;</operator><name pos:start="157:41" pos:end="157:55"><name pos:start="157:41" pos:end="157:41">s</name><operator pos:start="157:42" pos:end="157:43">-&gt;</operator><name pos:start="157:44" pos:end="157:55">next_picture</name></name></expr>;</expr_stmt>

      <expr_stmt pos:start="159:7" pos:end="159:35"><expr pos:start="159:7" pos:end="159:34"><operator pos:start="159:7" pos:end="159:7">*</operator><name pos:start="159:8" pos:end="159:16">data_size</name> <operator pos:start="159:18" pos:end="159:18">=</operator> <sizeof pos:start="159:20" pos:end="159:34">sizeof<argument_list pos:start="159:26" pos:end="159:34">(<argument pos:start="159:27" pos:end="159:33"><expr pos:start="159:27" pos:end="159:33"><name pos:start="159:27" pos:end="159:33">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="163:5" pos:end="163:13">return <expr pos:start="163:12" pos:end="163:12"><literal type="number" pos:start="163:12" pos:end="163:12">0</literal></expr>;</return>

  </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="169:3" pos:end="169:42"><expr pos:start="169:3" pos:end="169:41"><call pos:start="169:3" pos:end="169:41"><name pos:start="169:3" pos:end="169:15">init_get_bits</name> <argument_list pos:start="169:17" pos:end="169:41">(<argument pos:start="169:18" pos:end="169:23"><expr pos:start="169:18" pos:end="169:23"><operator pos:start="169:18" pos:end="169:18">&amp;</operator><name pos:start="169:19" pos:end="169:23"><name pos:start="169:19" pos:end="169:19">s</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:23">gb</name></name></expr></argument>, <argument pos:start="169:26" pos:end="169:28"><expr pos:start="169:26" pos:end="169:28"><name pos:start="169:26" pos:end="169:28">buf</name></expr></argument>, <argument pos:start="169:31" pos:end="169:40"><expr pos:start="169:31" pos:end="169:40"><literal type="number" pos:start="169:31" pos:end="169:31">8</literal><operator pos:start="169:32" pos:end="169:32">*</operator><name pos:start="169:33" pos:end="169:40">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <expr_stmt pos:start="173:3" pos:end="173:24"><expr pos:start="173:3" pos:end="173:23"><name pos:start="173:3" pos:end="173:9"><name pos:start="173:3" pos:end="173:3">s</name><operator pos:start="173:4" pos:end="173:5">-&gt;</operator><name pos:start="173:6" pos:end="173:9">mb_x</name></name> <operator pos:start="173:11" pos:end="173:11">=</operator> <name pos:start="173:13" pos:end="173:19"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:19">mb_y</name></name> <operator pos:start="173:21" pos:end="173:21">=</operator> <literal type="number" pos:start="173:23" pos:end="173:23">0</literal></expr>;</expr_stmt>



  <if_stmt pos:start="177:3" pos:end="179:14"><if pos:start="177:3" pos:end="179:14">if <condition pos:start="177:6" pos:end="177:35">(<expr pos:start="177:7" pos:end="177:34"><call pos:start="177:7" pos:end="177:34"><name pos:start="177:7" pos:end="177:30">svq3_decode_slice_header</name> <argument_list pos:start="177:32" pos:end="177:34">(<argument pos:start="177:33" pos:end="177:33"><expr pos:start="177:33" pos:end="177:33"><name pos:start="177:33" pos:end="177:33">h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="179:5" pos:end="179:14"><block_content pos:start="179:5" pos:end="179:14">

    <return pos:start="179:5" pos:end="179:14">return <expr pos:start="179:12" pos:end="179:13"><operator pos:start="179:12" pos:end="179:12">-</operator><literal type="number" pos:start="179:13" pos:end="179:13">1</literal></expr>;</return></block_content></block></if></if_stmt>



  <expr_stmt pos:start="183:3" pos:end="183:31"><expr pos:start="183:3" pos:end="183:30"><name pos:start="183:3" pos:end="183:14"><name pos:start="183:3" pos:end="183:3">s</name><operator pos:start="183:4" pos:end="183:5">-&gt;</operator><name pos:start="183:6" pos:end="183:14">pict_type</name></name> <operator pos:start="183:16" pos:end="183:16">=</operator> <name pos:start="183:18" pos:end="183:30"><name pos:start="183:18" pos:end="183:18">h</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:30">slice_type</name></name></expr>;</expr_stmt>

  <expr_stmt pos:start="185:3" pos:end="185:35"><expr pos:start="185:3" pos:end="185:34"><name pos:start="185:3" pos:end="185:19"><name pos:start="185:3" pos:end="185:3">s</name><operator pos:start="185:4" pos:end="185:5">-&gt;</operator><name pos:start="185:6" pos:end="185:19">picture_number</name></name> <operator pos:start="185:21" pos:end="185:21">=</operator> <name pos:start="185:23" pos:end="185:34"><name pos:start="185:23" pos:end="185:23">h</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:34">slice_num</name></name></expr>;</expr_stmt>



  <if_stmt pos:start="189:3" pos:end="199:3"><if pos:start="189:3" pos:end="199:3">if<condition pos:start="189:5" pos:end="189:37">(<expr pos:start="189:6" pos:end="189:36"><name pos:start="189:6" pos:end="189:17"><name pos:start="189:6" pos:end="189:10">avctx</name><operator pos:start="189:11" pos:end="189:12">-&gt;</operator><name pos:start="189:13" pos:end="189:17">debug</name></name><operator pos:start="189:18" pos:end="189:18">&amp;</operator><name pos:start="189:19" pos:end="189:36">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="189:38" pos:end="199:3">{<block_content pos:start="191:7" pos:end="197:8">

      <expr_stmt pos:start="191:7" pos:end="197:8"><expr pos:start="191:7" pos:end="197:7"><call pos:start="191:7" pos:end="197:7"><name pos:start="191:7" pos:end="191:12">av_log</name><argument_list pos:start="191:13" pos:end="197:7">(<argument pos:start="191:14" pos:end="191:23"><expr pos:start="191:14" pos:end="191:23"><name pos:start="191:14" pos:end="191:23"><name pos:start="191:14" pos:end="191:14">h</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:17">s</name><operator pos:start="191:18" pos:end="191:18">.</operator><name pos:start="191:19" pos:end="191:23">avctx</name></name></expr></argument>, <argument pos:start="191:26" pos:end="191:37"><expr pos:start="191:26" pos:end="191:37"><name pos:start="191:26" pos:end="191:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="191:40" pos:end="191:75"><expr pos:start="191:40" pos:end="191:75"><literal type="string" pos:start="191:40" pos:end="191:75">"%c hpel:%d, tpel:%d aqp:%d qp:%d\n"</literal></expr></argument>,

      <argument pos:start="193:7" pos:end="193:41"><expr pos:start="193:7" pos:end="193:41"><call pos:start="193:7" pos:end="193:41"><name pos:start="193:7" pos:end="193:27">av_get_pict_type_char</name><argument_list pos:start="193:28" pos:end="193:41">(<argument pos:start="193:29" pos:end="193:40"><expr pos:start="193:29" pos:end="193:40"><name pos:start="193:29" pos:end="193:40"><name pos:start="193:29" pos:end="193:29">s</name><operator pos:start="193:30" pos:end="193:31">-&gt;</operator><name pos:start="193:32" pos:end="193:40">pict_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="193:44" pos:end="193:58"><expr pos:start="193:44" pos:end="193:58"><name pos:start="193:44" pos:end="193:58"><name pos:start="193:44" pos:end="193:44">h</name><operator pos:start="193:45" pos:end="193:46">-&gt;</operator><name pos:start="193:47" pos:end="193:58">halfpel_flag</name></name></expr></argument>, <argument pos:start="193:61" pos:end="193:76"><expr pos:start="193:61" pos:end="193:76"><name pos:start="193:61" pos:end="193:76"><name pos:start="193:61" pos:end="193:61">h</name><operator pos:start="193:62" pos:end="193:63">-&gt;</operator><name pos:start="193:64" pos:end="193:76">thirdpel_flag</name></name></expr></argument>,

      <argument pos:start="195:7" pos:end="195:23"><expr pos:start="195:7" pos:end="195:23"><name pos:start="195:7" pos:end="195:23"><name pos:start="195:7" pos:end="195:7">s</name><operator pos:start="195:8" pos:end="195:9">-&gt;</operator><name pos:start="195:10" pos:end="195:23">adaptive_quant</name></name></expr></argument>, <argument pos:start="195:26" pos:end="195:34"><expr pos:start="195:26" pos:end="195:34"><name pos:start="195:26" pos:end="195:34"><name pos:start="195:26" pos:end="195:26">s</name><operator pos:start="195:27" pos:end="195:28">-&gt;</operator><name pos:start="195:29" pos:end="195:34">qscale</name></name></expr></argument>

      )</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></if></if_stmt>



  <comment type="block" pos:start="203:3" pos:end="203:23">/* for hurry_up==5 */</comment>

  <expr_stmt pos:start="205:3" pos:end="205:46"><expr pos:start="205:3" pos:end="205:45"><name pos:start="205:3" pos:end="205:30"><name pos:start="205:3" pos:end="205:3">s</name><operator pos:start="205:4" pos:end="205:5">-&gt;</operator><name pos:start="205:6" pos:end="205:20">current_picture</name><operator pos:start="205:21" pos:end="205:21">.</operator><name pos:start="205:22" pos:end="205:30">pict_type</name></name> <operator pos:start="205:32" pos:end="205:32">=</operator> <name pos:start="205:34" pos:end="205:45"><name pos:start="205:34" pos:end="205:34">s</name><operator pos:start="205:35" pos:end="205:36">-&gt;</operator><name pos:start="205:37" pos:end="205:45">pict_type</name></name></expr>;</expr_stmt>

  <expr_stmt pos:start="207:3" pos:end="207:58"><expr pos:start="207:3" pos:end="207:57"><name pos:start="207:3" pos:end="207:30"><name pos:start="207:3" pos:end="207:3">s</name><operator pos:start="207:4" pos:end="207:5">-&gt;</operator><name pos:start="207:6" pos:end="207:20">current_picture</name><operator pos:start="207:21" pos:end="207:21">.</operator><name pos:start="207:22" pos:end="207:30">key_frame</name></name> <operator pos:start="207:32" pos:end="207:32">=</operator> <operator pos:start="207:34" pos:end="207:34">(</operator><name pos:start="207:35" pos:end="207:46"><name pos:start="207:35" pos:end="207:35">s</name><operator pos:start="207:36" pos:end="207:37">-&gt;</operator><name pos:start="207:38" pos:end="207:46">pict_type</name></name> <operator pos:start="207:48" pos:end="207:49">==</operator> <name pos:start="207:51" pos:end="207:56">I_TYPE</name><operator pos:start="207:57" pos:end="207:57">)</operator></expr>;</expr_stmt>



  <comment type="block" pos:start="211:3" pos:end="211:54">/* skip b frames if we dont have reference frames */</comment>

  <if_stmt pos:start="213:3" pos:end="213:70"><if pos:start="213:3" pos:end="213:70">if <condition pos:start="213:6" pos:end="213:60">(<expr pos:start="213:7" pos:end="213:59"><name pos:start="213:7" pos:end="213:25"><name pos:start="213:7" pos:end="213:7">s</name><operator pos:start="213:8" pos:end="213:9">-&gt;</operator><name pos:start="213:10" pos:end="213:25">last_picture_ptr</name></name> <operator pos:start="213:27" pos:end="213:28">==</operator> <name pos:start="213:30" pos:end="213:33">NULL</name> <operator pos:start="213:35" pos:end="213:36">&amp;&amp;</operator> <name pos:start="213:38" pos:end="213:49"><name pos:start="213:38" pos:end="213:38">s</name><operator pos:start="213:39" pos:end="213:40">-&gt;</operator><name pos:start="213:41" pos:end="213:49">pict_type</name></name> <operator pos:start="213:51" pos:end="213:52">==</operator> <name pos:start="213:54" pos:end="213:59">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="213:62" pos:end="213:70"><block_content pos:start="213:62" pos:end="213:70"> <return pos:start="213:62" pos:end="213:70">return <expr pos:start="213:69" pos:end="213:69"><literal type="number" pos:start="213:69" pos:end="213:69">0</literal></expr>;</return></block_content></block></if></if_stmt>

  <comment type="block" pos:start="215:3" pos:end="215:42">/* skip b frames if we are in a hurry */</comment>

  <if_stmt pos:start="217:3" pos:end="217:58"><if pos:start="217:3" pos:end="217:58">if <condition pos:start="217:6" pos:end="217:48">(<expr pos:start="217:7" pos:end="217:47"><name pos:start="217:7" pos:end="217:21"><name pos:start="217:7" pos:end="217:11">avctx</name><operator pos:start="217:12" pos:end="217:13">-&gt;</operator><name pos:start="217:14" pos:end="217:21">hurry_up</name></name> <operator pos:start="217:23" pos:end="217:24">&amp;&amp;</operator> <name pos:start="217:26" pos:end="217:37"><name pos:start="217:26" pos:end="217:26">s</name><operator pos:start="217:27" pos:end="217:28">-&gt;</operator><name pos:start="217:29" pos:end="217:37">pict_type</name></name> <operator pos:start="217:39" pos:end="217:40">==</operator> <name pos:start="217:42" pos:end="217:47">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="217:50" pos:end="217:58"><block_content pos:start="217:50" pos:end="217:58"> <return pos:start="217:50" pos:end="217:58">return <expr pos:start="217:57" pos:end="217:57"><literal type="number" pos:start="217:57" pos:end="217:57">0</literal></expr>;</return></block_content></block></if></if_stmt>

  <comment type="block" pos:start="219:3" pos:end="219:49">/* skip everything if we are in a hurry &gt;= 5 */</comment>

  <if_stmt pos:start="221:3" pos:end="221:37"><if pos:start="221:3" pos:end="221:37">if <condition pos:start="221:6" pos:end="221:27">(<expr pos:start="221:7" pos:end="221:26"><name pos:start="221:7" pos:end="221:21"><name pos:start="221:7" pos:end="221:11">avctx</name><operator pos:start="221:12" pos:end="221:13">-&gt;</operator><name pos:start="221:14" pos:end="221:21">hurry_up</name></name> <operator pos:start="221:23" pos:end="221:24">&gt;=</operator> <literal type="number" pos:start="221:26" pos:end="221:26">5</literal></expr>)</condition><block type="pseudo" pos:start="221:29" pos:end="221:37"><block_content pos:start="221:29" pos:end="221:37"> <return pos:start="221:29" pos:end="221:37">return <expr pos:start="221:36" pos:end="221:36"><literal type="number" pos:start="221:36" pos:end="221:36">0</literal></expr>;</return></block_content></block></if></if_stmt>

  <if_stmt pos:start="223:3" pos:end="229:15"><if pos:start="223:3" pos:end="229:15">if<condition pos:start="223:5" pos:end="227:43">(  <expr pos:start="223:8" pos:end="227:42"><operator pos:start="223:8" pos:end="223:8">(</operator><name pos:start="223:9" pos:end="223:25"><name pos:start="223:9" pos:end="223:13">avctx</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:25">skip_frame</name></name> <operator pos:start="223:27" pos:end="223:28">&gt;=</operator> <name pos:start="223:30" pos:end="223:45">AVDISCARD_NONREF</name> <operator pos:start="223:47" pos:end="223:48">&amp;&amp;</operator> <name pos:start="223:50" pos:end="223:61"><name pos:start="223:50" pos:end="223:50">s</name><operator pos:start="223:51" pos:end="223:52">-&gt;</operator><name pos:start="223:53" pos:end="223:61">pict_type</name></name><operator pos:start="223:62" pos:end="223:63">==</operator><name pos:start="223:64" pos:end="223:69">B_TYPE</name><operator pos:start="223:70" pos:end="223:70">)</operator>

     <operator pos:start="225:6" pos:end="225:7">||</operator><operator pos:start="225:8" pos:end="225:8">(</operator><name pos:start="225:9" pos:end="225:25"><name pos:start="225:9" pos:end="225:13">avctx</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:25">skip_frame</name></name> <operator pos:start="225:27" pos:end="225:28">&gt;=</operator> <name pos:start="225:30" pos:end="225:45">AVDISCARD_NONKEY</name> <operator pos:start="225:47" pos:end="225:48">&amp;&amp;</operator> <name pos:start="225:50" pos:end="225:61"><name pos:start="225:50" pos:end="225:50">s</name><operator pos:start="225:51" pos:end="225:52">-&gt;</operator><name pos:start="225:53" pos:end="225:61">pict_type</name></name><operator pos:start="225:62" pos:end="225:63">!=</operator><name pos:start="225:64" pos:end="225:69">I_TYPE</name><operator pos:start="225:70" pos:end="225:70">)</operator>

     <operator pos:start="227:6" pos:end="227:7">||</operator> <name pos:start="227:9" pos:end="227:25"><name pos:start="227:9" pos:end="227:13">avctx</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:25">skip_frame</name></name> <operator pos:start="227:27" pos:end="227:28">&gt;=</operator> <name pos:start="227:30" pos:end="227:42">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="229:7" pos:end="229:15"><block_content pos:start="229:7" pos:end="229:15">

      <return pos:start="229:7" pos:end="229:15">return <expr pos:start="229:14" pos:end="229:14"><literal type="number" pos:start="229:14" pos:end="229:14">0</literal></expr>;</return></block_content></block></if></if_stmt>



  <if_stmt pos:start="233:3" pos:end="243:3"><if pos:start="233:3" pos:end="243:3">if <condition pos:start="233:6" pos:end="233:30">(<expr pos:start="233:7" pos:end="233:29"><name pos:start="233:7" pos:end="233:29"><name pos:start="233:7" pos:end="233:7">s</name><operator pos:start="233:8" pos:end="233:9">-&gt;</operator><name pos:start="233:10" pos:end="233:29">next_p_frame_damaged</name></name></expr>)</condition> <block pos:start="233:32" pos:end="243:3">{<block_content pos:start="235:5" pos:end="241:34">

    <if_stmt pos:start="235:5" pos:end="241:34"><if pos:start="235:5" pos:end="237:15">if <condition pos:start="235:8" pos:end="235:31">(<expr pos:start="235:9" pos:end="235:30"><name pos:start="235:9" pos:end="235:20"><name pos:start="235:9" pos:end="235:9">s</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:20">pict_type</name></name> <operator pos:start="235:22" pos:end="235:23">==</operator> <name pos:start="235:25" pos:end="235:30">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="237:7" pos:end="237:15"><block_content pos:start="237:7" pos:end="237:15">

      <return pos:start="237:7" pos:end="237:15">return <expr pos:start="237:14" pos:end="237:14"><literal type="number" pos:start="237:14" pos:end="237:14">0</literal></expr>;</return></block_content></block></if>

    <else pos:start="239:5" pos:end="241:34">else<block type="pseudo" pos:start="241:7" pos:end="241:34"><block_content pos:start="241:7" pos:end="241:34">

      <expr_stmt pos:start="241:7" pos:end="241:34"><expr pos:start="241:7" pos:end="241:33"><name pos:start="241:7" pos:end="241:29"><name pos:start="241:7" pos:end="241:7">s</name><operator pos:start="241:8" pos:end="241:9">-&gt;</operator><name pos:start="241:10" pos:end="241:29">next_p_frame_damaged</name></name> <operator pos:start="241:31" pos:end="241:31">=</operator> <literal type="number" pos:start="241:33" pos:end="241:33">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

  </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="247:3" pos:end="247:18"><expr pos:start="247:3" pos:end="247:17"><call pos:start="247:3" pos:end="247:17"><name pos:start="247:3" pos:end="247:13">frame_start</name> <argument_list pos:start="247:15" pos:end="247:17">(<argument pos:start="247:16" pos:end="247:16"><expr pos:start="247:16" pos:end="247:16"><name pos:start="247:16" pos:end="247:16">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <if_stmt pos:start="251:3" pos:end="287:3"><if pos:start="251:3" pos:end="271:3">if <condition pos:start="251:6" pos:end="251:29">(<expr pos:start="251:7" pos:end="251:28"><name pos:start="251:7" pos:end="251:18"><name pos:start="251:7" pos:end="251:7">s</name><operator pos:start="251:8" pos:end="251:9">-&gt;</operator><name pos:start="251:10" pos:end="251:18">pict_type</name></name> <operator pos:start="251:20" pos:end="251:21">==</operator> <name pos:start="251:23" pos:end="251:28">B_TYPE</name></expr>)</condition> <block pos:start="251:31" pos:end="271:3">{<block_content pos:start="253:5" pos:end="269:5">

    <expr_stmt pos:start="253:5" pos:end="253:61"><expr pos:start="253:5" pos:end="253:60"><name pos:start="253:5" pos:end="253:23"><name pos:start="253:5" pos:end="253:5">h</name><operator pos:start="253:6" pos:end="253:7">-&gt;</operator><name pos:start="253:8" pos:end="253:23">frame_num_offset</name></name> <operator pos:start="253:25" pos:end="253:25">=</operator> <operator pos:start="253:27" pos:end="253:27">(</operator><name pos:start="253:28" pos:end="253:39"><name pos:start="253:28" pos:end="253:28">h</name><operator pos:start="253:29" pos:end="253:30">-&gt;</operator><name pos:start="253:31" pos:end="253:39">slice_num</name></name> <operator pos:start="253:41" pos:end="253:41">-</operator> <name pos:start="253:43" pos:end="253:59"><name pos:start="253:43" pos:end="253:43">h</name><operator pos:start="253:44" pos:end="253:45">-&gt;</operator><name pos:start="253:46" pos:end="253:59">prev_frame_num</name></name><operator pos:start="253:60" pos:end="253:60">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="257:5" pos:end="261:5"><if pos:start="257:5" pos:end="261:5">if <condition pos:start="257:8" pos:end="257:32">(<expr pos:start="257:9" pos:end="257:31"><name pos:start="257:9" pos:end="257:27"><name pos:start="257:9" pos:end="257:9">h</name><operator pos:start="257:10" pos:end="257:11">-&gt;</operator><name pos:start="257:12" pos:end="257:27">frame_num_offset</name></name> <operator pos:start="257:29" pos:end="257:29">&lt;</operator> <literal type="number" pos:start="257:31" pos:end="257:31">0</literal></expr>)</condition> <block pos:start="257:34" pos:end="261:5">{<block_content pos:start="259:7" pos:end="259:33">

      <expr_stmt pos:start="259:7" pos:end="259:33"><expr pos:start="259:7" pos:end="259:32"><name pos:start="259:7" pos:end="259:25"><name pos:start="259:7" pos:end="259:7">h</name><operator pos:start="259:8" pos:end="259:9">-&gt;</operator><name pos:start="259:10" pos:end="259:25">frame_num_offset</name></name> <operator pos:start="259:27" pos:end="259:28">+=</operator> <literal type="number" pos:start="259:30" pos:end="259:32">256</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="263:5" pos:end="269:5"><if pos:start="263:5" pos:end="269:5">if <condition pos:start="263:8" pos:end="263:84">(<expr pos:start="263:9" pos:end="263:83"><name pos:start="263:9" pos:end="263:27"><name pos:start="263:9" pos:end="263:9">h</name><operator pos:start="263:10" pos:end="263:11">-&gt;</operator><name pos:start="263:12" pos:end="263:27">frame_num_offset</name></name> <operator pos:start="263:29" pos:end="263:30">==</operator> <literal type="number" pos:start="263:32" pos:end="263:32">0</literal> <operator pos:start="263:34" pos:end="263:35">||</operator> <name pos:start="263:37" pos:end="263:55"><name pos:start="263:37" pos:end="263:37">h</name><operator pos:start="263:38" pos:end="263:39">-&gt;</operator><name pos:start="263:40" pos:end="263:55">frame_num_offset</name></name> <operator pos:start="263:57" pos:end="263:58">&gt;=</operator> <name pos:start="263:60" pos:end="263:83"><name pos:start="263:60" pos:end="263:60">h</name><operator pos:start="263:61" pos:end="263:62">-&gt;</operator><name pos:start="263:63" pos:end="263:83">prev_frame_num_offset</name></name></expr>)</condition> <block pos:start="263:86" pos:end="269:5">{<block_content pos:start="265:7" pos:end="267:16">

      <expr_stmt pos:start="265:7" pos:end="265:72"><expr pos:start="265:7" pos:end="265:71"><call pos:start="265:7" pos:end="265:71"><name pos:start="265:7" pos:end="265:12">av_log</name><argument_list pos:start="265:13" pos:end="265:71">(<argument pos:start="265:14" pos:end="265:23"><expr pos:start="265:14" pos:end="265:23"><name pos:start="265:14" pos:end="265:23"><name pos:start="265:14" pos:end="265:14">h</name><operator pos:start="265:15" pos:end="265:16">-&gt;</operator><name pos:start="265:17" pos:end="265:17">s</name><operator pos:start="265:18" pos:end="265:18">.</operator><name pos:start="265:19" pos:end="265:23">avctx</name></name></expr></argument>, <argument pos:start="265:26" pos:end="265:37"><expr pos:start="265:26" pos:end="265:37"><name pos:start="265:26" pos:end="265:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="265:40" pos:end="265:70"><expr pos:start="265:40" pos:end="265:70"><literal type="string" pos:start="265:40" pos:end="265:70">"error in B-frame picture id\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="267:7" pos:end="267:16">return <expr pos:start="267:14" pos:end="267:15"><operator pos:start="267:14" pos:end="267:14">-</operator><literal type="number" pos:start="267:15" pos:end="267:15">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

  </block_content>}</block></if> <else pos:start="271:5" pos:end="287:3">else <block pos:start="271:10" pos:end="287:3">{<block_content pos:start="273:5" pos:end="285:5">

    <expr_stmt pos:start="273:5" pos:end="273:37"><expr pos:start="273:5" pos:end="273:36"><name pos:start="273:5" pos:end="273:21"><name pos:start="273:5" pos:end="273:5">h</name><operator pos:start="273:6" pos:end="273:7">-&gt;</operator><name pos:start="273:8" pos:end="273:21">prev_frame_num</name></name> <operator pos:start="273:23" pos:end="273:23">=</operator> <name pos:start="273:25" pos:end="273:36"><name pos:start="273:25" pos:end="273:25">h</name><operator pos:start="273:26" pos:end="273:27">-&gt;</operator><name pos:start="273:28" pos:end="273:36">frame_num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="275:5" pos:end="275:32"><expr pos:start="275:5" pos:end="275:31"><name pos:start="275:5" pos:end="275:16"><name pos:start="275:5" pos:end="275:5">h</name><operator pos:start="275:6" pos:end="275:7">-&gt;</operator><name pos:start="275:8" pos:end="275:16">frame_num</name></name> <operator pos:start="275:18" pos:end="275:18">=</operator> <name pos:start="275:20" pos:end="275:31"><name pos:start="275:20" pos:end="275:20">h</name><operator pos:start="275:21" pos:end="275:22">-&gt;</operator><name pos:start="275:23" pos:end="275:31">slice_num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:66"><expr pos:start="277:5" pos:end="277:65"><name pos:start="277:5" pos:end="277:28"><name pos:start="277:5" pos:end="277:5">h</name><operator pos:start="277:6" pos:end="277:7">-&gt;</operator><name pos:start="277:8" pos:end="277:28">prev_frame_num_offset</name></name> <operator pos:start="277:30" pos:end="277:30">=</operator> <operator pos:start="277:32" pos:end="277:32">(</operator><name pos:start="277:33" pos:end="277:44"><name pos:start="277:33" pos:end="277:33">h</name><operator pos:start="277:34" pos:end="277:35">-&gt;</operator><name pos:start="277:36" pos:end="277:44">frame_num</name></name> <operator pos:start="277:46" pos:end="277:46">-</operator> <name pos:start="277:48" pos:end="277:64"><name pos:start="277:48" pos:end="277:48">h</name><operator pos:start="277:49" pos:end="277:50">-&gt;</operator><name pos:start="277:51" pos:end="277:64">prev_frame_num</name></name><operator pos:start="277:65" pos:end="277:65">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="281:5" pos:end="285:5"><if pos:start="281:5" pos:end="285:5">if <condition pos:start="281:8" pos:end="281:37">(<expr pos:start="281:9" pos:end="281:36"><name pos:start="281:9" pos:end="281:32"><name pos:start="281:9" pos:end="281:9">h</name><operator pos:start="281:10" pos:end="281:11">-&gt;</operator><name pos:start="281:12" pos:end="281:32">prev_frame_num_offset</name></name> <operator pos:start="281:34" pos:end="281:34">&lt;</operator> <literal type="number" pos:start="281:36" pos:end="281:36">0</literal></expr>)</condition> <block pos:start="281:39" pos:end="285:5">{<block_content pos:start="283:7" pos:end="283:38">

      <expr_stmt pos:start="283:7" pos:end="283:38"><expr pos:start="283:7" pos:end="283:37"><name pos:start="283:7" pos:end="283:30"><name pos:start="283:7" pos:end="283:7">h</name><operator pos:start="283:8" pos:end="283:9">-&gt;</operator><name pos:start="283:10" pos:end="283:30">prev_frame_num_offset</name></name> <operator pos:start="283:32" pos:end="283:33">+=</operator> <literal type="number" pos:start="283:35" pos:end="283:37">256</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

  </block_content>}</block></else></if_stmt>



  <for pos:start="291:3" pos:end="307:3">for<control pos:start="291:6" pos:end="291:20">(<init pos:start="291:7" pos:end="291:10"><expr pos:start="291:7" pos:end="291:9"><name pos:start="291:7" pos:end="291:7">m</name><operator pos:start="291:8" pos:end="291:8">=</operator><literal type="number" pos:start="291:9" pos:end="291:9">0</literal></expr>;</init> <condition pos:start="291:12" pos:end="291:15"><expr pos:start="291:12" pos:end="291:14"><name pos:start="291:12" pos:end="291:12">m</name><operator pos:start="291:13" pos:end="291:13">&lt;</operator><literal type="number" pos:start="291:14" pos:end="291:14">2</literal></expr>;</condition> <incr pos:start="291:17" pos:end="291:19"><expr pos:start="291:17" pos:end="291:19"><name pos:start="291:17" pos:end="291:17">m</name><operator pos:start="291:18" pos:end="291:19">++</operator></expr></incr>)</control><block pos:start="291:21" pos:end="307:3">{<block_content pos:start="293:5" pos:end="305:5">

    <decl_stmt pos:start="293:5" pos:end="293:10"><decl pos:start="293:5" pos:end="293:9"><type pos:start="293:5" pos:end="293:7"><name pos:start="293:5" pos:end="293:7">int</name></type> <name pos:start="293:9" pos:end="293:9">i</name></decl>;</decl_stmt>

    <for pos:start="295:5" pos:end="305:5">for<control pos:start="295:8" pos:end="295:22">(<init pos:start="295:9" pos:end="295:12"><expr pos:start="295:9" pos:end="295:11"><name pos:start="295:9" pos:end="295:9">i</name><operator pos:start="295:10" pos:end="295:10">=</operator><literal type="number" pos:start="295:11" pos:end="295:11">0</literal></expr>;</init> <condition pos:start="295:14" pos:end="295:17"><expr pos:start="295:14" pos:end="295:16"><name pos:start="295:14" pos:end="295:14">i</name><operator pos:start="295:15" pos:end="295:15">&lt;</operator><literal type="number" pos:start="295:16" pos:end="295:16">4</literal></expr>;</condition> <incr pos:start="295:19" pos:end="295:21"><expr pos:start="295:19" pos:end="295:21"><name pos:start="295:19" pos:end="295:19">i</name><operator pos:start="295:20" pos:end="295:21">++</operator></expr></incr>)</control><block pos:start="295:23" pos:end="305:5">{<block_content pos:start="297:7" pos:end="303:62">

      <decl_stmt pos:start="297:7" pos:end="297:12"><decl pos:start="297:7" pos:end="297:11"><type pos:start="297:7" pos:end="297:9"><name pos:start="297:7" pos:end="297:9">int</name></type> <name pos:start="297:11" pos:end="297:11">j</name></decl>;</decl_stmt>

      <for pos:start="299:7" pos:end="301:47">for<control pos:start="299:10" pos:end="299:25">(<init pos:start="299:11" pos:end="299:15"><expr pos:start="299:11" pos:end="299:14"><name pos:start="299:11" pos:end="299:11">j</name><operator pos:start="299:12" pos:end="299:12">=</operator><operator pos:start="299:13" pos:end="299:13">-</operator><literal type="number" pos:start="299:14" pos:end="299:14">1</literal></expr>;</init> <condition pos:start="299:17" pos:end="299:20"><expr pos:start="299:17" pos:end="299:19"><name pos:start="299:17" pos:end="299:17">j</name><operator pos:start="299:18" pos:end="299:18">&lt;</operator><literal type="number" pos:start="299:19" pos:end="299:19">4</literal></expr>;</condition> <incr pos:start="299:22" pos:end="299:24"><expr pos:start="299:22" pos:end="299:24"><name pos:start="299:22" pos:end="299:22">j</name><operator pos:start="299:23" pos:end="299:24">++</operator></expr></incr>)</control><block type="pseudo" pos:start="301:9" pos:end="301:47"><block_content pos:start="301:9" pos:end="301:47">

        <expr_stmt pos:start="301:9" pos:end="301:47"><expr pos:start="301:9" pos:end="301:46"><name pos:start="301:9" pos:end="301:43"><name pos:start="301:9" pos:end="301:9">h</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:20">ref_cache</name><index pos:start="301:21" pos:end="301:23">[<expr pos:start="301:22" pos:end="301:22"><name pos:start="301:22" pos:end="301:22">m</name></expr>]</index><index pos:start="301:24" pos:end="301:43">[<expr pos:start="301:25" pos:end="301:42"><name pos:start="301:25" pos:end="301:32"><name pos:start="301:25" pos:end="301:29">scan8</name><index pos:start="301:30" pos:end="301:32">[<expr pos:start="301:31" pos:end="301:31"><literal type="number" pos:start="301:31" pos:end="301:31">0</literal></expr>]</index></name> <operator pos:start="301:34" pos:end="301:34">+</operator> <literal type="number" pos:start="301:36" pos:end="301:36">8</literal><operator pos:start="301:37" pos:end="301:37">*</operator><name pos:start="301:38" pos:end="301:38">i</name> <operator pos:start="301:40" pos:end="301:40">+</operator> <name pos:start="301:42" pos:end="301:42">j</name></expr>]</index></name><operator pos:start="301:44" pos:end="301:44">=</operator> <literal type="number" pos:start="301:46" pos:end="301:46">1</literal></expr>;</expr_stmt></block_content></block></for>

      <expr_stmt pos:start="303:7" pos:end="303:62"><expr pos:start="303:7" pos:end="303:61"><name pos:start="303:7" pos:end="303:41"><name pos:start="303:7" pos:end="303:7">h</name><operator pos:start="303:8" pos:end="303:9">-&gt;</operator><name pos:start="303:10" pos:end="303:18">ref_cache</name><index pos:start="303:19" pos:end="303:21">[<expr pos:start="303:20" pos:end="303:20"><name pos:start="303:20" pos:end="303:20">m</name></expr>]</index><index pos:start="303:22" pos:end="303:41">[<expr pos:start="303:23" pos:end="303:40"><name pos:start="303:23" pos:end="303:30"><name pos:start="303:23" pos:end="303:27">scan8</name><index pos:start="303:28" pos:end="303:30">[<expr pos:start="303:29" pos:end="303:29"><literal type="number" pos:start="303:29" pos:end="303:29">0</literal></expr>]</index></name> <operator pos:start="303:32" pos:end="303:32">+</operator> <literal type="number" pos:start="303:34" pos:end="303:34">8</literal><operator pos:start="303:35" pos:end="303:35">*</operator><name pos:start="303:36" pos:end="303:36">i</name> <operator pos:start="303:38" pos:end="303:38">+</operator> <name pos:start="303:40" pos:end="303:40">j</name></expr>]</index></name><operator pos:start="303:42" pos:end="303:42">=</operator> <name pos:start="303:44" pos:end="303:61">PART_NOT_AVAILABLE</name></expr>;</expr_stmt>

    </block_content>}</block></for>

  </block_content>}</block></for>



  <for pos:start="311:3" pos:end="387:3">for <control pos:start="311:7" pos:end="311:52">(<init pos:start="311:8" pos:end="311:17"><expr pos:start="311:8" pos:end="311:16"><name pos:start="311:8" pos:end="311:14"><name pos:start="311:8" pos:end="311:8">s</name><operator pos:start="311:9" pos:end="311:10">-&gt;</operator><name pos:start="311:11" pos:end="311:14">mb_y</name></name><operator pos:start="311:15" pos:end="311:15">=</operator><literal type="number" pos:start="311:16" pos:end="311:16">0</literal></expr>;</init> <condition pos:start="311:19" pos:end="311:41"><expr pos:start="311:19" pos:end="311:40"><name pos:start="311:19" pos:end="311:25"><name pos:start="311:19" pos:end="311:19">s</name><operator pos:start="311:20" pos:end="311:21">-&gt;</operator><name pos:start="311:22" pos:end="311:25">mb_y</name></name> <operator pos:start="311:27" pos:end="311:27">&lt;</operator> <name pos:start="311:29" pos:end="311:40"><name pos:start="311:29" pos:end="311:29">s</name><operator pos:start="311:30" pos:end="311:31">-&gt;</operator><name pos:start="311:32" pos:end="311:40">mb_height</name></name></expr>;</condition> <incr pos:start="311:43" pos:end="311:51"><expr pos:start="311:43" pos:end="311:51"><name pos:start="311:43" pos:end="311:49"><name pos:start="311:43" pos:end="311:43">s</name><operator pos:start="311:44" pos:end="311:45">-&gt;</operator><name pos:start="311:46" pos:end="311:49">mb_y</name></name><operator pos:start="311:50" pos:end="311:51">++</operator></expr></incr>)</control> <block pos:start="311:54" pos:end="387:3">{<block_content pos:start="313:5" pos:end="385:42">

    <for pos:start="313:5" pos:end="381:5">for <control pos:start="313:9" pos:end="313:53">(<init pos:start="313:10" pos:end="313:19"><expr pos:start="313:10" pos:end="313:18"><name pos:start="313:10" pos:end="313:16"><name pos:start="313:10" pos:end="313:10">s</name><operator pos:start="313:11" pos:end="313:12">-&gt;</operator><name pos:start="313:13" pos:end="313:16">mb_x</name></name><operator pos:start="313:17" pos:end="313:17">=</operator><literal type="number" pos:start="313:18" pos:end="313:18">0</literal></expr>;</init> <condition pos:start="313:21" pos:end="313:42"><expr pos:start="313:21" pos:end="313:41"><name pos:start="313:21" pos:end="313:27"><name pos:start="313:21" pos:end="313:21">s</name><operator pos:start="313:22" pos:end="313:23">-&gt;</operator><name pos:start="313:24" pos:end="313:27">mb_x</name></name> <operator pos:start="313:29" pos:end="313:29">&lt;</operator> <name pos:start="313:31" pos:end="313:41"><name pos:start="313:31" pos:end="313:31">s</name><operator pos:start="313:32" pos:end="313:33">-&gt;</operator><name pos:start="313:34" pos:end="313:41">mb_width</name></name></expr>;</condition> <incr pos:start="313:44" pos:end="313:52"><expr pos:start="313:44" pos:end="313:52"><name pos:start="313:44" pos:end="313:50"><name pos:start="313:44" pos:end="313:44">s</name><operator pos:start="313:45" pos:end="313:46">-&gt;</operator><name pos:start="313:47" pos:end="313:50">mb_x</name></name><operator pos:start="313:51" pos:end="313:52">++</operator></expr></incr>)</control> <block pos:start="313:55" pos:end="381:5">{<block_content pos:start="317:7" pos:end="379:7">



      <if_stmt pos:start="317:7" pos:end="337:7"><if pos:start="317:7" pos:end="337:7">if <condition pos:start="317:10" pos:end="319:104">( <expr pos:start="317:12" pos:end="319:103"><operator pos:start="317:12" pos:end="317:12">(</operator><call pos:start="317:13" pos:end="317:34"><name pos:start="317:13" pos:end="317:26">get_bits_count</name><argument_list pos:start="317:27" pos:end="317:34">(<argument pos:start="317:28" pos:end="317:33"><expr pos:start="317:28" pos:end="317:33"><operator pos:start="317:28" pos:end="317:28">&amp;</operator><name pos:start="317:29" pos:end="317:33"><name pos:start="317:29" pos:end="317:29">s</name><operator pos:start="317:30" pos:end="317:31">-&gt;</operator><name pos:start="317:32" pos:end="317:33">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="317:36" pos:end="317:36">+</operator> <literal type="number" pos:start="317:38" pos:end="317:38">7</literal><operator pos:start="317:39" pos:end="317:39">)</operator> <operator pos:start="317:41" pos:end="317:42">&gt;=</operator> <name pos:start="317:44" pos:end="317:61"><name pos:start="317:44" pos:end="317:44">s</name><operator pos:start="317:45" pos:end="317:46">-&gt;</operator><name pos:start="317:47" pos:end="317:48">gb</name><operator pos:start="317:49" pos:end="317:49">.</operator><name pos:start="317:50" pos:end="317:61">size_in_bits</name></name> <operator pos:start="317:63" pos:end="317:64">&amp;&amp;</operator>

          <operator pos:start="319:11" pos:end="319:11">(</operator><operator pos:start="319:12" pos:end="319:12">(</operator><call pos:start="319:13" pos:end="319:34"><name pos:start="319:13" pos:end="319:26">get_bits_count</name><argument_list pos:start="319:27" pos:end="319:34">(<argument pos:start="319:28" pos:end="319:33"><expr pos:start="319:28" pos:end="319:33"><operator pos:start="319:28" pos:end="319:28">&amp;</operator><name pos:start="319:29" pos:end="319:33"><name pos:start="319:29" pos:end="319:29">s</name><operator pos:start="319:30" pos:end="319:31">-&gt;</operator><name pos:start="319:32" pos:end="319:33">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="319:36" pos:end="319:36">&amp;</operator> <literal type="number" pos:start="319:38" pos:end="319:38">7</literal><operator pos:start="319:39" pos:end="319:39">)</operator> <operator pos:start="319:41" pos:end="319:42">==</operator> <literal type="number" pos:start="319:44" pos:end="319:44">0</literal> <operator pos:start="319:46" pos:end="319:47">||</operator> <call pos:start="319:49" pos:end="319:97"><name pos:start="319:49" pos:end="319:57">show_bits</name> <argument_list pos:start="319:59" pos:end="319:97">(<argument pos:start="319:60" pos:end="319:65"><expr pos:start="319:60" pos:end="319:65"><operator pos:start="319:60" pos:end="319:60">&amp;</operator><name pos:start="319:61" pos:end="319:65"><name pos:start="319:61" pos:end="319:61">s</name><operator pos:start="319:62" pos:end="319:63">-&gt;</operator><name pos:start="319:64" pos:end="319:65">gb</name></name></expr></argument>, <argument pos:start="319:68" pos:end="319:96"><expr pos:start="319:68" pos:end="319:96"><operator pos:start="319:68" pos:end="319:68">(</operator><operator pos:start="319:69" pos:end="319:69">-</operator><call pos:start="319:70" pos:end="319:91"><name pos:start="319:70" pos:end="319:83">get_bits_count</name><argument_list pos:start="319:84" pos:end="319:91">(<argument pos:start="319:85" pos:end="319:90"><expr pos:start="319:85" pos:end="319:90"><operator pos:start="319:85" pos:end="319:85">&amp;</operator><name pos:start="319:86" pos:end="319:90"><name pos:start="319:86" pos:end="319:86">s</name><operator pos:start="319:87" pos:end="319:88">-&gt;</operator><name pos:start="319:89" pos:end="319:90">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="319:93" pos:end="319:93">&amp;</operator> <literal type="number" pos:start="319:95" pos:end="319:95">7</literal><operator pos:start="319:96" pos:end="319:96">)</operator></expr></argument>)</argument_list></call> <operator pos:start="319:99" pos:end="319:100">==</operator> <literal type="number" pos:start="319:102" pos:end="319:102">0</literal><operator pos:start="319:103" pos:end="319:103">)</operator></expr>)</condition> <block pos:start="319:106" pos:end="337:7">{<block_content pos:start="323:9" pos:end="331:20">



        <expr_stmt pos:start="323:9" pos:end="323:72"><expr pos:start="323:9" pos:end="323:71"><call pos:start="323:9" pos:end="323:71"><name pos:start="323:9" pos:end="323:17">skip_bits</name><argument_list pos:start="323:18" pos:end="323:71">(<argument pos:start="323:19" pos:end="323:24"><expr pos:start="323:19" pos:end="323:24"><operator pos:start="323:19" pos:end="323:19">&amp;</operator><name pos:start="323:20" pos:end="323:24"><name pos:start="323:20" pos:end="323:20">s</name><operator pos:start="323:21" pos:end="323:22">-&gt;</operator><name pos:start="323:23" pos:end="323:24">gb</name></name></expr></argument>, <argument pos:start="323:27" pos:end="323:70"><expr pos:start="323:27" pos:end="323:70"><name pos:start="323:27" pos:end="323:45"><name pos:start="323:27" pos:end="323:27">h</name><operator pos:start="323:28" pos:end="323:29">-&gt;</operator><name pos:start="323:30" pos:end="323:45">next_slice_index</name></name> <operator pos:start="323:47" pos:end="323:47">-</operator> <call pos:start="323:49" pos:end="323:70"><name pos:start="323:49" pos:end="323:62">get_bits_count</name><argument_list pos:start="323:63" pos:end="323:70">(<argument pos:start="323:64" pos:end="323:69"><expr pos:start="323:64" pos:end="323:69"><operator pos:start="323:64" pos:end="323:64">&amp;</operator><name pos:start="323:65" pos:end="323:69"><name pos:start="323:65" pos:end="323:65">s</name><operator pos:start="323:66" pos:end="323:67">-&gt;</operator><name pos:start="323:68" pos:end="323:69">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:40"><expr pos:start="325:9" pos:end="325:39"><name pos:start="325:9" pos:end="325:26"><name pos:start="325:9" pos:end="325:9">s</name><operator pos:start="325:10" pos:end="325:11">-&gt;</operator><name pos:start="325:12" pos:end="325:13">gb</name><operator pos:start="325:14" pos:end="325:14">.</operator><name pos:start="325:15" pos:end="325:26">size_in_bits</name></name> <operator pos:start="325:28" pos:end="325:28">=</operator> <literal type="number" pos:start="325:30" pos:end="325:30">8</literal><operator pos:start="325:31" pos:end="325:31">*</operator><name pos:start="325:32" pos:end="325:39">buf_size</name></expr>;</expr_stmt>



        <if_stmt pos:start="329:9" pos:end="331:20"><if pos:start="329:9" pos:end="331:20">if <condition pos:start="329:12" pos:end="329:41">(<expr pos:start="329:13" pos:end="329:40"><call pos:start="329:13" pos:end="329:40"><name pos:start="329:13" pos:end="329:36">svq3_decode_slice_header</name> <argument_list pos:start="329:38" pos:end="329:40">(<argument pos:start="329:39" pos:end="329:39"><expr pos:start="329:39" pos:end="329:39"><name pos:start="329:39" pos:end="329:39">h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="331:11" pos:end="331:20"><block_content pos:start="331:11" pos:end="331:20">

          <return pos:start="331:11" pos:end="331:20">return <expr pos:start="331:18" pos:end="331:19"><operator pos:start="331:18" pos:end="331:18">-</operator><literal type="number" pos:start="331:19" pos:end="331:19">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="335:9" pos:end="335:42">/* TODO: support s-&gt;mb_skip_run */</comment>

      </block_content>}</block></if></if_stmt>



      <expr_stmt pos:start="341:7" pos:end="341:44"><expr pos:start="341:7" pos:end="341:43"><name pos:start="341:7" pos:end="341:13">mb_type</name> <operator pos:start="341:15" pos:end="341:15">=</operator> <call pos:start="341:17" pos:end="341:43"><name pos:start="341:17" pos:end="341:34">svq3_get_ue_golomb</name> <argument_list pos:start="341:36" pos:end="341:43">(<argument pos:start="341:37" pos:end="341:42"><expr pos:start="341:37" pos:end="341:42"><operator pos:start="341:37" pos:end="341:37">&amp;</operator><name pos:start="341:38" pos:end="341:42"><name pos:start="341:38" pos:end="341:38">s</name><operator pos:start="341:39" pos:end="341:40">-&gt;</operator><name pos:start="341:41" pos:end="341:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <if_stmt pos:start="345:7" pos:end="353:7"><if pos:start="345:7" pos:end="349:7">if <condition pos:start="345:10" pos:end="345:33">(<expr pos:start="345:11" pos:end="345:32"><name pos:start="345:11" pos:end="345:22"><name pos:start="345:11" pos:end="345:11">s</name><operator pos:start="345:12" pos:end="345:13">-&gt;</operator><name pos:start="345:14" pos:end="345:22">pict_type</name></name> <operator pos:start="345:24" pos:end="345:25">==</operator> <name pos:start="345:27" pos:end="345:32">I_TYPE</name></expr>)</condition> <block pos:start="345:35" pos:end="349:7">{<block_content pos:start="347:9" pos:end="347:21">

        <expr_stmt pos:start="347:9" pos:end="347:21"><expr pos:start="347:9" pos:end="347:20"><name pos:start="347:9" pos:end="347:15">mb_type</name> <operator pos:start="347:17" pos:end="347:18">+=</operator> <literal type="number" pos:start="347:20" pos:end="347:20">8</literal></expr>;</expr_stmt>

      </block_content>}</block></if> <if type="elseif" pos:start="349:9" pos:end="353:7">else if <condition pos:start="349:17" pos:end="349:56">(<expr pos:start="349:18" pos:end="349:55"><name pos:start="349:18" pos:end="349:29"><name pos:start="349:18" pos:end="349:18">s</name><operator pos:start="349:19" pos:end="349:20">-&gt;</operator><name pos:start="349:21" pos:end="349:29">pict_type</name></name> <operator pos:start="349:31" pos:end="349:32">==</operator> <name pos:start="349:34" pos:end="349:39">B_TYPE</name> <operator pos:start="349:41" pos:end="349:42">&amp;&amp;</operator> <name pos:start="349:44" pos:end="349:50">mb_type</name> <operator pos:start="349:52" pos:end="349:53">&gt;=</operator> <literal type="number" pos:start="349:55" pos:end="349:55">4</literal></expr>)</condition> <block pos:start="349:58" pos:end="353:7">{<block_content pos:start="351:9" pos:end="351:21">

        <expr_stmt pos:start="351:9" pos:end="351:21"><expr pos:start="351:9" pos:end="351:20"><name pos:start="351:9" pos:end="351:15">mb_type</name> <operator pos:start="351:17" pos:end="351:18">+=</operator> <literal type="number" pos:start="351:20" pos:end="351:20">4</literal></expr>;</expr_stmt>

      </block_content>}</block></if></if_stmt>

      <if_stmt pos:start="355:7" pos:end="361:7"><if pos:start="355:7" pos:end="361:7">if <condition pos:start="355:10" pos:end="355:54">(<expr pos:start="355:11" pos:end="355:53"><name pos:start="355:11" pos:end="355:17">mb_type</name> <operator pos:start="355:19" pos:end="355:19">&gt;</operator> <literal type="number" pos:start="355:21" pos:end="355:22">33</literal> <operator pos:start="355:24" pos:end="355:25">||</operator> <call pos:start="355:27" pos:end="355:53"><name pos:start="355:27" pos:end="355:40">svq3_decode_mb</name> <argument_list pos:start="355:42" pos:end="355:53">(<argument pos:start="355:43" pos:end="355:43"><expr pos:start="355:43" pos:end="355:43"><name pos:start="355:43" pos:end="355:43">h</name></expr></argument>, <argument pos:start="355:46" pos:end="355:52"><expr pos:start="355:46" pos:end="355:52"><name pos:start="355:46" pos:end="355:52">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="355:56" pos:end="361:7">{<block_content pos:start="357:9" pos:end="359:18">

        <expr_stmt pos:start="357:9" pos:end="357:94"><expr pos:start="357:9" pos:end="357:93"><call pos:start="357:9" pos:end="357:93"><name pos:start="357:9" pos:end="357:14">av_log</name><argument_list pos:start="357:15" pos:end="357:93">(<argument pos:start="357:16" pos:end="357:25"><expr pos:start="357:16" pos:end="357:25"><name pos:start="357:16" pos:end="357:25"><name pos:start="357:16" pos:end="357:16">h</name><operator pos:start="357:17" pos:end="357:18">-&gt;</operator><name pos:start="357:19" pos:end="357:19">s</name><operator pos:start="357:20" pos:end="357:20">.</operator><name pos:start="357:21" pos:end="357:25">avctx</name></name></expr></argument>, <argument pos:start="357:28" pos:end="357:39"><expr pos:start="357:28" pos:end="357:39"><name pos:start="357:28" pos:end="357:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="357:42" pos:end="357:74"><expr pos:start="357:42" pos:end="357:74"><literal type="string" pos:start="357:42" pos:end="357:74">"error while decoding MB %d %d\n"</literal></expr></argument>, <argument pos:start="357:77" pos:end="357:83"><expr pos:start="357:77" pos:end="357:83"><name pos:start="357:77" pos:end="357:83"><name pos:start="357:77" pos:end="357:77">s</name><operator pos:start="357:78" pos:end="357:79">-&gt;</operator><name pos:start="357:80" pos:end="357:83">mb_x</name></name></expr></argument>, <argument pos:start="357:86" pos:end="357:92"><expr pos:start="357:86" pos:end="357:92"><name pos:start="357:86" pos:end="357:92"><name pos:start="357:86" pos:end="357:86">s</name><operator pos:start="357:87" pos:end="357:88">-&gt;</operator><name pos:start="357:89" pos:end="357:92">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="359:9" pos:end="359:18">return <expr pos:start="359:16" pos:end="359:17"><operator pos:start="359:16" pos:end="359:16">-</operator><literal type="number" pos:start="359:17" pos:end="359:17">1</literal></expr>;</return>

      </block_content>}</block></if></if_stmt>



      <if_stmt pos:start="365:7" pos:end="369:7"><if pos:start="365:7" pos:end="369:7">if <condition pos:start="365:10" pos:end="365:23">(<expr pos:start="365:11" pos:end="365:22"><name pos:start="365:11" pos:end="365:17">mb_type</name> <operator pos:start="365:19" pos:end="365:20">!=</operator> <literal type="number" pos:start="365:22" pos:end="365:22">0</literal></expr>)</condition> <block pos:start="365:25" pos:end="369:7">{<block_content pos:start="367:9" pos:end="367:25">

        <expr_stmt pos:start="367:9" pos:end="367:25"><expr pos:start="367:9" pos:end="367:24"><call pos:start="367:9" pos:end="367:24"><name pos:start="367:9" pos:end="367:20">hl_decode_mb</name> <argument_list pos:start="367:22" pos:end="367:24">(<argument pos:start="367:23" pos:end="367:23"><expr pos:start="367:23" pos:end="367:23"><name pos:start="367:23" pos:end="367:23">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></if></if_stmt>



      <if_stmt pos:start="373:7" pos:end="379:7"><if pos:start="373:7" pos:end="379:7">if <condition pos:start="373:10" pos:end="373:50">(<expr pos:start="373:11" pos:end="373:49"><name pos:start="373:11" pos:end="373:22"><name pos:start="373:11" pos:end="373:11">s</name><operator pos:start="373:12" pos:end="373:13">-&gt;</operator><name pos:start="373:14" pos:end="373:22">pict_type</name></name> <operator pos:start="373:24" pos:end="373:25">!=</operator> <name pos:start="373:27" pos:end="373:32">B_TYPE</name> <operator pos:start="373:34" pos:end="373:35">&amp;&amp;</operator> <operator pos:start="373:37" pos:end="373:37">!</operator><name pos:start="373:38" pos:end="373:49"><name pos:start="373:38" pos:end="373:38">s</name><operator pos:start="373:39" pos:end="373:40">-&gt;</operator><name pos:start="373:41" pos:end="373:49">low_delay</name></name></expr>)</condition> <block pos:start="373:52" pos:end="379:7">{<block_content pos:start="375:9" pos:end="377:85">

        <expr_stmt pos:start="375:9" pos:end="377:85"><expr pos:start="375:9" pos:end="377:84"><name pos:start="375:9" pos:end="375:66"><name pos:start="375:9" pos:end="375:9">s</name><operator pos:start="375:10" pos:end="375:11">-&gt;</operator><name pos:start="375:12" pos:end="375:26">current_picture</name><operator pos:start="375:27" pos:end="375:27">.</operator><name pos:start="375:28" pos:end="375:34">mb_type</name><index pos:start="375:35" pos:end="375:66">[<expr pos:start="375:36" pos:end="375:65"><name pos:start="375:36" pos:end="375:42"><name pos:start="375:36" pos:end="375:36">s</name><operator pos:start="375:37" pos:end="375:38">-&gt;</operator><name pos:start="375:39" pos:end="375:42">mb_x</name></name> <operator pos:start="375:44" pos:end="375:44">+</operator> <name pos:start="375:46" pos:end="375:52"><name pos:start="375:46" pos:end="375:46">s</name><operator pos:start="375:47" pos:end="375:48">-&gt;</operator><name pos:start="375:49" pos:end="375:52">mb_y</name></name><operator pos:start="375:53" pos:end="375:53">*</operator><name pos:start="375:54" pos:end="375:65"><name pos:start="375:54" pos:end="375:54">s</name><operator pos:start="375:55" pos:end="375:56">-&gt;</operator><name pos:start="375:57" pos:end="375:65">mb_stride</name></name></expr>]</index></name> <operator pos:start="375:68" pos:end="375:68">=</operator>

                        <ternary pos:start="377:25" pos:end="377:84"><condition pos:start="377:25" pos:end="377:65"><expr pos:start="377:25" pos:end="377:63"><operator pos:start="377:25" pos:end="377:25">(</operator><name pos:start="377:26" pos:end="377:37"><name pos:start="377:26" pos:end="377:26">s</name><operator pos:start="377:27" pos:end="377:28">-&gt;</operator><name pos:start="377:29" pos:end="377:37">pict_type</name></name> <operator pos:start="377:39" pos:end="377:40">==</operator> <name pos:start="377:42" pos:end="377:47">P_TYPE</name> <operator pos:start="377:49" pos:end="377:50">&amp;&amp;</operator> <name pos:start="377:52" pos:end="377:58">mb_type</name> <operator pos:start="377:60" pos:end="377:60">&lt;</operator> <literal type="number" pos:start="377:62" pos:end="377:62">8</literal><operator pos:start="377:63" pos:end="377:63">)</operator></expr> ?</condition><then pos:start="377:67" pos:end="377:79"> <expr pos:start="377:67" pos:end="377:79"><operator pos:start="377:67" pos:end="377:67">(</operator><name pos:start="377:68" pos:end="377:74">mb_type</name> <operator pos:start="377:76" pos:end="377:76">-</operator> <literal type="number" pos:start="377:78" pos:end="377:78">1</literal><operator pos:start="377:79" pos:end="377:79">)</operator></expr> </then><else pos:start="377:81" pos:end="377:84">: <expr pos:start="377:83" pos:end="377:84"><operator pos:start="377:83" pos:end="377:83">-</operator><literal type="number" pos:start="377:84" pos:end="377:84">1</literal></expr></else></ternary></expr>;</expr_stmt>

      </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="385:5" pos:end="385:42"><expr pos:start="385:5" pos:end="385:41"><call pos:start="385:5" pos:end="385:41"><name pos:start="385:5" pos:end="385:22">ff_draw_horiz_band</name><argument_list pos:start="385:23" pos:end="385:41">(<argument pos:start="385:24" pos:end="385:24"><expr pos:start="385:24" pos:end="385:24"><name pos:start="385:24" pos:end="385:24">s</name></expr></argument>, <argument pos:start="385:27" pos:end="385:36"><expr pos:start="385:27" pos:end="385:36"><literal type="number" pos:start="385:27" pos:end="385:28">16</literal><operator pos:start="385:29" pos:end="385:29">*</operator><name pos:start="385:30" pos:end="385:36"><name pos:start="385:30" pos:end="385:30">s</name><operator pos:start="385:31" pos:end="385:32">-&gt;</operator><name pos:start="385:33" pos:end="385:36">mb_y</name></name></expr></argument>, <argument pos:start="385:39" pos:end="385:40"><expr pos:start="385:39" pos:end="385:40"><literal type="number" pos:start="385:39" pos:end="385:40">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></for>



  <expr_stmt pos:start="391:3" pos:end="391:19"><expr pos:start="391:3" pos:end="391:18"><call pos:start="391:3" pos:end="391:18"><name pos:start="391:3" pos:end="391:15">MPV_frame_end</name><argument_list pos:start="391:16" pos:end="391:18">(<argument pos:start="391:17" pos:end="391:17"><expr pos:start="391:17" pos:end="391:17"><name pos:start="391:17" pos:end="391:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <if_stmt pos:start="395:3" pos:end="403:3"><if pos:start="395:3" pos:end="399:3">if <condition pos:start="395:6" pos:end="395:45">(<expr pos:start="395:7" pos:end="395:44"><name pos:start="395:7" pos:end="395:18"><name pos:start="395:7" pos:end="395:7">s</name><operator pos:start="395:8" pos:end="395:9">-&gt;</operator><name pos:start="395:10" pos:end="395:18">pict_type</name></name> <operator pos:start="395:20" pos:end="395:21">==</operator> <name pos:start="395:23" pos:end="395:28">B_TYPE</name> <operator pos:start="395:30" pos:end="395:31">||</operator> <name pos:start="395:33" pos:end="395:44"><name pos:start="395:33" pos:end="395:33">s</name><operator pos:start="395:34" pos:end="395:35">-&gt;</operator><name pos:start="395:36" pos:end="395:44">low_delay</name></name></expr>)</condition> <block pos:start="395:47" pos:end="399:3">{<block_content pos:start="397:5" pos:end="397:57">

    <expr_stmt pos:start="397:5" pos:end="397:57"><expr pos:start="397:5" pos:end="397:56"><operator pos:start="397:5" pos:end="397:5">*</operator><operator pos:start="397:6" pos:end="397:6">(</operator><name pos:start="397:7" pos:end="397:13">AVFrame</name> <operator pos:start="397:15" pos:end="397:15">*</operator><operator pos:start="397:16" pos:end="397:16">)</operator> <name pos:start="397:18" pos:end="397:21">data</name> <operator pos:start="397:23" pos:end="397:23">=</operator> <operator pos:start="397:25" pos:end="397:25">*</operator><operator pos:start="397:26" pos:end="397:26">(</operator><name pos:start="397:27" pos:end="397:33">AVFrame</name> <operator pos:start="397:35" pos:end="397:35">*</operator><operator pos:start="397:36" pos:end="397:36">)</operator> <operator pos:start="397:38" pos:end="397:38">&amp;</operator><name pos:start="397:39" pos:end="397:56"><name pos:start="397:39" pos:end="397:39">s</name><operator pos:start="397:40" pos:end="397:41">-&gt;</operator><name pos:start="397:42" pos:end="397:56">current_picture</name></name></expr>;</expr_stmt>

  </block_content>}</block></if> <else pos:start="399:5" pos:end="403:3">else <block pos:start="399:10" pos:end="403:3">{<block_content pos:start="401:5" pos:end="401:54">

    <expr_stmt pos:start="401:5" pos:end="401:54"><expr pos:start="401:5" pos:end="401:53"><operator pos:start="401:5" pos:end="401:5">*</operator><operator pos:start="401:6" pos:end="401:6">(</operator><name pos:start="401:7" pos:end="401:13">AVFrame</name> <operator pos:start="401:15" pos:end="401:15">*</operator><operator pos:start="401:16" pos:end="401:16">)</operator> <name pos:start="401:18" pos:end="401:21">data</name> <operator pos:start="401:23" pos:end="401:23">=</operator> <operator pos:start="401:25" pos:end="401:25">*</operator><operator pos:start="401:26" pos:end="401:26">(</operator><name pos:start="401:27" pos:end="401:33">AVFrame</name> <operator pos:start="401:35" pos:end="401:35">*</operator><operator pos:start="401:36" pos:end="401:36">)</operator> <operator pos:start="401:38" pos:end="401:38">&amp;</operator><name pos:start="401:39" pos:end="401:53"><name pos:start="401:39" pos:end="401:39">s</name><operator pos:start="401:40" pos:end="401:41">-&gt;</operator><name pos:start="401:42" pos:end="401:53">last_picture</name></name></expr>;</expr_stmt>

  </block_content>}</block></else></if_stmt>



  <expr_stmt pos:start="407:3" pos:end="407:46"><expr pos:start="407:3" pos:end="407:45"><name pos:start="407:3" pos:end="407:21"><name pos:start="407:3" pos:end="407:7">avctx</name><operator pos:start="407:8" pos:end="407:9">-&gt;</operator><name pos:start="407:10" pos:end="407:21">frame_number</name></name> <operator pos:start="407:23" pos:end="407:23">=</operator> <name pos:start="407:25" pos:end="407:41"><name pos:start="407:25" pos:end="407:25">s</name><operator pos:start="407:26" pos:end="407:27">-&gt;</operator><name pos:start="407:28" pos:end="407:41">picture_number</name></name> <operator pos:start="407:43" pos:end="407:43">-</operator> <literal type="number" pos:start="407:45" pos:end="407:45">1</literal></expr>;</expr_stmt>



  <comment type="block" pos:start="411:3" pos:end="411:46">/* dont output the last pic after seeking */</comment>

  <if_stmt pos:start="413:3" pos:end="417:3"><if pos:start="413:3" pos:end="417:3">if <condition pos:start="413:6" pos:end="413:42">(<expr pos:start="413:7" pos:end="413:41"><name pos:start="413:7" pos:end="413:25"><name pos:start="413:7" pos:end="413:7">s</name><operator pos:start="413:8" pos:end="413:9">-&gt;</operator><name pos:start="413:10" pos:end="413:25">last_picture_ptr</name></name> <operator pos:start="413:27" pos:end="413:28">||</operator> <name pos:start="413:30" pos:end="413:41"><name pos:start="413:30" pos:end="413:30">s</name><operator pos:start="413:31" pos:end="413:32">-&gt;</operator><name pos:start="413:33" pos:end="413:41">low_delay</name></name></expr>)</condition> <block pos:start="413:44" pos:end="417:3">{<block_content pos:start="415:5" pos:end="415:33">

    <expr_stmt pos:start="415:5" pos:end="415:33"><expr pos:start="415:5" pos:end="415:32"><operator pos:start="415:5" pos:end="415:5">*</operator><name pos:start="415:6" pos:end="415:14">data_size</name> <operator pos:start="415:16" pos:end="415:16">=</operator> <sizeof pos:start="415:18" pos:end="415:32">sizeof<argument_list pos:start="415:24" pos:end="415:32">(<argument pos:start="415:25" pos:end="415:31"><expr pos:start="415:25" pos:end="415:31"><name pos:start="415:25" pos:end="415:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

  </block_content>}</block></if></if_stmt>



  <return pos:start="421:3" pos:end="421:18">return <expr pos:start="421:10" pos:end="421:17"><name pos:start="421:10" pos:end="421:17">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
