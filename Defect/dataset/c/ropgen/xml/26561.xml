<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26561.c" pos:tabs="8"><function pos:start="1:1" pos:end="231:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">bfi_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:41">(<parameter pos:start="1:29" pos:end="1:50"><decl pos:start="1:29" pos:end="1:50"><type pos:start="1:29" pos:end="1:50"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:42">data_size</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:63"><decl pos:start="3:45" pos:end="3:63"><type pos:start="3:45" pos:end="3:63"><specifier pos:start="3:45" pos:end="3:49">const</specifier> <name pos:start="3:51" pos:end="3:57">uint8_t</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type> <name pos:start="3:61" pos:end="3:63">buf</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:31">int</name></type> <name pos:start="5:33" pos:end="5:40">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="231:1">{<block_content pos:start="9:5" pos:end="229:20">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">BFIContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">bfi</name> <init pos:start="9:21" pos:end="9:38">= <expr pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:27">avctx</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">dst</name> <init pos:start="11:18" pos:end="11:27">= <expr pos:start="11:20" pos:end="11:27"><name pos:start="11:20" pos:end="11:27"><name pos:start="11:20" pos:end="11:22">bfi</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:27">dst</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">src</name></decl>, <decl pos:start="13:19" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:29">dst_offset</name></decl>, <decl pos:start="13:32" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:13"/><name pos:start="13:32" pos:end="13:38">colour1</name></decl>, <decl pos:start="13:41" pos:end="13:47"><type ref="prev" pos:start="13:5" pos:end="13:13"/><name pos:start="13:41" pos:end="13:47">colour2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:65"><decl pos:start="15:5" pos:end="15:64"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:22">frame_end</name> <init pos:start="15:24" pos:end="15:64">= <expr pos:start="15:26" pos:end="15:64"><name pos:start="15:26" pos:end="15:33"><name pos:start="15:26" pos:end="15:28">bfi</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:33">dst</name></name> <operator pos:start="15:35" pos:end="15:35">+</operator> <name pos:start="15:37" pos:end="15:48"><name pos:start="15:37" pos:end="15:41">avctx</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:48">width</name></name> <operator pos:start="15:50" pos:end="15:50">*</operator> <name pos:start="15:52" pos:end="15:64"><name pos:start="15:52" pos:end="15:56">avctx</name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:64">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">uint32_t</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:17">pal</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:37"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:12"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">j</name></decl>, <decl pos:start="19:15" pos:end="19:36"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:20">height</name> <init pos:start="19:22" pos:end="19:36">= <expr pos:start="19:24" pos:end="19:36"><name pos:start="19:24" pos:end="19:36"><name pos:start="19:24" pos:end="19:28">avctx</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:36">height</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:50"><if pos:start="23:5" pos:end="25:50">if <condition pos:start="23:8" pos:end="23:27">(<expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:11">bfi</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:18">frame</name><operator pos:start="23:19" pos:end="23:19">.</operator><name pos:start="23:20" pos:end="23:23">data</name><index pos:start="23:24" pos:end="23:26">[<expr pos:start="23:25" pos:end="23:25"><literal type="number" pos:start="23:25" pos:end="23:25">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:50"><block_content pos:start="25:9" pos:end="25:50">

        <expr_stmt pos:start="25:9" pos:end="25:50"><expr pos:start="25:9" pos:end="25:49"><call pos:start="25:9" pos:end="25:49"><name pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:29">release_buffer</name></name><argument_list pos:start="25:30" pos:end="25:49">(<argument pos:start="25:31" pos:end="25:35"><expr pos:start="25:31" pos:end="25:35"><name pos:start="25:31" pos:end="25:35">avctx</name></expr></argument>, <argument pos:start="25:38" pos:end="25:48"><expr pos:start="25:38" pos:end="25:48"><operator pos:start="25:38" pos:end="25:38">&amp;</operator><name pos:start="25:39" pos:end="25:48"><name pos:start="25:39" pos:end="25:41">bfi</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:48">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:7">bfi</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:14">frame</name><operator pos:start="29:15" pos:end="29:15">.</operator><name pos:start="29:16" pos:end="29:24">reference</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <literal type="number" pos:start="29:28" pos:end="29:28">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:50">(<expr pos:start="33:9" pos:end="33:49"><call pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:25">get_buffer</name></name><argument_list pos:start="33:26" pos:end="33:45">(<argument pos:start="33:27" pos:end="33:31"><expr pos:start="33:27" pos:end="33:31"><name pos:start="33:27" pos:end="33:31">avctx</name></expr></argument>, <argument pos:start="33:34" pos:end="33:44"><expr pos:start="33:34" pos:end="33:44"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:44"><name pos:start="33:35" pos:end="33:37">bfi</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:44">frame</name></name></expr></argument>)</argument_list></call> <operator pos:start="33:47" pos:end="33:47">&lt;</operator> <literal type="number" pos:start="33:49" pos:end="33:49">0</literal></expr>)</condition> <block pos:start="33:52" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:61"><expr pos:start="35:9" pos:end="35:60"><call pos:start="35:9" pos:end="35:60"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:60">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:37" pos:end="35:59"><expr pos:start="35:37" pos:end="35:59"><literal type="string" pos:start="35:37" pos:end="35:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:56">/* Set frame parameters and palette, if necessary */</comment>

    <if_stmt pos:start="45:5" pos:end="89:5"><if pos:start="45:5" pos:end="83:5">if <condition pos:start="45:8" pos:end="45:29">(<expr pos:start="45:9" pos:end="45:28"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:28"><name pos:start="45:10" pos:end="45:14">avctx</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:28">frame_number</name></name></expr>)</condition> <block pos:start="45:31" pos:end="83:5">{<block_content pos:start="47:9" pos:end="81:43">

        <expr_stmt pos:start="47:9" pos:end="47:41"><expr pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:11">bfi</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:18">frame</name><operator pos:start="47:19" pos:end="47:19">.</operator><name pos:start="47:20" pos:end="47:28">pict_type</name></name> <operator pos:start="47:30" pos:end="47:30">=</operator> <name pos:start="47:32" pos:end="47:40">FF_I_TYPE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:11">bfi</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:18">frame</name><operator pos:start="49:19" pos:end="49:19">.</operator><name pos:start="49:20" pos:end="49:28">key_frame</name></name> <operator pos:start="49:30" pos:end="49:30">=</operator> <literal type="number" pos:start="49:32" pos:end="49:32">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="51:9" pos:end="51:33">/* Setting the palette */</comment>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if<condition pos:start="53:11" pos:end="53:37">(<expr pos:start="53:12" pos:end="53:36"><name pos:start="53:12" pos:end="53:32"><name pos:start="53:12" pos:end="53:16">avctx</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:32">extradata_size</name></name><operator pos:start="53:33" pos:end="53:33">&gt;</operator><literal type="number" pos:start="53:34" pos:end="53:36">768</literal></expr>)</condition> <block pos:start="53:39" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:22">

            <expr_stmt pos:start="55:13" pos:end="55:66"><expr pos:start="55:13" pos:end="55:65"><call pos:start="55:13" pos:end="55:65"><name pos:start="55:13" pos:end="55:18">av_log</name><argument_list pos:start="55:19" pos:end="55:65">(<argument pos:start="55:20" pos:end="55:23"><expr pos:start="55:20" pos:end="55:23"><name pos:start="55:20" pos:end="55:23">NULL</name></expr></argument>, <argument pos:start="55:26" pos:end="55:37"><expr pos:start="55:26" pos:end="55:37"><name pos:start="55:26" pos:end="55:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:40" pos:end="55:64"><expr pos:start="55:40" pos:end="55:64"><literal type="string" pos:start="55:40" pos:end="55:64">"Palette is too large.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:22">return <expr pos:start="57:20" pos:end="57:21"><operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:46"><expr pos:start="61:9" pos:end="61:45"><name pos:start="61:9" pos:end="61:11">pal</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <operator pos:start="61:15" pos:end="61:15">(</operator><name pos:start="61:16" pos:end="61:23">uint32_t</name> <operator pos:start="61:25" pos:end="61:25">*</operator><operator pos:start="61:26" pos:end="61:26">)</operator> <name pos:start="61:28" pos:end="61:45"><name pos:start="61:28" pos:end="61:30">bfi</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:37">frame</name><operator pos:start="61:38" pos:end="61:38">.</operator><name pos:start="61:39" pos:end="61:42">data</name><index pos:start="61:43" pos:end="61:45">[<expr pos:start="61:44" pos:end="61:44"><literal type="number" pos:start="61:44" pos:end="61:44">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="63:9" pos:end="79:9">for <control pos:start="63:13" pos:end="63:55">(<init pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:14">i</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>;</init> <condition pos:start="63:21" pos:end="63:50"><expr pos:start="63:21" pos:end="63:49"><name pos:start="63:21" pos:end="63:21">i</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <name pos:start="63:25" pos:end="63:45"><name pos:start="63:25" pos:end="63:29">avctx</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:45">extradata_size</name></name> <operator pos:start="63:47" pos:end="63:47">/</operator> <literal type="number" pos:start="63:49" pos:end="63:49">3</literal></expr>;</condition> <incr pos:start="63:52" pos:end="63:54"><expr pos:start="63:52" pos:end="63:54"><name pos:start="63:52" pos:end="63:52">i</name><operator pos:start="63:53" pos:end="63:54">++</operator></expr></incr>)</control> <block pos:start="63:57" pos:end="79:9">{<block_content pos:start="65:13" pos:end="77:18">

            <decl_stmt pos:start="65:13" pos:end="65:27"><decl pos:start="65:13" pos:end="65:26"><type pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">int</name></type> <name pos:start="65:17" pos:end="65:21">shift</name> <init pos:start="65:23" pos:end="65:26">= <expr pos:start="65:25" pos:end="65:26"><literal type="number" pos:start="65:25" pos:end="65:26">16</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:21"><expr pos:start="67:13" pos:end="67:20"><operator pos:start="67:13" pos:end="67:13">*</operator><name pos:start="67:14" pos:end="67:16">pal</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <literal type="number" pos:start="67:20" pos:end="67:20">0</literal></expr>;</expr_stmt>

            <for pos:start="69:13" pos:end="75:65">for <control pos:start="69:17" pos:end="69:47">(<init pos:start="69:18" pos:end="69:23"><expr pos:start="69:18" pos:end="69:22"><name pos:start="69:18" pos:end="69:18">j</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <literal type="number" pos:start="69:22" pos:end="69:22">0</literal></expr>;</init> <condition pos:start="69:25" pos:end="69:30"><expr pos:start="69:25" pos:end="69:29"><name pos:start="69:25" pos:end="69:25">j</name> <operator pos:start="69:27" pos:end="69:27">&lt;</operator> <literal type="number" pos:start="69:29" pos:end="69:29">3</literal></expr>;</condition> <incr pos:start="69:32" pos:end="69:46"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:32">j</name><operator pos:start="69:33" pos:end="69:34">++</operator></expr><operator pos:start="69:35" pos:end="69:35">,</operator> <expr pos:start="69:37" pos:end="69:46"><name pos:start="69:37" pos:end="69:41">shift</name> <operator pos:start="69:43" pos:end="69:44">-=</operator> <literal type="number" pos:start="69:46" pos:end="69:46">8</literal></expr></incr>)</control><block type="pseudo" pos:start="71:17" pos:end="75:65"><block_content pos:start="71:17" pos:end="75:65">

                <expr_stmt pos:start="71:17" pos:end="75:65"><expr pos:start="71:17" pos:end="75:64"><operator pos:start="71:17" pos:end="71:17">*</operator><name pos:start="71:18" pos:end="71:20">pal</name> <operator pos:start="71:22" pos:end="71:23">+=</operator>

                    <operator pos:start="73:21" pos:end="73:21">(</operator><operator pos:start="73:22" pos:end="73:22">(</operator><name pos:start="73:23" pos:end="73:49"><name pos:start="73:23" pos:end="73:27">avctx</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:38">extradata</name><index pos:start="73:39" pos:end="73:49">[<expr pos:start="73:40" pos:end="73:48"><name pos:start="73:40" pos:end="73:40">i</name> <operator pos:start="73:42" pos:end="73:42">*</operator> <literal type="number" pos:start="73:44" pos:end="73:46">3</literal> <operator pos:start="73:46" pos:end="73:46">+</operator> <name pos:start="73:48" pos:end="73:48">j</name></expr>]</index></name> <operator pos:start="73:51" pos:end="73:52">&lt;&lt;</operator> <literal type="number" pos:start="73:54" pos:end="73:54">2</literal><operator pos:start="73:55" pos:end="73:55">)</operator> <operator pos:start="73:57" pos:end="73:57">|</operator>

                    <operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:48"><name pos:start="75:22" pos:end="75:26">avctx</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:37">extradata</name><index pos:start="75:38" pos:end="75:48">[<expr pos:start="75:39" pos:end="75:47"><name pos:start="75:39" pos:end="75:39">i</name> <operator pos:start="75:41" pos:end="75:41">*</operator> <literal type="number" pos:start="75:43" pos:end="75:45">3</literal> <operator pos:start="75:45" pos:end="75:45">+</operator> <name pos:start="75:47" pos:end="75:47">j</name></expr>]</index></name> <operator pos:start="75:50" pos:end="75:51">&gt;&gt;</operator> <literal type="number" pos:start="75:53" pos:end="75:53">4</literal><operator pos:start="75:54" pos:end="75:54">)</operator><operator pos:start="75:55" pos:end="75:55">)</operator> <operator pos:start="75:57" pos:end="75:58">&lt;&lt;</operator> <name pos:start="75:60" pos:end="75:64">shift</name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="77:13" pos:end="77:18"><expr pos:start="77:13" pos:end="77:17"><name pos:start="77:13" pos:end="77:15">pal</name><operator pos:start="77:16" pos:end="77:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="81:9" pos:end="81:43"><expr pos:start="81:9" pos:end="81:42"><name pos:start="81:9" pos:end="81:38"><name pos:start="81:9" pos:end="81:11">bfi</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:18">frame</name><operator pos:start="81:19" pos:end="81:19">.</operator><name pos:start="81:20" pos:end="81:38">palette_has_changed</name></name> <operator pos:start="81:40" pos:end="81:40">=</operator> <literal type="number" pos:start="81:42" pos:end="81:42">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="89:5">else <block pos:start="83:12" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:33">

        <expr_stmt pos:start="85:9" pos:end="85:41"><expr pos:start="85:9" pos:end="85:40"><name pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:11">bfi</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:18">frame</name><operator pos:start="85:19" pos:end="85:19">.</operator><name pos:start="85:20" pos:end="85:28">pict_type</name></name> <operator pos:start="85:30" pos:end="85:30">=</operator> <name pos:start="85:32" pos:end="85:40">FF_P_TYPE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:33"><expr pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:11">bfi</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:18">frame</name><operator pos:start="87:19" pos:end="87:19">.</operator><name pos:start="87:20" pos:end="87:28">key_frame</name></name> <operator pos:start="87:30" pos:end="87:30">=</operator> <literal type="number" pos:start="87:32" pos:end="87:32">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:13"><expr pos:start="93:5" pos:end="93:12"><name pos:start="93:5" pos:end="93:7">buf</name> <operator pos:start="93:9" pos:end="93:10">+=</operator> <literal type="number" pos:start="93:12" pos:end="93:12">4</literal></expr>;</expr_stmt> <comment type="line" pos:start="93:15" pos:end="93:44">//Unpacked size, not required.</comment>



    <while pos:start="97:5" pos:end="207:5">while <condition pos:start="97:11" pos:end="97:28">(<expr pos:start="97:12" pos:end="97:27"><name pos:start="97:12" pos:end="97:14">dst</name> <operator pos:start="97:16" pos:end="97:17">!=</operator> <name pos:start="97:19" pos:end="97:27">frame_end</name></expr>)</condition> <block pos:start="97:30" pos:end="207:5">{<block_content pos:start="99:9" pos:end="205:9">

        <decl_stmt pos:start="99:9" pos:end="99:49"><decl pos:start="99:9" pos:end="99:48"><type pos:start="99:9" pos:end="99:28"><specifier pos:start="99:9" pos:end="99:14">static</specifier> <specifier pos:start="99:16" pos:end="99:20">const</specifier> <name pos:start="99:22" pos:end="99:28">uint8_t</name></type> <name pos:start="99:30" pos:end="99:38"><name pos:start="99:30" pos:end="99:35">lentab</name><index pos:start="99:36" pos:end="99:38">[<expr pos:start="99:37" pos:end="99:37"><literal type="number" pos:start="99:37" pos:end="99:37">4</literal></expr>]</index></name><init pos:start="99:39" pos:end="99:48">=<expr pos:start="99:40" pos:end="99:48"><block pos:start="99:40" pos:end="99:48">{<expr pos:start="99:41" pos:end="99:41"><literal type="number" pos:start="99:41" pos:end="99:41">0</literal></expr>,<expr pos:start="99:43" pos:end="99:43"><literal type="number" pos:start="99:43" pos:end="99:43">2</literal></expr>,<expr pos:start="99:45" pos:end="99:45"><literal type="number" pos:start="99:45" pos:end="99:45">0</literal></expr>,<expr pos:start="99:47" pos:end="99:47"><literal type="number" pos:start="99:47" pos:end="99:47">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="101:9" pos:end="101:43"><decl pos:start="101:9" pos:end="101:34"><type pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:16">unsigned</name> <name pos:start="101:18" pos:end="101:20">int</name></type> <name pos:start="101:22" pos:end="101:25">byte</name> <init pos:start="101:27" pos:end="101:34">= <expr pos:start="101:29" pos:end="101:34"><operator pos:start="101:29" pos:end="101:29">*</operator><name pos:start="101:30" pos:end="101:32">buf</name><operator pos:start="101:33" pos:end="101:34">++</operator></expr></init></decl>, <decl pos:start="101:37" pos:end="101:42"><type ref="prev" pos:start="101:9" pos:end="101:20"/><name pos:start="101:37" pos:end="101:42">offset</name></decl>;</decl_stmt>

        <decl_stmt pos:start="103:9" pos:end="103:38"><decl pos:start="103:9" pos:end="103:37"><type pos:start="103:9" pos:end="103:20"><name pos:start="103:9" pos:end="103:16">unsigned</name> <name pos:start="103:18" pos:end="103:20">int</name></type> <name pos:start="103:22" pos:end="103:25">code</name> <init pos:start="103:27" pos:end="103:37">= <expr pos:start="103:29" pos:end="103:37"><name pos:start="103:29" pos:end="103:32">byte</name> <operator pos:start="103:34" pos:end="103:35">&gt;&gt;</operator> <literal type="number" pos:start="103:37" pos:end="103:37">6</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="105:9" pos:end="105:43"><decl pos:start="105:9" pos:end="105:42"><type pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:16">unsigned</name> <name pos:start="105:18" pos:end="105:20">int</name></type> <name pos:start="105:22" pos:end="105:27">length</name> <init pos:start="105:29" pos:end="105:42">= <expr pos:start="105:31" pos:end="105:42"><name pos:start="105:31" pos:end="105:34">byte</name> <operator pos:start="105:36" pos:end="105:36">&amp;</operator> <operator pos:start="105:38" pos:end="105:38">~</operator><literal type="number" pos:start="105:39" pos:end="105:42">0xC0</literal></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="109:9" pos:end="109:48">/* Get length and offset(if required) */</comment>

        <if_stmt pos:start="111:9" pos:end="135:9"><if pos:start="111:9" pos:end="129:9">if <condition pos:start="111:12" pos:end="111:24">(<expr pos:start="111:13" pos:end="111:23"><name pos:start="111:13" pos:end="111:18">length</name> <operator pos:start="111:20" pos:end="111:21">==</operator> <literal type="number" pos:start="111:23" pos:end="111:23">0</literal></expr>)</condition> <block pos:start="111:26" pos:end="129:9">{<block_content pos:start="113:13" pos:end="127:13">

            <if_stmt pos:start="113:13" pos:end="127:13"><if pos:start="113:13" pos:end="119:13">if <condition pos:start="113:16" pos:end="113:26">(<expr pos:start="113:17" pos:end="113:25"><name pos:start="113:17" pos:end="113:20">code</name> <operator pos:start="113:22" pos:end="113:23">==</operator> <literal type="number" pos:start="113:25" pos:end="113:25">1</literal></expr>)</condition> <block pos:start="113:28" pos:end="119:13">{<block_content pos:start="115:17" pos:end="117:51">

                <expr_stmt pos:start="115:17" pos:end="115:51"><expr pos:start="115:17" pos:end="115:50"><name pos:start="115:17" pos:end="115:22">length</name> <operator pos:start="115:24" pos:end="115:24">=</operator> <call pos:start="115:26" pos:end="115:50"><name pos:start="115:26" pos:end="115:44">bytestream_get_byte</name><argument_list pos:start="115:45" pos:end="115:50">(<argument pos:start="115:46" pos:end="115:49"><expr pos:start="115:46" pos:end="115:49"><operator pos:start="115:46" pos:end="115:46">&amp;</operator><name pos:start="115:47" pos:end="115:49">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:51"><expr pos:start="117:17" pos:end="117:50"><name pos:start="117:17" pos:end="117:22">offset</name> <operator pos:start="117:24" pos:end="117:24">=</operator> <call pos:start="117:26" pos:end="117:50"><name pos:start="117:26" pos:end="117:44">bytestream_get_le16</name><argument_list pos:start="117:45" pos:end="117:50">(<argument pos:start="117:46" pos:end="117:49"><expr pos:start="117:46" pos:end="117:49"><operator pos:start="117:46" pos:end="117:46">&amp;</operator><name pos:start="117:47" pos:end="117:49">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="119:15" pos:end="127:13">else <block pos:start="119:20" pos:end="127:13">{<block_content pos:start="121:17" pos:end="125:26">

                <expr_stmt pos:start="121:17" pos:end="121:51"><expr pos:start="121:17" pos:end="121:50"><name pos:start="121:17" pos:end="121:22">length</name> <operator pos:start="121:24" pos:end="121:24">=</operator> <call pos:start="121:26" pos:end="121:50"><name pos:start="121:26" pos:end="121:44">bytestream_get_le16</name><argument_list pos:start="121:45" pos:end="121:50">(<argument pos:start="121:46" pos:end="121:49"><expr pos:start="121:46" pos:end="121:49"><operator pos:start="121:46" pos:end="121:46">&amp;</operator><name pos:start="121:47" pos:end="121:49">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="123:17" pos:end="125:26"><if pos:start="123:17" pos:end="125:26">if <condition pos:start="123:20" pos:end="123:45">(<expr pos:start="123:21" pos:end="123:44"><name pos:start="123:21" pos:end="123:24">code</name> <operator pos:start="123:26" pos:end="123:27">==</operator> <literal type="number" pos:start="123:29" pos:end="123:29">2</literal> <operator pos:start="123:31" pos:end="123:32">&amp;&amp;</operator> <name pos:start="123:34" pos:end="123:39">length</name> <operator pos:start="123:41" pos:end="123:42">==</operator> <literal type="number" pos:start="123:44" pos:end="123:44">0</literal></expr>)</condition><block type="pseudo" pos:start="125:21" pos:end="125:26"><block_content pos:start="125:21" pos:end="125:26">

                    <break pos:start="125:21" pos:end="125:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="129:11" pos:end="135:9">else <block pos:start="129:16" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:51">

            <if_stmt pos:start="131:13" pos:end="133:51"><if pos:start="131:13" pos:end="133:51">if <condition pos:start="131:16" pos:end="131:26">(<expr pos:start="131:17" pos:end="131:25"><name pos:start="131:17" pos:end="131:20">code</name> <operator pos:start="131:22" pos:end="131:23">==</operator> <literal type="number" pos:start="131:25" pos:end="131:25">1</literal></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:51"><block_content pos:start="133:17" pos:end="133:51">

                <expr_stmt pos:start="133:17" pos:end="133:51"><expr pos:start="133:17" pos:end="133:50"><name pos:start="133:17" pos:end="133:22">offset</name> <operator pos:start="133:24" pos:end="133:24">=</operator> <call pos:start="133:26" pos:end="133:50"><name pos:start="133:26" pos:end="133:44">bytestream_get_byte</name><argument_list pos:start="133:45" pos:end="133:50">(<argument pos:start="133:46" pos:end="133:49"><expr pos:start="133:46" pos:end="133:49"><operator pos:start="133:46" pos:end="133:46">&amp;</operator><name pos:start="133:47" pos:end="133:49">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="139:9" pos:end="139:31">/* Do boundary check */</comment>

        <if_stmt pos:start="141:9" pos:end="143:18"><if pos:start="141:9" pos:end="143:18">if <condition pos:start="141:12" pos:end="141:53">(<expr pos:start="141:13" pos:end="141:52"><name pos:start="141:13" pos:end="141:15">dst</name> <operator pos:start="141:17" pos:end="141:17">+</operator> <operator pos:start="141:19" pos:end="141:19">(</operator><name pos:start="141:20" pos:end="141:25">length</name><operator pos:start="141:26" pos:end="141:27">&lt;&lt;</operator><name pos:start="141:28" pos:end="141:39"><name pos:start="141:28" pos:end="141:33">lentab</name><index pos:start="141:34" pos:end="141:39">[<expr pos:start="141:35" pos:end="141:38"><name pos:start="141:35" pos:end="141:38">code</name></expr>]</index></name><operator pos:start="141:40" pos:end="141:40">)</operator> <operator pos:start="141:42" pos:end="141:42">&gt;</operator> <name pos:start="141:44" pos:end="141:52">frame_end</name></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:18"><block_content pos:start="143:13" pos:end="143:18">

            <break pos:start="143:13" pos:end="143:18">break;</break></block_content></block></if></if_stmt>



        <switch pos:start="147:9" pos:end="205:9">switch <condition pos:start="147:16" pos:end="147:21">(<expr pos:start="147:17" pos:end="147:20"><name pos:start="147:17" pos:end="147:20">code</name></expr>)</condition> <block pos:start="147:23" pos:end="205:9">{<block_content pos:start="151:9" pos:end="201:18">



        <case pos:start="151:9" pos:end="151:15">case <expr pos:start="151:14" pos:end="151:14"><literal type="number" pos:start="151:14" pos:end="151:14">0</literal></expr>:</case>                <comment type="line" pos:start="151:32" pos:end="151:45">//Normal Chain</comment>

            <expr_stmt pos:start="153:13" pos:end="153:53"><expr pos:start="153:13" pos:end="153:52"><call pos:start="153:13" pos:end="153:52"><name pos:start="153:13" pos:end="153:33">bytestream_get_buffer</name><argument_list pos:start="153:34" pos:end="153:52">(<argument pos:start="153:35" pos:end="153:38"><expr pos:start="153:35" pos:end="153:38"><operator pos:start="153:35" pos:end="153:35">&amp;</operator><name pos:start="153:36" pos:end="153:38">buf</name></expr></argument>, <argument pos:start="153:41" pos:end="153:43"><expr pos:start="153:41" pos:end="153:43"><name pos:start="153:41" pos:end="153:43">dst</name></expr></argument>, <argument pos:start="153:46" pos:end="153:51"><expr pos:start="153:46" pos:end="153:51"><name pos:start="153:46" pos:end="153:51">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:26"><expr pos:start="155:13" pos:end="155:25"><name pos:start="155:13" pos:end="155:15">dst</name> <operator pos:start="155:17" pos:end="155:18">+=</operator> <name pos:start="155:20" pos:end="155:25">length</name></expr>;</expr_stmt>

            <break pos:start="157:13" pos:end="157:18">break;</break>



        <case pos:start="161:9" pos:end="161:15">case <expr pos:start="161:14" pos:end="161:14"><literal type="number" pos:start="161:14" pos:end="161:14">1</literal></expr>:</case>                <comment type="line" pos:start="161:32" pos:end="161:43">//Back Chain</comment>

            <expr_stmt pos:start="163:13" pos:end="163:38"><expr pos:start="163:13" pos:end="163:37"><name pos:start="163:13" pos:end="163:22">dst_offset</name> <operator pos:start="163:24" pos:end="163:24">=</operator> <name pos:start="163:26" pos:end="163:28">dst</name> <operator pos:start="163:30" pos:end="163:30">-</operator> <name pos:start="163:32" pos:end="163:37">offset</name></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:24"><expr pos:start="165:13" pos:end="165:23"><name pos:start="165:13" pos:end="165:18">length</name> <operator pos:start="165:20" pos:end="165:21">*=</operator> <literal type="number" pos:start="165:23" pos:end="165:23">4</literal></expr>;</expr_stmt>        <comment type="line" pos:start="165:33" pos:end="165:58">//Convert dwords to bytes.</comment>

            <if_stmt pos:start="167:13" pos:end="169:22"><if pos:start="167:13" pos:end="169:22">if <condition pos:start="167:16" pos:end="167:38">(<expr pos:start="167:17" pos:end="167:37"><name pos:start="167:17" pos:end="167:26">dst_offset</name> <operator pos:start="167:28" pos:end="167:28">&lt;</operator> <name pos:start="167:30" pos:end="167:37"><name pos:start="167:30" pos:end="167:32">bfi</name><operator pos:start="167:33" pos:end="167:34">-&gt;</operator><name pos:start="167:35" pos:end="167:37">dst</name></name></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:22"><block_content pos:start="169:17" pos:end="169:22">

                <break pos:start="169:17" pos:end="169:22">break;</break></block_content></block></if></if_stmt>

            <while pos:start="171:13" pos:end="173:39">while <condition pos:start="171:19" pos:end="171:28">(<expr pos:start="171:20" pos:end="171:27"><name pos:start="171:20" pos:end="171:25">length</name><operator pos:start="171:26" pos:end="171:27">--</operator></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:39"><block_content pos:start="173:17" pos:end="173:39">

                <expr_stmt pos:start="173:17" pos:end="173:39"><expr pos:start="173:17" pos:end="173:38"><operator pos:start="173:17" pos:end="173:17">*</operator><name pos:start="173:18" pos:end="173:20">dst</name><operator pos:start="173:21" pos:end="173:22">++</operator> <operator pos:start="173:24" pos:end="173:24">=</operator> <operator pos:start="173:26" pos:end="173:26">*</operator><name pos:start="173:27" pos:end="173:36">dst_offset</name><operator pos:start="173:37" pos:end="173:38">++</operator></expr>;</expr_stmt></block_content></block></while>

            <break pos:start="175:13" pos:end="175:18">break;</break>



        <case pos:start="179:9" pos:end="179:15">case <expr pos:start="179:14" pos:end="179:14"><literal type="number" pos:start="179:14" pos:end="179:14">2</literal></expr>:</case>                <comment type="line" pos:start="179:32" pos:end="179:43">//Skip Chain</comment>

            <expr_stmt pos:start="181:13" pos:end="181:26"><expr pos:start="181:13" pos:end="181:25"><name pos:start="181:13" pos:end="181:15">dst</name> <operator pos:start="181:17" pos:end="181:18">+=</operator> <name pos:start="181:20" pos:end="181:25">length</name></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>



        <case pos:start="187:9" pos:end="187:15">case <expr pos:start="187:14" pos:end="187:14"><literal type="number" pos:start="187:14" pos:end="187:14">3</literal></expr>:</case>                <comment type="line" pos:start="187:32" pos:end="187:43">//Fill Chain</comment>

            <expr_stmt pos:start="189:13" pos:end="189:48"><expr pos:start="189:13" pos:end="189:47"><name pos:start="189:13" pos:end="189:19">colour1</name> <operator pos:start="189:21" pos:end="189:21">=</operator> <call pos:start="189:23" pos:end="189:47"><name pos:start="189:23" pos:end="189:41">bytestream_get_byte</name><argument_list pos:start="189:42" pos:end="189:47">(<argument pos:start="189:43" pos:end="189:46"><expr pos:start="189:43" pos:end="189:46"><operator pos:start="189:43" pos:end="189:43">&amp;</operator><name pos:start="189:44" pos:end="189:46">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:48"><expr pos:start="191:13" pos:end="191:47"><name pos:start="191:13" pos:end="191:19">colour2</name> <operator pos:start="191:21" pos:end="191:21">=</operator> <call pos:start="191:23" pos:end="191:47"><name pos:start="191:23" pos:end="191:41">bytestream_get_byte</name><argument_list pos:start="191:42" pos:end="191:47">(<argument pos:start="191:43" pos:end="191:46"><expr pos:start="191:43" pos:end="191:46"><operator pos:start="191:43" pos:end="191:43">&amp;</operator><name pos:start="191:44" pos:end="191:46">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <while pos:start="193:13" pos:end="199:13">while <condition pos:start="193:19" pos:end="193:28">(<expr pos:start="193:20" pos:end="193:27"><name pos:start="193:20" pos:end="193:25">length</name><operator pos:start="193:26" pos:end="193:27">--</operator></expr>)</condition> <block pos:start="193:30" pos:end="199:13">{<block_content pos:start="195:17" pos:end="197:33">

                <expr_stmt pos:start="195:17" pos:end="195:33"><expr pos:start="195:17" pos:end="195:32"><operator pos:start="195:17" pos:end="195:17">*</operator><name pos:start="195:18" pos:end="195:20">dst</name><operator pos:start="195:21" pos:end="195:22">++</operator> <operator pos:start="195:24" pos:end="195:24">=</operator> <name pos:start="195:26" pos:end="195:32">colour1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:33"><expr pos:start="197:17" pos:end="197:32"><operator pos:start="197:17" pos:end="197:17">*</operator><name pos:start="197:18" pos:end="197:20">dst</name><operator pos:start="197:21" pos:end="197:22">++</operator> <operator pos:start="197:24" pos:end="197:24">=</operator> <name pos:start="197:26" pos:end="197:32">colour2</name></expr>;</expr_stmt>

            </block_content>}</block></while>

            <break pos:start="201:13" pos:end="201:18">break;</break>



        </block_content>}</block></switch>

    </block_content>}</block></while>



    <expr_stmt pos:start="211:5" pos:end="211:19"><expr pos:start="211:5" pos:end="211:18"><name pos:start="211:5" pos:end="211:7">src</name> <operator pos:start="211:9" pos:end="211:9">=</operator> <name pos:start="211:11" pos:end="211:18"><name pos:start="211:11" pos:end="211:13">bfi</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:18">dst</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:29"><expr pos:start="213:5" pos:end="213:28"><name pos:start="213:5" pos:end="213:7">dst</name> <operator pos:start="213:9" pos:end="213:9">=</operator> <name pos:start="213:11" pos:end="213:28"><name pos:start="213:11" pos:end="213:13">bfi</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:20">frame</name><operator pos:start="213:21" pos:end="213:21">.</operator><name pos:start="213:22" pos:end="213:25">data</name><index pos:start="213:26" pos:end="213:28">[<expr pos:start="213:27" pos:end="213:27"><literal type="number" pos:start="213:27" pos:end="213:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <while pos:start="215:5" pos:end="223:5">while <condition pos:start="215:11" pos:end="215:20">(<expr pos:start="215:12" pos:end="215:19"><name pos:start="215:12" pos:end="215:17">height</name><operator pos:start="215:18" pos:end="215:19">--</operator></expr>)</condition> <block pos:start="215:22" pos:end="223:5">{<block_content pos:start="217:9" pos:end="221:38">

        <expr_stmt pos:start="217:9" pos:end="217:39"><expr pos:start="217:9" pos:end="217:38"><call pos:start="217:9" pos:end="217:38"><name pos:start="217:9" pos:end="217:14">memcpy</name><argument_list pos:start="217:15" pos:end="217:38">(<argument pos:start="217:16" pos:end="217:18"><expr pos:start="217:16" pos:end="217:18"><name pos:start="217:16" pos:end="217:18">dst</name></expr></argument>, <argument pos:start="217:21" pos:end="217:23"><expr pos:start="217:21" pos:end="217:23"><name pos:start="217:21" pos:end="217:23">src</name></expr></argument>, <argument pos:start="217:26" pos:end="217:37"><expr pos:start="217:26" pos:end="217:37"><name pos:start="217:26" pos:end="217:37"><name pos:start="217:26" pos:end="217:30">avctx</name><operator pos:start="217:31" pos:end="217:32">-&gt;</operator><name pos:start="217:33" pos:end="217:37">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:28"><expr pos:start="219:9" pos:end="219:27"><name pos:start="219:9" pos:end="219:11">src</name> <operator pos:start="219:13" pos:end="219:14">+=</operator> <name pos:start="219:16" pos:end="219:27"><name pos:start="219:16" pos:end="219:20">avctx</name><operator pos:start="219:21" pos:end="219:22">-&gt;</operator><name pos:start="219:23" pos:end="219:27">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:38"><expr pos:start="221:9" pos:end="221:37"><name pos:start="221:9" pos:end="221:11">dst</name> <operator pos:start="221:13" pos:end="221:14">+=</operator> <name pos:start="221:16" pos:end="221:37"><name pos:start="221:16" pos:end="221:18">bfi</name><operator pos:start="221:19" pos:end="221:20">-&gt;</operator><name pos:start="221:21" pos:end="221:25">frame</name><operator pos:start="221:26" pos:end="221:26">.</operator><name pos:start="221:27" pos:end="221:34">linesize</name><index pos:start="221:35" pos:end="221:37">[<expr pos:start="221:36" pos:end="221:36"><literal type="number" pos:start="221:36" pos:end="221:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="225:5" pos:end="225:33"><expr pos:start="225:5" pos:end="225:32"><operator pos:start="225:5" pos:end="225:5">*</operator><name pos:start="225:6" pos:end="225:14">data_size</name> <operator pos:start="225:16" pos:end="225:16">=</operator> <sizeof pos:start="225:18" pos:end="225:32">sizeof<argument_list pos:start="225:24" pos:end="225:32">(<argument pos:start="225:25" pos:end="225:31"><expr pos:start="225:25" pos:end="225:31"><name pos:start="225:25" pos:end="225:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:35"><expr pos:start="227:5" pos:end="227:34"><operator pos:start="227:5" pos:end="227:5">*</operator><operator pos:start="227:6" pos:end="227:6">(</operator><name pos:start="227:7" pos:end="227:13">AVFrame</name> <operator pos:start="227:15" pos:end="227:15">*</operator><operator pos:start="227:16" pos:end="227:16">)</operator> <name pos:start="227:18" pos:end="227:21">data</name> <operator pos:start="227:23" pos:end="227:23">=</operator> <name pos:start="227:25" pos:end="227:34"><name pos:start="227:25" pos:end="227:27">bfi</name><operator pos:start="227:28" pos:end="227:29">-&gt;</operator><name pos:start="227:30" pos:end="227:34">frame</name></name></expr>;</expr_stmt>

    <return pos:start="229:5" pos:end="229:20">return <expr pos:start="229:12" pos:end="229:19"><name pos:start="229:12" pos:end="229:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
