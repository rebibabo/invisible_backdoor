<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2814.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:23">coroutine_fn</name></type> <name pos:start="1:25" pos:end="1:48">v9fs_mark_fids_unreclaim</name><parameter_list pos:start="1:49" pos:end="1:78">(<parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:56">V9fsPDU</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pdu</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:71">V9fsPath</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">path</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">V9fsState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:25">= <expr pos:start="7:20" pos:end="7:25"><name pos:start="7:20" pos:end="7:25"><name pos:start="7:20" pos:end="7:22">pdu</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:25">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">V9fsFidState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">fidp</name></decl>, <decl pos:start="9:25" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:18"/><name pos:start="9:25" pos:end="9:32">head_fid</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:32"><expr pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">head_fid</name><operator pos:start="13:13" pos:end="13:13">.</operator><name pos:start="13:14" pos:end="13:17">next</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:31"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:31">fid_list</name></name></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="59:5">for <control pos:start="15:9" pos:end="15:53">(<init pos:start="15:10" pos:end="15:28"><expr pos:start="15:10" pos:end="15:27"><name pos:start="15:10" pos:end="15:13">fidp</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <name pos:start="15:17" pos:end="15:27"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:27">fid_list</name></name></expr>;</init> <condition pos:start="15:30" pos:end="15:34"><expr pos:start="15:30" pos:end="15:33"><name pos:start="15:30" pos:end="15:33">fidp</name></expr>;</condition> <incr pos:start="15:36" pos:end="15:52"><expr pos:start="15:36" pos:end="15:52"><name pos:start="15:36" pos:end="15:39">fidp</name> <operator pos:start="15:41" pos:end="15:41">=</operator> <name pos:start="15:43" pos:end="15:52"><name pos:start="15:43" pos:end="15:46">fidp</name><operator pos:start="15:47" pos:end="15:48">-&gt;</operator><name pos:start="15:49" pos:end="15:52">next</name></name></expr></incr>)</control> <block pos:start="15:55" pos:end="59:5">{<block_content pos:start="17:9" pos:end="57:9">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:42">(<expr pos:start="17:13" pos:end="17:41"><name pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:16">fidp</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:22">path</name><operator pos:start="17:23" pos:end="17:23">.</operator><name pos:start="17:24" pos:end="17:27">size</name></name> <operator pos:start="17:29" pos:end="17:30">!=</operator> <name pos:start="17:32" pos:end="17:41"><name pos:start="17:32" pos:end="17:35">path</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:41">size</name></name></expr>)</condition> <block pos:start="17:44" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:21">

            <continue pos:start="19:13" pos:end="19:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="57:9"><if pos:start="23:9" pos:end="57:9">if <condition pos:start="23:12" pos:end="23:61">(<expr pos:start="23:13" pos:end="23:60"><operator pos:start="23:13" pos:end="23:13">!</operator><call pos:start="23:14" pos:end="23:60"><name pos:start="23:14" pos:end="23:19">memcmp</name><argument_list pos:start="23:20" pos:end="23:60">(<argument pos:start="23:21" pos:end="23:35"><expr pos:start="23:21" pos:end="23:35"><name pos:start="23:21" pos:end="23:35"><name pos:start="23:21" pos:end="23:24">fidp</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:30">path</name><operator pos:start="23:31" pos:end="23:31">.</operator><name pos:start="23:32" pos:end="23:35">data</name></name></expr></argument>, <argument pos:start="23:38" pos:end="23:47"><expr pos:start="23:38" pos:end="23:47"><name pos:start="23:38" pos:end="23:47"><name pos:start="23:38" pos:end="23:41">path</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:47">data</name></name></expr></argument>, <argument pos:start="23:50" pos:end="23:59"><expr pos:start="23:50" pos:end="23:59"><name pos:start="23:50" pos:end="23:59"><name pos:start="23:50" pos:end="23:53">path</name><operator pos:start="23:54" pos:end="23:55">-&gt;</operator><name pos:start="23:56" pos:end="23:59">size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:63" pos:end="57:9">{<block_content pos:start="27:13" pos:end="55:13">

            <comment type="block" pos:start="25:13" pos:end="25:47">/* Mark the fid non reclaimable. */</comment>

            <expr_stmt pos:start="27:13" pos:end="27:47"><expr pos:start="27:13" pos:end="27:46"><name pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:16">fidp</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:23">flags</name></name> <operator pos:start="27:25" pos:end="27:26">|=</operator> <name pos:start="27:28" pos:end="27:46">FID_NON_RECLAIMABLE</name></expr>;</expr_stmt>



            <comment type="block" pos:start="31:13" pos:end="31:55">/* reopen the file/dir if already closed */</comment>

            <expr_stmt pos:start="33:13" pos:end="33:45"><expr pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:15">err</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:44"><name pos:start="33:19" pos:end="33:33">v9fs_reopen_fid</name><argument_list pos:start="33:34" pos:end="33:44">(<argument pos:start="33:35" pos:end="33:37"><expr pos:start="33:35" pos:end="33:37"><name pos:start="33:35" pos:end="33:37">pdu</name></expr></argument>, <argument pos:start="33:40" pos:end="33:43"><expr pos:start="33:40" pos:end="33:43"><name pos:start="33:40" pos:end="33:43">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:24">(<expr pos:start="35:17" pos:end="35:23"><name pos:start="35:17" pos:end="35:19">err</name> <operator pos:start="35:21" pos:end="35:21">&lt;</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>)</condition> <block pos:start="35:26" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:26">

                <return pos:start="37:17" pos:end="37:26">return <expr pos:start="37:24" pos:end="37:25"><operator pos:start="37:24" pos:end="37:24">-</operator><literal type="number" pos:start="37:25" pos:end="37:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="41:13" pos:end="49:15">/*

             * Go back to head of fid list because

             * the list could have got updated when

             * switched to the worker thread

             */</comment>

            <if_stmt pos:start="51:13" pos:end="55:13"><if pos:start="51:13" pos:end="55:13">if <condition pos:start="51:16" pos:end="51:25">(<expr pos:start="51:17" pos:end="51:24"><name pos:start="51:17" pos:end="51:19">err</name> <operator pos:start="51:21" pos:end="51:22">==</operator> <literal type="number" pos:start="51:24" pos:end="51:24">0</literal></expr>)</condition> <block pos:start="51:27" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:33">

                <expr_stmt pos:start="53:17" pos:end="53:33"><expr pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:20">fidp</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <operator pos:start="53:24" pos:end="53:24">&amp;</operator><name pos:start="53:25" pos:end="53:32">head_fid</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
