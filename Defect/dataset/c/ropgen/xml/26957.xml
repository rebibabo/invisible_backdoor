<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26957.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">hls_window</name><parameter_list pos:start="1:22" pos:end="1:51">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:50"><decl pos:start="1:43" pos:end="1:50"><type pos:start="1:43" pos:end="1:50"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:50">last</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">HLSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">hls</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">ListEntry</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">en</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:27">target_duration</name> <init pos:start="9:29" pos:end="9:31">= <expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">AVIOContext</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">out</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:28"><name pos:start="15:10" pos:end="15:22">temp_filename</name><index pos:start="15:23" pos:end="15:28">[<expr pos:start="15:24" pos:end="15:27"><literal type="number" pos:start="15:24" pos:end="15:27">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:77"><decl pos:start="17:5" pos:end="17:76"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:20">sequence</name> <init pos:start="17:22" pos:end="17:76">= <expr pos:start="17:24" pos:end="17:76"><call pos:start="17:24" pos:end="17:76"><name pos:start="17:24" pos:end="17:28">FFMAX</name><argument_list pos:start="17:29" pos:end="17:76">(<argument pos:start="17:30" pos:end="17:48"><expr pos:start="17:30" pos:end="17:48"><name pos:start="17:30" pos:end="17:48"><name pos:start="17:30" pos:end="17:32">hls</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:48">start_sequence</name></name></expr></argument>, <argument pos:start="17:51" pos:end="17:75"><expr pos:start="17:51" pos:end="17:75"><name pos:start="17:51" pos:end="17:63"><name pos:start="17:51" pos:end="17:53">hls</name><operator pos:start="17:54" pos:end="17:55">-&gt;</operator><name pos:start="17:56" pos:end="17:63">sequence</name></name> <operator pos:start="17:65" pos:end="17:65">-</operator> <name pos:start="17:67" pos:end="17:75"><name pos:start="17:67" pos:end="17:69">hls</name><operator pos:start="17:70" pos:end="17:71">-&gt;</operator><name pos:start="17:72" pos:end="17:75">size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:74"><expr pos:start="21:5" pos:end="21:73"><call pos:start="21:5" pos:end="21:73"><name pos:start="21:5" pos:end="21:12">snprintf</name><argument_list pos:start="21:13" pos:end="21:73">(<argument pos:start="21:14" pos:end="21:26"><expr pos:start="21:14" pos:end="21:26"><name pos:start="21:14" pos:end="21:26">temp_filename</name></expr></argument>, <argument pos:start="21:29" pos:end="21:49"><expr pos:start="21:29" pos:end="21:49"><sizeof pos:start="21:29" pos:end="21:49">sizeof<argument_list pos:start="21:35" pos:end="21:49">(<argument pos:start="21:36" pos:end="21:48"><expr pos:start="21:36" pos:end="21:48"><name pos:start="21:36" pos:end="21:48">temp_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="21:52" pos:end="21:59"><expr pos:start="21:52" pos:end="21:59"><literal type="string" pos:start="21:52" pos:end="21:59">"%s.tmp"</literal></expr></argument>, <argument pos:start="21:62" pos:end="21:72"><expr pos:start="21:62" pos:end="21:72"><name pos:start="21:62" pos:end="21:72"><name pos:start="21:62" pos:end="21:62">s</name><operator pos:start="21:63" pos:end="21:64">-&gt;</operator><name pos:start="21:65" pos:end="21:72">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:18"><if pos:start="23:5" pos:end="27:18">if <condition pos:start="23:8" pos:end="25:61">(<expr pos:start="23:9" pos:end="25:60"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:12">ret</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="25:55"><name pos:start="23:16" pos:end="23:25">avio_open2</name><argument_list pos:start="23:26" pos:end="25:55">(<argument pos:start="23:27" pos:end="23:30"><expr pos:start="23:27" pos:end="23:30"><operator pos:start="23:27" pos:end="23:27">&amp;</operator><name pos:start="23:28" pos:end="23:30">out</name></expr></argument>, <argument pos:start="23:33" pos:end="23:45"><expr pos:start="23:33" pos:end="23:45"><name pos:start="23:33" pos:end="23:45">temp_filename</name></expr></argument>, <argument pos:start="23:48" pos:end="23:62"><expr pos:start="23:48" pos:end="23:62"><name pos:start="23:48" pos:end="23:62">AVIO_FLAG_WRITE</name></expr></argument>,

                          <argument pos:start="25:27" pos:end="25:48"><expr pos:start="25:27" pos:end="25:48"><operator pos:start="25:27" pos:end="25:27">&amp;</operator><name pos:start="25:28" pos:end="25:48"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:48">interrupt_callback</name></name></expr></argument>, <argument pos:start="25:51" pos:end="25:54"><expr pos:start="25:51" pos:end="25:54"><name pos:start="25:51" pos:end="25:54">NULL</name></expr></argument>)</argument_list></call><operator pos:start="25:56" pos:end="25:56">)</operator> <operator pos:start="25:58" pos:end="25:58">&lt;</operator> <literal type="number" pos:start="25:60" pos:end="25:60">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <goto pos:start="27:9" pos:end="27:18">goto <name pos:start="27:14" pos:end="27:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="31:5" pos:end="37:5">for <control pos:start="31:9" pos:end="31:43">(<init pos:start="31:10" pos:end="31:24"><expr pos:start="31:10" pos:end="31:23"><name pos:start="31:10" pos:end="31:11">en</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:23"><name pos:start="31:15" pos:end="31:17">hls</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:23">list</name></name></expr>;</init> <condition pos:start="31:26" pos:end="31:28"><expr pos:start="31:26" pos:end="31:27"><name pos:start="31:26" pos:end="31:27">en</name></expr>;</condition> <incr pos:start="31:30" pos:end="31:42"><expr pos:start="31:30" pos:end="31:42"><name pos:start="31:30" pos:end="31:31">en</name> <operator pos:start="31:33" pos:end="31:33">=</operator> <name pos:start="31:35" pos:end="31:42"><name pos:start="31:35" pos:end="31:36">en</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:42">next</name></name></expr></incr>)</control> <block pos:start="31:45" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:43">

        <if_stmt pos:start="33:9" pos:end="35:43"><if pos:start="33:9" pos:end="35:43">if <condition pos:start="33:12" pos:end="33:43">(<expr pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:27">target_duration</name> <operator pos:start="33:29" pos:end="33:29">&lt;</operator> <name pos:start="33:31" pos:end="33:42"><name pos:start="33:31" pos:end="33:32">en</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:42">duration</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:43"><block_content pos:start="35:13" pos:end="35:43">

            <expr_stmt pos:start="35:13" pos:end="35:43"><expr pos:start="35:13" pos:end="35:42"><name pos:start="35:13" pos:end="35:27">target_duration</name> <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:42"><name pos:start="35:31" pos:end="35:32">en</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:42">duration</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><call pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:15">avio_printf</name><argument_list pos:start="41:16" pos:end="41:33">(<argument pos:start="41:17" pos:end="41:19"><expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">out</name></expr></argument>, <argument pos:start="41:22" pos:end="41:32"><expr pos:start="41:22" pos:end="41:32"><literal type="string" pos:start="41:22" pos:end="41:32">"#EXTM3U\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:58"><expr pos:start="43:5" pos:end="43:57"><call pos:start="43:5" pos:end="43:57"><name pos:start="43:5" pos:end="43:15">avio_printf</name><argument_list pos:start="43:16" pos:end="43:57">(<argument pos:start="43:17" pos:end="43:19"><expr pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">out</name></expr></argument>, <argument pos:start="43:22" pos:end="43:42"><expr pos:start="43:22" pos:end="43:42"><literal type="string" pos:start="43:22" pos:end="43:42">"#EXT-X-VERSION:%d\n"</literal></expr></argument>, <argument pos:start="43:45" pos:end="43:56"><expr pos:start="43:45" pos:end="43:56"><name pos:start="43:45" pos:end="43:56"><name pos:start="43:45" pos:end="43:47">hls</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:56">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:53">(<expr pos:start="45:9" pos:end="45:52"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:11">hls</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:23">allowcache</name></name> <operator pos:start="45:25" pos:end="45:26">==</operator> <literal type="number" pos:start="45:28" pos:end="45:28">0</literal> <operator pos:start="45:30" pos:end="45:31">||</operator> <name pos:start="45:33" pos:end="45:47"><name pos:start="45:33" pos:end="45:35">hls</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:47">allowcache</name></name> <operator pos:start="45:49" pos:end="45:50">==</operator> <literal type="number" pos:start="45:52" pos:end="45:52">1</literal></expr>)</condition> <block pos:start="45:55" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:89">

        <expr_stmt pos:start="47:9" pos:end="47:89"><expr pos:start="47:9" pos:end="47:88"><call pos:start="47:9" pos:end="47:88"><name pos:start="47:9" pos:end="47:19">avio_printf</name><argument_list pos:start="47:20" pos:end="47:88">(<argument pos:start="47:21" pos:end="47:23"><expr pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:23">out</name></expr></argument>, <argument pos:start="47:26" pos:end="47:50"><expr pos:start="47:26" pos:end="47:50"><literal type="string" pos:start="47:26" pos:end="47:50">"#EXT-X-ALLOW-CACHE:%s\n"</literal></expr></argument>, <argument pos:start="47:53" pos:end="47:87"><expr pos:start="47:53" pos:end="47:87"><ternary pos:start="47:53" pos:end="47:87"><condition pos:start="47:53" pos:end="47:74"><expr pos:start="47:53" pos:end="47:72"><name pos:start="47:53" pos:end="47:67"><name pos:start="47:53" pos:end="47:55">hls</name><operator pos:start="47:56" pos:end="47:57">-&gt;</operator><name pos:start="47:58" pos:end="47:67">allowcache</name></name> <operator pos:start="47:69" pos:end="47:70">==</operator> <literal type="number" pos:start="47:72" pos:end="47:72">0</literal></expr> ?</condition><then pos:start="47:76" pos:end="47:79"> <expr pos:start="47:76" pos:end="47:79"><literal type="string" pos:start="47:76" pos:end="47:79">"NO"</literal></expr> </then><else pos:start="47:81" pos:end="47:87">: <expr pos:start="47:83" pos:end="47:87"><literal type="string" pos:start="47:83" pos:end="47:87">"YES"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="55:45"><expr pos:start="51:5" pos:end="55:44"><call pos:start="51:5" pos:end="55:44"><name pos:start="51:5" pos:end="51:15">avio_printf</name><argument_list pos:start="51:16" pos:end="55:44">(<argument pos:start="51:17" pos:end="51:19"><expr pos:start="51:17" pos:end="51:19"><name pos:start="51:17" pos:end="51:19">out</name></expr></argument>, <argument pos:start="51:22" pos:end="51:56"><expr pos:start="51:22" pos:end="51:56"><literal type="string" pos:start="51:22" pos:end="51:46">"#EXT-X-TARGETDURATION:%"</literal><name pos:start="51:47" pos:end="51:52">PRId64</name><literal type="string" pos:start="51:53" pos:end="51:56">"\n"</literal></expr></argument>,

                <argument pos:start="53:17" pos:end="55:43"><expr pos:start="53:17" pos:end="55:43"><call pos:start="53:17" pos:end="55:43"><name pos:start="53:17" pos:end="53:30">av_rescale_rnd</name><argument_list pos:start="53:31" pos:end="55:43">(<argument pos:start="53:32" pos:end="53:46"><expr pos:start="53:32" pos:end="53:46"><name pos:start="53:32" pos:end="53:46">target_duration</name></expr></argument>, <argument pos:start="53:49" pos:end="53:49"><expr pos:start="53:49" pos:end="53:49"><literal type="number" pos:start="53:49" pos:end="53:49">1</literal></expr></argument>, <argument pos:start="53:52" pos:end="53:63"><expr pos:start="53:52" pos:end="53:63"><name pos:start="53:52" pos:end="53:63">AV_TIME_BASE</name></expr></argument>,

                               <argument pos:start="55:32" pos:end="55:42"><expr pos:start="55:32" pos:end="55:42"><name pos:start="55:32" pos:end="55:42">AV_ROUND_UP</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:68"><expr pos:start="57:5" pos:end="57:67"><call pos:start="57:5" pos:end="57:67"><name pos:start="57:5" pos:end="57:15">avio_printf</name><argument_list pos:start="57:16" pos:end="57:67">(<argument pos:start="57:17" pos:end="57:19"><expr pos:start="57:17" pos:end="57:19"><name pos:start="57:17" pos:end="57:19">out</name></expr></argument>, <argument pos:start="57:22" pos:end="57:56"><expr pos:start="57:22" pos:end="57:56"><literal type="string" pos:start="57:22" pos:end="57:46">"#EXT-X-MEDIA-SEQUENCE:%"</literal><name pos:start="57:47" pos:end="57:52">PRId64</name><literal type="string" pos:start="57:53" pos:end="57:56">"\n"</literal></expr></argument>, <argument pos:start="57:59" pos:end="57:66"><expr pos:start="57:59" pos:end="57:66"><name pos:start="57:59" pos:end="57:66">sequence</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="63:21"><expr pos:start="61:5" pos:end="63:20"><call pos:start="61:5" pos:end="63:20"><name pos:start="61:5" pos:end="61:10">av_log</name><argument_list pos:start="61:11" pos:end="63:20">(<argument pos:start="61:12" pos:end="61:12"><expr pos:start="61:12" pos:end="61:12"><name pos:start="61:12" pos:end="61:12">s</name></expr></argument>, <argument pos:start="61:15" pos:end="61:28"><expr pos:start="61:15" pos:end="61:28"><name pos:start="61:15" pos:end="61:28">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="61:31" pos:end="61:64"><expr pos:start="61:31" pos:end="61:64"><literal type="string" pos:start="61:31" pos:end="61:54">"EXT-X-MEDIA-SEQUENCE:%"</literal><name pos:start="61:55" pos:end="61:60">PRId64</name><literal type="string" pos:start="61:61" pos:end="61:64">"\n"</literal></expr></argument>,

           <argument pos:start="63:12" pos:end="63:19"><expr pos:start="63:12" pos:end="63:19"><name pos:start="63:12" pos:end="63:19">sequence</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="67:5" pos:end="87:5">for <control pos:start="67:9" pos:end="67:43">(<init pos:start="67:10" pos:end="67:24"><expr pos:start="67:10" pos:end="67:23"><name pos:start="67:10" pos:end="67:11">en</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <name pos:start="67:15" pos:end="67:23"><name pos:start="67:15" pos:end="67:17">hls</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:23">list</name></name></expr>;</init> <condition pos:start="67:26" pos:end="67:28"><expr pos:start="67:26" pos:end="67:27"><name pos:start="67:26" pos:end="67:27">en</name></expr>;</condition> <incr pos:start="67:30" pos:end="67:42"><expr pos:start="67:30" pos:end="67:42"><name pos:start="67:30" pos:end="67:31">en</name> <operator pos:start="67:33" pos:end="67:33">=</operator> <name pos:start="67:35" pos:end="67:42"><name pos:start="67:35" pos:end="67:36">en</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:42">next</name></name></expr></incr>)</control> <block pos:start="67:45" pos:end="87:5">{<block_content pos:start="69:9" pos:end="85:43">

        <if_stmt pos:start="69:9" pos:end="79:67"><if pos:start="69:9" pos:end="73:61">if <condition pos:start="69:12" pos:end="69:29">(<expr pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:15">hls</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:24">version</name></name> <operator pos:start="69:26" pos:end="69:26">&gt;</operator> <literal type="number" pos:start="69:28" pos:end="69:28">2</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="73:61"><block_content pos:start="71:13" pos:end="73:61">

            <expr_stmt pos:start="71:13" pos:end="73:61"><expr pos:start="71:13" pos:end="73:60"><call pos:start="71:13" pos:end="73:60"><name pos:start="71:13" pos:end="71:23">avio_printf</name><argument_list pos:start="71:24" pos:end="73:60">(<argument pos:start="71:25" pos:end="71:27"><expr pos:start="71:25" pos:end="71:27"><name pos:start="71:25" pos:end="71:27">out</name></expr></argument>, <argument pos:start="71:30" pos:end="71:43"><expr pos:start="71:30" pos:end="71:43"><literal type="string" pos:start="71:30" pos:end="71:43">"#EXTINF:%f\n"</literal></expr></argument>,

                        <argument pos:start="73:25" pos:end="73:59"><expr pos:start="73:25" pos:end="73:59"><operator pos:start="73:25" pos:end="73:25">(</operator><name pos:start="73:26" pos:end="73:31">double</name><operator pos:start="73:32" pos:end="73:32">)</operator><name pos:start="73:33" pos:end="73:44"><name pos:start="73:33" pos:end="73:34">en</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:44">duration</name></name> <operator pos:start="73:46" pos:end="73:46">/</operator> <name pos:start="73:48" pos:end="73:59">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="75:9" pos:end="79:67">else<block type="pseudo" pos:start="77:13" pos:end="79:67"><block_content pos:start="77:13" pos:end="79:67">

            <expr_stmt pos:start="77:13" pos:end="79:67"><expr pos:start="77:13" pos:end="79:66"><call pos:start="77:13" pos:end="79:66"><name pos:start="77:13" pos:end="77:23">avio_printf</name><argument_list pos:start="77:24" pos:end="79:66">(<argument pos:start="77:25" pos:end="77:27"><expr pos:start="77:25" pos:end="77:27"><name pos:start="77:25" pos:end="77:27">out</name></expr></argument>, <argument pos:start="77:30" pos:end="77:51"><expr pos:start="77:30" pos:end="77:51"><literal type="string" pos:start="77:30" pos:end="77:40">"#EXTINF:%"</literal><name pos:start="77:41" pos:end="77:46">PRId64</name><literal type="string" pos:start="77:47" pos:end="77:51">",\n"</literal></expr></argument>,

                        <argument pos:start="79:25" pos:end="79:65"><expr pos:start="79:25" pos:end="79:65"><call pos:start="79:25" pos:end="79:65"><name pos:start="79:25" pos:end="79:34">av_rescale</name><argument_list pos:start="79:35" pos:end="79:65">(<argument pos:start="79:36" pos:end="79:47"><expr pos:start="79:36" pos:end="79:47"><name pos:start="79:36" pos:end="79:47"><name pos:start="79:36" pos:end="79:37">en</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:47">duration</name></name></expr></argument>, <argument pos:start="79:50" pos:end="79:50"><expr pos:start="79:50" pos:end="79:50"><literal type="number" pos:start="79:50" pos:end="79:50">1</literal></expr></argument>, <argument pos:start="79:53" pos:end="79:64"><expr pos:start="79:53" pos:end="79:64"><name pos:start="79:53" pos:end="79:64">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="81:9" pos:end="83:49"><if pos:start="81:9" pos:end="83:49">if <condition pos:start="81:12" pos:end="81:25">(<expr pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:15">hls</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:24">baseurl</name></name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:49"><block_content pos:start="83:13" pos:end="83:49">

            <expr_stmt pos:start="83:13" pos:end="83:49"><expr pos:start="83:13" pos:end="83:48"><call pos:start="83:13" pos:end="83:48"><name pos:start="83:13" pos:end="83:23">avio_printf</name><argument_list pos:start="83:24" pos:end="83:48">(<argument pos:start="83:25" pos:end="83:27"><expr pos:start="83:25" pos:end="83:27"><name pos:start="83:25" pos:end="83:27">out</name></expr></argument>, <argument pos:start="83:30" pos:end="83:33"><expr pos:start="83:30" pos:end="83:33"><literal type="string" pos:start="83:30" pos:end="83:33">"%s"</literal></expr></argument>, <argument pos:start="83:36" pos:end="83:47"><expr pos:start="83:36" pos:end="83:47"><name pos:start="83:36" pos:end="83:47"><name pos:start="83:36" pos:end="83:38">hls</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:47">baseurl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:43"><expr pos:start="85:9" pos:end="85:42"><call pos:start="85:9" pos:end="85:42"><name pos:start="85:9" pos:end="85:19">avio_printf</name><argument_list pos:start="85:20" pos:end="85:42">(<argument pos:start="85:21" pos:end="85:23"><expr pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:23">out</name></expr></argument>, <argument pos:start="85:26" pos:end="85:31"><expr pos:start="85:26" pos:end="85:31"><literal type="string" pos:start="85:26" pos:end="85:31">"%s\n"</literal></expr></argument>, <argument pos:start="85:34" pos:end="85:41"><expr pos:start="85:34" pos:end="85:41"><name pos:start="85:34" pos:end="85:41"><name pos:start="85:34" pos:end="85:35">en</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:41">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="91:5" pos:end="93:45"><if pos:start="91:5" pos:end="93:45">if <condition pos:start="91:8" pos:end="91:13">(<expr pos:start="91:9" pos:end="91:12"><name pos:start="91:9" pos:end="91:12">last</name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:45"><block_content pos:start="93:9" pos:end="93:45">

        <expr_stmt pos:start="93:9" pos:end="93:45"><expr pos:start="93:9" pos:end="93:44"><call pos:start="93:9" pos:end="93:44"><name pos:start="93:9" pos:end="93:19">avio_printf</name><argument_list pos:start="93:20" pos:end="93:44">(<argument pos:start="93:21" pos:end="93:23"><expr pos:start="93:21" pos:end="93:23"><name pos:start="93:21" pos:end="93:23">out</name></expr></argument>, <argument pos:start="93:26" pos:end="93:43"><expr pos:start="93:26" pos:end="93:43"><literal type="string" pos:start="93:26" pos:end="93:43">"#EXT-X-ENDLIST\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="97:1" pos:end="97:5"><name pos:start="97:1" pos:end="97:4">fail</name>:</label>

    <expr_stmt pos:start="99:5" pos:end="99:22"><expr pos:start="99:5" pos:end="99:21"><call pos:start="99:5" pos:end="99:21"><name pos:start="99:5" pos:end="99:15">avio_closep</name><argument_list pos:start="99:16" pos:end="99:21">(<argument pos:start="99:17" pos:end="99:20"><expr pos:start="99:17" pos:end="99:20"><operator pos:start="99:17" pos:end="99:17">&amp;</operator><name pos:start="99:18" pos:end="99:20">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="103:46"><if pos:start="101:5" pos:end="103:46">if <condition pos:start="101:8" pos:end="101:17">(<expr pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:14">&gt;=</operator> <literal type="number" pos:start="101:16" pos:end="101:16">0</literal></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:46"><block_content pos:start="103:9" pos:end="103:46">

        <expr_stmt pos:start="103:9" pos:end="103:46"><expr pos:start="103:9" pos:end="103:45"><call pos:start="103:9" pos:end="103:45"><name pos:start="103:9" pos:end="103:17">ff_rename</name><argument_list pos:start="103:18" pos:end="103:45">(<argument pos:start="103:19" pos:end="103:31"><expr pos:start="103:19" pos:end="103:31"><name pos:start="103:19" pos:end="103:31">temp_filename</name></expr></argument>, <argument pos:start="103:34" pos:end="103:44"><expr pos:start="103:34" pos:end="103:44"><name pos:start="103:34" pos:end="103:44"><name pos:start="103:34" pos:end="103:34">s</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:44">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="105:5" pos:end="105:15">return <expr pos:start="105:12" pos:end="105:14"><name pos:start="105:12" pos:end="105:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
