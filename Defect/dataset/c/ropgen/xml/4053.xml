<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4053.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">cmd_read_cd</name><parameter_list pos:start="1:24" pos:end="1:50">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:32">IDEState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:44">uint8_t</name><modifier pos:start="1:45" pos:end="1:45">*</modifier></type> <name pos:start="1:47" pos:end="1:49">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:5">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">nb_sectors</name></decl>, <decl pos:start="5:21" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:23">lba</name></decl>, <decl pos:start="5:26" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:26" pos:end="5:41">transfer_request</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:57"><expr pos:start="9:5" pos:end="9:56"><name pos:start="9:5" pos:end="9:14">nb_sectors</name> <operator pos:start="9:16" pos:end="9:16">=</operator> <operator pos:start="9:18" pos:end="9:18">(</operator><name pos:start="9:19" pos:end="9:24"><name pos:start="9:19" pos:end="9:21">buf</name><index pos:start="9:22" pos:end="9:24">[<expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">6</literal></expr>]</index></name> <operator pos:start="9:26" pos:end="9:27">&lt;&lt;</operator> <literal type="number" pos:start="9:29" pos:end="9:30">16</literal><operator pos:start="9:31" pos:end="9:31">)</operator> <operator pos:start="9:33" pos:end="9:33">|</operator> <operator pos:start="9:35" pos:end="9:35">(</operator><name pos:start="9:36" pos:end="9:41"><name pos:start="9:36" pos:end="9:38">buf</name><index pos:start="9:39" pos:end="9:41">[<expr pos:start="9:40" pos:end="9:40"><literal type="number" pos:start="9:40" pos:end="9:40">7</literal></expr>]</index></name> <operator pos:start="9:43" pos:end="9:44">&lt;&lt;</operator> <literal type="number" pos:start="9:46" pos:end="9:46">8</literal><operator pos:start="9:47" pos:end="9:47">)</operator> <operator pos:start="9:49" pos:end="9:49">|</operator> <name pos:start="9:51" pos:end="9:56"><name pos:start="9:51" pos:end="9:53">buf</name><index pos:start="9:54" pos:end="9:56">[<expr pos:start="9:55" pos:end="9:55"><literal type="number" pos:start="9:55" pos:end="9:55">8</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:7">lba</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:31"><name pos:start="11:11" pos:end="11:22">ube32_to_cpu</name><argument_list pos:start="11:23" pos:end="11:31">(<argument pos:start="11:24" pos:end="11:30"><expr pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:26">buf</name> <operator pos:start="11:28" pos:end="11:28">+</operator> <literal type="number" pos:start="11:30" pos:end="11:30">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:24">(<expr pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:18">nb_sectors</name> <operator pos:start="15:20" pos:end="15:21">==</operator> <literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>)</condition> <block pos:start="15:26" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><call pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:24">ide_atapi_cmd_ok</name><argument_list pos:start="17:25" pos:end="17:27">(<argument pos:start="17:26" pos:end="17:26"><expr pos:start="17:26" pos:end="17:26"><name pos:start="17:26" pos:end="17:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:20">transfer_request</name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:26">buf</name><index pos:start="25:27" pos:end="25:29">[<expr pos:start="25:28" pos:end="25:28"><literal type="number" pos:start="25:28" pos:end="25:28">9</literal></expr>]</index></name></expr>;</expr_stmt>

    <switch pos:start="27:5" pos:end="61:5">switch<condition pos:start="27:11" pos:end="27:35">(<expr pos:start="27:12" pos:end="27:34"><name pos:start="27:12" pos:end="27:27">transfer_request</name> <operator pos:start="27:29" pos:end="27:29">&amp;</operator> <literal type="number" pos:start="27:31" pos:end="27:34">0xf8</literal></expr>)</condition> <block pos:start="27:37" pos:end="61:5">{<block_content pos:start="29:5" pos:end="59:14">

    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><literal type="number" pos:start="29:10" pos:end="29:13">0x00</literal></expr>:</case>

        <comment type="block" pos:start="31:9" pos:end="31:21">/* nothing */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:28"><expr pos:start="33:9" pos:end="33:27"><call pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:24">ide_atapi_cmd_ok</name><argument_list pos:start="33:25" pos:end="33:27">(<argument pos:start="33:26" pos:end="33:26"><expr pos:start="33:26" pos:end="33:26"><name pos:start="33:26" pos:end="33:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><literal type="number" pos:start="37:10" pos:end="37:13">0x10</literal></expr>:</case>

        <comment type="block" pos:start="39:9" pos:end="39:25">/* normal read */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:53"><expr pos:start="41:9" pos:end="41:52"><call pos:start="41:9" pos:end="41:52"><name pos:start="41:9" pos:end="41:26">ide_atapi_cmd_read</name><argument_list pos:start="41:27" pos:end="41:52">(<argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">s</name></expr></argument>, <argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">lba</name></expr></argument>, <argument pos:start="41:36" pos:end="41:45"><expr pos:start="41:36" pos:end="41:45"><name pos:start="41:36" pos:end="41:45">nb_sectors</name></expr></argument>, <argument pos:start="41:48" pos:end="41:51"><expr pos:start="41:48" pos:end="41:51"><literal type="number" pos:start="41:48" pos:end="41:51">2048</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:14">case <expr pos:start="45:10" pos:end="45:13"><literal type="number" pos:start="45:10" pos:end="45:13">0xf8</literal></expr>:</case>

        <comment type="block" pos:start="47:9" pos:end="47:27">/* read all data */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:53"><expr pos:start="49:9" pos:end="49:52"><call pos:start="49:9" pos:end="49:52"><name pos:start="49:9" pos:end="49:26">ide_atapi_cmd_read</name><argument_list pos:start="49:27" pos:end="49:52">(<argument pos:start="49:28" pos:end="49:28"><expr pos:start="49:28" pos:end="49:28"><name pos:start="49:28" pos:end="49:28">s</name></expr></argument>, <argument pos:start="49:31" pos:end="49:33"><expr pos:start="49:31" pos:end="49:33"><name pos:start="49:31" pos:end="49:33">lba</name></expr></argument>, <argument pos:start="49:36" pos:end="49:45"><expr pos:start="49:36" pos:end="49:45"><name pos:start="49:36" pos:end="49:45">nb_sectors</name></expr></argument>, <argument pos:start="49:48" pos:end="49:51"><expr pos:start="49:48" pos:end="49:51"><literal type="number" pos:start="49:48" pos:end="49:51">2352</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <default pos:start="53:5" pos:end="53:12">default:</default>

        <expr_stmt pos:start="55:9" pos:end="57:57"><expr pos:start="55:9" pos:end="57:56"><call pos:start="55:9" pos:end="57:56"><name pos:start="55:9" pos:end="55:27">ide_atapi_cmd_error</name><argument_list pos:start="55:28" pos:end="57:56">(<argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">s</name></expr></argument>, <argument pos:start="55:32" pos:end="55:46"><expr pos:start="55:32" pos:end="55:46"><name pos:start="55:32" pos:end="55:46">ILLEGAL_REQUEST</name></expr></argument>,

                            <argument pos:start="57:29" pos:end="57:55"><expr pos:start="57:29" pos:end="57:55"><name pos:start="57:29" pos:end="57:55">ASC_INV_FIELD_IN_CMD_PACKET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
