<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5343.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">find_debugfs</name><parameter_list pos:start="1:24" pos:end="1:38">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">char</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:37">debugfs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:18"><name pos:start="5:10" pos:end="5:13">type</name><index pos:start="5:14" pos:end="5:18">[<expr pos:start="5:15" pos:end="5:17"><literal type="number" pos:start="5:15" pos:end="5:17">100</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">FILE</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:12">fp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:6">fp</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <call pos:start="11:10" pos:end="11:35"><name pos:start="11:10" pos:end="11:14">fopen</name><argument_list pos:start="11:15" pos:end="11:35">(<argument pos:start="11:16" pos:end="11:29"><expr pos:start="11:16" pos:end="11:29"><literal type="string" pos:start="11:16" pos:end="11:29">"/proc/mounts"</literal></expr></argument>, <argument pos:start="11:32" pos:end="11:34"><expr pos:start="11:32" pos:end="11:34"><literal type="string" pos:start="11:32" pos:end="11:34">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:19">(<expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:10">fp</name> <operator pos:start="13:12" pos:end="13:13">==</operator> <name pos:start="13:15" pos:end="13:18">NULL</name></expr>)</condition> <block pos:start="13:21" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="21:5" pos:end="31:5">while <condition pos:start="21:11" pos:end="23:38">(<expr pos:start="21:12" pos:end="23:37"><call pos:start="21:12" pos:end="23:32"><name pos:start="21:12" pos:end="21:17">fscanf</name><argument_list pos:start="21:18" pos:end="23:32">(<argument pos:start="21:19" pos:end="21:20"><expr pos:start="21:19" pos:end="21:20"><name pos:start="21:19" pos:end="21:20">fp</name></expr></argument>, <argument pos:start="21:23" pos:end="21:66"><expr pos:start="21:23" pos:end="21:66"><literal type="string" pos:start="21:23" pos:end="21:29">"%*s %"</literal> <call pos:start="21:31" pos:end="21:43"><name pos:start="21:31" pos:end="21:33">STR</name><argument_list pos:start="21:34" pos:end="21:43">(<argument pos:start="21:35" pos:end="21:42"><expr pos:start="21:35" pos:end="21:42"><name pos:start="21:35" pos:end="21:42">PATH_MAX</name></expr></argument>)</argument_list></call> <literal type="string" pos:start="21:45" pos:end="21:66">"s %99s %*s %*d %*d\n"</literal></expr></argument>,

                  <argument pos:start="23:19" pos:end="23:25"><expr pos:start="23:19" pos:end="23:25"><name pos:start="23:19" pos:end="23:25">debugfs</name></expr></argument>, <argument pos:start="23:28" pos:end="23:31"><expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">type</name></expr></argument>)</argument_list></call> <operator pos:start="23:34" pos:end="23:35">==</operator> <literal type="number" pos:start="23:37" pos:end="23:37">2</literal></expr>)</condition> <block pos:start="23:40" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:9">

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:41">(<expr pos:start="25:13" pos:end="25:40"><call pos:start="25:13" pos:end="25:35"><name pos:start="25:13" pos:end="25:18">strcmp</name><argument_list pos:start="25:19" pos:end="25:35">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">type</name></expr></argument>, <argument pos:start="25:26" pos:end="25:34"><expr pos:start="25:26" pos:end="25:34"><literal type="string" pos:start="25:26" pos:end="25:34">"debugfs"</literal></expr></argument>)</argument_list></call> <operator pos:start="25:37" pos:end="25:38">==</operator> <literal type="number" pos:start="25:40" pos:end="25:40">0</literal></expr>)</condition> <block pos:start="25:43" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="33:5" pos:end="33:15"><expr pos:start="33:5" pos:end="33:14"><call pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:10">fclose</name><argument_list pos:start="33:11" pos:end="33:14">(<argument pos:start="33:12" pos:end="33:13"><expr pos:start="33:12" pos:end="33:13"><name pos:start="33:12" pos:end="33:13">fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:37">(<expr pos:start="37:9" pos:end="37:36"><call pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:14">strcmp</name><argument_list pos:start="37:15" pos:end="37:31">(<argument pos:start="37:16" pos:end="37:19"><expr pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:19">type</name></expr></argument>, <argument pos:start="37:22" pos:end="37:30"><expr pos:start="37:22" pos:end="37:30"><literal type="string" pos:start="37:22" pos:end="37:30">"debugfs"</literal></expr></argument>)</argument_list></call> <operator pos:start="37:33" pos:end="37:34">!=</operator> <literal type="number" pos:start="37:36" pos:end="37:36">0</literal></expr>)</condition> <block pos:start="37:39" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:17">

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
