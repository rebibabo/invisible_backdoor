<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8069.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:5">Slirp</name> <modifier pos:start="1:7" pos:end="1:7">*</modifier></type><name pos:start="1:8" pos:end="1:17">slirp_init</name><parameter_list pos:start="1:18" pos:end="9:59">(<parameter pos:start="1:19" pos:end="1:32"><decl pos:start="1:19" pos:end="1:32"><type pos:start="1:19" pos:end="1:32"><name pos:start="1:19" pos:end="1:21">int</name></type> <name pos:start="1:23" pos:end="1:32">restricted</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:57"><decl pos:start="1:35" pos:end="1:57"><type pos:start="1:35" pos:end="1:57"><name pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:40">struct</name> <name pos:start="1:42" pos:end="1:48">in_addr</name></name></type> <name pos:start="1:50" pos:end="1:57">vnetwork</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:41"><decl pos:start="3:19" pos:end="3:41"><type pos:start="3:19" pos:end="3:41"><name pos:start="3:19" pos:end="3:32"><name pos:start="3:19" pos:end="3:24">struct</name> <name pos:start="3:26" pos:end="3:32">in_addr</name></name></type> <name pos:start="3:34" pos:end="3:41">vnetmask</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:63"><decl pos:start="3:44" pos:end="3:63"><type pos:start="3:44" pos:end="3:63"><name pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:49">struct</name> <name pos:start="3:51" pos:end="3:57">in_addr</name></name></type> <name pos:start="3:59" pos:end="3:63">vhost</name></decl></parameter>,

                  <parameter pos:start="5:19" pos:end="5:39"><decl pos:start="5:19" pos:end="5:39"><type pos:start="5:19" pos:end="5:39"><specifier pos:start="5:19" pos:end="5:23">const</specifier> <name pos:start="5:25" pos:end="5:28">char</name> <modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:39">vhostname</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:62"><decl pos:start="5:42" pos:end="5:62"><type pos:start="5:42" pos:end="5:62"><specifier pos:start="5:42" pos:end="5:46">const</specifier> <name pos:start="5:48" pos:end="5:51">char</name> <modifier pos:start="5:53" pos:end="5:53">*</modifier></type><name pos:start="5:54" pos:end="5:62">tftp_path</name></decl></parameter>,

                  <parameter pos:start="7:19" pos:end="7:38"><decl pos:start="7:19" pos:end="7:38"><type pos:start="7:19" pos:end="7:38"><specifier pos:start="7:19" pos:end="7:23">const</specifier> <name pos:start="7:25" pos:end="7:28">char</name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:38">bootfile</name></decl></parameter>, <parameter pos:start="7:41" pos:end="7:66"><decl pos:start="7:41" pos:end="7:66"><type pos:start="7:41" pos:end="7:66"><name pos:start="7:41" pos:end="7:54"><name pos:start="7:41" pos:end="7:46">struct</name> <name pos:start="7:48" pos:end="7:54">in_addr</name></name></type> <name pos:start="7:56" pos:end="7:66">vdhcp_start</name></decl></parameter>,

                  <parameter pos:start="9:19" pos:end="9:44"><decl pos:start="9:19" pos:end="9:44"><type pos:start="9:19" pos:end="9:44"><name pos:start="9:19" pos:end="9:32"><name pos:start="9:19" pos:end="9:24">struct</name> <name pos:start="9:26" pos:end="9:32">in_addr</name></name></type> <name pos:start="9:34" pos:end="9:44">vnameserver</name></decl></parameter>, <parameter pos:start="9:47" pos:end="9:58"><decl pos:start="9:47" pos:end="9:58"><type pos:start="9:47" pos:end="9:58"><name pos:start="9:47" pos:end="9:50">void</name> <modifier pos:start="9:52" pos:end="9:52">*</modifier></type><name pos:start="9:53" pos:end="9:58">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="83:1">{<block_content pos:start="13:5" pos:end="81:17">

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Slirp</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:16">slirp</name> <init pos:start="13:18" pos:end="13:46">= <expr pos:start="13:20" pos:end="13:46"><call pos:start="13:20" pos:end="13:46"><name pos:start="13:20" pos:end="13:31">qemu_mallocz</name><argument_list pos:start="13:32" pos:end="13:46">(<argument pos:start="13:33" pos:end="13:45"><expr pos:start="13:33" pos:end="13:45"><sizeof pos:start="13:33" pos:end="13:45">sizeof<argument_list pos:start="13:39" pos:end="13:45">(<argument pos:start="13:40" pos:end="13:44"><expr pos:start="13:40" pos:end="13:44"><name pos:start="13:40" pos:end="13:44">Slirp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><call pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:19">slirp_init_once</name><argument_list pos:start="17:20" pos:end="17:21">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:9">slirp</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:21">restricted</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <name pos:start="21:25" pos:end="21:34">restricted</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><call pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:11">if_init</name><argument_list pos:start="25:12" pos:end="25:18">(<argument pos:start="25:13" pos:end="25:17"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:17">slirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:19"><expr pos:start="27:5" pos:end="27:18"><call pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:11">ip_init</name><argument_list pos:start="27:12" pos:end="27:18">(<argument pos:start="27:13" pos:end="27:17"><expr pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:17">slirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:50">/* Initialise mbufs *after* setting the MTU */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><call pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:10">m_init</name><argument_list pos:start="33:11" pos:end="33:17">(<argument pos:start="33:12" pos:end="33:16"><expr pos:start="33:12" pos:end="33:16"><name pos:start="33:12" pos:end="33:16">slirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:9">slirp</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:24">vnetwork_addr</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:35">vnetwork</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:36"><expr pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:9">slirp</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:24">vnetwork_mask</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <name pos:start="39:28" pos:end="39:35">vnetmask</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:9">slirp</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:21">vhost_addr</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:29">vhost</name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:18">(<expr pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:17">vhostname</name></expr>)</condition> <block pos:start="43:20" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:27">

        <expr_stmt pos:start="45:9" pos:end="47:27"><expr pos:start="45:9" pos:end="47:26"><call pos:start="45:9" pos:end="47:26"><name pos:start="45:9" pos:end="45:15">pstrcpy</name><argument_list pos:start="45:16" pos:end="47:26">(<argument pos:start="45:17" pos:end="45:38"><expr pos:start="45:17" pos:end="45:38"><name pos:start="45:17" pos:end="45:38"><name pos:start="45:17" pos:end="45:21">slirp</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:38">client_hostname</name></name></expr></argument>, <argument pos:start="45:41" pos:end="45:70"><expr pos:start="45:41" pos:end="45:70"><sizeof pos:start="45:41" pos:end="45:70">sizeof<argument_list pos:start="45:47" pos:end="45:70">(<argument pos:start="45:48" pos:end="45:69"><expr pos:start="45:48" pos:end="45:69"><name pos:start="45:48" pos:end="45:69"><name pos:start="45:48" pos:end="45:52">slirp</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:69">client_hostname</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                <argument pos:start="47:17" pos:end="47:25"><expr pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:25">vhostname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:18">(<expr pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:17">tftp_path</name></expr>)</condition> <block pos:start="51:20" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:52">

        <expr_stmt pos:start="53:9" pos:end="53:52"><expr pos:start="53:9" pos:end="53:51"><name pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:13">slirp</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:26">tftp_prefix</name></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <call pos:start="53:30" pos:end="53:51"><name pos:start="53:30" pos:end="53:40">qemu_strdup</name><argument_list pos:start="53:41" pos:end="53:51">(<argument pos:start="53:42" pos:end="53:50"><expr pos:start="53:42" pos:end="53:50"><name pos:start="53:42" pos:end="53:50">tftp_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:17">(<expr pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:16">bootfile</name></expr>)</condition> <block pos:start="57:19" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:54">

        <expr_stmt pos:start="59:9" pos:end="59:54"><expr pos:start="59:9" pos:end="59:53"><name pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:13">slirp</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:29">bootp_filename</name></name> <operator pos:start="59:31" pos:end="59:31">=</operator> <call pos:start="59:33" pos:end="59:53"><name pos:start="59:33" pos:end="59:43">qemu_strdup</name><argument_list pos:start="59:44" pos:end="59:53">(<argument pos:start="59:45" pos:end="59:52"><expr pos:start="59:45" pos:end="59:52"><name pos:start="59:45" pos:end="59:52">bootfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:41"><expr pos:start="63:5" pos:end="63:40"><name pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:9">slirp</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:26">vdhcp_startaddr</name></name> <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:40">vdhcp_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:42"><expr pos:start="65:5" pos:end="65:41"><name pos:start="65:5" pos:end="65:27"><name pos:start="65:5" pos:end="65:9">slirp</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:27">vnameserver_addr</name></name> <operator pos:start="65:29" pos:end="65:29">=</operator> <name pos:start="65:31" pos:end="65:41">vnameserver</name></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:9">slirp</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:17">opaque</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:26">opaque</name></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:78"><expr pos:start="73:5" pos:end="73:77"><call pos:start="73:5" pos:end="73:77"><name pos:start="73:5" pos:end="73:19">register_savevm</name><argument_list pos:start="73:20" pos:end="73:77">(<argument pos:start="73:21" pos:end="73:27"><expr pos:start="73:21" pos:end="73:27"><literal type="string" pos:start="73:21" pos:end="73:27">"slirp"</literal></expr></argument>, <argument pos:start="73:30" pos:end="73:30"><expr pos:start="73:30" pos:end="73:30"><literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr></argument>, <argument pos:start="73:33" pos:end="73:33"><expr pos:start="73:33" pos:end="73:33"><literal type="number" pos:start="73:33" pos:end="73:33">3</literal></expr></argument>, <argument pos:start="73:36" pos:end="73:51"><expr pos:start="73:36" pos:end="73:51"><name pos:start="73:36" pos:end="73:51">slirp_state_save</name></expr></argument>, <argument pos:start="73:54" pos:end="73:69"><expr pos:start="73:54" pos:end="73:69"><name pos:start="73:54" pos:end="73:69">slirp_state_load</name></expr></argument>, <argument pos:start="73:72" pos:end="73:76"><expr pos:start="73:72" pos:end="73:76"><name pos:start="73:72" pos:end="73:76">slirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:54"><expr pos:start="77:5" pos:end="77:53"><call pos:start="77:5" pos:end="77:53"><name pos:start="77:5" pos:end="77:21">TAILQ_INSERT_TAIL</name><argument_list pos:start="77:22" pos:end="77:53">(<argument pos:start="77:23" pos:end="77:38"><expr pos:start="77:23" pos:end="77:38"><operator pos:start="77:23" pos:end="77:23">&amp;</operator><name pos:start="77:24" pos:end="77:38">slirp_instances</name></expr></argument>, <argument pos:start="77:41" pos:end="77:45"><expr pos:start="77:41" pos:end="77:45"><name pos:start="77:41" pos:end="77:45">slirp</name></expr></argument>, <argument pos:start="77:48" pos:end="77:52"><expr pos:start="77:48" pos:end="77:52"><name pos:start="77:48" pos:end="77:52">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="81:5" pos:end="81:17">return <expr pos:start="81:12" pos:end="81:16"><name pos:start="81:12" pos:end="81:16">slirp</name></expr>;</return>

</block_content>}</block></function>
</unit>
