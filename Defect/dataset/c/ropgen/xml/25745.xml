<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25745.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">dvdsub_decode</name><parameter_list pos:start="1:25" pos:end="5:41">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:35"><decl pos:start="3:26" pos:end="3:35"><type pos:start="3:26" pos:end="3:35"><name pos:start="3:26" pos:end="3:29">void</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:35">data</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:51"><decl pos:start="3:38" pos:end="3:51"><type pos:start="3:38" pos:end="3:51"><name pos:start="3:38" pos:end="3:40">int</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:51">data_size</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:40"><decl pos:start="5:26" pos:end="5:40"><type pos:start="5:26" pos:end="5:40"><name pos:start="5:26" pos:end="5:33">AVPacket</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:40">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="113:1">{<block_content pos:start="9:5" pos:end="111:20">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">DVDSubContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">ctx</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:30">avctx</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">buf</name> <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:30">avpkt</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">buf_size</name> <init pos:start="13:18" pos:end="13:30">= <expr pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:24">avpkt</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">AVSubtitle</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:19">sub</name> <init pos:start="15:21" pos:end="15:26">= <expr pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:26">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">is_menu</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="37:5"><if pos:start="21:5" pos:end="37:5">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">ctx</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:16">buf</name></name></expr>)</condition> <block pos:start="21:19" pos:end="37:5">{<block_content pos:start="23:9" pos:end="35:33">

        <decl_stmt pos:start="23:9" pos:end="23:61"><decl pos:start="23:9" pos:end="23:60"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:15">ret</name> <init pos:start="23:17" pos:end="23:60">= <expr pos:start="23:19" pos:end="23:60"><call pos:start="23:19" pos:end="23:60"><name pos:start="23:19" pos:end="23:38">append_to_cached_buf</name><argument_list pos:start="23:39" pos:end="23:60">(<argument pos:start="23:40" pos:end="23:44"><expr pos:start="23:40" pos:end="23:44"><name pos:start="23:40" pos:end="23:44">avctx</name></expr></argument>, <argument pos:start="23:47" pos:end="23:49"><expr pos:start="23:47" pos:end="23:49"><name pos:start="23:47" pos:end="23:49">buf</name></expr></argument>, <argument pos:start="23:52" pos:end="23:59"><expr pos:start="23:52" pos:end="23:59"><name pos:start="23:52" pos:end="23:59">buf_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:17">&lt;</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>)</condition> <block pos:start="25:22" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:23">

            <expr_stmt pos:start="27:13" pos:end="27:27"><expr pos:start="27:13" pos:end="27:26"><operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:22">data_size</name> <operator pos:start="27:24" pos:end="27:24">=</operator> <literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:23">return <expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:23"><expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:11">buf</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:22"><name pos:start="33:15" pos:end="33:17">ctx</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:22">buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:16">buf_size</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:32"><name pos:start="35:20" pos:end="35:22">ctx</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:32">buf_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:60"><expr pos:start="41:5" pos:end="41:59"><name pos:start="41:5" pos:end="41:11">is_menu</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:59"><name pos:start="41:15" pos:end="41:34">decode_dvd_subtitles</name><argument_list pos:start="41:35" pos:end="41:59">(<argument pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:38">ctx</name></expr></argument>, <argument pos:start="41:41" pos:end="41:43"><expr pos:start="41:41" pos:end="41:43"><name pos:start="41:41" pos:end="41:43">sub</name></expr></argument>, <argument pos:start="41:46" pos:end="41:48"><expr pos:start="41:46" pos:end="41:48"><name pos:start="41:46" pos:end="41:48">buf</name></expr></argument>, <argument pos:start="41:51" pos:end="41:58"><expr pos:start="41:51" pos:end="41:58"><name pos:start="41:51" pos:end="41:58">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:35">(<expr pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:15">is_menu</name> <operator pos:start="43:17" pos:end="43:18">==</operator> <call pos:start="43:20" pos:end="43:34"><name pos:start="43:20" pos:end="43:26">AVERROR</name><argument_list pos:start="43:27" pos:end="43:34">(<argument pos:start="43:28" pos:end="43:33"><expr pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:33">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:37" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:58">

        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:18">data_size</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:58">return <expr pos:start="47:16" pos:end="47:57"><call pos:start="47:16" pos:end="47:57"><name pos:start="47:16" pos:end="47:35">append_to_cached_buf</name><argument_list pos:start="47:36" pos:end="47:57">(<argument pos:start="47:37" pos:end="47:41"><expr pos:start="47:37" pos:end="47:41"><name pos:start="47:37" pos:end="47:41">avctx</name></expr></argument>, <argument pos:start="47:44" pos:end="47:46"><expr pos:start="47:44" pos:end="47:46"><name pos:start="47:44" pos:end="47:46">buf</name></expr></argument>, <argument pos:start="47:49" pos:end="47:56"><expr pos:start="47:49" pos:end="47:56"><name pos:start="47:49" pos:end="47:56">buf_size</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="65:5"><if pos:start="53:5" pos:end="65:5">if <condition pos:start="53:8" pos:end="53:20">(<expr pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:15">is_menu</name> <operator pos:start="53:17" pos:end="53:17">&lt;</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>)</condition> <block pos:start="53:22" pos:end="65:5">{<block_content pos:start="55:5" pos:end="63:24">

    <label pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:15">no_subtitle</name>:</label>

        <expr_stmt pos:start="57:9" pos:end="57:25"><expr pos:start="57:9" pos:end="57:24"><call pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:19">reset_rects</name><argument_list pos:start="57:20" pos:end="57:24">(<argument pos:start="57:21" pos:end="57:23"><expr pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:23">sub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:23"><expr pos:start="59:9" pos:end="59:22"><operator pos:start="59:9" pos:end="59:9">*</operator><name pos:start="59:10" pos:end="59:18">data_size</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</expr_stmt>



        <return pos:start="63:9" pos:end="63:24">return <expr pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="69:25"><if pos:start="67:5" pos:end="69:25">if <condition pos:start="67:8" pos:end="67:63">(<expr pos:start="67:9" pos:end="67:62"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:16">is_menu</name> <operator pos:start="67:18" pos:end="67:19">&amp;&amp;</operator> <call pos:start="67:21" pos:end="67:57"><name pos:start="67:21" pos:end="67:52">find_smallest_bounding_rectangle</name><argument_list pos:start="67:53" pos:end="67:57">(<argument pos:start="67:54" pos:end="67:56"><expr pos:start="67:54" pos:end="67:56"><name pos:start="67:54" pos:end="67:56">sub</name></expr></argument>)</argument_list></call> <operator pos:start="67:59" pos:end="67:60">==</operator> <literal type="number" pos:start="67:62" pos:end="67:62">0</literal></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:25"><block_content pos:start="69:9" pos:end="69:25">

        <goto pos:start="69:9" pos:end="69:25">goto <name pos:start="69:14" pos:end="69:24">no_subtitle</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="80:0"><if pos:start="73:5" pos:end="80:0">if <condition pos:start="73:8" pos:end="73:83">(<expr pos:start="73:9" pos:end="73:82"><name pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:11">ctx</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:29">forced_subs_only</name></name> <operator pos:start="73:31" pos:end="73:32">&amp;&amp;</operator> <operator pos:start="73:34" pos:end="73:34">!</operator><operator pos:start="73:35" pos:end="73:35">(</operator><name pos:start="73:36" pos:end="73:48"><name pos:start="73:36" pos:end="73:38">sub</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:45">rects</name><index pos:start="73:46" pos:end="73:48">[<expr pos:start="73:47" pos:end="73:47"><literal type="number" pos:start="73:47" pos:end="73:47">0</literal></expr>]</index></name><operator pos:start="73:49" pos:end="73:50">-&gt;</operator><name pos:start="73:51" pos:end="73:55">flags</name> <operator pos:start="73:57" pos:end="73:57">&amp;</operator> <name pos:start="73:59" pos:end="73:81">AV_SUBTITLE_FLAG_FORCED</name><operator pos:start="73:82" pos:end="73:82">)</operator></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="80:0"><block_content pos:start="75:9" pos:end="80:0">

        <goto pos:start="75:9" pos:end="80:0">goto <name pos:start="75:14" pos:end="75:24">no_subtitle</name>;</goto></block_content></block></if></if_stmt>



<cpp:if pos:start="79:1" pos:end="79:18">#<cpp:directive pos:start="79:2" pos:end="79:3">if</cpp:directive> <expr pos:start="79:5" pos:end="79:18"><call pos:start="79:5" pos:end="79:18"><name pos:start="79:5" pos:end="79:11">defined</name><argument_list pos:start="79:12" pos:end="79:18">(<argument pos:start="79:13" pos:end="79:17"><expr pos:start="79:13" pos:end="79:17"><name pos:start="79:13" pos:end="79:17">DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <block pos:start="81:5" pos:end="102:0">{<block_content pos:start="83:5" pos:end="97:90">

    <decl_stmt pos:start="83:5" pos:end="83:22"><decl pos:start="83:5" pos:end="83:21"><type pos:start="83:5" pos:end="83:8"><name pos:start="83:5" pos:end="83:8">char</name></type> <name pos:start="83:10" pos:end="83:21"><name pos:start="83:10" pos:end="83:17">ppm_name</name><index pos:start="83:18" pos:end="83:21">[<expr pos:start="83:19" pos:end="83:20"><literal type="number" pos:start="83:19" pos:end="83:20">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:73"><expr pos:start="87:5" pos:end="87:72"><call pos:start="87:5" pos:end="87:72"><name pos:start="87:5" pos:end="87:12">snprintf</name><argument_list pos:start="87:13" pos:end="87:72">(<argument pos:start="87:14" pos:end="87:21"><expr pos:start="87:14" pos:end="87:21"><name pos:start="87:14" pos:end="87:21">ppm_name</name></expr></argument>, <argument pos:start="87:24" pos:end="87:39"><expr pos:start="87:24" pos:end="87:39"><sizeof pos:start="87:24" pos:end="87:39">sizeof<argument_list pos:start="87:30" pos:end="87:39">(<argument pos:start="87:31" pos:end="87:38"><expr pos:start="87:31" pos:end="87:38"><name pos:start="87:31" pos:end="87:38">ppm_name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="87:42" pos:end="87:56"><expr pos:start="87:42" pos:end="87:56"><literal type="string" pos:start="87:42" pos:end="87:56">"/tmp/%05d.ppm"</literal></expr></argument>, <argument pos:start="87:59" pos:end="87:71"><expr pos:start="87:59" pos:end="87:71"><name pos:start="87:59" pos:end="87:69"><name pos:start="87:59" pos:end="87:61">ctx</name><operator pos:start="87:62" pos:end="87:63">-&gt;</operator><name pos:start="87:64" pos:end="87:69">sub_id</name></name><operator pos:start="87:70" pos:end="87:71">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="93:35"><expr pos:start="89:5" pos:end="93:34"><call pos:start="89:5" pos:end="93:34"><name pos:start="89:5" pos:end="89:11">av_dlog</name><argument_list pos:start="89:12" pos:end="93:34">(<argument pos:start="89:13" pos:end="89:16"><expr pos:start="89:13" pos:end="89:16"><name pos:start="89:13" pos:end="89:16">NULL</name></expr></argument>, <argument pos:start="89:19" pos:end="89:44"><expr pos:start="89:19" pos:end="89:44"><literal type="string" pos:start="89:19" pos:end="89:44">"start=%d ms end =%d ms\n"</literal></expr></argument>,

            <argument pos:start="91:13" pos:end="91:35"><expr pos:start="91:13" pos:end="91:35"><name pos:start="91:13" pos:end="91:35"><name pos:start="91:13" pos:end="91:15">sub</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:35">start_display_time</name></name></expr></argument>,

            <argument pos:start="93:13" pos:end="93:33"><expr pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:15">sub</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:33">end_display_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="97:90"><expr pos:start="95:5" pos:end="97:89"><call pos:start="95:5" pos:end="97:89"><name pos:start="95:5" pos:end="95:12">ppm_save</name><argument_list pos:start="95:13" pos:end="97:89">(<argument pos:start="95:14" pos:end="95:21"><expr pos:start="95:14" pos:end="95:21"><name pos:start="95:14" pos:end="95:21">ppm_name</name></expr></argument>, <argument pos:start="95:24" pos:end="95:50"><expr pos:start="95:24" pos:end="95:50"><name pos:start="95:24" pos:end="95:36"><name pos:start="95:24" pos:end="95:26">sub</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:33">rects</name><index pos:start="95:34" pos:end="95:36">[<expr pos:start="95:35" pos:end="95:35"><literal type="number" pos:start="95:35" pos:end="95:35">0</literal></expr>]</index></name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:50"><name pos:start="95:39" pos:end="95:42">pict</name><operator pos:start="95:43" pos:end="95:43">.</operator><name pos:start="95:44" pos:end="95:47">data</name><index pos:start="95:48" pos:end="95:50">[<expr pos:start="95:49" pos:end="95:49"><literal type="number" pos:start="95:49" pos:end="95:49">0</literal></expr>]</index></name></expr></argument>,

             <argument pos:start="97:14" pos:end="97:29"><expr pos:start="97:14" pos:end="97:29"><name pos:start="97:14" pos:end="97:26"><name pos:start="97:14" pos:end="97:16">sub</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:23">rects</name><index pos:start="97:24" pos:end="97:26">[<expr pos:start="97:25" pos:end="97:25"><literal type="number" pos:start="97:25" pos:end="97:25">0</literal></expr>]</index></name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:29">w</name></expr></argument>, <argument pos:start="97:32" pos:end="97:47"><expr pos:start="97:32" pos:end="97:47"><name pos:start="97:32" pos:end="97:44"><name pos:start="97:32" pos:end="97:34">sub</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:41">rects</name><index pos:start="97:42" pos:end="97:44">[<expr pos:start="97:43" pos:end="97:43"><literal type="number" pos:start="97:43" pos:end="97:43">0</literal></expr>]</index></name><operator pos:start="97:45" pos:end="97:46">-&gt;</operator><name pos:start="97:47" pos:end="97:47">h</name></expr></argument>, <argument pos:start="97:50" pos:end="97:88"><expr pos:start="97:50" pos:end="97:88"><operator pos:start="97:50" pos:end="97:50">(</operator><name pos:start="97:51" pos:end="97:58">uint32_t</name><operator pos:start="97:59" pos:end="97:59">*</operator><operator pos:start="97:60" pos:end="97:60">)</operator> <name pos:start="97:62" pos:end="97:74"><name pos:start="97:62" pos:end="97:64">sub</name><operator pos:start="97:65" pos:end="97:66">-&gt;</operator><name pos:start="97:67" pos:end="97:71">rects</name><index pos:start="97:72" pos:end="97:74">[<expr pos:start="97:73" pos:end="97:73"><literal type="number" pos:start="97:73" pos:end="97:73">0</literal></expr>]</index></name><operator pos:start="97:75" pos:end="97:76">-&gt;</operator><name pos:start="97:77" pos:end="97:88"><name pos:start="97:77" pos:end="97:80">pict</name><operator pos:start="97:81" pos:end="97:81">.</operator><name pos:start="97:82" pos:end="97:85">data</name><index pos:start="97:86" pos:end="97:88">[<expr pos:start="97:87" pos:end="97:87"><literal type="number" pos:start="97:87" pos:end="97:87">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="105:5" pos:end="105:24"><expr pos:start="105:5" pos:end="105:23"><call pos:start="105:5" pos:end="105:23"><name pos:start="105:5" pos:end="105:12">av_freep</name><argument_list pos:start="105:13" pos:end="105:23">(<argument pos:start="105:14" pos:end="105:22"><expr pos:start="105:14" pos:end="105:22"><operator pos:start="105:14" pos:end="105:14">&amp;</operator><name pos:start="105:15" pos:end="105:22"><name pos:start="105:15" pos:end="105:17">ctx</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:22">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:22"><expr pos:start="107:5" pos:end="107:21"><name pos:start="107:5" pos:end="107:17"><name pos:start="107:5" pos:end="107:7">ctx</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:17">buf_size</name></name> <operator pos:start="107:19" pos:end="107:19">=</operator> <literal type="number" pos:start="107:21" pos:end="107:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:19"><expr pos:start="109:5" pos:end="109:18"><operator pos:start="109:5" pos:end="109:5">*</operator><name pos:start="109:6" pos:end="109:14">data_size</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">1</literal></expr>;</expr_stmt>

    <return pos:start="111:5" pos:end="111:20">return <expr pos:start="111:12" pos:end="111:19"><name pos:start="111:12" pos:end="111:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
