<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21547.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">dbdma_end</name><parameter_list pos:start="1:22" pos:end="1:35">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:32"><name pos:start="1:23" pos:end="1:30">DBDMA_io</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:34">io</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:24">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">DBDMA_channel</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">ch</name> <init pos:start="5:23" pos:end="5:35">= <expr pos:start="5:25" pos:end="5:35"><name pos:start="5:25" pos:end="5:35"><name pos:start="5:25" pos:end="5:26">io</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:35">channel</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">dbdma_cmd</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:22">current</name> <init pos:start="7:24" pos:end="7:37">= <expr pos:start="7:26" pos:end="7:37"><operator pos:start="7:26" pos:end="7:26">&amp;</operator><name pos:start="7:27" pos:end="7:37"><name pos:start="7:27" pos:end="7:28">ch</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:37">current</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:18"><if pos:start="11:5" pos:end="13:18">if <condition pos:start="11:8" pos:end="11:29">(<expr pos:start="11:9" pos:end="11:28"><call pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:24">conditional_wait</name><argument_list pos:start="11:25" pos:end="11:28">(<argument pos:start="11:26" pos:end="11:27"><expr pos:start="11:26" pos:end="11:27"><name pos:start="11:26" pos:end="11:27">ch</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:18"><block_content pos:start="13:9" pos:end="13:18">

        <goto pos:start="13:9" pos:end="13:18">goto <name pos:start="13:14" pos:end="13:17">wait</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:76"><expr pos:start="17:5" pos:end="17:75"><name pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:11">current</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:24">xfer_status</name></name> <operator pos:start="17:26" pos:end="17:26">=</operator> <call pos:start="17:28" pos:end="17:75"><name pos:start="17:28" pos:end="17:38">cpu_to_le16</name><argument_list pos:start="17:39" pos:end="17:75">(<argument pos:start="17:40" pos:end="17:74"><expr pos:start="17:40" pos:end="17:74"><call pos:start="17:40" pos:end="17:74"><name pos:start="17:40" pos:end="17:50">be32_to_cpu</name><argument_list pos:start="17:51" pos:end="17:74">(<argument pos:start="17:52" pos:end="17:73"><expr pos:start="17:52" pos:end="17:73"><name pos:start="17:52" pos:end="17:73"><name pos:start="17:52" pos:end="17:53">ch</name><operator pos:start="17:54" pos:end="17:55">-&gt;</operator><name pos:start="17:56" pos:end="17:59">regs</name><index pos:start="17:60" pos:end="17:73">[<expr pos:start="17:61" pos:end="17:72"><name pos:start="17:61" pos:end="17:72">DBDMA_STATUS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:59"><expr pos:start="19:5" pos:end="19:58"><name pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:11">current</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:22">res_count</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <call pos:start="19:26" pos:end="19:58"><name pos:start="19:26" pos:end="19:36">cpu_to_le16</name><argument_list pos:start="19:37" pos:end="19:58">(<argument pos:start="19:38" pos:end="19:57"><expr pos:start="19:38" pos:end="19:57"><call pos:start="19:38" pos:end="19:57"><name pos:start="19:38" pos:end="19:48">be32_to_cpu</name><argument_list pos:start="19:49" pos:end="19:57">(<argument pos:start="19:50" pos:end="19:56"><expr pos:start="19:50" pos:end="19:56"><name pos:start="19:50" pos:end="19:56"><name pos:start="19:50" pos:end="19:51">io</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:56">len</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:21">dbdma_cmdptr_save</name><argument_list pos:start="21:22" pos:end="21:25">(<argument pos:start="21:23" pos:end="21:24"><expr pos:start="21:23" pos:end="21:24"><name pos:start="21:23" pos:end="21:24">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:54"><if pos:start="23:5" pos:end="25:54">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:10">io</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:19">is_last</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:54"><block_content pos:start="25:9" pos:end="25:54">

        <expr_stmt pos:start="25:9" pos:end="25:54"><expr pos:start="25:9" pos:end="25:53"><name pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:10">ch</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:16">regs</name><index pos:start="25:17" pos:end="25:30">[<expr pos:start="25:18" pos:end="25:29"><name pos:start="25:18" pos:end="25:29">DBDMA_STATUS</name></expr>]</index></name> <operator pos:start="25:32" pos:end="25:33">&amp;=</operator> <call pos:start="25:35" pos:end="25:53"><name pos:start="25:35" pos:end="25:45">cpu_to_be32</name><argument_list pos:start="25:46" pos:end="25:53">(<argument pos:start="25:47" pos:end="25:52"><expr pos:start="25:47" pos:end="25:52"><operator pos:start="25:47" pos:end="25:47">~</operator><name pos:start="25:48" pos:end="25:52">FLUSH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><call pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:25">conditional_interrupt</name><argument_list pos:start="29:26" pos:end="29:29">(<argument pos:start="29:27" pos:end="29:28"><expr pos:start="29:27" pos:end="29:28"><name pos:start="29:27" pos:end="29:28">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><call pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:22">conditional_branch</name><argument_list pos:start="31:23" pos:end="31:26">(<argument pos:start="31:24" pos:end="31:25"><expr pos:start="31:24" pos:end="31:25"><name pos:start="31:24" pos:end="31:25">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="35:1" pos:end="35:5"><name pos:start="35:1" pos:end="35:4">wait</name>:</label>

    <expr_stmt pos:start="37:5" pos:end="37:23"><expr pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:6">ch</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:18">processing</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:24"><if pos:start="39:5" pos:end="43:24">if <condition pos:start="39:8" pos:end="41:55">(<expr pos:start="39:9" pos:end="41:54"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:31"><name pos:start="39:10" pos:end="39:11">ch</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:17">regs</name><index pos:start="39:18" pos:end="39:31">[<expr pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:30">DBDMA_STATUS</name></expr>]</index></name> <operator pos:start="39:33" pos:end="39:33">&amp;</operator> <call pos:start="39:35" pos:end="39:50"><name pos:start="39:35" pos:end="39:45">cpu_to_be32</name><argument_list pos:start="39:46" pos:end="39:50">(<argument pos:start="39:47" pos:end="39:49"><expr pos:start="39:47" pos:end="39:49"><name pos:start="39:47" pos:end="39:49">RUN</name></expr></argument>)</argument_list></call><operator pos:start="39:51" pos:end="39:51">)</operator> <operator pos:start="39:53" pos:end="39:54">&amp;&amp;</operator>

        <operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:31"><name pos:start="41:10" pos:end="41:11">ch</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:17">regs</name><index pos:start="41:18" pos:end="41:31">[<expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">DBDMA_STATUS</name></expr>]</index></name> <operator pos:start="41:33" pos:end="41:33">&amp;</operator> <call pos:start="41:35" pos:end="41:53"><name pos:start="41:35" pos:end="41:45">cpu_to_be32</name><argument_list pos:start="41:46" pos:end="41:53">(<argument pos:start="41:47" pos:end="41:52"><expr pos:start="41:47" pos:end="41:52"><name pos:start="41:47" pos:end="41:52">ACTIVE</name></expr></argument>)</argument_list></call><operator pos:start="41:54" pos:end="41:54">)</operator></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:24"><block_content pos:start="43:9" pos:end="43:24">

        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><call pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:19">channel_run</name><argument_list pos:start="43:20" pos:end="43:23">(<argument pos:start="43:21" pos:end="43:22"><expr pos:start="43:21" pos:end="43:22"><name pos:start="43:21" pos:end="43:22">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
