<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13602.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">format_name</name><parameter_list pos:start="1:23" pos:end="1:57">(<parameter pos:start="1:24" pos:end="1:32"><decl pos:start="1:24" pos:end="1:32"><type pos:start="1:24" pos:end="1:32"><name pos:start="1:24" pos:end="1:27">char</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">buf</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:45"><decl pos:start="1:35" pos:end="1:45"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:37">int</name></type> <name pos:start="1:39" pos:end="1:45">buf_len</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:56"><decl pos:start="1:48" pos:end="1:56"><type pos:start="1:48" pos:end="1:56"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:56">index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:21">proto</name></decl>, <decl pos:start="5:24" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">dir</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:22">orig_buf_dup</name> <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">NULL</name></expr></init></decl>, <decl pos:start="7:32" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:43">mod_buf_dup</name> <init pos:start="7:45" pos:end="7:50">= <expr pos:start="7:47" pos:end="7:50"><name pos:start="7:47" pos:end="7:50">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:19"><if pos:start="13:5" pos:end="15:19">if <condition pos:start="13:8" pos:end="13:31">(<expr pos:start="13:9" pos:end="13:30"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:30"><name pos:start="13:10" pos:end="13:19">av_stristr</name><argument_list pos:start="13:20" pos:end="13:30">(<argument pos:start="13:21" pos:end="13:23"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:23">buf</name></expr></argument>, <argument pos:start="13:26" pos:end="13:29"><expr pos:start="13:26" pos:end="13:29"><literal type="string" pos:start="13:26" pos:end="13:29">"%v"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:19"><block_content pos:start="15:9" pos:end="15:19">

        <return pos:start="15:9" pos:end="15:19">return <expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:16">orig_buf_dup</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:33"><name pos:start="19:20" pos:end="19:28">av_strdup</name><argument_list pos:start="19:29" pos:end="19:33">(<argument pos:start="19:30" pos:end="19:32"><expr pos:start="19:30" pos:end="19:32"><name pos:start="19:30" pos:end="19:32">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:21">orig_buf_dup</name></expr>)</condition> <block pos:start="21:24" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:18">

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:29"><name pos:start="23:15" pos:end="23:21">AVERROR</name><argument_list pos:start="23:22" pos:end="23:29">(<argument pos:start="23:23" pos:end="23:28"><expr pos:start="23:23" pos:end="23:28"><name pos:start="23:23" pos:end="23:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="25:9" pos:end="25:18">goto <name pos:start="25:14" pos:end="25:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:81">(<expr pos:start="31:9" pos:end="31:80"><call pos:start="31:9" pos:end="31:76"><name pos:start="31:9" pos:end="31:36">replace_int_data_in_filename</name><argument_list pos:start="31:37" pos:end="31:76">(<argument pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:40">buf</name></expr></argument>, <argument pos:start="31:43" pos:end="31:49"><expr pos:start="31:43" pos:end="31:49"><name pos:start="31:43" pos:end="31:49">buf_len</name></expr></argument>, <argument pos:start="31:52" pos:end="31:63"><expr pos:start="31:52" pos:end="31:63"><name pos:start="31:52" pos:end="31:63">orig_buf_dup</name></expr></argument>, <argument pos:start="31:66" pos:end="31:68"><expr pos:start="31:66" pos:end="31:68"><literal type="char" pos:start="31:66" pos:end="31:68">'v'</literal></expr></argument>, <argument pos:start="31:71" pos:end="31:75"><expr pos:start="31:71" pos:end="31:75"><name pos:start="31:71" pos:end="31:75">index</name></expr></argument>)</argument_list></call> <operator pos:start="31:78" pos:end="31:78">&lt;</operator> <literal type="number" pos:start="31:80" pos:end="31:80">1</literal></expr>)</condition> <block pos:start="31:83" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:29"><name pos:start="33:15" pos:end="33:21">AVERROR</name><argument_list pos:start="33:22" pos:end="33:29">(<argument pos:start="33:23" pos:end="33:28"><expr pos:start="33:23" pos:end="33:28"><name pos:start="33:23" pos:end="33:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="35:9" pos:end="35:18">goto <name pos:start="35:14" pos:end="35:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:50"><expr pos:start="41:5" pos:end="41:49"><name pos:start="41:5" pos:end="41:9">proto</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:49"><name pos:start="41:13" pos:end="41:35">avio_find_protocol_name</name><argument_list pos:start="41:36" pos:end="41:49">(<argument pos:start="41:37" pos:end="41:48"><expr pos:start="41:37" pos:end="41:48"><name pos:start="41:37" pos:end="41:48">orig_buf_dup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:7">dir</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:34"><name pos:start="43:11" pos:end="43:20">av_dirname</name><argument_list pos:start="43:21" pos:end="43:34">(<argument pos:start="43:22" pos:end="43:33"><expr pos:start="43:22" pos:end="43:33"><name pos:start="43:22" pos:end="43:33">orig_buf_dup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:72">/* if %v is present in the file's directory, create sub-directory */</comment>

    <if_stmt pos:start="49:5" pos:end="73:5"><if pos:start="49:5" pos:end="73:5">if <condition pos:start="49:8" pos:end="49:65">(<expr pos:start="49:9" pos:end="49:64"><call pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:18">av_stristr</name><argument_list pos:start="49:19" pos:end="49:29">(<argument pos:start="49:20" pos:end="49:22"><expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">dir</name></expr></argument>, <argument pos:start="49:25" pos:end="49:28"><expr pos:start="49:25" pos:end="49:28"><literal type="string" pos:start="49:25" pos:end="49:28">"%v"</literal></expr></argument>)</argument_list></call> <operator pos:start="49:31" pos:end="49:32">&amp;&amp;</operator> <name pos:start="49:34" pos:end="49:38">proto</name> <operator pos:start="49:40" pos:end="49:41">&amp;&amp;</operator> <operator pos:start="49:43" pos:end="49:43">!</operator><call pos:start="49:44" pos:end="49:64"><name pos:start="49:44" pos:end="49:49">strcmp</name><argument_list pos:start="49:50" pos:end="49:64">(<argument pos:start="49:51" pos:end="49:55"><expr pos:start="49:51" pos:end="49:55"><name pos:start="49:51" pos:end="49:55">proto</name></expr></argument>, <argument pos:start="49:58" pos:end="49:63"><expr pos:start="49:58" pos:end="49:63"><literal type="string" pos:start="49:58" pos:end="49:63">"file"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:67" pos:end="73:5">{<block_content pos:start="51:9" pos:end="71:9">

        <expr_stmt pos:start="51:9" pos:end="51:37"><expr pos:start="51:9" pos:end="51:36"><name pos:start="51:9" pos:end="51:19">mod_buf_dup</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <call pos:start="51:23" pos:end="51:36"><name pos:start="51:23" pos:end="51:31">av_strdup</name><argument_list pos:start="51:32" pos:end="51:36">(<argument pos:start="51:33" pos:end="51:35"><expr pos:start="51:33" pos:end="51:35"><name pos:start="51:33" pos:end="51:35">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:25">(<expr pos:start="53:13" pos:end="53:24"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:24">mod_buf_dup</name></expr>)</condition> <block pos:start="53:27" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:22">

            <expr_stmt pos:start="55:13" pos:end="55:34"><expr pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:33"><name pos:start="55:19" pos:end="55:25">AVERROR</name><argument_list pos:start="55:26" pos:end="55:33">(<argument pos:start="55:27" pos:end="55:32"><expr pos:start="55:27" pos:end="55:32"><name pos:start="55:27" pos:end="55:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="57:13" pos:end="57:22">goto <name pos:start="57:18" pos:end="57:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:11">dir</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:37"><name pos:start="63:15" pos:end="63:24">av_dirname</name><argument_list pos:start="63:25" pos:end="63:37">(<argument pos:start="63:26" pos:end="63:36"><expr pos:start="63:26" pos:end="63:36"><name pos:start="63:26" pos:end="63:36">mod_buf_dup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:50">(<expr pos:start="65:13" pos:end="65:49"><call pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:19">mkdir_p</name><argument_list pos:start="65:20" pos:end="65:24">(<argument pos:start="65:21" pos:end="65:23"><expr pos:start="65:21" pos:end="65:23"><name pos:start="65:21" pos:end="65:23">dir</name></expr></argument>)</argument_list></call> <operator pos:start="65:26" pos:end="65:27">==</operator> <operator pos:start="65:29" pos:end="65:29">-</operator><literal type="number" pos:start="65:30" pos:end="65:30">1</literal> <operator pos:start="65:32" pos:end="65:33">&amp;&amp;</operator> <name pos:start="65:35" pos:end="65:39">errno</name> <operator pos:start="65:41" pos:end="65:42">!=</operator> <name pos:start="65:44" pos:end="65:49">EEXIST</name></expr>)</condition> <block pos:start="65:52" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:22">

            <expr_stmt pos:start="67:13" pos:end="67:33"><expr pos:start="67:13" pos:end="67:32"><name pos:start="67:13" pos:end="67:15">ret</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="67:32"><name pos:start="67:19" pos:end="67:25">AVERROR</name><argument_list pos:start="67:26" pos:end="67:32">(<argument pos:start="67:27" pos:end="67:31"><expr pos:start="67:27" pos:end="67:31"><name pos:start="67:27" pos:end="67:31">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="69:13" pos:end="69:22">goto <name pos:start="69:18" pos:end="69:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="77:1" pos:end="77:5"><name pos:start="77:1" pos:end="77:4">fail</name>:</label>

    <expr_stmt pos:start="79:5" pos:end="79:28"><expr pos:start="79:5" pos:end="79:27"><call pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:12">av_freep</name><argument_list pos:start="79:13" pos:end="79:27">(<argument pos:start="79:14" pos:end="79:26"><expr pos:start="79:14" pos:end="79:26"><operator pos:start="79:14" pos:end="79:14">&amp;</operator><name pos:start="79:15" pos:end="79:26">orig_buf_dup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><call pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:12">av_freep</name><argument_list pos:start="81:13" pos:end="81:26">(<argument pos:start="81:14" pos:end="81:25"><expr pos:start="81:14" pos:end="81:25"><operator pos:start="81:14" pos:end="81:14">&amp;</operator><name pos:start="81:15" pos:end="81:25">mod_buf_dup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:15">return <expr pos:start="83:12" pos:end="83:14"><name pos:start="83:12" pos:end="83:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
