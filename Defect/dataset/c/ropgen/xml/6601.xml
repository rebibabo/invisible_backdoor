<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6601.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">virtio_load</name><parameter_list pos:start="1:16" pos:end="1:48">(<parameter pos:start="1:17" pos:end="1:34"><decl pos:start="1:17" pos:end="1:34"><type pos:start="1:17" pos:end="1:34"><name pos:start="1:17" pos:end="1:28">VirtIODevice</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:34">vdev</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:47"><decl pos:start="1:37" pos:end="1:47"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:44">QEMUFile</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="5:5" pos:end="165:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:22">config_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">num</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:21">features</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:31">supported_features</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:55"><decl pos:start="15:5" pos:end="15:54"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">BusState</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:18">qbus</name> <init pos:start="15:20" pos:end="15:54">= <expr pos:start="15:22" pos:end="15:54"><call pos:start="15:22" pos:end="15:54"><name pos:start="15:22" pos:end="15:40">qdev_get_parent_bus</name><argument_list pos:start="15:41" pos:end="15:54">(<argument pos:start="15:42" pos:end="15:53"><expr pos:start="15:42" pos:end="15:53"><call pos:start="15:42" pos:end="15:53"><name pos:start="15:42" pos:end="15:47">DEVICE</name><argument_list pos:start="15:48" pos:end="15:53">(<argument pos:start="15:49" pos:end="15:52"><expr pos:start="15:49" pos:end="15:52"><name pos:start="15:49" pos:end="15:52">vdev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:51"><decl pos:start="17:5" pos:end="17:50"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">VirtioBusClass</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:21">k</name> <init pos:start="17:23" pos:end="17:50">= <expr pos:start="17:25" pos:end="17:50"><call pos:start="17:25" pos:end="17:50"><name pos:start="17:25" pos:end="17:44">VIRTIO_BUS_GET_CLASS</name><argument_list pos:start="17:45" pos:end="17:50">(<argument pos:start="17:46" pos:end="17:49"><expr pos:start="17:46" pos:end="17:49"><name pos:start="17:46" pos:end="17:49">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">k</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">load_config</name></name></expr>)</condition> <block pos:start="21:25" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:23">

        <expr_stmt pos:start="23:9" pos:end="23:46"><expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:45"><name pos:start="23:15" pos:end="23:28"><name pos:start="23:15" pos:end="23:15">k</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:28">load_config</name></name><argument_list pos:start="23:29" pos:end="23:45">(<argument pos:start="23:30" pos:end="23:41"><expr pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:33">qbus</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:41">parent</name></name></expr></argument>, <argument pos:start="23:44" pos:end="23:44"><expr pos:start="23:44" pos:end="23:44"><name pos:start="23:44" pos:end="23:44">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:23"><if pos:start="25:9" pos:end="27:23">if <condition pos:start="25:12" pos:end="25:16">(<expr pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">ret</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:23"><block_content pos:start="27:13" pos:end="27:23">

            <return pos:start="27:13" pos:end="27:23">return <expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:34"><expr pos:start="33:5" pos:end="33:33"><call pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:15">qemu_get_8s</name><argument_list pos:start="33:16" pos:end="33:33">(<argument pos:start="33:17" pos:end="33:17"><expr pos:start="33:17" pos:end="33:17"><name pos:start="33:17" pos:end="33:17">f</name></expr></argument>, <argument pos:start="33:20" pos:end="33:32"><expr pos:start="33:20" pos:end="33:32"><operator pos:start="33:20" pos:end="33:20">&amp;</operator><name pos:start="33:21" pos:end="33:32"><name pos:start="33:21" pos:end="33:24">vdev</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:32">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><call pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:15">qemu_get_8s</name><argument_list pos:start="35:16" pos:end="35:30">(<argument pos:start="35:17" pos:end="35:17"><expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">f</name></expr></argument>, <argument pos:start="35:20" pos:end="35:29"><expr pos:start="35:20" pos:end="35:29"><operator pos:start="35:20" pos:end="35:20">&amp;</operator><name pos:start="35:21" pos:end="35:29"><name pos:start="35:21" pos:end="35:24">vdev</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:29">isr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><call pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:18">qemu_get_be16s</name><argument_list pos:start="37:19" pos:end="37:39">(<argument pos:start="37:20" pos:end="37:20"><expr pos:start="37:20" pos:end="37:20"><name pos:start="37:20" pos:end="37:20">f</name></expr></argument>, <argument pos:start="37:23" pos:end="37:38"><expr pos:start="37:23" pos:end="37:38"><operator pos:start="37:23" pos:end="37:23">&amp;</operator><name pos:start="37:24" pos:end="37:38"><name pos:start="37:24" pos:end="37:27">vdev</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:38">queue_sel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:48">(<expr pos:start="39:9" pos:end="39:47"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:12">vdev</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:23">queue_sel</name></name> <operator pos:start="39:25" pos:end="39:26">&gt;=</operator> <name pos:start="39:28" pos:end="39:47">VIRTIO_PCI_QUEUE_MAX</name></expr>)</condition> <block pos:start="39:50" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><call pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:18">qemu_get_be32s</name><argument_list pos:start="45:19" pos:end="45:32">(<argument pos:start="45:20" pos:end="45:20"><expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">f</name></expr></argument>, <argument pos:start="45:23" pos:end="45:31"><expr pos:start="45:23" pos:end="45:31"><operator pos:start="45:23" pos:end="45:23">&amp;</operator><name pos:start="45:24" pos:end="45:31">features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="59:5"><if pos:start="49:5" pos:end="59:5">if <condition pos:start="49:8" pos:end="49:48">(<expr pos:start="49:9" pos:end="49:47"><call pos:start="49:9" pos:end="49:43"><name pos:start="49:9" pos:end="49:27">virtio_set_features</name><argument_list pos:start="49:28" pos:end="49:43">(<argument pos:start="49:29" pos:end="49:32"><expr pos:start="49:29" pos:end="49:32"><name pos:start="49:29" pos:end="49:32">vdev</name></expr></argument>, <argument pos:start="49:35" pos:end="49:42"><expr pos:start="49:35" pos:end="49:42"><name pos:start="49:35" pos:end="49:42">features</name></expr></argument>)</argument_list></call> <operator pos:start="49:45" pos:end="49:45">&lt;</operator> <literal type="number" pos:start="49:47" pos:end="49:47">0</literal></expr>)</condition> <block pos:start="49:50" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:18">

        <expr_stmt pos:start="51:9" pos:end="51:59"><expr pos:start="51:9" pos:end="51:58"><name pos:start="51:9" pos:end="51:26">supported_features</name> <operator pos:start="51:28" pos:end="51:28">=</operator> <call pos:start="51:30" pos:end="51:58"><name pos:start="51:30" pos:end="51:44"><name pos:start="51:30" pos:end="51:30">k</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:44">get_features</name></name><argument_list pos:start="51:45" pos:end="51:58">(<argument pos:start="51:46" pos:end="51:57"><expr pos:start="51:46" pos:end="51:57"><name pos:start="51:46" pos:end="51:57"><name pos:start="51:46" pos:end="51:49">qbus</name><operator pos:start="51:50" pos:end="51:51">-&gt;</operator><name pos:start="51:52" pos:end="51:57">parent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="55:51"><expr pos:start="53:9" pos:end="55:50"><call pos:start="53:9" pos:end="55:50"><name pos:start="53:9" pos:end="53:20">error_report</name><argument_list pos:start="53:21" pos:end="55:50">(<argument pos:start="53:22" pos:end="53:72"><expr pos:start="53:22" pos:end="53:72"><literal type="string" pos:start="53:22" pos:end="53:72">"Features 0x%x unsupported. Allowed features: 0x%x"</literal></expr></argument>,

                     <argument pos:start="55:22" pos:end="55:29"><expr pos:start="55:22" pos:end="55:29"><name pos:start="55:22" pos:end="55:29">features</name></expr></argument>, <argument pos:start="55:32" pos:end="55:49"><expr pos:start="55:32" pos:end="55:49"><name pos:start="55:32" pos:end="55:49">supported_features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:34"><expr pos:start="61:5" pos:end="61:33"><name pos:start="61:5" pos:end="61:14">config_len</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:33"><name pos:start="61:18" pos:end="61:30">qemu_get_be32</name><argument_list pos:start="61:31" pos:end="61:33">(<argument pos:start="61:32" pos:end="61:32"><expr pos:start="61:32" pos:end="61:32"><name pos:start="61:32" pos:end="61:32">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="63:39">(<expr pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:18">config_len</name> <operator pos:start="63:20" pos:end="63:21">!=</operator> <name pos:start="63:23" pos:end="63:38"><name pos:start="63:23" pos:end="63:26">vdev</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:38">config_len</name></name></expr>)</condition> <block pos:start="63:41" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:18">

        <expr_stmt pos:start="65:9" pos:end="67:51"><expr pos:start="65:9" pos:end="67:50"><call pos:start="65:9" pos:end="67:50"><name pos:start="65:9" pos:end="65:20">error_report</name><argument_list pos:start="65:21" pos:end="67:50">(<argument pos:start="65:22" pos:end="65:68"><expr pos:start="65:22" pos:end="65:68"><literal type="string" pos:start="65:22" pos:end="65:68">"Unexpected config length 0x%x. Expected 0x%zx"</literal></expr></argument>,

                     <argument pos:start="67:22" pos:end="67:31"><expr pos:start="67:22" pos:end="67:31"><name pos:start="67:22" pos:end="67:31">config_len</name></expr></argument>, <argument pos:start="67:34" pos:end="67:49"><expr pos:start="67:34" pos:end="67:49"><name pos:start="67:34" pos:end="67:49"><name pos:start="67:34" pos:end="67:37">vdev</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:49">config_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:55"><expr pos:start="73:5" pos:end="73:54"><call pos:start="73:5" pos:end="73:54"><name pos:start="73:5" pos:end="73:19">qemu_get_buffer</name><argument_list pos:start="73:20" pos:end="73:54">(<argument pos:start="73:21" pos:end="73:21"><expr pos:start="73:21" pos:end="73:21"><name pos:start="73:21" pos:end="73:21">f</name></expr></argument>, <argument pos:start="73:24" pos:end="73:35"><expr pos:start="73:24" pos:end="73:35"><name pos:start="73:24" pos:end="73:35"><name pos:start="73:24" pos:end="73:27">vdev</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:35">config</name></name></expr></argument>, <argument pos:start="73:38" pos:end="73:53"><expr pos:start="73:38" pos:end="73:53"><name pos:start="73:38" pos:end="73:53"><name pos:start="73:38" pos:end="73:41">vdev</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:53">config_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:27"><expr pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:7">num</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="77:26"><name pos:start="77:11" pos:end="77:23">qemu_get_be32</name><argument_list pos:start="77:24" pos:end="77:26">(<argument pos:start="77:25" pos:end="77:25"><expr pos:start="77:25" pos:end="77:25"><name pos:start="77:25" pos:end="77:25">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="87:5"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:35">(<expr pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:11">num</name> <operator pos:start="81:13" pos:end="81:13">&gt;</operator> <name pos:start="81:15" pos:end="81:34">VIRTIO_PCI_QUEUE_MAX</name></expr>)</condition> <block pos:start="81:37" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:18">

        <expr_stmt pos:start="83:9" pos:end="83:64"><expr pos:start="83:9" pos:end="83:63"><call pos:start="83:9" pos:end="83:63"><name pos:start="83:9" pos:end="83:20">error_report</name><argument_list pos:start="83:21" pos:end="83:63">(<argument pos:start="83:22" pos:end="83:57"><expr pos:start="83:22" pos:end="83:57"><literal type="string" pos:start="83:22" pos:end="83:57">"Invalid number of PCI queues: 0x%x"</literal></expr></argument>, <argument pos:start="83:60" pos:end="83:62"><expr pos:start="83:60" pos:end="83:62"><name pos:start="83:60" pos:end="83:62">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:18">return <expr pos:start="85:16" pos:end="85:17"><operator pos:start="85:16" pos:end="85:16">-</operator><literal type="number" pos:start="85:17" pos:end="85:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="91:5" pos:end="159:5">for <control pos:start="91:9" pos:end="91:29">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:24"><expr pos:start="91:17" pos:end="91:23"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <name pos:start="91:21" pos:end="91:23">num</name></expr>;</condition> <incr pos:start="91:26" pos:end="91:28"><expr pos:start="91:26" pos:end="91:28"><name pos:start="91:26" pos:end="91:26">i</name><operator pos:start="91:27" pos:end="91:28">++</operator></expr></incr>)</control> <block pos:start="91:31" pos:end="159:5">{<block_content pos:start="93:9" pos:end="157:9">

        <expr_stmt pos:start="93:9" pos:end="93:49"><expr pos:start="93:9" pos:end="93:48"><name pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:12">vdev</name><operator pos:start="93:13" pos:end="93:14">-&gt;</operator><name pos:start="93:15" pos:end="93:16">vq</name><index pos:start="93:17" pos:end="93:19">[<expr pos:start="93:18" pos:end="93:18"><name pos:start="93:18" pos:end="93:18">i</name></expr>]</index></name><operator pos:start="93:20" pos:end="93:20">.</operator><name pos:start="93:21" pos:end="93:29"><name pos:start="93:21" pos:end="93:25">vring</name><operator pos:start="93:26" pos:end="93:26">.</operator><name pos:start="93:27" pos:end="93:29">num</name></name> <operator pos:start="93:31" pos:end="93:31">=</operator> <call pos:start="93:33" pos:end="93:48"><name pos:start="93:33" pos:end="93:45">qemu_get_be32</name><argument_list pos:start="93:46" pos:end="93:48">(<argument pos:start="93:47" pos:end="93:47"><expr pos:start="93:47" pos:end="93:47"><name pos:start="93:47" pos:end="93:47">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="99:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:44">(<expr pos:start="95:13" pos:end="95:43"><name pos:start="95:13" pos:end="95:43"><name pos:start="95:13" pos:end="95:13">k</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:43">has_variable_vring_alignment</name></name></expr>)</condition> <block pos:start="95:46" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:55">

            <expr_stmt pos:start="97:13" pos:end="97:55"><expr pos:start="97:13" pos:end="97:54"><name pos:start="97:13" pos:end="97:23"><name pos:start="97:13" pos:end="97:16">vdev</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:20">vq</name><index pos:start="97:21" pos:end="97:23">[<expr pos:start="97:22" pos:end="97:22"><name pos:start="97:22" pos:end="97:22">i</name></expr>]</index></name><operator pos:start="97:24" pos:end="97:24">.</operator><name pos:start="97:25" pos:end="97:35"><name pos:start="97:25" pos:end="97:29">vring</name><operator pos:start="97:30" pos:end="97:30">.</operator><name pos:start="97:31" pos:end="97:35">align</name></name> <operator pos:start="97:37" pos:end="97:37">=</operator> <call pos:start="97:39" pos:end="97:54"><name pos:start="97:39" pos:end="97:51">qemu_get_be32</name><argument_list pos:start="97:52" pos:end="97:54">(<argument pos:start="97:53" pos:end="97:53"><expr pos:start="97:53" pos:end="97:53"><name pos:start="97:53" pos:end="97:53">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:42"><expr pos:start="101:9" pos:end="101:41"><name pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:12">vdev</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:16">vq</name><index pos:start="101:17" pos:end="101:19">[<expr pos:start="101:18" pos:end="101:18"><name pos:start="101:18" pos:end="101:18">i</name></expr>]</index></name><operator pos:start="101:20" pos:end="101:20">.</operator><name pos:start="101:21" pos:end="101:22">pa</name> <operator pos:start="101:24" pos:end="101:24">=</operator> <call pos:start="101:26" pos:end="101:41"><name pos:start="101:26" pos:end="101:38">qemu_get_be64</name><argument_list pos:start="101:39" pos:end="101:41">(<argument pos:start="101:40" pos:end="101:40"><expr pos:start="101:40" pos:end="101:40"><name pos:start="101:40" pos:end="101:40">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:55"><expr pos:start="103:9" pos:end="103:54"><call pos:start="103:9" pos:end="103:54"><name pos:start="103:9" pos:end="103:22">qemu_get_be16s</name><argument_list pos:start="103:23" pos:end="103:54">(<argument pos:start="103:24" pos:end="103:24"><expr pos:start="103:24" pos:end="103:24"><name pos:start="103:24" pos:end="103:24">f</name></expr></argument>, <argument pos:start="103:27" pos:end="103:53"><expr pos:start="103:27" pos:end="103:53"><operator pos:start="103:27" pos:end="103:27">&amp;</operator><name pos:start="103:28" pos:end="103:38"><name pos:start="103:28" pos:end="103:31">vdev</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:35">vq</name><index pos:start="103:36" pos:end="103:38">[<expr pos:start="103:37" pos:end="103:37"><name pos:start="103:37" pos:end="103:37">i</name></expr>]</index></name><operator pos:start="103:39" pos:end="103:39">.</operator><name pos:start="103:40" pos:end="103:53">last_avail_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:49"><expr pos:start="105:9" pos:end="105:48"><name pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:12">vdev</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:16">vq</name><index pos:start="105:17" pos:end="105:19">[<expr pos:start="105:18" pos:end="105:18"><name pos:start="105:18" pos:end="105:18">i</name></expr>]</index></name><operator pos:start="105:20" pos:end="105:20">.</operator><name pos:start="105:21" pos:end="105:40">signalled_used_valid</name> <operator pos:start="105:42" pos:end="105:42">=</operator> <name pos:start="105:44" pos:end="105:48">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:40"><expr pos:start="107:9" pos:end="107:39"><name pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:12">vdev</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:16">vq</name><index pos:start="107:17" pos:end="107:19">[<expr pos:start="107:18" pos:end="107:18"><name pos:start="107:18" pos:end="107:18">i</name></expr>]</index></name><operator pos:start="107:20" pos:end="107:20">.</operator><name pos:start="107:21" pos:end="107:32">notification</name> <operator pos:start="107:34" pos:end="107:34">=</operator> <name pos:start="107:36" pos:end="107:39">true</name></expr>;</expr_stmt>



        <if_stmt pos:start="111:9" pos:end="147:9"><if pos:start="111:9" pos:end="137:9">if <condition pos:start="111:12" pos:end="111:27">(<expr pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:23"><name pos:start="111:13" pos:end="111:16">vdev</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:20">vq</name><index pos:start="111:21" pos:end="111:23">[<expr pos:start="111:22" pos:end="111:22"><name pos:start="111:22" pos:end="111:22">i</name></expr>]</index></name><operator pos:start="111:24" pos:end="111:24">.</operator><name pos:start="111:25" pos:end="111:26">pa</name></expr>)</condition> <block pos:start="111:29" pos:end="137:9">{<block_content pos:start="113:13" pos:end="135:13">

            <decl_stmt pos:start="113:13" pos:end="113:28"><decl pos:start="113:13" pos:end="113:27"><type pos:start="113:13" pos:end="113:20"><name pos:start="113:13" pos:end="113:20">uint16_t</name></type> <name pos:start="113:22" pos:end="113:27">nheads</name></decl>;</decl_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:41"><expr pos:start="115:13" pos:end="115:40"><call pos:start="115:13" pos:end="115:40"><name pos:start="115:13" pos:end="115:26">virtqueue_init</name><argument_list pos:start="115:27" pos:end="115:40">(<argument pos:start="115:28" pos:end="115:39"><expr pos:start="115:28" pos:end="115:39"><operator pos:start="115:28" pos:end="115:28">&amp;</operator><name pos:start="115:29" pos:end="115:39"><name pos:start="115:29" pos:end="115:32">vdev</name><operator pos:start="115:33" pos:end="115:34">-&gt;</operator><name pos:start="115:35" pos:end="115:36">vq</name><index pos:start="115:37" pos:end="115:39">[<expr pos:start="115:38" pos:end="115:38"><name pos:start="115:38" pos:end="115:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:80"><expr pos:start="117:13" pos:end="117:79"><name pos:start="117:13" pos:end="117:18">nheads</name> <operator pos:start="117:20" pos:end="117:20">=</operator> <call pos:start="117:22" pos:end="117:50"><name pos:start="117:22" pos:end="117:36">vring_avail_idx</name><argument_list pos:start="117:37" pos:end="117:50">(<argument pos:start="117:38" pos:end="117:49"><expr pos:start="117:38" pos:end="117:49"><operator pos:start="117:38" pos:end="117:38">&amp;</operator><name pos:start="117:39" pos:end="117:49"><name pos:start="117:39" pos:end="117:42">vdev</name><operator pos:start="117:43" pos:end="117:44">-&gt;</operator><name pos:start="117:45" pos:end="117:46">vq</name><index pos:start="117:47" pos:end="117:49">[<expr pos:start="117:48" pos:end="117:48"><name pos:start="117:48" pos:end="117:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="117:52" pos:end="117:52">-</operator> <name pos:start="117:54" pos:end="117:64"><name pos:start="117:54" pos:end="117:57">vdev</name><operator pos:start="117:58" pos:end="117:59">-&gt;</operator><name pos:start="117:60" pos:end="117:61">vq</name><index pos:start="117:62" pos:end="117:64">[<expr pos:start="117:63" pos:end="117:63"><name pos:start="117:63" pos:end="117:63">i</name></expr>]</index></name><operator pos:start="117:65" pos:end="117:65">.</operator><name pos:start="117:66" pos:end="117:79">last_avail_idx</name></expr>;</expr_stmt>

            <comment type="block" pos:start="119:13" pos:end="119:83">/* Check it isn't doing very strange things with descriptor numbers. */</comment>

            <if_stmt pos:start="121:13" pos:end="135:13"><if pos:start="121:13" pos:end="135:13">if <condition pos:start="121:16" pos:end="121:47">(<expr pos:start="121:17" pos:end="121:46"><name pos:start="121:17" pos:end="121:22">nheads</name> <operator pos:start="121:24" pos:end="121:24">&gt;</operator> <name pos:start="121:26" pos:end="121:36"><name pos:start="121:26" pos:end="121:29">vdev</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:33">vq</name><index pos:start="121:34" pos:end="121:36">[<expr pos:start="121:35" pos:end="121:35"><name pos:start="121:35" pos:end="121:35">i</name></expr>]</index></name><operator pos:start="121:37" pos:end="121:37">.</operator><name pos:start="121:38" pos:end="121:46"><name pos:start="121:38" pos:end="121:42">vring</name><operator pos:start="121:43" pos:end="121:43">.</operator><name pos:start="121:44" pos:end="121:46">num</name></name></expr>)</condition> <block pos:start="121:49" pos:end="135:13">{<block_content pos:start="123:17" pos:end="133:26">

                <expr_stmt pos:start="123:17" pos:end="131:65"><expr pos:start="123:17" pos:end="131:64"><call pos:start="123:17" pos:end="131:64"><name pos:start="123:17" pos:end="123:28">error_report</name><argument_list pos:start="123:29" pos:end="131:64">(<argument pos:start="123:30" pos:end="125:76"><expr pos:start="123:30" pos:end="125:76"><literal type="string" pos:start="123:30" pos:end="123:64">"VQ %d size 0x%x Guest index 0x%x "</literal>

                             <literal type="string" pos:start="125:30" pos:end="125:76">"inconsistent with Host index 0x%x: delta 0x%x"</literal></expr></argument>,

                             <argument pos:start="127:30" pos:end="127:30"><expr pos:start="127:30" pos:end="127:30"><name pos:start="127:30" pos:end="127:30">i</name></expr></argument>, <argument pos:start="127:33" pos:end="127:53"><expr pos:start="127:33" pos:end="127:53"><name pos:start="127:33" pos:end="127:43"><name pos:start="127:33" pos:end="127:36">vdev</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:40">vq</name><index pos:start="127:41" pos:end="127:43">[<expr pos:start="127:42" pos:end="127:42"><name pos:start="127:42" pos:end="127:42">i</name></expr>]</index></name><operator pos:start="127:44" pos:end="127:44">.</operator><name pos:start="127:45" pos:end="127:53"><name pos:start="127:45" pos:end="127:49">vring</name><operator pos:start="127:50" pos:end="127:50">.</operator><name pos:start="127:51" pos:end="127:53">num</name></name></expr></argument>,

                             <argument pos:start="129:30" pos:end="129:58"><expr pos:start="129:30" pos:end="129:58"><call pos:start="129:30" pos:end="129:58"><name pos:start="129:30" pos:end="129:44">vring_avail_idx</name><argument_list pos:start="129:45" pos:end="129:58">(<argument pos:start="129:46" pos:end="129:57"><expr pos:start="129:46" pos:end="129:57"><operator pos:start="129:46" pos:end="129:46">&amp;</operator><name pos:start="129:47" pos:end="129:57"><name pos:start="129:47" pos:end="129:50">vdev</name><operator pos:start="129:51" pos:end="129:52">-&gt;</operator><name pos:start="129:53" pos:end="129:54">vq</name><index pos:start="129:55" pos:end="129:57">[<expr pos:start="129:56" pos:end="129:56"><name pos:start="129:56" pos:end="129:56">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="131:30" pos:end="131:55"><expr pos:start="131:30" pos:end="131:55"><name pos:start="131:30" pos:end="131:40"><name pos:start="131:30" pos:end="131:33">vdev</name><operator pos:start="131:34" pos:end="131:35">-&gt;</operator><name pos:start="131:36" pos:end="131:37">vq</name><index pos:start="131:38" pos:end="131:40">[<expr pos:start="131:39" pos:end="131:39"><name pos:start="131:39" pos:end="131:39">i</name></expr>]</index></name><operator pos:start="131:41" pos:end="131:41">.</operator><name pos:start="131:42" pos:end="131:55">last_avail_idx</name></expr></argument>, <argument pos:start="131:58" pos:end="131:63"><expr pos:start="131:58" pos:end="131:63"><name pos:start="131:58" pos:end="131:63">nheads</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="133:17" pos:end="133:26">return <expr pos:start="133:24" pos:end="133:25"><operator pos:start="133:24" pos:end="133:24">-</operator><literal type="number" pos:start="133:25" pos:end="133:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="137:11" pos:end="147:9">else if <condition pos:start="137:19" pos:end="137:46">(<expr pos:start="137:20" pos:end="137:45"><name pos:start="137:20" pos:end="137:30"><name pos:start="137:20" pos:end="137:23">vdev</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:27">vq</name><index pos:start="137:28" pos:end="137:30">[<expr pos:start="137:29" pos:end="137:29"><name pos:start="137:29" pos:end="137:29">i</name></expr>]</index></name><operator pos:start="137:31" pos:end="137:31">.</operator><name pos:start="137:32" pos:end="137:45">last_avail_idx</name></expr>)</condition> <block pos:start="137:48" pos:end="147:9">{<block_content pos:start="139:13" pos:end="145:26">

            <expr_stmt pos:start="139:13" pos:end="143:56"><expr pos:start="139:13" pos:end="143:55"><call pos:start="139:13" pos:end="143:55"><name pos:start="139:13" pos:end="139:24">error_report</name><argument_list pos:start="139:25" pos:end="143:55">(<argument pos:start="139:26" pos:end="141:60"><expr pos:start="139:26" pos:end="141:60"><literal type="string" pos:start="139:26" pos:end="139:45">"VQ %d address 0x0 "</literal>

                         <literal type="string" pos:start="141:26" pos:end="141:60">"inconsistent with Host index 0x%x"</literal></expr></argument>,

                         <argument pos:start="143:26" pos:end="143:26"><expr pos:start="143:26" pos:end="143:26"><name pos:start="143:26" pos:end="143:26">i</name></expr></argument>, <argument pos:start="143:29" pos:end="143:54"><expr pos:start="143:29" pos:end="143:54"><name pos:start="143:29" pos:end="143:39"><name pos:start="143:29" pos:end="143:32">vdev</name><operator pos:start="143:33" pos:end="143:34">-&gt;</operator><name pos:start="143:35" pos:end="143:36">vq</name><index pos:start="143:37" pos:end="143:39">[<expr pos:start="143:38" pos:end="143:38"><name pos:start="143:38" pos:end="143:38">i</name></expr>]</index></name><operator pos:start="143:40" pos:end="143:40">.</operator><name pos:start="143:41" pos:end="143:54">last_avail_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="145:17" pos:end="145:26">return <expr pos:start="145:24" pos:end="145:25"><operator pos:start="145:24" pos:end="145:24">-</operator><literal type="number" pos:start="145:25" pos:end="145:25">1</literal></expr>;</return>

	</block_content>}</block></if></if_stmt>

        <if_stmt pos:start="149:9" pos:end="157:9"><if pos:start="149:9" pos:end="157:9">if <condition pos:start="149:12" pos:end="149:26">(<expr pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:13">k</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:25">load_queue</name></name></expr>)</condition> <block pos:start="149:28" pos:end="157:9">{<block_content pos:start="151:13" pos:end="155:27">

            <expr_stmt pos:start="151:13" pos:end="151:52"><expr pos:start="151:13" pos:end="151:51"><name pos:start="151:13" pos:end="151:15">ret</name> <operator pos:start="151:17" pos:end="151:17">=</operator> <call pos:start="151:19" pos:end="151:51"><name pos:start="151:19" pos:end="151:31"><name pos:start="151:19" pos:end="151:19">k</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:31">load_queue</name></name><argument_list pos:start="151:32" pos:end="151:51">(<argument pos:start="151:33" pos:end="151:44"><expr pos:start="151:33" pos:end="151:44"><name pos:start="151:33" pos:end="151:44"><name pos:start="151:33" pos:end="151:36">qbus</name><operator pos:start="151:37" pos:end="151:38">-&gt;</operator><name pos:start="151:39" pos:end="151:44">parent</name></name></expr></argument>, <argument pos:start="151:47" pos:end="151:47"><expr pos:start="151:47" pos:end="151:47"><name pos:start="151:47" pos:end="151:47">i</name></expr></argument>, <argument pos:start="151:50" pos:end="151:50"><expr pos:start="151:50" pos:end="151:50"><name pos:start="151:50" pos:end="151:50">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="153:13" pos:end="155:27"><if pos:start="153:13" pos:end="155:27">if <condition pos:start="153:16" pos:end="153:20">(<expr pos:start="153:17" pos:end="153:19"><name pos:start="153:17" pos:end="153:19">ret</name></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:27"><block_content pos:start="155:17" pos:end="155:27">

                <return pos:start="155:17" pos:end="155:27">return <expr pos:start="155:24" pos:end="155:26"><name pos:start="155:24" pos:end="155:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="163:5" pos:end="163:49"><expr pos:start="163:5" pos:end="163:48"><call pos:start="163:5" pos:end="163:48"><name pos:start="163:5" pos:end="163:24">virtio_notify_vector</name><argument_list pos:start="163:25" pos:end="163:48">(<argument pos:start="163:26" pos:end="163:29"><expr pos:start="163:26" pos:end="163:29"><name pos:start="163:26" pos:end="163:29">vdev</name></expr></argument>, <argument pos:start="163:32" pos:end="163:47"><expr pos:start="163:32" pos:end="163:47"><name pos:start="163:32" pos:end="163:47">VIRTIO_NO_VECTOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="165:5" pos:end="165:13">return <expr pos:start="165:12" pos:end="165:12"><literal type="number" pos:start="165:12" pos:end="165:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
