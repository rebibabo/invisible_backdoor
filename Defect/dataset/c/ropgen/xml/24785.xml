<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24785.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">alloc_frame_buffer</name><parameter_list pos:start="1:30" pos:end="7:59">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>,  <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:61">Picture</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">pic</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:50"><decl pos:start="3:31" pos:end="3:50"><type pos:start="3:31" pos:end="3:50"><name pos:start="3:31" pos:end="3:46">MotionEstContext</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:50">me</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:73"><decl pos:start="3:53" pos:end="3:73"><type pos:start="3:53" pos:end="3:73"><name pos:start="3:53" pos:end="3:69">ScratchpadContext</name> <modifier pos:start="3:71" pos:end="3:71">*</modifier></type><name pos:start="3:72" pos:end="3:73">sc</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:48"><decl pos:start="5:31" pos:end="5:48"><type pos:start="5:31" pos:end="5:48"><name pos:start="5:31" pos:end="5:33">int</name></type> <name pos:start="5:35" pos:end="5:48">chroma_x_shift</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:68"><decl pos:start="5:51" pos:end="5:68"><type pos:start="5:51" pos:end="5:68"><name pos:start="5:51" pos:end="5:53">int</name></type> <name pos:start="5:55" pos:end="5:68">chroma_y_shift</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:42"><decl pos:start="7:31" pos:end="7:42"><type pos:start="7:31" pos:end="7:42"><name pos:start="7:31" pos:end="7:33">int</name></type> <name pos:start="7:35" pos:end="7:42">linesize</name></decl></parameter>, <parameter pos:start="7:45" pos:end="7:58"><decl pos:start="7:45" pos:end="7:58"><type pos:start="7:45" pos:end="7:58"><name pos:start="7:45" pos:end="7:47">int</name></type> <name pos:start="7:49" pos:end="7:58">uvlinesize</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="163:1">{<block_content pos:start="11:5" pos:end="161:13">

    <decl_stmt pos:start="11:5" pos:end="11:57"><decl pos:start="11:5" pos:end="11:56"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">edges_needed</name> <init pos:start="11:22" pos:end="11:56">= <expr pos:start="11:24" pos:end="11:56"><call pos:start="11:24" pos:end="11:56"><name pos:start="11:24" pos:end="11:42">av_codec_is_encoder</name><argument_list pos:start="11:43" pos:end="11:56">(<argument pos:start="11:44" pos:end="11:55"><expr pos:start="11:44" pos:end="11:55"><name pos:start="11:44" pos:end="11:55"><name pos:start="11:44" pos:end="11:48">avctx</name><operator pos:start="11:49" pos:end="11:50">-&gt;</operator><name pos:start="11:51" pos:end="11:55">codec</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">r</name></decl>, <decl pos:start="13:12" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:7">pic</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:11">tf</name><operator pos:start="17:12" pos:end="17:12">.</operator><name pos:start="17:13" pos:end="17:13">f</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:19">pic</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:22">f</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="49:5"><if pos:start="19:5" pos:end="39:5">if <condition pos:start="19:8" pos:end="23:44">(<expr pos:start="19:9" pos:end="23:43"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:13">avctx</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:23">codec_id</name></name> <operator pos:start="19:25" pos:end="19:26">!=</operator> <name pos:start="19:28" pos:end="19:48">AV_CODEC_ID_WMV3IMAGE</name> <operator pos:start="19:50" pos:end="19:51">&amp;&amp;</operator>

        <name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:13">avctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">codec_id</name></name> <operator pos:start="21:25" pos:end="21:26">!=</operator> <name pos:start="21:28" pos:end="21:47">AV_CODEC_ID_VC1IMAGE</name>  <operator pos:start="21:50" pos:end="21:51">&amp;&amp;</operator>

        <name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:13">avctx</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:23">codec_id</name></name> <operator pos:start="23:25" pos:end="23:26">!=</operator> <name pos:start="23:28" pos:end="23:43">AV_CODEC_ID_MSS2</name></expr>)</condition> <block pos:start="23:46" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:78">

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:25">(<expr pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:24">edges_needed</name></expr>)</condition> <block pos:start="25:27" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:60">

            <expr_stmt pos:start="27:13" pos:end="27:60"><expr pos:start="27:13" pos:end="27:59"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:15">pic</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:18">f</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:25">width</name></name>  <operator pos:start="27:28" pos:end="27:28">=</operator> <name pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:34">avctx</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:41">width</name></name>  <operator pos:start="27:44" pos:end="27:44">+</operator> <literal type="number" pos:start="27:46" pos:end="27:46">2</literal> <operator pos:start="27:48" pos:end="27:48">*</operator> <name pos:start="27:50" pos:end="27:59">EDGE_WIDTH</name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:60"><expr pos:start="29:13" pos:end="29:59"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:15">pic</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:18">f</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:26">height</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:42"><name pos:start="29:30" pos:end="29:34">avctx</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:42">height</name></name> <operator pos:start="29:44" pos:end="29:44">+</operator> <literal type="number" pos:start="29:46" pos:end="29:46">2</literal> <operator pos:start="29:48" pos:end="29:48">*</operator> <name pos:start="29:50" pos:end="29:59">EDGE_WIDTH</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="37:78"><expr pos:start="35:9" pos:end="37:77"><name pos:start="35:9" pos:end="35:9">r</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="37:77"><name pos:start="35:13" pos:end="35:32">ff_thread_get_buffer</name><argument_list pos:start="35:33" pos:end="37:77">(<argument pos:start="35:34" pos:end="35:38"><expr pos:start="35:34" pos:end="35:38"><name pos:start="35:34" pos:end="35:38">avctx</name></expr></argument>, <argument pos:start="35:41" pos:end="35:48"><expr pos:start="35:41" pos:end="35:48"><operator pos:start="35:41" pos:end="35:41">&amp;</operator><name pos:start="35:42" pos:end="35:48"><name pos:start="35:42" pos:end="35:44">pic</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:48">tf</name></name></expr></argument>,

                                 <argument pos:start="37:34" pos:end="37:76"><expr pos:start="37:34" pos:end="37:76"><ternary pos:start="37:34" pos:end="37:76"><condition pos:start="37:34" pos:end="37:49"><expr pos:start="37:34" pos:end="37:47"><name pos:start="37:34" pos:end="37:47"><name pos:start="37:34" pos:end="37:36">pic</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:47">reference</name></name></expr> ?</condition><then pos:start="37:51" pos:end="37:72"> <expr pos:start="37:51" pos:end="37:72"><name pos:start="37:51" pos:end="37:72">AV_GET_BUFFER_FLAG_REF</name></expr> </then><else pos:start="37:74" pos:end="37:76">: <expr pos:start="37:76" pos:end="37:76"><literal type="number" pos:start="37:76" pos:end="37:76">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="49:5">else <block pos:start="39:12" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:58">

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">pic</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:14">f</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:21">width</name></name>  <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:37"><name pos:start="41:26" pos:end="41:30">avctx</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:37">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:39"><expr pos:start="43:9" pos:end="43:38"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:11">pic</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:14">f</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:22">height</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:38"><name pos:start="43:26" pos:end="43:30">avctx</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:38">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:11">pic</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:14">f</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:22">format</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:39"><name pos:start="45:26" pos:end="45:30">avctx</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:39">pix_fmt</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:58"><expr pos:start="47:9" pos:end="47:57"><name pos:start="47:9" pos:end="47:9">r</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:57"><name pos:start="47:13" pos:end="47:39">avcodec_default_get_buffer2</name><argument_list pos:start="47:40" pos:end="47:57">(<argument pos:start="47:41" pos:end="47:45"><expr pos:start="47:41" pos:end="47:45"><name pos:start="47:41" pos:end="47:45">avctx</name></expr></argument>, <argument pos:start="47:48" pos:end="47:53"><expr pos:start="47:48" pos:end="47:53"><name pos:start="47:48" pos:end="47:53"><name pos:start="47:48" pos:end="47:50">pic</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:53">f</name></name></expr></argument>, <argument pos:start="47:56" pos:end="47:56"><expr pos:start="47:56" pos:end="47:56"><literal type="number" pos:start="47:56" pos:end="47:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="61:5">if <condition pos:start="53:8" pos:end="53:33">(<expr pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:9">r</name> <operator pos:start="53:11" pos:end="53:11">&lt;</operator> <literal type="number" pos:start="53:13" pos:end="53:13">0</literal> <operator pos:start="53:15" pos:end="53:16">||</operator> <operator pos:start="53:18" pos:end="53:18">!</operator><name pos:start="53:19" pos:end="53:32"><name pos:start="53:19" pos:end="53:21">pic</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:24">f</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:29">buf</name><index pos:start="53:30" pos:end="53:32">[<expr pos:start="53:31" pos:end="53:31"><literal type="number" pos:start="53:31" pos:end="53:31">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="53:35" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:18">

        <expr_stmt pos:start="55:9" pos:end="57:35"><expr pos:start="55:9" pos:end="57:34"><call pos:start="55:9" pos:end="57:34"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="57:34">(<argument pos:start="55:16" pos:end="55:20"><expr pos:start="55:16" pos:end="55:20"><name pos:start="55:16" pos:end="55:20">avctx</name></expr></argument>, <argument pos:start="55:23" pos:end="55:34"><expr pos:start="55:23" pos:end="55:34"><name pos:start="55:23" pos:end="55:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:37" pos:end="55:67"><expr pos:start="55:37" pos:end="55:67"><literal type="string" pos:start="55:37" pos:end="55:67">"get_buffer() failed (%d %p)\n"</literal></expr></argument>,

               <argument pos:start="57:16" pos:end="57:16"><expr pos:start="57:16" pos:end="57:16"><name pos:start="57:16" pos:end="57:16">r</name></expr></argument>, <argument pos:start="57:19" pos:end="57:33"><expr pos:start="57:19" pos:end="57:33"><name pos:start="57:19" pos:end="57:33"><name pos:start="57:19" pos:end="57:21">pic</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:24">f</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:30">data</name><index pos:start="57:31" pos:end="57:33">[<expr pos:start="57:32" pos:end="57:32"><literal type="number" pos:start="57:32" pos:end="57:32">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:18">return <expr pos:start="59:16" pos:end="59:17"><operator pos:start="59:16" pos:end="59:16">-</operator><literal type="number" pos:start="59:17" pos:end="59:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="85:5"><if pos:start="65:5" pos:end="85:5">if <condition pos:start="65:8" pos:end="65:21">(<expr pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:20">edges_needed</name></expr>)</condition> <block pos:start="65:23" pos:end="85:5">{<block_content pos:start="67:9" pos:end="83:39">

        <decl_stmt pos:start="67:9" pos:end="67:14"><decl pos:start="67:9" pos:end="67:13"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:13">i</name></decl>;</decl_stmt>

        <for pos:start="69:9" pos:end="79:9">for <control pos:start="69:13" pos:end="69:41">(<init pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:18"><name pos:start="69:14" pos:end="69:14">i</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr>;</init> <condition pos:start="69:21" pos:end="69:36"><expr pos:start="69:21" pos:end="69:35"><name pos:start="69:21" pos:end="69:35"><name pos:start="69:21" pos:end="69:23">pic</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:26">f</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:32">data</name><index pos:start="69:33" pos:end="69:35">[<expr pos:start="69:34" pos:end="69:34"><name pos:start="69:34" pos:end="69:34">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="69:38" pos:end="69:40"><expr pos:start="69:38" pos:end="69:40"><name pos:start="69:38" pos:end="69:38">i</name><operator pos:start="69:39" pos:end="69:40">++</operator></expr></incr>)</control> <block pos:start="69:43" pos:end="79:9">{<block_content pos:start="71:13" pos:end="77:38">

            <decl_stmt pos:start="71:13" pos:end="75:66"><decl pos:start="71:13" pos:end="75:65"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:22">offset</name> <init pos:start="71:24" pos:end="75:65">= <expr pos:start="71:26" pos:end="75:65"><operator pos:start="71:26" pos:end="71:26">(</operator><name pos:start="71:27" pos:end="71:36">EDGE_WIDTH</name> <operator pos:start="71:38" pos:end="71:39">&gt;&gt;</operator> <operator pos:start="71:41" pos:end="71:41">(</operator><ternary pos:start="71:42" pos:end="71:63"><condition pos:start="71:42" pos:end="71:44"><expr pos:start="71:42" pos:end="71:42"><name pos:start="71:42" pos:end="71:42">i</name></expr> ?</condition><then pos:start="71:46" pos:end="71:59"> <expr pos:start="71:46" pos:end="71:59"><name pos:start="71:46" pos:end="71:59">chroma_y_shift</name></expr> </then><else pos:start="71:61" pos:end="71:63">: <expr pos:start="71:63" pos:end="71:63"><literal type="number" pos:start="71:63" pos:end="71:63">0</literal></expr></else></ternary><operator pos:start="71:64" pos:end="71:64">)</operator><operator pos:start="71:65" pos:end="71:65">)</operator> <operator pos:start="71:67" pos:end="71:67">*</operator>

                         <name pos:start="73:26" pos:end="73:44"><name pos:start="73:26" pos:end="73:28">pic</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:31">f</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:41">linesize</name><index pos:start="73:42" pos:end="73:44">[<expr pos:start="73:43" pos:end="73:43"><name pos:start="73:43" pos:end="73:43">i</name></expr>]</index></name> <operator pos:start="73:46" pos:end="73:46">+</operator>

                         <operator pos:start="75:26" pos:end="75:26">(</operator><name pos:start="75:27" pos:end="75:36">EDGE_WIDTH</name> <operator pos:start="75:38" pos:end="75:39">&gt;&gt;</operator> <operator pos:start="75:41" pos:end="75:41">(</operator><ternary pos:start="75:42" pos:end="75:63"><condition pos:start="75:42" pos:end="75:44"><expr pos:start="75:42" pos:end="75:42"><name pos:start="75:42" pos:end="75:42">i</name></expr> ?</condition><then pos:start="75:46" pos:end="75:59"> <expr pos:start="75:46" pos:end="75:59"><name pos:start="75:46" pos:end="75:59">chroma_x_shift</name></expr> </then><else pos:start="75:61" pos:end="75:63">: <expr pos:start="75:63" pos:end="75:63"><literal type="number" pos:start="75:63" pos:end="75:63">0</literal></expr></else></ternary><operator pos:start="75:64" pos:end="75:64">)</operator><operator pos:start="75:65" pos:end="75:65">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:38"><expr pos:start="77:13" pos:end="77:37"><name pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:15">pic</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:18">f</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:24">data</name><index pos:start="77:25" pos:end="77:27">[<expr pos:start="77:26" pos:end="77:26"><name pos:start="77:26" pos:end="77:26">i</name></expr>]</index></name> <operator pos:start="77:29" pos:end="77:30">+=</operator> <name pos:start="77:32" pos:end="77:37">offset</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="81:9" pos:end="81:38"><expr pos:start="81:9" pos:end="81:37"><name pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:11">pic</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:14">f</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:21">width</name></name>  <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:37"><name pos:start="81:26" pos:end="81:30">avctx</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:37">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:39"><expr pos:start="83:9" pos:end="83:38"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:11">pic</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:14">f</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:22">height</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:38"><name pos:start="83:26" pos:end="83:30">avctx</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:38">height</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="109:5"><if pos:start="89:5" pos:end="109:5">if <condition pos:start="89:8" pos:end="89:23">(<expr pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:13">avctx</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:22">hwaccel</name></name></expr>)</condition> <block pos:start="89:25" pos:end="109:5">{<block_content pos:start="91:9" pos:end="107:9">

        <expr_stmt pos:start="91:9" pos:end="91:46"><expr pos:start="91:9" pos:end="91:45"><call pos:start="91:9" pos:end="91:45"><name pos:start="91:9" pos:end="91:14">assert</name><argument_list pos:start="91:15" pos:end="91:45">(<argument pos:start="91:16" pos:end="91:44"><expr pos:start="91:16" pos:end="91:44"><operator pos:start="91:16" pos:end="91:16">!</operator><name pos:start="91:17" pos:end="91:44"><name pos:start="91:17" pos:end="91:19">pic</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:44">hwaccel_picture_private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="107:9"><if pos:start="93:9" pos:end="107:9">if <condition pos:start="93:12" pos:end="93:49">(<expr pos:start="93:13" pos:end="93:48"><name pos:start="93:13" pos:end="93:48"><name pos:start="93:13" pos:end="93:17">avctx</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:26">hwaccel</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:48">frame_priv_data_size</name></name></expr>)</condition> <block pos:start="93:51" pos:end="107:9">{<block_content pos:start="95:13" pos:end="105:71">

            <expr_stmt pos:start="95:13" pos:end="95:91"><expr pos:start="95:13" pos:end="95:90"><name pos:start="95:13" pos:end="95:33"><name pos:start="95:13" pos:end="95:15">pic</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:33">hwaccel_priv_buf</name></name> <operator pos:start="95:35" pos:end="95:35">=</operator> <call pos:start="95:37" pos:end="95:90"><name pos:start="95:37" pos:end="95:52">av_buffer_allocz</name><argument_list pos:start="95:53" pos:end="95:90">(<argument pos:start="95:54" pos:end="95:89"><expr pos:start="95:54" pos:end="95:89"><name pos:start="95:54" pos:end="95:89"><name pos:start="95:54" pos:end="95:58">avctx</name><operator pos:start="95:59" pos:end="95:60">-&gt;</operator><name pos:start="95:61" pos:end="95:67">hwaccel</name><operator pos:start="95:68" pos:end="95:69">-&gt;</operator><name pos:start="95:70" pos:end="95:89">frame_priv_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="103:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="97:39">(<expr pos:start="97:17" pos:end="97:38"><operator pos:start="97:17" pos:end="97:17">!</operator><name pos:start="97:18" pos:end="97:38"><name pos:start="97:18" pos:end="97:20">pic</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:38">hwaccel_priv_buf</name></name></expr>)</condition> <block pos:start="97:41" pos:end="103:13">{<block_content pos:start="99:17" pos:end="101:26">

                <expr_stmt pos:start="99:17" pos:end="99:111"><expr pos:start="99:17" pos:end="99:110"><call pos:start="99:17" pos:end="99:110"><name pos:start="99:17" pos:end="99:22">av_log</name><argument_list pos:start="99:23" pos:end="99:110">(<argument pos:start="99:24" pos:end="99:28"><expr pos:start="99:24" pos:end="99:28"><name pos:start="99:24" pos:end="99:28">avctx</name></expr></argument>, <argument pos:start="99:31" pos:end="99:42"><expr pos:start="99:31" pos:end="99:42"><name pos:start="99:31" pos:end="99:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:45" pos:end="99:109"><expr pos:start="99:45" pos:end="99:109"><literal type="string" pos:start="99:45" pos:end="99:109">"alloc_frame_buffer() failed (hwaccel private data allocation)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="101:17" pos:end="101:26">return <expr pos:start="101:24" pos:end="101:25"><operator pos:start="101:24" pos:end="101:24">-</operator><literal type="number" pos:start="101:25" pos:end="101:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:71"><expr pos:start="105:13" pos:end="105:70"><name pos:start="105:13" pos:end="105:40"><name pos:start="105:13" pos:end="105:15">pic</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:40">hwaccel_picture_private</name></name> <operator pos:start="105:42" pos:end="105:42">=</operator> <name pos:start="105:44" pos:end="105:70"><name pos:start="105:44" pos:end="105:46">pic</name><operator pos:start="105:47" pos:end="105:48">-&gt;</operator><name pos:start="105:49" pos:end="105:64">hwaccel_priv_buf</name><operator pos:start="105:65" pos:end="105:66">-&gt;</operator><name pos:start="105:67" pos:end="105:70">data</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="125:5"><if pos:start="113:5" pos:end="125:5">if <condition pos:start="113:8" pos:end="115:56">(<expr pos:start="113:9" pos:end="115:55"><name pos:start="113:9" pos:end="113:16">linesize</name> <operator pos:start="113:18" pos:end="113:19">&amp;&amp;</operator> <operator pos:start="113:21" pos:end="113:21">(</operator><name pos:start="113:22" pos:end="113:29">linesize</name>   <operator pos:start="113:33" pos:end="113:34">!=</operator> <name pos:start="113:36" pos:end="113:54"><name pos:start="113:36" pos:end="113:38">pic</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:41">f</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:51">linesize</name><index pos:start="113:52" pos:end="113:54">[<expr pos:start="113:53" pos:end="113:53"><literal type="number" pos:start="113:53" pos:end="113:53">0</literal></expr>]</index></name> <operator pos:start="113:56" pos:end="113:57">||</operator>

                     <name pos:start="115:22" pos:end="115:31">uvlinesize</name> <operator pos:start="115:33" pos:end="115:34">!=</operator> <name pos:start="115:36" pos:end="115:54"><name pos:start="115:36" pos:end="115:38">pic</name><operator pos:start="115:39" pos:end="115:40">-&gt;</operator><name pos:start="115:41" pos:end="115:41">f</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:51">linesize</name><index pos:start="115:52" pos:end="115:54">[<expr pos:start="115:53" pos:end="115:53"><literal type="number" pos:start="115:53" pos:end="115:53">1</literal></expr>]</index></name><operator pos:start="115:55" pos:end="115:55">)</operator></expr>)</condition> <block pos:start="115:58" pos:end="125:5">{<block_content pos:start="117:9" pos:end="123:18">

        <expr_stmt pos:start="117:9" pos:end="119:57"><expr pos:start="117:9" pos:end="119:56"><call pos:start="117:9" pos:end="119:56"><name pos:start="117:9" pos:end="117:14">av_log</name><argument_list pos:start="117:15" pos:end="119:56">(<argument pos:start="117:16" pos:end="117:20"><expr pos:start="117:16" pos:end="117:20"><name pos:start="117:16" pos:end="117:20">avctx</name></expr></argument>, <argument pos:start="117:23" pos:end="117:34"><expr pos:start="117:23" pos:end="117:34"><name pos:start="117:23" pos:end="117:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="119:16" pos:end="119:55"><expr pos:start="119:16" pos:end="119:55"><literal type="string" pos:start="119:16" pos:end="119:55">"get_buffer() failed (stride changed)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:42"><expr pos:start="121:9" pos:end="121:41"><call pos:start="121:9" pos:end="121:41"><name pos:start="121:9" pos:end="121:29">ff_mpeg_unref_picture</name><argument_list pos:start="121:30" pos:end="121:41">(<argument pos:start="121:31" pos:end="121:35"><expr pos:start="121:31" pos:end="121:35"><name pos:start="121:31" pos:end="121:35">avctx</name></expr></argument>, <argument pos:start="121:38" pos:end="121:40"><expr pos:start="121:38" pos:end="121:40"><name pos:start="121:38" pos:end="121:40">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="123:9" pos:end="123:18">return <expr pos:start="123:16" pos:end="123:17"><operator pos:start="123:16" pos:end="123:16">-</operator><literal type="number" pos:start="123:17" pos:end="123:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="129:5" pos:end="139:5"><if pos:start="129:5" pos:end="139:5">if <condition pos:start="129:8" pos:end="129:51">(<expr pos:start="129:9" pos:end="129:50"><name pos:start="129:9" pos:end="129:27"><name pos:start="129:9" pos:end="129:11">pic</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:14">f</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:24">linesize</name><index pos:start="129:25" pos:end="129:27">[<expr pos:start="129:26" pos:end="129:26"><literal type="number" pos:start="129:26" pos:end="129:26">1</literal></expr>]</index></name> <operator pos:start="129:29" pos:end="129:30">!=</operator> <name pos:start="129:32" pos:end="129:50"><name pos:start="129:32" pos:end="129:34">pic</name><operator pos:start="129:35" pos:end="129:36">-&gt;</operator><name pos:start="129:37" pos:end="129:37">f</name><operator pos:start="129:38" pos:end="129:39">-&gt;</operator><name pos:start="129:40" pos:end="129:47">linesize</name><index pos:start="129:48" pos:end="129:50">[<expr pos:start="129:49" pos:end="129:49"><literal type="number" pos:start="129:49" pos:end="129:49">2</literal></expr>]</index></name></expr>)</condition> <block pos:start="129:53" pos:end="139:5">{<block_content pos:start="131:9" pos:end="137:18">

        <expr_stmt pos:start="131:9" pos:end="133:61"><expr pos:start="131:9" pos:end="133:60"><call pos:start="131:9" pos:end="133:60"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="133:60">(<argument pos:start="131:16" pos:end="131:20"><expr pos:start="131:16" pos:end="131:20"><name pos:start="131:16" pos:end="131:20">avctx</name></expr></argument>, <argument pos:start="131:23" pos:end="131:34"><expr pos:start="131:23" pos:end="131:34"><name pos:start="131:23" pos:end="131:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="133:16" pos:end="133:59"><expr pos:start="133:16" pos:end="133:59"><literal type="string" pos:start="133:16" pos:end="133:59">"get_buffer() failed (uv stride mismatch)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:42"><expr pos:start="135:9" pos:end="135:41"><call pos:start="135:9" pos:end="135:41"><name pos:start="135:9" pos:end="135:29">ff_mpeg_unref_picture</name><argument_list pos:start="135:30" pos:end="135:41">(<argument pos:start="135:31" pos:end="135:35"><expr pos:start="135:31" pos:end="135:35"><name pos:start="135:31" pos:end="135:35">avctx</name></expr></argument>, <argument pos:start="135:38" pos:end="135:40"><expr pos:start="135:38" pos:end="135:40"><name pos:start="135:38" pos:end="135:40">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="137:9" pos:end="137:18">return <expr pos:start="137:16" pos:end="137:17"><operator pos:start="137:16" pos:end="137:16">-</operator><literal type="number" pos:start="137:17" pos:end="137:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="143:5" pos:end="157:5"><if pos:start="143:5" pos:end="157:5">if <condition pos:start="143:8" pos:end="147:65">(<expr pos:start="143:9" pos:end="147:64"><operator pos:start="143:9" pos:end="143:9">!</operator><name pos:start="143:10" pos:end="143:28"><name pos:start="143:10" pos:end="143:11">sc</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:28">edge_emu_buffer</name></name> <operator pos:start="143:30" pos:end="143:31">&amp;&amp;</operator>

        <operator pos:start="145:9" pos:end="145:9">(</operator><name pos:start="145:10" pos:end="145:12">ret</name> <operator pos:start="145:14" pos:end="145:14">=</operator> <call pos:start="145:16" pos:end="147:59"><name pos:start="145:16" pos:end="145:38">ff_mpeg_framesize_alloc</name><argument_list pos:start="145:39" pos:end="147:59">(<argument pos:start="145:40" pos:end="145:44"><expr pos:start="145:40" pos:end="145:44"><name pos:start="145:40" pos:end="145:44">avctx</name></expr></argument>, <argument pos:start="145:47" pos:end="145:48"><expr pos:start="145:47" pos:end="145:48"><name pos:start="145:47" pos:end="145:48">me</name></expr></argument>, <argument pos:start="145:51" pos:end="145:52"><expr pos:start="145:51" pos:end="145:52"><name pos:start="145:51" pos:end="145:52">sc</name></expr></argument>,

                                       <argument pos:start="147:40" pos:end="147:58"><expr pos:start="147:40" pos:end="147:58"><name pos:start="147:40" pos:end="147:58"><name pos:start="147:40" pos:end="147:42">pic</name><operator pos:start="147:43" pos:end="147:44">-&gt;</operator><name pos:start="147:45" pos:end="147:45">f</name><operator pos:start="147:46" pos:end="147:47">-&gt;</operator><name pos:start="147:48" pos:end="147:55">linesize</name><index pos:start="147:56" pos:end="147:58">[<expr pos:start="147:57" pos:end="147:57"><literal type="number" pos:start="147:57" pos:end="147:57">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="147:60" pos:end="147:60">)</operator> <operator pos:start="147:62" pos:end="147:62">&lt;</operator> <literal type="number" pos:start="147:64" pos:end="147:64">0</literal></expr>)</condition> <block pos:start="147:67" pos:end="157:5">{<block_content pos:start="149:9" pos:end="155:19">

        <expr_stmt pos:start="149:9" pos:end="151:77"><expr pos:start="149:9" pos:end="151:76"><call pos:start="149:9" pos:end="151:76"><name pos:start="149:9" pos:end="149:14">av_log</name><argument_list pos:start="149:15" pos:end="151:76">(<argument pos:start="149:16" pos:end="149:20"><expr pos:start="149:16" pos:end="149:20"><name pos:start="149:16" pos:end="149:20">avctx</name></expr></argument>, <argument pos:start="149:23" pos:end="149:34"><expr pos:start="149:23" pos:end="149:34"><name pos:start="149:23" pos:end="149:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="151:16" pos:end="151:75"><expr pos:start="151:16" pos:end="151:75"><literal type="string" pos:start="151:16" pos:end="151:75">"get_buffer() failed to allocate context scratch buffers.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:42"><expr pos:start="153:9" pos:end="153:41"><call pos:start="153:9" pos:end="153:41"><name pos:start="153:9" pos:end="153:29">ff_mpeg_unref_picture</name><argument_list pos:start="153:30" pos:end="153:41">(<argument pos:start="153:31" pos:end="153:35"><expr pos:start="153:31" pos:end="153:35"><name pos:start="153:31" pos:end="153:35">avctx</name></expr></argument>, <argument pos:start="153:38" pos:end="153:40"><expr pos:start="153:38" pos:end="153:40"><name pos:start="153:38" pos:end="153:40">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="155:9" pos:end="155:19">return <expr pos:start="155:16" pos:end="155:18"><name pos:start="155:16" pos:end="155:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="161:5" pos:end="161:13">return <expr pos:start="161:12" pos:end="161:12"><literal type="number" pos:start="161:12" pos:end="161:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
