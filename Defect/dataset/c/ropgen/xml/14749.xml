<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14749.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:25"><name pos:start="1:8" pos:end="1:11">enum</name> <name pos:start="1:13" pos:end="1:25">AVPixelFormat</name></name></type> <name pos:start="1:27" pos:end="1:36">get_format</name><parameter_list pos:start="1:37" pos:end="1:91">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:90"><decl pos:start="1:57" pos:end="1:90"><type pos:start="1:57" pos:end="1:90"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:80"><name pos:start="1:63" pos:end="1:66">enum</name> <name pos:start="1:68" pos:end="1:80">AVPixelFormat</name></name> <modifier pos:start="1:82" pos:end="1:82">*</modifier></type><name pos:start="1:83" pos:end="1:90">pix_fmts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:14">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">InputStream</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">ist</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><name pos:start="5:24" pos:end="5:32"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:30"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:28"><name pos:start="7:11" pos:end="7:14">enum</name> <name pos:start="7:16" pos:end="7:28">AVPixelFormat</name></name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:31">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="81:5">for <control pos:start="13:9" pos:end="13:37">(<init pos:start="13:10" pos:end="13:22"><expr pos:start="13:10" pos:end="13:21"><name pos:start="13:10" pos:end="13:10">p</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:21">pix_fmts</name></expr>;</init> <condition pos:start="13:24" pos:end="13:32"><expr pos:start="13:24" pos:end="13:31"><operator pos:start="13:24" pos:end="13:24">*</operator><name pos:start="13:25" pos:end="13:25">p</name> <operator pos:start="13:27" pos:end="13:28">!=</operator> <operator pos:start="13:30" pos:end="13:30">-</operator><literal type="number" pos:start="13:31" pos:end="13:31">1</literal></expr>;</condition> <incr pos:start="13:34" pos:end="13:36"><expr pos:start="13:34" pos:end="13:36"><name pos:start="13:34" pos:end="13:34">p</name><operator pos:start="13:35" pos:end="13:36">++</operator></expr></incr>)</control> <block pos:start="13:39" pos:end="81:5">{<block_content pos:start="15:9" pos:end="79:14">

        <decl_stmt pos:start="15:9" pos:end="15:65"><decl pos:start="15:9" pos:end="15:64"><type pos:start="15:9" pos:end="15:34"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:32">AVPixFmtDescriptor</name> <modifier pos:start="15:34" pos:end="15:34">*</modifier></type><name pos:start="15:35" pos:end="15:38">desc</name> <init pos:start="15:40" pos:end="15:64">= <expr pos:start="15:42" pos:end="15:64"><call pos:start="15:42" pos:end="15:64"><name pos:start="15:42" pos:end="15:60">av_pix_fmt_desc_get</name><argument_list pos:start="15:61" pos:end="15:64">(<argument pos:start="15:62" pos:end="15:63"><expr pos:start="15:62" pos:end="15:63"><operator pos:start="15:62" pos:end="15:62">*</operator><name pos:start="15:63" pos:end="15:63">p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:31"><decl pos:start="17:9" pos:end="17:30"><type pos:start="17:9" pos:end="17:23"><specifier pos:start="17:9" pos:end="17:13">const</specifier> <name pos:start="17:15" pos:end="17:21">HWAccel</name> <modifier pos:start="17:23" pos:end="17:23">*</modifier></type><name pos:start="17:24" pos:end="17:30">hwaccel</name></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="23:18"><if pos:start="21:9" pos:end="23:18">if <condition pos:start="21:12" pos:end="21:53">(<expr pos:start="21:13" pos:end="21:52"><operator pos:start="21:13" pos:end="21:13">!</operator><operator pos:start="21:14" pos:end="21:14">(</operator><name pos:start="21:15" pos:end="21:25"><name pos:start="21:15" pos:end="21:18">desc</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:25">flags</name></name> <operator pos:start="21:27" pos:end="21:27">&amp;</operator> <name pos:start="21:29" pos:end="21:51">AV_PIX_FMT_FLAG_HWACCEL</name><operator pos:start="21:52" pos:end="21:52">)</operator></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:18"><block_content pos:start="23:13" pos:end="23:18">

            <break pos:start="23:13" pos:end="23:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:51"><expr pos:start="27:9" pos:end="27:50"><name pos:start="27:9" pos:end="27:15">hwaccel</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:50"><name pos:start="27:19" pos:end="27:29">get_hwaccel</name><argument_list pos:start="27:30" pos:end="27:50">(<argument pos:start="27:31" pos:end="27:32"><expr pos:start="27:31" pos:end="27:32"><operator pos:start="27:31" pos:end="27:31">*</operator><name pos:start="27:32" pos:end="27:32">p</name></expr></argument>, <argument pos:start="27:35" pos:end="27:49"><expr pos:start="27:35" pos:end="27:49"><name pos:start="27:35" pos:end="27:49"><name pos:start="27:35" pos:end="27:37">ist</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:49">hwaccel_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:21"><if pos:start="29:9" pos:end="35:21">if <condition pos:start="29:12" pos:end="33:80">(<expr pos:start="29:13" pos:end="33:79"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:20">hwaccel</name> <operator pos:start="29:22" pos:end="29:23">||</operator>

            <operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:35"><name pos:start="31:14" pos:end="31:16">ist</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:35">active_hwaccel_id</name></name> <operator pos:start="31:37" pos:end="31:38">&amp;&amp;</operator> <name pos:start="31:40" pos:end="31:61"><name pos:start="31:40" pos:end="31:42">ist</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:61">active_hwaccel_id</name></name> <operator pos:start="31:63" pos:end="31:64">!=</operator> <name pos:start="31:66" pos:end="31:76"><name pos:start="31:66" pos:end="31:72">hwaccel</name><operator pos:start="31:73" pos:end="31:74">-&gt;</operator><name pos:start="31:75" pos:end="31:76">id</name></name><operator pos:start="31:77" pos:end="31:77">)</operator> <operator pos:start="31:79" pos:end="31:80">||</operator>

            <operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:28"><name pos:start="33:14" pos:end="33:16">ist</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:28">hwaccel_id</name></name> <operator pos:start="33:30" pos:end="33:31">!=</operator> <name pos:start="33:33" pos:end="33:44">HWACCEL_AUTO</name> <operator pos:start="33:46" pos:end="33:47">&amp;&amp;</operator> <name pos:start="33:49" pos:end="33:63"><name pos:start="33:49" pos:end="33:51">ist</name><operator pos:start="33:52" pos:end="33:53">-&gt;</operator><name pos:start="33:54" pos:end="33:63">hwaccel_id</name></name> <operator pos:start="33:65" pos:end="33:66">!=</operator> <name pos:start="33:68" pos:end="33:78"><name pos:start="33:68" pos:end="33:74">hwaccel</name><operator pos:start="33:75" pos:end="33:76">-&gt;</operator><name pos:start="33:77" pos:end="33:78">id</name></name><operator pos:start="33:79" pos:end="33:79">)</operator></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:21"><block_content pos:start="35:13" pos:end="35:21">

            <continue pos:start="35:13" pos:end="35:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:30"><name pos:start="39:15" pos:end="39:27"><name pos:start="39:15" pos:end="39:21">hwaccel</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:27">init</name></name><argument_list pos:start="39:28" pos:end="39:30">(<argument pos:start="39:29" pos:end="39:29"><expr pos:start="39:29" pos:end="39:29"><name pos:start="39:29" pos:end="39:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="59:9"><if pos:start="41:9" pos:end="59:9">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition> <block pos:start="41:22" pos:end="59:9">{<block_content pos:start="43:13" pos:end="57:21">

            <if_stmt pos:start="43:13" pos:end="55:13"><if pos:start="43:13" pos:end="55:13">if <condition pos:start="43:16" pos:end="43:47">(<expr pos:start="43:17" pos:end="43:46"><name pos:start="43:17" pos:end="43:31"><name pos:start="43:17" pos:end="43:19">ist</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:31">hwaccel_id</name></name> <operator pos:start="43:33" pos:end="43:34">==</operator> <name pos:start="43:36" pos:end="43:46"><name pos:start="43:36" pos:end="43:42">hwaccel</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:46">id</name></name></expr>)</condition> <block pos:start="43:49" pos:end="55:13">{<block_content pos:start="45:17" pos:end="53:39">

                <expr_stmt pos:start="45:17" pos:end="51:56"><expr pos:start="45:17" pos:end="51:55"><call pos:start="45:17" pos:end="51:55"><name pos:start="45:17" pos:end="45:22">av_log</name><argument_list pos:start="45:23" pos:end="51:55">(<argument pos:start="45:24" pos:end="45:27"><expr pos:start="45:24" pos:end="45:27"><name pos:start="45:24" pos:end="45:27">NULL</name></expr></argument>, <argument pos:start="45:30" pos:end="45:41"><expr pos:start="45:30" pos:end="45:41"><name pos:start="45:30" pos:end="45:41">AV_LOG_FATAL</name></expr></argument>,

                       <argument pos:start="47:24" pos:end="49:53"><expr pos:start="47:24" pos:end="49:53"><literal type="string" pos:start="47:24" pos:end="47:71">"%s hwaccel requested for input stream #%d:%d, "</literal>

                       <literal type="string" pos:start="49:24" pos:end="49:53">"but cannot be initialized.\n"</literal></expr></argument>, <argument pos:start="49:56" pos:end="49:68"><expr pos:start="49:56" pos:end="49:68"><name pos:start="49:56" pos:end="49:68"><name pos:start="49:56" pos:end="49:62">hwaccel</name><operator pos:start="49:63" pos:end="49:64">-&gt;</operator><name pos:start="49:65" pos:end="49:68">name</name></name></expr></argument>,

                       <argument pos:start="51:24" pos:end="51:38"><expr pos:start="51:24" pos:end="51:38"><name pos:start="51:24" pos:end="51:38"><name pos:start="51:24" pos:end="51:26">ist</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:38">file_index</name></name></expr></argument>, <argument pos:start="51:41" pos:end="51:54"><expr pos:start="51:41" pos:end="51:54"><name pos:start="51:41" pos:end="51:54"><name pos:start="51:41" pos:end="51:43">ist</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:47">st</name><operator pos:start="51:48" pos:end="51:49">-&gt;</operator><name pos:start="51:50" pos:end="51:54">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="53:17" pos:end="53:39">return <expr pos:start="53:24" pos:end="53:38"><name pos:start="53:24" pos:end="53:38">AV_PIX_FMT_NONE</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <continue pos:start="57:13" pos:end="57:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="63:9" pos:end="71:9"><if pos:start="63:9" pos:end="71:9">if <condition pos:start="63:12" pos:end="63:31">(<expr pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:15">ist</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:30">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="63:33" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:39">

            <expr_stmt pos:start="65:13" pos:end="65:65"><expr pos:start="65:13" pos:end="65:64"><name pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:28">hw_frames_ctx</name></name> <operator pos:start="65:30" pos:end="65:30">=</operator> <call pos:start="65:32" pos:end="65:64"><name pos:start="65:32" pos:end="65:44">av_buffer_ref</name><argument_list pos:start="65:45" pos:end="65:64">(<argument pos:start="65:46" pos:end="65:63"><expr pos:start="65:46" pos:end="65:63"><name pos:start="65:46" pos:end="65:63"><name pos:start="65:46" pos:end="65:48">ist</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:63">hw_frames_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="69:39"><if pos:start="67:13" pos:end="69:39">if <condition pos:start="67:16" pos:end="67:34">(<expr pos:start="67:17" pos:end="67:33"><operator pos:start="67:17" pos:end="67:17">!</operator><name pos:start="67:18" pos:end="67:33"><name pos:start="67:18" pos:end="67:18">s</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:33">hw_frames_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:39"><block_content pos:start="69:17" pos:end="69:39">

                <return pos:start="69:17" pos:end="69:39">return <expr pos:start="69:24" pos:end="69:38"><name pos:start="69:24" pos:end="69:38">AV_PIX_FMT_NONE</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:45"><expr pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:11">ist</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:30">active_hwaccel_id</name></name> <operator pos:start="75:32" pos:end="75:32">=</operator> <name pos:start="75:34" pos:end="75:44"><name pos:start="75:34" pos:end="75:40">hwaccel</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:44">id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:36"><expr pos:start="77:9" pos:end="77:35"><name pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:11">ist</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:28">hwaccel_pix_fmt</name></name>   <operator pos:start="77:32" pos:end="77:32">=</operator> <operator pos:start="77:34" pos:end="77:34">*</operator><name pos:start="77:35" pos:end="77:35">p</name></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    </block_content>}</block></for>



    <return pos:start="85:5" pos:end="85:14">return <expr pos:start="85:12" pos:end="85:13"><operator pos:start="85:12" pos:end="85:12">*</operator><name pos:start="85:13" pos:end="85:13">p</name></expr>;</return>

</block_content>}</block></function>
</unit>
