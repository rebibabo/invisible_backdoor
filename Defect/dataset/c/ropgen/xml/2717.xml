<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2717.c" pos:tabs="8"><function pos:start="1:1" pos:end="293:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:14">bdrv_open2</name><parameter_list pos:start="1:15" pos:end="3:32">(<parameter pos:start="1:16" pos:end="1:35"><decl pos:start="1:16" pos:end="1:35"><type pos:start="1:16" pos:end="1:35"><name pos:start="1:16" pos:end="1:31">BlockDriverState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">bs</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:47">char</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:57">filename</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">flags</name></decl></parameter>,

               <parameter pos:start="3:16" pos:end="3:31"><decl pos:start="3:16" pos:end="3:31"><type pos:start="3:16" pos:end="3:31"><name pos:start="3:16" pos:end="3:26">BlockDriver</name> <modifier pos:start="3:28" pos:end="3:28">*</modifier></type><name pos:start="3:29" pos:end="3:31">drv</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="293:1">{<block_content pos:start="7:5" pos:end="291:13">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:23">open_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:31"><name pos:start="9:10" pos:end="9:21">tmp_filename</name><index pos:start="9:22" pos:end="9:31">[<expr pos:start="9:23" pos:end="9:30"><name pos:start="9:23" pos:end="9:30">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:35"><name pos:start="11:10" pos:end="11:25">backing_filename</name><index pos:start="11:26" pos:end="11:35">[<expr pos:start="11:27" pos:end="11:34"><name pos:start="11:27" pos:end="11:34">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:6">bs</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:20">is_temporary</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:6">bs</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:17">encrypted</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:6">bs</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:17">valid_key</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="21:5" pos:end="21:74">/* buffer_alignment defaulted to 512, drivers can change this value */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:6">bs</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:24">buffer_alignment</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <literal type="number" pos:start="23:28" pos:end="23:30">512</literal></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="129:5"><if pos:start="27:5" pos:end="129:5">if <condition pos:start="27:8" pos:end="27:32">(<expr pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:13">flags</name> <operator pos:start="27:15" pos:end="27:15">&amp;</operator> <name pos:start="27:17" pos:end="27:31">BDRV_O_SNAPSHOT</name></expr>)</condition> <block pos:start="27:34" pos:end="129:5">{<block_content pos:start="29:9" pos:end="127:29">

        <decl_stmt pos:start="29:9" pos:end="29:30"><decl pos:start="29:9" pos:end="29:29"><type pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:24">BlockDriverState</name> <modifier pos:start="29:26" pos:end="29:26">*</modifier></type><name pos:start="29:27" pos:end="29:29">bs1</name></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:27"><decl pos:start="31:9" pos:end="31:26"><type pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:15">int64_t</name></type> <name pos:start="31:17" pos:end="31:26">total_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:28"><decl pos:start="33:9" pos:end="33:27"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:23">is_protocol</name> <init pos:start="33:25" pos:end="33:27">= <expr pos:start="33:27" pos:end="33:27"><literal type="number" pos:start="33:27" pos:end="33:27">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:32"><decl pos:start="35:9" pos:end="35:31"><type pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:19">BlockDriver</name> <modifier pos:start="35:21" pos:end="35:21">*</modifier></type><name pos:start="35:22" pos:end="35:31">bdrv_qcow2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:37"><decl pos:start="37:9" pos:end="37:36"><type pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:27">QEMUOptionParameter</name> <modifier pos:start="37:29" pos:end="37:29">*</modifier></type><name pos:start="37:30" pos:end="37:36">options</name></decl>;</decl_stmt>



        <comment type="block" pos:start="41:9" pos:end="43:52">/* if snapshot, we create a temporary backing file and open it

           instead of opening 'filename' directly */</comment>



        <comment type="block" pos:start="47:9" pos:end="47:48">/* if there is a backing file, use it */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:27"><expr pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:11">bs1</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:26"><name pos:start="49:15" pos:end="49:22">bdrv_new</name><argument_list pos:start="49:23" pos:end="49:26">(<argument pos:start="49:24" pos:end="49:25"><expr pos:start="49:24" pos:end="49:25"><literal type="string" pos:start="49:24" pos:end="49:25">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:48"><expr pos:start="51:9" pos:end="51:47"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:47"><name pos:start="51:15" pos:end="51:24">bdrv_open2</name><argument_list pos:start="51:25" pos:end="51:47">(<argument pos:start="51:26" pos:end="51:28"><expr pos:start="51:26" pos:end="51:28"><name pos:start="51:26" pos:end="51:28">bs1</name></expr></argument>, <argument pos:start="51:31" pos:end="51:38"><expr pos:start="51:31" pos:end="51:38"><name pos:start="51:31" pos:end="51:38">filename</name></expr></argument>, <argument pos:start="51:41" pos:end="51:41"><expr pos:start="51:41" pos:end="51:41"><literal type="number" pos:start="51:41" pos:end="51:41">0</literal></expr></argument>, <argument pos:start="51:44" pos:end="51:46"><expr pos:start="51:44" pos:end="51:46"><name pos:start="51:44" pos:end="51:46">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:20">(<expr pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">&lt;</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>)</condition> <block pos:start="53:22" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:23">

            <expr_stmt pos:start="55:13" pos:end="55:29"><expr pos:start="55:13" pos:end="55:28"><call pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:23">bdrv_delete</name><argument_list pos:start="55:24" pos:end="55:28">(<argument pos:start="55:25" pos:end="55:27"><expr pos:start="55:25" pos:end="55:27"><name pos:start="55:25" pos:end="55:27">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:23">return <expr pos:start="57:20" pos:end="57:22"><name pos:start="57:20" pos:end="57:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:61"><expr pos:start="61:9" pos:end="61:60"><name pos:start="61:9" pos:end="61:18">total_size</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <call pos:start="61:22" pos:end="61:40"><name pos:start="61:22" pos:end="61:35">bdrv_getlength</name><argument_list pos:start="61:36" pos:end="61:40">(<argument pos:start="61:37" pos:end="61:39"><expr pos:start="61:37" pos:end="61:39"><name pos:start="61:37" pos:end="61:39">bs1</name></expr></argument>)</argument_list></call> <operator pos:start="61:42" pos:end="61:43">&gt;&gt;</operator> <name pos:start="61:45" pos:end="61:60">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>



        <if_stmt pos:start="65:9" pos:end="67:28"><if pos:start="65:9" pos:end="67:28">if <condition pos:start="65:12" pos:end="65:48">(<expr pos:start="65:13" pos:end="65:47"><name pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:15">bs1</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:20">drv</name></name> <operator pos:start="65:22" pos:end="65:23">&amp;&amp;</operator> <name pos:start="65:25" pos:end="65:47"><name pos:start="65:25" pos:end="65:27">bs1</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:32">drv</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:47">protocol_name</name></name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:28"><block_content pos:start="67:13" pos:end="67:28">

            <expr_stmt pos:start="67:13" pos:end="67:28"><expr pos:start="67:13" pos:end="67:27"><name pos:start="67:13" pos:end="67:23">is_protocol</name> <operator pos:start="67:25" pos:end="67:25">=</operator> <literal type="number" pos:start="67:27" pos:end="67:27">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><call pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:19">bdrv_delete</name><argument_list pos:start="71:20" pos:end="71:24">(<argument pos:start="71:21" pos:end="71:23"><expr pos:start="71:21" pos:end="71:23"><name pos:start="71:21" pos:end="71:23">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:61"><expr pos:start="75:9" pos:end="75:60"><call pos:start="75:9" pos:end="75:60"><name pos:start="75:9" pos:end="75:24">get_tmp_filename</name><argument_list pos:start="75:25" pos:end="75:60">(<argument pos:start="75:26" pos:end="75:37"><expr pos:start="75:26" pos:end="75:37"><name pos:start="75:26" pos:end="75:37">tmp_filename</name></expr></argument>, <argument pos:start="75:40" pos:end="75:59"><expr pos:start="75:40" pos:end="75:59"><sizeof pos:start="75:40" pos:end="75:59">sizeof<argument_list pos:start="75:46" pos:end="75:59">(<argument pos:start="75:47" pos:end="75:58"><expr pos:start="75:47" pos:end="75:58"><name pos:start="75:47" pos:end="75:58">tmp_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="79:9" pos:end="79:52">/* Real path is meaningless for protocols */</comment>

        <if_stmt pos:start="81:9" pos:end="89:26"><if pos:start="81:9" pos:end="85:37">if <condition pos:start="81:12" pos:end="81:24">(<expr pos:start="81:13" pos:end="81:23"><name pos:start="81:13" pos:end="81:23">is_protocol</name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="85:37"><block_content pos:start="83:13" pos:end="85:37">

            <expr_stmt pos:start="83:13" pos:end="85:37"><expr pos:start="83:13" pos:end="85:36"><call pos:start="83:13" pos:end="85:36"><name pos:start="83:13" pos:end="83:20">snprintf</name><argument_list pos:start="83:21" pos:end="85:36">(<argument pos:start="83:22" pos:end="83:37"><expr pos:start="83:22" pos:end="83:37"><name pos:start="83:22" pos:end="83:37">backing_filename</name></expr></argument>, <argument pos:start="83:40" pos:end="83:63"><expr pos:start="83:40" pos:end="83:63"><sizeof pos:start="83:40" pos:end="83:63">sizeof<argument_list pos:start="83:46" pos:end="83:63">(<argument pos:start="83:47" pos:end="83:62"><expr pos:start="83:47" pos:end="83:62"><name pos:start="83:47" pos:end="83:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="85:22" pos:end="85:25"><expr pos:start="85:22" pos:end="85:25"><literal type="string" pos:start="85:22" pos:end="85:25">"%s"</literal></expr></argument>, <argument pos:start="85:28" pos:end="85:35"><expr pos:start="85:28" pos:end="85:35"><name pos:start="85:28" pos:end="85:35">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="87:9" pos:end="89:26">else if <condition pos:start="87:17" pos:end="87:55">(<expr pos:start="87:18" pos:end="87:54"><operator pos:start="87:18" pos:end="87:18">!</operator><call pos:start="87:19" pos:end="87:54"><name pos:start="87:19" pos:end="87:26">realpath</name><argument_list pos:start="87:27" pos:end="87:54">(<argument pos:start="87:28" pos:end="87:35"><expr pos:start="87:28" pos:end="87:35"><name pos:start="87:28" pos:end="87:35">filename</name></expr></argument>, <argument pos:start="87:38" pos:end="87:53"><expr pos:start="87:38" pos:end="87:53"><name pos:start="87:38" pos:end="87:53">backing_filename</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:26"><block_content pos:start="89:13" pos:end="89:26">

            <return pos:start="89:13" pos:end="89:26">return <expr pos:start="89:20" pos:end="89:25"><operator pos:start="89:20" pos:end="89:20">-</operator><name pos:start="89:21" pos:end="89:25">errno</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:47"><expr pos:start="93:9" pos:end="93:46"><name pos:start="93:9" pos:end="93:18">bdrv_qcow2</name> <operator pos:start="93:20" pos:end="93:20">=</operator> <call pos:start="93:22" pos:end="93:46"><name pos:start="93:22" pos:end="93:37">bdrv_find_format</name><argument_list pos:start="93:38" pos:end="93:46">(<argument pos:start="93:39" pos:end="93:45"><expr pos:start="93:39" pos:end="93:45"><literal type="string" pos:start="93:39" pos:end="93:45">"qcow2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:80"><expr pos:start="95:9" pos:end="95:79"><name pos:start="95:9" pos:end="95:15">options</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:79"><name pos:start="95:19" pos:end="95:41">parse_option_parameters</name><argument_list pos:start="95:42" pos:end="95:79">(<argument pos:start="95:43" pos:end="95:44"><expr pos:start="95:43" pos:end="95:44"><literal type="string" pos:start="95:43" pos:end="95:44">""</literal></expr></argument>, <argument pos:start="95:47" pos:end="95:72"><expr pos:start="95:47" pos:end="95:72"><name pos:start="95:47" pos:end="95:72"><name pos:start="95:47" pos:end="95:56">bdrv_qcow2</name><operator pos:start="95:57" pos:end="95:58">-&gt;</operator><name pos:start="95:59" pos:end="95:72">create_options</name></name></expr></argument>, <argument pos:start="95:75" pos:end="95:78"><expr pos:start="95:75" pos:end="95:78"><name pos:start="95:75" pos:end="95:78">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:76"><expr pos:start="99:9" pos:end="99:75"><call pos:start="99:9" pos:end="99:75"><name pos:start="99:9" pos:end="99:32">set_option_parameter_int</name><argument_list pos:start="99:33" pos:end="99:75">(<argument pos:start="99:34" pos:end="99:40"><expr pos:start="99:34" pos:end="99:40"><name pos:start="99:34" pos:end="99:40">options</name></expr></argument>, <argument pos:start="99:43" pos:end="99:56"><expr pos:start="99:43" pos:end="99:56"><name pos:start="99:43" pos:end="99:56">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="99:59" pos:end="99:74"><expr pos:start="99:59" pos:end="99:74"><name pos:start="99:59" pos:end="99:68">total_size</name> <operator pos:start="99:70" pos:end="99:70">*</operator> <literal type="number" pos:start="99:72" pos:end="99:74">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:80"><expr pos:start="101:9" pos:end="101:79"><call pos:start="101:9" pos:end="101:79"><name pos:start="101:9" pos:end="101:28">set_option_parameter</name><argument_list pos:start="101:29" pos:end="101:79">(<argument pos:start="101:30" pos:end="101:36"><expr pos:start="101:30" pos:end="101:36"><name pos:start="101:30" pos:end="101:36">options</name></expr></argument>, <argument pos:start="101:39" pos:end="101:60"><expr pos:start="101:39" pos:end="101:60"><name pos:start="101:39" pos:end="101:60">BLOCK_OPT_BACKING_FILE</name></expr></argument>, <argument pos:start="101:63" pos:end="101:78"><expr pos:start="101:63" pos:end="101:78"><name pos:start="101:63" pos:end="101:78">backing_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="109:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:16">(<expr pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">drv</name></expr>)</condition> <block pos:start="103:18" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:34">

            <expr_stmt pos:start="105:13" pos:end="107:34"><expr pos:start="105:13" pos:end="107:33"><call pos:start="105:13" pos:end="107:33"><name pos:start="105:13" pos:end="105:32">set_option_parameter</name><argument_list pos:start="105:33" pos:end="107:33">(<argument pos:start="105:34" pos:end="105:40"><expr pos:start="105:34" pos:end="105:40"><name pos:start="105:34" pos:end="105:40">options</name></expr></argument>, <argument pos:start="105:43" pos:end="105:63"><expr pos:start="105:43" pos:end="105:63"><name pos:start="105:43" pos:end="105:63">BLOCK_OPT_BACKING_FMT</name></expr></argument>,

                <argument pos:start="107:17" pos:end="107:32"><expr pos:start="107:17" pos:end="107:32"><name pos:start="107:17" pos:end="107:32"><name pos:start="107:17" pos:end="107:19">drv</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:32">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:61"><expr pos:start="113:9" pos:end="113:60"><name pos:start="113:9" pos:end="113:11">ret</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="113:60"><name pos:start="113:15" pos:end="113:25">bdrv_create</name><argument_list pos:start="113:26" pos:end="113:60">(<argument pos:start="113:27" pos:end="113:36"><expr pos:start="113:27" pos:end="113:36"><name pos:start="113:27" pos:end="113:36">bdrv_qcow2</name></expr></argument>, <argument pos:start="113:39" pos:end="113:50"><expr pos:start="113:39" pos:end="113:50"><name pos:start="113:39" pos:end="113:50">tmp_filename</name></expr></argument>, <argument pos:start="113:53" pos:end="113:59"><expr pos:start="113:53" pos:end="113:59"><name pos:start="113:53" pos:end="113:59">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="119:9"><if pos:start="115:9" pos:end="119:9">if <condition pos:start="115:12" pos:end="115:20">(<expr pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:15">ret</name> <operator pos:start="115:17" pos:end="115:17">&lt;</operator> <literal type="number" pos:start="115:19" pos:end="115:19">0</literal></expr>)</condition> <block pos:start="115:22" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:23">

            <return pos:start="117:13" pos:end="117:23">return <expr pos:start="117:20" pos:end="117:22"><name pos:start="117:20" pos:end="117:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:32"><expr pos:start="123:9" pos:end="123:31"><name pos:start="123:9" pos:end="123:16">filename</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <name pos:start="123:20" pos:end="123:31">tmp_filename</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:25"><expr pos:start="125:9" pos:end="125:24"><name pos:start="125:9" pos:end="125:11">drv</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <name pos:start="125:15" pos:end="125:24">bdrv_qcow2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:29"><expr pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:10">bs</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:24">is_temporary</name></name> <operator pos:start="127:26" pos:end="127:26">=</operator> <literal type="number" pos:start="127:28" pos:end="127:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:58"><expr pos:start="133:5" pos:end="133:57"><call pos:start="133:5" pos:end="133:57"><name pos:start="133:5" pos:end="133:11">pstrcpy</name><argument_list pos:start="133:12" pos:end="133:57">(<argument pos:start="133:13" pos:end="133:24"><expr pos:start="133:13" pos:end="133:24"><name pos:start="133:13" pos:end="133:24"><name pos:start="133:13" pos:end="133:14">bs</name><operator pos:start="133:15" pos:end="133:16">-&gt;</operator><name pos:start="133:17" pos:end="133:24">filename</name></name></expr></argument>, <argument pos:start="133:27" pos:end="133:46"><expr pos:start="133:27" pos:end="133:46"><sizeof pos:start="133:27" pos:end="133:46">sizeof<argument_list pos:start="133:33" pos:end="133:46">(<argument pos:start="133:34" pos:end="133:45"><expr pos:start="133:34" pos:end="133:45"><name pos:start="133:34" pos:end="133:45"><name pos:start="133:34" pos:end="133:35">bs</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:45">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="133:49" pos:end="133:56"><expr pos:start="133:49" pos:end="133:56"><name pos:start="133:49" pos:end="133:56">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="149:5"><if pos:start="135:5" pos:end="139:5">if <condition pos:start="135:8" pos:end="135:28">(<expr pos:start="135:9" pos:end="135:27"><name pos:start="135:9" pos:end="135:13">flags</name> <operator pos:start="135:15" pos:end="135:15">&amp;</operator> <name pos:start="135:17" pos:end="135:27">BDRV_O_FILE</name></expr>)</condition> <block pos:start="135:30" pos:end="139:5">{<block_content pos:start="137:9" pos:end="137:38">

        <expr_stmt pos:start="137:9" pos:end="137:38"><expr pos:start="137:9" pos:end="137:37"><name pos:start="137:9" pos:end="137:11">drv</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <call pos:start="137:15" pos:end="137:37"><name pos:start="137:15" pos:end="137:27">find_protocol</name><argument_list pos:start="137:28" pos:end="137:37">(<argument pos:start="137:29" pos:end="137:36"><expr pos:start="137:29" pos:end="137:36"><name pos:start="137:29" pos:end="137:36">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="139:7" pos:end="149:5">else if <condition pos:start="139:15" pos:end="139:20">(<expr pos:start="139:16" pos:end="139:19"><operator pos:start="139:16" pos:end="139:16">!</operator><name pos:start="139:17" pos:end="139:19">drv</name></expr>)</condition> <block pos:start="139:22" pos:end="149:5">{<block_content pos:start="141:9" pos:end="147:9">

        <expr_stmt pos:start="141:9" pos:end="141:41"><expr pos:start="141:9" pos:end="141:40"><name pos:start="141:9" pos:end="141:11">drv</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:40"><name pos:start="141:15" pos:end="141:30">find_hdev_driver</name><argument_list pos:start="141:31" pos:end="141:40">(<argument pos:start="141:32" pos:end="141:39"><expr pos:start="141:32" pos:end="141:39"><name pos:start="141:32" pos:end="141:39">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="147:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:17">(<expr pos:start="143:13" pos:end="143:16"><operator pos:start="143:13" pos:end="143:13">!</operator><name pos:start="143:14" pos:end="143:16">drv</name></expr>)</condition> <block pos:start="143:19" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:46">

            <expr_stmt pos:start="145:13" pos:end="145:46"><expr pos:start="145:13" pos:end="145:45"><name pos:start="145:13" pos:end="145:15">drv</name> <operator pos:start="145:17" pos:end="145:17">=</operator> <call pos:start="145:19" pos:end="145:45"><name pos:start="145:19" pos:end="145:35">find_image_format</name><argument_list pos:start="145:36" pos:end="145:45">(<argument pos:start="145:37" pos:end="145:44"><expr pos:start="145:37" pos:end="145:44"><name pos:start="145:37" pos:end="145:44">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="151:5" pos:end="157:5"><if pos:start="151:5" pos:end="157:5">if <condition pos:start="151:8" pos:end="151:13">(<expr pos:start="151:9" pos:end="151:12"><operator pos:start="151:9" pos:end="151:9">!</operator><name pos:start="151:10" pos:end="151:12">drv</name></expr>)</condition> <block pos:start="151:15" pos:end="157:5">{<block_content pos:start="153:9" pos:end="155:29">

        <expr_stmt pos:start="153:9" pos:end="153:22"><expr pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:11">ret</name> <operator pos:start="153:13" pos:end="153:13">=</operator> <operator pos:start="153:15" pos:end="153:15">-</operator><name pos:start="153:16" pos:end="153:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="155:9" pos:end="155:29">goto <name pos:start="155:14" pos:end="155:28">unlink_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:18"><expr pos:start="159:5" pos:end="159:17"><name pos:start="159:5" pos:end="159:11"><name pos:start="159:5" pos:end="159:6">bs</name><operator pos:start="159:7" pos:end="159:8">-&gt;</operator><name pos:start="159:9" pos:end="159:11">drv</name></name> <operator pos:start="159:13" pos:end="159:13">=</operator> <name pos:start="159:15" pos:end="159:17">drv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:50"><expr pos:start="161:5" pos:end="161:49"><name pos:start="161:5" pos:end="161:14"><name pos:start="161:5" pos:end="161:6">bs</name><operator pos:start="161:7" pos:end="161:8">-&gt;</operator><name pos:start="161:9" pos:end="161:14">opaque</name></name> <operator pos:start="161:16" pos:end="161:16">=</operator> <call pos:start="161:18" pos:end="161:49"><name pos:start="161:18" pos:end="161:29">qemu_mallocz</name><argument_list pos:start="161:30" pos:end="161:49">(<argument pos:start="161:31" pos:end="161:48"><expr pos:start="161:31" pos:end="161:48"><name pos:start="161:31" pos:end="161:48"><name pos:start="161:31" pos:end="161:33">drv</name><operator pos:start="161:34" pos:end="161:35">-&gt;</operator><name pos:start="161:36" pos:end="161:48">instance_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="165:5" pos:end="175:7">/*

     * Yes, BDRV_O_NOCACHE aka O_DIRECT means we have to present a

     * write cache to the guest.  We do need the fdatasync to flush

     * out transactions for block allocations, and we maybe have a

     * volatile write cache in our backing device to deal with.

     */</comment>

    <if_stmt pos:start="177:5" pos:end="179:35"><if pos:start="177:5" pos:end="179:35">if <condition pos:start="177:8" pos:end="177:49">(<expr pos:start="177:9" pos:end="177:48"><name pos:start="177:9" pos:end="177:13">flags</name> <operator pos:start="177:15" pos:end="177:15">&amp;</operator> <operator pos:start="177:17" pos:end="177:17">(</operator><name pos:start="177:18" pos:end="177:32">BDRV_O_CACHE_WB</name><operator pos:start="177:33" pos:end="177:33">|</operator><name pos:start="177:34" pos:end="177:47">BDRV_O_NOCACHE</name><operator pos:start="177:48" pos:end="177:48">)</operator></expr>)</condition><block type="pseudo" pos:start="179:9" pos:end="179:35"><block_content pos:start="179:9" pos:end="179:35">

        <expr_stmt pos:start="179:9" pos:end="179:35"><expr pos:start="179:9" pos:end="179:34"><name pos:start="179:9" pos:end="179:30"><name pos:start="179:9" pos:end="179:10">bs</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:30">enable_write_cache</name></name> <operator pos:start="179:32" pos:end="179:32">=</operator> <literal type="number" pos:start="179:34" pos:end="179:34">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:47"><expr pos:start="183:5" pos:end="183:46"><name pos:start="183:5" pos:end="183:17"><name pos:start="183:5" pos:end="183:6">bs</name><operator pos:start="183:7" pos:end="183:8">-&gt;</operator><name pos:start="183:9" pos:end="183:17">read_only</name></name> <operator pos:start="183:19" pos:end="183:19">=</operator> <operator pos:start="183:21" pos:end="183:21">(</operator><name pos:start="183:22" pos:end="183:26">flags</name> <operator pos:start="183:28" pos:end="183:28">&amp;</operator> <name pos:start="183:30" pos:end="183:40">BDRV_O_RDWR</name><operator pos:start="183:41" pos:end="183:41">)</operator> <operator pos:start="183:43" pos:end="183:44">==</operator> <literal type="number" pos:start="183:46" pos:end="183:46">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="199:5"><if pos:start="185:5" pos:end="195:5">if <condition pos:start="185:8" pos:end="185:31">(<expr pos:start="185:9" pos:end="185:30"><operator pos:start="185:9" pos:end="185:9">!</operator><operator pos:start="185:10" pos:end="185:10">(</operator><name pos:start="185:11" pos:end="185:15">flags</name> <operator pos:start="185:17" pos:end="185:17">&amp;</operator> <name pos:start="185:19" pos:end="185:29">BDRV_O_FILE</name><operator pos:start="185:30" pos:end="185:30">)</operator></expr>)</condition> <block pos:start="185:33" pos:end="195:5">{<block_content pos:start="187:9" pos:end="193:9">

        <expr_stmt pos:start="187:9" pos:end="187:83"><expr pos:start="187:9" pos:end="187:82"><name pos:start="187:9" pos:end="187:18">open_flags</name> <operator pos:start="187:20" pos:end="187:20">=</operator> <operator pos:start="187:22" pos:end="187:22">(</operator><name pos:start="187:23" pos:end="187:27">flags</name> <operator pos:start="187:29" pos:end="187:29">&amp;</operator> <operator pos:start="187:31" pos:end="187:31">(</operator><name pos:start="187:32" pos:end="187:42">BDRV_O_RDWR</name> <operator pos:start="187:44" pos:end="187:44">|</operator> <name pos:start="187:46" pos:end="187:62">BDRV_O_CACHE_MASK</name><operator pos:start="187:63" pos:end="187:63">|</operator><name pos:start="187:64" pos:end="187:80">BDRV_O_NATIVE_AIO</name><operator pos:start="187:81" pos:end="187:81">)</operator><operator pos:start="187:82" pos:end="187:82">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="189:9" pos:end="193:9"><if pos:start="189:9" pos:end="193:9">if <condition pos:start="189:12" pos:end="189:29">(<expr pos:start="189:13" pos:end="189:28"><name pos:start="189:13" pos:end="189:28"><name pos:start="189:13" pos:end="189:14">bs</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:28">is_temporary</name></name></expr>)</condition> <block pos:start="189:31" pos:end="193:9">{<block_content pos:start="191:13" pos:end="191:38"> <comment type="block" pos:start="189:33" pos:end="189:66">/* snapshot should be writeable */</comment>

            <expr_stmt pos:start="191:13" pos:end="191:38"><expr pos:start="191:13" pos:end="191:37"><name pos:start="191:13" pos:end="191:22">open_flags</name> <operator pos:start="191:24" pos:end="191:25">|=</operator> <name pos:start="191:27" pos:end="191:37">BDRV_O_RDWR</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="195:7" pos:end="199:5">else <block pos:start="195:12" pos:end="199:5">{<block_content pos:start="197:9" pos:end="197:62">

        <expr_stmt pos:start="197:9" pos:end="197:62"><expr pos:start="197:9" pos:end="197:61"><name pos:start="197:9" pos:end="197:18">open_flags</name> <operator pos:start="197:20" pos:end="197:20">=</operator> <name pos:start="197:22" pos:end="197:26">flags</name> <operator pos:start="197:28" pos:end="197:28">&amp;</operator> <operator pos:start="197:30" pos:end="197:30">~</operator><operator pos:start="197:31" pos:end="197:31">(</operator><name pos:start="197:32" pos:end="197:42">BDRV_O_FILE</name> <operator pos:start="197:44" pos:end="197:44">|</operator> <name pos:start="197:46" pos:end="197:60">BDRV_O_SNAPSHOT</name><operator pos:start="197:61" pos:end="197:61">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="201:5" pos:end="209:5"><if pos:start="201:5" pos:end="205:5">if <condition pos:start="201:8" pos:end="201:56">(<expr pos:start="201:9" pos:end="201:55"><name pos:start="201:9" pos:end="201:26">use_bdrv_whitelist</name> <operator pos:start="201:28" pos:end="201:29">&amp;&amp;</operator> <operator pos:start="201:31" pos:end="201:31">!</operator><call pos:start="201:32" pos:end="201:55"><name pos:start="201:32" pos:end="201:50">bdrv_is_whitelisted</name><argument_list pos:start="201:51" pos:end="201:55">(<argument pos:start="201:52" pos:end="201:54"><expr pos:start="201:52" pos:end="201:54"><name pos:start="201:52" pos:end="201:54">drv</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="201:58" pos:end="205:5">{<block_content pos:start="203:9" pos:end="203:23">

        <expr_stmt pos:start="203:9" pos:end="203:23"><expr pos:start="203:9" pos:end="203:22"><name pos:start="203:9" pos:end="203:11">ret</name> <operator pos:start="203:13" pos:end="203:13">=</operator> <operator pos:start="203:15" pos:end="203:15">-</operator><name pos:start="203:16" pos:end="203:22">ENOTSUP</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="205:7" pos:end="209:5">else <block pos:start="205:12" pos:end="209:5">{<block_content pos:start="207:9" pos:end="207:55">

        <expr_stmt pos:start="207:9" pos:end="207:55"><expr pos:start="207:9" pos:end="207:54"><name pos:start="207:9" pos:end="207:11">ret</name> <operator pos:start="207:13" pos:end="207:13">=</operator> <call pos:start="207:15" pos:end="207:54"><name pos:start="207:15" pos:end="207:28"><name pos:start="207:15" pos:end="207:17">drv</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:28">bdrv_open</name></name><argument_list pos:start="207:29" pos:end="207:54">(<argument pos:start="207:30" pos:end="207:31"><expr pos:start="207:30" pos:end="207:31"><name pos:start="207:30" pos:end="207:31">bs</name></expr></argument>, <argument pos:start="207:34" pos:end="207:41"><expr pos:start="207:34" pos:end="207:41"><name pos:start="207:34" pos:end="207:41">filename</name></expr></argument>, <argument pos:start="207:44" pos:end="207:53"><expr pos:start="207:44" pos:end="207:53"><name pos:start="207:44" pos:end="207:53">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="211:5" pos:end="227:5"><if pos:start="211:5" pos:end="227:5">if <condition pos:start="211:8" pos:end="211:16">(<expr pos:start="211:9" pos:end="211:15"><name pos:start="211:9" pos:end="211:11">ret</name> <operator pos:start="211:13" pos:end="211:13">&lt;</operator> <literal type="number" pos:start="211:15" pos:end="211:15">0</literal></expr>)</condition> <block pos:start="211:18" pos:end="227:5">{<block_content pos:start="213:9" pos:end="225:19">

        <expr_stmt pos:start="213:9" pos:end="213:30"><expr pos:start="213:9" pos:end="213:29"><call pos:start="213:9" pos:end="213:29"><name pos:start="213:9" pos:end="213:17">qemu_free</name><argument_list pos:start="213:18" pos:end="213:29">(<argument pos:start="213:19" pos:end="213:28"><expr pos:start="213:19" pos:end="213:28"><name pos:start="213:19" pos:end="213:28"><name pos:start="213:19" pos:end="213:20">bs</name><operator pos:start="213:21" pos:end="213:22">-&gt;</operator><name pos:start="213:23" pos:end="213:28">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:26"><expr pos:start="215:9" pos:end="215:25"><name pos:start="215:9" pos:end="215:18"><name pos:start="215:9" pos:end="215:10">bs</name><operator pos:start="215:11" pos:end="215:12">-&gt;</operator><name pos:start="215:13" pos:end="215:18">opaque</name></name> <operator pos:start="215:20" pos:end="215:20">=</operator> <name pos:start="215:22" pos:end="215:25">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:23"><expr pos:start="217:9" pos:end="217:22"><name pos:start="217:9" pos:end="217:15"><name pos:start="217:9" pos:end="217:10">bs</name><operator pos:start="217:11" pos:end="217:12">-&gt;</operator><name pos:start="217:13" pos:end="217:15">drv</name></name> <operator pos:start="217:17" pos:end="217:17">=</operator> <name pos:start="217:19" pos:end="217:22">NULL</name></expr>;</expr_stmt>

    <label pos:start="219:5" pos:end="219:20"><name pos:start="219:5" pos:end="219:19">unlink_and_fail</name>:</label>

        <if_stmt pos:start="221:9" pos:end="223:29"><if pos:start="221:9" pos:end="223:29">if <condition pos:start="221:12" pos:end="221:29">(<expr pos:start="221:13" pos:end="221:28"><name pos:start="221:13" pos:end="221:28"><name pos:start="221:13" pos:end="221:14">bs</name><operator pos:start="221:15" pos:end="221:16">-&gt;</operator><name pos:start="221:17" pos:end="221:28">is_temporary</name></name></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="223:29"><block_content pos:start="223:13" pos:end="223:29">

            <expr_stmt pos:start="223:13" pos:end="223:29"><expr pos:start="223:13" pos:end="223:28"><call pos:start="223:13" pos:end="223:28"><name pos:start="223:13" pos:end="223:18">unlink</name><argument_list pos:start="223:19" pos:end="223:28">(<argument pos:start="223:20" pos:end="223:27"><expr pos:start="223:20" pos:end="223:27"><name pos:start="223:20" pos:end="223:27">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="225:9" pos:end="225:19">return <expr pos:start="225:16" pos:end="225:18"><name pos:start="225:16" pos:end="225:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="229:5" pos:end="236:0"><if pos:start="229:5" pos:end="236:0">if <condition pos:start="229:8" pos:end="229:28">(<expr pos:start="229:9" pos:end="229:27"><name pos:start="229:9" pos:end="229:27"><name pos:start="229:9" pos:end="229:11">drv</name><operator pos:start="229:12" pos:end="229:13">-&gt;</operator><name pos:start="229:14" pos:end="229:27">bdrv_getlength</name></name></expr>)</condition> <block pos:start="229:30" pos:end="236:0">{<block_content pos:start="231:9" pos:end="231:67">

        <expr_stmt pos:start="231:9" pos:end="231:67"><expr pos:start="231:9" pos:end="231:66"><name pos:start="231:9" pos:end="231:25"><name pos:start="231:9" pos:end="231:10">bs</name><operator pos:start="231:11" pos:end="231:12">-&gt;</operator><name pos:start="231:13" pos:end="231:25">total_sectors</name></name> <operator pos:start="231:27" pos:end="231:27">=</operator> <call pos:start="231:29" pos:end="231:46"><name pos:start="231:29" pos:end="231:42">bdrv_getlength</name><argument_list pos:start="231:43" pos:end="231:46">(<argument pos:start="231:44" pos:end="231:45"><expr pos:start="231:44" pos:end="231:45"><name pos:start="231:44" pos:end="231:45">bs</name></expr></argument>)</argument_list></call> <operator pos:start="231:48" pos:end="231:49">&gt;&gt;</operator> <name pos:start="231:51" pos:end="231:66">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:ifndef pos:start="235:1" pos:end="235:14">#<cpp:directive pos:start="235:2" pos:end="235:7">ifndef</cpp:directive> <name pos:start="235:9" pos:end="235:14">_WIN32</name></cpp:ifndef>

    <if_stmt pos:start="237:5" pos:end="244:0"><if pos:start="237:5" pos:end="244:0">if <condition pos:start="237:8" pos:end="237:25">(<expr pos:start="237:9" pos:end="237:24"><name pos:start="237:9" pos:end="237:24"><name pos:start="237:9" pos:end="237:10">bs</name><operator pos:start="237:11" pos:end="237:12">-&gt;</operator><name pos:start="237:13" pos:end="237:24">is_temporary</name></name></expr>)</condition> <block pos:start="237:27" pos:end="244:0">{<block_content pos:start="239:9" pos:end="239:25">

        <expr_stmt pos:start="239:9" pos:end="239:25"><expr pos:start="239:9" pos:end="239:24"><call pos:start="239:9" pos:end="239:24"><name pos:start="239:9" pos:end="239:14">unlink</name><argument_list pos:start="239:15" pos:end="239:24">(<argument pos:start="239:16" pos:end="239:23"><expr pos:start="239:16" pos:end="239:23"><name pos:start="239:16" pos:end="239:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="243:1" pos:end="243:6">#<cpp:directive pos:start="243:2" pos:end="243:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="245:5" pos:end="275:5"><if pos:start="245:5" pos:end="275:5">if <condition pos:start="245:8" pos:end="245:72">(<expr pos:start="245:9" pos:end="245:71"><operator pos:start="245:9" pos:end="245:9">(</operator><name pos:start="245:10" pos:end="245:14">flags</name> <operator pos:start="245:16" pos:end="245:16">&amp;</operator> <name pos:start="245:18" pos:end="245:34">BDRV_O_NO_BACKING</name><operator pos:start="245:35" pos:end="245:35">)</operator> <operator pos:start="245:37" pos:end="245:38">==</operator> <literal type="number" pos:start="245:40" pos:end="245:40">0</literal> <operator pos:start="245:42" pos:end="245:43">&amp;&amp;</operator> <name pos:start="245:45" pos:end="245:63"><name pos:start="245:45" pos:end="245:46">bs</name><operator pos:start="245:47" pos:end="245:48">-&gt;</operator><name pos:start="245:49" pos:end="245:60">backing_file</name><index pos:start="245:61" pos:end="245:63">[<expr pos:start="245:62" pos:end="245:62"><literal type="number" pos:start="245:62" pos:end="245:62">0</literal></expr>]</index></name> <operator pos:start="245:65" pos:end="245:66">!=</operator> <literal type="char" pos:start="245:68" pos:end="245:71">'\0'</literal></expr>)</condition> <block pos:start="245:74" pos:end="275:5">{<block_content pos:start="249:9" pos:end="273:9">

        <comment type="block" pos:start="247:9" pos:end="247:48">/* if there is a backing file, use it */</comment>

        <decl_stmt pos:start="249:9" pos:end="249:37"><decl pos:start="249:9" pos:end="249:36"><type pos:start="249:9" pos:end="249:21"><name pos:start="249:9" pos:end="249:19">BlockDriver</name> <modifier pos:start="249:21" pos:end="249:21">*</modifier></type><name pos:start="249:22" pos:end="249:29">back_drv</name> <init pos:start="249:31" pos:end="249:36">= <expr pos:start="249:33" pos:end="249:36"><name pos:start="249:33" pos:end="249:36">NULL</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:38"><expr pos:start="251:9" pos:end="251:37"><name pos:start="251:9" pos:end="251:22"><name pos:start="251:9" pos:end="251:10">bs</name><operator pos:start="251:11" pos:end="251:12">-&gt;</operator><name pos:start="251:13" pos:end="251:22">backing_hd</name></name> <operator pos:start="251:24" pos:end="251:24">=</operator> <call pos:start="251:26" pos:end="251:37"><name pos:start="251:26" pos:end="251:33">bdrv_new</name><argument_list pos:start="251:34" pos:end="251:37">(<argument pos:start="251:35" pos:end="251:36"><expr pos:start="251:35" pos:end="251:36"><literal type="string" pos:start="251:35" pos:end="251:36">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="255:49"><expr pos:start="253:9" pos:end="255:48"><call pos:start="253:9" pos:end="255:48"><name pos:start="253:9" pos:end="253:20">path_combine</name><argument_list pos:start="253:21" pos:end="255:48">(<argument pos:start="253:22" pos:end="253:37"><expr pos:start="253:22" pos:end="253:37"><name pos:start="253:22" pos:end="253:37">backing_filename</name></expr></argument>, <argument pos:start="253:40" pos:end="253:63"><expr pos:start="253:40" pos:end="253:63"><sizeof pos:start="253:40" pos:end="253:63">sizeof<argument_list pos:start="253:46" pos:end="253:63">(<argument pos:start="253:47" pos:end="253:62"><expr pos:start="253:47" pos:end="253:62"><name pos:start="253:47" pos:end="253:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="255:22" pos:end="255:29"><expr pos:start="255:22" pos:end="255:29"><name pos:start="255:22" pos:end="255:29">filename</name></expr></argument>, <argument pos:start="255:32" pos:end="255:47"><expr pos:start="255:32" pos:end="255:47"><name pos:start="255:32" pos:end="255:47"><name pos:start="255:32" pos:end="255:33">bs</name><operator pos:start="255:34" pos:end="255:35">-&gt;</operator><name pos:start="255:36" pos:end="255:47">backing_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="257:9" pos:end="259:60"><if pos:start="257:9" pos:end="259:60">if <condition pos:start="257:12" pos:end="257:42">(<expr pos:start="257:13" pos:end="257:41"><name pos:start="257:13" pos:end="257:33"><name pos:start="257:13" pos:end="257:14">bs</name><operator pos:start="257:15" pos:end="257:16">-&gt;</operator><name pos:start="257:17" pos:end="257:30">backing_format</name><index pos:start="257:31" pos:end="257:33">[<expr pos:start="257:32" pos:end="257:32"><literal type="number" pos:start="257:32" pos:end="257:32">0</literal></expr>]</index></name> <operator pos:start="257:35" pos:end="257:36">!=</operator> <literal type="char" pos:start="257:38" pos:end="257:41">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="259:13" pos:end="259:60"><block_content pos:start="259:13" pos:end="259:60">

            <expr_stmt pos:start="259:13" pos:end="259:60"><expr pos:start="259:13" pos:end="259:59"><name pos:start="259:13" pos:end="259:20">back_drv</name> <operator pos:start="259:22" pos:end="259:22">=</operator> <call pos:start="259:24" pos:end="259:59"><name pos:start="259:24" pos:end="259:39">bdrv_find_format</name><argument_list pos:start="259:40" pos:end="259:59">(<argument pos:start="259:41" pos:end="259:58"><expr pos:start="259:41" pos:end="259:58"><name pos:start="259:41" pos:end="259:58"><name pos:start="259:41" pos:end="259:42">bs</name><operator pos:start="259:43" pos:end="259:44">-&gt;</operator><name pos:start="259:45" pos:end="259:58">backing_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="261:9" pos:end="263:35"><expr pos:start="261:9" pos:end="263:34"><name pos:start="261:9" pos:end="261:11">ret</name> <operator pos:start="261:13" pos:end="261:13">=</operator> <call pos:start="261:15" pos:end="263:34"><name pos:start="261:15" pos:end="261:24">bdrv_open2</name><argument_list pos:start="261:25" pos:end="263:34">(<argument pos:start="261:26" pos:end="261:39"><expr pos:start="261:26" pos:end="261:39"><name pos:start="261:26" pos:end="261:39"><name pos:start="261:26" pos:end="261:27">bs</name><operator pos:start="261:28" pos:end="261:29">-&gt;</operator><name pos:start="261:30" pos:end="261:39">backing_hd</name></name></expr></argument>, <argument pos:start="261:42" pos:end="261:57"><expr pos:start="261:42" pos:end="261:57"><name pos:start="261:42" pos:end="261:57">backing_filename</name></expr></argument>, <argument pos:start="261:60" pos:end="261:69"><expr pos:start="261:60" pos:end="261:69"><name pos:start="261:60" pos:end="261:69">open_flags</name></expr></argument>,

                         <argument pos:start="263:26" pos:end="263:33"><expr pos:start="263:26" pos:end="263:33"><name pos:start="263:26" pos:end="263:33">back_drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:69"><expr pos:start="265:9" pos:end="265:68"><name pos:start="265:9" pos:end="265:33"><name pos:start="265:9" pos:end="265:10">bs</name><operator pos:start="265:11" pos:end="265:12">-&gt;</operator><name pos:start="265:13" pos:end="265:22">backing_hd</name><operator pos:start="265:23" pos:end="265:24">-&gt;</operator><name pos:start="265:25" pos:end="265:33">read_only</name></name> <operator pos:start="265:35" pos:end="265:35">=</operator>  <operator pos:start="265:38" pos:end="265:38">(</operator><name pos:start="265:39" pos:end="265:48">open_flags</name> <operator pos:start="265:50" pos:end="265:50">&amp;</operator> <name pos:start="265:52" pos:end="265:62">BDRV_O_RDWR</name><operator pos:start="265:63" pos:end="265:63">)</operator> <operator pos:start="265:65" pos:end="265:66">==</operator> <literal type="number" pos:start="265:68" pos:end="265:68">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="267:9" pos:end="273:9"><if pos:start="267:9" pos:end="273:9">if <condition pos:start="267:12" pos:end="267:20">(<expr pos:start="267:13" pos:end="267:19"><name pos:start="267:13" pos:end="267:15">ret</name> <operator pos:start="267:17" pos:end="267:17">&lt;</operator> <literal type="number" pos:start="267:19" pos:end="267:19">0</literal></expr>)</condition> <block pos:start="267:22" pos:end="273:9">{<block_content pos:start="269:13" pos:end="271:23">

            <expr_stmt pos:start="269:13" pos:end="269:27"><expr pos:start="269:13" pos:end="269:26"><call pos:start="269:13" pos:end="269:26"><name pos:start="269:13" pos:end="269:22">bdrv_close</name><argument_list pos:start="269:23" pos:end="269:26">(<argument pos:start="269:24" pos:end="269:25"><expr pos:start="269:24" pos:end="269:25"><name pos:start="269:24" pos:end="269:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="271:13" pos:end="271:23">return <expr pos:start="271:20" pos:end="271:22"><name pos:start="271:20" pos:end="271:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="279:5" pos:end="289:5"><if pos:start="279:5" pos:end="289:5">if <condition pos:start="279:8" pos:end="279:31">(<expr pos:start="279:9" pos:end="279:30"><operator pos:start="279:9" pos:end="279:9">!</operator><call pos:start="279:10" pos:end="279:30"><name pos:start="279:10" pos:end="279:26">bdrv_key_required</name><argument_list pos:start="279:27" pos:end="279:30">(<argument pos:start="279:28" pos:end="279:29"><expr pos:start="279:28" pos:end="279:29"><name pos:start="279:28" pos:end="279:29">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="279:33" pos:end="289:5">{<block_content pos:start="283:9" pos:end="287:45">

        <comment type="block" pos:start="281:9" pos:end="281:38">/* call the change callback */</comment>

        <expr_stmt pos:start="283:9" pos:end="283:30"><expr pos:start="283:9" pos:end="283:29"><name pos:start="283:9" pos:end="283:25"><name pos:start="283:9" pos:end="283:10">bs</name><operator pos:start="283:11" pos:end="283:12">-&gt;</operator><name pos:start="283:13" pos:end="283:25">media_changed</name></name> <operator pos:start="283:27" pos:end="283:27">=</operator> <literal type="number" pos:start="283:29" pos:end="283:29">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="285:9" pos:end="287:45"><if pos:start="285:9" pos:end="287:45">if <condition pos:start="285:12" pos:end="285:26">(<expr pos:start="285:13" pos:end="285:25"><name pos:start="285:13" pos:end="285:25"><name pos:start="285:13" pos:end="285:14">bs</name><operator pos:start="285:15" pos:end="285:16">-&gt;</operator><name pos:start="285:17" pos:end="285:25">change_cb</name></name></expr>)</condition><block type="pseudo" pos:start="287:13" pos:end="287:45"><block_content pos:start="287:13" pos:end="287:45">

            <expr_stmt pos:start="287:13" pos:end="287:45"><expr pos:start="287:13" pos:end="287:44"><call pos:start="287:13" pos:end="287:44"><name pos:start="287:13" pos:end="287:25"><name pos:start="287:13" pos:end="287:14">bs</name><operator pos:start="287:15" pos:end="287:16">-&gt;</operator><name pos:start="287:17" pos:end="287:25">change_cb</name></name><argument_list pos:start="287:26" pos:end="287:44">(<argument pos:start="287:27" pos:end="287:43"><expr pos:start="287:27" pos:end="287:43"><name pos:start="287:27" pos:end="287:43"><name pos:start="287:27" pos:end="287:28">bs</name><operator pos:start="287:29" pos:end="287:30">-&gt;</operator><name pos:start="287:31" pos:end="287:43">change_opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="291:5" pos:end="291:13">return <expr pos:start="291:12" pos:end="291:12"><literal type="number" pos:start="291:12" pos:end="291:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
