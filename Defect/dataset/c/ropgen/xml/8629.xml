<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8629.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:25">get_bat</name><parameter_list pos:start="1:26" pos:end="3:43">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:34">CPUState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">env</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:55"><decl pos:start="1:42" pos:end="1:55"><type pos:start="1:42" pos:end="1:55"><name pos:start="1:42" pos:end="1:50">mmu_ctx_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">ctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:77"><decl pos:start="1:58" pos:end="1:77"><type pos:start="1:58" pos:end="1:77"><name pos:start="1:58" pos:end="1:69">target_ulong</name></type> <name pos:start="1:71" pos:end="1:77">virtual</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:32"><decl pos:start="3:27" pos:end="3:32"><type pos:start="3:27" pos:end="3:32"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:32">rw</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:42"><decl pos:start="3:35" pos:end="3:42"><type pos:start="3:35" pos:end="3:42"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:42">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="147:1">{<block_content pos:start="7:5" pos:end="145:15">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">target_ulong</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:23">BATlt</name></decl>, <decl pos:start="7:26" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:31">BATut</name></decl>, <decl pos:start="7:34" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:38">BATu</name></decl>, <decl pos:start="7:41" pos:end="7:45"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:41" pos:end="7:41">*</modifier></type><name pos:start="7:42" pos:end="7:45">BATl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:22">BEPIl</name></decl>, <decl pos:start="9:25" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:25" pos:end="9:29">BEPIu</name></decl>, <decl pos:start="9:32" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:32" pos:end="9:33">bl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:16">valid</name></decl>, <decl pos:start="11:19" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:22">prot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:16">= <expr pos:start="13:15" pos:end="13:16"><operator pos:start="13:15" pos:end="13:15">-</operator><literal type="number" pos:start="13:16" pos:end="13:16">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:55"><expr pos:start="17:5" pos:end="19:54"><call pos:start="17:5" pos:end="19:54"><name pos:start="17:5" pos:end="17:12">LOG_BATS</name><argument_list pos:start="17:13" pos:end="19:54">(<argument pos:start="17:14" pos:end="17:46"><expr pos:start="17:14" pos:end="17:46"><literal type="string" pos:start="17:14" pos:end="17:27">"%s: %cBAT v "</literal> <name pos:start="17:29" pos:end="17:41">TARGET_FMT_lx</name> <literal type="string" pos:start="17:43" pos:end="17:46">"\n"</literal></expr></argument>, <argument pos:start="17:49" pos:end="17:56"><expr pos:start="17:49" pos:end="17:56"><name pos:start="17:49" pos:end="17:56">__func__</name></expr></argument>,

             <argument pos:start="19:14" pos:end="19:44"><expr pos:start="19:14" pos:end="19:44"><ternary pos:start="19:14" pos:end="19:44"><condition pos:start="19:14" pos:end="19:34"><expr pos:start="19:14" pos:end="19:32"><name pos:start="19:14" pos:end="19:17">type</name> <operator pos:start="19:19" pos:end="19:20">==</operator> <name pos:start="19:22" pos:end="19:32">ACCESS_CODE</name></expr> ?</condition><then pos:start="19:36" pos:end="19:38"> <expr pos:start="19:36" pos:end="19:38"><literal type="char" pos:start="19:36" pos:end="19:38">'I'</literal></expr> </then><else pos:start="19:40" pos:end="19:44">: <expr pos:start="19:42" pos:end="19:44"><literal type="char" pos:start="19:42" pos:end="19:44">'D'</literal></expr></else></ternary></expr></argument>, <argument pos:start="19:47" pos:end="19:53"><expr pos:start="19:47" pos:end="19:53"><name pos:start="19:47" pos:end="19:53">virtual</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="21:5" pos:end="39:5">switch <condition pos:start="21:12" pos:end="21:17">(<expr pos:start="21:13" pos:end="21:16"><name pos:start="21:13" pos:end="21:16">type</name></expr>)</condition> <block pos:start="21:19" pos:end="39:5">{<block_content pos:start="23:5" pos:end="37:14">

    <case pos:start="23:5" pos:end="23:21">case <expr pos:start="23:10" pos:end="23:20"><name pos:start="23:10" pos:end="23:20">ACCESS_CODE</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:13">BATlt</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:19">env</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:25">IBAT</name><index pos:start="25:26" pos:end="25:28">[<expr pos:start="25:27" pos:end="25:27"><literal type="number" pos:start="25:27" pos:end="25:27">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:13">BATut</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:28"><name pos:start="27:17" pos:end="27:19">env</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:25">IBAT</name><index pos:start="27:26" pos:end="27:28">[<expr pos:start="27:27" pos:end="27:27"><literal type="number" pos:start="27:27" pos:end="27:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <default pos:start="31:5" pos:end="31:12">default:</default>

        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:13">BATlt</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:28"><name pos:start="33:17" pos:end="33:19">env</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:25">DBAT</name><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><literal type="number" pos:start="33:27" pos:end="33:27">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:13">BATut</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:19">env</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:25">DBAT</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    </block_content>}</block></switch>

    <for pos:start="41:5" pos:end="103:5">for <control pos:start="41:9" pos:end="41:38">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:33"><expr pos:start="41:17" pos:end="41:32"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:32"><name pos:start="41:21" pos:end="41:23">env</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:32">nb_BATs</name></name></expr>;</condition> <incr pos:start="41:35" pos:end="41:37"><expr pos:start="41:35" pos:end="41:37"><name pos:start="41:35" pos:end="41:35">i</name><operator pos:start="41:36" pos:end="41:37">++</operator></expr></incr>)</control> <block pos:start="41:40" pos:end="103:5">{<block_content pos:start="43:9" pos:end="101:9">

        <expr_stmt pos:start="43:9" pos:end="43:25"><expr pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:12">BATu</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <operator pos:start="43:16" pos:end="43:16">&amp;</operator><name pos:start="43:17" pos:end="43:24"><name pos:start="43:17" pos:end="43:21">BATut</name><index pos:start="43:22" pos:end="43:24">[<expr pos:start="43:23" pos:end="43:23"><name pos:start="43:23" pos:end="43:23">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:12">BATl</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <operator pos:start="45:16" pos:end="45:16">&amp;</operator><name pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:21">BATlt</name><index pos:start="45:22" pos:end="45:24">[<expr pos:start="45:23" pos:end="45:23"><name pos:start="45:23" pos:end="45:23">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:35"><expr pos:start="47:9" pos:end="47:34"><name pos:start="47:9" pos:end="47:13">BEPIu</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <operator pos:start="47:17" pos:end="47:17">*</operator><name pos:start="47:18" pos:end="47:21">BATu</name> <operator pos:start="47:23" pos:end="47:23">&amp;</operator> <literal type="number" pos:start="47:25" pos:end="47:34">0xF0000000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:35"><expr pos:start="49:9" pos:end="49:34"><name pos:start="49:9" pos:end="49:13">BEPIl</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <operator pos:start="49:17" pos:end="49:17">*</operator><name pos:start="49:18" pos:end="49:21">BATu</name> <operator pos:start="49:23" pos:end="49:23">&amp;</operator> <literal type="number" pos:start="49:25" pos:end="49:34">0x0FFE0000</literal></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:56">(<expr pos:start="51:13" pos:end="51:55"><call pos:start="51:13" pos:end="51:55"><name pos:start="51:13" pos:end="51:20">unlikely</name><argument_list pos:start="51:21" pos:end="51:55">(<argument pos:start="51:22" pos:end="51:54"><expr pos:start="51:22" pos:end="51:54"><name pos:start="51:22" pos:end="51:35"><name pos:start="51:22" pos:end="51:24">env</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:35">mmu_model</name></name> <operator pos:start="51:37" pos:end="51:38">==</operator> <name pos:start="51:40" pos:end="51:54">POWERPC_MMU_601</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:58" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:67">

            <expr_stmt pos:start="53:13" pos:end="53:67"><expr pos:start="53:13" pos:end="53:66"><call pos:start="53:13" pos:end="53:66"><name pos:start="53:13" pos:end="53:29">bat_601_size_prot</name><argument_list pos:start="53:30" pos:end="53:66">(<argument pos:start="53:31" pos:end="53:33"><expr pos:start="53:31" pos:end="53:33"><name pos:start="53:31" pos:end="53:33">env</name></expr></argument>, <argument pos:start="53:36" pos:end="53:38"><expr pos:start="53:36" pos:end="53:38"><operator pos:start="53:36" pos:end="53:36">&amp;</operator><name pos:start="53:37" pos:end="53:38">bl</name></expr></argument>, <argument pos:start="53:41" pos:end="53:46"><expr pos:start="53:41" pos:end="53:46"><operator pos:start="53:41" pos:end="53:41">&amp;</operator><name pos:start="53:42" pos:end="53:46">valid</name></expr></argument>, <argument pos:start="53:49" pos:end="53:53"><expr pos:start="53:49" pos:end="53:53"><operator pos:start="53:49" pos:end="53:49">&amp;</operator><name pos:start="53:50" pos:end="53:53">prot</name></expr></argument>, <argument pos:start="53:56" pos:end="53:59"><expr pos:start="53:56" pos:end="53:59"><name pos:start="53:56" pos:end="53:59">BATu</name></expr></argument>, <argument pos:start="53:62" pos:end="53:65"><expr pos:start="53:62" pos:end="53:65"><name pos:start="53:62" pos:end="53:65">BATl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="59:9">else <block pos:start="55:16" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:63">

            <expr_stmt pos:start="57:13" pos:end="57:63"><expr pos:start="57:13" pos:end="57:62"><call pos:start="57:13" pos:end="57:62"><name pos:start="57:13" pos:end="57:25">bat_size_prot</name><argument_list pos:start="57:26" pos:end="57:62">(<argument pos:start="57:27" pos:end="57:29"><expr pos:start="57:27" pos:end="57:29"><name pos:start="57:27" pos:end="57:29">env</name></expr></argument>, <argument pos:start="57:32" pos:end="57:34"><expr pos:start="57:32" pos:end="57:34"><operator pos:start="57:32" pos:end="57:32">&amp;</operator><name pos:start="57:33" pos:end="57:34">bl</name></expr></argument>, <argument pos:start="57:37" pos:end="57:42"><expr pos:start="57:37" pos:end="57:42"><operator pos:start="57:37" pos:end="57:37">&amp;</operator><name pos:start="57:38" pos:end="57:42">valid</name></expr></argument>, <argument pos:start="57:45" pos:end="57:49"><expr pos:start="57:45" pos:end="57:49"><operator pos:start="57:45" pos:end="57:45">&amp;</operator><name pos:start="57:46" pos:end="57:49">prot</name></expr></argument>, <argument pos:start="57:52" pos:end="57:55"><expr pos:start="57:52" pos:end="57:55"><name pos:start="57:52" pos:end="57:55">BATu</name></expr></argument>, <argument pos:start="57:58" pos:end="57:61"><expr pos:start="57:58" pos:end="57:61"><name pos:start="57:58" pos:end="57:61">BATl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="65:76"><expr pos:start="61:9" pos:end="65:75"><call pos:start="61:9" pos:end="65:75"><name pos:start="61:9" pos:end="61:16">LOG_BATS</name><argument_list pos:start="61:17" pos:end="65:75">(<argument pos:start="61:18" pos:end="63:44"><expr pos:start="61:18" pos:end="63:44"><literal type="string" pos:start="61:18" pos:end="61:33">"%s: %cBAT%d v "</literal> <name pos:start="61:35" pos:end="61:47">TARGET_FMT_lx</name> <literal type="string" pos:start="61:49" pos:end="61:56">" BATu "</literal> <name pos:start="61:58" pos:end="61:70">TARGET_FMT_lx</name>

                 <literal type="string" pos:start="63:18" pos:end="63:25">" BATl "</literal> <name pos:start="63:27" pos:end="63:39">TARGET_FMT_lx</name> <literal type="string" pos:start="63:41" pos:end="63:44">"\n"</literal></expr></argument>, <argument pos:start="63:47" pos:end="63:54"><expr pos:start="63:47" pos:end="63:54"><name pos:start="63:47" pos:end="63:54">__func__</name></expr></argument>,

                 <argument pos:start="65:18" pos:end="65:48"><expr pos:start="65:18" pos:end="65:48"><ternary pos:start="65:18" pos:end="65:48"><condition pos:start="65:18" pos:end="65:38"><expr pos:start="65:18" pos:end="65:36"><name pos:start="65:18" pos:end="65:21">type</name> <operator pos:start="65:23" pos:end="65:24">==</operator> <name pos:start="65:26" pos:end="65:36">ACCESS_CODE</name></expr> ?</condition><then pos:start="65:40" pos:end="65:42"> <expr pos:start="65:40" pos:end="65:42"><literal type="char" pos:start="65:40" pos:end="65:42">'I'</literal></expr> </then><else pos:start="65:44" pos:end="65:48">: <expr pos:start="65:46" pos:end="65:48"><literal type="char" pos:start="65:46" pos:end="65:48">'D'</literal></expr></else></ternary></expr></argument>, <argument pos:start="65:51" pos:end="65:51"><expr pos:start="65:51" pos:end="65:51"><name pos:start="65:51" pos:end="65:51">i</name></expr></argument>, <argument pos:start="65:54" pos:end="65:60"><expr pos:start="65:54" pos:end="65:60"><name pos:start="65:54" pos:end="65:60">virtual</name></expr></argument>, <argument pos:start="65:63" pos:end="65:67"><expr pos:start="65:63" pos:end="65:67"><operator pos:start="65:63" pos:end="65:63">*</operator><name pos:start="65:64" pos:end="65:67">BATu</name></expr></argument>, <argument pos:start="65:70" pos:end="65:74"><expr pos:start="65:70" pos:end="65:74"><operator pos:start="65:70" pos:end="65:70">*</operator><name pos:start="65:71" pos:end="65:74">BATl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="101:9"><if pos:start="67:9" pos:end="101:9">if <condition pos:start="67:12" pos:end="69:52">(<expr pos:start="67:13" pos:end="69:51"><operator pos:start="67:13" pos:end="67:13">(</operator><name pos:start="67:14" pos:end="67:20">virtual</name> <operator pos:start="67:22" pos:end="67:22">&amp;</operator> <literal type="number" pos:start="67:24" pos:end="67:33">0xF0000000</literal><operator pos:start="67:34" pos:end="67:34">)</operator> <operator pos:start="67:36" pos:end="67:37">==</operator> <name pos:start="67:39" pos:end="67:43">BEPIu</name> <operator pos:start="67:45" pos:end="67:46">&amp;&amp;</operator>

            <operator pos:start="69:13" pos:end="69:13">(</operator><operator pos:start="69:14" pos:end="69:14">(</operator><name pos:start="69:15" pos:end="69:21">virtual</name> <operator pos:start="69:23" pos:end="69:23">&amp;</operator> <literal type="number" pos:start="69:25" pos:end="69:34">0x0FFE0000</literal><operator pos:start="69:35" pos:end="69:35">)</operator> <operator pos:start="69:37" pos:end="69:37">&amp;</operator> <operator pos:start="69:39" pos:end="69:39">~</operator><name pos:start="69:40" pos:end="69:41">bl</name><operator pos:start="69:42" pos:end="69:42">)</operator> <operator pos:start="69:44" pos:end="69:45">==</operator> <name pos:start="69:47" pos:end="69:51">BEPIl</name></expr>)</condition> <block pos:start="69:54" pos:end="101:9">{<block_content pos:start="73:13" pos:end="99:13">

            <comment type="block" pos:start="71:13" pos:end="71:29">/* BAT matches */</comment>

            <if_stmt pos:start="73:13" pos:end="99:13"><if pos:start="73:13" pos:end="99:13">if <condition pos:start="73:16" pos:end="73:27">(<expr pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:21">valid</name> <operator pos:start="73:23" pos:end="73:24">!=</operator> <literal type="number" pos:start="73:26" pos:end="73:26">0</literal></expr>)</condition> <block pos:start="73:29" pos:end="99:13">{<block_content pos:start="77:17" pos:end="97:22">

                <comment type="block" pos:start="75:17" pos:end="75:42">/* Get physical address */</comment>

                <expr_stmt pos:start="77:17" pos:end="81:43"><expr pos:start="77:17" pos:end="81:42"><name pos:start="77:17" pos:end="77:26"><name pos:start="77:17" pos:end="77:19">ctx</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:26">raddr</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <operator pos:start="77:30" pos:end="77:30">(</operator><operator pos:start="77:31" pos:end="77:31">*</operator><name pos:start="77:32" pos:end="77:35">BATl</name> <operator pos:start="77:37" pos:end="77:37">&amp;</operator> <literal type="number" pos:start="77:39" pos:end="77:48">0xF0000000</literal><operator pos:start="77:49" pos:end="77:49">)</operator> <operator pos:start="77:51" pos:end="77:51">|</operator>

                    <operator pos:start="79:21" pos:end="79:21">(</operator><operator pos:start="79:22" pos:end="79:22">(</operator><name pos:start="79:23" pos:end="79:29">virtual</name> <operator pos:start="79:31" pos:end="79:31">&amp;</operator> <literal type="number" pos:start="79:33" pos:end="79:42">0x0FFE0000</literal> <operator pos:start="79:44" pos:end="79:44">&amp;</operator> <name pos:start="79:46" pos:end="79:47">bl</name><operator pos:start="79:48" pos:end="79:48">)</operator> <operator pos:start="79:50" pos:end="79:50">|</operator> <operator pos:start="79:52" pos:end="79:52">(</operator><operator pos:start="79:53" pos:end="79:53">*</operator><name pos:start="79:54" pos:end="79:57">BATl</name> <operator pos:start="79:59" pos:end="79:59">&amp;</operator> <literal type="number" pos:start="79:61" pos:end="79:70">0x0FFE0000</literal><operator pos:start="79:71" pos:end="79:71">)</operator><operator pos:start="79:72" pos:end="79:72">)</operator> <operator pos:start="79:74" pos:end="79:74">|</operator>

                    <operator pos:start="81:21" pos:end="81:21">(</operator><name pos:start="81:22" pos:end="81:28">virtual</name> <operator pos:start="81:30" pos:end="81:30">&amp;</operator> <literal type="number" pos:start="81:32" pos:end="81:41">0x0001F000</literal><operator pos:start="81:42" pos:end="81:42">)</operator></expr>;</expr_stmt>

                <comment type="block" pos:start="83:17" pos:end="83:43">/* Compute access rights */</comment>

                <expr_stmt pos:start="85:17" pos:end="85:33"><expr pos:start="85:17" pos:end="85:32"><name pos:start="85:17" pos:end="85:25"><name pos:start="85:17" pos:end="85:19">ctx</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:25">prot</name></name> <operator pos:start="85:27" pos:end="85:27">=</operator> <name pos:start="85:29" pos:end="85:32">prot</name></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:54"><expr pos:start="87:17" pos:end="87:53"><name pos:start="87:17" pos:end="87:19">ret</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <call pos:start="87:23" pos:end="87:53"><name pos:start="87:23" pos:end="87:32">check_prot</name><argument_list pos:start="87:33" pos:end="87:53">(<argument pos:start="87:34" pos:end="87:42"><expr pos:start="87:34" pos:end="87:42"><name pos:start="87:34" pos:end="87:42"><name pos:start="87:34" pos:end="87:36">ctx</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:42">prot</name></name></expr></argument>, <argument pos:start="87:45" pos:end="87:46"><expr pos:start="87:45" pos:end="87:46"><name pos:start="87:45" pos:end="87:46">rw</name></expr></argument>, <argument pos:start="87:49" pos:end="87:52"><expr pos:start="87:49" pos:end="87:52"><name pos:start="87:49" pos:end="87:52">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="89:17" pos:end="95:65"><if pos:start="89:17" pos:end="95:65">if <condition pos:start="89:20" pos:end="89:29">(<expr pos:start="89:21" pos:end="89:28"><name pos:start="89:21" pos:end="89:23">ret</name> <operator pos:start="89:25" pos:end="89:26">==</operator> <literal type="number" pos:start="89:28" pos:end="89:28">0</literal></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="95:65"><block_content pos:start="91:21" pos:end="95:65">

                    <expr_stmt pos:start="91:21" pos:end="95:65"><expr pos:start="91:21" pos:end="95:64"><call pos:start="91:21" pos:end="95:64"><name pos:start="91:21" pos:end="91:28">LOG_BATS</name><argument_list pos:start="91:29" pos:end="95:64">(<argument pos:start="91:30" pos:end="91:77"><expr pos:start="91:30" pos:end="91:77"><literal type="string" pos:start="91:30" pos:end="91:47">"BAT %d match: r "</literal> <name pos:start="91:49" pos:end="91:62">TARGET_FMT_plx</name> <literal type="string" pos:start="91:64" pos:end="91:77">" prot=%c%c\n"</literal></expr></argument>,

                             <argument pos:start="93:30" pos:end="93:30"><expr pos:start="93:30" pos:end="93:30"><name pos:start="93:30" pos:end="93:30">i</name></expr></argument>, <argument pos:start="93:33" pos:end="93:42"><expr pos:start="93:33" pos:end="93:42"><name pos:start="93:33" pos:end="93:42"><name pos:start="93:33" pos:end="93:35">ctx</name><operator pos:start="93:36" pos:end="93:37">-&gt;</operator><name pos:start="93:38" pos:end="93:42">raddr</name></name></expr></argument>, <argument pos:start="93:45" pos:end="93:77"><expr pos:start="93:45" pos:end="93:77"><ternary pos:start="93:45" pos:end="93:77"><condition pos:start="93:45" pos:end="93:67"><expr pos:start="93:45" pos:end="93:65"><name pos:start="93:45" pos:end="93:53"><name pos:start="93:45" pos:end="93:47">ctx</name><operator pos:start="93:48" pos:end="93:49">-&gt;</operator><name pos:start="93:50" pos:end="93:53">prot</name></name> <operator pos:start="93:55" pos:end="93:55">&amp;</operator> <name pos:start="93:57" pos:end="93:65">PAGE_READ</name></expr> ?</condition><then pos:start="93:69" pos:end="93:71"> <expr pos:start="93:69" pos:end="93:71"><literal type="char" pos:start="93:69" pos:end="93:71">'R'</literal></expr> </then><else pos:start="93:73" pos:end="93:77">: <expr pos:start="93:75" pos:end="93:77"><literal type="char" pos:start="93:75" pos:end="93:77">'-'</literal></expr></else></ternary></expr></argument>,

                             <argument pos:start="95:30" pos:end="95:63"><expr pos:start="95:30" pos:end="95:63"><ternary pos:start="95:30" pos:end="95:63"><condition pos:start="95:30" pos:end="95:53"><expr pos:start="95:30" pos:end="95:51"><name pos:start="95:30" pos:end="95:38"><name pos:start="95:30" pos:end="95:32">ctx</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:38">prot</name></name> <operator pos:start="95:40" pos:end="95:40">&amp;</operator> <name pos:start="95:42" pos:end="95:51">PAGE_WRITE</name></expr> ?</condition><then pos:start="95:55" pos:end="95:57"> <expr pos:start="95:55" pos:end="95:57"><literal type="char" pos:start="95:55" pos:end="95:57">'W'</literal></expr> </then><else pos:start="95:59" pos:end="95:63">: <expr pos:start="95:61" pos:end="95:63"><literal type="char" pos:start="95:61" pos:end="95:63">'-'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="97:17" pos:end="97:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="105:5" pos:end="141:5"><if pos:start="105:5" pos:end="141:5">if <condition pos:start="105:8" pos:end="105:16">(<expr pos:start="105:9" pos:end="105:15"><name pos:start="105:9" pos:end="105:11">ret</name> <operator pos:start="105:13" pos:end="105:13">&lt;</operator> <literal type="number" pos:start="105:15" pos:end="105:15">0</literal></expr>)</condition> <block pos:start="105:18" pos:end="141:5">{<block_content pos:start="109:9" pos:end="140:0">

<cpp:if pos:start="107:1" pos:end="107:23">#<cpp:directive pos:start="107:2" pos:end="107:3">if</cpp:directive> <expr pos:start="107:5" pos:end="107:23"><call pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:11">defined</name><argument_list pos:start="107:12" pos:end="107:23">(<argument pos:start="107:13" pos:end="107:22"><expr pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:22">DEBUG_BATS</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="109:9" pos:end="140:0"><if pos:start="109:9" pos:end="140:0">if <condition pos:start="109:12" pos:end="109:31">(<expr pos:start="109:13" pos:end="109:30"><call pos:start="109:13" pos:end="109:30"><name pos:start="109:13" pos:end="109:28">qemu_log_enabled</name><argument_list pos:start="109:29" pos:end="109:30">()</argument_list></call></expr>)</condition> <block pos:start="109:33" pos:end="140:0">{<block_content pos:start="111:13" pos:end="135:13">

            <expr_stmt pos:start="111:13" pos:end="111:71"><expr pos:start="111:13" pos:end="111:70"><call pos:start="111:13" pos:end="111:70"><name pos:start="111:13" pos:end="111:20">LOG_BATS</name><argument_list pos:start="111:21" pos:end="111:70">(<argument pos:start="111:22" pos:end="111:60"><expr pos:start="111:22" pos:end="111:60"><literal type="string" pos:start="111:22" pos:end="111:40">"no BAT match for "</literal> <name pos:start="111:42" pos:end="111:54">TARGET_FMT_lx</name> <literal type="string" pos:start="111:56" pos:end="111:60">":\n"</literal></expr></argument>, <argument pos:start="111:63" pos:end="111:69"><expr pos:start="111:63" pos:end="111:69"><name pos:start="111:63" pos:end="111:69">virtual</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="113:13" pos:end="135:13">for <control pos:start="113:17" pos:end="113:35">(<init pos:start="113:18" pos:end="113:23"><expr pos:start="113:18" pos:end="113:22"><name pos:start="113:18" pos:end="113:18">i</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <literal type="number" pos:start="113:22" pos:end="113:22">0</literal></expr>;</init> <condition pos:start="113:25" pos:end="113:30"><expr pos:start="113:25" pos:end="113:29"><name pos:start="113:25" pos:end="113:25">i</name> <operator pos:start="113:27" pos:end="113:27">&lt;</operator> <literal type="number" pos:start="113:29" pos:end="113:29">4</literal></expr>;</condition> <incr pos:start="113:32" pos:end="113:34"><expr pos:start="113:32" pos:end="113:34"><name pos:start="113:32" pos:end="113:32">i</name><operator pos:start="113:33" pos:end="113:34">++</operator></expr></incr>)</control> <block pos:start="113:37" pos:end="135:13">{<block_content pos:start="115:17" pos:end="133:57">

                <expr_stmt pos:start="115:17" pos:end="115:33"><expr pos:start="115:17" pos:end="115:32"><name pos:start="115:17" pos:end="115:20">BATu</name> <operator pos:start="115:22" pos:end="115:22">=</operator> <operator pos:start="115:24" pos:end="115:24">&amp;</operator><name pos:start="115:25" pos:end="115:32"><name pos:start="115:25" pos:end="115:29">BATut</name><index pos:start="115:30" pos:end="115:32">[<expr pos:start="115:31" pos:end="115:31"><name pos:start="115:31" pos:end="115:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:33"><expr pos:start="117:17" pos:end="117:32"><name pos:start="117:17" pos:end="117:20">BATl</name> <operator pos:start="117:22" pos:end="117:22">=</operator> <operator pos:start="117:24" pos:end="117:24">&amp;</operator><name pos:start="117:25" pos:end="117:32"><name pos:start="117:25" pos:end="117:29">BATlt</name><index pos:start="117:30" pos:end="117:32">[<expr pos:start="117:31" pos:end="117:31"><name pos:start="117:31" pos:end="117:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:43"><expr pos:start="119:17" pos:end="119:42"><name pos:start="119:17" pos:end="119:21">BEPIu</name> <operator pos:start="119:23" pos:end="119:23">=</operator> <operator pos:start="119:25" pos:end="119:25">*</operator><name pos:start="119:26" pos:end="119:29">BATu</name> <operator pos:start="119:31" pos:end="119:31">&amp;</operator> <literal type="number" pos:start="119:33" pos:end="119:42">0xF0000000</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:43"><expr pos:start="121:17" pos:end="121:42"><name pos:start="121:17" pos:end="121:21">BEPIl</name> <operator pos:start="121:23" pos:end="121:23">=</operator> <operator pos:start="121:25" pos:end="121:25">*</operator><name pos:start="121:26" pos:end="121:29">BATu</name> <operator pos:start="121:31" pos:end="121:31">&amp;</operator> <literal type="number" pos:start="121:33" pos:end="121:42">0x0FFE0000</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:48"><expr pos:start="123:17" pos:end="123:47"><name pos:start="123:17" pos:end="123:18">bl</name> <operator pos:start="123:20" pos:end="123:20">=</operator> <operator pos:start="123:22" pos:end="123:22">(</operator><operator pos:start="123:23" pos:end="123:23">*</operator><name pos:start="123:24" pos:end="123:27">BATu</name> <operator pos:start="123:29" pos:end="123:29">&amp;</operator> <literal type="number" pos:start="123:31" pos:end="123:40">0x00001FFC</literal><operator pos:start="123:41" pos:end="123:41">)</operator> <operator pos:start="123:43" pos:end="123:44">&lt;&lt;</operator> <literal type="number" pos:start="123:46" pos:end="123:47">15</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="133:57"><expr pos:start="125:17" pos:end="133:56"><call pos:start="125:17" pos:end="133:56"><name pos:start="125:17" pos:end="125:24">LOG_BATS</name><argument_list pos:start="125:25" pos:end="133:56">(<argument pos:start="125:26" pos:end="129:61"><expr pos:start="125:26" pos:end="129:61"><literal type="string" pos:start="125:26" pos:end="125:41">"%s: %cBAT%d v "</literal> <name pos:start="125:43" pos:end="125:55">TARGET_FMT_lx</name> <literal type="string" pos:start="125:57" pos:end="125:64">" BATu "</literal> <name pos:start="125:66" pos:end="125:78">TARGET_FMT_lx</name>

                         <literal type="string" pos:start="127:26" pos:end="127:33">" BATl "</literal> <name pos:start="127:35" pos:end="127:47">TARGET_FMT_lx</name> <literal type="string" pos:start="127:49" pos:end="127:55">" \n\t"</literal> <name pos:start="127:57" pos:end="127:69">TARGET_FMT_lx</name> <literal type="string" pos:start="127:71" pos:end="127:73">" "</literal>

                         <name pos:start="129:26" pos:end="129:38">TARGET_FMT_lx</name> <literal type="string" pos:start="129:40" pos:end="129:42">" "</literal> <name pos:start="129:44" pos:end="129:56">TARGET_FMT_lx</name> <literal type="string" pos:start="129:58" pos:end="129:61">"\n"</literal></expr></argument>,

                         <argument pos:start="131:26" pos:end="131:33"><expr pos:start="131:26" pos:end="131:33"><name pos:start="131:26" pos:end="131:33">__func__</name></expr></argument>, <argument pos:start="131:36" pos:end="131:66"><expr pos:start="131:36" pos:end="131:66"><ternary pos:start="131:36" pos:end="131:66"><condition pos:start="131:36" pos:end="131:56"><expr pos:start="131:36" pos:end="131:54"><name pos:start="131:36" pos:end="131:39">type</name> <operator pos:start="131:41" pos:end="131:42">==</operator> <name pos:start="131:44" pos:end="131:54">ACCESS_CODE</name></expr> ?</condition><then pos:start="131:58" pos:end="131:60"> <expr pos:start="131:58" pos:end="131:60"><literal type="char" pos:start="131:58" pos:end="131:60">'I'</literal></expr> </then><else pos:start="131:62" pos:end="131:66">: <expr pos:start="131:64" pos:end="131:66"><literal type="char" pos:start="131:64" pos:end="131:66">'D'</literal></expr></else></ternary></expr></argument>, <argument pos:start="131:69" pos:end="131:69"><expr pos:start="131:69" pos:end="131:69"><name pos:start="131:69" pos:end="131:69">i</name></expr></argument>, <argument pos:start="131:72" pos:end="131:78"><expr pos:start="131:72" pos:end="131:78"><name pos:start="131:72" pos:end="131:78">virtual</name></expr></argument>,

                         <argument pos:start="133:26" pos:end="133:30"><expr pos:start="133:26" pos:end="133:30"><operator pos:start="133:26" pos:end="133:26">*</operator><name pos:start="133:27" pos:end="133:30">BATu</name></expr></argument>, <argument pos:start="133:33" pos:end="133:37"><expr pos:start="133:33" pos:end="133:37"><operator pos:start="133:33" pos:end="133:33">*</operator><name pos:start="133:34" pos:end="133:37">BATl</name></expr></argument>, <argument pos:start="133:40" pos:end="133:44"><expr pos:start="133:40" pos:end="133:44"><name pos:start="133:40" pos:end="133:44">BEPIu</name></expr></argument>, <argument pos:start="133:47" pos:end="133:51"><expr pos:start="133:47" pos:end="133:51"><name pos:start="133:47" pos:end="133:51">BEPIl</name></expr></argument>, <argument pos:start="133:54" pos:end="133:55"><expr pos:start="133:54" pos:end="133:55"><name pos:start="133:54" pos:end="133:55">bl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="139:1" pos:end="139:6">#<cpp:directive pos:start="139:2" pos:end="139:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="143:5" pos:end="143:16">/* No hit */</comment>

    <return pos:start="145:5" pos:end="145:15">return <expr pos:start="145:12" pos:end="145:14"><name pos:start="145:12" pos:end="145:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
