<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16384.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type>  <name pos:start="1:7" pos:end="1:20">pp_postprocess</name><parameter_list pos:start="1:21" pos:end="9:59">(<parameter pos:start="1:22" pos:end="1:43"><decl pos:start="1:22" pos:end="1:43"><type pos:start="1:22" pos:end="1:40"><specifier pos:start="1:22" pos:end="1:26">const</specifier> <name pos:start="1:28" pos:end="1:34">uint8_t</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type> <name pos:start="1:38" pos:end="1:43"><name pos:start="1:38" pos:end="1:40">src</name><index pos:start="1:41" pos:end="1:43">[<expr pos:start="1:42" pos:end="1:42"><literal type="number" pos:start="1:42" pos:end="1:42">3</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:67"><decl pos:start="1:46" pos:end="1:67"><type pos:start="1:46" pos:end="1:64"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:64">srcStride</name><index pos:start="1:65" pos:end="1:67">[<expr pos:start="1:66" pos:end="1:66"><literal type="number" pos:start="1:66" pos:end="1:66">3</literal></expr>]</index></name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:37"><decl pos:start="3:22" pos:end="3:37"><type pos:start="3:22" pos:end="3:34"><name pos:start="3:22" pos:end="3:28">uint8_t</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type> <name pos:start="3:32" pos:end="3:37"><name pos:start="3:32" pos:end="3:34">dst</name><index pos:start="3:35" pos:end="3:37">[<expr pos:start="3:36" pos:end="3:36"><literal type="number" pos:start="3:36" pos:end="3:36">3</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:61"><decl pos:start="3:40" pos:end="3:61"><type pos:start="3:40" pos:end="3:58"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:58">dstStride</name><index pos:start="3:59" pos:end="3:61">[<expr pos:start="3:60" pos:end="3:60"><literal type="number" pos:start="3:60" pos:end="3:60">3</literal></expr>]</index></name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:30"><decl pos:start="5:22" pos:end="5:30"><type pos:start="5:22" pos:end="5:30"><name pos:start="5:22" pos:end="5:24">int</name></type> <name pos:start="5:26" pos:end="5:30">width</name></decl></parameter>, <parameter pos:start="5:33" pos:end="5:42"><decl pos:start="5:33" pos:end="5:42"><type pos:start="5:33" pos:end="5:42"><name pos:start="5:33" pos:end="5:35">int</name></type> <name pos:start="5:37" pos:end="5:42">height</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:47"><decl pos:start="7:22" pos:end="7:47"><type pos:start="7:22" pos:end="7:47"><specifier pos:start="7:22" pos:end="7:26">const</specifier> <name pos:start="7:28" pos:end="7:37">QP_STORE_T</name> <modifier pos:start="7:39" pos:end="7:39">*</modifier></type><name pos:start="7:40" pos:end="7:47">QP_store</name></decl></parameter>,  <parameter pos:start="7:51" pos:end="7:62"><decl pos:start="7:51" pos:end="7:62"><type pos:start="7:51" pos:end="7:62"><name pos:start="7:51" pos:end="7:53">int</name></type> <name pos:start="7:55" pos:end="7:62">QPStride</name></decl></parameter>,

                     <parameter pos:start="9:22" pos:end="9:32"><decl pos:start="9:22" pos:end="9:32"><type pos:start="9:22" pos:end="9:32"><name pos:start="9:22" pos:end="9:28">pp_mode</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:32">vm</name></decl></parameter>,  <parameter pos:start="9:36" pos:end="9:43"><decl pos:start="9:36" pos:end="9:43"><type pos:start="9:36" pos:end="9:43"><name pos:start="9:36" pos:end="9:39">void</name> <modifier pos:start="9:41" pos:end="9:41">*</modifier></type><name pos:start="9:42" pos:end="9:43">vc</name></decl></parameter>, <parameter pos:start="9:46" pos:end="9:58"><decl pos:start="9:46" pos:end="9:58"><type pos:start="9:46" pos:end="9:58"><name pos:start="9:46" pos:end="9:48">int</name></type> <name pos:start="9:50" pos:end="9:58">pict_type</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="203:1">{<block_content pos:start="13:5" pos:end="201:5">

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">mbWidth</name> <init pos:start="13:17" pos:end="13:31">= <expr pos:start="13:19" pos:end="13:31"><operator pos:start="13:19" pos:end="13:19">(</operator><name pos:start="13:20" pos:end="13:24">width</name><operator pos:start="13:25" pos:end="13:25">+</operator><literal type="number" pos:start="13:26" pos:end="13:27">15</literal><operator pos:start="13:28" pos:end="13:28">)</operator><operator pos:start="13:29" pos:end="13:30">&gt;&gt;</operator><literal type="number" pos:start="13:31" pos:end="13:31">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">mbHeight</name><init pos:start="15:17" pos:end="15:32">= <expr pos:start="15:19" pos:end="15:32"><operator pos:start="15:19" pos:end="15:19">(</operator><name pos:start="15:20" pos:end="15:25">height</name><operator pos:start="15:26" pos:end="15:26">+</operator><literal type="number" pos:start="15:27" pos:end="15:28">15</literal><operator pos:start="15:29" pos:end="15:29">)</operator><operator pos:start="15:30" pos:end="15:31">&gt;&gt;</operator><literal type="number" pos:start="15:32" pos:end="15:32">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:10">PPMode</name> <modifier pos:start="17:12" pos:end="17:12">*</modifier></type><name pos:start="17:13" pos:end="17:16">mode</name> <init pos:start="17:18" pos:end="17:21">= <expr pos:start="17:20" pos:end="17:21"><name pos:start="17:20" pos:end="17:21">vm</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:13">PPContext</name> <modifier pos:start="19:15" pos:end="19:15">*</modifier></type><name pos:start="19:16" pos:end="19:16">c</name> <init pos:start="19:18" pos:end="19:21">= <expr pos:start="19:20" pos:end="19:21"><name pos:start="19:20" pos:end="19:21">vc</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:67"><decl pos:start="21:5" pos:end="21:66"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:17">minStride</name><init pos:start="21:18" pos:end="21:66">= <expr pos:start="21:20" pos:end="21:66"><call pos:start="21:20" pos:end="21:66"><name pos:start="21:20" pos:end="21:24">FFMAX</name><argument_list pos:start="21:25" pos:end="21:66">(<argument pos:start="21:26" pos:end="21:44"><expr pos:start="21:26" pos:end="21:44"><call pos:start="21:26" pos:end="21:44"><name pos:start="21:26" pos:end="21:30">FFABS</name><argument_list pos:start="21:31" pos:end="21:44">(<argument pos:start="21:32" pos:end="21:43"><expr pos:start="21:32" pos:end="21:43"><name pos:start="21:32" pos:end="21:43"><name pos:start="21:32" pos:end="21:40">srcStride</name><index pos:start="21:41" pos:end="21:43">[<expr pos:start="21:42" pos:end="21:42"><literal type="number" pos:start="21:42" pos:end="21:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:47" pos:end="21:65"><expr pos:start="21:47" pos:end="21:65"><call pos:start="21:47" pos:end="21:65"><name pos:start="21:47" pos:end="21:51">FFABS</name><argument_list pos:start="21:52" pos:end="21:65">(<argument pos:start="21:53" pos:end="21:64"><expr pos:start="21:53" pos:end="21:64"><name pos:start="21:53" pos:end="21:64"><name pos:start="21:53" pos:end="21:61">dstStride</name><index pos:start="21:62" pos:end="21:64">[<expr pos:start="21:63" pos:end="21:63"><literal type="number" pos:start="21:63" pos:end="21:63">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:38"><decl pos:start="23:5" pos:end="23:37"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:19">absQPStride</name> <init pos:start="23:21" pos:end="23:37">= <expr pos:start="23:23" pos:end="23:37"><call pos:start="23:23" pos:end="23:37"><name pos:start="23:23" pos:end="23:27">FFABS</name><argument_list pos:start="23:28" pos:end="23:37">(<argument pos:start="23:29" pos:end="23:36"><expr pos:start="23:29" pos:end="23:36"><name pos:start="23:29" pos:end="23:36">QPStride</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="27:5" pos:end="27:52">// c-&gt;stride and c-&gt;QPStride are always positive</comment>

    <if_stmt pos:start="29:5" pos:end="35:56"><if pos:start="29:5" pos:end="35:56">if<condition pos:start="29:7" pos:end="29:58">(<expr pos:start="29:8" pos:end="29:57"><name pos:start="29:8" pos:end="29:16"><name pos:start="29:8" pos:end="29:8">c</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:16">stride</name></name> <operator pos:start="29:18" pos:end="29:18">&lt;</operator> <name pos:start="29:20" pos:end="29:28">minStride</name> <operator pos:start="29:30" pos:end="29:31">||</operator> <name pos:start="29:33" pos:end="29:43"><name pos:start="29:33" pos:end="29:33">c</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:43">qpStride</name></name> <operator pos:start="29:45" pos:end="29:45">&lt;</operator> <name pos:start="29:47" pos:end="29:57">absQPStride</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="35:56"><block_content pos:start="31:9" pos:end="35:56">

        <expr_stmt pos:start="31:9" pos:end="35:56"><expr pos:start="31:9" pos:end="35:55"><call pos:start="31:9" pos:end="35:55"><name pos:start="31:9" pos:end="31:22">reallocBuffers</name><argument_list pos:start="31:23" pos:end="35:55">(<argument pos:start="31:24" pos:end="31:24"><expr pos:start="31:24" pos:end="31:24"><name pos:start="31:24" pos:end="31:24">c</name></expr></argument>, <argument pos:start="31:27" pos:end="31:31"><expr pos:start="31:27" pos:end="31:31"><name pos:start="31:27" pos:end="31:31">width</name></expr></argument>, <argument pos:start="31:34" pos:end="31:39"><expr pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:39">height</name></expr></argument>,

                       <argument pos:start="33:24" pos:end="33:50"><expr pos:start="33:24" pos:end="33:50"><call pos:start="33:24" pos:end="33:50"><name pos:start="33:24" pos:end="33:28">FFMAX</name><argument_list pos:start="33:29" pos:end="33:50">(<argument pos:start="33:30" pos:end="33:38"><expr pos:start="33:30" pos:end="33:38"><name pos:start="33:30" pos:end="33:38">minStride</name></expr></argument>, <argument pos:start="33:41" pos:end="33:49"><expr pos:start="33:41" pos:end="33:49"><name pos:start="33:41" pos:end="33:49"><name pos:start="33:41" pos:end="33:41">c</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:49">stride</name></name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="35:24" pos:end="35:54"><expr pos:start="35:24" pos:end="35:54"><call pos:start="35:24" pos:end="35:54"><name pos:start="35:24" pos:end="35:28">FFMAX</name><argument_list pos:start="35:29" pos:end="35:54">(<argument pos:start="35:30" pos:end="35:40"><expr pos:start="35:30" pos:end="35:40"><name pos:start="35:30" pos:end="35:40"><name pos:start="35:30" pos:end="35:30">c</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:40">qpStride</name></name></expr></argument>, <argument pos:start="35:43" pos:end="35:53"><expr pos:start="35:43" pos:end="35:53"><name pos:start="35:43" pos:end="35:53">absQPStride</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="55:5"><if pos:start="39:5" pos:end="55:5">if<condition pos:start="39:7" pos:end="39:50">(<expr pos:start="39:8" pos:end="39:49"><operator pos:start="39:8" pos:end="39:8">!</operator><name pos:start="39:9" pos:end="39:16">QP_store</name> <operator pos:start="39:18" pos:end="39:19">||</operator> <operator pos:start="39:21" pos:end="39:21">(</operator><name pos:start="39:22" pos:end="39:34"><name pos:start="39:22" pos:end="39:25">mode</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:34">lumMode</name></name> <operator pos:start="39:36" pos:end="39:36">&amp;</operator> <name pos:start="39:38" pos:end="39:48">FORCE_QUANT</name><operator pos:start="39:49" pos:end="39:49">)</operator></expr>)</condition><block pos:start="39:51" pos:end="55:5">{<block_content pos:start="41:9" pos:end="53:60">

        <decl_stmt pos:start="41:9" pos:end="41:14"><decl pos:start="41:9" pos:end="41:13"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:16">QP_store</name><operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:34"><name pos:start="43:19" pos:end="43:19">c</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:34">forcedQPTable</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:19">absQPStride</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <name pos:start="45:23" pos:end="45:30">QPStride</name> <operator pos:start="45:32" pos:end="45:32">=</operator> <literal type="number" pos:start="45:34" pos:end="45:34">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="53:60"><if pos:start="47:9" pos:end="49:76">if<condition pos:start="47:11" pos:end="47:39">(<expr pos:start="47:12" pos:end="47:38"><name pos:start="47:12" pos:end="47:24"><name pos:start="47:12" pos:end="47:15">mode</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:24">lumMode</name></name> <operator pos:start="47:26" pos:end="47:26">&amp;</operator> <name pos:start="47:28" pos:end="47:38">FORCE_QUANT</name></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:76"><block_content pos:start="49:13" pos:end="49:76">

            <for pos:start="49:13" pos:end="49:76">for<control pos:start="49:16" pos:end="49:36">(<init pos:start="49:17" pos:end="49:20"><expr pos:start="49:17" pos:end="49:19"><name pos:start="49:17" pos:end="49:17">i</name><operator pos:start="49:18" pos:end="49:18">=</operator><literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>;</init> <condition pos:start="49:22" pos:end="49:31"><expr pos:start="49:22" pos:end="49:30"><name pos:start="49:22" pos:end="49:22">i</name><operator pos:start="49:23" pos:end="49:23">&lt;</operator><name pos:start="49:24" pos:end="49:30">mbWidth</name></expr>;</condition> <incr pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:33">i</name><operator pos:start="49:34" pos:end="49:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:38" pos:end="49:76"><block_content pos:start="49:38" pos:end="49:76"> <expr_stmt pos:start="49:38" pos:end="49:76"><expr pos:start="49:38" pos:end="49:75"><name pos:start="49:38" pos:end="49:56"><name pos:start="49:38" pos:end="49:38">c</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:53">forcedQPTable</name><index pos:start="49:54" pos:end="49:56">[<expr pos:start="49:55" pos:end="49:55"><name pos:start="49:55" pos:end="49:55">i</name></expr>]</index></name><operator pos:start="49:57" pos:end="49:57">=</operator> <name pos:start="49:59" pos:end="49:75"><name pos:start="49:59" pos:end="49:62">mode</name><operator pos:start="49:63" pos:end="49:64">-&gt;</operator><name pos:start="49:65" pos:end="49:75">forcedQuant</name></name></expr>;</expr_stmt></block_content></block></for></block_content></block></if>

        <else pos:start="51:9" pos:end="53:60">else<block type="pseudo" pos:start="53:13" pos:end="53:60"><block_content pos:start="53:13" pos:end="53:60">

            <for pos:start="53:13" pos:end="53:60">for<control pos:start="53:16" pos:end="53:36">(<init pos:start="53:17" pos:end="53:20"><expr pos:start="53:17" pos:end="53:19"><name pos:start="53:17" pos:end="53:17">i</name><operator pos:start="53:18" pos:end="53:18">=</operator><literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>;</init> <condition pos:start="53:22" pos:end="53:31"><expr pos:start="53:22" pos:end="53:30"><name pos:start="53:22" pos:end="53:22">i</name><operator pos:start="53:23" pos:end="53:23">&lt;</operator><name pos:start="53:24" pos:end="53:30">mbWidth</name></expr>;</condition> <incr pos:start="53:33" pos:end="53:35"><expr pos:start="53:33" pos:end="53:35"><name pos:start="53:33" pos:end="53:33">i</name><operator pos:start="53:34" pos:end="53:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:38" pos:end="53:60"><block_content pos:start="53:38" pos:end="53:60"> <expr_stmt pos:start="53:38" pos:end="53:60"><expr pos:start="53:38" pos:end="53:59"><name pos:start="53:38" pos:end="53:56"><name pos:start="53:38" pos:end="53:38">c</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:53">forcedQPTable</name><index pos:start="53:54" pos:end="53:56">[<expr pos:start="53:55" pos:end="53:55"><name pos:start="53:55" pos:end="53:55">i</name></expr>]</index></name><operator pos:start="53:57" pos:end="53:57">=</operator> <literal type="number" pos:start="53:59" pos:end="53:59">1</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="81:5"><if pos:start="59:5" pos:end="81:5">if<condition pos:start="59:7" pos:end="59:36">(<expr pos:start="59:8" pos:end="59:35"><name pos:start="59:8" pos:end="59:16">pict_type</name> <operator pos:start="59:18" pos:end="59:18">&amp;</operator> <name pos:start="59:20" pos:end="59:35">PP_PICT_TYPE_QP2</name></expr>)</condition><block pos:start="59:37" pos:end="81:5">{<block_content pos:start="61:9" pos:end="79:30">

        <decl_stmt pos:start="61:9" pos:end="61:14"><decl pos:start="61:9" pos:end="61:13"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:64"><decl pos:start="63:9" pos:end="63:63"><type pos:start="63:9" pos:end="63:17"><specifier pos:start="63:9" pos:end="63:13">const</specifier> <name pos:start="63:15" pos:end="63:17">int</name></type> <name pos:start="63:19" pos:end="63:23">count</name><init pos:start="63:24" pos:end="63:63">= <expr pos:start="63:26" pos:end="63:63"><call pos:start="63:26" pos:end="63:63"><name pos:start="63:26" pos:end="63:30">FFMAX</name><argument_list pos:start="63:31" pos:end="63:63">(<argument pos:start="63:32" pos:end="63:53"><expr pos:start="63:32" pos:end="63:53"><name pos:start="63:32" pos:end="63:39">mbHeight</name> <operator pos:start="63:41" pos:end="63:41">*</operator> <name pos:start="63:43" pos:end="63:53">absQPStride</name></expr></argument>, <argument pos:start="63:56" pos:end="63:62"><expr pos:start="63:56" pos:end="63:62"><name pos:start="63:56" pos:end="63:62">mbWidth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <for pos:start="65:9" pos:end="69:9">for<control pos:start="65:12" pos:end="65:35">(<init pos:start="65:13" pos:end="65:16"><expr pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:13">i</name><operator pos:start="65:14" pos:end="65:14">=</operator><literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>;</init> <condition pos:start="65:18" pos:end="65:30"><expr pos:start="65:18" pos:end="65:29"><name pos:start="65:18" pos:end="65:18">i</name><operator pos:start="65:19" pos:end="65:19">&lt;</operator><operator pos:start="65:20" pos:end="65:20">(</operator><name pos:start="65:21" pos:end="65:25">count</name><operator pos:start="65:26" pos:end="65:27">&gt;&gt;</operator><literal type="number" pos:start="65:28" pos:end="65:28">2</literal><operator pos:start="65:29" pos:end="65:29">)</operator></expr>;</condition> <incr pos:start="65:32" pos:end="65:34"><expr pos:start="65:32" pos:end="65:34"><name pos:start="65:32" pos:end="65:32">i</name><operator pos:start="65:33" pos:end="65:34">++</operator></expr></incr>)</control><block pos:start="65:36" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:93">

            <expr_stmt pos:start="67:13" pos:end="67:93"><expr pos:start="67:13" pos:end="67:92"><operator pos:start="67:13" pos:end="67:13">(</operator><operator pos:start="67:14" pos:end="67:14">(</operator><name pos:start="67:15" pos:end="67:22">uint32_t</name><operator pos:start="67:23" pos:end="67:23">*</operator><operator pos:start="67:24" pos:end="67:24">)</operator><name pos:start="67:25" pos:end="67:37"><name pos:start="67:25" pos:end="67:25">c</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:37">stdQPTable</name></name><operator pos:start="67:38" pos:end="67:38">)</operator><index pos:start="67:39" pos:end="67:41">[<expr pos:start="67:40" pos:end="67:40"><name pos:start="67:40" pos:end="67:40">i</name></expr>]</index> <operator pos:start="67:43" pos:end="67:43">=</operator> <operator pos:start="67:45" pos:end="67:45">(</operator><operator pos:start="67:46" pos:end="67:46">(</operator><operator pos:start="67:47" pos:end="67:47">(</operator><specifier pos:start="67:48" pos:end="67:52">const</specifier> <name pos:start="67:54" pos:end="67:61">uint32_t</name><operator pos:start="67:62" pos:end="67:62">*</operator><operator pos:start="67:63" pos:end="67:63">)</operator><name pos:start="67:64" pos:end="67:71">QP_store</name><operator pos:start="67:72" pos:end="67:72">)</operator><index pos:start="67:73" pos:end="67:75">[<expr pos:start="67:74" pos:end="67:74"><name pos:start="67:74" pos:end="67:74">i</name></expr>]</index><operator pos:start="67:76" pos:end="67:77">&gt;&gt;</operator><literal type="number" pos:start="67:78" pos:end="67:78">1</literal><operator pos:start="67:79" pos:end="67:79">)</operator> <operator pos:start="67:81" pos:end="67:81">&amp;</operator> <literal type="number" pos:start="67:83" pos:end="67:92">0x7F7F7F7F</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="71:9" pos:end="75:9">for<control pos:start="71:12" pos:end="71:32">(<init pos:start="71:13" pos:end="71:18"><expr pos:start="71:13" pos:end="71:17"><name pos:start="71:13" pos:end="71:13">i</name><operator pos:start="71:14" pos:end="71:16">&lt;&lt;=</operator><literal type="number" pos:start="71:17" pos:end="71:17">2</literal></expr>;</init> <condition pos:start="71:20" pos:end="71:27"><expr pos:start="71:20" pos:end="71:26"><name pos:start="71:20" pos:end="71:20">i</name><operator pos:start="71:21" pos:end="71:21">&lt;</operator><name pos:start="71:22" pos:end="71:26">count</name></expr>;</condition> <incr pos:start="71:29" pos:end="71:31"><expr pos:start="71:29" pos:end="71:31"><name pos:start="71:29" pos:end="71:29">i</name><operator pos:start="71:30" pos:end="71:31">++</operator></expr></incr>)</control><block pos:start="71:33" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:46">

            <expr_stmt pos:start="73:13" pos:end="73:46"><expr pos:start="73:13" pos:end="73:45"><name pos:start="73:13" pos:end="73:28"><name pos:start="73:13" pos:end="73:13">c</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:25">stdQPTable</name><index pos:start="73:26" pos:end="73:28">[<expr pos:start="73:27" pos:end="73:27"><name pos:start="73:27" pos:end="73:27">i</name></expr>]</index></name> <operator pos:start="73:30" pos:end="73:30">=</operator> <name pos:start="73:32" pos:end="73:42"><name pos:start="73:32" pos:end="73:39">QP_store</name><index pos:start="73:40" pos:end="73:42">[<expr pos:start="73:41" pos:end="73:41"><name pos:start="73:41" pos:end="73:41">i</name></expr>]</index></name><operator pos:start="73:43" pos:end="73:44">&gt;&gt;</operator><literal type="number" pos:start="73:45" pos:end="73:45">1</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="77:9" pos:end="77:32"><expr pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:16">QP_store</name><operator pos:start="77:17" pos:end="77:17">=</operator> <name pos:start="77:19" pos:end="77:31"><name pos:start="77:19" pos:end="77:19">c</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:31">stdQPTable</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:16">QPStride</name><operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:29">absQPStride</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="103:5"><if pos:start="85:5" pos:end="103:5">if<condition pos:start="85:7" pos:end="85:9">(<expr pos:start="85:8" pos:end="85:8"><literal type="number" pos:start="85:8" pos:end="85:8">0</literal></expr>)</condition><block pos:start="85:10" pos:end="103:5">{<block_content pos:start="87:9" pos:end="101:37">

        <decl_stmt pos:start="87:9" pos:end="87:16"><decl pos:start="87:9" pos:end="87:13"><type pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:11">int</name></type> <name pos:start="87:13" pos:end="87:13">x</name></decl>,<decl pos:start="87:15" pos:end="87:15"><type ref="prev" pos:start="87:9" pos:end="87:11"/><name pos:start="87:15" pos:end="87:15">y</name></decl>;</decl_stmt>

        <for pos:start="89:9" pos:end="99:9">for<control pos:start="89:12" pos:end="89:33">(<init pos:start="89:13" pos:end="89:16"><expr pos:start="89:13" pos:end="89:15"><name pos:start="89:13" pos:end="89:13">y</name><operator pos:start="89:14" pos:end="89:14">=</operator><literal type="number" pos:start="89:15" pos:end="89:15">0</literal></expr>;</init> <condition pos:start="89:18" pos:end="89:28"><expr pos:start="89:18" pos:end="89:27"><name pos:start="89:18" pos:end="89:18">y</name><operator pos:start="89:19" pos:end="89:19">&lt;</operator><name pos:start="89:20" pos:end="89:27">mbHeight</name></expr>;</condition> <incr pos:start="89:30" pos:end="89:32"><expr pos:start="89:30" pos:end="89:32"><name pos:start="89:30" pos:end="89:30">y</name><operator pos:start="89:31" pos:end="89:32">++</operator></expr></incr>)</control><block pos:start="89:34" pos:end="99:9">{<block_content pos:start="91:13" pos:end="97:41">

            <for pos:start="91:13" pos:end="95:13">for<control pos:start="91:16" pos:end="91:36">(<init pos:start="91:17" pos:end="91:20"><expr pos:start="91:17" pos:end="91:19"><name pos:start="91:17" pos:end="91:17">x</name><operator pos:start="91:18" pos:end="91:18">=</operator><literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr>;</init> <condition pos:start="91:22" pos:end="91:31"><expr pos:start="91:22" pos:end="91:30"><name pos:start="91:22" pos:end="91:22">x</name><operator pos:start="91:23" pos:end="91:23">&lt;</operator><name pos:start="91:24" pos:end="91:30">mbWidth</name></expr>;</condition> <incr pos:start="91:33" pos:end="91:35"><expr pos:start="91:33" pos:end="91:35"><name pos:start="91:33" pos:end="91:33">x</name><operator pos:start="91:34" pos:end="91:35">++</operator></expr></incr>)</control><block pos:start="91:37" pos:end="95:13">{<block_content pos:start="93:17" pos:end="93:73">

                <expr_stmt pos:start="93:17" pos:end="93:73"><expr pos:start="93:17" pos:end="93:72"><call pos:start="93:17" pos:end="93:72"><name pos:start="93:17" pos:end="93:22">av_log</name><argument_list pos:start="93:23" pos:end="93:72">(<argument pos:start="93:24" pos:end="93:24"><expr pos:start="93:24" pos:end="93:24"><name pos:start="93:24" pos:end="93:24">c</name></expr></argument>, <argument pos:start="93:27" pos:end="93:37"><expr pos:start="93:27" pos:end="93:37"><name pos:start="93:27" pos:end="93:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="93:40" pos:end="93:45"><expr pos:start="93:40" pos:end="93:45"><literal type="string" pos:start="93:40" pos:end="93:45">"%2d "</literal></expr></argument>, <argument pos:start="93:48" pos:end="93:71"><expr pos:start="93:48" pos:end="93:71"><name pos:start="93:48" pos:end="93:71"><name pos:start="93:48" pos:end="93:55">QP_store</name><index pos:start="93:56" pos:end="93:71">[<expr pos:start="93:57" pos:end="93:70"><name pos:start="93:57" pos:end="93:57">x</name> <operator pos:start="93:59" pos:end="93:59">+</operator> <name pos:start="93:61" pos:end="93:61">y</name><operator pos:start="93:62" pos:end="93:62">*</operator><name pos:start="93:63" pos:end="93:70">QPStride</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="97:13" pos:end="97:41"><expr pos:start="97:13" pos:end="97:40"><call pos:start="97:13" pos:end="97:40"><name pos:start="97:13" pos:end="97:18">av_log</name><argument_list pos:start="97:19" pos:end="97:40">(<argument pos:start="97:20" pos:end="97:20"><expr pos:start="97:20" pos:end="97:20"><name pos:start="97:20" pos:end="97:20">c</name></expr></argument>, <argument pos:start="97:23" pos:end="97:33"><expr pos:start="97:23" pos:end="97:33"><name pos:start="97:23" pos:end="97:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="97:36" pos:end="97:39"><expr pos:start="97:36" pos:end="97:39"><literal type="string" pos:start="97:36" pos:end="97:39">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="101:9" pos:end="101:37"><expr pos:start="101:9" pos:end="101:36"><call pos:start="101:9" pos:end="101:36"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:36">(<argument pos:start="101:16" pos:end="101:16"><expr pos:start="101:16" pos:end="101:16"><name pos:start="101:16" pos:end="101:16">c</name></expr></argument>, <argument pos:start="101:19" pos:end="101:29"><expr pos:start="101:19" pos:end="101:29"><name pos:start="101:19" pos:end="101:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="101:32" pos:end="101:35"><expr pos:start="101:32" pos:end="101:35"><literal type="string" pos:start="101:32" pos:end="101:35">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="143:5"><if pos:start="107:5" pos:end="143:5">if<condition pos:start="107:7" pos:end="107:24">(<expr pos:start="107:8" pos:end="107:23"><operator pos:start="107:8" pos:end="107:8">(</operator><name pos:start="107:9" pos:end="107:17">pict_type</name><operator pos:start="107:18" pos:end="107:18">&amp;</operator><literal type="number" pos:start="107:19" pos:end="107:19">7</literal><operator pos:start="107:20" pos:end="107:20">)</operator><operator pos:start="107:21" pos:end="107:22">!=</operator><literal type="number" pos:start="107:23" pos:end="107:23">3</literal></expr>)</condition><block pos:start="107:25" pos:end="143:5">{<block_content pos:start="109:9" pos:end="141:9">

        <if_stmt pos:start="109:9" pos:end="141:9"><if pos:start="109:9" pos:end="127:9">if <condition pos:start="109:12" pos:end="109:26">(<expr pos:start="109:13" pos:end="109:25"><name pos:start="109:13" pos:end="109:20">QPStride</name> <operator pos:start="109:22" pos:end="109:23">&gt;=</operator> <literal type="number" pos:start="109:25" pos:end="109:25">0</literal></expr>)</condition><block pos:start="109:27" pos:end="127:9">{<block_content pos:start="111:13" pos:end="125:13">

            <decl_stmt pos:start="111:13" pos:end="111:18"><decl pos:start="111:13" pos:end="111:17"><type pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:15">int</name></type> <name pos:start="111:17" pos:end="111:17">i</name></decl>;</decl_stmt>

            <decl_stmt pos:start="113:13" pos:end="113:65"><decl pos:start="113:13" pos:end="113:64"><type pos:start="113:13" pos:end="113:21"><specifier pos:start="113:13" pos:end="113:17">const</specifier> <name pos:start="113:19" pos:end="113:21">int</name></type> <name pos:start="113:23" pos:end="113:27">count</name><init pos:start="113:28" pos:end="113:64">= <expr pos:start="113:30" pos:end="113:64"><call pos:start="113:30" pos:end="113:64"><name pos:start="113:30" pos:end="113:34">FFMAX</name><argument_list pos:start="113:35" pos:end="113:64">(<argument pos:start="113:36" pos:end="113:54"><expr pos:start="113:36" pos:end="113:54"><name pos:start="113:36" pos:end="113:43">mbHeight</name> <operator pos:start="113:45" pos:end="113:45">*</operator> <name pos:start="113:47" pos:end="113:54">QPStride</name></expr></argument>, <argument pos:start="113:57" pos:end="113:63"><expr pos:start="113:57" pos:end="113:63"><name pos:start="113:57" pos:end="113:63">mbWidth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <for pos:start="115:13" pos:end="119:13">for<control pos:start="115:16" pos:end="115:39">(<init pos:start="115:17" pos:end="115:20"><expr pos:start="115:17" pos:end="115:19"><name pos:start="115:17" pos:end="115:17">i</name><operator pos:start="115:18" pos:end="115:18">=</operator><literal type="number" pos:start="115:19" pos:end="115:19">0</literal></expr>;</init> <condition pos:start="115:22" pos:end="115:34"><expr pos:start="115:22" pos:end="115:33"><name pos:start="115:22" pos:end="115:22">i</name><operator pos:start="115:23" pos:end="115:23">&lt;</operator><operator pos:start="115:24" pos:end="115:24">(</operator><name pos:start="115:25" pos:end="115:29">count</name><operator pos:start="115:30" pos:end="115:31">&gt;&gt;</operator><literal type="number" pos:start="115:32" pos:end="115:32">2</literal><operator pos:start="115:33" pos:end="115:33">)</operator></expr>;</condition> <incr pos:start="115:36" pos:end="115:38"><expr pos:start="115:36" pos:end="115:38"><name pos:start="115:36" pos:end="115:36">i</name><operator pos:start="115:37" pos:end="115:38">++</operator></expr></incr>)</control><block pos:start="115:40" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:93">

                <expr_stmt pos:start="117:17" pos:end="117:93"><expr pos:start="117:17" pos:end="117:92"><operator pos:start="117:17" pos:end="117:17">(</operator><operator pos:start="117:18" pos:end="117:18">(</operator><name pos:start="117:19" pos:end="117:26">uint32_t</name><operator pos:start="117:27" pos:end="117:27">*</operator><operator pos:start="117:28" pos:end="117:28">)</operator><name pos:start="117:29" pos:end="117:42"><name pos:start="117:29" pos:end="117:29">c</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:42">nonBQPTable</name></name><operator pos:start="117:43" pos:end="117:43">)</operator><index pos:start="117:44" pos:end="117:46">[<expr pos:start="117:45" pos:end="117:45"><name pos:start="117:45" pos:end="117:45">i</name></expr>]</index> <operator pos:start="117:48" pos:end="117:48">=</operator> <operator pos:start="117:50" pos:end="117:50">(</operator><operator pos:start="117:51" pos:end="117:51">(</operator><specifier pos:start="117:52" pos:end="117:56">const</specifier> <name pos:start="117:58" pos:end="117:65">uint32_t</name><operator pos:start="117:66" pos:end="117:66">*</operator><operator pos:start="117:67" pos:end="117:67">)</operator><name pos:start="117:68" pos:end="117:75">QP_store</name><operator pos:start="117:76" pos:end="117:76">)</operator><index pos:start="117:77" pos:end="117:79">[<expr pos:start="117:78" pos:end="117:78"><name pos:start="117:78" pos:end="117:78">i</name></expr>]</index> <operator pos:start="117:81" pos:end="117:81">&amp;</operator> <literal type="number" pos:start="117:83" pos:end="117:92">0x3F3F3F3F</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="121:13" pos:end="125:13">for<control pos:start="121:16" pos:end="121:36">(<init pos:start="121:17" pos:end="121:22"><expr pos:start="121:17" pos:end="121:21"><name pos:start="121:17" pos:end="121:17">i</name><operator pos:start="121:18" pos:end="121:20">&lt;&lt;=</operator><literal type="number" pos:start="121:21" pos:end="121:21">2</literal></expr>;</init> <condition pos:start="121:24" pos:end="121:31"><expr pos:start="121:24" pos:end="121:30"><name pos:start="121:24" pos:end="121:24">i</name><operator pos:start="121:25" pos:end="121:25">&lt;</operator><name pos:start="121:26" pos:end="121:30">count</name></expr>;</condition> <incr pos:start="121:33" pos:end="121:35"><expr pos:start="121:33" pos:end="121:35"><name pos:start="121:33" pos:end="121:33">i</name><operator pos:start="121:34" pos:end="121:35">++</operator></expr></incr>)</control><block pos:start="121:37" pos:end="125:13">{<block_content pos:start="123:17" pos:end="123:55">

                <expr_stmt pos:start="123:17" pos:end="123:55"><expr pos:start="123:17" pos:end="123:54"><name pos:start="123:17" pos:end="123:33"><name pos:start="123:17" pos:end="123:17">c</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:30">nonBQPTable</name><index pos:start="123:31" pos:end="123:33">[<expr pos:start="123:32" pos:end="123:32"><name pos:start="123:32" pos:end="123:32">i</name></expr>]</index></name> <operator pos:start="123:35" pos:end="123:35">=</operator> <name pos:start="123:37" pos:end="123:47"><name pos:start="123:37" pos:end="123:44">QP_store</name><index pos:start="123:45" pos:end="123:47">[<expr pos:start="123:46" pos:end="123:46"><name pos:start="123:46" pos:end="123:46">i</name></expr>]</index></name> <operator pos:start="123:49" pos:end="123:49">&amp;</operator> <literal type="number" pos:start="123:51" pos:end="123:54">0x3F</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="127:11" pos:end="141:9">else <block pos:start="127:16" pos:end="141:9">{<block_content pos:start="129:13" pos:end="139:13">

            <decl_stmt pos:start="129:13" pos:end="129:20"><decl pos:start="129:13" pos:end="129:17"><type pos:start="129:13" pos:end="129:15"><name pos:start="129:13" pos:end="129:15">int</name></type> <name pos:start="129:17" pos:end="129:17">i</name></decl>,<decl pos:start="129:19" pos:end="129:19"><type ref="prev" pos:start="129:13" pos:end="129:15"/><name pos:start="129:19" pos:end="129:19">j</name></decl>;</decl_stmt>

            <for pos:start="131:13" pos:end="139:13">for<control pos:start="131:16" pos:end="131:37">(<init pos:start="131:17" pos:end="131:20"><expr pos:start="131:17" pos:end="131:19"><name pos:start="131:17" pos:end="131:17">i</name><operator pos:start="131:18" pos:end="131:18">=</operator><literal type="number" pos:start="131:19" pos:end="131:19">0</literal></expr>;</init> <condition pos:start="131:22" pos:end="131:32"><expr pos:start="131:22" pos:end="131:31"><name pos:start="131:22" pos:end="131:22">i</name><operator pos:start="131:23" pos:end="131:23">&lt;</operator><name pos:start="131:24" pos:end="131:31">mbHeight</name></expr>;</condition> <incr pos:start="131:34" pos:end="131:36"><expr pos:start="131:34" pos:end="131:36"><name pos:start="131:34" pos:end="131:34">i</name><operator pos:start="131:35" pos:end="131:36">++</operator></expr></incr>)</control> <block pos:start="131:39" pos:end="139:13">{<block_content pos:start="133:17" pos:end="137:17">

                <for pos:start="133:17" pos:end="137:17">for<control pos:start="133:20" pos:end="133:44">(<init pos:start="133:21" pos:end="133:24"><expr pos:start="133:21" pos:end="133:23"><name pos:start="133:21" pos:end="133:21">j</name><operator pos:start="133:22" pos:end="133:22">=</operator><literal type="number" pos:start="133:23" pos:end="133:23">0</literal></expr>;</init> <condition pos:start="133:26" pos:end="133:39"><expr pos:start="133:26" pos:end="133:38"><name pos:start="133:26" pos:end="133:26">j</name><operator pos:start="133:27" pos:end="133:27">&lt;</operator><name pos:start="133:28" pos:end="133:38">absQPStride</name></expr>;</condition> <incr pos:start="133:41" pos:end="133:43"><expr pos:start="133:41" pos:end="133:43"><name pos:start="133:41" pos:end="133:41">j</name><operator pos:start="133:42" pos:end="133:43">++</operator></expr></incr>)</control> <block pos:start="133:46" pos:end="137:17">{<block_content pos:start="135:21" pos:end="135:84">

                    <expr_stmt pos:start="135:21" pos:end="135:84"><expr pos:start="135:21" pos:end="135:83"><name pos:start="135:21" pos:end="135:51"><name pos:start="135:21" pos:end="135:21">c</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:34">nonBQPTable</name><index pos:start="135:35" pos:end="135:51">[<expr pos:start="135:36" pos:end="135:50"><name pos:start="135:36" pos:end="135:36">i</name><operator pos:start="135:37" pos:end="135:37">*</operator><name pos:start="135:38" pos:end="135:48">absQPStride</name><operator pos:start="135:49" pos:end="135:49">+</operator><name pos:start="135:50" pos:end="135:50">j</name></expr>]</index></name> <operator pos:start="135:53" pos:end="135:53">=</operator> <name pos:start="135:55" pos:end="135:76"><name pos:start="135:55" pos:end="135:62">QP_store</name><index pos:start="135:63" pos:end="135:76">[<expr pos:start="135:64" pos:end="135:75"><name pos:start="135:64" pos:end="135:64">i</name><operator pos:start="135:65" pos:end="135:65">*</operator><name pos:start="135:66" pos:end="135:73">QPStride</name><operator pos:start="135:74" pos:end="135:74">+</operator><name pos:start="135:75" pos:end="135:75">j</name></expr>]</index></name> <operator pos:start="135:78" pos:end="135:78">&amp;</operator> <literal type="number" pos:start="135:80" pos:end="135:83">0x3F</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="147:5" pos:end="149:43"><expr pos:start="147:5" pos:end="149:42"><call pos:start="147:5" pos:end="149:42"><name pos:start="147:5" pos:end="147:10">av_log</name><argument_list pos:start="147:11" pos:end="149:42">(<argument pos:start="147:12" pos:end="147:12"><expr pos:start="147:12" pos:end="147:12"><name pos:start="147:12" pos:end="147:12">c</name></expr></argument>, <argument pos:start="147:15" pos:end="147:26"><expr pos:start="147:15" pos:end="147:26"><name pos:start="147:15" pos:end="147:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="147:29" pos:end="147:59"><expr pos:start="147:29" pos:end="147:59"><literal type="string" pos:start="147:29" pos:end="147:59">"using npp filters 0x%X/0x%X\n"</literal></expr></argument>,

           <argument pos:start="149:12" pos:end="149:24"><expr pos:start="149:12" pos:end="149:24"><name pos:start="149:12" pos:end="149:24"><name pos:start="149:12" pos:end="149:15">mode</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:24">lumMode</name></name></expr></argument>, <argument pos:start="149:27" pos:end="149:41"><expr pos:start="149:27" pos:end="149:41"><name pos:start="149:27" pos:end="149:41"><name pos:start="149:27" pos:end="149:30">mode</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:41">chromMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="153:5" pos:end="155:63"><expr pos:start="153:5" pos:end="155:62"><call pos:start="153:5" pos:end="155:62"><name pos:start="153:5" pos:end="153:15">postProcess</name><argument_list pos:start="153:16" pos:end="155:62">(<argument pos:start="153:17" pos:end="153:22"><expr pos:start="153:17" pos:end="153:22"><name pos:start="153:17" pos:end="153:22"><name pos:start="153:17" pos:end="153:19">src</name><index pos:start="153:20" pos:end="153:22">[<expr pos:start="153:21" pos:end="153:21"><literal type="number" pos:start="153:21" pos:end="153:21">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:25" pos:end="153:36"><expr pos:start="153:25" pos:end="153:36"><name pos:start="153:25" pos:end="153:36"><name pos:start="153:25" pos:end="153:33">srcStride</name><index pos:start="153:34" pos:end="153:36">[<expr pos:start="153:35" pos:end="153:35"><literal type="number" pos:start="153:35" pos:end="153:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:39" pos:end="153:44"><expr pos:start="153:39" pos:end="153:44"><name pos:start="153:39" pos:end="153:44"><name pos:start="153:39" pos:end="153:41">dst</name><index pos:start="153:42" pos:end="153:44">[<expr pos:start="153:43" pos:end="153:43"><literal type="number" pos:start="153:43" pos:end="153:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:47" pos:end="153:58"><expr pos:start="153:47" pos:end="153:58"><name pos:start="153:47" pos:end="153:58"><name pos:start="153:47" pos:end="153:55">dstStride</name><index pos:start="153:56" pos:end="153:58">[<expr pos:start="153:57" pos:end="153:57"><literal type="number" pos:start="153:57" pos:end="153:57">0</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="155:17" pos:end="155:21"><expr pos:start="155:17" pos:end="155:21"><name pos:start="155:17" pos:end="155:21">width</name></expr></argument>, <argument pos:start="155:24" pos:end="155:29"><expr pos:start="155:24" pos:end="155:29"><name pos:start="155:24" pos:end="155:29">height</name></expr></argument>, <argument pos:start="155:32" pos:end="155:39"><expr pos:start="155:32" pos:end="155:39"><name pos:start="155:32" pos:end="155:39">QP_store</name></expr></argument>, <argument pos:start="155:42" pos:end="155:49"><expr pos:start="155:42" pos:end="155:49"><name pos:start="155:42" pos:end="155:49">QPStride</name></expr></argument>, <argument pos:start="155:52" pos:end="155:52"><expr pos:start="155:52" pos:end="155:52"><literal type="number" pos:start="155:52" pos:end="155:52">0</literal></expr></argument>, <argument pos:start="155:55" pos:end="155:58"><expr pos:start="155:55" pos:end="155:58"><name pos:start="155:55" pos:end="155:58">mode</name></expr></argument>, <argument pos:start="155:61" pos:end="155:61"><expr pos:start="155:61" pos:end="155:61"><name pos:start="155:61" pos:end="155:61">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="159:5" pos:end="161:15"><if pos:start="159:5" pos:end="161:15">if <condition pos:start="159:8" pos:end="159:48">(<expr pos:start="159:9" pos:end="159:47"><operator pos:start="159:9" pos:end="159:9">!</operator><operator pos:start="159:10" pos:end="159:10">(</operator><name pos:start="159:11" pos:end="159:16"><name pos:start="159:11" pos:end="159:13">src</name><index pos:start="159:14" pos:end="159:16">[<expr pos:start="159:15" pos:end="159:15"><literal type="number" pos:start="159:15" pos:end="159:15">1</literal></expr>]</index></name> <operator pos:start="159:18" pos:end="159:19">&amp;&amp;</operator> <name pos:start="159:21" pos:end="159:26"><name pos:start="159:21" pos:end="159:23">src</name><index pos:start="159:24" pos:end="159:26">[<expr pos:start="159:25" pos:end="159:25"><literal type="number" pos:start="159:25" pos:end="159:25">2</literal></expr>]</index></name> <operator pos:start="159:28" pos:end="159:29">&amp;&amp;</operator> <name pos:start="159:31" pos:end="159:36"><name pos:start="159:31" pos:end="159:33">dst</name><index pos:start="159:34" pos:end="159:36">[<expr pos:start="159:35" pos:end="159:35"><literal type="number" pos:start="159:35" pos:end="159:35">1</literal></expr>]</index></name> <operator pos:start="159:38" pos:end="159:39">&amp;&amp;</operator> <name pos:start="159:41" pos:end="159:46"><name pos:start="159:41" pos:end="159:43">dst</name><index pos:start="159:44" pos:end="159:46">[<expr pos:start="159:45" pos:end="159:45"><literal type="number" pos:start="159:45" pos:end="159:45">2</literal></expr>]</index></name><operator pos:start="159:47" pos:end="159:47">)</operator></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:15"><block_content pos:start="161:9" pos:end="161:15">

        <return pos:start="161:9" pos:end="161:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:43"><expr pos:start="165:5" pos:end="165:42"><name pos:start="165:5" pos:end="165:9">width</name>  <operator pos:start="165:12" pos:end="165:12">=</operator> <operator pos:start="165:14" pos:end="165:14">(</operator><name pos:start="165:15" pos:end="165:19">width</name> <operator pos:start="165:21" pos:end="165:21">)</operator><operator pos:start="165:22" pos:end="165:23">&gt;&gt;</operator><name pos:start="165:24" pos:end="165:42"><name pos:start="165:24" pos:end="165:24">c</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:42">hChromaSubSample</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:43"><expr pos:start="167:5" pos:end="167:42"><name pos:start="167:5" pos:end="167:10">height</name> <operator pos:start="167:12" pos:end="167:12">=</operator> <operator pos:start="167:14" pos:end="167:14">(</operator><name pos:start="167:15" pos:end="167:20">height</name><operator pos:start="167:21" pos:end="167:21">)</operator><operator pos:start="167:22" pos:end="167:23">&gt;&gt;</operator><name pos:start="167:24" pos:end="167:42"><name pos:start="167:24" pos:end="167:24">c</name><operator pos:start="167:25" pos:end="167:26">-&gt;</operator><name pos:start="167:27" pos:end="167:42">vChromaSubSample</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="171:5" pos:end="201:5"><if pos:start="171:5" pos:end="181:5">if<condition pos:start="171:7" pos:end="171:23">(<expr pos:start="171:8" pos:end="171:22"><name pos:start="171:8" pos:end="171:22"><name pos:start="171:8" pos:end="171:11">mode</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:22">chromMode</name></name></expr>)</condition><block pos:start="171:24" pos:end="181:5">{<block_content pos:start="173:9" pos:end="179:67">

        <expr_stmt pos:start="173:9" pos:end="175:67"><expr pos:start="173:9" pos:end="175:66"><call pos:start="173:9" pos:end="175:66"><name pos:start="173:9" pos:end="173:19">postProcess</name><argument_list pos:start="173:20" pos:end="175:66">(<argument pos:start="173:21" pos:end="173:26"><expr pos:start="173:21" pos:end="173:26"><name pos:start="173:21" pos:end="173:26"><name pos:start="173:21" pos:end="173:23">src</name><index pos:start="173:24" pos:end="173:26">[<expr pos:start="173:25" pos:end="173:25"><literal type="number" pos:start="173:25" pos:end="173:25">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:29" pos:end="173:40"><expr pos:start="173:29" pos:end="173:40"><name pos:start="173:29" pos:end="173:40"><name pos:start="173:29" pos:end="173:37">srcStride</name><index pos:start="173:38" pos:end="173:40">[<expr pos:start="173:39" pos:end="173:39"><literal type="number" pos:start="173:39" pos:end="173:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:43" pos:end="173:48"><expr pos:start="173:43" pos:end="173:48"><name pos:start="173:43" pos:end="173:48"><name pos:start="173:43" pos:end="173:45">dst</name><index pos:start="173:46" pos:end="173:48">[<expr pos:start="173:47" pos:end="173:47"><literal type="number" pos:start="173:47" pos:end="173:47">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:51" pos:end="173:62"><expr pos:start="173:51" pos:end="173:62"><name pos:start="173:51" pos:end="173:62"><name pos:start="173:51" pos:end="173:59">dstStride</name><index pos:start="173:60" pos:end="173:62">[<expr pos:start="173:61" pos:end="173:61"><literal type="number" pos:start="173:61" pos:end="173:61">1</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="175:21" pos:end="175:25"><expr pos:start="175:21" pos:end="175:25"><name pos:start="175:21" pos:end="175:25">width</name></expr></argument>, <argument pos:start="175:28" pos:end="175:33"><expr pos:start="175:28" pos:end="175:33"><name pos:start="175:28" pos:end="175:33">height</name></expr></argument>, <argument pos:start="175:36" pos:end="175:43"><expr pos:start="175:36" pos:end="175:43"><name pos:start="175:36" pos:end="175:43">QP_store</name></expr></argument>, <argument pos:start="175:46" pos:end="175:53"><expr pos:start="175:46" pos:end="175:53"><name pos:start="175:46" pos:end="175:53">QPStride</name></expr></argument>, <argument pos:start="175:56" pos:end="175:56"><expr pos:start="175:56" pos:end="175:56"><literal type="number" pos:start="175:56" pos:end="175:56">1</literal></expr></argument>, <argument pos:start="175:59" pos:end="175:62"><expr pos:start="175:59" pos:end="175:62"><name pos:start="175:59" pos:end="175:62">mode</name></expr></argument>, <argument pos:start="175:65" pos:end="175:65"><expr pos:start="175:65" pos:end="175:65"><name pos:start="175:65" pos:end="175:65">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="179:67"><expr pos:start="177:9" pos:end="179:66"><call pos:start="177:9" pos:end="179:66"><name pos:start="177:9" pos:end="177:19">postProcess</name><argument_list pos:start="177:20" pos:end="179:66">(<argument pos:start="177:21" pos:end="177:26"><expr pos:start="177:21" pos:end="177:26"><name pos:start="177:21" pos:end="177:26"><name pos:start="177:21" pos:end="177:23">src</name><index pos:start="177:24" pos:end="177:26">[<expr pos:start="177:25" pos:end="177:25"><literal type="number" pos:start="177:25" pos:end="177:25">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="177:29" pos:end="177:40"><expr pos:start="177:29" pos:end="177:40"><name pos:start="177:29" pos:end="177:40"><name pos:start="177:29" pos:end="177:37">srcStride</name><index pos:start="177:38" pos:end="177:40">[<expr pos:start="177:39" pos:end="177:39"><literal type="number" pos:start="177:39" pos:end="177:39">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="177:43" pos:end="177:48"><expr pos:start="177:43" pos:end="177:48"><name pos:start="177:43" pos:end="177:48"><name pos:start="177:43" pos:end="177:45">dst</name><index pos:start="177:46" pos:end="177:48">[<expr pos:start="177:47" pos:end="177:47"><literal type="number" pos:start="177:47" pos:end="177:47">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="177:51" pos:end="177:62"><expr pos:start="177:51" pos:end="177:62"><name pos:start="177:51" pos:end="177:62"><name pos:start="177:51" pos:end="177:59">dstStride</name><index pos:start="177:60" pos:end="177:62">[<expr pos:start="177:61" pos:end="177:61"><literal type="number" pos:start="177:61" pos:end="177:61">2</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="179:21" pos:end="179:25"><expr pos:start="179:21" pos:end="179:25"><name pos:start="179:21" pos:end="179:25">width</name></expr></argument>, <argument pos:start="179:28" pos:end="179:33"><expr pos:start="179:28" pos:end="179:33"><name pos:start="179:28" pos:end="179:33">height</name></expr></argument>, <argument pos:start="179:36" pos:end="179:43"><expr pos:start="179:36" pos:end="179:43"><name pos:start="179:36" pos:end="179:43">QP_store</name></expr></argument>, <argument pos:start="179:46" pos:end="179:53"><expr pos:start="179:46" pos:end="179:53"><name pos:start="179:46" pos:end="179:53">QPStride</name></expr></argument>, <argument pos:start="179:56" pos:end="179:56"><expr pos:start="179:56" pos:end="179:56"><literal type="number" pos:start="179:56" pos:end="179:56">2</literal></expr></argument>, <argument pos:start="179:59" pos:end="179:62"><expr pos:start="179:59" pos:end="179:62"><name pos:start="179:59" pos:end="179:62">mode</name></expr></argument>, <argument pos:start="179:65" pos:end="179:65"><expr pos:start="179:65" pos:end="179:65"><name pos:start="179:65" pos:end="179:65">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if>

    <if type="elseif" pos:start="183:5" pos:end="189:5">else if<condition pos:start="183:12" pos:end="183:73">(<expr pos:start="183:13" pos:end="183:72"><name pos:start="183:13" pos:end="183:24"><name pos:start="183:13" pos:end="183:21">srcStride</name><index pos:start="183:22" pos:end="183:24">[<expr pos:start="183:23" pos:end="183:23"><literal type="number" pos:start="183:23" pos:end="183:23">1</literal></expr>]</index></name> <operator pos:start="183:26" pos:end="183:27">==</operator> <name pos:start="183:29" pos:end="183:40"><name pos:start="183:29" pos:end="183:37">dstStride</name><index pos:start="183:38" pos:end="183:40">[<expr pos:start="183:39" pos:end="183:39"><literal type="number" pos:start="183:39" pos:end="183:39">1</literal></expr>]</index></name> <operator pos:start="183:42" pos:end="183:43">&amp;&amp;</operator> <name pos:start="183:45" pos:end="183:56"><name pos:start="183:45" pos:end="183:53">srcStride</name><index pos:start="183:54" pos:end="183:56">[<expr pos:start="183:55" pos:end="183:55"><literal type="number" pos:start="183:55" pos:end="183:55">2</literal></expr>]</index></name> <operator pos:start="183:58" pos:end="183:59">==</operator> <name pos:start="183:61" pos:end="183:72"><name pos:start="183:61" pos:end="183:69">dstStride</name><index pos:start="183:70" pos:end="183:72">[<expr pos:start="183:71" pos:end="183:71"><literal type="number" pos:start="183:71" pos:end="183:71">2</literal></expr>]</index></name></expr>)</condition><block pos:start="183:74" pos:end="189:5">{<block_content pos:start="185:9" pos:end="187:54">

        <expr_stmt pos:start="185:9" pos:end="185:54"><expr pos:start="185:9" pos:end="185:53"><call pos:start="185:9" pos:end="185:53"><name pos:start="185:9" pos:end="185:15">linecpy</name><argument_list pos:start="185:16" pos:end="185:53">(<argument pos:start="185:17" pos:end="185:22"><expr pos:start="185:17" pos:end="185:22"><name pos:start="185:17" pos:end="185:22"><name pos:start="185:17" pos:end="185:19">dst</name><index pos:start="185:20" pos:end="185:22">[<expr pos:start="185:21" pos:end="185:21"><literal type="number" pos:start="185:21" pos:end="185:21">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="185:25" pos:end="185:30"><expr pos:start="185:25" pos:end="185:30"><name pos:start="185:25" pos:end="185:30"><name pos:start="185:25" pos:end="185:27">src</name><index pos:start="185:28" pos:end="185:30">[<expr pos:start="185:29" pos:end="185:29"><literal type="number" pos:start="185:29" pos:end="185:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="185:33" pos:end="185:38"><expr pos:start="185:33" pos:end="185:38"><name pos:start="185:33" pos:end="185:38">height</name></expr></argument>, <argument pos:start="185:41" pos:end="185:52"><expr pos:start="185:41" pos:end="185:52"><name pos:start="185:41" pos:end="185:52"><name pos:start="185:41" pos:end="185:49">srcStride</name><index pos:start="185:50" pos:end="185:52">[<expr pos:start="185:51" pos:end="185:51"><literal type="number" pos:start="185:51" pos:end="185:51">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:54"><expr pos:start="187:9" pos:end="187:53"><call pos:start="187:9" pos:end="187:53"><name pos:start="187:9" pos:end="187:15">linecpy</name><argument_list pos:start="187:16" pos:end="187:53">(<argument pos:start="187:17" pos:end="187:22"><expr pos:start="187:17" pos:end="187:22"><name pos:start="187:17" pos:end="187:22"><name pos:start="187:17" pos:end="187:19">dst</name><index pos:start="187:20" pos:end="187:22">[<expr pos:start="187:21" pos:end="187:21"><literal type="number" pos:start="187:21" pos:end="187:21">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="187:25" pos:end="187:30"><expr pos:start="187:25" pos:end="187:30"><name pos:start="187:25" pos:end="187:30"><name pos:start="187:25" pos:end="187:27">src</name><index pos:start="187:28" pos:end="187:30">[<expr pos:start="187:29" pos:end="187:29"><literal type="number" pos:start="187:29" pos:end="187:29">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="187:33" pos:end="187:38"><expr pos:start="187:33" pos:end="187:38"><name pos:start="187:33" pos:end="187:38">height</name></expr></argument>, <argument pos:start="187:41" pos:end="187:52"><expr pos:start="187:41" pos:end="187:52"><name pos:start="187:41" pos:end="187:52"><name pos:start="187:41" pos:end="187:49">srcStride</name><index pos:start="187:50" pos:end="187:52">[<expr pos:start="187:51" pos:end="187:51"><literal type="number" pos:start="187:51" pos:end="187:51">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="189:6" pos:end="201:5">else<block pos:start="189:10" pos:end="201:5">{<block_content pos:start="191:9" pos:end="199:9">

        <decl_stmt pos:start="191:9" pos:end="191:14"><decl pos:start="191:9" pos:end="191:13"><type pos:start="191:9" pos:end="191:11"><name pos:start="191:9" pos:end="191:11">int</name></type> <name pos:start="191:13" pos:end="191:13">y</name></decl>;</decl_stmt>

        <for pos:start="193:9" pos:end="199:9">for<control pos:start="193:12" pos:end="193:31">(<init pos:start="193:13" pos:end="193:16"><expr pos:start="193:13" pos:end="193:15"><name pos:start="193:13" pos:end="193:13">y</name><operator pos:start="193:14" pos:end="193:14">=</operator><literal type="number" pos:start="193:15" pos:end="193:15">0</literal></expr>;</init> <condition pos:start="193:18" pos:end="193:26"><expr pos:start="193:18" pos:end="193:25"><name pos:start="193:18" pos:end="193:18">y</name><operator pos:start="193:19" pos:end="193:19">&lt;</operator><name pos:start="193:20" pos:end="193:25">height</name></expr>;</condition> <incr pos:start="193:28" pos:end="193:30"><expr pos:start="193:28" pos:end="193:30"><name pos:start="193:28" pos:end="193:28">y</name><operator pos:start="193:29" pos:end="193:30">++</operator></expr></incr>)</control><block pos:start="193:32" pos:end="199:9">{<block_content pos:start="195:13" pos:end="197:80">

            <expr_stmt pos:start="195:13" pos:end="195:80"><expr pos:start="195:13" pos:end="195:79"><call pos:start="195:13" pos:end="195:79"><name pos:start="195:13" pos:end="195:18">memcpy</name><argument_list pos:start="195:19" pos:end="195:79">(<argument pos:start="195:20" pos:end="195:44"><expr pos:start="195:20" pos:end="195:44"><operator pos:start="195:20" pos:end="195:20">&amp;</operator><operator pos:start="195:21" pos:end="195:21">(</operator><name pos:start="195:22" pos:end="195:43"><name pos:start="195:22" pos:end="195:24">dst</name><index pos:start="195:25" pos:end="195:27">[<expr pos:start="195:26" pos:end="195:26"><literal type="number" pos:start="195:26" pos:end="195:26">1</literal></expr>]</index><index pos:start="195:28" pos:end="195:43">[<expr pos:start="195:29" pos:end="195:42"><name pos:start="195:29" pos:end="195:29">y</name><operator pos:start="195:30" pos:end="195:30">*</operator><name pos:start="195:31" pos:end="195:42"><name pos:start="195:31" pos:end="195:39">dstStride</name><index pos:start="195:40" pos:end="195:42">[<expr pos:start="195:41" pos:end="195:41"><literal type="number" pos:start="195:41" pos:end="195:41">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="195:44" pos:end="195:44">)</operator></expr></argument>, <argument pos:start="195:47" pos:end="195:71"><expr pos:start="195:47" pos:end="195:71"><operator pos:start="195:47" pos:end="195:47">&amp;</operator><operator pos:start="195:48" pos:end="195:48">(</operator><name pos:start="195:49" pos:end="195:70"><name pos:start="195:49" pos:end="195:51">src</name><index pos:start="195:52" pos:end="195:54">[<expr pos:start="195:53" pos:end="195:53"><literal type="number" pos:start="195:53" pos:end="195:53">1</literal></expr>]</index><index pos:start="195:55" pos:end="195:70">[<expr pos:start="195:56" pos:end="195:69"><name pos:start="195:56" pos:end="195:56">y</name><operator pos:start="195:57" pos:end="195:57">*</operator><name pos:start="195:58" pos:end="195:69"><name pos:start="195:58" pos:end="195:66">srcStride</name><index pos:start="195:67" pos:end="195:69">[<expr pos:start="195:68" pos:end="195:68"><literal type="number" pos:start="195:68" pos:end="195:68">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="195:71" pos:end="195:71">)</operator></expr></argument>, <argument pos:start="195:74" pos:end="195:78"><expr pos:start="195:74" pos:end="195:78"><name pos:start="195:74" pos:end="195:78">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:80"><expr pos:start="197:13" pos:end="197:79"><call pos:start="197:13" pos:end="197:79"><name pos:start="197:13" pos:end="197:18">memcpy</name><argument_list pos:start="197:19" pos:end="197:79">(<argument pos:start="197:20" pos:end="197:44"><expr pos:start="197:20" pos:end="197:44"><operator pos:start="197:20" pos:end="197:20">&amp;</operator><operator pos:start="197:21" pos:end="197:21">(</operator><name pos:start="197:22" pos:end="197:43"><name pos:start="197:22" pos:end="197:24">dst</name><index pos:start="197:25" pos:end="197:27">[<expr pos:start="197:26" pos:end="197:26"><literal type="number" pos:start="197:26" pos:end="197:26">2</literal></expr>]</index><index pos:start="197:28" pos:end="197:43">[<expr pos:start="197:29" pos:end="197:42"><name pos:start="197:29" pos:end="197:29">y</name><operator pos:start="197:30" pos:end="197:30">*</operator><name pos:start="197:31" pos:end="197:42"><name pos:start="197:31" pos:end="197:39">dstStride</name><index pos:start="197:40" pos:end="197:42">[<expr pos:start="197:41" pos:end="197:41"><literal type="number" pos:start="197:41" pos:end="197:41">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="197:44" pos:end="197:44">)</operator></expr></argument>, <argument pos:start="197:47" pos:end="197:71"><expr pos:start="197:47" pos:end="197:71"><operator pos:start="197:47" pos:end="197:47">&amp;</operator><operator pos:start="197:48" pos:end="197:48">(</operator><name pos:start="197:49" pos:end="197:70"><name pos:start="197:49" pos:end="197:51">src</name><index pos:start="197:52" pos:end="197:54">[<expr pos:start="197:53" pos:end="197:53"><literal type="number" pos:start="197:53" pos:end="197:53">2</literal></expr>]</index><index pos:start="197:55" pos:end="197:70">[<expr pos:start="197:56" pos:end="197:69"><name pos:start="197:56" pos:end="197:56">y</name><operator pos:start="197:57" pos:end="197:57">*</operator><name pos:start="197:58" pos:end="197:69"><name pos:start="197:58" pos:end="197:66">srcStride</name><index pos:start="197:67" pos:end="197:69">[<expr pos:start="197:68" pos:end="197:68"><literal type="number" pos:start="197:68" pos:end="197:68">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="197:71" pos:end="197:71">)</operator></expr></argument>, <argument pos:start="197:74" pos:end="197:78"><expr pos:start="197:74" pos:end="197:78"><name pos:start="197:74" pos:end="197:78">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
