<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24394.c" pos:tabs="8"><function pos:start="1:1" pos:end="291:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">put_system_header</name><parameter_list pos:start="1:29" pos:end="1:87">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:58">uint8_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">buf</name></decl></parameter>,<parameter pos:start="1:65" pos:end="1:86"><decl pos:start="1:65" pos:end="1:86"><type pos:start="1:65" pos:end="1:86"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:86">only_for_stream_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="291:1">{<block_content pos:start="5:5" pos:end="289:16">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegMuxContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:38">= <expr pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:27">ctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">size</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">i</name></decl>, <decl pos:start="7:18" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:37">private_stream_coded</name></decl>, <decl pos:start="7:40" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:40" pos:end="7:41">id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">PutBitContext</name></type> <name pos:start="9:19" pos:end="9:20">pb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><call pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:17">init_put_bits</name><argument_list pos:start="13:18" pos:end="13:32">(<argument pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><operator pos:start="13:19" pos:end="13:19">&amp;</operator><name pos:start="13:20" pos:end="13:21">pb</name></expr></argument>, <argument pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><name pos:start="13:24" pos:end="13:26">buf</name></expr></argument>, <argument pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><literal type="number" pos:start="13:29" pos:end="13:31">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><call pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:12">put_bits</name><argument_list pos:start="17:13" pos:end="17:47">(<argument pos:start="17:14" pos:end="17:16"><expr pos:start="17:14" pos:end="17:16"><operator pos:start="17:14" pos:end="17:14">&amp;</operator><name pos:start="17:15" pos:end="17:16">pb</name></expr></argument>, <argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><literal type="number" pos:start="17:19" pos:end="17:20">32</literal></expr></argument>, <argument pos:start="17:23" pos:end="17:46"><expr pos:start="17:23" pos:end="17:46"><name pos:start="17:23" pos:end="17:46">SYSTEM_HEADER_START_CODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><call pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:12">put_bits</name><argument_list pos:start="19:13" pos:end="19:24">(<argument pos:start="19:14" pos:end="19:16"><expr pos:start="19:14" pos:end="19:16"><operator pos:start="19:14" pos:end="19:14">&amp;</operator><name pos:start="19:15" pos:end="19:16">pb</name></expr></argument>, <argument pos:start="19:19" pos:end="19:20"><expr pos:start="19:19" pos:end="19:20"><literal type="number" pos:start="19:19" pos:end="19:20">16</literal></expr></argument>, <argument pos:start="19:23" pos:end="19:23"><expr pos:start="19:23" pos:end="19:23"><literal type="number" pos:start="19:23" pos:end="19:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><call pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:12">put_bits</name><argument_list pos:start="21:13" pos:end="21:23">(<argument pos:start="21:14" pos:end="21:16"><expr pos:start="21:14" pos:end="21:16"><operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:16">pb</name></expr></argument>, <argument pos:start="21:19" pos:end="21:19"><expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">1</literal></expr></argument>, <argument pos:start="21:22" pos:end="21:22"><expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><call pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:12">put_bits</name><argument_list pos:start="25:13" pos:end="25:34">(<argument pos:start="25:14" pos:end="25:16"><expr pos:start="25:14" pos:end="25:16"><operator pos:start="25:14" pos:end="25:14">&amp;</operator><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>, <argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><literal type="number" pos:start="25:19" pos:end="25:20">22</literal></expr></argument>, <argument pos:start="25:23" pos:end="25:33"><expr pos:start="25:23" pos:end="25:33"><name pos:start="25:23" pos:end="25:33"><name pos:start="25:23" pos:end="25:23">s</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:33">mux_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:37" pos:end="25:84">/* maximum bit rate of the multiplexed stream */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><call pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:12">put_bits</name><argument_list pos:start="27:13" pos:end="27:23">(<argument pos:start="27:14" pos:end="27:16"><expr pos:start="27:14" pos:end="27:16"><operator pos:start="27:14" pos:end="27:14">&amp;</operator><name pos:start="27:15" pos:end="27:16">pb</name></expr></argument>, <argument pos:start="27:19" pos:end="27:19"><expr pos:start="27:19" pos:end="27:19"><literal type="number" pos:start="27:19" pos:end="27:19">1</literal></expr></argument>, <argument pos:start="27:22" pos:end="27:22"><expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:26" pos:end="27:37">/* marker */</comment>

    <if_stmt pos:start="29:5" pos:end="37:41"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:50">(<expr pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:17">is_vcd</name></name> <operator pos:start="29:19" pos:end="29:20">&amp;&amp;</operator> <name pos:start="29:22" pos:end="29:39">only_for_stream_id</name><operator pos:start="29:40" pos:end="29:41">==</operator><name pos:start="29:42" pos:end="29:49">VIDEO_ID</name></expr>)</condition> <block pos:start="29:52" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:28">

        <comment type="block" pos:start="31:9" pos:end="31:84">/* This header applies only to the video stream (see VCD standard p. IV-7)*/</comment>

        <expr_stmt pos:start="33:9" pos:end="33:28"><expr pos:start="33:9" pos:end="33:27"><call pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:16">put_bits</name><argument_list pos:start="33:17" pos:end="33:27">(<argument pos:start="33:18" pos:end="33:20"><expr pos:start="33:18" pos:end="33:20"><operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:20">pb</name></expr></argument>, <argument pos:start="33:23" pos:end="33:23"><expr pos:start="33:23" pos:end="33:23"><literal type="number" pos:start="33:23" pos:end="33:23">6</literal></expr></argument>, <argument pos:start="33:26" pos:end="33:26"><expr pos:start="33:26" pos:end="33:26"><literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="37:41">else<block type="pseudo" pos:start="37:9" pos:end="37:41"><block_content pos:start="37:9" pos:end="37:41">

        <expr_stmt pos:start="37:9" pos:end="37:41"><expr pos:start="37:9" pos:end="37:40"><call pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:16">put_bits</name><argument_list pos:start="37:17" pos:end="37:40">(<argument pos:start="37:18" pos:end="37:20"><expr pos:start="37:18" pos:end="37:20"><operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:20">pb</name></expr></argument>, <argument pos:start="37:23" pos:end="37:23"><expr pos:start="37:23" pos:end="37:23"><literal type="number" pos:start="37:23" pos:end="37:23">6</literal></expr></argument>, <argument pos:start="37:26" pos:end="37:39"><expr pos:start="37:26" pos:end="37:39"><name pos:start="37:26" pos:end="37:39"><name pos:start="37:26" pos:end="37:26">s</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:39">audio_bound</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="41:5" pos:end="55:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:18">(<expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:17">is_vcd</name></name></expr>)</condition> <block pos:start="41:20" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:28">

        <comment type="block" pos:start="43:9" pos:end="43:38">/* see VCD standard, p. IV-7*/</comment>

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><call pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:16">put_bits</name><argument_list pos:start="45:17" pos:end="45:27">(<argument pos:start="45:18" pos:end="45:20"><expr pos:start="45:18" pos:end="45:20"><operator pos:start="45:18" pos:end="45:18">&amp;</operator><name pos:start="45:19" pos:end="45:20">pb</name></expr></argument>, <argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">1</literal></expr></argument>, <argument pos:start="45:26" pos:end="45:26"><expr pos:start="45:26" pos:end="45:26"><literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:28"><expr pos:start="47:9" pos:end="47:27"><call pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:16">put_bits</name><argument_list pos:start="47:17" pos:end="47:27">(<argument pos:start="47:18" pos:end="47:20"><expr pos:start="47:18" pos:end="47:20"><operator pos:start="47:18" pos:end="47:18">&amp;</operator><name pos:start="47:19" pos:end="47:20">pb</name></expr></argument>, <argument pos:start="47:23" pos:end="47:23"><expr pos:start="47:23" pos:end="47:23"><literal type="number" pos:start="47:23" pos:end="47:23">1</literal></expr></argument>, <argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="55:5">else <block pos:start="49:12" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:28">

        <expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><call pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:16">put_bits</name><argument_list pos:start="51:17" pos:end="51:27">(<argument pos:start="51:18" pos:end="51:20"><expr pos:start="51:18" pos:end="51:20"><operator pos:start="51:18" pos:end="51:18">&amp;</operator><name pos:start="51:19" pos:end="51:20">pb</name></expr></argument>, <argument pos:start="51:23" pos:end="51:23"><expr pos:start="51:23" pos:end="51:23"><literal type="number" pos:start="51:23" pos:end="51:23">1</literal></expr></argument>, <argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:30" pos:end="51:50">/* variable bitrate*/</comment>

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><call pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:16">put_bits</name><argument_list pos:start="53:17" pos:end="53:27">(<argument pos:start="53:18" pos:end="53:20"><expr pos:start="53:18" pos:end="53:20"><operator pos:start="53:18" pos:end="53:18">&amp;</operator><name pos:start="53:19" pos:end="53:20">pb</name></expr></argument>, <argument pos:start="53:23" pos:end="53:23"><expr pos:start="53:23" pos:end="53:23"><literal type="number" pos:start="53:23" pos:end="53:23">1</literal></expr></argument>, <argument pos:start="53:26" pos:end="53:26"><expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="53:30" pos:end="53:62">/* non constrainted bit stream */</comment>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="59:5" pos:end="73:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:31">(<expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:17">is_vcd</name></name> <operator pos:start="59:19" pos:end="59:20">||</operator> <name pos:start="59:22" pos:end="59:30"><name pos:start="59:22" pos:end="59:22">s</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:30">is_dvd</name></name></expr>)</condition> <block pos:start="59:33" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:28">

        <comment type="block" pos:start="61:9" pos:end="61:37">/* see VCD standard p IV-7 */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:28"><expr pos:start="63:9" pos:end="63:27"><call pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:16">put_bits</name><argument_list pos:start="63:17" pos:end="63:27">(<argument pos:start="63:18" pos:end="63:20"><expr pos:start="63:18" pos:end="63:20"><operator pos:start="63:18" pos:end="63:18">&amp;</operator><name pos:start="63:19" pos:end="63:20">pb</name></expr></argument>, <argument pos:start="63:23" pos:end="63:23"><expr pos:start="63:23" pos:end="63:23"><literal type="number" pos:start="63:23" pos:end="63:23">1</literal></expr></argument>, <argument pos:start="63:26" pos:end="63:26"><expr pos:start="63:26" pos:end="63:26"><literal type="number" pos:start="63:26" pos:end="63:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="63:30" pos:end="63:47">/* audio locked */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:28"><expr pos:start="65:9" pos:end="65:27"><call pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:16">put_bits</name><argument_list pos:start="65:17" pos:end="65:27">(<argument pos:start="65:18" pos:end="65:20"><expr pos:start="65:18" pos:end="65:20"><operator pos:start="65:18" pos:end="65:18">&amp;</operator><name pos:start="65:19" pos:end="65:20">pb</name></expr></argument>, <argument pos:start="65:23" pos:end="65:23"><expr pos:start="65:23" pos:end="65:23"><literal type="number" pos:start="65:23" pos:end="65:23">1</literal></expr></argument>, <argument pos:start="65:26" pos:end="65:26"><expr pos:start="65:26" pos:end="65:26"><literal type="number" pos:start="65:26" pos:end="65:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:30" pos:end="65:47">/* video locked */</comment>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="73:5">else <block pos:start="67:12" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:28">

        <expr_stmt pos:start="69:9" pos:end="69:28"><expr pos:start="69:9" pos:end="69:27"><call pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:16">put_bits</name><argument_list pos:start="69:17" pos:end="69:27">(<argument pos:start="69:18" pos:end="69:20"><expr pos:start="69:18" pos:end="69:20"><operator pos:start="69:18" pos:end="69:18">&amp;</operator><name pos:start="69:19" pos:end="69:20">pb</name></expr></argument>, <argument pos:start="69:23" pos:end="69:23"><expr pos:start="69:23" pos:end="69:23"><literal type="number" pos:start="69:23" pos:end="69:23">1</literal></expr></argument>, <argument pos:start="69:26" pos:end="69:26"><expr pos:start="69:26" pos:end="69:26"><literal type="number" pos:start="69:26" pos:end="69:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="69:30" pos:end="69:47">/* audio locked */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:28"><expr pos:start="71:9" pos:end="71:27"><call pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:16">put_bits</name><argument_list pos:start="71:17" pos:end="71:27">(<argument pos:start="71:18" pos:end="71:20"><expr pos:start="71:18" pos:end="71:20"><operator pos:start="71:18" pos:end="71:18">&amp;</operator><name pos:start="71:19" pos:end="71:20">pb</name></expr></argument>, <argument pos:start="71:23" pos:end="71:23"><expr pos:start="71:23" pos:end="71:23"><literal type="number" pos:start="71:23" pos:end="71:23">1</literal></expr></argument>, <argument pos:start="71:26" pos:end="71:26"><expr pos:start="71:26" pos:end="71:26"><literal type="number" pos:start="71:26" pos:end="71:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:30" pos:end="71:47">/* video locked */</comment>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:24"><expr pos:start="77:5" pos:end="77:23"><call pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:12">put_bits</name><argument_list pos:start="77:13" pos:end="77:23">(<argument pos:start="77:14" pos:end="77:16"><expr pos:start="77:14" pos:end="77:16"><operator pos:start="77:14" pos:end="77:14">&amp;</operator><name pos:start="77:15" pos:end="77:16">pb</name></expr></argument>, <argument pos:start="77:19" pos:end="77:19"><expr pos:start="77:19" pos:end="77:19"><literal type="number" pos:start="77:19" pos:end="77:19">1</literal></expr></argument>, <argument pos:start="77:22" pos:end="77:22"><expr pos:start="77:22" pos:end="77:22"><literal type="number" pos:start="77:22" pos:end="77:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="77:26" pos:end="77:37">/* marker */</comment>



    <if_stmt pos:start="81:5" pos:end="89:41"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:50">(<expr pos:start="81:9" pos:end="81:49"><name pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:17">is_vcd</name></name> <operator pos:start="81:19" pos:end="81:20">&amp;&amp;</operator> <name pos:start="81:22" pos:end="81:39">only_for_stream_id</name><operator pos:start="81:40" pos:end="81:41">==</operator><name pos:start="81:42" pos:end="81:49">AUDIO_ID</name></expr>)</condition> <block pos:start="81:52" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:28">

        <comment type="block" pos:start="83:9" pos:end="83:84">/* This header applies only to the audio stream (see VCD standard p. IV-7)*/</comment>

        <expr_stmt pos:start="85:9" pos:end="85:28"><expr pos:start="85:9" pos:end="85:27"><call pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:16">put_bits</name><argument_list pos:start="85:17" pos:end="85:27">(<argument pos:start="85:18" pos:end="85:20"><expr pos:start="85:18" pos:end="85:20"><operator pos:start="85:18" pos:end="85:18">&amp;</operator><name pos:start="85:19" pos:end="85:20">pb</name></expr></argument>, <argument pos:start="85:23" pos:end="85:23"><expr pos:start="85:23" pos:end="85:23"><literal type="number" pos:start="85:23" pos:end="85:23">5</literal></expr></argument>, <argument pos:start="85:26" pos:end="85:26"><expr pos:start="85:26" pos:end="85:26"><literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="89:41">else<block type="pseudo" pos:start="89:9" pos:end="89:41"><block_content pos:start="89:9" pos:end="89:41">

        <expr_stmt pos:start="89:9" pos:end="89:41"><expr pos:start="89:9" pos:end="89:40"><call pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:16">put_bits</name><argument_list pos:start="89:17" pos:end="89:40">(<argument pos:start="89:18" pos:end="89:20"><expr pos:start="89:18" pos:end="89:20"><operator pos:start="89:18" pos:end="89:18">&amp;</operator><name pos:start="89:19" pos:end="89:20">pb</name></expr></argument>, <argument pos:start="89:23" pos:end="89:23"><expr pos:start="89:23" pos:end="89:23"><literal type="number" pos:start="89:23" pos:end="89:23">5</literal></expr></argument>, <argument pos:start="89:26" pos:end="89:39"><expr pos:start="89:26" pos:end="89:39"><name pos:start="89:26" pos:end="89:39"><name pos:start="89:26" pos:end="89:26">s</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:39">video_bound</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="93:5" pos:end="101:31"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:18">(<expr pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:17">is_dvd</name></name></expr>)</condition> <block pos:start="93:20" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:31">

        <expr_stmt pos:start="95:9" pos:end="95:28"><expr pos:start="95:9" pos:end="95:27"><call pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:16">put_bits</name><argument_list pos:start="95:17" pos:end="95:27">(<argument pos:start="95:18" pos:end="95:20"><expr pos:start="95:18" pos:end="95:20"><operator pos:start="95:18" pos:end="95:18">&amp;</operator><name pos:start="95:19" pos:end="95:20">pb</name></expr></argument>, <argument pos:start="95:23" pos:end="95:23"><expr pos:start="95:23" pos:end="95:23"><literal type="number" pos:start="95:23" pos:end="95:23">1</literal></expr></argument>, <argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><literal type="number" pos:start="95:26" pos:end="95:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="95:33" pos:end="95:66">/* packet_rate_restriction_flag */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:31"><expr pos:start="97:9" pos:end="97:30"><call pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:16">put_bits</name><argument_list pos:start="97:17" pos:end="97:30">(<argument pos:start="97:18" pos:end="97:20"><expr pos:start="97:18" pos:end="97:20"><operator pos:start="97:18" pos:end="97:18">&amp;</operator><name pos:start="97:19" pos:end="97:20">pb</name></expr></argument>, <argument pos:start="97:23" pos:end="97:23"><expr pos:start="97:23" pos:end="97:23"><literal type="number" pos:start="97:23" pos:end="97:23">7</literal></expr></argument>, <argument pos:start="97:26" pos:end="97:29"><expr pos:start="97:26" pos:end="97:29"><literal type="number" pos:start="97:26" pos:end="97:29">0x7f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="97:33" pos:end="97:51">/* reserved byte */</comment>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="101:31">else<block type="pseudo" pos:start="101:9" pos:end="101:31"><block_content pos:start="101:9" pos:end="101:31">

        <expr_stmt pos:start="101:9" pos:end="101:31"><expr pos:start="101:9" pos:end="101:30"><call pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:16">put_bits</name><argument_list pos:start="101:17" pos:end="101:30">(<argument pos:start="101:18" pos:end="101:20"><expr pos:start="101:18" pos:end="101:20"><operator pos:start="101:18" pos:end="101:18">&amp;</operator><name pos:start="101:19" pos:end="101:20">pb</name></expr></argument>, <argument pos:start="101:23" pos:end="101:23"><expr pos:start="101:23" pos:end="101:23"><literal type="number" pos:start="101:23" pos:end="101:23">8</literal></expr></argument>, <argument pos:start="101:26" pos:end="101:29"><expr pos:start="101:26" pos:end="101:29"><literal type="number" pos:start="101:26" pos:end="101:29">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="101:33" pos:end="101:51">/* reserved byte */</comment>



    <comment type="block" pos:start="105:5" pos:end="113:60">/* DVD-Video Stream_bound entries

    id (0xB9) video, maximum P-STD for stream 0xE0. (P-STD_buffer_bound_scale = 1)

    id (0xB8) audio, maximum P-STD for any MPEG audio (0xC0 to 0xC7) streams. If there are none set to 4096 (32x128). (P-STD_buffer_bound_scale = 0)

    id (0xBD) private stream 1 (audio other than MPEG and subpictures). (P-STD_buffer_bound_scale = 1)

    id (0xBF) private stream 2, NAV packs, set to 2x1024. */</comment>

    <if_stmt pos:start="115:5" pos:end="273:5"><if pos:start="115:5" pos:end="203:5">if <condition pos:start="115:8" pos:end="115:18">(<expr pos:start="115:9" pos:end="115:17"><name pos:start="115:9" pos:end="115:17"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:17">is_dvd</name></name></expr>)</condition> <block pos:start="115:20" pos:end="203:5">{<block_content pos:start="119:9" pos:end="201:29">



        <decl_stmt pos:start="119:9" pos:end="119:32"><decl pos:start="119:9" pos:end="119:31"><type pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">int</name></type> <name pos:start="119:13" pos:end="119:27">P_STD_max_video</name> <init pos:start="119:29" pos:end="119:31">= <expr pos:start="119:31" pos:end="119:31"><literal type="number" pos:start="119:31" pos:end="119:31">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="121:9" pos:end="121:37"><decl pos:start="121:9" pos:end="121:36"><type pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:11">int</name></type> <name pos:start="121:13" pos:end="121:32">P_STD_max_mpeg_audio</name> <init pos:start="121:34" pos:end="121:36">= <expr pos:start="121:36" pos:end="121:36"><literal type="number" pos:start="121:36" pos:end="121:36">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="123:9" pos:end="123:35"><decl pos:start="123:9" pos:end="123:34"><type pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">int</name></type> <name pos:start="123:13" pos:end="123:30">P_STD_max_mpeg_PS1</name> <init pos:start="123:32" pos:end="123:34">= <expr pos:start="123:34" pos:end="123:34"><literal type="number" pos:start="123:34" pos:end="123:34">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="127:9" pos:end="149:9">for<control pos:start="127:12" pos:end="127:38">(<init pos:start="127:13" pos:end="127:16"><expr pos:start="127:13" pos:end="127:15"><name pos:start="127:13" pos:end="127:13">i</name><operator pos:start="127:14" pos:end="127:14">=</operator><literal type="number" pos:start="127:15" pos:end="127:15">0</literal></expr>;</init><condition pos:start="127:17" pos:end="127:34"><expr pos:start="127:17" pos:end="127:33"><name pos:start="127:17" pos:end="127:17">i</name><operator pos:start="127:18" pos:end="127:18">&lt;</operator><name pos:start="127:19" pos:end="127:33"><name pos:start="127:19" pos:end="127:21">ctx</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:33">nb_streams</name></name></expr>;</condition><incr pos:start="127:35" pos:end="127:37"><expr pos:start="127:35" pos:end="127:37"><name pos:start="127:35" pos:end="127:35">i</name><operator pos:start="127:36" pos:end="127:37">++</operator></expr></incr>)</control> <block pos:start="127:40" pos:end="149:9">{<block_content pos:start="129:13" pos:end="147:13">

            <decl_stmt pos:start="129:13" pos:end="129:60"><decl pos:start="129:13" pos:end="129:59"><type pos:start="129:13" pos:end="129:24"><name pos:start="129:13" pos:end="129:22">StreamInfo</name> <modifier pos:start="129:24" pos:end="129:24">*</modifier></type><name pos:start="129:25" pos:end="129:30">stream</name> <init pos:start="129:32" pos:end="129:59">= <expr pos:start="129:34" pos:end="129:59"><name pos:start="129:34" pos:end="129:48"><name pos:start="129:34" pos:end="129:36">ctx</name><operator pos:start="129:37" pos:end="129:38">-&gt;</operator><name pos:start="129:39" pos:end="129:45">streams</name><index pos:start="129:46" pos:end="129:48">[<expr pos:start="129:47" pos:end="129:47"><name pos:start="129:47" pos:end="129:47">i</name></expr>]</index></name><operator pos:start="129:49" pos:end="129:50">-&gt;</operator><name pos:start="129:51" pos:end="129:59">priv_data</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="133:13" pos:end="133:28"><expr pos:start="133:13" pos:end="133:27"><name pos:start="133:13" pos:end="133:14">id</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <name pos:start="133:18" pos:end="133:27"><name pos:start="133:18" pos:end="133:23">stream</name><operator pos:start="133:24" pos:end="133:25">-&gt;</operator><name pos:start="133:26" pos:end="133:27">id</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="135:13" pos:end="147:13"><if pos:start="135:13" pos:end="139:13">if <condition pos:start="135:16" pos:end="135:75">(<expr pos:start="135:17" pos:end="135:74"><name pos:start="135:17" pos:end="135:18">id</name> <operator pos:start="135:20" pos:end="135:21">==</operator> <literal type="number" pos:start="135:23" pos:end="135:26">0xbd</literal> <operator pos:start="135:28" pos:end="135:29">&amp;&amp;</operator> <name pos:start="135:31" pos:end="135:53"><name pos:start="135:31" pos:end="135:36">stream</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:53">max_buffer_size</name></name> <operator pos:start="135:55" pos:end="135:55">&gt;</operator> <name pos:start="135:57" pos:end="135:74">P_STD_max_mpeg_PS1</name></expr>)</condition> <block pos:start="135:77" pos:end="139:13">{<block_content pos:start="137:17" pos:end="137:61">

                <expr_stmt pos:start="137:17" pos:end="137:61"><expr pos:start="137:17" pos:end="137:60"><name pos:start="137:17" pos:end="137:34">P_STD_max_mpeg_PS1</name> <operator pos:start="137:36" pos:end="137:36">=</operator> <name pos:start="137:38" pos:end="137:60"><name pos:start="137:38" pos:end="137:43">stream</name><operator pos:start="137:44" pos:end="137:45">-&gt;</operator><name pos:start="137:46" pos:end="137:60">max_buffer_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="139:15" pos:end="143:13">else if <condition pos:start="139:23" pos:end="139:98">(<expr pos:start="139:24" pos:end="139:97"><name pos:start="139:24" pos:end="139:25">id</name> <operator pos:start="139:27" pos:end="139:28">&gt;=</operator> <literal type="number" pos:start="139:30" pos:end="139:33">0xc0</literal> <operator pos:start="139:35" pos:end="139:36">&amp;&amp;</operator> <name pos:start="139:38" pos:end="139:39">id</name> <operator pos:start="139:41" pos:end="139:42">&lt;=</operator> <literal type="number" pos:start="139:44" pos:end="139:47">0xc7</literal> <operator pos:start="139:49" pos:end="139:50">&amp;&amp;</operator> <name pos:start="139:52" pos:end="139:74"><name pos:start="139:52" pos:end="139:57">stream</name><operator pos:start="139:58" pos:end="139:59">-&gt;</operator><name pos:start="139:60" pos:end="139:74">max_buffer_size</name></name> <operator pos:start="139:76" pos:end="139:76">&gt;</operator> <name pos:start="139:78" pos:end="139:97">P_STD_max_mpeg_audio</name></expr>)</condition> <block pos:start="139:100" pos:end="143:13">{<block_content pos:start="141:17" pos:end="141:63">

                <expr_stmt pos:start="141:17" pos:end="141:63"><expr pos:start="141:17" pos:end="141:62"><name pos:start="141:17" pos:end="141:36">P_STD_max_mpeg_audio</name> <operator pos:start="141:38" pos:end="141:38">=</operator> <name pos:start="141:40" pos:end="141:62"><name pos:start="141:40" pos:end="141:45">stream</name><operator pos:start="141:46" pos:end="141:47">-&gt;</operator><name pos:start="141:48" pos:end="141:62">max_buffer_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="143:15" pos:end="147:13">else if <condition pos:start="143:23" pos:end="143:79">(<expr pos:start="143:24" pos:end="143:78"><name pos:start="143:24" pos:end="143:25">id</name> <operator pos:start="143:27" pos:end="143:28">==</operator> <literal type="number" pos:start="143:30" pos:end="143:33">0xe0</literal> <operator pos:start="143:35" pos:end="143:36">&amp;&amp;</operator> <name pos:start="143:38" pos:end="143:60"><name pos:start="143:38" pos:end="143:43">stream</name><operator pos:start="143:44" pos:end="143:45">-&gt;</operator><name pos:start="143:46" pos:end="143:60">max_buffer_size</name></name> <operator pos:start="143:62" pos:end="143:62">&gt;</operator> <name pos:start="143:64" pos:end="143:78">P_STD_max_video</name></expr>)</condition> <block pos:start="143:81" pos:end="147:13">{<block_content pos:start="145:17" pos:end="145:58">

                <expr_stmt pos:start="145:17" pos:end="145:58"><expr pos:start="145:17" pos:end="145:57"><name pos:start="145:17" pos:end="145:31">P_STD_max_video</name> <operator pos:start="145:33" pos:end="145:33">=</operator> <name pos:start="145:35" pos:end="145:57"><name pos:start="145:35" pos:end="145:40">stream</name><operator pos:start="145:41" pos:end="145:42">-&gt;</operator><name pos:start="145:43" pos:end="145:57">max_buffer_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="153:9" pos:end="153:19">/* video */</comment>

        <expr_stmt pos:start="155:9" pos:end="155:31"><expr pos:start="155:9" pos:end="155:30"><call pos:start="155:9" pos:end="155:30"><name pos:start="155:9" pos:end="155:16">put_bits</name><argument_list pos:start="155:17" pos:end="155:30">(<argument pos:start="155:18" pos:end="155:20"><expr pos:start="155:18" pos:end="155:20"><operator pos:start="155:18" pos:end="155:18">&amp;</operator><name pos:start="155:19" pos:end="155:20">pb</name></expr></argument>, <argument pos:start="155:23" pos:end="155:23"><expr pos:start="155:23" pos:end="155:23"><literal type="number" pos:start="155:23" pos:end="155:23">8</literal></expr></argument>, <argument pos:start="155:26" pos:end="155:29"><expr pos:start="155:26" pos:end="155:29"><literal type="number" pos:start="155:26" pos:end="155:29">0xb9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="155:33" pos:end="155:47">/* stream ID */</comment>

        <expr_stmt pos:start="157:9" pos:end="157:28"><expr pos:start="157:9" pos:end="157:27"><call pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:16">put_bits</name><argument_list pos:start="157:17" pos:end="157:27">(<argument pos:start="157:18" pos:end="157:20"><expr pos:start="157:18" pos:end="157:20"><operator pos:start="157:18" pos:end="157:18">&amp;</operator><name pos:start="157:19" pos:end="157:20">pb</name></expr></argument>, <argument pos:start="157:23" pos:end="157:23"><expr pos:start="157:23" pos:end="157:23"><literal type="number" pos:start="157:23" pos:end="157:23">2</literal></expr></argument>, <argument pos:start="157:26" pos:end="157:26"><expr pos:start="157:26" pos:end="157:26"><literal type="number" pos:start="157:26" pos:end="157:26">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:28"><expr pos:start="159:9" pos:end="159:27"><call pos:start="159:9" pos:end="159:27"><name pos:start="159:9" pos:end="159:16">put_bits</name><argument_list pos:start="159:17" pos:end="159:27">(<argument pos:start="159:18" pos:end="159:20"><expr pos:start="159:18" pos:end="159:20"><operator pos:start="159:18" pos:end="159:18">&amp;</operator><name pos:start="159:19" pos:end="159:20">pb</name></expr></argument>, <argument pos:start="159:23" pos:end="159:23"><expr pos:start="159:23" pos:end="159:23"><literal type="number" pos:start="159:23" pos:end="159:23">1</literal></expr></argument>, <argument pos:start="159:26" pos:end="159:26"><expr pos:start="159:26" pos:end="159:26"><literal type="number" pos:start="159:26" pos:end="159:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:50"><expr pos:start="161:9" pos:end="161:49"><call pos:start="161:9" pos:end="161:49"><name pos:start="161:9" pos:end="161:16">put_bits</name><argument_list pos:start="161:17" pos:end="161:49">(<argument pos:start="161:18" pos:end="161:20"><expr pos:start="161:18" pos:end="161:20"><operator pos:start="161:18" pos:end="161:18">&amp;</operator><name pos:start="161:19" pos:end="161:20">pb</name></expr></argument>, <argument pos:start="161:23" pos:end="161:24"><expr pos:start="161:23" pos:end="161:24"><literal type="number" pos:start="161:23" pos:end="161:24">13</literal></expr></argument>, <argument pos:start="161:27" pos:end="161:48"><expr pos:start="161:27" pos:end="161:48"><name pos:start="161:27" pos:end="161:41">P_STD_max_video</name> <operator pos:start="161:43" pos:end="161:43">/</operator> <literal type="number" pos:start="161:45" pos:end="161:48">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="165:9" pos:end="165:19">/* audio */</comment>

        <if_stmt pos:start="167:9" pos:end="169:40"><if pos:start="167:9" pos:end="169:40">if <condition pos:start="167:12" pos:end="167:38">(<expr pos:start="167:13" pos:end="167:37"><name pos:start="167:13" pos:end="167:32">P_STD_max_mpeg_audio</name> <operator pos:start="167:34" pos:end="167:35">==</operator> <literal type="number" pos:start="167:37" pos:end="167:37">0</literal></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:40"><block_content pos:start="169:13" pos:end="169:40">

            <expr_stmt pos:start="169:13" pos:end="169:40"><expr pos:start="169:13" pos:end="169:39"><name pos:start="169:13" pos:end="169:32">P_STD_max_mpeg_audio</name> <operator pos:start="169:34" pos:end="169:34">=</operator> <literal type="number" pos:start="169:36" pos:end="169:39">4096</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:31"><expr pos:start="171:9" pos:end="171:30"><call pos:start="171:9" pos:end="171:30"><name pos:start="171:9" pos:end="171:16">put_bits</name><argument_list pos:start="171:17" pos:end="171:30">(<argument pos:start="171:18" pos:end="171:20"><expr pos:start="171:18" pos:end="171:20"><operator pos:start="171:18" pos:end="171:18">&amp;</operator><name pos:start="171:19" pos:end="171:20">pb</name></expr></argument>, <argument pos:start="171:23" pos:end="171:23"><expr pos:start="171:23" pos:end="171:23"><literal type="number" pos:start="171:23" pos:end="171:23">8</literal></expr></argument>, <argument pos:start="171:26" pos:end="171:29"><expr pos:start="171:26" pos:end="171:29"><literal type="number" pos:start="171:26" pos:end="171:29">0xb8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="171:33" pos:end="171:47">/* stream ID */</comment>

        <expr_stmt pos:start="173:9" pos:end="173:28"><expr pos:start="173:9" pos:end="173:27"><call pos:start="173:9" pos:end="173:27"><name pos:start="173:9" pos:end="173:16">put_bits</name><argument_list pos:start="173:17" pos:end="173:27">(<argument pos:start="173:18" pos:end="173:20"><expr pos:start="173:18" pos:end="173:20"><operator pos:start="173:18" pos:end="173:18">&amp;</operator><name pos:start="173:19" pos:end="173:20">pb</name></expr></argument>, <argument pos:start="173:23" pos:end="173:23"><expr pos:start="173:23" pos:end="173:23"><literal type="number" pos:start="173:23" pos:end="173:23">2</literal></expr></argument>, <argument pos:start="173:26" pos:end="173:26"><expr pos:start="173:26" pos:end="173:26"><literal type="number" pos:start="173:26" pos:end="173:26">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:28"><expr pos:start="175:9" pos:end="175:27"><call pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:16">put_bits</name><argument_list pos:start="175:17" pos:end="175:27">(<argument pos:start="175:18" pos:end="175:20"><expr pos:start="175:18" pos:end="175:20"><operator pos:start="175:18" pos:end="175:18">&amp;</operator><name pos:start="175:19" pos:end="175:20">pb</name></expr></argument>, <argument pos:start="175:23" pos:end="175:23"><expr pos:start="175:23" pos:end="175:23"><literal type="number" pos:start="175:23" pos:end="175:23">1</literal></expr></argument>, <argument pos:start="175:26" pos:end="175:26"><expr pos:start="175:26" pos:end="175:26"><literal type="number" pos:start="175:26" pos:end="175:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:54"><expr pos:start="177:9" pos:end="177:53"><call pos:start="177:9" pos:end="177:53"><name pos:start="177:9" pos:end="177:16">put_bits</name><argument_list pos:start="177:17" pos:end="177:53">(<argument pos:start="177:18" pos:end="177:20"><expr pos:start="177:18" pos:end="177:20"><operator pos:start="177:18" pos:end="177:18">&amp;</operator><name pos:start="177:19" pos:end="177:20">pb</name></expr></argument>, <argument pos:start="177:23" pos:end="177:24"><expr pos:start="177:23" pos:end="177:24"><literal type="number" pos:start="177:23" pos:end="177:24">13</literal></expr></argument>, <argument pos:start="177:27" pos:end="177:52"><expr pos:start="177:27" pos:end="177:52"><name pos:start="177:27" pos:end="177:46">P_STD_max_mpeg_audio</name> <operator pos:start="177:48" pos:end="177:48">/</operator> <literal type="number" pos:start="177:50" pos:end="177:52">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="181:9" pos:end="181:30">/* private stream 1 */</comment>

        <expr_stmt pos:start="183:9" pos:end="183:31"><expr pos:start="183:9" pos:end="183:30"><call pos:start="183:9" pos:end="183:30"><name pos:start="183:9" pos:end="183:16">put_bits</name><argument_list pos:start="183:17" pos:end="183:30">(<argument pos:start="183:18" pos:end="183:20"><expr pos:start="183:18" pos:end="183:20"><operator pos:start="183:18" pos:end="183:18">&amp;</operator><name pos:start="183:19" pos:end="183:20">pb</name></expr></argument>, <argument pos:start="183:23" pos:end="183:23"><expr pos:start="183:23" pos:end="183:23"><literal type="number" pos:start="183:23" pos:end="183:23">8</literal></expr></argument>, <argument pos:start="183:26" pos:end="183:29"><expr pos:start="183:26" pos:end="183:29"><literal type="number" pos:start="183:26" pos:end="183:29">0xbd</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="183:33" pos:end="183:47">/* stream ID */</comment>

        <expr_stmt pos:start="185:9" pos:end="185:28"><expr pos:start="185:9" pos:end="185:27"><call pos:start="185:9" pos:end="185:27"><name pos:start="185:9" pos:end="185:16">put_bits</name><argument_list pos:start="185:17" pos:end="185:27">(<argument pos:start="185:18" pos:end="185:20"><expr pos:start="185:18" pos:end="185:20"><operator pos:start="185:18" pos:end="185:18">&amp;</operator><name pos:start="185:19" pos:end="185:20">pb</name></expr></argument>, <argument pos:start="185:23" pos:end="185:23"><expr pos:start="185:23" pos:end="185:23"><literal type="number" pos:start="185:23" pos:end="185:23">2</literal></expr></argument>, <argument pos:start="185:26" pos:end="185:26"><expr pos:start="185:26" pos:end="185:26"><literal type="number" pos:start="185:26" pos:end="185:26">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:28"><expr pos:start="187:9" pos:end="187:27"><call pos:start="187:9" pos:end="187:27"><name pos:start="187:9" pos:end="187:16">put_bits</name><argument_list pos:start="187:17" pos:end="187:27">(<argument pos:start="187:18" pos:end="187:20"><expr pos:start="187:18" pos:end="187:20"><operator pos:start="187:18" pos:end="187:18">&amp;</operator><name pos:start="187:19" pos:end="187:20">pb</name></expr></argument>, <argument pos:start="187:23" pos:end="187:23"><expr pos:start="187:23" pos:end="187:23"><literal type="number" pos:start="187:23" pos:end="187:23">1</literal></expr></argument>, <argument pos:start="187:26" pos:end="187:26"><expr pos:start="187:26" pos:end="187:26"><literal type="number" pos:start="187:26" pos:end="187:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:52"><expr pos:start="189:9" pos:end="189:51"><call pos:start="189:9" pos:end="189:51"><name pos:start="189:9" pos:end="189:16">put_bits</name><argument_list pos:start="189:17" pos:end="189:51">(<argument pos:start="189:18" pos:end="189:20"><expr pos:start="189:18" pos:end="189:20"><operator pos:start="189:18" pos:end="189:18">&amp;</operator><name pos:start="189:19" pos:end="189:20">pb</name></expr></argument>, <argument pos:start="189:23" pos:end="189:24"><expr pos:start="189:23" pos:end="189:24"><literal type="number" pos:start="189:23" pos:end="189:24">13</literal></expr></argument>, <argument pos:start="189:27" pos:end="189:50"><expr pos:start="189:27" pos:end="189:50"><name pos:start="189:27" pos:end="189:44">P_STD_max_mpeg_PS1</name> <operator pos:start="189:46" pos:end="189:46">/</operator> <literal type="number" pos:start="189:48" pos:end="189:50">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="193:9" pos:end="193:30">/* private stream 2 */</comment>

        <expr_stmt pos:start="195:9" pos:end="195:31"><expr pos:start="195:9" pos:end="195:30"><call pos:start="195:9" pos:end="195:30"><name pos:start="195:9" pos:end="195:16">put_bits</name><argument_list pos:start="195:17" pos:end="195:30">(<argument pos:start="195:18" pos:end="195:20"><expr pos:start="195:18" pos:end="195:20"><operator pos:start="195:18" pos:end="195:18">&amp;</operator><name pos:start="195:19" pos:end="195:20">pb</name></expr></argument>, <argument pos:start="195:23" pos:end="195:23"><expr pos:start="195:23" pos:end="195:23"><literal type="number" pos:start="195:23" pos:end="195:23">8</literal></expr></argument>, <argument pos:start="195:26" pos:end="195:29"><expr pos:start="195:26" pos:end="195:29"><literal type="number" pos:start="195:26" pos:end="195:29">0xbf</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="195:33" pos:end="195:47">/* stream ID */</comment>

        <expr_stmt pos:start="197:9" pos:end="197:28"><expr pos:start="197:9" pos:end="197:27"><call pos:start="197:9" pos:end="197:27"><name pos:start="197:9" pos:end="197:16">put_bits</name><argument_list pos:start="197:17" pos:end="197:27">(<argument pos:start="197:18" pos:end="197:20"><expr pos:start="197:18" pos:end="197:20"><operator pos:start="197:18" pos:end="197:18">&amp;</operator><name pos:start="197:19" pos:end="197:20">pb</name></expr></argument>, <argument pos:start="197:23" pos:end="197:23"><expr pos:start="197:23" pos:end="197:23"><literal type="number" pos:start="197:23" pos:end="197:23">2</literal></expr></argument>, <argument pos:start="197:26" pos:end="197:26"><expr pos:start="197:26" pos:end="197:26"><literal type="number" pos:start="197:26" pos:end="197:26">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:28"><expr pos:start="199:9" pos:end="199:27"><call pos:start="199:9" pos:end="199:27"><name pos:start="199:9" pos:end="199:16">put_bits</name><argument_list pos:start="199:17" pos:end="199:27">(<argument pos:start="199:18" pos:end="199:20"><expr pos:start="199:18" pos:end="199:20"><operator pos:start="199:18" pos:end="199:18">&amp;</operator><name pos:start="199:19" pos:end="199:20">pb</name></expr></argument>, <argument pos:start="199:23" pos:end="199:23"><expr pos:start="199:23" pos:end="199:23"><literal type="number" pos:start="199:23" pos:end="199:23">1</literal></expr></argument>, <argument pos:start="199:26" pos:end="199:26"><expr pos:start="199:26" pos:end="199:26"><literal type="number" pos:start="199:26" pos:end="199:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:29"><expr pos:start="201:9" pos:end="201:28"><call pos:start="201:9" pos:end="201:28"><name pos:start="201:9" pos:end="201:16">put_bits</name><argument_list pos:start="201:17" pos:end="201:28">(<argument pos:start="201:18" pos:end="201:20"><expr pos:start="201:18" pos:end="201:20"><operator pos:start="201:18" pos:end="201:18">&amp;</operator><name pos:start="201:19" pos:end="201:20">pb</name></expr></argument>, <argument pos:start="201:23" pos:end="201:24"><expr pos:start="201:23" pos:end="201:24"><literal type="number" pos:start="201:23" pos:end="201:24">13</literal></expr></argument>, <argument pos:start="201:27" pos:end="201:27"><expr pos:start="201:27" pos:end="201:27"><literal type="number" pos:start="201:27" pos:end="201:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="205:5" pos:end="273:5">else <block pos:start="205:10" pos:end="273:5">{<block_content pos:start="209:9" pos:end="271:9">

        <comment type="block" pos:start="207:9" pos:end="207:31">/* audio stream info */</comment>

        <expr_stmt pos:start="209:9" pos:end="209:33"><expr pos:start="209:9" pos:end="209:32"><name pos:start="209:9" pos:end="209:28">private_stream_coded</name> <operator pos:start="209:30" pos:end="209:30">=</operator> <literal type="number" pos:start="209:32" pos:end="209:32">0</literal></expr>;</expr_stmt>

        <for pos:start="211:9" pos:end="271:9">for<control pos:start="211:12" pos:end="211:38">(<init pos:start="211:13" pos:end="211:16"><expr pos:start="211:13" pos:end="211:15"><name pos:start="211:13" pos:end="211:13">i</name><operator pos:start="211:14" pos:end="211:14">=</operator><literal type="number" pos:start="211:15" pos:end="211:15">0</literal></expr>;</init><condition pos:start="211:17" pos:end="211:34"><expr pos:start="211:17" pos:end="211:33"><name pos:start="211:17" pos:end="211:17">i</name><operator pos:start="211:18" pos:end="211:18">&lt;</operator><name pos:start="211:19" pos:end="211:33"><name pos:start="211:19" pos:end="211:21">ctx</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:33">nb_streams</name></name></expr>;</condition><incr pos:start="211:35" pos:end="211:37"><expr pos:start="211:35" pos:end="211:37"><name pos:start="211:35" pos:end="211:35">i</name><operator pos:start="211:36" pos:end="211:37">++</operator></expr></incr>)</control> <block pos:start="211:40" pos:end="271:9">{<block_content pos:start="213:13" pos:end="269:13">

            <decl_stmt pos:start="213:13" pos:end="213:60"><decl pos:start="213:13" pos:end="213:59"><type pos:start="213:13" pos:end="213:24"><name pos:start="213:13" pos:end="213:22">StreamInfo</name> <modifier pos:start="213:24" pos:end="213:24">*</modifier></type><name pos:start="213:25" pos:end="213:30">stream</name> <init pos:start="213:32" pos:end="213:59">= <expr pos:start="213:34" pos:end="213:59"><name pos:start="213:34" pos:end="213:48"><name pos:start="213:34" pos:end="213:36">ctx</name><operator pos:start="213:37" pos:end="213:38">-&gt;</operator><name pos:start="213:39" pos:end="213:45">streams</name><index pos:start="213:46" pos:end="213:48">[<expr pos:start="213:47" pos:end="213:47"><name pos:start="213:47" pos:end="213:47">i</name></expr>]</index></name><operator pos:start="213:49" pos:end="213:50">-&gt;</operator><name pos:start="213:51" pos:end="213:59">priv_data</name></expr></init></decl>;</decl_stmt>





            <comment type="block" pos:start="219:13" pos:end="223:41">/* For VCDs, only include the stream info for the stream

            that the pack which contains this system belongs to.

            (see VCD standard p. IV-7) */</comment>

            <if_stmt pos:start="225:13" pos:end="269:13"><if pos:start="225:13" pos:end="269:13">if <condition pos:start="225:16" pos:end="227:41">( <expr pos:start="225:18" pos:end="227:40"><operator pos:start="225:18" pos:end="225:18">!</operator><name pos:start="225:19" pos:end="225:27"><name pos:start="225:19" pos:end="225:19">s</name><operator pos:start="225:20" pos:end="225:21">-&gt;</operator><name pos:start="225:22" pos:end="225:27">is_vcd</name></name> <operator pos:start="225:29" pos:end="225:30">||</operator> <name pos:start="225:32" pos:end="225:41"><name pos:start="225:32" pos:end="225:37">stream</name><operator pos:start="225:38" pos:end="225:39">-&gt;</operator><name pos:start="225:40" pos:end="225:41">id</name></name><operator pos:start="225:42" pos:end="225:43">==</operator><name pos:start="225:44" pos:end="225:61">only_for_stream_id</name>

                <operator pos:start="227:17" pos:end="227:18">||</operator> <name pos:start="227:20" pos:end="227:37">only_for_stream_id</name><operator pos:start="227:38" pos:end="227:39">==</operator><literal type="number" pos:start="227:40" pos:end="227:40">0</literal></expr>)</condition> <block pos:start="227:43" pos:end="269:13">{<block_content pos:start="231:17" pos:end="267:17">



                <expr_stmt pos:start="231:17" pos:end="231:32"><expr pos:start="231:17" pos:end="231:31"><name pos:start="231:17" pos:end="231:18">id</name> <operator pos:start="231:20" pos:end="231:20">=</operator> <name pos:start="231:22" pos:end="231:31"><name pos:start="231:22" pos:end="231:27">stream</name><operator pos:start="231:28" pos:end="231:29">-&gt;</operator><name pos:start="231:30" pos:end="231:31">id</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="233:17" pos:end="245:17"><if pos:start="233:17" pos:end="245:17">if <condition pos:start="233:20" pos:end="233:30">(<expr pos:start="233:21" pos:end="233:29"><name pos:start="233:21" pos:end="233:22">id</name> <operator pos:start="233:24" pos:end="233:24">&lt;</operator> <literal type="number" pos:start="233:26" pos:end="233:29">0xc0</literal></expr>)</condition> <block pos:start="233:32" pos:end="245:17">{<block_content pos:start="237:21" pos:end="243:30">

                    <comment type="block" pos:start="235:21" pos:end="235:75">/* special case for private streams (AC-3 uses that) */</comment>

                    <if_stmt pos:start="237:21" pos:end="239:33"><if pos:start="237:21" pos:end="239:33">if <condition pos:start="237:24" pos:end="237:45">(<expr pos:start="237:25" pos:end="237:44"><name pos:start="237:25" pos:end="237:44">private_stream_coded</name></expr>)</condition><block type="pseudo" pos:start="239:25" pos:end="239:33"><block_content pos:start="239:25" pos:end="239:33">

                        <continue pos:start="239:25" pos:end="239:33">continue;</continue></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="241:21" pos:end="241:45"><expr pos:start="241:21" pos:end="241:44"><name pos:start="241:21" pos:end="241:40">private_stream_coded</name> <operator pos:start="241:42" pos:end="241:42">=</operator> <literal type="number" pos:start="241:44" pos:end="241:44">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="243:21" pos:end="243:30"><expr pos:start="243:21" pos:end="243:29"><name pos:start="243:21" pos:end="243:22">id</name> <operator pos:start="243:24" pos:end="243:24">=</operator> <literal type="number" pos:start="243:26" pos:end="243:29">0xbd</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="247:17" pos:end="247:37"><expr pos:start="247:17" pos:end="247:36"><call pos:start="247:17" pos:end="247:36"><name pos:start="247:17" pos:end="247:24">put_bits</name><argument_list pos:start="247:25" pos:end="247:36">(<argument pos:start="247:26" pos:end="247:28"><expr pos:start="247:26" pos:end="247:28"><operator pos:start="247:26" pos:end="247:26">&amp;</operator><name pos:start="247:27" pos:end="247:28">pb</name></expr></argument>, <argument pos:start="247:31" pos:end="247:31"><expr pos:start="247:31" pos:end="247:31"><literal type="number" pos:start="247:31" pos:end="247:31">8</literal></expr></argument>, <argument pos:start="247:34" pos:end="247:35"><expr pos:start="247:34" pos:end="247:35"><name pos:start="247:34" pos:end="247:35">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="247:39" pos:end="247:53">/* stream ID */</comment>

                <expr_stmt pos:start="249:17" pos:end="249:36"><expr pos:start="249:17" pos:end="249:35"><call pos:start="249:17" pos:end="249:35"><name pos:start="249:17" pos:end="249:24">put_bits</name><argument_list pos:start="249:25" pos:end="249:35">(<argument pos:start="249:26" pos:end="249:28"><expr pos:start="249:26" pos:end="249:28"><operator pos:start="249:26" pos:end="249:26">&amp;</operator><name pos:start="249:27" pos:end="249:28">pb</name></expr></argument>, <argument pos:start="249:31" pos:end="249:31"><expr pos:start="249:31" pos:end="249:31"><literal type="number" pos:start="249:31" pos:end="249:31">2</literal></expr></argument>, <argument pos:start="249:34" pos:end="249:34"><expr pos:start="249:34" pos:end="249:34"><literal type="number" pos:start="249:34" pos:end="249:34">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="251:17" pos:end="267:17"><if pos:start="251:17" pos:end="259:17">if <condition pos:start="251:20" pos:end="251:30">(<expr pos:start="251:21" pos:end="251:29"><name pos:start="251:21" pos:end="251:22">id</name> <operator pos:start="251:24" pos:end="251:24">&lt;</operator> <literal type="number" pos:start="251:26" pos:end="251:29">0xe0</literal></expr>)</condition> <block pos:start="251:32" pos:end="259:17">{<block_content pos:start="255:21" pos:end="257:69">

                    <comment type="block" pos:start="253:21" pos:end="253:31">/* audio */</comment>

                    <expr_stmt pos:start="255:21" pos:end="255:40"><expr pos:start="255:21" pos:end="255:39"><call pos:start="255:21" pos:end="255:39"><name pos:start="255:21" pos:end="255:28">put_bits</name><argument_list pos:start="255:29" pos:end="255:39">(<argument pos:start="255:30" pos:end="255:32"><expr pos:start="255:30" pos:end="255:32"><operator pos:start="255:30" pos:end="255:30">&amp;</operator><name pos:start="255:31" pos:end="255:32">pb</name></expr></argument>, <argument pos:start="255:35" pos:end="255:35"><expr pos:start="255:35" pos:end="255:35"><literal type="number" pos:start="255:35" pos:end="255:35">1</literal></expr></argument>, <argument pos:start="255:38" pos:end="255:38"><expr pos:start="255:38" pos:end="255:38"><literal type="number" pos:start="255:38" pos:end="255:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="257:21" pos:end="257:69"><expr pos:start="257:21" pos:end="257:68"><call pos:start="257:21" pos:end="257:68"><name pos:start="257:21" pos:end="257:28">put_bits</name><argument_list pos:start="257:29" pos:end="257:68">(<argument pos:start="257:30" pos:end="257:32"><expr pos:start="257:30" pos:end="257:32"><operator pos:start="257:30" pos:end="257:30">&amp;</operator><name pos:start="257:31" pos:end="257:32">pb</name></expr></argument>, <argument pos:start="257:35" pos:end="257:36"><expr pos:start="257:35" pos:end="257:36"><literal type="number" pos:start="257:35" pos:end="257:36">13</literal></expr></argument>, <argument pos:start="257:39" pos:end="257:67"><expr pos:start="257:39" pos:end="257:67"><name pos:start="257:39" pos:end="257:61"><name pos:start="257:39" pos:end="257:44">stream</name><operator pos:start="257:45" pos:end="257:46">-&gt;</operator><name pos:start="257:47" pos:end="257:61">max_buffer_size</name></name> <operator pos:start="257:63" pos:end="257:63">/</operator> <literal type="number" pos:start="257:65" pos:end="257:67">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="259:19" pos:end="267:17">else <block pos:start="259:24" pos:end="267:17">{<block_content pos:start="263:21" pos:end="265:70">

                    <comment type="block" pos:start="261:21" pos:end="261:31">/* video */</comment>

                    <expr_stmt pos:start="263:21" pos:end="263:40"><expr pos:start="263:21" pos:end="263:39"><call pos:start="263:21" pos:end="263:39"><name pos:start="263:21" pos:end="263:28">put_bits</name><argument_list pos:start="263:29" pos:end="263:39">(<argument pos:start="263:30" pos:end="263:32"><expr pos:start="263:30" pos:end="263:32"><operator pos:start="263:30" pos:end="263:30">&amp;</operator><name pos:start="263:31" pos:end="263:32">pb</name></expr></argument>, <argument pos:start="263:35" pos:end="263:35"><expr pos:start="263:35" pos:end="263:35"><literal type="number" pos:start="263:35" pos:end="263:35">1</literal></expr></argument>, <argument pos:start="263:38" pos:end="263:38"><expr pos:start="263:38" pos:end="263:38"><literal type="number" pos:start="263:38" pos:end="263:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="265:21" pos:end="265:70"><expr pos:start="265:21" pos:end="265:69"><call pos:start="265:21" pos:end="265:69"><name pos:start="265:21" pos:end="265:28">put_bits</name><argument_list pos:start="265:29" pos:end="265:69">(<argument pos:start="265:30" pos:end="265:32"><expr pos:start="265:30" pos:end="265:32"><operator pos:start="265:30" pos:end="265:30">&amp;</operator><name pos:start="265:31" pos:end="265:32">pb</name></expr></argument>, <argument pos:start="265:35" pos:end="265:36"><expr pos:start="265:35" pos:end="265:36"><literal type="number" pos:start="265:35" pos:end="265:36">13</literal></expr></argument>, <argument pos:start="265:39" pos:end="265:68"><expr pos:start="265:39" pos:end="265:68"><name pos:start="265:39" pos:end="265:61"><name pos:start="265:39" pos:end="265:44">stream</name><operator pos:start="265:45" pos:end="265:46">-&gt;</operator><name pos:start="265:47" pos:end="265:61">max_buffer_size</name></name> <operator pos:start="265:63" pos:end="265:63">/</operator> <literal type="number" pos:start="265:65" pos:end="265:68">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="277:5" pos:end="277:24"><expr pos:start="277:5" pos:end="277:23"><call pos:start="277:5" pos:end="277:23"><name pos:start="277:5" pos:end="277:18">flush_put_bits</name><argument_list pos:start="277:19" pos:end="277:23">(<argument pos:start="277:20" pos:end="277:22"><expr pos:start="277:20" pos:end="277:22"><operator pos:start="277:20" pos:end="277:20">&amp;</operator><name pos:start="277:21" pos:end="277:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="279:5" pos:end="279:38"><expr pos:start="279:5" pos:end="279:37"><name pos:start="279:5" pos:end="279:8">size</name> <operator pos:start="279:10" pos:end="279:10">=</operator> <call pos:start="279:12" pos:end="279:28"><name pos:start="279:12" pos:end="279:23">put_bits_ptr</name><argument_list pos:start="279:24" pos:end="279:28">(<argument pos:start="279:25" pos:end="279:27"><expr pos:start="279:25" pos:end="279:27"><operator pos:start="279:25" pos:end="279:25">&amp;</operator><name pos:start="279:26" pos:end="279:27">pb</name></expr></argument>)</argument_list></call> <operator pos:start="279:30" pos:end="279:30">-</operator> <name pos:start="279:32" pos:end="279:37"><name pos:start="279:32" pos:end="279:33">pb</name><operator pos:start="279:34" pos:end="279:34">.</operator><name pos:start="279:35" pos:end="279:37">buf</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="281:5" pos:end="281:27">/* patch packet size */</comment>

    <expr_stmt pos:start="283:5" pos:end="283:29"><expr pos:start="283:5" pos:end="283:28"><name pos:start="283:5" pos:end="283:10"><name pos:start="283:5" pos:end="283:7">buf</name><index pos:start="283:8" pos:end="283:10">[<expr pos:start="283:9" pos:end="283:9"><literal type="number" pos:start="283:9" pos:end="283:9">4</literal></expr>]</index></name> <operator pos:start="283:12" pos:end="283:12">=</operator> <operator pos:start="283:14" pos:end="283:14">(</operator><name pos:start="283:15" pos:end="283:18">size</name> <operator pos:start="283:20" pos:end="283:20">-</operator> <literal type="number" pos:start="283:22" pos:end="283:22">6</literal><operator pos:start="283:23" pos:end="283:23">)</operator> <operator pos:start="283:25" pos:end="283:26">&gt;&gt;</operator> <literal type="number" pos:start="283:28" pos:end="283:28">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:31"><expr pos:start="285:5" pos:end="285:30"><name pos:start="285:5" pos:end="285:10"><name pos:start="285:5" pos:end="285:7">buf</name><index pos:start="285:8" pos:end="285:10">[<expr pos:start="285:9" pos:end="285:9"><literal type="number" pos:start="285:9" pos:end="285:9">5</literal></expr>]</index></name> <operator pos:start="285:12" pos:end="285:12">=</operator> <operator pos:start="285:14" pos:end="285:14">(</operator><name pos:start="285:15" pos:end="285:18">size</name> <operator pos:start="285:20" pos:end="285:20">-</operator> <literal type="number" pos:start="285:22" pos:end="285:22">6</literal><operator pos:start="285:23" pos:end="285:23">)</operator> <operator pos:start="285:25" pos:end="285:25">&amp;</operator> <literal type="number" pos:start="285:27" pos:end="285:30">0xff</literal></expr>;</expr_stmt>



    <return pos:start="289:5" pos:end="289:16">return <expr pos:start="289:12" pos:end="289:15"><name pos:start="289:12" pos:end="289:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
