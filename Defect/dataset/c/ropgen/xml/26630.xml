<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26630.c" pos:tabs="8"><function pos:start="1:1" pos:end="447:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:7">av_cold</name> <specifier pos:start="1:9" pos:end="1:14">static</specifier> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:30">auto_matrix</name><parameter_list pos:start="1:31" pos:end="1:45">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:41">SwrContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="447:1">{<block_content pos:start="5:5" pos:end="445:13">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:19">out_i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">double</name></type> <name pos:start="7:12" pos:end="7:25"><name pos:start="7:12" pos:end="7:17">matrix</name><index pos:start="7:18" pos:end="7:21">[<expr pos:start="7:19" pos:end="7:20"><literal type="number" pos:start="7:19" pos:end="7:20">64</literal></expr>]</index><index pos:start="7:22" pos:end="7:25">[<expr pos:start="7:23" pos:end="7:24"><literal type="number" pos:start="7:23" pos:end="7:24">64</literal></expr>]</index></name><init pos:start="7:26" pos:end="7:31">=<expr pos:start="7:27" pos:end="7:31"><block pos:start="7:27" pos:end="7:31">{<expr pos:start="7:28" pos:end="7:30"><block pos:start="7:28" pos:end="7:30">{<expr pos:start="7:29" pos:end="7:29"><literal type="number" pos:start="7:29" pos:end="7:29">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:23">unaccounted</name></decl>, <decl pos:start="9:26" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:26" pos:end="9:37">in_ch_layout</name></decl>, <decl pos:start="9:40" pos:end="9:52"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:40" pos:end="9:52">out_ch_layout</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type> <name pos:start="11:12" pos:end="11:18">maxcoef</name><init pos:start="11:19" pos:end="11:20">=<expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:17"><name pos:start="13:10" pos:end="13:12">buf</name><index pos:start="13:13" pos:end="13:17">[<expr pos:start="13:14" pos:end="13:16"><literal type="number" pos:start="13:14" pos:end="13:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:29">matrix_encoding</name> <init pos:start="15:31" pos:end="15:50">= <expr pos:start="15:33" pos:end="15:50"><name pos:start="15:33" pos:end="15:50"><name pos:start="15:33" pos:end="15:33">s</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:50">matrix_encoding</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">float</name></type> <name pos:start="17:11" pos:end="17:16">maxval</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:52"><expr pos:start="21:5" pos:end="21:51"><name pos:start="21:5" pos:end="21:16">in_ch_layout</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:51"><name pos:start="21:20" pos:end="21:31">clean_layout</name><argument_list pos:start="21:32" pos:end="21:51">(<argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><name pos:start="21:33" pos:end="21:33">s</name></expr></argument>, <argument pos:start="21:36" pos:end="21:50"><expr pos:start="21:36" pos:end="21:50"><name pos:start="21:36" pos:end="21:50"><name pos:start="21:36" pos:end="21:36">s</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:50">in_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if<condition pos:start="23:7" pos:end="23:34">(<expr pos:start="23:8" pos:end="23:33"><operator pos:start="23:8" pos:end="23:8">!</operator><call pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:19">sane_layout</name><argument_list pos:start="23:20" pos:end="23:33">(<argument pos:start="23:21" pos:end="23:32"><expr pos:start="23:21" pos:end="23:32"><name pos:start="23:21" pos:end="23:32">in_ch_layout</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="23:35" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:31">

        <expr_stmt pos:start="25:9" pos:end="25:76"><expr pos:start="25:9" pos:end="25:75"><call pos:start="25:9" pos:end="25:75"><name pos:start="25:9" pos:end="25:36">av_get_channel_layout_string</name><argument_list pos:start="25:37" pos:end="25:75">(<argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">buf</name></expr></argument>, <argument pos:start="25:43" pos:end="25:53"><expr pos:start="25:43" pos:end="25:53"><sizeof pos:start="25:43" pos:end="25:53">sizeof<argument_list pos:start="25:49" pos:end="25:53">(<argument pos:start="25:50" pos:end="25:52"><expr pos:start="25:50" pos:end="25:52"><name pos:start="25:50" pos:end="25:52">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:56" pos:end="25:57"><expr pos:start="25:56" pos:end="25:57"><operator pos:start="25:56" pos:end="25:56">-</operator><literal type="number" pos:start="25:57" pos:end="25:57">1</literal></expr></argument>, <argument pos:start="25:60" pos:end="25:74"><expr pos:start="25:60" pos:end="25:74"><name pos:start="25:60" pos:end="25:74"><name pos:start="25:60" pos:end="25:60">s</name><operator pos:start="25:61" pos:end="25:62">-&gt;</operator><name pos:start="25:63" pos:end="25:74">in_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:85"><expr pos:start="27:9" pos:end="27:84"><call pos:start="27:9" pos:end="27:84"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:84">(<argument pos:start="27:16" pos:end="27:16"><expr pos:start="27:16" pos:end="27:16"><name pos:start="27:16" pos:end="27:16">s</name></expr></argument>, <argument pos:start="27:19" pos:end="27:30"><expr pos:start="27:19" pos:end="27:30"><name pos:start="27:19" pos:end="27:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:33" pos:end="27:78"><expr pos:start="27:33" pos:end="27:78"><literal type="string" pos:start="27:33" pos:end="27:78">"Input channel layout '%s' is not supported\n"</literal></expr></argument>, <argument pos:start="27:81" pos:end="27:83"><expr pos:start="27:81" pos:end="27:83"><name pos:start="27:81" pos:end="27:83">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:54"><expr pos:start="35:5" pos:end="35:53"><name pos:start="35:5" pos:end="35:17">out_ch_layout</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:53"><name pos:start="35:21" pos:end="35:32">clean_layout</name><argument_list pos:start="35:33" pos:end="35:53">(<argument pos:start="35:34" pos:end="35:34"><expr pos:start="35:34" pos:end="35:34"><name pos:start="35:34" pos:end="35:34">s</name></expr></argument>, <argument pos:start="35:37" pos:end="35:52"><expr pos:start="35:37" pos:end="35:52"><name pos:start="35:37" pos:end="35:52"><name pos:start="35:37" pos:end="35:37">s</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:52">out_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if<condition pos:start="37:7" pos:end="37:35">(<expr pos:start="37:8" pos:end="37:34"><operator pos:start="37:8" pos:end="37:8">!</operator><call pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:19">sane_layout</name><argument_list pos:start="37:20" pos:end="37:34">(<argument pos:start="37:21" pos:end="37:33"><expr pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:33">out_ch_layout</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="37:36" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:31">

        <expr_stmt pos:start="39:9" pos:end="39:77"><expr pos:start="39:9" pos:end="39:76"><call pos:start="39:9" pos:end="39:76"><name pos:start="39:9" pos:end="39:36">av_get_channel_layout_string</name><argument_list pos:start="39:37" pos:end="39:76">(<argument pos:start="39:38" pos:end="39:40"><expr pos:start="39:38" pos:end="39:40"><name pos:start="39:38" pos:end="39:40">buf</name></expr></argument>, <argument pos:start="39:43" pos:end="39:53"><expr pos:start="39:43" pos:end="39:53"><sizeof pos:start="39:43" pos:end="39:53">sizeof<argument_list pos:start="39:49" pos:end="39:53">(<argument pos:start="39:50" pos:end="39:52"><expr pos:start="39:50" pos:end="39:52"><name pos:start="39:50" pos:end="39:52">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:56" pos:end="39:57"><expr pos:start="39:56" pos:end="39:57"><operator pos:start="39:56" pos:end="39:56">-</operator><literal type="number" pos:start="39:57" pos:end="39:57">1</literal></expr></argument>, <argument pos:start="39:60" pos:end="39:75"><expr pos:start="39:60" pos:end="39:75"><name pos:start="39:60" pos:end="39:75"><name pos:start="39:60" pos:end="39:60">s</name><operator pos:start="39:61" pos:end="39:62">-&gt;</operator><name pos:start="39:63" pos:end="39:75">out_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:86"><expr pos:start="41:9" pos:end="41:85"><call pos:start="41:9" pos:end="41:85"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:85">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">s</name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:33" pos:end="41:79"><expr pos:start="41:33" pos:end="41:79"><literal type="string" pos:start="41:33" pos:end="41:79">"Output channel layout '%s' is not supported\n"</literal></expr></argument>, <argument pos:start="41:82" pos:end="41:84"><expr pos:start="41:82" pos:end="41:84"><name pos:start="41:82" pos:end="41:84">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:31">return <expr pos:start="43:16" pos:end="43:30"><call pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:22">AVERROR</name><argument_list pos:start="43:23" pos:end="43:30">(<argument pos:start="43:24" pos:end="43:29"><expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:44"><expr pos:start="49:5" pos:end="49:43"><call pos:start="49:5" pos:end="49:43"><name pos:start="49:5" pos:end="49:10">memset</name><argument_list pos:start="49:11" pos:end="49:43">(<argument pos:start="49:12" pos:end="49:20"><expr pos:start="49:12" pos:end="49:20"><name pos:start="49:12" pos:end="49:20"><name pos:start="49:12" pos:end="49:12">s</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:20">matrix</name></name></expr></argument>, <argument pos:start="49:23" pos:end="49:23"><expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr></argument>, <argument pos:start="49:26" pos:end="49:42"><expr pos:start="49:26" pos:end="49:42"><sizeof pos:start="49:26" pos:end="49:42">sizeof<argument_list pos:start="49:32" pos:end="49:42">(<argument pos:start="49:33" pos:end="49:41"><expr pos:start="49:33" pos:end="49:41"><name pos:start="49:33" pos:end="49:41"><name pos:start="49:33" pos:end="49:33">s</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:41">matrix</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="51:5" pos:end="57:5">for<control pos:start="51:8" pos:end="51:23">(<init pos:start="51:9" pos:end="51:12"><expr pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:9">i</name><operator pos:start="51:10" pos:end="51:10">=</operator><literal type="number" pos:start="51:11" pos:end="51:11">0</literal></expr>;</init> <condition pos:start="51:14" pos:end="51:18"><expr pos:start="51:14" pos:end="51:17"><name pos:start="51:14" pos:end="51:14">i</name><operator pos:start="51:15" pos:end="51:15">&lt;</operator><literal type="number" pos:start="51:16" pos:end="51:17">64</literal></expr>;</condition> <incr pos:start="51:20" pos:end="51:22"><expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:20">i</name><operator pos:start="51:21" pos:end="51:22">++</operator></expr></incr>)</control><block pos:start="51:24" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:30">

        <if_stmt pos:start="53:9" pos:end="55:30"><if pos:start="53:9" pos:end="55:30">if<condition pos:start="53:11" pos:end="53:52">(<expr pos:start="53:12" pos:end="53:51"><name pos:start="53:12" pos:end="53:23">in_ch_layout</name> <operator pos:start="53:25" pos:end="53:25">&amp;</operator> <name pos:start="53:27" pos:end="53:39">out_ch_layout</name> <operator pos:start="53:41" pos:end="53:41">&amp;</operator> <operator pos:start="53:43" pos:end="53:43">(</operator><literal type="number" pos:start="53:44" pos:end="53:47">1ULL</literal><operator pos:start="53:48" pos:end="53:49">&lt;&lt;</operator><name pos:start="53:50" pos:end="53:50">i</name><operator pos:start="53:51" pos:end="53:51">)</operator></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:30"><block_content pos:start="55:13" pos:end="55:30">

            <expr_stmt pos:start="55:13" pos:end="55:30"><expr pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:18">matrix</name><index pos:start="55:19" pos:end="55:21">[<expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">i</name></expr>]</index><index pos:start="55:22" pos:end="55:24">[<expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">i</name></expr>]</index></name><operator pos:start="55:25" pos:end="55:25">=</operator> <literal type="number" pos:start="55:27" pos:end="55:29">1.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:47"><expr pos:start="61:5" pos:end="61:46"><name pos:start="61:5" pos:end="61:15">unaccounted</name><operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:29">in_ch_layout</name> <operator pos:start="61:31" pos:end="61:31">&amp;</operator> <operator pos:start="61:33" pos:end="61:33">~</operator><name pos:start="61:34" pos:end="61:46">out_ch_layout</name></expr>;</expr_stmt>



<comment type="line" pos:start="65:1" pos:end="65:32">//FIXME implement dolby surround</comment>

<comment type="line" pos:start="67:1" pos:end="67:26">//FIXME implement full ac3</comment>





    <if_stmt pos:start="73:5" pos:end="95:5"><if pos:start="73:5" pos:end="95:5">if<condition pos:start="73:7" pos:end="73:40">(<expr pos:start="73:8" pos:end="73:39"><name pos:start="73:8" pos:end="73:18">unaccounted</name> <operator pos:start="73:20" pos:end="73:20">&amp;</operator> <name pos:start="73:22" pos:end="73:39">AV_CH_FRONT_CENTER</name></expr>)</condition><block pos:start="73:41" pos:end="95:5">{<block_content pos:start="75:9" pos:end="93:26">

        <if_stmt pos:start="75:9" pos:end="93:26"><if pos:start="75:9" pos:end="91:9">if<condition pos:start="75:11" pos:end="75:72">(<expr pos:start="75:12" pos:end="75:71"><operator pos:start="75:12" pos:end="75:12">(</operator><name pos:start="75:13" pos:end="75:25">out_ch_layout</name> <operator pos:start="75:27" pos:end="75:27">&amp;</operator> <name pos:start="75:29" pos:end="75:47">AV_CH_LAYOUT_STEREO</name><operator pos:start="75:48" pos:end="75:48">)</operator> <operator pos:start="75:50" pos:end="75:51">==</operator> <name pos:start="75:53" pos:end="75:71">AV_CH_LAYOUT_STEREO</name></expr>)</condition><block pos:start="75:73" pos:end="91:9">{<block_content pos:start="77:13" pos:end="89:13">

            <if_stmt pos:start="77:13" pos:end="89:13"><if pos:start="77:13" pos:end="83:13">if<condition pos:start="77:15" pos:end="77:50">(<expr pos:start="77:16" pos:end="77:49"><name pos:start="77:16" pos:end="77:27">in_ch_layout</name> <operator pos:start="77:29" pos:end="77:29">&amp;</operator> <name pos:start="77:31" pos:end="77:49">AV_CH_LAYOUT_STEREO</name></expr>)</condition> <block pos:start="77:52" pos:end="83:13">{<block_content pos:start="79:17" pos:end="81:60">

                <expr_stmt pos:start="79:17" pos:end="79:60"><expr pos:start="79:17" pos:end="79:59"><name pos:start="79:17" pos:end="79:49"><name pos:start="79:17" pos:end="79:22">matrix</name><index pos:start="79:23" pos:end="79:35">[ <expr pos:start="79:25" pos:end="79:34"><name pos:start="79:25" pos:end="79:34">FRONT_LEFT</name></expr>]</index><index pos:start="79:36" pos:end="79:49">[<expr pos:start="79:37" pos:end="79:48"><name pos:start="79:37" pos:end="79:48">FRONT_CENTER</name></expr>]</index></name><operator pos:start="79:50" pos:end="79:51">+=</operator> <name pos:start="79:53" pos:end="79:59"><name pos:start="79:53" pos:end="79:53">s</name><operator pos:start="79:54" pos:end="79:55">-&gt;</operator><name pos:start="79:56" pos:end="79:59">clev</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:60"><expr pos:start="81:17" pos:end="81:59"><name pos:start="81:17" pos:end="81:49"><name pos:start="81:17" pos:end="81:22">matrix</name><index pos:start="81:23" pos:end="81:35">[<expr pos:start="81:24" pos:end="81:34"><name pos:start="81:24" pos:end="81:34">FRONT_RIGHT</name></expr>]</index><index pos:start="81:36" pos:end="81:49">[<expr pos:start="81:37" pos:end="81:48"><name pos:start="81:37" pos:end="81:48">FRONT_CENTER</name></expr>]</index></name><operator pos:start="81:50" pos:end="81:51">+=</operator> <name pos:start="81:53" pos:end="81:59"><name pos:start="81:53" pos:end="81:53">s</name><operator pos:start="81:54" pos:end="81:55">-&gt;</operator><name pos:start="81:56" pos:end="81:59">clev</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="83:15" pos:end="89:13">else <block pos:start="83:20" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:62">

                <expr_stmt pos:start="85:17" pos:end="85:62"><expr pos:start="85:17" pos:end="85:61"><name pos:start="85:17" pos:end="85:49"><name pos:start="85:17" pos:end="85:22">matrix</name><index pos:start="85:23" pos:end="85:35">[ <expr pos:start="85:25" pos:end="85:34"><name pos:start="85:25" pos:end="85:34">FRONT_LEFT</name></expr>]</index><index pos:start="85:36" pos:end="85:49">[<expr pos:start="85:37" pos:end="85:48"><name pos:start="85:37" pos:end="85:48">FRONT_CENTER</name></expr>]</index></name><operator pos:start="85:50" pos:end="85:51">+=</operator> <name pos:start="85:53" pos:end="85:61">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:62"><expr pos:start="87:17" pos:end="87:61"><name pos:start="87:17" pos:end="87:49"><name pos:start="87:17" pos:end="87:22">matrix</name><index pos:start="87:23" pos:end="87:35">[<expr pos:start="87:24" pos:end="87:34"><name pos:start="87:24" pos:end="87:34">FRONT_RIGHT</name></expr>]</index><index pos:start="87:36" pos:end="87:49">[<expr pos:start="87:37" pos:end="87:48"><name pos:start="87:37" pos:end="87:48">FRONT_CENTER</name></expr>]</index></name><operator pos:start="87:50" pos:end="87:51">+=</operator> <name pos:start="87:53" pos:end="87:61">M_SQRT1_2</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><else pos:start="91:10" pos:end="93:26">else<block type="pseudo" pos:start="93:13" pos:end="93:26"><block_content pos:start="93:13" pos:end="93:26">

            <expr_stmt pos:start="93:13" pos:end="93:26"><expr pos:start="93:13" pos:end="93:25"><call pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:22">av_assert0</name><argument_list pos:start="93:23" pos:end="93:25">(<argument pos:start="93:24" pos:end="93:24"><expr pos:start="93:24" pos:end="93:24"><literal type="number" pos:start="93:24" pos:end="93:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="113:5"><if pos:start="97:5" pos:end="113:5">if<condition pos:start="97:7" pos:end="97:41">(<expr pos:start="97:8" pos:end="97:40"><name pos:start="97:8" pos:end="97:18">unaccounted</name> <operator pos:start="97:20" pos:end="97:20">&amp;</operator> <name pos:start="97:22" pos:end="97:40">AV_CH_LAYOUT_STEREO</name></expr>)</condition><block pos:start="97:42" pos:end="113:5">{<block_content pos:start="99:9" pos:end="111:26">

        <if_stmt pos:start="99:9" pos:end="111:26"><if pos:start="99:9" pos:end="109:9">if<condition pos:start="99:11" pos:end="99:46">(<expr pos:start="99:12" pos:end="99:45"><name pos:start="99:12" pos:end="99:24">out_ch_layout</name> <operator pos:start="99:26" pos:end="99:26">&amp;</operator> <name pos:start="99:28" pos:end="99:45">AV_CH_FRONT_CENTER</name></expr>)</condition><block pos:start="99:47" pos:end="109:9">{<block_content pos:start="101:13" pos:end="107:70">

            <expr_stmt pos:start="101:13" pos:end="101:58"><expr pos:start="101:13" pos:end="101:57"><name pos:start="101:13" pos:end="101:45"><name pos:start="101:13" pos:end="101:18">matrix</name><index pos:start="101:19" pos:end="101:32">[<expr pos:start="101:20" pos:end="101:31"><name pos:start="101:20" pos:end="101:31">FRONT_CENTER</name></expr>]</index><index pos:start="101:33" pos:end="101:45">[ <expr pos:start="101:35" pos:end="101:44"><name pos:start="101:35" pos:end="101:44">FRONT_LEFT</name></expr>]</index></name><operator pos:start="101:46" pos:end="101:47">+=</operator> <name pos:start="101:49" pos:end="101:57">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:58"><expr pos:start="103:13" pos:end="103:57"><name pos:start="103:13" pos:end="103:45"><name pos:start="103:13" pos:end="103:18">matrix</name><index pos:start="103:19" pos:end="103:32">[<expr pos:start="103:20" pos:end="103:31"><name pos:start="103:20" pos:end="103:31">FRONT_CENTER</name></expr>]</index><index pos:start="103:33" pos:end="103:45">[<expr pos:start="103:34" pos:end="103:44"><name pos:start="103:34" pos:end="103:44">FRONT_RIGHT</name></expr>]</index></name><operator pos:start="103:46" pos:end="103:47">+=</operator> <name pos:start="103:49" pos:end="103:57">M_SQRT1_2</name></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="107:70"><if pos:start="105:13" pos:end="107:70">if<condition pos:start="105:15" pos:end="105:49">(<expr pos:start="105:16" pos:end="105:48"><name pos:start="105:16" pos:end="105:27">in_ch_layout</name> <operator pos:start="105:29" pos:end="105:29">&amp;</operator> <name pos:start="105:31" pos:end="105:48">AV_CH_FRONT_CENTER</name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:70"><block_content pos:start="107:17" pos:end="107:70">

                <expr_stmt pos:start="107:17" pos:end="107:70"><expr pos:start="107:17" pos:end="107:69"><name pos:start="107:17" pos:end="107:51"><name pos:start="107:17" pos:end="107:22">matrix</name><index pos:start="107:23" pos:end="107:36">[<expr pos:start="107:24" pos:end="107:35"><name pos:start="107:24" pos:end="107:35">FRONT_CENTER</name></expr>]</index><index pos:start="107:37" pos:end="107:51">[ <expr pos:start="107:39" pos:end="107:50"><name pos:start="107:39" pos:end="107:50">FRONT_CENTER</name></expr>]</index></name> <operator pos:start="107:53" pos:end="107:53">=</operator> <name pos:start="107:55" pos:end="107:61"><name pos:start="107:55" pos:end="107:55">s</name><operator pos:start="107:56" pos:end="107:57">-&gt;</operator><name pos:start="107:58" pos:end="107:61">clev</name></name><operator pos:start="107:62" pos:end="107:62">*</operator><call pos:start="107:63" pos:end="107:69"><name pos:start="107:63" pos:end="107:66">sqrt</name><argument_list pos:start="107:67" pos:end="107:69">(<argument pos:start="107:68" pos:end="107:68"><expr pos:start="107:68" pos:end="107:68"><literal type="number" pos:start="107:68" pos:end="107:68">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if><else pos:start="109:10" pos:end="111:26">else<block type="pseudo" pos:start="111:13" pos:end="111:26"><block_content pos:start="111:13" pos:end="111:26">

            <expr_stmt pos:start="111:13" pos:end="111:26"><expr pos:start="111:13" pos:end="111:25"><call pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:22">av_assert0</name><argument_list pos:start="111:23" pos:end="111:25">(<argument pos:start="111:24" pos:end="111:24"><expr pos:start="111:24" pos:end="111:24"><literal type="number" pos:start="111:24" pos:end="111:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="117:5" pos:end="167:5"><if pos:start="117:5" pos:end="167:5">if<condition pos:start="117:7" pos:end="117:39">(<expr pos:start="117:8" pos:end="117:38"><name pos:start="117:8" pos:end="117:18">unaccounted</name> <operator pos:start="117:20" pos:end="117:20">&amp;</operator> <name pos:start="117:22" pos:end="117:38">AV_CH_BACK_CENTER</name></expr>)</condition><block pos:start="117:40" pos:end="167:5">{<block_content pos:start="119:9" pos:end="165:26">

        <if_stmt pos:start="119:9" pos:end="165:26"><if pos:start="119:9" pos:end="125:9">if<condition pos:start="119:11" pos:end="119:43">(<expr pos:start="119:12" pos:end="119:42"><name pos:start="119:12" pos:end="119:24">out_ch_layout</name> <operator pos:start="119:26" pos:end="119:26">&amp;</operator> <name pos:start="119:28" pos:end="119:42">AV_CH_BACK_LEFT</name></expr>)</condition><block pos:start="119:44" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:56">

            <expr_stmt pos:start="121:13" pos:end="121:56"><expr pos:start="121:13" pos:end="121:55"><name pos:start="121:13" pos:end="121:43"><name pos:start="121:13" pos:end="121:18">matrix</name><index pos:start="121:19" pos:end="121:30">[ <expr pos:start="121:21" pos:end="121:29"><name pos:start="121:21" pos:end="121:29">BACK_LEFT</name></expr>]</index><index pos:start="121:31" pos:end="121:43">[<expr pos:start="121:32" pos:end="121:42"><name pos:start="121:32" pos:end="121:42">BACK_CENTER</name></expr>]</index></name><operator pos:start="121:44" pos:end="121:45">+=</operator> <name pos:start="121:47" pos:end="121:55">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:56"><expr pos:start="123:13" pos:end="123:55"><name pos:start="123:13" pos:end="123:43"><name pos:start="123:13" pos:end="123:18">matrix</name><index pos:start="123:19" pos:end="123:30">[<expr pos:start="123:20" pos:end="123:29"><name pos:start="123:20" pos:end="123:29">BACK_RIGHT</name></expr>]</index><index pos:start="123:31" pos:end="123:43">[<expr pos:start="123:32" pos:end="123:42"><name pos:start="123:32" pos:end="123:42">BACK_CENTER</name></expr>]</index></name><operator pos:start="123:44" pos:end="123:45">+=</operator> <name pos:start="123:47" pos:end="123:55">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="125:10" pos:end="131:9">else if<condition pos:start="125:17" pos:end="125:49">(<expr pos:start="125:18" pos:end="125:48"><name pos:start="125:18" pos:end="125:30">out_ch_layout</name> <operator pos:start="125:32" pos:end="125:32">&amp;</operator> <name pos:start="125:34" pos:end="125:48">AV_CH_SIDE_LEFT</name></expr>)</condition><block pos:start="125:50" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:56">

            <expr_stmt pos:start="127:13" pos:end="127:56"><expr pos:start="127:13" pos:end="127:55"><name pos:start="127:13" pos:end="127:43"><name pos:start="127:13" pos:end="127:18">matrix</name><index pos:start="127:19" pos:end="127:30">[ <expr pos:start="127:21" pos:end="127:29"><name pos:start="127:21" pos:end="127:29">SIDE_LEFT</name></expr>]</index><index pos:start="127:31" pos:end="127:43">[<expr pos:start="127:32" pos:end="127:42"><name pos:start="127:32" pos:end="127:42">BACK_CENTER</name></expr>]</index></name><operator pos:start="127:44" pos:end="127:45">+=</operator> <name pos:start="127:47" pos:end="127:55">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:56"><expr pos:start="129:13" pos:end="129:55"><name pos:start="129:13" pos:end="129:43"><name pos:start="129:13" pos:end="129:18">matrix</name><index pos:start="129:19" pos:end="129:30">[<expr pos:start="129:20" pos:end="129:29"><name pos:start="129:20" pos:end="129:29">SIDE_RIGHT</name></expr>]</index><index pos:start="129:31" pos:end="129:43">[<expr pos:start="129:32" pos:end="129:42"><name pos:start="129:32" pos:end="129:42">BACK_CENTER</name></expr>]</index></name><operator pos:start="129:44" pos:end="129:45">+=</operator> <name pos:start="129:47" pos:end="129:55">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="131:10" pos:end="159:9">else if<condition pos:start="131:17" pos:end="131:50">(<expr pos:start="131:18" pos:end="131:49"><name pos:start="131:18" pos:end="131:30">out_ch_layout</name> <operator pos:start="131:32" pos:end="131:32">&amp;</operator> <name pos:start="131:34" pos:end="131:49">AV_CH_FRONT_LEFT</name></expr>)</condition><block pos:start="131:51" pos:end="159:9">{<block_content pos:start="133:13" pos:end="157:13">

            <if_stmt pos:start="133:13" pos:end="157:13"><if pos:start="133:13" pos:end="151:13">if <condition pos:start="133:16" pos:end="135:60">(<expr pos:start="133:17" pos:end="135:59"><name pos:start="133:17" pos:end="133:31">matrix_encoding</name> <operator pos:start="133:33" pos:end="133:34">==</operator> <name pos:start="133:36" pos:end="133:59">AV_MATRIX_ENCODING_DOLBY</name> <operator pos:start="133:61" pos:end="133:62">||</operator>

                <name pos:start="135:17" pos:end="135:31">matrix_encoding</name> <operator pos:start="135:33" pos:end="135:34">==</operator> <name pos:start="135:36" pos:end="135:59">AV_MATRIX_ENCODING_DPLII</name></expr>)</condition> <block pos:start="135:62" pos:end="151:13">{<block_content pos:start="137:17" pos:end="149:17">

                <if_stmt pos:start="137:17" pos:end="149:17"><if pos:start="137:17" pos:end="143:17">if <condition pos:start="137:20" pos:end="137:70">(<expr pos:start="137:21" pos:end="137:69"><name pos:start="137:21" pos:end="137:31">unaccounted</name> <operator pos:start="137:33" pos:end="137:33">&amp;</operator> <operator pos:start="137:35" pos:end="137:35">(</operator><name pos:start="137:36" pos:end="137:50">AV_CH_BACK_LEFT</name> <operator pos:start="137:52" pos:end="137:52">|</operator> <name pos:start="137:54" pos:end="137:68">AV_CH_SIDE_LEFT</name><operator pos:start="137:69" pos:end="137:69">)</operator></expr>)</condition> <block pos:start="137:72" pos:end="143:17">{<block_content pos:start="139:21" pos:end="141:76">

                    <expr_stmt pos:start="139:21" pos:end="139:76"><expr pos:start="139:21" pos:end="139:75"><name pos:start="139:21" pos:end="139:52"><name pos:start="139:21" pos:end="139:26">matrix</name><index pos:start="139:27" pos:end="139:39">[<expr pos:start="139:28" pos:end="139:37"><name pos:start="139:28" pos:end="139:37">FRONT_LEFT</name></expr> ]</index><index pos:start="139:40" pos:end="139:52">[<expr pos:start="139:41" pos:end="139:51"><name pos:start="139:41" pos:end="139:51">BACK_CENTER</name></expr>]</index></name> <operator pos:start="139:54" pos:end="139:55">-=</operator> <name pos:start="139:57" pos:end="139:63"><name pos:start="139:57" pos:end="139:57">s</name><operator pos:start="139:58" pos:end="139:59">-&gt;</operator><name pos:start="139:60" pos:end="139:63">slev</name></name> <operator pos:start="139:65" pos:end="139:65">*</operator> <name pos:start="139:67" pos:end="139:75">M_SQRT1_2</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:76"><expr pos:start="141:21" pos:end="141:75"><name pos:start="141:21" pos:end="141:52"><name pos:start="141:21" pos:end="141:26">matrix</name><index pos:start="141:27" pos:end="141:39">[<expr pos:start="141:28" pos:end="141:38"><name pos:start="141:28" pos:end="141:38">FRONT_RIGHT</name></expr>]</index><index pos:start="141:40" pos:end="141:52">[<expr pos:start="141:41" pos:end="141:51"><name pos:start="141:41" pos:end="141:51">BACK_CENTER</name></expr>]</index></name> <operator pos:start="141:54" pos:end="141:55">+=</operator> <name pos:start="141:57" pos:end="141:63"><name pos:start="141:57" pos:end="141:57">s</name><operator pos:start="141:58" pos:end="141:59">-&gt;</operator><name pos:start="141:60" pos:end="141:63">slev</name></name> <operator pos:start="141:65" pos:end="141:65">*</operator> <name pos:start="141:67" pos:end="141:75">M_SQRT1_2</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="143:19" pos:end="149:17">else <block pos:start="143:24" pos:end="149:17">{<block_content pos:start="145:21" pos:end="147:64">

                    <expr_stmt pos:start="145:21" pos:end="145:64"><expr pos:start="145:21" pos:end="145:63"><name pos:start="145:21" pos:end="145:52"><name pos:start="145:21" pos:end="145:26">matrix</name><index pos:start="145:27" pos:end="145:39">[<expr pos:start="145:28" pos:end="145:37"><name pos:start="145:28" pos:end="145:37">FRONT_LEFT</name></expr> ]</index><index pos:start="145:40" pos:end="145:52">[<expr pos:start="145:41" pos:end="145:51"><name pos:start="145:41" pos:end="145:51">BACK_CENTER</name></expr>]</index></name> <operator pos:start="145:54" pos:end="145:55">-=</operator> <name pos:start="145:57" pos:end="145:63"><name pos:start="145:57" pos:end="145:57">s</name><operator pos:start="145:58" pos:end="145:59">-&gt;</operator><name pos:start="145:60" pos:end="145:63">slev</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:64"><expr pos:start="147:21" pos:end="147:63"><name pos:start="147:21" pos:end="147:52"><name pos:start="147:21" pos:end="147:26">matrix</name><index pos:start="147:27" pos:end="147:39">[<expr pos:start="147:28" pos:end="147:38"><name pos:start="147:28" pos:end="147:38">FRONT_RIGHT</name></expr>]</index><index pos:start="147:40" pos:end="147:52">[<expr pos:start="147:41" pos:end="147:51"><name pos:start="147:41" pos:end="147:51">BACK_CENTER</name></expr>]</index></name> <operator pos:start="147:54" pos:end="147:55">+=</operator> <name pos:start="147:57" pos:end="147:63"><name pos:start="147:57" pos:end="147:57">s</name><operator pos:start="147:58" pos:end="147:59">-&gt;</operator><name pos:start="147:60" pos:end="147:63">slev</name></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="151:15" pos:end="157:13">else <block pos:start="151:20" pos:end="157:13">{<block_content pos:start="153:17" pos:end="155:69">

                <expr_stmt pos:start="153:17" pos:end="153:69"><expr pos:start="153:17" pos:end="153:68"><name pos:start="153:17" pos:end="153:48"><name pos:start="153:17" pos:end="153:22">matrix</name><index pos:start="153:23" pos:end="153:35">[ <expr pos:start="153:25" pos:end="153:34"><name pos:start="153:25" pos:end="153:34">FRONT_LEFT</name></expr>]</index><index pos:start="153:36" pos:end="153:48">[<expr pos:start="153:37" pos:end="153:47"><name pos:start="153:37" pos:end="153:47">BACK_CENTER</name></expr>]</index></name><operator pos:start="153:49" pos:end="153:50">+=</operator> <name pos:start="153:52" pos:end="153:58"><name pos:start="153:52" pos:end="153:52">s</name><operator pos:start="153:53" pos:end="153:54">-&gt;</operator><name pos:start="153:55" pos:end="153:58">slev</name></name><operator pos:start="153:59" pos:end="153:59">*</operator><name pos:start="153:60" pos:end="153:68">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:69"><expr pos:start="155:17" pos:end="155:68"><name pos:start="155:17" pos:end="155:48"><name pos:start="155:17" pos:end="155:22">matrix</name><index pos:start="155:23" pos:end="155:35">[<expr pos:start="155:24" pos:end="155:34"><name pos:start="155:24" pos:end="155:34">FRONT_RIGHT</name></expr>]</index><index pos:start="155:36" pos:end="155:48">[<expr pos:start="155:37" pos:end="155:47"><name pos:start="155:37" pos:end="155:47">BACK_CENTER</name></expr>]</index></name><operator pos:start="155:49" pos:end="155:50">+=</operator> <name pos:start="155:52" pos:end="155:58"><name pos:start="155:52" pos:end="155:52">s</name><operator pos:start="155:53" pos:end="155:54">-&gt;</operator><name pos:start="155:55" pos:end="155:58">slev</name></name><operator pos:start="155:59" pos:end="155:59">*</operator><name pos:start="155:60" pos:end="155:68">M_SQRT1_2</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="159:10" pos:end="163:9">else if<condition pos:start="159:17" pos:end="159:52">(<expr pos:start="159:18" pos:end="159:51"><name pos:start="159:18" pos:end="159:30">out_ch_layout</name> <operator pos:start="159:32" pos:end="159:32">&amp;</operator> <name pos:start="159:34" pos:end="159:51">AV_CH_FRONT_CENTER</name></expr>)</condition><block pos:start="159:53" pos:end="163:9">{<block_content pos:start="161:13" pos:end="161:67">

            <expr_stmt pos:start="161:13" pos:end="161:67"><expr pos:start="161:13" pos:end="161:66"><name pos:start="161:13" pos:end="161:46"><name pos:start="161:13" pos:end="161:18">matrix</name><index pos:start="161:19" pos:end="161:33">[ <expr pos:start="161:21" pos:end="161:32"><name pos:start="161:21" pos:end="161:32">FRONT_CENTER</name></expr>]</index><index pos:start="161:34" pos:end="161:46">[<expr pos:start="161:35" pos:end="161:45"><name pos:start="161:35" pos:end="161:45">BACK_CENTER</name></expr>]</index></name><operator pos:start="161:47" pos:end="161:48">+=</operator> <name pos:start="161:50" pos:end="161:56"><name pos:start="161:50" pos:end="161:50">s</name><operator pos:start="161:51" pos:end="161:52">-&gt;</operator><name pos:start="161:53" pos:end="161:56">slev</name></name><operator pos:start="161:57" pos:end="161:57">*</operator><name pos:start="161:58" pos:end="161:66">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="163:10" pos:end="165:26">else<block type="pseudo" pos:start="165:13" pos:end="165:26"><block_content pos:start="165:13" pos:end="165:26">

            <expr_stmt pos:start="165:13" pos:end="165:26"><expr pos:start="165:13" pos:end="165:25"><call pos:start="165:13" pos:end="165:25"><name pos:start="165:13" pos:end="165:22">av_assert0</name><argument_list pos:start="165:23" pos:end="165:25">(<argument pos:start="165:24" pos:end="165:24"><expr pos:start="165:24" pos:end="165:24"><literal type="number" pos:start="165:24" pos:end="165:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="169:5" pos:end="233:5"><if pos:start="169:5" pos:end="233:5">if<condition pos:start="169:7" pos:end="169:37">(<expr pos:start="169:8" pos:end="169:36"><name pos:start="169:8" pos:end="169:18">unaccounted</name> <operator pos:start="169:20" pos:end="169:20">&amp;</operator> <name pos:start="169:22" pos:end="169:36">AV_CH_BACK_LEFT</name></expr>)</condition><block pos:start="169:38" pos:end="233:5">{<block_content pos:start="171:9" pos:end="231:26">

        <if_stmt pos:start="171:9" pos:end="231:26"><if pos:start="171:9" pos:end="177:9">if<condition pos:start="171:11" pos:end="171:45">(<expr pos:start="171:12" pos:end="171:44"><name pos:start="171:12" pos:end="171:24">out_ch_layout</name> <operator pos:start="171:26" pos:end="171:26">&amp;</operator> <name pos:start="171:28" pos:end="171:44">AV_CH_BACK_CENTER</name></expr>)</condition><block pos:start="171:46" pos:end="177:9">{<block_content pos:start="173:13" pos:end="175:56">

            <expr_stmt pos:start="173:13" pos:end="173:56"><expr pos:start="173:13" pos:end="173:55"><name pos:start="173:13" pos:end="173:43"><name pos:start="173:13" pos:end="173:18">matrix</name><index pos:start="173:19" pos:end="173:31">[<expr pos:start="173:20" pos:end="173:30"><name pos:start="173:20" pos:end="173:30">BACK_CENTER</name></expr>]</index><index pos:start="173:32" pos:end="173:43">[ <expr pos:start="173:34" pos:end="173:42"><name pos:start="173:34" pos:end="173:42">BACK_LEFT</name></expr>]</index></name><operator pos:start="173:44" pos:end="173:45">+=</operator> <name pos:start="173:47" pos:end="173:55">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:56"><expr pos:start="175:13" pos:end="175:55"><name pos:start="175:13" pos:end="175:43"><name pos:start="175:13" pos:end="175:18">matrix</name><index pos:start="175:19" pos:end="175:31">[<expr pos:start="175:20" pos:end="175:30"><name pos:start="175:20" pos:end="175:30">BACK_CENTER</name></expr>]</index><index pos:start="175:32" pos:end="175:43">[<expr pos:start="175:33" pos:end="175:42"><name pos:start="175:33" pos:end="175:42">BACK_RIGHT</name></expr>]</index></name><operator pos:start="175:44" pos:end="175:45">+=</operator> <name pos:start="175:47" pos:end="175:55">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="177:10" pos:end="193:9">else if<condition pos:start="177:17" pos:end="177:49">(<expr pos:start="177:18" pos:end="177:48"><name pos:start="177:18" pos:end="177:30">out_ch_layout</name> <operator pos:start="177:32" pos:end="177:32">&amp;</operator> <name pos:start="177:34" pos:end="177:48">AV_CH_SIDE_LEFT</name></expr>)</condition><block pos:start="177:50" pos:end="193:9">{<block_content pos:start="179:13" pos:end="191:13">

            <if_stmt pos:start="179:13" pos:end="191:13"><if pos:start="179:13" pos:end="185:13">if<condition pos:start="179:15" pos:end="179:46">(<expr pos:start="179:16" pos:end="179:45"><name pos:start="179:16" pos:end="179:27">in_ch_layout</name> <operator pos:start="179:29" pos:end="179:29">&amp;</operator> <name pos:start="179:31" pos:end="179:45">AV_CH_SIDE_LEFT</name></expr>)</condition><block pos:start="179:47" pos:end="185:13">{<block_content pos:start="181:17" pos:end="183:59">

                <expr_stmt pos:start="181:17" pos:end="181:59"><expr pos:start="181:17" pos:end="181:58"><name pos:start="181:17" pos:end="181:46"><name pos:start="181:17" pos:end="181:22">matrix</name><index pos:start="181:23" pos:end="181:34">[ <expr pos:start="181:25" pos:end="181:33"><name pos:start="181:25" pos:end="181:33">SIDE_LEFT</name></expr>]</index><index pos:start="181:35" pos:end="181:46">[ <expr pos:start="181:37" pos:end="181:45"><name pos:start="181:37" pos:end="181:45">BACK_LEFT</name></expr>]</index></name><operator pos:start="181:47" pos:end="181:48">+=</operator> <name pos:start="181:50" pos:end="181:58">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:59"><expr pos:start="183:17" pos:end="183:58"><name pos:start="183:17" pos:end="183:46"><name pos:start="183:17" pos:end="183:22">matrix</name><index pos:start="183:23" pos:end="183:34">[<expr pos:start="183:24" pos:end="183:33"><name pos:start="183:24" pos:end="183:33">SIDE_RIGHT</name></expr>]</index><index pos:start="183:35" pos:end="183:46">[<expr pos:start="183:36" pos:end="183:45"><name pos:start="183:36" pos:end="183:45">BACK_RIGHT</name></expr>]</index></name><operator pos:start="183:47" pos:end="183:48">+=</operator> <name pos:start="183:50" pos:end="183:58">M_SQRT1_2</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="185:14" pos:end="191:13">else<block pos:start="185:18" pos:end="191:13">{<block_content pos:start="187:13" pos:end="189:49">

            <expr_stmt pos:start="187:13" pos:end="187:49"><expr pos:start="187:13" pos:end="187:48"><name pos:start="187:13" pos:end="187:42"><name pos:start="187:13" pos:end="187:18">matrix</name><index pos:start="187:19" pos:end="187:30">[ <expr pos:start="187:21" pos:end="187:29"><name pos:start="187:21" pos:end="187:29">SIDE_LEFT</name></expr>]</index><index pos:start="187:31" pos:end="187:42">[ <expr pos:start="187:33" pos:end="187:41"><name pos:start="187:33" pos:end="187:41">BACK_LEFT</name></expr>]</index></name><operator pos:start="187:43" pos:end="187:44">+=</operator> <literal type="number" pos:start="187:46" pos:end="187:48">1.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:49"><expr pos:start="189:13" pos:end="189:48"><name pos:start="189:13" pos:end="189:42"><name pos:start="189:13" pos:end="189:18">matrix</name><index pos:start="189:19" pos:end="189:30">[<expr pos:start="189:20" pos:end="189:29"><name pos:start="189:20" pos:end="189:29">SIDE_RIGHT</name></expr>]</index><index pos:start="189:31" pos:end="189:42">[<expr pos:start="189:32" pos:end="189:41"><name pos:start="189:32" pos:end="189:41">BACK_RIGHT</name></expr>]</index></name><operator pos:start="189:43" pos:end="189:44">+=</operator> <literal type="number" pos:start="189:46" pos:end="189:48">1.0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="193:10" pos:end="223:9">else if<condition pos:start="193:17" pos:end="193:50">(<expr pos:start="193:18" pos:end="193:49"><name pos:start="193:18" pos:end="193:30">out_ch_layout</name> <operator pos:start="193:32" pos:end="193:32">&amp;</operator> <name pos:start="193:34" pos:end="193:49">AV_CH_FRONT_LEFT</name></expr>)</condition><block pos:start="193:51" pos:end="223:9">{<block_content pos:start="195:13" pos:end="221:13">

            <if_stmt pos:start="195:13" pos:end="221:13"><if pos:start="195:13" pos:end="205:13">if <condition pos:start="195:16" pos:end="195:60">(<expr pos:start="195:17" pos:end="195:59"><name pos:start="195:17" pos:end="195:31">matrix_encoding</name> <operator pos:start="195:33" pos:end="195:34">==</operator> <name pos:start="195:36" pos:end="195:59">AV_MATRIX_ENCODING_DOLBY</name></expr>)</condition> <block pos:start="195:62" pos:end="205:13">{<block_content pos:start="197:17" pos:end="203:71">

                <expr_stmt pos:start="197:17" pos:end="197:71"><expr pos:start="197:17" pos:end="197:70"><name pos:start="197:17" pos:end="197:47"><name pos:start="197:17" pos:end="197:22">matrix</name><index pos:start="197:23" pos:end="197:35">[<expr pos:start="197:24" pos:end="197:33"><name pos:start="197:24" pos:end="197:33">FRONT_LEFT</name></expr> ]</index><index pos:start="197:36" pos:end="197:47">[<expr pos:start="197:37" pos:end="197:45"><name pos:start="197:37" pos:end="197:45">BACK_LEFT</name></expr> ]</index></name> <operator pos:start="197:49" pos:end="197:50">-=</operator> <name pos:start="197:52" pos:end="197:58"><name pos:start="197:52" pos:end="197:52">s</name><operator pos:start="197:53" pos:end="197:54">-&gt;</operator><name pos:start="197:55" pos:end="197:58">slev</name></name> <operator pos:start="197:60" pos:end="197:60">*</operator> <name pos:start="197:62" pos:end="197:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:71"><expr pos:start="199:17" pos:end="199:70"><name pos:start="199:17" pos:end="199:47"><name pos:start="199:17" pos:end="199:22">matrix</name><index pos:start="199:23" pos:end="199:35">[<expr pos:start="199:24" pos:end="199:33"><name pos:start="199:24" pos:end="199:33">FRONT_LEFT</name></expr> ]</index><index pos:start="199:36" pos:end="199:47">[<expr pos:start="199:37" pos:end="199:46"><name pos:start="199:37" pos:end="199:46">BACK_RIGHT</name></expr>]</index></name> <operator pos:start="199:49" pos:end="199:50">-=</operator> <name pos:start="199:52" pos:end="199:58"><name pos:start="199:52" pos:end="199:52">s</name><operator pos:start="199:53" pos:end="199:54">-&gt;</operator><name pos:start="199:55" pos:end="199:58">slev</name></name> <operator pos:start="199:60" pos:end="199:60">*</operator> <name pos:start="199:62" pos:end="199:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:71"><expr pos:start="201:17" pos:end="201:70"><name pos:start="201:17" pos:end="201:47"><name pos:start="201:17" pos:end="201:22">matrix</name><index pos:start="201:23" pos:end="201:35">[<expr pos:start="201:24" pos:end="201:34"><name pos:start="201:24" pos:end="201:34">FRONT_RIGHT</name></expr>]</index><index pos:start="201:36" pos:end="201:47">[<expr pos:start="201:37" pos:end="201:45"><name pos:start="201:37" pos:end="201:45">BACK_LEFT</name></expr> ]</index></name> <operator pos:start="201:49" pos:end="201:50">+=</operator> <name pos:start="201:52" pos:end="201:58"><name pos:start="201:52" pos:end="201:52">s</name><operator pos:start="201:53" pos:end="201:54">-&gt;</operator><name pos:start="201:55" pos:end="201:58">slev</name></name> <operator pos:start="201:60" pos:end="201:60">*</operator> <name pos:start="201:62" pos:end="201:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:71"><expr pos:start="203:17" pos:end="203:70"><name pos:start="203:17" pos:end="203:47"><name pos:start="203:17" pos:end="203:22">matrix</name><index pos:start="203:23" pos:end="203:35">[<expr pos:start="203:24" pos:end="203:34"><name pos:start="203:24" pos:end="203:34">FRONT_RIGHT</name></expr>]</index><index pos:start="203:36" pos:end="203:47">[<expr pos:start="203:37" pos:end="203:46"><name pos:start="203:37" pos:end="203:46">BACK_RIGHT</name></expr>]</index></name> <operator pos:start="203:49" pos:end="203:50">+=</operator> <name pos:start="203:52" pos:end="203:58"><name pos:start="203:52" pos:end="203:52">s</name><operator pos:start="203:53" pos:end="203:54">-&gt;</operator><name pos:start="203:55" pos:end="203:58">slev</name></name> <operator pos:start="203:60" pos:end="203:60">*</operator> <name pos:start="203:62" pos:end="203:70">M_SQRT1_2</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="205:15" pos:end="215:13">else if <condition pos:start="205:23" pos:end="205:67">(<expr pos:start="205:24" pos:end="205:66"><name pos:start="205:24" pos:end="205:38">matrix_encoding</name> <operator pos:start="205:40" pos:end="205:41">==</operator> <name pos:start="205:43" pos:end="205:66">AV_MATRIX_ENCODING_DPLII</name></expr>)</condition> <block pos:start="205:69" pos:end="215:13">{<block_content pos:start="207:17" pos:end="213:69">

                <expr_stmt pos:start="207:17" pos:end="207:69"><expr pos:start="207:17" pos:end="207:68"><name pos:start="207:17" pos:end="207:47"><name pos:start="207:17" pos:end="207:22">matrix</name><index pos:start="207:23" pos:end="207:35">[<expr pos:start="207:24" pos:end="207:33"><name pos:start="207:24" pos:end="207:33">FRONT_LEFT</name></expr> ]</index><index pos:start="207:36" pos:end="207:47">[<expr pos:start="207:37" pos:end="207:45"><name pos:start="207:37" pos:end="207:45">BACK_LEFT</name></expr> ]</index></name> <operator pos:start="207:49" pos:end="207:50">-=</operator> <name pos:start="207:52" pos:end="207:58"><name pos:start="207:52" pos:end="207:52">s</name><operator pos:start="207:53" pos:end="207:54">-&gt;</operator><name pos:start="207:55" pos:end="207:58">slev</name></name> <operator pos:start="207:60" pos:end="207:60">*</operator> <name pos:start="207:62" pos:end="207:68">SQRT3_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:71"><expr pos:start="209:17" pos:end="209:70"><name pos:start="209:17" pos:end="209:47"><name pos:start="209:17" pos:end="209:22">matrix</name><index pos:start="209:23" pos:end="209:35">[<expr pos:start="209:24" pos:end="209:33"><name pos:start="209:24" pos:end="209:33">FRONT_LEFT</name></expr> ]</index><index pos:start="209:36" pos:end="209:47">[<expr pos:start="209:37" pos:end="209:46"><name pos:start="209:37" pos:end="209:46">BACK_RIGHT</name></expr>]</index></name> <operator pos:start="209:49" pos:end="209:50">-=</operator> <name pos:start="209:52" pos:end="209:58"><name pos:start="209:52" pos:end="209:52">s</name><operator pos:start="209:53" pos:end="209:54">-&gt;</operator><name pos:start="209:55" pos:end="209:58">slev</name></name> <operator pos:start="209:60" pos:end="209:60">*</operator> <name pos:start="209:62" pos:end="209:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:71"><expr pos:start="211:17" pos:end="211:70"><name pos:start="211:17" pos:end="211:47"><name pos:start="211:17" pos:end="211:22">matrix</name><index pos:start="211:23" pos:end="211:35">[<expr pos:start="211:24" pos:end="211:34"><name pos:start="211:24" pos:end="211:34">FRONT_RIGHT</name></expr>]</index><index pos:start="211:36" pos:end="211:47">[<expr pos:start="211:37" pos:end="211:45"><name pos:start="211:37" pos:end="211:45">BACK_LEFT</name></expr> ]</index></name> <operator pos:start="211:49" pos:end="211:50">+=</operator> <name pos:start="211:52" pos:end="211:58"><name pos:start="211:52" pos:end="211:52">s</name><operator pos:start="211:53" pos:end="211:54">-&gt;</operator><name pos:start="211:55" pos:end="211:58">slev</name></name> <operator pos:start="211:60" pos:end="211:60">*</operator> <name pos:start="211:62" pos:end="211:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:69"><expr pos:start="213:17" pos:end="213:68"><name pos:start="213:17" pos:end="213:47"><name pos:start="213:17" pos:end="213:22">matrix</name><index pos:start="213:23" pos:end="213:35">[<expr pos:start="213:24" pos:end="213:34"><name pos:start="213:24" pos:end="213:34">FRONT_RIGHT</name></expr>]</index><index pos:start="213:36" pos:end="213:47">[<expr pos:start="213:37" pos:end="213:46"><name pos:start="213:37" pos:end="213:46">BACK_RIGHT</name></expr>]</index></name> <operator pos:start="213:49" pos:end="213:50">+=</operator> <name pos:start="213:52" pos:end="213:58"><name pos:start="213:52" pos:end="213:52">s</name><operator pos:start="213:53" pos:end="213:54">-&gt;</operator><name pos:start="213:55" pos:end="213:58">slev</name></name> <operator pos:start="213:60" pos:end="213:60">*</operator> <name pos:start="213:62" pos:end="213:68">SQRT3_2</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="215:15" pos:end="221:13">else <block pos:start="215:20" pos:end="221:13">{<block_content pos:start="217:17" pos:end="219:59">

                <expr_stmt pos:start="217:17" pos:end="217:59"><expr pos:start="217:17" pos:end="217:58"><name pos:start="217:17" pos:end="217:47"><name pos:start="217:17" pos:end="217:22">matrix</name><index pos:start="217:23" pos:end="217:35">[ <expr pos:start="217:25" pos:end="217:34"><name pos:start="217:25" pos:end="217:34">FRONT_LEFT</name></expr>]</index><index pos:start="217:36" pos:end="217:47">[ <expr pos:start="217:38" pos:end="217:46"><name pos:start="217:38" pos:end="217:46">BACK_LEFT</name></expr>]</index></name> <operator pos:start="217:49" pos:end="217:50">+=</operator> <name pos:start="217:52" pos:end="217:58"><name pos:start="217:52" pos:end="217:52">s</name><operator pos:start="217:53" pos:end="217:54">-&gt;</operator><name pos:start="217:55" pos:end="217:58">slev</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:59"><expr pos:start="219:17" pos:end="219:58"><name pos:start="219:17" pos:end="219:47"><name pos:start="219:17" pos:end="219:22">matrix</name><index pos:start="219:23" pos:end="219:35">[<expr pos:start="219:24" pos:end="219:34"><name pos:start="219:24" pos:end="219:34">FRONT_RIGHT</name></expr>]</index><index pos:start="219:36" pos:end="219:47">[<expr pos:start="219:37" pos:end="219:46"><name pos:start="219:37" pos:end="219:46">BACK_RIGHT</name></expr>]</index></name> <operator pos:start="219:49" pos:end="219:50">+=</operator> <name pos:start="219:52" pos:end="219:58"><name pos:start="219:52" pos:end="219:52">s</name><operator pos:start="219:53" pos:end="219:54">-&gt;</operator><name pos:start="219:55" pos:end="219:58">slev</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="223:10" pos:end="229:9">else if<condition pos:start="223:17" pos:end="223:52">(<expr pos:start="223:18" pos:end="223:51"><name pos:start="223:18" pos:end="223:30">out_ch_layout</name> <operator pos:start="223:32" pos:end="223:32">&amp;</operator> <name pos:start="223:34" pos:end="223:51">AV_CH_FRONT_CENTER</name></expr>)</condition><block pos:start="223:53" pos:end="229:9">{<block_content pos:start="225:13" pos:end="227:66">

            <expr_stmt pos:start="225:13" pos:end="225:66"><expr pos:start="225:13" pos:end="225:65"><name pos:start="225:13" pos:end="225:45"><name pos:start="225:13" pos:end="225:18">matrix</name><index pos:start="225:19" pos:end="225:33">[ <expr pos:start="225:21" pos:end="225:32"><name pos:start="225:21" pos:end="225:32">FRONT_CENTER</name></expr>]</index><index pos:start="225:34" pos:end="225:45">[<expr pos:start="225:35" pos:end="225:43"><name pos:start="225:35" pos:end="225:43">BACK_LEFT</name></expr> ]</index></name><operator pos:start="225:46" pos:end="225:47">+=</operator> <name pos:start="225:49" pos:end="225:55"><name pos:start="225:49" pos:end="225:49">s</name><operator pos:start="225:50" pos:end="225:51">-&gt;</operator><name pos:start="225:52" pos:end="225:55">slev</name></name><operator pos:start="225:56" pos:end="225:56">*</operator><name pos:start="225:57" pos:end="225:65">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:66"><expr pos:start="227:13" pos:end="227:65"><name pos:start="227:13" pos:end="227:45"><name pos:start="227:13" pos:end="227:18">matrix</name><index pos:start="227:19" pos:end="227:33">[ <expr pos:start="227:21" pos:end="227:32"><name pos:start="227:21" pos:end="227:32">FRONT_CENTER</name></expr>]</index><index pos:start="227:34" pos:end="227:45">[<expr pos:start="227:35" pos:end="227:44"><name pos:start="227:35" pos:end="227:44">BACK_RIGHT</name></expr>]</index></name><operator pos:start="227:46" pos:end="227:47">+=</operator> <name pos:start="227:49" pos:end="227:55"><name pos:start="227:49" pos:end="227:49">s</name><operator pos:start="227:50" pos:end="227:51">-&gt;</operator><name pos:start="227:52" pos:end="227:55">slev</name></name><operator pos:start="227:56" pos:end="227:56">*</operator><name pos:start="227:57" pos:end="227:65">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="229:10" pos:end="231:26">else<block type="pseudo" pos:start="231:13" pos:end="231:26"><block_content pos:start="231:13" pos:end="231:26">

            <expr_stmt pos:start="231:13" pos:end="231:26"><expr pos:start="231:13" pos:end="231:25"><call pos:start="231:13" pos:end="231:25"><name pos:start="231:13" pos:end="231:22">av_assert0</name><argument_list pos:start="231:23" pos:end="231:25">(<argument pos:start="231:24" pos:end="231:24"><expr pos:start="231:24" pos:end="231:24"><literal type="number" pos:start="231:24" pos:end="231:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="237:5" pos:end="305:5"><if pos:start="237:5" pos:end="305:5">if<condition pos:start="237:7" pos:end="237:37">(<expr pos:start="237:8" pos:end="237:36"><name pos:start="237:8" pos:end="237:18">unaccounted</name> <operator pos:start="237:20" pos:end="237:20">&amp;</operator> <name pos:start="237:22" pos:end="237:36">AV_CH_SIDE_LEFT</name></expr>)</condition><block pos:start="237:38" pos:end="305:5">{<block_content pos:start="239:9" pos:end="303:26">

        <if_stmt pos:start="239:9" pos:end="303:26"><if pos:start="239:9" pos:end="259:9">if<condition pos:start="239:11" pos:end="239:43">(<expr pos:start="239:12" pos:end="239:42"><name pos:start="239:12" pos:end="239:24">out_ch_layout</name> <operator pos:start="239:26" pos:end="239:26">&amp;</operator> <name pos:start="239:28" pos:end="239:42">AV_CH_BACK_LEFT</name></expr>)</condition><block pos:start="239:44" pos:end="259:9">{<block_content pos:start="245:13" pos:end="257:13">

            <comment type="block" pos:start="241:13" pos:end="243:73">/* if back channels do not exist in the input, just copy side

               channels to back channels, otherwise mix side into back */</comment>

            <if_stmt pos:start="245:13" pos:end="257:13"><if pos:start="245:13" pos:end="251:13">if <condition pos:start="245:16" pos:end="245:47">(<expr pos:start="245:17" pos:end="245:46"><name pos:start="245:17" pos:end="245:28">in_ch_layout</name> <operator pos:start="245:30" pos:end="245:30">&amp;</operator> <name pos:start="245:32" pos:end="245:46">AV_CH_BACK_LEFT</name></expr>)</condition> <block pos:start="245:49" pos:end="251:13">{<block_content pos:start="247:17" pos:end="249:60">

                <expr_stmt pos:start="247:17" pos:end="247:60"><expr pos:start="247:17" pos:end="247:59"><name pos:start="247:17" pos:end="247:46"><name pos:start="247:17" pos:end="247:22">matrix</name><index pos:start="247:23" pos:end="247:34">[<expr pos:start="247:24" pos:end="247:32"><name pos:start="247:24" pos:end="247:32">BACK_LEFT</name></expr> ]</index><index pos:start="247:35" pos:end="247:46">[<expr pos:start="247:36" pos:end="247:44"><name pos:start="247:36" pos:end="247:44">SIDE_LEFT</name></expr> ]</index></name> <operator pos:start="247:48" pos:end="247:49">+=</operator> <name pos:start="247:51" pos:end="247:59">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:60"><expr pos:start="249:17" pos:end="249:59"><name pos:start="249:17" pos:end="249:46"><name pos:start="249:17" pos:end="249:22">matrix</name><index pos:start="249:23" pos:end="249:34">[<expr pos:start="249:24" pos:end="249:33"><name pos:start="249:24" pos:end="249:33">BACK_RIGHT</name></expr>]</index><index pos:start="249:35" pos:end="249:46">[<expr pos:start="249:36" pos:end="249:45"><name pos:start="249:36" pos:end="249:45">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="249:48" pos:end="249:49">+=</operator> <name pos:start="249:51" pos:end="249:59">M_SQRT1_2</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="251:15" pos:end="257:13">else <block pos:start="251:20" pos:end="257:13">{<block_content pos:start="253:17" pos:end="255:54">

                <expr_stmt pos:start="253:17" pos:end="253:54"><expr pos:start="253:17" pos:end="253:53"><name pos:start="253:17" pos:end="253:46"><name pos:start="253:17" pos:end="253:22">matrix</name><index pos:start="253:23" pos:end="253:34">[<expr pos:start="253:24" pos:end="253:32"><name pos:start="253:24" pos:end="253:32">BACK_LEFT</name></expr> ]</index><index pos:start="253:35" pos:end="253:46">[<expr pos:start="253:36" pos:end="253:44"><name pos:start="253:36" pos:end="253:44">SIDE_LEFT</name></expr> ]</index></name> <operator pos:start="253:48" pos:end="253:49">+=</operator> <literal type="number" pos:start="253:51" pos:end="253:53">1.0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:54"><expr pos:start="255:17" pos:end="255:53"><name pos:start="255:17" pos:end="255:46"><name pos:start="255:17" pos:end="255:22">matrix</name><index pos:start="255:23" pos:end="255:34">[<expr pos:start="255:24" pos:end="255:33"><name pos:start="255:24" pos:end="255:33">BACK_RIGHT</name></expr>]</index><index pos:start="255:35" pos:end="255:46">[<expr pos:start="255:36" pos:end="255:45"><name pos:start="255:36" pos:end="255:45">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="255:48" pos:end="255:49">+=</operator> <literal type="number" pos:start="255:51" pos:end="255:53">1.0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="259:10" pos:end="265:9">else if<condition pos:start="259:17" pos:end="259:51">(<expr pos:start="259:18" pos:end="259:50"><name pos:start="259:18" pos:end="259:30">out_ch_layout</name> <operator pos:start="259:32" pos:end="259:32">&amp;</operator> <name pos:start="259:34" pos:end="259:50">AV_CH_BACK_CENTER</name></expr>)</condition><block pos:start="259:52" pos:end="265:9">{<block_content pos:start="261:13" pos:end="263:56">

            <expr_stmt pos:start="261:13" pos:end="261:56"><expr pos:start="261:13" pos:end="261:55"><name pos:start="261:13" pos:end="261:43"><name pos:start="261:13" pos:end="261:18">matrix</name><index pos:start="261:19" pos:end="261:31">[<expr pos:start="261:20" pos:end="261:30"><name pos:start="261:20" pos:end="261:30">BACK_CENTER</name></expr>]</index><index pos:start="261:32" pos:end="261:43">[ <expr pos:start="261:34" pos:end="261:42"><name pos:start="261:34" pos:end="261:42">SIDE_LEFT</name></expr>]</index></name><operator pos:start="261:44" pos:end="261:45">+=</operator> <name pos:start="261:47" pos:end="261:55">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:56"><expr pos:start="263:13" pos:end="263:55"><name pos:start="263:13" pos:end="263:43"><name pos:start="263:13" pos:end="263:18">matrix</name><index pos:start="263:19" pos:end="263:31">[<expr pos:start="263:20" pos:end="263:30"><name pos:start="263:20" pos:end="263:30">BACK_CENTER</name></expr>]</index><index pos:start="263:32" pos:end="263:43">[<expr pos:start="263:33" pos:end="263:42"><name pos:start="263:33" pos:end="263:42">SIDE_RIGHT</name></expr>]</index></name><operator pos:start="263:44" pos:end="263:45">+=</operator> <name pos:start="263:47" pos:end="263:55">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="265:10" pos:end="295:9">else if<condition pos:start="265:17" pos:end="265:50">(<expr pos:start="265:18" pos:end="265:49"><name pos:start="265:18" pos:end="265:30">out_ch_layout</name> <operator pos:start="265:32" pos:end="265:32">&amp;</operator> <name pos:start="265:34" pos:end="265:49">AV_CH_FRONT_LEFT</name></expr>)</condition><block pos:start="265:51" pos:end="295:9">{<block_content pos:start="267:13" pos:end="293:13">

            <if_stmt pos:start="267:13" pos:end="293:13"><if pos:start="267:13" pos:end="277:13">if <condition pos:start="267:16" pos:end="267:60">(<expr pos:start="267:17" pos:end="267:59"><name pos:start="267:17" pos:end="267:31">matrix_encoding</name> <operator pos:start="267:33" pos:end="267:34">==</operator> <name pos:start="267:36" pos:end="267:59">AV_MATRIX_ENCODING_DOLBY</name></expr>)</condition> <block pos:start="267:62" pos:end="277:13">{<block_content pos:start="269:17" pos:end="275:71">

                <expr_stmt pos:start="269:17" pos:end="269:71"><expr pos:start="269:17" pos:end="269:70"><name pos:start="269:17" pos:end="269:47"><name pos:start="269:17" pos:end="269:22">matrix</name><index pos:start="269:23" pos:end="269:35">[<expr pos:start="269:24" pos:end="269:33"><name pos:start="269:24" pos:end="269:33">FRONT_LEFT</name></expr> ]</index><index pos:start="269:36" pos:end="269:47">[<expr pos:start="269:37" pos:end="269:45"><name pos:start="269:37" pos:end="269:45">SIDE_LEFT</name></expr> ]</index></name> <operator pos:start="269:49" pos:end="269:50">-=</operator> <name pos:start="269:52" pos:end="269:58"><name pos:start="269:52" pos:end="269:52">s</name><operator pos:start="269:53" pos:end="269:54">-&gt;</operator><name pos:start="269:55" pos:end="269:58">slev</name></name> <operator pos:start="269:60" pos:end="269:60">*</operator> <name pos:start="269:62" pos:end="269:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:71"><expr pos:start="271:17" pos:end="271:70"><name pos:start="271:17" pos:end="271:47"><name pos:start="271:17" pos:end="271:22">matrix</name><index pos:start="271:23" pos:end="271:35">[<expr pos:start="271:24" pos:end="271:33"><name pos:start="271:24" pos:end="271:33">FRONT_LEFT</name></expr> ]</index><index pos:start="271:36" pos:end="271:47">[<expr pos:start="271:37" pos:end="271:46"><name pos:start="271:37" pos:end="271:46">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="271:49" pos:end="271:50">-=</operator> <name pos:start="271:52" pos:end="271:58"><name pos:start="271:52" pos:end="271:52">s</name><operator pos:start="271:53" pos:end="271:54">-&gt;</operator><name pos:start="271:55" pos:end="271:58">slev</name></name> <operator pos:start="271:60" pos:end="271:60">*</operator> <name pos:start="271:62" pos:end="271:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:71"><expr pos:start="273:17" pos:end="273:70"><name pos:start="273:17" pos:end="273:47"><name pos:start="273:17" pos:end="273:22">matrix</name><index pos:start="273:23" pos:end="273:35">[<expr pos:start="273:24" pos:end="273:34"><name pos:start="273:24" pos:end="273:34">FRONT_RIGHT</name></expr>]</index><index pos:start="273:36" pos:end="273:47">[<expr pos:start="273:37" pos:end="273:45"><name pos:start="273:37" pos:end="273:45">SIDE_LEFT</name></expr> ]</index></name> <operator pos:start="273:49" pos:end="273:50">+=</operator> <name pos:start="273:52" pos:end="273:58"><name pos:start="273:52" pos:end="273:52">s</name><operator pos:start="273:53" pos:end="273:54">-&gt;</operator><name pos:start="273:55" pos:end="273:58">slev</name></name> <operator pos:start="273:60" pos:end="273:60">*</operator> <name pos:start="273:62" pos:end="273:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:71"><expr pos:start="275:17" pos:end="275:70"><name pos:start="275:17" pos:end="275:47"><name pos:start="275:17" pos:end="275:22">matrix</name><index pos:start="275:23" pos:end="275:35">[<expr pos:start="275:24" pos:end="275:34"><name pos:start="275:24" pos:end="275:34">FRONT_RIGHT</name></expr>]</index><index pos:start="275:36" pos:end="275:47">[<expr pos:start="275:37" pos:end="275:46"><name pos:start="275:37" pos:end="275:46">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="275:49" pos:end="275:50">+=</operator> <name pos:start="275:52" pos:end="275:58"><name pos:start="275:52" pos:end="275:52">s</name><operator pos:start="275:53" pos:end="275:54">-&gt;</operator><name pos:start="275:55" pos:end="275:58">slev</name></name> <operator pos:start="275:60" pos:end="275:60">*</operator> <name pos:start="275:62" pos:end="275:70">M_SQRT1_2</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="277:15" pos:end="287:13">else if <condition pos:start="277:23" pos:end="277:67">(<expr pos:start="277:24" pos:end="277:66"><name pos:start="277:24" pos:end="277:38">matrix_encoding</name> <operator pos:start="277:40" pos:end="277:41">==</operator> <name pos:start="277:43" pos:end="277:66">AV_MATRIX_ENCODING_DPLII</name></expr>)</condition> <block pos:start="277:69" pos:end="287:13">{<block_content pos:start="279:17" pos:end="285:69">

                <expr_stmt pos:start="279:17" pos:end="279:69"><expr pos:start="279:17" pos:end="279:68"><name pos:start="279:17" pos:end="279:47"><name pos:start="279:17" pos:end="279:22">matrix</name><index pos:start="279:23" pos:end="279:35">[<expr pos:start="279:24" pos:end="279:33"><name pos:start="279:24" pos:end="279:33">FRONT_LEFT</name></expr> ]</index><index pos:start="279:36" pos:end="279:47">[<expr pos:start="279:37" pos:end="279:45"><name pos:start="279:37" pos:end="279:45">SIDE_LEFT</name></expr> ]</index></name> <operator pos:start="279:49" pos:end="279:50">-=</operator> <name pos:start="279:52" pos:end="279:58"><name pos:start="279:52" pos:end="279:52">s</name><operator pos:start="279:53" pos:end="279:54">-&gt;</operator><name pos:start="279:55" pos:end="279:58">slev</name></name> <operator pos:start="279:60" pos:end="279:60">*</operator> <name pos:start="279:62" pos:end="279:68">SQRT3_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="281:17" pos:end="281:71"><expr pos:start="281:17" pos:end="281:70"><name pos:start="281:17" pos:end="281:47"><name pos:start="281:17" pos:end="281:22">matrix</name><index pos:start="281:23" pos:end="281:35">[<expr pos:start="281:24" pos:end="281:33"><name pos:start="281:24" pos:end="281:33">FRONT_LEFT</name></expr> ]</index><index pos:start="281:36" pos:end="281:47">[<expr pos:start="281:37" pos:end="281:46"><name pos:start="281:37" pos:end="281:46">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="281:49" pos:end="281:50">-=</operator> <name pos:start="281:52" pos:end="281:58"><name pos:start="281:52" pos:end="281:52">s</name><operator pos:start="281:53" pos:end="281:54">-&gt;</operator><name pos:start="281:55" pos:end="281:58">slev</name></name> <operator pos:start="281:60" pos:end="281:60">*</operator> <name pos:start="281:62" pos:end="281:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="283:17" pos:end="283:71"><expr pos:start="283:17" pos:end="283:70"><name pos:start="283:17" pos:end="283:47"><name pos:start="283:17" pos:end="283:22">matrix</name><index pos:start="283:23" pos:end="283:35">[<expr pos:start="283:24" pos:end="283:34"><name pos:start="283:24" pos:end="283:34">FRONT_RIGHT</name></expr>]</index><index pos:start="283:36" pos:end="283:47">[<expr pos:start="283:37" pos:end="283:45"><name pos:start="283:37" pos:end="283:45">SIDE_LEFT</name></expr> ]</index></name> <operator pos:start="283:49" pos:end="283:50">+=</operator> <name pos:start="283:52" pos:end="283:58"><name pos:start="283:52" pos:end="283:52">s</name><operator pos:start="283:53" pos:end="283:54">-&gt;</operator><name pos:start="283:55" pos:end="283:58">slev</name></name> <operator pos:start="283:60" pos:end="283:60">*</operator> <name pos:start="283:62" pos:end="283:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="285:17" pos:end="285:69"><expr pos:start="285:17" pos:end="285:68"><name pos:start="285:17" pos:end="285:47"><name pos:start="285:17" pos:end="285:22">matrix</name><index pos:start="285:23" pos:end="285:35">[<expr pos:start="285:24" pos:end="285:34"><name pos:start="285:24" pos:end="285:34">FRONT_RIGHT</name></expr>]</index><index pos:start="285:36" pos:end="285:47">[<expr pos:start="285:37" pos:end="285:46"><name pos:start="285:37" pos:end="285:46">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="285:49" pos:end="285:50">+=</operator> <name pos:start="285:52" pos:end="285:58"><name pos:start="285:52" pos:end="285:52">s</name><operator pos:start="285:53" pos:end="285:54">-&gt;</operator><name pos:start="285:55" pos:end="285:58">slev</name></name> <operator pos:start="285:60" pos:end="285:60">*</operator> <name pos:start="285:62" pos:end="285:68">SQRT3_2</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="287:15" pos:end="293:13">else <block pos:start="287:20" pos:end="293:13">{<block_content pos:start="289:17" pos:end="291:59">

                <expr_stmt pos:start="289:17" pos:end="289:59"><expr pos:start="289:17" pos:end="289:58"><name pos:start="289:17" pos:end="289:47"><name pos:start="289:17" pos:end="289:22">matrix</name><index pos:start="289:23" pos:end="289:35">[ <expr pos:start="289:25" pos:end="289:34"><name pos:start="289:25" pos:end="289:34">FRONT_LEFT</name></expr>]</index><index pos:start="289:36" pos:end="289:47">[ <expr pos:start="289:38" pos:end="289:46"><name pos:start="289:38" pos:end="289:46">SIDE_LEFT</name></expr>]</index></name> <operator pos:start="289:49" pos:end="289:50">+=</operator> <name pos:start="289:52" pos:end="289:58"><name pos:start="289:52" pos:end="289:52">s</name><operator pos:start="289:53" pos:end="289:54">-&gt;</operator><name pos:start="289:55" pos:end="289:58">slev</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:59"><expr pos:start="291:17" pos:end="291:58"><name pos:start="291:17" pos:end="291:47"><name pos:start="291:17" pos:end="291:22">matrix</name><index pos:start="291:23" pos:end="291:35">[<expr pos:start="291:24" pos:end="291:34"><name pos:start="291:24" pos:end="291:34">FRONT_RIGHT</name></expr>]</index><index pos:start="291:36" pos:end="291:47">[<expr pos:start="291:37" pos:end="291:46"><name pos:start="291:37" pos:end="291:46">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="291:49" pos:end="291:50">+=</operator> <name pos:start="291:52" pos:end="291:58"><name pos:start="291:52" pos:end="291:52">s</name><operator pos:start="291:53" pos:end="291:54">-&gt;</operator><name pos:start="291:55" pos:end="291:58">slev</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="295:10" pos:end="301:9">else if<condition pos:start="295:17" pos:end="295:52">(<expr pos:start="295:18" pos:end="295:51"><name pos:start="295:18" pos:end="295:30">out_ch_layout</name> <operator pos:start="295:32" pos:end="295:32">&amp;</operator> <name pos:start="295:34" pos:end="295:51">AV_CH_FRONT_CENTER</name></expr>)</condition><block pos:start="295:53" pos:end="301:9">{<block_content pos:start="297:13" pos:end="299:66">

            <expr_stmt pos:start="297:13" pos:end="297:66"><expr pos:start="297:13" pos:end="297:65"><name pos:start="297:13" pos:end="297:45"><name pos:start="297:13" pos:end="297:18">matrix</name><index pos:start="297:19" pos:end="297:33">[ <expr pos:start="297:21" pos:end="297:32"><name pos:start="297:21" pos:end="297:32">FRONT_CENTER</name></expr>]</index><index pos:start="297:34" pos:end="297:45">[<expr pos:start="297:35" pos:end="297:43"><name pos:start="297:35" pos:end="297:43">SIDE_LEFT</name></expr> ]</index></name><operator pos:start="297:46" pos:end="297:47">+=</operator> <name pos:start="297:49" pos:end="297:55"><name pos:start="297:49" pos:end="297:49">s</name><operator pos:start="297:50" pos:end="297:51">-&gt;</operator><name pos:start="297:52" pos:end="297:55">slev</name></name><operator pos:start="297:56" pos:end="297:56">*</operator><name pos:start="297:57" pos:end="297:65">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:66"><expr pos:start="299:13" pos:end="299:65"><name pos:start="299:13" pos:end="299:45"><name pos:start="299:13" pos:end="299:18">matrix</name><index pos:start="299:19" pos:end="299:33">[ <expr pos:start="299:21" pos:end="299:32"><name pos:start="299:21" pos:end="299:32">FRONT_CENTER</name></expr>]</index><index pos:start="299:34" pos:end="299:45">[<expr pos:start="299:35" pos:end="299:44"><name pos:start="299:35" pos:end="299:44">SIDE_RIGHT</name></expr>]</index></name><operator pos:start="299:46" pos:end="299:47">+=</operator> <name pos:start="299:49" pos:end="299:55"><name pos:start="299:49" pos:end="299:49">s</name><operator pos:start="299:50" pos:end="299:51">-&gt;</operator><name pos:start="299:52" pos:end="299:55">slev</name></name><operator pos:start="299:56" pos:end="299:56">*</operator><name pos:start="299:57" pos:end="299:65">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="301:10" pos:end="303:26">else<block type="pseudo" pos:start="303:13" pos:end="303:26"><block_content pos:start="303:13" pos:end="303:26">

            <expr_stmt pos:start="303:13" pos:end="303:26"><expr pos:start="303:13" pos:end="303:25"><call pos:start="303:13" pos:end="303:25"><name pos:start="303:13" pos:end="303:22">av_assert0</name><argument_list pos:start="303:23" pos:end="303:25">(<argument pos:start="303:24" pos:end="303:24"><expr pos:start="303:24" pos:end="303:24"><literal type="number" pos:start="303:24" pos:end="303:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="309:5" pos:end="327:5"><if pos:start="309:5" pos:end="327:5">if<condition pos:start="309:7" pos:end="309:48">(<expr pos:start="309:8" pos:end="309:47"><name pos:start="309:8" pos:end="309:18">unaccounted</name> <operator pos:start="309:20" pos:end="309:20">&amp;</operator> <name pos:start="309:22" pos:end="309:47">AV_CH_FRONT_LEFT_OF_CENTER</name></expr>)</condition><block pos:start="309:49" pos:end="327:5">{<block_content pos:start="311:9" pos:end="325:26">

        <if_stmt pos:start="311:9" pos:end="325:26"><if pos:start="311:9" pos:end="317:9">if<condition pos:start="311:11" pos:end="311:44">(<expr pos:start="311:12" pos:end="311:43"><name pos:start="311:12" pos:end="311:24">out_ch_layout</name> <operator pos:start="311:26" pos:end="311:26">&amp;</operator> <name pos:start="311:28" pos:end="311:43">AV_CH_FRONT_LEFT</name></expr>)</condition><block pos:start="311:45" pos:end="317:9">{<block_content pos:start="313:13" pos:end="315:61">

            <expr_stmt pos:start="313:13" pos:end="313:61"><expr pos:start="313:13" pos:end="313:60"><name pos:start="313:13" pos:end="313:54"><name pos:start="313:13" pos:end="313:18">matrix</name><index pos:start="313:19" pos:end="313:31">[ <expr pos:start="313:21" pos:end="313:30"><name pos:start="313:21" pos:end="313:30">FRONT_LEFT</name></expr>]</index><index pos:start="313:32" pos:end="313:54">[ <expr pos:start="313:34" pos:end="313:53"><name pos:start="313:34" pos:end="313:53">FRONT_LEFT_OF_CENTER</name></expr>]</index></name><operator pos:start="313:55" pos:end="313:56">+=</operator> <literal type="number" pos:start="313:58" pos:end="313:60">1.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:61"><expr pos:start="315:13" pos:end="315:60"><name pos:start="315:13" pos:end="315:54"><name pos:start="315:13" pos:end="315:18">matrix</name><index pos:start="315:19" pos:end="315:31">[<expr pos:start="315:20" pos:end="315:30"><name pos:start="315:20" pos:end="315:30">FRONT_RIGHT</name></expr>]</index><index pos:start="315:32" pos:end="315:54">[<expr pos:start="315:33" pos:end="315:53"><name pos:start="315:33" pos:end="315:53">FRONT_RIGHT_OF_CENTER</name></expr>]</index></name><operator pos:start="315:55" pos:end="315:56">+=</operator> <literal type="number" pos:start="315:58" pos:end="315:60">1.0</literal></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="317:10" pos:end="323:9">else if<condition pos:start="317:17" pos:end="317:52">(<expr pos:start="317:18" pos:end="317:51"><name pos:start="317:18" pos:end="317:30">out_ch_layout</name> <operator pos:start="317:32" pos:end="317:32">&amp;</operator> <name pos:start="317:34" pos:end="317:51">AV_CH_FRONT_CENTER</name></expr>)</condition><block pos:start="317:53" pos:end="323:9">{<block_content pos:start="319:13" pos:end="321:69">

            <expr_stmt pos:start="319:13" pos:end="319:69"><expr pos:start="319:13" pos:end="319:68"><name pos:start="319:13" pos:end="319:56"><name pos:start="319:13" pos:end="319:18">matrix</name><index pos:start="319:19" pos:end="319:33">[ <expr pos:start="319:21" pos:end="319:32"><name pos:start="319:21" pos:end="319:32">FRONT_CENTER</name></expr>]</index><index pos:start="319:34" pos:end="319:56">[ <expr pos:start="319:36" pos:end="319:55"><name pos:start="319:36" pos:end="319:55">FRONT_LEFT_OF_CENTER</name></expr>]</index></name><operator pos:start="319:57" pos:end="319:58">+=</operator> <name pos:start="319:60" pos:end="319:68">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:69"><expr pos:start="321:13" pos:end="321:68"><name pos:start="321:13" pos:end="321:56"><name pos:start="321:13" pos:end="321:18">matrix</name><index pos:start="321:19" pos:end="321:33">[ <expr pos:start="321:21" pos:end="321:32"><name pos:start="321:21" pos:end="321:32">FRONT_CENTER</name></expr>]</index><index pos:start="321:34" pos:end="321:56">[<expr pos:start="321:35" pos:end="321:55"><name pos:start="321:35" pos:end="321:55">FRONT_RIGHT_OF_CENTER</name></expr>]</index></name><operator pos:start="321:57" pos:end="321:58">+=</operator> <name pos:start="321:60" pos:end="321:68">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="323:10" pos:end="325:26">else<block type="pseudo" pos:start="325:13" pos:end="325:26"><block_content pos:start="325:13" pos:end="325:26">

            <expr_stmt pos:start="325:13" pos:end="325:26"><expr pos:start="325:13" pos:end="325:25"><call pos:start="325:13" pos:end="325:25"><name pos:start="325:13" pos:end="325:22">av_assert0</name><argument_list pos:start="325:23" pos:end="325:25">(<argument pos:start="325:24" pos:end="325:24"><expr pos:start="325:24" pos:end="325:24"><literal type="number" pos:start="325:24" pos:end="325:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="329:5" pos:end="329:49">/* mix LFE into front left/right or center */</comment>

    <if_stmt pos:start="331:5" pos:end="347:5"><if pos:start="331:5" pos:end="347:5">if <condition pos:start="331:8" pos:end="331:42">(<expr pos:start="331:9" pos:end="331:41"><name pos:start="331:9" pos:end="331:19">unaccounted</name> <operator pos:start="331:21" pos:end="331:21">&amp;</operator> <name pos:start="331:23" pos:end="331:41">AV_CH_LOW_FREQUENCY</name></expr>)</condition> <block pos:start="331:44" pos:end="347:5">{<block_content pos:start="333:9" pos:end="345:26">

        <if_stmt pos:start="333:9" pos:end="345:26"><if pos:start="333:9" pos:end="337:9">if <condition pos:start="333:12" pos:end="333:47">(<expr pos:start="333:13" pos:end="333:46"><name pos:start="333:13" pos:end="333:25">out_ch_layout</name> <operator pos:start="333:27" pos:end="333:27">&amp;</operator> <name pos:start="333:29" pos:end="333:46">AV_CH_FRONT_CENTER</name></expr>)</condition> <block pos:start="333:49" pos:end="337:9">{<block_content pos:start="335:13" pos:end="335:68">

            <expr_stmt pos:start="335:13" pos:end="335:68"><expr pos:start="335:13" pos:end="335:67"><name pos:start="335:13" pos:end="335:47"><name pos:start="335:13" pos:end="335:18">matrix</name><index pos:start="335:19" pos:end="335:32">[<expr pos:start="335:20" pos:end="335:31"><name pos:start="335:20" pos:end="335:31">FRONT_CENTER</name></expr>]</index><index pos:start="335:33" pos:end="335:47">[<expr pos:start="335:34" pos:end="335:46"><name pos:start="335:34" pos:end="335:46">LOW_FREQUENCY</name></expr>]</index></name> <operator pos:start="335:49" pos:end="335:50">+=</operator> <name pos:start="335:52" pos:end="335:67"><name pos:start="335:52" pos:end="335:52">s</name><operator pos:start="335:53" pos:end="335:54">-&gt;</operator><name pos:start="335:55" pos:end="335:67">lfe_mix_level</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="337:11" pos:end="343:9">else if <condition pos:start="337:19" pos:end="337:52">(<expr pos:start="337:20" pos:end="337:51"><name pos:start="337:20" pos:end="337:32">out_ch_layout</name> <operator pos:start="337:34" pos:end="337:34">&amp;</operator> <name pos:start="337:36" pos:end="337:51">AV_CH_FRONT_LEFT</name></expr>)</condition> <block pos:start="337:54" pos:end="343:9">{<block_content pos:start="339:13" pos:end="341:79">

            <expr_stmt pos:start="339:13" pos:end="339:79"><expr pos:start="339:13" pos:end="339:78"><name pos:start="339:13" pos:end="339:46"><name pos:start="339:13" pos:end="339:18">matrix</name><index pos:start="339:19" pos:end="339:31">[<expr pos:start="339:20" pos:end="339:29"><name pos:start="339:20" pos:end="339:29">FRONT_LEFT</name></expr> ]</index><index pos:start="339:32" pos:end="339:46">[<expr pos:start="339:33" pos:end="339:45"><name pos:start="339:33" pos:end="339:45">LOW_FREQUENCY</name></expr>]</index></name> <operator pos:start="339:48" pos:end="339:49">+=</operator> <name pos:start="339:51" pos:end="339:66"><name pos:start="339:51" pos:end="339:51">s</name><operator pos:start="339:52" pos:end="339:53">-&gt;</operator><name pos:start="339:54" pos:end="339:66">lfe_mix_level</name></name> <operator pos:start="339:68" pos:end="339:68">*</operator> <name pos:start="339:70" pos:end="339:78">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:79"><expr pos:start="341:13" pos:end="341:78"><name pos:start="341:13" pos:end="341:46"><name pos:start="341:13" pos:end="341:18">matrix</name><index pos:start="341:19" pos:end="341:31">[<expr pos:start="341:20" pos:end="341:30"><name pos:start="341:20" pos:end="341:30">FRONT_RIGHT</name></expr>]</index><index pos:start="341:32" pos:end="341:46">[<expr pos:start="341:33" pos:end="341:45"><name pos:start="341:33" pos:end="341:45">LOW_FREQUENCY</name></expr>]</index></name> <operator pos:start="341:48" pos:end="341:49">+=</operator> <name pos:start="341:51" pos:end="341:66"><name pos:start="341:51" pos:end="341:51">s</name><operator pos:start="341:52" pos:end="341:53">-&gt;</operator><name pos:start="341:54" pos:end="341:66">lfe_mix_level</name></name> <operator pos:start="341:68" pos:end="341:68">*</operator> <name pos:start="341:70" pos:end="341:78">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="343:11" pos:end="345:26">else<block type="pseudo" pos:start="345:13" pos:end="345:26"><block_content pos:start="345:13" pos:end="345:26">

            <expr_stmt pos:start="345:13" pos:end="345:26"><expr pos:start="345:13" pos:end="345:25"><call pos:start="345:13" pos:end="345:25"><name pos:start="345:13" pos:end="345:22">av_assert0</name><argument_list pos:start="345:23" pos:end="345:25">(<argument pos:start="345:24" pos:end="345:24"><expr pos:start="345:24" pos:end="345:24"><literal type="number" pos:start="345:24" pos:end="345:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="351:5" pos:end="379:5">for<control pos:start="351:8" pos:end="351:29">(<init pos:start="351:9" pos:end="351:18"><expr pos:start="351:9" pos:end="351:17"><name pos:start="351:9" pos:end="351:13">out_i</name><operator pos:start="351:14" pos:end="351:14">=</operator><name pos:start="351:15" pos:end="351:15">i</name><operator pos:start="351:16" pos:end="351:16">=</operator><literal type="number" pos:start="351:17" pos:end="351:17">0</literal></expr>;</init> <condition pos:start="351:20" pos:end="351:24"><expr pos:start="351:20" pos:end="351:23"><name pos:start="351:20" pos:end="351:20">i</name><operator pos:start="351:21" pos:end="351:21">&lt;</operator><literal type="number" pos:start="351:22" pos:end="351:23">64</literal></expr>;</condition> <incr pos:start="351:26" pos:end="351:28"><expr pos:start="351:26" pos:end="351:28"><name pos:start="351:26" pos:end="351:26">i</name><operator pos:start="351:27" pos:end="351:28">++</operator></expr></incr>)</control><block pos:start="351:30" pos:end="379:5">{<block_content pos:start="353:9" pos:end="377:20">

        <decl_stmt pos:start="353:9" pos:end="353:21"><decl pos:start="353:9" pos:end="353:20"><type pos:start="353:9" pos:end="353:14"><name pos:start="353:9" pos:end="353:14">double</name></type> <name pos:start="353:16" pos:end="353:18">sum</name><init pos:start="353:19" pos:end="353:20">=<expr pos:start="353:20" pos:end="353:20"><literal type="number" pos:start="353:20" pos:end="353:20">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="355:9" pos:end="355:19"><decl pos:start="355:9" pos:end="355:18"><type pos:start="355:9" pos:end="355:11"><name pos:start="355:9" pos:end="355:11">int</name></type> <name pos:start="355:13" pos:end="355:16">in_i</name><init pos:start="355:17" pos:end="355:18">=<expr pos:start="355:18" pos:end="355:18"><literal type="number" pos:start="355:18" pos:end="355:18">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="357:9" pos:end="371:9">for<control pos:start="357:12" pos:end="357:27">(<init pos:start="357:13" pos:end="357:16"><expr pos:start="357:13" pos:end="357:15"><name pos:start="357:13" pos:end="357:13">j</name><operator pos:start="357:14" pos:end="357:14">=</operator><literal type="number" pos:start="357:15" pos:end="357:15">0</literal></expr>;</init> <condition pos:start="357:18" pos:end="357:22"><expr pos:start="357:18" pos:end="357:21"><name pos:start="357:18" pos:end="357:18">j</name><operator pos:start="357:19" pos:end="357:19">&lt;</operator><literal type="number" pos:start="357:20" pos:end="357:21">64</literal></expr>;</condition> <incr pos:start="357:24" pos:end="357:26"><expr pos:start="357:24" pos:end="357:26"><name pos:start="357:24" pos:end="357:24">j</name><operator pos:start="357:25" pos:end="357:26">++</operator></expr></incr>)</control><block pos:start="357:28" pos:end="371:9">{<block_content pos:start="359:13" pos:end="369:23">

            <expr_stmt pos:start="359:13" pos:end="359:49"><expr pos:start="359:13" pos:end="359:48"><name pos:start="359:13" pos:end="359:34"><name pos:start="359:13" pos:end="359:13">s</name><operator pos:start="359:14" pos:end="359:15">-&gt;</operator><name pos:start="359:16" pos:end="359:21">matrix</name><index pos:start="359:22" pos:end="359:28">[<expr pos:start="359:23" pos:end="359:27"><name pos:start="359:23" pos:end="359:27">out_i</name></expr>]</index><index pos:start="359:29" pos:end="359:34">[<expr pos:start="359:30" pos:end="359:33"><name pos:start="359:30" pos:end="359:33">in_i</name></expr>]</index></name><operator pos:start="359:35" pos:end="359:35">=</operator> <name pos:start="359:37" pos:end="359:48"><name pos:start="359:37" pos:end="359:42">matrix</name><index pos:start="359:43" pos:end="359:45">[<expr pos:start="359:44" pos:end="359:44"><name pos:start="359:44" pos:end="359:44">i</name></expr>]</index><index pos:start="359:46" pos:end="359:48">[<expr pos:start="359:47" pos:end="359:47"><name pos:start="359:47" pos:end="359:47">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="361:13" pos:end="365:13"><if pos:start="361:13" pos:end="365:13">if<condition pos:start="361:15" pos:end="361:28">(<expr pos:start="361:16" pos:end="361:27"><name pos:start="361:16" pos:end="361:27"><name pos:start="361:16" pos:end="361:21">matrix</name><index pos:start="361:22" pos:end="361:24">[<expr pos:start="361:23" pos:end="361:23"><name pos:start="361:23" pos:end="361:23">i</name></expr>]</index><index pos:start="361:25" pos:end="361:27">[<expr pos:start="361:26" pos:end="361:26"><name pos:start="361:26" pos:end="361:26">j</name></expr>]</index></name></expr>)</condition><block pos:start="361:29" pos:end="365:13">{<block_content pos:start="363:17" pos:end="363:42">

                <expr_stmt pos:start="363:17" pos:end="363:42"><expr pos:start="363:17" pos:end="363:41"><name pos:start="363:17" pos:end="363:19">sum</name> <operator pos:start="363:21" pos:end="363:22">+=</operator> <call pos:start="363:24" pos:end="363:41"><name pos:start="363:24" pos:end="363:27">fabs</name><argument_list pos:start="363:28" pos:end="363:41">(<argument pos:start="363:29" pos:end="363:40"><expr pos:start="363:29" pos:end="363:40"><name pos:start="363:29" pos:end="363:40"><name pos:start="363:29" pos:end="363:34">matrix</name><index pos:start="363:35" pos:end="363:37">[<expr pos:start="363:36" pos:end="363:36"><name pos:start="363:36" pos:end="363:36">i</name></expr>]</index><index pos:start="363:38" pos:end="363:40">[<expr pos:start="363:39" pos:end="363:39"><name pos:start="363:39" pos:end="363:39">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="367:13" pos:end="369:23"><if pos:start="367:13" pos:end="369:23">if<condition pos:start="367:15" pos:end="367:40">(<expr pos:start="367:16" pos:end="367:39"><name pos:start="367:16" pos:end="367:27">in_ch_layout</name> <operator pos:start="367:29" pos:end="367:29">&amp;</operator> <operator pos:start="367:31" pos:end="367:31">(</operator><literal type="number" pos:start="367:32" pos:end="367:35">1ULL</literal><operator pos:start="367:36" pos:end="367:37">&lt;&lt;</operator><name pos:start="367:38" pos:end="367:38">j</name><operator pos:start="367:39" pos:end="367:39">)</operator></expr>)</condition><block type="pseudo" pos:start="369:17" pos:end="369:23"><block_content pos:start="369:17" pos:end="369:23">

                <expr_stmt pos:start="369:17" pos:end="369:23"><expr pos:start="369:17" pos:end="369:22"><name pos:start="369:17" pos:end="369:20">in_i</name><operator pos:start="369:21" pos:end="369:22">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="373:9" pos:end="373:37"><expr pos:start="373:9" pos:end="373:36"><name pos:start="373:9" pos:end="373:15">maxcoef</name><operator pos:start="373:16" pos:end="373:16">=</operator> <call pos:start="373:18" pos:end="373:36"><name pos:start="373:18" pos:end="373:22">FFMAX</name><argument_list pos:start="373:23" pos:end="373:36">(<argument pos:start="373:24" pos:end="373:30"><expr pos:start="373:24" pos:end="373:30"><name pos:start="373:24" pos:end="373:30">maxcoef</name></expr></argument>, <argument pos:start="373:33" pos:end="373:35"><expr pos:start="373:33" pos:end="373:35"><name pos:start="373:33" pos:end="373:35">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="375:9" pos:end="377:20"><if pos:start="375:9" pos:end="377:20">if<condition pos:start="375:11" pos:end="375:37">(<expr pos:start="375:12" pos:end="375:36"><name pos:start="375:12" pos:end="375:24">out_ch_layout</name> <operator pos:start="375:26" pos:end="375:26">&amp;</operator> <operator pos:start="375:28" pos:end="375:28">(</operator><literal type="number" pos:start="375:29" pos:end="375:32">1ULL</literal><operator pos:start="375:33" pos:end="375:34">&lt;&lt;</operator><name pos:start="375:35" pos:end="375:35">i</name><operator pos:start="375:36" pos:end="375:36">)</operator></expr>)</condition><block type="pseudo" pos:start="377:13" pos:end="377:20"><block_content pos:start="377:13" pos:end="377:20">

            <expr_stmt pos:start="377:13" pos:end="377:20"><expr pos:start="377:13" pos:end="377:19"><name pos:start="377:13" pos:end="377:17">out_i</name><operator pos:start="377:18" pos:end="377:19">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="381:5" pos:end="383:38"><if pos:start="381:5" pos:end="383:38">if<condition pos:start="381:7" pos:end="381:31">(<expr pos:start="381:8" pos:end="381:30"><name pos:start="381:8" pos:end="381:25"><name pos:start="381:8" pos:end="381:8">s</name><operator pos:start="381:9" pos:end="381:10">-&gt;</operator><name pos:start="381:11" pos:end="381:25">rematrix_volume</name></name>  <operator pos:start="381:28" pos:end="381:28">&lt;</operator> <literal type="number" pos:start="381:30" pos:end="381:30">0</literal></expr>)</condition><block type="pseudo" pos:start="383:9" pos:end="383:38"><block_content pos:start="383:9" pos:end="383:38">

        <expr_stmt pos:start="383:9" pos:end="383:38"><expr pos:start="383:9" pos:end="383:37"><name pos:start="383:9" pos:end="383:15">maxcoef</name> <operator pos:start="383:17" pos:end="383:17">=</operator> <operator pos:start="383:19" pos:end="383:19">-</operator><name pos:start="383:20" pos:end="383:37"><name pos:start="383:20" pos:end="383:20">s</name><operator pos:start="383:21" pos:end="383:22">-&gt;</operator><name pos:start="383:23" pos:end="383:37">rematrix_volume</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="387:5" pos:end="399:25"><if pos:start="387:5" pos:end="391:5">if <condition pos:start="387:8" pos:end="387:31">(<expr pos:start="387:9" pos:end="387:30"><name pos:start="387:9" pos:end="387:26"><name pos:start="387:9" pos:end="387:9">s</name><operator pos:start="387:10" pos:end="387:11">-&gt;</operator><name pos:start="387:12" pos:end="387:26">rematrix_maxval</name></name> <operator pos:start="387:28" pos:end="387:28">&gt;</operator> <literal type="number" pos:start="387:30" pos:end="387:30">0</literal></expr>)</condition> <block pos:start="387:33" pos:end="391:5">{<block_content pos:start="389:9" pos:end="389:36">

        <expr_stmt pos:start="389:9" pos:end="389:36"><expr pos:start="389:9" pos:end="389:35"><name pos:start="389:9" pos:end="389:14">maxval</name> <operator pos:start="389:16" pos:end="389:16">=</operator> <name pos:start="389:18" pos:end="389:35"><name pos:start="389:18" pos:end="389:18">s</name><operator pos:start="389:19" pos:end="389:20">-&gt;</operator><name pos:start="389:21" pos:end="389:35">rematrix_maxval</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="391:7" pos:end="397:5">else if <condition pos:start="391:15" pos:end="393:82">(   <expr pos:start="391:19" pos:end="393:81"><call pos:start="391:19" pos:end="391:61"><name pos:start="391:19" pos:end="391:42">av_get_packed_sample_fmt</name><argument_list pos:start="391:43" pos:end="391:61">(<argument pos:start="391:44" pos:end="391:60"><expr pos:start="391:44" pos:end="391:60"><name pos:start="391:44" pos:end="391:60"><name pos:start="391:44" pos:end="391:44">s</name><operator pos:start="391:45" pos:end="391:46">-&gt;</operator><name pos:start="391:47" pos:end="391:60">out_sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="391:63" pos:end="391:63">&lt;</operator> <name pos:start="391:65" pos:end="391:81">AV_SAMPLE_FMT_FLT</name>

               <operator pos:start="393:16" pos:end="393:17">||</operator> <call pos:start="393:19" pos:end="393:61"><name pos:start="393:19" pos:end="393:42">av_get_packed_sample_fmt</name><argument_list pos:start="393:43" pos:end="393:61">(<argument pos:start="393:44" pos:end="393:60"><expr pos:start="393:44" pos:end="393:60"><name pos:start="393:44" pos:end="393:60"><name pos:start="393:44" pos:end="393:44">s</name><operator pos:start="393:45" pos:end="393:46">-&gt;</operator><name pos:start="393:47" pos:end="393:60">int_sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="393:63" pos:end="393:63">&lt;</operator> <name pos:start="393:65" pos:end="393:81">AV_SAMPLE_FMT_FLT</name></expr>)</condition> <block pos:start="393:84" pos:end="397:5">{<block_content pos:start="395:9" pos:end="395:21">

        <expr_stmt pos:start="395:9" pos:end="395:21"><expr pos:start="395:9" pos:end="395:20"><name pos:start="395:9" pos:end="395:14">maxval</name> <operator pos:start="395:16" pos:end="395:16">=</operator> <literal type="number" pos:start="395:18" pos:end="395:20">1.0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="397:7" pos:end="399:25">else<block type="pseudo" pos:start="399:9" pos:end="399:25"><block_content pos:start="399:9" pos:end="399:25">

        <expr_stmt pos:start="399:9" pos:end="399:25"><expr pos:start="399:9" pos:end="399:24"><name pos:start="399:9" pos:end="399:14">maxval</name> <operator pos:start="399:16" pos:end="399:16">=</operator> <name pos:start="399:18" pos:end="399:24">INT_MAX</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="403:5" pos:end="415:5"><if pos:start="403:5" pos:end="415:5">if<condition pos:start="403:7" pos:end="403:51">(<expr pos:start="403:8" pos:end="403:50"><name pos:start="403:8" pos:end="403:14">maxcoef</name> <operator pos:start="403:16" pos:end="403:16">&gt;</operator> <name pos:start="403:18" pos:end="403:23">maxval</name> <operator pos:start="403:25" pos:end="403:26">||</operator> <name pos:start="403:28" pos:end="403:45"><name pos:start="403:28" pos:end="403:28">s</name><operator pos:start="403:29" pos:end="403:30">-&gt;</operator><name pos:start="403:31" pos:end="403:45">rematrix_volume</name></name>  <operator pos:start="403:48" pos:end="403:48">&lt;</operator> <literal type="number" pos:start="403:50" pos:end="403:50">0</literal></expr>)</condition><block pos:start="403:52" pos:end="415:5">{<block_content pos:start="405:9" pos:end="413:13">

        <expr_stmt pos:start="405:9" pos:end="405:26"><expr pos:start="405:9" pos:end="405:25"><name pos:start="405:9" pos:end="405:15">maxcoef</name> <operator pos:start="405:17" pos:end="405:18">/=</operator> <name pos:start="405:20" pos:end="405:25">maxval</name></expr>;</expr_stmt>

        <for pos:start="407:9" pos:end="413:13">for<control pos:start="407:12" pos:end="407:35">(<init pos:start="407:13" pos:end="407:16"><expr pos:start="407:13" pos:end="407:15"><name pos:start="407:13" pos:end="407:13">i</name><operator pos:start="407:14" pos:end="407:14">=</operator><literal type="number" pos:start="407:15" pos:end="407:15">0</literal></expr>;</init> <condition pos:start="407:18" pos:end="407:30"><expr pos:start="407:18" pos:end="407:29"><name pos:start="407:18" pos:end="407:18">i</name><operator pos:start="407:19" pos:end="407:19">&lt;</operator><name pos:start="407:20" pos:end="407:29">SWR_CH_MAX</name></expr>;</condition> <incr pos:start="407:32" pos:end="407:34"><expr pos:start="407:32" pos:end="407:34"><name pos:start="407:32" pos:end="407:32">i</name><operator pos:start="407:33" pos:end="407:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="409:13" pos:end="413:13"><block_content pos:start="409:13" pos:end="413:13">

            <for pos:start="409:13" pos:end="413:13">for<control pos:start="409:16" pos:end="409:39">(<init pos:start="409:17" pos:end="409:20"><expr pos:start="409:17" pos:end="409:19"><name pos:start="409:17" pos:end="409:17">j</name><operator pos:start="409:18" pos:end="409:18">=</operator><literal type="number" pos:start="409:19" pos:end="409:19">0</literal></expr>;</init> <condition pos:start="409:22" pos:end="409:34"><expr pos:start="409:22" pos:end="409:33"><name pos:start="409:22" pos:end="409:22">j</name><operator pos:start="409:23" pos:end="409:23">&lt;</operator><name pos:start="409:24" pos:end="409:33">SWR_CH_MAX</name></expr>;</condition> <incr pos:start="409:36" pos:end="409:38"><expr pos:start="409:36" pos:end="409:38"><name pos:start="409:36" pos:end="409:36">j</name><operator pos:start="409:37" pos:end="409:38">++</operator></expr></incr>)</control><block pos:start="409:40" pos:end="413:13">{<block_content pos:start="411:17" pos:end="411:43">

                <expr_stmt pos:start="411:17" pos:end="411:43"><expr pos:start="411:17" pos:end="411:42"><name pos:start="411:17" pos:end="411:31"><name pos:start="411:17" pos:end="411:17">s</name><operator pos:start="411:18" pos:end="411:19">-&gt;</operator><name pos:start="411:20" pos:end="411:25">matrix</name><index pos:start="411:26" pos:end="411:28">[<expr pos:start="411:27" pos:end="411:27"><name pos:start="411:27" pos:end="411:27">i</name></expr>]</index><index pos:start="411:29" pos:end="411:31">[<expr pos:start="411:30" pos:end="411:30"><name pos:start="411:30" pos:end="411:30">j</name></expr>]</index></name> <operator pos:start="411:33" pos:end="411:34">/=</operator> <name pos:start="411:36" pos:end="411:42">maxcoef</name></expr>;</expr_stmt>

            </block_content>}</block></for></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="419:5" pos:end="429:5"><if pos:start="419:5" pos:end="429:5">if<condition pos:start="419:7" pos:end="419:30">(<expr pos:start="419:8" pos:end="419:29"><name pos:start="419:8" pos:end="419:25"><name pos:start="419:8" pos:end="419:8">s</name><operator pos:start="419:9" pos:end="419:10">-&gt;</operator><name pos:start="419:11" pos:end="419:25">rematrix_volume</name></name> <operator pos:start="419:27" pos:end="419:27">&gt;</operator> <literal type="number" pos:start="419:29" pos:end="419:29">0</literal></expr>)</condition><block pos:start="419:31" pos:end="429:5">{<block_content pos:start="421:9" pos:end="427:13">

        <for pos:start="421:9" pos:end="427:13">for<control pos:start="421:12" pos:end="421:35">(<init pos:start="421:13" pos:end="421:16"><expr pos:start="421:13" pos:end="421:15"><name pos:start="421:13" pos:end="421:13">i</name><operator pos:start="421:14" pos:end="421:14">=</operator><literal type="number" pos:start="421:15" pos:end="421:15">0</literal></expr>;</init> <condition pos:start="421:18" pos:end="421:30"><expr pos:start="421:18" pos:end="421:29"><name pos:start="421:18" pos:end="421:18">i</name><operator pos:start="421:19" pos:end="421:19">&lt;</operator><name pos:start="421:20" pos:end="421:29">SWR_CH_MAX</name></expr>;</condition> <incr pos:start="421:32" pos:end="421:34"><expr pos:start="421:32" pos:end="421:34"><name pos:start="421:32" pos:end="421:32">i</name><operator pos:start="421:33" pos:end="421:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="423:13" pos:end="427:13"><block_content pos:start="423:13" pos:end="427:13">

            <for pos:start="423:13" pos:end="427:13">for<control pos:start="423:16" pos:end="423:39">(<init pos:start="423:17" pos:end="423:20"><expr pos:start="423:17" pos:end="423:19"><name pos:start="423:17" pos:end="423:17">j</name><operator pos:start="423:18" pos:end="423:18">=</operator><literal type="number" pos:start="423:19" pos:end="423:19">0</literal></expr>;</init> <condition pos:start="423:22" pos:end="423:34"><expr pos:start="423:22" pos:end="423:33"><name pos:start="423:22" pos:end="423:22">j</name><operator pos:start="423:23" pos:end="423:23">&lt;</operator><name pos:start="423:24" pos:end="423:33">SWR_CH_MAX</name></expr>;</condition> <incr pos:start="423:36" pos:end="423:38"><expr pos:start="423:36" pos:end="423:38"><name pos:start="423:36" pos:end="423:36">j</name><operator pos:start="423:37" pos:end="423:38">++</operator></expr></incr>)</control><block pos:start="423:40" pos:end="427:13">{<block_content pos:start="425:17" pos:end="425:54">

                <expr_stmt pos:start="425:17" pos:end="425:54"><expr pos:start="425:17" pos:end="425:53"><name pos:start="425:17" pos:end="425:31"><name pos:start="425:17" pos:end="425:17">s</name><operator pos:start="425:18" pos:end="425:19">-&gt;</operator><name pos:start="425:20" pos:end="425:25">matrix</name><index pos:start="425:26" pos:end="425:28">[<expr pos:start="425:27" pos:end="425:27"><name pos:start="425:27" pos:end="425:27">i</name></expr>]</index><index pos:start="425:29" pos:end="425:31">[<expr pos:start="425:30" pos:end="425:30"><name pos:start="425:30" pos:end="425:30">j</name></expr>]</index></name> <operator pos:start="425:33" pos:end="425:34">*=</operator> <name pos:start="425:36" pos:end="425:53"><name pos:start="425:36" pos:end="425:36">s</name><operator pos:start="425:37" pos:end="425:38">-&gt;</operator><name pos:start="425:39" pos:end="425:53">rematrix_volume</name></name></expr>;</expr_stmt>

            </block_content>}</block></for></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <for pos:start="433:5" pos:end="443:5">for<control pos:start="433:8" pos:end="433:69">(<init pos:start="433:9" pos:end="433:12"><expr pos:start="433:9" pos:end="433:11"><name pos:start="433:9" pos:end="433:9">i</name><operator pos:start="433:10" pos:end="433:10">=</operator><literal type="number" pos:start="433:11" pos:end="433:11">0</literal></expr>;</init> <condition pos:start="433:14" pos:end="433:64"><expr pos:start="433:14" pos:end="433:63"><name pos:start="433:14" pos:end="433:14">i</name><operator pos:start="433:15" pos:end="433:15">&lt;</operator><call pos:start="433:16" pos:end="433:63"><name pos:start="433:16" pos:end="433:48">av_get_channel_layout_nb_channels</name><argument_list pos:start="433:49" pos:end="433:63">(<argument pos:start="433:50" pos:end="433:62"><expr pos:start="433:50" pos:end="433:62"><name pos:start="433:50" pos:end="433:62">out_ch_layout</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="433:66" pos:end="433:68"><expr pos:start="433:66" pos:end="433:68"><name pos:start="433:66" pos:end="433:66">i</name><operator pos:start="433:67" pos:end="433:68">++</operator></expr></incr>)</control><block pos:start="433:70" pos:end="443:5">{<block_content pos:start="435:9" pos:end="441:41">

        <for pos:start="435:9" pos:end="439:9">for<control pos:start="435:12" pos:end="435:72">(<init pos:start="435:13" pos:end="435:16"><expr pos:start="435:13" pos:end="435:15"><name pos:start="435:13" pos:end="435:13">j</name><operator pos:start="435:14" pos:end="435:14">=</operator><literal type="number" pos:start="435:15" pos:end="435:15">0</literal></expr>;</init> <condition pos:start="435:18" pos:end="435:67"><expr pos:start="435:18" pos:end="435:66"><name pos:start="435:18" pos:end="435:18">j</name><operator pos:start="435:19" pos:end="435:19">&lt;</operator><call pos:start="435:20" pos:end="435:66"><name pos:start="435:20" pos:end="435:52">av_get_channel_layout_nb_channels</name><argument_list pos:start="435:53" pos:end="435:66">(<argument pos:start="435:54" pos:end="435:65"><expr pos:start="435:54" pos:end="435:65"><name pos:start="435:54" pos:end="435:65">in_ch_layout</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="435:69" pos:end="435:71"><expr pos:start="435:69" pos:end="435:71"><name pos:start="435:69" pos:end="435:69">j</name><operator pos:start="435:70" pos:end="435:71">++</operator></expr></incr>)</control><block pos:start="435:73" pos:end="439:9">{<block_content pos:start="437:13" pos:end="437:63">

            <expr_stmt pos:start="437:13" pos:end="437:63"><expr pos:start="437:13" pos:end="437:62"><call pos:start="437:13" pos:end="437:62"><name pos:start="437:13" pos:end="437:18">av_log</name><argument_list pos:start="437:19" pos:end="437:62">(<argument pos:start="437:20" pos:end="437:23"><expr pos:start="437:20" pos:end="437:23"><name pos:start="437:20" pos:end="437:23">NULL</name></expr></argument>, <argument pos:start="437:26" pos:end="437:37"><expr pos:start="437:26" pos:end="437:37"><name pos:start="437:26" pos:end="437:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="437:40" pos:end="437:44"><expr pos:start="437:40" pos:end="437:44"><literal type="string" pos:start="437:40" pos:end="437:44">"%f "</literal></expr></argument>, <argument pos:start="437:47" pos:end="437:61"><expr pos:start="437:47" pos:end="437:61"><name pos:start="437:47" pos:end="437:61"><name pos:start="437:47" pos:end="437:47">s</name><operator pos:start="437:48" pos:end="437:49">-&gt;</operator><name pos:start="437:50" pos:end="437:55">matrix</name><index pos:start="437:56" pos:end="437:58">[<expr pos:start="437:57" pos:end="437:57"><name pos:start="437:57" pos:end="437:57">i</name></expr>]</index><index pos:start="437:59" pos:end="437:61">[<expr pos:start="437:60" pos:end="437:60"><name pos:start="437:60" pos:end="437:60">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="441:9" pos:end="441:41"><expr pos:start="441:9" pos:end="441:40"><call pos:start="441:9" pos:end="441:40"><name pos:start="441:9" pos:end="441:14">av_log</name><argument_list pos:start="441:15" pos:end="441:40">(<argument pos:start="441:16" pos:end="441:19"><expr pos:start="441:16" pos:end="441:19"><name pos:start="441:16" pos:end="441:19">NULL</name></expr></argument>, <argument pos:start="441:22" pos:end="441:33"><expr pos:start="441:22" pos:end="441:33"><name pos:start="441:22" pos:end="441:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="441:36" pos:end="441:39"><expr pos:start="441:36" pos:end="441:39"><literal type="string" pos:start="441:36" pos:end="441:39">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="445:5" pos:end="445:13">return <expr pos:start="445:12" pos:end="445:12"><literal type="number" pos:start="445:12" pos:end="445:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
