<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25155.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">qtrle_decode_24bpp</name><parameter_list pos:start="1:31" pos:end="1:47">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:43">QtrleContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">stream_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">start_line</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:23">lines_to_change</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:10">signed</name> <name pos:start="13:12" pos:end="13:15">char</name></type> <name pos:start="13:17" pos:end="13:24">rle_code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">row_ptr</name></decl>, <decl pos:start="15:18" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:26">pixel_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:39"><decl pos:start="17:5" pos:end="17:38"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">row_inc</name> <init pos:start="17:17" pos:end="17:38">= <expr pos:start="17:19" pos:end="17:38"><name pos:start="17:19" pos:end="17:38"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:26">frame</name><operator pos:start="17:27" pos:end="17:27">.</operator><name pos:start="17:28" pos:end="17:35">linesize</name><index pos:start="17:36" pos:end="17:38">[<expr pos:start="17:37" pos:end="17:37"><literal type="number" pos:start="17:37" pos:end="17:37">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">char</name></type> <name pos:start="19:19" pos:end="19:19">r</name></decl>, <decl pos:start="19:22" pos:end="19:22"><type ref="prev" pos:start="19:5" pos:end="19:17"/><name pos:start="19:22" pos:end="19:22">g</name></decl>, <decl pos:start="19:25" pos:end="19:25"><type ref="prev" pos:start="19:5" pos:end="19:17"/><name pos:start="19:25" pos:end="19:25">b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:42"><decl pos:start="21:5" pos:end="21:41"><type pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:17">char</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:22">rgb</name> <init pos:start="21:24" pos:end="21:41">= <expr pos:start="21:26" pos:end="21:41"><name pos:start="21:26" pos:end="21:41"><name pos:start="21:26" pos:end="21:26">s</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:33">frame</name><operator pos:start="21:34" pos:end="21:34">.</operator><name pos:start="21:35" pos:end="21:38">data</name><index pos:start="21:39" pos:end="21:41">[<expr pos:start="21:40" pos:end="21:40"><literal type="number" pos:start="21:40" pos:end="21:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:62"><decl pos:start="23:5" pos:end="23:61"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:19">pixel_limit</name> <init pos:start="23:21" pos:end="23:61">= <expr pos:start="23:23" pos:end="23:61"><name pos:start="23:23" pos:end="23:42"><name pos:start="23:23" pos:end="23:23">s</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:30">frame</name><operator pos:start="23:31" pos:end="23:31">.</operator><name pos:start="23:32" pos:end="23:39">linesize</name><index pos:start="23:40" pos:end="23:42">[<expr pos:start="23:41" pos:end="23:41"><literal type="number" pos:start="23:41" pos:end="23:41">0</literal></expr>]</index></name> <operator pos:start="23:44" pos:end="23:44">*</operator> <name pos:start="23:46" pos:end="23:61"><name pos:start="23:46" pos:end="23:46">s</name><operator pos:start="23:47" pos:end="23:48">-&gt;</operator><name pos:start="23:49" pos:end="23:53">avctx</name><operator pos:start="23:54" pos:end="23:55">-&gt;</operator><name pos:start="23:56" pos:end="23:61">height</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:56">/* check if this frame is even supposed to change */</comment>

    <if_stmt pos:start="29:5" pos:end="31:15"><if pos:start="29:5" pos:end="31:15">if <condition pos:start="29:8" pos:end="29:20">(<expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">size</name></name> <operator pos:start="29:17" pos:end="29:17">&lt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">8</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:15"><block_content pos:start="31:9" pos:end="31:15">

        <return pos:start="31:9" pos:end="31:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:36">/* start after the chunk size */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:14">stream_ptr</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">4</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:26">/* fetch the header */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:24"><expr pos:start="43:5" pos:end="43:23"><call pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:20">CHECK_STREAM_PTR</name><argument_list pos:start="43:21" pos:end="43:23">(<argument pos:start="43:22" pos:end="43:22"><expr pos:start="43:22" pos:end="43:22"><literal type="number" pos:start="43:22" pos:end="43:22">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:40"><expr pos:start="45:5" pos:end="45:39"><name pos:start="45:5" pos:end="45:10">header</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:39"><name pos:start="45:14" pos:end="45:18">BE_16</name><argument_list pos:start="45:19" pos:end="45:39">(<argument pos:start="45:20" pos:end="45:38"><expr pos:start="45:20" pos:end="45:38"><operator pos:start="45:20" pos:end="45:20">&amp;</operator><name pos:start="45:21" pos:end="45:38"><name pos:start="45:21" pos:end="45:21">s</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:26">buf</name><index pos:start="45:27" pos:end="45:38">[<expr pos:start="45:28" pos:end="45:37"><name pos:start="45:28" pos:end="45:37">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:20"><expr pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:14">stream_ptr</name> <operator pos:start="47:16" pos:end="47:17">+=</operator> <literal type="number" pos:start="47:19" pos:end="47:19">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:70">/* if a header is present, fetch additional decoding parameters */</comment>

    <if_stmt pos:start="53:5" pos:end="71:5"><if pos:start="53:5" pos:end="65:5">if <condition pos:start="53:8" pos:end="53:24">(<expr pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:14">header</name> <operator pos:start="53:16" pos:end="53:16">&amp;</operator> <literal type="number" pos:start="53:18" pos:end="53:23">0x0008</literal></expr>)</condition> <block pos:start="53:26" pos:end="65:5">{<block_content pos:start="55:9" pos:end="63:24">

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><call pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:24">CHECK_STREAM_PTR</name><argument_list pos:start="55:25" pos:end="55:27">(<argument pos:start="55:26" pos:end="55:26"><expr pos:start="55:26" pos:end="55:26"><literal type="number" pos:start="55:26" pos:end="55:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:48"><expr pos:start="57:9" pos:end="57:47"><name pos:start="57:9" pos:end="57:18">start_line</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <call pos:start="57:22" pos:end="57:47"><name pos:start="57:22" pos:end="57:26">BE_16</name><argument_list pos:start="57:27" pos:end="57:47">(<argument pos:start="57:28" pos:end="57:46"><expr pos:start="57:28" pos:end="57:46"><operator pos:start="57:28" pos:end="57:28">&amp;</operator><name pos:start="57:29" pos:end="57:46"><name pos:start="57:29" pos:end="57:29">s</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:34">buf</name><index pos:start="57:35" pos:end="57:46">[<expr pos:start="57:36" pos:end="57:45"><name pos:start="57:36" pos:end="57:45">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:24"><expr pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:18">stream_ptr</name> <operator pos:start="59:20" pos:end="59:21">+=</operator> <literal type="number" pos:start="59:23" pos:end="59:23">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:53"><expr pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:23">lines_to_change</name> <operator pos:start="61:25" pos:end="61:25">=</operator> <call pos:start="61:27" pos:end="61:52"><name pos:start="61:27" pos:end="61:31">BE_16</name><argument_list pos:start="61:32" pos:end="61:52">(<argument pos:start="61:33" pos:end="61:51"><expr pos:start="61:33" pos:end="61:51"><operator pos:start="61:33" pos:end="61:33">&amp;</operator><name pos:start="61:34" pos:end="61:51"><name pos:start="61:34" pos:end="61:34">s</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:39">buf</name><index pos:start="61:40" pos:end="61:51">[<expr pos:start="61:41" pos:end="61:50"><name pos:start="61:41" pos:end="61:50">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:24"><expr pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:18">stream_ptr</name> <operator pos:start="63:20" pos:end="63:21">+=</operator> <literal type="number" pos:start="63:23" pos:end="63:23">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="71:5">else <block pos:start="65:12" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:43">

        <expr_stmt pos:start="67:9" pos:end="67:23"><expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:18">start_line</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:43"><expr pos:start="69:9" pos:end="69:42"><name pos:start="69:9" pos:end="69:23">lines_to_change</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:42"><name pos:start="69:27" pos:end="69:27">s</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:34">avctx</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:42">height</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:35"><expr pos:start="75:5" pos:end="75:34"><name pos:start="75:5" pos:end="75:11">row_ptr</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:21">row_inc</name> <operator pos:start="75:23" pos:end="75:23">*</operator> <name pos:start="75:25" pos:end="75:34">start_line</name></expr>;</expr_stmt>

    <while pos:start="77:5" pos:end="153:5">while <condition pos:start="77:11" pos:end="77:29">(<expr pos:start="77:12" pos:end="77:28"><name pos:start="77:12" pos:end="77:26">lines_to_change</name><operator pos:start="77:27" pos:end="77:28">--</operator></expr>)</condition> <block pos:start="77:31" pos:end="153:5">{<block_content pos:start="79:9" pos:end="151:27">

        <expr_stmt pos:start="79:9" pos:end="79:28"><expr pos:start="79:9" pos:end="79:27"><call pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:24">CHECK_STREAM_PTR</name><argument_list pos:start="79:25" pos:end="79:27">(<argument pos:start="79:26" pos:end="79:26"><expr pos:start="79:26" pos:end="79:26"><literal type="number" pos:start="79:26" pos:end="79:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:61"><expr pos:start="81:9" pos:end="81:60"><name pos:start="81:9" pos:end="81:17">pixel_ptr</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <name pos:start="81:21" pos:end="81:27">row_ptr</name> <operator pos:start="81:29" pos:end="81:29">+</operator> <operator pos:start="81:31" pos:end="81:31">(</operator><name pos:start="81:32" pos:end="81:51"><name pos:start="81:32" pos:end="81:32">s</name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:37">buf</name><index pos:start="81:38" pos:end="81:51">[<expr pos:start="81:39" pos:end="81:50"><name pos:start="81:39" pos:end="81:48">stream_ptr</name><operator pos:start="81:49" pos:end="81:50">++</operator></expr>]</index></name> <operator pos:start="81:53" pos:end="81:53">-</operator> <literal type="number" pos:start="81:55" pos:end="81:55">1</literal><operator pos:start="81:56" pos:end="81:56">)</operator> <operator pos:start="81:58" pos:end="81:58">*</operator> <literal type="number" pos:start="81:60" pos:end="81:60">3</literal></expr>;</expr_stmt>



        <while pos:start="85:9" pos:end="149:9">while <condition pos:start="85:15" pos:end="85:68">(<expr pos:start="85:16" pos:end="85:67"><operator pos:start="85:16" pos:end="85:16">(</operator><name pos:start="85:17" pos:end="85:24">rle_code</name> <operator pos:start="85:26" pos:end="85:26">=</operator> <operator pos:start="85:28" pos:end="85:28">(</operator><name pos:start="85:29" pos:end="85:34">signed</name> <name pos:start="85:36" pos:end="85:39">char</name><operator pos:start="85:40" pos:end="85:40">)</operator><name pos:start="85:41" pos:end="85:60"><name pos:start="85:41" pos:end="85:41">s</name><operator pos:start="85:42" pos:end="85:43">-&gt;</operator><name pos:start="85:44" pos:end="85:46">buf</name><index pos:start="85:47" pos:end="85:60">[<expr pos:start="85:48" pos:end="85:59"><name pos:start="85:48" pos:end="85:57">stream_ptr</name><operator pos:start="85:58" pos:end="85:59">++</operator></expr>]</index></name><operator pos:start="85:61" pos:end="85:61">)</operator> <operator pos:start="85:63" pos:end="85:64">!=</operator> <operator pos:start="85:66" pos:end="85:66">-</operator><literal type="number" pos:start="85:67" pos:end="85:67">1</literal></expr>)</condition> <block pos:start="85:70" pos:end="149:9">{<block_content pos:start="87:13" pos:end="147:13">

            <if_stmt pos:start="87:13" pos:end="147:13"><if pos:start="87:13" pos:end="97:13">if <condition pos:start="87:16" pos:end="87:30">(<expr pos:start="87:17" pos:end="87:29"><name pos:start="87:17" pos:end="87:24">rle_code</name> <operator pos:start="87:26" pos:end="87:27">==</operator> <literal type="number" pos:start="87:29" pos:end="87:29">0</literal></expr>)</condition> <block pos:start="87:32" pos:end="97:13">{<block_content pos:start="91:17" pos:end="95:35">

                <comment type="block" pos:start="89:17" pos:end="89:61">/* there's another skip code in the stream */</comment>

                <expr_stmt pos:start="91:17" pos:end="91:36"><expr pos:start="91:17" pos:end="91:35"><call pos:start="91:17" pos:end="91:35"><name pos:start="91:17" pos:end="91:32">CHECK_STREAM_PTR</name><argument_list pos:start="91:33" pos:end="91:35">(<argument pos:start="91:34" pos:end="91:34"><expr pos:start="91:34" pos:end="91:34"><literal type="number" pos:start="91:34" pos:end="91:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:60"><expr pos:start="93:17" pos:end="93:59"><name pos:start="93:17" pos:end="93:25">pixel_ptr</name> <operator pos:start="93:27" pos:end="93:28">+=</operator> <operator pos:start="93:30" pos:end="93:30">(</operator><name pos:start="93:31" pos:end="93:50"><name pos:start="93:31" pos:end="93:31">s</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:36">buf</name><index pos:start="93:37" pos:end="93:50">[<expr pos:start="93:38" pos:end="93:49"><name pos:start="93:38" pos:end="93:47">stream_ptr</name><operator pos:start="93:48" pos:end="93:49">++</operator></expr>]</index></name> <operator pos:start="93:52" pos:end="93:52">-</operator> <literal type="number" pos:start="93:54" pos:end="93:54">1</literal><operator pos:start="93:55" pos:end="93:55">)</operator> <operator pos:start="93:57" pos:end="93:57">*</operator> <literal type="number" pos:start="93:59" pos:end="93:59">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:35"><expr pos:start="95:17" pos:end="95:34"><call pos:start="95:17" pos:end="95:34"><name pos:start="95:17" pos:end="95:31">CHECK_PIXEL_PTR</name><argument_list pos:start="95:32" pos:end="95:34">(<argument pos:start="95:33" pos:end="95:33"><expr pos:start="95:33" pos:end="95:33"><literal type="number" pos:start="95:33" pos:end="95:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="95:38" pos:end="95:74">/* make sure pixel_ptr is positive */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="97:15" pos:end="127:13">else if <condition pos:start="97:23" pos:end="97:36">(<expr pos:start="97:24" pos:end="97:35"><name pos:start="97:24" pos:end="97:31">rle_code</name> <operator pos:start="97:33" pos:end="97:33">&lt;</operator> <literal type="number" pos:start="97:35" pos:end="97:35">0</literal></expr>)</condition> <block pos:start="97:38" pos:end="127:13">{<block_content pos:start="101:17" pos:end="125:17">

                <comment type="block" pos:start="99:17" pos:end="99:48">/* decode the run length code */</comment>

                <expr_stmt pos:start="101:17" pos:end="101:37"><expr pos:start="101:17" pos:end="101:36"><name pos:start="101:17" pos:end="101:24">rle_code</name> <operator pos:start="101:26" pos:end="101:26">=</operator> <operator pos:start="101:28" pos:end="101:28">-</operator><name pos:start="101:29" pos:end="101:36">rle_code</name></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:36"><expr pos:start="103:17" pos:end="103:35"><call pos:start="103:17" pos:end="103:35"><name pos:start="103:17" pos:end="103:32">CHECK_STREAM_PTR</name><argument_list pos:start="103:33" pos:end="103:35">(<argument pos:start="103:34" pos:end="103:34"><expr pos:start="103:34" pos:end="103:34"><literal type="number" pos:start="103:34" pos:end="103:34">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:41"><expr pos:start="105:17" pos:end="105:40"><name pos:start="105:17" pos:end="105:17">r</name> <operator pos:start="105:19" pos:end="105:19">=</operator> <name pos:start="105:21" pos:end="105:40"><name pos:start="105:21" pos:end="105:21">s</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:26">buf</name><index pos:start="105:27" pos:end="105:40">[<expr pos:start="105:28" pos:end="105:39"><name pos:start="105:28" pos:end="105:37">stream_ptr</name><operator pos:start="105:38" pos:end="105:39">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:41"><expr pos:start="107:17" pos:end="107:40"><name pos:start="107:17" pos:end="107:17">g</name> <operator pos:start="107:19" pos:end="107:19">=</operator> <name pos:start="107:21" pos:end="107:40"><name pos:start="107:21" pos:end="107:21">s</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:26">buf</name><index pos:start="107:27" pos:end="107:40">[<expr pos:start="107:28" pos:end="107:39"><name pos:start="107:28" pos:end="107:37">stream_ptr</name><operator pos:start="107:38" pos:end="107:39">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:41"><expr pos:start="109:17" pos:end="109:40"><name pos:start="109:17" pos:end="109:17">b</name> <operator pos:start="109:19" pos:end="109:19">=</operator> <name pos:start="109:21" pos:end="109:40"><name pos:start="109:21" pos:end="109:21">s</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:26">buf</name><index pos:start="109:27" pos:end="109:40">[<expr pos:start="109:28" pos:end="109:39"><name pos:start="109:28" pos:end="109:37">stream_ptr</name><operator pos:start="109:38" pos:end="109:39">++</operator></expr>]</index></name></expr>;</expr_stmt>



                <expr_stmt pos:start="113:17" pos:end="113:46"><expr pos:start="113:17" pos:end="113:45"><call pos:start="113:17" pos:end="113:45"><name pos:start="113:17" pos:end="113:31">CHECK_PIXEL_PTR</name><argument_list pos:start="113:32" pos:end="113:45">(<argument pos:start="113:33" pos:end="113:44"><expr pos:start="113:33" pos:end="113:44"><name pos:start="113:33" pos:end="113:40">rle_code</name> <operator pos:start="113:42" pos:end="113:42">*</operator> <literal type="number" pos:start="113:44" pos:end="113:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <while pos:start="117:17" pos:end="125:17">while <condition pos:start="117:23" pos:end="117:34">(<expr pos:start="117:24" pos:end="117:33"><name pos:start="117:24" pos:end="117:31">rle_code</name><operator pos:start="117:32" pos:end="117:33">--</operator></expr>)</condition> <block pos:start="117:36" pos:end="125:17">{<block_content pos:start="119:21" pos:end="123:41">

                    <expr_stmt pos:start="119:21" pos:end="119:41"><expr pos:start="119:21" pos:end="119:40"><name pos:start="119:21" pos:end="119:36"><name pos:start="119:21" pos:end="119:23">rgb</name><index pos:start="119:24" pos:end="119:36">[<expr pos:start="119:25" pos:end="119:35"><name pos:start="119:25" pos:end="119:33">pixel_ptr</name><operator pos:start="119:34" pos:end="119:35">++</operator></expr>]</index></name> <operator pos:start="119:38" pos:end="119:38">=</operator> <name pos:start="119:40" pos:end="119:40">r</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="121:21" pos:end="121:41"><expr pos:start="121:21" pos:end="121:40"><name pos:start="121:21" pos:end="121:36"><name pos:start="121:21" pos:end="121:23">rgb</name><index pos:start="121:24" pos:end="121:36">[<expr pos:start="121:25" pos:end="121:35"><name pos:start="121:25" pos:end="121:33">pixel_ptr</name><operator pos:start="121:34" pos:end="121:35">++</operator></expr>]</index></name> <operator pos:start="121:38" pos:end="121:38">=</operator> <name pos:start="121:40" pos:end="121:40">g</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="123:21" pos:end="123:41"><expr pos:start="123:21" pos:end="123:40"><name pos:start="123:21" pos:end="123:36"><name pos:start="123:21" pos:end="123:23">rgb</name><index pos:start="123:24" pos:end="123:36">[<expr pos:start="123:25" pos:end="123:35"><name pos:start="123:25" pos:end="123:33">pixel_ptr</name><operator pos:start="123:34" pos:end="123:35">++</operator></expr>]</index></name> <operator pos:start="123:38" pos:end="123:38">=</operator> <name pos:start="123:40" pos:end="123:40">b</name></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if> <else pos:start="127:15" pos:end="147:13">else <block pos:start="127:20" pos:end="147:13">{<block_content pos:start="129:17" pos:end="145:17">

                <expr_stmt pos:start="129:17" pos:end="129:47"><expr pos:start="129:17" pos:end="129:46"><call pos:start="129:17" pos:end="129:46"><name pos:start="129:17" pos:end="129:32">CHECK_STREAM_PTR</name><argument_list pos:start="129:33" pos:end="129:46">(<argument pos:start="129:34" pos:end="129:45"><expr pos:start="129:34" pos:end="129:45"><name pos:start="129:34" pos:end="129:41">rle_code</name> <operator pos:start="129:43" pos:end="129:43">*</operator> <literal type="number" pos:start="129:45" pos:end="129:45">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:46"><expr pos:start="131:17" pos:end="131:45"><call pos:start="131:17" pos:end="131:45"><name pos:start="131:17" pos:end="131:31">CHECK_PIXEL_PTR</name><argument_list pos:start="131:32" pos:end="131:45">(<argument pos:start="131:33" pos:end="131:44"><expr pos:start="131:33" pos:end="131:44"><name pos:start="131:33" pos:end="131:40">rle_code</name> <operator pos:start="131:42" pos:end="131:42">*</operator> <literal type="number" pos:start="131:44" pos:end="131:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="135:17" pos:end="135:52">/* copy pixels directly to output */</comment>

                <while pos:start="137:17" pos:end="145:17">while <condition pos:start="137:23" pos:end="137:34">(<expr pos:start="137:24" pos:end="137:33"><name pos:start="137:24" pos:end="137:31">rle_code</name><operator pos:start="137:32" pos:end="137:33">--</operator></expr>)</condition> <block pos:start="137:36" pos:end="145:17">{<block_content pos:start="139:21" pos:end="143:60">

                    <expr_stmt pos:start="139:21" pos:end="139:60"><expr pos:start="139:21" pos:end="139:59"><name pos:start="139:21" pos:end="139:36"><name pos:start="139:21" pos:end="139:23">rgb</name><index pos:start="139:24" pos:end="139:36">[<expr pos:start="139:25" pos:end="139:35"><name pos:start="139:25" pos:end="139:33">pixel_ptr</name><operator pos:start="139:34" pos:end="139:35">++</operator></expr>]</index></name> <operator pos:start="139:38" pos:end="139:38">=</operator> <name pos:start="139:40" pos:end="139:59"><name pos:start="139:40" pos:end="139:40">s</name><operator pos:start="139:41" pos:end="139:42">-&gt;</operator><name pos:start="139:43" pos:end="139:45">buf</name><index pos:start="139:46" pos:end="139:59">[<expr pos:start="139:47" pos:end="139:58"><name pos:start="139:47" pos:end="139:56">stream_ptr</name><operator pos:start="139:57" pos:end="139:58">++</operator></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:60"><expr pos:start="141:21" pos:end="141:59"><name pos:start="141:21" pos:end="141:36"><name pos:start="141:21" pos:end="141:23">rgb</name><index pos:start="141:24" pos:end="141:36">[<expr pos:start="141:25" pos:end="141:35"><name pos:start="141:25" pos:end="141:33">pixel_ptr</name><operator pos:start="141:34" pos:end="141:35">++</operator></expr>]</index></name> <operator pos:start="141:38" pos:end="141:38">=</operator> <name pos:start="141:40" pos:end="141:59"><name pos:start="141:40" pos:end="141:40">s</name><operator pos:start="141:41" pos:end="141:42">-&gt;</operator><name pos:start="141:43" pos:end="141:45">buf</name><index pos:start="141:46" pos:end="141:59">[<expr pos:start="141:47" pos:end="141:58"><name pos:start="141:47" pos:end="141:56">stream_ptr</name><operator pos:start="141:57" pos:end="141:58">++</operator></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:60"><expr pos:start="143:21" pos:end="143:59"><name pos:start="143:21" pos:end="143:36"><name pos:start="143:21" pos:end="143:23">rgb</name><index pos:start="143:24" pos:end="143:36">[<expr pos:start="143:25" pos:end="143:35"><name pos:start="143:25" pos:end="143:33">pixel_ptr</name><operator pos:start="143:34" pos:end="143:35">++</operator></expr>]</index></name> <operator pos:start="143:38" pos:end="143:38">=</operator> <name pos:start="143:40" pos:end="143:59"><name pos:start="143:40" pos:end="143:40">s</name><operator pos:start="143:41" pos:end="143:42">-&gt;</operator><name pos:start="143:43" pos:end="143:45">buf</name><index pos:start="143:46" pos:end="143:59">[<expr pos:start="143:47" pos:end="143:58"><name pos:start="143:47" pos:end="143:56">stream_ptr</name><operator pos:start="143:57" pos:end="143:58">++</operator></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="151:9" pos:end="151:27"><expr pos:start="151:9" pos:end="151:26"><name pos:start="151:9" pos:end="151:15">row_ptr</name> <operator pos:start="151:17" pos:end="151:18">+=</operator> <name pos:start="151:20" pos:end="151:26">row_inc</name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
