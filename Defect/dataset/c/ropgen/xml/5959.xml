<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5959.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">client_migrate_info</name><parameter_list pos:start="1:31" pos:end="3:66">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:38">Monitor</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">mon</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:63"><decl pos:start="1:46" pos:end="1:63"><type pos:start="1:46" pos:end="1:63"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:56">QDict</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">qdict</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:51"><decl pos:start="3:32" pos:end="3:51"><type pos:start="3:32" pos:end="3:51"><name pos:start="3:32" pos:end="3:48">MonitorCompletion</name></type> <name pos:start="3:50" pos:end="3:51">cb</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:65"><decl pos:start="3:54" pos:end="3:65"><type pos:start="3:54" pos:end="3:65"><name pos:start="3:54" pos:end="3:57">void</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:65">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:14">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:24">protocol</name> <init pos:start="7:26" pos:end="7:59">= <expr pos:start="7:28" pos:end="7:59"><call pos:start="7:28" pos:end="7:59"><name pos:start="7:28" pos:end="7:40">qdict_get_str</name><argument_list pos:start="7:41" pos:end="7:59">(<argument pos:start="7:42" pos:end="7:46"><expr pos:start="7:42" pos:end="7:46"><name pos:start="7:42" pos:end="7:46">qdict</name></expr></argument>, <argument pos:start="7:49" pos:end="7:58"><expr pos:start="7:49" pos:end="7:58"><literal type="string" pos:start="7:49" pos:end="7:58">"protocol"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">hostname</name> <init pos:start="9:26" pos:end="9:59">= <expr pos:start="9:28" pos:end="9:59"><call pos:start="9:28" pos:end="9:59"><name pos:start="9:28" pos:end="9:40">qdict_get_str</name><argument_list pos:start="9:41" pos:end="9:59">(<argument pos:start="9:42" pos:end="9:46"><expr pos:start="9:42" pos:end="9:46"><name pos:start="9:42" pos:end="9:46">qdict</name></expr></argument>, <argument pos:start="9:49" pos:end="9:58"><expr pos:start="9:49" pos:end="9:58"><literal type="string" pos:start="9:49" pos:end="9:58">"hostname"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:68"><decl pos:start="11:5" pos:end="11:67"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:23">subject</name>  <init pos:start="11:26" pos:end="11:67">= <expr pos:start="11:28" pos:end="11:67"><call pos:start="11:28" pos:end="11:67"><name pos:start="11:28" pos:end="11:44">qdict_get_try_str</name><argument_list pos:start="11:45" pos:end="11:67">(<argument pos:start="11:46" pos:end="11:50"><expr pos:start="11:46" pos:end="11:50"><name pos:start="11:46" pos:end="11:50">qdict</name></expr></argument>, <argument pos:start="11:53" pos:end="11:66"><expr pos:start="11:53" pos:end="11:66"><literal type="string" pos:start="11:53" pos:end="11:66">"cert-subject"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:64"><decl pos:start="13:5" pos:end="13:63"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">port</name>             <init pos:start="13:26" pos:end="13:63">= <expr pos:start="13:28" pos:end="13:63"><call pos:start="13:28" pos:end="13:63"><name pos:start="13:28" pos:end="13:44">qdict_get_try_int</name><argument_list pos:start="13:45" pos:end="13:63">(<argument pos:start="13:46" pos:end="13:50"><expr pos:start="13:46" pos:end="13:50"><name pos:start="13:46" pos:end="13:50">qdict</name></expr></argument>, <argument pos:start="13:53" pos:end="13:58"><expr pos:start="13:53" pos:end="13:58"><literal type="string" pos:start="13:53" pos:end="13:58">"port"</literal></expr></argument>, <argument pos:start="13:61" pos:end="13:62"><expr pos:start="13:61" pos:end="13:62"><operator pos:start="13:61" pos:end="13:61">-</operator><literal type="number" pos:start="13:62" pos:end="13:62">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:68"><decl pos:start="15:5" pos:end="15:67"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">tls_port</name>         <init pos:start="15:26" pos:end="15:67">= <expr pos:start="15:28" pos:end="15:67"><call pos:start="15:28" pos:end="15:67"><name pos:start="15:28" pos:end="15:44">qdict_get_try_int</name><argument_list pos:start="15:45" pos:end="15:67">(<argument pos:start="15:46" pos:end="15:50"><expr pos:start="15:46" pos:end="15:50"><name pos:start="15:46" pos:end="15:50">qdict</name></expr></argument>, <argument pos:start="15:53" pos:end="15:62"><expr pos:start="15:53" pos:end="15:62"><literal type="string" pos:start="15:53" pos:end="15:62">"tls-port"</literal></expr></argument>, <argument pos:start="15:65" pos:end="15:66"><expr pos:start="15:65" pos:end="15:66"><operator pos:start="15:65" pos:end="15:65">-</operator><literal type="number" pos:start="15:66" pos:end="15:66">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">Error</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:14">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="59:5"><if pos:start="23:5" pos:end="59:5">if <condition pos:start="23:8" pos:end="23:39">(<expr pos:start="23:9" pos:end="23:38"><call pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:14">strcmp</name><argument_list pos:start="23:15" pos:end="23:33">(<argument pos:start="23:16" pos:end="23:23"><expr pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:23">protocol</name></expr></argument>, <argument pos:start="23:26" pos:end="23:32"><expr pos:start="23:26" pos:end="23:32"><literal type="string" pos:start="23:26" pos:end="23:32">"spice"</literal></expr></argument>)</argument_list></call> <operator pos:start="23:35" pos:end="23:36">==</operator> <literal type="number" pos:start="23:38" pos:end="23:38">0</literal></expr>)</condition> <block pos:start="23:41" pos:end="59:5">{<block_content pos:start="25:9" pos:end="57:17">

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:36">(<expr pos:start="25:13" pos:end="25:35"><operator pos:start="25:13" pos:end="25:13">!</operator><call pos:start="25:14" pos:end="25:35"><name pos:start="25:14" pos:end="25:29">qemu_using_spice</name><argument_list pos:start="25:30" pos:end="25:35">(<argument pos:start="25:31" pos:end="25:34"><expr pos:start="25:31" pos:end="25:34"><operator pos:start="25:31" pos:end="25:31">&amp;</operator><name pos:start="25:32" pos:end="25:34">err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:38" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:22">

            <expr_stmt pos:start="27:13" pos:end="27:35"><expr pos:start="27:13" pos:end="27:34"><call pos:start="27:13" pos:end="27:34"><name pos:start="27:13" pos:end="27:29">qerror_report_err</name><argument_list pos:start="27:30" pos:end="27:34">(<argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:22">return <expr pos:start="29:20" pos:end="29:21"><operator pos:start="29:20" pos:end="29:20">-</operator><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:41">(<expr pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:16">port</name> <operator pos:start="35:18" pos:end="35:19">==</operator> <operator pos:start="35:21" pos:end="35:21">-</operator><literal type="number" pos:start="35:22" pos:end="35:22">1</literal> <operator pos:start="35:24" pos:end="35:25">&amp;&amp;</operator> <name pos:start="35:27" pos:end="35:34">tls_port</name> <operator pos:start="35:36" pos:end="35:37">==</operator> <operator pos:start="35:39" pos:end="35:39">-</operator><literal type="number" pos:start="35:40" pos:end="35:40">1</literal></expr>)</condition> <block pos:start="35:43" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:22">

            <expr_stmt pos:start="37:13" pos:end="37:67"><expr pos:start="37:13" pos:end="37:66"><call pos:start="37:13" pos:end="37:66"><name pos:start="37:13" pos:end="37:25">qerror_report</name><argument_list pos:start="37:26" pos:end="37:66">(<argument pos:start="37:27" pos:end="37:48"><expr pos:start="37:27" pos:end="37:48"><name pos:start="37:27" pos:end="37:48">QERR_MISSING_PARAMETER</name></expr></argument>, <argument pos:start="37:51" pos:end="37:65"><expr pos:start="37:51" pos:end="37:65"><literal type="string" pos:start="37:51" pos:end="37:65">"port/tls-port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:22">return <expr pos:start="39:20" pos:end="39:21"><operator pos:start="39:20" pos:end="39:20">-</operator><literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="45:9" pos:end="47:50"><expr pos:start="45:9" pos:end="47:49"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="47:49"><name pos:start="45:15" pos:end="45:37">qemu_spice_migrate_info</name><argument_list pos:start="45:38" pos:end="47:49">(<argument pos:start="45:39" pos:end="45:46"><expr pos:start="45:39" pos:end="45:46"><name pos:start="45:39" pos:end="45:46">hostname</name></expr></argument>, <argument pos:start="45:49" pos:end="45:52"><expr pos:start="45:49" pos:end="45:52"><name pos:start="45:49" pos:end="45:52">port</name></expr></argument>, <argument pos:start="45:55" pos:end="45:62"><expr pos:start="45:55" pos:end="45:62"><name pos:start="45:55" pos:end="45:62">tls_port</name></expr></argument>, <argument pos:start="45:65" pos:end="45:71"><expr pos:start="45:65" pos:end="45:71"><name pos:start="45:65" pos:end="45:71">subject</name></expr></argument>,

                                      <argument pos:start="47:39" pos:end="47:40"><expr pos:start="47:39" pos:end="47:40"><name pos:start="47:39" pos:end="47:40">cb</name></expr></argument>, <argument pos:start="47:43" pos:end="47:48"><expr pos:start="47:43" pos:end="47:48"><name pos:start="47:43" pos:end="47:48">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:21">(<expr pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:18">!=</operator> <literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>)</condition> <block pos:start="49:23" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:22">

            <expr_stmt pos:start="51:13" pos:end="51:48"><expr pos:start="51:13" pos:end="51:47"><call pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:25">qerror_report</name><argument_list pos:start="51:26" pos:end="51:47">(<argument pos:start="51:27" pos:end="51:46"><expr pos:start="51:27" pos:end="51:46"><name pos:start="51:27" pos:end="51:46">QERR_UNDEFINED_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:22">return <expr pos:start="53:20" pos:end="53:21"><operator pos:start="53:20" pos:end="53:20">-</operator><literal type="number" pos:start="53:21" pos:end="53:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="57:9" pos:end="57:17">return <expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:54"><expr pos:start="63:5" pos:end="63:53"><call pos:start="63:5" pos:end="63:53"><name pos:start="63:5" pos:end="63:17">qerror_report</name><argument_list pos:start="63:18" pos:end="63:53">(<argument pos:start="63:19" pos:end="63:40"><expr pos:start="63:19" pos:end="63:40"><name pos:start="63:19" pos:end="63:40">QERR_INVALID_PARAMETER</name></expr></argument>, <argument pos:start="63:43" pos:end="63:52"><expr pos:start="63:43" pos:end="63:52"><literal type="string" pos:start="63:43" pos:end="63:52">"protocol"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="65:5" pos:end="65:14">return <expr pos:start="65:12" pos:end="65:13"><operator pos:start="65:12" pos:end="65:12">-</operator><literal type="number" pos:start="65:13" pos:end="65:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
