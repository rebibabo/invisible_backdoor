<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18548.c" pos:tabs="8"><function pos:start="1:1" pos:end="501:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">svq3_decode_mb</name> <parameter_list pos:start="1:27" pos:end="1:64">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">H264Context</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">h</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><name pos:start="1:44" pos:end="1:51">unsigned</name> <name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:63">mb_type</name></decl></parameter>)</parameter_list> <block pos:start="1:66" pos:end="501:1">{<block_content pos:start="3:3" pos:end="499:11">

  <decl_stmt pos:start="3:3" pos:end="3:28"><decl pos:start="3:3" pos:end="3:7"><type pos:start="3:3" pos:end="3:5"><name pos:start="3:3" pos:end="3:5">int</name></type> <name pos:start="3:7" pos:end="3:7">i</name></decl>, <decl pos:start="3:10" pos:end="3:10"><type ref="prev" pos:start="3:3" pos:end="3:5"/><name pos:start="3:10" pos:end="3:10">j</name></decl>, <decl pos:start="3:13" pos:end="3:13"><type ref="prev" pos:start="3:3" pos:end="3:5"/><name pos:start="3:13" pos:end="3:13">k</name></decl>, <decl pos:start="3:16" pos:end="3:16"><type ref="prev" pos:start="3:3" pos:end="3:5"/><name pos:start="3:16" pos:end="3:16">m</name></decl>, <decl pos:start="3:19" pos:end="3:21"><type ref="prev" pos:start="3:3" pos:end="3:5"/><name pos:start="3:19" pos:end="3:21">dir</name></decl>, <decl pos:start="3:24" pos:end="3:27"><type ref="prev" pos:start="3:3" pos:end="3:5"/><name pos:start="3:24" pos:end="3:27">mode</name></decl>;</decl_stmt>

  <decl_stmt pos:start="5:3" pos:end="5:14"><decl pos:start="5:3" pos:end="5:13"><type pos:start="5:3" pos:end="5:5"><name pos:start="5:3" pos:end="5:5">int</name></type> <name pos:start="5:7" pos:end="5:9">cbp</name> <init pos:start="5:11" pos:end="5:13">= <expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="7:3" pos:end="7:15"><decl pos:start="7:3" pos:end="7:14"><type pos:start="7:3" pos:end="7:10"><name pos:start="7:3" pos:end="7:10">uint32_t</name></type> <name pos:start="7:12" pos:end="7:14">vlc</name></decl>;</decl_stmt>

  <decl_stmt pos:start="9:3" pos:end="9:21"><decl pos:start="9:3" pos:end="9:13"><type pos:start="9:3" pos:end="9:10"><name pos:start="9:3" pos:end="9:8">int8_t</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">top</name></decl>, <decl pos:start="9:16" pos:end="9:20"><type ref="prev" pos:start="9:3" pos:end="9:10"><modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:20">left</name></decl>;</decl_stmt>

  <decl_stmt pos:start="11:3" pos:end="11:49"><decl pos:start="11:3" pos:end="11:48"><type pos:start="11:3" pos:end="11:23"><name pos:start="11:3" pos:end="11:16">MpegEncContext</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier><specifier pos:start="11:19" pos:end="11:23">const</specifier></type> <name pos:start="11:25" pos:end="11:25">s</name> <init pos:start="11:27" pos:end="11:48">= <expr pos:start="11:29" pos:end="11:48"><operator pos:start="11:29" pos:end="11:29">(</operator><name pos:start="11:30" pos:end="11:43">MpegEncContext</name> <operator pos:start="11:45" pos:end="11:45">*</operator><operator pos:start="11:46" pos:end="11:46">)</operator> <name pos:start="11:48" pos:end="11:48">h</name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="13:3" pos:end="13:51"><decl pos:start="13:3" pos:end="13:50"><type pos:start="13:3" pos:end="13:11"><specifier pos:start="13:3" pos:end="13:7">const</specifier> <name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:17">mb_xy</name> <init pos:start="13:19" pos:end="13:50">= <expr pos:start="13:21" pos:end="13:50"><name pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:27">mb_x</name></name> <operator pos:start="13:29" pos:end="13:29">+</operator> <name pos:start="13:31" pos:end="13:37"><name pos:start="13:31" pos:end="13:31">s</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:37">mb_y</name></name><operator pos:start="13:38" pos:end="13:38">*</operator><name pos:start="13:39" pos:end="13:50"><name pos:start="13:39" pos:end="13:39">s</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:50">mb_stride</name></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="15:3" pos:end="15:53"><decl pos:start="15:3" pos:end="15:52"><type pos:start="15:3" pos:end="15:11"><specifier pos:start="15:3" pos:end="15:7">const</specifier> <name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:16">b_xy</name> <init pos:start="15:18" pos:end="15:52">= <expr pos:start="15:20" pos:end="15:52"><literal type="number" pos:start="15:20" pos:end="15:20">4</literal><operator pos:start="15:21" pos:end="15:21">*</operator><name pos:start="15:22" pos:end="15:28"><name pos:start="15:22" pos:end="15:22">s</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:28">mb_x</name></name> <operator pos:start="15:30" pos:end="15:30">+</operator> <literal type="number" pos:start="15:32" pos:end="15:32">4</literal><operator pos:start="15:33" pos:end="15:33">*</operator><name pos:start="15:34" pos:end="15:40"><name pos:start="15:34" pos:end="15:34">s</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:40">mb_y</name></name><operator pos:start="15:41" pos:end="15:41">*</operator><name pos:start="15:42" pos:end="15:52"><name pos:start="15:42" pos:end="15:42">h</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:52">b_stride</name></name></expr></init></decl>;</decl_stmt>



  <expr_stmt pos:start="19:3" pos:end="19:67"><expr pos:start="19:3" pos:end="19:66"><name pos:start="19:3" pos:end="19:26"><name pos:start="19:3" pos:end="19:3">h</name><operator pos:start="19:4" pos:end="19:5">-&gt;</operator><name pos:start="19:6" pos:end="19:26">top_samples_available</name></name>	<operator pos:start="19:33" pos:end="19:33">=</operator> <ternary pos:start="19:35" pos:end="19:66"><condition pos:start="19:35" pos:end="19:50"><expr pos:start="19:35" pos:end="19:48"><operator pos:start="19:35" pos:end="19:35">(</operator><name pos:start="19:36" pos:end="19:42"><name pos:start="19:36" pos:end="19:36">s</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:42">mb_y</name></name> <operator pos:start="19:44" pos:end="19:45">==</operator> <literal type="number" pos:start="19:47" pos:end="19:47">0</literal><operator pos:start="19:48" pos:end="19:48">)</operator></expr> ?</condition><then pos:start="19:52" pos:end="19:57"> <expr pos:start="19:52" pos:end="19:57"><literal type="number" pos:start="19:52" pos:end="19:57">0x33FF</literal></expr> </then><else pos:start="19:59" pos:end="19:66">: <expr pos:start="19:61" pos:end="19:66"><literal type="number" pos:start="19:61" pos:end="19:66">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

  <expr_stmt pos:start="21:3" pos:end="21:67"><expr pos:start="21:3" pos:end="21:66"><name pos:start="21:3" pos:end="21:27"><name pos:start="21:3" pos:end="21:3">h</name><operator pos:start="21:4" pos:end="21:5">-&gt;</operator><name pos:start="21:6" pos:end="21:27">left_samples_available</name></name>	<operator pos:start="21:33" pos:end="21:33">=</operator> <ternary pos:start="21:35" pos:end="21:66"><condition pos:start="21:35" pos:end="21:50"><expr pos:start="21:35" pos:end="21:48"><operator pos:start="21:35" pos:end="21:35">(</operator><name pos:start="21:36" pos:end="21:42"><name pos:start="21:36" pos:end="21:36">s</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:42">mb_x</name></name> <operator pos:start="21:44" pos:end="21:45">==</operator> <literal type="number" pos:start="21:47" pos:end="21:47">0</literal><operator pos:start="21:48" pos:end="21:48">)</operator></expr> ?</condition><then pos:start="21:52" pos:end="21:57"> <expr pos:start="21:52" pos:end="21:57"><literal type="number" pos:start="21:52" pos:end="21:57">0x5F5F</literal></expr> </then><else pos:start="21:59" pos:end="21:66">: <expr pos:start="21:61" pos:end="21:66"><literal type="number" pos:start="21:61" pos:end="21:66">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

  <expr_stmt pos:start="23:3" pos:end="23:41"><expr pos:start="23:3" pos:end="23:40"><name pos:start="23:3" pos:end="23:31"><name pos:start="23:3" pos:end="23:3">h</name><operator pos:start="23:4" pos:end="23:5">-&gt;</operator><name pos:start="23:6" pos:end="23:31">topright_samples_available</name></name>	<operator pos:start="23:33" pos:end="23:33">=</operator> <literal type="number" pos:start="23:35" pos:end="23:40">0xFFFF</literal></expr>;</expr_stmt>



  <if_stmt pos:start="27:3" pos:end="347:3"><if pos:start="27:3" pos:end="59:3">if <condition pos:start="27:6" pos:end="27:19">(<expr pos:start="27:7" pos:end="27:18"><name pos:start="27:7" pos:end="27:13">mb_type</name> <operator pos:start="27:15" pos:end="27:16">==</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>)</condition> <block pos:start="27:21" pos:end="59:3">{<block_content pos:start="29:5" pos:end="57:5">		<comment type="block" pos:start="27:33" pos:end="27:42">/* SKIP */</comment>

    <if_stmt pos:start="29:5" pos:end="57:5"><if pos:start="29:5" pos:end="45:5">if <condition pos:start="29:8" pos:end="29:71">(<expr pos:start="29:9" pos:end="29:70"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:20">pict_type</name></name> <operator pos:start="29:22" pos:end="29:23">==</operator> <name pos:start="29:25" pos:end="29:30">P_TYPE</name> <operator pos:start="29:32" pos:end="29:33">||</operator> <name pos:start="29:35" pos:end="29:64"><name pos:start="29:35" pos:end="29:35">s</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:49">next_picture</name><operator pos:start="29:50" pos:end="29:50">.</operator><name pos:start="29:51" pos:end="29:57">mb_type</name><index pos:start="29:58" pos:end="29:64">[<expr pos:start="29:59" pos:end="29:63"><name pos:start="29:59" pos:end="29:63">mb_xy</name></expr>]</index></name> <operator pos:start="29:66" pos:end="29:67">==</operator> <operator pos:start="29:69" pos:end="29:69">-</operator><literal type="number" pos:start="29:70" pos:end="29:70">1</literal></expr>)</condition> <block pos:start="29:73" pos:end="45:5">{<block_content pos:start="31:7" pos:end="43:29">

      <expr_stmt pos:start="31:7" pos:end="31:77"><expr pos:start="31:7" pos:end="31:76"><call pos:start="31:7" pos:end="31:76"><name pos:start="31:7" pos:end="31:22">svq3_mc_dir_part</name> <argument_list pos:start="31:24" pos:end="31:76">(<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">s</name></expr></argument>, <argument pos:start="31:28" pos:end="31:37"><expr pos:start="31:28" pos:end="31:37"><literal type="number" pos:start="31:28" pos:end="31:29">16</literal><operator pos:start="31:30" pos:end="31:30">*</operator><name pos:start="31:31" pos:end="31:37"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:37">mb_x</name></name></expr></argument>, <argument pos:start="31:40" pos:end="31:49"><expr pos:start="31:40" pos:end="31:49"><literal type="number" pos:start="31:40" pos:end="31:41">16</literal><operator pos:start="31:42" pos:end="31:42">*</operator><name pos:start="31:43" pos:end="31:49"><name pos:start="31:43" pos:end="31:43">s</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:49">mb_y</name></name></expr></argument>, <argument pos:start="31:52" pos:end="31:53"><expr pos:start="31:52" pos:end="31:53"><literal type="number" pos:start="31:52" pos:end="31:53">16</literal></expr></argument>, <argument pos:start="31:56" pos:end="31:57"><expr pos:start="31:56" pos:end="31:57"><literal type="number" pos:start="31:56" pos:end="31:57">16</literal></expr></argument>, <argument pos:start="31:60" pos:end="31:60"><expr pos:start="31:60" pos:end="31:60"><literal type="number" pos:start="31:60" pos:end="31:60">0</literal></expr></argument>, <argument pos:start="31:63" pos:end="31:63"><expr pos:start="31:63" pos:end="31:63"><literal type="number" pos:start="31:63" pos:end="31:63">0</literal></expr></argument>, <argument pos:start="31:66" pos:end="31:66"><expr pos:start="31:66" pos:end="31:66"><literal type="number" pos:start="31:66" pos:end="31:66">0</literal></expr></argument>, <argument pos:start="31:69" pos:end="31:69"><expr pos:start="31:69" pos:end="31:69"><literal type="number" pos:start="31:69" pos:end="31:69">0</literal></expr></argument>, <argument pos:start="31:72" pos:end="31:72"><expr pos:start="31:72" pos:end="31:72"><literal type="number" pos:start="31:72" pos:end="31:72">0</literal></expr></argument>, <argument pos:start="31:75" pos:end="31:75"><expr pos:start="31:75" pos:end="31:75"><literal type="number" pos:start="31:75" pos:end="31:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <if_stmt pos:start="35:7" pos:end="39:7"><if pos:start="35:7" pos:end="39:7">if <condition pos:start="35:10" pos:end="35:33">(<expr pos:start="35:11" pos:end="35:32"><name pos:start="35:11" pos:end="35:22"><name pos:start="35:11" pos:end="35:11">s</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:22">pict_type</name></name> <operator pos:start="35:24" pos:end="35:25">==</operator> <name pos:start="35:27" pos:end="35:32">B_TYPE</name></expr>)</condition> <block pos:start="35:35" pos:end="39:7">{<block_content pos:start="37:9" pos:end="37:79">

	<expr_stmt pos:start="37:9" pos:end="37:79"><expr pos:start="37:9" pos:end="37:78"><call pos:start="37:9" pos:end="37:78"><name pos:start="37:9" pos:end="37:24">svq3_mc_dir_part</name> <argument_list pos:start="37:26" pos:end="37:78">(<argument pos:start="37:27" pos:end="37:27"><expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">s</name></expr></argument>, <argument pos:start="37:30" pos:end="37:39"><expr pos:start="37:30" pos:end="37:39"><literal type="number" pos:start="37:30" pos:end="37:31">16</literal><operator pos:start="37:32" pos:end="37:32">*</operator><name pos:start="37:33" pos:end="37:39"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:39">mb_x</name></name></expr></argument>, <argument pos:start="37:42" pos:end="37:51"><expr pos:start="37:42" pos:end="37:51"><literal type="number" pos:start="37:42" pos:end="37:43">16</literal><operator pos:start="37:44" pos:end="37:44">*</operator><name pos:start="37:45" pos:end="37:51"><name pos:start="37:45" pos:end="37:45">s</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:51">mb_y</name></name></expr></argument>, <argument pos:start="37:54" pos:end="37:55"><expr pos:start="37:54" pos:end="37:55"><literal type="number" pos:start="37:54" pos:end="37:55">16</literal></expr></argument>, <argument pos:start="37:58" pos:end="37:59"><expr pos:start="37:58" pos:end="37:59"><literal type="number" pos:start="37:58" pos:end="37:59">16</literal></expr></argument>, <argument pos:start="37:62" pos:end="37:62"><expr pos:start="37:62" pos:end="37:62"><literal type="number" pos:start="37:62" pos:end="37:62">0</literal></expr></argument>, <argument pos:start="37:65" pos:end="37:65"><expr pos:start="37:65" pos:end="37:65"><literal type="number" pos:start="37:65" pos:end="37:65">0</literal></expr></argument>, <argument pos:start="37:68" pos:end="37:68"><expr pos:start="37:68" pos:end="37:68"><literal type="number" pos:start="37:68" pos:end="37:68">0</literal></expr></argument>, <argument pos:start="37:71" pos:end="37:71"><expr pos:start="37:71" pos:end="37:71"><literal type="number" pos:start="37:71" pos:end="37:71">0</literal></expr></argument>, <argument pos:start="37:74" pos:end="37:74"><expr pos:start="37:74" pos:end="37:74"><literal type="number" pos:start="37:74" pos:end="37:74">1</literal></expr></argument>, <argument pos:start="37:77" pos:end="37:77"><expr pos:start="37:77" pos:end="37:77"><literal type="number" pos:start="37:77" pos:end="37:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></if></if_stmt>



      <expr_stmt pos:start="43:7" pos:end="43:29"><expr pos:start="43:7" pos:end="43:28"><name pos:start="43:7" pos:end="43:13">mb_type</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <name pos:start="43:17" pos:end="43:28">MB_TYPE_SKIP</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="57:5">else <block pos:start="45:12" pos:end="57:5">{<block_content pos:start="47:7" pos:end="55:30">

      <expr_stmt pos:start="47:7" pos:end="47:56"><expr pos:start="47:7" pos:end="47:55"><name pos:start="47:7" pos:end="47:13">mb_type</name><operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:55"><name pos:start="47:16" pos:end="47:20">FFMIN</name><argument_list pos:start="47:21" pos:end="47:55">(<argument pos:start="47:22" pos:end="47:51"><expr pos:start="47:22" pos:end="47:51"><name pos:start="47:22" pos:end="47:51"><name pos:start="47:22" pos:end="47:22">s</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:36">next_picture</name><operator pos:start="47:37" pos:end="47:37">.</operator><name pos:start="47:38" pos:end="47:44">mb_type</name><index pos:start="47:45" pos:end="47:51">[<expr pos:start="47:46" pos:end="47:50"><name pos:start="47:46" pos:end="47:50">mb_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="47:54" pos:end="47:54"><expr pos:start="47:54" pos:end="47:54"><literal type="number" pos:start="47:54" pos:end="47:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="49:7" pos:end="49:51"><expr pos:start="49:7" pos:end="49:50"><call pos:start="49:7" pos:end="49:50"><name pos:start="49:7" pos:end="49:17">svq3_mc_dir</name> <argument_list pos:start="49:19" pos:end="49:50">(<argument pos:start="49:20" pos:end="49:20"><expr pos:start="49:20" pos:end="49:20"><name pos:start="49:20" pos:end="49:20">h</name></expr></argument>, <argument pos:start="49:23" pos:end="49:29"><expr pos:start="49:23" pos:end="49:29"><name pos:start="49:23" pos:end="49:29">mb_type</name></expr></argument>, <argument pos:start="49:32" pos:end="49:43"><expr pos:start="49:32" pos:end="49:43"><name pos:start="49:32" pos:end="49:43">PREDICT_MODE</name></expr></argument>, <argument pos:start="49:46" pos:end="49:46"><expr pos:start="49:46" pos:end="49:46"><literal type="number" pos:start="49:46" pos:end="49:46">0</literal></expr></argument>, <argument pos:start="49:49" pos:end="49:49"><expr pos:start="49:49" pos:end="49:49"><literal type="number" pos:start="49:49" pos:end="49:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="51:7" pos:end="51:51"><expr pos:start="51:7" pos:end="51:50"><call pos:start="51:7" pos:end="51:50"><name pos:start="51:7" pos:end="51:17">svq3_mc_dir</name> <argument_list pos:start="51:19" pos:end="51:50">(<argument pos:start="51:20" pos:end="51:20"><expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">h</name></expr></argument>, <argument pos:start="51:23" pos:end="51:29"><expr pos:start="51:23" pos:end="51:29"><name pos:start="51:23" pos:end="51:29">mb_type</name></expr></argument>, <argument pos:start="51:32" pos:end="51:43"><expr pos:start="51:32" pos:end="51:43"><name pos:start="51:32" pos:end="51:43">PREDICT_MODE</name></expr></argument>, <argument pos:start="51:46" pos:end="51:46"><expr pos:start="51:46" pos:end="51:46"><literal type="number" pos:start="51:46" pos:end="51:46">1</literal></expr></argument>, <argument pos:start="51:49" pos:end="51:49"><expr pos:start="51:49" pos:end="51:49"><literal type="number" pos:start="51:49" pos:end="51:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <expr_stmt pos:start="55:7" pos:end="55:30"><expr pos:start="55:7" pos:end="55:29"><name pos:start="55:7" pos:end="55:13">mb_type</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:29">MB_TYPE_16x16</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

  </block_content>}</block></if> <if type="elseif" pos:start="59:5" pos:end="205:3">else if <condition pos:start="59:13" pos:end="59:25">(<expr pos:start="59:14" pos:end="59:24"><name pos:start="59:14" pos:end="59:20">mb_type</name> <operator pos:start="59:22" pos:end="59:22">&lt;</operator> <literal type="number" pos:start="59:24" pos:end="59:24">8</literal></expr>)</condition> <block pos:start="59:27" pos:end="205:3">{<block_content pos:start="61:5" pos:end="203:28">	<comment type="block" pos:start="59:33" pos:end="59:43">/* INTER */</comment>

    <if_stmt pos:start="61:5" pos:end="73:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:69">(<expr pos:start="61:9" pos:end="61:68"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:9">h</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:24">thirdpel_flag</name></name> <operator pos:start="61:26" pos:end="61:27">&amp;&amp;</operator> <name pos:start="61:29" pos:end="61:43"><name pos:start="61:29" pos:end="61:29">h</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:43">halfpel_flag</name></name> <operator pos:start="61:45" pos:end="61:46">==</operator> <operator pos:start="61:48" pos:end="61:48">!</operator><call pos:start="61:49" pos:end="61:68"><name pos:start="61:49" pos:end="61:56">get_bits</name> <argument_list pos:start="61:58" pos:end="61:68">(<argument pos:start="61:59" pos:end="61:64"><expr pos:start="61:59" pos:end="61:64"><operator pos:start="61:59" pos:end="61:59">&amp;</operator><name pos:start="61:60" pos:end="61:64"><name pos:start="61:60" pos:end="61:60">s</name><operator pos:start="61:61" pos:end="61:62">-&gt;</operator><name pos:start="61:63" pos:end="61:64">gb</name></name></expr></argument>, <argument pos:start="61:67" pos:end="61:67"><expr pos:start="61:67" pos:end="61:67"><literal type="number" pos:start="61:67" pos:end="61:67">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:71" pos:end="65:5">{<block_content pos:start="63:7" pos:end="63:27">

      <expr_stmt pos:start="63:7" pos:end="63:27"><expr pos:start="63:7" pos:end="63:26"><name pos:start="63:7" pos:end="63:10">mode</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <name pos:start="63:14" pos:end="63:26">THIRDPEL_MODE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="65:7" pos:end="69:5">else if <condition pos:start="65:15" pos:end="65:76">(<expr pos:start="65:16" pos:end="65:75"><name pos:start="65:16" pos:end="65:30"><name pos:start="65:16" pos:end="65:16">h</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:30">halfpel_flag</name></name> <operator pos:start="65:32" pos:end="65:33">&amp;&amp;</operator> <name pos:start="65:35" pos:end="65:50"><name pos:start="65:35" pos:end="65:35">h</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:50">thirdpel_flag</name></name> <operator pos:start="65:52" pos:end="65:53">==</operator> <operator pos:start="65:55" pos:end="65:55">!</operator><call pos:start="65:56" pos:end="65:75"><name pos:start="65:56" pos:end="65:63">get_bits</name> <argument_list pos:start="65:65" pos:end="65:75">(<argument pos:start="65:66" pos:end="65:71"><expr pos:start="65:66" pos:end="65:71"><operator pos:start="65:66" pos:end="65:66">&amp;</operator><name pos:start="65:67" pos:end="65:71"><name pos:start="65:67" pos:end="65:67">s</name><operator pos:start="65:68" pos:end="65:69">-&gt;</operator><name pos:start="65:70" pos:end="65:71">gb</name></name></expr></argument>, <argument pos:start="65:74" pos:end="65:74"><expr pos:start="65:74" pos:end="65:74"><literal type="number" pos:start="65:74" pos:end="65:74">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:78" pos:end="69:5">{<block_content pos:start="67:7" pos:end="67:26">

      <expr_stmt pos:start="67:7" pos:end="67:26"><expr pos:start="67:7" pos:end="67:25"><name pos:start="67:7" pos:end="67:10">mode</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <name pos:start="67:14" pos:end="67:25">HALFPEL_MODE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="73:5">else <block pos:start="69:12" pos:end="73:5">{<block_content pos:start="71:7" pos:end="71:26">

      <expr_stmt pos:start="71:7" pos:end="71:26"><expr pos:start="71:7" pos:end="71:25"><name pos:start="71:7" pos:end="71:10">mode</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:25">FULLPEL_MODE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:21">/* fill caches */</comment>

    <comment type="block" pos:start="79:5" pos:end="93:6">/* note ref_cache should contain here:

        ????????

        ???11111

        N??11111

        N??11111

        N??11111

        N

    */</comment>

    

    <for pos:start="97:5" pos:end="159:5">for <control pos:start="97:9" pos:end="97:25">(<init pos:start="97:10" pos:end="97:13"><expr pos:start="97:10" pos:end="97:12"><name pos:start="97:10" pos:end="97:10">m</name><operator pos:start="97:11" pos:end="97:11">=</operator><literal type="number" pos:start="97:12" pos:end="97:12">0</literal></expr>;</init> <condition pos:start="97:15" pos:end="97:20"><expr pos:start="97:15" pos:end="97:19"><name pos:start="97:15" pos:end="97:15">m</name> <operator pos:start="97:17" pos:end="97:17">&lt;</operator> <literal type="number" pos:start="97:19" pos:end="97:19">2</literal></expr>;</condition> <incr pos:start="97:22" pos:end="97:24"><expr pos:start="97:22" pos:end="97:24"><name pos:start="97:22" pos:end="97:22">m</name><operator pos:start="97:23" pos:end="97:24">++</operator></expr></incr>)</control> <block pos:start="97:27" pos:end="159:5">{<block_content pos:start="99:7" pos:end="157:14">

      <if_stmt pos:start="99:7" pos:end="115:7"><if pos:start="99:7" pos:end="107:7">if <condition pos:start="99:10" pos:end="99:67">(<expr pos:start="99:11" pos:end="99:66"><name pos:start="99:11" pos:end="99:17"><name pos:start="99:11" pos:end="99:11">s</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:17">mb_x</name></name> <operator pos:start="99:19" pos:end="99:19">&gt;</operator> <literal type="number" pos:start="99:21" pos:end="99:21">0</literal> <operator pos:start="99:23" pos:end="99:24">&amp;&amp;</operator> <name pos:start="99:26" pos:end="99:60"><name pos:start="99:26" pos:end="99:26">h</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:46">intra4x4_pred_mode</name><index pos:start="99:47" pos:end="99:57">[<expr pos:start="99:48" pos:end="99:56"><name pos:start="99:48" pos:end="99:52">mb_xy</name> <operator pos:start="99:54" pos:end="99:54">-</operator> <literal type="number" pos:start="99:56" pos:end="99:56">1</literal></expr>]</index><index pos:start="99:58" pos:end="99:60">[<expr pos:start="99:59" pos:end="99:59"><literal type="number" pos:start="99:59" pos:end="99:59">0</literal></expr>]</index></name> <operator pos:start="99:62" pos:end="99:63">!=</operator> <operator pos:start="99:65" pos:end="99:65">-</operator><literal type="number" pos:start="99:66" pos:end="99:66">1</literal></expr>)</condition> <block pos:start="99:69" pos:end="107:7">{<block_content pos:start="101:9" pos:end="105:9">

	<for pos:start="101:9" pos:end="105:9">for <control pos:start="101:13" pos:end="101:29">(<init pos:start="101:14" pos:end="101:17"><expr pos:start="101:14" pos:end="101:16"><name pos:start="101:14" pos:end="101:14">i</name><operator pos:start="101:15" pos:end="101:15">=</operator><literal type="number" pos:start="101:16" pos:end="101:16">0</literal></expr>;</init> <condition pos:start="101:19" pos:end="101:24"><expr pos:start="101:19" pos:end="101:23"><name pos:start="101:19" pos:end="101:19">i</name> <operator pos:start="101:21" pos:end="101:21">&lt;</operator> <literal type="number" pos:start="101:23" pos:end="101:23">4</literal></expr>;</condition> <incr pos:start="101:26" pos:end="101:28"><expr pos:start="101:26" pos:end="101:28"><name pos:start="101:26" pos:end="101:26">i</name><operator pos:start="101:27" pos:end="101:28">++</operator></expr></incr>)</control> <block pos:start="101:31" pos:end="105:9">{<block_content pos:start="103:11" pos:end="103:134">

	  <expr_stmt pos:start="103:11" pos:end="103:134"><expr pos:start="103:11" pos:end="103:133"><operator pos:start="103:11" pos:end="103:11">*</operator><operator pos:start="103:12" pos:end="103:12">(</operator><name pos:start="103:13" pos:end="103:20">uint32_t</name> <operator pos:start="103:22" pos:end="103:22">*</operator><operator pos:start="103:23" pos:end="103:23">)</operator> <name pos:start="103:25" pos:end="103:58"><name pos:start="103:25" pos:end="103:25">h</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:35">mv_cache</name><index pos:start="103:36" pos:end="103:38">[<expr pos:start="103:37" pos:end="103:37"><name pos:start="103:37" pos:end="103:37">m</name></expr>]</index><index pos:start="103:39" pos:end="103:58">[<expr pos:start="103:40" pos:end="103:57"><name pos:start="103:40" pos:end="103:47"><name pos:start="103:40" pos:end="103:44">scan8</name><index pos:start="103:45" pos:end="103:47">[<expr pos:start="103:46" pos:end="103:46"><literal type="number" pos:start="103:46" pos:end="103:46">0</literal></expr>]</index></name> <operator pos:start="103:49" pos:end="103:49">-</operator> <literal type="number" pos:start="103:51" pos:end="103:53">1</literal> <operator pos:start="103:53" pos:end="103:53">+</operator> <name pos:start="103:55" pos:end="103:55">i</name><operator pos:start="103:56" pos:end="103:56">*</operator><literal type="number" pos:start="103:57" pos:end="103:57">8</literal></expr>]</index></name> <operator pos:start="103:60" pos:end="103:60">=</operator> <operator pos:start="103:62" pos:end="103:62">*</operator><operator pos:start="103:63" pos:end="103:63">(</operator><name pos:start="103:64" pos:end="103:71">uint32_t</name> <operator pos:start="103:73" pos:end="103:73">*</operator><operator pos:start="103:74" pos:end="103:74">)</operator> <name pos:start="103:76" pos:end="103:133"><name pos:start="103:76" pos:end="103:76">s</name><operator pos:start="103:77" pos:end="103:78">-&gt;</operator><name pos:start="103:79" pos:end="103:93">current_picture</name><operator pos:start="103:94" pos:end="103:94">.</operator><name pos:start="103:95" pos:end="103:104">motion_val</name><index pos:start="103:105" pos:end="103:107">[<expr pos:start="103:106" pos:end="103:106"><name pos:start="103:106" pos:end="103:106">m</name></expr>]</index><index pos:start="103:108" pos:end="103:133">[<expr pos:start="103:109" pos:end="103:132"><name pos:start="103:109" pos:end="103:112">b_xy</name> <operator pos:start="103:114" pos:end="103:114">-</operator> <literal type="number" pos:start="103:116" pos:end="103:118">1</literal> <operator pos:start="103:118" pos:end="103:118">+</operator> <name pos:start="103:120" pos:end="103:120">i</name><operator pos:start="103:121" pos:end="103:121">*</operator><name pos:start="103:122" pos:end="103:132"><name pos:start="103:122" pos:end="103:122">h</name><operator pos:start="103:123" pos:end="103:124">-&gt;</operator><name pos:start="103:125" pos:end="103:132">b_stride</name></name></expr>]</index></name></expr>;</expr_stmt>

	</block_content>}</block></for>

      </block_content>}</block></if> <else pos:start="107:9" pos:end="115:7">else <block pos:start="107:14" pos:end="115:7">{<block_content pos:start="109:9" pos:end="113:9">

	<for pos:start="109:9" pos:end="113:9">for <control pos:start="109:13" pos:end="109:29">(<init pos:start="109:14" pos:end="109:17"><expr pos:start="109:14" pos:end="109:16"><name pos:start="109:14" pos:end="109:14">i</name><operator pos:start="109:15" pos:end="109:15">=</operator><literal type="number" pos:start="109:16" pos:end="109:16">0</literal></expr>;</init> <condition pos:start="109:19" pos:end="109:24"><expr pos:start="109:19" pos:end="109:23"><name pos:start="109:19" pos:end="109:19">i</name> <operator pos:start="109:21" pos:end="109:21">&lt;</operator> <literal type="number" pos:start="109:23" pos:end="109:23">4</literal></expr>;</condition> <incr pos:start="109:26" pos:end="109:28"><expr pos:start="109:26" pos:end="109:28"><name pos:start="109:26" pos:end="109:26">i</name><operator pos:start="109:27" pos:end="109:28">++</operator></expr></incr>)</control> <block pos:start="109:31" pos:end="113:9">{<block_content pos:start="111:11" pos:end="111:63">

	  <expr_stmt pos:start="111:11" pos:end="111:63"><expr pos:start="111:11" pos:end="111:62"><operator pos:start="111:11" pos:end="111:11">*</operator><operator pos:start="111:12" pos:end="111:12">(</operator><name pos:start="111:13" pos:end="111:20">uint32_t</name> <operator pos:start="111:22" pos:end="111:22">*</operator><operator pos:start="111:23" pos:end="111:23">)</operator> <name pos:start="111:25" pos:end="111:58"><name pos:start="111:25" pos:end="111:25">h</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:35">mv_cache</name><index pos:start="111:36" pos:end="111:38">[<expr pos:start="111:37" pos:end="111:37"><name pos:start="111:37" pos:end="111:37">m</name></expr>]</index><index pos:start="111:39" pos:end="111:58">[<expr pos:start="111:40" pos:end="111:57"><name pos:start="111:40" pos:end="111:47"><name pos:start="111:40" pos:end="111:44">scan8</name><index pos:start="111:45" pos:end="111:47">[<expr pos:start="111:46" pos:end="111:46"><literal type="number" pos:start="111:46" pos:end="111:46">0</literal></expr>]</index></name> <operator pos:start="111:49" pos:end="111:49">-</operator> <literal type="number" pos:start="111:51" pos:end="111:53">1</literal> <operator pos:start="111:53" pos:end="111:53">+</operator> <name pos:start="111:55" pos:end="111:55">i</name><operator pos:start="111:56" pos:end="111:56">*</operator><literal type="number" pos:start="111:57" pos:end="111:57">8</literal></expr>]</index></name> <operator pos:start="111:60" pos:end="111:60">=</operator> <literal type="number" pos:start="111:62" pos:end="111:62">0</literal></expr>;</expr_stmt>

	</block_content>}</block></for>

      </block_content>}</block></else></if_stmt>

      <if_stmt pos:start="117:7" pos:end="151:77"><if pos:start="117:7" pos:end="149:7">if <condition pos:start="117:10" pos:end="117:22">(<expr pos:start="117:11" pos:end="117:21"><name pos:start="117:11" pos:end="117:17"><name pos:start="117:11" pos:end="117:11">s</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:17">mb_y</name></name> <operator pos:start="117:19" pos:end="117:19">&gt;</operator> <literal type="number" pos:start="117:21" pos:end="117:21">0</literal></expr>)</condition> <block pos:start="117:24" pos:end="149:7">{<block_content pos:start="119:9" pos:end="147:67">

	<expr_stmt pos:start="119:9" pos:end="119:123"><expr pos:start="119:9" pos:end="119:122"><call pos:start="119:9" pos:end="119:122"><name pos:start="119:9" pos:end="119:14">memcpy</name> <argument_list pos:start="119:16" pos:end="119:122">(<argument pos:start="119:17" pos:end="119:46"><expr pos:start="119:17" pos:end="119:46"><name pos:start="119:17" pos:end="119:46"><name pos:start="119:17" pos:end="119:17">h</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:27">mv_cache</name><index pos:start="119:28" pos:end="119:30">[<expr pos:start="119:29" pos:end="119:29"><name pos:start="119:29" pos:end="119:29">m</name></expr>]</index><index pos:start="119:31" pos:end="119:46">[<expr pos:start="119:32" pos:end="119:45"><name pos:start="119:32" pos:end="119:39"><name pos:start="119:32" pos:end="119:36">scan8</name><index pos:start="119:37" pos:end="119:39">[<expr pos:start="119:38" pos:end="119:38"><literal type="number" pos:start="119:38" pos:end="119:38">0</literal></expr>]</index></name> <operator pos:start="119:41" pos:end="119:41">-</operator> <literal type="number" pos:start="119:43" pos:end="119:43">1</literal><operator pos:start="119:44" pos:end="119:44">*</operator><literal type="number" pos:start="119:45" pos:end="119:45">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:49" pos:end="119:100"><expr pos:start="119:49" pos:end="119:100"><name pos:start="119:49" pos:end="119:100"><name pos:start="119:49" pos:end="119:49">s</name><operator pos:start="119:50" pos:end="119:51">-&gt;</operator><name pos:start="119:52" pos:end="119:66">current_picture</name><operator pos:start="119:67" pos:end="119:67">.</operator><name pos:start="119:68" pos:end="119:77">motion_val</name><index pos:start="119:78" pos:end="119:80">[<expr pos:start="119:79" pos:end="119:79"><name pos:start="119:79" pos:end="119:79">m</name></expr>]</index><index pos:start="119:81" pos:end="119:100">[<expr pos:start="119:82" pos:end="119:99"><name pos:start="119:82" pos:end="119:85">b_xy</name> <operator pos:start="119:87" pos:end="119:87">-</operator> <name pos:start="119:89" pos:end="119:99"><name pos:start="119:89" pos:end="119:89">h</name><operator pos:start="119:90" pos:end="119:91">-&gt;</operator><name pos:start="119:92" pos:end="119:99">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="119:103" pos:end="119:121"><expr pos:start="119:103" pos:end="119:121"><literal type="number" pos:start="119:103" pos:end="119:103">4</literal><operator pos:start="119:104" pos:end="119:104">*</operator><literal type="number" pos:start="119:105" pos:end="119:105">2</literal><operator pos:start="119:106" pos:end="119:106">*</operator><sizeof pos:start="119:107" pos:end="119:121">sizeof<argument_list pos:start="119:113" pos:end="119:121">(<argument pos:start="119:114" pos:end="119:120"><expr pos:start="119:114" pos:end="119:120"><name pos:start="119:114" pos:end="119:120">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="121:9" pos:end="121:134"><expr pos:start="121:9" pos:end="121:133"><call pos:start="121:9" pos:end="121:133"><name pos:start="121:9" pos:end="121:14">memset</name> <argument_list pos:start="121:16" pos:end="121:133">(<argument pos:start="121:17" pos:end="121:48"><expr pos:start="121:17" pos:end="121:48"><operator pos:start="121:17" pos:end="121:17">&amp;</operator><name pos:start="121:18" pos:end="121:48"><name pos:start="121:18" pos:end="121:18">h</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:29">ref_cache</name><index pos:start="121:30" pos:end="121:32">[<expr pos:start="121:31" pos:end="121:31"><name pos:start="121:31" pos:end="121:31">m</name></expr>]</index><index pos:start="121:33" pos:end="121:48">[<expr pos:start="121:34" pos:end="121:47"><name pos:start="121:34" pos:end="121:41"><name pos:start="121:34" pos:end="121:38">scan8</name><index pos:start="121:39" pos:end="121:41">[<expr pos:start="121:40" pos:end="121:40"><literal type="number" pos:start="121:40" pos:end="121:40">0</literal></expr>]</index></name> <operator pos:start="121:43" pos:end="121:43">-</operator> <literal type="number" pos:start="121:45" pos:end="121:45">1</literal><operator pos:start="121:46" pos:end="121:46">*</operator><literal type="number" pos:start="121:47" pos:end="121:47">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="121:51" pos:end="121:129"><expr pos:start="121:51" pos:end="121:129"><ternary pos:start="121:51" pos:end="121:129"><condition pos:start="121:51" pos:end="121:106"><expr pos:start="121:51" pos:end="121:104"><operator pos:start="121:51" pos:end="121:51">(</operator><name pos:start="121:52" pos:end="121:97"><name pos:start="121:52" pos:end="121:52">h</name><operator pos:start="121:53" pos:end="121:54">-&gt;</operator><name pos:start="121:55" pos:end="121:72">intra4x4_pred_mode</name><index pos:start="121:73" pos:end="121:94">[<expr pos:start="121:74" pos:end="121:93"><name pos:start="121:74" pos:end="121:78">mb_xy</name> <operator pos:start="121:80" pos:end="121:80">-</operator> <name pos:start="121:82" pos:end="121:93"><name pos:start="121:82" pos:end="121:82">s</name><operator pos:start="121:83" pos:end="121:84">-&gt;</operator><name pos:start="121:85" pos:end="121:93">mb_stride</name></name></expr>]</index><index pos:start="121:95" pos:end="121:97">[<expr pos:start="121:96" pos:end="121:96"><literal type="number" pos:start="121:96" pos:end="121:96">4</literal></expr>]</index></name> <operator pos:start="121:99" pos:end="121:100">==</operator> <operator pos:start="121:102" pos:end="121:102">-</operator><literal type="number" pos:start="121:103" pos:end="121:103">1</literal><operator pos:start="121:104" pos:end="121:104">)</operator></expr> ?</condition><then pos:start="121:108" pos:end="121:125"> <expr pos:start="121:108" pos:end="121:125"><name pos:start="121:108" pos:end="121:125">PART_NOT_AVAILABLE</name></expr> </then><else pos:start="121:127" pos:end="121:129">: <expr pos:start="121:129" pos:end="121:129"><literal type="number" pos:start="121:129" pos:end="121:129">1</literal></expr></else></ternary></expr></argument>, <argument pos:start="121:132" pos:end="121:132"><expr pos:start="121:132" pos:end="121:132"><literal type="number" pos:start="121:132" pos:end="121:132">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="125:9" pos:end="137:67"><if pos:start="125:9" pos:end="135:9">if <condition pos:start="125:12" pos:end="125:40">(<expr pos:start="125:13" pos:end="125:39"><name pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:19">mb_x</name></name> <operator pos:start="125:21" pos:end="125:21">&lt;</operator> <operator pos:start="125:23" pos:end="125:23">(</operator><name pos:start="125:24" pos:end="125:34"><name pos:start="125:24" pos:end="125:24">s</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:34">mb_width</name></name> <operator pos:start="125:36" pos:end="125:36">-</operator> <literal type="number" pos:start="125:38" pos:end="125:38">1</literal><operator pos:start="125:39" pos:end="125:39">)</operator></expr>)</condition> <block pos:start="125:42" pos:end="135:9">{<block_content pos:start="127:11" pos:end="133:98">

	  <expr_stmt pos:start="127:11" pos:end="127:132"><expr pos:start="127:11" pos:end="127:131"><operator pos:start="127:11" pos:end="127:11">*</operator><operator pos:start="127:12" pos:end="127:12">(</operator><name pos:start="127:13" pos:end="127:20">uint32_t</name> <operator pos:start="127:22" pos:end="127:22">*</operator><operator pos:start="127:23" pos:end="127:23">)</operator> <name pos:start="127:25" pos:end="127:58"><name pos:start="127:25" pos:end="127:25">h</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:35">mv_cache</name><index pos:start="127:36" pos:end="127:38">[<expr pos:start="127:37" pos:end="127:37"><name pos:start="127:37" pos:end="127:37">m</name></expr>]</index><index pos:start="127:39" pos:end="127:58">[<expr pos:start="127:40" pos:end="127:57"><name pos:start="127:40" pos:end="127:47"><name pos:start="127:40" pos:end="127:44">scan8</name><index pos:start="127:45" pos:end="127:47">[<expr pos:start="127:46" pos:end="127:46"><literal type="number" pos:start="127:46" pos:end="127:46">0</literal></expr>]</index></name> <operator pos:start="127:49" pos:end="127:49">+</operator> <literal type="number" pos:start="127:51" pos:end="127:53">4</literal> <operator pos:start="127:53" pos:end="127:53">-</operator> <literal type="number" pos:start="127:55" pos:end="127:55">1</literal><operator pos:start="127:56" pos:end="127:56">*</operator><literal type="number" pos:start="127:57" pos:end="127:57">8</literal></expr>]</index></name> <operator pos:start="127:60" pos:end="127:60">=</operator> <operator pos:start="127:62" pos:end="127:62">*</operator><operator pos:start="127:63" pos:end="127:63">(</operator><name pos:start="127:64" pos:end="127:71">uint32_t</name> <operator pos:start="127:73" pos:end="127:73">*</operator><operator pos:start="127:74" pos:end="127:74">)</operator> <name pos:start="127:76" pos:end="127:131"><name pos:start="127:76" pos:end="127:76">s</name><operator pos:start="127:77" pos:end="127:78">-&gt;</operator><name pos:start="127:79" pos:end="127:93">current_picture</name><operator pos:start="127:94" pos:end="127:94">.</operator><name pos:start="127:95" pos:end="127:104">motion_val</name><index pos:start="127:105" pos:end="127:107">[<expr pos:start="127:106" pos:end="127:106"><name pos:start="127:106" pos:end="127:106">m</name></expr>]</index><index pos:start="127:108" pos:end="127:131">[<expr pos:start="127:109" pos:end="127:130"><name pos:start="127:109" pos:end="127:112">b_xy</name> <operator pos:start="127:114" pos:end="127:114">-</operator> <name pos:start="127:116" pos:end="127:126"><name pos:start="127:116" pos:end="127:116">h</name><operator pos:start="127:117" pos:end="127:118">-&gt;</operator><name pos:start="127:119" pos:end="127:126">b_stride</name></name> <operator pos:start="127:128" pos:end="127:128">+</operator> <literal type="number" pos:start="127:130" pos:end="127:130">4</literal></expr>]</index></name></expr>;</expr_stmt>

	  <expr_stmt pos:start="129:11" pos:end="133:98"><expr pos:start="129:11" pos:end="133:97"><name pos:start="129:11" pos:end="129:45"><name pos:start="129:11" pos:end="129:11">h</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:22">ref_cache</name><index pos:start="129:23" pos:end="129:25">[<expr pos:start="129:24" pos:end="129:24"><name pos:start="129:24" pos:end="129:24">m</name></expr>]</index><index pos:start="129:26" pos:end="129:45">[<expr pos:start="129:27" pos:end="129:44"><name pos:start="129:27" pos:end="129:34"><name pos:start="129:27" pos:end="129:31">scan8</name><index pos:start="129:32" pos:end="129:34">[<expr pos:start="129:33" pos:end="129:33"><literal type="number" pos:start="129:33" pos:end="129:33">0</literal></expr>]</index></name> <operator pos:start="129:36" pos:end="129:36">+</operator> <literal type="number" pos:start="129:38" pos:end="129:38">4</literal> <operator pos:start="129:40" pos:end="129:40">-</operator> <literal type="number" pos:start="129:42" pos:end="129:42">1</literal><operator pos:start="129:43" pos:end="129:43">*</operator><literal type="number" pos:start="129:44" pos:end="129:44">8</literal></expr>]</index></name> <operator pos:start="129:47" pos:end="129:47">=</operator>

		  <ternary pos:start="131:19" pos:end="133:97"><condition pos:start="131:19" pos:end="133:74"><expr pos:start="131:19" pos:end="133:72"><operator pos:start="131:19" pos:end="131:19">(</operator><name pos:start="131:20" pos:end="131:69"><name pos:start="131:20" pos:end="131:20">h</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:40">intra4x4_pred_mode</name><index pos:start="131:41" pos:end="131:66">[<expr pos:start="131:42" pos:end="131:65"><name pos:start="131:42" pos:end="131:46">mb_xy</name> <operator pos:start="131:48" pos:end="131:48">-</operator> <name pos:start="131:50" pos:end="131:61"><name pos:start="131:50" pos:end="131:50">s</name><operator pos:start="131:51" pos:end="131:52">-&gt;</operator><name pos:start="131:53" pos:end="131:61">mb_stride</name></name> <operator pos:start="131:63" pos:end="131:63">+</operator> <literal type="number" pos:start="131:65" pos:end="131:65">1</literal></expr>]</index><index pos:start="131:67" pos:end="131:69">[<expr pos:start="131:68" pos:end="131:68"><literal type="number" pos:start="131:68" pos:end="131:68">0</literal></expr>]</index></name> <operator pos:start="131:71" pos:end="131:72">==</operator> <operator pos:start="131:74" pos:end="131:74">-</operator><literal type="number" pos:start="131:75" pos:end="131:75">1</literal> <operator pos:start="131:77" pos:end="131:78">||</operator>

		   <name pos:start="133:20" pos:end="133:65"><name pos:start="133:20" pos:end="133:20">h</name><operator pos:start="133:21" pos:end="133:22">-&gt;</operator><name pos:start="133:23" pos:end="133:40">intra4x4_pred_mode</name><index pos:start="133:41" pos:end="133:62">[<expr pos:start="133:42" pos:end="133:61"><name pos:start="133:42" pos:end="133:46">mb_xy</name> <operator pos:start="133:48" pos:end="133:48">-</operator> <name pos:start="133:50" pos:end="133:61"><name pos:start="133:50" pos:end="133:50">s</name><operator pos:start="133:51" pos:end="133:52">-&gt;</operator><name pos:start="133:53" pos:end="133:61">mb_stride</name></name></expr>]</index><index pos:start="133:63" pos:end="133:65">[<expr pos:start="133:64" pos:end="133:64"><literal type="number" pos:start="133:64" pos:end="133:64">4</literal></expr>]</index></name> <operator pos:start="133:67" pos:end="133:68">==</operator> <operator pos:start="133:70" pos:end="133:70">-</operator><literal type="number" pos:start="133:71" pos:end="133:71">1</literal><operator pos:start="133:72" pos:end="133:72">)</operator></expr> ?</condition><then pos:start="133:76" pos:end="133:93"> <expr pos:start="133:76" pos:end="133:93"><name pos:start="133:76" pos:end="133:93">PART_NOT_AVAILABLE</name></expr> </then><else pos:start="133:95" pos:end="133:97">: <expr pos:start="133:97" pos:end="133:97"><literal type="number" pos:start="133:97" pos:end="133:97">1</literal></expr></else></ternary></expr>;</expr_stmt>

	</block_content>}</block></if><else pos:start="135:10" pos:end="137:67">else<block type="pseudo" pos:start="137:11" pos:end="137:67"><block_content pos:start="137:11" pos:end="137:67">

	  <expr_stmt pos:start="137:11" pos:end="137:67"><expr pos:start="137:11" pos:end="137:66"><name pos:start="137:11" pos:end="137:45"><name pos:start="137:11" pos:end="137:11">h</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:22">ref_cache</name><index pos:start="137:23" pos:end="137:25">[<expr pos:start="137:24" pos:end="137:24"><name pos:start="137:24" pos:end="137:24">m</name></expr>]</index><index pos:start="137:26" pos:end="137:45">[<expr pos:start="137:27" pos:end="137:44"><name pos:start="137:27" pos:end="137:34"><name pos:start="137:27" pos:end="137:31">scan8</name><index pos:start="137:32" pos:end="137:34">[<expr pos:start="137:33" pos:end="137:33"><literal type="number" pos:start="137:33" pos:end="137:33">0</literal></expr>]</index></name> <operator pos:start="137:36" pos:end="137:36">+</operator> <literal type="number" pos:start="137:38" pos:end="137:38">4</literal> <operator pos:start="137:40" pos:end="137:40">-</operator> <literal type="number" pos:start="137:42" pos:end="137:42">1</literal><operator pos:start="137:43" pos:end="137:43">*</operator><literal type="number" pos:start="137:44" pos:end="137:44">8</literal></expr>]</index></name> <operator pos:start="137:47" pos:end="137:47">=</operator> <name pos:start="137:49" pos:end="137:66">PART_NOT_AVAILABLE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

	<if_stmt pos:start="139:9" pos:end="147:67"><if pos:start="139:9" pos:end="145:9">if <condition pos:start="139:12" pos:end="139:24">(<expr pos:start="139:13" pos:end="139:23"><name pos:start="139:13" pos:end="139:19"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:19">mb_x</name></name> <operator pos:start="139:21" pos:end="139:21">&gt;</operator> <literal type="number" pos:start="139:23" pos:end="139:23">0</literal></expr>)</condition> <block pos:start="139:26" pos:end="145:9">{<block_content pos:start="141:11" pos:end="143:132">

	  <expr_stmt pos:start="141:11" pos:end="141:132"><expr pos:start="141:11" pos:end="141:131"><operator pos:start="141:11" pos:end="141:11">*</operator><operator pos:start="141:12" pos:end="141:12">(</operator><name pos:start="141:13" pos:end="141:20">uint32_t</name> <operator pos:start="141:22" pos:end="141:22">*</operator><operator pos:start="141:23" pos:end="141:23">)</operator> <name pos:start="141:25" pos:end="141:58"><name pos:start="141:25" pos:end="141:25">h</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:35">mv_cache</name><index pos:start="141:36" pos:end="141:38">[<expr pos:start="141:37" pos:end="141:37"><name pos:start="141:37" pos:end="141:37">m</name></expr>]</index><index pos:start="141:39" pos:end="141:58">[<expr pos:start="141:40" pos:end="141:57"><name pos:start="141:40" pos:end="141:47"><name pos:start="141:40" pos:end="141:44">scan8</name><index pos:start="141:45" pos:end="141:47">[<expr pos:start="141:46" pos:end="141:46"><literal type="number" pos:start="141:46" pos:end="141:46">0</literal></expr>]</index></name> <operator pos:start="141:49" pos:end="141:49">-</operator> <literal type="number" pos:start="141:51" pos:end="141:53">1</literal> <operator pos:start="141:53" pos:end="141:53">-</operator> <literal type="number" pos:start="141:55" pos:end="141:55">1</literal><operator pos:start="141:56" pos:end="141:56">*</operator><literal type="number" pos:start="141:57" pos:end="141:57">8</literal></expr>]</index></name> <operator pos:start="141:60" pos:end="141:60">=</operator> <operator pos:start="141:62" pos:end="141:62">*</operator><operator pos:start="141:63" pos:end="141:63">(</operator><name pos:start="141:64" pos:end="141:71">uint32_t</name> <operator pos:start="141:73" pos:end="141:73">*</operator><operator pos:start="141:74" pos:end="141:74">)</operator> <name pos:start="141:76" pos:end="141:131"><name pos:start="141:76" pos:end="141:76">s</name><operator pos:start="141:77" pos:end="141:78">-&gt;</operator><name pos:start="141:79" pos:end="141:93">current_picture</name><operator pos:start="141:94" pos:end="141:94">.</operator><name pos:start="141:95" pos:end="141:104">motion_val</name><index pos:start="141:105" pos:end="141:107">[<expr pos:start="141:106" pos:end="141:106"><name pos:start="141:106" pos:end="141:106">m</name></expr>]</index><index pos:start="141:108" pos:end="141:131">[<expr pos:start="141:109" pos:end="141:130"><name pos:start="141:109" pos:end="141:112">b_xy</name> <operator pos:start="141:114" pos:end="141:114">-</operator> <name pos:start="141:116" pos:end="141:126"><name pos:start="141:116" pos:end="141:116">h</name><operator pos:start="141:117" pos:end="141:118">-&gt;</operator><name pos:start="141:119" pos:end="141:126">b_stride</name></name> <operator pos:start="141:128" pos:end="141:128">-</operator> <literal type="number" pos:start="141:130" pos:end="141:130">1</literal></expr>]</index></name></expr>;</expr_stmt>

	  <expr_stmt pos:start="143:11" pos:end="143:132"><expr pos:start="143:11" pos:end="143:131"><name pos:start="143:11" pos:end="143:45"><name pos:start="143:11" pos:end="143:11">h</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:22">ref_cache</name><index pos:start="143:23" pos:end="143:25">[<expr pos:start="143:24" pos:end="143:24"><name pos:start="143:24" pos:end="143:24">m</name></expr>]</index><index pos:start="143:26" pos:end="143:45">[<expr pos:start="143:27" pos:end="143:44"><name pos:start="143:27" pos:end="143:34"><name pos:start="143:27" pos:end="143:31">scan8</name><index pos:start="143:32" pos:end="143:34">[<expr pos:start="143:33" pos:end="143:33"><literal type="number" pos:start="143:33" pos:end="143:33">0</literal></expr>]</index></name> <operator pos:start="143:36" pos:end="143:36">-</operator> <literal type="number" pos:start="143:38" pos:end="143:38">1</literal> <operator pos:start="143:40" pos:end="143:40">-</operator> <literal type="number" pos:start="143:42" pos:end="143:42">1</literal><operator pos:start="143:43" pos:end="143:43">*</operator><literal type="number" pos:start="143:44" pos:end="143:44">8</literal></expr>]</index></name> <operator pos:start="143:47" pos:end="143:47">=</operator> <ternary pos:start="143:49" pos:end="143:131"><condition pos:start="143:49" pos:end="143:108"><expr pos:start="143:49" pos:end="143:106"><operator pos:start="143:49" pos:end="143:49">(</operator><name pos:start="143:50" pos:end="143:99"><name pos:start="143:50" pos:end="143:50">h</name><operator pos:start="143:51" pos:end="143:52">-&gt;</operator><name pos:start="143:53" pos:end="143:70">intra4x4_pred_mode</name><index pos:start="143:71" pos:end="143:96">[<expr pos:start="143:72" pos:end="143:95"><name pos:start="143:72" pos:end="143:76">mb_xy</name> <operator pos:start="143:78" pos:end="143:78">-</operator> <name pos:start="143:80" pos:end="143:91"><name pos:start="143:80" pos:end="143:80">s</name><operator pos:start="143:81" pos:end="143:82">-&gt;</operator><name pos:start="143:83" pos:end="143:91">mb_stride</name></name> <operator pos:start="143:93" pos:end="143:93">-</operator> <literal type="number" pos:start="143:95" pos:end="143:95">1</literal></expr>]</index><index pos:start="143:97" pos:end="143:99">[<expr pos:start="143:98" pos:end="143:98"><literal type="number" pos:start="143:98" pos:end="143:98">3</literal></expr>]</index></name> <operator pos:start="143:101" pos:end="143:102">==</operator> <operator pos:start="143:104" pos:end="143:104">-</operator><literal type="number" pos:start="143:105" pos:end="143:105">1</literal><operator pos:start="143:106" pos:end="143:106">)</operator></expr> ?</condition><then pos:start="143:110" pos:end="143:127"> <expr pos:start="143:110" pos:end="143:127"><name pos:start="143:110" pos:end="143:127">PART_NOT_AVAILABLE</name></expr> </then><else pos:start="143:129" pos:end="143:131">: <expr pos:start="143:131" pos:end="143:131"><literal type="number" pos:start="143:131" pos:end="143:131">1</literal></expr></else></ternary></expr>;</expr_stmt>

	</block_content>}</block></if><else pos:start="145:10" pos:end="147:67">else<block type="pseudo" pos:start="147:11" pos:end="147:67"><block_content pos:start="147:11" pos:end="147:67">

	  <expr_stmt pos:start="147:11" pos:end="147:67"><expr pos:start="147:11" pos:end="147:66"><name pos:start="147:11" pos:end="147:45"><name pos:start="147:11" pos:end="147:11">h</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:22">ref_cache</name><index pos:start="147:23" pos:end="147:25">[<expr pos:start="147:24" pos:end="147:24"><name pos:start="147:24" pos:end="147:24">m</name></expr>]</index><index pos:start="147:26" pos:end="147:45">[<expr pos:start="147:27" pos:end="147:44"><name pos:start="147:27" pos:end="147:34"><name pos:start="147:27" pos:end="147:31">scan8</name><index pos:start="147:32" pos:end="147:34">[<expr pos:start="147:33" pos:end="147:33"><literal type="number" pos:start="147:33" pos:end="147:33">0</literal></expr>]</index></name> <operator pos:start="147:36" pos:end="147:36">-</operator> <literal type="number" pos:start="147:38" pos:end="147:38">1</literal> <operator pos:start="147:40" pos:end="147:40">-</operator> <literal type="number" pos:start="147:42" pos:end="147:42">1</literal><operator pos:start="147:43" pos:end="147:43">*</operator><literal type="number" pos:start="147:44" pos:end="147:44">8</literal></expr>]</index></name> <operator pos:start="147:47" pos:end="147:47">=</operator> <name pos:start="147:49" pos:end="147:66">PART_NOT_AVAILABLE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

      </block_content>}</block></if><else pos:start="149:8" pos:end="151:77">else<block type="pseudo" pos:start="151:9" pos:end="151:77"><block_content pos:start="151:9" pos:end="151:77">

	<expr_stmt pos:start="151:9" pos:end="151:77"><expr pos:start="151:9" pos:end="151:76"><call pos:start="151:9" pos:end="151:76"><name pos:start="151:9" pos:end="151:14">memset</name> <argument_list pos:start="151:16" pos:end="151:76">(<argument pos:start="151:17" pos:end="151:52"><expr pos:start="151:17" pos:end="151:52"><operator pos:start="151:17" pos:end="151:17">&amp;</operator><name pos:start="151:18" pos:end="151:52"><name pos:start="151:18" pos:end="151:18">h</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:29">ref_cache</name><index pos:start="151:30" pos:end="151:32">[<expr pos:start="151:31" pos:end="151:31"><name pos:start="151:31" pos:end="151:31">m</name></expr>]</index><index pos:start="151:33" pos:end="151:52">[<expr pos:start="151:34" pos:end="151:51"><name pos:start="151:34" pos:end="151:41"><name pos:start="151:34" pos:end="151:38">scan8</name><index pos:start="151:39" pos:end="151:41">[<expr pos:start="151:40" pos:end="151:40"><literal type="number" pos:start="151:40" pos:end="151:40">0</literal></expr>]</index></name> <operator pos:start="151:43" pos:end="151:43">-</operator> <literal type="number" pos:start="151:45" pos:end="151:45">1</literal><operator pos:start="151:46" pos:end="151:46">*</operator><literal type="number" pos:start="151:47" pos:end="151:49">8</literal> <operator pos:start="151:49" pos:end="151:49">-</operator> <literal type="number" pos:start="151:51" pos:end="151:51">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:55" pos:end="151:72"><expr pos:start="151:55" pos:end="151:72"><name pos:start="151:55" pos:end="151:72">PART_NOT_AVAILABLE</name></expr></argument>, <argument pos:start="151:75" pos:end="151:75"><expr pos:start="151:75" pos:end="151:75"><literal type="number" pos:start="151:75" pos:end="151:75">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



      <if_stmt pos:start="155:7" pos:end="157:14"><if pos:start="155:7" pos:end="157:14">if <condition pos:start="155:10" pos:end="155:33">(<expr pos:start="155:11" pos:end="155:32"><name pos:start="155:11" pos:end="155:22"><name pos:start="155:11" pos:end="155:11">s</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:22">pict_type</name></name> <operator pos:start="155:24" pos:end="155:25">!=</operator> <name pos:start="155:27" pos:end="155:32">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="157:9" pos:end="157:14"><block_content pos:start="157:9" pos:end="157:14">

	<break pos:start="157:9" pos:end="157:14">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="163:5" pos:end="163:56">/* decode motion vector(s) and form prediction(s) */</comment>

    <if_stmt pos:start="165:5" pos:end="199:5"><if pos:start="165:5" pos:end="169:5">if <condition pos:start="165:8" pos:end="165:31">(<expr pos:start="165:9" pos:end="165:30"><name pos:start="165:9" pos:end="165:20"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:20">pict_type</name></name> <operator pos:start="165:22" pos:end="165:23">==</operator> <name pos:start="165:25" pos:end="165:30">P_TYPE</name></expr>)</condition> <block pos:start="165:33" pos:end="169:5">{<block_content pos:start="167:7" pos:end="167:49">

      <expr_stmt pos:start="167:7" pos:end="167:49"><expr pos:start="167:7" pos:end="167:48"><call pos:start="167:7" pos:end="167:48"><name pos:start="167:7" pos:end="167:17">svq3_mc_dir</name> <argument_list pos:start="167:19" pos:end="167:48">(<argument pos:start="167:20" pos:end="167:20"><expr pos:start="167:20" pos:end="167:20"><name pos:start="167:20" pos:end="167:20">h</name></expr></argument>, <argument pos:start="167:23" pos:end="167:35"><expr pos:start="167:23" pos:end="167:35"><operator pos:start="167:23" pos:end="167:23">(</operator><name pos:start="167:24" pos:end="167:30">mb_type</name> <operator pos:start="167:32" pos:end="167:32">-</operator> <literal type="number" pos:start="167:34" pos:end="167:34">1</literal><operator pos:start="167:35" pos:end="167:35">)</operator></expr></argument>, <argument pos:start="167:38" pos:end="167:41"><expr pos:start="167:38" pos:end="167:41"><name pos:start="167:38" pos:end="167:41">mode</name></expr></argument>, <argument pos:start="167:44" pos:end="167:44"><expr pos:start="167:44" pos:end="167:44"><literal type="number" pos:start="167:44" pos:end="167:44">0</literal></expr></argument>, <argument pos:start="167:47" pos:end="167:47"><expr pos:start="167:47" pos:end="167:47"><literal type="number" pos:start="167:47" pos:end="167:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="169:7" pos:end="199:5">else <block pos:start="169:12" pos:end="199:5">{<block_content pos:start="171:7" pos:end="197:7">	<comment type="block" pos:start="169:17" pos:end="169:28">/* B_TYPE */</comment>

      <if_stmt pos:start="171:7" pos:end="183:7"><if pos:start="171:7" pos:end="175:7">if <condition pos:start="171:10" pos:end="171:23">(<expr pos:start="171:11" pos:end="171:22"><name pos:start="171:11" pos:end="171:17">mb_type</name> <operator pos:start="171:19" pos:end="171:20">!=</operator> <literal type="number" pos:start="171:22" pos:end="171:22">2</literal></expr>)</condition> <block pos:start="171:25" pos:end="175:7">{<block_content pos:start="173:9" pos:end="173:39">

	<expr_stmt pos:start="173:9" pos:end="173:39"><expr pos:start="173:9" pos:end="173:38"><call pos:start="173:9" pos:end="173:38"><name pos:start="173:9" pos:end="173:19">svq3_mc_dir</name> <argument_list pos:start="173:21" pos:end="173:38">(<argument pos:start="173:22" pos:end="173:22"><expr pos:start="173:22" pos:end="173:22"><name pos:start="173:22" pos:end="173:22">h</name></expr></argument>, <argument pos:start="173:25" pos:end="173:25"><expr pos:start="173:25" pos:end="173:25"><literal type="number" pos:start="173:25" pos:end="173:25">0</literal></expr></argument>, <argument pos:start="173:28" pos:end="173:31"><expr pos:start="173:28" pos:end="173:31"><name pos:start="173:28" pos:end="173:31">mode</name></expr></argument>, <argument pos:start="173:34" pos:end="173:34"><expr pos:start="173:34" pos:end="173:34"><literal type="number" pos:start="173:34" pos:end="173:34">0</literal></expr></argument>, <argument pos:start="173:37" pos:end="173:37"><expr pos:start="173:37" pos:end="173:37"><literal type="number" pos:start="173:37" pos:end="173:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></if> <else pos:start="175:9" pos:end="183:7">else <block pos:start="175:14" pos:end="183:7">{<block_content pos:start="177:9" pos:end="181:9">

	<for pos:start="177:9" pos:end="181:9">for <control pos:start="177:13" pos:end="177:29">(<init pos:start="177:14" pos:end="177:17"><expr pos:start="177:14" pos:end="177:16"><name pos:start="177:14" pos:end="177:14">i</name><operator pos:start="177:15" pos:end="177:15">=</operator><literal type="number" pos:start="177:16" pos:end="177:16">0</literal></expr>;</init> <condition pos:start="177:19" pos:end="177:24"><expr pos:start="177:19" pos:end="177:23"><name pos:start="177:19" pos:end="177:19">i</name> <operator pos:start="177:21" pos:end="177:21">&lt;</operator> <literal type="number" pos:start="177:23" pos:end="177:23">4</literal></expr>;</condition> <incr pos:start="177:26" pos:end="177:28"><expr pos:start="177:26" pos:end="177:28"><name pos:start="177:26" pos:end="177:26">i</name><operator pos:start="177:27" pos:end="177:28">++</operator></expr></incr>)</control> <block pos:start="177:31" pos:end="181:9">{<block_content pos:start="179:11" pos:end="179:98">

	  <expr_stmt pos:start="179:11" pos:end="179:98"><expr pos:start="179:11" pos:end="179:97"><call pos:start="179:11" pos:end="179:97"><name pos:start="179:11" pos:end="179:16">memset</name> <argument_list pos:start="179:18" pos:end="179:97">(<argument pos:start="179:19" pos:end="179:72"><expr pos:start="179:19" pos:end="179:72"><name pos:start="179:19" pos:end="179:72"><name pos:start="179:19" pos:end="179:19">s</name><operator pos:start="179:20" pos:end="179:21">-&gt;</operator><name pos:start="179:22" pos:end="179:36">current_picture</name><operator pos:start="179:37" pos:end="179:37">.</operator><name pos:start="179:38" pos:end="179:47">motion_val</name><index pos:start="179:48" pos:end="179:50">[<expr pos:start="179:49" pos:end="179:49"><literal type="number" pos:start="179:49" pos:end="179:49">0</literal></expr>]</index><index pos:start="179:51" pos:end="179:72">[<expr pos:start="179:52" pos:end="179:71"><name pos:start="179:52" pos:end="179:55">b_xy</name> <operator pos:start="179:57" pos:end="179:57">+</operator> <name pos:start="179:59" pos:end="179:59">i</name><operator pos:start="179:60" pos:end="179:60">*</operator><name pos:start="179:61" pos:end="179:71"><name pos:start="179:61" pos:end="179:61">h</name><operator pos:start="179:62" pos:end="179:63">-&gt;</operator><name pos:start="179:64" pos:end="179:71">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="179:75" pos:end="179:75"><expr pos:start="179:75" pos:end="179:75"><literal type="number" pos:start="179:75" pos:end="179:75">0</literal></expr></argument>, <argument pos:start="179:78" pos:end="179:96"><expr pos:start="179:78" pos:end="179:96"><literal type="number" pos:start="179:78" pos:end="179:78">4</literal><operator pos:start="179:79" pos:end="179:79">*</operator><literal type="number" pos:start="179:80" pos:end="179:80">2</literal><operator pos:start="179:81" pos:end="179:81">*</operator><sizeof pos:start="179:82" pos:end="179:96">sizeof<argument_list pos:start="179:88" pos:end="179:96">(<argument pos:start="179:89" pos:end="179:95"><expr pos:start="179:89" pos:end="179:95"><name pos:start="179:89" pos:end="179:95">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>

      </block_content>}</block></else></if_stmt>

      <if_stmt pos:start="185:7" pos:end="197:7"><if pos:start="185:7" pos:end="189:7">if <condition pos:start="185:10" pos:end="185:23">(<expr pos:start="185:11" pos:end="185:22"><name pos:start="185:11" pos:end="185:17">mb_type</name> <operator pos:start="185:19" pos:end="185:20">!=</operator> <literal type="number" pos:start="185:22" pos:end="185:22">1</literal></expr>)</condition> <block pos:start="185:25" pos:end="189:7">{<block_content pos:start="187:9" pos:end="187:52">

	<expr_stmt pos:start="187:9" pos:end="187:52"><expr pos:start="187:9" pos:end="187:51"><call pos:start="187:9" pos:end="187:51"><name pos:start="187:9" pos:end="187:19">svq3_mc_dir</name> <argument_list pos:start="187:21" pos:end="187:51">(<argument pos:start="187:22" pos:end="187:22"><expr pos:start="187:22" pos:end="187:22"><name pos:start="187:22" pos:end="187:22">h</name></expr></argument>, <argument pos:start="187:25" pos:end="187:25"><expr pos:start="187:25" pos:end="187:25"><literal type="number" pos:start="187:25" pos:end="187:25">0</literal></expr></argument>, <argument pos:start="187:28" pos:end="187:31"><expr pos:start="187:28" pos:end="187:31"><name pos:start="187:28" pos:end="187:31">mode</name></expr></argument>, <argument pos:start="187:34" pos:end="187:34"><expr pos:start="187:34" pos:end="187:34"><literal type="number" pos:start="187:34" pos:end="187:34">1</literal></expr></argument>, <argument pos:start="187:37" pos:end="187:50"><expr pos:start="187:37" pos:end="187:50"><operator pos:start="187:37" pos:end="187:37">(</operator><name pos:start="187:38" pos:end="187:44">mb_type</name> <operator pos:start="187:46" pos:end="187:47">==</operator> <literal type="number" pos:start="187:49" pos:end="187:49">3</literal><operator pos:start="187:50" pos:end="187:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></if> <else pos:start="189:9" pos:end="197:7">else <block pos:start="189:14" pos:end="197:7">{<block_content pos:start="191:9" pos:end="195:9">

	<for pos:start="191:9" pos:end="195:9">for <control pos:start="191:13" pos:end="191:29">(<init pos:start="191:14" pos:end="191:17"><expr pos:start="191:14" pos:end="191:16"><name pos:start="191:14" pos:end="191:14">i</name><operator pos:start="191:15" pos:end="191:15">=</operator><literal type="number" pos:start="191:16" pos:end="191:16">0</literal></expr>;</init> <condition pos:start="191:19" pos:end="191:24"><expr pos:start="191:19" pos:end="191:23"><name pos:start="191:19" pos:end="191:19">i</name> <operator pos:start="191:21" pos:end="191:21">&lt;</operator> <literal type="number" pos:start="191:23" pos:end="191:23">4</literal></expr>;</condition> <incr pos:start="191:26" pos:end="191:28"><expr pos:start="191:26" pos:end="191:28"><name pos:start="191:26" pos:end="191:26">i</name><operator pos:start="191:27" pos:end="191:28">++</operator></expr></incr>)</control> <block pos:start="191:31" pos:end="195:9">{<block_content pos:start="193:11" pos:end="193:98">

	  <expr_stmt pos:start="193:11" pos:end="193:98"><expr pos:start="193:11" pos:end="193:97"><call pos:start="193:11" pos:end="193:97"><name pos:start="193:11" pos:end="193:16">memset</name> <argument_list pos:start="193:18" pos:end="193:97">(<argument pos:start="193:19" pos:end="193:72"><expr pos:start="193:19" pos:end="193:72"><name pos:start="193:19" pos:end="193:72"><name pos:start="193:19" pos:end="193:19">s</name><operator pos:start="193:20" pos:end="193:21">-&gt;</operator><name pos:start="193:22" pos:end="193:36">current_picture</name><operator pos:start="193:37" pos:end="193:37">.</operator><name pos:start="193:38" pos:end="193:47">motion_val</name><index pos:start="193:48" pos:end="193:50">[<expr pos:start="193:49" pos:end="193:49"><literal type="number" pos:start="193:49" pos:end="193:49">1</literal></expr>]</index><index pos:start="193:51" pos:end="193:72">[<expr pos:start="193:52" pos:end="193:71"><name pos:start="193:52" pos:end="193:55">b_xy</name> <operator pos:start="193:57" pos:end="193:57">+</operator> <name pos:start="193:59" pos:end="193:59">i</name><operator pos:start="193:60" pos:end="193:60">*</operator><name pos:start="193:61" pos:end="193:71"><name pos:start="193:61" pos:end="193:61">h</name><operator pos:start="193:62" pos:end="193:63">-&gt;</operator><name pos:start="193:64" pos:end="193:71">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="193:75" pos:end="193:75"><expr pos:start="193:75" pos:end="193:75"><literal type="number" pos:start="193:75" pos:end="193:75">0</literal></expr></argument>, <argument pos:start="193:78" pos:end="193:96"><expr pos:start="193:78" pos:end="193:96"><literal type="number" pos:start="193:78" pos:end="193:78">4</literal><operator pos:start="193:79" pos:end="193:79">*</operator><literal type="number" pos:start="193:80" pos:end="193:80">2</literal><operator pos:start="193:81" pos:end="193:81">*</operator><sizeof pos:start="193:82" pos:end="193:96">sizeof<argument_list pos:start="193:88" pos:end="193:96">(<argument pos:start="193:89" pos:end="193:95"><expr pos:start="193:89" pos:end="193:95"><name pos:start="193:89" pos:end="193:95">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>

      </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:28"><expr pos:start="203:5" pos:end="203:27"><name pos:start="203:5" pos:end="203:11">mb_type</name> <operator pos:start="203:13" pos:end="203:13">=</operator> <name pos:start="203:15" pos:end="203:27">MB_TYPE_16x16</name></expr>;</expr_stmt>

  </block_content>}</block></if> <if type="elseif" pos:start="205:5" pos:end="329:3">else if <condition pos:start="205:13" pos:end="205:43">(<expr pos:start="205:14" pos:end="205:42"><name pos:start="205:14" pos:end="205:20">mb_type</name> <operator pos:start="205:22" pos:end="205:23">==</operator> <literal type="number" pos:start="205:25" pos:end="205:25">8</literal> <operator pos:start="205:27" pos:end="205:28">||</operator> <name pos:start="205:30" pos:end="205:36">mb_type</name> <operator pos:start="205:38" pos:end="205:39">==</operator> <literal type="number" pos:start="205:41" pos:end="205:42">33</literal></expr>)</condition> <block pos:start="205:45" pos:end="329:3">{<block_content pos:start="207:5" pos:end="327:31">	<comment type="block" pos:start="205:49" pos:end="205:62">/* INTRA4x4 */</comment>

    <expr_stmt pos:start="207:5" pos:end="207:65"><expr pos:start="207:5" pos:end="207:64"><call pos:start="207:5" pos:end="207:64"><name pos:start="207:5" pos:end="207:10">memset</name> <argument_list pos:start="207:12" pos:end="207:64">(<argument pos:start="207:13" pos:end="207:39"><expr pos:start="207:13" pos:end="207:39"><name pos:start="207:13" pos:end="207:39"><name pos:start="207:13" pos:end="207:13">h</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:39">intra4x4_pred_mode_cache</name></name></expr></argument>, <argument pos:start="207:42" pos:end="207:43"><expr pos:start="207:42" pos:end="207:43"><operator pos:start="207:42" pos:end="207:42">-</operator><literal type="number" pos:start="207:43" pos:end="207:43">1</literal></expr></argument>, <argument pos:start="207:46" pos:end="207:63"><expr pos:start="207:46" pos:end="207:63"><literal type="number" pos:start="207:46" pos:end="207:46">8</literal><operator pos:start="207:47" pos:end="207:47">*</operator><literal type="number" pos:start="207:48" pos:end="207:48">5</literal><operator pos:start="207:49" pos:end="207:49">*</operator><sizeof pos:start="207:50" pos:end="207:63">sizeof<argument_list pos:start="207:56" pos:end="207:63">(<argument pos:start="207:57" pos:end="207:62"><expr pos:start="207:57" pos:end="207:62"><name pos:start="207:57" pos:end="207:62">int8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="211:5" pos:end="291:5"><if pos:start="211:5" pos:end="283:5">if <condition pos:start="211:8" pos:end="211:21">(<expr pos:start="211:9" pos:end="211:20"><name pos:start="211:9" pos:end="211:15">mb_type</name> <operator pos:start="211:17" pos:end="211:18">==</operator> <literal type="number" pos:start="211:20" pos:end="211:20">8</literal></expr>)</condition> <block pos:start="211:23" pos:end="283:5">{<block_content pos:start="213:7" pos:end="281:7">

      <if_stmt pos:start="213:7" pos:end="227:7"><if pos:start="213:7" pos:end="227:7">if <condition pos:start="213:10" pos:end="213:22">(<expr pos:start="213:11" pos:end="213:21"><name pos:start="213:11" pos:end="213:17"><name pos:start="213:11" pos:end="213:11">s</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:17">mb_x</name></name> <operator pos:start="213:19" pos:end="213:19">&gt;</operator> <literal type="number" pos:start="213:21" pos:end="213:21">0</literal></expr>)</condition> <block pos:start="213:24" pos:end="227:7">{<block_content pos:start="215:9" pos:end="225:9">

	<for pos:start="215:9" pos:end="219:9">for <control pos:start="215:13" pos:end="215:29">(<init pos:start="215:14" pos:end="215:17"><expr pos:start="215:14" pos:end="215:16"><name pos:start="215:14" pos:end="215:14">i</name><operator pos:start="215:15" pos:end="215:15">=</operator><literal type="number" pos:start="215:16" pos:end="215:16">0</literal></expr>;</init> <condition pos:start="215:19" pos:end="215:24"><expr pos:start="215:19" pos:end="215:23"><name pos:start="215:19" pos:end="215:19">i</name> <operator pos:start="215:21" pos:end="215:21">&lt;</operator> <literal type="number" pos:start="215:23" pos:end="215:23">4</literal></expr>;</condition> <incr pos:start="215:26" pos:end="215:28"><expr pos:start="215:26" pos:end="215:28"><name pos:start="215:26" pos:end="215:26">i</name><operator pos:start="215:27" pos:end="215:28">++</operator></expr></incr>)</control> <block pos:start="215:31" pos:end="219:9">{<block_content pos:start="217:11" pos:end="217:96">

	  <expr_stmt pos:start="217:11" pos:end="217:96"><expr pos:start="217:11" pos:end="217:95"><name pos:start="217:11" pos:end="217:57"><name pos:start="217:11" pos:end="217:11">h</name><operator pos:start="217:12" pos:end="217:13">-&gt;</operator><name pos:start="217:14" pos:end="217:37">intra4x4_pred_mode_cache</name><index pos:start="217:38" pos:end="217:57">[<expr pos:start="217:39" pos:end="217:56"><name pos:start="217:39" pos:end="217:46"><name pos:start="217:39" pos:end="217:43">scan8</name><index pos:start="217:44" pos:end="217:46">[<expr pos:start="217:45" pos:end="217:45"><literal type="number" pos:start="217:45" pos:end="217:45">0</literal></expr>]</index></name> <operator pos:start="217:48" pos:end="217:48">-</operator> <literal type="number" pos:start="217:50" pos:end="217:50">1</literal> <operator pos:start="217:52" pos:end="217:52">+</operator> <name pos:start="217:54" pos:end="217:54">i</name><operator pos:start="217:55" pos:end="217:55">*</operator><literal type="number" pos:start="217:56" pos:end="217:56">8</literal></expr>]</index></name> <operator pos:start="217:59" pos:end="217:59">=</operator> <name pos:start="217:61" pos:end="217:95"><name pos:start="217:61" pos:end="217:61">h</name><operator pos:start="217:62" pos:end="217:63">-&gt;</operator><name pos:start="217:64" pos:end="217:81">intra4x4_pred_mode</name><index pos:start="217:82" pos:end="217:92">[<expr pos:start="217:83" pos:end="217:91"><name pos:start="217:83" pos:end="217:87">mb_xy</name> <operator pos:start="217:89" pos:end="217:89">-</operator> <literal type="number" pos:start="217:91" pos:end="217:91">1</literal></expr>]</index><index pos:start="217:93" pos:end="217:95">[<expr pos:start="217:94" pos:end="217:94"><name pos:start="217:94" pos:end="217:94">i</name></expr>]</index></name></expr>;</expr_stmt>

	</block_content>}</block></for>

	<if_stmt pos:start="221:9" pos:end="225:9"><if pos:start="221:9" pos:end="225:9">if <condition pos:start="221:12" pos:end="221:60">(<expr pos:start="221:13" pos:end="221:59"><name pos:start="221:13" pos:end="221:53"><name pos:start="221:13" pos:end="221:13">h</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:39">intra4x4_pred_mode_cache</name><index pos:start="221:40" pos:end="221:53">[<expr pos:start="221:41" pos:end="221:52"><name pos:start="221:41" pos:end="221:48"><name pos:start="221:41" pos:end="221:45">scan8</name><index pos:start="221:46" pos:end="221:48">[<expr pos:start="221:47" pos:end="221:47"><literal type="number" pos:start="221:47" pos:end="221:47">0</literal></expr>]</index></name> <operator pos:start="221:50" pos:end="221:50">-</operator> <literal type="number" pos:start="221:52" pos:end="221:52">1</literal></expr>]</index></name> <operator pos:start="221:55" pos:end="221:56">==</operator> <operator pos:start="221:58" pos:end="221:58">-</operator><literal type="number" pos:start="221:59" pos:end="221:59">1</literal></expr>)</condition> <block pos:start="221:62" pos:end="225:9">{<block_content pos:start="223:11" pos:end="223:45">

	  <expr_stmt pos:start="223:11" pos:end="223:45"><expr pos:start="223:11" pos:end="223:44"><name pos:start="223:11" pos:end="223:35"><name pos:start="223:11" pos:end="223:11">h</name><operator pos:start="223:12" pos:end="223:13">-&gt;</operator><name pos:start="223:14" pos:end="223:35">left_samples_available</name></name> <operator pos:start="223:37" pos:end="223:37">=</operator> <literal type="number" pos:start="223:39" pos:end="223:44">0x5F5F</literal></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

      </block_content>}</block></if></if_stmt>

      <if_stmt pos:start="229:7" pos:end="247:7"><if pos:start="229:7" pos:end="247:7">if <condition pos:start="229:10" pos:end="229:22">(<expr pos:start="229:11" pos:end="229:21"><name pos:start="229:11" pos:end="229:17"><name pos:start="229:11" pos:end="229:11">s</name><operator pos:start="229:12" pos:end="229:13">-&gt;</operator><name pos:start="229:14" pos:end="229:17">mb_y</name></name> <operator pos:start="229:19" pos:end="229:19">&gt;</operator> <literal type="number" pos:start="229:21" pos:end="229:21">0</literal></expr>)</condition> <block pos:start="229:24" pos:end="247:7">{<block_content pos:start="231:9" pos:end="245:9">

	<expr_stmt pos:start="231:9" pos:end="231:92"><expr pos:start="231:9" pos:end="231:91"><name pos:start="231:9" pos:end="231:42"><name pos:start="231:9" pos:end="231:9">h</name><operator pos:start="231:10" pos:end="231:11">-&gt;</operator><name pos:start="231:12" pos:end="231:35">intra4x4_pred_mode_cache</name><index pos:start="231:36" pos:end="231:42">[<expr pos:start="231:37" pos:end="231:41"><literal type="number" pos:start="231:37" pos:end="231:37">4</literal><operator pos:start="231:38" pos:end="231:38">+</operator><literal type="number" pos:start="231:39" pos:end="231:39">8</literal><operator pos:start="231:40" pos:end="231:40">*</operator><literal type="number" pos:start="231:41" pos:end="231:41">0</literal></expr>]</index></name> <operator pos:start="231:44" pos:end="231:44">=</operator> <name pos:start="231:46" pos:end="231:91"><name pos:start="231:46" pos:end="231:46">h</name><operator pos:start="231:47" pos:end="231:48">-&gt;</operator><name pos:start="231:49" pos:end="231:66">intra4x4_pred_mode</name><index pos:start="231:67" pos:end="231:88">[<expr pos:start="231:68" pos:end="231:87"><name pos:start="231:68" pos:end="231:72">mb_xy</name> <operator pos:start="231:74" pos:end="231:74">-</operator> <name pos:start="231:76" pos:end="231:87"><name pos:start="231:76" pos:end="231:76">s</name><operator pos:start="231:77" pos:end="231:78">-&gt;</operator><name pos:start="231:79" pos:end="231:87">mb_stride</name></name></expr>]</index><index pos:start="231:89" pos:end="231:91">[<expr pos:start="231:90" pos:end="231:90"><literal type="number" pos:start="231:90" pos:end="231:90">4</literal></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="233:9" pos:end="233:92"><expr pos:start="233:9" pos:end="233:91"><name pos:start="233:9" pos:end="233:42"><name pos:start="233:9" pos:end="233:9">h</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:35">intra4x4_pred_mode_cache</name><index pos:start="233:36" pos:end="233:42">[<expr pos:start="233:37" pos:end="233:41"><literal type="number" pos:start="233:37" pos:end="233:37">5</literal><operator pos:start="233:38" pos:end="233:38">+</operator><literal type="number" pos:start="233:39" pos:end="233:39">8</literal><operator pos:start="233:40" pos:end="233:40">*</operator><literal type="number" pos:start="233:41" pos:end="233:41">0</literal></expr>]</index></name> <operator pos:start="233:44" pos:end="233:44">=</operator> <name pos:start="233:46" pos:end="233:91"><name pos:start="233:46" pos:end="233:46">h</name><operator pos:start="233:47" pos:end="233:48">-&gt;</operator><name pos:start="233:49" pos:end="233:66">intra4x4_pred_mode</name><index pos:start="233:67" pos:end="233:88">[<expr pos:start="233:68" pos:end="233:87"><name pos:start="233:68" pos:end="233:72">mb_xy</name> <operator pos:start="233:74" pos:end="233:74">-</operator> <name pos:start="233:76" pos:end="233:87"><name pos:start="233:76" pos:end="233:76">s</name><operator pos:start="233:77" pos:end="233:78">-&gt;</operator><name pos:start="233:79" pos:end="233:87">mb_stride</name></name></expr>]</index><index pos:start="233:89" pos:end="233:91">[<expr pos:start="233:90" pos:end="233:90"><literal type="number" pos:start="233:90" pos:end="233:90">5</literal></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="235:9" pos:end="235:92"><expr pos:start="235:9" pos:end="235:91"><name pos:start="235:9" pos:end="235:42"><name pos:start="235:9" pos:end="235:9">h</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:35">intra4x4_pred_mode_cache</name><index pos:start="235:36" pos:end="235:42">[<expr pos:start="235:37" pos:end="235:41"><literal type="number" pos:start="235:37" pos:end="235:37">6</literal><operator pos:start="235:38" pos:end="235:38">+</operator><literal type="number" pos:start="235:39" pos:end="235:39">8</literal><operator pos:start="235:40" pos:end="235:40">*</operator><literal type="number" pos:start="235:41" pos:end="235:41">0</literal></expr>]</index></name> <operator pos:start="235:44" pos:end="235:44">=</operator> <name pos:start="235:46" pos:end="235:91"><name pos:start="235:46" pos:end="235:46">h</name><operator pos:start="235:47" pos:end="235:48">-&gt;</operator><name pos:start="235:49" pos:end="235:66">intra4x4_pred_mode</name><index pos:start="235:67" pos:end="235:88">[<expr pos:start="235:68" pos:end="235:87"><name pos:start="235:68" pos:end="235:72">mb_xy</name> <operator pos:start="235:74" pos:end="235:74">-</operator> <name pos:start="235:76" pos:end="235:87"><name pos:start="235:76" pos:end="235:76">s</name><operator pos:start="235:77" pos:end="235:78">-&gt;</operator><name pos:start="235:79" pos:end="235:87">mb_stride</name></name></expr>]</index><index pos:start="235:89" pos:end="235:91">[<expr pos:start="235:90" pos:end="235:90"><literal type="number" pos:start="235:90" pos:end="235:90">6</literal></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="237:9" pos:end="237:92"><expr pos:start="237:9" pos:end="237:91"><name pos:start="237:9" pos:end="237:42"><name pos:start="237:9" pos:end="237:9">h</name><operator pos:start="237:10" pos:end="237:11">-&gt;</operator><name pos:start="237:12" pos:end="237:35">intra4x4_pred_mode_cache</name><index pos:start="237:36" pos:end="237:42">[<expr pos:start="237:37" pos:end="237:41"><literal type="number" pos:start="237:37" pos:end="237:37">7</literal><operator pos:start="237:38" pos:end="237:38">+</operator><literal type="number" pos:start="237:39" pos:end="237:39">8</literal><operator pos:start="237:40" pos:end="237:40">*</operator><literal type="number" pos:start="237:41" pos:end="237:41">0</literal></expr>]</index></name> <operator pos:start="237:44" pos:end="237:44">=</operator> <name pos:start="237:46" pos:end="237:91"><name pos:start="237:46" pos:end="237:46">h</name><operator pos:start="237:47" pos:end="237:48">-&gt;</operator><name pos:start="237:49" pos:end="237:66">intra4x4_pred_mode</name><index pos:start="237:67" pos:end="237:88">[<expr pos:start="237:68" pos:end="237:87"><name pos:start="237:68" pos:end="237:72">mb_xy</name> <operator pos:start="237:74" pos:end="237:74">-</operator> <name pos:start="237:76" pos:end="237:87"><name pos:start="237:76" pos:end="237:76">s</name><operator pos:start="237:77" pos:end="237:78">-&gt;</operator><name pos:start="237:79" pos:end="237:87">mb_stride</name></name></expr>]</index><index pos:start="237:89" pos:end="237:91">[<expr pos:start="237:90" pos:end="237:90"><literal type="number" pos:start="237:90" pos:end="237:90">3</literal></expr>]</index></name></expr>;</expr_stmt>



	<if_stmt pos:start="241:9" pos:end="245:9"><if pos:start="241:9" pos:end="245:9">if <condition pos:start="241:12" pos:end="241:53">(<expr pos:start="241:13" pos:end="241:52"><name pos:start="241:13" pos:end="241:46"><name pos:start="241:13" pos:end="241:13">h</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:39">intra4x4_pred_mode_cache</name><index pos:start="241:40" pos:end="241:46">[<expr pos:start="241:41" pos:end="241:45"><literal type="number" pos:start="241:41" pos:end="241:41">4</literal><operator pos:start="241:42" pos:end="241:42">+</operator><literal type="number" pos:start="241:43" pos:end="241:43">8</literal><operator pos:start="241:44" pos:end="241:44">*</operator><literal type="number" pos:start="241:45" pos:end="241:45">0</literal></expr>]</index></name> <operator pos:start="241:48" pos:end="241:49">==</operator> <operator pos:start="241:51" pos:end="241:51">-</operator><literal type="number" pos:start="241:52" pos:end="241:52">1</literal></expr>)</condition> <block pos:start="241:55" pos:end="245:9">{<block_content pos:start="243:11" pos:end="243:44">

	  <expr_stmt pos:start="243:11" pos:end="243:44"><expr pos:start="243:11" pos:end="243:43"><name pos:start="243:11" pos:end="243:34"><name pos:start="243:11" pos:end="243:11">h</name><operator pos:start="243:12" pos:end="243:13">-&gt;</operator><name pos:start="243:14" pos:end="243:34">top_samples_available</name></name> <operator pos:start="243:36" pos:end="243:36">=</operator> <literal type="number" pos:start="243:38" pos:end="243:43">0x33FF</literal></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

      </block_content>}</block></if></if_stmt>



      <comment type="block" pos:start="251:7" pos:end="251:51">/* decode prediction codes for luma blocks */</comment>

      <for pos:start="253:7" pos:end="281:7">for <control pos:start="253:11" pos:end="253:29">(<init pos:start="253:12" pos:end="253:15"><expr pos:start="253:12" pos:end="253:14"><name pos:start="253:12" pos:end="253:12">i</name><operator pos:start="253:13" pos:end="253:13">=</operator><literal type="number" pos:start="253:14" pos:end="253:14">0</literal></expr>;</init> <condition pos:start="253:17" pos:end="253:23"><expr pos:start="253:17" pos:end="253:22"><name pos:start="253:17" pos:end="253:17">i</name> <operator pos:start="253:19" pos:end="253:19">&lt;</operator> <literal type="number" pos:start="253:21" pos:end="253:22">16</literal></expr>;</condition> <incr pos:start="253:25" pos:end="253:28"><expr pos:start="253:25" pos:end="253:28"><name pos:start="253:25" pos:end="253:25">i</name><operator pos:start="253:26" pos:end="253:27">+=</operator><literal type="number" pos:start="253:28" pos:end="253:28">2</literal></expr></incr>)</control> <block pos:start="253:31" pos:end="281:7">{<block_content pos:start="255:9" pos:end="279:20">

	<expr_stmt pos:start="255:9" pos:end="255:42"><expr pos:start="255:9" pos:end="255:41"><name pos:start="255:9" pos:end="255:11">vlc</name> <operator pos:start="255:13" pos:end="255:13">=</operator> <call pos:start="255:15" pos:end="255:41"><name pos:start="255:15" pos:end="255:32">svq3_get_ue_golomb</name> <argument_list pos:start="255:34" pos:end="255:41">(<argument pos:start="255:35" pos:end="255:40"><expr pos:start="255:35" pos:end="255:40"><operator pos:start="255:35" pos:end="255:35">&amp;</operator><name pos:start="255:36" pos:end="255:40"><name pos:start="255:36" pos:end="255:36">s</name><operator pos:start="255:37" pos:end="255:38">-&gt;</operator><name pos:start="255:39" pos:end="255:40">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="259:9" pos:end="261:20"><if pos:start="259:9" pos:end="261:20">if <condition pos:start="259:12" pos:end="259:22">(<expr pos:start="259:13" pos:end="259:21"><name pos:start="259:13" pos:end="259:15">vlc</name> <operator pos:start="259:17" pos:end="259:18">&gt;=</operator> <literal type="number" pos:start="259:20" pos:end="259:21">25</literal></expr>)</condition><block type="pseudo" pos:start="261:11" pos:end="261:20"><block_content pos:start="261:11" pos:end="261:20">

	  <return pos:start="261:11" pos:end="261:20">return <expr pos:start="261:18" pos:end="261:19"><operator pos:start="261:18" pos:end="261:18">-</operator><literal type="number" pos:start="261:19" pos:end="261:19">1</literal></expr>;</return></block_content></block></if></if_stmt>



	<expr_stmt pos:start="265:9" pos:end="265:61"><expr pos:start="265:9" pos:end="265:60"><name pos:start="265:9" pos:end="265:12">left</name>	<operator pos:start="265:17" pos:end="265:17">=</operator> <operator pos:start="265:19" pos:end="265:19">&amp;</operator><name pos:start="265:20" pos:end="265:60"><name pos:start="265:20" pos:end="265:20">h</name><operator pos:start="265:21" pos:end="265:22">-&gt;</operator><name pos:start="265:23" pos:end="265:46">intra4x4_pred_mode_cache</name><index pos:start="265:47" pos:end="265:60">[<expr pos:start="265:48" pos:end="265:59"><name pos:start="265:48" pos:end="265:55"><name pos:start="265:48" pos:end="265:52">scan8</name><index pos:start="265:53" pos:end="265:55">[<expr pos:start="265:54" pos:end="265:54"><name pos:start="265:54" pos:end="265:54">i</name></expr>]</index></name> <operator pos:start="265:57" pos:end="265:57">-</operator> <literal type="number" pos:start="265:59" pos:end="265:59">1</literal></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="267:9" pos:end="267:61"><expr pos:start="267:9" pos:end="267:60"><name pos:start="267:9" pos:end="267:11">top</name>	<operator pos:start="267:17" pos:end="267:17">=</operator> <operator pos:start="267:19" pos:end="267:19">&amp;</operator><name pos:start="267:20" pos:end="267:60"><name pos:start="267:20" pos:end="267:20">h</name><operator pos:start="267:21" pos:end="267:22">-&gt;</operator><name pos:start="267:23" pos:end="267:46">intra4x4_pred_mode_cache</name><index pos:start="267:47" pos:end="267:60">[<expr pos:start="267:48" pos:end="267:59"><name pos:start="267:48" pos:end="267:55"><name pos:start="267:48" pos:end="267:52">scan8</name><index pos:start="267:53" pos:end="267:55">[<expr pos:start="267:54" pos:end="267:54"><name pos:start="267:54" pos:end="267:54">i</name></expr>]</index></name> <operator pos:start="267:57" pos:end="267:57">-</operator> <literal type="number" pos:start="267:59" pos:end="267:59">8</literal></expr>]</index></name></expr>;</expr_stmt>



	<expr_stmt pos:start="271:9" pos:end="271:76"><expr pos:start="271:9" pos:end="271:75"><name pos:start="271:9" pos:end="271:15"><name pos:start="271:9" pos:end="271:12">left</name><index pos:start="271:13" pos:end="271:15">[<expr pos:start="271:14" pos:end="271:14"><literal type="number" pos:start="271:14" pos:end="271:14">1</literal></expr>]</index></name>	<operator pos:start="271:17" pos:end="271:17">=</operator> <name pos:start="271:19" pos:end="271:75"><name pos:start="271:19" pos:end="271:29">svq3_pred_1</name><index pos:start="271:30" pos:end="271:41">[<expr pos:start="271:31" pos:end="271:40"><name pos:start="271:31" pos:end="271:36"><name pos:start="271:31" pos:end="271:33">top</name><index pos:start="271:34" pos:end="271:36">[<expr pos:start="271:35" pos:end="271:35"><literal type="number" pos:start="271:35" pos:end="271:35">0</literal></expr>]</index></name> <operator pos:start="271:38" pos:end="271:38">+</operator> <literal type="number" pos:start="271:40" pos:end="271:40">1</literal></expr>]</index><index pos:start="271:42" pos:end="271:54">[<expr pos:start="271:43" pos:end="271:53"><name pos:start="271:43" pos:end="271:49"><name pos:start="271:43" pos:end="271:46">left</name><index pos:start="271:47" pos:end="271:49">[<expr pos:start="271:48" pos:end="271:48"><literal type="number" pos:start="271:48" pos:end="271:48">0</literal></expr>]</index></name> <operator pos:start="271:51" pos:end="271:51">+</operator> <literal type="number" pos:start="271:53" pos:end="271:53">1</literal></expr>]</index><index pos:start="271:55" pos:end="271:75">[<expr pos:start="271:56" pos:end="271:74"><name pos:start="271:56" pos:end="271:74"><name pos:start="271:56" pos:end="271:66">svq3_pred_0</name><index pos:start="271:67" pos:end="271:71">[<expr pos:start="271:68" pos:end="271:70"><name pos:start="271:68" pos:end="271:70">vlc</name></expr>]</index><index pos:start="271:72" pos:end="271:74">[<expr pos:start="271:73" pos:end="271:73"><literal type="number" pos:start="271:73" pos:end="271:73">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="273:9" pos:end="273:76"><expr pos:start="273:9" pos:end="273:75"><name pos:start="273:9" pos:end="273:15"><name pos:start="273:9" pos:end="273:12">left</name><index pos:start="273:13" pos:end="273:15">[<expr pos:start="273:14" pos:end="273:14"><literal type="number" pos:start="273:14" pos:end="273:14">2</literal></expr>]</index></name>	<operator pos:start="273:17" pos:end="273:17">=</operator> <name pos:start="273:19" pos:end="273:75"><name pos:start="273:19" pos:end="273:29">svq3_pred_1</name><index pos:start="273:30" pos:end="273:41">[<expr pos:start="273:31" pos:end="273:40"><name pos:start="273:31" pos:end="273:36"><name pos:start="273:31" pos:end="273:33">top</name><index pos:start="273:34" pos:end="273:36">[<expr pos:start="273:35" pos:end="273:35"><literal type="number" pos:start="273:35" pos:end="273:35">1</literal></expr>]</index></name> <operator pos:start="273:38" pos:end="273:38">+</operator> <literal type="number" pos:start="273:40" pos:end="273:40">1</literal></expr>]</index><index pos:start="273:42" pos:end="273:54">[<expr pos:start="273:43" pos:end="273:53"><name pos:start="273:43" pos:end="273:49"><name pos:start="273:43" pos:end="273:46">left</name><index pos:start="273:47" pos:end="273:49">[<expr pos:start="273:48" pos:end="273:48"><literal type="number" pos:start="273:48" pos:end="273:48">1</literal></expr>]</index></name> <operator pos:start="273:51" pos:end="273:51">+</operator> <literal type="number" pos:start="273:53" pos:end="273:53">1</literal></expr>]</index><index pos:start="273:55" pos:end="273:75">[<expr pos:start="273:56" pos:end="273:74"><name pos:start="273:56" pos:end="273:74"><name pos:start="273:56" pos:end="273:66">svq3_pred_0</name><index pos:start="273:67" pos:end="273:71">[<expr pos:start="273:68" pos:end="273:70"><name pos:start="273:68" pos:end="273:70">vlc</name></expr>]</index><index pos:start="273:72" pos:end="273:74">[<expr pos:start="273:73" pos:end="273:73"><literal type="number" pos:start="273:73" pos:end="273:73">1</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>



	<if_stmt pos:start="277:9" pos:end="279:20"><if pos:start="277:9" pos:end="279:20">if <condition pos:start="277:12" pos:end="277:43">(<expr pos:start="277:13" pos:end="277:42"><name pos:start="277:13" pos:end="277:19"><name pos:start="277:13" pos:end="277:16">left</name><index pos:start="277:17" pos:end="277:19">[<expr pos:start="277:18" pos:end="277:18"><literal type="number" pos:start="277:18" pos:end="277:18">1</literal></expr>]</index></name> <operator pos:start="277:21" pos:end="277:22">==</operator> <operator pos:start="277:24" pos:end="277:24">-</operator><literal type="number" pos:start="277:25" pos:end="277:25">1</literal> <operator pos:start="277:27" pos:end="277:28">||</operator> <name pos:start="277:30" pos:end="277:36"><name pos:start="277:30" pos:end="277:33">left</name><index pos:start="277:34" pos:end="277:36">[<expr pos:start="277:35" pos:end="277:35"><literal type="number" pos:start="277:35" pos:end="277:35">2</literal></expr>]</index></name> <operator pos:start="277:38" pos:end="277:39">==</operator> <operator pos:start="277:41" pos:end="277:41">-</operator><literal type="number" pos:start="277:42" pos:end="277:42">1</literal></expr>)</condition><block type="pseudo" pos:start="279:11" pos:end="279:20"><block_content pos:start="279:11" pos:end="279:20">

	  <return pos:start="279:11" pos:end="279:20">return <expr pos:start="279:18" pos:end="279:19"><operator pos:start="279:18" pos:end="279:18">-</operator><literal type="number" pos:start="279:19" pos:end="279:19">1</literal></expr>;</return></block_content></block></if></if_stmt>

      </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="283:7" pos:end="291:5">else <block pos:start="283:12" pos:end="291:5">{<block_content pos:start="285:7" pos:end="289:7">	<comment type="block" pos:start="283:17" pos:end="283:59">/* mb_type == 33, DC_128_PRED block type */</comment>

      <for pos:start="285:7" pos:end="289:7">for <control pos:start="285:11" pos:end="285:27">(<init pos:start="285:12" pos:end="285:15"><expr pos:start="285:12" pos:end="285:14"><name pos:start="285:12" pos:end="285:12">i</name><operator pos:start="285:13" pos:end="285:13">=</operator><literal type="number" pos:start="285:14" pos:end="285:14">0</literal></expr>;</init> <condition pos:start="285:17" pos:end="285:22"><expr pos:start="285:17" pos:end="285:21"><name pos:start="285:17" pos:end="285:17">i</name> <operator pos:start="285:19" pos:end="285:19">&lt;</operator> <literal type="number" pos:start="285:21" pos:end="285:21">4</literal></expr>;</condition> <incr pos:start="285:24" pos:end="285:26"><expr pos:start="285:24" pos:end="285:26"><name pos:start="285:24" pos:end="285:24">i</name><operator pos:start="285:25" pos:end="285:26">++</operator></expr></incr>)</control> <block pos:start="285:29" pos:end="289:7">{<block_content pos:start="287:9" pos:end="287:74">

	<expr_stmt pos:start="287:9" pos:end="287:74"><expr pos:start="287:9" pos:end="287:73"><call pos:start="287:9" pos:end="287:73"><name pos:start="287:9" pos:end="287:14">memset</name> <argument_list pos:start="287:16" pos:end="287:73">(<argument pos:start="287:17" pos:end="287:60"><expr pos:start="287:17" pos:end="287:60"><operator pos:start="287:17" pos:end="287:17">&amp;</operator><name pos:start="287:18" pos:end="287:60"><name pos:start="287:18" pos:end="287:18">h</name><operator pos:start="287:19" pos:end="287:20">-&gt;</operator><name pos:start="287:21" pos:end="287:44">intra4x4_pred_mode_cache</name><index pos:start="287:45" pos:end="287:60">[<expr pos:start="287:46" pos:end="287:59"><name pos:start="287:46" pos:end="287:53"><name pos:start="287:46" pos:end="287:50">scan8</name><index pos:start="287:51" pos:end="287:53">[<expr pos:start="287:52" pos:end="287:52"><literal type="number" pos:start="287:52" pos:end="287:52">0</literal></expr>]</index></name> <operator pos:start="287:55" pos:end="287:55">+</operator> <literal type="number" pos:start="287:57" pos:end="287:57">8</literal><operator pos:start="287:58" pos:end="287:58">*</operator><name pos:start="287:59" pos:end="287:59">i</name></expr>]</index></name></expr></argument>, <argument pos:start="287:63" pos:end="287:69"><expr pos:start="287:63" pos:end="287:69"><name pos:start="287:63" pos:end="287:69">DC_PRED</name></expr></argument>, <argument pos:start="287:72" pos:end="287:72"><expr pos:start="287:72" pos:end="287:72"><literal type="number" pos:start="287:72" pos:end="287:72">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="295:5" pos:end="295:35"><expr pos:start="295:5" pos:end="295:34"><call pos:start="295:5" pos:end="295:34"><name pos:start="295:5" pos:end="295:30">write_back_intra_pred_mode</name> <argument_list pos:start="295:32" pos:end="295:34">(<argument pos:start="295:33" pos:end="295:33"><expr pos:start="295:33" pos:end="295:33"><name pos:start="295:33" pos:end="295:33">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="299:5" pos:end="323:5"><if pos:start="299:5" pos:end="309:5">if <condition pos:start="299:8" pos:end="299:21">(<expr pos:start="299:9" pos:end="299:20"><name pos:start="299:9" pos:end="299:15">mb_type</name> <operator pos:start="299:17" pos:end="299:18">==</operator> <literal type="number" pos:start="299:20" pos:end="299:20">8</literal></expr>)</condition> <block pos:start="299:23" pos:end="309:5">{<block_content pos:start="301:7" pos:end="307:67">

      <expr_stmt pos:start="301:7" pos:end="301:35"><expr pos:start="301:7" pos:end="301:34"><call pos:start="301:7" pos:end="301:34"><name pos:start="301:7" pos:end="301:30">check_intra4x4_pred_mode</name> <argument_list pos:start="301:32" pos:end="301:34">(<argument pos:start="301:33" pos:end="301:33"><expr pos:start="301:33" pos:end="301:33"><name pos:start="301:33" pos:end="301:33">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <expr_stmt pos:start="305:7" pos:end="305:67"><expr pos:start="305:7" pos:end="305:66"><name pos:start="305:7" pos:end="305:30"><name pos:start="305:7" pos:end="305:7">h</name><operator pos:start="305:8" pos:end="305:9">-&gt;</operator><name pos:start="305:10" pos:end="305:30">top_samples_available</name></name>  <operator pos:start="305:33" pos:end="305:33">=</operator> <ternary pos:start="305:35" pos:end="305:66"><condition pos:start="305:35" pos:end="305:50"><expr pos:start="305:35" pos:end="305:48"><operator pos:start="305:35" pos:end="305:35">(</operator><name pos:start="305:36" pos:end="305:42"><name pos:start="305:36" pos:end="305:36">s</name><operator pos:start="305:37" pos:end="305:38">-&gt;</operator><name pos:start="305:39" pos:end="305:42">mb_y</name></name> <operator pos:start="305:44" pos:end="305:45">==</operator> <literal type="number" pos:start="305:47" pos:end="305:47">0</literal><operator pos:start="305:48" pos:end="305:48">)</operator></expr> ?</condition><then pos:start="305:52" pos:end="305:57"> <expr pos:start="305:52" pos:end="305:57"><literal type="number" pos:start="305:52" pos:end="305:57">0x33FF</literal></expr> </then><else pos:start="305:59" pos:end="305:66">: <expr pos:start="305:61" pos:end="305:66"><literal type="number" pos:start="305:61" pos:end="305:66">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

      <expr_stmt pos:start="307:7" pos:end="307:67"><expr pos:start="307:7" pos:end="307:66"><name pos:start="307:7" pos:end="307:31"><name pos:start="307:7" pos:end="307:7">h</name><operator pos:start="307:8" pos:end="307:9">-&gt;</operator><name pos:start="307:10" pos:end="307:31">left_samples_available</name></name> <operator pos:start="307:33" pos:end="307:33">=</operator> <ternary pos:start="307:35" pos:end="307:66"><condition pos:start="307:35" pos:end="307:50"><expr pos:start="307:35" pos:end="307:48"><operator pos:start="307:35" pos:end="307:35">(</operator><name pos:start="307:36" pos:end="307:42"><name pos:start="307:36" pos:end="307:36">s</name><operator pos:start="307:37" pos:end="307:38">-&gt;</operator><name pos:start="307:39" pos:end="307:42">mb_x</name></name> <operator pos:start="307:44" pos:end="307:45">==</operator> <literal type="number" pos:start="307:47" pos:end="307:47">0</literal><operator pos:start="307:48" pos:end="307:48">)</operator></expr> ?</condition><then pos:start="307:52" pos:end="307:57"> <expr pos:start="307:52" pos:end="307:57"><literal type="number" pos:start="307:52" pos:end="307:57">0x5F5F</literal></expr> </then><else pos:start="307:59" pos:end="307:66">: <expr pos:start="307:61" pos:end="307:66"><literal type="number" pos:start="307:61" pos:end="307:66">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="309:7" pos:end="323:5">else <block pos:start="309:12" pos:end="323:5">{<block_content pos:start="311:7" pos:end="321:41">

      <for pos:start="311:7" pos:end="315:7">for <control pos:start="311:11" pos:end="311:27">(<init pos:start="311:12" pos:end="311:15"><expr pos:start="311:12" pos:end="311:14"><name pos:start="311:12" pos:end="311:12">i</name><operator pos:start="311:13" pos:end="311:13">=</operator><literal type="number" pos:start="311:14" pos:end="311:14">0</literal></expr>;</init> <condition pos:start="311:17" pos:end="311:22"><expr pos:start="311:17" pos:end="311:21"><name pos:start="311:17" pos:end="311:17">i</name> <operator pos:start="311:19" pos:end="311:19">&lt;</operator> <literal type="number" pos:start="311:21" pos:end="311:21">4</literal></expr>;</condition> <incr pos:start="311:24" pos:end="311:26"><expr pos:start="311:24" pos:end="311:26"><name pos:start="311:24" pos:end="311:24">i</name><operator pos:start="311:25" pos:end="311:26">++</operator></expr></incr>)</control> <block pos:start="311:29" pos:end="315:7">{<block_content pos:start="313:9" pos:end="313:78">

        <expr_stmt pos:start="313:9" pos:end="313:78"><expr pos:start="313:9" pos:end="313:77"><call pos:start="313:9" pos:end="313:77"><name pos:start="313:9" pos:end="313:14">memset</name> <argument_list pos:start="313:16" pos:end="313:77">(<argument pos:start="313:17" pos:end="313:60"><expr pos:start="313:17" pos:end="313:60"><operator pos:start="313:17" pos:end="313:17">&amp;</operator><name pos:start="313:18" pos:end="313:60"><name pos:start="313:18" pos:end="313:18">h</name><operator pos:start="313:19" pos:end="313:20">-&gt;</operator><name pos:start="313:21" pos:end="313:44">intra4x4_pred_mode_cache</name><index pos:start="313:45" pos:end="313:60">[<expr pos:start="313:46" pos:end="313:59"><name pos:start="313:46" pos:end="313:53"><name pos:start="313:46" pos:end="313:50">scan8</name><index pos:start="313:51" pos:end="313:53">[<expr pos:start="313:52" pos:end="313:52"><literal type="number" pos:start="313:52" pos:end="313:52">0</literal></expr>]</index></name> <operator pos:start="313:55" pos:end="313:55">+</operator> <literal type="number" pos:start="313:57" pos:end="313:57">8</literal><operator pos:start="313:58" pos:end="313:58">*</operator><name pos:start="313:59" pos:end="313:59">i</name></expr>]</index></name></expr></argument>, <argument pos:start="313:63" pos:end="313:73"><expr pos:start="313:63" pos:end="313:73"><name pos:start="313:63" pos:end="313:73">DC_128_PRED</name></expr></argument>, <argument pos:start="313:76" pos:end="313:76"><expr pos:start="313:76" pos:end="313:76"><literal type="number" pos:start="313:76" pos:end="313:76">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></for>



      <expr_stmt pos:start="319:7" pos:end="319:41"><expr pos:start="319:7" pos:end="319:40"><name pos:start="319:7" pos:end="319:30"><name pos:start="319:7" pos:end="319:7">h</name><operator pos:start="319:8" pos:end="319:9">-&gt;</operator><name pos:start="319:10" pos:end="319:30">top_samples_available</name></name>  <operator pos:start="319:33" pos:end="319:33">=</operator> <literal type="number" pos:start="319:35" pos:end="319:40">0x33FF</literal></expr>;</expr_stmt>

      <expr_stmt pos:start="321:7" pos:end="321:41"><expr pos:start="321:7" pos:end="321:40"><name pos:start="321:7" pos:end="321:31"><name pos:start="321:7" pos:end="321:7">h</name><operator pos:start="321:8" pos:end="321:9">-&gt;</operator><name pos:start="321:10" pos:end="321:31">left_samples_available</name></name> <operator pos:start="321:33" pos:end="321:33">=</operator> <literal type="number" pos:start="321:35" pos:end="321:40">0x5F5F</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="327:5" pos:end="327:31"><expr pos:start="327:5" pos:end="327:30"><name pos:start="327:5" pos:end="327:11">mb_type</name> <operator pos:start="327:13" pos:end="327:13">=</operator> <name pos:start="327:15" pos:end="327:30">MB_TYPE_INTRA4x4</name></expr>;</expr_stmt>

  </block_content>}</block></if> <else pos:start="329:5" pos:end="347:3">else <block pos:start="329:10" pos:end="347:3">{<block_content pos:start="331:5" pos:end="345:33">			<comment type="block" pos:start="329:33" pos:end="329:48">/* INTRA16x16 */</comment>

    <expr_stmt pos:start="331:5" pos:end="331:48"><expr pos:start="331:5" pos:end="331:47"><name pos:start="331:5" pos:end="331:7">dir</name> <operator pos:start="331:9" pos:end="331:9">=</operator> <name pos:start="331:11" pos:end="331:37"><name pos:start="331:11" pos:end="331:24">i_mb_type_info</name><index pos:start="331:25" pos:end="331:37">[<expr pos:start="331:26" pos:end="331:36"><name pos:start="331:26" pos:end="331:32">mb_type</name> <operator pos:start="331:34" pos:end="331:34">-</operator> <literal type="number" pos:start="331:36" pos:end="331:36">8</literal></expr>]</index></name><operator pos:start="331:38" pos:end="331:38">.</operator><name pos:start="331:39" pos:end="331:47">pred_mode</name></expr>;</expr_stmt>

    <expr_stmt pos:start="333:5" pos:end="333:39"><expr pos:start="333:5" pos:end="333:38"><name pos:start="333:5" pos:end="333:7">dir</name> <operator pos:start="333:9" pos:end="333:9">=</operator> <operator pos:start="333:11" pos:end="333:11">(</operator><name pos:start="333:12" pos:end="333:14">dir</name> <operator pos:start="333:16" pos:end="333:17">&gt;&gt;</operator> <literal type="number" pos:start="333:19" pos:end="333:19">1</literal><operator pos:start="333:20" pos:end="333:20">)</operator> <operator pos:start="333:22" pos:end="333:22">^</operator> <literal type="number" pos:start="333:24" pos:end="333:24">3</literal><operator pos:start="333:25" pos:end="333:25">*</operator><operator pos:start="333:26" pos:end="333:26">(</operator><name pos:start="333:27" pos:end="333:29">dir</name> <operator pos:start="333:31" pos:end="333:31">&amp;</operator> <literal type="number" pos:start="333:33" pos:end="333:33">1</literal><operator pos:start="333:34" pos:end="333:34">)</operator> <operator pos:start="333:36" pos:end="333:36">^</operator> <literal type="number" pos:start="333:38" pos:end="333:38">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="337:5" pos:end="339:16"><if pos:start="337:5" pos:end="339:16">if <condition pos:start="337:8" pos:end="337:73">(<expr pos:start="337:9" pos:end="337:72"><operator pos:start="337:9" pos:end="337:9">(</operator><name pos:start="337:10" pos:end="337:32"><name pos:start="337:10" pos:end="337:10">h</name><operator pos:start="337:11" pos:end="337:12">-&gt;</operator><name pos:start="337:13" pos:end="337:32">intra16x16_pred_mode</name></name> <operator pos:start="337:34" pos:end="337:34">=</operator> <call pos:start="337:36" pos:end="337:65"><name pos:start="337:36" pos:end="337:56">check_intra_pred_mode</name> <argument_list pos:start="337:58" pos:end="337:65">(<argument pos:start="337:59" pos:end="337:59"><expr pos:start="337:59" pos:end="337:59"><name pos:start="337:59" pos:end="337:59">h</name></expr></argument>, <argument pos:start="337:62" pos:end="337:64"><expr pos:start="337:62" pos:end="337:64"><name pos:start="337:62" pos:end="337:64">dir</name></expr></argument>)</argument_list></call><operator pos:start="337:66" pos:end="337:66">)</operator> <operator pos:start="337:68" pos:end="337:69">==</operator> <operator pos:start="337:71" pos:end="337:71">-</operator><literal type="number" pos:start="337:72" pos:end="337:72">1</literal></expr>)</condition><block type="pseudo" pos:start="339:7" pos:end="339:16"><block_content pos:start="339:7" pos:end="339:16">

      <return pos:start="339:7" pos:end="339:16">return <expr pos:start="339:14" pos:end="339:15"><operator pos:start="339:14" pos:end="339:14">-</operator><literal type="number" pos:start="339:15" pos:end="339:15">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="343:5" pos:end="343:42"><expr pos:start="343:5" pos:end="343:41"><name pos:start="343:5" pos:end="343:7">cbp</name> <operator pos:start="343:9" pos:end="343:9">=</operator> <name pos:start="343:11" pos:end="343:37"><name pos:start="343:11" pos:end="343:24">i_mb_type_info</name><index pos:start="343:25" pos:end="343:37">[<expr pos:start="343:26" pos:end="343:36"><name pos:start="343:26" pos:end="343:32">mb_type</name> <operator pos:start="343:34" pos:end="343:34">-</operator> <literal type="number" pos:start="343:36" pos:end="343:36">8</literal></expr>]</index></name><operator pos:start="343:38" pos:end="343:38">.</operator><name pos:start="343:39" pos:end="343:41">cbp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:33"><expr pos:start="345:5" pos:end="345:32"><name pos:start="345:5" pos:end="345:11">mb_type</name> <operator pos:start="345:13" pos:end="345:13">=</operator> <name pos:start="345:15" pos:end="345:32">MB_TYPE_INTRA16x16</name></expr>;</expr_stmt>

  </block_content>}</block></else></if_stmt>



  <if_stmt pos:start="351:3" pos:end="369:3"><if pos:start="351:3" pos:end="369:3">if <condition pos:start="351:6" pos:end="351:51">(<expr pos:start="351:7" pos:end="351:50"><operator pos:start="351:7" pos:end="351:7">!</operator><call pos:start="351:8" pos:end="351:24"><name pos:start="351:8" pos:end="351:15">IS_INTER</name><argument_list pos:start="351:16" pos:end="351:24">(<argument pos:start="351:17" pos:end="351:23"><expr pos:start="351:17" pos:end="351:23"><name pos:start="351:17" pos:end="351:23">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="351:26" pos:end="351:27">&amp;&amp;</operator> <name pos:start="351:29" pos:end="351:40"><name pos:start="351:29" pos:end="351:29">s</name><operator pos:start="351:30" pos:end="351:31">-&gt;</operator><name pos:start="351:32" pos:end="351:40">pict_type</name></name> <operator pos:start="351:42" pos:end="351:43">!=</operator> <name pos:start="351:45" pos:end="351:50">I_TYPE</name></expr>)</condition> <block pos:start="351:53" pos:end="369:3">{<block_content pos:start="353:5" pos:end="367:5">

    <for pos:start="353:5" pos:end="357:5">for <control pos:start="353:9" pos:end="353:25">(<init pos:start="353:10" pos:end="353:13"><expr pos:start="353:10" pos:end="353:12"><name pos:start="353:10" pos:end="353:10">i</name><operator pos:start="353:11" pos:end="353:11">=</operator><literal type="number" pos:start="353:12" pos:end="353:12">0</literal></expr>;</init> <condition pos:start="353:15" pos:end="353:20"><expr pos:start="353:15" pos:end="353:19"><name pos:start="353:15" pos:end="353:15">i</name> <operator pos:start="353:17" pos:end="353:17">&lt;</operator> <literal type="number" pos:start="353:19" pos:end="353:19">4</literal></expr>;</condition> <incr pos:start="353:22" pos:end="353:24"><expr pos:start="353:22" pos:end="353:24"><name pos:start="353:22" pos:end="353:22">i</name><operator pos:start="353:23" pos:end="353:24">++</operator></expr></incr>)</control> <block pos:start="353:27" pos:end="357:5">{<block_content pos:start="355:7" pos:end="355:94">

      <expr_stmt pos:start="355:7" pos:end="355:94"><expr pos:start="355:7" pos:end="355:93"><call pos:start="355:7" pos:end="355:93"><name pos:start="355:7" pos:end="355:12">memset</name> <argument_list pos:start="355:14" pos:end="355:93">(<argument pos:start="355:15" pos:end="355:68"><expr pos:start="355:15" pos:end="355:68"><name pos:start="355:15" pos:end="355:68"><name pos:start="355:15" pos:end="355:15">s</name><operator pos:start="355:16" pos:end="355:17">-&gt;</operator><name pos:start="355:18" pos:end="355:32">current_picture</name><operator pos:start="355:33" pos:end="355:33">.</operator><name pos:start="355:34" pos:end="355:43">motion_val</name><index pos:start="355:44" pos:end="355:46">[<expr pos:start="355:45" pos:end="355:45"><literal type="number" pos:start="355:45" pos:end="355:45">0</literal></expr>]</index><index pos:start="355:47" pos:end="355:68">[<expr pos:start="355:48" pos:end="355:67"><name pos:start="355:48" pos:end="355:51">b_xy</name> <operator pos:start="355:53" pos:end="355:53">+</operator> <name pos:start="355:55" pos:end="355:55">i</name><operator pos:start="355:56" pos:end="355:56">*</operator><name pos:start="355:57" pos:end="355:67"><name pos:start="355:57" pos:end="355:57">h</name><operator pos:start="355:58" pos:end="355:59">-&gt;</operator><name pos:start="355:60" pos:end="355:67">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="355:71" pos:end="355:71"><expr pos:start="355:71" pos:end="355:71"><literal type="number" pos:start="355:71" pos:end="355:71">0</literal></expr></argument>, <argument pos:start="355:74" pos:end="355:92"><expr pos:start="355:74" pos:end="355:92"><literal type="number" pos:start="355:74" pos:end="355:74">4</literal><operator pos:start="355:75" pos:end="355:75">*</operator><literal type="number" pos:start="355:76" pos:end="355:76">2</literal><operator pos:start="355:77" pos:end="355:77">*</operator><sizeof pos:start="355:78" pos:end="355:92">sizeof<argument_list pos:start="355:84" pos:end="355:92">(<argument pos:start="355:85" pos:end="355:91"><expr pos:start="355:85" pos:end="355:91"><name pos:start="355:85" pos:end="355:91">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="359:5" pos:end="367:5"><if pos:start="359:5" pos:end="367:5">if <condition pos:start="359:8" pos:end="359:31">(<expr pos:start="359:9" pos:end="359:30"><name pos:start="359:9" pos:end="359:20"><name pos:start="359:9" pos:end="359:9">s</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:20">pict_type</name></name> <operator pos:start="359:22" pos:end="359:23">==</operator> <name pos:start="359:25" pos:end="359:30">B_TYPE</name></expr>)</condition> <block pos:start="359:33" pos:end="367:5">{<block_content pos:start="361:7" pos:end="365:7">

      <for pos:start="361:7" pos:end="365:7">for <control pos:start="361:11" pos:end="361:27">(<init pos:start="361:12" pos:end="361:15"><expr pos:start="361:12" pos:end="361:14"><name pos:start="361:12" pos:end="361:12">i</name><operator pos:start="361:13" pos:end="361:13">=</operator><literal type="number" pos:start="361:14" pos:end="361:14">0</literal></expr>;</init> <condition pos:start="361:17" pos:end="361:22"><expr pos:start="361:17" pos:end="361:21"><name pos:start="361:17" pos:end="361:17">i</name> <operator pos:start="361:19" pos:end="361:19">&lt;</operator> <literal type="number" pos:start="361:21" pos:end="361:21">4</literal></expr>;</condition> <incr pos:start="361:24" pos:end="361:26"><expr pos:start="361:24" pos:end="361:26"><name pos:start="361:24" pos:end="361:24">i</name><operator pos:start="361:25" pos:end="361:26">++</operator></expr></incr>)</control> <block pos:start="361:29" pos:end="365:7">{<block_content pos:start="363:9" pos:end="363:96">

	<expr_stmt pos:start="363:9" pos:end="363:96"><expr pos:start="363:9" pos:end="363:95"><call pos:start="363:9" pos:end="363:95"><name pos:start="363:9" pos:end="363:14">memset</name> <argument_list pos:start="363:16" pos:end="363:95">(<argument pos:start="363:17" pos:end="363:70"><expr pos:start="363:17" pos:end="363:70"><name pos:start="363:17" pos:end="363:70"><name pos:start="363:17" pos:end="363:17">s</name><operator pos:start="363:18" pos:end="363:19">-&gt;</operator><name pos:start="363:20" pos:end="363:34">current_picture</name><operator pos:start="363:35" pos:end="363:35">.</operator><name pos:start="363:36" pos:end="363:45">motion_val</name><index pos:start="363:46" pos:end="363:48">[<expr pos:start="363:47" pos:end="363:47"><literal type="number" pos:start="363:47" pos:end="363:47">1</literal></expr>]</index><index pos:start="363:49" pos:end="363:70">[<expr pos:start="363:50" pos:end="363:69"><name pos:start="363:50" pos:end="363:53">b_xy</name> <operator pos:start="363:55" pos:end="363:55">+</operator> <name pos:start="363:57" pos:end="363:57">i</name><operator pos:start="363:58" pos:end="363:58">*</operator><name pos:start="363:59" pos:end="363:69"><name pos:start="363:59" pos:end="363:59">h</name><operator pos:start="363:60" pos:end="363:61">-&gt;</operator><name pos:start="363:62" pos:end="363:69">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="363:73" pos:end="363:73"><expr pos:start="363:73" pos:end="363:73"><literal type="number" pos:start="363:73" pos:end="363:73">0</literal></expr></argument>, <argument pos:start="363:76" pos:end="363:94"><expr pos:start="363:76" pos:end="363:94"><literal type="number" pos:start="363:76" pos:end="363:76">4</literal><operator pos:start="363:77" pos:end="363:77">*</operator><literal type="number" pos:start="363:78" pos:end="363:78">2</literal><operator pos:start="363:79" pos:end="363:79">*</operator><sizeof pos:start="363:80" pos:end="363:94">sizeof<argument_list pos:start="363:86" pos:end="363:94">(<argument pos:start="363:87" pos:end="363:93"><expr pos:start="363:87" pos:end="363:93"><name pos:start="363:87" pos:end="363:93">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

  </block_content>}</block></if></if_stmt>

  <if_stmt pos:start="371:3" pos:end="375:3"><if pos:start="371:3" pos:end="375:3">if <condition pos:start="371:6" pos:end="371:28">(<expr pos:start="371:7" pos:end="371:27"><operator pos:start="371:7" pos:end="371:7">!</operator><call pos:start="371:8" pos:end="371:27"><name pos:start="371:8" pos:end="371:18">IS_INTRA4x4</name><argument_list pos:start="371:19" pos:end="371:27">(<argument pos:start="371:20" pos:end="371:26"><expr pos:start="371:20" pos:end="371:26"><name pos:start="371:20" pos:end="371:26">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="371:30" pos:end="375:3">{<block_content pos:start="373:5" pos:end="373:54">

    <expr_stmt pos:start="373:5" pos:end="373:54"><expr pos:start="373:5" pos:end="373:53"><call pos:start="373:5" pos:end="373:53"><name pos:start="373:5" pos:end="373:10">memset</name> <argument_list pos:start="373:12" pos:end="373:53">(<argument pos:start="373:13" pos:end="373:40"><expr pos:start="373:13" pos:end="373:40"><name pos:start="373:13" pos:end="373:40"><name pos:start="373:13" pos:end="373:13">h</name><operator pos:start="373:14" pos:end="373:15">-&gt;</operator><name pos:start="373:16" pos:end="373:33">intra4x4_pred_mode</name><index pos:start="373:34" pos:end="373:40">[<expr pos:start="373:35" pos:end="373:39"><name pos:start="373:35" pos:end="373:39">mb_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="373:43" pos:end="373:49"><expr pos:start="373:43" pos:end="373:49"><name pos:start="373:43" pos:end="373:49">DC_PRED</name></expr></argument>, <argument pos:start="373:52" pos:end="373:52"><expr pos:start="373:52" pos:end="373:52"><literal type="number" pos:start="373:52" pos:end="373:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></if></if_stmt>

  <if_stmt pos:start="377:3" pos:end="383:3"><if pos:start="377:3" pos:end="383:3">if <condition pos:start="377:6" pos:end="377:50">(<expr pos:start="377:7" pos:end="377:49"><operator pos:start="377:7" pos:end="377:7">!</operator><call pos:start="377:8" pos:end="377:23"><name pos:start="377:8" pos:end="377:14">IS_SKIP</name><argument_list pos:start="377:15" pos:end="377:23">(<argument pos:start="377:16" pos:end="377:22"><expr pos:start="377:16" pos:end="377:22"><name pos:start="377:16" pos:end="377:22">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="377:25" pos:end="377:26">||</operator> <name pos:start="377:28" pos:end="377:39"><name pos:start="377:28" pos:end="377:28">s</name><operator pos:start="377:29" pos:end="377:30">-&gt;</operator><name pos:start="377:31" pos:end="377:39">pict_type</name></name> <operator pos:start="377:41" pos:end="377:42">==</operator> <name pos:start="377:44" pos:end="377:49">B_TYPE</name></expr>)</condition> <block pos:start="377:52" pos:end="383:3">{<block_content pos:start="379:5" pos:end="381:31">

    <expr_stmt pos:start="379:5" pos:end="379:65"><expr pos:start="379:5" pos:end="379:64"><call pos:start="379:5" pos:end="379:64"><name pos:start="379:5" pos:end="379:10">memset</name> <argument_list pos:start="379:12" pos:end="379:64">(<argument pos:start="379:13" pos:end="379:39"><expr pos:start="379:13" pos:end="379:39"><name pos:start="379:13" pos:end="379:35"><name pos:start="379:13" pos:end="379:13">h</name><operator pos:start="379:14" pos:end="379:15">-&gt;</operator><name pos:start="379:16" pos:end="379:35">non_zero_count_cache</name></name> <operator pos:start="379:37" pos:end="379:37">+</operator> <literal type="number" pos:start="379:39" pos:end="379:39">8</literal></expr></argument>, <argument pos:start="379:42" pos:end="379:42"><expr pos:start="379:42" pos:end="379:42"><literal type="number" pos:start="379:42" pos:end="379:42">0</literal></expr></argument>, <argument pos:start="379:45" pos:end="379:63"><expr pos:start="379:45" pos:end="379:63"><literal type="number" pos:start="379:45" pos:end="379:45">4</literal><operator pos:start="379:46" pos:end="379:46">*</operator><literal type="number" pos:start="379:47" pos:end="379:47">9</literal><operator pos:start="379:48" pos:end="379:48">*</operator><sizeof pos:start="379:49" pos:end="379:63">sizeof<argument_list pos:start="379:55" pos:end="379:63">(<argument pos:start="379:56" pos:end="379:62"><expr pos:start="379:56" pos:end="379:62"><name pos:start="379:56" pos:end="379:62">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="381:5" pos:end="381:31"><expr pos:start="381:5" pos:end="381:30"><call pos:start="381:5" pos:end="381:30"><name pos:start="381:5" pos:end="381:23"><name pos:start="381:5" pos:end="381:5">s</name><operator pos:start="381:6" pos:end="381:7">-&gt;</operator><name pos:start="381:8" pos:end="381:10">dsp</name><operator pos:start="381:11" pos:end="381:11">.</operator><name pos:start="381:12" pos:end="381:23">clear_blocks</name></name><argument_list pos:start="381:24" pos:end="381:30">(<argument pos:start="381:25" pos:end="381:29"><expr pos:start="381:25" pos:end="381:29"><name pos:start="381:25" pos:end="381:29"><name pos:start="381:25" pos:end="381:25">h</name><operator pos:start="381:26" pos:end="381:27">-&gt;</operator><name pos:start="381:28" pos:end="381:29">mb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></if></if_stmt>



  <if_stmt pos:start="387:3" pos:end="397:3"><if pos:start="387:3" pos:end="397:3">if <condition pos:start="387:6" pos:end="387:79">(<expr pos:start="387:7" pos:end="387:78"><operator pos:start="387:7" pos:end="387:7">!</operator><call pos:start="387:8" pos:end="387:29"><name pos:start="387:8" pos:end="387:20">IS_INTRA16x16</name><argument_list pos:start="387:21" pos:end="387:29">(<argument pos:start="387:22" pos:end="387:28"><expr pos:start="387:22" pos:end="387:28"><name pos:start="387:22" pos:end="387:28">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="387:31" pos:end="387:32">&amp;&amp;</operator> <operator pos:start="387:34" pos:end="387:34">(</operator><operator pos:start="387:35" pos:end="387:35">!</operator><call pos:start="387:36" pos:end="387:51"><name pos:start="387:36" pos:end="387:42">IS_SKIP</name><argument_list pos:start="387:43" pos:end="387:51">(<argument pos:start="387:44" pos:end="387:50"><expr pos:start="387:44" pos:end="387:50"><name pos:start="387:44" pos:end="387:50">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="387:53" pos:end="387:54">||</operator> <name pos:start="387:56" pos:end="387:67"><name pos:start="387:56" pos:end="387:56">s</name><operator pos:start="387:57" pos:end="387:58">-&gt;</operator><name pos:start="387:59" pos:end="387:67">pict_type</name></name> <operator pos:start="387:69" pos:end="387:70">==</operator> <name pos:start="387:72" pos:end="387:77">B_TYPE</name><operator pos:start="387:78" pos:end="387:78">)</operator></expr>)</condition> <block pos:start="387:81" pos:end="397:3">{<block_content pos:start="389:5" pos:end="395:85">

    <if_stmt pos:start="389:5" pos:end="391:16"><if pos:start="389:5" pos:end="391:16">if <condition pos:start="389:8" pos:end="389:50">(<expr pos:start="389:9" pos:end="389:49"><operator pos:start="389:9" pos:end="389:9">(</operator><name pos:start="389:10" pos:end="389:12">vlc</name> <operator pos:start="389:14" pos:end="389:14">=</operator> <call pos:start="389:16" pos:end="389:42"><name pos:start="389:16" pos:end="389:33">svq3_get_ue_golomb</name> <argument_list pos:start="389:35" pos:end="389:42">(<argument pos:start="389:36" pos:end="389:41"><expr pos:start="389:36" pos:end="389:41"><operator pos:start="389:36" pos:end="389:36">&amp;</operator><name pos:start="389:37" pos:end="389:41"><name pos:start="389:37" pos:end="389:37">s</name><operator pos:start="389:38" pos:end="389:39">-&gt;</operator><name pos:start="389:40" pos:end="389:41">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="389:43" pos:end="389:43">)</operator> <operator pos:start="389:45" pos:end="389:46">&gt;=</operator> <literal type="number" pos:start="389:48" pos:end="389:49">48</literal></expr>)</condition><block type="pseudo" pos:start="391:7" pos:end="391:16"><block_content pos:start="391:7" pos:end="391:16">

      <return pos:start="391:7" pos:end="391:16">return <expr pos:start="391:14" pos:end="391:15"><operator pos:start="391:14" pos:end="391:14">-</operator><literal type="number" pos:start="391:15" pos:end="391:15">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="395:5" pos:end="395:85"><expr pos:start="395:5" pos:end="395:84"><name pos:start="395:5" pos:end="395:7">cbp</name> <operator pos:start="395:9" pos:end="395:9">=</operator> <ternary pos:start="395:11" pos:end="395:84"><condition pos:start="395:11" pos:end="395:29"><expr pos:start="395:11" pos:end="395:27"><call pos:start="395:11" pos:end="395:27"><name pos:start="395:11" pos:end="395:18">IS_INTRA</name><argument_list pos:start="395:19" pos:end="395:27">(<argument pos:start="395:20" pos:end="395:26"><expr pos:start="395:20" pos:end="395:26"><name pos:start="395:20" pos:end="395:26">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="395:31" pos:end="395:57"> <expr pos:start="395:31" pos:end="395:57"><name pos:start="395:31" pos:end="395:57"><name pos:start="395:31" pos:end="395:52">golomb_to_intra4x4_cbp</name><index pos:start="395:53" pos:end="395:57">[<expr pos:start="395:54" pos:end="395:56"><name pos:start="395:54" pos:end="395:56">vlc</name></expr>]</index></name></expr> </then><else pos:start="395:59" pos:end="395:84">: <expr pos:start="395:61" pos:end="395:84"><name pos:start="395:61" pos:end="395:84"><name pos:start="395:61" pos:end="395:79">golomb_to_inter_cbp</name><index pos:start="395:80" pos:end="395:84">[<expr pos:start="395:81" pos:end="395:83"><name pos:start="395:81" pos:end="395:83">vlc</name></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

  </block_content>}</block></if></if_stmt>

  <if_stmt pos:start="399:3" pos:end="409:3"><if pos:start="399:3" pos:end="409:3">if <condition pos:start="399:6" pos:end="399:85">(<expr pos:start="399:7" pos:end="399:84"><call pos:start="399:7" pos:end="399:28"><name pos:start="399:7" pos:end="399:19">IS_INTRA16x16</name><argument_list pos:start="399:20" pos:end="399:28">(<argument pos:start="399:21" pos:end="399:27"><expr pos:start="399:21" pos:end="399:27"><name pos:start="399:21" pos:end="399:27">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="399:30" pos:end="399:31">||</operator> <operator pos:start="399:33" pos:end="399:33">(</operator><name pos:start="399:34" pos:end="399:45"><name pos:start="399:34" pos:end="399:34">s</name><operator pos:start="399:35" pos:end="399:36">-&gt;</operator><name pos:start="399:37" pos:end="399:45">pict_type</name></name> <operator pos:start="399:47" pos:end="399:48">!=</operator> <name pos:start="399:50" pos:end="399:55">I_TYPE</name> <operator pos:start="399:57" pos:end="399:58">&amp;&amp;</operator> <name pos:start="399:60" pos:end="399:76"><name pos:start="399:60" pos:end="399:60">s</name><operator pos:start="399:61" pos:end="399:62">-&gt;</operator><name pos:start="399:63" pos:end="399:76">adaptive_quant</name></name> <operator pos:start="399:78" pos:end="399:79">&amp;&amp;</operator> <name pos:start="399:81" pos:end="399:83">cbp</name><operator pos:start="399:84" pos:end="399:84">)</operator></expr>)</condition> <block pos:start="399:87" pos:end="409:3">{<block_content pos:start="401:5" pos:end="407:16">

    <expr_stmt pos:start="401:5" pos:end="401:45"><expr pos:start="401:5" pos:end="401:44"><name pos:start="401:5" pos:end="401:13"><name pos:start="401:5" pos:end="401:5">s</name><operator pos:start="401:6" pos:end="401:7">-&gt;</operator><name pos:start="401:8" pos:end="401:13">qscale</name></name> <operator pos:start="401:15" pos:end="401:16">+=</operator> <call pos:start="401:18" pos:end="401:44"><name pos:start="401:18" pos:end="401:35">svq3_get_se_golomb</name> <argument_list pos:start="401:37" pos:end="401:44">(<argument pos:start="401:38" pos:end="401:43"><expr pos:start="401:38" pos:end="401:43"><operator pos:start="401:38" pos:end="401:38">&amp;</operator><name pos:start="401:39" pos:end="401:43"><name pos:start="401:39" pos:end="401:39">s</name><operator pos:start="401:40" pos:end="401:41">-&gt;</operator><name pos:start="401:42" pos:end="401:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="405:5" pos:end="407:16"><if pos:start="405:5" pos:end="407:16">if <condition pos:start="405:8" pos:end="405:23">(<expr pos:start="405:9" pos:end="405:22"><name pos:start="405:9" pos:end="405:17"><name pos:start="405:9" pos:end="405:9">s</name><operator pos:start="405:10" pos:end="405:11">-&gt;</operator><name pos:start="405:12" pos:end="405:17">qscale</name></name> <operator pos:start="405:19" pos:end="405:19">&gt;</operator> <literal type="number" pos:start="405:21" pos:end="405:22">31</literal></expr>)</condition><block type="pseudo" pos:start="407:7" pos:end="407:16"><block_content pos:start="407:7" pos:end="407:16">

      <return pos:start="407:7" pos:end="407:16">return <expr pos:start="407:14" pos:end="407:15"><operator pos:start="407:14" pos:end="407:14">-</operator><literal type="number" pos:start="407:15" pos:end="407:15">1</literal></expr>;</return></block_content></block></if></if_stmt>

  </block_content>}</block></if></if_stmt>

  <if_stmt pos:start="411:3" pos:end="417:3"><if pos:start="411:3" pos:end="417:3">if <condition pos:start="411:6" pos:end="411:29">(<expr pos:start="411:7" pos:end="411:28"><call pos:start="411:7" pos:end="411:28"><name pos:start="411:7" pos:end="411:19">IS_INTRA16x16</name><argument_list pos:start="411:20" pos:end="411:28">(<argument pos:start="411:21" pos:end="411:27"><expr pos:start="411:21" pos:end="411:27"><name pos:start="411:21" pos:end="411:27">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="411:31" pos:end="417:3">{<block_content pos:start="413:5" pos:end="415:16">

    <if_stmt pos:start="413:5" pos:end="415:16"><if pos:start="413:5" pos:end="415:16">if <condition pos:start="413:8" pos:end="413:48">(<expr pos:start="413:9" pos:end="413:47"><call pos:start="413:9" pos:end="413:47"><name pos:start="413:9" pos:end="413:25">svq3_decode_block</name> <argument_list pos:start="413:27" pos:end="413:47">(<argument pos:start="413:28" pos:end="413:33"><expr pos:start="413:28" pos:end="413:33"><operator pos:start="413:28" pos:end="413:28">&amp;</operator><name pos:start="413:29" pos:end="413:33"><name pos:start="413:29" pos:end="413:29">s</name><operator pos:start="413:30" pos:end="413:31">-&gt;</operator><name pos:start="413:32" pos:end="413:33">gb</name></name></expr></argument>, <argument pos:start="413:36" pos:end="413:40"><expr pos:start="413:36" pos:end="413:40"><name pos:start="413:36" pos:end="413:40"><name pos:start="413:36" pos:end="413:36">h</name><operator pos:start="413:37" pos:end="413:38">-&gt;</operator><name pos:start="413:39" pos:end="413:40">mb</name></name></expr></argument>, <argument pos:start="413:43" pos:end="413:43"><expr pos:start="413:43" pos:end="413:43"><literal type="number" pos:start="413:43" pos:end="413:43">0</literal></expr></argument>, <argument pos:start="413:46" pos:end="413:46"><expr pos:start="413:46" pos:end="413:46"><literal type="number" pos:start="413:46" pos:end="413:46">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="415:7" pos:end="415:16"><block_content pos:start="415:7" pos:end="415:16">

      <return pos:start="415:7" pos:end="415:16">return <expr pos:start="415:14" pos:end="415:15"><operator pos:start="415:14" pos:end="415:14">-</operator><literal type="number" pos:start="415:15" pos:end="415:15">1</literal></expr>;</return></block_content></block></if></if_stmt>

  </block_content>}</block></if></if_stmt>



  <if_stmt pos:start="421:3" pos:end="483:3"><if pos:start="421:3" pos:end="483:3">if <condition pos:start="421:6" pos:end="421:10">(<expr pos:start="421:7" pos:end="421:9"><name pos:start="421:7" pos:end="421:9">cbp</name></expr>)</condition> <block pos:start="421:12" pos:end="483:3">{<block_content pos:start="423:5" pos:end="481:5">

    <decl_stmt pos:start="423:5" pos:end="423:53"><decl pos:start="423:5" pos:end="423:52"><type pos:start="423:5" pos:end="423:13"><specifier pos:start="423:5" pos:end="423:9">const</specifier> <name pos:start="423:11" pos:end="423:13">int</name></type> <name pos:start="423:15" pos:end="423:19">index</name> <init pos:start="423:21" pos:end="423:52">= <expr pos:start="423:23" pos:end="423:52"><ternary pos:start="423:23" pos:end="423:52"><condition pos:start="423:23" pos:end="423:46"><expr pos:start="423:23" pos:end="423:44"><call pos:start="423:23" pos:end="423:44"><name pos:start="423:23" pos:end="423:35">IS_INTRA16x16</name><argument_list pos:start="423:36" pos:end="423:44">(<argument pos:start="423:37" pos:end="423:43"><expr pos:start="423:37" pos:end="423:43"><name pos:start="423:37" pos:end="423:43">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="423:48" pos:end="423:48"> <expr pos:start="423:48" pos:end="423:48"><literal type="number" pos:start="423:48" pos:end="423:48">1</literal></expr> </then><else pos:start="423:50" pos:end="423:52">: <expr pos:start="423:52" pos:end="423:52"><literal type="number" pos:start="423:52" pos:end="423:52">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="425:5" pos:end="425:72"><decl pos:start="425:5" pos:end="425:71"><type pos:start="425:5" pos:end="425:13"><specifier pos:start="425:5" pos:end="425:9">const</specifier> <name pos:start="425:11" pos:end="425:13">int</name></type> <name pos:start="425:15" pos:end="425:18">type</name> <init pos:start="425:20" pos:end="425:71">= <expr pos:start="425:22" pos:end="425:71"><operator pos:start="425:22" pos:end="425:22">(</operator><ternary pos:start="425:23" pos:end="425:70"><condition pos:start="425:23" pos:end="425:64"><expr pos:start="425:23" pos:end="425:62"><operator pos:start="425:23" pos:end="425:23">(</operator><name pos:start="425:24" pos:end="425:32"><name pos:start="425:24" pos:end="425:24">s</name><operator pos:start="425:25" pos:end="425:26">-&gt;</operator><name pos:start="425:27" pos:end="425:32">qscale</name></name> <operator pos:start="425:34" pos:end="425:34">&lt;</operator> <literal type="number" pos:start="425:36" pos:end="425:37">24</literal> <operator pos:start="425:39" pos:end="425:40">&amp;&amp;</operator> <call pos:start="425:42" pos:end="425:61"><name pos:start="425:42" pos:end="425:52">IS_INTRA4x4</name><argument_list pos:start="425:53" pos:end="425:61">(<argument pos:start="425:54" pos:end="425:60"><expr pos:start="425:54" pos:end="425:60"><name pos:start="425:54" pos:end="425:60">mb_type</name></expr></argument>)</argument_list></call><operator pos:start="425:62" pos:end="425:62">)</operator></expr> ?</condition><then pos:start="425:66" pos:end="425:66"> <expr pos:start="425:66" pos:end="425:66"><literal type="number" pos:start="425:66" pos:end="425:66">2</literal></expr> </then><else pos:start="425:68" pos:end="425:70">: <expr pos:start="425:70" pos:end="425:70"><literal type="number" pos:start="425:70" pos:end="425:70">1</literal></expr></else></ternary><operator pos:start="425:71" pos:end="425:71">)</operator></expr></init></decl>;</decl_stmt>



    <for pos:start="429:5" pos:end="449:5">for <control pos:start="429:9" pos:end="429:25">(<init pos:start="429:10" pos:end="429:13"><expr pos:start="429:10" pos:end="429:12"><name pos:start="429:10" pos:end="429:10">i</name><operator pos:start="429:11" pos:end="429:11">=</operator><literal type="number" pos:start="429:12" pos:end="429:12">0</literal></expr>;</init> <condition pos:start="429:15" pos:end="429:20"><expr pos:start="429:15" pos:end="429:19"><name pos:start="429:15" pos:end="429:15">i</name> <operator pos:start="429:17" pos:end="429:17">&lt;</operator> <literal type="number" pos:start="429:19" pos:end="429:19">4</literal></expr>;</condition> <incr pos:start="429:22" pos:end="429:24"><expr pos:start="429:22" pos:end="429:24"><name pos:start="429:22" pos:end="429:22">i</name><operator pos:start="429:23" pos:end="429:24">++</operator></expr></incr>)</control> <block pos:start="429:27" pos:end="449:5">{<block_content pos:start="431:7" pos:end="447:7">

      <if_stmt pos:start="431:7" pos:end="447:7"><if pos:start="431:7" pos:end="447:7">if <condition pos:start="431:10" pos:end="431:27">(<expr pos:start="431:11" pos:end="431:26"><operator pos:start="431:11" pos:end="431:11">(</operator><name pos:start="431:12" pos:end="431:14">cbp</name> <operator pos:start="431:16" pos:end="431:16">&amp;</operator> <operator pos:start="431:18" pos:end="431:18">(</operator><literal type="number" pos:start="431:19" pos:end="431:19">1</literal> <operator pos:start="431:21" pos:end="431:22">&lt;&lt;</operator> <name pos:start="431:24" pos:end="431:24">i</name><operator pos:start="431:25" pos:end="431:25">)</operator><operator pos:start="431:26" pos:end="431:26">)</operator></expr>)</condition> <block pos:start="431:29" pos:end="447:7">{<block_content pos:start="433:9" pos:end="445:9">

	<for pos:start="433:9" pos:end="445:9">for <control pos:start="433:13" pos:end="433:29">(<init pos:start="433:14" pos:end="433:17"><expr pos:start="433:14" pos:end="433:16"><name pos:start="433:14" pos:end="433:14">j</name><operator pos:start="433:15" pos:end="433:15">=</operator><literal type="number" pos:start="433:16" pos:end="433:16">0</literal></expr>;</init> <condition pos:start="433:19" pos:end="433:24"><expr pos:start="433:19" pos:end="433:23"><name pos:start="433:19" pos:end="433:19">j</name> <operator pos:start="433:21" pos:end="433:21">&lt;</operator> <literal type="number" pos:start="433:23" pos:end="433:23">4</literal></expr>;</condition> <incr pos:start="433:26" pos:end="433:28"><expr pos:start="433:26" pos:end="433:28"><name pos:start="433:26" pos:end="433:26">j</name><operator pos:start="433:27" pos:end="433:28">++</operator></expr></incr>)</control> <block pos:start="433:31" pos:end="445:9">{<block_content pos:start="435:11" pos:end="443:22">

	  <expr_stmt pos:start="435:11" pos:end="435:72"><expr pos:start="435:11" pos:end="435:71"><name pos:start="435:11" pos:end="435:11">k</name> <operator pos:start="435:13" pos:end="435:13">=</operator> <ternary pos:start="435:15" pos:end="435:71"><condition pos:start="435:15" pos:end="435:21"><expr pos:start="435:15" pos:end="435:19"><name pos:start="435:15" pos:end="435:19">index</name></expr> ?</condition><then pos:start="435:23" pos:end="435:59"> <expr pos:start="435:23" pos:end="435:59"><operator pos:start="435:23" pos:end="435:23">(</operator><operator pos:start="435:24" pos:end="435:24">(</operator><name pos:start="435:25" pos:end="435:25">j</name><operator pos:start="435:26" pos:end="435:26">&amp;</operator><literal type="number" pos:start="435:27" pos:end="435:27">1</literal><operator pos:start="435:28" pos:end="435:28">)</operator> <operator pos:start="435:30" pos:end="435:30">+</operator> <literal type="number" pos:start="435:32" pos:end="435:32">2</literal><operator pos:start="435:33" pos:end="435:33">*</operator><operator pos:start="435:34" pos:end="435:34">(</operator><name pos:start="435:35" pos:end="435:35">i</name><operator pos:start="435:36" pos:end="435:36">&amp;</operator><literal type="number" pos:start="435:37" pos:end="435:37">1</literal><operator pos:start="435:38" pos:end="435:38">)</operator> <operator pos:start="435:40" pos:end="435:40">+</operator> <literal type="number" pos:start="435:42" pos:end="435:42">2</literal><operator pos:start="435:43" pos:end="435:43">*</operator><operator pos:start="435:44" pos:end="435:44">(</operator><name pos:start="435:45" pos:end="435:45">j</name><operator pos:start="435:46" pos:end="435:46">&amp;</operator><literal type="number" pos:start="435:47" pos:end="435:47">2</literal><operator pos:start="435:48" pos:end="435:48">)</operator> <operator pos:start="435:50" pos:end="435:50">+</operator> <literal type="number" pos:start="435:52" pos:end="435:52">4</literal><operator pos:start="435:53" pos:end="435:53">*</operator><operator pos:start="435:54" pos:end="435:54">(</operator><name pos:start="435:55" pos:end="435:55">i</name><operator pos:start="435:56" pos:end="435:56">&amp;</operator><literal type="number" pos:start="435:57" pos:end="435:57">2</literal><operator pos:start="435:58" pos:end="435:58">)</operator><operator pos:start="435:59" pos:end="435:59">)</operator></expr> </then><else pos:start="435:61" pos:end="435:71">: <expr pos:start="435:63" pos:end="435:71"><operator pos:start="435:63" pos:end="435:63">(</operator><literal type="number" pos:start="435:64" pos:end="435:64">4</literal><operator pos:start="435:65" pos:end="435:65">*</operator><name pos:start="435:66" pos:end="435:66">i</name> <operator pos:start="435:68" pos:end="435:68">+</operator> <name pos:start="435:70" pos:end="435:70">j</name><operator pos:start="435:71" pos:end="435:71">)</operator></expr></else></ternary></expr>;</expr_stmt>

	  <expr_stmt pos:start="437:11" pos:end="437:50"><expr pos:start="437:11" pos:end="437:49"><name pos:start="437:11" pos:end="437:45"><name pos:start="437:11" pos:end="437:11">h</name><operator pos:start="437:12" pos:end="437:13">-&gt;</operator><name pos:start="437:14" pos:end="437:33">non_zero_count_cache</name><index pos:start="437:34" pos:end="437:45">[ <expr pos:start="437:36" pos:end="437:43"><name pos:start="437:36" pos:end="437:43"><name pos:start="437:36" pos:end="437:40">scan8</name><index pos:start="437:41" pos:end="437:43">[<expr pos:start="437:42" pos:end="437:42"><name pos:start="437:42" pos:end="437:42">k</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="437:47" pos:end="437:47">=</operator> <literal type="number" pos:start="437:49" pos:end="437:49">1</literal></expr>;</expr_stmt>



	  <if_stmt pos:start="441:11" pos:end="443:22"><if pos:start="441:11" pos:end="443:22">if <condition pos:start="441:14" pos:end="441:68">(<expr pos:start="441:15" pos:end="441:67"><call pos:start="441:15" pos:end="441:67"><name pos:start="441:15" pos:end="441:31">svq3_decode_block</name> <argument_list pos:start="441:33" pos:end="441:67">(<argument pos:start="441:34" pos:end="441:39"><expr pos:start="441:34" pos:end="441:39"><operator pos:start="441:34" pos:end="441:34">&amp;</operator><name pos:start="441:35" pos:end="441:39"><name pos:start="441:35" pos:end="441:35">s</name><operator pos:start="441:36" pos:end="441:37">-&gt;</operator><name pos:start="441:38" pos:end="441:39">gb</name></name></expr></argument>, <argument pos:start="441:42" pos:end="441:53"><expr pos:start="441:42" pos:end="441:53"><operator pos:start="441:42" pos:end="441:42">&amp;</operator><name pos:start="441:43" pos:end="441:53"><name pos:start="441:43" pos:end="441:43">h</name><operator pos:start="441:44" pos:end="441:45">-&gt;</operator><name pos:start="441:46" pos:end="441:47">mb</name><index pos:start="441:48" pos:end="441:53">[<expr pos:start="441:49" pos:end="441:52"><literal type="number" pos:start="441:49" pos:end="441:50">16</literal><operator pos:start="441:51" pos:end="441:51">*</operator><name pos:start="441:52" pos:end="441:52">k</name></expr>]</index></name></expr></argument>, <argument pos:start="441:56" pos:end="441:60"><expr pos:start="441:56" pos:end="441:60"><name pos:start="441:56" pos:end="441:60">index</name></expr></argument>, <argument pos:start="441:63" pos:end="441:66"><expr pos:start="441:63" pos:end="441:66"><name pos:start="441:63" pos:end="441:66">type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="443:13" pos:end="443:22"><block_content pos:start="443:13" pos:end="443:22">

	    <return pos:start="443:13" pos:end="443:22">return <expr pos:start="443:20" pos:end="443:21"><operator pos:start="443:20" pos:end="443:20">-</operator><literal type="number" pos:start="443:21" pos:end="443:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

	</block_content>}</block></for>

      </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="453:5" pos:end="481:5"><if pos:start="453:5" pos:end="481:5">if <condition pos:start="453:8" pos:end="453:21">(<expr pos:start="453:9" pos:end="453:20"><operator pos:start="453:9" pos:end="453:9">(</operator><name pos:start="453:10" pos:end="453:12">cbp</name> <operator pos:start="453:14" pos:end="453:14">&amp;</operator> <literal type="number" pos:start="453:16" pos:end="453:19">0x30</literal><operator pos:start="453:20" pos:end="453:20">)</operator></expr>)</condition> <block pos:start="453:23" pos:end="481:5">{<block_content pos:start="455:7" pos:end="479:7">

      <for pos:start="455:7" pos:end="461:7">for <control pos:start="455:11" pos:end="455:27">(<init pos:start="455:12" pos:end="455:15"><expr pos:start="455:12" pos:end="455:14"><name pos:start="455:12" pos:end="455:12">i</name><operator pos:start="455:13" pos:end="455:13">=</operator><literal type="number" pos:start="455:14" pos:end="455:14">0</literal></expr>;</init> <condition pos:start="455:17" pos:end="455:22"><expr pos:start="455:17" pos:end="455:21"><name pos:start="455:17" pos:end="455:17">i</name> <operator pos:start="455:19" pos:end="455:19">&lt;</operator> <literal type="number" pos:start="455:21" pos:end="455:21">2</literal></expr>;</condition> <incr pos:start="455:24" pos:end="455:26"><expr pos:start="455:24" pos:end="455:26"><operator pos:start="455:24" pos:end="455:25">++</operator><name pos:start="455:26" pos:end="455:26">i</name></expr></incr>)</control> <block pos:start="455:29" pos:end="461:7">{<block_content pos:start="457:9" pos:end="459:20">

	<if_stmt pos:start="457:9" pos:end="459:20"><if pos:start="457:9" pos:end="459:20">if <condition pos:start="457:12" pos:end="457:68">(<expr pos:start="457:13" pos:end="457:67"><call pos:start="457:13" pos:end="457:67"><name pos:start="457:13" pos:end="457:29">svq3_decode_block</name> <argument_list pos:start="457:31" pos:end="457:67">(<argument pos:start="457:32" pos:end="457:37"><expr pos:start="457:32" pos:end="457:37"><operator pos:start="457:32" pos:end="457:32">&amp;</operator><name pos:start="457:33" pos:end="457:37"><name pos:start="457:33" pos:end="457:33">s</name><operator pos:start="457:34" pos:end="457:35">-&gt;</operator><name pos:start="457:36" pos:end="457:37">gb</name></name></expr></argument>, <argument pos:start="457:40" pos:end="457:60"><expr pos:start="457:40" pos:end="457:60"><operator pos:start="457:40" pos:end="457:40">&amp;</operator><name pos:start="457:41" pos:end="457:60"><name pos:start="457:41" pos:end="457:41">h</name><operator pos:start="457:42" pos:end="457:43">-&gt;</operator><name pos:start="457:44" pos:end="457:45">mb</name><index pos:start="457:46" pos:end="457:60">[<expr pos:start="457:47" pos:end="457:59"><literal type="number" pos:start="457:47" pos:end="457:48">16</literal><operator pos:start="457:49" pos:end="457:49">*</operator><operator pos:start="457:50" pos:end="457:50">(</operator><literal type="number" pos:start="457:51" pos:end="457:54">16</literal> <operator pos:start="457:54" pos:end="457:54">+</operator> <literal type="number" pos:start="457:56" pos:end="457:56">4</literal><operator pos:start="457:57" pos:end="457:57">*</operator><name pos:start="457:58" pos:end="457:58">i</name><operator pos:start="457:59" pos:end="457:59">)</operator></expr>]</index></name></expr></argument>, <argument pos:start="457:63" pos:end="457:63"><expr pos:start="457:63" pos:end="457:63"><literal type="number" pos:start="457:63" pos:end="457:63">0</literal></expr></argument>, <argument pos:start="457:66" pos:end="457:66"><expr pos:start="457:66" pos:end="457:66"><literal type="number" pos:start="457:66" pos:end="457:66">3</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="459:11" pos:end="459:20"><block_content pos:start="459:11" pos:end="459:20">

	  <return pos:start="459:11" pos:end="459:20">return <expr pos:start="459:18" pos:end="459:19"><operator pos:start="459:18" pos:end="459:18">-</operator><literal type="number" pos:start="459:19" pos:end="459:19">1</literal></expr>;</return></block_content></block></if></if_stmt>

      </block_content>}</block></for>



      <if_stmt pos:start="465:7" pos:end="479:7"><if pos:start="465:7" pos:end="479:7">if <condition pos:start="465:10" pos:end="465:23">(<expr pos:start="465:11" pos:end="465:22"><operator pos:start="465:11" pos:end="465:11">(</operator><name pos:start="465:12" pos:end="465:14">cbp</name> <operator pos:start="465:16" pos:end="465:16">&amp;</operator> <literal type="number" pos:start="465:18" pos:end="465:21">0x20</literal><operator pos:start="465:22" pos:end="465:22">)</operator></expr>)</condition> <block pos:start="465:25" pos:end="479:7">{<block_content pos:start="467:9" pos:end="477:9">

	<for pos:start="467:9" pos:end="477:9">for <control pos:start="467:13" pos:end="467:29">(<init pos:start="467:14" pos:end="467:17"><expr pos:start="467:14" pos:end="467:16"><name pos:start="467:14" pos:end="467:14">i</name><operator pos:start="467:15" pos:end="467:15">=</operator><literal type="number" pos:start="467:16" pos:end="467:16">0</literal></expr>;</init> <condition pos:start="467:19" pos:end="467:24"><expr pos:start="467:19" pos:end="467:23"><name pos:start="467:19" pos:end="467:19">i</name> <operator pos:start="467:21" pos:end="467:21">&lt;</operator> <literal type="number" pos:start="467:23" pos:end="467:23">8</literal></expr>;</condition> <incr pos:start="467:26" pos:end="467:28"><expr pos:start="467:26" pos:end="467:28"><name pos:start="467:26" pos:end="467:26">i</name><operator pos:start="467:27" pos:end="467:28">++</operator></expr></incr>)</control> <block pos:start="467:31" pos:end="477:9">{<block_content pos:start="469:11" pos:end="475:22">

	  <expr_stmt pos:start="469:11" pos:end="469:53"><expr pos:start="469:11" pos:end="469:52"><name pos:start="469:11" pos:end="469:48"><name pos:start="469:11" pos:end="469:11">h</name><operator pos:start="469:12" pos:end="469:13">-&gt;</operator><name pos:start="469:14" pos:end="469:33">non_zero_count_cache</name><index pos:start="469:34" pos:end="469:48">[ <expr pos:start="469:36" pos:end="469:46"><name pos:start="469:36" pos:end="469:46"><name pos:start="469:36" pos:end="469:40">scan8</name><index pos:start="469:41" pos:end="469:46">[<expr pos:start="469:42" pos:end="469:45"><literal type="number" pos:start="469:42" pos:end="469:43">16</literal><operator pos:start="469:44" pos:end="469:44">+</operator><name pos:start="469:45" pos:end="469:45">i</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="469:50" pos:end="469:50">=</operator> <literal type="number" pos:start="469:52" pos:end="469:52">1</literal></expr>;</expr_stmt>



	  <if_stmt pos:start="473:11" pos:end="475:22"><if pos:start="473:11" pos:end="475:22">if <condition pos:start="473:14" pos:end="473:68">(<expr pos:start="473:15" pos:end="473:67"><call pos:start="473:15" pos:end="473:67"><name pos:start="473:15" pos:end="473:31">svq3_decode_block</name> <argument_list pos:start="473:33" pos:end="473:67">(<argument pos:start="473:34" pos:end="473:39"><expr pos:start="473:34" pos:end="473:39"><operator pos:start="473:34" pos:end="473:34">&amp;</operator><name pos:start="473:35" pos:end="473:39"><name pos:start="473:35" pos:end="473:35">s</name><operator pos:start="473:36" pos:end="473:37">-&gt;</operator><name pos:start="473:38" pos:end="473:39">gb</name></name></expr></argument>, <argument pos:start="473:42" pos:end="473:60"><expr pos:start="473:42" pos:end="473:60"><operator pos:start="473:42" pos:end="473:42">&amp;</operator><name pos:start="473:43" pos:end="473:60"><name pos:start="473:43" pos:end="473:43">h</name><operator pos:start="473:44" pos:end="473:45">-&gt;</operator><name pos:start="473:46" pos:end="473:47">mb</name><index pos:start="473:48" pos:end="473:60">[<expr pos:start="473:49" pos:end="473:59"><literal type="number" pos:start="473:49" pos:end="473:50">16</literal><operator pos:start="473:51" pos:end="473:51">*</operator><operator pos:start="473:52" pos:end="473:52">(</operator><literal type="number" pos:start="473:53" pos:end="473:56">16</literal> <operator pos:start="473:56" pos:end="473:56">+</operator> <name pos:start="473:58" pos:end="473:58">i</name><operator pos:start="473:59" pos:end="473:59">)</operator></expr>]</index></name></expr></argument>, <argument pos:start="473:63" pos:end="473:63"><expr pos:start="473:63" pos:end="473:63"><literal type="number" pos:start="473:63" pos:end="473:63">1</literal></expr></argument>, <argument pos:start="473:66" pos:end="473:66"><expr pos:start="473:66" pos:end="473:66"><literal type="number" pos:start="473:66" pos:end="473:66">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="475:13" pos:end="475:22"><block_content pos:start="475:13" pos:end="475:22">

	    <return pos:start="475:13" pos:end="475:22">return <expr pos:start="475:20" pos:end="475:21"><operator pos:start="475:20" pos:end="475:20">-</operator><literal type="number" pos:start="475:21" pos:end="475:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

	</block_content>}</block></for>

      </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

  </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="487:3" pos:end="487:46"><expr pos:start="487:3" pos:end="487:45"><name pos:start="487:3" pos:end="487:35"><name pos:start="487:3" pos:end="487:3">s</name><operator pos:start="487:4" pos:end="487:5">-&gt;</operator><name pos:start="487:6" pos:end="487:20">current_picture</name><operator pos:start="487:21" pos:end="487:21">.</operator><name pos:start="487:22" pos:end="487:28">mb_type</name><index pos:start="487:29" pos:end="487:35">[<expr pos:start="487:30" pos:end="487:34"><name pos:start="487:30" pos:end="487:34">mb_xy</name></expr>]</index></name> <operator pos:start="487:37" pos:end="487:37">=</operator> <name pos:start="487:39" pos:end="487:45">mb_type</name></expr>;</expr_stmt>



  <if_stmt pos:start="491:3" pos:end="495:3"><if pos:start="491:3" pos:end="495:3">if <condition pos:start="491:6" pos:end="491:24">(<expr pos:start="491:7" pos:end="491:23"><call pos:start="491:7" pos:end="491:23"><name pos:start="491:7" pos:end="491:14">IS_INTRA</name><argument_list pos:start="491:15" pos:end="491:23">(<argument pos:start="491:16" pos:end="491:22"><expr pos:start="491:16" pos:end="491:22"><name pos:start="491:16" pos:end="491:22">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="491:26" pos:end="495:3">{<block_content pos:start="493:5" pos:end="493:64">

    <expr_stmt pos:start="493:5" pos:end="493:64"><expr pos:start="493:5" pos:end="493:63"><name pos:start="493:5" pos:end="493:23"><name pos:start="493:5" pos:end="493:5">h</name><operator pos:start="493:6" pos:end="493:7">-&gt;</operator><name pos:start="493:8" pos:end="493:23">chroma_pred_mode</name></name> <operator pos:start="493:25" pos:end="493:25">=</operator> <call pos:start="493:27" pos:end="493:63"><name pos:start="493:27" pos:end="493:47">check_intra_pred_mode</name> <argument_list pos:start="493:49" pos:end="493:63">(<argument pos:start="493:50" pos:end="493:50"><expr pos:start="493:50" pos:end="493:50"><name pos:start="493:50" pos:end="493:50">h</name></expr></argument>, <argument pos:start="493:53" pos:end="493:62"><expr pos:start="493:53" pos:end="493:62"><name pos:start="493:53" pos:end="493:62">DC_PRED8x8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></if></if_stmt>



  <return pos:start="499:3" pos:end="499:11">return <expr pos:start="499:10" pos:end="499:10"><literal type="number" pos:start="499:10" pos:end="499:10">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
