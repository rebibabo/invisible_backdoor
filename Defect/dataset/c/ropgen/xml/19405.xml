<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19405.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">vaapi_encode_h264_write_pps</name><parameter_list pos:start="1:40" pos:end="3:64">(<parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:58"><name pos:start="1:41" pos:end="1:53">PutBitContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">pbc</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:63"><decl pos:start="3:41" pos:end="3:63"><type pos:start="3:41" pos:end="3:63"><name pos:start="3:41" pos:end="3:58">VAAPIEncodeContext</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:63">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:47">

    <decl_stmt pos:start="7:5" pos:end="7:72"><decl pos:start="7:5" pos:end="7:71"><type pos:start="7:5" pos:end="7:39"><name pos:start="7:5" pos:end="7:35">VAEncPictureParameterBufferH264</name>   <modifier pos:start="7:39" pos:end="7:39">*</modifier></type><name pos:start="7:40" pos:end="7:43">vpic</name> <init pos:start="7:45" pos:end="7:71">= <expr pos:start="7:47" pos:end="7:71"><name pos:start="7:47" pos:end="7:71"><name pos:start="7:47" pos:end="7:49">ctx</name><operator pos:start="7:50" pos:end="7:51">-&gt;</operator><name pos:start="7:52" pos:end="7:71">codec_picture_params</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:61"><decl pos:start="9:5" pos:end="9:60"><type pos:start="9:5" pos:end="9:39"><name pos:start="9:5" pos:end="9:26">VAAPIEncodeH264Context</name>            <modifier pos:start="9:39" pos:end="9:39">*</modifier></type><name pos:start="9:40" pos:end="9:43">priv</name> <init pos:start="9:45" pos:end="9:60">= <expr pos:start="9:47" pos:end="9:60"><name pos:start="9:47" pos:end="9:60"><name pos:start="9:47" pos:end="9:49">ctx</name><operator pos:start="9:50" pos:end="9:51">-&gt;</operator><name pos:start="9:52" pos:end="9:60">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:74"><decl pos:start="11:5" pos:end="11:73"><type pos:start="11:5" pos:end="11:39"><name pos:start="11:5" pos:end="11:37">VAAPIEncodeH264MiscSequenceParams</name> <modifier pos:start="11:39" pos:end="11:39">*</modifier></type><name pos:start="11:40" pos:end="11:43">mseq</name> <init pos:start="11:45" pos:end="11:73">= <expr pos:start="11:47" pos:end="11:73"><operator pos:start="11:47" pos:end="11:47">&amp;</operator><name pos:start="11:48" pos:end="11:73"><name pos:start="11:48" pos:end="11:51">priv</name><operator pos:start="11:52" pos:end="11:53">-&gt;</operator><name pos:start="11:54" pos:end="11:73">misc_sequence_params</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:56"><expr pos:start="15:5" pos:end="15:55"><call pos:start="15:5" pos:end="15:55"><name pos:start="15:5" pos:end="15:38">vaapi_encode_h264_write_nal_header</name><argument_list pos:start="15:39" pos:end="15:55">(<argument pos:start="15:40" pos:end="15:42"><expr pos:start="15:40" pos:end="15:42"><name pos:start="15:40" pos:end="15:42">pbc</name></expr></argument>, <argument pos:start="15:45" pos:end="15:51"><expr pos:start="15:45" pos:end="15:51"><name pos:start="15:45" pos:end="15:51">NAL_PPS</name></expr></argument>, <argument pos:start="15:54" pos:end="15:54"><expr pos:start="15:54" pos:end="15:54"><literal type="number" pos:start="15:54" pos:end="15:54">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><call pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:6">ue</name><argument_list pos:start="19:7" pos:end="19:38">(<argument pos:start="19:8" pos:end="19:37"><expr pos:start="19:8" pos:end="19:37"><call pos:start="19:8" pos:end="19:37"><name pos:start="19:8" pos:end="19:15">vpic_var</name><argument_list pos:start="19:16" pos:end="19:37">(<argument pos:start="19:17" pos:end="19:36"><expr pos:start="19:17" pos:end="19:36"><name pos:start="19:17" pos:end="19:36">pic_parameter_set_id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:39"><expr pos:start="21:5" pos:end="21:38"><call pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:6">ue</name><argument_list pos:start="21:7" pos:end="21:38">(<argument pos:start="21:8" pos:end="21:37"><expr pos:start="21:8" pos:end="21:37"><call pos:start="21:8" pos:end="21:37"><name pos:start="21:8" pos:end="21:15">vpic_var</name><argument_list pos:start="21:16" pos:end="21:37">(<argument pos:start="21:17" pos:end="21:36"><expr pos:start="21:17" pos:end="21:36"><name pos:start="21:17" pos:end="21:36">seq_parameter_set_id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><call pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:5">u</name><argument_list pos:start="25:6" pos:end="25:46">(<argument pos:start="25:7" pos:end="25:7"><expr pos:start="25:7" pos:end="25:7"><literal type="number" pos:start="25:7" pos:end="25:7">1</literal></expr></argument>, <argument pos:start="25:10" pos:end="25:45"><expr pos:start="25:10" pos:end="25:45"><call pos:start="25:10" pos:end="25:45"><name pos:start="25:10" pos:end="25:19">vpic_field</name><argument_list pos:start="25:20" pos:end="25:45">(<argument pos:start="25:21" pos:end="25:44"><expr pos:start="25:21" pos:end="25:44"><name pos:start="25:21" pos:end="25:44">entropy_coding_mode_flag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:65"><expr pos:start="27:5" pos:end="27:64"><call pos:start="27:5" pos:end="27:64"><name pos:start="27:5" pos:end="27:5">u</name><argument_list pos:start="27:6" pos:end="27:64">(<argument pos:start="27:7" pos:end="27:7"><expr pos:start="27:7" pos:end="27:7"><literal type="number" pos:start="27:7" pos:end="27:7">1</literal></expr></argument>, <argument pos:start="27:10" pos:end="27:63"><expr pos:start="27:10" pos:end="27:63"><call pos:start="27:10" pos:end="27:63"><name pos:start="27:10" pos:end="27:17">mseq_var</name><argument_list pos:start="27:18" pos:end="27:63">(<argument pos:start="27:19" pos:end="27:62"><expr pos:start="27:19" pos:end="27:62"><name pos:start="27:19" pos:end="27:62">bottom_field_pic_order_in_frame_present_flag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><call pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:6">ue</name><argument_list pos:start="31:7" pos:end="31:41">(<argument pos:start="31:8" pos:end="31:40"><expr pos:start="31:8" pos:end="31:40"><call pos:start="31:8" pos:end="31:40"><name pos:start="31:8" pos:end="31:15">mseq_var</name><argument_list pos:start="31:16" pos:end="31:40">(<argument pos:start="31:17" pos:end="31:39"><expr pos:start="31:17" pos:end="31:39"><name pos:start="31:17" pos:end="31:39">num_slice_groups_minus1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:42">(<expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:12">mseq</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:37">num_slice_groups_minus1</name></name> <operator pos:start="33:39" pos:end="33:39">&gt;</operator> <literal type="number" pos:start="33:41" pos:end="33:41">0</literal></expr>)</condition> <block pos:start="33:44" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:54">

        <expr_stmt pos:start="35:9" pos:end="35:43"><expr pos:start="35:9" pos:end="35:42"><call pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:10">ue</name><argument_list pos:start="35:11" pos:end="35:42">(<argument pos:start="35:12" pos:end="35:41"><expr pos:start="35:12" pos:end="35:41"><call pos:start="35:12" pos:end="35:41"><name pos:start="35:12" pos:end="35:19">mseq_var</name><argument_list pos:start="35:20" pos:end="35:41">(<argument pos:start="35:21" pos:end="35:40"><expr pos:start="35:21" pos:end="35:40"><name pos:start="35:21" pos:end="35:40">slice_group_map_type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:54"><expr pos:start="37:9" pos:end="37:53"><call pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:18">av_assert0</name><argument_list pos:start="37:19" pos:end="37:53">(<argument pos:start="37:20" pos:end="37:52"><expr pos:start="37:20" pos:end="37:52"><literal type="number" pos:start="37:20" pos:end="37:20">0</literal> <operator pos:start="37:22" pos:end="37:23">&amp;&amp;</operator> <literal type="string" pos:start="37:25" pos:end="37:52">"slice groups not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:47"><expr pos:start="43:5" pos:end="43:46"><call pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:6">ue</name><argument_list pos:start="43:7" pos:end="43:46">(<argument pos:start="43:8" pos:end="43:45"><expr pos:start="43:8" pos:end="43:45"><call pos:start="43:8" pos:end="43:45"><name pos:start="43:8" pos:end="43:15">vpic_var</name><argument_list pos:start="43:16" pos:end="43:45">(<argument pos:start="43:17" pos:end="43:44"><expr pos:start="43:17" pos:end="43:44"><name pos:start="43:17" pos:end="43:44">num_ref_idx_l0_active_minus1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:47"><expr pos:start="45:5" pos:end="45:46"><call pos:start="45:5" pos:end="45:46"><name pos:start="45:5" pos:end="45:6">ue</name><argument_list pos:start="45:7" pos:end="45:46">(<argument pos:start="45:8" pos:end="45:45"><expr pos:start="45:8" pos:end="45:45"><call pos:start="45:8" pos:end="45:45"><name pos:start="45:8" pos:end="45:15">vpic_var</name><argument_list pos:start="45:16" pos:end="45:45">(<argument pos:start="45:17" pos:end="45:44"><expr pos:start="45:17" pos:end="45:44"><name pos:start="45:17" pos:end="45:44">num_ref_idx_l1_active_minus1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:41"><expr pos:start="49:5" pos:end="49:40"><call pos:start="49:5" pos:end="49:40"><name pos:start="49:5" pos:end="49:5">u</name><argument_list pos:start="49:6" pos:end="49:40">(<argument pos:start="49:7" pos:end="49:7"><expr pos:start="49:7" pos:end="49:7"><literal type="number" pos:start="49:7" pos:end="49:7">1</literal></expr></argument>, <argument pos:start="49:10" pos:end="49:39"><expr pos:start="49:10" pos:end="49:39"><call pos:start="49:10" pos:end="49:39"><name pos:start="49:10" pos:end="49:19">vpic_field</name><argument_list pos:start="49:20" pos:end="49:39">(<argument pos:start="49:21" pos:end="49:38"><expr pos:start="49:21" pos:end="49:38"><name pos:start="49:21" pos:end="49:38">weighted_pred_flag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:42"><expr pos:start="51:5" pos:end="51:41"><call pos:start="51:5" pos:end="51:41"><name pos:start="51:5" pos:end="51:5">u</name><argument_list pos:start="51:6" pos:end="51:41">(<argument pos:start="51:7" pos:end="51:7"><expr pos:start="51:7" pos:end="51:7"><literal type="number" pos:start="51:7" pos:end="51:7">2</literal></expr></argument>, <argument pos:start="51:10" pos:end="51:40"><expr pos:start="51:10" pos:end="51:40"><call pos:start="51:10" pos:end="51:40"><name pos:start="51:10" pos:end="51:19">vpic_field</name><argument_list pos:start="51:20" pos:end="51:40">(<argument pos:start="51:21" pos:end="51:39"><expr pos:start="51:21" pos:end="51:39"><name pos:start="51:21" pos:end="51:39">weighted_bipred_idc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:52"><expr pos:start="55:5" pos:end="55:51"><call pos:start="55:5" pos:end="55:51"><name pos:start="55:5" pos:end="55:6">se</name><argument_list pos:start="55:7" pos:end="55:51">(<argument pos:start="55:8" pos:end="55:29"><expr pos:start="55:8" pos:end="55:29"><name pos:start="55:8" pos:end="55:24"><name pos:start="55:8" pos:end="55:11">vpic</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:24">pic_init_qp</name></name> <operator pos:start="55:26" pos:end="55:26">-</operator> <literal type="number" pos:start="55:28" pos:end="55:29">26</literal></expr></argument>, <argument pos:start="55:32" pos:end="55:50"><expr pos:start="55:32" pos:end="55:50"><name pos:start="55:32" pos:end="55:50">pic_init_qp_minus26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:38"><expr pos:start="57:5" pos:end="57:37"><call pos:start="57:5" pos:end="57:37"><name pos:start="57:5" pos:end="57:6">se</name><argument_list pos:start="57:7" pos:end="57:37">(<argument pos:start="57:8" pos:end="57:36"><expr pos:start="57:8" pos:end="57:36"><call pos:start="57:8" pos:end="57:36"><name pos:start="57:8" pos:end="57:15">mseq_var</name><argument_list pos:start="57:16" pos:end="57:36">(<argument pos:start="57:17" pos:end="57:35"><expr pos:start="57:17" pos:end="57:35"><name pos:start="57:17" pos:end="57:35">pic_init_qs_minus26</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:41"><expr pos:start="59:5" pos:end="59:40"><call pos:start="59:5" pos:end="59:40"><name pos:start="59:5" pos:end="59:6">se</name><argument_list pos:start="59:7" pos:end="59:40">(<argument pos:start="59:8" pos:end="59:39"><expr pos:start="59:8" pos:end="59:39"><call pos:start="59:8" pos:end="59:39"><name pos:start="59:8" pos:end="59:15">vpic_var</name><argument_list pos:start="59:16" pos:end="59:39">(<argument pos:start="59:17" pos:end="59:38"><expr pos:start="59:17" pos:end="59:38"><name pos:start="59:17" pos:end="59:38">chroma_qp_index_offset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:61"><expr pos:start="63:5" pos:end="63:60"><call pos:start="63:5" pos:end="63:60"><name pos:start="63:5" pos:end="63:5">u</name><argument_list pos:start="63:6" pos:end="63:60">(<argument pos:start="63:7" pos:end="63:7"><expr pos:start="63:7" pos:end="63:7"><literal type="number" pos:start="63:7" pos:end="63:7">1</literal></expr></argument>, <argument pos:start="63:10" pos:end="63:59"><expr pos:start="63:10" pos:end="63:59"><call pos:start="63:10" pos:end="63:59"><name pos:start="63:10" pos:end="63:19">vpic_field</name><argument_list pos:start="63:20" pos:end="63:59">(<argument pos:start="63:21" pos:end="63:58"><expr pos:start="63:21" pos:end="63:58"><name pos:start="63:21" pos:end="63:58">deblocking_filter_control_present_flag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:50"><expr pos:start="65:5" pos:end="65:49"><call pos:start="65:5" pos:end="65:49"><name pos:start="65:5" pos:end="65:5">u</name><argument_list pos:start="65:6" pos:end="65:49">(<argument pos:start="65:7" pos:end="65:7"><expr pos:start="65:7" pos:end="65:7"><literal type="number" pos:start="65:7" pos:end="65:7">1</literal></expr></argument>, <argument pos:start="65:10" pos:end="65:48"><expr pos:start="65:10" pos:end="65:48"><call pos:start="65:10" pos:end="65:48"><name pos:start="65:10" pos:end="65:19">vpic_field</name><argument_list pos:start="65:20" pos:end="65:48">(<argument pos:start="65:21" pos:end="65:47"><expr pos:start="65:21" pos:end="65:47"><name pos:start="65:21" pos:end="65:47">constrained_intra_pred_flag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:53"><expr pos:start="67:5" pos:end="67:52"><call pos:start="67:5" pos:end="67:52"><name pos:start="67:5" pos:end="67:5">u</name><argument_list pos:start="67:6" pos:end="67:52">(<argument pos:start="67:7" pos:end="67:7"><expr pos:start="67:7" pos:end="67:7"><literal type="number" pos:start="67:7" pos:end="67:7">1</literal></expr></argument>, <argument pos:start="67:10" pos:end="67:51"><expr pos:start="67:10" pos:end="67:51"><call pos:start="67:10" pos:end="67:51"><name pos:start="67:10" pos:end="67:19">vpic_field</name><argument_list pos:start="67:20" pos:end="67:51">(<argument pos:start="67:21" pos:end="67:50"><expr pos:start="67:21" pos:end="67:50"><name pos:start="67:21" pos:end="67:50">redundant_pic_cnt_present_flag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:46"><expr pos:start="69:5" pos:end="69:45"><call pos:start="69:5" pos:end="69:45"><name pos:start="69:5" pos:end="69:5">u</name><argument_list pos:start="69:6" pos:end="69:45">(<argument pos:start="69:7" pos:end="69:7"><expr pos:start="69:7" pos:end="69:7"><literal type="number" pos:start="69:7" pos:end="69:7">1</literal></expr></argument>, <argument pos:start="69:10" pos:end="69:44"><expr pos:start="69:10" pos:end="69:44"><call pos:start="69:10" pos:end="69:44"><name pos:start="69:10" pos:end="69:19">vpic_field</name><argument_list pos:start="69:20" pos:end="69:44">(<argument pos:start="69:21" pos:end="69:43"><expr pos:start="69:21" pos:end="69:43"><name pos:start="69:21" pos:end="69:43">transform_8x8_mode_flag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:54"><expr pos:start="73:5" pos:end="73:53"><call pos:start="73:5" pos:end="73:53"><name pos:start="73:5" pos:end="73:5">u</name><argument_list pos:start="73:6" pos:end="73:53">(<argument pos:start="73:7" pos:end="73:7"><expr pos:start="73:7" pos:end="73:7"><literal type="number" pos:start="73:7" pos:end="73:7">1</literal></expr></argument>, <argument pos:start="73:10" pos:end="73:52"><expr pos:start="73:10" pos:end="73:52"><call pos:start="73:10" pos:end="73:52"><name pos:start="73:10" pos:end="73:19">vpic_field</name><argument_list pos:start="73:20" pos:end="73:52">(<argument pos:start="73:21" pos:end="73:51"><expr pos:start="73:21" pos:end="73:51"><name pos:start="73:21" pos:end="73:51">pic_scaling_matrix_present_flag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:62">(<expr pos:start="75:9" pos:end="75:61"><name pos:start="75:9" pos:end="75:61"><name pos:start="75:9" pos:end="75:12">vpic</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:24">pic_fields</name><operator pos:start="75:25" pos:end="75:25">.</operator><name pos:start="75:26" pos:end="75:29">bits</name><operator pos:start="75:30" pos:end="75:30">.</operator><name pos:start="75:31" pos:end="75:61">pic_scaling_matrix_present_flag</name></name></expr>)</condition> <block pos:start="75:64" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:58">

        <expr_stmt pos:start="77:9" pos:end="77:58"><expr pos:start="77:9" pos:end="77:57"><call pos:start="77:9" pos:end="77:57"><name pos:start="77:9" pos:end="77:18">av_assert0</name><argument_list pos:start="77:19" pos:end="77:57">(<argument pos:start="77:20" pos:end="77:56"><expr pos:start="77:20" pos:end="77:56"><literal type="number" pos:start="77:20" pos:end="77:20">0</literal> <operator pos:start="77:22" pos:end="77:23">&amp;&amp;</operator> <literal type="string" pos:start="77:25" pos:end="77:56">"scaling matrices not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:48"><expr pos:start="83:5" pos:end="83:47"><call pos:start="83:5" pos:end="83:47"><name pos:start="83:5" pos:end="83:6">se</name><argument_list pos:start="83:7" pos:end="83:47">(<argument pos:start="83:8" pos:end="83:46"><expr pos:start="83:8" pos:end="83:46"><call pos:start="83:8" pos:end="83:46"><name pos:start="83:8" pos:end="83:15">vpic_var</name><argument_list pos:start="83:16" pos:end="83:46">(<argument pos:start="83:17" pos:end="83:45"><expr pos:start="83:17" pos:end="83:45"><name pos:start="83:17" pos:end="83:45">second_chroma_qp_index_offset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:47"><expr pos:start="87:5" pos:end="87:46"><call pos:start="87:5" pos:end="87:46"><name pos:start="87:5" pos:end="87:41">vaapi_encode_h264_write_trailing_rbsp</name><argument_list pos:start="87:42" pos:end="87:46">(<argument pos:start="87:43" pos:end="87:45"><expr pos:start="87:43" pos:end="87:45"><name pos:start="87:43" pos:end="87:45">pbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
