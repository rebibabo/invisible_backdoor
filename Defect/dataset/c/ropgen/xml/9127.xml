<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9127.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ppc_tlb_invalidate_all</name> <parameter_list pos:start="1:29" pos:end="1:46">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">CPUPPCState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:5">

    <switch pos:start="5:5" pos:end="75:5">switch <condition pos:start="5:12" pos:end="5:27">(<expr pos:start="5:13" pos:end="5:26"><name pos:start="5:13" pos:end="5:26"><name pos:start="5:13" pos:end="5:15">env</name><operator pos:start="5:16" pos:end="5:17">-&gt;</operator><name pos:start="5:18" pos:end="5:26">mmu_model</name></name></expr>)</condition> <block pos:start="5:29" pos:end="75:5">{<block_content pos:start="7:5" pos:end="73:14">

    <case pos:start="7:5" pos:end="7:30">case <expr pos:start="7:10" pos:end="7:29"><name pos:start="7:10" pos:end="7:29">POWERPC_MMU_SOFT_6xx</name></expr>:</case>

    <case pos:start="9:5" pos:end="9:31">case <expr pos:start="9:10" pos:end="9:30"><name pos:start="9:10" pos:end="9:30">POWERPC_MMU_SOFT_74xx</name></expr>:</case>

        <expr_stmt pos:start="11:9" pos:end="11:39"><expr pos:start="11:9" pos:end="11:38"><call pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:33">ppc6xx_tlb_invalidate_all</name><argument_list pos:start="11:34" pos:end="11:38">(<argument pos:start="11:35" pos:end="11:37"><expr pos:start="11:35" pos:end="11:37"><name pos:start="11:35" pos:end="11:37">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="13:9" pos:end="13:14">break;</break>

    <case pos:start="15:5" pos:end="15:30">case <expr pos:start="15:10" pos:end="15:29"><name pos:start="15:10" pos:end="15:29">POWERPC_MMU_SOFT_4xx</name></expr>:</case>

    <case pos:start="17:5" pos:end="17:32">case <expr pos:start="17:10" pos:end="17:31"><name pos:start="17:10" pos:end="17:31">POWERPC_MMU_SOFT_4xx_Z</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><call pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:33">ppc4xx_tlb_invalidate_all</name><argument_list pos:start="19:34" pos:end="19:38">(<argument pos:start="19:35" pos:end="19:37"><expr pos:start="19:35" pos:end="19:37"><name pos:start="19:35" pos:end="19:37">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:30">case <expr pos:start="23:10" pos:end="23:29"><name pos:start="23:10" pos:end="23:29">POWERPC_MMU_REAL_4xx</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:64"><expr pos:start="25:9" pos:end="25:63"><call pos:start="25:9" pos:end="25:63"><name pos:start="25:9" pos:end="25:17">cpu_abort</name><argument_list pos:start="25:18" pos:end="25:63">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">env</name></expr></argument>, <argument pos:start="25:24" pos:end="25:62"><expr pos:start="25:24" pos:end="25:62"><literal type="string" pos:start="25:24" pos:end="25:62">"No TLB for PowerPC 4xx in real mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:27">case <expr pos:start="29:10" pos:end="29:26"><name pos:start="29:10" pos:end="29:26">POWERPC_MMU_BOOKE</name></expr>:</case>

        <comment type="block" pos:start="31:9" pos:end="31:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:54"><expr pos:start="33:9" pos:end="33:53"><call pos:start="33:9" pos:end="33:53"><name pos:start="33:9" pos:end="33:17">cpu_abort</name><argument_list pos:start="33:18" pos:end="33:53">(<argument pos:start="33:19" pos:end="33:21"><expr pos:start="33:19" pos:end="33:21"><name pos:start="33:19" pos:end="33:21">env</name></expr></argument>, <argument pos:start="33:24" pos:end="33:52"><expr pos:start="33:24" pos:end="33:52"><literal type="string" pos:start="33:24" pos:end="33:52">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:31">case <expr pos:start="37:10" pos:end="37:30"><name pos:start="37:10" pos:end="37:30">POWERPC_MMU_BOOKE_FSL</name></expr>:</case>

        <comment type="block" pos:start="39:9" pos:end="39:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:54"><expr pos:start="41:9" pos:end="41:53"><call pos:start="41:9" pos:end="41:53"><name pos:start="41:9" pos:end="41:17">cpu_abort</name><argument_list pos:start="41:18" pos:end="41:53">(<argument pos:start="41:19" pos:end="41:21"><expr pos:start="41:19" pos:end="41:21"><name pos:start="41:19" pos:end="41:21">env</name></expr></argument>, <argument pos:start="41:24" pos:end="41:52"><expr pos:start="41:24" pos:end="41:52"><literal type="string" pos:start="41:24" pos:end="41:52">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:25">case <expr pos:start="45:10" pos:end="45:24"><name pos:start="45:10" pos:end="45:24">POWERPC_MMU_601</name></expr>:</case>

        <comment type="block" pos:start="47:9" pos:end="47:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:54"><expr pos:start="49:9" pos:end="49:53"><call pos:start="49:9" pos:end="49:53"><name pos:start="49:9" pos:end="49:17">cpu_abort</name><argument_list pos:start="49:18" pos:end="49:53">(<argument pos:start="49:19" pos:end="49:21"><expr pos:start="49:19" pos:end="49:21"><name pos:start="49:19" pos:end="49:21">env</name></expr></argument>, <argument pos:start="49:24" pos:end="49:52"><expr pos:start="49:24" pos:end="49:52"><literal type="string" pos:start="49:24" pos:end="49:52">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="56:0">case <expr pos:start="53:10" pos:end="53:24"><name pos:start="53:10" pos:end="53:24">POWERPC_MMU_32B</name></expr>:</case>

<cpp:if pos:start="55:1" pos:end="55:25">#<cpp:directive pos:start="55:2" pos:end="55:3">if</cpp:directive> <expr pos:start="55:5" pos:end="55:25"><call pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:11">defined</name><argument_list pos:start="55:12" pos:end="55:25">(<argument pos:start="55:13" pos:end="55:24"><expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="57:5" pos:end="57:25">case <expr pos:start="57:10" pos:end="57:24"><name pos:start="57:10" pos:end="57:24">POWERPC_MMU_64B</name></expr>:</case>

    <case pos:start="59:5" pos:end="62:0">case <expr pos:start="59:10" pos:end="59:29"><name pos:start="59:10" pos:end="59:29">POWERPC_MMU_64BRIDGE</name></expr>:</case>

<cpp:endif pos:start="61:1" pos:end="61:6">#<cpp:directive pos:start="61:2" pos:end="61:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="61:8" pos:end="61:34">/* defined(TARGET_PPC64) */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><call pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:17">tlb_flush</name><argument_list pos:start="63:18" pos:end="63:25">(<argument pos:start="63:19" pos:end="63:21"><expr pos:start="63:19" pos:end="63:21"><name pos:start="63:19" pos:end="63:21">env</name></expr></argument>, <argument pos:start="63:24" pos:end="63:24"><expr pos:start="63:24" pos:end="63:24"><literal type="number" pos:start="63:24" pos:end="63:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <default pos:start="67:5" pos:end="67:12">default:</default>

        <comment type="block" pos:start="69:9" pos:end="69:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:65"><expr pos:start="71:9" pos:end="71:64"><call pos:start="71:9" pos:end="71:64"><name pos:start="71:9" pos:end="71:17">cpu_abort</name><argument_list pos:start="71:18" pos:end="71:64">(<argument pos:start="71:19" pos:end="71:21"><expr pos:start="71:19" pos:end="71:21"><name pos:start="71:19" pos:end="71:21">env</name></expr></argument>, <argument pos:start="71:24" pos:end="71:47"><expr pos:start="71:24" pos:end="71:47"><literal type="string" pos:start="71:24" pos:end="71:47">"Unknown MMU model %d\n"</literal></expr></argument>, <argument pos:start="71:50" pos:end="71:63"><expr pos:start="71:50" pos:end="71:63"><name pos:start="71:50" pos:end="71:63"><name pos:start="71:50" pos:end="71:52">env</name><operator pos:start="71:53" pos:end="71:54">-&gt;</operator><name pos:start="71:55" pos:end="71:63">mmu_model</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
