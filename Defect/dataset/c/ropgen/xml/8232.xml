<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8232.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">parse_picture_segment</name><parameter_list pos:start="1:33" pos:end="3:67">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:52"><decl pos:start="3:35" pos:end="3:52"><type pos:start="3:35" pos:end="3:52"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:47">uint8_t</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:52">buf</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:66"><decl pos:start="3:55" pos:end="3:66"><type pos:start="3:55" pos:end="3:66"><name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:66">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="135:13">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">PGSSubContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">ctx</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:25">sequence_desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:31">rle_bitmap_len</name></decl>, <decl pos:start="13:34" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:34" pos:end="13:38">width</name></decl>, <decl pos:start="13:41" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:41" pos:end="13:46">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint16_t</name></type> <name pos:start="15:14" pos:end="15:23">picture_id</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:16">buf_size</name> <operator pos:start="19:18" pos:end="19:19">&lt;=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">4</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:12">buf_size</name> <operator pos:start="23:14" pos:end="23:15">-=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:14">picture_id</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:42"><name pos:start="27:18" pos:end="27:36">bytestream_get_be16</name><argument_list pos:start="27:37" pos:end="27:42">(<argument pos:start="27:38" pos:end="27:41"><expr pos:start="27:38" pos:end="27:41"><operator pos:start="27:38" pos:end="27:38">&amp;</operator><name pos:start="27:39" pos:end="27:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:45">/* skip 1 unknown byte: Version Number */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:10"><expr pos:start="33:5" pos:end="33:9"><name pos:start="33:5" pos:end="33:7">buf</name><operator pos:start="33:8" pos:end="33:9">++</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:101">/* Read the Sequence Description to determine if start of RLE data or appended to previous RLE */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:46"><expr pos:start="39:5" pos:end="39:45"><name pos:start="39:5" pos:end="39:17">sequence_desc</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <call pos:start="39:21" pos:end="39:45"><name pos:start="39:21" pos:end="39:39">bytestream_get_byte</name><argument_list pos:start="39:40" pos:end="39:45">(<argument pos:start="39:41" pos:end="39:44"><expr pos:start="39:41" pos:end="39:44"><operator pos:start="39:41" pos:end="39:41">&amp;</operator><name pos:start="39:42" pos:end="39:44">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="63:5"><if pos:start="43:5" pos:end="63:5">if <condition pos:start="43:8" pos:end="43:32">(<expr pos:start="43:9" pos:end="43:31"><operator pos:start="43:9" pos:end="43:9">!</operator><operator pos:start="43:10" pos:end="43:10">(</operator><name pos:start="43:11" pos:end="43:23">sequence_desc</name> <operator pos:start="43:25" pos:end="43:25">&amp;</operator> <literal type="number" pos:start="43:27" pos:end="43:30">0x80</literal><operator pos:start="43:31" pos:end="43:31">)</operator></expr>)</condition> <block pos:start="43:34" pos:end="63:5">{<block_content pos:start="47:9" pos:end="61:17">

        <comment type="block" pos:start="45:9" pos:end="45:33">/* Additional RLE data */</comment>

        <if_stmt pos:start="47:9" pos:end="49:22"><if pos:start="47:9" pos:end="49:22">if <condition pos:start="47:12" pos:end="47:67">(<expr pos:start="47:13" pos:end="47:66"><name pos:start="47:13" pos:end="47:20">buf_size</name> <operator pos:start="47:22" pos:end="47:22">&gt;</operator> <name pos:start="47:24" pos:end="47:48"><name pos:start="47:24" pos:end="47:26">ctx</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:36">pictures</name><index pos:start="47:37" pos:end="47:48">[<expr pos:start="47:38" pos:end="47:47"><name pos:start="47:38" pos:end="47:47">picture_id</name></expr>]</index></name><operator pos:start="47:49" pos:end="47:49">.</operator><name pos:start="47:50" pos:end="47:66">rle_remaining_len</name></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:22"><block_content pos:start="49:13" pos:end="49:22">

            <return pos:start="49:13" pos:end="49:22">return <expr pos:start="49:20" pos:end="49:21"><operator pos:start="49:20" pos:end="49:20">-</operator><literal type="number" pos:start="49:21" pos:end="49:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:102"><expr pos:start="53:9" pos:end="53:101"><call pos:start="53:9" pos:end="53:101"><name pos:start="53:9" pos:end="53:14">memcpy</name><argument_list pos:start="53:15" pos:end="53:101">(<argument pos:start="53:16" pos:end="53:85"><expr pos:start="53:16" pos:end="53:85"><name pos:start="53:16" pos:end="53:40"><name pos:start="53:16" pos:end="53:18">ctx</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:28">pictures</name><index pos:start="53:29" pos:end="53:40">[<expr pos:start="53:30" pos:end="53:39"><name pos:start="53:30" pos:end="53:39">picture_id</name></expr>]</index></name><operator pos:start="53:41" pos:end="53:41">.</operator><name pos:start="53:42" pos:end="53:44">rle</name> <operator pos:start="53:46" pos:end="53:46">+</operator> <name pos:start="53:48" pos:end="53:72"><name pos:start="53:48" pos:end="53:50">ctx</name><operator pos:start="53:51" pos:end="53:52">-&gt;</operator><name pos:start="53:53" pos:end="53:60">pictures</name><index pos:start="53:61" pos:end="53:72">[<expr pos:start="53:62" pos:end="53:71"><name pos:start="53:62" pos:end="53:71">picture_id</name></expr>]</index></name><operator pos:start="53:73" pos:end="53:73">.</operator><name pos:start="53:74" pos:end="53:85">rle_data_len</name></expr></argument>, <argument pos:start="53:88" pos:end="53:90"><expr pos:start="53:88" pos:end="53:90"><name pos:start="53:88" pos:end="53:90">buf</name></expr></argument>, <argument pos:start="53:93" pos:end="53:100"><expr pos:start="53:93" pos:end="53:100"><name pos:start="53:93" pos:end="53:100">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:59"><expr pos:start="55:9" pos:end="55:58"><name pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:11">ctx</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:21">pictures</name><index pos:start="55:22" pos:end="55:33">[<expr pos:start="55:23" pos:end="55:32"><name pos:start="55:23" pos:end="55:32">picture_id</name></expr>]</index></name><operator pos:start="55:34" pos:end="55:34">.</operator><name pos:start="55:35" pos:end="55:46">rle_data_len</name> <operator pos:start="55:48" pos:end="55:49">+=</operator> <name pos:start="55:51" pos:end="55:58">buf_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:64"><expr pos:start="57:9" pos:end="57:63"><name pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:11">ctx</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:21">pictures</name><index pos:start="57:22" pos:end="57:33">[<expr pos:start="57:23" pos:end="57:32"><name pos:start="57:23" pos:end="57:32">picture_id</name></expr>]</index></name><operator pos:start="57:34" pos:end="57:34">.</operator><name pos:start="57:35" pos:end="57:51">rle_remaining_len</name> <operator pos:start="57:53" pos:end="57:54">-=</operator> <name pos:start="57:56" pos:end="57:63">buf_size</name></expr>;</expr_stmt>



        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="69:18"><if pos:start="67:5" pos:end="69:18">if <condition pos:start="67:8" pos:end="67:22">(<expr pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:16">buf_size</name> <operator pos:start="67:18" pos:end="67:19">&lt;=</operator> <literal type="number" pos:start="67:21" pos:end="67:21">7</literal></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:18"><block_content pos:start="69:9" pos:end="69:18">

        <return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:18"><expr pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:12">buf_size</name> <operator pos:start="71:14" pos:end="71:15">-=</operator> <literal type="number" pos:start="71:17" pos:end="71:17">7</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:74">/* Decode rle bitmap length, stored size includes width/height data */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:53"><expr pos:start="77:5" pos:end="77:52"><name pos:start="77:5" pos:end="77:18">rle_bitmap_len</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <call pos:start="77:22" pos:end="77:46"><name pos:start="77:22" pos:end="77:40">bytestream_get_be24</name><argument_list pos:start="77:41" pos:end="77:46">(<argument pos:start="77:42" pos:end="77:45"><expr pos:start="77:42" pos:end="77:45"><operator pos:start="77:42" pos:end="77:42">&amp;</operator><name pos:start="77:43" pos:end="77:45">buf</name></expr></argument>)</argument_list></call> <operator pos:start="77:48" pos:end="77:48">-</operator> <literal type="number" pos:start="77:50" pos:end="77:50">2</literal><operator pos:start="77:51" pos:end="77:51">*</operator><literal type="number" pos:start="77:52" pos:end="77:52">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:41">/* Get bitmap dimensions from data */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:39"><expr pos:start="83:5" pos:end="83:38"><name pos:start="83:5" pos:end="83:9">width</name>  <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:38"><name pos:start="83:14" pos:end="83:32">bytestream_get_be16</name><argument_list pos:start="83:33" pos:end="83:38">(<argument pos:start="83:34" pos:end="83:37"><expr pos:start="83:34" pos:end="83:37"><operator pos:start="83:34" pos:end="83:34">&amp;</operator><name pos:start="83:35" pos:end="83:37">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:39"><expr pos:start="85:5" pos:end="85:38"><name pos:start="85:5" pos:end="85:10">height</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <call pos:start="85:14" pos:end="85:38"><name pos:start="85:14" pos:end="85:32">bytestream_get_be16</name><argument_list pos:start="85:33" pos:end="85:38">(<argument pos:start="85:34" pos:end="85:37"><expr pos:start="85:34" pos:end="85:37"><operator pos:start="85:34" pos:end="85:34">&amp;</operator><name pos:start="85:35" pos:end="85:37">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:47">/* Make sure the bitmap is not too large */</comment>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:55">(<expr pos:start="91:9" pos:end="91:54"><name pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:13">avctx</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:20">width</name></name> <operator pos:start="91:22" pos:end="91:22">&lt;</operator> <name pos:start="91:24" pos:end="91:28">width</name> <operator pos:start="91:30" pos:end="91:31">||</operator> <name pos:start="91:33" pos:end="91:45"><name pos:start="91:33" pos:end="91:37">avctx</name><operator pos:start="91:38" pos:end="91:39">-&gt;</operator><name pos:start="91:40" pos:end="91:45">height</name></name> <operator pos:start="91:47" pos:end="91:47">&lt;</operator> <name pos:start="91:49" pos:end="91:54">height</name></expr>)</condition> <block pos:start="91:57" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:18">

        <expr_stmt pos:start="93:9" pos:end="93:78"><expr pos:start="93:9" pos:end="93:77"><call pos:start="93:9" pos:end="93:77"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:77">(<argument pos:start="93:16" pos:end="93:20"><expr pos:start="93:16" pos:end="93:20"><name pos:start="93:16" pos:end="93:20">avctx</name></expr></argument>, <argument pos:start="93:23" pos:end="93:34"><expr pos:start="93:23" pos:end="93:34"><name pos:start="93:23" pos:end="93:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:37" pos:end="93:76"><expr pos:start="93:37" pos:end="93:76"><literal type="string" pos:start="93:37" pos:end="93:76">"Bitmap dimensions larger than video.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:18">return <expr pos:start="95:16" pos:end="95:17"><operator pos:start="95:16" pos:end="95:16">-</operator><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:34">(<expr pos:start="101:9" pos:end="101:33"><name pos:start="101:9" pos:end="101:16">buf_size</name> <operator pos:start="101:18" pos:end="101:18">&gt;</operator> <name pos:start="101:20" pos:end="101:33">rle_bitmap_len</name></expr>)</condition> <block pos:start="101:36" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:35">

        <expr_stmt pos:start="103:9" pos:end="103:59"><expr pos:start="103:9" pos:end="103:58"><call pos:start="103:9" pos:end="103:58"><name pos:start="103:9" pos:end="103:14">av_log</name><argument_list pos:start="103:15" pos:end="103:58">(<argument pos:start="103:16" pos:end="103:20"><expr pos:start="103:16" pos:end="103:20"><name pos:start="103:16" pos:end="103:20">avctx</name></expr></argument>, <argument pos:start="103:23" pos:end="103:34"><expr pos:start="103:23" pos:end="103:34"><name pos:start="103:23" pos:end="103:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:37" pos:end="103:57"><expr pos:start="103:37" pos:end="103:57"><literal type="string" pos:start="103:37" pos:end="103:57">"too much RLE data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="105:9" pos:end="105:35">return <expr pos:start="105:16" pos:end="105:34"><name pos:start="105:16" pos:end="105:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:40"><expr pos:start="111:5" pos:end="111:39"><name pos:start="111:5" pos:end="111:29"><name pos:start="111:5" pos:end="111:7">ctx</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:17">pictures</name><index pos:start="111:18" pos:end="111:29">[<expr pos:start="111:19" pos:end="111:28"><name pos:start="111:19" pos:end="111:28">picture_id</name></expr>]</index></name><operator pos:start="111:30" pos:end="111:30">.</operator><name pos:start="111:31" pos:end="111:31">w</name> <operator pos:start="111:33" pos:end="111:33">=</operator> <name pos:start="111:35" pos:end="111:39">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:41"><expr pos:start="113:5" pos:end="113:40"><name pos:start="113:5" pos:end="113:29"><name pos:start="113:5" pos:end="113:7">ctx</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:17">pictures</name><index pos:start="113:18" pos:end="113:29">[<expr pos:start="113:19" pos:end="113:28"><name pos:start="113:19" pos:end="113:28">picture_id</name></expr>]</index></name><operator pos:start="113:30" pos:end="113:30">.</operator><name pos:start="113:31" pos:end="113:31">h</name> <operator pos:start="113:33" pos:end="113:33">=</operator> <name pos:start="113:35" pos:end="113:40">height</name></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:111"><expr pos:start="117:5" pos:end="117:110"><call pos:start="117:5" pos:end="117:110"><name pos:start="117:5" pos:end="117:18">av_fast_malloc</name><argument_list pos:start="117:19" pos:end="117:110">(<argument pos:start="117:20" pos:end="117:49"><expr pos:start="117:20" pos:end="117:49"><operator pos:start="117:20" pos:end="117:20">&amp;</operator><name pos:start="117:21" pos:end="117:45"><name pos:start="117:21" pos:end="117:23">ctx</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:33">pictures</name><index pos:start="117:34" pos:end="117:45">[<expr pos:start="117:35" pos:end="117:44"><name pos:start="117:35" pos:end="117:44">picture_id</name></expr>]</index></name><operator pos:start="117:46" pos:end="117:46">.</operator><name pos:start="117:47" pos:end="117:49">rle</name></expr></argument>, <argument pos:start="117:52" pos:end="117:93"><expr pos:start="117:52" pos:end="117:93"><operator pos:start="117:52" pos:end="117:52">&amp;</operator><name pos:start="117:53" pos:end="117:77"><name pos:start="117:53" pos:end="117:55">ctx</name><operator pos:start="117:56" pos:end="117:57">-&gt;</operator><name pos:start="117:58" pos:end="117:65">pictures</name><index pos:start="117:66" pos:end="117:77">[<expr pos:start="117:67" pos:end="117:76"><name pos:start="117:67" pos:end="117:76">picture_id</name></expr>]</index></name><operator pos:start="117:78" pos:end="117:78">.</operator><name pos:start="117:79" pos:end="117:93">rle_buffer_size</name></expr></argument>, <argument pos:start="117:96" pos:end="117:109"><expr pos:start="117:96" pos:end="117:109"><name pos:start="117:96" pos:end="117:109">rle_bitmap_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="121:5" pos:end="123:18"><if pos:start="121:5" pos:end="123:18">if <condition pos:start="121:8" pos:end="121:39">(<expr pos:start="121:9" pos:end="121:38"><operator pos:start="121:9" pos:end="121:9">!</operator><name pos:start="121:10" pos:end="121:34"><name pos:start="121:10" pos:end="121:12">ctx</name><operator pos:start="121:13" pos:end="121:14">-&gt;</operator><name pos:start="121:15" pos:end="121:22">pictures</name><index pos:start="121:23" pos:end="121:34">[<expr pos:start="121:24" pos:end="121:33"><name pos:start="121:24" pos:end="121:33">picture_id</name></expr>]</index></name><operator pos:start="121:35" pos:end="121:35">.</operator><name pos:start="121:36" pos:end="121:38">rle</name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:18"><block_content pos:start="123:9" pos:end="123:18">

        <return pos:start="123:9" pos:end="123:18">return <expr pos:start="123:16" pos:end="123:17"><operator pos:start="123:16" pos:end="123:16">-</operator><literal type="number" pos:start="123:17" pos:end="123:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:57"><expr pos:start="127:5" pos:end="127:56"><call pos:start="127:5" pos:end="127:56"><name pos:start="127:5" pos:end="127:10">memcpy</name><argument_list pos:start="127:11" pos:end="127:56">(<argument pos:start="127:12" pos:end="127:40"><expr pos:start="127:12" pos:end="127:40"><name pos:start="127:12" pos:end="127:36"><name pos:start="127:12" pos:end="127:14">ctx</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:24">pictures</name><index pos:start="127:25" pos:end="127:36">[<expr pos:start="127:26" pos:end="127:35"><name pos:start="127:26" pos:end="127:35">picture_id</name></expr>]</index></name><operator pos:start="127:37" pos:end="127:37">.</operator><name pos:start="127:38" pos:end="127:40">rle</name></expr></argument>, <argument pos:start="127:43" pos:end="127:45"><expr pos:start="127:43" pos:end="127:45"><name pos:start="127:43" pos:end="127:45">buf</name></expr></argument>, <argument pos:start="127:48" pos:end="127:55"><expr pos:start="127:48" pos:end="127:55"><name pos:start="127:48" pos:end="127:55">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:59"><expr pos:start="129:5" pos:end="129:58"><name pos:start="129:5" pos:end="129:29"><name pos:start="129:5" pos:end="129:7">ctx</name><operator pos:start="129:8" pos:end="129:9">-&gt;</operator><name pos:start="129:10" pos:end="129:17">pictures</name><index pos:start="129:18" pos:end="129:29">[<expr pos:start="129:19" pos:end="129:28"><name pos:start="129:19" pos:end="129:28">picture_id</name></expr>]</index></name><operator pos:start="129:30" pos:end="129:30">.</operator><name pos:start="129:31" pos:end="129:42">rle_data_len</name>      <operator pos:start="129:49" pos:end="129:49">=</operator> <name pos:start="129:51" pos:end="129:58">buf_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:76"><expr pos:start="131:5" pos:end="131:75"><name pos:start="131:5" pos:end="131:29"><name pos:start="131:5" pos:end="131:7">ctx</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:17">pictures</name><index pos:start="131:18" pos:end="131:29">[<expr pos:start="131:19" pos:end="131:28"><name pos:start="131:19" pos:end="131:28">picture_id</name></expr>]</index></name><operator pos:start="131:30" pos:end="131:30">.</operator><name pos:start="131:31" pos:end="131:47">rle_remaining_len</name> <operator pos:start="131:49" pos:end="131:49">=</operator> <name pos:start="131:51" pos:end="131:64">rle_bitmap_len</name> <operator pos:start="131:66" pos:end="131:66">-</operator> <name pos:start="131:68" pos:end="131:75">buf_size</name></expr>;</expr_stmt>



    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
