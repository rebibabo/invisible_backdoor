<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26373.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">try_seek_hole</name><parameter_list pos:start="1:25" pos:end="3:37">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:41">BlockDriverState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">bs</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:58"><decl pos:start="1:48" pos:end="1:58"><type pos:start="1:48" pos:end="1:58"><name pos:start="1:48" pos:end="1:52">off_t</name></type> <name pos:start="1:54" pos:end="1:58">start</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:71"><decl pos:start="1:61" pos:end="1:71"><type pos:start="1:61" pos:end="1:71"><name pos:start="1:61" pos:end="1:65">off_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">data</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:36"><decl pos:start="3:26" pos:end="3:36"><type pos:start="3:26" pos:end="3:36"><name pos:start="3:26" pos:end="3:30">off_t</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:36">hole</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="50:0">

<cpp:if pos:start="7:1" pos:end="7:42">#<cpp:directive pos:start="7:2" pos:end="7:3">if</cpp:directive> <expr pos:start="7:5" pos:end="7:42"><name pos:start="7:5" pos:end="7:11">defined</name> <name pos:start="7:13" pos:end="7:21">SEEK_HOLE</name> <operator pos:start="7:23" pos:end="7:24">&amp;&amp;</operator> <name pos:start="7:26" pos:end="7:32">defined</name> <name pos:start="7:34" pos:end="7:42">SEEK_DATA</name></expr></cpp:if>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">BDRVRawState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name> <init pos:start="9:21" pos:end="9:32">= <expr pos:start="9:23" pos:end="9:32"><name pos:start="9:23" pos:end="9:32"><name pos:start="9:23" pos:end="9:24">bs</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">opaque</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:9">hole</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:42"><name pos:start="13:13" pos:end="13:17">lseek</name><argument_list pos:start="13:18" pos:end="13:42">(<argument pos:start="13:19" pos:end="13:23"><expr pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:19">s</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:23">fd</name></name></expr></argument>, <argument pos:start="13:26" pos:end="13:30"><expr pos:start="13:26" pos:end="13:30"><name pos:start="13:26" pos:end="13:30">start</name></expr></argument>, <argument pos:start="13:33" pos:end="13:41"><expr pos:start="13:33" pos:end="13:41"><name pos:start="13:33" pos:end="13:41">SEEK_HOLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><operator pos:start="15:9" pos:end="15:9">*</operator><name pos:start="15:10" pos:end="15:13">hole</name> <operator pos:start="15:15" pos:end="15:16">==</operator> <operator pos:start="15:18" pos:end="15:18">-</operator><literal type="number" pos:start="15:19" pos:end="15:19">1</literal></expr>)</condition> <block pos:start="15:22" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:22">

        <return pos:start="17:9" pos:end="17:22">return <expr pos:start="17:16" pos:end="17:21"><operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="39:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:13">hole</name> <operator pos:start="23:15" pos:end="23:15">&gt;</operator> <name pos:start="23:17" pos:end="23:21">start</name></expr>)</condition> <block pos:start="23:24" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:22">

        <expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:13">data</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:21">start</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="39:5">else <block pos:start="27:12" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:9">

        <comment type="block" pos:start="29:9" pos:end="29:67">/* On a hole.  We need another syscall to find its end.  */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><operator pos:start="31:9" pos:end="31:9">*</operator><name pos:start="31:10" pos:end="31:13">data</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:46"><name pos:start="31:17" pos:end="31:21">lseek</name><argument_list pos:start="31:22" pos:end="31:46">(<argument pos:start="31:23" pos:end="31:27"><expr pos:start="31:23" pos:end="31:27"><name pos:start="31:23" pos:end="31:27"><name pos:start="31:23" pos:end="31:23">s</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:27">fd</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:34"><expr pos:start="31:30" pos:end="31:34"><name pos:start="31:30" pos:end="31:34">start</name></expr></argument>, <argument pos:start="31:37" pos:end="31:45"><expr pos:start="31:37" pos:end="31:45"><name pos:start="31:37" pos:end="31:45">SEEK_DATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:24">(<expr pos:start="33:13" pos:end="33:23"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:17">data</name> <operator pos:start="33:19" pos:end="33:20">==</operator> <operator pos:start="33:22" pos:end="33:22">-</operator><literal type="number" pos:start="33:23" pos:end="33:23">1</literal></expr>)</condition> <block pos:start="33:26" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:46">

            <expr_stmt pos:start="35:13" pos:end="35:46"><expr pos:start="35:13" pos:end="35:45"><operator pos:start="35:13" pos:end="35:13">*</operator><name pos:start="35:14" pos:end="35:17">data</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:45"><name pos:start="35:21" pos:end="35:25">lseek</name><argument_list pos:start="35:26" pos:end="35:45">(<argument pos:start="35:27" pos:end="35:31"><expr pos:start="35:27" pos:end="35:31"><name pos:start="35:27" pos:end="35:31"><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:31">fd</name></name></expr></argument>, <argument pos:start="35:34" pos:end="35:34"><expr pos:start="35:34" pos:end="35:34"><literal type="number" pos:start="35:34" pos:end="35:34">0</literal></expr></argument>, <argument pos:start="35:37" pos:end="35:44"><expr pos:start="35:37" pos:end="35:44"><name pos:start="35:37" pos:end="35:44">SEEK_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="43:5" pos:end="46:0">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

<cpp:else pos:start="45:1" pos:end="45:5">#<cpp:directive pos:start="45:2" pos:end="45:5">else</cpp:directive></cpp:else>

    <return pos:start="47:5" pos:end="50:0">return <expr pos:start="47:12" pos:end="47:19"><operator pos:start="47:12" pos:end="47:12">-</operator><name pos:start="47:13" pos:end="47:19">ENOTSUP</name></expr>;</return>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
