<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18536.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">ac3_eac3_probe</name><parameter_list pos:start="1:26" pos:end="1:75">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:37">AVProbeData</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">p</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:74"><decl pos:start="1:43" pos:end="1:74"><type pos:start="1:43" pos:end="1:74"><name pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:46">enum</name> <name pos:start="1:48" pos:end="1:56">AVCodecID</name></name></type> <name pos:start="1:58" pos:end="1:74">expected_codec_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:36">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">max_frames</name></decl>, <decl pos:start="5:21" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:32">first_frames</name> <init pos:start="5:34" pos:end="5:36">= <expr pos:start="5:36" pos:end="5:36"><literal type="number" pos:start="5:36" pos:end="5:36">0</literal></expr></init></decl>, <decl pos:start="5:39" pos:end="5:44"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:39" pos:end="5:44">frames</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name></decl>, <decl pos:start="7:25" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:19"><modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:29">buf2</name></decl>, <decl pos:start="7:32" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:19"><modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:35">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:8">enum</name> <name pos:start="9:10" pos:end="9:18">AVCodecID</name></name></type> <name pos:start="9:20" pos:end="9:27">codec_id</name> <init pos:start="9:29" pos:end="9:45">= <expr pos:start="9:31" pos:end="9:45"><name pos:start="9:31" pos:end="9:45">AV_CODEC_ID_AC3</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:19"><expr pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:14">max_frames</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:7">buf</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <name pos:start="15:11" pos:end="15:16"><name pos:start="15:11" pos:end="15:11">p</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:16">buf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:7">end</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:13">buf</name> <operator pos:start="17:15" pos:end="17:15">+</operator> <name pos:start="17:17" pos:end="17:27"><name pos:start="17:17" pos:end="17:17">p</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:27">buf_size</name></name></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="115:5">for<control pos:start="21:8" pos:end="21:27">(<init pos:start="21:9" pos:end="21:9">;</init> <condition pos:start="21:11" pos:end="21:20"><expr pos:start="21:11" pos:end="21:19"><name pos:start="21:11" pos:end="21:13">buf</name> <operator pos:start="21:15" pos:end="21:15">&lt;</operator> <name pos:start="21:17" pos:end="21:19">end</name></expr>;</condition> <incr pos:start="21:22" pos:end="21:26"><expr pos:start="21:22" pos:end="21:26"><name pos:start="21:22" pos:end="21:24">buf</name><operator pos:start="21:25" pos:end="21:26">++</operator></expr></incr>)</control> <block pos:start="21:29" pos:end="115:5">{<block_content pos:start="23:9" pos:end="113:34">

        <if_stmt pos:start="23:9" pos:end="27:21"><if pos:start="23:9" pos:end="27:21">if<condition pos:start="23:11" pos:end="25:64">(<expr pos:start="23:12" pos:end="25:62"><name pos:start="23:12" pos:end="23:14">buf</name> <operator pos:start="23:16" pos:end="23:16">&gt;</operator> <name pos:start="23:18" pos:end="23:23"><name pos:start="23:18" pos:end="23:18">p</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:23">buf</name></name> <operator pos:start="23:25" pos:end="23:26">&amp;&amp;</operator> <operator pos:start="23:28" pos:end="23:28">!</operator><operator pos:start="23:29" pos:end="23:29">(</operator><name pos:start="23:30" pos:end="23:35"><name pos:start="23:30" pos:end="23:32">buf</name><index pos:start="23:33" pos:end="23:35">[<expr pos:start="23:34" pos:end="23:34"><literal type="number" pos:start="23:34" pos:end="23:34">0</literal></expr>]</index></name> <operator pos:start="23:37" pos:end="23:38">==</operator> <literal type="number" pos:start="23:40" pos:end="23:43">0x0B</literal> <operator pos:start="23:45" pos:end="23:46">&amp;&amp;</operator> <name pos:start="23:48" pos:end="23:53"><name pos:start="23:48" pos:end="23:50">buf</name><index pos:start="23:51" pos:end="23:53">[<expr pos:start="23:52" pos:end="23:52"><literal type="number" pos:start="23:52" pos:end="23:52">1</literal></expr>]</index></name> <operator pos:start="23:55" pos:end="23:56">==</operator> <literal type="number" pos:start="23:58" pos:end="23:61">0x77</literal><operator pos:start="23:62" pos:end="23:62">)</operator>

                        <operator pos:start="25:25" pos:end="25:26">&amp;&amp;</operator> <operator pos:start="25:28" pos:end="25:28">!</operator><operator pos:start="25:29" pos:end="25:29">(</operator><name pos:start="25:30" pos:end="25:35"><name pos:start="25:30" pos:end="25:32">buf</name><index pos:start="25:33" pos:end="25:35">[<expr pos:start="25:34" pos:end="25:34"><literal type="number" pos:start="25:34" pos:end="25:34">0</literal></expr>]</index></name> <operator pos:start="25:37" pos:end="25:38">==</operator> <literal type="number" pos:start="25:40" pos:end="25:43">0x77</literal> <operator pos:start="25:45" pos:end="25:46">&amp;&amp;</operator> <name pos:start="25:48" pos:end="25:53"><name pos:start="25:48" pos:end="25:50">buf</name><index pos:start="25:51" pos:end="25:53">[<expr pos:start="25:52" pos:end="25:52"><literal type="number" pos:start="25:52" pos:end="25:52">1</literal></expr>]</index></name> <operator pos:start="25:55" pos:end="25:56">==</operator> <literal type="number" pos:start="25:58" pos:end="25:61">0x0B</literal><operator pos:start="25:62" pos:end="25:62">)</operator></expr> )</condition><block type="pseudo" pos:start="27:13" pos:end="27:21"><block_content pos:start="27:13" pos:end="27:21">

            <continue pos:start="27:13" pos:end="27:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:19"><expr pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:12">buf2</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:18">buf</name></expr>;</expr_stmt>



        <for pos:start="33:9" pos:end="107:9">for<control pos:start="33:12" pos:end="33:45">(<init pos:start="33:13" pos:end="33:23"><expr pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:18">frames</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>;</init> <condition pos:start="33:25" pos:end="33:35"><expr pos:start="33:25" pos:end="33:34"><name pos:start="33:25" pos:end="33:28">buf2</name> <operator pos:start="33:30" pos:end="33:30">&lt;</operator> <name pos:start="33:32" pos:end="33:34">end</name></expr>;</condition> <incr pos:start="33:37" pos:end="33:44"><expr pos:start="33:37" pos:end="33:44"><name pos:start="33:37" pos:end="33:42">frames</name><operator pos:start="33:43" pos:end="33:44">++</operator></expr></incr>)</control> <block pos:start="33:47" pos:end="107:9">{<block_content pos:start="35:13" pos:end="105:31">

            <decl_stmt pos:start="35:13" pos:end="35:31"><decl pos:start="35:13" pos:end="35:30"><type pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:19">uint8_t</name></type> <name pos:start="35:21" pos:end="35:30"><name pos:start="35:21" pos:end="35:24">buf3</name><index pos:start="35:25" pos:end="35:30">[<expr pos:start="35:26" pos:end="35:29"><literal type="number" pos:start="35:26" pos:end="35:29">4096</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:33"><decl pos:start="37:13" pos:end="37:32"><type pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:19">uint8_t</name></type> <name pos:start="37:21" pos:end="37:32">bitstream_id</name></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:32"><decl pos:start="39:13" pos:end="39:31"><type pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:20">uint16_t</name></type> <name pos:start="39:22" pos:end="39:31">frame_size</name></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:23"><decl pos:start="41:13" pos:end="41:17"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:17">i</name></decl>, <decl pos:start="41:20" pos:end="41:22"><type ref="prev" pos:start="41:13" pos:end="41:15"/><name pos:start="41:20" pos:end="41:22">ret</name></decl>;</decl_stmt>



            <if_stmt pos:start="45:13" pos:end="47:25"><if pos:start="45:13" pos:end="47:25">if<condition pos:start="45:15" pos:end="45:55">(<expr pos:start="45:16" pos:end="45:54"><operator pos:start="45:16" pos:end="45:16">!</operator><call pos:start="45:17" pos:end="45:54"><name pos:start="45:17" pos:end="45:22">memcmp</name><argument_list pos:start="45:23" pos:end="45:54">(<argument pos:start="45:24" pos:end="45:27"><expr pos:start="45:24" pos:end="45:27"><name pos:start="45:24" pos:end="45:27">buf2</name></expr></argument>, <argument pos:start="45:30" pos:end="45:50"><expr pos:start="45:30" pos:end="45:50"><literal type="string" pos:start="45:30" pos:end="45:50">"\x1\x10\0\0\0\0\0\0"</literal></expr></argument>, <argument pos:start="45:53" pos:end="45:53"><expr pos:start="45:53" pos:end="45:53"><literal type="number" pos:start="45:53" pos:end="45:53">8</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:25"><block_content pos:start="47:17" pos:end="47:25">

                <expr_stmt pos:start="47:17" pos:end="47:25"><expr pos:start="47:17" pos:end="47:24"><name pos:start="47:17" pos:end="47:20">buf2</name><operator pos:start="47:21" pos:end="47:22">+=</operator><literal type="number" pos:start="47:23" pos:end="47:24">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="49:13" pos:end="67:55"><if pos:start="49:13" pos:end="63:13">if <condition pos:start="49:16" pos:end="49:49">(<expr pos:start="49:17" pos:end="49:48"><name pos:start="49:17" pos:end="49:22"><name pos:start="49:17" pos:end="49:19">buf</name><index pos:start="49:20" pos:end="49:22">[<expr pos:start="49:21" pos:end="49:21"><literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr>]</index></name> <operator pos:start="49:24" pos:end="49:25">==</operator> <literal type="number" pos:start="49:27" pos:end="49:30">0x77</literal> <operator pos:start="49:32" pos:end="49:33">&amp;&amp;</operator> <name pos:start="49:35" pos:end="49:40"><name pos:start="49:35" pos:end="49:37">buf</name><index pos:start="49:38" pos:end="49:40">[<expr pos:start="49:39" pos:end="49:39"><literal type="number" pos:start="49:39" pos:end="49:39">1</literal></expr>]</index></name> <operator pos:start="49:42" pos:end="49:43">==</operator> <literal type="number" pos:start="49:45" pos:end="49:48">0x0B</literal></expr>)</condition> <block pos:start="49:51" pos:end="63:13">{<block_content pos:start="51:17" pos:end="61:55">

                <for pos:start="51:17" pos:end="57:17">for<control pos:start="51:20" pos:end="51:35">(<init pos:start="51:21" pos:end="51:24"><expr pos:start="51:21" pos:end="51:23"><name pos:start="51:21" pos:end="51:21">i</name><operator pos:start="51:22" pos:end="51:22">=</operator><literal type="number" pos:start="51:23" pos:end="51:23">0</literal></expr>;</init> <condition pos:start="51:26" pos:end="51:29"><expr pos:start="51:26" pos:end="51:28"><name pos:start="51:26" pos:end="51:26">i</name><operator pos:start="51:27" pos:end="51:27">&lt;</operator><literal type="number" pos:start="51:28" pos:end="51:28">8</literal></expr>;</condition> <incr pos:start="51:31" pos:end="51:34"><expr pos:start="51:31" pos:end="51:34"><name pos:start="51:31" pos:end="51:31">i</name><operator pos:start="51:32" pos:end="51:33">+=</operator><literal type="number" pos:start="51:34" pos:end="51:34">2</literal></expr></incr>)</control> <block pos:start="51:37" pos:end="57:17">{<block_content pos:start="53:21" pos:end="55:42">

                    <expr_stmt pos:start="53:21" pos:end="53:42"><expr pos:start="53:21" pos:end="53:41"><name pos:start="53:21" pos:end="53:29"><name pos:start="53:21" pos:end="53:24">buf3</name><index pos:start="53:25" pos:end="53:29">[<expr pos:start="53:26" pos:end="53:26"><name pos:start="53:26" pos:end="53:26">i</name></expr>  ]</index></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <name pos:start="53:33" pos:end="53:41"><name pos:start="53:33" pos:end="53:36">buf2</name><index pos:start="53:37" pos:end="53:41">[<expr pos:start="53:38" pos:end="53:40"><name pos:start="53:38" pos:end="53:38">i</name><operator pos:start="53:39" pos:end="53:39">+</operator><literal type="number" pos:start="53:40" pos:end="53:40">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:42"><expr pos:start="55:21" pos:end="55:41"><name pos:start="55:21" pos:end="55:29"><name pos:start="55:21" pos:end="55:24">buf3</name><index pos:start="55:25" pos:end="55:29">[<expr pos:start="55:26" pos:end="55:28"><name pos:start="55:26" pos:end="55:26">i</name><operator pos:start="55:27" pos:end="55:27">+</operator><literal type="number" pos:start="55:28" pos:end="55:28">1</literal></expr>]</index></name> <operator pos:start="55:31" pos:end="55:31">=</operator> <name pos:start="55:33" pos:end="55:41"><name pos:start="55:33" pos:end="55:36">buf2</name><index pos:start="55:37" pos:end="55:41">[<expr pos:start="55:38" pos:end="55:38"><name pos:start="55:38" pos:end="55:38">i</name></expr>  ]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="59:17" pos:end="61:55"><expr pos:start="59:17" pos:end="61:54"><name pos:start="59:17" pos:end="59:19">ret</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <call pos:start="59:23" pos:end="61:54"><name pos:start="59:23" pos:end="59:41">av_ac3_parse_header</name><argument_list pos:start="59:42" pos:end="61:54">(<argument pos:start="59:43" pos:end="59:46"><expr pos:start="59:43" pos:end="59:46"><name pos:start="59:43" pos:end="59:46">buf3</name></expr></argument>, <argument pos:start="59:49" pos:end="59:49"><expr pos:start="59:49" pos:end="59:49"><literal type="number" pos:start="59:49" pos:end="59:49">8</literal></expr></argument>, <argument pos:start="59:52" pos:end="59:64"><expr pos:start="59:52" pos:end="59:64"><operator pos:start="59:52" pos:end="59:52">&amp;</operator><name pos:start="59:53" pos:end="59:64">bitstream_id</name></expr></argument>,

                                          <argument pos:start="61:43" pos:end="61:53"><expr pos:start="61:43" pos:end="61:53"><operator pos:start="61:43" pos:end="61:43">&amp;</operator><name pos:start="61:44" pos:end="61:53">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="63:14" pos:end="67:55">else<block type="pseudo" pos:start="65:17" pos:end="67:55"><block_content pos:start="65:17" pos:end="67:55">

                <expr_stmt pos:start="65:17" pos:end="67:55"><expr pos:start="65:17" pos:end="67:54"><name pos:start="65:17" pos:end="65:19">ret</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <call pos:start="65:23" pos:end="67:54"><name pos:start="65:23" pos:end="65:41">av_ac3_parse_header</name><argument_list pos:start="65:42" pos:end="67:54">(<argument pos:start="65:43" pos:end="65:46"><expr pos:start="65:43" pos:end="65:46"><name pos:start="65:43" pos:end="65:46">buf2</name></expr></argument>, <argument pos:start="65:49" pos:end="65:58"><expr pos:start="65:49" pos:end="65:58"><name pos:start="65:49" pos:end="65:51">end</name> <operator pos:start="65:53" pos:end="65:53">-</operator> <name pos:start="65:55" pos:end="65:58">buf2</name></expr></argument>, <argument pos:start="65:61" pos:end="65:73"><expr pos:start="65:61" pos:end="65:73"><operator pos:start="65:61" pos:end="65:61">&amp;</operator><name pos:start="65:62" pos:end="65:73">bitstream_id</name></expr></argument>,

                                          <argument pos:start="67:43" pos:end="67:53"><expr pos:start="67:43" pos:end="67:53"><operator pos:start="67:43" pos:end="67:43">&amp;</operator><name pos:start="67:44" pos:end="67:53">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="69:13" pos:end="71:22"><if pos:start="69:13" pos:end="71:22">if <condition pos:start="69:16" pos:end="69:24">(<expr pos:start="69:17" pos:end="69:23"><name pos:start="69:17" pos:end="69:19">ret</name> <operator pos:start="69:21" pos:end="69:21">&lt;</operator> <literal type="number" pos:start="69:23" pos:end="69:23">0</literal></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:22"><block_content pos:start="71:17" pos:end="71:22">

                <break pos:start="71:17" pos:end="71:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="73:13" pos:end="75:22"><if pos:start="73:13" pos:end="75:22">if<condition pos:start="73:15" pos:end="73:39">(<expr pos:start="73:16" pos:end="73:38"><name pos:start="73:16" pos:end="73:19">buf2</name> <operator pos:start="73:21" pos:end="73:21">+</operator> <name pos:start="73:23" pos:end="73:32">frame_size</name> <operator pos:start="73:34" pos:end="73:34">&gt;</operator> <name pos:start="73:36" pos:end="73:38">end</name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:22"><block_content pos:start="75:17" pos:end="75:22">

                <break pos:start="75:17" pos:end="75:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="77:13" pos:end="99:13"><if pos:start="77:13" pos:end="93:13">if <condition pos:start="77:16" pos:end="77:49">(<expr pos:start="77:17" pos:end="77:48"><name pos:start="77:17" pos:end="77:22"><name pos:start="77:17" pos:end="77:19">buf</name><index pos:start="77:20" pos:end="77:22">[<expr pos:start="77:21" pos:end="77:21"><literal type="number" pos:start="77:21" pos:end="77:21">0</literal></expr>]</index></name> <operator pos:start="77:24" pos:end="77:25">==</operator> <literal type="number" pos:start="77:27" pos:end="77:30">0x77</literal> <operator pos:start="77:32" pos:end="77:33">&amp;&amp;</operator> <name pos:start="77:35" pos:end="77:40"><name pos:start="77:35" pos:end="77:37">buf</name><index pos:start="77:38" pos:end="77:40">[<expr pos:start="77:39" pos:end="77:39"><literal type="number" pos:start="77:39" pos:end="77:39">1</literal></expr>]</index></name> <operator pos:start="77:42" pos:end="77:43">==</operator> <literal type="number" pos:start="77:45" pos:end="77:48">0x0B</literal></expr>)</condition> <block pos:start="77:51" pos:end="93:13">{<block_content pos:start="79:17" pos:end="91:26">

                <expr_stmt pos:start="79:17" pos:end="79:55"><expr pos:start="79:17" pos:end="79:54"><call pos:start="79:17" pos:end="79:54"><name pos:start="79:17" pos:end="79:26">av_assert0</name><argument_list pos:start="79:27" pos:end="79:54">(<argument pos:start="79:28" pos:end="79:53"><expr pos:start="79:28" pos:end="79:53"><name pos:start="79:28" pos:end="79:37">frame_size</name> <operator pos:start="79:39" pos:end="79:40">&lt;=</operator> <sizeof pos:start="79:42" pos:end="79:53">sizeof<argument_list pos:start="79:48" pos:end="79:53">(<argument pos:start="79:49" pos:end="79:52"><expr pos:start="79:49" pos:end="79:52"><name pos:start="79:49" pos:end="79:52">buf3</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="81:17" pos:end="87:17">for<control pos:start="81:20" pos:end="81:50">(<init pos:start="81:21" pos:end="81:26"><expr pos:start="81:21" pos:end="81:25"><name pos:start="81:21" pos:end="81:21">i</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <literal type="number" pos:start="81:25" pos:end="81:25">8</literal></expr>;</init> <condition pos:start="81:28" pos:end="81:42"><expr pos:start="81:28" pos:end="81:41"><name pos:start="81:28" pos:end="81:28">i</name> <operator pos:start="81:30" pos:end="81:30">&lt;</operator> <name pos:start="81:32" pos:end="81:41">frame_size</name></expr>;</condition> <incr pos:start="81:44" pos:end="81:49"><expr pos:start="81:44" pos:end="81:49"><name pos:start="81:44" pos:end="81:44">i</name> <operator pos:start="81:46" pos:end="81:47">+=</operator> <literal type="number" pos:start="81:49" pos:end="81:49">2</literal></expr></incr>)</control> <block pos:start="81:52" pos:end="87:17">{<block_content pos:start="83:21" pos:end="85:42">

                    <expr_stmt pos:start="83:21" pos:end="83:42"><expr pos:start="83:21" pos:end="83:41"><name pos:start="83:21" pos:end="83:29"><name pos:start="83:21" pos:end="83:24">buf3</name><index pos:start="83:25" pos:end="83:29">[<expr pos:start="83:26" pos:end="83:26"><name pos:start="83:26" pos:end="83:26">i</name></expr>  ]</index></name> <operator pos:start="83:31" pos:end="83:31">=</operator> <name pos:start="83:33" pos:end="83:41"><name pos:start="83:33" pos:end="83:36">buf2</name><index pos:start="83:37" pos:end="83:41">[<expr pos:start="83:38" pos:end="83:40"><name pos:start="83:38" pos:end="83:38">i</name><operator pos:start="83:39" pos:end="83:39">+</operator><literal type="number" pos:start="83:40" pos:end="83:40">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:42"><expr pos:start="85:21" pos:end="85:41"><name pos:start="85:21" pos:end="85:29"><name pos:start="85:21" pos:end="85:24">buf3</name><index pos:start="85:25" pos:end="85:29">[<expr pos:start="85:26" pos:end="85:28"><name pos:start="85:26" pos:end="85:26">i</name><operator pos:start="85:27" pos:end="85:27">+</operator><literal type="number" pos:start="85:28" pos:end="85:28">1</literal></expr>]</index></name> <operator pos:start="85:31" pos:end="85:31">=</operator> <name pos:start="85:33" pos:end="85:41"><name pos:start="85:33" pos:end="85:36">buf2</name><index pos:start="85:37" pos:end="85:41">[<expr pos:start="85:38" pos:end="85:38"><name pos:start="85:38" pos:end="85:38">i</name></expr>  ]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="89:17" pos:end="91:26"><if pos:start="89:17" pos:end="91:26">if <condition pos:start="89:20" pos:end="89:90">(<expr pos:start="89:21" pos:end="89:89"><call pos:start="89:21" pos:end="89:89"><name pos:start="89:21" pos:end="89:26">av_crc</name><argument_list pos:start="89:27" pos:end="89:89">(<argument pos:start="89:28" pos:end="89:59"><expr pos:start="89:28" pos:end="89:59"><call pos:start="89:28" pos:end="89:59"><name pos:start="89:28" pos:end="89:43">av_crc_get_table</name><argument_list pos:start="89:44" pos:end="89:59">(<argument pos:start="89:45" pos:end="89:58"><expr pos:start="89:45" pos:end="89:58"><name pos:start="89:45" pos:end="89:58">AV_CRC_16_ANSI</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="89:62" pos:end="89:62"><expr pos:start="89:62" pos:end="89:62"><literal type="number" pos:start="89:62" pos:end="89:62">0</literal></expr></argument>, <argument pos:start="89:65" pos:end="89:72"><expr pos:start="89:65" pos:end="89:72"><name pos:start="89:65" pos:end="89:68">buf3</name> <operator pos:start="89:70" pos:end="89:70">+</operator> <literal type="number" pos:start="89:72" pos:end="89:72">2</literal></expr></argument>, <argument pos:start="89:75" pos:end="89:88"><expr pos:start="89:75" pos:end="89:88"><name pos:start="89:75" pos:end="89:84">frame_size</name> <operator pos:start="89:86" pos:end="89:86">-</operator> <literal type="number" pos:start="89:88" pos:end="89:88">2</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:26"><block_content pos:start="91:21" pos:end="91:26">

                    <break pos:start="91:21" pos:end="91:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="93:15" pos:end="99:13">else <block pos:start="93:20" pos:end="99:13">{<block_content pos:start="95:17" pos:end="97:26">

                <if_stmt pos:start="95:17" pos:end="97:26"><if pos:start="95:17" pos:end="97:26">if <condition pos:start="95:20" pos:end="95:90">(<expr pos:start="95:21" pos:end="95:89"><call pos:start="95:21" pos:end="95:89"><name pos:start="95:21" pos:end="95:26">av_crc</name><argument_list pos:start="95:27" pos:end="95:89">(<argument pos:start="95:28" pos:end="95:59"><expr pos:start="95:28" pos:end="95:59"><call pos:start="95:28" pos:end="95:59"><name pos:start="95:28" pos:end="95:43">av_crc_get_table</name><argument_list pos:start="95:44" pos:end="95:59">(<argument pos:start="95:45" pos:end="95:58"><expr pos:start="95:45" pos:end="95:58"><name pos:start="95:45" pos:end="95:58">AV_CRC_16_ANSI</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:62" pos:end="95:62"><expr pos:start="95:62" pos:end="95:62"><literal type="number" pos:start="95:62" pos:end="95:62">0</literal></expr></argument>, <argument pos:start="95:65" pos:end="95:72"><expr pos:start="95:65" pos:end="95:72"><name pos:start="95:65" pos:end="95:68">buf2</name> <operator pos:start="95:70" pos:end="95:70">+</operator> <literal type="number" pos:start="95:72" pos:end="95:72">2</literal></expr></argument>, <argument pos:start="95:75" pos:end="95:88"><expr pos:start="95:75" pos:end="95:88"><name pos:start="95:75" pos:end="95:84">frame_size</name> <operator pos:start="95:86" pos:end="95:86">-</operator> <literal type="number" pos:start="95:88" pos:end="95:88">2</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="97:21" pos:end="97:26"><block_content pos:start="97:21" pos:end="97:26">

                    <break pos:start="97:21" pos:end="97:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="101:13" pos:end="103:44"><if pos:start="101:13" pos:end="103:44">if <condition pos:start="101:16" pos:end="101:34">(<expr pos:start="101:17" pos:end="101:33"><name pos:start="101:17" pos:end="101:28">bitstream_id</name> <operator pos:start="101:30" pos:end="101:30">&gt;</operator> <literal type="number" pos:start="101:32" pos:end="101:33">10</literal></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:44"><block_content pos:start="103:17" pos:end="103:44">

                <expr_stmt pos:start="103:17" pos:end="103:44"><expr pos:start="103:17" pos:end="103:43"><name pos:start="103:17" pos:end="103:24">codec_id</name> <operator pos:start="103:26" pos:end="103:26">=</operator> <name pos:start="103:28" pos:end="103:43">AV_CODEC_ID_EAC3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:31"><expr pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:16">buf2</name> <operator pos:start="105:18" pos:end="105:19">+=</operator> <name pos:start="105:21" pos:end="105:30">frame_size</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="109:9" pos:end="109:47"><expr pos:start="109:9" pos:end="109:46"><name pos:start="109:9" pos:end="109:18">max_frames</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <call pos:start="109:22" pos:end="109:46"><name pos:start="109:22" pos:end="109:26">FFMAX</name><argument_list pos:start="109:27" pos:end="109:46">(<argument pos:start="109:28" pos:end="109:37"><expr pos:start="109:28" pos:end="109:37"><name pos:start="109:28" pos:end="109:37">max_frames</name></expr></argument>, <argument pos:start="109:40" pos:end="109:45"><expr pos:start="109:40" pos:end="109:45"><name pos:start="109:40" pos:end="109:45">frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="113:34"><if pos:start="111:9" pos:end="113:34">if<condition pos:start="111:11" pos:end="111:25">(<expr pos:start="111:12" pos:end="111:24"><name pos:start="111:12" pos:end="111:14">buf</name> <operator pos:start="111:16" pos:end="111:17">==</operator> <name pos:start="111:19" pos:end="111:24"><name pos:start="111:19" pos:end="111:19">p</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:24">buf</name></name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:34"><block_content pos:start="113:13" pos:end="113:34">

            <expr_stmt pos:start="113:13" pos:end="113:34"><expr pos:start="113:13" pos:end="113:33"><name pos:start="113:13" pos:end="113:24">first_frames</name> <operator pos:start="113:26" pos:end="113:26">=</operator> <name pos:start="113:28" pos:end="113:33">frames</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="117:5" pos:end="117:47"><if pos:start="117:5" pos:end="117:47">if<condition pos:start="117:7" pos:end="117:37">(<expr pos:start="117:8" pos:end="117:36"><name pos:start="117:8" pos:end="117:15">codec_id</name> <operator pos:start="117:17" pos:end="117:18">!=</operator> <name pos:start="117:20" pos:end="117:36">expected_codec_id</name></expr>)</condition><block type="pseudo" pos:start="117:39" pos:end="117:47"><block_content pos:start="117:39" pos:end="117:47"> <return pos:start="117:39" pos:end="117:47">return <expr pos:start="117:46" pos:end="117:46"><literal type="number" pos:start="117:46" pos:end="117:46">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="line" pos:start="119:5" pos:end="119:59">// keep this in sync with mp3 probe, both need to avoid</comment>

    <comment type="line" pos:start="121:5" pos:end="121:30">// issues with MPEG-files!</comment>

    <if_stmt pos:start="123:5" pos:end="131:36"><if pos:start="123:5" pos:end="123:62">if   <condition pos:start="123:10" pos:end="123:26">(<expr pos:start="123:11" pos:end="123:25"><name pos:start="123:11" pos:end="123:22">first_frames</name><operator pos:start="123:23" pos:end="123:24">&gt;=</operator><literal type="number" pos:start="123:25" pos:end="123:25">7</literal></expr>)</condition><block type="pseudo" pos:start="123:28" pos:end="123:62"><block_content pos:start="123:28" pos:end="123:62"> <return pos:start="123:28" pos:end="123:62">return <expr pos:start="123:35" pos:end="123:61"><name pos:start="123:35" pos:end="123:57">AVPROBE_SCORE_EXTENSION</name> <operator pos:start="123:59" pos:end="123:59">+</operator> <literal type="number" pos:start="123:61" pos:end="123:61">1</literal></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="125:5" pos:end="125:58">else if<condition pos:start="125:12" pos:end="125:27">(<expr pos:start="125:13" pos:end="125:26"><name pos:start="125:13" pos:end="125:22">max_frames</name><operator pos:start="125:23" pos:end="125:23">&gt;</operator><literal type="number" pos:start="125:24" pos:end="125:26">200</literal></expr>)</condition><block type="pseudo" pos:start="125:28" pos:end="125:58"><block_content pos:start="125:28" pos:end="125:58"><return pos:start="125:28" pos:end="125:58">return <expr pos:start="125:35" pos:end="125:57"><name pos:start="125:35" pos:end="125:57">AVPROBE_SCORE_EXTENSION</name></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="127:5" pos:end="127:60">else if<condition pos:start="127:12" pos:end="127:26">(<expr pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:22">max_frames</name><operator pos:start="127:23" pos:end="127:24">&gt;=</operator><literal type="number" pos:start="127:25" pos:end="127:25">4</literal></expr>)</condition><block type="pseudo" pos:start="127:28" pos:end="127:60"><block_content pos:start="127:28" pos:end="127:60"> <return pos:start="127:28" pos:end="127:60">return <expr pos:start="127:35" pos:end="127:59"><name pos:start="127:35" pos:end="127:57">AVPROBE_SCORE_EXTENSION</name><operator pos:start="127:58" pos:end="127:58">/</operator><literal type="number" pos:start="127:59" pos:end="127:59">2</literal></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="129:5" pos:end="129:36">else if<condition pos:start="129:12" pos:end="129:26">(<expr pos:start="129:13" pos:end="129:25"><name pos:start="129:13" pos:end="129:22">max_frames</name><operator pos:start="129:23" pos:end="129:24">&gt;=</operator><literal type="number" pos:start="129:25" pos:end="129:25">1</literal></expr>)</condition><block type="pseudo" pos:start="129:28" pos:end="129:36"><block_content pos:start="129:28" pos:end="129:36"> <return pos:start="129:28" pos:end="129:36">return <expr pos:start="129:35" pos:end="129:35"><literal type="number" pos:start="129:35" pos:end="129:35">1</literal></expr>;</return></block_content></block></if>

    <else pos:start="131:5" pos:end="131:36">else<block type="pseudo" pos:start="131:28" pos:end="131:36"><block_content pos:start="131:28" pos:end="131:36">                   <return pos:start="131:28" pos:end="131:36">return <expr pos:start="131:35" pos:end="131:35"><literal type="number" pos:start="131:35" pos:end="131:35">0</literal></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
