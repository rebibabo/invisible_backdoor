<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14138.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mmu_translate_asc</name><parameter_list pos:start="1:29" pos:end="5:46">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:42">CPUS390XState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">env</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:67"><decl pos:start="1:50" pos:end="1:67"><type pos:start="1:50" pos:end="1:67"><name pos:start="1:50" pos:end="1:61">target_ulong</name></type> <name pos:start="1:63" pos:end="1:67">vaddr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:41">asc</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:62"><decl pos:start="3:44" pos:end="3:62"><type pos:start="3:44" pos:end="3:62"><name pos:start="3:44" pos:end="3:55">target_ulong</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:62">raddr</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:74"><decl pos:start="3:65" pos:end="3:74"><type pos:start="3:65" pos:end="3:74"><name pos:start="3:65" pos:end="3:67">int</name> <modifier pos:start="3:69" pos:end="3:69">*</modifier></type><name pos:start="3:70" pos:end="3:74">flags</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:35"><decl pos:start="5:30" pos:end="5:35"><type pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:32">int</name></type> <name pos:start="5:34" pos:end="5:35">rw</name></decl></parameter>, <parameter pos:start="5:38" pos:end="5:45"><decl pos:start="5:38" pos:end="5:45"><type pos:start="5:38" pos:end="5:45"><name pos:start="5:38" pos:end="5:41">bool</name></type> <name pos:start="5:43" pos:end="5:45">exc</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="167:1">{<block_content pos:start="9:5" pos:end="165:13">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:17">asce</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">r</name></decl>;</decl_stmt>



    <switch pos:start="17:5" pos:end="43:5">switch <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">asc</name></expr>)</condition> <block pos:start="17:18" pos:end="43:5">{<block_content pos:start="19:5" pos:end="41:14">

    <case pos:start="19:5" pos:end="19:25">case <expr pos:start="19:10" pos:end="19:24"><name pos:start="19:10" pos:end="19:24">PSW_ASC_PRIMARY</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:51"><expr pos:start="21:9" pos:end="21:50"><call pos:start="21:9" pos:end="21:50"><name pos:start="21:9" pos:end="21:19">PTE_DPRINTF</name><argument_list pos:start="21:20" pos:end="21:50">(<argument pos:start="21:21" pos:end="21:39"><expr pos:start="21:21" pos:end="21:39"><literal type="string" pos:start="21:21" pos:end="21:39">"%s: asc=primary\n"</literal></expr></argument>, <argument pos:start="21:42" pos:end="21:49"><expr pos:start="21:42" pos:end="21:49"><name pos:start="21:42" pos:end="21:49">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:12">asce</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:28"><name pos:start="23:16" pos:end="23:18">env</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:25">cregs</name><index pos:start="23:26" pos:end="23:28">[<expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:27">case <expr pos:start="27:10" pos:end="27:26"><name pos:start="27:10" pos:end="27:26">PSW_ASC_SECONDARY</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><call pos:start="29:9" pos:end="29:52"><name pos:start="29:9" pos:end="29:19">PTE_DPRINTF</name><argument_list pos:start="29:20" pos:end="29:52">(<argument pos:start="29:21" pos:end="29:41"><expr pos:start="29:21" pos:end="29:41"><literal type="string" pos:start="29:21" pos:end="29:41">"%s: asc=secondary\n"</literal></expr></argument>, <argument pos:start="29:44" pos:end="29:51"><expr pos:start="29:44" pos:end="29:51"><name pos:start="29:44" pos:end="29:51">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:12">asce</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:18">env</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:25">cregs</name><index pos:start="31:26" pos:end="31:28">[<expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">7</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:22">case <expr pos:start="35:10" pos:end="35:21"><name pos:start="35:10" pos:end="35:21">PSW_ASC_HOME</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:48"><expr pos:start="37:9" pos:end="37:47"><call pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:19">PTE_DPRINTF</name><argument_list pos:start="37:20" pos:end="37:47">(<argument pos:start="37:21" pos:end="37:36"><expr pos:start="37:21" pos:end="37:36"><literal type="string" pos:start="37:21" pos:end="37:36">"%s: asc=home\n"</literal></expr></argument>, <argument pos:start="37:39" pos:end="37:46"><expr pos:start="37:39" pos:end="37:46"><name pos:start="37:39" pos:end="37:46">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:12">asce</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:29"><name pos:start="39:16" pos:end="39:18">env</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:25">cregs</name><index pos:start="39:26" pos:end="39:29">[<expr pos:start="39:27" pos:end="39:28"><literal type="number" pos:start="39:27" pos:end="39:28">13</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:32">(<expr pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:12">asce</name> <operator pos:start="47:14" pos:end="47:14">&amp;</operator> <name pos:start="47:16" pos:end="47:31">_ASCE_REAL_SPACE</name></expr>)</condition> <block pos:start="47:34" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:17">

        <comment type="block" pos:start="49:9" pos:end="49:28">/* direct mapping */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:23"><expr pos:start="51:9" pos:end="51:22"><operator pos:start="51:9" pos:end="51:9">*</operator><name pos:start="51:10" pos:end="51:14">raddr</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <name pos:start="51:18" pos:end="51:22">vaddr</name></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:35"><expr pos:start="59:5" pos:end="59:34"><name pos:start="59:5" pos:end="59:9">level</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <name pos:start="59:13" pos:end="59:16">asce</name> <operator pos:start="59:18" pos:end="59:18">&amp;</operator> <name pos:start="59:20" pos:end="59:34">_ASCE_TYPE_MASK</name></expr>;</expr_stmt>

    <switch pos:start="61:5" pos:end="147:5">switch <condition pos:start="61:12" pos:end="61:18">(<expr pos:start="61:13" pos:end="61:17"><name pos:start="61:13" pos:end="61:17">level</name></expr>)</condition> <block pos:start="61:20" pos:end="147:5">{<block_content pos:start="63:5" pos:end="145:14">

    <case pos:start="63:5" pos:end="63:28">case <expr pos:start="63:10" pos:end="63:27"><name pos:start="63:10" pos:end="63:27">_ASCE_TYPE_REGION1</name></expr>:</case>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:56">(<expr pos:start="65:13" pos:end="65:55"><operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:18">vaddr</name> <operator pos:start="65:20" pos:end="65:21">&gt;&gt;</operator> <literal type="number" pos:start="65:23" pos:end="65:24">62</literal><operator pos:start="65:25" pos:end="65:25">)</operator> <operator pos:start="65:27" pos:end="65:27">&gt;</operator> <operator pos:start="65:29" pos:end="65:29">(</operator><name pos:start="65:30" pos:end="65:33">asce</name> <operator pos:start="65:35" pos:end="65:35">&amp;</operator> <name pos:start="65:37" pos:end="65:54">_ASCE_TABLE_LENGTH</name><operator pos:start="65:55" pos:end="65:55">)</operator></expr>)</condition> <block pos:start="65:58" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:22">

            <expr_stmt pos:start="67:13" pos:end="67:78"><expr pos:start="67:13" pos:end="67:77"><call pos:start="67:13" pos:end="67:77"><name pos:start="67:13" pos:end="67:30">trigger_page_fault</name><argument_list pos:start="67:31" pos:end="67:77">(<argument pos:start="67:32" pos:end="67:34"><expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:34">env</name></expr></argument>, <argument pos:start="67:37" pos:end="67:41"><expr pos:start="67:37" pos:end="67:41"><name pos:start="67:37" pos:end="67:41">vaddr</name></expr></argument>, <argument pos:start="67:44" pos:end="67:62"><expr pos:start="67:44" pos:end="67:62"><name pos:start="67:44" pos:end="67:62">PGM_REG_FIRST_TRANS</name></expr></argument>, <argument pos:start="67:65" pos:end="67:67"><expr pos:start="67:65" pos:end="67:67"><name pos:start="67:65" pos:end="67:67">asc</name></expr></argument>, <argument pos:start="67:70" pos:end="67:71"><expr pos:start="67:70" pos:end="67:71"><name pos:start="67:70" pos:end="67:71">rw</name></expr></argument>, <argument pos:start="67:74" pos:end="67:76"><expr pos:start="67:74" pos:end="67:76"><name pos:start="67:74" pos:end="67:76">exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:22">return <expr pos:start="69:20" pos:end="69:21"><operator pos:start="69:20" pos:end="69:20">-</operator><literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:28">case <expr pos:start="75:10" pos:end="75:27"><name pos:start="75:10" pos:end="75:27">_ASCE_TYPE_REGION2</name></expr>:</case>

        <if_stmt pos:start="77:9" pos:end="87:9"><if pos:start="77:9" pos:end="87:9">if <condition pos:start="77:12" pos:end="77:42">(<expr pos:start="77:13" pos:end="77:41"><name pos:start="77:13" pos:end="77:17">vaddr</name> <operator pos:start="77:19" pos:end="77:19">&amp;</operator> <literal type="number" pos:start="77:21" pos:end="77:41">0xffe0000000000000ULL</literal></expr>)</condition> <block pos:start="77:44" pos:end="87:9">{<block_content pos:start="79:13" pos:end="85:22">

            <expr_stmt pos:start="79:13" pos:end="81:65"><expr pos:start="79:13" pos:end="81:64"><call pos:start="79:13" pos:end="81:64"><name pos:start="79:13" pos:end="79:19">DPRINTF</name><argument_list pos:start="79:20" pos:end="81:64">(<argument pos:start="79:21" pos:end="81:46"><expr pos:start="79:21" pos:end="81:46"><literal type="string" pos:start="79:21" pos:end="79:49">"%s: vaddr doesn't fit 0x%16"</literal> <name pos:start="79:51" pos:end="79:56">PRIx64</name>

                    <literal type="string" pos:start="81:21" pos:end="81:46">" 0xffe0000000000000ULL\n"</literal></expr></argument>, <argument pos:start="81:49" pos:end="81:56"><expr pos:start="81:49" pos:end="81:56"><name pos:start="81:49" pos:end="81:56">__func__</name></expr></argument>, <argument pos:start="81:59" pos:end="81:63"><expr pos:start="81:59" pos:end="81:63"><name pos:start="81:59" pos:end="81:63">vaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:73"><expr pos:start="83:13" pos:end="83:72"><call pos:start="83:13" pos:end="83:72"><name pos:start="83:13" pos:end="83:30">trigger_page_fault</name><argument_list pos:start="83:31" pos:end="83:72">(<argument pos:start="83:32" pos:end="83:34"><expr pos:start="83:32" pos:end="83:34"><name pos:start="83:32" pos:end="83:34">env</name></expr></argument>, <argument pos:start="83:37" pos:end="83:41"><expr pos:start="83:37" pos:end="83:41"><name pos:start="83:37" pos:end="83:41">vaddr</name></expr></argument>, <argument pos:start="83:44" pos:end="83:57"><expr pos:start="83:44" pos:end="83:57"><name pos:start="83:44" pos:end="83:57">PGM_TRANS_SPEC</name></expr></argument>, <argument pos:start="83:60" pos:end="83:62"><expr pos:start="83:60" pos:end="83:62"><name pos:start="83:60" pos:end="83:62">asc</name></expr></argument>, <argument pos:start="83:65" pos:end="83:66"><expr pos:start="83:65" pos:end="83:66"><name pos:start="83:65" pos:end="83:66">rw</name></expr></argument>, <argument pos:start="83:69" pos:end="83:71"><expr pos:start="83:69" pos:end="83:71"><name pos:start="83:69" pos:end="83:71">exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="85:13" pos:end="85:22">return <expr pos:start="85:20" pos:end="85:21"><operator pos:start="85:20" pos:end="85:20">-</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:60">(<expr pos:start="89:13" pos:end="89:59"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:18">vaddr</name> <operator pos:start="89:20" pos:end="89:21">&gt;&gt;</operator> <literal type="number" pos:start="89:23" pos:end="89:24">51</literal> <operator pos:start="89:26" pos:end="89:26">&amp;</operator> <literal type="number" pos:start="89:28" pos:end="89:28">3</literal><operator pos:start="89:29" pos:end="89:29">)</operator> <operator pos:start="89:31" pos:end="89:31">&gt;</operator> <operator pos:start="89:33" pos:end="89:33">(</operator><name pos:start="89:34" pos:end="89:37">asce</name> <operator pos:start="89:39" pos:end="89:39">&amp;</operator> <name pos:start="89:41" pos:end="89:58">_ASCE_TABLE_LENGTH</name><operator pos:start="89:59" pos:end="89:59">)</operator></expr>)</condition> <block pos:start="89:62" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:22">

            <expr_stmt pos:start="91:13" pos:end="91:76"><expr pos:start="91:13" pos:end="91:75"><call pos:start="91:13" pos:end="91:75"><name pos:start="91:13" pos:end="91:30">trigger_page_fault</name><argument_list pos:start="91:31" pos:end="91:75">(<argument pos:start="91:32" pos:end="91:34"><expr pos:start="91:32" pos:end="91:34"><name pos:start="91:32" pos:end="91:34">env</name></expr></argument>, <argument pos:start="91:37" pos:end="91:41"><expr pos:start="91:37" pos:end="91:41"><name pos:start="91:37" pos:end="91:41">vaddr</name></expr></argument>, <argument pos:start="91:44" pos:end="91:60"><expr pos:start="91:44" pos:end="91:60"><name pos:start="91:44" pos:end="91:60">PGM_REG_SEC_TRANS</name></expr></argument>, <argument pos:start="91:63" pos:end="91:65"><expr pos:start="91:63" pos:end="91:65"><name pos:start="91:63" pos:end="91:65">asc</name></expr></argument>, <argument pos:start="91:68" pos:end="91:69"><expr pos:start="91:68" pos:end="91:69"><name pos:start="91:68" pos:end="91:69">rw</name></expr></argument>, <argument pos:start="91:72" pos:end="91:74"><expr pos:start="91:72" pos:end="91:74"><name pos:start="91:72" pos:end="91:74">exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="93:13" pos:end="93:22">return <expr pos:start="93:20" pos:end="93:21"><operator pos:start="93:20" pos:end="93:20">-</operator><literal type="number" pos:start="93:21" pos:end="93:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:28">case <expr pos:start="99:10" pos:end="99:27"><name pos:start="99:10" pos:end="99:27">_ASCE_TYPE_REGION3</name></expr>:</case>

        <if_stmt pos:start="101:9" pos:end="111:9"><if pos:start="101:9" pos:end="111:9">if <condition pos:start="101:12" pos:end="101:42">(<expr pos:start="101:13" pos:end="101:41"><name pos:start="101:13" pos:end="101:17">vaddr</name> <operator pos:start="101:19" pos:end="101:19">&amp;</operator> <literal type="number" pos:start="101:21" pos:end="101:41">0xfffffc0000000000ULL</literal></expr>)</condition> <block pos:start="101:44" pos:end="111:9">{<block_content pos:start="103:13" pos:end="109:22">

            <expr_stmt pos:start="103:13" pos:end="105:65"><expr pos:start="103:13" pos:end="105:64"><call pos:start="103:13" pos:end="105:64"><name pos:start="103:13" pos:end="103:19">DPRINTF</name><argument_list pos:start="103:20" pos:end="105:64">(<argument pos:start="103:21" pos:end="105:46"><expr pos:start="103:21" pos:end="105:46"><literal type="string" pos:start="103:21" pos:end="103:49">"%s: vaddr doesn't fit 0x%16"</literal> <name pos:start="103:51" pos:end="103:56">PRIx64</name>

                    <literal type="string" pos:start="105:21" pos:end="105:46">" 0xfffffc0000000000ULL\n"</literal></expr></argument>, <argument pos:start="105:49" pos:end="105:56"><expr pos:start="105:49" pos:end="105:56"><name pos:start="105:49" pos:end="105:56">__func__</name></expr></argument>, <argument pos:start="105:59" pos:end="105:63"><expr pos:start="105:59" pos:end="105:63"><name pos:start="105:59" pos:end="105:63">vaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:73"><expr pos:start="107:13" pos:end="107:72"><call pos:start="107:13" pos:end="107:72"><name pos:start="107:13" pos:end="107:30">trigger_page_fault</name><argument_list pos:start="107:31" pos:end="107:72">(<argument pos:start="107:32" pos:end="107:34"><expr pos:start="107:32" pos:end="107:34"><name pos:start="107:32" pos:end="107:34">env</name></expr></argument>, <argument pos:start="107:37" pos:end="107:41"><expr pos:start="107:37" pos:end="107:41"><name pos:start="107:37" pos:end="107:41">vaddr</name></expr></argument>, <argument pos:start="107:44" pos:end="107:57"><expr pos:start="107:44" pos:end="107:57"><name pos:start="107:44" pos:end="107:57">PGM_TRANS_SPEC</name></expr></argument>, <argument pos:start="107:60" pos:end="107:62"><expr pos:start="107:60" pos:end="107:62"><name pos:start="107:60" pos:end="107:62">asc</name></expr></argument>, <argument pos:start="107:65" pos:end="107:66"><expr pos:start="107:65" pos:end="107:66"><name pos:start="107:65" pos:end="107:66">rw</name></expr></argument>, <argument pos:start="107:69" pos:end="107:71"><expr pos:start="107:69" pos:end="107:71"><name pos:start="107:69" pos:end="107:71">exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="109:13" pos:end="109:22">return <expr pos:start="109:20" pos:end="109:21"><operator pos:start="109:20" pos:end="109:20">-</operator><literal type="number" pos:start="109:21" pos:end="109:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="113:9" pos:end="119:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:60">(<expr pos:start="113:13" pos:end="113:59"><operator pos:start="113:13" pos:end="113:13">(</operator><name pos:start="113:14" pos:end="113:18">vaddr</name> <operator pos:start="113:20" pos:end="113:21">&gt;&gt;</operator> <literal type="number" pos:start="113:23" pos:end="113:24">40</literal> <operator pos:start="113:26" pos:end="113:26">&amp;</operator> <literal type="number" pos:start="113:28" pos:end="113:28">3</literal><operator pos:start="113:29" pos:end="113:29">)</operator> <operator pos:start="113:31" pos:end="113:31">&gt;</operator> <operator pos:start="113:33" pos:end="113:33">(</operator><name pos:start="113:34" pos:end="113:37">asce</name> <operator pos:start="113:39" pos:end="113:39">&amp;</operator> <name pos:start="113:41" pos:end="113:58">_ASCE_TABLE_LENGTH</name><operator pos:start="113:59" pos:end="113:59">)</operator></expr>)</condition> <block pos:start="113:62" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:22">

            <expr_stmt pos:start="115:13" pos:end="115:78"><expr pos:start="115:13" pos:end="115:77"><call pos:start="115:13" pos:end="115:77"><name pos:start="115:13" pos:end="115:30">trigger_page_fault</name><argument_list pos:start="115:31" pos:end="115:77">(<argument pos:start="115:32" pos:end="115:34"><expr pos:start="115:32" pos:end="115:34"><name pos:start="115:32" pos:end="115:34">env</name></expr></argument>, <argument pos:start="115:37" pos:end="115:41"><expr pos:start="115:37" pos:end="115:41"><name pos:start="115:37" pos:end="115:41">vaddr</name></expr></argument>, <argument pos:start="115:44" pos:end="115:62"><expr pos:start="115:44" pos:end="115:62"><name pos:start="115:44" pos:end="115:62">PGM_REG_THIRD_TRANS</name></expr></argument>, <argument pos:start="115:65" pos:end="115:67"><expr pos:start="115:65" pos:end="115:67"><name pos:start="115:65" pos:end="115:67">asc</name></expr></argument>, <argument pos:start="115:70" pos:end="115:71"><expr pos:start="115:70" pos:end="115:71"><name pos:start="115:70" pos:end="115:71">rw</name></expr></argument>, <argument pos:start="115:74" pos:end="115:76"><expr pos:start="115:74" pos:end="115:76"><name pos:start="115:74" pos:end="115:76">exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="117:13" pos:end="117:22">return <expr pos:start="117:20" pos:end="117:21"><operator pos:start="117:20" pos:end="117:20">-</operator><literal type="number" pos:start="117:21" pos:end="117:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:28">case <expr pos:start="123:10" pos:end="123:27"><name pos:start="123:10" pos:end="123:27">_ASCE_TYPE_SEGMENT</name></expr>:</case>

        <if_stmt pos:start="125:9" pos:end="135:9"><if pos:start="125:9" pos:end="135:9">if <condition pos:start="125:12" pos:end="125:42">(<expr pos:start="125:13" pos:end="125:41"><name pos:start="125:13" pos:end="125:17">vaddr</name> <operator pos:start="125:19" pos:end="125:19">&amp;</operator> <literal type="number" pos:start="125:21" pos:end="125:41">0xffffffff80000000ULL</literal></expr>)</condition> <block pos:start="125:44" pos:end="135:9">{<block_content pos:start="127:13" pos:end="133:22">

            <expr_stmt pos:start="127:13" pos:end="129:65"><expr pos:start="127:13" pos:end="129:64"><call pos:start="127:13" pos:end="129:64"><name pos:start="127:13" pos:end="127:19">DPRINTF</name><argument_list pos:start="127:20" pos:end="129:64">(<argument pos:start="127:21" pos:end="129:46"><expr pos:start="127:21" pos:end="129:46"><literal type="string" pos:start="127:21" pos:end="127:49">"%s: vaddr doesn't fit 0x%16"</literal> <name pos:start="127:51" pos:end="127:56">PRIx64</name>

                    <literal type="string" pos:start="129:21" pos:end="129:46">" 0xffffffff80000000ULL\n"</literal></expr></argument>, <argument pos:start="129:49" pos:end="129:56"><expr pos:start="129:49" pos:end="129:56"><name pos:start="129:49" pos:end="129:56">__func__</name></expr></argument>, <argument pos:start="129:59" pos:end="129:63"><expr pos:start="129:59" pos:end="129:63"><name pos:start="129:59" pos:end="129:63">vaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:73"><expr pos:start="131:13" pos:end="131:72"><call pos:start="131:13" pos:end="131:72"><name pos:start="131:13" pos:end="131:30">trigger_page_fault</name><argument_list pos:start="131:31" pos:end="131:72">(<argument pos:start="131:32" pos:end="131:34"><expr pos:start="131:32" pos:end="131:34"><name pos:start="131:32" pos:end="131:34">env</name></expr></argument>, <argument pos:start="131:37" pos:end="131:41"><expr pos:start="131:37" pos:end="131:41"><name pos:start="131:37" pos:end="131:41">vaddr</name></expr></argument>, <argument pos:start="131:44" pos:end="131:57"><expr pos:start="131:44" pos:end="131:57"><name pos:start="131:44" pos:end="131:57">PGM_TRANS_SPEC</name></expr></argument>, <argument pos:start="131:60" pos:end="131:62"><expr pos:start="131:60" pos:end="131:62"><name pos:start="131:60" pos:end="131:62">asc</name></expr></argument>, <argument pos:start="131:65" pos:end="131:66"><expr pos:start="131:65" pos:end="131:66"><name pos:start="131:65" pos:end="131:66">rw</name></expr></argument>, <argument pos:start="131:69" pos:end="131:71"><expr pos:start="131:69" pos:end="131:71"><name pos:start="131:69" pos:end="131:71">exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="133:13" pos:end="133:22">return <expr pos:start="133:20" pos:end="133:21"><operator pos:start="133:20" pos:end="133:20">-</operator><literal type="number" pos:start="133:21" pos:end="133:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="137:9" pos:end="143:9"><if pos:start="137:9" pos:end="143:9">if <condition pos:start="137:12" pos:end="137:60">(<expr pos:start="137:13" pos:end="137:59"><operator pos:start="137:13" pos:end="137:13">(</operator><name pos:start="137:14" pos:end="137:18">vaddr</name> <operator pos:start="137:20" pos:end="137:21">&gt;&gt;</operator> <literal type="number" pos:start="137:23" pos:end="137:24">29</literal> <operator pos:start="137:26" pos:end="137:26">&amp;</operator> <literal type="number" pos:start="137:28" pos:end="137:28">3</literal><operator pos:start="137:29" pos:end="137:29">)</operator> <operator pos:start="137:31" pos:end="137:31">&gt;</operator> <operator pos:start="137:33" pos:end="137:33">(</operator><name pos:start="137:34" pos:end="137:37">asce</name> <operator pos:start="137:39" pos:end="137:39">&amp;</operator> <name pos:start="137:41" pos:end="137:58">_ASCE_TABLE_LENGTH</name><operator pos:start="137:59" pos:end="137:59">)</operator></expr>)</condition> <block pos:start="137:62" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:22">

            <expr_stmt pos:start="139:13" pos:end="139:76"><expr pos:start="139:13" pos:end="139:75"><call pos:start="139:13" pos:end="139:75"><name pos:start="139:13" pos:end="139:30">trigger_page_fault</name><argument_list pos:start="139:31" pos:end="139:75">(<argument pos:start="139:32" pos:end="139:34"><expr pos:start="139:32" pos:end="139:34"><name pos:start="139:32" pos:end="139:34">env</name></expr></argument>, <argument pos:start="139:37" pos:end="139:41"><expr pos:start="139:37" pos:end="139:41"><name pos:start="139:37" pos:end="139:41">vaddr</name></expr></argument>, <argument pos:start="139:44" pos:end="139:60"><expr pos:start="139:44" pos:end="139:60"><name pos:start="139:44" pos:end="139:60">PGM_SEGMENT_TRANS</name></expr></argument>, <argument pos:start="139:63" pos:end="139:65"><expr pos:start="139:63" pos:end="139:65"><name pos:start="139:63" pos:end="139:65">asc</name></expr></argument>, <argument pos:start="139:68" pos:end="139:69"><expr pos:start="139:68" pos:end="139:69"><name pos:start="139:68" pos:end="139:69">rw</name></expr></argument>, <argument pos:start="139:72" pos:end="139:74"><expr pos:start="139:72" pos:end="139:74"><name pos:start="139:72" pos:end="139:74">exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="141:13" pos:end="141:22">return <expr pos:start="141:20" pos:end="141:21"><operator pos:start="141:20" pos:end="141:20">-</operator><literal type="number" pos:start="141:21" pos:end="141:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="145:9" pos:end="145:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="151:5" pos:end="153:34"><expr pos:start="151:5" pos:end="153:33"><name pos:start="151:5" pos:end="151:5">r</name> <operator pos:start="151:7" pos:end="151:7">=</operator> <call pos:start="151:9" pos:end="153:33"><name pos:start="151:9" pos:end="151:28">mmu_translate_region</name><argument_list pos:start="151:29" pos:end="153:33">(<argument pos:start="151:30" pos:end="151:32"><expr pos:start="151:30" pos:end="151:32"><name pos:start="151:30" pos:end="151:32">env</name></expr></argument>, <argument pos:start="151:35" pos:end="151:39"><expr pos:start="151:35" pos:end="151:39"><name pos:start="151:35" pos:end="151:39">vaddr</name></expr></argument>, <argument pos:start="151:42" pos:end="151:44"><expr pos:start="151:42" pos:end="151:44"><name pos:start="151:42" pos:end="151:44">asc</name></expr></argument>, <argument pos:start="151:47" pos:end="151:50"><expr pos:start="151:47" pos:end="151:50"><name pos:start="151:47" pos:end="151:50">asce</name></expr></argument>, <argument pos:start="151:53" pos:end="151:57"><expr pos:start="151:53" pos:end="151:57"><name pos:start="151:53" pos:end="151:57">level</name></expr></argument>, <argument pos:start="151:60" pos:end="151:64"><expr pos:start="151:60" pos:end="151:64"><name pos:start="151:60" pos:end="151:64">raddr</name></expr></argument>, <argument pos:start="151:67" pos:end="151:71"><expr pos:start="151:67" pos:end="151:71"><name pos:start="151:67" pos:end="151:71">flags</name></expr></argument>, <argument pos:start="151:74" pos:end="151:75"><expr pos:start="151:74" pos:end="151:75"><name pos:start="151:74" pos:end="151:75">rw</name></expr></argument>,

                             <argument pos:start="153:30" pos:end="153:32"><expr pos:start="153:30" pos:end="153:32"><name pos:start="153:30" pos:end="153:32">exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="161:5"><if pos:start="155:5" pos:end="161:5">if <condition pos:start="155:8" pos:end="155:44">(<expr pos:start="155:9" pos:end="155:43"><operator pos:start="155:9" pos:end="155:9">(</operator><name pos:start="155:10" pos:end="155:11">rw</name> <operator pos:start="155:13" pos:end="155:14">==</operator> <literal type="number" pos:start="155:16" pos:end="155:16">1</literal><operator pos:start="155:17" pos:end="155:17">)</operator> <operator pos:start="155:19" pos:end="155:20">&amp;&amp;</operator> <operator pos:start="155:22" pos:end="155:22">!</operator><operator pos:start="155:23" pos:end="155:23">(</operator><operator pos:start="155:24" pos:end="155:24">*</operator><name pos:start="155:25" pos:end="155:29">flags</name> <operator pos:start="155:31" pos:end="155:31">&amp;</operator> <name pos:start="155:33" pos:end="155:42">PAGE_WRITE</name><operator pos:start="155:43" pos:end="155:43">)</operator></expr>)</condition> <block pos:start="155:46" pos:end="161:5">{<block_content pos:start="157:9" pos:end="159:18">

        <expr_stmt pos:start="157:9" pos:end="157:53"><expr pos:start="157:9" pos:end="157:52"><call pos:start="157:9" pos:end="157:52"><name pos:start="157:9" pos:end="157:26">trigger_prot_fault</name><argument_list pos:start="157:27" pos:end="157:52">(<argument pos:start="157:28" pos:end="157:30"><expr pos:start="157:28" pos:end="157:30"><name pos:start="157:28" pos:end="157:30">env</name></expr></argument>, <argument pos:start="157:33" pos:end="157:37"><expr pos:start="157:33" pos:end="157:37"><name pos:start="157:33" pos:end="157:37">vaddr</name></expr></argument>, <argument pos:start="157:40" pos:end="157:42"><expr pos:start="157:40" pos:end="157:42"><name pos:start="157:40" pos:end="157:42">asc</name></expr></argument>, <argument pos:start="157:45" pos:end="157:46"><expr pos:start="157:45" pos:end="157:46"><name pos:start="157:45" pos:end="157:46">rw</name></expr></argument>, <argument pos:start="157:49" pos:end="157:51"><expr pos:start="157:49" pos:end="157:51"><name pos:start="157:49" pos:end="157:51">exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="159:9" pos:end="159:18">return <expr pos:start="159:16" pos:end="159:17"><operator pos:start="159:16" pos:end="159:16">-</operator><literal type="number" pos:start="159:17" pos:end="159:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="165:5" pos:end="165:13">return <expr pos:start="165:12" pos:end="165:12"><name pos:start="165:12" pos:end="165:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
