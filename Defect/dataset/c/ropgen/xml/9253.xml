<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9253.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:11">HELPER</name></type>(<name pos:start="1:13" pos:end="1:17">cas2w</name>)<parameter_list pos:start="1:19" pos:end="1:78">(<parameter pos:start="1:20" pos:end="1:36"><decl pos:start="1:20" pos:end="1:36"><type pos:start="1:20" pos:end="1:36"><name pos:start="1:20" pos:end="1:31">CPUM68KState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:46">uint32_t</name></type> <name pos:start="1:48" pos:end="1:51">regs</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:64"><decl pos:start="1:54" pos:end="1:64"><type pos:start="1:54" pos:end="1:64"><name pos:start="1:54" pos:end="1:61">uint32_t</name></type> <name pos:start="1:63" pos:end="1:64">a1</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:77"><decl pos:start="1:67" pos:end="1:77"><type pos:start="1:67" pos:end="1:77"><name pos:start="1:67" pos:end="1:74">uint32_t</name></type> <name pos:start="1:76" pos:end="1:77">a2</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:60">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">Dc1</name> <init pos:start="5:18" pos:end="5:40">= <expr pos:start="5:20" pos:end="5:40"><call pos:start="5:20" pos:end="5:40"><name pos:start="5:20" pos:end="5:28">extract32</name><argument_list pos:start="5:29" pos:end="5:40">(<argument pos:start="5:30" pos:end="5:33"><expr pos:start="5:30" pos:end="5:33"><name pos:start="5:30" pos:end="5:33">regs</name></expr></argument>, <argument pos:start="5:36" pos:end="5:36"><expr pos:start="5:36" pos:end="5:36"><literal type="number" pos:start="5:36" pos:end="5:36">9</literal></expr></argument>, <argument pos:start="5:39" pos:end="5:39"><expr pos:start="5:39" pos:end="5:39"><literal type="number" pos:start="5:39" pos:end="5:39">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">Dc2</name> <init pos:start="7:18" pos:end="7:40">= <expr pos:start="7:20" pos:end="7:40"><call pos:start="7:20" pos:end="7:40"><name pos:start="7:20" pos:end="7:28">extract32</name><argument_list pos:start="7:29" pos:end="7:40">(<argument pos:start="7:30" pos:end="7:33"><expr pos:start="7:30" pos:end="7:33"><name pos:start="7:30" pos:end="7:33">regs</name></expr></argument>, <argument pos:start="7:36" pos:end="7:36"><expr pos:start="7:36" pos:end="7:36"><literal type="number" pos:start="7:36" pos:end="7:36">6</literal></expr></argument>, <argument pos:start="7:39" pos:end="7:39"><expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">Du1</name> <init pos:start="9:18" pos:end="9:40">= <expr pos:start="9:20" pos:end="9:40"><call pos:start="9:20" pos:end="9:40"><name pos:start="9:20" pos:end="9:28">extract32</name><argument_list pos:start="9:29" pos:end="9:40">(<argument pos:start="9:30" pos:end="9:33"><expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:33">regs</name></expr></argument>, <argument pos:start="9:36" pos:end="9:36"><expr pos:start="9:36" pos:end="9:36"><literal type="number" pos:start="9:36" pos:end="9:36">3</literal></expr></argument>, <argument pos:start="9:39" pos:end="9:39"><expr pos:start="9:39" pos:end="9:39"><literal type="number" pos:start="9:39" pos:end="9:39">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">Du2</name> <init pos:start="11:18" pos:end="11:40">= <expr pos:start="11:20" pos:end="11:40"><call pos:start="11:20" pos:end="11:40"><name pos:start="11:20" pos:end="11:28">extract32</name><argument_list pos:start="11:29" pos:end="11:40">(<argument pos:start="11:30" pos:end="11:33"><expr pos:start="11:30" pos:end="11:33"><name pos:start="11:30" pos:end="11:33">regs</name></expr></argument>, <argument pos:start="11:36" pos:end="11:36"><expr pos:start="11:36" pos:end="11:36"><literal type="number" pos:start="11:36" pos:end="11:36">0</literal></expr></argument>, <argument pos:start="11:39" pos:end="11:39"><expr pos:start="11:39" pos:end="11:39"><literal type="number" pos:start="11:39" pos:end="11:39">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int16_t</name></type> <name pos:start="13:13" pos:end="13:14">c1</name> <init pos:start="13:16" pos:end="13:32">= <expr pos:start="13:18" pos:end="13:32"><name pos:start="13:18" pos:end="13:32"><name pos:start="13:18" pos:end="13:20">env</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:27">dregs</name><index pos:start="13:28" pos:end="13:32">[<expr pos:start="13:29" pos:end="13:31"><name pos:start="13:29" pos:end="13:31">Dc1</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int16_t</name></type> <name pos:start="15:13" pos:end="15:14">c2</name> <init pos:start="15:16" pos:end="15:32">= <expr pos:start="15:18" pos:end="15:32"><name pos:start="15:18" pos:end="15:32"><name pos:start="15:18" pos:end="15:20">env</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:27">dregs</name><index pos:start="15:28" pos:end="15:32">[<expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:31">Dc2</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int16_t</name></type> <name pos:start="17:13" pos:end="17:14">u1</name> <init pos:start="17:16" pos:end="17:32">= <expr pos:start="17:18" pos:end="17:32"><name pos:start="17:18" pos:end="17:32"><name pos:start="17:18" pos:end="17:20">env</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:27">dregs</name><index pos:start="17:28" pos:end="17:32">[<expr pos:start="17:29" pos:end="17:31"><name pos:start="17:29" pos:end="17:31">Du1</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int16_t</name></type> <name pos:start="19:13" pos:end="19:14">u2</name> <init pos:start="19:16" pos:end="19:32">= <expr pos:start="19:18" pos:end="19:32"><name pos:start="19:18" pos:end="19:32"><name pos:start="19:18" pos:end="19:20">env</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:27">dregs</name><index pos:start="19:28" pos:end="19:32">[<expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:31">Du2</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:14"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int16_t</name></type> <name pos:start="21:13" pos:end="21:14">l1</name></decl>, <decl pos:start="21:17" pos:end="21:18"><type ref="prev" pos:start="21:5" pos:end="21:11"/><name pos:start="21:17" pos:end="21:18">l2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:27"><decl pos:start="23:5" pos:end="23:26"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:13">uintptr_t</name></type> <name pos:start="23:15" pos:end="23:16">ra</name> <init pos:start="23:18" pos:end="23:26">= <expr pos:start="23:20" pos:end="23:26"><call pos:start="23:20" pos:end="23:26"><name pos:start="23:20" pos:end="23:24">GETPC</name><argument_list pos:start="23:25" pos:end="23:26">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="49:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:21">parallel_cpus</name></expr>)</condition> <block pos:start="27:24" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:51">

        <comment type="block" pos:start="29:9" pos:end="29:65">/* Tell the main loop we need to serialize this insn.  */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:51"><expr pos:start="31:9" pos:end="31:50"><call pos:start="31:9" pos:end="31:50"><name pos:start="31:9" pos:end="31:28">cpu_loop_exit_atomic</name><argument_list pos:start="31:29" pos:end="31:50">(<argument pos:start="31:30" pos:end="31:45"><expr pos:start="31:30" pos:end="31:45"><call pos:start="31:30" pos:end="31:45"><name pos:start="31:30" pos:end="31:40">ENV_GET_CPU</name><argument_list pos:start="31:41" pos:end="31:45">(<argument pos:start="31:42" pos:end="31:44"><expr pos:start="31:42" pos:end="31:44"><name pos:start="31:42" pos:end="31:44">env</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:48" pos:end="31:49"><expr pos:start="31:48" pos:end="31:49"><name pos:start="31:48" pos:end="31:49">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="49:5">else <block pos:start="33:12" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:9">

        <comment type="block" pos:start="35:9" pos:end="35:75">/* We're executing in a serial context -- no need to be atomic.  */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:43"><expr pos:start="37:9" pos:end="37:42"><name pos:start="37:9" pos:end="37:10">l1</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:42"><name pos:start="37:14" pos:end="37:29">cpu_lduw_data_ra</name><argument_list pos:start="37:30" pos:end="37:42">(<argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">env</name></expr></argument>, <argument pos:start="37:36" pos:end="37:37"><expr pos:start="37:36" pos:end="37:37"><name pos:start="37:36" pos:end="37:37">a1</name></expr></argument>, <argument pos:start="37:40" pos:end="37:41"><expr pos:start="37:40" pos:end="37:41"><name pos:start="37:40" pos:end="37:41">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:43"><expr pos:start="39:9" pos:end="39:42"><name pos:start="39:9" pos:end="39:10">l2</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:42"><name pos:start="39:14" pos:end="39:29">cpu_lduw_data_ra</name><argument_list pos:start="39:30" pos:end="39:42">(<argument pos:start="39:31" pos:end="39:33"><expr pos:start="39:31" pos:end="39:33"><name pos:start="39:31" pos:end="39:33">env</name></expr></argument>, <argument pos:start="39:36" pos:end="39:37"><expr pos:start="39:36" pos:end="39:37"><name pos:start="39:36" pos:end="39:37">a2</name></expr></argument>, <argument pos:start="39:40" pos:end="39:41"><expr pos:start="39:40" pos:end="39:41"><name pos:start="39:40" pos:end="39:41">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:33">(<expr pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:14">l1</name> <operator pos:start="41:16" pos:end="41:17">==</operator> <name pos:start="41:19" pos:end="41:20">c1</name> <operator pos:start="41:22" pos:end="41:23">&amp;&amp;</operator> <name pos:start="41:25" pos:end="41:26">l2</name> <operator pos:start="41:28" pos:end="41:29">==</operator> <name pos:start="41:31" pos:end="41:32">c2</name></expr>)</condition> <block pos:start="41:35" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:45">

            <expr_stmt pos:start="43:13" pos:end="43:45"><expr pos:start="43:13" pos:end="43:44"><call pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:27">cpu_stw_data_ra</name><argument_list pos:start="43:28" pos:end="43:44">(<argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:31">env</name></expr></argument>, <argument pos:start="43:34" pos:end="43:35"><expr pos:start="43:34" pos:end="43:35"><name pos:start="43:34" pos:end="43:35">a1</name></expr></argument>, <argument pos:start="43:38" pos:end="43:39"><expr pos:start="43:38" pos:end="43:39"><name pos:start="43:38" pos:end="43:39">u1</name></expr></argument>, <argument pos:start="43:42" pos:end="43:43"><expr pos:start="43:42" pos:end="43:43"><name pos:start="43:42" pos:end="43:43">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:45"><expr pos:start="45:13" pos:end="45:44"><call pos:start="45:13" pos:end="45:44"><name pos:start="45:13" pos:end="45:27">cpu_stw_data_ra</name><argument_list pos:start="45:28" pos:end="45:44">(<argument pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><name pos:start="45:29" pos:end="45:31">env</name></expr></argument>, <argument pos:start="45:34" pos:end="45:35"><expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">a2</name></expr></argument>, <argument pos:start="45:38" pos:end="45:39"><expr pos:start="45:38" pos:end="45:39"><name pos:start="45:38" pos:end="45:39">u2</name></expr></argument>, <argument pos:start="45:42" pos:end="45:43"><expr pos:start="45:42" pos:end="45:43"><name pos:start="45:42" pos:end="45:43">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="53:5" pos:end="65:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:17">(<expr pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:10">c1</name> <operator pos:start="53:12" pos:end="53:13">!=</operator> <name pos:start="53:15" pos:end="53:16">l1</name></expr>)</condition> <block pos:start="53:19" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:23">

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:11">env</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:17">cc_n</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:22">l1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:23"><expr pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:11">env</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:17">cc_v</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:22">c1</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="65:5">else <block pos:start="59:12" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:23">

        <expr_stmt pos:start="61:9" pos:end="61:23"><expr pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:11">env</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:17">cc_n</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:22">l2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:23"><expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:11">env</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:17">cc_v</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:22">c2</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:28"><expr pos:start="67:5" pos:end="67:27"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:7">env</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:14">cc_op</name></name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:27">CC_OP_CMPW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:60"><expr pos:start="69:5" pos:end="69:59"><name pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:7">env</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:14">dregs</name><index pos:start="69:15" pos:end="69:19">[<expr pos:start="69:16" pos:end="69:18"><name pos:start="69:16" pos:end="69:18">Dc1</name></expr>]</index></name> <operator pos:start="69:21" pos:end="69:21">=</operator> <call pos:start="69:23" pos:end="69:59"><name pos:start="69:23" pos:end="69:31">deposit32</name><argument_list pos:start="69:32" pos:end="69:59">(<argument pos:start="69:33" pos:end="69:47"><expr pos:start="69:33" pos:end="69:47"><name pos:start="69:33" pos:end="69:47"><name pos:start="69:33" pos:end="69:35">env</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:42">dregs</name><index pos:start="69:43" pos:end="69:47">[<expr pos:start="69:44" pos:end="69:46"><name pos:start="69:44" pos:end="69:46">Dc1</name></expr>]</index></name></expr></argument>, <argument pos:start="69:50" pos:end="69:50"><expr pos:start="69:50" pos:end="69:50"><literal type="number" pos:start="69:50" pos:end="69:50">0</literal></expr></argument>, <argument pos:start="69:53" pos:end="69:54"><expr pos:start="69:53" pos:end="69:54"><literal type="number" pos:start="69:53" pos:end="69:54">16</literal></expr></argument>, <argument pos:start="69:57" pos:end="69:58"><expr pos:start="69:57" pos:end="69:58"><name pos:start="69:57" pos:end="69:58">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:60"><expr pos:start="71:5" pos:end="71:59"><name pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:7">env</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:14">dregs</name><index pos:start="71:15" pos:end="71:19">[<expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">Dc2</name></expr>]</index></name> <operator pos:start="71:21" pos:end="71:21">=</operator> <call pos:start="71:23" pos:end="71:59"><name pos:start="71:23" pos:end="71:31">deposit32</name><argument_list pos:start="71:32" pos:end="71:59">(<argument pos:start="71:33" pos:end="71:47"><expr pos:start="71:33" pos:end="71:47"><name pos:start="71:33" pos:end="71:47"><name pos:start="71:33" pos:end="71:35">env</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:42">dregs</name><index pos:start="71:43" pos:end="71:47">[<expr pos:start="71:44" pos:end="71:46"><name pos:start="71:44" pos:end="71:46">Dc2</name></expr>]</index></name></expr></argument>, <argument pos:start="71:50" pos:end="71:50"><expr pos:start="71:50" pos:end="71:50"><literal type="number" pos:start="71:50" pos:end="71:50">0</literal></expr></argument>, <argument pos:start="71:53" pos:end="71:54"><expr pos:start="71:53" pos:end="71:54"><literal type="number" pos:start="71:53" pos:end="71:54">16</literal></expr></argument>, <argument pos:start="71:57" pos:end="71:58"><expr pos:start="71:57" pos:end="71:58"><name pos:start="71:57" pos:end="71:58">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
