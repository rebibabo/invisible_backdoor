<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5160.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:32">pxa2xx_gpio_read</name><parameter_list pos:start="1:33" pos:end="3:47">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:53">hwaddr</name></type> <name pos:start="1:55" pos:end="1:60">offset</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:46"><decl pos:start="3:34" pos:end="3:46"><type pos:start="3:34" pos:end="3:46"><name pos:start="3:34" pos:end="3:41">unsigned</name></type> <name pos:start="3:43" pos:end="3:46">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:13">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PXA2xxGPIOInfo</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:49">= <expr pos:start="7:25" pos:end="7:49"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:39">PXA2xxGPIOInfo</name> <operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator> <name pos:start="7:44" pos:end="7:49">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">bank</name></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:14">offset</name> <operator pos:start="13:16" pos:end="13:17">&gt;=</operator> <literal type="number" pos:start="13:19" pos:end="13:23">0x200</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:8">bank</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:35"><name pos:start="19:12" pos:end="19:27">pxa2xx_gpio_regs</name><index pos:start="19:28" pos:end="19:35">[<expr pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:34">offset</name></expr>]</index></name><operator pos:start="19:36" pos:end="19:36">.</operator><name pos:start="19:37" pos:end="19:40">bank</name></expr>;</expr_stmt>

    <switch pos:start="21:5" pos:end="95:5">switch <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:36"><name pos:start="21:13" pos:end="21:28">pxa2xx_gpio_regs</name><index pos:start="21:29" pos:end="21:36">[<expr pos:start="21:30" pos:end="21:35"><name pos:start="21:30" pos:end="21:35">offset</name></expr>]</index></name><operator pos:start="21:37" pos:end="21:37">.</operator><name pos:start="21:38" pos:end="21:40">reg</name></expr>)</condition> <block pos:start="21:43" pos:end="95:5">{<block_content pos:start="23:5" pos:end="93:71">

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><name pos:start="23:10" pos:end="23:13">GPDR</name></expr>:</case>		<comment type="block" pos:start="23:25" pos:end="23:58">/* GPIO Pin-Direction registers */</comment>

        <return pos:start="25:9" pos:end="25:28">return <expr pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:21">dir</name><index pos:start="25:22" pos:end="25:27">[<expr pos:start="25:23" pos:end="25:26"><name pos:start="25:23" pos:end="25:26">bank</name></expr>]</index></name></expr>;</return>



    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><name pos:start="29:10" pos:end="29:13">GPSR</name></expr>:</case>		<comment type="block" pos:start="29:25" pos:end="29:59">/* GPIO Pin-Output Set registers */</comment>

        <expr_stmt pos:start="31:9" pos:end="33:46"><expr pos:start="31:9" pos:end="33:45"><call pos:start="31:9" pos:end="33:45"><name pos:start="31:9" pos:end="31:14">printf</name><argument_list pos:start="31:15" pos:end="33:45">(<argument pos:start="31:16" pos:end="31:66"><expr pos:start="31:16" pos:end="31:66"><literal type="string" pos:start="31:16" pos:end="31:53">"%s: Read from a write-only register "</literal> <name pos:start="31:55" pos:end="31:61">REG_FMT</name> <literal type="string" pos:start="31:63" pos:end="31:66">"\n"</literal></expr></argument>,

                        <argument pos:start="33:25" pos:end="33:36"><expr pos:start="33:25" pos:end="33:36"><name pos:start="33:25" pos:end="33:36">__FUNCTION__</name></expr></argument>, <argument pos:start="33:39" pos:end="33:44"><expr pos:start="33:39" pos:end="33:44"><name pos:start="33:39" pos:end="33:44">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:29">return <expr pos:start="35:16" pos:end="35:28"><name pos:start="35:16" pos:end="35:28"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:22">gpsr</name><index pos:start="35:23" pos:end="35:28">[<expr pos:start="35:24" pos:end="35:27"><name pos:start="35:24" pos:end="35:27">bank</name></expr>]</index></name></expr>;</return>	<comment type="block" pos:start="35:33" pos:end="35:65">/* Return last written value.  */</comment>



    <case pos:start="39:5" pos:end="39:14">case <expr pos:start="39:10" pos:end="39:13"><name pos:start="39:10" pos:end="39:13">GPCR</name></expr>:</case>		<comment type="block" pos:start="39:25" pos:end="39:61">/* GPIO Pin-Output Clear registers */</comment>

        <expr_stmt pos:start="41:9" pos:end="43:46"><expr pos:start="41:9" pos:end="43:45"><call pos:start="41:9" pos:end="43:45"><name pos:start="41:9" pos:end="41:14">printf</name><argument_list pos:start="41:15" pos:end="43:45">(<argument pos:start="41:16" pos:end="41:66"><expr pos:start="41:16" pos:end="41:66"><literal type="string" pos:start="41:16" pos:end="41:53">"%s: Read from a write-only register "</literal> <name pos:start="41:55" pos:end="41:61">REG_FMT</name> <literal type="string" pos:start="41:63" pos:end="41:66">"\n"</literal></expr></argument>,

                        <argument pos:start="43:25" pos:end="43:36"><expr pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:36">__FUNCTION__</name></expr></argument>, <argument pos:start="43:39" pos:end="43:44"><expr pos:start="43:39" pos:end="43:44"><name pos:start="43:39" pos:end="43:44">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:21">return <expr pos:start="45:16" pos:end="45:20"><literal type="number" pos:start="45:16" pos:end="45:20">31337</literal></expr>;</return>		<comment type="block" pos:start="45:33" pos:end="45:78">/* Specified as unpredictable in the docs.  */</comment>



    <case pos:start="49:5" pos:end="49:14">case <expr pos:start="49:10" pos:end="49:13"><name pos:start="49:10" pos:end="49:13">GRER</name></expr>:</case>		<comment type="block" pos:start="49:25" pos:end="49:70">/* GPIO Rising-Edge Detect Enable registers */</comment>

        <return pos:start="51:9" pos:end="51:31">return <expr pos:start="51:16" pos:end="51:30"><name pos:start="51:16" pos:end="51:30"><name pos:start="51:16" pos:end="51:16">s</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:24">rising</name><index pos:start="51:25" pos:end="51:30">[<expr pos:start="51:26" pos:end="51:29"><name pos:start="51:26" pos:end="51:29">bank</name></expr>]</index></name></expr>;</return>



    <case pos:start="55:5" pos:end="55:14">case <expr pos:start="55:10" pos:end="55:13"><name pos:start="55:10" pos:end="55:13">GFER</name></expr>:</case>		<comment type="block" pos:start="55:25" pos:end="55:71">/* GPIO Falling-Edge Detect Enable registers */</comment>

        <return pos:start="57:9" pos:end="57:32">return <expr pos:start="57:16" pos:end="57:31"><name pos:start="57:16" pos:end="57:31"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:25">falling</name><index pos:start="57:26" pos:end="57:31">[<expr pos:start="57:27" pos:end="57:30"><name pos:start="57:27" pos:end="57:30">bank</name></expr>]</index></name></expr>;</return>



    <case pos:start="61:5" pos:end="61:16">case <expr pos:start="61:10" pos:end="61:15"><name pos:start="61:10" pos:end="61:15">GAFR_L</name></expr>:</case>	<comment type="block" pos:start="61:25" pos:end="61:63">/* GPIO Alternate Function registers */</comment>

        <return pos:start="63:9" pos:end="63:33">return <expr pos:start="63:16" pos:end="63:32"><name pos:start="63:16" pos:end="63:32"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:22">gafr</name><index pos:start="63:23" pos:end="63:32">[<expr pos:start="63:24" pos:end="63:31"><name pos:start="63:24" pos:end="63:27">bank</name> <operator pos:start="63:29" pos:end="63:29">*</operator> <literal type="number" pos:start="63:31" pos:end="63:31">2</literal></expr>]</index></name></expr>;</return>



    <case pos:start="67:5" pos:end="67:16">case <expr pos:start="67:10" pos:end="67:15"><name pos:start="67:10" pos:end="67:15">GAFR_U</name></expr>:</case>	<comment type="block" pos:start="67:25" pos:end="67:63">/* GPIO Alternate Function registers */</comment>

        <return pos:start="69:9" pos:end="69:37">return <expr pos:start="69:16" pos:end="69:36"><name pos:start="69:16" pos:end="69:36"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:22">gafr</name><index pos:start="69:23" pos:end="69:36">[<expr pos:start="69:24" pos:end="69:35"><name pos:start="69:24" pos:end="69:27">bank</name> <operator pos:start="69:29" pos:end="69:29">*</operator> <literal type="number" pos:start="69:31" pos:end="69:33">2</literal> <operator pos:start="69:33" pos:end="69:33">+</operator> <literal type="number" pos:start="69:35" pos:end="69:35">1</literal></expr>]</index></name></expr>;</return>



    <case pos:start="73:5" pos:end="73:14">case <expr pos:start="73:10" pos:end="73:13"><name pos:start="73:10" pos:end="73:13">GPLR</name></expr>:</case>		<comment type="block" pos:start="73:25" pos:end="73:54">/* GPIO Pin-Level registers */</comment>

        <expr_stmt pos:start="75:9" pos:end="77:50"><expr pos:start="75:9" pos:end="77:49"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">(</operator><name pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:24">olevel</name><index pos:start="75:25" pos:end="75:30">[<expr pos:start="75:26" pos:end="75:29"><name pos:start="75:26" pos:end="75:29">bank</name></expr>]</index></name> <operator pos:start="75:32" pos:end="75:32">&amp;</operator> <name pos:start="75:34" pos:end="75:45"><name pos:start="75:34" pos:end="75:34">s</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:39">dir</name><index pos:start="75:40" pos:end="75:45">[<expr pos:start="75:41" pos:end="75:44"><name pos:start="75:41" pos:end="75:44">bank</name></expr>]</index></name><operator pos:start="75:46" pos:end="75:46">)</operator> <operator pos:start="75:48" pos:end="75:48">|</operator>

                <operator pos:start="77:17" pos:end="77:17">(</operator><name pos:start="77:18" pos:end="77:32"><name pos:start="77:18" pos:end="77:18">s</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:26">ilevel</name><index pos:start="77:27" pos:end="77:32">[<expr pos:start="77:28" pos:end="77:31"><name pos:start="77:28" pos:end="77:31">bank</name></expr>]</index></name> <operator pos:start="77:34" pos:end="77:34">&amp;</operator> <operator pos:start="77:36" pos:end="77:36">~</operator><name pos:start="77:37" pos:end="77:48"><name pos:start="77:37" pos:end="77:37">s</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:42">dir</name><index pos:start="77:43" pos:end="77:48">[<expr pos:start="77:44" pos:end="77:47"><name pos:start="77:44" pos:end="77:47">bank</name></expr>]</index></name><operator pos:start="77:49" pos:end="77:49">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:39"><expr pos:start="79:9" pos:end="79:38"><call pos:start="79:9" pos:end="79:38"><name pos:start="79:9" pos:end="79:22">qemu_irq_raise</name><argument_list pos:start="79:23" pos:end="79:38">(<argument pos:start="79:24" pos:end="79:37"><expr pos:start="79:24" pos:end="79:37"><name pos:start="79:24" pos:end="79:37"><name pos:start="79:24" pos:end="79:24">s</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:37">read_notify</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:19">return <expr pos:start="81:16" pos:end="81:18"><name pos:start="81:16" pos:end="81:18">ret</name></expr>;</return>



    <case pos:start="85:5" pos:end="85:14">case <expr pos:start="85:10" pos:end="85:13"><name pos:start="85:10" pos:end="85:13">GEDR</name></expr>:</case>		<comment type="block" pos:start="85:25" pos:end="85:63">/* GPIO Edge Detect Status registers */</comment>

        <return pos:start="87:9" pos:end="87:31">return <expr pos:start="87:16" pos:end="87:30"><name pos:start="87:16" pos:end="87:30"><name pos:start="87:16" pos:end="87:16">s</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:24">status</name><index pos:start="87:25" pos:end="87:30">[<expr pos:start="87:26" pos:end="87:29"><name pos:start="87:26" pos:end="87:29">bank</name></expr>]</index></name></expr>;</return>



    <default pos:start="91:5" pos:end="91:12">default:</default>

        <expr_stmt pos:start="93:9" pos:end="93:71"><expr pos:start="93:9" pos:end="93:70"><call pos:start="93:9" pos:end="93:70"><name pos:start="93:9" pos:end="93:16">hw_error</name><argument_list pos:start="93:17" pos:end="93:70">(<argument pos:start="93:18" pos:end="93:47"><expr pos:start="93:18" pos:end="93:47"><literal type="string" pos:start="93:18" pos:end="93:34">"%s: Bad offset "</literal> <name pos:start="93:36" pos:end="93:42">REG_FMT</name> <literal type="string" pos:start="93:44" pos:end="93:47">"\n"</literal></expr></argument>, <argument pos:start="93:50" pos:end="93:61"><expr pos:start="93:50" pos:end="93:61"><name pos:start="93:50" pos:end="93:61">__FUNCTION__</name></expr></argument>, <argument pos:start="93:64" pos:end="93:69"><expr pos:start="93:64" pos:end="93:69"><name pos:start="93:64" pos:end="93:69">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
