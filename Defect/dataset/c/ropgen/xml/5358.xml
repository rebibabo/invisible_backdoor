<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5358.c" pos:tabs="8"><function pos:start="1:1" pos:end="233:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">svq1_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:54">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, 

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:55">data_size</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:39"><decl pos:start="5:30" pos:end="5:39"><type pos:start="5:30" pos:end="5:39"><name pos:start="5:30" pos:end="5:34">UINT8</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:39">buf</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:53"><decl pos:start="5:42" pos:end="5:53"><type pos:start="5:42" pos:end="5:53"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:53">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="233:1">{<block_content pos:start="9:3" pos:end="231:18">

  <decl_stmt pos:start="9:3" pos:end="9:37"><decl pos:start="9:3" pos:end="9:36"><type pos:start="9:3" pos:end="9:18"><name pos:start="9:3" pos:end="9:16">MpegEncContext</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name><init pos:start="9:20" pos:end="9:36">=<expr pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="11:3" pos:end="11:35"><decl pos:start="11:3" pos:end="11:23"><type pos:start="11:3" pos:end="11:16"><name pos:start="11:3" pos:end="11:9">uint8_t</name>      <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:23">current</name></decl>, <decl pos:start="11:26" pos:end="11:34"><type ref="prev" pos:start="11:3" pos:end="11:16"><modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:34">previous</name></decl>;</decl_stmt>

  <decl_stmt pos:start="13:3" pos:end="13:47"><decl pos:start="13:3" pos:end="13:22"><type pos:start="13:3" pos:end="13:5"><name pos:start="13:3" pos:end="13:5">int</name></type>		<name pos:start="13:17" pos:end="13:22">result</name></decl>, <decl pos:start="13:25" pos:end="13:25"><type ref="prev" pos:start="13:3" pos:end="13:5"/><name pos:start="13:25" pos:end="13:25">i</name></decl>, <decl pos:start="13:28" pos:end="13:28"><type ref="prev" pos:start="13:3" pos:end="13:5"/><name pos:start="13:28" pos:end="13:28">x</name></decl>, <decl pos:start="13:31" pos:end="13:31"><type ref="prev" pos:start="13:3" pos:end="13:5"/><name pos:start="13:31" pos:end="13:31">y</name></decl>, <decl pos:start="13:34" pos:end="13:38"><type ref="prev" pos:start="13:3" pos:end="13:5"/><name pos:start="13:34" pos:end="13:38">width</name></decl>, <decl pos:start="13:41" pos:end="13:46"><type ref="prev" pos:start="13:3" pos:end="13:5"/><name pos:start="13:41" pos:end="13:46">height</name></decl>;</decl_stmt>

  <decl_stmt pos:start="15:3" pos:end="15:23"><decl pos:start="15:3" pos:end="15:22"><type pos:start="15:3" pos:end="15:11"><name pos:start="15:3" pos:end="15:9">AVFrame</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:15">pict</name> <init pos:start="15:17" pos:end="15:22">= <expr pos:start="15:19" pos:end="15:22"><name pos:start="15:19" pos:end="15:22">data</name></expr></init></decl>;</decl_stmt> 



  <comment type="block" pos:start="19:3" pos:end="19:29">/* initialize bit buffer */</comment>

  <expr_stmt pos:start="21:3" pos:end="21:37"><expr pos:start="21:3" pos:end="21:36"><call pos:start="21:3" pos:end="21:36"><name pos:start="21:3" pos:end="21:15">init_get_bits</name><argument_list pos:start="21:16" pos:end="21:36">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><operator pos:start="21:17" pos:end="21:17">&amp;</operator><name pos:start="21:18" pos:end="21:22"><name pos:start="21:18" pos:end="21:18">s</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:22">gb</name></name></expr></argument>,<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">buf</name></expr></argument>,<argument pos:start="21:28" pos:end="21:35"><expr pos:start="21:28" pos:end="21:35"><name pos:start="21:28" pos:end="21:35">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <comment type="block" pos:start="25:3" pos:end="25:27">/* decode frame header */</comment>

  <expr_stmt pos:start="27:3" pos:end="27:36"><expr pos:start="27:3" pos:end="27:35"><name pos:start="27:3" pos:end="27:11"><name pos:start="27:3" pos:end="27:3">s</name><operator pos:start="27:4" pos:end="27:5">-&gt;</operator><name pos:start="27:6" pos:end="27:11">f_code</name></name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:35"><name pos:start="27:15" pos:end="27:22">get_bits</name> <argument_list pos:start="27:24" pos:end="27:35">(<argument pos:start="27:25" pos:end="27:30"><expr pos:start="27:25" pos:end="27:30"><operator pos:start="27:25" pos:end="27:25">&amp;</operator><name pos:start="27:26" pos:end="27:30"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:30">gb</name></name></expr></argument>, <argument pos:start="27:33" pos:end="27:34"><expr pos:start="27:33" pos:end="27:34"><literal type="number" pos:start="27:33" pos:end="27:34">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <if_stmt pos:start="31:3" pos:end="33:14"><if pos:start="31:3" pos:end="33:14">if <condition pos:start="31:6" pos:end="31:49">(<expr pos:start="31:7" pos:end="31:48"><operator pos:start="31:7" pos:end="31:7">(</operator><name pos:start="31:8" pos:end="31:16"><name pos:start="31:8" pos:end="31:8">s</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:16">f_code</name></name> <operator pos:start="31:18" pos:end="31:18">&amp;</operator> <operator pos:start="31:20" pos:end="31:20">~</operator><literal type="number" pos:start="31:21" pos:end="31:24">0x70</literal><operator pos:start="31:25" pos:end="31:25">)</operator> <operator pos:start="31:27" pos:end="31:28">||</operator> <operator pos:start="31:30" pos:end="31:30">!</operator><operator pos:start="31:31" pos:end="31:31">(</operator><name pos:start="31:32" pos:end="31:40"><name pos:start="31:32" pos:end="31:32">s</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:40">f_code</name></name> <operator pos:start="31:42" pos:end="31:42">&amp;</operator> <literal type="number" pos:start="31:44" pos:end="31:47">0x60</literal><operator pos:start="31:48" pos:end="31:48">)</operator></expr>)</condition><block type="pseudo" pos:start="33:5" pos:end="33:14"><block_content pos:start="33:5" pos:end="33:14">

    <return pos:start="33:5" pos:end="33:14">return <expr pos:start="33:12" pos:end="33:13"><operator pos:start="33:12" pos:end="33:12">-</operator><literal type="number" pos:start="33:13" pos:end="33:13">1</literal></expr>;</return></block_content></block></if></if_stmt>



  <comment type="block" pos:start="37:3" pos:end="37:37">/* swap some header bytes (why?) */</comment>

  <if_stmt pos:start="39:3" pos:end="51:3"><if pos:start="39:3" pos:end="51:3">if <condition pos:start="39:6" pos:end="39:24">(<expr pos:start="39:7" pos:end="39:23"><name pos:start="39:7" pos:end="39:15"><name pos:start="39:7" pos:end="39:7">s</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:15">f_code</name></name> <operator pos:start="39:17" pos:end="39:18">!=</operator> <literal type="number" pos:start="39:20" pos:end="39:23">0x20</literal></expr>)</condition> <block pos:start="39:26" pos:end="51:3">{<block_content pos:start="41:5" pos:end="49:5">

    <decl_stmt pos:start="41:5" pos:end="41:43"><decl pos:start="41:5" pos:end="41:42"><type pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:12">uint32_t</name> <modifier pos:start="41:14" pos:end="41:14">*</modifier></type><name pos:start="41:15" pos:end="41:17">src</name> <init pos:start="41:19" pos:end="41:42">= <expr pos:start="41:21" pos:end="41:42"><operator pos:start="41:21" pos:end="41:21">(</operator><name pos:start="41:22" pos:end="41:29">uint32_t</name> <operator pos:start="41:31" pos:end="41:31">*</operator><operator pos:start="41:32" pos:end="41:32">)</operator> <operator pos:start="41:34" pos:end="41:34">(</operator><name pos:start="41:35" pos:end="41:37">buf</name> <operator pos:start="41:39" pos:end="41:39">+</operator> <literal type="number" pos:start="41:41" pos:end="41:41">4</literal><operator pos:start="41:42" pos:end="41:42">)</operator></expr></init></decl>;</decl_stmt>



    <for pos:start="45:5" pos:end="49:5">for <control pos:start="45:9" pos:end="45:25">(<init pos:start="45:10" pos:end="45:13"><expr pos:start="45:10" pos:end="45:12"><name pos:start="45:10" pos:end="45:10">i</name><operator pos:start="45:11" pos:end="45:11">=</operator><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</init> <condition pos:start="45:15" pos:end="45:20"><expr pos:start="45:15" pos:end="45:19"><name pos:start="45:15" pos:end="45:15">i</name> <operator pos:start="45:17" pos:end="45:17">&lt;</operator> <literal type="number" pos:start="45:19" pos:end="45:19">4</literal></expr>;</condition> <incr pos:start="45:22" pos:end="45:24"><expr pos:start="45:22" pos:end="45:24"><name pos:start="45:22" pos:end="45:22">i</name><operator pos:start="45:23" pos:end="45:24">++</operator></expr></incr>)</control> <block pos:start="45:27" pos:end="49:5">{<block_content pos:start="47:7" pos:end="47:62">

      <expr_stmt pos:start="47:7" pos:end="47:62"><expr pos:start="47:7" pos:end="47:61"><name pos:start="47:7" pos:end="47:12"><name pos:start="47:7" pos:end="47:9">src</name><index pos:start="47:10" pos:end="47:12">[<expr pos:start="47:11" pos:end="47:11"><name pos:start="47:11" pos:end="47:11">i</name></expr>]</index></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <operator pos:start="47:16" pos:end="47:16">(</operator><operator pos:start="47:17" pos:end="47:17">(</operator><name pos:start="47:18" pos:end="47:23"><name pos:start="47:18" pos:end="47:20">src</name><index pos:start="47:21" pos:end="47:23">[<expr pos:start="47:22" pos:end="47:22"><name pos:start="47:22" pos:end="47:22">i</name></expr>]</index></name> <operator pos:start="47:25" pos:end="47:26">&lt;&lt;</operator> <literal type="number" pos:start="47:28" pos:end="47:29">16</literal><operator pos:start="47:30" pos:end="47:30">)</operator> <operator pos:start="47:32" pos:end="47:32">|</operator> <operator pos:start="47:34" pos:end="47:34">(</operator><name pos:start="47:35" pos:end="47:40"><name pos:start="47:35" pos:end="47:37">src</name><index pos:start="47:38" pos:end="47:40">[<expr pos:start="47:39" pos:end="47:39"><name pos:start="47:39" pos:end="47:39">i</name></expr>]</index></name> <operator pos:start="47:42" pos:end="47:43">&gt;&gt;</operator> <literal type="number" pos:start="47:45" pos:end="47:46">16</literal><operator pos:start="47:47" pos:end="47:47">)</operator><operator pos:start="47:48" pos:end="47:48">)</operator> <operator pos:start="47:50" pos:end="47:50">^</operator> <name pos:start="47:52" pos:end="47:61"><name pos:start="47:52" pos:end="47:54">src</name><index pos:start="47:55" pos:end="47:61">[<expr pos:start="47:56" pos:end="47:60"><literal type="number" pos:start="47:56" pos:end="47:56">7</literal> <operator pos:start="47:58" pos:end="47:58">-</operator> <name pos:start="47:60" pos:end="47:60">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

  </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="55:3" pos:end="55:48"><expr pos:start="55:3" pos:end="55:47"><name pos:start="55:3" pos:end="55:8">result</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <call pos:start="55:12" pos:end="55:47"><name pos:start="55:12" pos:end="55:35">svq1_decode_frame_header</name> <argument_list pos:start="55:37" pos:end="55:47">(<argument pos:start="55:38" pos:end="55:43"><expr pos:start="55:38" pos:end="55:43"><operator pos:start="55:38" pos:end="55:38">&amp;</operator><name pos:start="55:39" pos:end="55:43"><name pos:start="55:39" pos:end="55:39">s</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:43">gb</name></name></expr></argument>, <argument pos:start="55:46" pos:end="55:46"><expr pos:start="55:46" pos:end="55:46"><name pos:start="55:46" pos:end="55:46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <if_stmt pos:start="59:3" pos:end="71:3"><if pos:start="59:3" pos:end="71:3">if <condition pos:start="59:6" pos:end="59:18">(<expr pos:start="59:7" pos:end="59:17"><name pos:start="59:7" pos:end="59:12">result</name> <operator pos:start="59:14" pos:end="59:15">!=</operator> <literal type="number" pos:start="59:17" pos:end="59:17">0</literal></expr>)</condition>

  <block pos:start="61:3" pos:end="71:3">{<block_content pos:start="65:5" pos:end="69:18">

<cpp:ifdef pos:start="63:1" pos:end="63:17">#<cpp:directive pos:start="63:2" pos:end="63:6">ifdef</cpp:directive> <name pos:start="63:8" pos:end="63:17">DEBUG_SVQ1</name></cpp:ifdef>

    <expr_stmt pos:start="65:5" pos:end="68:0"><expr pos:start="65:5" pos:end="65:59"><call pos:start="65:5" pos:end="65:59"><name pos:start="65:5" pos:end="65:10">printf</name><argument_list pos:start="65:11" pos:end="65:59">(<argument pos:start="65:12" pos:end="65:51"><expr pos:start="65:12" pos:end="65:51"><literal type="string" pos:start="65:12" pos:end="65:51">"Error in svq1_decode_frame_header %i\n"</literal></expr></argument>,<argument pos:start="65:53" pos:end="65:58"><expr pos:start="65:53" pos:end="65:58"><name pos:start="65:53" pos:end="65:58">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>

    <return pos:start="69:5" pos:end="69:18">return <expr pos:start="69:12" pos:end="69:17"><name pos:start="69:12" pos:end="69:17">result</name></expr>;</return>

  </block_content>}</block></if></if_stmt>

  

  <comment type="line" pos:start="75:3" pos:end="75:72">//FIXME this avoids some confusion for "B frames" without 2 references</comment>

  <comment type="line" pos:start="77:3" pos:end="77:93">//this should be removed after libavcodec can handle more flaxible picture types &amp; ordering</comment>

  <if_stmt pos:start="79:3" pos:end="79:76"><if pos:start="79:3" pos:end="79:76">if<condition pos:start="79:5" pos:end="79:59">(<expr pos:start="79:6" pos:end="79:58"><name pos:start="79:6" pos:end="79:17"><name pos:start="79:6" pos:end="79:6">s</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:17">pict_type</name></name><operator pos:start="79:18" pos:end="79:19">==</operator><name pos:start="79:20" pos:end="79:25">B_TYPE</name> <operator pos:start="79:27" pos:end="79:28">&amp;&amp;</operator> <name pos:start="79:30" pos:end="79:52"><name pos:start="79:30" pos:end="79:30">s</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:44">last_picture</name><operator pos:start="79:45" pos:end="79:45">.</operator><name pos:start="79:46" pos:end="79:49">data</name><index pos:start="79:50" pos:end="79:52">[<expr pos:start="79:51" pos:end="79:51"><literal type="number" pos:start="79:51" pos:end="79:51">0</literal></expr>]</index></name><operator pos:start="79:53" pos:end="79:54">==</operator><name pos:start="79:55" pos:end="79:58">NULL</name></expr>)</condition><block type="pseudo" pos:start="79:61" pos:end="79:76"><block_content pos:start="79:61" pos:end="79:76"> <return pos:start="79:61" pos:end="79:76">return <expr pos:start="79:68" pos:end="79:75"><name pos:start="79:68" pos:end="79:75">buf_size</name></expr>;</return></block_content></block></if></if_stmt>

  

  <if_stmt pos:start="83:3" pos:end="83:62"><if pos:start="83:3" pos:end="83:62">if<condition pos:start="83:5" pos:end="83:45">(<expr pos:start="83:6" pos:end="83:44"><name pos:start="83:6" pos:end="83:20"><name pos:start="83:6" pos:end="83:10">avctx</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:20">hurry_up</name></name> <operator pos:start="83:22" pos:end="83:23">&amp;&amp;</operator> <name pos:start="83:25" pos:end="83:36"><name pos:start="83:25" pos:end="83:25">s</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:36">pict_type</name></name><operator pos:start="83:37" pos:end="83:38">==</operator><name pos:start="83:39" pos:end="83:44">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="83:47" pos:end="83:62"><block_content pos:start="83:47" pos:end="83:62"> <return pos:start="83:47" pos:end="83:62">return <expr pos:start="83:54" pos:end="83:61"><name pos:start="83:54" pos:end="83:61">buf_size</name></expr>;</return></block_content></block></if></if_stmt>



  <if_stmt pos:start="87:3" pos:end="89:16"><if pos:start="87:3" pos:end="89:16">if<condition pos:start="87:5" pos:end="87:35">(<expr pos:start="87:6" pos:end="87:34"><call pos:start="87:6" pos:end="87:30"><name pos:start="87:6" pos:end="87:20">MPV_frame_start</name><argument_list pos:start="87:21" pos:end="87:30">(<argument pos:start="87:22" pos:end="87:22"><expr pos:start="87:22" pos:end="87:22"><name pos:start="87:22" pos:end="87:22">s</name></expr></argument>, <argument pos:start="87:25" pos:end="87:29"><expr pos:start="87:25" pos:end="87:29"><name pos:start="87:25" pos:end="87:29">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="87:32" pos:end="87:32">&lt;</operator> <literal type="number" pos:start="87:34" pos:end="87:34">0</literal></expr>)</condition><block type="pseudo" pos:start="89:7" pos:end="89:16"><block_content pos:start="89:7" pos:end="89:16">

      <return pos:start="89:7" pos:end="89:16">return <expr pos:start="89:14" pos:end="89:15"><operator pos:start="89:14" pos:end="89:14">-</operator><literal type="number" pos:start="89:15" pos:end="89:15">1</literal></expr>;</return></block_content></block></if></if_stmt>



  <comment type="block" pos:start="93:3" pos:end="93:36">/* decode y, u and v components */</comment>

  <for pos:start="95:3" pos:end="215:3">for <control pos:start="95:7" pos:end="95:23">(<init pos:start="95:8" pos:end="95:11"><expr pos:start="95:8" pos:end="95:10"><name pos:start="95:8" pos:end="95:8">i</name><operator pos:start="95:9" pos:end="95:9">=</operator><literal type="number" pos:start="95:10" pos:end="95:10">0</literal></expr>;</init> <condition pos:start="95:13" pos:end="95:18"><expr pos:start="95:13" pos:end="95:17"><name pos:start="95:13" pos:end="95:13">i</name> <operator pos:start="95:15" pos:end="95:15">&lt;</operator> <literal type="number" pos:start="95:17" pos:end="95:17">3</literal></expr>;</condition> <incr pos:start="95:20" pos:end="95:22"><expr pos:start="95:20" pos:end="95:22"><name pos:start="95:20" pos:end="95:20">i</name><operator pos:start="95:21" pos:end="95:22">++</operator></expr></incr>)</control> <block pos:start="95:25" pos:end="215:3">{<block_content pos:start="97:5" pos:end="213:5">

    <decl_stmt pos:start="97:5" pos:end="97:17"><decl pos:start="97:5" pos:end="97:16"><type pos:start="97:5" pos:end="97:7"><name pos:start="97:5" pos:end="97:7">int</name></type> <name pos:start="97:9" pos:end="97:16">linesize</name></decl>;</decl_stmt>

    <if_stmt pos:start="99:5" pos:end="117:5"><if pos:start="99:5" pos:end="107:5">if <condition pos:start="99:8" pos:end="99:15">(<expr pos:start="99:9" pos:end="99:14"><name pos:start="99:9" pos:end="99:9">i</name> <operator pos:start="99:11" pos:end="99:12">==</operator> <literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>)</condition> <block pos:start="99:17" pos:end="107:5">{<block_content pos:start="101:7" pos:end="105:28">

      <expr_stmt pos:start="101:7" pos:end="101:33"><expr pos:start="101:7" pos:end="101:32"><name pos:start="101:7" pos:end="101:11">width</name>  <operator pos:start="101:14" pos:end="101:14">=</operator> <operator pos:start="101:16" pos:end="101:16">(</operator><name pos:start="101:17" pos:end="101:24"><name pos:start="101:17" pos:end="101:17">s</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:24">width</name></name><operator pos:start="101:25" pos:end="101:25">+</operator><literal type="number" pos:start="101:26" pos:end="101:27">15</literal><operator pos:start="101:28" pos:end="101:28">)</operator><operator pos:start="101:29" pos:end="101:29">&amp;</operator><operator pos:start="101:30" pos:end="101:30">~</operator><literal type="number" pos:start="101:31" pos:end="101:32">15</literal></expr>;</expr_stmt>

      <expr_stmt pos:start="103:7" pos:end="103:34"><expr pos:start="103:7" pos:end="103:33"><name pos:start="103:7" pos:end="103:12">height</name> <operator pos:start="103:14" pos:end="103:14">=</operator> <operator pos:start="103:16" pos:end="103:16">(</operator><name pos:start="103:17" pos:end="103:25"><name pos:start="103:17" pos:end="103:17">s</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:25">height</name></name><operator pos:start="103:26" pos:end="103:26">+</operator><literal type="number" pos:start="103:27" pos:end="103:28">15</literal><operator pos:start="103:29" pos:end="103:29">)</operator><operator pos:start="103:30" pos:end="103:30">&amp;</operator><operator pos:start="103:31" pos:end="103:31">~</operator><literal type="number" pos:start="103:32" pos:end="103:33">15</literal></expr>;</expr_stmt>

      <expr_stmt pos:start="105:7" pos:end="105:28"><expr pos:start="105:7" pos:end="105:27"><name pos:start="105:7" pos:end="105:14">linesize</name><operator pos:start="105:15" pos:end="105:15">=</operator> <name pos:start="105:17" pos:end="105:27"><name pos:start="105:17" pos:end="105:17">s</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:27">linesize</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="107:7" pos:end="117:5">else <block pos:start="107:12" pos:end="117:5">{<block_content pos:start="109:7" pos:end="115:30">

      <if_stmt pos:start="109:7" pos:end="109:41"><if pos:start="109:7" pos:end="109:41">if<condition pos:start="109:9" pos:end="109:34">(<expr pos:start="109:10" pos:end="109:33"><name pos:start="109:10" pos:end="109:17"><name pos:start="109:10" pos:end="109:10">s</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:17">flags</name></name><operator pos:start="109:18" pos:end="109:18">&amp;</operator><name pos:start="109:19" pos:end="109:33">CODEC_FLAG_GRAY</name></expr>)</condition><block type="pseudo" pos:start="109:36" pos:end="109:41"><block_content pos:start="109:36" pos:end="109:41"> <break pos:start="109:36" pos:end="109:41">break;</break></block_content></block></if></if_stmt>

      <expr_stmt pos:start="111:7" pos:end="111:35"><expr pos:start="111:7" pos:end="111:34"><name pos:start="111:7" pos:end="111:11">width</name>  <operator pos:start="111:14" pos:end="111:14">=</operator> <operator pos:start="111:16" pos:end="111:16">(</operator><name pos:start="111:17" pos:end="111:24"><name pos:start="111:17" pos:end="111:17">s</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:24">width</name></name><operator pos:start="111:25" pos:end="111:25">/</operator><literal type="number" pos:start="111:26" pos:end="111:27">4</literal><operator pos:start="111:27" pos:end="111:27">+</operator><literal type="number" pos:start="111:28" pos:end="111:29">15</literal><operator pos:start="111:30" pos:end="111:30">)</operator><operator pos:start="111:31" pos:end="111:31">&amp;</operator><operator pos:start="111:32" pos:end="111:32">~</operator><literal type="number" pos:start="111:33" pos:end="111:34">15</literal></expr>;</expr_stmt>

      <expr_stmt pos:start="113:7" pos:end="113:36"><expr pos:start="113:7" pos:end="113:35"><name pos:start="113:7" pos:end="113:12">height</name> <operator pos:start="113:14" pos:end="113:14">=</operator> <operator pos:start="113:16" pos:end="113:16">(</operator><name pos:start="113:17" pos:end="113:25"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:25">height</name></name><operator pos:start="113:26" pos:end="113:26">/</operator><literal type="number" pos:start="113:27" pos:end="113:28">4</literal><operator pos:start="113:28" pos:end="113:28">+</operator><literal type="number" pos:start="113:29" pos:end="113:30">15</literal><operator pos:start="113:31" pos:end="113:31">)</operator><operator pos:start="113:32" pos:end="113:32">&amp;</operator><operator pos:start="113:33" pos:end="113:33">~</operator><literal type="number" pos:start="113:34" pos:end="113:35">15</literal></expr>;</expr_stmt>

      <expr_stmt pos:start="115:7" pos:end="115:30"><expr pos:start="115:7" pos:end="115:29"><name pos:start="115:7" pos:end="115:14">linesize</name><operator pos:start="115:15" pos:end="115:15">=</operator> <name pos:start="115:17" pos:end="115:29"><name pos:start="115:17" pos:end="115:17">s</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:29">uvlinesize</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:42"><expr pos:start="121:5" pos:end="121:41"><name pos:start="121:5" pos:end="121:11">current</name>  <operator pos:start="121:14" pos:end="121:14">=</operator> <name pos:start="121:16" pos:end="121:41"><name pos:start="121:16" pos:end="121:16">s</name><operator pos:start="121:17" pos:end="121:18">-&gt;</operator><name pos:start="121:19" pos:end="121:33">current_picture</name><operator pos:start="121:34" pos:end="121:34">.</operator><name pos:start="121:35" pos:end="121:38">data</name><index pos:start="121:39" pos:end="121:41">[<expr pos:start="121:40" pos:end="121:40"><name pos:start="121:40" pos:end="121:40">i</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="125:5" pos:end="133:5"><if pos:start="125:5" pos:end="129:5">if<condition pos:start="125:7" pos:end="125:28">(<expr pos:start="125:8" pos:end="125:27"><name pos:start="125:8" pos:end="125:19"><name pos:start="125:8" pos:end="125:8">s</name><operator pos:start="125:9" pos:end="125:10">-&gt;</operator><name pos:start="125:11" pos:end="125:19">pict_type</name></name><operator pos:start="125:20" pos:end="125:21">==</operator><name pos:start="125:22" pos:end="125:27">B_TYPE</name></expr>)</condition><block pos:start="125:29" pos:end="129:5">{<block_content pos:start="127:9" pos:end="127:43">

        <expr_stmt pos:start="127:9" pos:end="127:43"><expr pos:start="127:9" pos:end="127:42"><name pos:start="127:9" pos:end="127:16">previous</name> <operator pos:start="127:18" pos:end="127:18">=</operator> <name pos:start="127:20" pos:end="127:42"><name pos:start="127:20" pos:end="127:20">s</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:34">next_picture</name><operator pos:start="127:35" pos:end="127:35">.</operator><name pos:start="127:36" pos:end="127:39">data</name><index pos:start="127:40" pos:end="127:42">[<expr pos:start="127:41" pos:end="127:41"><name pos:start="127:41" pos:end="127:41">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="129:6" pos:end="133:5">else<block pos:start="129:10" pos:end="133:5">{<block_content pos:start="131:9" pos:end="131:43">

        <expr_stmt pos:start="131:9" pos:end="131:43"><expr pos:start="131:9" pos:end="131:42"><name pos:start="131:9" pos:end="131:16">previous</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <name pos:start="131:20" pos:end="131:42"><name pos:start="131:20" pos:end="131:20">s</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:34">last_picture</name><operator pos:start="131:35" pos:end="131:35">.</operator><name pos:start="131:36" pos:end="131:39">data</name><index pos:start="131:40" pos:end="131:42">[<expr pos:start="131:41" pos:end="131:41"><name pos:start="131:41" pos:end="131:41">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="137:5" pos:end="213:5"><if pos:start="137:5" pos:end="167:5">if <condition pos:start="137:8" pos:end="137:31">(<expr pos:start="137:9" pos:end="137:30"><name pos:start="137:9" pos:end="137:20"><name pos:start="137:9" pos:end="137:9">s</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:20">pict_type</name></name> <operator pos:start="137:22" pos:end="137:23">==</operator> <name pos:start="137:25" pos:end="137:30">I_TYPE</name></expr>)</condition> <block pos:start="137:33" pos:end="167:5">{<block_content pos:start="141:7" pos:end="165:7">

      <comment type="block" pos:start="139:7" pos:end="139:20">/* keyframe */</comment>

      <for pos:start="141:7" pos:end="165:7">for <control pos:start="141:11" pos:end="141:34">(<init pos:start="141:12" pos:end="141:15"><expr pos:start="141:12" pos:end="141:14"><name pos:start="141:12" pos:end="141:12">y</name><operator pos:start="141:13" pos:end="141:13">=</operator><literal type="number" pos:start="141:14" pos:end="141:14">0</literal></expr>;</init> <condition pos:start="141:17" pos:end="141:27"><expr pos:start="141:17" pos:end="141:26"><name pos:start="141:17" pos:end="141:17">y</name> <operator pos:start="141:19" pos:end="141:19">&lt;</operator> <name pos:start="141:21" pos:end="141:26">height</name></expr>;</condition> <incr pos:start="141:29" pos:end="141:33"><expr pos:start="141:29" pos:end="141:33"><name pos:start="141:29" pos:end="141:29">y</name><operator pos:start="141:30" pos:end="141:31">+=</operator><literal type="number" pos:start="141:32" pos:end="141:33">16</literal></expr></incr>)</control> <block pos:start="141:36" pos:end="165:7">{<block_content pos:start="143:9" pos:end="163:31">

	<for pos:start="143:9" pos:end="161:9">for <control pos:start="143:13" pos:end="143:35">(<init pos:start="143:14" pos:end="143:17"><expr pos:start="143:14" pos:end="143:16"><name pos:start="143:14" pos:end="143:14">x</name><operator pos:start="143:15" pos:end="143:15">=</operator><literal type="number" pos:start="143:16" pos:end="143:16">0</literal></expr>;</init> <condition pos:start="143:19" pos:end="143:28"><expr pos:start="143:19" pos:end="143:27"><name pos:start="143:19" pos:end="143:19">x</name> <operator pos:start="143:21" pos:end="143:21">&lt;</operator> <name pos:start="143:23" pos:end="143:27">width</name></expr>;</condition> <incr pos:start="143:30" pos:end="143:34"><expr pos:start="143:30" pos:end="143:34"><name pos:start="143:30" pos:end="143:30">x</name><operator pos:start="143:31" pos:end="143:32">+=</operator><literal type="number" pos:start="143:33" pos:end="143:34">16</literal></expr></incr>)</control> <block pos:start="143:37" pos:end="161:9">{<block_content pos:start="145:11" pos:end="159:11">

	  <expr_stmt pos:start="145:11" pos:end="145:75"><expr pos:start="145:11" pos:end="145:74"><name pos:start="145:11" pos:end="145:16">result</name> <operator pos:start="145:18" pos:end="145:18">=</operator> <call pos:start="145:20" pos:end="145:74"><name pos:start="145:20" pos:end="145:42">svq1_decode_block_intra</name> <argument_list pos:start="145:44" pos:end="145:74">(<argument pos:start="145:45" pos:end="145:50"><expr pos:start="145:45" pos:end="145:50"><operator pos:start="145:45" pos:end="145:45">&amp;</operator><name pos:start="145:46" pos:end="145:50"><name pos:start="145:46" pos:end="145:46">s</name><operator pos:start="145:47" pos:end="145:48">-&gt;</operator><name pos:start="145:49" pos:end="145:50">gb</name></name></expr></argument>, <argument pos:start="145:53" pos:end="145:63"><expr pos:start="145:53" pos:end="145:63"><operator pos:start="145:53" pos:end="145:53">&amp;</operator><name pos:start="145:54" pos:end="145:63"><name pos:start="145:54" pos:end="145:60">current</name><index pos:start="145:61" pos:end="145:63">[<expr pos:start="145:62" pos:end="145:62"><name pos:start="145:62" pos:end="145:62">x</name></expr>]</index></name></expr></argument>, <argument pos:start="145:66" pos:end="145:73"><expr pos:start="145:66" pos:end="145:73"><name pos:start="145:66" pos:end="145:73">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	  <if_stmt pos:start="147:11" pos:end="159:11"><if pos:start="147:11" pos:end="159:11">if <condition pos:start="147:14" pos:end="147:26">(<expr pos:start="147:15" pos:end="147:25"><name pos:start="147:15" pos:end="147:20">result</name> <operator pos:start="147:22" pos:end="147:23">!=</operator> <literal type="number" pos:start="147:25" pos:end="147:25">0</literal></expr>)</condition>

	  <block pos:start="149:11" pos:end="159:11">{<block_content pos:start="153:13" pos:end="157:26">

<cpp:ifdef pos:start="151:1" pos:end="151:17">#<cpp:directive pos:start="151:2" pos:end="151:6">ifdef</cpp:directive> <name pos:start="151:8" pos:end="151:17">DEBUG_SVQ1</name></cpp:ifdef>

	    <expr_stmt pos:start="153:13" pos:end="156:0"><expr pos:start="153:13" pos:end="153:71"><call pos:start="153:13" pos:end="153:71"><name pos:start="153:13" pos:end="153:18">printf</name><argument_list pos:start="153:19" pos:end="153:71">(<argument pos:start="153:20" pos:end="153:63"><expr pos:start="153:20" pos:end="153:63"><literal type="string" pos:start="153:20" pos:end="153:63">"Error in svq1_decode_block %i (keyframe)\n"</literal></expr></argument>,<argument pos:start="153:65" pos:end="153:70"><expr pos:start="153:65" pos:end="153:70"><name pos:start="153:65" pos:end="153:70">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="155:1" pos:end="155:6">#<cpp:directive pos:start="155:2" pos:end="155:6">endif</cpp:directive></cpp:endif>

	    <return pos:start="157:13" pos:end="157:26">return <expr pos:start="157:20" pos:end="157:25"><name pos:start="157:20" pos:end="157:25">result</name></expr>;</return>

	  </block_content>}</block></if></if_stmt>

	</block_content>}</block></for>

	<expr_stmt pos:start="163:9" pos:end="163:31"><expr pos:start="163:9" pos:end="163:30"><name pos:start="163:9" pos:end="163:15">current</name> <operator pos:start="163:17" pos:end="163:18">+=</operator> <literal type="number" pos:start="163:20" pos:end="163:21">16</literal><operator pos:start="163:22" pos:end="163:22">*</operator><name pos:start="163:23" pos:end="163:30">linesize</name></expr>;</expr_stmt>

      </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="213:5">else <block pos:start="167:12" pos:end="213:5">{<block_content pos:start="169:7" pos:end="211:7">

      <decl_stmt pos:start="169:7" pos:end="169:32"><decl pos:start="169:7" pos:end="169:31"><type pos:start="169:7" pos:end="169:16"><name pos:start="169:7" pos:end="169:16">svq1_pmv_t</name></type> <name pos:start="169:18" pos:end="169:31"><name pos:start="169:18" pos:end="169:20">pmv</name><index pos:start="169:21" pos:end="169:31">[<expr pos:start="169:22" pos:end="169:30"><name pos:start="169:22" pos:end="169:26">width</name><operator pos:start="169:27" pos:end="169:27">/</operator><literal type="number" pos:start="169:28" pos:end="169:28">8</literal><operator pos:start="169:29" pos:end="169:29">+</operator><literal type="number" pos:start="169:30" pos:end="169:30">3</literal></expr>]</index></name></decl>;</decl_stmt>

      <comment type="block" pos:start="171:7" pos:end="171:23">/* delta frame */</comment>

      <expr_stmt pos:start="173:7" pos:end="173:62"><expr pos:start="173:7" pos:end="173:61"><call pos:start="173:7" pos:end="173:61"><name pos:start="173:7" pos:end="173:12">memset</name> <argument_list pos:start="173:14" pos:end="173:61">(<argument pos:start="173:15" pos:end="173:17"><expr pos:start="173:15" pos:end="173:17"><name pos:start="173:15" pos:end="173:17">pmv</name></expr></argument>, <argument pos:start="173:20" pos:end="173:20"><expr pos:start="173:20" pos:end="173:20"><literal type="number" pos:start="173:20" pos:end="173:20">0</literal></expr></argument>, <argument pos:start="173:23" pos:end="173:60"><expr pos:start="173:23" pos:end="173:60"><operator pos:start="173:23" pos:end="173:23">(</operator><operator pos:start="173:24" pos:end="173:24">(</operator><name pos:start="173:25" pos:end="173:29">width</name> <operator pos:start="173:31" pos:end="173:31">/</operator> <literal type="number" pos:start="173:33" pos:end="173:33">8</literal><operator pos:start="173:34" pos:end="173:34">)</operator> <operator pos:start="173:36" pos:end="173:36">+</operator> <literal type="number" pos:start="173:38" pos:end="173:38">3</literal><operator pos:start="173:39" pos:end="173:39">)</operator> <operator pos:start="173:41" pos:end="173:41">*</operator> <sizeof pos:start="173:43" pos:end="173:60">sizeof<argument_list pos:start="173:49" pos:end="173:60">(<argument pos:start="173:50" pos:end="173:59"><expr pos:start="173:50" pos:end="173:59"><name pos:start="173:50" pos:end="173:59">svq1_pmv_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <for pos:start="177:7" pos:end="211:7">for <control pos:start="177:11" pos:end="177:34">(<init pos:start="177:12" pos:end="177:15"><expr pos:start="177:12" pos:end="177:14"><name pos:start="177:12" pos:end="177:12">y</name><operator pos:start="177:13" pos:end="177:13">=</operator><literal type="number" pos:start="177:14" pos:end="177:14">0</literal></expr>;</init> <condition pos:start="177:17" pos:end="177:27"><expr pos:start="177:17" pos:end="177:26"><name pos:start="177:17" pos:end="177:17">y</name> <operator pos:start="177:19" pos:end="177:19">&lt;</operator> <name pos:start="177:21" pos:end="177:26">height</name></expr>;</condition> <incr pos:start="177:29" pos:end="177:33"><expr pos:start="177:29" pos:end="177:33"><name pos:start="177:29" pos:end="177:29">y</name><operator pos:start="177:30" pos:end="177:31">+=</operator><literal type="number" pos:start="177:32" pos:end="177:33">16</literal></expr></incr>)</control> <block pos:start="177:36" pos:end="211:7">{<block_content pos:start="179:9" pos:end="209:31">

	<for pos:start="179:9" pos:end="199:9">for <control pos:start="179:13" pos:end="179:35">(<init pos:start="179:14" pos:end="179:17"><expr pos:start="179:14" pos:end="179:16"><name pos:start="179:14" pos:end="179:14">x</name><operator pos:start="179:15" pos:end="179:15">=</operator><literal type="number" pos:start="179:16" pos:end="179:16">0</literal></expr>;</init> <condition pos:start="179:19" pos:end="179:28"><expr pos:start="179:19" pos:end="179:27"><name pos:start="179:19" pos:end="179:19">x</name> <operator pos:start="179:21" pos:end="179:21">&lt;</operator> <name pos:start="179:23" pos:end="179:27">width</name></expr>;</condition> <incr pos:start="179:30" pos:end="179:34"><expr pos:start="179:30" pos:end="179:34"><name pos:start="179:30" pos:end="179:30">x</name><operator pos:start="179:31" pos:end="179:32">+=</operator><literal type="number" pos:start="179:33" pos:end="179:34">16</literal></expr></incr>)</control> <block pos:start="179:37" pos:end="199:9">{<block_content pos:start="181:11" pos:end="197:11">

	  <expr_stmt pos:start="181:11" pos:end="183:65"><expr pos:start="181:11" pos:end="183:64"><name pos:start="181:11" pos:end="181:16">result</name> <operator pos:start="181:18" pos:end="181:18">=</operator> <call pos:start="181:20" pos:end="183:64"><name pos:start="181:20" pos:end="181:42">svq1_decode_delta_block</name> <argument_list pos:start="181:44" pos:end="183:64">(<argument pos:start="181:45" pos:end="181:45"><expr pos:start="181:45" pos:end="181:45"><name pos:start="181:45" pos:end="181:45">s</name></expr></argument>, <argument pos:start="181:48" pos:end="181:53"><expr pos:start="181:48" pos:end="181:53"><operator pos:start="181:48" pos:end="181:48">&amp;</operator><name pos:start="181:49" pos:end="181:53"><name pos:start="181:49" pos:end="181:49">s</name><operator pos:start="181:50" pos:end="181:51">-&gt;</operator><name pos:start="181:52" pos:end="181:53">gb</name></name></expr></argument>, <argument pos:start="181:56" pos:end="181:66"><expr pos:start="181:56" pos:end="181:66"><operator pos:start="181:56" pos:end="181:56">&amp;</operator><name pos:start="181:57" pos:end="181:66"><name pos:start="181:57" pos:end="181:63">current</name><index pos:start="181:64" pos:end="181:66">[<expr pos:start="181:65" pos:end="181:65"><name pos:start="181:65" pos:end="181:65">x</name></expr>]</index></name></expr></argument>, <argument pos:start="181:69" pos:end="181:76"><expr pos:start="181:69" pos:end="181:76"><name pos:start="181:69" pos:end="181:76">previous</name></expr></argument>,

					    <argument pos:start="183:45" pos:end="183:52"><expr pos:start="183:45" pos:end="183:52"><name pos:start="183:45" pos:end="183:52">linesize</name></expr></argument>, <argument pos:start="183:55" pos:end="183:57"><expr pos:start="183:55" pos:end="183:57"><name pos:start="183:55" pos:end="183:57">pmv</name></expr></argument>, <argument pos:start="183:60" pos:end="183:60"><expr pos:start="183:60" pos:end="183:60"><name pos:start="183:60" pos:end="183:60">x</name></expr></argument>, <argument pos:start="183:63" pos:end="183:63"><expr pos:start="183:63" pos:end="183:63"><name pos:start="183:63" pos:end="183:63">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	  <if_stmt pos:start="185:11" pos:end="197:11"><if pos:start="185:11" pos:end="197:11">if <condition pos:start="185:14" pos:end="185:26">(<expr pos:start="185:15" pos:end="185:25"><name pos:start="185:15" pos:end="185:20">result</name> <operator pos:start="185:22" pos:end="185:23">!=</operator> <literal type="number" pos:start="185:25" pos:end="185:25">0</literal></expr>)</condition>

	  <block pos:start="187:11" pos:end="197:11">{<block_content pos:start="191:5" pos:end="195:26">

<cpp:ifdef pos:start="189:1" pos:end="189:17">#<cpp:directive pos:start="189:2" pos:end="189:6">ifdef</cpp:directive> <name pos:start="189:8" pos:end="189:17">DEBUG_SVQ1</name></cpp:ifdef>

    <expr_stmt pos:start="191:5" pos:end="194:0"><expr pos:start="191:5" pos:end="191:58"><call pos:start="191:5" pos:end="191:58"><name pos:start="191:5" pos:end="191:10">printf</name><argument_list pos:start="191:11" pos:end="191:58">(<argument pos:start="191:12" pos:end="191:50"><expr pos:start="191:12" pos:end="191:50"><literal type="string" pos:start="191:12" pos:end="191:50">"Error in svq1_decode_delta_block %i\n"</literal></expr></argument>,<argument pos:start="191:52" pos:end="191:57"><expr pos:start="191:52" pos:end="191:57"><name pos:start="191:52" pos:end="191:57">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="193:1" pos:end="193:6">#<cpp:directive pos:start="193:2" pos:end="193:6">endif</cpp:directive></cpp:endif>

	    <return pos:start="195:13" pos:end="195:26">return <expr pos:start="195:20" pos:end="195:25"><name pos:start="195:20" pos:end="195:25">result</name></expr>;</return>

	  </block_content>}</block></if></if_stmt>

	</block_content>}</block></for>



	<expr_stmt pos:start="203:9" pos:end="205:21"><expr pos:start="203:9" pos:end="205:20"><name pos:start="203:9" pos:end="203:14"><name pos:start="203:9" pos:end="203:11">pmv</name><index pos:start="203:12" pos:end="203:14">[<expr pos:start="203:13" pos:end="203:13"><literal type="number" pos:start="203:13" pos:end="203:13">0</literal></expr>]</index></name><operator pos:start="203:15" pos:end="203:15">.</operator><name pos:start="203:16" pos:end="203:16">x</name> <operator pos:start="203:18" pos:end="203:18">=</operator>

	<name pos:start="205:9" pos:end="205:14"><name pos:start="205:9" pos:end="205:11">pmv</name><index pos:start="205:12" pos:end="205:14">[<expr pos:start="205:13" pos:end="205:13"><literal type="number" pos:start="205:13" pos:end="205:13">0</literal></expr>]</index></name><operator pos:start="205:15" pos:end="205:15">.</operator><name pos:start="205:16" pos:end="205:16">y</name> <operator pos:start="205:18" pos:end="205:18">=</operator> <literal type="number" pos:start="205:20" pos:end="205:20">0</literal></expr>;</expr_stmt>



	<expr_stmt pos:start="209:9" pos:end="209:31"><expr pos:start="209:9" pos:end="209:30"><name pos:start="209:9" pos:end="209:15">current</name> <operator pos:start="209:17" pos:end="209:18">+=</operator> <literal type="number" pos:start="209:20" pos:end="209:21">16</literal><operator pos:start="209:22" pos:end="209:22">*</operator><name pos:start="209:23" pos:end="209:30">linesize</name></expr>;</expr_stmt>

      </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

  </block_content>}</block></for>

  

  <expr_stmt pos:start="219:3" pos:end="219:41"><expr pos:start="219:3" pos:end="219:40"><operator pos:start="219:3" pos:end="219:3">*</operator><name pos:start="219:4" pos:end="219:7">pict</name> <operator pos:start="219:9" pos:end="219:9">=</operator> <operator pos:start="219:11" pos:end="219:11">*</operator><operator pos:start="219:12" pos:end="219:12">(</operator><name pos:start="219:13" pos:end="219:19">AVFrame</name><operator pos:start="219:20" pos:end="219:20">*</operator><operator pos:start="219:21" pos:end="219:21">)</operator><operator pos:start="219:22" pos:end="219:22">&amp;</operator><name pos:start="219:23" pos:end="219:40"><name pos:start="219:23" pos:end="219:23">s</name><operator pos:start="219:24" pos:end="219:25">-&gt;</operator><name pos:start="219:26" pos:end="219:40">current_picture</name></name></expr>;</expr_stmt>





  <expr_stmt pos:start="225:3" pos:end="225:19"><expr pos:start="225:3" pos:end="225:18"><call pos:start="225:3" pos:end="225:18"><name pos:start="225:3" pos:end="225:15">MPV_frame_end</name><argument_list pos:start="225:16" pos:end="225:18">(<argument pos:start="225:17" pos:end="225:17"><expr pos:start="225:17" pos:end="225:17"><name pos:start="225:17" pos:end="225:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  

  <expr_stmt pos:start="229:3" pos:end="229:29"><expr pos:start="229:3" pos:end="229:28"><operator pos:start="229:3" pos:end="229:3">*</operator><name pos:start="229:4" pos:end="229:12">data_size</name><operator pos:start="229:13" pos:end="229:13">=</operator><sizeof pos:start="229:14" pos:end="229:28">sizeof<argument_list pos:start="229:20" pos:end="229:28">(<argument pos:start="229:21" pos:end="229:27"><expr pos:start="229:21" pos:end="229:27"><name pos:start="229:21" pos:end="229:27">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

  <return pos:start="231:3" pos:end="231:18">return <expr pos:start="231:10" pos:end="231:17"><name pos:start="231:10" pos:end="231:17">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
