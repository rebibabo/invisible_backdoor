<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1061.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">setup_frame</name><parameter_list pos:start="1:24" pos:end="3:64">(<parameter pos:start="1:25" pos:end="1:31"><decl pos:start="1:25" pos:end="1:31"><type pos:start="1:25" pos:end="1:31"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:31">sig</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:60"><decl pos:start="1:34" pos:end="1:60"><type pos:start="1:34" pos:end="1:60"><name pos:start="1:34" pos:end="1:56"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:56">target_sigaction</name></name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">ka</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:44"><decl pos:start="3:25" pos:end="3:44"><type pos:start="3:25" pos:end="3:44"><name pos:start="3:25" pos:end="3:39">target_sigset_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">set</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:63"><decl pos:start="3:47" pos:end="3:63"><type pos:start="3:47" pos:end="3:63"><name pos:start="3:47" pos:end="3:58">CPUM68KState</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:63">env</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="105:1">{<block_content pos:start="7:5" pos:end="103:30">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:26">target_sigframe</name></name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:33">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">abi_ulong</name></type> <name pos:start="9:15" pos:end="9:24">frame_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">abi_ulong</name></type> <name pos:start="11:15" pos:end="11:26">retcode_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">abi_ulong</name></type> <name pos:start="13:15" pos:end="13:21">sc_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">err</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:14">frame_addr</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:53"><name pos:start="21:18" pos:end="21:29">get_sigframe</name><argument_list pos:start="21:30" pos:end="21:53">(<argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><name pos:start="21:31" pos:end="21:32">ka</name></expr></argument>, <argument pos:start="21:35" pos:end="21:37"><expr pos:start="21:35" pos:end="21:37"><name pos:start="21:35" pos:end="21:37">env</name></expr></argument>, <argument pos:start="21:40" pos:end="21:52"><expr pos:start="21:40" pos:end="21:52"><sizeof pos:start="21:40" pos:end="21:45">sizeof <name/></sizeof>*<name pos:start="21:48" pos:end="21:52">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:26"><if pos:start="23:5" pos:end="25:26">if <condition pos:start="23:8" pos:end="23:62">(<expr pos:start="23:9" pos:end="23:61"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:61"><name pos:start="23:10" pos:end="23:25">lock_user_struct</name><argument_list pos:start="23:26" pos:end="23:61">(<argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="23:41" pos:end="23:45"><expr pos:start="23:41" pos:end="23:45"><name pos:start="23:41" pos:end="23:45">frame</name></expr></argument>, <argument pos:start="23:48" pos:end="23:57"><expr pos:start="23:48" pos:end="23:57"><name pos:start="23:48" pos:end="23:57">frame_addr</name></expr></argument>, <argument pos:start="23:60" pos:end="23:60"><expr pos:start="23:60" pos:end="23:60"><literal type="number" pos:start="23:60" pos:end="23:60">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:26"><block_content pos:start="25:9" pos:end="25:26">

	<goto pos:start="25:9" pos:end="25:26">goto <name pos:start="25:14" pos:end="25:25">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><call pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:14">__put_user</name><argument_list pos:start="29:15" pos:end="29:32">(<argument pos:start="29:16" pos:end="29:18"><expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">sig</name></expr></argument>, <argument pos:start="29:21" pos:end="29:31"><expr pos:start="29:21" pos:end="29:31"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:31"><name pos:start="29:22" pos:end="29:26">frame</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:31">sig</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:64"><expr pos:start="33:5" pos:end="33:63"><name pos:start="33:5" pos:end="33:11">sc_addr</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:24">frame_addr</name> <operator pos:start="33:26" pos:end="33:26">+</operator> <call pos:start="33:28" pos:end="33:63"><name pos:start="33:28" pos:end="33:35">offsetof</name><argument_list pos:start="33:36" pos:end="33:63">(<argument pos:start="33:37" pos:end="33:58"><expr pos:start="33:37" pos:end="33:58">struct <name pos:start="33:44" pos:end="33:58">target_sigframe</name></expr></argument>, <argument pos:start="33:61" pos:end="33:62"><expr pos:start="33:61" pos:end="33:62"><name pos:start="33:61" pos:end="33:62">sc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:37"><expr pos:start="35:5" pos:end="35:36"><call pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:14">__put_user</name><argument_list pos:start="35:15" pos:end="35:36">(<argument pos:start="35:16" pos:end="35:22"><expr pos:start="35:16" pos:end="35:22"><name pos:start="35:16" pos:end="35:22">sc_addr</name></expr></argument>, <argument pos:start="35:25" pos:end="35:35"><expr pos:start="35:25" pos:end="35:35"><operator pos:start="35:25" pos:end="35:25">&amp;</operator><name pos:start="35:26" pos:end="35:35"><name pos:start="35:26" pos:end="35:30">frame</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:35">psc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:58"><expr pos:start="39:5" pos:end="39:57"><name pos:start="39:5" pos:end="39:7">err</name> <operator pos:start="39:9" pos:end="39:10">|=</operator> <call pos:start="39:12" pos:end="39:57"><name pos:start="39:12" pos:end="39:27">setup_sigcontext</name><argument_list pos:start="39:28" pos:end="39:57">(<argument pos:start="39:29" pos:end="39:38"><expr pos:start="39:29" pos:end="39:38"><operator pos:start="39:29" pos:end="39:29">&amp;</operator><name pos:start="39:30" pos:end="39:38"><name pos:start="39:30" pos:end="39:34">frame</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:38">sc</name></name></expr></argument>, <argument pos:start="39:41" pos:end="39:43"><expr pos:start="39:41" pos:end="39:43"><name pos:start="39:41" pos:end="39:43">env</name></expr></argument>, <argument pos:start="39:46" pos:end="39:56"><expr pos:start="39:46" pos:end="39:56"><name pos:start="39:46" pos:end="39:56"><name pos:start="39:46" pos:end="39:48">set</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:53">sig</name><index pos:start="39:54" pos:end="39:56">[<expr pos:start="39:55" pos:end="39:55"><literal type="number" pos:start="39:55" pos:end="39:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:26"><if pos:start="41:5" pos:end="43:26">if <condition pos:start="41:8" pos:end="41:12">(<expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">err</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:26"><block_content pos:start="43:9" pos:end="43:26">

	<goto pos:start="43:9" pos:end="43:26">goto <name pos:start="43:14" pos:end="43:25">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="47:5" pos:end="53:5">for<control pos:start="47:8" pos:end="47:42">(<init pos:start="47:9" pos:end="47:14"><expr pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:9">i</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <literal type="number" pos:start="47:13" pos:end="47:13">1</literal></expr>;</init> <condition pos:start="47:16" pos:end="47:37"><expr pos:start="47:16" pos:end="47:36"><name pos:start="47:16" pos:end="47:16">i</name> <operator pos:start="47:18" pos:end="47:18">&lt;</operator> <name pos:start="47:20" pos:end="47:36">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="47:39" pos:end="47:41"><expr pos:start="47:39" pos:end="47:41"><name pos:start="47:39" pos:end="47:39">i</name><operator pos:start="47:40" pos:end="47:41">++</operator></expr></incr>)</control> <block pos:start="47:44" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:30">

        <if_stmt pos:start="49:9" pos:end="51:30"><if pos:start="49:9" pos:end="51:30">if <condition pos:start="49:12" pos:end="49:62">(<expr pos:start="49:13" pos:end="49:61"><call pos:start="49:13" pos:end="49:61"><name pos:start="49:13" pos:end="49:22">__put_user</name><argument_list pos:start="49:23" pos:end="49:61">(<argument pos:start="49:24" pos:end="49:34"><expr pos:start="49:24" pos:end="49:34"><name pos:start="49:24" pos:end="49:34"><name pos:start="49:24" pos:end="49:26">set</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:31">sig</name><index pos:start="49:32" pos:end="49:34">[<expr pos:start="49:33" pos:end="49:33"><name pos:start="49:33" pos:end="49:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="49:37" pos:end="49:60"><expr pos:start="49:37" pos:end="49:60"><operator pos:start="49:37" pos:end="49:37">&amp;</operator><name pos:start="49:38" pos:end="49:60"><name pos:start="49:38" pos:end="49:42">frame</name><operator pos:start="49:43" pos:end="49:44">-&gt;</operator><name pos:start="49:45" pos:end="49:53">extramask</name><index pos:start="49:54" pos:end="49:60">[<expr pos:start="49:55" pos:end="49:59"><name pos:start="49:55" pos:end="49:55">i</name> <operator pos:start="49:57" pos:end="49:57">-</operator> <literal type="number" pos:start="49:59" pos:end="49:59">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:30"><block_content pos:start="51:13" pos:end="51:30">

            <goto pos:start="51:13" pos:end="51:30">goto <name pos:start="51:18" pos:end="51:29">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="57:5" pos:end="57:43">/* Set up to return from userspace.  */</comment>



    <expr_stmt pos:start="61:5" pos:end="61:74"><expr pos:start="61:5" pos:end="61:73"><name pos:start="61:5" pos:end="61:16">retcode_addr</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:29">frame_addr</name> <operator pos:start="61:31" pos:end="61:31">+</operator> <call pos:start="61:33" pos:end="61:73"><name pos:start="61:33" pos:end="61:40">offsetof</name><argument_list pos:start="61:41" pos:end="61:73">(<argument pos:start="61:42" pos:end="61:63"><expr pos:start="61:42" pos:end="61:63">struct <name pos:start="61:49" pos:end="61:63">target_sigframe</name></expr></argument>, <argument pos:start="61:66" pos:end="61:72"><expr pos:start="61:66" pos:end="61:72"><name pos:start="61:66" pos:end="61:72">retcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:47"><expr pos:start="63:5" pos:end="63:46"><call pos:start="63:5" pos:end="63:46"><name pos:start="63:5" pos:end="63:14">__put_user</name><argument_list pos:start="63:15" pos:end="63:46">(<argument pos:start="63:16" pos:end="63:27"><expr pos:start="63:16" pos:end="63:27"><name pos:start="63:16" pos:end="63:27">retcode_addr</name></expr></argument>, <argument pos:start="63:30" pos:end="63:45"><expr pos:start="63:30" pos:end="63:45"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:45"><name pos:start="63:31" pos:end="63:35">frame</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:45">pretcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:29">/* moveq #,d0; trap #0 */</comment>



    <expr_stmt pos:start="71:5" pos:end="73:48"><expr pos:start="71:5" pos:end="73:47"><call pos:start="71:5" pos:end="73:47"><name pos:start="71:5" pos:end="71:14">__put_user</name><argument_list pos:start="71:15" pos:end="73:47">(<argument pos:start="71:16" pos:end="71:55"><expr pos:start="71:16" pos:end="71:55"><literal type="number" pos:start="71:16" pos:end="71:27">0x70004e40</literal> <operator pos:start="71:27" pos:end="71:27">+</operator> <operator pos:start="71:29" pos:end="71:29">(</operator><name pos:start="71:30" pos:end="71:48">TARGET_NR_sigreturn</name> <operator pos:start="71:50" pos:end="71:51">&lt;&lt;</operator> <literal type="number" pos:start="71:53" pos:end="71:54">16</literal><operator pos:start="71:55" pos:end="71:55">)</operator></expr></argument>,

                      <argument pos:start="73:23" pos:end="73:46"><expr pos:start="73:23" pos:end="73:46"><operator pos:start="73:23" pos:end="73:23">(</operator><name pos:start="73:24" pos:end="73:27">long</name> <operator pos:start="73:29" pos:end="73:29">*</operator><operator pos:start="73:30" pos:end="73:30">)</operator><operator pos:start="73:31" pos:end="73:31">(</operator><name pos:start="73:32" pos:end="73:45"><name pos:start="73:32" pos:end="73:36">frame</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:45">retcode</name></name><operator pos:start="73:46" pos:end="73:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="79:26"><if pos:start="77:5" pos:end="79:26">if <condition pos:start="77:8" pos:end="77:12">(<expr pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">err</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:26"><block_content pos:start="79:9" pos:end="79:26">

        <goto pos:start="79:9" pos:end="79:26">goto <name pos:start="79:14" pos:end="79:25">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:41">/* Set up to return from userspace */</comment>



    <expr_stmt pos:start="87:5" pos:end="87:31"><expr pos:start="87:5" pos:end="87:30"><name pos:start="87:5" pos:end="87:17"><name pos:start="87:5" pos:end="87:7">env</name><operator pos:start="87:8" pos:end="87:9">-&gt;</operator><name pos:start="87:10" pos:end="87:14">aregs</name><index pos:start="87:15" pos:end="87:17">[<expr pos:start="87:16" pos:end="87:16"><literal type="number" pos:start="87:16" pos:end="87:16">7</literal></expr>]</index></name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:30">frame_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:30"><expr pos:start="89:5" pos:end="89:29"><name pos:start="89:5" pos:end="89:11"><name pos:start="89:5" pos:end="89:7">env</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:11">pc</name></name> <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:29"><name pos:start="89:15" pos:end="89:16">ka</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:29">_sa_handler</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:45"><expr pos:start="93:5" pos:end="93:44"><call pos:start="93:5" pos:end="93:44"><name pos:start="93:5" pos:end="93:22">unlock_user_struct</name><argument_list pos:start="93:23" pos:end="93:44">(<argument pos:start="93:24" pos:end="93:28"><expr pos:start="93:24" pos:end="93:28"><name pos:start="93:24" pos:end="93:28">frame</name></expr></argument>, <argument pos:start="93:31" pos:end="93:40"><expr pos:start="93:31" pos:end="93:40"><name pos:start="93:31" pos:end="93:40">frame_addr</name></expr></argument>, <argument pos:start="93:43" pos:end="93:43"><expr pos:start="93:43" pos:end="93:43"><literal type="number" pos:start="93:43" pos:end="93:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:11">return;</return>



<label pos:start="99:1" pos:end="99:13"><name pos:start="99:1" pos:end="99:12">give_sigsegv</name>:</label>

    <expr_stmt pos:start="101:5" pos:end="101:45"><expr pos:start="101:5" pos:end="101:44"><call pos:start="101:5" pos:end="101:44"><name pos:start="101:5" pos:end="101:22">unlock_user_struct</name><argument_list pos:start="101:23" pos:end="101:44">(<argument pos:start="101:24" pos:end="101:28"><expr pos:start="101:24" pos:end="101:28"><name pos:start="101:24" pos:end="101:28">frame</name></expr></argument>, <argument pos:start="101:31" pos:end="101:40"><expr pos:start="101:31" pos:end="101:40"><name pos:start="101:31" pos:end="101:40">frame_addr</name></expr></argument>, <argument pos:start="101:43" pos:end="101:43"><expr pos:start="101:43" pos:end="101:43"><literal type="number" pos:start="101:43" pos:end="101:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:30"><expr pos:start="103:5" pos:end="103:29"><call pos:start="103:5" pos:end="103:29"><name pos:start="103:5" pos:end="103:13">force_sig</name><argument_list pos:start="103:14" pos:end="103:29">(<argument pos:start="103:15" pos:end="103:28"><expr pos:start="103:15" pos:end="103:28"><name pos:start="103:15" pos:end="103:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
