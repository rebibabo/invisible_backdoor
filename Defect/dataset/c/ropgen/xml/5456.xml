<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5456.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">sp804_write</name><parameter_list pos:start="1:24" pos:end="3:54">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:63"><decl pos:start="1:39" pos:end="1:63"><type pos:start="1:39" pos:end="1:63"><name pos:start="1:39" pos:end="1:56">target_phys_addr_t</name></type> <name pos:start="1:58" pos:end="1:63">offset</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:38"><decl pos:start="3:25" pos:end="3:38"><type pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:32">uint64_t</name></type> <name pos:start="3:34" pos:end="3:38">value</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:53"><decl pos:start="3:41" pos:end="3:53"><type pos:start="3:41" pos:end="3:53"><name pos:start="3:41" pos:end="3:48">unsigned</name></type> <name pos:start="3:50" pos:end="3:53">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:59">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">sp804_state</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:42">= <expr pos:start="7:22" pos:end="7:42"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:33">sp804_state</name> <operator pos:start="7:35" pos:end="7:35">*</operator><operator pos:start="7:36" pos:end="7:36">)</operator><name pos:start="7:37" pos:end="7:42">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:14">offset</name> <operator pos:start="11:16" pos:end="11:16">&lt;</operator> <literal type="number" pos:start="11:18" pos:end="11:21">0x20</literal></expr>)</condition> <block pos:start="11:24" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:52"><expr pos:start="13:9" pos:end="13:51"><call pos:start="13:9" pos:end="13:51"><name pos:start="13:9" pos:end="13:23">arm_timer_write</name><argument_list pos:start="13:24" pos:end="13:51">(<argument pos:start="13:25" pos:end="13:35"><expr pos:start="13:25" pos:end="13:35"><name pos:start="13:25" pos:end="13:35"><name pos:start="13:25" pos:end="13:25">s</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:32">timer</name><index pos:start="13:33" pos:end="13:35">[<expr pos:start="13:34" pos:end="13:34"><literal type="number" pos:start="13:34" pos:end="13:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="13:38" pos:end="13:43"><expr pos:start="13:38" pos:end="13:43"><name pos:start="13:38" pos:end="13:43">offset</name></expr></argument>, <argument pos:start="13:46" pos:end="13:50"><expr pos:start="13:46" pos:end="13:50"><name pos:start="13:46" pos:end="13:50">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:14">offset</name> <operator pos:start="21:16" pos:end="21:16">&lt;</operator> <literal type="number" pos:start="21:18" pos:end="21:21">0x40</literal></expr>)</condition> <block pos:start="21:24" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:59"><expr pos:start="23:9" pos:end="23:58"><call pos:start="23:9" pos:end="23:58"><name pos:start="23:9" pos:end="23:23">arm_timer_write</name><argument_list pos:start="23:24" pos:end="23:58">(<argument pos:start="23:25" pos:end="23:35"><expr pos:start="23:25" pos:end="23:35"><name pos:start="23:25" pos:end="23:35"><name pos:start="23:25" pos:end="23:25">s</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:32">timer</name><index pos:start="23:33" pos:end="23:35">[<expr pos:start="23:34" pos:end="23:34"><literal type="number" pos:start="23:34" pos:end="23:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:38" pos:end="23:50"><expr pos:start="23:38" pos:end="23:50"><name pos:start="23:38" pos:end="23:43">offset</name> <operator pos:start="23:45" pos:end="23:45">-</operator> <literal type="number" pos:start="23:47" pos:end="23:50">0x20</literal></expr></argument>, <argument pos:start="23:53" pos:end="23:57"><expr pos:start="23:53" pos:end="23:57"><name pos:start="23:53" pos:end="23:57">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:79">/* Technically we could be writing to the Test Registers, but not likely */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:59"><expr pos:start="33:5" pos:end="33:58"><call pos:start="33:5" pos:end="33:58"><name pos:start="33:5" pos:end="33:12">hw_error</name><argument_list pos:start="33:13" pos:end="33:58">(<argument pos:start="33:14" pos:end="33:34"><expr pos:start="33:14" pos:end="33:34"><literal type="string" pos:start="33:14" pos:end="33:34">"%s: Bad offset %x\n"</literal></expr></argument>, <argument pos:start="33:37" pos:end="33:44"><expr pos:start="33:37" pos:end="33:44"><name pos:start="33:37" pos:end="33:44">__func__</name></expr></argument>, <argument pos:start="33:47" pos:end="33:57"><expr pos:start="33:47" pos:end="33:57"><operator pos:start="33:47" pos:end="33:47">(</operator><name pos:start="33:48" pos:end="33:50">int</name><operator pos:start="33:51" pos:end="33:51">)</operator><name pos:start="33:52" pos:end="33:57">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
