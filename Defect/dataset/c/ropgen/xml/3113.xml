<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3113.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">chs_filter_band_data</name><parameter_list pos:start="1:33" pos:end="1:76">(<parameter pos:start="1:34" pos:end="1:49"><decl pos:start="1:34" pos:end="1:49"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:46">DCAXllDecoder</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:62">DCAXllChSet</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">c</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:75"><decl pos:start="1:68" pos:end="1:75"><type pos:start="1:68" pos:end="1:75"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:75">band</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:72">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">DCAXllBand</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">b</name> <init pos:start="5:19" pos:end="5:35">= <expr pos:start="5:21" pos:end="5:35"><operator pos:start="5:21" pos:end="5:21">&amp;</operator><name pos:start="5:22" pos:end="5:35"><name pos:start="5:22" pos:end="5:22">c</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:29">bands</name><index pos:start="5:30" pos:end="5:35">[<expr pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:34">band</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">nsamples</name> <init pos:start="7:18" pos:end="7:35">= <expr pos:start="7:20" pos:end="7:35"><name pos:start="7:20" pos:end="7:35"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:35">nframesamples</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">k</name></decl>;</decl_stmt>



    <comment type="line" pos:start="13:5" pos:end="13:43">// Inverse adaptive or fixed prediction</comment>

    <for pos:start="15:5" pos:end="73:5">for <control pos:start="15:9" pos:end="15:38">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:33"><expr pos:start="15:17" pos:end="15:32"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:21">c</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:32">nchannels</name></name></expr>;</condition> <incr pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:35">i</name><operator pos:start="15:36" pos:end="15:37">++</operator></expr></incr>)</control> <block pos:start="15:40" pos:end="73:5">{<block_content pos:start="17:9" pos:end="71:9">

        <decl_stmt pos:start="17:9" pos:end="17:47"><decl pos:start="17:9" pos:end="17:46"><type pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:15">int32_t</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:20">buf</name> <init pos:start="17:22" pos:end="17:46">= <expr pos:start="17:24" pos:end="17:46"><name pos:start="17:24" pos:end="17:46"><name pos:start="17:24" pos:end="17:24">b</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:43">msb_sample_buffer</name><index pos:start="17:44" pos:end="17:46">[<expr pos:start="17:45" pos:end="17:45"><name pos:start="17:45" pos:end="17:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:43"><decl pos:start="19:9" pos:end="19:42"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:17">order</name> <init pos:start="19:19" pos:end="19:42">= <expr pos:start="19:21" pos:end="19:42"><name pos:start="19:21" pos:end="19:42"><name pos:start="19:21" pos:end="19:21">b</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:39">adapt_pred_order</name><index pos:start="19:40" pos:end="19:42">[<expr pos:start="19:41" pos:end="19:41"><name pos:start="19:41" pos:end="19:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="21:9" pos:end="71:9"><if pos:start="21:9" pos:end="61:9">if <condition pos:start="21:12" pos:end="21:22">(<expr pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:17">order</name> <operator pos:start="21:19" pos:end="21:19">&gt;</operator> <literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr>)</condition> <block pos:start="21:24" pos:end="61:9">{<block_content pos:start="23:13" pos:end="59:13">

            <decl_stmt pos:start="23:13" pos:end="23:52"><decl pos:start="23:13" pos:end="23:51"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:51"><name pos:start="23:17" pos:end="23:21">coeff</name><index pos:start="23:22" pos:end="23:51">[<expr pos:start="23:23" pos:end="23:50"><name pos:start="23:23" pos:end="23:50">DCA_XLL_ADAPT_PRED_ORDER_MAX</name></expr>]</index></name></decl>;</decl_stmt>

            <comment type="line" pos:start="25:13" pos:end="25:82">// Conversion from reflection coefficients to direct form coefficients</comment>

            <for pos:start="27:13" pos:end="45:13">for <control pos:start="27:17" pos:end="27:39">(<init pos:start="27:18" pos:end="27:23"><expr pos:start="27:18" pos:end="27:22"><name pos:start="27:18" pos:end="27:18">j</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>;</init> <condition pos:start="27:25" pos:end="27:34"><expr pos:start="27:25" pos:end="27:33"><name pos:start="27:25" pos:end="27:25">j</name> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <name pos:start="27:29" pos:end="27:33">order</name></expr>;</condition> <incr pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:36">j</name><operator pos:start="27:37" pos:end="27:38">++</operator></expr></incr>)</control> <block pos:start="27:41" pos:end="45:13">{<block_content pos:start="29:17" pos:end="43:30">

                <decl_stmt pos:start="29:17" pos:end="29:51"><decl pos:start="29:17" pos:end="29:50"><type pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:19">int</name></type> <name pos:start="29:21" pos:end="29:22">rc</name> <init pos:start="29:24" pos:end="29:50">= <expr pos:start="29:26" pos:end="29:50"><name pos:start="29:26" pos:end="29:50"><name pos:start="29:26" pos:end="29:26">b</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:44">adapt_refl_coeff</name><index pos:start="29:45" pos:end="29:47">[<expr pos:start="29:46" pos:end="29:46"><name pos:start="29:46" pos:end="29:46">i</name></expr>]</index><index pos:start="29:48" pos:end="29:50">[<expr pos:start="29:49" pos:end="29:49"><name pos:start="29:49" pos:end="29:49">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <for pos:start="31:17" pos:end="41:17">for <control pos:start="31:21" pos:end="31:49">(<init pos:start="31:22" pos:end="31:27"><expr pos:start="31:22" pos:end="31:26"><name pos:start="31:22" pos:end="31:22">k</name> <operator pos:start="31:24" pos:end="31:24">=</operator> <literal type="number" pos:start="31:26" pos:end="31:26">0</literal></expr>;</init> <condition pos:start="31:29" pos:end="31:44"><expr pos:start="31:29" pos:end="31:43"><name pos:start="31:29" pos:end="31:29">k</name> <operator pos:start="31:31" pos:end="31:31">&lt;</operator> <operator pos:start="31:33" pos:end="31:33">(</operator><name pos:start="31:34" pos:end="31:34">j</name> <operator pos:start="31:36" pos:end="31:36">+</operator> <literal type="number" pos:start="31:38" pos:end="31:38">1</literal><operator pos:start="31:39" pos:end="31:39">)</operator> <operator pos:start="31:41" pos:end="31:41">/</operator> <literal type="number" pos:start="31:43" pos:end="31:43">2</literal></expr>;</condition> <incr pos:start="31:46" pos:end="31:48"><expr pos:start="31:46" pos:end="31:48"><name pos:start="31:46" pos:end="31:46">k</name><operator pos:start="31:47" pos:end="31:48">++</operator></expr></incr>)</control> <block pos:start="31:51" pos:end="41:17">{<block_content pos:start="33:21" pos:end="39:62">

                    <decl_stmt pos:start="33:21" pos:end="33:48"><decl pos:start="33:21" pos:end="33:47"><type pos:start="33:21" pos:end="33:23"><name pos:start="33:21" pos:end="33:23">int</name></type> <name pos:start="33:25" pos:end="33:28">tmp1</name> <init pos:start="33:30" pos:end="33:47">= <expr pos:start="33:32" pos:end="33:47"><name pos:start="33:32" pos:end="33:47"><name pos:start="33:32" pos:end="33:36">coeff</name><index pos:start="33:37" pos:end="33:47">[    <expr pos:start="33:42" pos:end="33:42"><name pos:start="33:42" pos:end="33:42">k</name></expr>    ]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="35:21" pos:end="35:48"><decl pos:start="35:21" pos:end="35:47"><type pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">int</name></type> <name pos:start="35:25" pos:end="35:28">tmp2</name> <init pos:start="35:30" pos:end="35:47">= <expr pos:start="35:32" pos:end="35:47"><name pos:start="35:32" pos:end="35:47"><name pos:start="35:32" pos:end="35:36">coeff</name><index pos:start="35:37" pos:end="35:47">[<expr pos:start="35:38" pos:end="35:46"><name pos:start="35:38" pos:end="35:38">j</name> <operator pos:start="35:40" pos:end="35:40">-</operator> <name pos:start="35:42" pos:end="35:42">k</name> <operator pos:start="35:44" pos:end="35:44">-</operator> <literal type="number" pos:start="35:46" pos:end="35:46">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="37:21" pos:end="37:62"><expr pos:start="37:21" pos:end="37:61"><name pos:start="37:21" pos:end="37:36"><name pos:start="37:21" pos:end="37:25">coeff</name><index pos:start="37:26" pos:end="37:36">[    <expr pos:start="37:31" pos:end="37:31"><name pos:start="37:31" pos:end="37:31">k</name></expr>    ]</index></name> <operator pos:start="37:38" pos:end="37:38">=</operator> <name pos:start="37:40" pos:end="37:43">tmp1</name> <operator pos:start="37:45" pos:end="37:45">+</operator> <call pos:start="37:47" pos:end="37:61"><name pos:start="37:47" pos:end="37:51">mul16</name><argument_list pos:start="37:52" pos:end="37:61">(<argument pos:start="37:53" pos:end="37:54"><expr pos:start="37:53" pos:end="37:54"><name pos:start="37:53" pos:end="37:54">rc</name></expr></argument>, <argument pos:start="37:57" pos:end="37:60"><expr pos:start="37:57" pos:end="37:60"><name pos:start="37:57" pos:end="37:60">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="39:21" pos:end="39:62"><expr pos:start="39:21" pos:end="39:61"><name pos:start="39:21" pos:end="39:36"><name pos:start="39:21" pos:end="39:25">coeff</name><index pos:start="39:26" pos:end="39:36">[<expr pos:start="39:27" pos:end="39:35"><name pos:start="39:27" pos:end="39:27">j</name> <operator pos:start="39:29" pos:end="39:29">-</operator> <name pos:start="39:31" pos:end="39:31">k</name> <operator pos:start="39:33" pos:end="39:33">-</operator> <literal type="number" pos:start="39:35" pos:end="39:35">1</literal></expr>]</index></name> <operator pos:start="39:38" pos:end="39:38">=</operator> <name pos:start="39:40" pos:end="39:43">tmp2</name> <operator pos:start="39:45" pos:end="39:45">+</operator> <call pos:start="39:47" pos:end="39:61"><name pos:start="39:47" pos:end="39:51">mul16</name><argument_list pos:start="39:52" pos:end="39:61">(<argument pos:start="39:53" pos:end="39:54"><expr pos:start="39:53" pos:end="39:54"><name pos:start="39:53" pos:end="39:54">rc</name></expr></argument>, <argument pos:start="39:57" pos:end="39:60"><expr pos:start="39:57" pos:end="39:60"><name pos:start="39:57" pos:end="39:60">tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="43:17" pos:end="43:30"><expr pos:start="43:17" pos:end="43:29"><name pos:start="43:17" pos:end="43:24"><name pos:start="43:17" pos:end="43:21">coeff</name><index pos:start="43:22" pos:end="43:24">[<expr pos:start="43:23" pos:end="43:23"><name pos:start="43:23" pos:end="43:23">j</name></expr>]</index></name> <operator pos:start="43:26" pos:end="43:26">=</operator> <name pos:start="43:28" pos:end="43:29">rc</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <comment type="line" pos:start="47:13" pos:end="47:42">// Inverse adaptive prediction</comment>

            <for pos:start="49:13" pos:end="59:13">for <control pos:start="49:17" pos:end="49:50">(<init pos:start="49:18" pos:end="49:23"><expr pos:start="49:18" pos:end="49:22"><name pos:start="49:18" pos:end="49:18">j</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr>;</init> <condition pos:start="49:25" pos:end="49:45"><expr pos:start="49:25" pos:end="49:44"><name pos:start="49:25" pos:end="49:25">j</name> <operator pos:start="49:27" pos:end="49:27">&lt;</operator> <name pos:start="49:29" pos:end="49:36">nsamples</name> <operator pos:start="49:38" pos:end="49:38">-</operator> <name pos:start="49:40" pos:end="49:44">order</name></expr>;</condition> <incr pos:start="49:47" pos:end="49:49"><expr pos:start="49:47" pos:end="49:49"><name pos:start="49:47" pos:end="49:47">j</name><operator pos:start="49:48" pos:end="49:49">++</operator></expr></incr>)</control> <block pos:start="49:52" pos:end="59:13">{<block_content pos:start="51:17" pos:end="57:57">

                <decl_stmt pos:start="51:17" pos:end="51:32"><decl pos:start="51:17" pos:end="51:31"><type pos:start="51:17" pos:end="51:23"><name pos:start="51:17" pos:end="51:23">int64_t</name></type> <name pos:start="51:25" pos:end="51:27">err</name> <init pos:start="51:29" pos:end="51:31">= <expr pos:start="51:31" pos:end="51:31"><literal type="number" pos:start="51:31" pos:end="51:31">0</literal></expr></init></decl>;</decl_stmt>

                <for pos:start="53:17" pos:end="55:70">for <control pos:start="53:21" pos:end="53:43">(<init pos:start="53:22" pos:end="53:27"><expr pos:start="53:22" pos:end="53:26"><name pos:start="53:22" pos:end="53:22">k</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr>;</init> <condition pos:start="53:29" pos:end="53:38"><expr pos:start="53:29" pos:end="53:37"><name pos:start="53:29" pos:end="53:29">k</name> <operator pos:start="53:31" pos:end="53:31">&lt;</operator> <name pos:start="53:33" pos:end="53:37">order</name></expr>;</condition> <incr pos:start="53:40" pos:end="53:42"><expr pos:start="53:40" pos:end="53:42"><name pos:start="53:40" pos:end="53:40">k</name><operator pos:start="53:41" pos:end="53:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="55:21" pos:end="55:70"><block_content pos:start="55:21" pos:end="55:70">

                    <expr_stmt pos:start="55:21" pos:end="55:70"><expr pos:start="55:21" pos:end="55:69"><name pos:start="55:21" pos:end="55:23">err</name> <operator pos:start="55:25" pos:end="55:26">+=</operator> <operator pos:start="55:28" pos:end="55:28">(</operator><name pos:start="55:29" pos:end="55:35">int64_t</name><operator pos:start="55:36" pos:end="55:36">)</operator><name pos:start="55:37" pos:end="55:46"><name pos:start="55:37" pos:end="55:39">buf</name><index pos:start="55:40" pos:end="55:46">[<expr pos:start="55:41" pos:end="55:45"><name pos:start="55:41" pos:end="55:41">j</name> <operator pos:start="55:43" pos:end="55:43">+</operator> <name pos:start="55:45" pos:end="55:45">k</name></expr>]</index></name> <operator pos:start="55:48" pos:end="55:48">*</operator> <name pos:start="55:50" pos:end="55:69"><name pos:start="55:50" pos:end="55:54">coeff</name><index pos:start="55:55" pos:end="55:69">[<expr pos:start="55:56" pos:end="55:68"><name pos:start="55:56" pos:end="55:60">order</name> <operator pos:start="55:62" pos:end="55:62">-</operator> <name pos:start="55:64" pos:end="55:64">k</name> <operator pos:start="55:66" pos:end="55:66">-</operator> <literal type="number" pos:start="55:68" pos:end="55:68">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="57:17" pos:end="57:57"><expr pos:start="57:17" pos:end="57:56"><name pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:19">buf</name><index pos:start="57:20" pos:end="57:26">[<expr pos:start="57:21" pos:end="57:25"><name pos:start="57:21" pos:end="57:21">j</name> <operator pos:start="57:23" pos:end="57:23">+</operator> <name pos:start="57:25" pos:end="57:25">k</name></expr>]</index></name> <operator pos:start="57:28" pos:end="57:29">-=</operator> <operator pos:start="57:31" pos:end="57:31">(</operator><name pos:start="57:32" pos:end="57:36">SUINT</name><operator pos:start="57:37" pos:end="57:37">)</operator><call pos:start="57:38" pos:end="57:56"><name pos:start="57:38" pos:end="57:43">clip23</name><argument_list pos:start="57:44" pos:end="57:56">(<argument pos:start="57:45" pos:end="57:55"><expr pos:start="57:45" pos:end="57:55"><call pos:start="57:45" pos:end="57:55"><name pos:start="57:45" pos:end="57:50">norm16</name><argument_list pos:start="57:51" pos:end="57:55">(<argument pos:start="57:52" pos:end="57:54"><expr pos:start="57:52" pos:end="57:54"><name pos:start="57:52" pos:end="57:54">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="71:9">else <block pos:start="61:16" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:41">

            <comment type="line" pos:start="63:13" pos:end="63:51">// Inverse fixed coefficient prediction</comment>

            <for pos:start="65:13" pos:end="69:41">for <control pos:start="65:17" pos:end="65:56">(<init pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:18">j</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</init> <condition pos:start="65:25" pos:end="65:51"><expr pos:start="65:25" pos:end="65:50"><name pos:start="65:25" pos:end="65:25">j</name> <operator pos:start="65:27" pos:end="65:27">&lt;</operator> <name pos:start="65:29" pos:end="65:50"><name pos:start="65:29" pos:end="65:29">b</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:47">fixed_pred_order</name><index pos:start="65:48" pos:end="65:50">[<expr pos:start="65:49" pos:end="65:49"><name pos:start="65:49" pos:end="65:49">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="65:53" pos:end="65:55"><expr pos:start="65:53" pos:end="65:55"><name pos:start="65:53" pos:end="65:53">j</name><operator pos:start="65:54" pos:end="65:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:17" pos:end="69:41"><block_content pos:start="67:17" pos:end="69:41">

                <for pos:start="67:17" pos:end="69:41">for <control pos:start="67:21" pos:end="67:46">(<init pos:start="67:22" pos:end="67:27"><expr pos:start="67:22" pos:end="67:26"><name pos:start="67:22" pos:end="67:22">k</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <literal type="number" pos:start="67:26" pos:end="67:26">1</literal></expr>;</init> <condition pos:start="67:29" pos:end="67:41"><expr pos:start="67:29" pos:end="67:40"><name pos:start="67:29" pos:end="67:29">k</name> <operator pos:start="67:31" pos:end="67:31">&lt;</operator> <name pos:start="67:33" pos:end="67:40">nsamples</name></expr>;</condition> <incr pos:start="67:43" pos:end="67:45"><expr pos:start="67:43" pos:end="67:45"><name pos:start="67:43" pos:end="67:43">k</name><operator pos:start="67:44" pos:end="67:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:21" pos:end="69:41"><block_content pos:start="69:21" pos:end="69:41">

                    <expr_stmt pos:start="69:21" pos:end="69:41"><expr pos:start="69:21" pos:end="69:40"><name pos:start="69:21" pos:end="69:26"><name pos:start="69:21" pos:end="69:23">buf</name><index pos:start="69:24" pos:end="69:26">[<expr pos:start="69:25" pos:end="69:25"><name pos:start="69:25" pos:end="69:25">k</name></expr>]</index></name> <operator pos:start="69:28" pos:end="69:29">+=</operator> <name pos:start="69:31" pos:end="69:40"><name pos:start="69:31" pos:end="69:33">buf</name><index pos:start="69:34" pos:end="69:40">[<expr pos:start="69:35" pos:end="69:39"><name pos:start="69:35" pos:end="69:35">k</name> <operator pos:start="69:37" pos:end="69:37">-</operator> <literal type="number" pos:start="69:39" pos:end="69:39">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="77:5" pos:end="77:46">// Inverse pairwise channel decorrellation</comment>

    <if_stmt pos:start="79:5" pos:end="115:5"><if pos:start="79:5" pos:end="115:5">if <condition pos:start="79:8" pos:end="79:25">(<expr pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:9">b</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:24">decor_enabled</name></name></expr>)</condition> <block pos:start="79:27" pos:end="115:5">{<block_content pos:start="81:9" pos:end="113:60">

        <decl_stmt pos:start="81:9" pos:end="81:43"><decl pos:start="81:9" pos:end="81:42"><type pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:15">int32_t</name> <modifier pos:start="81:17" pos:end="81:17">*</modifier></type><name pos:start="81:18" pos:end="81:42"><name pos:start="81:18" pos:end="81:20">tmp</name><index pos:start="81:21" pos:end="81:42">[<expr pos:start="81:22" pos:end="81:41"><name pos:start="81:22" pos:end="81:41">DCA_XLL_CHANNELS_MAX</name></expr>]</index></name></decl>;</decl_stmt>



        <for pos:start="85:9" pos:end="99:9">for <control pos:start="85:13" pos:end="85:46">(<init pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:14">i</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>;</init> <condition pos:start="85:21" pos:end="85:41"><expr pos:start="85:21" pos:end="85:40"><name pos:start="85:21" pos:end="85:21">i</name> <operator pos:start="85:23" pos:end="85:23">&lt;</operator> <name pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:25">c</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:36">nchannels</name></name> <operator pos:start="85:38" pos:end="85:38">/</operator> <literal type="number" pos:start="85:40" pos:end="85:40">2</literal></expr>;</condition> <incr pos:start="85:43" pos:end="85:45"><expr pos:start="85:43" pos:end="85:45"><name pos:start="85:43" pos:end="85:43">i</name><operator pos:start="85:44" pos:end="85:45">++</operator></expr></incr>)</control> <block pos:start="85:48" pos:end="99:9">{<block_content pos:start="87:13" pos:end="97:13">

            <decl_stmt pos:start="87:13" pos:end="87:42"><decl pos:start="87:13" pos:end="87:41"><type pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">int</name></type> <name pos:start="87:17" pos:end="87:21">coeff</name> <init pos:start="87:23" pos:end="87:41">= <expr pos:start="87:25" pos:end="87:41"><name pos:start="87:25" pos:end="87:41"><name pos:start="87:25" pos:end="87:25">b</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:38">decor_coeff</name><index pos:start="87:39" pos:end="87:41">[<expr pos:start="87:40" pos:end="87:40"><name pos:start="87:40" pos:end="87:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="89:13" pos:end="97:13"><if pos:start="89:13" pos:end="97:13">if <condition pos:start="89:16" pos:end="89:22">(<expr pos:start="89:17" pos:end="89:21"><name pos:start="89:17" pos:end="89:21">coeff</name></expr>)</condition> <block pos:start="89:24" pos:end="97:13">{<block_content pos:start="91:17" pos:end="95:50">

                <expr_stmt pos:start="91:17" pos:end="95:50"><expr pos:start="91:17" pos:end="95:49"><call pos:start="91:17" pos:end="95:49"><name pos:start="91:17" pos:end="91:32"><name pos:start="91:17" pos:end="91:17">s</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:25">dcadsp</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:32">decor</name></name><argument_list pos:start="91:33" pos:end="95:49">(<argument pos:start="91:34" pos:end="91:64"><expr pos:start="91:34" pos:end="91:64"><name pos:start="91:34" pos:end="91:64"><name pos:start="91:34" pos:end="91:34">b</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:53">msb_sample_buffer</name><index pos:start="91:54" pos:end="91:64">[<expr pos:start="91:55" pos:end="91:63"><name pos:start="91:55" pos:end="91:55">i</name> <operator pos:start="91:57" pos:end="91:57">*</operator> <literal type="number" pos:start="91:59" pos:end="91:61">2</literal> <operator pos:start="91:61" pos:end="91:61">+</operator> <literal type="number" pos:start="91:63" pos:end="91:63">1</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="93:34" pos:end="93:64"><expr pos:start="93:34" pos:end="93:64"><name pos:start="93:34" pos:end="93:64"><name pos:start="93:34" pos:end="93:34">b</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:53">msb_sample_buffer</name><index pos:start="93:54" pos:end="93:64">[<expr pos:start="93:55" pos:end="93:59"><name pos:start="93:55" pos:end="93:55">i</name> <operator pos:start="93:57" pos:end="93:57">*</operator> <literal type="number" pos:start="93:59" pos:end="93:59">2</literal></expr>    ]</index></name></expr></argument>,

                                 <argument pos:start="95:34" pos:end="95:38"><expr pos:start="95:34" pos:end="95:38"><name pos:start="95:34" pos:end="95:38">coeff</name></expr></argument>, <argument pos:start="95:41" pos:end="95:48"><expr pos:start="95:41" pos:end="95:48"><name pos:start="95:41" pos:end="95:48">nsamples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="line" pos:start="103:9" pos:end="103:57">// Reorder channel pointers to the original order</comment>

        <for pos:start="105:9" pos:end="107:45">for <control pos:start="105:13" pos:end="105:42">(<init pos:start="105:14" pos:end="105:19"><expr pos:start="105:14" pos:end="105:18"><name pos:start="105:14" pos:end="105:14">i</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <literal type="number" pos:start="105:18" pos:end="105:18">0</literal></expr>;</init> <condition pos:start="105:21" pos:end="105:37"><expr pos:start="105:21" pos:end="105:36"><name pos:start="105:21" pos:end="105:21">i</name> <operator pos:start="105:23" pos:end="105:23">&lt;</operator> <name pos:start="105:25" pos:end="105:36"><name pos:start="105:25" pos:end="105:25">c</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:36">nchannels</name></name></expr>;</condition> <incr pos:start="105:39" pos:end="105:41"><expr pos:start="105:39" pos:end="105:41"><name pos:start="105:39" pos:end="105:39">i</name><operator pos:start="105:40" pos:end="105:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:13" pos:end="107:45"><block_content pos:start="107:13" pos:end="107:45">

            <expr_stmt pos:start="107:13" pos:end="107:45"><expr pos:start="107:13" pos:end="107:44"><name pos:start="107:13" pos:end="107:18"><name pos:start="107:13" pos:end="107:15">tmp</name><index pos:start="107:16" pos:end="107:18">[<expr pos:start="107:17" pos:end="107:17"><name pos:start="107:17" pos:end="107:17">i</name></expr>]</index></name> <operator pos:start="107:20" pos:end="107:20">=</operator> <name pos:start="107:22" pos:end="107:44"><name pos:start="107:22" pos:end="107:22">b</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:41">msb_sample_buffer</name><index pos:start="107:42" pos:end="107:44">[<expr pos:start="107:43" pos:end="107:43"><name pos:start="107:43" pos:end="107:43">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="111:9" pos:end="113:60">for <control pos:start="111:13" pos:end="111:42">(<init pos:start="111:14" pos:end="111:19"><expr pos:start="111:14" pos:end="111:18"><name pos:start="111:14" pos:end="111:14">i</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <literal type="number" pos:start="111:18" pos:end="111:18">0</literal></expr>;</init> <condition pos:start="111:21" pos:end="111:37"><expr pos:start="111:21" pos:end="111:36"><name pos:start="111:21" pos:end="111:21">i</name> <operator pos:start="111:23" pos:end="111:23">&lt;</operator> <name pos:start="111:25" pos:end="111:36"><name pos:start="111:25" pos:end="111:25">c</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:36">nchannels</name></name></expr>;</condition> <incr pos:start="111:39" pos:end="111:41"><expr pos:start="111:39" pos:end="111:41"><name pos:start="111:39" pos:end="111:39">i</name><operator pos:start="111:40" pos:end="111:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="113:13" pos:end="113:60"><block_content pos:start="113:13" pos:end="113:60">

            <expr_stmt pos:start="113:13" pos:end="113:60"><expr pos:start="113:13" pos:end="113:59"><name pos:start="113:13" pos:end="113:50"><name pos:start="113:13" pos:end="113:13">b</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:32">msb_sample_buffer</name><index pos:start="113:33" pos:end="113:50">[<expr pos:start="113:34" pos:end="113:49"><name pos:start="113:34" pos:end="113:49"><name pos:start="113:34" pos:end="113:34">b</name><operator pos:start="113:35" pos:end="113:36">-&gt;</operator><name pos:start="113:37" pos:end="113:46">orig_order</name><index pos:start="113:47" pos:end="113:49">[<expr pos:start="113:48" pos:end="113:48"><name pos:start="113:48" pos:end="113:48">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="113:52" pos:end="113:52">=</operator> <name pos:start="113:54" pos:end="113:59"><name pos:start="113:54" pos:end="113:56">tmp</name><index pos:start="113:57" pos:end="113:59">[<expr pos:start="113:58" pos:end="113:58"><name pos:start="113:58" pos:end="113:58">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="119:5" pos:end="119:55">// Map output channel pointers for frequency band 0</comment>

    <if_stmt pos:start="121:5" pos:end="125:72"><if pos:start="121:5" pos:end="125:72">if <condition pos:start="121:8" pos:end="121:27">(<expr pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:9">c</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:21">nfreqbands</name></name> <operator pos:start="121:23" pos:end="121:24">==</operator> <literal type="number" pos:start="121:26" pos:end="121:26">1</literal></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="125:72"><block_content pos:start="123:9" pos:end="125:72">

        <for pos:start="123:9" pos:end="125:72">for <control pos:start="123:13" pos:end="123:42">(<init pos:start="123:14" pos:end="123:19"><expr pos:start="123:14" pos:end="123:18"><name pos:start="123:14" pos:end="123:14">i</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <literal type="number" pos:start="123:18" pos:end="123:18">0</literal></expr>;</init> <condition pos:start="123:21" pos:end="123:37"><expr pos:start="123:21" pos:end="123:36"><name pos:start="123:21" pos:end="123:21">i</name> <operator pos:start="123:23" pos:end="123:23">&lt;</operator> <name pos:start="123:25" pos:end="123:36"><name pos:start="123:25" pos:end="123:25">c</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:36">nchannels</name></name></expr>;</condition> <incr pos:start="123:39" pos:end="123:41"><expr pos:start="123:39" pos:end="123:41"><name pos:start="123:39" pos:end="123:39">i</name><operator pos:start="123:40" pos:end="123:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="125:13" pos:end="125:72"><block_content pos:start="125:13" pos:end="125:72">

            <expr_stmt pos:start="125:13" pos:end="125:72"><expr pos:start="125:13" pos:end="125:71"><name pos:start="125:13" pos:end="125:45"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:29">output_samples</name><index pos:start="125:30" pos:end="125:45">[<expr pos:start="125:31" pos:end="125:44"><name pos:start="125:31" pos:end="125:44"><name pos:start="125:31" pos:end="125:31">c</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:41">ch_remap</name><index pos:start="125:42" pos:end="125:44">[<expr pos:start="125:43" pos:end="125:43"><name pos:start="125:43" pos:end="125:43">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="125:47" pos:end="125:47">=</operator> <name pos:start="125:49" pos:end="125:71"><name pos:start="125:49" pos:end="125:49">b</name><operator pos:start="125:50" pos:end="125:51">-&gt;</operator><name pos:start="125:52" pos:end="125:68">msb_sample_buffer</name><index pos:start="125:69" pos:end="125:71">[<expr pos:start="125:70" pos:end="125:70"><name pos:start="125:70" pos:end="125:70">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
