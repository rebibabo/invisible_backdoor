<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12009.c" pos:tabs="8"><function pos:start="1:1" pos:end="251:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ff_nvenc_encode_frame</name><parameter_list pos:start="1:26" pos:end="3:64">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><name pos:start="1:27" pos:end="1:40">AVCodecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">avctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:57">AVPacket</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">pkt</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:46"><decl pos:start="3:27" pos:end="3:46"><type pos:start="3:27" pos:end="3:46"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:39">AVFrame</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:46">frame</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:63"><decl pos:start="3:49" pos:end="3:63"><type pos:start="3:49" pos:end="3:63"><name pos:start="3:49" pos:end="3:51">int</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:63">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="251:1">{<block_content pos:start="7:5" pos:end="249:13">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15">NVENCSTATUS</name></type> <name pos:start="7:17" pos:end="7:25">nv_status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">CUresult</name></type> <name pos:start="9:14" pos:end="9:19">cu_res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">CUcontext</name></type> <name pos:start="11:15" pos:end="11:19">dummy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">NvencSurface</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:28">tmpoutsurf</name></decl>, <decl pos:start="13:31" pos:end="13:37"><type ref="prev" pos:start="13:5" pos:end="13:18"><modifier pos:start="13:31" pos:end="13:31">*</modifier></type><name pos:start="13:32" pos:end="13:37">inSurf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">res</name></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:41"><decl pos:start="19:5" pos:end="19:40"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">NvencContext</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:21">ctx</name> <init pos:start="19:23" pos:end="19:40">= <expr pos:start="19:25" pos:end="19:40"><name pos:start="19:25" pos:end="19:40"><name pos:start="19:25" pos:end="19:29">avctx</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:59"><decl pos:start="21:5" pos:end="21:58"><type pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:25">NvencDynLoadFunctions</name> <modifier pos:start="21:27" pos:end="21:27">*</modifier></type><name pos:start="21:28" pos:end="21:32">dl_fn</name> <init pos:start="21:34" pos:end="21:58">= <expr pos:start="21:36" pos:end="21:58"><operator pos:start="21:36" pos:end="21:36">&amp;</operator><name pos:start="21:37" pos:end="21:58"><name pos:start="21:37" pos:end="21:39">ctx</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:58">nvenc_dload_funcs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:63"><decl pos:start="23:5" pos:end="23:62"><type pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:31">NV_ENCODE_API_FUNCTION_LIST</name> <modifier pos:start="23:33" pos:end="23:33">*</modifier></type><name pos:start="23:34" pos:end="23:40">p_nvenc</name> <init pos:start="23:42" pos:end="23:62">= <expr pos:start="23:44" pos:end="23:62"><operator pos:start="23:44" pos:end="23:44">&amp;</operator><name pos:start="23:45" pos:end="23:62"><name pos:start="23:45" pos:end="23:49">dl_fn</name><operator pos:start="23:50" pos:end="23:51">-&gt;</operator><name pos:start="23:52" pos:end="23:62">nvenc_funcs</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="27:5" pos:end="27:41"><decl pos:start="27:5" pos:end="27:40"><type pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:21">NV_ENC_PIC_PARAMS</name></type> <name pos:start="27:23" pos:end="27:32">pic_params</name> <init pos:start="27:34" pos:end="27:40">= <expr pos:start="27:36" pos:end="27:40"><block pos:start="27:36" pos:end="27:40">{ <expr pos:start="27:38" pos:end="27:38"><literal type="number" pos:start="27:38" pos:end="27:38">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:14">pic_params</name><operator pos:start="29:15" pos:end="29:15">.</operator><name pos:start="29:16" pos:end="29:22">version</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:46">NV_ENC_PIC_PARAMS_VER</name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="141:5"><if pos:start="33:5" pos:end="137:5">if <condition pos:start="33:8" pos:end="33:14">(<expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:13">frame</name></expr>)</condition> <block pos:start="33:16" pos:end="137:5">{<block_content pos:start="35:9" pos:end="135:60">

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:14">inSurf</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:36"><name pos:start="35:18" pos:end="35:31">get_free_frame</name><argument_list pos:start="35:32" pos:end="35:36">(<argument pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><name pos:start="35:33" pos:end="35:35">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:19">inSurf</name></expr>)</condition> <block pos:start="37:22" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:31">

            <expr_stmt pos:start="39:13" pos:end="39:62"><expr pos:start="39:13" pos:end="39:61"><call pos:start="39:13" pos:end="39:61"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:61">(<argument pos:start="39:20" pos:end="39:24"><expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:24">avctx</name></expr></argument>, <argument pos:start="39:27" pos:end="39:38"><expr pos:start="39:27" pos:end="39:38"><name pos:start="39:27" pos:end="39:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:41" pos:end="39:60"><expr pos:start="39:41" pos:end="39:60"><literal type="string" pos:start="39:41" pos:end="39:60">"No free surfaces\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:31">return <expr pos:start="41:20" pos:end="41:30"><name pos:start="41:20" pos:end="41:30">AVERROR_BUG</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:67"><expr pos:start="47:9" pos:end="47:66"><name pos:start="47:9" pos:end="47:14">cu_res</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:66"><name pos:start="47:18" pos:end="47:49"><name pos:start="47:18" pos:end="47:22">dl_fn</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:31">cuda_dl</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:49">cuCtxPushCurrent</name></name><argument_list pos:start="47:50" pos:end="47:66">(<argument pos:start="47:51" pos:end="47:65"><expr pos:start="47:51" pos:end="47:65"><name pos:start="47:51" pos:end="47:65"><name pos:start="47:51" pos:end="47:53">ctx</name><operator pos:start="47:54" pos:end="47:55">-&gt;</operator><name pos:start="47:56" pos:end="47:65">cu_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:35">(<expr pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:18">cu_res</name> <operator pos:start="49:20" pos:end="49:21">!=</operator> <name pos:start="49:23" pos:end="49:34">CUDA_SUCCESS</name></expr>)</condition> <block pos:start="49:37" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:36">

            <expr_stmt pos:start="51:13" pos:end="51:69"><expr pos:start="51:13" pos:end="51:68"><call pos:start="51:13" pos:end="51:68"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:68">(<argument pos:start="51:20" pos:end="51:24"><expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:24">avctx</name></expr></argument>, <argument pos:start="51:27" pos:end="51:38"><expr pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:41" pos:end="51:67"><expr pos:start="51:41" pos:end="51:67"><literal type="string" pos:start="51:41" pos:end="51:67">"cuCtxPushCurrent failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:36">return <expr pos:start="53:20" pos:end="53:35"><name pos:start="53:20" pos:end="53:35">AVERROR_EXTERNAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:55"><expr pos:start="59:9" pos:end="59:54"><name pos:start="59:9" pos:end="59:11">res</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:54"><name pos:start="59:15" pos:end="59:32">nvenc_upload_frame</name><argument_list pos:start="59:33" pos:end="59:54">(<argument pos:start="59:34" pos:end="59:38"><expr pos:start="59:34" pos:end="59:38"><name pos:start="59:34" pos:end="59:38">avctx</name></expr></argument>, <argument pos:start="59:41" pos:end="59:45"><expr pos:start="59:41" pos:end="59:45"><name pos:start="59:41" pos:end="59:45">frame</name></expr></argument>, <argument pos:start="59:48" pos:end="59:53"><expr pos:start="59:48" pos:end="59:53"><name pos:start="59:48" pos:end="59:53">inSurf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:57"><expr pos:start="63:9" pos:end="63:56"><name pos:start="63:9" pos:end="63:14">cu_res</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:56"><name pos:start="63:18" pos:end="63:48"><name pos:start="63:18" pos:end="63:22">dl_fn</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:31">cuda_dl</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:48">cuCtxPopCurrent</name></name><argument_list pos:start="63:49" pos:end="63:56">(<argument pos:start="63:50" pos:end="63:55"><expr pos:start="63:50" pos:end="63:55"><operator pos:start="63:50" pos:end="63:50">&amp;</operator><name pos:start="63:51" pos:end="63:55">dummy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:35">(<expr pos:start="65:13" pos:end="65:34"><name pos:start="65:13" pos:end="65:18">cu_res</name> <operator pos:start="65:20" pos:end="65:21">!=</operator> <name pos:start="65:23" pos:end="65:34">CUDA_SUCCESS</name></expr>)</condition> <block pos:start="65:37" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:36">

            <expr_stmt pos:start="67:13" pos:end="67:68"><expr pos:start="67:13" pos:end="67:67"><call pos:start="67:13" pos:end="67:67"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="67:67">(<argument pos:start="67:20" pos:end="67:24"><expr pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:24">avctx</name></expr></argument>, <argument pos:start="67:27" pos:end="67:38"><expr pos:start="67:27" pos:end="67:38"><name pos:start="67:27" pos:end="67:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:41" pos:end="67:66"><expr pos:start="67:41" pos:end="67:66"><literal type="string" pos:start="67:41" pos:end="67:66">"cuCtxPopCurrent failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:36">return <expr pos:start="69:20" pos:end="69:35"><name pos:start="69:20" pos:end="69:35">AVERROR_EXTERNAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:16">(<expr pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:15">res</name></expr>)</condition> <block pos:start="75:18" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:23">

            <expr_stmt pos:start="77:13" pos:end="77:34"><expr pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:29"><name pos:start="77:13" pos:end="77:18">inSurf</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:29">lockCount</name></name> <operator pos:start="77:31" pos:end="77:31">=</operator> <literal type="number" pos:start="77:33" pos:end="77:33">0</literal></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:23">return <expr pos:start="79:20" pos:end="79:22"><name pos:start="79:20" pos:end="79:22">res</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:55"><expr pos:start="85:9" pos:end="85:54"><name pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:18">pic_params</name><operator pos:start="85:19" pos:end="85:19">.</operator><name pos:start="85:20" pos:end="85:30">inputBuffer</name></name> <operator pos:start="85:32" pos:end="85:32">=</operator> <name pos:start="85:34" pos:end="85:54"><name pos:start="85:34" pos:end="85:39">inSurf</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:54">input_surface</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:46"><expr pos:start="87:9" pos:end="87:45"><name pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:18">pic_params</name><operator pos:start="87:19" pos:end="87:19">.</operator><name pos:start="87:20" pos:end="87:28">bufferFmt</name></name> <operator pos:start="87:30" pos:end="87:30">=</operator> <name pos:start="87:32" pos:end="87:45"><name pos:start="87:32" pos:end="87:37">inSurf</name><operator pos:start="87:38" pos:end="87:39">-&gt;</operator><name pos:start="87:40" pos:end="87:45">format</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:45"><expr pos:start="89:9" pos:end="89:44"><name pos:start="89:9" pos:end="89:29"><name pos:start="89:9" pos:end="89:18">pic_params</name><operator pos:start="89:19" pos:end="89:19">.</operator><name pos:start="89:20" pos:end="89:29">inputWidth</name></name> <operator pos:start="89:31" pos:end="89:31">=</operator> <name pos:start="89:33" pos:end="89:44"><name pos:start="89:33" pos:end="89:37">avctx</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:44">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:47"><expr pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:18">pic_params</name><operator pos:start="91:19" pos:end="91:19">.</operator><name pos:start="91:20" pos:end="91:30">inputHeight</name></name> <operator pos:start="91:32" pos:end="91:32">=</operator> <name pos:start="91:34" pos:end="91:46"><name pos:start="91:34" pos:end="91:38">avctx</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:46">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:46"><expr pos:start="93:9" pos:end="93:45"><name pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:18">pic_params</name><operator pos:start="93:19" pos:end="93:19">.</operator><name pos:start="93:20" pos:end="93:29">inputPitch</name></name> <operator pos:start="93:31" pos:end="93:31">=</operator> <name pos:start="93:33" pos:end="93:45"><name pos:start="93:33" pos:end="93:38">inSurf</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:45">pitch</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:60"><expr pos:start="95:9" pos:end="95:59"><name pos:start="95:9" pos:end="95:34"><name pos:start="95:9" pos:end="95:18">pic_params</name><operator pos:start="95:19" pos:end="95:19">.</operator><name pos:start="95:20" pos:end="95:34">outputBitstream</name></name> <operator pos:start="95:36" pos:end="95:36">=</operator> <name pos:start="95:38" pos:end="95:59"><name pos:start="95:38" pos:end="95:43">inSurf</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:59">output_surface</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="113:9"><if pos:start="99:9" pos:end="109:9">if <condition pos:start="99:12" pos:end="99:56">(<expr pos:start="99:13" pos:end="99:55"><name pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:17">avctx</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:24">flags</name></name> <operator pos:start="99:26" pos:end="99:26">&amp;</operator> <name pos:start="99:28" pos:end="99:55">AV_CODEC_FLAG_INTERLACED_DCT</name></expr>)</condition> <block pos:start="99:58" pos:end="109:9">{<block_content pos:start="101:13" pos:end="107:78">

            <if_stmt pos:start="101:13" pos:end="107:78"><if pos:start="101:13" pos:end="103:78">if <condition pos:start="101:16" pos:end="101:39">(<expr pos:start="101:17" pos:end="101:38"><name pos:start="101:17" pos:end="101:38"><name pos:start="101:17" pos:end="101:21">frame</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:38">top_field_first</name></name></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:78"><block_content pos:start="103:17" pos:end="103:78">

                <expr_stmt pos:start="103:17" pos:end="103:78"><expr pos:start="103:17" pos:end="103:77"><name pos:start="103:17" pos:end="103:40"><name pos:start="103:17" pos:end="103:26">pic_params</name><operator pos:start="103:27" pos:end="103:27">.</operator><name pos:start="103:28" pos:end="103:40">pictureStruct</name></name> <operator pos:start="103:42" pos:end="103:42">=</operator> <name pos:start="103:44" pos:end="103:77">NV_ENC_PIC_STRUCT_FIELD_TOP_BOTTOM</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="105:13" pos:end="107:78">else<block type="pseudo" pos:start="107:17" pos:end="107:78"><block_content pos:start="107:17" pos:end="107:78">

                <expr_stmt pos:start="107:17" pos:end="107:78"><expr pos:start="107:17" pos:end="107:77"><name pos:start="107:17" pos:end="107:40"><name pos:start="107:17" pos:end="107:26">pic_params</name><operator pos:start="107:27" pos:end="107:27">.</operator><name pos:start="107:28" pos:end="107:40">pictureStruct</name></name> <operator pos:start="107:42" pos:end="107:42">=</operator> <name pos:start="107:44" pos:end="107:77">NV_ENC_PIC_STRUCT_FIELD_BOTTOM_TOP</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="113:9">else <block pos:start="109:16" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:63">

            <expr_stmt pos:start="111:13" pos:end="111:63"><expr pos:start="111:13" pos:end="111:62"><name pos:start="111:13" pos:end="111:36"><name pos:start="111:13" pos:end="111:22">pic_params</name><operator pos:start="111:23" pos:end="111:23">.</operator><name pos:start="111:24" pos:end="111:36">pictureStruct</name></name> <operator pos:start="111:38" pos:end="111:38">=</operator> <name pos:start="111:40" pos:end="111:62">NV_ENC_PIC_STRUCT_FRAME</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="117:9" pos:end="127:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:74">(<expr pos:start="117:13" pos:end="117:73"><name pos:start="117:13" pos:end="117:27"><name pos:start="117:13" pos:end="117:15">ctx</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:27">forced_idr</name></name> <operator pos:start="117:29" pos:end="117:30">&gt;=</operator> <literal type="number" pos:start="117:32" pos:end="117:32">0</literal> <operator pos:start="117:34" pos:end="117:35">&amp;&amp;</operator> <name pos:start="117:37" pos:end="117:52"><name pos:start="117:37" pos:end="117:41">frame</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:52">pict_type</name></name> <operator pos:start="117:54" pos:end="117:55">==</operator> <name pos:start="117:57" pos:end="117:73">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="117:76" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:88">

            <expr_stmt pos:start="119:13" pos:end="121:88"><expr pos:start="119:13" pos:end="121:87"><name pos:start="119:13" pos:end="119:37"><name pos:start="119:13" pos:end="119:22">pic_params</name><operator pos:start="119:23" pos:end="119:23">.</operator><name pos:start="119:24" pos:end="119:37">encodePicFlags</name></name> <operator pos:start="119:39" pos:end="119:39">=</operator>

                <ternary pos:start="121:17" pos:end="121:87"><condition pos:start="121:17" pos:end="121:33"><expr pos:start="121:17" pos:end="121:31"><name pos:start="121:17" pos:end="121:31"><name pos:start="121:17" pos:end="121:19">ctx</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:31">forced_idr</name></name></expr> ?</condition><then pos:start="121:35" pos:end="121:58"> <expr pos:start="121:35" pos:end="121:58"><name pos:start="121:35" pos:end="121:58">NV_ENC_PIC_FLAG_FORCEIDR</name></expr> </then><else pos:start="121:60" pos:end="121:87">: <expr pos:start="121:62" pos:end="121:87"><name pos:start="121:62" pos:end="121:87">NV_ENC_PIC_FLAG_FORCEINTRA</name></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="123:11" pos:end="127:9">else <block pos:start="123:16" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:42">

            <expr_stmt pos:start="125:13" pos:end="125:42"><expr pos:start="125:13" pos:end="125:41"><name pos:start="125:13" pos:end="125:37"><name pos:start="125:13" pos:end="125:22">pic_params</name><operator pos:start="125:23" pos:end="125:23">.</operator><name pos:start="125:24" pos:end="125:37">encodePicFlags</name></name> <operator pos:start="125:39" pos:end="125:39">=</operator> <literal type="number" pos:start="125:41" pos:end="125:41">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:47"><expr pos:start="131:9" pos:end="131:46"><name pos:start="131:9" pos:end="131:33"><name pos:start="131:9" pos:end="131:18">pic_params</name><operator pos:start="131:19" pos:end="131:19">.</operator><name pos:start="131:20" pos:end="131:33">inputTimeStamp</name></name> <operator pos:start="131:35" pos:end="131:35">=</operator> <name pos:start="131:37" pos:end="131:46"><name pos:start="131:37" pos:end="131:41">frame</name><operator pos:start="131:42" pos:end="131:43">-&gt;</operator><name pos:start="131:44" pos:end="131:46">pts</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:60"><expr pos:start="135:9" pos:end="135:59"><call pos:start="135:9" pos:end="135:59"><name pos:start="135:9" pos:end="135:39">nvenc_codec_specific_pic_params</name><argument_list pos:start="135:40" pos:end="135:59">(<argument pos:start="135:41" pos:end="135:45"><expr pos:start="135:41" pos:end="135:45"><name pos:start="135:41" pos:end="135:45">avctx</name></expr></argument>, <argument pos:start="135:48" pos:end="135:58"><expr pos:start="135:48" pos:end="135:58"><operator pos:start="135:48" pos:end="135:48">&amp;</operator><name pos:start="135:49" pos:end="135:58">pic_params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="137:7" pos:end="141:5">else <block pos:start="137:12" pos:end="141:5">{<block_content pos:start="139:9" pos:end="139:56">

        <expr_stmt pos:start="139:9" pos:end="139:56"><expr pos:start="139:9" pos:end="139:55"><name pos:start="139:9" pos:end="139:33"><name pos:start="139:9" pos:end="139:18">pic_params</name><operator pos:start="139:19" pos:end="139:19">.</operator><name pos:start="139:20" pos:end="139:33">encodePicFlags</name></name> <operator pos:start="139:35" pos:end="139:35">=</operator> <name pos:start="139:37" pos:end="139:55">NV_ENC_PIC_FLAG_EOS</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:63"><expr pos:start="145:5" pos:end="145:62"><name pos:start="145:5" pos:end="145:10">cu_res</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <call pos:start="145:14" pos:end="145:62"><name pos:start="145:14" pos:end="145:45"><name pos:start="145:14" pos:end="145:18">dl_fn</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:27">cuda_dl</name><operator pos:start="145:28" pos:end="145:29">-&gt;</operator><name pos:start="145:30" pos:end="145:45">cuCtxPushCurrent</name></name><argument_list pos:start="145:46" pos:end="145:62">(<argument pos:start="145:47" pos:end="145:61"><expr pos:start="145:47" pos:end="145:61"><name pos:start="145:47" pos:end="145:61"><name pos:start="145:47" pos:end="145:49">ctx</name><operator pos:start="145:50" pos:end="145:51">-&gt;</operator><name pos:start="145:52" pos:end="145:61">cu_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="147:5" pos:end="153:5"><if pos:start="147:5" pos:end="153:5">if <condition pos:start="147:8" pos:end="147:31">(<expr pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:14">cu_res</name> <operator pos:start="147:16" pos:end="147:17">!=</operator> <name pos:start="147:19" pos:end="147:30">CUDA_SUCCESS</name></expr>)</condition> <block pos:start="147:33" pos:end="153:5">{<block_content pos:start="149:9" pos:end="151:32">

        <expr_stmt pos:start="149:9" pos:end="149:65"><expr pos:start="149:9" pos:end="149:64"><call pos:start="149:9" pos:end="149:64"><name pos:start="149:9" pos:end="149:14">av_log</name><argument_list pos:start="149:15" pos:end="149:64">(<argument pos:start="149:16" pos:end="149:20"><expr pos:start="149:16" pos:end="149:20"><name pos:start="149:16" pos:end="149:20">avctx</name></expr></argument>, <argument pos:start="149:23" pos:end="149:34"><expr pos:start="149:23" pos:end="149:34"><name pos:start="149:23" pos:end="149:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="149:37" pos:end="149:63"><expr pos:start="149:37" pos:end="149:63"><literal type="string" pos:start="149:37" pos:end="149:63">"cuCtxPushCurrent failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="151:9" pos:end="151:32">return <expr pos:start="151:16" pos:end="151:31"><name pos:start="151:16" pos:end="151:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:73"><expr pos:start="157:5" pos:end="157:72"><name pos:start="157:5" pos:end="157:13">nv_status</name> <operator pos:start="157:15" pos:end="157:15">=</operator> <call pos:start="157:17" pos:end="157:72"><name pos:start="157:17" pos:end="157:43"><name pos:start="157:17" pos:end="157:23">p_nvenc</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:43">nvEncEncodePicture</name></name><argument_list pos:start="157:44" pos:end="157:72">(<argument pos:start="157:45" pos:end="157:58"><expr pos:start="157:45" pos:end="157:58"><name pos:start="157:45" pos:end="157:58"><name pos:start="157:45" pos:end="157:47">ctx</name><operator pos:start="157:48" pos:end="157:49">-&gt;</operator><name pos:start="157:50" pos:end="157:58">nvencoder</name></name></expr></argument>, <argument pos:start="157:61" pos:end="157:71"><expr pos:start="157:61" pos:end="157:71"><operator pos:start="157:61" pos:end="157:61">&amp;</operator><name pos:start="157:62" pos:end="157:71">pic_params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:53"><expr pos:start="161:5" pos:end="161:52"><name pos:start="161:5" pos:end="161:10">cu_res</name> <operator pos:start="161:12" pos:end="161:12">=</operator> <call pos:start="161:14" pos:end="161:52"><name pos:start="161:14" pos:end="161:44"><name pos:start="161:14" pos:end="161:18">dl_fn</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:27">cuda_dl</name><operator pos:start="161:28" pos:end="161:29">-&gt;</operator><name pos:start="161:30" pos:end="161:44">cuCtxPopCurrent</name></name><argument_list pos:start="161:45" pos:end="161:52">(<argument pos:start="161:46" pos:end="161:51"><expr pos:start="161:46" pos:end="161:51"><operator pos:start="161:46" pos:end="161:46">&amp;</operator><name pos:start="161:47" pos:end="161:51">dummy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="169:5"><if pos:start="163:5" pos:end="169:5">if <condition pos:start="163:8" pos:end="163:31">(<expr pos:start="163:9" pos:end="163:30"><name pos:start="163:9" pos:end="163:14">cu_res</name> <operator pos:start="163:16" pos:end="163:17">!=</operator> <name pos:start="163:19" pos:end="163:30">CUDA_SUCCESS</name></expr>)</condition> <block pos:start="163:33" pos:end="169:5">{<block_content pos:start="165:9" pos:end="167:32">

        <expr_stmt pos:start="165:9" pos:end="165:64"><expr pos:start="165:9" pos:end="165:63"><call pos:start="165:9" pos:end="165:63"><name pos:start="165:9" pos:end="165:14">av_log</name><argument_list pos:start="165:15" pos:end="165:63">(<argument pos:start="165:16" pos:end="165:20"><expr pos:start="165:16" pos:end="165:20"><name pos:start="165:16" pos:end="165:20">avctx</name></expr></argument>, <argument pos:start="165:23" pos:end="165:34"><expr pos:start="165:23" pos:end="165:34"><name pos:start="165:23" pos:end="165:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="165:37" pos:end="165:62"><expr pos:start="165:37" pos:end="165:62"><literal type="string" pos:start="165:37" pos:end="165:62">"cuCtxPopCurrent failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="167:9" pos:end="167:32">return <expr pos:start="167:16" pos:end="167:31"><name pos:start="167:16" pos:end="167:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="173:5" pos:end="177:76"><if pos:start="173:5" pos:end="177:76">if <condition pos:start="173:8" pos:end="175:48">(<expr pos:start="173:9" pos:end="175:47"><name pos:start="173:9" pos:end="173:17">nv_status</name> <operator pos:start="173:19" pos:end="173:20">!=</operator> <name pos:start="173:22" pos:end="173:35">NV_ENC_SUCCESS</name> <operator pos:start="173:37" pos:end="173:38">&amp;&amp;</operator>

        <name pos:start="175:9" pos:end="175:17">nv_status</name> <operator pos:start="175:19" pos:end="175:20">!=</operator> <name pos:start="175:22" pos:end="175:47">NV_ENC_ERR_NEED_MORE_INPUT</name></expr>)</condition><block type="pseudo" pos:start="177:9" pos:end="177:76"><block_content pos:start="177:9" pos:end="177:76">

        <return pos:start="177:9" pos:end="177:76">return <expr pos:start="177:16" pos:end="177:75"><call pos:start="177:16" pos:end="177:75"><name pos:start="177:16" pos:end="177:32">nvenc_print_error</name><argument_list pos:start="177:33" pos:end="177:75">(<argument pos:start="177:34" pos:end="177:38"><expr pos:start="177:34" pos:end="177:38"><name pos:start="177:34" pos:end="177:38">avctx</name></expr></argument>, <argument pos:start="177:41" pos:end="177:49"><expr pos:start="177:41" pos:end="177:49"><name pos:start="177:41" pos:end="177:49">nv_status</name></expr></argument>, <argument pos:start="177:52" pos:end="177:74"><expr pos:start="177:52" pos:end="177:74"><literal type="string" pos:start="177:52" pos:end="177:74">"EncodePicture failed!"</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="181:5" pos:end="197:5"><if pos:start="181:5" pos:end="197:5">if <condition pos:start="181:8" pos:end="181:14">(<expr pos:start="181:9" pos:end="181:13"><name pos:start="181:9" pos:end="181:13">frame</name></expr>)</condition> <block pos:start="181:16" pos:end="197:5">{<block_content pos:start="183:9" pos:end="195:45">

        <expr_stmt pos:start="183:9" pos:end="183:88"><expr pos:start="183:9" pos:end="183:87"><call pos:start="183:9" pos:end="183:87"><name pos:start="183:9" pos:end="183:29">av_fifo_generic_write</name><argument_list pos:start="183:30" pos:end="183:87">(<argument pos:start="183:31" pos:end="183:55"><expr pos:start="183:31" pos:end="183:55"><name pos:start="183:31" pos:end="183:55"><name pos:start="183:31" pos:end="183:33">ctx</name><operator pos:start="183:34" pos:end="183:35">-&gt;</operator><name pos:start="183:36" pos:end="183:55">output_surface_queue</name></name></expr></argument>, <argument pos:start="183:58" pos:end="183:64"><expr pos:start="183:58" pos:end="183:64"><operator pos:start="183:58" pos:end="183:58">&amp;</operator><name pos:start="183:59" pos:end="183:64">inSurf</name></expr></argument>, <argument pos:start="183:67" pos:end="183:80"><expr pos:start="183:67" pos:end="183:80"><sizeof pos:start="183:67" pos:end="183:80">sizeof<argument_list pos:start="183:73" pos:end="183:80">(<argument pos:start="183:74" pos:end="183:79"><expr pos:start="183:74" pos:end="183:79"><name pos:start="183:74" pos:end="183:79">inSurf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="183:83" pos:end="183:86"><expr pos:start="183:83" pos:end="183:86"><name pos:start="183:83" pos:end="183:86">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:65"><expr pos:start="185:9" pos:end="185:64"><call pos:start="185:9" pos:end="185:64"><name pos:start="185:9" pos:end="185:31">timestamp_queue_enqueue</name><argument_list pos:start="185:32" pos:end="185:64">(<argument pos:start="185:33" pos:end="185:51"><expr pos:start="185:33" pos:end="185:51"><name pos:start="185:33" pos:end="185:51"><name pos:start="185:33" pos:end="185:35">ctx</name><operator pos:start="185:36" pos:end="185:37">-&gt;</operator><name pos:start="185:38" pos:end="185:51">timestamp_list</name></name></expr></argument>, <argument pos:start="185:54" pos:end="185:63"><expr pos:start="185:54" pos:end="185:63"><name pos:start="185:54" pos:end="185:63"><name pos:start="185:54" pos:end="185:58">frame</name><operator pos:start="185:59" pos:end="185:60">-&gt;</operator><name pos:start="185:61" pos:end="185:63">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="189:9" pos:end="195:45"><if pos:start="189:9" pos:end="191:45">if <condition pos:start="189:12" pos:end="189:50">(<expr pos:start="189:13" pos:end="189:49"><name pos:start="189:13" pos:end="189:31"><name pos:start="189:13" pos:end="189:15">ctx</name><operator pos:start="189:16" pos:end="189:17">-&gt;</operator><name pos:start="189:18" pos:end="189:28">initial_pts</name><index pos:start="189:29" pos:end="189:31">[<expr pos:start="189:30" pos:end="189:30"><literal type="number" pos:start="189:30" pos:end="189:30">0</literal></expr>]</index></name> <operator pos:start="189:33" pos:end="189:34">==</operator> <name pos:start="189:36" pos:end="189:49">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:45"><block_content pos:start="191:13" pos:end="191:45">

            <expr_stmt pos:start="191:13" pos:end="191:45"><expr pos:start="191:13" pos:end="191:44"><name pos:start="191:13" pos:end="191:31"><name pos:start="191:13" pos:end="191:15">ctx</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:28">initial_pts</name><index pos:start="191:29" pos:end="191:31">[<expr pos:start="191:30" pos:end="191:30"><literal type="number" pos:start="191:30" pos:end="191:30">0</literal></expr>]</index></name> <operator pos:start="191:33" pos:end="191:33">=</operator> <name pos:start="191:35" pos:end="191:44"><name pos:start="191:35" pos:end="191:39">frame</name><operator pos:start="191:40" pos:end="191:41">-&gt;</operator><name pos:start="191:42" pos:end="191:44">pts</name></name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="193:9" pos:end="195:45">else if <condition pos:start="193:17" pos:end="193:55">(<expr pos:start="193:18" pos:end="193:54"><name pos:start="193:18" pos:end="193:36"><name pos:start="193:18" pos:end="193:20">ctx</name><operator pos:start="193:21" pos:end="193:22">-&gt;</operator><name pos:start="193:23" pos:end="193:33">initial_pts</name><index pos:start="193:34" pos:end="193:36">[<expr pos:start="193:35" pos:end="193:35"><literal type="number" pos:start="193:35" pos:end="193:35">1</literal></expr>]</index></name> <operator pos:start="193:38" pos:end="193:39">==</operator> <name pos:start="193:41" pos:end="193:54">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:45"><block_content pos:start="195:13" pos:end="195:45">

            <expr_stmt pos:start="195:13" pos:end="195:45"><expr pos:start="195:13" pos:end="195:44"><name pos:start="195:13" pos:end="195:31"><name pos:start="195:13" pos:end="195:15">ctx</name><operator pos:start="195:16" pos:end="195:17">-&gt;</operator><name pos:start="195:18" pos:end="195:28">initial_pts</name><index pos:start="195:29" pos:end="195:31">[<expr pos:start="195:30" pos:end="195:30"><literal type="number" pos:start="195:30" pos:end="195:30">1</literal></expr>]</index></name> <operator pos:start="195:33" pos:end="195:33">=</operator> <name pos:start="195:35" pos:end="195:44"><name pos:start="195:35" pos:end="195:39">frame</name><operator pos:start="195:40" pos:end="195:41">-&gt;</operator><name pos:start="195:42" pos:end="195:44">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="201:5" pos:end="201:58">/* all the pending buffers are now ready for output */</comment>

    <if_stmt pos:start="203:5" pos:end="213:5"><if pos:start="203:5" pos:end="213:5">if <condition pos:start="203:8" pos:end="203:36">(<expr pos:start="203:9" pos:end="203:35"><name pos:start="203:9" pos:end="203:17">nv_status</name> <operator pos:start="203:19" pos:end="203:20">==</operator> <name pos:start="203:22" pos:end="203:35">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="203:38" pos:end="213:5">{<block_content pos:start="205:9" pos:end="211:9">

        <while pos:start="205:9" pos:end="211:9">while <condition pos:start="205:15" pos:end="205:59">(<expr pos:start="205:16" pos:end="205:58"><call pos:start="205:16" pos:end="205:54"><name pos:start="205:16" pos:end="205:27">av_fifo_size</name><argument_list pos:start="205:28" pos:end="205:54">(<argument pos:start="205:29" pos:end="205:53"><expr pos:start="205:29" pos:end="205:53"><name pos:start="205:29" pos:end="205:53"><name pos:start="205:29" pos:end="205:31">ctx</name><operator pos:start="205:32" pos:end="205:33">-&gt;</operator><name pos:start="205:34" pos:end="205:53">output_surface_queue</name></name></expr></argument>)</argument_list></call> <operator pos:start="205:56" pos:end="205:56">&gt;</operator> <literal type="number" pos:start="205:58" pos:end="205:58">0</literal></expr>)</condition> <block pos:start="205:61" pos:end="211:9">{<block_content pos:start="207:13" pos:end="209:106">

            <expr_stmt pos:start="207:13" pos:end="207:99"><expr pos:start="207:13" pos:end="207:98"><call pos:start="207:13" pos:end="207:98"><name pos:start="207:13" pos:end="207:32">av_fifo_generic_read</name><argument_list pos:start="207:33" pos:end="207:98">(<argument pos:start="207:34" pos:end="207:58"><expr pos:start="207:34" pos:end="207:58"><name pos:start="207:34" pos:end="207:58"><name pos:start="207:34" pos:end="207:36">ctx</name><operator pos:start="207:37" pos:end="207:38">-&gt;</operator><name pos:start="207:39" pos:end="207:58">output_surface_queue</name></name></expr></argument>, <argument pos:start="207:61" pos:end="207:71"><expr pos:start="207:61" pos:end="207:71"><operator pos:start="207:61" pos:end="207:61">&amp;</operator><name pos:start="207:62" pos:end="207:71">tmpoutsurf</name></expr></argument>, <argument pos:start="207:74" pos:end="207:91"><expr pos:start="207:74" pos:end="207:91"><sizeof pos:start="207:74" pos:end="207:91">sizeof<argument_list pos:start="207:80" pos:end="207:91">(<argument pos:start="207:81" pos:end="207:90"><expr pos:start="207:81" pos:end="207:90"><name pos:start="207:81" pos:end="207:90">tmpoutsurf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="207:94" pos:end="207:97"><expr pos:start="207:94" pos:end="207:97"><name pos:start="207:94" pos:end="207:97">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:106"><expr pos:start="209:13" pos:end="209:105"><call pos:start="209:13" pos:end="209:105"><name pos:start="209:13" pos:end="209:33">av_fifo_generic_write</name><argument_list pos:start="209:34" pos:end="209:105">(<argument pos:start="209:35" pos:end="209:65"><expr pos:start="209:35" pos:end="209:65"><name pos:start="209:35" pos:end="209:65"><name pos:start="209:35" pos:end="209:37">ctx</name><operator pos:start="209:38" pos:end="209:39">-&gt;</operator><name pos:start="209:40" pos:end="209:65">output_surface_ready_queue</name></name></expr></argument>, <argument pos:start="209:68" pos:end="209:78"><expr pos:start="209:68" pos:end="209:78"><operator pos:start="209:68" pos:end="209:68">&amp;</operator><name pos:start="209:69" pos:end="209:78">tmpoutsurf</name></expr></argument>, <argument pos:start="209:81" pos:end="209:98"><expr pos:start="209:81" pos:end="209:98"><sizeof pos:start="209:81" pos:end="209:98">sizeof<argument_list pos:start="209:87" pos:end="209:98">(<argument pos:start="209:88" pos:end="209:97"><expr pos:start="209:88" pos:end="209:97"><name pos:start="209:88" pos:end="209:97">tmpoutsurf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="209:101" pos:end="209:104"><expr pos:start="209:101" pos:end="209:104"><name pos:start="209:101" pos:end="209:104">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="217:5" pos:end="245:5"><if pos:start="217:5" pos:end="241:5">if <condition pos:start="217:8" pos:end="217:36">(<expr pos:start="217:9" pos:end="217:35"><call pos:start="217:9" pos:end="217:35"><name pos:start="217:9" pos:end="217:20">output_ready</name><argument_list pos:start="217:21" pos:end="217:35">(<argument pos:start="217:22" pos:end="217:26"><expr pos:start="217:22" pos:end="217:26"><name pos:start="217:22" pos:end="217:26">avctx</name></expr></argument>, <argument pos:start="217:29" pos:end="217:34"><expr pos:start="217:29" pos:end="217:34"><operator pos:start="217:29" pos:end="217:29">!</operator><name pos:start="217:30" pos:end="217:34">frame</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="217:38" pos:end="241:5">{<block_content pos:start="219:9" pos:end="239:24">

        <expr_stmt pos:start="219:9" pos:end="219:101"><expr pos:start="219:9" pos:end="219:100"><call pos:start="219:9" pos:end="219:100"><name pos:start="219:9" pos:end="219:28">av_fifo_generic_read</name><argument_list pos:start="219:29" pos:end="219:100">(<argument pos:start="219:30" pos:end="219:60"><expr pos:start="219:30" pos:end="219:60"><name pos:start="219:30" pos:end="219:60"><name pos:start="219:30" pos:end="219:32">ctx</name><operator pos:start="219:33" pos:end="219:34">-&gt;</operator><name pos:start="219:35" pos:end="219:60">output_surface_ready_queue</name></name></expr></argument>, <argument pos:start="219:63" pos:end="219:73"><expr pos:start="219:63" pos:end="219:73"><operator pos:start="219:63" pos:end="219:63">&amp;</operator><name pos:start="219:64" pos:end="219:73">tmpoutsurf</name></expr></argument>, <argument pos:start="219:76" pos:end="219:93"><expr pos:start="219:76" pos:end="219:93"><sizeof pos:start="219:76" pos:end="219:93">sizeof<argument_list pos:start="219:82" pos:end="219:93">(<argument pos:start="219:83" pos:end="219:92"><expr pos:start="219:83" pos:end="219:92"><name pos:start="219:83" pos:end="219:92">tmpoutsurf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="219:96" pos:end="219:99"><expr pos:start="219:96" pos:end="219:99"><name pos:start="219:96" pos:end="219:99">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="223:9" pos:end="223:61"><expr pos:start="223:9" pos:end="223:60"><name pos:start="223:9" pos:end="223:11">res</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <call pos:start="223:15" pos:end="223:60"><name pos:start="223:15" pos:end="223:36">process_output_surface</name><argument_list pos:start="223:37" pos:end="223:60">(<argument pos:start="223:38" pos:end="223:42"><expr pos:start="223:38" pos:end="223:42"><name pos:start="223:38" pos:end="223:42">avctx</name></expr></argument>, <argument pos:start="223:45" pos:end="223:47"><expr pos:start="223:45" pos:end="223:47"><name pos:start="223:45" pos:end="223:47">pkt</name></expr></argument>, <argument pos:start="223:50" pos:end="223:59"><expr pos:start="223:50" pos:end="223:59"><name pos:start="223:50" pos:end="223:59">tmpoutsurf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="227:9" pos:end="229:23"><if pos:start="227:9" pos:end="229:23">if <condition pos:start="227:12" pos:end="227:16">(<expr pos:start="227:13" pos:end="227:15"><name pos:start="227:13" pos:end="227:15">res</name></expr>)</condition><block type="pseudo" pos:start="229:13" pos:end="229:23"><block_content pos:start="229:13" pos:end="229:23">

            <return pos:start="229:13" pos:end="229:23">return <expr pos:start="229:20" pos:end="229:22"><name pos:start="229:20" pos:end="229:22">res</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="233:9" pos:end="233:42"><expr pos:start="233:9" pos:end="233:41"><call pos:start="233:9" pos:end="233:41"><name pos:start="233:9" pos:end="233:18">av_assert0</name><argument_list pos:start="233:19" pos:end="233:41">(<argument pos:start="233:20" pos:end="233:40"><expr pos:start="233:20" pos:end="233:40"><name pos:start="233:20" pos:end="233:40"><name pos:start="233:20" pos:end="233:29">tmpoutsurf</name><operator pos:start="233:30" pos:end="233:31">-&gt;</operator><name pos:start="233:32" pos:end="233:40">lockCount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:32"><expr pos:start="235:9" pos:end="235:31"><name pos:start="235:9" pos:end="235:29"><name pos:start="235:9" pos:end="235:18">tmpoutsurf</name><operator pos:start="235:19" pos:end="235:20">-&gt;</operator><name pos:start="235:21" pos:end="235:29">lockCount</name></name><operator pos:start="235:30" pos:end="235:31">--</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="239:9" pos:end="239:24"><expr pos:start="239:9" pos:end="239:23"><operator pos:start="239:9" pos:end="239:9">*</operator><name pos:start="239:10" pos:end="239:19">got_packet</name> <operator pos:start="239:21" pos:end="239:21">=</operator> <literal type="number" pos:start="239:23" pos:end="239:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="241:7" pos:end="245:5">else <block pos:start="241:12" pos:end="245:5">{<block_content pos:start="243:9" pos:end="243:24">

        <expr_stmt pos:start="243:9" pos:end="243:24"><expr pos:start="243:9" pos:end="243:23"><operator pos:start="243:9" pos:end="243:9">*</operator><name pos:start="243:10" pos:end="243:19">got_packet</name> <operator pos:start="243:21" pos:end="243:21">=</operator> <literal type="number" pos:start="243:23" pos:end="243:23">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="249:5" pos:end="249:13">return <expr pos:start="249:12" pos:end="249:12"><literal type="number" pos:start="249:12" pos:end="249:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
