<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4660.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">vnc_update_client</name><parameter_list pos:start="1:30" pos:end="1:43">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:36"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="187:1">{<block_content pos:start="5:5" pos:end="183:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">VncState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">vs</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="175:5"><if pos:start="7:5" pos:end="175:5">if <condition pos:start="7:8" pos:end="7:43">(<expr pos:start="7:9" pos:end="7:42"><name pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:10">vs</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:23">need_update</name></name> <operator pos:start="7:25" pos:end="7:26">&amp;&amp;</operator> <name pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:29">vs</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:36">csock</name></name> <operator pos:start="7:38" pos:end="7:39">!=</operator> <operator pos:start="7:41" pos:end="7:41">-</operator><literal type="number" pos:start="7:42" pos:end="7:42">1</literal></expr>)</condition> <block pos:start="7:45" pos:end="175:5">{<block_content pos:start="9:9" pos:end="171:22">

        <decl_stmt pos:start="9:9" pos:end="9:14"><decl pos:start="9:9" pos:end="9:13"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">y</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:21"><decl pos:start="11:9" pos:end="11:20"><type pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:15">uint8_t</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">row</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:22"><decl pos:start="13:9" pos:end="13:21"><type pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:12">char</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:21">old_row</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:45"><decl pos:start="15:9" pos:end="15:44"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">uint32_t</name></type> <name pos:start="15:18" pos:end="15:44"><name pos:start="15:18" pos:end="15:27">width_mask</name><index pos:start="15:28" pos:end="15:44">[<expr pos:start="15:29" pos:end="15:43"><name pos:start="15:29" pos:end="15:43">VNC_DIRTY_WORDS</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:25"><decl pos:start="17:9" pos:end="17:24"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:24">n_rectangles</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:25"><decl pos:start="19:9" pos:end="19:24"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:24">saved_offset</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:26"><decl pos:start="21:9" pos:end="21:25"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:21">has_dirty</name> <init pos:start="21:23" pos:end="21:25">= <expr pos:start="21:25" pos:end="21:25"><literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><call pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:21">vga_hw_update</name><argument_list pos:start="25:22" pos:end="25:23">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:79"><expr pos:start="29:9" pos:end="29:78"><call pos:start="29:9" pos:end="29:78"><name pos:start="29:9" pos:end="29:20">vnc_set_bits</name><argument_list pos:start="29:21" pos:end="29:78">(<argument pos:start="29:22" pos:end="29:31"><expr pos:start="29:22" pos:end="29:31"><name pos:start="29:22" pos:end="29:31">width_mask</name></expr></argument>, <argument pos:start="29:34" pos:end="29:60"><expr pos:start="29:34" pos:end="29:60"><operator pos:start="29:34" pos:end="29:34">(</operator><call pos:start="29:35" pos:end="29:54"><name pos:start="29:35" pos:end="29:46">ds_get_width</name><argument_list pos:start="29:47" pos:end="29:54">(<argument pos:start="29:48" pos:end="29:53"><expr pos:start="29:48" pos:end="29:53"><name pos:start="29:48" pos:end="29:53"><name pos:start="29:48" pos:end="29:49">vs</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:53">ds</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:56" pos:end="29:56">/</operator> <literal type="number" pos:start="29:58" pos:end="29:59">16</literal><operator pos:start="29:60" pos:end="29:60">)</operator></expr></argument>, <argument pos:start="29:63" pos:end="29:77"><expr pos:start="29:63" pos:end="29:77"><name pos:start="29:63" pos:end="29:77">VNC_DIRTY_WORDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="33:9" pos:end="35:33">/* Walk through the dirty map and eliminate tiles that

           really aren't dirty */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:34"><expr pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:11">row</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:33"><name pos:start="37:15" pos:end="37:25">ds_get_data</name><argument_list pos:start="37:26" pos:end="37:33">(<argument pos:start="37:27" pos:end="37:32"><expr pos:start="37:27" pos:end="37:32"><name pos:start="37:27" pos:end="37:32"><name pos:start="37:27" pos:end="37:28">vs</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:32">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:15">old_row</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:20">vs</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:30">old_data</name></name></expr>;</expr_stmt>



        <for pos:start="43:9" pos:end="91:9">for <control pos:start="43:13" pos:end="43:51">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">y</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:46"><expr pos:start="43:21" pos:end="43:45"><name pos:start="43:21" pos:end="43:21">y</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <call pos:start="43:25" pos:end="43:45"><name pos:start="43:25" pos:end="43:37">ds_get_height</name><argument_list pos:start="43:38" pos:end="43:45">(<argument pos:start="43:39" pos:end="43:44"><expr pos:start="43:39" pos:end="43:44"><name pos:start="43:39" pos:end="43:44"><name pos:start="43:39" pos:end="43:40">vs</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:44">ds</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="43:48" pos:end="43:50"><expr pos:start="43:48" pos:end="43:50"><name pos:start="43:48" pos:end="43:48">y</name><operator pos:start="43:49" pos:end="43:50">++</operator></expr></incr>)</control> <block pos:start="43:53" pos:end="91:9">{<block_content pos:start="45:13" pos:end="89:47">

            <if_stmt pos:start="45:13" pos:end="83:13"><if pos:start="45:13" pos:end="83:13">if <condition pos:start="45:16" pos:end="45:76">(<expr pos:start="45:17" pos:end="45:75"><call pos:start="45:17" pos:end="45:75"><name pos:start="45:17" pos:end="45:28">vnc_and_bits</name><argument_list pos:start="45:29" pos:end="45:75">(<argument pos:start="45:30" pos:end="45:45"><expr pos:start="45:30" pos:end="45:45"><name pos:start="45:30" pos:end="45:45"><name pos:start="45:30" pos:end="45:31">vs</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:42">dirty_row</name><index pos:start="45:43" pos:end="45:45">[<expr pos:start="45:44" pos:end="45:44"><name pos:start="45:44" pos:end="45:44">y</name></expr>]</index></name></expr></argument>, <argument pos:start="45:48" pos:end="45:57"><expr pos:start="45:48" pos:end="45:57"><name pos:start="45:48" pos:end="45:57">width_mask</name></expr></argument>, <argument pos:start="45:60" pos:end="45:74"><expr pos:start="45:60" pos:end="45:74"><name pos:start="45:60" pos:end="45:74">VNC_DIRTY_WORDS</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:78" pos:end="83:13">{<block_content pos:start="47:17" pos:end="81:17">

                <decl_stmt pos:start="47:17" pos:end="47:22"><decl pos:start="47:17" pos:end="47:21"><type pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">int</name></type> <name pos:start="47:21" pos:end="47:21">x</name></decl>;</decl_stmt>

                <decl_stmt pos:start="49:17" pos:end="49:29"><decl pos:start="49:17" pos:end="49:28"><type pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:23">uint8_t</name> <modifier pos:start="49:25" pos:end="49:25">*</modifier></type><name pos:start="49:26" pos:end="49:28">ptr</name></decl>;</decl_stmt>

                <decl_stmt pos:start="51:17" pos:end="51:30"><decl pos:start="51:17" pos:end="51:29"><type pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:20">char</name> <modifier pos:start="51:22" pos:end="51:22">*</modifier></type><name pos:start="51:23" pos:end="51:29">old_ptr</name></decl>;</decl_stmt>



                <expr_stmt pos:start="55:17" pos:end="55:26"><expr pos:start="55:17" pos:end="55:25"><name pos:start="55:17" pos:end="55:19">ptr</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:25">row</name></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:41"><expr pos:start="57:17" pos:end="57:40"><name pos:start="57:17" pos:end="57:23">old_ptr</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <operator pos:start="57:27" pos:end="57:27">(</operator><name pos:start="57:28" pos:end="57:31">char</name><operator pos:start="57:32" pos:end="57:32">*</operator><operator pos:start="57:33" pos:end="57:33">)</operator><name pos:start="57:34" pos:end="57:40">old_row</name></expr>;</expr_stmt>



                <for pos:start="61:17" pos:end="81:17">for <control pos:start="61:21" pos:end="61:62">(<init pos:start="61:22" pos:end="61:27"><expr pos:start="61:22" pos:end="61:26"><name pos:start="61:22" pos:end="61:22">x</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <literal type="number" pos:start="61:26" pos:end="61:26">0</literal></expr>;</init> <condition pos:start="61:29" pos:end="61:53"><expr pos:start="61:29" pos:end="61:52"><name pos:start="61:29" pos:end="61:29">x</name> <operator pos:start="61:31" pos:end="61:31">&lt;</operator> <call pos:start="61:33" pos:end="61:52"><name pos:start="61:33" pos:end="61:44">ds_get_width</name><argument_list pos:start="61:45" pos:end="61:52">(<argument pos:start="61:46" pos:end="61:51"><expr pos:start="61:46" pos:end="61:51"><name pos:start="61:46" pos:end="61:51"><name pos:start="61:46" pos:end="61:47">vs</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:51">ds</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="61:55" pos:end="61:61"><expr pos:start="61:55" pos:end="61:61"><name pos:start="61:55" pos:end="61:55">x</name> <operator pos:start="61:57" pos:end="61:58">+=</operator> <literal type="number" pos:start="61:60" pos:end="61:61">16</literal></expr></incr>)</control> <block pos:start="61:64" pos:end="81:17">{<block_content pos:start="63:21" pos:end="79:67">

                    <if_stmt pos:start="63:21" pos:end="73:21"><if pos:start="63:21" pos:end="67:21">if <condition pos:start="63:24" pos:end="63:87">(<expr pos:start="63:25" pos:end="63:86"><call pos:start="63:25" pos:end="63:81"><name pos:start="63:25" pos:end="63:30">memcmp</name><argument_list pos:start="63:31" pos:end="63:81">(<argument pos:start="63:32" pos:end="63:38"><expr pos:start="63:32" pos:end="63:38"><name pos:start="63:32" pos:end="63:38">old_ptr</name></expr></argument>, <argument pos:start="63:41" pos:end="63:43"><expr pos:start="63:41" pos:end="63:43"><name pos:start="63:41" pos:end="63:43">ptr</name></expr></argument>, <argument pos:start="63:46" pos:end="63:80"><expr pos:start="63:46" pos:end="63:80"><literal type="number" pos:start="63:46" pos:end="63:47">16</literal> <operator pos:start="63:49" pos:end="63:49">*</operator> <call pos:start="63:51" pos:end="63:80"><name pos:start="63:51" pos:end="63:72">ds_get_bytes_per_pixel</name><argument_list pos:start="63:73" pos:end="63:80">(<argument pos:start="63:74" pos:end="63:79"><expr pos:start="63:74" pos:end="63:79"><name pos:start="63:74" pos:end="63:79"><name pos:start="63:74" pos:end="63:75">vs</name><operator pos:start="63:76" pos:end="63:77">-&gt;</operator><name pos:start="63:78" pos:end="63:79">ds</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="63:83" pos:end="63:84">==</operator> <literal type="number" pos:start="63:86" pos:end="63:86">0</literal></expr>)</condition> <block pos:start="63:89" pos:end="67:21">{<block_content pos:start="65:25" pos:end="65:66">

                        <expr_stmt pos:start="65:25" pos:end="65:66"><expr pos:start="65:25" pos:end="65:65"><call pos:start="65:25" pos:end="65:65"><name pos:start="65:25" pos:end="65:37">vnc_clear_bit</name><argument_list pos:start="65:38" pos:end="65:65">(<argument pos:start="65:39" pos:end="65:54"><expr pos:start="65:39" pos:end="65:54"><name pos:start="65:39" pos:end="65:54"><name pos:start="65:39" pos:end="65:40">vs</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:51">dirty_row</name><index pos:start="65:52" pos:end="65:54">[<expr pos:start="65:53" pos:end="65:53"><name pos:start="65:53" pos:end="65:53">y</name></expr>]</index></name></expr></argument>, <argument pos:start="65:57" pos:end="65:64"><expr pos:start="65:57" pos:end="65:64"><operator pos:start="65:57" pos:end="65:57">(</operator><name pos:start="65:58" pos:end="65:58">x</name> <operator pos:start="65:60" pos:end="65:60">/</operator> <literal type="number" pos:start="65:62" pos:end="65:63">16</literal><operator pos:start="65:64" pos:end="65:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="67:23" pos:end="73:21">else <block pos:start="67:28" pos:end="73:21">{<block_content pos:start="69:25" pos:end="71:82">

                        <expr_stmt pos:start="69:25" pos:end="69:38"><expr pos:start="69:25" pos:end="69:37"><name pos:start="69:25" pos:end="69:33">has_dirty</name> <operator pos:start="69:35" pos:end="69:35">=</operator> <literal type="number" pos:start="69:37" pos:end="69:37">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="71:25" pos:end="71:82"><expr pos:start="71:25" pos:end="71:81"><call pos:start="71:25" pos:end="71:81"><name pos:start="71:25" pos:end="71:30">memcpy</name><argument_list pos:start="71:31" pos:end="71:81">(<argument pos:start="71:32" pos:end="71:38"><expr pos:start="71:32" pos:end="71:38"><name pos:start="71:32" pos:end="71:38">old_ptr</name></expr></argument>, <argument pos:start="71:41" pos:end="71:43"><expr pos:start="71:41" pos:end="71:43"><name pos:start="71:41" pos:end="71:43">ptr</name></expr></argument>, <argument pos:start="71:46" pos:end="71:80"><expr pos:start="71:46" pos:end="71:80"><literal type="number" pos:start="71:46" pos:end="71:47">16</literal> <operator pos:start="71:49" pos:end="71:49">*</operator> <call pos:start="71:51" pos:end="71:80"><name pos:start="71:51" pos:end="71:72">ds_get_bytes_per_pixel</name><argument_list pos:start="71:73" pos:end="71:80">(<argument pos:start="71:74" pos:end="71:79"><expr pos:start="71:74" pos:end="71:79"><name pos:start="71:74" pos:end="71:79"><name pos:start="71:74" pos:end="71:75">vs</name><operator pos:start="71:76" pos:end="71:77">-&gt;</operator><name pos:start="71:78" pos:end="71:79">ds</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <expr_stmt pos:start="77:21" pos:end="77:63"><expr pos:start="77:21" pos:end="77:62"><name pos:start="77:21" pos:end="77:23">ptr</name> <operator pos:start="77:25" pos:end="77:26">+=</operator> <literal type="number" pos:start="77:28" pos:end="77:29">16</literal> <operator pos:start="77:31" pos:end="77:31">*</operator> <call pos:start="77:33" pos:end="77:62"><name pos:start="77:33" pos:end="77:54">ds_get_bytes_per_pixel</name><argument_list pos:start="77:55" pos:end="77:62">(<argument pos:start="77:56" pos:end="77:61"><expr pos:start="77:56" pos:end="77:61"><name pos:start="77:56" pos:end="77:61"><name pos:start="77:56" pos:end="77:57">vs</name><operator pos:start="77:58" pos:end="77:59">-&gt;</operator><name pos:start="77:60" pos:end="77:61">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:67"><expr pos:start="79:21" pos:end="79:66"><name pos:start="79:21" pos:end="79:27">old_ptr</name> <operator pos:start="79:29" pos:end="79:30">+=</operator> <literal type="number" pos:start="79:32" pos:end="79:33">16</literal> <operator pos:start="79:35" pos:end="79:35">*</operator> <call pos:start="79:37" pos:end="79:66"><name pos:start="79:37" pos:end="79:58">ds_get_bytes_per_pixel</name><argument_list pos:start="79:59" pos:end="79:66">(<argument pos:start="79:60" pos:end="79:65"><expr pos:start="79:60" pos:end="79:65"><name pos:start="79:60" pos:end="79:65"><name pos:start="79:60" pos:end="79:61">vs</name><operator pos:start="79:62" pos:end="79:63">-&gt;</operator><name pos:start="79:64" pos:end="79:65">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:15">row</name> <operator pos:start="87:17" pos:end="87:18">+=</operator> <call pos:start="87:20" pos:end="87:42"><name pos:start="87:20" pos:end="87:34">ds_get_linesize</name><argument_list pos:start="87:35" pos:end="87:42">(<argument pos:start="87:36" pos:end="87:41"><expr pos:start="87:36" pos:end="87:41"><name pos:start="87:36" pos:end="87:41"><name pos:start="87:36" pos:end="87:37">vs</name><operator pos:start="87:38" pos:end="87:39">-&gt;</operator><name pos:start="87:40" pos:end="87:41">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:47"><expr pos:start="89:13" pos:end="89:46"><name pos:start="89:13" pos:end="89:19">old_row</name> <operator pos:start="89:21" pos:end="89:22">+=</operator> <call pos:start="89:24" pos:end="89:46"><name pos:start="89:24" pos:end="89:38">ds_get_linesize</name><argument_list pos:start="89:39" pos:end="89:46">(<argument pos:start="89:40" pos:end="89:45"><expr pos:start="89:40" pos:end="89:45"><name pos:start="89:40" pos:end="89:45"><name pos:start="89:40" pos:end="89:41">vs</name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:45">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="95:9" pos:end="101:9"><if pos:start="95:9" pos:end="101:9">if <condition pos:start="95:12" pos:end="95:41">(<expr pos:start="95:13" pos:end="95:40"><operator pos:start="95:13" pos:end="95:13">!</operator><name pos:start="95:14" pos:end="95:22">has_dirty</name> <operator pos:start="95:24" pos:end="95:25">&amp;&amp;</operator> <operator pos:start="95:27" pos:end="95:27">!</operator><name pos:start="95:28" pos:end="95:40"><name pos:start="95:28" pos:end="95:29">vs</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:40">audio_cap</name></name></expr>)</condition> <block pos:start="95:43" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:19">

            <expr_stmt pos:start="97:13" pos:end="97:87"><expr pos:start="97:13" pos:end="97:86"><call pos:start="97:13" pos:end="97:86"><name pos:start="97:13" pos:end="97:26">qemu_mod_timer</name><argument_list pos:start="97:27" pos:end="97:86">(<argument pos:start="97:28" pos:end="97:36"><expr pos:start="97:28" pos:end="97:36"><name pos:start="97:28" pos:end="97:36"><name pos:start="97:28" pos:end="97:29">vs</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:36">timer</name></name></expr></argument>, <argument pos:start="97:39" pos:end="97:85"><expr pos:start="97:39" pos:end="97:85"><call pos:start="97:39" pos:end="97:62"><name pos:start="97:39" pos:end="97:52">qemu_get_clock</name><argument_list pos:start="97:53" pos:end="97:62">(<argument pos:start="97:54" pos:end="97:61"><expr pos:start="97:54" pos:end="97:61"><name pos:start="97:54" pos:end="97:61">rt_clock</name></expr></argument>)</argument_list></call> <operator pos:start="97:64" pos:end="97:64">+</operator> <name pos:start="97:66" pos:end="97:85">VNC_REFRESH_INTERVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="99:13" pos:end="99:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="105:9" pos:end="105:30">/* Count rectangles */</comment>

        <expr_stmt pos:start="107:9" pos:end="107:25"><expr pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:20">n_rectangles</name> <operator pos:start="107:22" pos:end="107:22">=</operator> <literal type="number" pos:start="107:24" pos:end="107:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:28"><expr pos:start="109:9" pos:end="109:27"><call pos:start="109:9" pos:end="109:27"><name pos:start="109:9" pos:end="109:20">vnc_write_u8</name><argument_list pos:start="109:21" pos:end="109:27">(<argument pos:start="109:22" pos:end="109:23"><expr pos:start="109:22" pos:end="109:23"><name pos:start="109:22" pos:end="109:23">vs</name></expr></argument>, <argument pos:start="109:26" pos:end="109:26"><expr pos:start="109:26" pos:end="109:26"><literal type="number" pos:start="109:26" pos:end="109:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="109:31" pos:end="109:42">/* msg id */</comment>

        <expr_stmt pos:start="111:9" pos:end="111:28"><expr pos:start="111:9" pos:end="111:27"><call pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:20">vnc_write_u8</name><argument_list pos:start="111:21" pos:end="111:27">(<argument pos:start="111:22" pos:end="111:23"><expr pos:start="111:22" pos:end="111:23"><name pos:start="111:22" pos:end="111:23">vs</name></expr></argument>, <argument pos:start="111:26" pos:end="111:26"><expr pos:start="111:26" pos:end="111:26"><literal type="number" pos:start="111:26" pos:end="111:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:41"><expr pos:start="113:9" pos:end="113:40"><name pos:start="113:9" pos:end="113:20">saved_offset</name> <operator pos:start="113:22" pos:end="113:22">=</operator> <name pos:start="113:24" pos:end="113:40"><name pos:start="113:24" pos:end="113:25">vs</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:33">output</name><operator pos:start="113:34" pos:end="113:34">.</operator><name pos:start="113:35" pos:end="113:40">offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:29"><expr pos:start="115:9" pos:end="115:28"><call pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:21">vnc_write_u16</name><argument_list pos:start="115:22" pos:end="115:28">(<argument pos:start="115:23" pos:end="115:24"><expr pos:start="115:23" pos:end="115:24"><name pos:start="115:23" pos:end="115:24">vs</name></expr></argument>, <argument pos:start="115:27" pos:end="115:27"><expr pos:start="115:27" pos:end="115:27"><literal type="number" pos:start="115:27" pos:end="115:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="119:9" pos:end="165:9">for <control pos:start="119:13" pos:end="119:49">(<init pos:start="119:14" pos:end="119:19"><expr pos:start="119:14" pos:end="119:18"><name pos:start="119:14" pos:end="119:14">y</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <literal type="number" pos:start="119:18" pos:end="119:18">0</literal></expr>;</init> <condition pos:start="119:21" pos:end="119:44"><expr pos:start="119:21" pos:end="119:43"><name pos:start="119:21" pos:end="119:21">y</name> <operator pos:start="119:23" pos:end="119:23">&lt;</operator> <name pos:start="119:25" pos:end="119:43"><name pos:start="119:25" pos:end="119:26">vs</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:36">serverds</name><operator pos:start="119:37" pos:end="119:37">.</operator><name pos:start="119:38" pos:end="119:43">height</name></name></expr>;</condition> <incr pos:start="119:46" pos:end="119:48"><expr pos:start="119:46" pos:end="119:48"><name pos:start="119:46" pos:end="119:46">y</name><operator pos:start="119:47" pos:end="119:48">++</operator></expr></incr>)</control> <block pos:start="119:51" pos:end="165:9">{<block_content pos:start="121:13" pos:end="163:13">

            <decl_stmt pos:start="121:13" pos:end="121:18"><decl pos:start="121:13" pos:end="121:17"><type pos:start="121:13" pos:end="121:15"><name pos:start="121:13" pos:end="121:15">int</name></type> <name pos:start="121:17" pos:end="121:17">x</name></decl>;</decl_stmt>

            <decl_stmt pos:start="123:13" pos:end="123:28"><decl pos:start="123:13" pos:end="123:27"><type pos:start="123:13" pos:end="123:15"><name pos:start="123:13" pos:end="123:15">int</name></type> <name pos:start="123:17" pos:end="123:22">last_x</name> <init pos:start="123:24" pos:end="123:27">= <expr pos:start="123:26" pos:end="123:27"><operator pos:start="123:26" pos:end="123:26">-</operator><literal type="number" pos:start="123:27" pos:end="123:27">1</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="125:13" pos:end="153:13">for <control pos:start="125:17" pos:end="125:57">(<init pos:start="125:18" pos:end="125:23"><expr pos:start="125:18" pos:end="125:22"><name pos:start="125:18" pos:end="125:18">x</name> <operator pos:start="125:20" pos:end="125:20">=</operator> <literal type="number" pos:start="125:22" pos:end="125:22">0</literal></expr>;</init> <condition pos:start="125:25" pos:end="125:52"><expr pos:start="125:25" pos:end="125:51"><name pos:start="125:25" pos:end="125:25">x</name> <operator pos:start="125:27" pos:end="125:27">&lt;</operator> <name pos:start="125:29" pos:end="125:46"><name pos:start="125:29" pos:end="125:30">vs</name><operator pos:start="125:31" pos:end="125:32">-&gt;</operator><name pos:start="125:33" pos:end="125:40">serverds</name><operator pos:start="125:41" pos:end="125:41">.</operator><name pos:start="125:42" pos:end="125:46">width</name></name> <operator pos:start="125:48" pos:end="125:48">/</operator> <literal type="number" pos:start="125:50" pos:end="125:51">16</literal></expr>;</condition> <incr pos:start="125:54" pos:end="125:56"><expr pos:start="125:54" pos:end="125:56"><name pos:start="125:54" pos:end="125:54">x</name><operator pos:start="125:55" pos:end="125:56">++</operator></expr></incr>)</control> <block pos:start="125:59" pos:end="153:13">{<block_content pos:start="127:17" pos:end="151:17">

                <if_stmt pos:start="127:17" pos:end="151:17"><if pos:start="127:17" pos:end="137:17">if <condition pos:start="127:20" pos:end="127:53">(<expr pos:start="127:21" pos:end="127:52"><call pos:start="127:21" pos:end="127:52"><name pos:start="127:21" pos:end="127:31">vnc_get_bit</name><argument_list pos:start="127:32" pos:end="127:52">(<argument pos:start="127:33" pos:end="127:48"><expr pos:start="127:33" pos:end="127:48"><name pos:start="127:33" pos:end="127:48"><name pos:start="127:33" pos:end="127:34">vs</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:45">dirty_row</name><index pos:start="127:46" pos:end="127:48">[<expr pos:start="127:47" pos:end="127:47"><name pos:start="127:47" pos:end="127:47">y</name></expr>]</index></name></expr></argument>, <argument pos:start="127:51" pos:end="127:51"><expr pos:start="127:51" pos:end="127:51"><name pos:start="127:51" pos:end="127:51">x</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:55" pos:end="137:17">{<block_content pos:start="129:21" pos:end="135:55">

                    <if_stmt pos:start="129:21" pos:end="133:21"><if pos:start="129:21" pos:end="133:21">if <condition pos:start="129:24" pos:end="129:37">(<expr pos:start="129:25" pos:end="129:36"><name pos:start="129:25" pos:end="129:30">last_x</name> <operator pos:start="129:32" pos:end="129:33">==</operator> <operator pos:start="129:35" pos:end="129:35">-</operator><literal type="number" pos:start="129:36" pos:end="129:36">1</literal></expr>)</condition> <block pos:start="129:39" pos:end="133:21">{<block_content pos:start="131:25" pos:end="131:35">

                        <expr_stmt pos:start="131:25" pos:end="131:35"><expr pos:start="131:25" pos:end="131:34"><name pos:start="131:25" pos:end="131:30">last_x</name> <operator pos:start="131:32" pos:end="131:32">=</operator> <name pos:start="131:34" pos:end="131:34">x</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:55"><expr pos:start="135:21" pos:end="135:54"><call pos:start="135:21" pos:end="135:54"><name pos:start="135:21" pos:end="135:33">vnc_clear_bit</name><argument_list pos:start="135:34" pos:end="135:54">(<argument pos:start="135:35" pos:end="135:50"><expr pos:start="135:35" pos:end="135:50"><name pos:start="135:35" pos:end="135:50"><name pos:start="135:35" pos:end="135:36">vs</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:47">dirty_row</name><index pos:start="135:48" pos:end="135:50">[<expr pos:start="135:49" pos:end="135:49"><name pos:start="135:49" pos:end="135:49">y</name></expr>]</index></name></expr></argument>, <argument pos:start="135:53" pos:end="135:53"><expr pos:start="135:53" pos:end="135:53"><name pos:start="135:53" pos:end="135:53">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="137:19" pos:end="151:17">else <block pos:start="137:24" pos:end="151:17">{<block_content pos:start="139:21" pos:end="149:32">

                    <if_stmt pos:start="139:21" pos:end="147:21"><if pos:start="139:21" pos:end="147:21">if <condition pos:start="139:24" pos:end="139:37">(<expr pos:start="139:25" pos:end="139:36"><name pos:start="139:25" pos:end="139:30">last_x</name> <operator pos:start="139:32" pos:end="139:33">!=</operator> <operator pos:start="139:35" pos:end="139:35">-</operator><literal type="number" pos:start="139:36" pos:end="139:36">1</literal></expr>)</condition> <block pos:start="139:39" pos:end="147:21">{<block_content pos:start="141:25" pos:end="145:39">

                        <decl_stmt pos:start="141:25" pos:end="141:68"><decl pos:start="141:25" pos:end="141:67"><type pos:start="141:25" pos:end="141:27"><name pos:start="141:25" pos:end="141:27">int</name></type> <name pos:start="141:29" pos:end="141:29">h</name> <init pos:start="141:31" pos:end="141:67">= <expr pos:start="141:33" pos:end="141:67"><call pos:start="141:33" pos:end="141:67"><name pos:start="141:33" pos:end="141:49">find_dirty_height</name><argument_list pos:start="141:50" pos:end="141:67">(<argument pos:start="141:51" pos:end="141:52"><expr pos:start="141:51" pos:end="141:52"><name pos:start="141:51" pos:end="141:52">vs</name></expr></argument>, <argument pos:start="141:55" pos:end="141:55"><expr pos:start="141:55" pos:end="141:55"><name pos:start="141:55" pos:end="141:55">y</name></expr></argument>, <argument pos:start="141:58" pos:end="141:63"><expr pos:start="141:58" pos:end="141:63"><name pos:start="141:58" pos:end="141:63">last_x</name></expr></argument>, <argument pos:start="141:66" pos:end="141:66"><expr pos:start="141:66" pos:end="141:66"><name pos:start="141:66" pos:end="141:66">x</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="143:25" pos:end="143:90"><expr pos:start="143:25" pos:end="143:89"><call pos:start="143:25" pos:end="143:89"><name pos:start="143:25" pos:end="143:47">send_framebuffer_update</name><argument_list pos:start="143:48" pos:end="143:89">(<argument pos:start="143:49" pos:end="143:50"><expr pos:start="143:49" pos:end="143:50"><name pos:start="143:49" pos:end="143:50">vs</name></expr></argument>, <argument pos:start="143:53" pos:end="143:63"><expr pos:start="143:53" pos:end="143:63"><name pos:start="143:53" pos:end="143:58">last_x</name> <operator pos:start="143:60" pos:end="143:60">*</operator> <literal type="number" pos:start="143:62" pos:end="143:63">16</literal></expr></argument>, <argument pos:start="143:66" pos:end="143:66"><expr pos:start="143:66" pos:end="143:66"><name pos:start="143:66" pos:end="143:66">y</name></expr></argument>, <argument pos:start="143:69" pos:end="143:85"><expr pos:start="143:69" pos:end="143:85"><operator pos:start="143:69" pos:end="143:69">(</operator><name pos:start="143:70" pos:end="143:70">x</name> <operator pos:start="143:72" pos:end="143:72">-</operator> <name pos:start="143:74" pos:end="143:79">last_x</name><operator pos:start="143:80" pos:end="143:80">)</operator> <operator pos:start="143:82" pos:end="143:82">*</operator> <literal type="number" pos:start="143:84" pos:end="143:85">16</literal></expr></argument>, <argument pos:start="143:88" pos:end="143:88"><expr pos:start="143:88" pos:end="143:88"><name pos:start="143:88" pos:end="143:88">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="145:25" pos:end="145:39"><expr pos:start="145:25" pos:end="145:38"><name pos:start="145:25" pos:end="145:36">n_rectangles</name><operator pos:start="145:37" pos:end="145:38">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:32"><expr pos:start="149:21" pos:end="149:31"><name pos:start="149:21" pos:end="149:26">last_x</name> <operator pos:start="149:28" pos:end="149:28">=</operator> <operator pos:start="149:30" pos:end="149:30">-</operator><literal type="number" pos:start="149:31" pos:end="149:31">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="155:13" pos:end="163:13"><if pos:start="155:13" pos:end="163:13">if <condition pos:start="155:16" pos:end="155:29">(<expr pos:start="155:17" pos:end="155:28"><name pos:start="155:17" pos:end="155:22">last_x</name> <operator pos:start="155:24" pos:end="155:25">!=</operator> <operator pos:start="155:27" pos:end="155:27">-</operator><literal type="number" pos:start="155:28" pos:end="155:28">1</literal></expr>)</condition> <block pos:start="155:31" pos:end="163:13">{<block_content pos:start="157:17" pos:end="161:31">

                <decl_stmt pos:start="157:17" pos:end="157:60"><decl pos:start="157:17" pos:end="157:59"><type pos:start="157:17" pos:end="157:19"><name pos:start="157:17" pos:end="157:19">int</name></type> <name pos:start="157:21" pos:end="157:21">h</name> <init pos:start="157:23" pos:end="157:59">= <expr pos:start="157:25" pos:end="157:59"><call pos:start="157:25" pos:end="157:59"><name pos:start="157:25" pos:end="157:41">find_dirty_height</name><argument_list pos:start="157:42" pos:end="157:59">(<argument pos:start="157:43" pos:end="157:44"><expr pos:start="157:43" pos:end="157:44"><name pos:start="157:43" pos:end="157:44">vs</name></expr></argument>, <argument pos:start="157:47" pos:end="157:47"><expr pos:start="157:47" pos:end="157:47"><name pos:start="157:47" pos:end="157:47">y</name></expr></argument>, <argument pos:start="157:50" pos:end="157:55"><expr pos:start="157:50" pos:end="157:55"><name pos:start="157:50" pos:end="157:55">last_x</name></expr></argument>, <argument pos:start="157:58" pos:end="157:58"><expr pos:start="157:58" pos:end="157:58"><name pos:start="157:58" pos:end="157:58">x</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:82"><expr pos:start="159:17" pos:end="159:81"><call pos:start="159:17" pos:end="159:81"><name pos:start="159:17" pos:end="159:39">send_framebuffer_update</name><argument_list pos:start="159:40" pos:end="159:81">(<argument pos:start="159:41" pos:end="159:42"><expr pos:start="159:41" pos:end="159:42"><name pos:start="159:41" pos:end="159:42">vs</name></expr></argument>, <argument pos:start="159:45" pos:end="159:55"><expr pos:start="159:45" pos:end="159:55"><name pos:start="159:45" pos:end="159:50">last_x</name> <operator pos:start="159:52" pos:end="159:52">*</operator> <literal type="number" pos:start="159:54" pos:end="159:55">16</literal></expr></argument>, <argument pos:start="159:58" pos:end="159:58"><expr pos:start="159:58" pos:end="159:58"><name pos:start="159:58" pos:end="159:58">y</name></expr></argument>, <argument pos:start="159:61" pos:end="159:77"><expr pos:start="159:61" pos:end="159:77"><operator pos:start="159:61" pos:end="159:61">(</operator><name pos:start="159:62" pos:end="159:62">x</name> <operator pos:start="159:64" pos:end="159:64">-</operator> <name pos:start="159:66" pos:end="159:71">last_x</name><operator pos:start="159:72" pos:end="159:72">)</operator> <operator pos:start="159:74" pos:end="159:74">*</operator> <literal type="number" pos:start="159:76" pos:end="159:77">16</literal></expr></argument>, <argument pos:start="159:80" pos:end="159:80"><expr pos:start="159:80" pos:end="159:80"><name pos:start="159:80" pos:end="159:80">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:31"><expr pos:start="161:17" pos:end="161:30"><name pos:start="161:17" pos:end="161:28">n_rectangles</name><operator pos:start="161:29" pos:end="161:30">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="167:9" pos:end="167:69"><expr pos:start="167:9" pos:end="167:68"><name pos:start="167:9" pos:end="167:39"><name pos:start="167:9" pos:end="167:10">vs</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:18">output</name><operator pos:start="167:19" pos:end="167:19">.</operator><name pos:start="167:20" pos:end="167:25">buffer</name><index pos:start="167:26" pos:end="167:39">[<expr pos:start="167:27" pos:end="167:38"><name pos:start="167:27" pos:end="167:38">saved_offset</name></expr>]</index></name> <operator pos:start="167:41" pos:end="167:41">=</operator> <operator pos:start="167:43" pos:end="167:43">(</operator><name pos:start="167:44" pos:end="167:55">n_rectangles</name> <operator pos:start="167:57" pos:end="167:58">&gt;&gt;</operator> <literal type="number" pos:start="167:60" pos:end="167:60">8</literal><operator pos:start="167:61" pos:end="167:61">)</operator> <operator pos:start="167:63" pos:end="167:63">&amp;</operator> <literal type="number" pos:start="167:65" pos:end="167:68">0xFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:66"><expr pos:start="169:9" pos:end="169:65"><name pos:start="169:9" pos:end="169:43"><name pos:start="169:9" pos:end="169:10">vs</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:18">output</name><operator pos:start="169:19" pos:end="169:19">.</operator><name pos:start="169:20" pos:end="169:25">buffer</name><index pos:start="169:26" pos:end="169:43">[<expr pos:start="169:27" pos:end="169:42"><name pos:start="169:27" pos:end="169:38">saved_offset</name> <operator pos:start="169:40" pos:end="169:40">+</operator> <literal type="number" pos:start="169:42" pos:end="169:42">1</literal></expr>]</index></name> <operator pos:start="169:45" pos:end="169:45">=</operator> <name pos:start="169:47" pos:end="169:58">n_rectangles</name> <operator pos:start="169:60" pos:end="169:60">&amp;</operator> <literal type="number" pos:start="169:62" pos:end="169:65">0xFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:22"><expr pos:start="171:9" pos:end="171:21"><call pos:start="171:9" pos:end="171:21"><name pos:start="171:9" pos:end="171:17">vnc_flush</name><argument_list pos:start="171:18" pos:end="171:21">(<argument pos:start="171:19" pos:end="171:20"><expr pos:start="171:19" pos:end="171:20"><name pos:start="171:19" pos:end="171:20">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="179:5" pos:end="183:5"><if pos:start="179:5" pos:end="183:5">if <condition pos:start="179:8" pos:end="179:24">(<expr pos:start="179:9" pos:end="179:23"><name pos:start="179:9" pos:end="179:17"><name pos:start="179:9" pos:end="179:10">vs</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:17">csock</name></name> <operator pos:start="179:19" pos:end="179:20">!=</operator> <operator pos:start="179:22" pos:end="179:22">-</operator><literal type="number" pos:start="179:23" pos:end="179:23">1</literal></expr>)</condition> <block pos:start="179:26" pos:end="183:5">{<block_content pos:start="181:9" pos:end="181:83">

        <expr_stmt pos:start="181:9" pos:end="181:83"><expr pos:start="181:9" pos:end="181:82"><call pos:start="181:9" pos:end="181:82"><name pos:start="181:9" pos:end="181:22">qemu_mod_timer</name><argument_list pos:start="181:23" pos:end="181:82">(<argument pos:start="181:24" pos:end="181:32"><expr pos:start="181:24" pos:end="181:32"><name pos:start="181:24" pos:end="181:32"><name pos:start="181:24" pos:end="181:25">vs</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:32">timer</name></name></expr></argument>, <argument pos:start="181:35" pos:end="181:81"><expr pos:start="181:35" pos:end="181:81"><call pos:start="181:35" pos:end="181:58"><name pos:start="181:35" pos:end="181:48">qemu_get_clock</name><argument_list pos:start="181:49" pos:end="181:58">(<argument pos:start="181:50" pos:end="181:57"><expr pos:start="181:50" pos:end="181:57"><name pos:start="181:50" pos:end="181:57">rt_clock</name></expr></argument>)</argument_list></call> <operator pos:start="181:60" pos:end="181:60">+</operator> <name pos:start="181:62" pos:end="181:81">VNC_REFRESH_INTERVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



</block_content>}</block></function>
</unit>
