<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11623.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">test_io_channel_setup_async</name><parameter_list pos:start="1:40" pos:end="7:57">(<parameter pos:start="1:41" pos:end="1:66"><decl pos:start="1:41" pos:end="1:66"><type pos:start="1:41" pos:end="1:66"><name pos:start="1:41" pos:end="1:53">SocketAddress</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:66">listen_addr</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:67"><decl pos:start="3:41" pos:end="3:67"><type pos:start="3:41" pos:end="3:67"><name pos:start="3:41" pos:end="3:53">SocketAddress</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:67">connect_addr</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:56"><decl pos:start="5:41" pos:end="5:56"><type pos:start="5:41" pos:end="5:56"><name pos:start="5:41" pos:end="5:50">QIOChannel</name> <modifier pos:start="5:52" pos:end="5:52">*</modifier><modifier pos:start="5:53" pos:end="5:53">*</modifier></type><name pos:start="5:54" pos:end="5:56">src</name></decl></parameter>,

                                        <parameter pos:start="7:41" pos:end="7:56"><decl pos:start="7:41" pos:end="7:56"><type pos:start="7:41" pos:end="7:56"><name pos:start="7:41" pos:end="7:50">QIOChannel</name> <modifier pos:start="7:52" pos:end="7:52">*</modifier><modifier pos:start="7:53" pos:end="7:53">*</modifier></type><name pos:start="7:54" pos:end="7:56">dst</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="105:1">{<block_content pos:start="11:5" pos:end="103:33">

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">QIOChannelSocket</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:26">lioc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:28">TestIOChannelData</name></name></type> <name pos:start="13:30" pos:end="13:33">data</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:38"><expr pos:start="17:5" pos:end="19:37"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:8">data</name><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:13">loop</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="19:37"><name pos:start="17:17" pos:end="17:31">g_main_loop_new</name><argument_list pos:start="17:32" pos:end="19:37">(<argument pos:start="17:33" pos:end="17:56"><expr pos:start="17:33" pos:end="17:56"><call pos:start="17:33" pos:end="17:56"><name pos:start="17:33" pos:end="17:54">g_main_context_default</name><argument_list pos:start="17:55" pos:end="17:56">()</argument_list></call></expr></argument>,

                                <argument pos:start="19:33" pos:end="19:36"><expr pos:start="19:33" pos:end="19:36"><name pos:start="19:33" pos:end="19:36">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:8">lioc</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:35"><name pos:start="23:12" pos:end="23:33">qio_channel_socket_new</name><argument_list pos:start="23:34" pos:end="23:35">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="29:47"><expr pos:start="25:5" pos:end="29:46"><call pos:start="25:5" pos:end="29:46"><name pos:start="25:5" pos:end="25:35">qio_channel_socket_listen_async</name><argument_list pos:start="25:36" pos:end="29:46">(

        <argument pos:start="27:9" pos:end="27:12"><expr pos:start="27:9" pos:end="27:12"><name pos:start="27:9" pos:end="27:12">lioc</name></expr></argument>, <argument pos:start="27:15" pos:end="27:25"><expr pos:start="27:15" pos:end="27:25"><name pos:start="27:15" pos:end="27:25">listen_addr</name></expr></argument>,

        <argument pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:32">test_io_channel_complete</name></expr></argument>, <argument pos:start="29:35" pos:end="29:39"><expr pos:start="29:35" pos:end="29:39"><operator pos:start="29:35" pos:end="29:35">&amp;</operator><name pos:start="29:36" pos:end="29:39">data</name></expr></argument>, <argument pos:start="29:42" pos:end="29:45"><expr pos:start="29:42" pos:end="29:45"><name pos:start="29:42" pos:end="29:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><call pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:19">g_main_loop_run</name><argument_list pos:start="33:20" pos:end="33:30">(<argument pos:start="33:21" pos:end="33:29"><expr pos:start="33:21" pos:end="33:29"><name pos:start="33:21" pos:end="33:29"><name pos:start="33:21" pos:end="33:24">data</name><operator pos:start="33:25" pos:end="33:25">.</operator><name pos:start="33:26" pos:end="33:29">loop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:62"><expr pos:start="35:5" pos:end="35:61"><call pos:start="35:5" pos:end="35:61"><name pos:start="35:5" pos:end="35:28">g_main_context_iteration</name><argument_list pos:start="35:29" pos:end="35:61">(<argument pos:start="35:30" pos:end="35:53"><expr pos:start="35:30" pos:end="35:53"><call pos:start="35:30" pos:end="35:53"><name pos:start="35:30" pos:end="35:51">g_main_context_default</name><argument_list pos:start="35:52" pos:end="35:53">()</argument_list></call></expr></argument>, <argument pos:start="35:56" pos:end="35:60"><expr pos:start="35:56" pos:end="35:60"><name pos:start="35:56" pos:end="35:60">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><call pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:12">g_assert</name><argument_list pos:start="39:13" pos:end="39:23">(<argument pos:start="39:14" pos:end="39:22"><expr pos:start="39:14" pos:end="39:22"><operator pos:start="39:14" pos:end="39:14">!</operator><name pos:start="39:15" pos:end="39:22"><name pos:start="39:15" pos:end="39:18">data</name><operator pos:start="39:19" pos:end="39:19">.</operator><name pos:start="39:20" pos:end="39:22">err</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="59:5"><if pos:start="43:5" pos:end="59:5">if <condition pos:start="43:8" pos:end="43:54">(<expr pos:start="43:9" pos:end="43:53"><name pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:19">listen_addr</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:25">type</name></name> <operator pos:start="43:27" pos:end="43:28">==</operator> <name pos:start="43:30" pos:end="43:53">SOCKET_ADDRESS_KIND_INET</name></expr>)</condition> <block pos:start="43:56" pos:end="59:5">{<block_content pos:start="45:9" pos:end="57:39">

        <decl_stmt pos:start="45:9" pos:end="47:32"><decl pos:start="45:9" pos:end="47:31"><type pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:21">SocketAddress</name> <modifier pos:start="45:23" pos:end="45:23">*</modifier></type><name pos:start="45:24" pos:end="45:28">laddr</name> <init pos:start="45:30" pos:end="47:31">= <expr pos:start="45:32" pos:end="47:31"><call pos:start="45:32" pos:end="47:31"><name pos:start="45:32" pos:end="45:67">qio_channel_socket_get_local_address</name><argument_list pos:start="45:68" pos:end="47:31">(

            <argument pos:start="47:13" pos:end="47:16"><expr pos:start="47:13" pos:end="47:16"><name pos:start="47:13" pos:end="47:16">lioc</name></expr></argument>, <argument pos:start="47:19" pos:end="47:30"><expr pos:start="47:19" pos:end="47:30"><operator pos:start="47:19" pos:end="47:19">&amp;</operator><name pos:start="47:20" pos:end="47:30">error_abort</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:48"><expr pos:start="51:9" pos:end="51:47"><call pos:start="51:9" pos:end="51:47"><name pos:start="51:9" pos:end="51:14">g_free</name><argument_list pos:start="51:15" pos:end="51:47">(<argument pos:start="51:16" pos:end="51:46"><expr pos:start="51:16" pos:end="51:46"><name pos:start="51:16" pos:end="51:46"><name pos:start="51:16" pos:end="51:27">connect_addr</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:30">u</name><operator pos:start="51:31" pos:end="51:31">.</operator><name pos:start="51:32" pos:end="51:35">inet</name><operator pos:start="51:36" pos:end="51:36">.</operator><name pos:start="51:37" pos:end="51:40">data</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:46">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:77"><expr pos:start="53:9" pos:end="53:76"><name pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:20">connect_addr</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:23">u</name><operator pos:start="53:24" pos:end="53:24">.</operator><name pos:start="53:25" pos:end="53:28">inet</name><operator pos:start="53:29" pos:end="53:29">.</operator><name pos:start="53:30" pos:end="53:33">data</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:39">port</name></name> <operator pos:start="53:41" pos:end="53:41">=</operator> <call pos:start="53:43" pos:end="53:76"><name pos:start="53:43" pos:end="53:50">g_strdup</name><argument_list pos:start="53:51" pos:end="53:76">(<argument pos:start="53:52" pos:end="53:75"><expr pos:start="53:52" pos:end="53:75"><name pos:start="53:52" pos:end="53:75"><name pos:start="53:52" pos:end="53:56">laddr</name><operator pos:start="53:57" pos:end="53:58">-&gt;</operator><name pos:start="53:59" pos:end="53:59">u</name><operator pos:start="53:60" pos:end="53:60">.</operator><name pos:start="53:61" pos:end="53:64">inet</name><operator pos:start="53:65" pos:end="53:65">.</operator><name pos:start="53:66" pos:end="53:69">data</name><operator pos:start="53:70" pos:end="53:71">-&gt;</operator><name pos:start="53:72" pos:end="53:75">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><call pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:31">qapi_free_SocketAddress</name><argument_list pos:start="57:32" pos:end="57:38">(<argument pos:start="57:33" pos:end="57:37"><expr pos:start="57:33" pos:end="57:37"><name pos:start="57:33" pos:end="57:37">laddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:49"><expr pos:start="63:5" pos:end="63:48"><operator pos:start="63:5" pos:end="63:5">*</operator><name pos:start="63:6" pos:end="63:8">src</name> <operator pos:start="63:10" pos:end="63:10">=</operator> <call pos:start="63:12" pos:end="63:48"><name pos:start="63:12" pos:end="63:22">QIO_CHANNEL</name><argument_list pos:start="63:23" pos:end="63:48">(<argument pos:start="63:24" pos:end="63:47"><expr pos:start="63:24" pos:end="63:47"><call pos:start="63:24" pos:end="63:47"><name pos:start="63:24" pos:end="63:45">qio_channel_socket_new</name><argument_list pos:start="63:46" pos:end="63:47">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="71:47"><expr pos:start="67:5" pos:end="71:46"><call pos:start="67:5" pos:end="71:46"><name pos:start="67:5" pos:end="67:36">qio_channel_socket_connect_async</name><argument_list pos:start="67:37" pos:end="71:46">(

        <argument pos:start="69:9" pos:end="69:32"><expr pos:start="69:9" pos:end="69:32"><call pos:start="69:9" pos:end="69:32"><name pos:start="69:9" pos:end="69:26">QIO_CHANNEL_SOCKET</name><argument_list pos:start="69:27" pos:end="69:32">(<argument pos:start="69:28" pos:end="69:31"><expr pos:start="69:28" pos:end="69:31"><operator pos:start="69:28" pos:end="69:28">*</operator><name pos:start="69:29" pos:end="69:31">src</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:35" pos:end="69:46"><expr pos:start="69:35" pos:end="69:46"><name pos:start="69:35" pos:end="69:46">connect_addr</name></expr></argument>,

        <argument pos:start="71:9" pos:end="71:32"><expr pos:start="71:9" pos:end="71:32"><name pos:start="71:9" pos:end="71:32">test_io_channel_complete</name></expr></argument>, <argument pos:start="71:35" pos:end="71:39"><expr pos:start="71:35" pos:end="71:39"><operator pos:start="71:35" pos:end="71:35">&amp;</operator><name pos:start="71:36" pos:end="71:39">data</name></expr></argument>, <argument pos:start="71:42" pos:end="71:45"><expr pos:start="71:42" pos:end="71:45"><name pos:start="71:42" pos:end="71:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:31"><expr pos:start="75:5" pos:end="75:30"><call pos:start="75:5" pos:end="75:30"><name pos:start="75:5" pos:end="75:19">g_main_loop_run</name><argument_list pos:start="75:20" pos:end="75:30">(<argument pos:start="75:21" pos:end="75:29"><expr pos:start="75:21" pos:end="75:29"><name pos:start="75:21" pos:end="75:29"><name pos:start="75:21" pos:end="75:24">data</name><operator pos:start="75:25" pos:end="75:25">.</operator><name pos:start="75:26" pos:end="75:29">loop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:62"><expr pos:start="77:5" pos:end="77:61"><call pos:start="77:5" pos:end="77:61"><name pos:start="77:5" pos:end="77:28">g_main_context_iteration</name><argument_list pos:start="77:29" pos:end="77:61">(<argument pos:start="77:30" pos:end="77:53"><expr pos:start="77:30" pos:end="77:53"><call pos:start="77:30" pos:end="77:53"><name pos:start="77:30" pos:end="77:51">g_main_context_default</name><argument_list pos:start="77:52" pos:end="77:53">()</argument_list></call></expr></argument>, <argument pos:start="77:56" pos:end="77:60"><expr pos:start="77:56" pos:end="77:60"><name pos:start="77:56" pos:end="77:60">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:24"><expr pos:start="81:5" pos:end="81:23"><call pos:start="81:5" pos:end="81:23"><name pos:start="81:5" pos:end="81:12">g_assert</name><argument_list pos:start="81:13" pos:end="81:23">(<argument pos:start="81:14" pos:end="81:22"><expr pos:start="81:14" pos:end="81:22"><operator pos:start="81:14" pos:end="81:14">!</operator><name pos:start="81:15" pos:end="81:22"><name pos:start="81:15" pos:end="81:18">data</name><operator pos:start="81:19" pos:end="81:19">.</operator><name pos:start="81:20" pos:end="81:22">err</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:49"><expr pos:start="85:5" pos:end="85:48"><call pos:start="85:5" pos:end="85:48"><name pos:start="85:5" pos:end="85:20">qio_channel_wait</name><argument_list pos:start="85:21" pos:end="85:48">(<argument pos:start="85:22" pos:end="85:38"><expr pos:start="85:22" pos:end="85:38"><call pos:start="85:22" pos:end="85:38"><name pos:start="85:22" pos:end="85:32">QIO_CHANNEL</name><argument_list pos:start="85:33" pos:end="85:38">(<argument pos:start="85:34" pos:end="85:37"><expr pos:start="85:34" pos:end="85:37"><name pos:start="85:34" pos:end="85:37">lioc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:41" pos:end="85:47"><expr pos:start="85:41" pos:end="85:47"><name pos:start="85:41" pos:end="85:47">G_IO_IN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:70"><expr pos:start="87:5" pos:end="87:69"><operator pos:start="87:5" pos:end="87:5">*</operator><name pos:start="87:6" pos:end="87:8">dst</name> <operator pos:start="87:10" pos:end="87:10">=</operator> <call pos:start="87:12" pos:end="87:69"><name pos:start="87:12" pos:end="87:22">QIO_CHANNEL</name><argument_list pos:start="87:23" pos:end="87:69">(<argument pos:start="87:24" pos:end="87:68"><expr pos:start="87:24" pos:end="87:68"><call pos:start="87:24" pos:end="87:68"><name pos:start="87:24" pos:end="87:48">qio_channel_socket_accept</name><argument_list pos:start="87:49" pos:end="87:68">(<argument pos:start="87:50" pos:end="87:53"><expr pos:start="87:50" pos:end="87:53"><name pos:start="87:50" pos:end="87:53">lioc</name></expr></argument>, <argument pos:start="87:56" pos:end="87:67"><expr pos:start="87:56" pos:end="87:67"><operator pos:start="87:56" pos:end="87:56">&amp;</operator><name pos:start="87:57" pos:end="87:67">error_abort</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:19"><expr pos:start="89:5" pos:end="89:18"><call pos:start="89:5" pos:end="89:18"><name pos:start="89:5" pos:end="89:12">g_assert</name><argument_list pos:start="89:13" pos:end="89:18">(<argument pos:start="89:14" pos:end="89:17"><expr pos:start="89:14" pos:end="89:17"><operator pos:start="89:14" pos:end="89:14">*</operator><name pos:start="89:15" pos:end="89:17">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:39"><expr pos:start="93:5" pos:end="93:38"><call pos:start="93:5" pos:end="93:38"><name pos:start="93:5" pos:end="93:25">qio_channel_set_delay</name><argument_list pos:start="93:26" pos:end="93:38">(<argument pos:start="93:27" pos:end="93:30"><expr pos:start="93:27" pos:end="93:30"><operator pos:start="93:27" pos:end="93:27">*</operator><name pos:start="93:28" pos:end="93:30">src</name></expr></argument>, <argument pos:start="93:33" pos:end="93:37"><expr pos:start="93:33" pos:end="93:37"><name pos:start="93:33" pos:end="93:37">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:48"><expr pos:start="95:5" pos:end="95:47"><call pos:start="95:5" pos:end="95:47"><name pos:start="95:5" pos:end="95:35">test_io_channel_set_socket_bufs</name><argument_list pos:start="95:36" pos:end="95:47">(<argument pos:start="95:37" pos:end="95:40"><expr pos:start="95:37" pos:end="95:40"><operator pos:start="95:37" pos:end="95:37">*</operator><name pos:start="95:38" pos:end="95:40">src</name></expr></argument>, <argument pos:start="95:43" pos:end="95:46"><expr pos:start="95:43" pos:end="95:46"><operator pos:start="95:43" pos:end="95:43">*</operator><name pos:start="95:44" pos:end="95:46">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:31"><expr pos:start="99:5" pos:end="99:30"><call pos:start="99:5" pos:end="99:30"><name pos:start="99:5" pos:end="99:16">object_unref</name><argument_list pos:start="99:17" pos:end="99:30">(<argument pos:start="99:18" pos:end="99:29"><expr pos:start="99:18" pos:end="99:29"><call pos:start="99:18" pos:end="99:29"><name pos:start="99:18" pos:end="99:23">OBJECT</name><argument_list pos:start="99:24" pos:end="99:29">(<argument pos:start="99:25" pos:end="99:28"><expr pos:start="99:25" pos:end="99:28"><name pos:start="99:25" pos:end="99:28">lioc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:33"><expr pos:start="103:5" pos:end="103:32"><call pos:start="103:5" pos:end="103:32"><name pos:start="103:5" pos:end="103:21">g_main_loop_unref</name><argument_list pos:start="103:22" pos:end="103:32">(<argument pos:start="103:23" pos:end="103:31"><expr pos:start="103:23" pos:end="103:31"><name pos:start="103:23" pos:end="103:31"><name pos:start="103:23" pos:end="103:26">data</name><operator pos:start="103:27" pos:end="103:27">.</operator><name pos:start="103:28" pos:end="103:31">loop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
