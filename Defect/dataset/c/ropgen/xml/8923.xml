<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8923.c" pos:tabs="8"><function pos:start="1:1" pos:end="273:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">start_auth_sasl</name><parameter_list pos:start="1:21" pos:end="1:34">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:31"><name pos:start="1:22" pos:end="1:29">VncState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:33">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="273:1">{<block_content pos:start="5:5" pos:end="271:11">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:24">mechlist</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:30">sasl_security_properties_t</name></type> <name pos:start="7:32" pos:end="7:39">secprops</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:19">localAddr</name></decl>, <decl pos:start="11:22" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:32">remoteAddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">mechlistlen</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><call pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:13">VNC_DEBUG</name><argument_list pos:start="17:14" pos:end="17:53">(<argument pos:start="17:15" pos:end="17:41"><expr pos:start="17:15" pos:end="17:41"><literal type="string" pos:start="17:15" pos:end="17:41">"Initialize SASL auth %d\n"</literal></expr></argument>, <argument pos:start="17:44" pos:end="17:52"><expr pos:start="17:44" pos:end="17:52"><name pos:start="17:44" pos:end="17:52"><name pos:start="17:44" pos:end="17:45">vs</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:52">csock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:66">/* Get local &amp; remote client addresses in form  IPADDR;PORT */</comment>

    <if_stmt pos:start="23:5" pos:end="25:23"><if pos:start="23:5" pos:end="25:23">if <condition pos:start="23:8" pos:end="23:65">(<expr pos:start="23:9" pos:end="23:64"><operator pos:start="23:9" pos:end="23:9">!</operator><operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:19">localAddr</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:63"><name pos:start="23:23" pos:end="23:43">vnc_socket_local_addr</name><argument_list pos:start="23:44" pos:end="23:63">(<argument pos:start="23:45" pos:end="23:51"><expr pos:start="23:45" pos:end="23:51"><literal type="string" pos:start="23:45" pos:end="23:51">"%s;%s"</literal></expr></argument>, <argument pos:start="23:54" pos:end="23:62"><expr pos:start="23:54" pos:end="23:62"><name pos:start="23:54" pos:end="23:62"><name pos:start="23:54" pos:end="23:55">vs</name><operator pos:start="23:56" pos:end="23:57">-&gt;</operator><name pos:start="23:58" pos:end="23:62">csock</name></name></expr></argument>)</argument_list></call><operator pos:start="23:64" pos:end="23:64">)</operator></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:23"><block_content pos:start="25:9" pos:end="25:23">

        <goto pos:start="25:9" pos:end="25:23">goto <name pos:start="25:14" pos:end="25:22">authabort</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:67">(<expr pos:start="29:9" pos:end="29:66"><operator pos:start="29:9" pos:end="29:9">!</operator><operator pos:start="29:10" pos:end="29:10">(</operator><name pos:start="29:11" pos:end="29:20">remoteAddr</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <call pos:start="29:24" pos:end="29:65"><name pos:start="29:24" pos:end="29:45">vnc_socket_remote_addr</name><argument_list pos:start="29:46" pos:end="29:65">(<argument pos:start="29:47" pos:end="29:53"><expr pos:start="29:47" pos:end="29:53"><literal type="string" pos:start="29:47" pos:end="29:53">"%s;%s"</literal></expr></argument>, <argument pos:start="29:56" pos:end="29:64"><expr pos:start="29:56" pos:end="29:64"><name pos:start="29:56" pos:end="29:64"><name pos:start="29:56" pos:end="29:57">vs</name><operator pos:start="29:58" pos:end="29:59">-&gt;</operator><name pos:start="29:60" pos:end="29:64">csock</name></name></expr></argument>)</argument_list></call><operator pos:start="29:66" pos:end="29:66">)</operator></expr>)</condition> <block pos:start="29:69" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:23">

        <expr_stmt pos:start="31:9" pos:end="31:24"><expr pos:start="31:9" pos:end="31:23"><call pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:12">free</name><argument_list pos:start="31:13" pos:end="31:23">(<argument pos:start="31:14" pos:end="31:22"><expr pos:start="31:14" pos:end="31:22"><name pos:start="31:14" pos:end="31:22">localAddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:23">goto <name pos:start="33:14" pos:end="33:22">authabort</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="53:42"><expr pos:start="39:5" pos:end="53:41"><name pos:start="39:5" pos:end="39:7">err</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="53:41"><name pos:start="39:11" pos:end="39:25">sasl_server_new</name><argument_list pos:start="39:26" pos:end="53:41">(<argument pos:start="39:27" pos:end="39:31"><expr pos:start="39:27" pos:end="39:31"><literal type="string" pos:start="39:27" pos:end="39:31">"vnc"</literal></expr></argument>,

                          <argument pos:start="41:27" pos:end="41:30"><expr pos:start="41:27" pos:end="41:30"><name pos:start="41:27" pos:end="41:30">NULL</name></expr></argument>, <comment type="block" pos:start="41:33" pos:end="41:74">/* FQDN - just delegates to gethostname */</comment>

                          <argument pos:start="43:27" pos:end="43:30"><expr pos:start="43:27" pos:end="43:30"><name pos:start="43:27" pos:end="43:30">NULL</name></expr></argument>, <comment type="block" pos:start="43:33" pos:end="43:48">/* User realm */</comment>

                          <argument pos:start="45:27" pos:end="45:35"><expr pos:start="45:27" pos:end="45:35"><name pos:start="45:27" pos:end="45:35">localAddr</name></expr></argument>,

                          <argument pos:start="47:27" pos:end="47:36"><expr pos:start="47:27" pos:end="47:36"><name pos:start="47:27" pos:end="47:36">remoteAddr</name></expr></argument>,

                          <argument pos:start="49:27" pos:end="49:30"><expr pos:start="49:27" pos:end="49:30"><name pos:start="49:27" pos:end="49:30">NULL</name></expr></argument>, <comment type="block" pos:start="49:33" pos:end="49:59">/* Callbacks, not needed */</comment>

                          <argument pos:start="51:27" pos:end="51:43"><expr pos:start="51:27" pos:end="51:43"><name pos:start="51:27" pos:end="51:43">SASL_SUCCESS_DATA</name></expr></argument>,

                          <argument pos:start="53:27" pos:end="53:40"><expr pos:start="53:27" pos:end="53:40"><operator pos:start="53:27" pos:end="53:27">&amp;</operator><name pos:start="53:28" pos:end="53:40"><name pos:start="53:28" pos:end="53:29">vs</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:35">sasl</name><operator pos:start="53:36" pos:end="53:36">.</operator><name pos:start="53:37" pos:end="53:40">conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:20"><expr pos:start="55:5" pos:end="55:19"><call pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:8">free</name><argument_list pos:start="55:9" pos:end="55:19">(<argument pos:start="55:10" pos:end="55:18"><expr pos:start="55:10" pos:end="55:18"><name pos:start="55:10" pos:end="55:18">localAddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:21"><expr pos:start="57:5" pos:end="57:20"><call pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:8">free</name><argument_list pos:start="57:9" pos:end="57:20">(<argument pos:start="57:10" pos:end="57:19"><expr pos:start="57:10" pos:end="57:19"><name pos:start="57:10" pos:end="57:19">remoteAddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:34"><expr pos:start="59:5" pos:end="59:33"><name pos:start="59:5" pos:end="59:13">localAddr</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:26">remoteAddr</name> <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:33">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="78:0"><if pos:start="63:5" pos:end="78:0">if <condition pos:start="63:8" pos:end="63:23">(<expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:11">err</name> <operator pos:start="63:13" pos:end="63:14">!=</operator> <name pos:start="63:16" pos:end="63:22">SASL_OK</name></expr>)</condition> <block pos:start="63:25" pos:end="78:0">{<block_content pos:start="65:9" pos:end="71:23">

        <expr_stmt pos:start="65:9" pos:end="67:56"><expr pos:start="65:9" pos:end="67:55"><call pos:start="65:9" pos:end="67:55"><name pos:start="65:9" pos:end="65:17">VNC_DEBUG</name><argument_list pos:start="65:18" pos:end="67:55">(<argument pos:start="65:19" pos:end="65:53"><expr pos:start="65:19" pos:end="65:53"><literal type="string" pos:start="65:19" pos:end="65:53">"sasl context setup failed %d (%s)"</literal></expr></argument>,

                  <argument pos:start="67:19" pos:end="67:21"><expr pos:start="67:19" pos:end="67:21"><name pos:start="67:19" pos:end="67:21">err</name></expr></argument>, <argument pos:start="67:24" pos:end="67:54"><expr pos:start="67:24" pos:end="67:54"><call pos:start="67:24" pos:end="67:54"><name pos:start="67:24" pos:end="67:37">sasl_errstring</name><argument_list pos:start="67:38" pos:end="67:54">(<argument pos:start="67:39" pos:end="67:41"><expr pos:start="67:39" pos:end="67:41"><name pos:start="67:39" pos:end="67:41">err</name></expr></argument>, <argument pos:start="67:44" pos:end="67:47"><expr pos:start="67:44" pos:end="67:47"><name pos:start="67:44" pos:end="67:47">NULL</name></expr></argument>, <argument pos:start="67:50" pos:end="67:53"><expr pos:start="67:50" pos:end="67:53"><name pos:start="67:50" pos:end="67:53">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:29"><expr pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:10">vs</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:16">sasl</name><operator pos:start="69:17" pos:end="69:17">.</operator><name pos:start="69:18" pos:end="69:21">conn</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <name pos:start="69:25" pos:end="69:28">NULL</name></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:23">goto <name pos:start="71:14" pos:end="71:22">authabort</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="77:1" pos:end="77:21">#<cpp:directive pos:start="77:2" pos:end="77:6">ifdef</cpp:directive> <name pos:start="77:8" pos:end="77:21">CONFIG_VNC_TLS</name></cpp:ifdef>

    <comment type="block" pos:start="79:5" pos:end="79:72">/* Inform SASL that we've got an external SSF layer from TLS/x509 */</comment>

    <if_stmt pos:start="81:5" pos:end="129:29"><if pos:start="81:5" pos:end="125:5">if <condition pos:start="81:8" pos:end="83:54">(<expr pos:start="81:9" pos:end="83:53"><name pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:10">vs</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:14">vd</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:20">auth</name></name> <operator pos:start="81:22" pos:end="81:23">==</operator> <name pos:start="81:25" pos:end="81:41">VNC_AUTH_VENCRYPT</name> <operator pos:start="81:43" pos:end="81:44">&amp;&amp;</operator>

        <name pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:10">vs</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:14">vd</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:23">subauth</name></name> <operator pos:start="83:25" pos:end="83:26">==</operator> <name pos:start="83:28" pos:end="83:53">VNC_AUTH_VENCRYPT_X509SASL</name></expr>)</condition> <block pos:start="83:56" pos:end="125:5">{<block_content pos:start="85:9" pos:end="123:9">

        <decl_stmt pos:start="85:9" pos:end="85:41"><decl pos:start="85:9" pos:end="85:40"><type pos:start="85:9" pos:end="85:33"><name pos:start="85:9" pos:end="85:33">gnutls_cipher_algorithm_t</name></type> <name pos:start="85:35" pos:end="85:40">cipher</name></decl>;</decl_stmt>

        <decl_stmt pos:start="87:9" pos:end="87:23"><decl pos:start="87:9" pos:end="87:22"><type pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:18">sasl_ssf_t</name></type> <name pos:start="87:20" pos:end="87:22">ssf</name></decl>;</decl_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:52"><expr pos:start="91:9" pos:end="91:51"><name pos:start="91:9" pos:end="91:14">cipher</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <call pos:start="91:18" pos:end="91:51"><name pos:start="91:18" pos:end="91:34">gnutls_cipher_get</name><argument_list pos:start="91:35" pos:end="91:51">(<argument pos:start="91:36" pos:end="91:50"><expr pos:start="91:36" pos:end="91:50"><name pos:start="91:36" pos:end="91:50"><name pos:start="91:36" pos:end="91:37">vs</name><operator pos:start="91:38" pos:end="91:39">-&gt;</operator><name pos:start="91:40" pos:end="91:42">tls</name><operator pos:start="91:43" pos:end="91:43">.</operator><name pos:start="91:44" pos:end="91:50">session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="103:9"><if pos:start="93:9" pos:end="103:9">if <condition pos:start="93:12" pos:end="93:68">(<expr pos:start="93:13" pos:end="93:67"><operator pos:start="93:13" pos:end="93:13">!</operator><operator pos:start="93:14" pos:end="93:14">(</operator><name pos:start="93:15" pos:end="93:17">ssf</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <operator pos:start="93:21" pos:end="93:21">(</operator><name pos:start="93:22" pos:end="93:31">sasl_ssf_t</name><operator pos:start="93:32" pos:end="93:32">)</operator><call pos:start="93:33" pos:end="93:66"><name pos:start="93:33" pos:end="93:58">gnutls_cipher_get_key_size</name><argument_list pos:start="93:59" pos:end="93:66">(<argument pos:start="93:60" pos:end="93:65"><expr pos:start="93:60" pos:end="93:65"><name pos:start="93:60" pos:end="93:65">cipher</name></expr></argument>)</argument_list></call><operator pos:start="93:67" pos:end="93:67">)</operator></expr>)</condition> <block pos:start="93:70" pos:end="103:9">{<block_content pos:start="95:13" pos:end="101:27">

            <expr_stmt pos:start="95:13" pos:end="95:60"><expr pos:start="95:13" pos:end="95:59"><call pos:start="95:13" pos:end="95:59"><name pos:start="95:13" pos:end="95:21">VNC_DEBUG</name><argument_list pos:start="95:22" pos:end="95:59">(<argument pos:start="95:23" pos:end="95:26"><expr pos:start="95:23" pos:end="95:26"><literal type="string" pos:start="95:23" pos:end="95:26">"%s"</literal></expr></argument>, <argument pos:start="95:29" pos:end="95:58"><expr pos:start="95:29" pos:end="95:58"><literal type="string" pos:start="95:29" pos:end="95:58">"cannot TLS get cipher size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:41"><expr pos:start="97:13" pos:end="97:40"><call pos:start="97:13" pos:end="97:40"><name pos:start="97:13" pos:end="97:24">sasl_dispose</name><argument_list pos:start="97:25" pos:end="97:40">(<argument pos:start="97:26" pos:end="97:39"><expr pos:start="97:26" pos:end="97:39"><operator pos:start="97:26" pos:end="97:26">&amp;</operator><name pos:start="97:27" pos:end="97:39"><name pos:start="97:27" pos:end="97:28">vs</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:34">sasl</name><operator pos:start="97:35" pos:end="97:35">.</operator><name pos:start="97:36" pos:end="97:39">conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:33"><expr pos:start="99:13" pos:end="99:32"><name pos:start="99:13" pos:end="99:25"><name pos:start="99:13" pos:end="99:14">vs</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:20">sasl</name><operator pos:start="99:21" pos:end="99:21">.</operator><name pos:start="99:22" pos:end="99:25">conn</name></name> <operator pos:start="99:27" pos:end="99:27">=</operator> <name pos:start="99:29" pos:end="99:32">NULL</name></expr>;</expr_stmt>

            <goto pos:start="101:13" pos:end="101:27">goto <name pos:start="101:18" pos:end="101:26">authabort</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:17"><expr pos:start="105:9" pos:end="105:16"><name pos:start="105:9" pos:end="105:11">ssf</name> <operator pos:start="105:13" pos:end="105:14">*=</operator> <literal type="number" pos:start="105:16" pos:end="105:16">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="105:19" pos:end="105:62">/* tls key size is bytes, sasl wants bits */</comment>



        <expr_stmt pos:start="109:9" pos:end="109:67"><expr pos:start="109:9" pos:end="109:66"><name pos:start="109:9" pos:end="109:11">err</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="109:66"><name pos:start="109:15" pos:end="109:26">sasl_setprop</name><argument_list pos:start="109:27" pos:end="109:66">(<argument pos:start="109:28" pos:end="109:40"><expr pos:start="109:28" pos:end="109:40"><name pos:start="109:28" pos:end="109:40"><name pos:start="109:28" pos:end="109:29">vs</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:35">sasl</name><operator pos:start="109:36" pos:end="109:36">.</operator><name pos:start="109:37" pos:end="109:40">conn</name></name></expr></argument>, <argument pos:start="109:43" pos:end="109:59"><expr pos:start="109:43" pos:end="109:59"><name pos:start="109:43" pos:end="109:59">SASL_SSF_EXTERNAL</name></expr></argument>, <argument pos:start="109:62" pos:end="109:65"><expr pos:start="109:62" pos:end="109:65"><operator pos:start="109:62" pos:end="109:62">&amp;</operator><name pos:start="109:63" pos:end="109:65">ssf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="123:9"><if pos:start="111:9" pos:end="123:9">if <condition pos:start="111:12" pos:end="111:27">(<expr pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:15">err</name> <operator pos:start="111:17" pos:end="111:18">!=</operator> <name pos:start="111:20" pos:end="111:26">SASL_OK</name></expr>)</condition> <block pos:start="111:29" pos:end="123:9">{<block_content pos:start="113:13" pos:end="121:27">

            <expr_stmt pos:start="113:13" pos:end="115:60"><expr pos:start="113:13" pos:end="115:59"><call pos:start="113:13" pos:end="115:59"><name pos:start="113:13" pos:end="113:21">VNC_DEBUG</name><argument_list pos:start="113:22" pos:end="115:59">(<argument pos:start="113:23" pos:end="113:62"><expr pos:start="113:23" pos:end="113:62"><literal type="string" pos:start="113:23" pos:end="113:62">"cannot set SASL external SSF %d (%s)\n"</literal></expr></argument>,

                      <argument pos:start="115:23" pos:end="115:25"><expr pos:start="115:23" pos:end="115:25"><name pos:start="115:23" pos:end="115:25">err</name></expr></argument>, <argument pos:start="115:28" pos:end="115:58"><expr pos:start="115:28" pos:end="115:58"><call pos:start="115:28" pos:end="115:58"><name pos:start="115:28" pos:end="115:41">sasl_errstring</name><argument_list pos:start="115:42" pos:end="115:58">(<argument pos:start="115:43" pos:end="115:45"><expr pos:start="115:43" pos:end="115:45"><name pos:start="115:43" pos:end="115:45">err</name></expr></argument>, <argument pos:start="115:48" pos:end="115:51"><expr pos:start="115:48" pos:end="115:51"><name pos:start="115:48" pos:end="115:51">NULL</name></expr></argument>, <argument pos:start="115:54" pos:end="115:57"><expr pos:start="115:54" pos:end="115:57"><name pos:start="115:54" pos:end="115:57">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:41"><expr pos:start="117:13" pos:end="117:40"><call pos:start="117:13" pos:end="117:40"><name pos:start="117:13" pos:end="117:24">sasl_dispose</name><argument_list pos:start="117:25" pos:end="117:40">(<argument pos:start="117:26" pos:end="117:39"><expr pos:start="117:26" pos:end="117:39"><operator pos:start="117:26" pos:end="117:26">&amp;</operator><name pos:start="117:27" pos:end="117:39"><name pos:start="117:27" pos:end="117:28">vs</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:34">sasl</name><operator pos:start="117:35" pos:end="117:35">.</operator><name pos:start="117:36" pos:end="117:39">conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:33"><expr pos:start="119:13" pos:end="119:32"><name pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:14">vs</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:20">sasl</name><operator pos:start="119:21" pos:end="119:21">.</operator><name pos:start="119:22" pos:end="119:25">conn</name></name> <operator pos:start="119:27" pos:end="119:27">=</operator> <name pos:start="119:29" pos:end="119:32">NULL</name></expr>;</expr_stmt>

            <goto pos:start="121:13" pos:end="121:27">goto <name pos:start="121:18" pos:end="121:26">authabort</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="125:7" pos:end="129:29">else<block type="pseudo" pos:start="129:9" pos:end="129:29"><block_content pos:start="129:9" pos:end="129:29">

<cpp:endif pos:start="127:1" pos:end="127:6">#<cpp:directive pos:start="127:2" pos:end="127:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="127:8" pos:end="127:27">/* CONFIG_VNC_TLS */</comment>

        <expr_stmt pos:start="129:9" pos:end="129:29"><expr pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:10">vs</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:16">sasl</name><operator pos:start="129:17" pos:end="129:17">.</operator><name pos:start="129:18" pos:end="129:24">wantSSF</name></name> <operator pos:start="129:26" pos:end="129:26">=</operator> <literal type="number" pos:start="129:28" pos:end="129:28">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:43"><expr pos:start="133:5" pos:end="133:42"><call pos:start="133:5" pos:end="133:42"><name pos:start="133:5" pos:end="133:10">memset</name> <argument_list pos:start="133:12" pos:end="133:42">(<argument pos:start="133:13" pos:end="133:21"><expr pos:start="133:13" pos:end="133:21"><operator pos:start="133:13" pos:end="133:13">&amp;</operator><name pos:start="133:14" pos:end="133:21">secprops</name></expr></argument>, <argument pos:start="133:24" pos:end="133:24"><expr pos:start="133:24" pos:end="133:24"><literal type="number" pos:start="133:24" pos:end="133:24">0</literal></expr></argument>, <argument pos:start="133:27" pos:end="133:41"><expr pos:start="133:27" pos:end="133:41"><sizeof pos:start="133:27" pos:end="133:41">sizeof <name pos:start="133:34" pos:end="133:41">secprops</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="135:5" pos:end="135:67">/* Inform SASL that we've got an external SSF layer from TLS */</comment>

    <if_stmt pos:start="137:5" pos:end="179:5"><if pos:start="137:5" pos:end="163:5">if <condition pos:start="137:8" pos:end="151:9">(<expr pos:start="137:9" pos:end="150:0"><call pos:start="137:9" pos:end="137:44"><name pos:start="137:9" pos:end="137:15">strncmp</name><argument_list pos:start="137:16" pos:end="137:44">(<argument pos:start="137:17" pos:end="137:31"><expr pos:start="137:17" pos:end="137:31"><name pos:start="137:17" pos:end="137:31"><name pos:start="137:17" pos:end="137:18">vs</name><operator pos:start="137:19" pos:end="137:20">-&gt;</operator><name pos:start="137:21" pos:end="137:22">vd</name><operator pos:start="137:23" pos:end="137:24">-&gt;</operator><name pos:start="137:25" pos:end="137:31">display</name></name></expr></argument>, <argument pos:start="137:34" pos:end="137:40"><expr pos:start="137:34" pos:end="137:40"><literal type="string" pos:start="137:34" pos:end="137:40">"unix:"</literal></expr></argument>, <argument pos:start="137:43" pos:end="137:43"><expr pos:start="137:43" pos:end="137:43"><literal type="number" pos:start="137:43" pos:end="137:43">5</literal></expr></argument>)</argument_list></call> <operator pos:start="137:46" pos:end="137:47">==</operator> <literal type="number" pos:start="137:49" pos:end="140:0">0</literal>

<cpp:ifdef pos:start="139:1" pos:end="139:21">#<cpp:directive pos:start="139:2" pos:end="139:6">ifdef</cpp:directive> <name pos:start="139:8" pos:end="139:21">CONFIG_VNC_TLS</name></cpp:ifdef>

        <comment type="block" pos:start="141:9" pos:end="143:40">/* Disable SSF, if using TLS+x509+SASL only. TLS without x509

           is not sufficiently strong */</comment>

        <operator pos:start="145:9" pos:end="145:10">||</operator> <operator pos:start="145:12" pos:end="145:12">(</operator><name pos:start="145:13" pos:end="145:24"><name pos:start="145:13" pos:end="145:14">vs</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:18">vd</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:24">auth</name></name> <operator pos:start="145:26" pos:end="145:27">==</operator> <name pos:start="145:29" pos:end="145:45">VNC_AUTH_VENCRYPT</name> <operator pos:start="145:47" pos:end="145:48">&amp;&amp;</operator>

            <name pos:start="147:13" pos:end="147:27"><name pos:start="147:13" pos:end="147:14">vs</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:18">vd</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:27">subauth</name></name> <operator pos:start="147:29" pos:end="147:30">==</operator> <name pos:start="147:32" pos:end="147:57">VNC_AUTH_VENCRYPT_X509SASL</name><operator pos:start="147:58" pos:end="150:0">)</operator></expr>

<cpp:endif pos:start="149:1" pos:end="149:6">#<cpp:directive pos:start="149:2" pos:end="149:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="149:8" pos:end="149:27">/* CONFIG_VNC_TLS */</comment>

        )</condition> <block pos:start="151:11" pos:end="163:5">{<block_content pos:start="155:9" pos:end="161:36">

        <comment type="block" pos:start="153:9" pos:end="153:75">/* If we've got TLS or UNIX domain sock, we don't care about SSF */</comment>

        <expr_stmt pos:start="155:9" pos:end="155:29"><expr pos:start="155:9" pos:end="155:28"><name pos:start="155:9" pos:end="155:24"><name pos:start="155:9" pos:end="155:16">secprops</name><operator pos:start="155:17" pos:end="155:17">.</operator><name pos:start="155:18" pos:end="155:24">min_ssf</name></name> <operator pos:start="155:26" pos:end="155:26">=</operator> <literal type="number" pos:start="155:28" pos:end="155:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:29"><expr pos:start="157:9" pos:end="157:28"><name pos:start="157:9" pos:end="157:24"><name pos:start="157:9" pos:end="157:16">secprops</name><operator pos:start="157:17" pos:end="157:17">.</operator><name pos:start="157:18" pos:end="157:24">max_ssf</name></name> <operator pos:start="157:26" pos:end="157:26">=</operator> <literal type="number" pos:start="157:28" pos:end="157:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:35"><expr pos:start="159:9" pos:end="159:34"><name pos:start="159:9" pos:end="159:27"><name pos:start="159:9" pos:end="159:16">secprops</name><operator pos:start="159:17" pos:end="159:17">.</operator><name pos:start="159:18" pos:end="159:27">maxbufsize</name></name> <operator pos:start="159:29" pos:end="159:29">=</operator> <literal type="number" pos:start="159:31" pos:end="159:34">8192</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:36"><expr pos:start="161:9" pos:end="161:35"><name pos:start="161:9" pos:end="161:31"><name pos:start="161:9" pos:end="161:16">secprops</name><operator pos:start="161:17" pos:end="161:17">.</operator><name pos:start="161:18" pos:end="161:31">security_flags</name></name> <operator pos:start="161:33" pos:end="161:33">=</operator> <literal type="number" pos:start="161:35" pos:end="161:35">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="163:7" pos:end="179:5">else <block pos:start="163:12" pos:end="179:5">{<block_content pos:start="167:9" pos:end="177:56">

        <comment type="block" pos:start="165:9" pos:end="165:48">/* Plain TCP, better get an SSF layer */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:30"><expr pos:start="167:9" pos:end="167:29"><name pos:start="167:9" pos:end="167:24"><name pos:start="167:9" pos:end="167:16">secprops</name><operator pos:start="167:17" pos:end="167:17">.</operator><name pos:start="167:18" pos:end="167:24">min_ssf</name></name> <operator pos:start="167:26" pos:end="167:26">=</operator> <literal type="number" pos:start="167:28" pos:end="167:29">56</literal></expr>;</expr_stmt> <comment type="block" pos:start="167:32" pos:end="167:68">/* Good enough to require kerberos */</comment>

        <expr_stmt pos:start="169:9" pos:end="169:34"><expr pos:start="169:9" pos:end="169:33"><name pos:start="169:9" pos:end="169:24"><name pos:start="169:9" pos:end="169:16">secprops</name><operator pos:start="169:17" pos:end="169:17">.</operator><name pos:start="169:18" pos:end="169:24">max_ssf</name></name> <operator pos:start="169:26" pos:end="169:26">=</operator> <literal type="number" pos:start="169:28" pos:end="169:33">100000</literal></expr>;</expr_stmt> <comment type="block" pos:start="169:36" pos:end="169:61">/* Arbitrary big number */</comment>

        <expr_stmt pos:start="171:9" pos:end="171:35"><expr pos:start="171:9" pos:end="171:34"><name pos:start="171:9" pos:end="171:27"><name pos:start="171:9" pos:end="171:16">secprops</name><operator pos:start="171:17" pos:end="171:17">.</operator><name pos:start="171:18" pos:end="171:27">maxbufsize</name></name> <operator pos:start="171:29" pos:end="171:29">=</operator> <literal type="number" pos:start="171:31" pos:end="171:34">8192</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="173:9" pos:end="173:62">/* Forbid any anonymous or trivially crackable auth */</comment>

        <expr_stmt pos:start="175:9" pos:end="177:56"><expr pos:start="175:9" pos:end="177:55"><name pos:start="175:9" pos:end="175:31"><name pos:start="175:9" pos:end="175:16">secprops</name><operator pos:start="175:17" pos:end="175:17">.</operator><name pos:start="175:18" pos:end="175:31">security_flags</name></name> <operator pos:start="175:33" pos:end="175:33">=</operator>

            <name pos:start="177:13" pos:end="177:32">SASL_SEC_NOANONYMOUS</name> <operator pos:start="177:34" pos:end="177:34">|</operator> <name pos:start="177:36" pos:end="177:55">SASL_SEC_NOPLAINTEXT</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:65"><expr pos:start="183:5" pos:end="183:64"><name pos:start="183:5" pos:end="183:7">err</name> <operator pos:start="183:9" pos:end="183:9">=</operator> <call pos:start="183:11" pos:end="183:64"><name pos:start="183:11" pos:end="183:22">sasl_setprop</name><argument_list pos:start="183:23" pos:end="183:64">(<argument pos:start="183:24" pos:end="183:36"><expr pos:start="183:24" pos:end="183:36"><name pos:start="183:24" pos:end="183:36"><name pos:start="183:24" pos:end="183:25">vs</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:31">sasl</name><operator pos:start="183:32" pos:end="183:32">.</operator><name pos:start="183:33" pos:end="183:36">conn</name></name></expr></argument>, <argument pos:start="183:39" pos:end="183:52"><expr pos:start="183:39" pos:end="183:52"><name pos:start="183:39" pos:end="183:52">SASL_SEC_PROPS</name></expr></argument>, <argument pos:start="183:55" pos:end="183:63"><expr pos:start="183:55" pos:end="183:63"><operator pos:start="183:55" pos:end="183:55">&amp;</operator><name pos:start="183:56" pos:end="183:63">secprops</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="197:5"><if pos:start="185:5" pos:end="197:5">if <condition pos:start="185:8" pos:end="185:23">(<expr pos:start="185:9" pos:end="185:22"><name pos:start="185:9" pos:end="185:11">err</name> <operator pos:start="185:13" pos:end="185:14">!=</operator> <name pos:start="185:16" pos:end="185:22">SASL_OK</name></expr>)</condition> <block pos:start="185:25" pos:end="197:5">{<block_content pos:start="187:9" pos:end="195:23">

        <expr_stmt pos:start="187:9" pos:end="189:56"><expr pos:start="187:9" pos:end="189:55"><call pos:start="187:9" pos:end="189:55"><name pos:start="187:9" pos:end="187:17">VNC_DEBUG</name><argument_list pos:start="187:18" pos:end="189:55">(<argument pos:start="187:19" pos:end="187:60"><expr pos:start="187:19" pos:end="187:60"><literal type="string" pos:start="187:19" pos:end="187:60">"cannot set SASL security props %d (%s)\n"</literal></expr></argument>,

                  <argument pos:start="189:19" pos:end="189:21"><expr pos:start="189:19" pos:end="189:21"><name pos:start="189:19" pos:end="189:21">err</name></expr></argument>, <argument pos:start="189:24" pos:end="189:54"><expr pos:start="189:24" pos:end="189:54"><call pos:start="189:24" pos:end="189:54"><name pos:start="189:24" pos:end="189:37">sasl_errstring</name><argument_list pos:start="189:38" pos:end="189:54">(<argument pos:start="189:39" pos:end="189:41"><expr pos:start="189:39" pos:end="189:41"><name pos:start="189:39" pos:end="189:41">err</name></expr></argument>, <argument pos:start="189:44" pos:end="189:47"><expr pos:start="189:44" pos:end="189:47"><name pos:start="189:44" pos:end="189:47">NULL</name></expr></argument>, <argument pos:start="189:50" pos:end="189:53"><expr pos:start="189:50" pos:end="189:53"><name pos:start="189:50" pos:end="189:53">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:37"><expr pos:start="191:9" pos:end="191:36"><call pos:start="191:9" pos:end="191:36"><name pos:start="191:9" pos:end="191:20">sasl_dispose</name><argument_list pos:start="191:21" pos:end="191:36">(<argument pos:start="191:22" pos:end="191:35"><expr pos:start="191:22" pos:end="191:35"><operator pos:start="191:22" pos:end="191:22">&amp;</operator><name pos:start="191:23" pos:end="191:35"><name pos:start="191:23" pos:end="191:24">vs</name><operator pos:start="191:25" pos:end="191:26">-&gt;</operator><name pos:start="191:27" pos:end="191:30">sasl</name><operator pos:start="191:31" pos:end="191:31">.</operator><name pos:start="191:32" pos:end="191:35">conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:29"><expr pos:start="193:9" pos:end="193:28"><name pos:start="193:9" pos:end="193:21"><name pos:start="193:9" pos:end="193:10">vs</name><operator pos:start="193:11" pos:end="193:12">-&gt;</operator><name pos:start="193:13" pos:end="193:16">sasl</name><operator pos:start="193:17" pos:end="193:17">.</operator><name pos:start="193:18" pos:end="193:21">conn</name></name> <operator pos:start="193:23" pos:end="193:23">=</operator> <name pos:start="193:25" pos:end="193:28">NULL</name></expr>;</expr_stmt>

        <goto pos:start="195:9" pos:end="195:23">goto <name pos:start="195:14" pos:end="195:22">authabort</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="201:5" pos:end="215:30"><expr pos:start="201:5" pos:end="215:29"><name pos:start="201:5" pos:end="201:7">err</name> <operator pos:start="201:9" pos:end="201:9">=</operator> <call pos:start="201:11" pos:end="215:29"><name pos:start="201:11" pos:end="201:23">sasl_listmech</name><argument_list pos:start="201:24" pos:end="215:29">(<argument pos:start="201:25" pos:end="201:37"><expr pos:start="201:25" pos:end="201:37"><name pos:start="201:25" pos:end="201:37"><name pos:start="201:25" pos:end="201:26">vs</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:32">sasl</name><operator pos:start="201:33" pos:end="201:33">.</operator><name pos:start="201:34" pos:end="201:37">conn</name></name></expr></argument>,

                        <argument pos:start="203:25" pos:end="203:28"><expr pos:start="203:25" pos:end="203:28"><name pos:start="203:25" pos:end="203:28">NULL</name></expr></argument>, <comment type="block" pos:start="203:31" pos:end="203:58">/* Don't need to set user */</comment>

                        <argument pos:start="205:25" pos:end="205:26"><expr pos:start="205:25" pos:end="205:26"><literal type="string" pos:start="205:25" pos:end="205:26">""</literal></expr></argument>, <comment type="block" pos:start="205:29" pos:end="205:40">/* Prefix */</comment>

                        <argument pos:start="207:25" pos:end="207:27"><expr pos:start="207:25" pos:end="207:27"><literal type="string" pos:start="207:25" pos:end="207:27">","</literal></expr></argument>, <comment type="block" pos:start="207:30" pos:end="207:44">/* Separator */</comment>

                        <argument pos:start="209:25" pos:end="209:26"><expr pos:start="209:25" pos:end="209:26"><literal type="string" pos:start="209:25" pos:end="209:26">""</literal></expr></argument>, <comment type="block" pos:start="209:29" pos:end="209:40">/* Suffix */</comment>

                        <argument pos:start="211:25" pos:end="211:33"><expr pos:start="211:25" pos:end="211:33"><operator pos:start="211:25" pos:end="211:25">&amp;</operator><name pos:start="211:26" pos:end="211:33">mechlist</name></expr></argument>,

                        <argument pos:start="213:25" pos:end="213:28"><expr pos:start="213:25" pos:end="213:28"><name pos:start="213:25" pos:end="213:28">NULL</name></expr></argument>,

                        <argument pos:start="215:25" pos:end="215:28"><expr pos:start="215:25" pos:end="215:28"><name pos:start="215:25" pos:end="215:28">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="217:5" pos:end="229:5"><if pos:start="217:5" pos:end="229:5">if <condition pos:start="217:8" pos:end="217:23">(<expr pos:start="217:9" pos:end="217:22"><name pos:start="217:9" pos:end="217:11">err</name> <operator pos:start="217:13" pos:end="217:14">!=</operator> <name pos:start="217:16" pos:end="217:22">SASL_OK</name></expr>)</condition> <block pos:start="217:25" pos:end="229:5">{<block_content pos:start="219:9" pos:end="227:23">

        <expr_stmt pos:start="219:9" pos:end="221:54"><expr pos:start="219:9" pos:end="221:53"><call pos:start="219:9" pos:end="221:53"><name pos:start="219:9" pos:end="219:17">VNC_DEBUG</name><argument_list pos:start="219:18" pos:end="221:53">(<argument pos:start="219:19" pos:end="219:57"><expr pos:start="219:19" pos:end="219:57"><literal type="string" pos:start="219:19" pos:end="219:57">"cannot list SASL mechanisms %d (%s)\n"</literal></expr></argument>,

                  <argument pos:start="221:19" pos:end="221:21"><expr pos:start="221:19" pos:end="221:21"><name pos:start="221:19" pos:end="221:21">err</name></expr></argument>, <argument pos:start="221:24" pos:end="221:52"><expr pos:start="221:24" pos:end="221:52"><call pos:start="221:24" pos:end="221:52"><name pos:start="221:24" pos:end="221:37">sasl_errdetail</name><argument_list pos:start="221:38" pos:end="221:52">(<argument pos:start="221:39" pos:end="221:51"><expr pos:start="221:39" pos:end="221:51"><name pos:start="221:39" pos:end="221:51"><name pos:start="221:39" pos:end="221:40">vs</name><operator pos:start="221:41" pos:end="221:42">-&gt;</operator><name pos:start="221:43" pos:end="221:46">sasl</name><operator pos:start="221:47" pos:end="221:47">.</operator><name pos:start="221:48" pos:end="221:51">conn</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:37"><expr pos:start="223:9" pos:end="223:36"><call pos:start="223:9" pos:end="223:36"><name pos:start="223:9" pos:end="223:20">sasl_dispose</name><argument_list pos:start="223:21" pos:end="223:36">(<argument pos:start="223:22" pos:end="223:35"><expr pos:start="223:22" pos:end="223:35"><operator pos:start="223:22" pos:end="223:22">&amp;</operator><name pos:start="223:23" pos:end="223:35"><name pos:start="223:23" pos:end="223:24">vs</name><operator pos:start="223:25" pos:end="223:26">-&gt;</operator><name pos:start="223:27" pos:end="223:30">sasl</name><operator pos:start="223:31" pos:end="223:31">.</operator><name pos:start="223:32" pos:end="223:35">conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:29"><expr pos:start="225:9" pos:end="225:28"><name pos:start="225:9" pos:end="225:21"><name pos:start="225:9" pos:end="225:10">vs</name><operator pos:start="225:11" pos:end="225:12">-&gt;</operator><name pos:start="225:13" pos:end="225:16">sasl</name><operator pos:start="225:17" pos:end="225:17">.</operator><name pos:start="225:18" pos:end="225:21">conn</name></name> <operator pos:start="225:23" pos:end="225:23">=</operator> <name pos:start="225:25" pos:end="225:28">NULL</name></expr>;</expr_stmt>

        <goto pos:start="227:9" pos:end="227:23">goto <name pos:start="227:14" pos:end="227:22">authabort</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:67"><expr pos:start="231:5" pos:end="231:66"><call pos:start="231:5" pos:end="231:66"><name pos:start="231:5" pos:end="231:13">VNC_DEBUG</name><argument_list pos:start="231:14" pos:end="231:66">(<argument pos:start="231:15" pos:end="231:55"><expr pos:start="231:15" pos:end="231:55"><literal type="string" pos:start="231:15" pos:end="231:55">"Available mechanisms for client: '%s'\n"</literal></expr></argument>, <argument pos:start="231:58" pos:end="231:65"><expr pos:start="231:58" pos:end="231:65"><name pos:start="231:58" pos:end="231:65">mechlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="235:5" pos:end="245:5"><if pos:start="235:5" pos:end="245:5">if <condition pos:start="235:8" pos:end="235:48">(<expr pos:start="235:9" pos:end="235:47"><operator pos:start="235:9" pos:end="235:9">!</operator><operator pos:start="235:10" pos:end="235:10">(</operator><name pos:start="235:11" pos:end="235:27"><name pos:start="235:11" pos:end="235:12">vs</name><operator pos:start="235:13" pos:end="235:14">-&gt;</operator><name pos:start="235:15" pos:end="235:18">sasl</name><operator pos:start="235:19" pos:end="235:19">.</operator><name pos:start="235:20" pos:end="235:27">mechlist</name></name> <operator pos:start="235:29" pos:end="235:29">=</operator> <call pos:start="235:31" pos:end="235:46"><name pos:start="235:31" pos:end="235:36">strdup</name><argument_list pos:start="235:37" pos:end="235:46">(<argument pos:start="235:38" pos:end="235:45"><expr pos:start="235:38" pos:end="235:45"><name pos:start="235:38" pos:end="235:45">mechlist</name></expr></argument>)</argument_list></call><operator pos:start="235:47" pos:end="235:47">)</operator></expr>)</condition> <block pos:start="235:50" pos:end="245:5">{<block_content pos:start="237:9" pos:end="243:23">

        <expr_stmt pos:start="237:9" pos:end="237:35"><expr pos:start="237:9" pos:end="237:34"><call pos:start="237:9" pos:end="237:34"><name pos:start="237:9" pos:end="237:17">VNC_DEBUG</name><argument_list pos:start="237:18" pos:end="237:34">(<argument pos:start="237:19" pos:end="237:33"><expr pos:start="237:19" pos:end="237:33"><literal type="string" pos:start="237:19" pos:end="237:33">"Out of memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:37"><expr pos:start="239:9" pos:end="239:36"><call pos:start="239:9" pos:end="239:36"><name pos:start="239:9" pos:end="239:20">sasl_dispose</name><argument_list pos:start="239:21" pos:end="239:36">(<argument pos:start="239:22" pos:end="239:35"><expr pos:start="239:22" pos:end="239:35"><operator pos:start="239:22" pos:end="239:22">&amp;</operator><name pos:start="239:23" pos:end="239:35"><name pos:start="239:23" pos:end="239:24">vs</name><operator pos:start="239:25" pos:end="239:26">-&gt;</operator><name pos:start="239:27" pos:end="239:30">sasl</name><operator pos:start="239:31" pos:end="239:31">.</operator><name pos:start="239:32" pos:end="239:35">conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:29"><expr pos:start="241:9" pos:end="241:28"><name pos:start="241:9" pos:end="241:21"><name pos:start="241:9" pos:end="241:10">vs</name><operator pos:start="241:11" pos:end="241:12">-&gt;</operator><name pos:start="241:13" pos:end="241:16">sasl</name><operator pos:start="241:17" pos:end="241:17">.</operator><name pos:start="241:18" pos:end="241:21">conn</name></name> <operator pos:start="241:23" pos:end="241:23">=</operator> <name pos:start="241:25" pos:end="241:28">NULL</name></expr>;</expr_stmt>

        <goto pos:start="243:9" pos:end="243:23">goto <name pos:start="243:14" pos:end="243:22">authabort</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:35"><expr pos:start="247:5" pos:end="247:34"><name pos:start="247:5" pos:end="247:15">mechlistlen</name> <operator pos:start="247:17" pos:end="247:17">=</operator> <call pos:start="247:19" pos:end="247:34"><name pos:start="247:19" pos:end="247:24">strlen</name><argument_list pos:start="247:25" pos:end="247:34">(<argument pos:start="247:26" pos:end="247:33"><expr pos:start="247:26" pos:end="247:33"><name pos:start="247:26" pos:end="247:33">mechlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:35"><expr pos:start="249:5" pos:end="249:34"><call pos:start="249:5" pos:end="249:34"><name pos:start="249:5" pos:end="249:17">vnc_write_u32</name><argument_list pos:start="249:18" pos:end="249:34">(<argument pos:start="249:19" pos:end="249:20"><expr pos:start="249:19" pos:end="249:20"><name pos:start="249:19" pos:end="249:20">vs</name></expr></argument>, <argument pos:start="249:23" pos:end="249:33"><expr pos:start="249:23" pos:end="249:33"><name pos:start="249:23" pos:end="249:33">mechlistlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:41"><expr pos:start="251:5" pos:end="251:40"><call pos:start="251:5" pos:end="251:40"><name pos:start="251:5" pos:end="251:13">vnc_write</name><argument_list pos:start="251:14" pos:end="251:40">(<argument pos:start="251:15" pos:end="251:16"><expr pos:start="251:15" pos:end="251:16"><name pos:start="251:15" pos:end="251:16">vs</name></expr></argument>, <argument pos:start="251:19" pos:end="251:26"><expr pos:start="251:19" pos:end="251:26"><name pos:start="251:19" pos:end="251:26">mechlist</name></expr></argument>, <argument pos:start="251:29" pos:end="251:39"><expr pos:start="251:29" pos:end="251:39"><name pos:start="251:29" pos:end="251:39">mechlistlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:18"><expr pos:start="253:5" pos:end="253:17"><call pos:start="253:5" pos:end="253:17"><name pos:start="253:5" pos:end="253:13">vnc_flush</name><argument_list pos:start="253:14" pos:end="253:17">(<argument pos:start="253:15" pos:end="253:16"><expr pos:start="253:15" pos:end="253:16"><name pos:start="253:15" pos:end="253:16">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="257:5" pos:end="257:51"><expr pos:start="257:5" pos:end="257:50"><call pos:start="257:5" pos:end="257:50"><name pos:start="257:5" pos:end="257:13">VNC_DEBUG</name><argument_list pos:start="257:14" pos:end="257:50">(<argument pos:start="257:15" pos:end="257:49"><expr pos:start="257:15" pos:end="257:49"><literal type="string" pos:start="257:15" pos:end="257:49">"Wait for client mechname length\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:65"><expr pos:start="259:5" pos:end="259:64"><call pos:start="259:5" pos:end="259:64"><name pos:start="259:5" pos:end="259:17">vnc_read_when</name><argument_list pos:start="259:18" pos:end="259:64">(<argument pos:start="259:19" pos:end="259:20"><expr pos:start="259:19" pos:end="259:20"><name pos:start="259:19" pos:end="259:20">vs</name></expr></argument>, <argument pos:start="259:23" pos:end="259:60"><expr pos:start="259:23" pos:end="259:60"><name pos:start="259:23" pos:end="259:60">protocol_client_auth_sasl_mechname_len</name></expr></argument>, <argument pos:start="259:63" pos:end="259:63"><expr pos:start="259:63" pos:end="259:63"><literal type="number" pos:start="259:63" pos:end="259:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="263:5" pos:end="263:11">return;</return>



 <label pos:start="267:2" pos:end="267:11"><name pos:start="267:2" pos:end="267:10">authabort</name>:</label>

    <expr_stmt pos:start="269:5" pos:end="269:25"><expr pos:start="269:5" pos:end="269:24"><call pos:start="269:5" pos:end="269:24"><name pos:start="269:5" pos:end="269:20">vnc_client_error</name><argument_list pos:start="269:21" pos:end="269:24">(<argument pos:start="269:22" pos:end="269:23"><expr pos:start="269:22" pos:end="269:23"><name pos:start="269:22" pos:end="269:23">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="271:5" pos:end="271:11">return;</return>

</block_content>}</block></function>
</unit>
