<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18308.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">avfilter_open</name><parameter_list pos:start="1:18" pos:end="1:88">(<parameter pos:start="1:19" pos:end="1:46"><decl pos:start="1:19" pos:end="1:46"><type pos:start="1:19" pos:end="1:46"><name pos:start="1:19" pos:end="1:33">AVFilterContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier><modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:46">filter_ctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><name pos:start="1:49" pos:end="1:56">AVFilter</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:64">filter</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:87"><decl pos:start="1:67" pos:end="1:87"><type pos:start="1:67" pos:end="1:87"><specifier pos:start="1:67" pos:end="1:71">const</specifier> <name pos:start="1:73" pos:end="1:76">char</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:87">inst_name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ret</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:23"><expr pos:start="7:5" pos:end="7:22"><operator pos:start="7:5" pos:end="7:5">*</operator><name pos:start="7:6" pos:end="7:15">filter_ctx</name> <operator pos:start="7:17" pos:end="7:17">=</operator> <name pos:start="7:19" pos:end="7:22">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="11:5" pos:end="13:31"><if pos:start="11:5" pos:end="13:31">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:15">filter</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:31"><block_content pos:start="13:9" pos:end="13:31">

        <return pos:start="13:9" pos:end="13:31">return <expr pos:start="13:16" pos:end="13:30"><call pos:start="13:16" pos:end="13:30"><name pos:start="13:16" pos:end="13:22">AVERROR</name><argument_list pos:start="13:23" pos:end="13:30">(<argument pos:start="13:24" pos:end="13:29"><expr pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:45"><name pos:start="17:11" pos:end="17:20">av_mallocz</name><argument_list pos:start="17:21" pos:end="17:45">(<argument pos:start="17:22" pos:end="17:44"><expr pos:start="17:22" pos:end="17:44"><sizeof pos:start="17:22" pos:end="17:44">sizeof<argument_list pos:start="17:28" pos:end="17:44">(<argument pos:start="17:29" pos:end="17:43"><expr pos:start="17:29" pos:end="17:43"><name pos:start="17:29" pos:end="17:43">AVFilterContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:7">ret</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:17">av_class</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <operator pos:start="21:21" pos:end="21:21">&amp;</operator><name pos:start="21:22" pos:end="21:35">avfilter_class</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:7">ret</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:15">filter</name></name>   <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:26">filter</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:60"><expr pos:start="25:5" pos:end="25:59"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:7">ret</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:13">name</name></name>     <operator pos:start="25:19" pos:end="25:19">=</operator> <ternary pos:start="25:21" pos:end="25:59"><condition pos:start="25:21" pos:end="25:31"><expr pos:start="25:21" pos:end="25:29"><name pos:start="25:21" pos:end="25:29">inst_name</name></expr> ?</condition><then pos:start="25:33" pos:end="25:52"> <expr pos:start="25:33" pos:end="25:52"><call pos:start="25:33" pos:end="25:52"><name pos:start="25:33" pos:end="25:41">av_strdup</name><argument_list pos:start="25:42" pos:end="25:52">(<argument pos:start="25:43" pos:end="25:51"><expr pos:start="25:43" pos:end="25:51"><name pos:start="25:43" pos:end="25:51">inst_name</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="25:54" pos:end="25:59">: <expr pos:start="25:56" pos:end="25:59"><name pos:start="25:56" pos:end="25:59">NULL</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:54"><if pos:start="27:5" pos:end="29:54">if <condition pos:start="27:8" pos:end="27:26">(<expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:14">filter</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:25">priv_size</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:54"><block_content pos:start="29:9" pos:end="29:54">

        <expr_stmt pos:start="29:9" pos:end="29:54"><expr pos:start="29:9" pos:end="29:53"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:11">ret</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:17">priv</name></name>     <operator pos:start="29:23" pos:end="29:23">=</operator> <call pos:start="29:25" pos:end="29:53"><name pos:start="29:25" pos:end="29:34">av_mallocz</name><argument_list pos:start="29:35" pos:end="29:53">(<argument pos:start="29:36" pos:end="29:52"><expr pos:start="29:36" pos:end="29:52"><name pos:start="29:36" pos:end="29:52"><name pos:start="29:36" pos:end="29:41">filter</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:52">priv_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:50"><expr pos:start="33:5" pos:end="33:49"><name pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:7">ret</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:20">input_count</name></name>  <operator pos:start="33:23" pos:end="33:23">=</operator> <call pos:start="33:25" pos:end="33:49"><name pos:start="33:25" pos:end="33:33">pad_count</name><argument_list pos:start="33:34" pos:end="33:49">(<argument pos:start="33:35" pos:end="33:48"><expr pos:start="33:35" pos:end="33:48"><name pos:start="33:35" pos:end="33:48"><name pos:start="33:35" pos:end="33:40">filter</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:48">inputs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:25">(<expr pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:11">ret</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:24">input_count</name></name></expr>)</condition> <block pos:start="35:27" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:81">

        <expr_stmt pos:start="37:9" pos:end="37:78"><expr pos:start="37:9" pos:end="37:77"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:11">ret</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:23">input_pads</name></name>   <operator pos:start="37:27" pos:end="37:27">=</operator> <call pos:start="37:29" pos:end="37:77"><name pos:start="37:29" pos:end="37:37">av_malloc</name><argument_list pos:start="37:38" pos:end="37:77">(<argument pos:start="37:39" pos:end="37:76"><expr pos:start="37:39" pos:end="37:76"><sizeof pos:start="37:39" pos:end="37:57">sizeof<argument_list pos:start="37:45" pos:end="37:57">(<argument pos:start="37:46" pos:end="37:56"><expr pos:start="37:46" pos:end="37:56"><name pos:start="37:46" pos:end="37:56">AVFilterPad</name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:59" pos:end="37:59">*</operator> <name pos:start="37:61" pos:end="37:76"><name pos:start="37:61" pos:end="37:63">ret</name><operator pos:start="37:64" pos:end="37:65">-&gt;</operator><name pos:start="37:66" pos:end="37:76">input_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:88"><expr pos:start="39:9" pos:end="39:87"><call pos:start="39:9" pos:end="39:87"><name pos:start="39:9" pos:end="39:14">memcpy</name><argument_list pos:start="39:15" pos:end="39:87">(<argument pos:start="39:16" pos:end="39:30"><expr pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:18">ret</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:30">input_pads</name></name></expr></argument>, <argument pos:start="39:33" pos:end="39:46"><expr pos:start="39:33" pos:end="39:46"><name pos:start="39:33" pos:end="39:46"><name pos:start="39:33" pos:end="39:38">filter</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:46">inputs</name></name></expr></argument>, <argument pos:start="39:49" pos:end="39:86"><expr pos:start="39:49" pos:end="39:86"><sizeof pos:start="39:49" pos:end="39:67">sizeof<argument_list pos:start="39:55" pos:end="39:67">(<argument pos:start="39:56" pos:end="39:66"><expr pos:start="39:56" pos:end="39:66"><name pos:start="39:56" pos:end="39:66">AVFilterPad</name></expr></argument>)</argument_list></sizeof> <operator pos:start="39:69" pos:end="39:69">*</operator> <name pos:start="39:71" pos:end="39:86"><name pos:start="39:71" pos:end="39:73">ret</name><operator pos:start="39:74" pos:end="39:75">-&gt;</operator><name pos:start="39:76" pos:end="39:86">input_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:81"><expr pos:start="41:9" pos:end="41:80"><name pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:11">ret</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:19">inputs</name></name>       <operator pos:start="41:27" pos:end="41:27">=</operator> <call pos:start="41:29" pos:end="41:80"><name pos:start="41:29" pos:end="41:38">av_mallocz</name><argument_list pos:start="41:39" pos:end="41:80">(<argument pos:start="41:40" pos:end="41:79"><expr pos:start="41:40" pos:end="41:79"><sizeof pos:start="41:40" pos:end="41:60">sizeof<argument_list pos:start="41:46" pos:end="41:60">(<argument pos:start="41:47" pos:end="41:59"><expr pos:start="41:47" pos:end="41:59"><name pos:start="41:47" pos:end="41:58">AVFilterLink</name><operator pos:start="41:59" pos:end="41:59">*</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="41:62" pos:end="41:62">*</operator> <name pos:start="41:64" pos:end="41:79"><name pos:start="41:64" pos:end="41:66">ret</name><operator pos:start="41:67" pos:end="41:68">-&gt;</operator><name pos:start="41:69" pos:end="41:79">input_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:51"><expr pos:start="47:5" pos:end="47:50"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:7">ret</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:21">output_count</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="47:50"><name pos:start="47:25" pos:end="47:33">pad_count</name><argument_list pos:start="47:34" pos:end="47:50">(<argument pos:start="47:35" pos:end="47:49"><expr pos:start="47:35" pos:end="47:49"><name pos:start="47:35" pos:end="47:49"><name pos:start="47:35" pos:end="47:40">filter</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:49">outputs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:26">(<expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:11">ret</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:25">output_count</name></name></expr>)</condition> <block pos:start="49:28" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:82">

        <expr_stmt pos:start="51:9" pos:end="51:79"><expr pos:start="51:9" pos:end="51:78"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:11">ret</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:24">output_pads</name></name>  <operator pos:start="51:27" pos:end="51:27">=</operator> <call pos:start="51:29" pos:end="51:78"><name pos:start="51:29" pos:end="51:37">av_malloc</name><argument_list pos:start="51:38" pos:end="51:78">(<argument pos:start="51:39" pos:end="51:77"><expr pos:start="51:39" pos:end="51:77"><sizeof pos:start="51:39" pos:end="51:57">sizeof<argument_list pos:start="51:45" pos:end="51:57">(<argument pos:start="51:46" pos:end="51:56"><expr pos:start="51:46" pos:end="51:56"><name pos:start="51:46" pos:end="51:56">AVFilterPad</name></expr></argument>)</argument_list></sizeof> <operator pos:start="51:59" pos:end="51:59">*</operator> <name pos:start="51:61" pos:end="51:77"><name pos:start="51:61" pos:end="51:63">ret</name><operator pos:start="51:64" pos:end="51:65">-&gt;</operator><name pos:start="51:66" pos:end="51:77">output_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:91"><expr pos:start="53:9" pos:end="53:90"><call pos:start="53:9" pos:end="53:90"><name pos:start="53:9" pos:end="53:14">memcpy</name><argument_list pos:start="53:15" pos:end="53:90">(<argument pos:start="53:16" pos:end="53:31"><expr pos:start="53:16" pos:end="53:31"><name pos:start="53:16" pos:end="53:31"><name pos:start="53:16" pos:end="53:18">ret</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:31">output_pads</name></name></expr></argument>, <argument pos:start="53:34" pos:end="53:48"><expr pos:start="53:34" pos:end="53:48"><name pos:start="53:34" pos:end="53:48"><name pos:start="53:34" pos:end="53:39">filter</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:48">outputs</name></name></expr></argument>, <argument pos:start="53:51" pos:end="53:89"><expr pos:start="53:51" pos:end="53:89"><sizeof pos:start="53:51" pos:end="53:69">sizeof<argument_list pos:start="53:57" pos:end="53:69">(<argument pos:start="53:58" pos:end="53:68"><expr pos:start="53:58" pos:end="53:68"><name pos:start="53:58" pos:end="53:68">AVFilterPad</name></expr></argument>)</argument_list></sizeof> <operator pos:start="53:71" pos:end="53:71">*</operator> <name pos:start="53:73" pos:end="53:89"><name pos:start="53:73" pos:end="53:75">ret</name><operator pos:start="53:76" pos:end="53:77">-&gt;</operator><name pos:start="53:78" pos:end="53:89">output_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:82"><expr pos:start="55:9" pos:end="55:81"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:11">ret</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:20">outputs</name></name>      <operator pos:start="55:27" pos:end="55:27">=</operator> <call pos:start="55:29" pos:end="55:81"><name pos:start="55:29" pos:end="55:38">av_mallocz</name><argument_list pos:start="55:39" pos:end="55:81">(<argument pos:start="55:40" pos:end="55:80"><expr pos:start="55:40" pos:end="55:80"><sizeof pos:start="55:40" pos:end="55:60">sizeof<argument_list pos:start="55:46" pos:end="55:60">(<argument pos:start="55:47" pos:end="55:59"><expr pos:start="55:47" pos:end="55:59"><name pos:start="55:47" pos:end="55:58">AVFilterLink</name><operator pos:start="55:59" pos:end="55:59">*</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="55:62" pos:end="55:62">*</operator> <name pos:start="55:64" pos:end="55:80"><name pos:start="55:64" pos:end="55:66">ret</name><operator pos:start="55:67" pos:end="55:68">-&gt;</operator><name pos:start="55:69" pos:end="55:80">output_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:22"><expr pos:start="61:5" pos:end="61:21"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:15">filter_ctx</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:21">ret</name></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
