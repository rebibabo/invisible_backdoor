<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24984.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">opt_frame_aspect_ratio</name><parameter_list pos:start="1:35" pos:end="1:51">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:47"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:64">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name> <init pos:start="5:11" pos:end="5:13">= <expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>, <decl pos:start="5:16" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:16">y</name> <init pos:start="5:18" pos:end="5:20">= <expr pos:start="5:20" pos:end="5:20"><literal type="number" pos:start="5:20" pos:end="5:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">double</name></type> <name pos:start="7:12" pos:end="7:13">ar</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:13">end</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:5">p</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:14">strchr</name><argument_list pos:start="15:15" pos:end="15:24">(<argument pos:start="15:16" pos:end="15:18"><expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">arg</name></expr></argument>, <argument pos:start="15:21" pos:end="15:23"><expr pos:start="15:21" pos:end="15:23"><literal type="char" pos:start="15:21" pos:end="15:23">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="31:31"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:10">(<expr pos:start="17:9" pos:end="17:9"><name pos:start="17:9" pos:end="17:9">p</name></expr>)</condition> <block pos:start="17:12" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:39">

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:9">x</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:33"><name pos:start="19:13" pos:end="19:18">strtol</name><argument_list pos:start="19:19" pos:end="19:33">(<argument pos:start="19:20" pos:end="19:22"><expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">arg</name></expr></argument>, <argument pos:start="19:25" pos:end="19:28"><expr pos:start="19:25" pos:end="19:28"><operator pos:start="19:25" pos:end="19:25">&amp;</operator><name pos:start="19:26" pos:end="19:28">end</name></expr></argument>, <argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><literal type="number" pos:start="19:31" pos:end="19:32">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:40"><if pos:start="21:9" pos:end="23:40">if <condition pos:start="21:12" pos:end="21:21">(<expr pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:15">end</name> <operator pos:start="21:17" pos:end="21:18">==</operator> <name pos:start="21:20" pos:end="21:20">p</name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:40"><block_content pos:start="23:13" pos:end="23:40">

            <expr_stmt pos:start="23:13" pos:end="23:40"><expr pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:13">y</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:39"><name pos:start="23:17" pos:end="23:22">strtol</name><argument_list pos:start="23:23" pos:end="23:39">(<argument pos:start="23:24" pos:end="23:28"><expr pos:start="23:24" pos:end="23:28"><name pos:start="23:24" pos:end="23:26">end</name><operator pos:start="23:27" pos:end="23:27">+</operator><literal type="number" pos:start="23:28" pos:end="23:28">1</literal></expr></argument>, <argument pos:start="23:31" pos:end="23:34"><expr pos:start="23:31" pos:end="23:34"><operator pos:start="23:31" pos:end="23:31">&amp;</operator><name pos:start="23:32" pos:end="23:34">end</name></expr></argument>, <argument pos:start="23:37" pos:end="23:38"><expr pos:start="23:37" pos:end="23:38"><literal type="number" pos:start="23:37" pos:end="23:38">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="27:39"><if pos:start="25:9" pos:end="27:39">if <condition pos:start="25:12" pos:end="25:27">(<expr pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:13">x</name> <operator pos:start="25:15" pos:end="25:15">&gt;</operator> <literal type="number" pos:start="25:17" pos:end="25:17">0</literal> <operator pos:start="25:19" pos:end="25:20">&amp;&amp;</operator> <name pos:start="25:22" pos:end="25:22">y</name> <operator pos:start="25:24" pos:end="25:24">&gt;</operator> <literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:39"><block_content pos:start="27:13" pos:end="27:39">

            <expr_stmt pos:start="27:13" pos:end="27:39"><expr pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:14">ar</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <operator pos:start="27:18" pos:end="27:18">(</operator><name pos:start="27:19" pos:end="27:24">double</name><operator pos:start="27:25" pos:end="27:25">)</operator><name pos:start="27:26" pos:end="27:26">x</name> <operator pos:start="27:28" pos:end="27:28">/</operator> <operator pos:start="27:30" pos:end="27:30">(</operator><name pos:start="27:31" pos:end="27:36">double</name><operator pos:start="27:37" pos:end="27:37">)</operator><name pos:start="27:38" pos:end="27:38">y</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="31:31">else<block type="pseudo" pos:start="31:9" pos:end="31:31"><block_content pos:start="31:9" pos:end="31:31">

        <expr_stmt pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:10">ar</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:30"><name pos:start="31:14" pos:end="31:19">strtod</name><argument_list pos:start="31:20" pos:end="31:30">(<argument pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:23">arg</name></expr></argument>, <argument pos:start="31:26" pos:end="31:29"><expr pos:start="31:26" pos:end="31:29"><name pos:start="31:26" pos:end="31:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:12">(<expr pos:start="35:9" pos:end="35:11"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:11">ar</name></expr>)</condition> <block pos:start="35:14" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:23">

        <expr_stmt pos:start="37:9" pos:end="37:67"><expr pos:start="37:9" pos:end="37:66"><call pos:start="37:9" pos:end="37:66"><name pos:start="37:9" pos:end="37:15">fprintf</name><argument_list pos:start="37:16" pos:end="37:66">(<argument pos:start="37:17" pos:end="37:22"><expr pos:start="37:17" pos:end="37:22"><name pos:start="37:17" pos:end="37:22">stderr</name></expr></argument>, <argument pos:start="37:25" pos:end="37:65"><expr pos:start="37:25" pos:end="37:65"><literal type="string" pos:start="37:25" pos:end="37:65">"Incorrect aspect ratio specification.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><call pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:19">ffmpeg_exit</name><argument_list pos:start="39:20" pos:end="39:22">(<argument pos:start="39:21" pos:end="39:21"><expr pos:start="39:21" pos:end="39:21"><literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:22">frame_aspect_ratio</name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:27">ar</name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:5">x</name> <operator pos:start="47:7" pos:end="47:7">=</operator> <ternary pos:start="47:9" pos:end="47:39"><condition pos:start="47:9" pos:end="47:18"><expr pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:16">vfilters</name></expr> ?</condition><then pos:start="47:20" pos:end="47:35"> <expr pos:start="47:20" pos:end="47:35"><call pos:start="47:20" pos:end="47:35"><name pos:start="47:20" pos:end="47:25">strlen</name><argument_list pos:start="47:26" pos:end="47:35">(<argument pos:start="47:27" pos:end="47:34"><expr pos:start="47:27" pos:end="47:34"><name pos:start="47:27" pos:end="47:34">vfilters</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="47:37" pos:end="47:39">: <expr pos:start="47:39" pos:end="47:39"><literal type="number" pos:start="47:39" pos:end="47:39">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:43"><expr pos:start="49:5" pos:end="49:42"><name pos:start="49:5" pos:end="49:12">vfilters</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:42"><name pos:start="49:16" pos:end="49:25">av_realloc</name><argument_list pos:start="49:26" pos:end="49:42">(<argument pos:start="49:27" pos:end="49:34"><expr pos:start="49:27" pos:end="49:34"><name pos:start="49:27" pos:end="49:34">vfilters</name></expr></argument>, <argument pos:start="49:37" pos:end="49:41"><expr pos:start="49:37" pos:end="49:41"><name pos:start="49:37" pos:end="49:37">x</name><operator pos:start="49:38" pos:end="49:38">+</operator><literal type="number" pos:start="49:39" pos:end="49:41">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:64"><expr pos:start="51:5" pos:end="51:63"><call pos:start="51:5" pos:end="51:63"><name pos:start="51:5" pos:end="51:12">snprintf</name><argument_list pos:start="51:13" pos:end="51:63">(<argument pos:start="51:14" pos:end="51:23"><expr pos:start="51:14" pos:end="51:23"><name pos:start="51:14" pos:end="51:21">vfilters</name><operator pos:start="51:22" pos:end="51:22">+</operator><name pos:start="51:23" pos:end="51:23">x</name></expr></argument>, <argument pos:start="51:26" pos:end="51:30"><expr pos:start="51:26" pos:end="51:30"><name pos:start="51:26" pos:end="51:26">x</name><operator pos:start="51:27" pos:end="51:27">+</operator><literal type="number" pos:start="51:28" pos:end="51:30">100</literal></expr></argument>, <argument pos:start="51:33" pos:end="51:47"><expr pos:start="51:33" pos:end="51:47"><literal type="string" pos:start="51:33" pos:end="51:47">"%csetdar=%f\n"</literal></expr></argument>, <argument pos:start="51:50" pos:end="51:58"><expr pos:start="51:50" pos:end="51:58"><ternary pos:start="51:50" pos:end="51:58"><condition pos:start="51:50" pos:end="51:51"><expr pos:start="51:50" pos:end="51:50"><name pos:start="51:50" pos:end="51:50">x</name></expr>?</condition><then pos:start="51:52" pos:end="51:54"><expr pos:start="51:52" pos:end="51:54"><literal type="char" pos:start="51:52" pos:end="51:54">','</literal></expr></then><else pos:start="51:55" pos:end="51:58">:<expr pos:start="51:56" pos:end="51:58"><literal type="char" pos:start="51:56" pos:end="51:58">' '</literal></expr></else></ternary></expr></argument>, <argument pos:start="51:61" pos:end="51:62"><expr pos:start="51:61" pos:end="51:62"><name pos:start="51:61" pos:end="51:62">ar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
