<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5463.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">qemu_savevm_state</name><parameter_list pos:start="1:29" pos:end="1:55">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:36">Monitor</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">mon</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:54"><decl pos:start="1:44" pos:end="1:54"><type pos:start="1:44" pos:end="1:54"><name pos:start="1:44" pos:end="1:51">QEMUFile</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:39">(<expr pos:start="9:9" pos:end="9:38"><call pos:start="9:9" pos:end="9:38"><name pos:start="9:9" pos:end="9:33">qemu_savevm_state_blocked</name><argument_list pos:start="9:34" pos:end="9:38">(<argument pos:start="9:35" pos:end="9:37"><expr pos:start="9:35" pos:end="9:37"><name pos:start="9:35" pos:end="9:37">mon</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:41" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:17">

        <expr_stmt pos:start="11:9" pos:end="11:22"><expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <operator pos:start="11:15" pos:end="11:15">-</operator><name pos:start="11:16" pos:end="11:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="13:9" pos:end="13:17">goto <name pos:start="13:14" pos:end="13:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:42"><name pos:start="19:11" pos:end="19:33">qemu_savevm_state_begin</name><argument_list pos:start="19:34" pos:end="19:42">(<argument pos:start="19:35" pos:end="19:35"><expr pos:start="19:35" pos:end="19:35"><name pos:start="19:35" pos:end="19:35">f</name></expr></argument>, <argument pos:start="19:38" pos:end="19:38"><expr pos:start="19:38" pos:end="19:38"><literal type="number" pos:start="19:38" pos:end="19:38">0</literal></expr></argument>, <argument pos:start="19:41" pos:end="19:41"><expr pos:start="19:41" pos:end="19:41"><literal type="number" pos:start="19:41" pos:end="19:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <goto pos:start="23:9" pos:end="23:17">goto <name pos:start="23:14" pos:end="23:16">out</name>;</goto></block_content></block></if></if_stmt>



    <do pos:start="27:5" pos:end="35:23">do <block pos:start="27:8" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:21">

        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:42"><name pos:start="29:15" pos:end="29:39">qemu_savevm_state_iterate</name><argument_list pos:start="29:40" pos:end="29:42">(<argument pos:start="29:41" pos:end="29:41"><expr pos:start="29:41" pos:end="29:41"><name pos:start="29:41" pos:end="29:41">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:21"><if pos:start="31:9" pos:end="33:21">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:21"><block_content pos:start="33:13" pos:end="33:21">

            <goto pos:start="33:13" pos:end="33:21">goto <name pos:start="33:18" pos:end="33:20">out</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="35:13" pos:end="35:22">(<expr pos:start="35:14" pos:end="35:21"><name pos:start="35:14" pos:end="35:16">ret</name> <operator pos:start="35:18" pos:end="35:19">==</operator> <literal type="number" pos:start="35:21" pos:end="35:21">0</literal></expr>)</condition>;</do>



    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:39"><name pos:start="39:11" pos:end="39:36">qemu_savevm_state_complete</name><argument_list pos:start="39:37" pos:end="39:39">(<argument pos:start="39:38" pos:end="39:38"><expr pos:start="39:38" pos:end="39:38"><name pos:start="39:38" pos:end="39:38">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="43:1" pos:end="43:4"><name pos:start="43:1" pos:end="43:3">out</name>:</label>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:17">(<expr pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:14">==</operator> <literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>)</condition> <block pos:start="45:19" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:37">

        <expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:36"><name pos:start="47:15" pos:end="47:33">qemu_file_get_error</name><argument_list pos:start="47:34" pos:end="47:36">(<argument pos:start="47:35" pos:end="47:35"><expr pos:start="47:35" pos:end="47:35"><name pos:start="47:35" pos:end="47:35">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="53:5" pos:end="53:15">return <expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
