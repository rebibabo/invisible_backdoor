<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20412.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">flush_compressed_data</name><parameter_list pos:start="1:34" pos:end="1:46">(<parameter pos:start="1:35" pos:end="1:45"><decl pos:start="1:35" pos:end="1:45"><type pos:start="1:35" pos:end="1:44"><name pos:start="1:35" pos:end="1:42">QEMUFile</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">idx</name></decl>, <decl pos:start="5:14" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:16">len</name></decl>, <decl pos:start="5:19" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:30">thread_count</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:35">(<expr pos:start="9:9" pos:end="9:34"><operator pos:start="9:9" pos:end="9:9">!</operator><call pos:start="9:10" pos:end="9:34"><name pos:start="9:10" pos:end="9:32">migrate_use_compression</name><argument_list pos:start="9:33" pos:end="9:34">()</argument_list></call></expr>)</condition> <block pos:start="9:37" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:16">thread_count</name> <operator pos:start="15:18" pos:end="15:18">=</operator> <call pos:start="15:20" pos:end="15:45"><name pos:start="15:20" pos:end="15:43">migrate_compress_threads</name><argument_list pos:start="15:44" pos:end="15:45">()</argument_list></call></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="41:5">for <control pos:start="17:9" pos:end="17:44">(<init pos:start="17:10" pos:end="17:17"><expr pos:start="17:10" pos:end="17:16"><name pos:start="17:10" pos:end="17:12">idx</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</init> <condition pos:start="17:19" pos:end="17:37"><expr pos:start="17:19" pos:end="17:36"><name pos:start="17:19" pos:end="17:21">idx</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <name pos:start="17:25" pos:end="17:36">thread_count</name></expr>;</condition> <incr pos:start="17:39" pos:end="17:43"><expr pos:start="17:39" pos:end="17:43"><name pos:start="17:39" pos:end="17:41">idx</name><operator pos:start="17:42" pos:end="17:43">++</operator></expr></incr>)</control> <block pos:start="17:46" pos:end="41:5">{<block_content pos:start="19:9" pos:end="39:9">

        <if_stmt pos:start="19:9" pos:end="31:9"><if pos:start="19:9" pos:end="31:9">if <condition pos:start="19:12" pos:end="19:34">(<expr pos:start="19:13" pos:end="19:33"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:28"><name pos:start="19:14" pos:end="19:23">comp_param</name><index pos:start="19:24" pos:end="19:28">[<expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:27">idx</name></expr>]</index></name><operator pos:start="19:29" pos:end="19:29">.</operator><name pos:start="19:30" pos:end="19:33">done</name></expr>)</condition> <block pos:start="19:36" pos:end="31:9">{<block_content pos:start="21:13" pos:end="29:46">

            <expr_stmt pos:start="21:13" pos:end="21:44"><expr pos:start="21:13" pos:end="21:43"><call pos:start="21:13" pos:end="21:43"><name pos:start="21:13" pos:end="21:27">qemu_mutex_lock</name><argument_list pos:start="21:28" pos:end="21:43">(<argument pos:start="21:29" pos:end="21:42"><expr pos:start="21:29" pos:end="21:42"><name pos:start="21:29" pos:end="21:42">comp_done_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <while pos:start="23:13" pos:end="27:13">while <condition pos:start="23:19" pos:end="23:62">(<expr pos:start="23:20" pos:end="23:61"><operator pos:start="23:20" pos:end="23:20">!</operator><name pos:start="23:21" pos:end="23:35"><name pos:start="23:21" pos:end="23:30">comp_param</name><index pos:start="23:31" pos:end="23:35">[<expr pos:start="23:32" pos:end="23:34"><name pos:start="23:32" pos:end="23:34">idx</name></expr>]</index></name><operator pos:start="23:36" pos:end="23:36">.</operator><name pos:start="23:37" pos:end="23:40">done</name> <operator pos:start="23:42" pos:end="23:43">&amp;&amp;</operator> <operator pos:start="23:45" pos:end="23:45">!</operator><name pos:start="23:46" pos:end="23:61">quit_comp_thread</name></expr>)</condition> <block pos:start="23:64" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:63">

                <expr_stmt pos:start="25:17" pos:end="25:63"><expr pos:start="25:17" pos:end="25:62"><call pos:start="25:17" pos:end="25:62"><name pos:start="25:17" pos:end="25:30">qemu_cond_wait</name><argument_list pos:start="25:31" pos:end="25:62">(<argument pos:start="25:32" pos:end="25:45"><expr pos:start="25:32" pos:end="25:45"><name pos:start="25:32" pos:end="25:45">comp_done_cond</name></expr></argument>, <argument pos:start="25:48" pos:end="25:61"><expr pos:start="25:48" pos:end="25:61"><name pos:start="25:48" pos:end="25:61">comp_done_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="29:13" pos:end="29:46"><expr pos:start="29:13" pos:end="29:45"><call pos:start="29:13" pos:end="29:45"><name pos:start="29:13" pos:end="29:29">qemu_mutex_unlock</name><argument_list pos:start="29:30" pos:end="29:45">(<argument pos:start="29:31" pos:end="29:44"><expr pos:start="29:31" pos:end="29:44"><name pos:start="29:31" pos:end="29:44">comp_done_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:30">(<expr pos:start="33:13" pos:end="33:29"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:29">quit_comp_thread</name></expr>)</condition> <block pos:start="33:32" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:37">

            <expr_stmt pos:start="35:13" pos:end="35:62"><expr pos:start="35:13" pos:end="35:61"><name pos:start="35:13" pos:end="35:15">len</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:61"><name pos:start="35:19" pos:end="35:36">qemu_put_qemu_file</name><argument_list pos:start="35:37" pos:end="35:61">(<argument pos:start="35:38" pos:end="35:38"><expr pos:start="35:38" pos:end="35:38"><name pos:start="35:38" pos:end="35:38">f</name></expr></argument>, <argument pos:start="35:41" pos:end="35:60"><expr pos:start="35:41" pos:end="35:60"><name pos:start="35:41" pos:end="35:55"><name pos:start="35:41" pos:end="35:50">comp_param</name><index pos:start="35:51" pos:end="35:55">[<expr pos:start="35:52" pos:end="35:54"><name pos:start="35:52" pos:end="35:54">idx</name></expr>]</index></name><operator pos:start="35:56" pos:end="35:56">.</operator><name pos:start="35:57" pos:end="35:60">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:37"><expr pos:start="37:13" pos:end="37:36"><name pos:start="37:13" pos:end="37:29">bytes_transferred</name> <operator pos:start="37:31" pos:end="37:32">+=</operator> <name pos:start="37:34" pos:end="37:36">len</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
