<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11189.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:58"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">nbd_handle_list</name><parameter_list pos:start="1:27" pos:end="1:62">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:36">NBDClient</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">client</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:54">uint32_t</name></type> <name pos:start="1:56" pos:end="1:61">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:58">{<block_content pos:start="5:5" pos:end="35:58">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">csock</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">NBDExport</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">exp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:9">csock</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:18">client</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:24">sock</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="35:58"><if pos:start="13:5" pos:end="35:58">if <condition pos:start="13:8" pos:end="13:15">(<expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:14">length</name></expr>)</condition> <block pos:start="13:17" pos:end="35:58">{<block_content pos:start="18:9" pos:end="35:58">




        <return pos:start="18:9" pos:end="18:70">return <expr pos:start="18:16" pos:end="18:69"><call pos:start="18:16" pos:end="18:69"><name pos:start="18:16" pos:end="18:27">nbd_send_rep</name><argument_list pos:start="18:28" pos:end="18:69">(<argument pos:start="18:29" pos:end="18:33"><expr pos:start="18:29" pos:end="18:33"><name pos:start="18:29" pos:end="18:33">csock</name></expr></argument>, <argument pos:start="18:36" pos:end="18:54"><expr pos:start="18:36" pos:end="18:54"><name pos:start="18:36" pos:end="18:54">NBD_REP_ERR_INVALID</name></expr></argument>, <argument pos:start="18:57" pos:end="18:68"><expr pos:start="18:57" pos:end="18:68"><name pos:start="18:57" pos:end="18:68">NBD_OPT_LIST</name></expr></argument>)</argument_list></call></expr>;</return>




    <comment type="block" pos:start="23:5" pos:end="23:55">/* For each export, send a NBD_REP_SERVER reply. */</comment>

    <macro pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:18">QTAILQ_FOREACH</name><argument_list pos:start="25:19" pos:end="25:39">(<argument pos:start="25:20" pos:end="25:22">exp</argument>, <argument pos:start="25:25" pos:end="25:32">&amp;exports</argument>, <argument pos:start="25:35" pos:end="25:38">next</argument>)</argument_list></macro> <block pos:start="25:41" pos:end="35:58">{<block_content pos:start="27:9" pos:end="35:58">

        <if_stmt pos:start="27:9" pos:end="35:58"><if pos:start="27:9" pos:end="35:58">if <condition pos:start="27:12" pos:end="27:42">(<expr pos:start="27:13" pos:end="27:41"><call pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:29">nbd_send_rep_list</name><argument_list pos:start="27:30" pos:end="27:41">(<argument pos:start="27:31" pos:end="27:35"><expr pos:start="27:31" pos:end="27:35"><name pos:start="27:31" pos:end="27:35">csock</name></expr></argument>, <argument pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:40">exp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:44" pos:end="35:58">{<block_content pos:start="29:13" pos:end="35:58">

            <return pos:start="29:13" pos:end="29:27">return <expr pos:start="29:20" pos:end="29:26"><operator pos:start="29:20" pos:end="29:20">-</operator><name pos:start="29:21" pos:end="29:26">EINVAL</name></expr>;</return>



    <comment type="block" pos:start="33:5" pos:end="33:36">/* Finish with a NBD_REP_ACK. */</comment>

    <return pos:start="35:5" pos:end="35:58">return <expr pos:start="35:12" pos:end="35:57"><call pos:start="35:12" pos:end="35:57"><name pos:start="35:12" pos:end="35:23">nbd_send_rep</name><argument_list pos:start="35:24" pos:end="35:57">(<argument pos:start="35:25" pos:end="35:29"><expr pos:start="35:25" pos:end="35:29"><name pos:start="35:25" pos:end="35:29">csock</name></expr></argument>, <argument pos:start="35:32" pos:end="35:42"><expr pos:start="35:32" pos:end="35:42"><name pos:start="35:32" pos:end="35:42">NBD_REP_ACK</name></expr></argument>, <argument pos:start="35:45" pos:end="35:56"><expr pos:start="35:45" pos:end="35:56"><name pos:start="35:45" pos:end="35:56">NBD_OPT_LIST</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></function>
</unit>
