<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13113.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">encode_slice</name><parameter_list pos:start="1:24" pos:end="1:53">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">c</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:52"><decl pos:start="1:44" pos:end="1:52"><type pos:start="1:44" pos:end="1:52"><name pos:start="1:44" pos:end="1:47">void</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">FFV1Context</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">fs</name>  <init pos:start="5:22" pos:end="5:36">= <expr pos:start="5:24" pos:end="5:36"><operator pos:start="5:24" pos:end="5:24">*</operator><operator pos:start="5:25" pos:end="5:25">(</operator><name pos:start="5:26" pos:end="5:29">void</name> <operator pos:start="5:31" pos:end="5:31">*</operator><operator pos:start="5:32" pos:end="5:32">*</operator><operator pos:start="5:33" pos:end="5:33">)</operator><name pos:start="5:34" pos:end="5:36">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">FFV1Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">f</name>   <init pos:start="7:22" pos:end="7:43">= <expr pos:start="7:24" pos:end="7:43"><name pos:start="7:24" pos:end="7:43"><name pos:start="7:24" pos:end="7:25">fs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:32">avctx</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">width</name>        <init pos:start="9:22" pos:end="9:38">= <expr pos:start="9:24" pos:end="9:38"><name pos:start="9:24" pos:end="9:38"><name pos:start="9:24" pos:end="9:25">fs</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:38">slice_width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">height</name>       <init pos:start="11:22" pos:end="11:39">= <expr pos:start="11:24" pos:end="11:39"><name pos:start="11:24" pos:end="11:39"><name pos:start="11:24" pos:end="11:25">fs</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:39">slice_height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">x</name>            <init pos:start="13:22" pos:end="13:34">= <expr pos:start="13:24" pos:end="13:34"><name pos:start="13:24" pos:end="13:34"><name pos:start="13:24" pos:end="13:25">fs</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:34">slice_x</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">y</name>            <init pos:start="15:22" pos:end="15:34">= <expr pos:start="15:24" pos:end="15:34"><name pos:start="15:24" pos:end="15:34"><name pos:start="15:24" pos:end="15:25">fs</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:34">slice_y</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:24"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">AVFrame</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier><specifier pos:start="17:20" pos:end="17:24">const</specifier></type> <name pos:start="17:26" pos:end="17:26">p</name> <init pos:start="17:28" pos:end="17:37">= <expr pos:start="17:30" pos:end="17:37"><name pos:start="17:30" pos:end="17:37"><name pos:start="17:30" pos:end="17:30">f</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:37">frame</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="23:27"><decl pos:start="19:5" pos:end="23:26"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:16">ps</name>     <init pos:start="19:22" pos:end="23:26">= <expr pos:start="19:24" pos:end="23:26"><ternary pos:start="19:24" pos:end="23:26"><condition pos:start="19:24" pos:end="21:24"><expr pos:start="19:24" pos:end="19:88"><operator pos:start="19:24" pos:end="19:24">(</operator><call pos:start="19:25" pos:end="19:55"><name pos:start="19:25" pos:end="19:43">av_pix_fmt_desc_get</name><argument_list pos:start="19:44" pos:end="19:55">(<argument pos:start="19:45" pos:end="19:54"><expr pos:start="19:45" pos:end="19:54"><name pos:start="19:45" pos:end="19:54"><name pos:start="19:45" pos:end="19:45">c</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:54">pix_fmt</name></name></expr></argument>)</argument_list></call><operator pos:start="19:56" pos:end="19:57">-&gt;</operator><name pos:start="19:58" pos:end="19:62">flags</name> <operator pos:start="19:64" pos:end="19:64">&amp;</operator> <name pos:start="19:66" pos:end="19:87">AV_PIX_FMT_FLAG_PLANAR</name><operator pos:start="19:88" pos:end="19:88">)</operator></expr>

                       ?</condition><then pos:start="21:26" pos:end="21:57"> <expr pos:start="21:26" pos:end="21:57"><operator pos:start="21:26" pos:end="21:26">(</operator><name pos:start="21:27" pos:end="21:48"><name pos:start="21:27" pos:end="21:27">f</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:48">bits_per_raw_sample</name></name> <operator pos:start="21:50" pos:end="21:50">&gt;</operator> <literal type="number" pos:start="21:52" pos:end="21:52">8</literal><operator pos:start="21:53" pos:end="21:53">)</operator> <operator pos:start="21:55" pos:end="21:55">+</operator> <literal type="number" pos:start="21:57" pos:end="21:57">1</literal></expr>

                       </then><else pos:start="23:24" pos:end="23:26">: <expr pos:start="23:26" pos:end="23:26"><literal type="number" pos:start="23:26" pos:end="23:26">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="29:38"><if pos:start="27:5" pos:end="29:38">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:9">f</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:20">key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:38"><block_content pos:start="29:9" pos:end="29:38">

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><call pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:30">ffv1_clear_slice_state</name><argument_list pos:start="29:31" pos:end="29:37">(<argument pos:start="29:32" pos:end="29:32"><expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">f</name></expr></argument>, <argument pos:start="29:35" pos:end="29:36"><expr pos:start="29:35" pos:end="29:36"><name pos:start="29:35" pos:end="29:36">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:23">(<expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:9">f</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:18">version</name></name> <operator pos:start="31:20" pos:end="31:20">&gt;</operator> <literal type="number" pos:start="31:22" pos:end="31:22">2</literal></expr>)</condition> <block pos:start="31:25" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:35">

        <expr_stmt pos:start="33:9" pos:end="33:35"><expr pos:start="33:9" pos:end="33:34"><call pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:27">encode_slice_header</name><argument_list pos:start="33:28" pos:end="33:34">(<argument pos:start="33:29" pos:end="33:29"><expr pos:start="33:29" pos:end="33:29"><name pos:start="33:29" pos:end="33:29">f</name></expr></argument>, <argument pos:start="33:32" pos:end="33:33"><expr pos:start="33:32" pos:end="33:33"><name pos:start="33:32" pos:end="33:33">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="49:5"><if pos:start="37:5" pos:end="49:5">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:15"><name pos:start="37:10" pos:end="37:11">fs</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:15">ac</name></name></expr>)</condition> <block pos:start="37:18" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:89">

        <if_stmt pos:start="39:9" pos:end="41:52"><if pos:start="39:9" pos:end="41:52">if <condition pos:start="39:12" pos:end="39:27">(<expr pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:13">f</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:22">version</name></name> <operator pos:start="39:24" pos:end="39:24">&gt;</operator> <literal type="number" pos:start="39:26" pos:end="39:26">2</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:52"><block_content pos:start="41:13" pos:end="41:52">

            <macro pos:start="41:13" pos:end="41:51"><name pos:start="41:13" pos:end="41:19">put_rac</name><argument_list pos:start="41:20" pos:end="41:51">(<argument pos:start="41:21" pos:end="41:26">&amp;fs-&gt;c</argument>, <argument pos:start="41:29" pos:end="41:47">(uint8_t[]) { <literal type="number" pos:start="41:43" pos:end="41:45">129</literal> }</argument>, <argument pos:start="41:50" pos:end="41:50"><literal type="number" pos:start="41:50" pos:end="41:50">0</literal></argument>)</argument_list></macro><empty_stmt pos:start="41:52" pos:end="41:52">;</empty_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:89"><expr pos:start="43:9" pos:end="43:88"><name pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:10">fs</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:25">ac_byte_count</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <ternary pos:start="43:29" pos:end="43:88"><condition pos:start="43:29" pos:end="43:58"><expr pos:start="43:29" pos:end="43:56"><name pos:start="43:29" pos:end="43:38"><name pos:start="43:29" pos:end="43:29">f</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:38">version</name></name> <operator pos:start="43:40" pos:end="43:40">&gt;</operator> <literal type="number" pos:start="43:42" pos:end="43:42">2</literal> <operator pos:start="43:44" pos:end="43:45">||</operator> <operator pos:start="43:47" pos:end="43:47">(</operator><operator pos:start="43:48" pos:end="43:48">!</operator><name pos:start="43:49" pos:end="43:49">x</name> <operator pos:start="43:51" pos:end="43:52">&amp;&amp;</operator> <operator pos:start="43:54" pos:end="43:54">!</operator><name pos:start="43:55" pos:end="43:55">y</name><operator pos:start="43:56" pos:end="43:56">)</operator></expr> ?</condition><then pos:start="43:60" pos:end="43:84"> <expr pos:start="43:60" pos:end="43:84"><call pos:start="43:60" pos:end="43:84"><name pos:start="43:60" pos:end="43:75">ff_rac_terminate</name><argument_list pos:start="43:76" pos:end="43:84">( <argument pos:start="43:78" pos:end="43:83"><expr pos:start="43:78" pos:end="43:83"><operator pos:start="43:78" pos:end="43:78">&amp;</operator><name pos:start="43:79" pos:end="43:83"><name pos:start="43:79" pos:end="43:80">fs</name><operator pos:start="43:81" pos:end="43:82">-&gt;</operator><name pos:start="43:83" pos:end="43:83">c</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="43:86" pos:end="43:88">: <expr pos:start="43:88" pos:end="43:88"><literal type="number" pos:start="43:88" pos:end="43:88">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="47:89"><expr pos:start="45:9" pos:end="47:88"><call pos:start="45:9" pos:end="47:88"><name pos:start="45:9" pos:end="45:21">init_put_bits</name><argument_list pos:start="45:22" pos:end="47:88">(<argument pos:start="45:23" pos:end="45:29"><expr pos:start="45:23" pos:end="45:29"><operator pos:start="45:23" pos:end="45:23">&amp;</operator><name pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:25">fs</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:29">pb</name></name></expr></argument>, <argument pos:start="45:32" pos:end="45:73"><expr pos:start="45:32" pos:end="45:73"><name pos:start="45:32" pos:end="45:53"><name pos:start="45:32" pos:end="45:33">fs</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:36">c</name><operator pos:start="45:37" pos:end="45:37">.</operator><name pos:start="45:38" pos:end="45:53">bytestream_start</name></name> <operator pos:start="45:55" pos:end="45:55">+</operator> <name pos:start="45:57" pos:end="45:73"><name pos:start="45:57" pos:end="45:58">fs</name><operator pos:start="45:59" pos:end="45:60">-&gt;</operator><name pos:start="45:61" pos:end="45:73">ac_byte_count</name></name></expr></argument>,

                      <argument pos:start="47:23" pos:end="47:87"><expr pos:start="47:23" pos:end="47:87"><name pos:start="47:23" pos:end="47:42"><name pos:start="47:23" pos:end="47:24">fs</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:27">c</name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:42">bytestream_end</name></name> <operator pos:start="47:44" pos:end="47:44">-</operator> <name pos:start="47:46" pos:end="47:67"><name pos:start="47:46" pos:end="47:47">fs</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:50">c</name><operator pos:start="47:51" pos:end="47:51">.</operator><name pos:start="47:52" pos:end="47:67">bytestream_start</name></name> <operator pos:start="47:69" pos:end="47:69">-</operator> <name pos:start="47:71" pos:end="47:87"><name pos:start="47:71" pos:end="47:72">fs</name><operator pos:start="47:73" pos:end="47:74">-&gt;</operator><name pos:start="47:75" pos:end="47:87">ac_byte_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="99:5"><if pos:start="53:5" pos:end="89:5">if <condition pos:start="53:8" pos:end="53:27">(<expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:9">f</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:21">colorspace</name></name> <operator pos:start="53:23" pos:end="53:24">==</operator> <literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr>)</condition> <block pos:start="53:29" pos:end="89:5">{<block_content pos:start="55:9" pos:end="87:52">

        <decl_stmt pos:start="55:9" pos:end="55:67"><decl pos:start="55:9" pos:end="55:66"><type pos:start="55:9" pos:end="55:17"><specifier pos:start="55:9" pos:end="55:13">const</specifier> <name pos:start="55:15" pos:end="55:17">int</name></type> <name pos:start="55:19" pos:end="55:30">chroma_width</name>  <init pos:start="55:33" pos:end="55:66">= <expr pos:start="55:35" pos:end="55:66"><operator pos:start="55:35" pos:end="55:35">-</operator><operator pos:start="55:36" pos:end="55:36">(</operator><operator pos:start="55:37" pos:end="55:37">(</operator><operator pos:start="55:38" pos:end="55:38">-</operator><name pos:start="55:39" pos:end="55:43">width</name><operator pos:start="55:44" pos:end="55:44">)</operator> <operator pos:start="55:46" pos:end="55:47">&gt;&gt;</operator> <name pos:start="55:49" pos:end="55:65"><name pos:start="55:49" pos:end="55:49">f</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:65">chroma_h_shift</name></name><operator pos:start="55:66" pos:end="55:66">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:68"><decl pos:start="57:9" pos:end="57:67"><type pos:start="57:9" pos:end="57:17"><specifier pos:start="57:9" pos:end="57:13">const</specifier> <name pos:start="57:15" pos:end="57:17">int</name></type> <name pos:start="57:19" pos:end="57:31">chroma_height</name> <init pos:start="57:33" pos:end="57:67">= <expr pos:start="57:35" pos:end="57:67"><operator pos:start="57:35" pos:end="57:35">-</operator><operator pos:start="57:36" pos:end="57:36">(</operator><operator pos:start="57:37" pos:end="57:37">(</operator><operator pos:start="57:38" pos:end="57:38">-</operator><name pos:start="57:39" pos:end="57:44">height</name><operator pos:start="57:45" pos:end="57:45">)</operator> <operator pos:start="57:47" pos:end="57:48">&gt;&gt;</operator> <name pos:start="57:50" pos:end="57:66"><name pos:start="57:50" pos:end="57:50">f</name><operator pos:start="57:51" pos:end="57:52">-&gt;</operator><name pos:start="57:53" pos:end="57:66">chroma_v_shift</name></name><operator pos:start="57:67" pos:end="57:67">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:57"><decl pos:start="59:9" pos:end="59:56"><type pos:start="59:9" pos:end="59:17"><specifier pos:start="59:9" pos:end="59:13">const</specifier> <name pos:start="59:15" pos:end="59:17">int</name></type> <name pos:start="59:19" pos:end="59:20">cx</name>            <init pos:start="59:33" pos:end="59:56">= <expr pos:start="59:35" pos:end="59:56"><name pos:start="59:35" pos:end="59:35">x</name> <operator pos:start="59:37" pos:end="59:38">&gt;&gt;</operator> <name pos:start="59:40" pos:end="59:56"><name pos:start="59:40" pos:end="59:40">f</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:56">chroma_h_shift</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:57"><decl pos:start="61:9" pos:end="61:56"><type pos:start="61:9" pos:end="61:17"><specifier pos:start="61:9" pos:end="61:13">const</specifier> <name pos:start="61:15" pos:end="61:17">int</name></type> <name pos:start="61:19" pos:end="61:20">cy</name>            <init pos:start="61:33" pos:end="61:56">= <expr pos:start="61:35" pos:end="61:56"><name pos:start="61:35" pos:end="61:35">y</name> <operator pos:start="61:37" pos:end="61:38">&gt;&gt;</operator> <name pos:start="61:40" pos:end="61:56"><name pos:start="61:40" pos:end="61:40">f</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:56">chroma_v_shift</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="65:9" pos:end="67:55"><expr pos:start="65:9" pos:end="67:54"><call pos:start="65:9" pos:end="67:54"><name pos:start="65:9" pos:end="65:20">encode_plane</name><argument_list pos:start="65:21" pos:end="67:54">(<argument pos:start="65:22" pos:end="65:23"><expr pos:start="65:22" pos:end="65:23"><name pos:start="65:22" pos:end="65:23">fs</name></expr></argument>, <argument pos:start="65:26" pos:end="65:65"><expr pos:start="65:26" pos:end="65:65"><name pos:start="65:26" pos:end="65:35"><name pos:start="65:26" pos:end="65:26">p</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:32">data</name><index pos:start="65:33" pos:end="65:35">[<expr pos:start="65:34" pos:end="65:34"><literal type="number" pos:start="65:34" pos:end="65:34">0</literal></expr>]</index></name> <operator pos:start="65:37" pos:end="65:37">+</operator> <name pos:start="65:39" pos:end="65:40">ps</name> <operator pos:start="65:42" pos:end="65:42">*</operator> <name pos:start="65:44" pos:end="65:44">x</name> <operator pos:start="65:46" pos:end="65:46">+</operator> <name pos:start="65:48" pos:end="65:48">y</name> <operator pos:start="65:50" pos:end="65:50">*</operator> <name pos:start="65:52" pos:end="65:65"><name pos:start="65:52" pos:end="65:52">p</name><operator pos:start="65:53" pos:end="65:54">-&gt;</operator><name pos:start="65:55" pos:end="65:62">linesize</name><index pos:start="65:63" pos:end="65:65">[<expr pos:start="65:64" pos:end="65:64"><literal type="number" pos:start="65:64" pos:end="65:64">0</literal></expr>]</index></name></expr></argument>,

                     <argument pos:start="67:22" pos:end="67:26"><expr pos:start="67:22" pos:end="67:26"><name pos:start="67:22" pos:end="67:26">width</name></expr></argument>, <argument pos:start="67:29" pos:end="67:34"><expr pos:start="67:29" pos:end="67:34"><name pos:start="67:29" pos:end="67:34">height</name></expr></argument>, <argument pos:start="67:37" pos:end="67:50"><expr pos:start="67:37" pos:end="67:50"><name pos:start="67:37" pos:end="67:50"><name pos:start="67:37" pos:end="67:37">p</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:47">linesize</name><index pos:start="67:48" pos:end="67:50">[<expr pos:start="67:49" pos:end="67:49"><literal type="number" pos:start="67:49" pos:end="67:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:53" pos:end="67:53"><expr pos:start="67:53" pos:end="67:53"><literal type="number" pos:start="67:53" pos:end="67:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="71:9" pos:end="81:9"><if pos:start="71:9" pos:end="81:9">if <condition pos:start="71:12" pos:end="71:29">(<expr pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:13">f</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:28">chroma_planes</name></name></expr>)</condition> <block pos:start="71:31" pos:end="81:9">{<block_content pos:start="73:13" pos:end="79:73">

            <expr_stmt pos:start="73:13" pos:end="75:73"><expr pos:start="73:13" pos:end="75:72"><call pos:start="73:13" pos:end="75:72"><name pos:start="73:13" pos:end="73:24">encode_plane</name><argument_list pos:start="73:25" pos:end="75:72">(<argument pos:start="73:26" pos:end="73:27"><expr pos:start="73:26" pos:end="73:27"><name pos:start="73:26" pos:end="73:27">fs</name></expr></argument>, <argument pos:start="73:30" pos:end="73:71"><expr pos:start="73:30" pos:end="73:71"><name pos:start="73:30" pos:end="73:39"><name pos:start="73:30" pos:end="73:30">p</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:36">data</name><index pos:start="73:37" pos:end="73:39">[<expr pos:start="73:38" pos:end="73:38"><literal type="number" pos:start="73:38" pos:end="73:38">1</literal></expr>]</index></name> <operator pos:start="73:41" pos:end="73:41">+</operator> <name pos:start="73:43" pos:end="73:44">ps</name> <operator pos:start="73:46" pos:end="73:46">*</operator> <name pos:start="73:48" pos:end="73:49">cx</name> <operator pos:start="73:51" pos:end="73:51">+</operator> <name pos:start="73:53" pos:end="73:54">cy</name> <operator pos:start="73:56" pos:end="73:56">*</operator> <name pos:start="73:58" pos:end="73:71"><name pos:start="73:58" pos:end="73:58">p</name><operator pos:start="73:59" pos:end="73:60">-&gt;</operator><name pos:start="73:61" pos:end="73:68">linesize</name><index pos:start="73:69" pos:end="73:71">[<expr pos:start="73:70" pos:end="73:70"><literal type="number" pos:start="73:70" pos:end="73:70">1</literal></expr>]</index></name></expr></argument>,

                         <argument pos:start="75:26" pos:end="75:37"><expr pos:start="75:26" pos:end="75:37"><name pos:start="75:26" pos:end="75:37">chroma_width</name></expr></argument>, <argument pos:start="75:40" pos:end="75:52"><expr pos:start="75:40" pos:end="75:52"><name pos:start="75:40" pos:end="75:52">chroma_height</name></expr></argument>, <argument pos:start="75:55" pos:end="75:68"><expr pos:start="75:55" pos:end="75:68"><name pos:start="75:55" pos:end="75:68"><name pos:start="75:55" pos:end="75:55">p</name><operator pos:start="75:56" pos:end="75:57">-&gt;</operator><name pos:start="75:58" pos:end="75:65">linesize</name><index pos:start="75:66" pos:end="75:68">[<expr pos:start="75:67" pos:end="75:67"><literal type="number" pos:start="75:67" pos:end="75:67">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:71" pos:end="75:71"><expr pos:start="75:71" pos:end="75:71"><literal type="number" pos:start="75:71" pos:end="75:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="79:73"><expr pos:start="77:13" pos:end="79:72"><call pos:start="77:13" pos:end="79:72"><name pos:start="77:13" pos:end="77:24">encode_plane</name><argument_list pos:start="77:25" pos:end="79:72">(<argument pos:start="77:26" pos:end="77:27"><expr pos:start="77:26" pos:end="77:27"><name pos:start="77:26" pos:end="77:27">fs</name></expr></argument>, <argument pos:start="77:30" pos:end="77:71"><expr pos:start="77:30" pos:end="77:71"><name pos:start="77:30" pos:end="77:39"><name pos:start="77:30" pos:end="77:30">p</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:36">data</name><index pos:start="77:37" pos:end="77:39">[<expr pos:start="77:38" pos:end="77:38"><literal type="number" pos:start="77:38" pos:end="77:38">2</literal></expr>]</index></name> <operator pos:start="77:41" pos:end="77:41">+</operator> <name pos:start="77:43" pos:end="77:44">ps</name> <operator pos:start="77:46" pos:end="77:46">*</operator> <name pos:start="77:48" pos:end="77:49">cx</name> <operator pos:start="77:51" pos:end="77:51">+</operator> <name pos:start="77:53" pos:end="77:54">cy</name> <operator pos:start="77:56" pos:end="77:56">*</operator> <name pos:start="77:58" pos:end="77:71"><name pos:start="77:58" pos:end="77:58">p</name><operator pos:start="77:59" pos:end="77:60">-&gt;</operator><name pos:start="77:61" pos:end="77:68">linesize</name><index pos:start="77:69" pos:end="77:71">[<expr pos:start="77:70" pos:end="77:70"><literal type="number" pos:start="77:70" pos:end="77:70">2</literal></expr>]</index></name></expr></argument>,

                         <argument pos:start="79:26" pos:end="79:37"><expr pos:start="79:26" pos:end="79:37"><name pos:start="79:26" pos:end="79:37">chroma_width</name></expr></argument>, <argument pos:start="79:40" pos:end="79:52"><expr pos:start="79:40" pos:end="79:52"><name pos:start="79:40" pos:end="79:52">chroma_height</name></expr></argument>, <argument pos:start="79:55" pos:end="79:68"><expr pos:start="79:55" pos:end="79:68"><name pos:start="79:55" pos:end="79:68"><name pos:start="79:55" pos:end="79:55">p</name><operator pos:start="79:56" pos:end="79:57">-&gt;</operator><name pos:start="79:58" pos:end="79:65">linesize</name><index pos:start="79:66" pos:end="79:68">[<expr pos:start="79:67" pos:end="79:67"><literal type="number" pos:start="79:67" pos:end="79:67">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="79:71" pos:end="79:71"><expr pos:start="79:71" pos:end="79:71"><literal type="number" pos:start="79:71" pos:end="79:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="83:9" pos:end="87:52"><if pos:start="83:9" pos:end="87:52">if <condition pos:start="83:12" pos:end="83:29">(<expr pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:14">fs</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:28">transparency</name></name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="87:52"><block_content pos:start="85:13" pos:end="87:52">

            <expr_stmt pos:start="85:13" pos:end="87:52"><expr pos:start="85:13" pos:end="87:51"><call pos:start="85:13" pos:end="87:51"><name pos:start="85:13" pos:end="85:24">encode_plane</name><argument_list pos:start="85:25" pos:end="87:51">(<argument pos:start="85:26" pos:end="85:27"><expr pos:start="85:26" pos:end="85:27"><name pos:start="85:26" pos:end="85:27">fs</name></expr></argument>, <argument pos:start="85:30" pos:end="85:69"><expr pos:start="85:30" pos:end="85:69"><name pos:start="85:30" pos:end="85:39"><name pos:start="85:30" pos:end="85:30">p</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:36">data</name><index pos:start="85:37" pos:end="85:39">[<expr pos:start="85:38" pos:end="85:38"><literal type="number" pos:start="85:38" pos:end="85:38">3</literal></expr>]</index></name> <operator pos:start="85:41" pos:end="85:41">+</operator> <name pos:start="85:43" pos:end="85:44">ps</name> <operator pos:start="85:46" pos:end="85:46">*</operator> <name pos:start="85:48" pos:end="85:48">x</name> <operator pos:start="85:50" pos:end="85:50">+</operator> <name pos:start="85:52" pos:end="85:52">y</name> <operator pos:start="85:54" pos:end="85:54">*</operator> <name pos:start="85:56" pos:end="85:69"><name pos:start="85:56" pos:end="85:56">p</name><operator pos:start="85:57" pos:end="85:58">-&gt;</operator><name pos:start="85:59" pos:end="85:66">linesize</name><index pos:start="85:67" pos:end="85:69">[<expr pos:start="85:68" pos:end="85:68"><literal type="number" pos:start="85:68" pos:end="85:68">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:72" pos:end="85:76"><expr pos:start="85:72" pos:end="85:76"><name pos:start="85:72" pos:end="85:76">width</name></expr></argument>,

                         <argument pos:start="87:26" pos:end="87:31"><expr pos:start="87:26" pos:end="87:31"><name pos:start="87:26" pos:end="87:31">height</name></expr></argument>, <argument pos:start="87:34" pos:end="87:47"><expr pos:start="87:34" pos:end="87:47"><name pos:start="87:34" pos:end="87:47"><name pos:start="87:34" pos:end="87:34">p</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:44">linesize</name><index pos:start="87:45" pos:end="87:47">[<expr pos:start="87:46" pos:end="87:46"><literal type="number" pos:start="87:46" pos:end="87:46">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="87:50" pos:end="87:50"><expr pos:start="87:50" pos:end="87:50"><literal type="number" pos:start="87:50" pos:end="87:50">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="99:5">else <block pos:start="89:12" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:65">

        <decl_stmt pos:start="91:9" pos:end="95:80"><decl pos:start="91:9" pos:end="95:79"><type pos:start="91:9" pos:end="91:23"><specifier pos:start="91:9" pos:end="91:13">const</specifier> <name pos:start="91:15" pos:end="91:21">uint8_t</name> <modifier pos:start="91:23" pos:end="91:23">*</modifier></type><name pos:start="91:24" pos:end="91:32"><name pos:start="91:24" pos:end="91:29">planes</name><index pos:start="91:30" pos:end="91:32">[<expr pos:start="91:31" pos:end="91:31"><literal type="number" pos:start="91:31" pos:end="91:31">3</literal></expr>]</index></name> <init pos:start="91:34" pos:end="95:79">= <expr pos:start="91:36" pos:end="95:79"><block pos:start="91:36" pos:end="95:79">{ <expr pos:start="91:38" pos:end="91:77"><name pos:start="91:38" pos:end="91:47"><name pos:start="91:38" pos:end="91:38">p</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:44">data</name><index pos:start="91:45" pos:end="91:47">[<expr pos:start="91:46" pos:end="91:46"><literal type="number" pos:start="91:46" pos:end="91:46">0</literal></expr>]</index></name> <operator pos:start="91:49" pos:end="91:49">+</operator> <name pos:start="91:51" pos:end="91:52">ps</name> <operator pos:start="91:54" pos:end="91:54">*</operator> <name pos:start="91:56" pos:end="91:56">x</name> <operator pos:start="91:58" pos:end="91:58">+</operator> <name pos:start="91:60" pos:end="91:60">y</name> <operator pos:start="91:62" pos:end="91:62">*</operator> <name pos:start="91:64" pos:end="91:77"><name pos:start="91:64" pos:end="91:64">p</name><operator pos:start="91:65" pos:end="91:66">-&gt;</operator><name pos:start="91:67" pos:end="91:74">linesize</name><index pos:start="91:75" pos:end="91:77">[<expr pos:start="91:76" pos:end="91:76"><literal type="number" pos:start="91:76" pos:end="91:76">0</literal></expr>]</index></name></expr>,

                                     <expr pos:start="93:38" pos:end="93:77"><name pos:start="93:38" pos:end="93:47"><name pos:start="93:38" pos:end="93:38">p</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:44">data</name><index pos:start="93:45" pos:end="93:47">[<expr pos:start="93:46" pos:end="93:46"><literal type="number" pos:start="93:46" pos:end="93:46">1</literal></expr>]</index></name> <operator pos:start="93:49" pos:end="93:49">+</operator> <name pos:start="93:51" pos:end="93:52">ps</name> <operator pos:start="93:54" pos:end="93:54">*</operator> <name pos:start="93:56" pos:end="93:56">x</name> <operator pos:start="93:58" pos:end="93:58">+</operator> <name pos:start="93:60" pos:end="93:60">y</name> <operator pos:start="93:62" pos:end="93:62">*</operator> <name pos:start="93:64" pos:end="93:77"><name pos:start="93:64" pos:end="93:64">p</name><operator pos:start="93:65" pos:end="93:66">-&gt;</operator><name pos:start="93:67" pos:end="93:74">linesize</name><index pos:start="93:75" pos:end="93:77">[<expr pos:start="93:76" pos:end="93:76"><literal type="number" pos:start="93:76" pos:end="93:76">1</literal></expr>]</index></name></expr>,

                                     <expr pos:start="95:38" pos:end="95:77"><name pos:start="95:38" pos:end="95:47"><name pos:start="95:38" pos:end="95:38">p</name><operator pos:start="95:39" pos:end="95:40">-&gt;</operator><name pos:start="95:41" pos:end="95:44">data</name><index pos:start="95:45" pos:end="95:47">[<expr pos:start="95:46" pos:end="95:46"><literal type="number" pos:start="95:46" pos:end="95:46">2</literal></expr>]</index></name> <operator pos:start="95:49" pos:end="95:49">+</operator> <name pos:start="95:51" pos:end="95:52">ps</name> <operator pos:start="95:54" pos:end="95:54">*</operator> <name pos:start="95:56" pos:end="95:56">x</name> <operator pos:start="95:58" pos:end="95:58">+</operator> <name pos:start="95:60" pos:end="95:60">y</name> <operator pos:start="95:62" pos:end="95:62">*</operator> <name pos:start="95:64" pos:end="95:77"><name pos:start="95:64" pos:end="95:64">p</name><operator pos:start="95:65" pos:end="95:66">-&gt;</operator><name pos:start="95:67" pos:end="95:74">linesize</name><index pos:start="95:75" pos:end="95:77">[<expr pos:start="95:76" pos:end="95:76"><literal type="number" pos:start="95:76" pos:end="95:76">2</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:65"><expr pos:start="97:9" pos:end="97:64"><call pos:start="97:9" pos:end="97:64"><name pos:start="97:9" pos:end="97:24">encode_rgb_frame</name><argument_list pos:start="97:25" pos:end="97:64">(<argument pos:start="97:26" pos:end="97:27"><expr pos:start="97:26" pos:end="97:27"><name pos:start="97:26" pos:end="97:27">fs</name></expr></argument>, <argument pos:start="97:30" pos:end="97:35"><expr pos:start="97:30" pos:end="97:35"><name pos:start="97:30" pos:end="97:35">planes</name></expr></argument>, <argument pos:start="97:38" pos:end="97:42"><expr pos:start="97:38" pos:end="97:42"><name pos:start="97:38" pos:end="97:42">width</name></expr></argument>, <argument pos:start="97:45" pos:end="97:50"><expr pos:start="97:45" pos:end="97:50"><name pos:start="97:45" pos:end="97:50">height</name></expr></argument>, <argument pos:start="97:53" pos:end="97:63"><expr pos:start="97:53" pos:end="97:63"><name pos:start="97:53" pos:end="97:63"><name pos:start="97:53" pos:end="97:53">p</name><operator pos:start="97:54" pos:end="97:55">-&gt;</operator><name pos:start="97:56" pos:end="97:63">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:13"><expr pos:start="101:5" pos:end="101:12"><call pos:start="101:5" pos:end="101:12"><name pos:start="101:5" pos:end="101:10">emms_c</name><argument_list pos:start="101:11" pos:end="101:12">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
