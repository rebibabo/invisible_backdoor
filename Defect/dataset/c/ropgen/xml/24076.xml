<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24076.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:16">noise</name><parameter_list pos:start="1:17" pos:end="3:68">(<parameter pos:start="1:18" pos:end="1:47"><decl pos:start="1:18" pos:end="1:47"><type pos:start="1:18" pos:end="1:47"><name pos:start="1:18" pos:end="1:41">AVBitStreamFilterContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">bsfc</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:70"><decl pos:start="1:50" pos:end="1:70"><type pos:start="1:50" pos:end="1:70"><name pos:start="1:50" pos:end="1:63">AVCodecContext</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:70">avctx</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:88"><decl pos:start="1:73" pos:end="1:88"><type pos:start="1:73" pos:end="1:88"><specifier pos:start="1:73" pos:end="1:77">const</specifier> <name pos:start="1:79" pos:end="1:82">char</name> <modifier pos:start="1:84" pos:end="1:84">*</modifier></type><name pos:start="1:85" pos:end="1:88">args</name></decl></parameter>,
                     <parameter pos:start="2:22" pos:end="2:38"><decl pos:start="2:22" pos:end="2:38"><type pos:start="2:22" pos:end="2:38"><name pos:start="2:22" pos:end="2:28">uint8_t</name> <modifier pos:start="2:30" pos:end="2:30">*</modifier><modifier pos:start="2:31" pos:end="2:31">*</modifier></type><name pos:start="2:32" pos:end="2:38">poutbuf</name></decl></parameter>, <parameter pos:start="2:41" pos:end="2:57"><decl pos:start="2:41" pos:end="2:57"><type pos:start="2:41" pos:end="2:57"><name pos:start="2:41" pos:end="2:43">int</name> <modifier pos:start="2:45" pos:end="2:45">*</modifier></type><name pos:start="2:46" pos:end="2:57">poutbuf_size</name></decl></parameter>,
                     <parameter pos:start="3:22" pos:end="3:39"><decl pos:start="3:22" pos:end="3:39"><type pos:start="3:22" pos:end="3:39"><specifier pos:start="3:22" pos:end="3:26">const</specifier> <name pos:start="3:28" pos:end="3:34">uint8_t</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">buf</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:53"><decl pos:start="3:42" pos:end="3:53"><type pos:start="3:42" pos:end="3:53"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:53">buf_size</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:67"><decl pos:start="3:56" pos:end="3:67"><type pos:start="3:56" pos:end="3:67"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:67">keyframe</name></decl></parameter>)</parameter_list><block pos:start="3:69" pos:end="15:1">{<block_content pos:start="4:5" pos:end="14:13">
    <decl_stmt pos:start="4:5" pos:end="4:41"><decl pos:start="4:5" pos:end="4:40"><type pos:start="4:5" pos:end="4:18"><name pos:start="4:5" pos:end="4:12">unsigned</name> <name pos:start="4:14" pos:end="4:16">int</name> <modifier pos:start="4:18" pos:end="4:18">*</modifier></type><name pos:start="4:19" pos:end="4:23">state</name><init pos:start="4:24" pos:end="4:40">= <expr pos:start="4:26" pos:end="4:40"><name pos:start="4:26" pos:end="4:40"><name pos:start="4:26" pos:end="4:29">bsfc</name><operator pos:start="4:30" pos:end="4:31">-&gt;</operator><name pos:start="4:32" pos:end="4:40">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">amount</name><init pos:start="5:15" pos:end="5:54">= <expr pos:start="5:17" pos:end="5:54"><ternary pos:start="5:17" pos:end="5:54"><condition pos:start="5:17" pos:end="5:22"><expr pos:start="5:17" pos:end="5:20"><name pos:start="5:17" pos:end="5:20">args</name></expr> ?</condition><then pos:start="5:24" pos:end="5:33"> <expr pos:start="5:24" pos:end="5:33"><call pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:27">atoi</name><argument_list pos:start="5:28" pos:end="5:33">(<argument pos:start="5:29" pos:end="5:32"><expr pos:start="5:29" pos:end="5:32"><name pos:start="5:29" pos:end="5:32">args</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="5:35" pos:end="5:54">: <expr pos:start="5:37" pos:end="5:54"><operator pos:start="5:37" pos:end="5:37">(</operator><operator pos:start="5:38" pos:end="5:38">*</operator><name pos:start="5:39" pos:end="5:43">state</name> <operator pos:start="5:45" pos:end="5:45">%</operator> <literal type="number" pos:start="5:47" pos:end="5:52">10001</literal><operator pos:start="5:52" pos:end="5:52">+</operator><literal type="number" pos:start="5:53" pos:end="5:53">1</literal><operator pos:start="5:54" pos:end="5:54">)</operator></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:65"><expr pos:start="7:5" pos:end="7:64"><operator pos:start="7:5" pos:end="7:5">*</operator><name pos:start="7:6" pos:end="7:12">poutbuf</name><operator pos:start="7:13" pos:end="7:13">=</operator> <call pos:start="7:15" pos:end="7:64"><name pos:start="7:15" pos:end="7:23">av_malloc</name><argument_list pos:start="7:24" pos:end="7:64">(<argument pos:start="7:25" pos:end="7:63"><expr pos:start="7:25" pos:end="7:63"><name pos:start="7:25" pos:end="7:32">buf_size</name> <operator pos:start="7:34" pos:end="7:34">+</operator> <name pos:start="7:36" pos:end="7:63">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:67"><expr pos:start="8:5" pos:end="8:66"><call pos:start="8:5" pos:end="8:66"><name pos:start="8:5" pos:end="8:10">memcpy</name><argument_list pos:start="8:11" pos:end="8:66">(<argument pos:start="8:12" pos:end="8:19"><expr pos:start="8:12" pos:end="8:19"><operator pos:start="8:12" pos:end="8:12">*</operator><name pos:start="8:13" pos:end="8:19">poutbuf</name></expr></argument>, <argument pos:start="8:22" pos:end="8:24"><expr pos:start="8:22" pos:end="8:24"><name pos:start="8:22" pos:end="8:24">buf</name></expr></argument>, <argument pos:start="8:27" pos:end="8:65"><expr pos:start="8:27" pos:end="8:65"><name pos:start="8:27" pos:end="8:34">buf_size</name> <operator pos:start="8:36" pos:end="8:36">+</operator> <name pos:start="8:38" pos:end="8:65">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="9:5" pos:end="13:5">for<control pos:start="9:8" pos:end="9:29">(<init pos:start="9:9" pos:end="9:12"><expr pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:9">i</name><operator pos:start="9:10" pos:end="9:10">=</operator><literal type="number" pos:start="9:11" pos:end="9:11">0</literal></expr>;</init> <condition pos:start="9:14" pos:end="9:24"><expr pos:start="9:14" pos:end="9:23"><name pos:start="9:14" pos:end="9:14">i</name><operator pos:start="9:15" pos:end="9:15">&lt;</operator><name pos:start="9:16" pos:end="9:23">buf_size</name></expr>;</condition> <incr pos:start="9:26" pos:end="9:28"><expr pos:start="9:26" pos:end="9:28"><name pos:start="9:26" pos:end="9:26">i</name><operator pos:start="9:27" pos:end="9:28">++</operator></expr></incr>)</control><block pos:start="9:30" pos:end="13:5">{<block_content pos:start="10:9" pos:end="12:35">
        <expr_stmt pos:start="10:9" pos:end="10:38"><expr pos:start="10:9" pos:end="10:37"><operator pos:start="10:9" pos:end="10:9">(</operator><operator pos:start="10:10" pos:end="10:10">*</operator><name pos:start="10:11" pos:end="10:15">state</name><operator pos:start="10:16" pos:end="10:16">)</operator> <operator pos:start="10:18" pos:end="10:19">+=</operator> <operator pos:start="10:21" pos:end="10:21">(</operator><operator pos:start="10:22" pos:end="10:22">*</operator><name pos:start="10:23" pos:end="10:29">poutbuf</name><operator pos:start="10:30" pos:end="10:30">)</operator><index pos:start="10:31" pos:end="10:33">[<expr pos:start="10:32" pos:end="10:32"><name pos:start="10:32" pos:end="10:32">i</name></expr>]</index> <operator pos:start="10:35" pos:end="10:35">+</operator> <literal type="number" pos:start="10:37" pos:end="10:37">1</literal></expr>;</expr_stmt>
        <if_stmt pos:start="11:9" pos:end="12:35"><if pos:start="11:9" pos:end="12:35">if<condition pos:start="11:11" pos:end="11:32">(<expr pos:start="11:12" pos:end="11:31"><operator pos:start="11:12" pos:end="11:12">*</operator><name pos:start="11:13" pos:end="11:17">state</name> <operator pos:start="11:19" pos:end="11:19">%</operator> <name pos:start="11:21" pos:end="11:26">amount</name> <operator pos:start="11:28" pos:end="11:29">==</operator> <literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr>)</condition><block type="pseudo" pos:start="12:13" pos:end="12:35"><block_content pos:start="12:13" pos:end="12:35">
            <expr_stmt pos:start="12:13" pos:end="12:35"><expr pos:start="12:13" pos:end="12:34"><operator pos:start="12:13" pos:end="12:13">(</operator><operator pos:start="12:14" pos:end="12:14">*</operator><name pos:start="12:15" pos:end="12:21">poutbuf</name><operator pos:start="12:22" pos:end="12:22">)</operator><index pos:start="12:23" pos:end="12:25">[<expr pos:start="12:24" pos:end="12:24"><name pos:start="12:24" pos:end="12:24">i</name></expr>]</index> <operator pos:start="12:27" pos:end="12:27">=</operator> <operator pos:start="12:29" pos:end="12:29">*</operator><name pos:start="12:30" pos:end="12:34">state</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="14:5" pos:end="14:13">return <expr pos:start="14:12" pos:end="14:12"><literal type="number" pos:start="14:12" pos:end="14:12">1</literal></expr>;</return>
</block_content>}</block></function></unit>
