<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3115.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">megasas_mmio_write</name><parameter_list pos:start="1:31" pos:end="3:59">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:51">hwaddr</name></type> <name pos:start="1:53" pos:end="1:56">addr</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:39">uint64_t</name></type> <name pos:start="3:41" pos:end="3:43">val</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:53">unsigned</name></type> <name pos:start="3:55" pos:end="3:58">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="225:1">{<block_content pos:start="7:5" pos:end="223:5">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MegasasState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:28">= <expr pos:start="7:23" pos:end="7:28"><name pos:start="7:23" pos:end="7:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">PCIDevice</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:22">pci_dev</name> <init pos:start="9:24" pos:end="9:38">= <expr pos:start="9:26" pos:end="9:38"><call pos:start="9:26" pos:end="9:38"><name pos:start="9:26" pos:end="9:35">PCI_DEVICE</name><argument_list pos:start="9:36" pos:end="9:38">(<argument pos:start="9:37" pos:end="9:37"><expr pos:start="9:37" pos:end="9:37"><name pos:start="9:37" pos:end="9:37">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:23">frame_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:24">frame_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <switch pos:start="19:5" pos:end="223:5">switch <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">addr</name></expr>)</condition> <block pos:start="19:19" pos:end="223:5">{<block_content pos:start="21:5" pos:end="221:14">

    <case pos:start="21:5" pos:end="21:17">case <expr pos:start="21:10" pos:end="21:16"><name pos:start="21:10" pos:end="21:16">MFI_IDB</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:50"><expr pos:start="23:9" pos:end="23:49"><call pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:33">trace_megasas_mmio_writel</name><argument_list pos:start="23:34" pos:end="23:49">(<argument pos:start="23:35" pos:end="23:43"><expr pos:start="23:35" pos:end="23:43"><literal type="string" pos:start="23:35" pos:end="23:43">"MFI_IDB"</literal></expr></argument>, <argument pos:start="23:46" pos:end="23:48"><expr pos:start="23:46" pos:end="23:48"><name pos:start="23:46" pos:end="23:48">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:35">(<expr pos:start="25:13" pos:end="25:34"><name pos:start="25:13" pos:end="25:15">val</name> <operator pos:start="25:17" pos:end="25:17">&amp;</operator> <name pos:start="25:19" pos:end="25:34">MFI_FWINIT_ABORT</name></expr>)</condition> <block pos:start="25:37" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:13">

            <comment type="block" pos:start="27:13" pos:end="27:40">/* Abort all pending cmds */</comment>

            <for pos:start="29:13" pos:end="33:13">for <control pos:start="29:17" pos:end="29:44">(<init pos:start="29:18" pos:end="29:23"><expr pos:start="29:18" pos:end="29:22"><name pos:start="29:18" pos:end="29:18">i</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>;</init> <condition pos:start="29:25" pos:end="29:39"><expr pos:start="29:25" pos:end="29:38"><name pos:start="29:25" pos:end="29:25">i</name> <operator pos:start="29:27" pos:end="29:27">&lt;</operator> <name pos:start="29:29" pos:end="29:38"><name pos:start="29:29" pos:end="29:29">s</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:38">fw_cmds</name></name></expr>;</condition> <incr pos:start="29:41" pos:end="29:43"><expr pos:start="29:41" pos:end="29:43"><name pos:start="29:41" pos:end="29:41">i</name><operator pos:start="29:42" pos:end="29:43">++</operator></expr></incr>)</control> <block pos:start="29:46" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:53">

                <expr_stmt pos:start="31:17" pos:end="31:53"><expr pos:start="31:17" pos:end="31:52"><call pos:start="31:17" pos:end="31:52"><name pos:start="31:17" pos:end="31:37">megasas_abort_command</name><argument_list pos:start="31:38" pos:end="31:52">(<argument pos:start="31:39" pos:end="31:51"><expr pos:start="31:39" pos:end="31:51"><operator pos:start="31:39" pos:end="31:39">&amp;</operator><name pos:start="31:40" pos:end="31:51"><name pos:start="31:40" pos:end="31:40">s</name><operator pos:start="31:41" pos:end="31:42">-&gt;</operator><name pos:start="31:43" pos:end="31:48">frames</name><index pos:start="31:49" pos:end="31:51">[<expr pos:start="31:50" pos:end="31:50"><name pos:start="31:50" pos:end="31:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:35">(<expr pos:start="37:13" pos:end="37:34"><name pos:start="37:13" pos:end="37:15">val</name> <operator pos:start="37:17" pos:end="37:17">&amp;</operator> <name pos:start="37:19" pos:end="37:34">MFI_FWINIT_READY</name></expr>)</condition> <block pos:start="37:37" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:34">

            <comment type="block" pos:start="39:13" pos:end="39:34">/* move to FW READY */</comment>

            <expr_stmt pos:start="41:13" pos:end="41:34"><expr pos:start="41:13" pos:end="41:33"><call pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:30">megasas_soft_reset</name><argument_list pos:start="41:31" pos:end="41:33">(<argument pos:start="41:32" pos:end="41:32"><expr pos:start="41:32" pos:end="41:32"><name pos:start="41:32" pos:end="41:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:37">(<expr pos:start="45:13" pos:end="45:36"><name pos:start="45:13" pos:end="45:15">val</name> <operator pos:start="45:17" pos:end="45:17">&amp;</operator> <name pos:start="45:19" pos:end="45:36">MFI_FWINIT_MFIMODE</name></expr>)</condition> <block pos:start="45:39" pos:end="49:9">{<block_content>

            <comment type="block" pos:start="47:13" pos:end="47:30">/* discard MFIs */</comment>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:38">(<expr pos:start="51:13" pos:end="51:37"><name pos:start="51:13" pos:end="51:15">val</name> <operator pos:start="51:17" pos:end="51:17">&amp;</operator> <name pos:start="51:19" pos:end="51:37">MFI_FWINIT_STOP_ADP</name></expr>)</condition> <block pos:start="51:40" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:44">

            <comment type="block" pos:start="53:13" pos:end="53:49">/* Terminal error, stop processing */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:44"><expr pos:start="55:13" pos:end="55:43"><name pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:23">fw_state</name></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:43">MFI_FWSTATE_FAULT</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:18">case <expr pos:start="61:10" pos:end="61:17"><name pos:start="61:10" pos:end="61:17">MFI_OMSK</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:51"><expr pos:start="63:9" pos:end="63:50"><call pos:start="63:9" pos:end="63:50"><name pos:start="63:9" pos:end="63:33">trace_megasas_mmio_writel</name><argument_list pos:start="63:34" pos:end="63:50">(<argument pos:start="63:35" pos:end="63:44"><expr pos:start="63:35" pos:end="63:44"><literal type="string" pos:start="63:35" pos:end="63:44">"MFI_OMSK"</literal></expr></argument>, <argument pos:start="63:47" pos:end="63:49"><expr pos:start="63:47" pos:end="63:49"><name pos:start="63:47" pos:end="63:49">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:27"><expr pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:20">intr_mask</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:26">val</name></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="77:9"><if pos:start="67:9" pos:end="77:9">if <condition pos:start="67:12" pos:end="71:35">(<expr pos:start="67:13" pos:end="71:34"><operator pos:start="67:13" pos:end="67:13">!</operator><call pos:start="67:14" pos:end="67:36"><name pos:start="67:14" pos:end="67:33">megasas_intr_enabled</name><argument_list pos:start="67:34" pos:end="67:36">(<argument pos:start="67:35" pos:end="67:35"><expr pos:start="67:35" pos:end="67:35"><name pos:start="67:35" pos:end="67:35">s</name></expr></argument>)</argument_list></call> <operator pos:start="67:38" pos:end="67:39">&amp;&amp;</operator>

            <operator pos:start="69:13" pos:end="69:13">!</operator><call pos:start="69:14" pos:end="69:33"><name pos:start="69:14" pos:end="69:24">msi_enabled</name><argument_list pos:start="69:25" pos:end="69:33">(<argument pos:start="69:26" pos:end="69:32"><expr pos:start="69:26" pos:end="69:32"><name pos:start="69:26" pos:end="69:32">pci_dev</name></expr></argument>)</argument_list></call> <operator pos:start="69:35" pos:end="69:36">&amp;&amp;</operator>

            <operator pos:start="71:13" pos:end="71:13">!</operator><call pos:start="71:14" pos:end="71:34"><name pos:start="71:14" pos:end="71:25">msix_enabled</name><argument_list pos:start="71:26" pos:end="71:34">(<argument pos:start="71:27" pos:end="71:33"><expr pos:start="71:27" pos:end="71:33"><name pos:start="71:27" pos:end="71:33">pci_dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:37" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:38">

            <expr_stmt pos:start="73:13" pos:end="73:38"><expr pos:start="73:13" pos:end="73:37"><call pos:start="73:13" pos:end="73:37"><name pos:start="73:13" pos:end="73:35">trace_megasas_irq_lower</name><argument_list pos:start="73:36" pos:end="73:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:38"><expr pos:start="75:13" pos:end="75:37"><call pos:start="75:13" pos:end="75:37"><name pos:start="75:13" pos:end="75:28">pci_irq_deassert</name><argument_list pos:start="75:29" pos:end="75:37">(<argument pos:start="75:30" pos:end="75:36"><expr pos:start="75:30" pos:end="75:36"><name pos:start="75:30" pos:end="75:36">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="79:9" pos:end="101:9"><if pos:start="79:9" pos:end="95:9">if <condition pos:start="79:12" pos:end="79:36">(<expr pos:start="79:13" pos:end="79:35"><call pos:start="79:13" pos:end="79:35"><name pos:start="79:13" pos:end="79:32">megasas_intr_enabled</name><argument_list pos:start="79:33" pos:end="79:35">(<argument pos:start="79:34" pos:end="79:34"><expr pos:start="79:34" pos:end="79:34"><name pos:start="79:34" pos:end="79:34">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:38" pos:end="95:9">{<block_content pos:start="81:13" pos:end="93:13">

            <if_stmt pos:start="81:13" pos:end="93:13"><if pos:start="81:13" pos:end="85:13">if <condition pos:start="81:16" pos:end="81:38">(<expr pos:start="81:17" pos:end="81:37"><call pos:start="81:17" pos:end="81:37"><name pos:start="81:17" pos:end="81:28">msix_enabled</name><argument_list pos:start="81:29" pos:end="81:37">(<argument pos:start="81:30" pos:end="81:36"><expr pos:start="81:30" pos:end="81:36"><name pos:start="81:30" pos:end="81:36">pci_dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:40" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:46">

                <expr_stmt pos:start="83:17" pos:end="83:46"><expr pos:start="83:17" pos:end="83:45"><call pos:start="83:17" pos:end="83:45"><name pos:start="83:17" pos:end="83:42">trace_megasas_msix_enabled</name><argument_list pos:start="83:43" pos:end="83:45">(<argument pos:start="83:44" pos:end="83:44"><expr pos:start="83:44" pos:end="83:44"><literal type="number" pos:start="83:44" pos:end="83:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="85:15" pos:end="89:13">else if <condition pos:start="85:23" pos:end="85:44">(<expr pos:start="85:24" pos:end="85:43"><call pos:start="85:24" pos:end="85:43"><name pos:start="85:24" pos:end="85:34">msi_enabled</name><argument_list pos:start="85:35" pos:end="85:43">(<argument pos:start="85:36" pos:end="85:42"><expr pos:start="85:36" pos:end="85:42"><name pos:start="85:36" pos:end="85:42">pci_dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:46" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:45">

                <expr_stmt pos:start="87:17" pos:end="87:45"><expr pos:start="87:17" pos:end="87:44"><call pos:start="87:17" pos:end="87:44"><name pos:start="87:17" pos:end="87:41">trace_megasas_msi_enabled</name><argument_list pos:start="87:42" pos:end="87:44">(<argument pos:start="87:43" pos:end="87:43"><expr pos:start="87:43" pos:end="87:43"><literal type="number" pos:start="87:43" pos:end="87:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="89:15" pos:end="93:13">else <block pos:start="89:20" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:45">

                <expr_stmt pos:start="91:17" pos:end="91:45"><expr pos:start="91:17" pos:end="91:44"><call pos:start="91:17" pos:end="91:44"><name pos:start="91:17" pos:end="91:42">trace_megasas_intr_enabled</name><argument_list pos:start="91:43" pos:end="91:44">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="101:9">else <block pos:start="95:16" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:34">

            <expr_stmt pos:start="97:13" pos:end="97:42"><expr pos:start="97:13" pos:end="97:41"><call pos:start="97:13" pos:end="97:41"><name pos:start="97:13" pos:end="97:39">trace_megasas_intr_disabled</name><argument_list pos:start="97:40" pos:end="97:41">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:34"><expr pos:start="99:13" pos:end="99:33"><call pos:start="99:13" pos:end="99:33"><name pos:start="99:13" pos:end="99:30">megasas_soft_reset</name><argument_list pos:start="99:31" pos:end="99:33">(<argument pos:start="99:32" pos:end="99:32"><expr pos:start="99:32" pos:end="99:32"><name pos:start="99:32" pos:end="99:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:19">case <expr pos:start="105:10" pos:end="105:18"><name pos:start="105:10" pos:end="105:18">MFI_ODCR0</name></expr>:</case>

        <expr_stmt pos:start="107:9" pos:end="107:52"><expr pos:start="107:9" pos:end="107:51"><call pos:start="107:9" pos:end="107:51"><name pos:start="107:9" pos:end="107:33">trace_megasas_mmio_writel</name><argument_list pos:start="107:34" pos:end="107:51">(<argument pos:start="107:35" pos:end="107:45"><expr pos:start="107:35" pos:end="107:45"><literal type="string" pos:start="107:35" pos:end="107:45">"MFI_ODCR0"</literal></expr></argument>, <argument pos:start="107:48" pos:end="107:50"><expr pos:start="107:48" pos:end="107:50"><name pos:start="107:48" pos:end="107:50">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:24"><expr pos:start="109:9" pos:end="109:23"><name pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:19">doorbell</name></name> <operator pos:start="109:21" pos:end="109:21">=</operator> <literal type="number" pos:start="109:23" pos:end="109:23">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="121:9"><if pos:start="111:9" pos:end="121:9">if <condition pos:start="111:12" pos:end="111:36">(<expr pos:start="111:13" pos:end="111:35"><call pos:start="111:13" pos:end="111:35"><name pos:start="111:13" pos:end="111:32">megasas_intr_enabled</name><argument_list pos:start="111:33" pos:end="111:35">(<argument pos:start="111:34" pos:end="111:34"><expr pos:start="111:34" pos:end="111:34"><name pos:start="111:34" pos:end="111:34">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:38" pos:end="121:9">{<block_content pos:start="113:13" pos:end="119:13">

            <if_stmt pos:start="113:13" pos:end="119:13"><if pos:start="113:13" pos:end="119:13">if <condition pos:start="113:16" pos:end="113:64">(<expr pos:start="113:17" pos:end="113:63"><operator pos:start="113:17" pos:end="113:17">!</operator><call pos:start="113:18" pos:end="113:38"><name pos:start="113:18" pos:end="113:29">msix_enabled</name><argument_list pos:start="113:30" pos:end="113:38">(<argument pos:start="113:31" pos:end="113:37"><expr pos:start="113:31" pos:end="113:37"><name pos:start="113:31" pos:end="113:37">pci_dev</name></expr></argument>)</argument_list></call> <operator pos:start="113:40" pos:end="113:41">&amp;&amp;</operator> <operator pos:start="113:43" pos:end="113:43">!</operator><call pos:start="113:44" pos:end="113:63"><name pos:start="113:44" pos:end="113:54">msi_enabled</name><argument_list pos:start="113:55" pos:end="113:63">(<argument pos:start="113:56" pos:end="113:62"><expr pos:start="113:56" pos:end="113:62"><name pos:start="113:56" pos:end="113:62">pci_dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:66" pos:end="119:13">{<block_content pos:start="115:17" pos:end="117:42">

                <expr_stmt pos:start="115:17" pos:end="115:42"><expr pos:start="115:17" pos:end="115:41"><call pos:start="115:17" pos:end="115:41"><name pos:start="115:17" pos:end="115:39">trace_megasas_irq_lower</name><argument_list pos:start="115:40" pos:end="115:41">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:42"><expr pos:start="117:17" pos:end="117:41"><call pos:start="117:17" pos:end="117:41"><name pos:start="117:17" pos:end="117:32">pci_irq_deassert</name><argument_list pos:start="117:33" pos:end="117:41">(<argument pos:start="117:34" pos:end="117:40"><expr pos:start="117:34" pos:end="117:40"><name pos:start="117:34" pos:end="117:40">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <case pos:start="125:5" pos:end="125:18">case <expr pos:start="125:10" pos:end="125:17"><name pos:start="125:10" pos:end="125:17">MFI_IQPH</name></expr>:</case>

        <expr_stmt pos:start="127:9" pos:end="127:51"><expr pos:start="127:9" pos:end="127:50"><call pos:start="127:9" pos:end="127:50"><name pos:start="127:9" pos:end="127:33">trace_megasas_mmio_writel</name><argument_list pos:start="127:34" pos:end="127:50">(<argument pos:start="127:35" pos:end="127:44"><expr pos:start="127:35" pos:end="127:44"><literal type="string" pos:start="127:35" pos:end="127:44">"MFI_IQPH"</literal></expr></argument>, <argument pos:start="127:47" pos:end="127:49"><expr pos:start="127:47" pos:end="127:49"><name pos:start="127:47" pos:end="127:49">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="129:9" pos:end="129:65">/* Received high 32 bits of a 64 bit MFI frame address */</comment>

        <expr_stmt pos:start="131:9" pos:end="131:26"><expr pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:19"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:19">frame_hi</name></name> <operator pos:start="131:21" pos:end="131:21">=</operator> <name pos:start="131:23" pos:end="131:25">val</name></expr>;</expr_stmt>

        <break pos:start="133:9" pos:end="133:14">break;</break>

    <case pos:start="135:5" pos:end="135:18">case <expr pos:start="135:10" pos:end="135:17"><name pos:start="135:10" pos:end="135:17">MFI_IQPL</name></expr>:</case>

        <expr_stmt pos:start="137:9" pos:end="137:51"><expr pos:start="137:9" pos:end="137:50"><call pos:start="137:9" pos:end="137:50"><name pos:start="137:9" pos:end="137:33">trace_megasas_mmio_writel</name><argument_list pos:start="137:34" pos:end="137:50">(<argument pos:start="137:35" pos:end="137:44"><expr pos:start="137:35" pos:end="137:44"><literal type="string" pos:start="137:35" pos:end="137:44">"MFI_IQPL"</literal></expr></argument>, <argument pos:start="137:47" pos:end="137:49"><expr pos:start="137:47" pos:end="137:49"><name pos:start="137:47" pos:end="137:49">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="139:9" pos:end="139:64">/* Received low 32 bits of a 64 bit MFI frame address */</comment>

        <comment type="block" pos:start="141:9" pos:end="141:25">/* Fallthrough */</comment>

    <case pos:start="143:5" pos:end="143:17">case <expr pos:start="143:10" pos:end="143:16"><name pos:start="143:10" pos:end="143:16">MFI_IQP</name></expr>:</case>

        <if_stmt pos:start="145:9" pos:end="153:9"><if pos:start="145:9" pos:end="153:9">if <condition pos:start="145:12" pos:end="145:28">(<expr pos:start="145:13" pos:end="145:27"><name pos:start="145:13" pos:end="145:16">addr</name> <operator pos:start="145:18" pos:end="145:19">==</operator> <name pos:start="145:21" pos:end="145:27">MFI_IQP</name></expr>)</condition> <block pos:start="145:30" pos:end="153:9">{<block_content pos:start="147:13" pos:end="151:28">

            <expr_stmt pos:start="147:13" pos:end="147:54"><expr pos:start="147:13" pos:end="147:53"><call pos:start="147:13" pos:end="147:53"><name pos:start="147:13" pos:end="147:37">trace_megasas_mmio_writel</name><argument_list pos:start="147:38" pos:end="147:53">(<argument pos:start="147:39" pos:end="147:47"><expr pos:start="147:39" pos:end="147:47"><literal type="string" pos:start="147:39" pos:end="147:47">"MFI_IQP"</literal></expr></argument>, <argument pos:start="147:50" pos:end="147:52"><expr pos:start="147:50" pos:end="147:52"><name pos:start="147:50" pos:end="147:52">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="149:13" pos:end="149:51">/* Received 64 bit MFI frame address */</comment>

            <expr_stmt pos:start="151:13" pos:end="151:28"><expr pos:start="151:13" pos:end="151:27"><name pos:start="151:13" pos:end="151:23"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:23">frame_hi</name></name> <operator pos:start="151:25" pos:end="151:25">=</operator> <literal type="number" pos:start="151:27" pos:end="151:27">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:35"><expr pos:start="155:9" pos:end="155:34"><name pos:start="155:9" pos:end="155:18">frame_addr</name> <operator pos:start="155:20" pos:end="155:20">=</operator> <operator pos:start="155:22" pos:end="155:22">(</operator><name pos:start="155:23" pos:end="155:25">val</name> <operator pos:start="155:27" pos:end="155:27">&amp;</operator> <operator pos:start="155:29" pos:end="155:29">~</operator><literal type="number" pos:start="155:30" pos:end="155:33">0x1F</literal><operator pos:start="155:34" pos:end="155:34">)</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="157:9" pos:end="157:40">/* Add possible 64 bit offset */</comment>

        <expr_stmt pos:start="159:9" pos:end="159:52"><expr pos:start="159:9" pos:end="159:51"><name pos:start="159:9" pos:end="159:18">frame_addr</name> <operator pos:start="159:20" pos:end="159:21">|=</operator> <operator pos:start="159:23" pos:end="159:23">(</operator><operator pos:start="159:24" pos:end="159:24">(</operator><name pos:start="159:25" pos:end="159:32">uint64_t</name><operator pos:start="159:33" pos:end="159:33">)</operator><name pos:start="159:34" pos:end="159:44"><name pos:start="159:34" pos:end="159:34">s</name><operator pos:start="159:35" pos:end="159:36">-&gt;</operator><name pos:start="159:37" pos:end="159:44">frame_hi</name></name> <operator pos:start="159:46" pos:end="159:47">&lt;&lt;</operator> <literal type="number" pos:start="159:49" pos:end="159:50">32</literal><operator pos:start="159:51" pos:end="159:51">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:24"><expr pos:start="161:9" pos:end="161:23"><name pos:start="161:9" pos:end="161:19"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:19">frame_hi</name></name> <operator pos:start="161:21" pos:end="161:21">=</operator> <literal type="number" pos:start="161:23" pos:end="161:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:39"><expr pos:start="163:9" pos:end="163:38"><name pos:start="163:9" pos:end="163:19">frame_count</name> <operator pos:start="163:21" pos:end="163:21">=</operator> <operator pos:start="163:23" pos:end="163:23">(</operator><name pos:start="163:24" pos:end="163:26">val</name> <operator pos:start="163:28" pos:end="163:29">&gt;&gt;</operator> <literal type="number" pos:start="163:31" pos:end="163:31">1</literal><operator pos:start="163:32" pos:end="163:32">)</operator> <operator pos:start="163:34" pos:end="163:34">&amp;</operator> <literal type="number" pos:start="163:36" pos:end="163:38">0xF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:57"><expr pos:start="165:9" pos:end="165:56"><call pos:start="165:9" pos:end="165:56"><name pos:start="165:9" pos:end="165:28">megasas_handle_frame</name><argument_list pos:start="165:29" pos:end="165:56">(<argument pos:start="165:30" pos:end="165:30"><expr pos:start="165:30" pos:end="165:30"><name pos:start="165:30" pos:end="165:30">s</name></expr></argument>, <argument pos:start="165:33" pos:end="165:42"><expr pos:start="165:33" pos:end="165:42"><name pos:start="165:33" pos:end="165:42">frame_addr</name></expr></argument>, <argument pos:start="165:45" pos:end="165:55"><expr pos:start="165:45" pos:end="165:55"><name pos:start="165:45" pos:end="165:55">frame_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="167:9" pos:end="167:14">break;</break>

    <case pos:start="169:5" pos:end="169:17">case <expr pos:start="169:10" pos:end="169:16"><name pos:start="169:10" pos:end="169:16">MFI_SEQ</name></expr>:</case>

        <expr_stmt pos:start="171:9" pos:end="171:50"><expr pos:start="171:9" pos:end="171:49"><call pos:start="171:9" pos:end="171:49"><name pos:start="171:9" pos:end="171:33">trace_megasas_mmio_writel</name><argument_list pos:start="171:34" pos:end="171:49">(<argument pos:start="171:35" pos:end="171:43"><expr pos:start="171:35" pos:end="171:43"><literal type="string" pos:start="171:35" pos:end="171:43">"MFI_SEQ"</literal></expr></argument>, <argument pos:start="171:46" pos:end="171:48"><expr pos:start="171:46" pos:end="171:48"><name pos:start="171:46" pos:end="171:48">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="173:9" pos:end="173:47">/* Magic sequence to start ADP reset */</comment>

        <if_stmt pos:start="175:9" pos:end="185:9"><if pos:start="175:9" pos:end="179:9">if <condition pos:start="175:12" pos:end="175:47">(<expr pos:start="175:13" pos:end="175:46"><name pos:start="175:13" pos:end="175:39"><name pos:start="175:13" pos:end="175:25">adp_reset_seq</name><index pos:start="175:26" pos:end="175:39">[<expr pos:start="175:27" pos:end="175:38"><name pos:start="175:27" pos:end="175:38"><name pos:start="175:27" pos:end="175:27">s</name><operator pos:start="175:28" pos:end="175:29">-&gt;</operator><name pos:start="175:30" pos:end="175:38">adp_reset</name></name></expr>]</index></name> <operator pos:start="175:41" pos:end="175:42">==</operator> <name pos:start="175:44" pos:end="175:46">val</name></expr>)</condition> <block pos:start="175:49" pos:end="179:9">{<block_content pos:start="177:13" pos:end="177:27">

            <expr_stmt pos:start="177:13" pos:end="177:27"><expr pos:start="177:13" pos:end="177:26"><name pos:start="177:13" pos:end="177:24"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:24">adp_reset</name></name><operator pos:start="177:25" pos:end="177:26">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="179:11" pos:end="185:9">else <block pos:start="179:16" pos:end="185:9">{<block_content pos:start="181:13" pos:end="183:24">

            <expr_stmt pos:start="181:13" pos:end="181:29"><expr pos:start="181:13" pos:end="181:28"><name pos:start="181:13" pos:end="181:24"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:24">adp_reset</name></name> <operator pos:start="181:26" pos:end="181:26">=</operator> <literal type="number" pos:start="181:28" pos:end="181:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:24"><expr pos:start="183:13" pos:end="183:23"><name pos:start="183:13" pos:end="183:19"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:19">diag</name></name> <operator pos:start="183:21" pos:end="183:21">=</operator> <literal type="number" pos:start="183:23" pos:end="183:23">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="187:9" pos:end="191:9"><if pos:start="187:9" pos:end="191:9">if <condition pos:start="187:12" pos:end="187:30">(<expr pos:start="187:13" pos:end="187:29"><name pos:start="187:13" pos:end="187:24"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:24">adp_reset</name></name> <operator pos:start="187:26" pos:end="187:27">==</operator> <literal type="number" pos:start="187:29" pos:end="187:29">6</literal></expr>)</condition> <block pos:start="187:32" pos:end="191:9">{<block_content pos:start="189:13" pos:end="189:44">

            <expr_stmt pos:start="189:13" pos:end="189:44"><expr pos:start="189:13" pos:end="189:43"><name pos:start="189:13" pos:end="189:19"><name pos:start="189:13" pos:end="189:13">s</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:19">diag</name></name> <operator pos:start="189:21" pos:end="189:21">=</operator> <name pos:start="189:23" pos:end="189:43">MFI_DIAG_WRITE_ENABLE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    <case pos:start="195:5" pos:end="195:18">case <expr pos:start="195:10" pos:end="195:17"><name pos:start="195:10" pos:end="195:17">MFI_DIAG</name></expr>:</case>

        <expr_stmt pos:start="197:9" pos:end="197:51"><expr pos:start="197:9" pos:end="197:50"><call pos:start="197:9" pos:end="197:50"><name pos:start="197:9" pos:end="197:33">trace_megasas_mmio_writel</name><argument_list pos:start="197:34" pos:end="197:50">(<argument pos:start="197:35" pos:end="197:44"><expr pos:start="197:35" pos:end="197:44"><literal type="string" pos:start="197:35" pos:end="197:44">"MFI_DIAG"</literal></expr></argument>, <argument pos:start="197:47" pos:end="197:49"><expr pos:start="197:47" pos:end="197:49"><name pos:start="197:47" pos:end="197:49">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="199:9" pos:end="199:23">/* ADP reset */</comment>

        <if_stmt pos:start="201:9" pos:end="213:9"><if pos:start="201:9" pos:end="213:9">if <condition pos:start="201:12" pos:end="203:39">(<expr pos:start="201:13" pos:end="203:38"><operator pos:start="201:13" pos:end="201:13">(</operator><name pos:start="201:14" pos:end="201:20"><name pos:start="201:14" pos:end="201:14">s</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:20">diag</name></name> <operator pos:start="201:22" pos:end="201:22">&amp;</operator> <name pos:start="201:24" pos:end="201:44">MFI_DIAG_WRITE_ENABLE</name><operator pos:start="201:45" pos:end="201:45">)</operator> <operator pos:start="201:47" pos:end="201:48">&amp;&amp;</operator>

            <operator pos:start="203:13" pos:end="203:13">(</operator><name pos:start="203:14" pos:end="203:16">val</name> <operator pos:start="203:18" pos:end="203:18">&amp;</operator> <name pos:start="203:20" pos:end="203:37">MFI_DIAG_RESET_ADP</name><operator pos:start="203:38" pos:end="203:38">)</operator></expr>)</condition> <block pos:start="203:41" pos:end="213:9">{<block_content pos:start="205:13" pos:end="211:24">

            <expr_stmt pos:start="205:13" pos:end="205:42"><expr pos:start="205:13" pos:end="205:41"><name pos:start="205:13" pos:end="205:19"><name pos:start="205:13" pos:end="205:13">s</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:19">diag</name></name> <operator pos:start="205:21" pos:end="205:22">|=</operator> <name pos:start="205:24" pos:end="205:41">MFI_DIAG_RESET_ADP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:34"><expr pos:start="207:13" pos:end="207:33"><call pos:start="207:13" pos:end="207:33"><name pos:start="207:13" pos:end="207:30">megasas_soft_reset</name><argument_list pos:start="207:31" pos:end="207:33">(<argument pos:start="207:32" pos:end="207:32"><expr pos:start="207:32" pos:end="207:32"><name pos:start="207:32" pos:end="207:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:29"><expr pos:start="209:13" pos:end="209:28"><name pos:start="209:13" pos:end="209:24"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:24">adp_reset</name></name> <operator pos:start="209:26" pos:end="209:26">=</operator> <literal type="number" pos:start="209:28" pos:end="209:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:24"><expr pos:start="211:13" pos:end="211:23"><name pos:start="211:13" pos:end="211:19"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:19">diag</name></name> <operator pos:start="211:21" pos:end="211:21">=</operator> <literal type="number" pos:start="211:23" pos:end="211:23">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <default pos:start="217:5" pos:end="217:12">default:</default>

        <expr_stmt pos:start="219:9" pos:end="219:53"><expr pos:start="219:9" pos:end="219:52"><call pos:start="219:9" pos:end="219:52"><name pos:start="219:9" pos:end="219:41">trace_megasas_mmio_invalid_writel</name><argument_list pos:start="219:42" pos:end="219:52">(<argument pos:start="219:43" pos:end="219:46"><expr pos:start="219:43" pos:end="219:46"><name pos:start="219:43" pos:end="219:46">addr</name></expr></argument>, <argument pos:start="219:49" pos:end="219:51"><expr pos:start="219:49" pos:end="219:51"><name pos:start="219:49" pos:end="219:51">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="221:9" pos:end="221:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
