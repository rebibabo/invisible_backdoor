<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2169.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">qemu_ram_foreach_block</name><parameter_list pos:start="1:28" pos:end="1:64">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:44">RAMBlockIterFunc</name></type> <name pos:start="1:46" pos:end="1:49">func</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:63">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:22">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">RAMBlock</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:19">block</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:20"><expr pos:start="9:5" pos:end="9:19"><call pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">rcu_read_lock</name><argument_list pos:start="9:18" pos:end="9:19">()</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="11:5" pos:end="11:52"><name pos:start="11:5" pos:end="11:21">QLIST_FOREACH_RCU</name><argument_list pos:start="11:22" pos:end="11:52">(<argument pos:start="11:23" pos:end="11:27">block</argument>, <argument pos:start="11:30" pos:end="11:45">&amp;ram_list.blocks</argument>, <argument pos:start="11:48" pos:end="11:51">next</argument>)</argument_list></macro> <block pos:start="11:54" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:69">

        <expr_stmt pos:start="13:9" pos:end="13:69"><expr pos:start="13:9" pos:end="13:68"><call pos:start="13:9" pos:end="13:68"><name pos:start="13:9" pos:end="13:12">func</name><argument_list pos:start="13:13" pos:end="13:68">(<argument pos:start="13:14" pos:end="13:24"><expr pos:start="13:14" pos:end="13:24"><name pos:start="13:14" pos:end="13:24"><name pos:start="13:14" pos:end="13:18">block</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:24">host</name></name></expr></argument>, <argument pos:start="13:27" pos:end="13:39"><expr pos:start="13:27" pos:end="13:39"><name pos:start="13:27" pos:end="13:39"><name pos:start="13:27" pos:end="13:31">block</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:39">offset</name></name></expr></argument>, <argument pos:start="13:42" pos:end="13:59"><expr pos:start="13:42" pos:end="13:59"><name pos:start="13:42" pos:end="13:59"><name pos:start="13:42" pos:end="13:46">block</name><operator pos:start="13:47" pos:end="13:48">-&gt;</operator><name pos:start="13:49" pos:end="13:59">used_length</name></name></expr></argument>, <argument pos:start="13:62" pos:end="13:67"><expr pos:start="13:62" pos:end="13:67"><name pos:start="13:62" pos:end="13:67">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><call pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:19">rcu_read_unlock</name><argument_list pos:start="17:20" pos:end="17:21">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
