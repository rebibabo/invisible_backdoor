<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15164.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">init_proc_970FX</name> <parameter_list pos:start="1:29" pos:end="1:46">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">CPUPPCState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:31">

    <expr_stmt pos:start="5:5" pos:end="5:24"><expr pos:start="5:5" pos:end="5:23"><call pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:18">gen_spr_ne_601</name><argument_list pos:start="5:19" pos:end="5:23">(<argument pos:start="5:20" pos:end="5:22"><expr pos:start="5:20" pos:end="5:22"><name pos:start="5:20" pos:end="5:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:21"><expr pos:start="7:5" pos:end="7:20"><call pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:15">gen_spr_7xx</name><argument_list pos:start="7:16" pos:end="7:20">(<argument pos:start="7:17" pos:end="7:19"><expr pos:start="7:17" pos:end="7:19"><name pos:start="7:17" pos:end="7:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:19">/* Time base */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><call pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:11">gen_tbl</name><argument_list pos:start="11:12" pos:end="11:16">(<argument pos:start="11:13" pos:end="11:15"><expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:43">/* Hardware implementation registers */</comment>

    <comment type="block" pos:start="15:5" pos:end="15:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="17:5" pos:end="23:29"><expr pos:start="17:5" pos:end="23:28"><call pos:start="17:5" pos:end="23:28"><name pos:start="17:5" pos:end="17:16">spr_register</name><argument_list pos:start="17:17" pos:end="23:28">(<argument pos:start="17:18" pos:end="17:20"><expr pos:start="17:18" pos:end="17:20"><name pos:start="17:18" pos:end="17:20">env</name></expr></argument>, <argument pos:start="17:23" pos:end="17:30"><expr pos:start="17:23" pos:end="17:30"><name pos:start="17:23" pos:end="17:30">SPR_HID0</name></expr></argument>, <argument pos:start="17:33" pos:end="17:38"><expr pos:start="17:33" pos:end="17:38"><literal type="string" pos:start="17:33" pos:end="17:38">"HID0"</literal></expr></argument>,

                 <argument pos:start="19:18" pos:end="19:29"><expr pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="19:32" pos:end="19:43"><expr pos:start="19:32" pos:end="19:43"><name pos:start="19:32" pos:end="19:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="21:18" pos:end="21:34"><expr pos:start="21:18" pos:end="21:34"><operator pos:start="21:18" pos:end="21:18">&amp;</operator><name pos:start="21:19" pos:end="21:34">spr_read_generic</name></expr></argument>, <argument pos:start="21:37" pos:end="21:52"><expr pos:start="21:37" pos:end="21:52"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:52">spr_write_clear</name></expr></argument>,

                 <argument pos:start="23:18" pos:end="23:27"><expr pos:start="23:18" pos:end="23:27"><literal type="number" pos:start="23:18" pos:end="23:27">0x60000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="25:5" pos:end="25:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="27:5" pos:end="33:29"><expr pos:start="27:5" pos:end="33:28"><call pos:start="27:5" pos:end="33:28"><name pos:start="27:5" pos:end="27:16">spr_register</name><argument_list pos:start="27:17" pos:end="33:28">(<argument pos:start="27:18" pos:end="27:20"><expr pos:start="27:18" pos:end="27:20"><name pos:start="27:18" pos:end="27:20">env</name></expr></argument>, <argument pos:start="27:23" pos:end="27:30"><expr pos:start="27:23" pos:end="27:30"><name pos:start="27:23" pos:end="27:30">SPR_HID1</name></expr></argument>, <argument pos:start="27:33" pos:end="27:38"><expr pos:start="27:33" pos:end="27:38"><literal type="string" pos:start="27:33" pos:end="27:38">"HID1"</literal></expr></argument>,

                 <argument pos:start="29:18" pos:end="29:29"><expr pos:start="29:18" pos:end="29:29"><name pos:start="29:18" pos:end="29:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="29:32" pos:end="29:43"><expr pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="31:18" pos:end="31:34"><expr pos:start="31:18" pos:end="31:34"><operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:34">spr_read_generic</name></expr></argument>, <argument pos:start="31:37" pos:end="31:54"><expr pos:start="31:37" pos:end="31:54"><operator pos:start="31:37" pos:end="31:37">&amp;</operator><name pos:start="31:38" pos:end="31:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="33:18" pos:end="33:27"><expr pos:start="33:18" pos:end="33:27"><literal type="number" pos:start="33:18" pos:end="33:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="35:5" pos:end="35:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="37:5" pos:end="43:39"><expr pos:start="37:5" pos:end="43:38"><call pos:start="37:5" pos:end="43:38"><name pos:start="37:5" pos:end="37:16">spr_register</name><argument_list pos:start="37:17" pos:end="43:38">(<argument pos:start="37:18" pos:end="37:20"><expr pos:start="37:18" pos:end="37:20"><name pos:start="37:18" pos:end="37:20">env</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">SPR_970_HID5</name></expr></argument>, <argument pos:start="37:37" pos:end="37:42"><expr pos:start="37:37" pos:end="37:42"><literal type="string" pos:start="37:37" pos:end="37:42">"HID5"</literal></expr></argument>,

                 <argument pos:start="39:18" pos:end="39:29"><expr pos:start="39:18" pos:end="39:29"><name pos:start="39:18" pos:end="39:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="39:32" pos:end="39:43"><expr pos:start="39:32" pos:end="39:43"><name pos:start="39:32" pos:end="39:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="41:18" pos:end="41:34"><expr pos:start="41:18" pos:end="41:34"><operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:34">spr_read_generic</name></expr></argument>, <argument pos:start="41:37" pos:end="41:54"><expr pos:start="41:37" pos:end="41:54"><operator pos:start="41:37" pos:end="41:37">&amp;</operator><name pos:start="41:38" pos:end="41:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="43:18" pos:end="43:37"><expr pos:start="43:18" pos:end="43:37"><name pos:start="43:18" pos:end="43:37">POWERPC970_HID5_INIT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="45:5" pos:end="45:27">/* Memory management */</comment>

    <comment type="block" pos:start="47:5" pos:end="47:26">/* XXX: not correct */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:22"><expr pos:start="49:5" pos:end="49:21"><call pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:16">gen_low_BATs</name><argument_list pos:start="49:17" pos:end="49:21">(<argument pos:start="49:18" pos:end="49:20"><expr pos:start="49:18" pos:end="49:20"><name pos:start="49:18" pos:end="49:20">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="57:29"><expr pos:start="51:5" pos:end="57:28"><call pos:start="51:5" pos:end="57:28"><name pos:start="51:5" pos:end="51:16">spr_register</name><argument_list pos:start="51:17" pos:end="57:28">(<argument pos:start="51:18" pos:end="51:20"><expr pos:start="51:18" pos:end="51:20"><name pos:start="51:18" pos:end="51:20">env</name></expr></argument>, <argument pos:start="51:23" pos:end="51:30"><expr pos:start="51:23" pos:end="51:30"><name pos:start="51:23" pos:end="51:30">SPR_HIOR</name></expr></argument>, <argument pos:start="51:33" pos:end="51:42"><expr pos:start="51:33" pos:end="51:42"><literal type="string" pos:start="51:33" pos:end="51:42">"SPR_HIOR"</literal></expr></argument>,

                 <argument pos:start="53:18" pos:end="53:29"><expr pos:start="53:18" pos:end="53:29"><name pos:start="53:18" pos:end="53:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="53:32" pos:end="53:43"><expr pos:start="53:32" pos:end="53:43"><name pos:start="53:32" pos:end="53:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="55:18" pos:end="55:31"><expr pos:start="55:18" pos:end="55:31"><operator pos:start="55:18" pos:end="55:18">&amp;</operator><name pos:start="55:19" pos:end="55:31">spr_read_hior</name></expr></argument>, <argument pos:start="55:34" pos:end="55:48"><expr pos:start="55:34" pos:end="55:48"><operator pos:start="55:34" pos:end="55:34">&amp;</operator><name pos:start="55:35" pos:end="55:48">spr_write_hior</name></expr></argument>,

                 <argument pos:start="57:18" pos:end="57:27"><expr pos:start="57:18" pos:end="57:27"><literal type="number" pos:start="57:18" pos:end="57:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="65:29"><expr pos:start="59:5" pos:end="65:28"><call pos:start="59:5" pos:end="65:28"><name pos:start="59:5" pos:end="59:16">spr_register</name><argument_list pos:start="59:17" pos:end="65:28">(<argument pos:start="59:18" pos:end="59:20"><expr pos:start="59:18" pos:end="59:20"><name pos:start="59:18" pos:end="59:20">env</name></expr></argument>, <argument pos:start="59:23" pos:end="59:30"><expr pos:start="59:23" pos:end="59:30"><name pos:start="59:23" pos:end="59:30">SPR_CTRL</name></expr></argument>, <argument pos:start="59:33" pos:end="59:42"><expr pos:start="59:33" pos:end="59:42"><literal type="string" pos:start="59:33" pos:end="59:42">"SPR_CTRL"</literal></expr></argument>,

                 <argument pos:start="61:18" pos:end="61:29"><expr pos:start="61:18" pos:end="61:29"><name pos:start="61:18" pos:end="61:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="61:32" pos:end="61:43"><expr pos:start="61:32" pos:end="61:43"><name pos:start="61:32" pos:end="61:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="63:18" pos:end="63:29"><expr pos:start="63:18" pos:end="63:29"><name pos:start="63:18" pos:end="63:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="63:32" pos:end="63:49"><expr pos:start="63:32" pos:end="63:49"><operator pos:start="63:32" pos:end="63:32">&amp;</operator><name pos:start="63:33" pos:end="63:49">spr_write_generic</name></expr></argument>,

                 <argument pos:start="65:18" pos:end="65:27"><expr pos:start="65:18" pos:end="65:27"><literal type="number" pos:start="65:18" pos:end="65:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="73:29"><expr pos:start="67:5" pos:end="73:28"><call pos:start="67:5" pos:end="73:28"><name pos:start="67:5" pos:end="67:16">spr_register</name><argument_list pos:start="67:17" pos:end="73:28">(<argument pos:start="67:18" pos:end="67:20"><expr pos:start="67:18" pos:end="67:20"><name pos:start="67:18" pos:end="67:20">env</name></expr></argument>, <argument pos:start="67:23" pos:end="67:31"><expr pos:start="67:23" pos:end="67:31"><name pos:start="67:23" pos:end="67:31">SPR_UCTRL</name></expr></argument>, <argument pos:start="67:34" pos:end="67:44"><expr pos:start="67:34" pos:end="67:44"><literal type="string" pos:start="67:34" pos:end="67:44">"SPR_UCTRL"</literal></expr></argument>,

                 <argument pos:start="69:18" pos:end="69:29"><expr pos:start="69:18" pos:end="69:29"><name pos:start="69:18" pos:end="69:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="69:32" pos:end="69:43"><expr pos:start="69:32" pos:end="69:43"><name pos:start="69:32" pos:end="69:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="71:18" pos:end="71:34"><expr pos:start="71:18" pos:end="71:34"><operator pos:start="71:18" pos:end="71:18">&amp;</operator><name pos:start="71:19" pos:end="71:34">spr_read_generic</name></expr></argument>, <argument pos:start="71:37" pos:end="71:48"><expr pos:start="71:37" pos:end="71:48"><name pos:start="71:37" pos:end="71:48">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="73:18" pos:end="73:27"><expr pos:start="73:18" pos:end="73:27"><literal type="number" pos:start="73:18" pos:end="73:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="84:0"><expr pos:start="75:5" pos:end="81:28"><call pos:start="75:5" pos:end="81:28"><name pos:start="75:5" pos:end="75:16">spr_register</name><argument_list pos:start="75:17" pos:end="81:28">(<argument pos:start="75:18" pos:end="75:20"><expr pos:start="75:18" pos:end="75:20"><name pos:start="75:18" pos:end="75:20">env</name></expr></argument>, <argument pos:start="75:23" pos:end="75:32"><expr pos:start="75:23" pos:end="75:32"><name pos:start="75:23" pos:end="75:32">SPR_VRSAVE</name></expr></argument>, <argument pos:start="75:35" pos:end="75:46"><expr pos:start="75:35" pos:end="75:46"><literal type="string" pos:start="75:35" pos:end="75:46">"SPR_VRSAVE"</literal></expr></argument>,

                 <argument pos:start="77:18" pos:end="77:34"><expr pos:start="77:18" pos:end="77:34"><operator pos:start="77:18" pos:end="77:18">&amp;</operator><name pos:start="77:19" pos:end="77:34">spr_read_generic</name></expr></argument>, <argument pos:start="77:37" pos:end="77:54"><expr pos:start="77:37" pos:end="77:54"><operator pos:start="77:37" pos:end="77:37">&amp;</operator><name pos:start="77:38" pos:end="77:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="79:18" pos:end="79:34"><expr pos:start="79:18" pos:end="79:34"><operator pos:start="79:18" pos:end="79:18">&amp;</operator><name pos:start="79:19" pos:end="79:34">spr_read_generic</name></expr></argument>, <argument pos:start="79:37" pos:end="79:54"><expr pos:start="79:37" pos:end="79:54"><operator pos:start="79:37" pos:end="79:37">&amp;</operator><name pos:start="79:38" pos:end="79:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="81:18" pos:end="81:27"><expr pos:start="81:18" pos:end="81:27"><literal type="number" pos:start="81:18" pos:end="81:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="83:1" pos:end="83:30">#<cpp:directive pos:start="83:2" pos:end="83:3">if</cpp:directive> <expr pos:start="83:5" pos:end="83:30"><operator pos:start="83:5" pos:end="83:5">!</operator><call pos:start="83:6" pos:end="83:30"><name pos:start="83:6" pos:end="83:12">defined</name><argument_list pos:start="83:13" pos:end="83:30">(<argument pos:start="83:14" pos:end="83:29"><expr pos:start="83:14" pos:end="83:29"><name pos:start="83:14" pos:end="83:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="85:5" pos:end="88:0"><expr pos:start="85:5" pos:end="85:20"><name pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:7">env</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:15">slb_nr</name></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <literal type="number" pos:start="85:19" pos:end="85:20">64</literal></expr>;</expr_stmt>

<cpp:endif pos:start="87:1" pos:end="87:6">#<cpp:directive pos:start="87:2" pos:end="87:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="89:5" pos:end="89:23"><expr pos:start="89:5" pos:end="89:22"><call pos:start="89:5" pos:end="89:22"><name pos:start="89:5" pos:end="89:17">init_excp_970</name><argument_list pos:start="89:18" pos:end="89:22">(<argument pos:start="89:19" pos:end="89:21"><expr pos:start="89:19" pos:end="89:21"><name pos:start="89:19" pos:end="89:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:32"><expr pos:start="91:5" pos:end="91:31"><name pos:start="91:5" pos:end="91:25"><name pos:start="91:5" pos:end="91:7">env</name><operator pos:start="91:8" pos:end="91:9">-&gt;</operator><name pos:start="91:10" pos:end="91:25">dcache_line_size</name></name> <operator pos:start="91:27" pos:end="91:27">=</operator> <literal type="number" pos:start="91:29" pos:end="91:31">128</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:32"><expr pos:start="93:5" pos:end="93:31"><name pos:start="93:5" pos:end="93:25"><name pos:start="93:5" pos:end="93:7">env</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:25">icache_line_size</name></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <literal type="number" pos:start="93:29" pos:end="93:31">128</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="95:5" pos:end="95:42">/* Allocate hardware IRQ controller */</comment>

    <expr_stmt pos:start="97:5" pos:end="97:25"><expr pos:start="97:5" pos:end="97:24"><call pos:start="97:5" pos:end="97:24"><name pos:start="97:5" pos:end="97:19">ppc970_irq_init</name><argument_list pos:start="97:20" pos:end="97:24">(<argument pos:start="97:21" pos:end="97:23"><expr pos:start="97:21" pos:end="97:23"><name pos:start="97:21" pos:end="97:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="99:5" pos:end="101:51">/* Can't find information on what this should be on reset.  This

     * value is the one used by 74xx processors. */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:31"><expr pos:start="103:5" pos:end="103:30"><call pos:start="103:5" pos:end="103:30"><name pos:start="103:5" pos:end="103:13">vscr_init</name><argument_list pos:start="103:14" pos:end="103:30">(<argument pos:start="103:15" pos:end="103:17"><expr pos:start="103:15" pos:end="103:17"><name pos:start="103:15" pos:end="103:17">env</name></expr></argument>, <argument pos:start="103:20" pos:end="103:29"><expr pos:start="103:20" pos:end="103:29"><literal type="number" pos:start="103:20" pos:end="103:29">0x00010000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
