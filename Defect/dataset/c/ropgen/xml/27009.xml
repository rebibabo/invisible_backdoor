<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27009.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">mmu6xx_dump_mmu</name><parameter_list pos:start="1:28" pos:end="3:45">(<parameter pos:start="1:29" pos:end="1:35"><decl pos:start="1:29" pos:end="1:35"><type pos:start="1:29" pos:end="1:35"><name pos:start="1:29" pos:end="1:32">FILE</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">f</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:65"><decl pos:start="1:38" pos:end="1:65"><type pos:start="1:38" pos:end="1:65"><name pos:start="1:38" pos:end="1:53">fprintf_function</name></type> <name pos:start="1:55" pos:end="1:65">cpu_fprintf</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:44"><decl pos:start="3:29" pos:end="3:44"><type pos:start="3:29" pos:end="3:44"><name pos:start="3:29" pos:end="3:39">CPUPPCState</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">env</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:5" pos:end="107:5">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ppc6xx_tlb_t</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">tlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:19">sr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">type</name></decl>, <decl pos:start="11:15" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:17">way</name></decl>, <decl pos:start="11:20" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:24">entry</name></decl>, <decl pos:start="11:27" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:27" pos:end="11:27">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:69"><expr pos:start="15:5" pos:end="15:68"><call pos:start="15:5" pos:end="15:68"><name pos:start="15:5" pos:end="15:15">cpu_fprintf</name><argument_list pos:start="15:16" pos:end="15:68">(<argument pos:start="15:17" pos:end="15:17"><expr pos:start="15:17" pos:end="15:17"><name pos:start="15:17" pos:end="15:17">f</name></expr></argument>, <argument pos:start="15:20" pos:end="15:51"><expr pos:start="15:20" pos:end="15:51"><literal type="string" pos:start="15:20" pos:end="15:36">"HTAB base = 0x%"</literal><name pos:start="15:37" pos:end="15:47">HWADDR_PRIx</name><literal type="string" pos:start="15:48" pos:end="15:51">"\n"</literal></expr></argument>, <argument pos:start="15:54" pos:end="15:67"><expr pos:start="15:54" pos:end="15:67"><name pos:start="15:54" pos:end="15:67"><name pos:start="15:54" pos:end="15:56">env</name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:67">htab_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:69"><expr pos:start="17:5" pos:end="17:68"><call pos:start="17:5" pos:end="17:68"><name pos:start="17:5" pos:end="17:15">cpu_fprintf</name><argument_list pos:start="17:16" pos:end="17:68">(<argument pos:start="17:17" pos:end="17:17"><expr pos:start="17:17" pos:end="17:17"><name pos:start="17:17" pos:end="17:17">f</name></expr></argument>, <argument pos:start="17:20" pos:end="17:51"><expr pos:start="17:20" pos:end="17:51"><literal type="string" pos:start="17:20" pos:end="17:36">"HTAB mask = 0x%"</literal><name pos:start="17:37" pos:end="17:47">HWADDR_PRIx</name><literal type="string" pos:start="17:48" pos:end="17:51">"\n"</literal></expr></argument>, <argument pos:start="17:54" pos:end="17:67"><expr pos:start="17:54" pos:end="17:67"><name pos:start="17:54" pos:end="17:67"><name pos:start="17:54" pos:end="17:56">env</name><operator pos:start="17:57" pos:end="17:58">-&gt;</operator><name pos:start="17:59" pos:end="17:67">htab_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><call pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:15">cpu_fprintf</name><argument_list pos:start="21:16" pos:end="21:44">(<argument pos:start="21:17" pos:end="21:17"><expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">f</name></expr></argument>, <argument pos:start="21:20" pos:end="21:43"><expr pos:start="21:20" pos:end="21:43"><literal type="string" pos:start="21:20" pos:end="21:43">"\nSegment registers:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="51:5">for <control pos:start="23:9" pos:end="23:28">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:23"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <literal type="number" pos:start="23:21" pos:end="23:22">32</literal></expr>;</condition> <incr pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:25">i</name><operator pos:start="23:26" pos:end="23:27">++</operator></expr></incr>)</control> <block pos:start="23:30" pos:end="51:5">{<block_content pos:start="25:9" pos:end="49:9">

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:10">sr</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:23"><name pos:start="25:14" pos:end="25:16">env</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:20">sr</name><index pos:start="25:21" pos:end="25:23">[<expr pos:start="25:22" pos:end="25:22"><name pos:start="25:22" pos:end="25:22">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="49:9"><if pos:start="27:9" pos:end="39:9">if <condition pos:start="27:12" pos:end="27:28">(<expr pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:14">sr</name> <operator pos:start="27:16" pos:end="27:16">&amp;</operator> <literal type="number" pos:start="27:18" pos:end="27:27">0x80000000</literal></expr>)</condition> <block pos:start="27:30" pos:end="39:9">{<block_content pos:start="29:13" pos:end="37:50">

            <expr_stmt pos:start="29:13" pos:end="37:50"><expr pos:start="29:13" pos:end="37:49"><call pos:start="29:13" pos:end="37:49"><name pos:start="29:13" pos:end="29:23">cpu_fprintf</name><argument_list pos:start="29:24" pos:end="37:49">(<argument pos:start="29:25" pos:end="29:25"><expr pos:start="29:25" pos:end="29:25"><name pos:start="29:25" pos:end="29:25">f</name></expr></argument>, <argument pos:start="29:28" pos:end="31:45"><expr pos:start="29:28" pos:end="31:45"><literal type="string" pos:start="29:28" pos:end="29:63">"%02d T=%d Ks=%d Kp=%d BUID=0x%03x "</literal>

                        <literal type="string" pos:start="31:25" pos:end="31:45">"CNTLR_SPEC=0x%05x\n"</literal></expr></argument>, <argument pos:start="31:48" pos:end="31:48"><expr pos:start="31:48" pos:end="31:48"><name pos:start="31:48" pos:end="31:48">i</name></expr></argument>,

                        <argument pos:start="33:25" pos:end="33:47"><expr pos:start="33:25" pos:end="33:47"><ternary pos:start="33:25" pos:end="33:47"><condition pos:start="33:25" pos:end="33:41"><expr pos:start="33:25" pos:end="33:39"><name pos:start="33:25" pos:end="33:26">sr</name> <operator pos:start="33:28" pos:end="33:28">&amp;</operator> <literal type="number" pos:start="33:30" pos:end="33:39">0x80000000</literal></expr> ?</condition><then pos:start="33:43" pos:end="33:43"> <expr pos:start="33:43" pos:end="33:43"><literal type="number" pos:start="33:43" pos:end="33:43">1</literal></expr> </then><else pos:start="33:45" pos:end="33:47">: <expr pos:start="33:47" pos:end="33:47"><literal type="number" pos:start="33:47" pos:end="33:47">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="33:50" pos:end="33:72"><expr pos:start="33:50" pos:end="33:72"><ternary pos:start="33:50" pos:end="33:72"><condition pos:start="33:50" pos:end="33:66"><expr pos:start="33:50" pos:end="33:64"><name pos:start="33:50" pos:end="33:51">sr</name> <operator pos:start="33:53" pos:end="33:53">&amp;</operator> <literal type="number" pos:start="33:55" pos:end="33:64">0x40000000</literal></expr> ?</condition><then pos:start="33:68" pos:end="33:68"> <expr pos:start="33:68" pos:end="33:68"><literal type="number" pos:start="33:68" pos:end="33:68">1</literal></expr> </then><else pos:start="33:70" pos:end="33:72">: <expr pos:start="33:72" pos:end="33:72"><literal type="number" pos:start="33:72" pos:end="33:72">0</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="35:25" pos:end="35:47"><expr pos:start="35:25" pos:end="35:47"><ternary pos:start="35:25" pos:end="35:47"><condition pos:start="35:25" pos:end="35:41"><expr pos:start="35:25" pos:end="35:39"><name pos:start="35:25" pos:end="35:26">sr</name> <operator pos:start="35:28" pos:end="35:28">&amp;</operator> <literal type="number" pos:start="35:30" pos:end="35:39">0x20000000</literal></expr> ?</condition><then pos:start="35:43" pos:end="35:43"> <expr pos:start="35:43" pos:end="35:43"><literal type="number" pos:start="35:43" pos:end="35:43">1</literal></expr> </then><else pos:start="35:45" pos:end="35:47">: <expr pos:start="35:47" pos:end="35:47"><literal type="number" pos:start="35:47" pos:end="35:47">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="35:50" pos:end="35:79"><expr pos:start="35:50" pos:end="35:79"><operator pos:start="35:50" pos:end="35:50">(</operator><name pos:start="35:51" pos:end="35:58">uint32_t</name><operator pos:start="35:59" pos:end="35:59">)</operator><operator pos:start="35:60" pos:end="35:60">(</operator><operator pos:start="35:61" pos:end="35:61">(</operator><name pos:start="35:62" pos:end="35:63">sr</name> <operator pos:start="35:65" pos:end="35:66">&gt;&gt;</operator> <literal type="number" pos:start="35:68" pos:end="35:69">20</literal><operator pos:start="35:70" pos:end="35:70">)</operator> <operator pos:start="35:72" pos:end="35:72">&amp;</operator> <literal type="number" pos:start="35:74" pos:end="35:78">0x1FF</literal><operator pos:start="35:79" pos:end="35:79">)</operator></expr></argument>,

                        <argument pos:start="37:25" pos:end="37:48"><expr pos:start="37:25" pos:end="37:48"><operator pos:start="37:25" pos:end="37:25">(</operator><name pos:start="37:26" pos:end="37:33">uint32_t</name><operator pos:start="37:34" pos:end="37:34">)</operator><operator pos:start="37:35" pos:end="37:35">(</operator><name pos:start="37:36" pos:end="37:37">sr</name> <operator pos:start="37:39" pos:end="37:39">&amp;</operator> <literal type="number" pos:start="37:41" pos:end="37:47">0xFFFFF</literal><operator pos:start="37:48" pos:end="37:48">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="49:9">else <block pos:start="39:16" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:53">

            <expr_stmt pos:start="41:13" pos:end="47:53"><expr pos:start="41:13" pos:end="47:52"><call pos:start="41:13" pos:end="47:52"><name pos:start="41:13" pos:end="41:23">cpu_fprintf</name><argument_list pos:start="41:24" pos:end="47:52">(<argument pos:start="41:25" pos:end="41:25"><expr pos:start="41:25" pos:end="41:25"><name pos:start="41:25" pos:end="41:25">f</name></expr></argument>, <argument pos:start="41:28" pos:end="41:69"><expr pos:start="41:28" pos:end="41:69"><literal type="string" pos:start="41:28" pos:end="41:69">"%02d T=%d Ks=%d Kp=%d N=%d VSID=0x%06x\n"</literal></expr></argument>, <argument pos:start="41:72" pos:end="41:72"><expr pos:start="41:72" pos:end="41:72"><name pos:start="41:72" pos:end="41:72">i</name></expr></argument>,

                        <argument pos:start="43:25" pos:end="43:47"><expr pos:start="43:25" pos:end="43:47"><ternary pos:start="43:25" pos:end="43:47"><condition pos:start="43:25" pos:end="43:41"><expr pos:start="43:25" pos:end="43:39"><name pos:start="43:25" pos:end="43:26">sr</name> <operator pos:start="43:28" pos:end="43:28">&amp;</operator> <literal type="number" pos:start="43:30" pos:end="43:39">0x80000000</literal></expr> ?</condition><then pos:start="43:43" pos:end="43:43"> <expr pos:start="43:43" pos:end="43:43"><literal type="number" pos:start="43:43" pos:end="43:43">1</literal></expr> </then><else pos:start="43:45" pos:end="43:47">: <expr pos:start="43:47" pos:end="43:47"><literal type="number" pos:start="43:47" pos:end="43:47">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="43:50" pos:end="43:72"><expr pos:start="43:50" pos:end="43:72"><ternary pos:start="43:50" pos:end="43:72"><condition pos:start="43:50" pos:end="43:66"><expr pos:start="43:50" pos:end="43:64"><name pos:start="43:50" pos:end="43:51">sr</name> <operator pos:start="43:53" pos:end="43:53">&amp;</operator> <literal type="number" pos:start="43:55" pos:end="43:64">0x40000000</literal></expr> ?</condition><then pos:start="43:68" pos:end="43:68"> <expr pos:start="43:68" pos:end="43:68"><literal type="number" pos:start="43:68" pos:end="43:68">1</literal></expr> </then><else pos:start="43:70" pos:end="43:72">: <expr pos:start="43:72" pos:end="43:72"><literal type="number" pos:start="43:72" pos:end="43:72">0</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="45:25" pos:end="45:47"><expr pos:start="45:25" pos:end="45:47"><ternary pos:start="45:25" pos:end="45:47"><condition pos:start="45:25" pos:end="45:41"><expr pos:start="45:25" pos:end="45:39"><name pos:start="45:25" pos:end="45:26">sr</name> <operator pos:start="45:28" pos:end="45:28">&amp;</operator> <literal type="number" pos:start="45:30" pos:end="45:39">0x20000000</literal></expr> ?</condition><then pos:start="45:43" pos:end="45:43"> <expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">1</literal></expr> </then><else pos:start="45:45" pos:end="45:47">: <expr pos:start="45:47" pos:end="45:47"><literal type="number" pos:start="45:47" pos:end="45:47">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="45:50" pos:end="45:72"><expr pos:start="45:50" pos:end="45:72"><ternary pos:start="45:50" pos:end="45:72"><condition pos:start="45:50" pos:end="45:66"><expr pos:start="45:50" pos:end="45:64"><name pos:start="45:50" pos:end="45:51">sr</name> <operator pos:start="45:53" pos:end="45:53">&amp;</operator> <literal type="number" pos:start="45:55" pos:end="45:64">0x10000000</literal></expr> ?</condition><then pos:start="45:68" pos:end="45:68"> <expr pos:start="45:68" pos:end="45:68"><literal type="number" pos:start="45:68" pos:end="45:68">1</literal></expr> </then><else pos:start="45:70" pos:end="45:72">: <expr pos:start="45:72" pos:end="45:72"><literal type="number" pos:start="45:72" pos:end="45:72">0</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="47:25" pos:end="47:51"><expr pos:start="47:25" pos:end="47:51"><operator pos:start="47:25" pos:end="47:25">(</operator><name pos:start="47:26" pos:end="47:33">uint32_t</name><operator pos:start="47:34" pos:end="47:34">)</operator><operator pos:start="47:35" pos:end="47:35">(</operator><name pos:start="47:36" pos:end="47:37">sr</name> <operator pos:start="47:39" pos:end="47:39">&amp;</operator> <literal type="number" pos:start="47:41" pos:end="47:50">0x00FFFFFF</literal><operator pos:start="47:51" pos:end="47:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="55:5" pos:end="55:32"><expr pos:start="55:5" pos:end="55:31"><call pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:15">cpu_fprintf</name><argument_list pos:start="55:16" pos:end="55:31">(<argument pos:start="55:17" pos:end="55:17"><expr pos:start="55:17" pos:end="55:17"><name pos:start="55:17" pos:end="55:17">f</name></expr></argument>, <argument pos:start="55:20" pos:end="55:30"><expr pos:start="55:20" pos:end="55:30"><literal type="string" pos:start="55:20" pos:end="55:30">"\nBATs:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:54"><expr pos:start="57:5" pos:end="57:53"><call pos:start="57:5" pos:end="57:53"><name pos:start="57:5" pos:end="57:20">mmu6xx_dump_BATs</name><argument_list pos:start="57:21" pos:end="57:53">(<argument pos:start="57:22" pos:end="57:22"><expr pos:start="57:22" pos:end="57:22"><name pos:start="57:22" pos:end="57:22">f</name></expr></argument>, <argument pos:start="57:25" pos:end="57:35"><expr pos:start="57:25" pos:end="57:35"><name pos:start="57:25" pos:end="57:35">cpu_fprintf</name></expr></argument>, <argument pos:start="57:38" pos:end="57:40"><expr pos:start="57:38" pos:end="57:40"><name pos:start="57:38" pos:end="57:40">env</name></expr></argument>, <argument pos:start="57:43" pos:end="57:52"><expr pos:start="57:43" pos:end="57:52"><name pos:start="57:43" pos:end="57:52">ACCESS_INT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:55"><expr pos:start="59:5" pos:end="59:54"><call pos:start="59:5" pos:end="59:54"><name pos:start="59:5" pos:end="59:20">mmu6xx_dump_BATs</name><argument_list pos:start="59:21" pos:end="59:54">(<argument pos:start="59:22" pos:end="59:22"><expr pos:start="59:22" pos:end="59:22"><name pos:start="59:22" pos:end="59:22">f</name></expr></argument>, <argument pos:start="59:25" pos:end="59:35"><expr pos:start="59:25" pos:end="59:35"><name pos:start="59:25" pos:end="59:35">cpu_fprintf</name></expr></argument>, <argument pos:start="59:38" pos:end="59:40"><expr pos:start="59:38" pos:end="59:40"><name pos:start="59:38" pos:end="59:40">env</name></expr></argument>, <argument pos:start="59:43" pos:end="59:53"><expr pos:start="59:43" pos:end="59:53"><name pos:start="59:43" pos:end="59:53">ACCESS_CODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:26">(<expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:11">env</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:20">id_tlbs</name></name> <operator pos:start="63:22" pos:end="63:23">!=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>)</condition> <block pos:start="63:28" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:44">

        <expr_stmt pos:start="65:9" pos:end="67:44"><expr pos:start="65:9" pos:end="67:43"><call pos:start="65:9" pos:end="67:43"><name pos:start="65:9" pos:end="65:19">cpu_fprintf</name><argument_list pos:start="65:20" pos:end="67:43">(<argument pos:start="65:21" pos:end="65:21"><expr pos:start="65:21" pos:end="65:21"><name pos:start="65:21" pos:end="65:21">f</name></expr></argument>, <argument pos:start="65:24" pos:end="67:42"><expr pos:start="65:24" pos:end="67:42"><literal type="string" pos:start="65:24" pos:end="65:65">"ERROR: 6xx MMU should have separated TLB"</literal>

                    <literal type="string" pos:start="67:21" pos:end="67:42">" for code and data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:73"><expr pos:start="73:5" pos:end="73:72"><call pos:start="73:5" pos:end="73:72"><name pos:start="73:5" pos:end="73:15">cpu_fprintf</name><argument_list pos:start="73:16" pos:end="73:72">(<argument pos:start="73:17" pos:end="73:17"><expr pos:start="73:17" pos:end="73:17"><name pos:start="73:17" pos:end="73:17">f</name></expr></argument>, <argument pos:start="73:20" pos:end="73:71"><expr pos:start="73:20" pos:end="73:71"><literal type="string" pos:start="73:20" pos:end="73:71">"\nTLBs                       [EPN    EPN + SIZE]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="77:5" pos:end="107:5">for <control pos:start="77:9" pos:end="77:36">(<init pos:start="77:10" pos:end="77:18"><expr pos:start="77:10" pos:end="77:17"><name pos:start="77:10" pos:end="77:13">type</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <literal type="number" pos:start="77:17" pos:end="77:17">0</literal></expr>;</init> <condition pos:start="77:20" pos:end="77:28"><expr pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:23">type</name> <operator pos:start="77:25" pos:end="77:25">&lt;</operator> <literal type="number" pos:start="77:27" pos:end="77:27">2</literal></expr>;</condition> <incr pos:start="77:30" pos:end="77:35"><expr pos:start="77:30" pos:end="77:35"><name pos:start="77:30" pos:end="77:33">type</name><operator pos:start="77:34" pos:end="77:35">++</operator></expr></incr>)</control> <block pos:start="77:38" pos:end="107:5">{<block_content pos:start="79:9" pos:end="105:9">

        <for pos:start="79:9" pos:end="105:9">for <control pos:start="79:13" pos:end="79:48">(<init pos:start="79:14" pos:end="79:21"><expr pos:start="79:14" pos:end="79:20"><name pos:start="79:14" pos:end="79:16">way</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <literal type="number" pos:start="79:20" pos:end="79:20">0</literal></expr>;</init> <condition pos:start="79:23" pos:end="79:41"><expr pos:start="79:23" pos:end="79:40"><name pos:start="79:23" pos:end="79:25">way</name> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <name pos:start="79:29" pos:end="79:40"><name pos:start="79:29" pos:end="79:31">env</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:40">nb_ways</name></name></expr>;</condition> <incr pos:start="79:43" pos:end="79:47"><expr pos:start="79:43" pos:end="79:47"><name pos:start="79:43" pos:end="79:45">way</name><operator pos:start="79:46" pos:end="79:47">++</operator></expr></incr>)</control> <block pos:start="79:50" pos:end="105:9">{<block_content pos:start="81:13" pos:end="103:13">

            <for pos:start="81:13" pos:end="103:13">for <control pos:start="81:17" pos:end="85:25">(<init pos:start="81:18" pos:end="81:69"><expr pos:start="81:18" pos:end="81:68"><name pos:start="81:18" pos:end="81:22">entry</name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:36"><name pos:start="81:26" pos:end="81:28">env</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:36">nb_tlb</name></name> <operator pos:start="81:38" pos:end="81:38">*</operator> <name pos:start="81:40" pos:end="81:43">type</name> <operator pos:start="81:45" pos:end="81:45">+</operator> <name pos:start="81:47" pos:end="81:62"><name pos:start="81:47" pos:end="81:49">env</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:62">tlb_per_way</name></name> <operator pos:start="81:64" pos:end="81:64">*</operator> <name pos:start="81:66" pos:end="81:68">way</name></expr>;</init>

                 <condition pos:start="83:18" pos:end="83:77"><expr pos:start="83:18" pos:end="83:76"><name pos:start="83:18" pos:end="83:22">entry</name> <operator pos:start="83:24" pos:end="83:24">&lt;</operator> <operator pos:start="83:26" pos:end="83:26">(</operator><name pos:start="83:27" pos:end="83:37"><name pos:start="83:27" pos:end="83:29">env</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:37">nb_tlb</name></name> <operator pos:start="83:39" pos:end="83:39">*</operator> <name pos:start="83:41" pos:end="83:44">type</name> <operator pos:start="83:46" pos:end="83:46">+</operator> <name pos:start="83:48" pos:end="83:63"><name pos:start="83:48" pos:end="83:50">env</name><operator pos:start="83:51" pos:end="83:52">-&gt;</operator><name pos:start="83:53" pos:end="83:63">tlb_per_way</name></name> <operator pos:start="83:65" pos:end="83:65">*</operator> <operator pos:start="83:67" pos:end="83:67">(</operator><name pos:start="83:68" pos:end="83:70">way</name> <operator pos:start="83:72" pos:end="83:72">+</operator> <literal type="number" pos:start="83:74" pos:end="83:74">1</literal><operator pos:start="83:75" pos:end="83:75">)</operator><operator pos:start="83:76" pos:end="83:76">)</operator></expr>;</condition>

                 <incr pos:start="85:18" pos:end="85:24"><expr pos:start="85:18" pos:end="85:24"><name pos:start="85:18" pos:end="85:22">entry</name><operator pos:start="85:23" pos:end="85:24">++</operator></expr></incr>)</control> <block pos:start="85:27" pos:end="103:13">{<block_content pos:start="89:17" pos:end="101:67">



                <expr_stmt pos:start="89:17" pos:end="89:44"><expr pos:start="89:17" pos:end="89:43"><name pos:start="89:17" pos:end="89:19">tlb</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <operator pos:start="89:23" pos:end="89:23">&amp;</operator><name pos:start="89:24" pos:end="89:43"><name pos:start="89:24" pos:end="89:26">env</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:31">tlb</name><operator pos:start="89:32" pos:end="89:32">.</operator><name pos:start="89:33" pos:end="89:36">tlb6</name><index pos:start="89:37" pos:end="89:43">[<expr pos:start="89:38" pos:end="89:42"><name pos:start="89:38" pos:end="89:42">entry</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="101:67"><expr pos:start="91:17" pos:end="101:66"><call pos:start="91:17" pos:end="101:66"><name pos:start="91:17" pos:end="91:27">cpu_fprintf</name><argument_list pos:start="91:28" pos:end="101:66">(<argument pos:start="91:29" pos:end="91:29"><expr pos:start="91:29" pos:end="91:29"><name pos:start="91:29" pos:end="91:29">f</name></expr></argument>, <argument pos:start="91:32" pos:end="93:65"><expr pos:start="91:32" pos:end="93:65"><literal type="string" pos:start="91:32" pos:end="91:61">"%s TLB %02d/%02d way:%d %s ["</literal>

                            <name pos:start="93:29" pos:end="93:41">TARGET_FMT_lx</name> <literal type="string" pos:start="93:43" pos:end="93:45">" "</literal> <name pos:start="93:47" pos:end="93:59">TARGET_FMT_lx</name> <literal type="string" pos:start="93:61" pos:end="93:65">"]\n"</literal></expr></argument>,

                            <argument pos:start="95:29" pos:end="95:50"><expr pos:start="95:29" pos:end="95:50"><ternary pos:start="95:29" pos:end="95:50"><condition pos:start="95:29" pos:end="95:34"><expr pos:start="95:29" pos:end="95:32"><name pos:start="95:29" pos:end="95:32">type</name></expr> ?</condition><then pos:start="95:36" pos:end="95:41"> <expr pos:start="95:36" pos:end="95:41"><literal type="string" pos:start="95:36" pos:end="95:41">"code"</literal></expr> </then><else pos:start="95:43" pos:end="95:50">: <expr pos:start="95:45" pos:end="95:50"><literal type="string" pos:start="95:45" pos:end="95:50">"data"</literal></expr></else></ternary></expr></argument>, <argument pos:start="95:53" pos:end="95:71"><expr pos:start="95:53" pos:end="95:71"><name pos:start="95:53" pos:end="95:57">entry</name> <operator pos:start="95:59" pos:end="95:59">%</operator> <name pos:start="95:61" pos:end="95:71"><name pos:start="95:61" pos:end="95:63">env</name><operator pos:start="95:64" pos:end="95:65">-&gt;</operator><name pos:start="95:66" pos:end="95:71">nb_tlb</name></name></expr></argument>,

                            <argument pos:start="97:29" pos:end="97:39"><expr pos:start="97:29" pos:end="97:39"><name pos:start="97:29" pos:end="97:39"><name pos:start="97:29" pos:end="97:31">env</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:39">nb_tlb</name></name></expr></argument>, <argument pos:start="97:42" pos:end="97:44"><expr pos:start="97:42" pos:end="97:44"><name pos:start="97:42" pos:end="97:44">way</name></expr></argument>,

                            <argument pos:start="99:29" pos:end="99:71"><expr pos:start="99:29" pos:end="99:71"><ternary pos:start="99:29" pos:end="99:71"><condition pos:start="99:29" pos:end="99:53"><expr pos:start="99:29" pos:end="99:51"><call pos:start="99:29" pos:end="99:51"><name pos:start="99:29" pos:end="99:40">pte_is_valid</name><argument_list pos:start="99:41" pos:end="99:51">(<argument pos:start="99:42" pos:end="99:50"><expr pos:start="99:42" pos:end="99:50"><name pos:start="99:42" pos:end="99:50"><name pos:start="99:42" pos:end="99:44">tlb</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:50">pte0</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="99:55" pos:end="99:61"> <expr pos:start="99:55" pos:end="99:61"><literal type="string" pos:start="99:55" pos:end="99:61">"valid"</literal></expr> </then><else pos:start="99:63" pos:end="99:71">: <expr pos:start="99:65" pos:end="99:71"><literal type="string" pos:start="99:65" pos:end="99:71">"inval"</literal></expr></else></ternary></expr></argument>,

                            <argument pos:start="101:29" pos:end="101:36"><expr pos:start="101:29" pos:end="101:36"><name pos:start="101:29" pos:end="101:36"><name pos:start="101:29" pos:end="101:31">tlb</name><operator pos:start="101:32" pos:end="101:33">-&gt;</operator><name pos:start="101:34" pos:end="101:36">EPN</name></name></expr></argument>, <argument pos:start="101:39" pos:end="101:65"><expr pos:start="101:39" pos:end="101:65"><name pos:start="101:39" pos:end="101:46"><name pos:start="101:39" pos:end="101:41">tlb</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:46">EPN</name></name> <operator pos:start="101:48" pos:end="101:48">+</operator> <name pos:start="101:50" pos:end="101:65">TARGET_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
