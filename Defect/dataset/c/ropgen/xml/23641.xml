<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23641.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">nand_setio</name><parameter_list pos:start="1:16" pos:end="1:49">(<parameter pos:start="1:17" pos:end="1:32"><decl pos:start="1:17" pos:end="1:32"><type pos:start="1:17" pos:end="1:32"><name pos:start="1:17" pos:end="1:27">DeviceState</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">dev</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:42">uint32_t</name></type> <name pos:start="1:44" pos:end="1:48">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="203:1">{<block_content pos:start="5:5" pos:end="201:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">NANDFlashState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:46">= <expr pos:start="7:25" pos:end="7:46"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:39">NANDFlashState</name> <operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator> <name pos:start="7:44" pos:end="7:46">dev</name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="79:5"><if pos:start="9:5" pos:end="79:5">if <condition pos:start="9:8" pos:end="9:25">(<expr pos:start="9:9" pos:end="9:24"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">s</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:14">ce</name></name> <operator pos:start="9:16" pos:end="9:17">&amp;&amp;</operator> <name pos:start="9:19" pos:end="9:24"><name pos:start="9:19" pos:end="9:19">s</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:24">cle</name></name></expr>)</condition> <block pos:start="9:27" pos:end="79:5">{<block_content pos:start="11:9" pos:end="77:9">

        <if_stmt pos:start="11:9" pos:end="27:9"><if pos:start="11:9" pos:end="27:9">if <condition pos:start="11:12" pos:end="11:65">(<expr pos:start="11:13" pos:end="11:64"><name pos:start="11:13" pos:end="11:38"><name pos:start="11:13" pos:end="11:26">nand_flash_ids</name><index pos:start="11:27" pos:end="11:38">[<expr pos:start="11:28" pos:end="11:37"><name pos:start="11:28" pos:end="11:37"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:37">chip_id</name></name></expr>]</index></name><operator pos:start="11:39" pos:end="11:39">.</operator><name pos:start="11:40" pos:end="11:46">options</name> <operator pos:start="11:48" pos:end="11:48">&amp;</operator> <name pos:start="11:50" pos:end="11:64">NAND_SAMSUNG_LP</name></expr>)</condition> <block pos:start="11:67" pos:end="27:9">{<block_content pos:start="13:13" pos:end="25:13">

            <if_stmt pos:start="13:13" pos:end="15:23"><if pos:start="13:13" pos:end="15:23">if <condition pos:start="13:16" pos:end="13:70">(<expr pos:start="13:17" pos:end="13:69"><name pos:start="13:17" pos:end="13:22"><name pos:start="13:17" pos:end="13:17">s</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:22">cmd</name></name> <operator pos:start="13:24" pos:end="13:25">==</operator> <name pos:start="13:27" pos:end="13:40">NAND_CMD_READ0</name> <operator pos:start="13:42" pos:end="13:43">&amp;&amp;</operator> <name pos:start="13:45" pos:end="13:49">value</name> <operator pos:start="13:51" pos:end="13:52">==</operator> <name pos:start="13:54" pos:end="13:69">NAND_CMD_LPREAD2</name></expr>)</condition><block type="pseudo" pos:start="15:17" pos:end="15:23"><block_content pos:start="15:17" pos:end="15:23">

                <return pos:start="15:17" pos:end="15:23">return;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="17:13" pos:end="25:13"><if pos:start="17:13" pos:end="25:13">if <condition pos:start="17:16" pos:end="17:46">(<expr pos:start="17:17" pos:end="17:45"><name pos:start="17:17" pos:end="17:21">value</name> <operator pos:start="17:23" pos:end="17:24">==</operator> <name pos:start="17:26" pos:end="17:45">NAND_CMD_RANDOMREAD1</name></expr>)</condition> <block pos:start="17:48" pos:end="25:13">{<block_content pos:start="19:17" pos:end="23:23">

                <expr_stmt pos:start="19:17" pos:end="19:55"><expr pos:start="19:17" pos:end="19:54"><name pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:17">s</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:23">addr</name></name> <operator pos:start="19:25" pos:end="19:26">&amp;=</operator> <operator pos:start="19:28" pos:end="19:28">~</operator><operator pos:start="19:29" pos:end="19:29">(</operator><operator pos:start="19:30" pos:end="19:30">(</operator><literal type="number" pos:start="19:31" pos:end="19:31">1</literal> <operator pos:start="19:33" pos:end="19:34">&lt;&lt;</operator> <name pos:start="19:36" pos:end="19:48"><name pos:start="19:36" pos:end="19:36">s</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:48">addr_shift</name></name><operator pos:start="19:49" pos:end="19:49">)</operator> <operator pos:start="19:51" pos:end="19:51">-</operator> <literal type="number" pos:start="19:53" pos:end="19:53">1</literal><operator pos:start="19:54" pos:end="19:54">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="21:17" pos:end="21:31"><expr pos:start="21:17" pos:end="21:30"><name pos:start="21:17" pos:end="21:26"><name pos:start="21:17" pos:end="21:17">s</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:26">addrlen</name></name> <operator pos:start="21:28" pos:end="21:28">=</operator> <literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr>;</expr_stmt>

                <return pos:start="23:17" pos:end="23:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="47:9"><if pos:start="29:9" pos:end="31:26">if <condition pos:start="29:12" pos:end="29:36">(<expr pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:17">value</name> <operator pos:start="29:19" pos:end="29:20">==</operator> <name pos:start="29:22" pos:end="29:35">NAND_CMD_READ0</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:26"><block_content pos:start="31:13" pos:end="31:26">

            <expr_stmt pos:start="31:13" pos:end="31:26"><expr pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:21">offset</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr>;</expr_stmt></block_content></block></if>

	<if type="elseif" pos:start="33:9" pos:end="39:9">else if <condition pos:start="33:17" pos:end="33:41">(<expr pos:start="33:18" pos:end="33:40"><name pos:start="33:18" pos:end="33:22">value</name> <operator pos:start="33:24" pos:end="33:25">==</operator> <name pos:start="33:27" pos:end="33:40">NAND_CMD_READ1</name></expr>)</condition> <block pos:start="33:43" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:35">

            <expr_stmt pos:start="35:13" pos:end="35:30"><expr pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:21">offset</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <literal type="number" pos:start="35:25" pos:end="35:29">0x100</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:35"><expr pos:start="37:13" pos:end="37:34"><name pos:start="37:13" pos:end="37:17">value</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:34">NAND_CMD_READ0</name></expr>;</expr_stmt>

        </block_content>}</block></if>

	<if type="elseif" pos:start="41:9" pos:end="47:9">else if <condition pos:start="41:17" pos:end="41:41">(<expr pos:start="41:18" pos:end="41:40"><name pos:start="41:18" pos:end="41:22">value</name> <operator pos:start="41:24" pos:end="41:25">==</operator> <name pos:start="41:27" pos:end="41:40">NAND_CMD_READ2</name></expr>)</condition> <block pos:start="41:43" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:35">

            <expr_stmt pos:start="43:13" pos:end="43:43"><expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:21">offset</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <literal type="number" pos:start="43:25" pos:end="43:25">1</literal> <operator pos:start="43:27" pos:end="43:28">&lt;&lt;</operator> <name pos:start="43:30" pos:end="43:42"><name pos:start="43:30" pos:end="43:30">s</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:42">page_shift</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:35"><expr pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:17">value</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:34">NAND_CMD_READ0</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:23"><expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:14">cmd</name></name> <operator pos:start="51:16" pos:end="51:16">=</operator> <name pos:start="51:18" pos:end="51:22">value</name></expr>;</expr_stmt>



        <if_stmt pos:start="55:9" pos:end="69:28"><if pos:start="55:9" pos:end="69:28">if <condition pos:start="55:12" pos:end="67:41">(<expr pos:start="55:13" pos:end="67:40"><name pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:18">cmd</name></name> <operator pos:start="55:20" pos:end="55:21">==</operator> <name pos:start="55:23" pos:end="55:41">NAND_CMD_READSTATUS</name> <operator pos:start="55:43" pos:end="55:44">||</operator>

                <name pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:22">cmd</name></name> <operator pos:start="57:24" pos:end="57:25">==</operator> <name pos:start="57:27" pos:end="57:47">NAND_CMD_PAGEPROGRAM2</name> <operator pos:start="57:49" pos:end="57:50">||</operator>

                <name pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:22">cmd</name></name> <operator pos:start="59:24" pos:end="59:25">==</operator> <name pos:start="59:27" pos:end="59:46">NAND_CMD_BLOCKERASE1</name> <operator pos:start="59:48" pos:end="59:49">||</operator>

                <name pos:start="61:17" pos:end="61:22"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:22">cmd</name></name> <operator pos:start="61:24" pos:end="61:25">==</operator> <name pos:start="61:27" pos:end="61:46">NAND_CMD_BLOCKERASE2</name> <operator pos:start="61:48" pos:end="61:49">||</operator>

                <name pos:start="63:17" pos:end="63:22"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:22">cmd</name></name> <operator pos:start="63:24" pos:end="63:25">==</operator> <name pos:start="63:27" pos:end="63:48">NAND_CMD_NOSERIALREAD2</name> <operator pos:start="63:50" pos:end="63:51">||</operator>

                <name pos:start="65:17" pos:end="65:22"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:22">cmd</name></name> <operator pos:start="65:24" pos:end="65:25">==</operator> <name pos:start="65:27" pos:end="65:46">NAND_CMD_RANDOMREAD2</name> <operator pos:start="65:48" pos:end="65:49">||</operator>

                <name pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:22">cmd</name></name> <operator pos:start="67:24" pos:end="67:25">==</operator> <name pos:start="67:27" pos:end="67:40">NAND_CMD_RESET</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:28"><block_content pos:start="69:13" pos:end="69:28">

            <expr_stmt pos:start="69:13" pos:end="69:28"><expr pos:start="69:13" pos:end="69:27"><call pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:24">nand_command</name><argument_list pos:start="69:25" pos:end="69:27">(<argument pos:start="69:26" pos:end="69:26"><expr pos:start="69:26" pos:end="69:26"><name pos:start="69:26" pos:end="69:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:43">(<expr pos:start="73:13" pos:end="73:42"><name pos:start="73:13" pos:end="73:18"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:18">cmd</name></name> <operator pos:start="73:20" pos:end="73:21">!=</operator> <name pos:start="73:23" pos:end="73:42">NAND_CMD_RANDOMREAD2</name></expr>)</condition> <block pos:start="73:45" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:27">

            <expr_stmt pos:start="75:13" pos:end="75:27"><expr pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:22"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:22">addrlen</name></name> <operator pos:start="75:24" pos:end="75:24">=</operator> <literal type="number" pos:start="75:26" pos:end="75:26">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="169:5"><if pos:start="83:5" pos:end="169:5">if <condition pos:start="83:8" pos:end="83:15">(<expr pos:start="83:9" pos:end="83:14"><name pos:start="83:9" pos:end="83:14"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:14">ale</name></name></expr>)</condition> <block pos:start="83:17" pos:end="169:5">{<block_content pos:start="85:9" pos:end="167:9">

        <decl_stmt pos:start="85:9" pos:end="85:44"><decl pos:start="85:9" pos:end="85:43"><type pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:16">unsigned</name> <name pos:start="85:18" pos:end="85:20">int</name></type> <name pos:start="85:22" pos:end="85:26">shift</name> <init pos:start="85:28" pos:end="85:43">= <expr pos:start="85:30" pos:end="85:43"><name pos:start="85:30" pos:end="85:39"><name pos:start="85:30" pos:end="85:30">s</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:39">addrlen</name></name> <operator pos:start="85:41" pos:end="85:41">*</operator> <literal type="number" pos:start="85:43" pos:end="85:43">8</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="87:9" pos:end="87:45"><decl pos:start="87:9" pos:end="87:44"><type pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:16">unsigned</name> <name pos:start="87:18" pos:end="87:20">int</name></type> <name pos:start="87:22" pos:end="87:25">mask</name> <init pos:start="87:27" pos:end="87:44">= <expr pos:start="87:29" pos:end="87:44"><operator pos:start="87:29" pos:end="87:29">~</operator><operator pos:start="87:30" pos:end="87:30">(</operator><literal type="number" pos:start="87:31" pos:end="87:34">0xff</literal> <operator pos:start="87:36" pos:end="87:37">&lt;&lt;</operator> <name pos:start="87:39" pos:end="87:43">shift</name><operator pos:start="87:44" pos:end="87:44">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="89:9" pos:end="89:40"><decl pos:start="89:9" pos:end="89:39"><type pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:16">unsigned</name> <name pos:start="89:18" pos:end="89:20">int</name></type> <name pos:start="89:22" pos:end="89:22">v</name> <init pos:start="89:24" pos:end="89:39">= <expr pos:start="89:26" pos:end="89:39"><name pos:start="89:26" pos:end="89:30">value</name> <operator pos:start="89:32" pos:end="89:33">&lt;&lt;</operator> <name pos:start="89:35" pos:end="89:39">shift</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:39"><expr pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:15">addr</name></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <operator pos:start="93:19" pos:end="93:19">(</operator><name pos:start="93:20" pos:end="93:26"><name pos:start="93:20" pos:end="93:20">s</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:26">addr</name></name> <operator pos:start="93:28" pos:end="93:28">&amp;</operator> <name pos:start="93:30" pos:end="93:33">mask</name><operator pos:start="93:34" pos:end="93:34">)</operator> <operator pos:start="93:36" pos:end="93:36">|</operator> <name pos:start="93:38" pos:end="93:38">v</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:22"><expr pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:18">addrlen</name></name> <operator pos:start="95:20" pos:end="95:21">++</operator></expr>;</expr_stmt>



        <switch pos:start="99:9" pos:end="167:9">switch <condition pos:start="99:16" pos:end="99:27">(<expr pos:start="99:17" pos:end="99:26"><name pos:start="99:17" pos:end="99:26"><name pos:start="99:17" pos:end="99:17">s</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:26">addrlen</name></name></expr>)</condition> <block pos:start="99:29" pos:end="167:9">{<block_content pos:start="101:9" pos:end="165:18">

        <case pos:start="101:9" pos:end="101:15">case <expr pos:start="101:14" pos:end="101:14"><literal type="number" pos:start="101:14" pos:end="101:14">1</literal></expr>:</case>

            <if_stmt pos:start="103:13" pos:end="107:13"><if pos:start="103:13" pos:end="107:13">if <condition pos:start="103:16" pos:end="103:42">(<expr pos:start="103:17" pos:end="103:41"><name pos:start="103:17" pos:end="103:22"><name pos:start="103:17" pos:end="103:17">s</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:22">cmd</name></name> <operator pos:start="103:24" pos:end="103:25">==</operator> <name pos:start="103:27" pos:end="103:41">NAND_CMD_READID</name></expr>)</condition> <block pos:start="103:44" pos:end="107:13">{<block_content pos:start="105:17" pos:end="105:32">

                <expr_stmt pos:start="105:17" pos:end="105:32"><expr pos:start="105:17" pos:end="105:31"><call pos:start="105:17" pos:end="105:31"><name pos:start="105:17" pos:end="105:28">nand_command</name><argument_list pos:start="105:29" pos:end="105:31">(<argument pos:start="105:30" pos:end="105:30"><expr pos:start="105:30" pos:end="105:30"><name pos:start="105:30" pos:end="105:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:15">case <expr pos:start="111:14" pos:end="111:14"><literal type="number" pos:start="111:14" pos:end="111:14">2</literal></expr>:</case> <comment type="block" pos:start="111:17" pos:end="111:57">/* fix cache address as a byte address */</comment>

            <expr_stmt pos:start="113:13" pos:end="113:42"><expr pos:start="113:13" pos:end="113:41"><name pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:19">addr</name></name> <operator pos:start="113:21" pos:end="113:23">&lt;&lt;=</operator> <operator pos:start="113:25" pos:end="113:25">(</operator><name pos:start="113:26" pos:end="113:36"><name pos:start="113:26" pos:end="113:26">s</name><operator pos:start="113:27" pos:end="113:28">-&gt;</operator><name pos:start="113:29" pos:end="113:36">buswidth</name></name> <operator pos:start="113:38" pos:end="113:38">-</operator> <literal type="number" pos:start="113:40" pos:end="113:40">1</literal><operator pos:start="113:41" pos:end="113:41">)</operator></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <case pos:start="117:9" pos:end="117:15">case <expr pos:start="117:14" pos:end="117:14"><literal type="number" pos:start="117:14" pos:end="117:14">3</literal></expr>:</case>

            <if_stmt pos:start="119:13" pos:end="127:13"><if pos:start="119:13" pos:end="127:13">if <condition pos:start="119:16" pos:end="123:54">(<expr pos:start="119:17" pos:end="123:53"><operator pos:start="119:17" pos:end="119:17">!</operator><operator pos:start="119:18" pos:end="119:18">(</operator><name pos:start="119:19" pos:end="119:44"><name pos:start="119:19" pos:end="119:32">nand_flash_ids</name><index pos:start="119:33" pos:end="119:44">[<expr pos:start="119:34" pos:end="119:43"><name pos:start="119:34" pos:end="119:43"><name pos:start="119:34" pos:end="119:34">s</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:43">chip_id</name></name></expr>]</index></name><operator pos:start="119:45" pos:end="119:45">.</operator><name pos:start="119:46" pos:end="119:52">options</name> <operator pos:start="119:54" pos:end="119:54">&amp;</operator> <name pos:start="119:56" pos:end="119:70">NAND_SAMSUNG_LP</name><operator pos:start="119:71" pos:end="119:71">)</operator> <operator pos:start="119:73" pos:end="119:74">&amp;&amp;</operator>

                    <operator pos:start="121:21" pos:end="121:21">(</operator><name pos:start="121:22" pos:end="121:27"><name pos:start="121:22" pos:end="121:22">s</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:27">cmd</name></name> <operator pos:start="121:29" pos:end="121:30">==</operator> <name pos:start="121:32" pos:end="121:45">NAND_CMD_READ0</name> <operator pos:start="121:47" pos:end="121:48">||</operator>

                     <name pos:start="123:22" pos:end="123:27"><name pos:start="123:22" pos:end="123:22">s</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:27">cmd</name></name> <operator pos:start="123:29" pos:end="123:30">==</operator> <name pos:start="123:32" pos:end="123:52">NAND_CMD_PAGEPROGRAM1</name><operator pos:start="123:53" pos:end="123:53">)</operator></expr>)</condition> <block pos:start="123:56" pos:end="127:13">{<block_content pos:start="125:17" pos:end="125:32">

                <expr_stmt pos:start="125:17" pos:end="125:32"><expr pos:start="125:17" pos:end="125:31"><call pos:start="125:17" pos:end="125:31"><name pos:start="125:17" pos:end="125:28">nand_command</name><argument_list pos:start="125:29" pos:end="125:31">(<argument pos:start="125:30" pos:end="125:30"><expr pos:start="125:30" pos:end="125:30"><name pos:start="125:30" pos:end="125:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:15">case <expr pos:start="131:14" pos:end="131:14"><literal type="number" pos:start="131:14" pos:end="131:14">4</literal></expr>:</case>

            <if_stmt pos:start="133:13" pos:end="143:13"><if pos:start="133:13" pos:end="143:13">if <condition pos:start="133:16" pos:end="139:54">(<expr pos:start="133:17" pos:end="139:53"><operator pos:start="133:17" pos:end="133:17">(</operator><name pos:start="133:18" pos:end="133:43"><name pos:start="133:18" pos:end="133:31">nand_flash_ids</name><index pos:start="133:32" pos:end="133:43">[<expr pos:start="133:33" pos:end="133:42"><name pos:start="133:33" pos:end="133:42"><name pos:start="133:33" pos:end="133:33">s</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:42">chip_id</name></name></expr>]</index></name><operator pos:start="133:44" pos:end="133:44">.</operator><name pos:start="133:45" pos:end="133:51">options</name> <operator pos:start="133:53" pos:end="133:53">&amp;</operator> <name pos:start="133:55" pos:end="133:69">NAND_SAMSUNG_LP</name><operator pos:start="133:70" pos:end="133:70">)</operator> <operator pos:start="133:72" pos:end="133:73">&amp;&amp;</operator>

                    <name pos:start="135:21" pos:end="135:46"><name pos:start="135:21" pos:end="135:34">nand_flash_ids</name><index pos:start="135:35" pos:end="135:46">[<expr pos:start="135:36" pos:end="135:45"><name pos:start="135:36" pos:end="135:45"><name pos:start="135:36" pos:end="135:36">s</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:45">chip_id</name></name></expr>]</index></name><operator pos:start="135:47" pos:end="135:47">.</operator><name pos:start="135:48" pos:end="135:51">size</name> <operator pos:start="135:53" pos:end="135:53">&lt;</operator> <literal type="number" pos:start="135:55" pos:end="135:57">256</literal> <operator pos:start="135:59" pos:end="135:60">&amp;&amp;</operator> <comment type="block" pos:start="135:62" pos:end="135:78">/* 1Gb or less */</comment>

                    <operator pos:start="137:21" pos:end="137:21">(</operator><name pos:start="137:22" pos:end="137:27"><name pos:start="137:22" pos:end="137:22">s</name><operator pos:start="137:23" pos:end="137:24">-&gt;</operator><name pos:start="137:25" pos:end="137:27">cmd</name></name> <operator pos:start="137:29" pos:end="137:30">==</operator> <name pos:start="137:32" pos:end="137:45">NAND_CMD_READ0</name> <operator pos:start="137:47" pos:end="137:48">||</operator>

                     <name pos:start="139:22" pos:end="139:27"><name pos:start="139:22" pos:end="139:22">s</name><operator pos:start="139:23" pos:end="139:24">-&gt;</operator><name pos:start="139:25" pos:end="139:27">cmd</name></name> <operator pos:start="139:29" pos:end="139:30">==</operator> <name pos:start="139:32" pos:end="139:52">NAND_CMD_PAGEPROGRAM1</name><operator pos:start="139:53" pos:end="139:53">)</operator></expr>)</condition> <block pos:start="139:56" pos:end="143:13">{<block_content pos:start="141:17" pos:end="141:32">

                <expr_stmt pos:start="141:17" pos:end="141:32"><expr pos:start="141:17" pos:end="141:31"><call pos:start="141:17" pos:end="141:31"><name pos:start="141:17" pos:end="141:28">nand_command</name><argument_list pos:start="141:29" pos:end="141:31">(<argument pos:start="141:30" pos:end="141:30"><expr pos:start="141:30" pos:end="141:30"><name pos:start="141:30" pos:end="141:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="145:13" pos:end="145:18">break;</break>

        <case pos:start="147:9" pos:end="147:15">case <expr pos:start="147:14" pos:end="147:14"><literal type="number" pos:start="147:14" pos:end="147:14">5</literal></expr>:</case>

            <if_stmt pos:start="149:13" pos:end="159:13"><if pos:start="149:13" pos:end="159:13">if <condition pos:start="149:16" pos:end="155:54">(<expr pos:start="149:17" pos:end="155:53"><operator pos:start="149:17" pos:end="149:17">(</operator><name pos:start="149:18" pos:end="149:43"><name pos:start="149:18" pos:end="149:31">nand_flash_ids</name><index pos:start="149:32" pos:end="149:43">[<expr pos:start="149:33" pos:end="149:42"><name pos:start="149:33" pos:end="149:42"><name pos:start="149:33" pos:end="149:33">s</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:42">chip_id</name></name></expr>]</index></name><operator pos:start="149:44" pos:end="149:44">.</operator><name pos:start="149:45" pos:end="149:51">options</name> <operator pos:start="149:53" pos:end="149:53">&amp;</operator> <name pos:start="149:55" pos:end="149:69">NAND_SAMSUNG_LP</name><operator pos:start="149:70" pos:end="149:70">)</operator> <operator pos:start="149:72" pos:end="149:73">&amp;&amp;</operator>

                    <name pos:start="151:21" pos:end="151:46"><name pos:start="151:21" pos:end="151:34">nand_flash_ids</name><index pos:start="151:35" pos:end="151:46">[<expr pos:start="151:36" pos:end="151:45"><name pos:start="151:36" pos:end="151:45"><name pos:start="151:36" pos:end="151:36">s</name><operator pos:start="151:37" pos:end="151:38">-&gt;</operator><name pos:start="151:39" pos:end="151:45">chip_id</name></name></expr>]</index></name><operator pos:start="151:47" pos:end="151:47">.</operator><name pos:start="151:48" pos:end="151:51">size</name> <operator pos:start="151:53" pos:end="151:54">&gt;=</operator> <literal type="number" pos:start="151:56" pos:end="151:58">256</literal> <operator pos:start="151:60" pos:end="151:61">&amp;&amp;</operator> <comment type="block" pos:start="151:63" pos:end="151:79">/* 2Gb or more */</comment>

                    <operator pos:start="153:21" pos:end="153:21">(</operator><name pos:start="153:22" pos:end="153:27"><name pos:start="153:22" pos:end="153:22">s</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:27">cmd</name></name> <operator pos:start="153:29" pos:end="153:30">==</operator> <name pos:start="153:32" pos:end="153:45">NAND_CMD_READ0</name> <operator pos:start="153:47" pos:end="153:48">||</operator>

                     <name pos:start="155:22" pos:end="155:27"><name pos:start="155:22" pos:end="155:22">s</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:27">cmd</name></name> <operator pos:start="155:29" pos:end="155:30">==</operator> <name pos:start="155:32" pos:end="155:52">NAND_CMD_PAGEPROGRAM1</name><operator pos:start="155:53" pos:end="155:53">)</operator></expr>)</condition> <block pos:start="155:56" pos:end="159:13">{<block_content pos:start="157:17" pos:end="157:32">

                <expr_stmt pos:start="157:17" pos:end="157:32"><expr pos:start="157:17" pos:end="157:31"><call pos:start="157:17" pos:end="157:31"><name pos:start="157:17" pos:end="157:28">nand_command</name><argument_list pos:start="157:29" pos:end="157:31">(<argument pos:start="157:30" pos:end="157:30"><expr pos:start="157:30" pos:end="157:30"><name pos:start="157:30" pos:end="157:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="161:13" pos:end="161:18">break;</break>

        <default pos:start="163:9" pos:end="163:16">default:</default>

            <break pos:start="165:13" pos:end="165:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="173:5" pos:end="201:5"><if pos:start="173:5" pos:end="185:5">if <condition pos:start="173:8" pos:end="173:62">(<expr pos:start="173:9" pos:end="173:61"><operator pos:start="173:9" pos:end="173:9">!</operator><name pos:start="173:10" pos:end="173:15"><name pos:start="173:10" pos:end="173:10">s</name><operator pos:start="173:11" pos:end="173:12">-&gt;</operator><name pos:start="173:13" pos:end="173:15">cle</name></name> <operator pos:start="173:17" pos:end="173:18">&amp;&amp;</operator> <operator pos:start="173:20" pos:end="173:20">!</operator><name pos:start="173:21" pos:end="173:26"><name pos:start="173:21" pos:end="173:21">s</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:26">ale</name></name> <operator pos:start="173:28" pos:end="173:29">&amp;&amp;</operator> <name pos:start="173:31" pos:end="173:36"><name pos:start="173:31" pos:end="173:31">s</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:36">cmd</name></name> <operator pos:start="173:38" pos:end="173:39">==</operator> <name pos:start="173:41" pos:end="173:61">NAND_CMD_PAGEPROGRAM1</name></expr>)</condition> <block pos:start="173:64" pos:end="185:5">{<block_content pos:start="175:9" pos:end="183:9">

        <if_stmt pos:start="175:9" pos:end="183:9"><if pos:start="175:9" pos:end="183:9">if <condition pos:start="175:12" pos:end="175:66">(<expr pos:start="175:13" pos:end="175:65"><name pos:start="175:13" pos:end="175:20"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:20">iolen</name></name> <operator pos:start="175:22" pos:end="175:22">&lt;</operator> <operator pos:start="175:24" pos:end="175:24">(</operator><literal type="number" pos:start="175:25" pos:end="175:25">1</literal> <operator pos:start="175:27" pos:end="175:28">&lt;&lt;</operator> <name pos:start="175:30" pos:end="175:42"><name pos:start="175:30" pos:end="175:30">s</name><operator pos:start="175:31" pos:end="175:32">-&gt;</operator><name pos:start="175:33" pos:end="175:42">page_shift</name></name><operator pos:start="175:43" pos:end="175:43">)</operator> <operator pos:start="175:45" pos:end="175:45">+</operator> <operator pos:start="175:47" pos:end="175:47">(</operator><literal type="number" pos:start="175:48" pos:end="175:48">1</literal> <operator pos:start="175:50" pos:end="175:51">&lt;&lt;</operator> <name pos:start="175:53" pos:end="175:64"><name pos:start="175:53" pos:end="175:53">s</name><operator pos:start="175:54" pos:end="175:55">-&gt;</operator><name pos:start="175:56" pos:end="175:64">oob_shift</name></name><operator pos:start="175:65" pos:end="175:65">)</operator></expr>)</condition> <block pos:start="175:68" pos:end="183:9">{<block_content pos:start="177:13" pos:end="181:13">

            <for pos:start="177:13" pos:end="181:13">for <control pos:start="177:17" pos:end="177:51">(<init pos:start="177:18" pos:end="177:33"><expr pos:start="177:18" pos:end="177:32"><name pos:start="177:18" pos:end="177:18">i</name> <operator pos:start="177:20" pos:end="177:20">=</operator> <name pos:start="177:22" pos:end="177:32"><name pos:start="177:22" pos:end="177:22">s</name><operator pos:start="177:23" pos:end="177:24">-&gt;</operator><name pos:start="177:25" pos:end="177:32">buswidth</name></name></expr>;</init> <condition pos:start="177:35" pos:end="177:38"><expr pos:start="177:35" pos:end="177:37"><name pos:start="177:35" pos:end="177:35">i</name><operator pos:start="177:36" pos:end="177:37">--</operator></expr>;</condition> <incr pos:start="177:40" pos:end="177:50"><expr pos:start="177:40" pos:end="177:50"><name pos:start="177:40" pos:end="177:44">value</name> <operator pos:start="177:46" pos:end="177:48">&gt;&gt;=</operator> <literal type="number" pos:start="177:50" pos:end="177:50">8</literal></expr></incr>)</control> <block pos:start="177:53" pos:end="181:13">{<block_content pos:start="179:17" pos:end="179:62">

                <expr_stmt pos:start="179:17" pos:end="179:62"><expr pos:start="179:17" pos:end="179:61"><name pos:start="179:17" pos:end="179:34"><name pos:start="179:17" pos:end="179:17">s</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:21">io</name><index pos:start="179:22" pos:end="179:34">[<expr pos:start="179:23" pos:end="179:33"><name pos:start="179:23" pos:end="179:30"><name pos:start="179:23" pos:end="179:23">s</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:30">iolen</name></name> <operator pos:start="179:32" pos:end="179:33">++</operator></expr>]</index></name> <operator pos:start="179:36" pos:end="179:36">=</operator> <operator pos:start="179:38" pos:end="179:38">(</operator><name pos:start="179:39" pos:end="179:45">uint8_t</name><operator pos:start="179:46" pos:end="179:46">)</operator> <operator pos:start="179:48" pos:end="179:48">(</operator><name pos:start="179:49" pos:end="179:53">value</name> <operator pos:start="179:55" pos:end="179:55">&amp;</operator> <literal type="number" pos:start="179:57" pos:end="179:60">0xff</literal><operator pos:start="179:61" pos:end="179:61">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="185:7" pos:end="201:5">else if <condition pos:start="185:15" pos:end="185:69">(<expr pos:start="185:16" pos:end="185:68"><operator pos:start="185:16" pos:end="185:16">!</operator><name pos:start="185:17" pos:end="185:22"><name pos:start="185:17" pos:end="185:17">s</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:22">cle</name></name> <operator pos:start="185:24" pos:end="185:25">&amp;&amp;</operator> <operator pos:start="185:27" pos:end="185:27">!</operator><name pos:start="185:28" pos:end="185:33"><name pos:start="185:28" pos:end="185:28">s</name><operator pos:start="185:29" pos:end="185:30">-&gt;</operator><name pos:start="185:31" pos:end="185:33">ale</name></name> <operator pos:start="185:35" pos:end="185:36">&amp;&amp;</operator> <name pos:start="185:38" pos:end="185:43"><name pos:start="185:38" pos:end="185:38">s</name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:43">cmd</name></name> <operator pos:start="185:45" pos:end="185:46">==</operator> <name pos:start="185:48" pos:end="185:68">NAND_CMD_COPYBACKPRG1</name></expr>)</condition> <block pos:start="185:71" pos:end="201:5">{<block_content pos:start="187:9" pos:end="199:9">

        <if_stmt pos:start="187:9" pos:end="199:9"><if pos:start="187:9" pos:end="199:9">if <condition pos:start="187:12" pos:end="189:59">(<expr pos:start="187:13" pos:end="189:58"><operator pos:start="187:13" pos:end="187:13">(</operator><name pos:start="187:14" pos:end="187:20"><name pos:start="187:14" pos:end="187:14">s</name><operator pos:start="187:15" pos:end="187:16">-&gt;</operator><name pos:start="187:17" pos:end="187:20">addr</name></name> <operator pos:start="187:22" pos:end="187:22">&amp;</operator> <operator pos:start="187:24" pos:end="187:24">(</operator><operator pos:start="187:25" pos:end="187:25">(</operator><literal type="number" pos:start="187:26" pos:end="187:26">1</literal> <operator pos:start="187:28" pos:end="187:29">&lt;&lt;</operator> <name pos:start="187:31" pos:end="187:43"><name pos:start="187:31" pos:end="187:31">s</name><operator pos:start="187:32" pos:end="187:33">-&gt;</operator><name pos:start="187:34" pos:end="187:43">addr_shift</name></name><operator pos:start="187:44" pos:end="187:44">)</operator> <operator pos:start="187:46" pos:end="187:46">-</operator> <literal type="number" pos:start="187:48" pos:end="187:48">1</literal><operator pos:start="187:49" pos:end="187:49">)</operator><operator pos:start="187:50" pos:end="187:50">)</operator> <operator pos:start="187:52" pos:end="187:52">&lt;</operator>

                <operator pos:start="189:17" pos:end="189:17">(</operator><literal type="number" pos:start="189:18" pos:end="189:18">1</literal> <operator pos:start="189:20" pos:end="189:21">&lt;&lt;</operator> <name pos:start="189:23" pos:end="189:35"><name pos:start="189:23" pos:end="189:23">s</name><operator pos:start="189:24" pos:end="189:25">-&gt;</operator><name pos:start="189:26" pos:end="189:35">page_shift</name></name><operator pos:start="189:36" pos:end="189:36">)</operator> <operator pos:start="189:38" pos:end="189:38">+</operator> <operator pos:start="189:40" pos:end="189:40">(</operator><literal type="number" pos:start="189:41" pos:end="189:41">1</literal> <operator pos:start="189:43" pos:end="189:44">&lt;&lt;</operator> <name pos:start="189:46" pos:end="189:57"><name pos:start="189:46" pos:end="189:46">s</name><operator pos:start="189:47" pos:end="189:48">-&gt;</operator><name pos:start="189:49" pos:end="189:57">oob_shift</name></name><operator pos:start="189:58" pos:end="189:58">)</operator></expr>)</condition> <block pos:start="189:61" pos:end="199:9">{<block_content pos:start="191:13" pos:end="197:13">

            <for pos:start="191:13" pos:end="197:13">for <control pos:start="191:17" pos:end="191:62">(<init pos:start="191:18" pos:end="191:33"><expr pos:start="191:18" pos:end="191:32"><name pos:start="191:18" pos:end="191:18">i</name> <operator pos:start="191:20" pos:end="191:20">=</operator> <name pos:start="191:22" pos:end="191:32"><name pos:start="191:22" pos:end="191:22">s</name><operator pos:start="191:23" pos:end="191:24">-&gt;</operator><name pos:start="191:25" pos:end="191:32">buswidth</name></name></expr>;</init> <condition pos:start="191:35" pos:end="191:38"><expr pos:start="191:35" pos:end="191:37"><name pos:start="191:35" pos:end="191:35">i</name><operator pos:start="191:36" pos:end="191:37">--</operator></expr>;</condition> <incr pos:start="191:40" pos:end="191:61"><expr pos:start="191:40" pos:end="191:48"><name pos:start="191:40" pos:end="191:46"><name pos:start="191:40" pos:end="191:40">s</name><operator pos:start="191:41" pos:end="191:42">-&gt;</operator><name pos:start="191:43" pos:end="191:46">addr</name></name><operator pos:start="191:47" pos:end="191:48">++</operator></expr><operator pos:start="191:49" pos:end="191:49">,</operator> <expr pos:start="191:51" pos:end="191:61"><name pos:start="191:51" pos:end="191:55">value</name> <operator pos:start="191:57" pos:end="191:59">&gt;&gt;=</operator> <literal type="number" pos:start="191:61" pos:end="191:61">8</literal></expr></incr>)</control> <block pos:start="191:64" pos:end="197:13">{<block_content pos:start="193:17" pos:end="195:45">

                <expr_stmt pos:start="193:17" pos:end="195:45"><expr pos:start="193:17" pos:end="195:44"><name pos:start="193:17" pos:end="193:72"><name pos:start="193:17" pos:end="193:17">s</name><operator pos:start="193:18" pos:end="193:19">-&gt;</operator><name pos:start="193:20" pos:end="193:21">io</name><index pos:start="193:22" pos:end="193:72">[<expr pos:start="193:23" pos:end="193:71"><name pos:start="193:23" pos:end="193:30"><name pos:start="193:23" pos:end="193:23">s</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:30">iolen</name></name> <operator pos:start="193:32" pos:end="193:32">+</operator> <operator pos:start="193:34" pos:end="193:34">(</operator><name pos:start="193:35" pos:end="193:41"><name pos:start="193:35" pos:end="193:35">s</name><operator pos:start="193:36" pos:end="193:37">-&gt;</operator><name pos:start="193:38" pos:end="193:41">addr</name></name> <operator pos:start="193:43" pos:end="193:43">&amp;</operator> <operator pos:start="193:45" pos:end="193:45">(</operator><operator pos:start="193:46" pos:end="193:46">(</operator><literal type="number" pos:start="193:47" pos:end="193:47">1</literal> <operator pos:start="193:49" pos:end="193:50">&lt;&lt;</operator> <name pos:start="193:52" pos:end="193:64"><name pos:start="193:52" pos:end="193:52">s</name><operator pos:start="193:53" pos:end="193:54">-&gt;</operator><name pos:start="193:55" pos:end="193:64">addr_shift</name></name><operator pos:start="193:65" pos:end="193:65">)</operator> <operator pos:start="193:67" pos:end="193:67">-</operator> <literal type="number" pos:start="193:69" pos:end="193:69">1</literal><operator pos:start="193:70" pos:end="193:70">)</operator><operator pos:start="193:71" pos:end="193:71">)</operator></expr>]</index></name> <operator pos:start="193:74" pos:end="193:74">=</operator>

                    <operator pos:start="195:21" pos:end="195:21">(</operator><name pos:start="195:22" pos:end="195:28">uint8_t</name><operator pos:start="195:29" pos:end="195:29">)</operator> <operator pos:start="195:31" pos:end="195:31">(</operator><name pos:start="195:32" pos:end="195:36">value</name> <operator pos:start="195:38" pos:end="195:38">&amp;</operator> <literal type="number" pos:start="195:40" pos:end="195:43">0xff</literal><operator pos:start="195:44" pos:end="195:44">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
