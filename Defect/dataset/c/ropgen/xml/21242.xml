<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21242.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">cg3_realizefn</name><parameter_list pos:start="1:26" pos:end="1:57">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:37">DeviceState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">dev</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:49">Error</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier><modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:53">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">SysBusDevice</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">sbd</name> <init pos:start="5:23" pos:end="5:43">= <expr pos:start="5:25" pos:end="5:43"><call pos:start="5:25" pos:end="5:43"><name pos:start="5:25" pos:end="5:38">SYS_BUS_DEVICE</name><argument_list pos:start="5:39" pos:end="5:43">(<argument pos:start="5:40" pos:end="5:42"><expr pos:start="5:40" pos:end="5:42"><name pos:start="5:40" pos:end="5:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CG3State</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:26">= <expr pos:start="7:19" pos:end="7:26"><call pos:start="7:19" pos:end="7:26"><name pos:start="7:19" pos:end="7:21">CG3</name><argument_list pos:start="7:22" pos:end="7:26">(<argument pos:start="7:23" pos:end="7:25"><expr pos:start="7:23" pos:end="7:25"><name pos:start="7:23" pos:end="7:25">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:24">fcode_filename</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:19">/* FCode ROM */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><call pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:31">vmstate_register_ram_global</name><argument_list pos:start="17:32" pos:end="17:40">(<argument pos:start="17:33" pos:end="17:39"><expr pos:start="17:33" pos:end="17:39"><operator pos:start="17:33" pos:end="17:33">&amp;</operator><name pos:start="17:34" pos:end="17:39"><name pos:start="17:34" pos:end="17:34">s</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:39">rom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:71"><expr pos:start="19:5" pos:end="19:70"><name pos:start="19:5" pos:end="19:18">fcode_filename</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <call pos:start="19:22" pos:end="19:70"><name pos:start="19:22" pos:end="19:35">qemu_find_file</name><argument_list pos:start="19:36" pos:end="19:70">(<argument pos:start="19:37" pos:end="19:55"><expr pos:start="19:37" pos:end="19:55"><name pos:start="19:37" pos:end="19:55">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="19:58" pos:end="19:69"><expr pos:start="19:58" pos:end="19:69"><name pos:start="19:58" pos:end="19:69">CG3_ROM_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="35:5"><if pos:start="21:5" pos:end="35:5">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:22">fcode_filename</name></expr>)</condition> <block pos:start="21:25" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:9">

        <expr_stmt pos:start="23:9" pos:end="25:54"><expr pos:start="23:9" pos:end="25:53"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="25:53"><name pos:start="23:15" pos:end="23:33">load_image_targphys</name><argument_list pos:start="23:34" pos:end="25:53">(<argument pos:start="23:35" pos:end="23:48"><expr pos:start="23:35" pos:end="23:48"><name pos:start="23:35" pos:end="23:48">fcode_filename</name></expr></argument>, <argument pos:start="23:51" pos:end="23:62"><expr pos:start="23:51" pos:end="23:62"><name pos:start="23:51" pos:end="23:62"><name pos:start="23:51" pos:end="23:51">s</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:62">prom_addr</name></name></expr></argument>,

                                  <argument pos:start="25:35" pos:end="25:52"><expr pos:start="25:35" pos:end="25:52"><name pos:start="25:35" pos:end="25:52">FCODE_MAX_ROM_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><call pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:14">g_free</name><argument_list pos:start="27:15" pos:end="27:30">(<argument pos:start="27:16" pos:end="27:29"><expr pos:start="27:16" pos:end="27:29"><name pos:start="27:16" pos:end="27:29">fcode_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:48">(<expr pos:start="29:13" pos:end="29:47"><name pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:15">ret</name> <argument_list type="generic" pos:start="29:17" pos:end="29:28">&lt; <argument pos:start="29:19" pos:end="29:26"><expr pos:start="29:19" pos:end="29:26"><literal type="number" pos:start="29:19" pos:end="29:19">0</literal> <operator pos:start="29:21" pos:end="29:22">||</operator> <name pos:start="29:24" pos:end="29:26">ret</name></expr></argument> &gt;</argument_list></name> <name pos:start="29:30" pos:end="29:47">FCODE_MAX_ROM_SIZE</name></expr>)</condition> <block pos:start="29:50" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:72">

            <expr_stmt pos:start="31:13" pos:end="31:72"><expr pos:start="31:13" pos:end="31:71"><call pos:start="31:13" pos:end="31:71"><name pos:start="31:13" pos:end="31:24">error_report</name><argument_list pos:start="31:25" pos:end="31:71">(<argument pos:start="31:26" pos:end="31:56"><expr pos:start="31:26" pos:end="31:56"><literal type="string" pos:start="31:26" pos:end="31:56">"cg3: could not load prom '%s'"</literal></expr></argument>, <argument pos:start="31:59" pos:end="31:70"><expr pos:start="31:59" pos:end="31:70"><name pos:start="31:59" pos:end="31:70">CG3_ROM_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="41:41"><expr pos:start="39:5" pos:end="41:40"><call pos:start="39:5" pos:end="41:40"><name pos:start="39:5" pos:end="39:26">memory_region_init_ram</name><argument_list pos:start="39:27" pos:end="41:40">(<argument pos:start="39:28" pos:end="39:39"><expr pos:start="39:28" pos:end="39:39"><operator pos:start="39:28" pos:end="39:28">&amp;</operator><name pos:start="39:29" pos:end="39:39"><name pos:start="39:29" pos:end="39:29">s</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:39">vram_mem</name></name></expr></argument>, <argument pos:start="39:42" pos:end="39:45"><expr pos:start="39:42" pos:end="39:45"><name pos:start="39:42" pos:end="39:45">NULL</name></expr></argument>, <argument pos:start="39:48" pos:end="39:57"><expr pos:start="39:48" pos:end="39:57"><literal type="string" pos:start="39:48" pos:end="39:57">"cg3.vram"</literal></expr></argument>, <argument pos:start="39:60" pos:end="39:71"><expr pos:start="39:60" pos:end="39:71"><name pos:start="39:60" pos:end="39:71"><name pos:start="39:60" pos:end="39:60">s</name><operator pos:start="39:61" pos:end="39:62">-&gt;</operator><name pos:start="39:63" pos:end="39:71">vram_size</name></name></expr></argument>,

                           <argument pos:start="41:28" pos:end="41:39"><expr pos:start="41:28" pos:end="41:39"><operator pos:start="41:28" pos:end="41:28">&amp;</operator><name pos:start="41:29" pos:end="41:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:64"><expr pos:start="43:5" pos:end="43:63"><call pos:start="43:5" pos:end="43:63"><name pos:start="43:5" pos:end="43:25">memory_region_set_log</name><argument_list pos:start="43:26" pos:end="43:63">(<argument pos:start="43:27" pos:end="43:38"><expr pos:start="43:27" pos:end="43:38"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:38"><name pos:start="43:28" pos:end="43:28">s</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:38">vram_mem</name></name></expr></argument>, <argument pos:start="43:41" pos:end="43:44"><expr pos:start="43:41" pos:end="43:44"><name pos:start="43:41" pos:end="43:44">true</name></expr></argument>, <argument pos:start="43:47" pos:end="43:62"><expr pos:start="43:47" pos:end="43:62"><name pos:start="43:47" pos:end="43:62">DIRTY_MEMORY_VGA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:46"><expr pos:start="45:5" pos:end="45:45"><call pos:start="45:5" pos:end="45:45"><name pos:start="45:5" pos:end="45:31">vmstate_register_ram_global</name><argument_list pos:start="45:32" pos:end="45:45">(<argument pos:start="45:33" pos:end="45:44"><expr pos:start="45:33" pos:end="45:44"><operator pos:start="45:33" pos:end="45:33">&amp;</operator><name pos:start="45:34" pos:end="45:44"><name pos:start="45:34" pos:end="45:34">s</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:44">vram_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><call pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:20">sysbus_init_mmio</name><argument_list pos:start="47:21" pos:end="47:39">(<argument pos:start="47:22" pos:end="47:24"><expr pos:start="47:22" pos:end="47:24"><name pos:start="47:22" pos:end="47:24">sbd</name></expr></argument>, <argument pos:start="47:27" pos:end="47:38"><expr pos:start="47:27" pos:end="47:38"><operator pos:start="47:27" pos:end="47:27">&amp;</operator><name pos:start="47:28" pos:end="47:38"><name pos:start="47:28" pos:end="47:28">s</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:38">vram_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:34"><expr pos:start="51:5" pos:end="51:33"><call pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:19">sysbus_init_irq</name><argument_list pos:start="51:20" pos:end="51:33">(<argument pos:start="51:21" pos:end="51:23"><expr pos:start="51:21" pos:end="51:23"><name pos:start="51:21" pos:end="51:23">sbd</name></expr></argument>, <argument pos:start="51:26" pos:end="51:32"><expr pos:start="51:26" pos:end="51:32"><operator pos:start="51:26" pos:end="51:26">&amp;</operator><name pos:start="51:27" pos:end="51:32"><name pos:start="51:27" pos:end="51:27">s</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:32">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:63"><expr pos:start="55:5" pos:end="55:62"><name pos:start="55:5" pos:end="55:10"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:10">con</name></name> <operator pos:start="55:12" pos:end="55:12">=</operator> <call pos:start="55:14" pos:end="55:62"><name pos:start="55:14" pos:end="55:33">graphic_console_init</name><argument_list pos:start="55:34" pos:end="55:62">(<argument pos:start="55:35" pos:end="55:45"><expr pos:start="55:35" pos:end="55:45"><call pos:start="55:35" pos:end="55:45"><name pos:start="55:35" pos:end="55:40">DEVICE</name><argument_list pos:start="55:41" pos:end="55:45">(<argument pos:start="55:42" pos:end="55:44"><expr pos:start="55:42" pos:end="55:44"><name pos:start="55:42" pos:end="55:44">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:48" pos:end="55:48"><expr pos:start="55:48" pos:end="55:48"><literal type="number" pos:start="55:48" pos:end="55:48">0</literal></expr></argument>, <argument pos:start="55:51" pos:end="55:58"><expr pos:start="55:51" pos:end="55:58"><operator pos:start="55:51" pos:end="55:51">&amp;</operator><name pos:start="55:52" pos:end="55:58">cg3_ops</name></expr></argument>, <argument pos:start="55:61" pos:end="55:61"><expr pos:start="55:61" pos:end="55:61"><name pos:start="55:61" pos:end="55:61">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:53"><expr pos:start="57:5" pos:end="57:52"><call pos:start="57:5" pos:end="57:52"><name pos:start="57:5" pos:end="57:23">qemu_console_resize</name><argument_list pos:start="57:24" pos:end="57:52">(<argument pos:start="57:25" pos:end="57:30"><expr pos:start="57:25" pos:end="57:30"><name pos:start="57:25" pos:end="57:30"><name pos:start="57:25" pos:end="57:25">s</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:30">con</name></name></expr></argument>, <argument pos:start="57:33" pos:end="57:40"><expr pos:start="57:33" pos:end="57:40"><name pos:start="57:33" pos:end="57:40"><name pos:start="57:33" pos:end="57:33">s</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:40">width</name></name></expr></argument>, <argument pos:start="57:43" pos:end="57:51"><expr pos:start="57:43" pos:end="57:51"><name pos:start="57:43" pos:end="57:51"><name pos:start="57:43" pos:end="57:43">s</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:51">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
