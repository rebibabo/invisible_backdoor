<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21626.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:32">g364fb_ctrl_read</name><parameter_list pos:start="1:33" pos:end="5:51">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:56"><decl pos:start="3:34" pos:end="3:56"><type pos:start="3:34" pos:end="3:56"><name pos:start="3:34" pos:end="3:51">target_phys_addr_t</name></type> <name pos:start="3:53" pos:end="3:56">addr</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:50"><decl pos:start="5:34" pos:end="5:50"><type pos:start="5:34" pos:end="5:50"><name pos:start="5:34" pos:end="5:41">unsigned</name> <name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:50">size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="83:1">{<block_content pos:start="9:5" pos:end="81:15">

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">G364State</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:16">s</name> <init pos:start="9:18" pos:end="9:25">= <expr pos:start="9:20" pos:end="9:25"><name pos:start="9:20" pos:end="9:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">val</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="73:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:61">(<expr pos:start="15:9" pos:end="15:60"><name pos:start="15:9" pos:end="15:12">addr</name> <operator pos:start="15:14" pos:end="15:15">&gt;=</operator> <name pos:start="15:17" pos:end="15:28">REG_CURS_PAT</name> <operator pos:start="15:30" pos:end="15:31">&amp;&amp;</operator> <name pos:start="15:33" pos:end="15:36">addr</name> <operator pos:start="15:38" pos:end="15:38">&lt;</operator> <name pos:start="15:40" pos:end="15:51">REG_CURS_PAT</name> <operator pos:start="15:53" pos:end="15:53">+</operator> <literal type="number" pos:start="15:55" pos:end="15:60">0x1000</literal></expr>)</condition> <block pos:start="15:63" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:29">

        <comment type="block" pos:start="17:9" pos:end="17:28">/* cursor pattern */</comment>

        <decl_stmt pos:start="19:9" pos:end="19:45"><decl pos:start="19:9" pos:end="19:44"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:15">idx</name> <init pos:start="19:17" pos:end="19:44">= <expr pos:start="19:19" pos:end="19:44"><operator pos:start="19:19" pos:end="19:19">(</operator><name pos:start="19:20" pos:end="19:23">addr</name> <operator pos:start="19:25" pos:end="19:25">-</operator> <name pos:start="19:27" pos:end="19:38">REG_CURS_PAT</name><operator pos:start="19:39" pos:end="19:39">)</operator> <operator pos:start="19:41" pos:end="19:42">&gt;&gt;</operator> <literal type="number" pos:start="19:44" pos:end="19:44">3</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:29"><expr pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:11">val</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:28"><name pos:start="21:15" pos:end="21:15">s</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:23">cursor</name><index pos:start="21:24" pos:end="21:28">[<expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:27">idx</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="35:5">else if <condition pos:start="23:15" pos:end="23:66">(<expr pos:start="23:16" pos:end="23:65"><name pos:start="23:16" pos:end="23:19">addr</name> <operator pos:start="23:21" pos:end="23:22">&gt;=</operator> <name pos:start="23:24" pos:end="23:35">REG_CURS_PAL</name> <operator pos:start="23:37" pos:end="23:38">&amp;&amp;</operator> <name pos:start="23:40" pos:end="23:43">addr</name> <operator pos:start="23:45" pos:end="23:45">&lt;</operator> <name pos:start="23:47" pos:end="23:58">REG_CURS_PAL</name> <operator pos:start="23:60" pos:end="23:60">+</operator> <literal type="number" pos:start="23:62" pos:end="23:65">0x18</literal></expr>)</condition> <block pos:start="23:68" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:58">

        <comment type="block" pos:start="25:9" pos:end="25:28">/* cursor palette */</comment>

        <decl_stmt pos:start="27:9" pos:end="27:45"><decl pos:start="27:9" pos:end="27:44"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:15">idx</name> <init pos:start="27:17" pos:end="27:44">= <expr pos:start="27:19" pos:end="27:44"><operator pos:start="27:19" pos:end="27:19">(</operator><name pos:start="27:20" pos:end="27:23">addr</name> <operator pos:start="27:25" pos:end="27:25">-</operator> <name pos:start="27:27" pos:end="27:38">REG_CURS_PAL</name><operator pos:start="27:39" pos:end="27:39">)</operator> <operator pos:start="27:41" pos:end="27:42">&gt;&gt;</operator> <literal type="number" pos:start="27:44" pos:end="27:44">3</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:58"><expr pos:start="29:9" pos:end="29:57"><name pos:start="29:9" pos:end="29:11">val</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <operator pos:start="29:15" pos:end="29:15">(</operator><operator pos:start="29:16" pos:end="29:16">(</operator><name pos:start="29:17" pos:end="29:24">uint32_t</name><operator pos:start="29:25" pos:end="29:25">)</operator><name pos:start="29:26" pos:end="29:50"><name pos:start="29:26" pos:end="29:26">s</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:42">cursor_palette</name><index pos:start="29:43" pos:end="29:47">[<expr pos:start="29:44" pos:end="29:46"><name pos:start="29:44" pos:end="29:46">idx</name></expr>]</index><index pos:start="29:48" pos:end="29:50">[<expr pos:start="29:49" pos:end="29:49"><literal type="number" pos:start="29:49" pos:end="29:49">0</literal></expr>]</index></name> <operator pos:start="29:52" pos:end="29:53">&lt;&lt;</operator> <literal type="number" pos:start="29:55" pos:end="29:56">16</literal><operator pos:start="29:57" pos:end="29:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:11">val</name> <operator pos:start="31:13" pos:end="31:14">|=</operator> <operator pos:start="31:16" pos:end="31:16">(</operator><operator pos:start="31:17" pos:end="31:17">(</operator><name pos:start="31:18" pos:end="31:25">uint32_t</name><operator pos:start="31:26" pos:end="31:26">)</operator><name pos:start="31:27" pos:end="31:51"><name pos:start="31:27" pos:end="31:27">s</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:43">cursor_palette</name><index pos:start="31:44" pos:end="31:48">[<expr pos:start="31:45" pos:end="31:47"><name pos:start="31:45" pos:end="31:47">idx</name></expr>]</index><index pos:start="31:49" pos:end="31:51">[<expr pos:start="31:50" pos:end="31:50"><literal type="number" pos:start="31:50" pos:end="31:50">1</literal></expr>]</index></name> <operator pos:start="31:53" pos:end="31:54">&lt;&lt;</operator> <literal type="number" pos:start="31:56" pos:end="31:56">8</literal><operator pos:start="31:57" pos:end="31:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:58"><expr pos:start="33:9" pos:end="33:57"><name pos:start="33:9" pos:end="33:11">val</name> <operator pos:start="33:13" pos:end="33:14">|=</operator> <operator pos:start="33:16" pos:end="33:16">(</operator><operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:25">uint32_t</name><operator pos:start="33:26" pos:end="33:26">)</operator><name pos:start="33:27" pos:end="33:51"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:43">cursor_palette</name><index pos:start="33:44" pos:end="33:48">[<expr pos:start="33:45" pos:end="33:47"><name pos:start="33:45" pos:end="33:47">idx</name></expr>]</index><index pos:start="33:49" pos:end="33:51">[<expr pos:start="33:50" pos:end="33:50"><literal type="number" pos:start="33:50" pos:end="33:50">2</literal></expr>]</index></name> <operator pos:start="33:53" pos:end="33:54">&lt;&lt;</operator> <literal type="number" pos:start="33:56" pos:end="33:56">0</literal><operator pos:start="33:57" pos:end="33:57">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="73:5">else <block pos:start="35:12" pos:end="73:5">{<block_content pos:start="37:9" pos:end="71:9">

        <switch pos:start="37:9" pos:end="71:9">switch <condition pos:start="37:16" pos:end="37:21">(<expr pos:start="37:17" pos:end="37:20"><name pos:start="37:17" pos:end="37:20">addr</name></expr>)</condition> <block pos:start="37:23" pos:end="71:9">{<block_content pos:start="39:13" pos:end="69:13">

            <case pos:start="39:13" pos:end="39:29">case <expr pos:start="39:18" pos:end="39:28"><name pos:start="39:18" pos:end="39:28">REG_DISPLAY</name></expr>:</case>

                <expr_stmt pos:start="41:17" pos:end="41:35"><expr pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:19">val</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:30"><name pos:start="41:23" pos:end="41:23">s</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:30">width</name></name> <operator pos:start="41:32" pos:end="41:32">/</operator> <literal type="number" pos:start="41:34" pos:end="41:34">4</literal></expr>;</expr_stmt>

                <break pos:start="43:17" pos:end="43:22">break;</break>

            <case pos:start="45:13" pos:end="45:30">case <expr pos:start="45:18" pos:end="45:29"><name pos:start="45:18" pos:end="45:29">REG_VDISPLAY</name></expr>:</case>

                <expr_stmt pos:start="47:17" pos:end="47:36"><expr pos:start="47:17" pos:end="47:35"><name pos:start="47:17" pos:end="47:19">val</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:31"><name pos:start="47:23" pos:end="47:23">s</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:31">height</name></name> <operator pos:start="47:33" pos:end="47:33">*</operator> <literal type="number" pos:start="47:35" pos:end="47:35">2</literal></expr>;</expr_stmt>

                <break pos:start="49:17" pos:end="49:22">break;</break>

            <case pos:start="51:13" pos:end="51:26">case <expr pos:start="51:18" pos:end="51:25"><name pos:start="51:18" pos:end="51:25">REG_CTLA</name></expr>:</case>

                <expr_stmt pos:start="53:17" pos:end="53:30"><expr pos:start="53:17" pos:end="53:29"><name pos:start="53:17" pos:end="53:19">val</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:29"><name pos:start="53:23" pos:end="53:23">s</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:29">ctla</name></name></expr>;</expr_stmt>

                <break pos:start="55:17" pos:end="55:22">break;</break>

            <default pos:start="57:13" pos:end="57:20">default:</default>

            <block pos:start="59:13" pos:end="69:13">{<block_content pos:start="61:17" pos:end="67:22">

                <expr_stmt pos:start="61:17" pos:end="63:35"><expr pos:start="61:17" pos:end="63:34"><call pos:start="61:17" pos:end="63:34"><name pos:start="61:17" pos:end="61:28">error_report</name><argument_list pos:start="61:29" pos:end="63:34">(<argument pos:start="61:30" pos:end="61:73"><expr pos:start="61:30" pos:end="61:73"><literal type="string" pos:start="61:30" pos:end="61:54">"g364: invalid read at ["</literal> <name pos:start="61:56" pos:end="61:69">TARGET_FMT_plx</name> <literal type="string" pos:start="61:71" pos:end="61:73">"]"</literal></expr></argument>,

                             <argument pos:start="63:30" pos:end="63:33"><expr pos:start="63:30" pos:end="63:33"><name pos:start="63:30" pos:end="63:33">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:24"><expr pos:start="65:17" pos:end="65:23"><name pos:start="65:17" pos:end="65:19">val</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <literal type="number" pos:start="65:23" pos:end="65:23">0</literal></expr>;</expr_stmt>

                <break pos:start="67:17" pos:end="67:22">break;</break>

            </block_content>}</block>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:33"><expr pos:start="77:5" pos:end="77:32"><call pos:start="77:5" pos:end="77:32"><name pos:start="77:5" pos:end="77:21">trace_g364fb_read</name><argument_list pos:start="77:22" pos:end="77:32">(<argument pos:start="77:23" pos:end="77:26"><expr pos:start="77:23" pos:end="77:26"><name pos:start="77:23" pos:end="77:26">addr</name></expr></argument>, <argument pos:start="77:29" pos:end="77:31"><expr pos:start="77:29" pos:end="77:31"><name pos:start="77:29" pos:end="77:31">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="81:5" pos:end="81:15">return <expr pos:start="81:12" pos:end="81:14"><name pos:start="81:12" pos:end="81:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
