<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3051.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">coroutine_fn</name> <name pos:start="1:21" pos:end="1:23">int</name></type> <name pos:start="1:25" pos:end="1:41">qcow2_co_pdiscard</name><parameter_list pos:start="1:42" pos:end="3:68">(<parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:62"><name pos:start="1:43" pos:end="1:58">BlockDriverState</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">bs</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:49">int64_t</name></type> <name pos:start="3:51" pos:end="3:56">offset</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:67"><decl pos:start="3:59" pos:end="3:67"><type pos:start="3:59" pos:end="3:67"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:67">count</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">BDRVQcow2State</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:34">= <expr pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:26">bs</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:34">opaque</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="29:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="13:58">(<expr pos:start="13:9" pos:end="13:57"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:57"><name pos:start="13:10" pos:end="13:24">QEMU_IS_ALIGNED</name><argument_list pos:start="13:25" pos:end="13:57">(<argument pos:start="13:26" pos:end="13:39"><expr pos:start="13:26" pos:end="13:39"><name pos:start="13:26" pos:end="13:31">offset</name> <operator pos:start="13:33" pos:end="13:33">|</operator> <name pos:start="13:35" pos:end="13:39">count</name></expr></argument>, <argument pos:start="13:42" pos:end="13:56"><expr pos:start="13:42" pos:end="13:56"><name pos:start="13:42" pos:end="13:56"><name pos:start="13:42" pos:end="13:42">s</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:56">cluster_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:60" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:9">

        <expr_stmt pos:start="15:9" pos:end="15:40"><expr pos:start="15:9" pos:end="15:39"><call pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:14">assert</name><argument_list pos:start="15:15" pos:end="15:39">(<argument pos:start="15:16" pos:end="15:38"><expr pos:start="15:16" pos:end="15:38"><name pos:start="15:16" pos:end="15:20">count</name> <operator pos:start="15:22" pos:end="15:22">&lt;</operator> <name pos:start="15:24" pos:end="15:38"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:38">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="17:9" pos:end="19:70">/* Ignore partial clusters, except for the special case of the

         * complete partial cluster at the end of an unaligned file */</comment>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="23:67">(<expr pos:start="21:13" pos:end="23:66"><operator pos:start="21:13" pos:end="21:13">!</operator><call pos:start="21:14" pos:end="21:53"><name pos:start="21:14" pos:end="21:28">QEMU_IS_ALIGNED</name><argument_list pos:start="21:29" pos:end="21:53">(<argument pos:start="21:30" pos:end="21:35"><expr pos:start="21:30" pos:end="21:35"><name pos:start="21:30" pos:end="21:35">offset</name></expr></argument>, <argument pos:start="21:38" pos:end="21:52"><expr pos:start="21:38" pos:end="21:52"><name pos:start="21:38" pos:end="21:52"><name pos:start="21:38" pos:end="21:38">s</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:52">cluster_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:55" pos:end="21:56">||</operator>

            <name pos:start="23:13" pos:end="23:18">offset</name> <operator pos:start="23:20" pos:end="23:20">+</operator> <name pos:start="23:22" pos:end="23:26">count</name> <operator pos:start="23:28" pos:end="23:29">!=</operator> <name pos:start="23:31" pos:end="23:47"><name pos:start="23:31" pos:end="23:32">bs</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:47">total_sectors</name></name> <operator pos:start="23:49" pos:end="23:49">*</operator> <name pos:start="23:51" pos:end="23:66">BDRV_SECTOR_SIZE</name></expr>)</condition> <block pos:start="23:69" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:28">

            <return pos:start="25:13" pos:end="25:28">return <expr pos:start="25:20" pos:end="25:27"><operator pos:start="25:20" pos:end="25:20">-</operator><name pos:start="25:21" pos:end="25:27">ENOTSUP</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><call pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:22">qemu_co_mutex_lock</name><argument_list pos:start="33:23" pos:end="33:32">(<argument pos:start="33:24" pos:end="33:31"><expr pos:start="33:24" pos:end="33:31"><operator pos:start="33:24" pos:end="33:24">&amp;</operator><name pos:start="33:25" pos:end="33:31"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:63"><expr pos:start="35:5" pos:end="37:62"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="37:62"><name pos:start="35:11" pos:end="35:32">qcow2_discard_clusters</name><argument_list pos:start="35:33" pos:end="37:62">(<argument pos:start="35:34" pos:end="35:35"><expr pos:start="35:34" pos:end="35:35"><name pos:start="35:34" pos:end="35:35">bs</name></expr></argument>, <argument pos:start="35:38" pos:end="35:43"><expr pos:start="35:38" pos:end="35:43"><name pos:start="35:38" pos:end="35:43">offset</name></expr></argument>, <argument pos:start="35:46" pos:end="35:70"><expr pos:start="35:46" pos:end="35:70"><name pos:start="35:46" pos:end="35:50">count</name> <operator pos:start="35:52" pos:end="35:53">&gt;&gt;</operator> <name pos:start="35:55" pos:end="35:70">BDRV_SECTOR_BITS</name></expr></argument>,

                                 <argument pos:start="37:34" pos:end="37:54"><expr pos:start="37:34" pos:end="37:54"><name pos:start="37:34" pos:end="37:54">QCOW2_DISCARD_REQUEST</name></expr></argument>, <argument pos:start="37:57" pos:end="37:61"><expr pos:start="37:57" pos:end="37:61"><name pos:start="37:57" pos:end="37:61">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><call pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:24">qemu_co_mutex_unlock</name><argument_list pos:start="39:25" pos:end="39:34">(<argument pos:start="39:26" pos:end="39:33"><expr pos:start="39:26" pos:end="39:33"><operator pos:start="39:26" pos:end="39:26">&amp;</operator><name pos:start="39:27" pos:end="39:33"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="41:5" pos:end="41:15">return <expr pos:start="41:12" pos:end="41:14"><name pos:start="41:12" pos:end="41:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
