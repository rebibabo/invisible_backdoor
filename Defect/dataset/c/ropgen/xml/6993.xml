<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6993.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">print_block_info</name><parameter_list pos:start="1:29" pos:end="3:69">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:36">Monitor</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">mon</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><name pos:start="1:44" pos:end="1:52">BlockInfo</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">info</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:54"><decl pos:start="3:30" pos:end="3:54"><type pos:start="3:30" pos:end="3:54"><name pos:start="3:30" pos:end="3:44">BlockDeviceInfo</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:54">inserted</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:68"><decl pos:start="3:57" pos:end="3:68"><type pos:start="3:57" pos:end="3:68"><name pos:start="3:57" pos:end="3:60">bool</name></type> <name pos:start="3:62" pos:end="3:68">verbose</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="219:1">{<block_content pos:start="7:5" pos:end="217:5">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">ImageInfo</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:25">image_info</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:71"><expr pos:start="11:5" pos:end="11:70"><call pos:start="11:5" pos:end="11:70"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:70">(<argument pos:start="11:12" pos:end="11:69"><expr pos:start="11:12" pos:end="11:69"><operator pos:start="11:12" pos:end="11:12">!</operator><name pos:start="11:13" pos:end="11:16">info</name> <operator pos:start="11:18" pos:end="11:19">||</operator> <operator pos:start="11:21" pos:end="11:21">!</operator><name pos:start="11:22" pos:end="11:39"><name pos:start="11:22" pos:end="11:25">info</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:39">has_inserted</name></name> <operator pos:start="11:41" pos:end="11:42">||</operator> <name pos:start="11:44" pos:end="11:57"><name pos:start="11:44" pos:end="11:47">info</name><operator pos:start="11:48" pos:end="11:49">-&gt;</operator><name pos:start="11:50" pos:end="11:57">inserted</name></name> <operator pos:start="11:59" pos:end="11:60">==</operator> <name pos:start="11:62" pos:end="11:69">inserted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="37:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:12">info</name></expr>)</condition> <block pos:start="15:15" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:9">

        <expr_stmt pos:start="17:9" pos:end="17:48"><expr pos:start="17:9" pos:end="17:47"><call pos:start="17:9" pos:end="17:47"><name pos:start="17:9" pos:end="17:22">monitor_printf</name><argument_list pos:start="17:23" pos:end="17:47">(<argument pos:start="17:24" pos:end="17:26"><expr pos:start="17:24" pos:end="17:26"><name pos:start="17:24" pos:end="17:26">mon</name></expr></argument>, <argument pos:start="17:29" pos:end="17:32"><expr pos:start="17:29" pos:end="17:32"><literal type="string" pos:start="17:29" pos:end="17:32">"%s"</literal></expr></argument>, <argument pos:start="17:35" pos:end="17:46"><expr pos:start="17:35" pos:end="17:46"><name pos:start="17:35" pos:end="17:46"><name pos:start="17:35" pos:end="17:38">info</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:46">device</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:48">(<expr pos:start="19:13" pos:end="19:47"><name pos:start="19:13" pos:end="19:20">inserted</name> <operator pos:start="19:22" pos:end="19:23">&amp;&amp;</operator> <name pos:start="19:25" pos:end="19:47"><name pos:start="19:25" pos:end="19:32">inserted</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:47">has_node_name</name></name></expr>)</condition> <block pos:start="19:50" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:62">

            <expr_stmt pos:start="21:13" pos:end="21:62"><expr pos:start="21:13" pos:end="21:61"><call pos:start="21:13" pos:end="21:61"><name pos:start="21:13" pos:end="21:26">monitor_printf</name><argument_list pos:start="21:27" pos:end="21:61">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">mon</name></expr></argument>, <argument pos:start="21:33" pos:end="21:39"><expr pos:start="21:33" pos:end="21:39"><literal type="string" pos:start="21:33" pos:end="21:39">" (%s)"</literal></expr></argument>, <argument pos:start="21:42" pos:end="21:60"><expr pos:start="21:42" pos:end="21:60"><name pos:start="21:42" pos:end="21:60"><name pos:start="21:42" pos:end="21:49">inserted</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:60">node_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="37:5">else <block pos:start="25:12" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:40">

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><call pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:14">assert</name><argument_list pos:start="27:15" pos:end="27:24">(<argument pos:start="27:16" pos:end="27:23"><expr pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:23">inserted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="35:40"><expr pos:start="29:9" pos:end="35:39"><call pos:start="29:9" pos:end="35:39"><name pos:start="29:9" pos:end="29:22">monitor_printf</name><argument_list pos:start="29:23" pos:end="35:39">(<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">mon</name></expr></argument>, <argument pos:start="29:29" pos:end="29:32"><expr pos:start="29:29" pos:end="29:32"><literal type="string" pos:start="29:29" pos:end="29:32">"%s"</literal></expr></argument>,

                       <argument pos:start="31:24" pos:end="35:38"><expr pos:start="31:24" pos:end="35:38"><ternary pos:start="31:24" pos:end="35:38"><condition pos:start="31:24" pos:end="33:24"><expr pos:start="31:24" pos:end="31:46"><name pos:start="31:24" pos:end="31:46"><name pos:start="31:24" pos:end="31:31">inserted</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:46">has_node_name</name></name></expr>

                       ?</condition><then pos:start="33:26" pos:end="33:44"> <expr pos:start="33:26" pos:end="33:44"><name pos:start="33:26" pos:end="33:44"><name pos:start="33:26" pos:end="33:33">inserted</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:44">node_name</name></name></expr>

                       </then><else pos:start="35:24" pos:end="35:38">: <expr pos:start="35:26" pos:end="35:38"><literal type="string" pos:start="35:26" pos:end="35:38">"&lt;anonymous&gt;"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="41:5" pos:end="57:5"><if pos:start="41:5" pos:end="53:5">if <condition pos:start="41:8" pos:end="41:17">(<expr pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:16">inserted</name></expr>)</condition> <block pos:start="41:19" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:65">

        <expr_stmt pos:start="43:9" pos:end="51:65"><expr pos:start="43:9" pos:end="51:64"><call pos:start="43:9" pos:end="51:64"><name pos:start="43:9" pos:end="43:22">monitor_printf</name><argument_list pos:start="43:23" pos:end="51:64">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">mon</name></expr></argument>, <argument pos:start="43:29" pos:end="43:45"><expr pos:start="43:29" pos:end="43:45"><literal type="string" pos:start="43:29" pos:end="43:45">": %s (%s%s%s)\n"</literal></expr></argument>,

                       <argument pos:start="45:24" pos:end="45:37"><expr pos:start="45:24" pos:end="45:37"><name pos:start="45:24" pos:end="45:37"><name pos:start="45:24" pos:end="45:31">inserted</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:37">file</name></name></expr></argument>,

                       <argument pos:start="47:24" pos:end="47:36"><expr pos:start="47:24" pos:end="47:36"><name pos:start="47:24" pos:end="47:36"><name pos:start="47:24" pos:end="47:31">inserted</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:36">drv</name></name></expr></argument>,

                       <argument pos:start="49:24" pos:end="49:56"><expr pos:start="49:24" pos:end="49:56"><ternary pos:start="49:24" pos:end="49:56"><condition pos:start="49:24" pos:end="49:37"><expr pos:start="49:24" pos:end="49:35"><name pos:start="49:24" pos:end="49:35"><name pos:start="49:24" pos:end="49:31">inserted</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:35">ro</name></name></expr> ?</condition><then pos:start="49:39" pos:end="49:51"> <expr pos:start="49:39" pos:end="49:51"><literal type="string" pos:start="49:39" pos:end="49:51">", read-only"</literal></expr> </then><else pos:start="49:53" pos:end="49:56">: <expr pos:start="49:55" pos:end="49:56"><literal type="string" pos:start="49:55" pos:end="49:56">""</literal></expr></else></ternary></expr></argument>,

                       <argument pos:start="51:24" pos:end="51:63"><expr pos:start="51:24" pos:end="51:63"><ternary pos:start="51:24" pos:end="51:63"><condition pos:start="51:24" pos:end="51:44"><expr pos:start="51:24" pos:end="51:42"><name pos:start="51:24" pos:end="51:42"><name pos:start="51:24" pos:end="51:31">inserted</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:42">encrypted</name></name></expr> ?</condition><then pos:start="51:46" pos:end="51:58"> <expr pos:start="51:46" pos:end="51:58"><literal type="string" pos:start="51:46" pos:end="51:58">", encrypted"</literal></expr> </then><else pos:start="51:60" pos:end="51:63">: <expr pos:start="51:62" pos:end="51:63"><literal type="string" pos:start="51:62" pos:end="51:63">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="57:5">else <block pos:start="53:12" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:50">

        <expr_stmt pos:start="55:9" pos:end="55:50"><expr pos:start="55:9" pos:end="55:49"><call pos:start="55:9" pos:end="55:49"><name pos:start="55:9" pos:end="55:22">monitor_printf</name><argument_list pos:start="55:23" pos:end="55:49">(<argument pos:start="55:24" pos:end="55:26"><expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">mon</name></expr></argument>, <argument pos:start="55:29" pos:end="55:48"><expr pos:start="55:29" pos:end="55:48"><literal type="string" pos:start="55:29" pos:end="55:48">": [not inserted]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="61:5" pos:end="83:5"><if pos:start="61:5" pos:end="83:5">if <condition pos:start="61:8" pos:end="61:13">(<expr pos:start="61:9" pos:end="61:12"><name pos:start="61:9" pos:end="61:12">info</name></expr>)</condition> <block pos:start="61:15" pos:end="83:5">{<block_content pos:start="63:9" pos:end="81:9">

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:80">(<expr pos:start="63:13" pos:end="63:79"><name pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:16">info</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:31">has_io_status</name></name> <operator pos:start="63:33" pos:end="63:34">&amp;&amp;</operator> <name pos:start="63:36" pos:end="63:50"><name pos:start="63:36" pos:end="63:39">info</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:50">io_status</name></name> <operator pos:start="63:52" pos:end="63:53">!=</operator> <name pos:start="63:55" pos:end="63:79">BLOCK_DEVICE_IO_STATUS_OK</name></expr>)</condition> <block pos:start="63:82" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:72">

            <expr_stmt pos:start="65:13" pos:end="67:72"><expr pos:start="65:13" pos:end="67:71"><call pos:start="65:13" pos:end="67:71"><name pos:start="65:13" pos:end="65:26">monitor_printf</name><argument_list pos:start="65:27" pos:end="67:71">(<argument pos:start="65:28" pos:end="65:30"><expr pos:start="65:28" pos:end="65:30"><name pos:start="65:28" pos:end="65:30">mon</name></expr></argument>, <argument pos:start="65:33" pos:end="65:60"><expr pos:start="65:33" pos:end="65:60"><literal type="string" pos:start="65:33" pos:end="65:60">"    I/O status:       %s\n"</literal></expr></argument>,

                           <argument pos:start="67:28" pos:end="67:70"><expr pos:start="67:28" pos:end="67:70"><name pos:start="67:28" pos:end="67:70"><name pos:start="67:28" pos:end="67:53">BlockDeviceIoStatus_lookup</name><index pos:start="67:54" pos:end="67:70">[<expr pos:start="67:55" pos:end="67:69"><name pos:start="67:55" pos:end="67:69"><name pos:start="67:55" pos:end="67:58">info</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:69">io_status</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="81:9">if <condition pos:start="73:12" pos:end="73:28">(<expr pos:start="73:13" pos:end="73:27"><name pos:start="73:13" pos:end="73:27"><name pos:start="73:13" pos:end="73:16">info</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:27">removable</name></name></expr>)</condition> <block pos:start="73:30" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:64">

            <expr_stmt pos:start="75:13" pos:end="79:64"><expr pos:start="75:13" pos:end="79:63"><call pos:start="75:13" pos:end="79:63"><name pos:start="75:13" pos:end="75:26">monitor_printf</name><argument_list pos:start="75:27" pos:end="79:63">(<argument pos:start="75:28" pos:end="75:30"><expr pos:start="75:28" pos:end="75:30"><name pos:start="75:28" pos:end="75:30">mon</name></expr></argument>, <argument pos:start="75:33" pos:end="75:75"><expr pos:start="75:33" pos:end="75:75"><literal type="string" pos:start="75:33" pos:end="75:75">"    Removable device: %slocked, tray %s\n"</literal></expr></argument>,

                           <argument pos:start="77:28" pos:end="77:53"><expr pos:start="77:28" pos:end="77:53"><ternary pos:start="77:28" pos:end="77:53"><condition pos:start="77:28" pos:end="77:41"><expr pos:start="77:28" pos:end="77:39"><name pos:start="77:28" pos:end="77:39"><name pos:start="77:28" pos:end="77:31">info</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:39">locked</name></name></expr> ?</condition><then pos:start="77:43" pos:end="77:44"> <expr pos:start="77:43" pos:end="77:44"><literal type="string" pos:start="77:43" pos:end="77:44">""</literal></expr> </then><else pos:start="77:46" pos:end="77:53">: <expr pos:start="77:48" pos:end="77:53"><literal type="string" pos:start="77:48" pos:end="77:53">"not "</literal></expr></else></ternary></expr></argument>,

                           <argument pos:start="79:28" pos:end="79:62"><expr pos:start="79:28" pos:end="79:62"><ternary pos:start="79:28" pos:end="79:62"><condition pos:start="79:28" pos:end="79:44"><expr pos:start="79:28" pos:end="79:42"><name pos:start="79:28" pos:end="79:42"><name pos:start="79:28" pos:end="79:31">info</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:42">tray_open</name></name></expr> ?</condition><then pos:start="79:46" pos:end="79:51"> <expr pos:start="79:46" pos:end="79:51"><literal type="string" pos:start="79:46" pos:end="79:51">"open"</literal></expr> </then><else pos:start="79:53" pos:end="79:62">: <expr pos:start="79:55" pos:end="79:62"><literal type="string" pos:start="79:55" pos:end="79:62">"closed"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>





    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:18">(<expr pos:start="89:9" pos:end="89:17"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:17">inserted</name></expr>)</condition> <block pos:start="89:20" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:15">

        <return pos:start="91:9" pos:end="91:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="103:72"><expr pos:start="97:5" pos:end="103:71"><call pos:start="97:5" pos:end="103:71"><name pos:start="97:5" pos:end="97:18">monitor_printf</name><argument_list pos:start="97:19" pos:end="103:71">(<argument pos:start="97:20" pos:end="97:22"><expr pos:start="97:20" pos:end="97:22"><name pos:start="97:20" pos:end="97:22">mon</name></expr></argument>, <argument pos:start="97:25" pos:end="97:56"><expr pos:start="97:25" pos:end="97:56"><literal type="string" pos:start="97:25" pos:end="97:56">"    Cache mode:       %s%s%s\n"</literal></expr></argument>,

                   <argument pos:start="99:20" pos:end="99:76"><expr pos:start="99:20" pos:end="99:76"><ternary pos:start="99:20" pos:end="99:76"><condition pos:start="99:20" pos:end="99:47"><expr pos:start="99:20" pos:end="99:45"><name pos:start="99:20" pos:end="99:45"><name pos:start="99:20" pos:end="99:27">inserted</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:34">cache</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:45">writeback</name></name></expr> ?</condition><then pos:start="99:49" pos:end="99:59"> <expr pos:start="99:49" pos:end="99:59"><literal type="string" pos:start="99:49" pos:end="99:59">"writeback"</literal></expr> </then><else pos:start="99:61" pos:end="99:76">: <expr pos:start="99:63" pos:end="99:76"><literal type="string" pos:start="99:63" pos:end="99:76">"writethrough"</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="101:20" pos:end="101:60"><expr pos:start="101:20" pos:end="101:60"><ternary pos:start="101:20" pos:end="101:60"><condition pos:start="101:20" pos:end="101:44"><expr pos:start="101:20" pos:end="101:42"><name pos:start="101:20" pos:end="101:42"><name pos:start="101:20" pos:end="101:27">inserted</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:34">cache</name><operator pos:start="101:35" pos:end="101:36">-&gt;</operator><name pos:start="101:37" pos:end="101:42">direct</name></name></expr> ?</condition><then pos:start="101:46" pos:end="101:55"> <expr pos:start="101:46" pos:end="101:55"><literal type="string" pos:start="101:46" pos:end="101:55">", direct"</literal></expr> </then><else pos:start="101:57" pos:end="101:60">: <expr pos:start="101:59" pos:end="101:60"><literal type="string" pos:start="101:59" pos:end="101:60">""</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="103:20" pos:end="103:70"><expr pos:start="103:20" pos:end="103:70"><ternary pos:start="103:20" pos:end="103:70"><condition pos:start="103:20" pos:end="103:46"><expr pos:start="103:20" pos:end="103:44"><name pos:start="103:20" pos:end="103:44"><name pos:start="103:20" pos:end="103:27">inserted</name><operator pos:start="103:28" pos:end="103:29">-&gt;</operator><name pos:start="103:30" pos:end="103:34">cache</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:44">no_flush</name></name></expr> ?</condition><then pos:start="103:48" pos:end="103:65"> <expr pos:start="103:48" pos:end="103:65"><literal type="string" pos:start="103:48" pos:end="103:65">", ignore flushes"</literal></expr> </then><else pos:start="103:67" pos:end="103:70">: <expr pos:start="103:69" pos:end="103:70"><literal type="string" pos:start="103:69" pos:end="103:70">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="119:5"><if pos:start="107:5" pos:end="119:5">if <condition pos:start="107:8" pos:end="107:35">(<expr pos:start="107:9" pos:end="107:34"><name pos:start="107:9" pos:end="107:34"><name pos:start="107:9" pos:end="107:16">inserted</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:34">has_backing_file</name></name></expr>)</condition> <block pos:start="107:37" pos:end="119:5">{<block_content pos:start="109:9" pos:end="117:53">

        <expr_stmt pos:start="109:9" pos:end="117:53"><expr pos:start="109:9" pos:end="117:52"><call pos:start="109:9" pos:end="117:52"><name pos:start="109:9" pos:end="109:22">monitor_printf</name><argument_list pos:start="109:23" pos:end="117:52">(<argument pos:start="109:24" pos:end="109:26"><expr pos:start="109:24" pos:end="109:26"><name pos:start="109:24" pos:end="109:26">mon</name></expr></argument>,

                       <argument pos:start="111:24" pos:end="113:53"><expr pos:start="111:24" pos:end="113:53"><literal type="string" pos:start="111:24" pos:end="111:50">"    Backing file:     %s "</literal>

                       <literal type="string" pos:start="113:24" pos:end="113:40">"(chain depth: %"</literal> <name pos:start="113:42" pos:end="113:47">PRId64</name> <literal type="string" pos:start="113:49" pos:end="113:53">")\n"</literal></expr></argument>,

                       <argument pos:start="115:24" pos:end="115:45"><expr pos:start="115:24" pos:end="115:45"><name pos:start="115:24" pos:end="115:45"><name pos:start="115:24" pos:end="115:31">inserted</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:45">backing_file</name></name></expr></argument>,

                       <argument pos:start="117:24" pos:end="117:51"><expr pos:start="117:24" pos:end="117:51"><name pos:start="117:24" pos:end="117:51"><name pos:start="117:24" pos:end="117:31">inserted</name><operator pos:start="117:32" pos:end="117:33">-&gt;</operator><name pos:start="117:34" pos:end="117:51">backing_file_depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="129:5"><if pos:start="123:5" pos:end="129:5">if <condition pos:start="123:8" pos:end="123:70">(<expr pos:start="123:9" pos:end="123:69"><name pos:start="123:9" pos:end="123:31"><name pos:start="123:9" pos:end="123:16">inserted</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:31">detect_zeroes</name></name> <operator pos:start="123:33" pos:end="123:34">!=</operator> <name pos:start="123:36" pos:end="123:69">BLOCKDEV_DETECT_ZEROES_OPTIONS_OFF</name></expr>)</condition> <block pos:start="123:72" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:84">

        <expr_stmt pos:start="125:9" pos:end="127:84"><expr pos:start="125:9" pos:end="127:83"><call pos:start="125:9" pos:end="127:83"><name pos:start="125:9" pos:end="125:22">monitor_printf</name><argument_list pos:start="125:23" pos:end="127:83">(<argument pos:start="125:24" pos:end="125:26"><expr pos:start="125:24" pos:end="125:26"><name pos:start="125:24" pos:end="125:26">mon</name></expr></argument>, <argument pos:start="125:29" pos:end="125:56"><expr pos:start="125:29" pos:end="125:56"><literal type="string" pos:start="125:29" pos:end="125:56">"    Detect zeroes:    %s\n"</literal></expr></argument>,

                       <argument pos:start="127:24" pos:end="127:82"><expr pos:start="127:24" pos:end="127:82"><name pos:start="127:24" pos:end="127:82"><name pos:start="127:24" pos:end="127:57">BlockdevDetectZeroesOptions_lookup</name><index pos:start="127:58" pos:end="127:82">[<expr pos:start="127:59" pos:end="127:81"><name pos:start="127:59" pos:end="127:81"><name pos:start="127:59" pos:end="127:66">inserted</name><operator pos:start="127:67" pos:end="127:68">-&gt;</operator><name pos:start="127:69" pos:end="127:81">detect_zeroes</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="133:5" pos:end="187:5"><if pos:start="133:5" pos:end="187:5">if <condition pos:start="133:8" pos:end="135:65">(<expr pos:start="133:9" pos:end="135:64"><name pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:16">inserted</name><operator pos:start="133:17" pos:end="133:18">-&gt;</operator><name pos:start="133:19" pos:end="133:21">bps</name></name>  <operator pos:start="133:24" pos:end="133:25">||</operator> <name pos:start="133:27" pos:end="133:42"><name pos:start="133:27" pos:end="133:34">inserted</name><operator pos:start="133:35" pos:end="133:36">-&gt;</operator><name pos:start="133:37" pos:end="133:42">bps_rd</name></name>  <operator pos:start="133:45" pos:end="133:46">||</operator> <name pos:start="133:48" pos:end="133:63"><name pos:start="133:48" pos:end="133:55">inserted</name><operator pos:start="133:56" pos:end="133:57">-&gt;</operator><name pos:start="133:58" pos:end="133:63">bps_wr</name></name>  <operator pos:start="133:66" pos:end="133:67">||</operator>

        <name pos:start="135:9" pos:end="135:22"><name pos:start="135:9" pos:end="135:16">inserted</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:22">iops</name></name> <operator pos:start="135:24" pos:end="135:25">||</operator> <name pos:start="135:27" pos:end="135:43"><name pos:start="135:27" pos:end="135:34">inserted</name><operator pos:start="135:35" pos:end="135:36">-&gt;</operator><name pos:start="135:37" pos:end="135:43">iops_rd</name></name> <operator pos:start="135:45" pos:end="135:46">||</operator> <name pos:start="135:48" pos:end="135:64"><name pos:start="135:48" pos:end="135:55">inserted</name><operator pos:start="135:56" pos:end="135:57">-&gt;</operator><name pos:start="135:58" pos:end="135:64">iops_wr</name></name></expr>)</condition>

    <block pos:start="137:5" pos:end="187:5">{<block_content pos:start="139:9" pos:end="185:45">

        <expr_stmt pos:start="139:9" pos:end="185:45"><expr pos:start="139:9" pos:end="185:44"><call pos:start="139:9" pos:end="185:44"><name pos:start="139:9" pos:end="139:22">monitor_printf</name><argument_list pos:start="139:23" pos:end="185:44">(<argument pos:start="139:24" pos:end="139:26"><expr pos:start="139:24" pos:end="139:26"><name pos:start="139:24" pos:end="139:26">mon</name></expr></argument>, <argument pos:start="139:29" pos:end="159:50"><expr pos:start="139:29" pos:end="159:50"><literal type="string" pos:start="139:29" pos:end="139:57">"    I/O throttling:   bps=%"</literal> <name pos:start="139:59" pos:end="139:64">PRId64</name>

                        <literal type="string" pos:start="141:25" pos:end="141:35">" bps_rd=%"</literal> <name pos:start="141:37" pos:end="141:42">PRId64</name>  <literal type="string" pos:start="141:45" pos:end="141:55">" bps_wr=%"</literal> <name pos:start="141:57" pos:end="141:62">PRId64</name>

                        <literal type="string" pos:start="143:25" pos:end="143:36">" bps_max=%"</literal> <name pos:start="143:38" pos:end="143:43">PRId64</name>

                        <literal type="string" pos:start="145:25" pos:end="145:39">" bps_rd_max=%"</literal> <name pos:start="145:41" pos:end="145:46">PRId64</name>

                        <literal type="string" pos:start="147:25" pos:end="147:39">" bps_wr_max=%"</literal> <name pos:start="147:41" pos:end="147:46">PRId64</name>

                        <literal type="string" pos:start="149:25" pos:end="149:33">" iops=%"</literal> <name pos:start="149:35" pos:end="149:40">PRId64</name> <literal type="string" pos:start="149:42" pos:end="149:53">" iops_rd=%"</literal> <name pos:start="149:55" pos:end="149:60">PRId64</name>

                        <literal type="string" pos:start="151:25" pos:end="151:36">" iops_wr=%"</literal> <name pos:start="151:38" pos:end="151:43">PRId64</name>

                        <literal type="string" pos:start="153:25" pos:end="153:37">" iops_max=%"</literal> <name pos:start="153:39" pos:end="153:44">PRId64</name>

                        <literal type="string" pos:start="155:25" pos:end="155:40">" iops_rd_max=%"</literal> <name pos:start="155:42" pos:end="155:47">PRId64</name>

                        <literal type="string" pos:start="157:25" pos:end="157:40">" iops_wr_max=%"</literal> <name pos:start="157:42" pos:end="157:47">PRId64</name>

                        <literal type="string" pos:start="159:25" pos:end="159:38">" iops_size=%"</literal> <name pos:start="159:40" pos:end="159:45">PRId64</name> <literal type="string" pos:start="159:47" pos:end="159:50">"\n"</literal></expr></argument>,

                        <argument pos:start="161:25" pos:end="161:37"><expr pos:start="161:25" pos:end="161:37"><name pos:start="161:25" pos:end="161:37"><name pos:start="161:25" pos:end="161:32">inserted</name><operator pos:start="161:33" pos:end="161:34">-&gt;</operator><name pos:start="161:35" pos:end="161:37">bps</name></name></expr></argument>,

                        <argument pos:start="163:25" pos:end="163:40"><expr pos:start="163:25" pos:end="163:40"><name pos:start="163:25" pos:end="163:40"><name pos:start="163:25" pos:end="163:32">inserted</name><operator pos:start="163:33" pos:end="163:34">-&gt;</operator><name pos:start="163:35" pos:end="163:40">bps_rd</name></name></expr></argument>,

                        <argument pos:start="165:25" pos:end="165:40"><expr pos:start="165:25" pos:end="165:40"><name pos:start="165:25" pos:end="165:40"><name pos:start="165:25" pos:end="165:32">inserted</name><operator pos:start="165:33" pos:end="165:34">-&gt;</operator><name pos:start="165:35" pos:end="165:40">bps_wr</name></name></expr></argument>,

                        <argument pos:start="167:25" pos:end="167:41"><expr pos:start="167:25" pos:end="167:41"><name pos:start="167:25" pos:end="167:41"><name pos:start="167:25" pos:end="167:32">inserted</name><operator pos:start="167:33" pos:end="167:34">-&gt;</operator><name pos:start="167:35" pos:end="167:41">bps_max</name></name></expr></argument>,

                        <argument pos:start="169:25" pos:end="169:44"><expr pos:start="169:25" pos:end="169:44"><name pos:start="169:25" pos:end="169:44"><name pos:start="169:25" pos:end="169:32">inserted</name><operator pos:start="169:33" pos:end="169:34">-&gt;</operator><name pos:start="169:35" pos:end="169:44">bps_rd_max</name></name></expr></argument>,

                        <argument pos:start="171:25" pos:end="171:44"><expr pos:start="171:25" pos:end="171:44"><name pos:start="171:25" pos:end="171:44"><name pos:start="171:25" pos:end="171:32">inserted</name><operator pos:start="171:33" pos:end="171:34">-&gt;</operator><name pos:start="171:35" pos:end="171:44">bps_wr_max</name></name></expr></argument>,

                        <argument pos:start="173:25" pos:end="173:38"><expr pos:start="173:25" pos:end="173:38"><name pos:start="173:25" pos:end="173:38"><name pos:start="173:25" pos:end="173:32">inserted</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:38">iops</name></name></expr></argument>,

                        <argument pos:start="175:25" pos:end="175:41"><expr pos:start="175:25" pos:end="175:41"><name pos:start="175:25" pos:end="175:41"><name pos:start="175:25" pos:end="175:32">inserted</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:41">iops_rd</name></name></expr></argument>,

                        <argument pos:start="177:25" pos:end="177:41"><expr pos:start="177:25" pos:end="177:41"><name pos:start="177:25" pos:end="177:41"><name pos:start="177:25" pos:end="177:32">inserted</name><operator pos:start="177:33" pos:end="177:34">-&gt;</operator><name pos:start="177:35" pos:end="177:41">iops_wr</name></name></expr></argument>,

                        <argument pos:start="179:25" pos:end="179:42"><expr pos:start="179:25" pos:end="179:42"><name pos:start="179:25" pos:end="179:42"><name pos:start="179:25" pos:end="179:32">inserted</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:42">iops_max</name></name></expr></argument>,

                        <argument pos:start="181:25" pos:end="181:45"><expr pos:start="181:25" pos:end="181:45"><name pos:start="181:25" pos:end="181:45"><name pos:start="181:25" pos:end="181:32">inserted</name><operator pos:start="181:33" pos:end="181:34">-&gt;</operator><name pos:start="181:35" pos:end="181:45">iops_rd_max</name></name></expr></argument>,

                        <argument pos:start="183:25" pos:end="183:45"><expr pos:start="183:25" pos:end="183:45"><name pos:start="183:25" pos:end="183:45"><name pos:start="183:25" pos:end="183:32">inserted</name><operator pos:start="183:33" pos:end="183:34">-&gt;</operator><name pos:start="183:35" pos:end="183:45">iops_wr_max</name></name></expr></argument>,

                        <argument pos:start="185:25" pos:end="185:43"><expr pos:start="185:25" pos:end="185:43"><name pos:start="185:25" pos:end="185:43"><name pos:start="185:25" pos:end="185:32">inserted</name><operator pos:start="185:33" pos:end="185:34">-&gt;</operator><name pos:start="185:35" pos:end="185:43">iops_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="191:5" pos:end="191:52">/* TODO: inserted-&gt;image should never be null */</comment>

    <if_stmt pos:start="193:5" pos:end="217:5"><if pos:start="193:5" pos:end="217:5">if <condition pos:start="193:8" pos:end="193:35">(<expr pos:start="193:9" pos:end="193:34"><name pos:start="193:9" pos:end="193:15">verbose</name> <operator pos:start="193:17" pos:end="193:18">&amp;&amp;</operator> <name pos:start="193:20" pos:end="193:34"><name pos:start="193:20" pos:end="193:27">inserted</name><operator pos:start="193:28" pos:end="193:29">-&gt;</operator><name pos:start="193:30" pos:end="193:34">image</name></name></expr>)</condition> <block pos:start="193:37" pos:end="217:5">{<block_content pos:start="195:9" pos:end="215:9">

        <expr_stmt pos:start="195:9" pos:end="195:43"><expr pos:start="195:9" pos:end="195:42"><call pos:start="195:9" pos:end="195:42"><name pos:start="195:9" pos:end="195:22">monitor_printf</name><argument_list pos:start="195:23" pos:end="195:42">(<argument pos:start="195:24" pos:end="195:26"><expr pos:start="195:24" pos:end="195:26"><name pos:start="195:24" pos:end="195:26">mon</name></expr></argument>, <argument pos:start="195:29" pos:end="195:41"><expr pos:start="195:29" pos:end="195:41"><literal type="string" pos:start="195:29" pos:end="195:41">"\nImages:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:37"><expr pos:start="197:9" pos:end="197:36"><name pos:start="197:9" pos:end="197:18">image_info</name> <operator pos:start="197:20" pos:end="197:20">=</operator> <name pos:start="197:22" pos:end="197:36"><name pos:start="197:22" pos:end="197:29">inserted</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:36">image</name></name></expr>;</expr_stmt>

        <while pos:start="199:9" pos:end="215:9">while <condition pos:start="199:15" pos:end="199:17">(<expr pos:start="199:16" pos:end="199:16"><literal type="number" pos:start="199:16" pos:end="199:16">1</literal></expr>)</condition> <block pos:start="199:19" pos:end="215:9">{<block_content pos:start="201:17" pos:end="213:13">

                <expr_stmt pos:start="201:17" pos:end="203:54"><expr pos:start="201:17" pos:end="203:53"><call pos:start="201:17" pos:end="203:53"><name pos:start="201:17" pos:end="201:36">bdrv_image_info_dump</name><argument_list pos:start="201:37" pos:end="203:53">(<argument pos:start="201:38" pos:end="201:69"><expr pos:start="201:38" pos:end="201:69"><operator pos:start="201:38" pos:end="201:38">(</operator><name pos:start="201:39" pos:end="201:54">fprintf_function</name><operator pos:start="201:55" pos:end="201:55">)</operator><name pos:start="201:56" pos:end="201:69">monitor_printf</name></expr></argument>,

                                     <argument pos:start="203:38" pos:end="203:40"><expr pos:start="203:38" pos:end="203:40"><name pos:start="203:38" pos:end="203:40">mon</name></expr></argument>, <argument pos:start="203:43" pos:end="203:52"><expr pos:start="203:43" pos:end="203:52"><name pos:start="203:43" pos:end="203:52">image_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="205:13" pos:end="213:13"><if pos:start="205:13" pos:end="209:13">if <condition pos:start="205:16" pos:end="205:46">(<expr pos:start="205:17" pos:end="205:45"><name pos:start="205:17" pos:end="205:45"><name pos:start="205:17" pos:end="205:26">image_info</name><operator pos:start="205:27" pos:end="205:28">-&gt;</operator><name pos:start="205:29" pos:end="205:45">has_backing_image</name></name></expr>)</condition> <block pos:start="205:48" pos:end="209:13">{<block_content pos:start="207:17" pos:end="207:55">

                <expr_stmt pos:start="207:17" pos:end="207:55"><expr pos:start="207:17" pos:end="207:54"><name pos:start="207:17" pos:end="207:26">image_info</name> <operator pos:start="207:28" pos:end="207:28">=</operator> <name pos:start="207:30" pos:end="207:54"><name pos:start="207:30" pos:end="207:39">image_info</name><operator pos:start="207:40" pos:end="207:41">-&gt;</operator><name pos:start="207:42" pos:end="207:54">backing_image</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="209:15" pos:end="213:13">else <block pos:start="209:20" pos:end="213:13">{<block_content pos:start="211:17" pos:end="211:22">

                <break pos:start="211:17" pos:end="211:22">break;</break>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
