<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/316.c" pos:tabs="8"><function pos:start="1:1" pos:end="319:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">reverse_dc_prediction</name><parameter_list pos:start="1:34" pos:end="7:54">(<parameter pos:start="1:35" pos:end="1:53"><decl pos:start="1:35" pos:end="1:53"><type pos:start="1:35" pos:end="1:53"><name pos:start="1:35" pos:end="1:50">Vp3DecodeContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:52"><decl pos:start="3:35" pos:end="3:52"><type pos:start="3:35" pos:end="3:52"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:52">first_fragment</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:52"><decl pos:start="5:35" pos:end="5:52"><type pos:start="5:35" pos:end="5:52"><name pos:start="5:35" pos:end="5:37">int</name></type> <name pos:start="5:39" pos:end="5:52">fragment_width</name></decl></parameter>,

                                  <parameter pos:start="7:35" pos:end="7:53"><decl pos:start="7:35" pos:end="7:53"><type pos:start="7:35" pos:end="7:53"><name pos:start="7:35" pos:end="7:37">int</name></type> <name pos:start="7:39" pos:end="7:53">fragment_height</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="319:1">{<block_content pos:start="23:5" pos:end="317:5">



<cpp:define pos:start="13:1" pos:end="13:13">#<cpp:directive pos:start="13:2" pos:end="13:7">define</cpp:directive> <cpp:macro pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">PUL</name></cpp:macro> <cpp:value pos:start="13:13" pos:end="13:13">8</cpp:value></cpp:define>

<cpp:define pos:start="15:1" pos:end="15:12">#<cpp:directive pos:start="15:2" pos:end="15:7">define</cpp:directive> <cpp:macro pos:start="15:9" pos:end="15:10"><name pos:start="15:9" pos:end="15:10">PU</name></cpp:macro> <cpp:value pos:start="15:12" pos:end="15:12">4</cpp:value></cpp:define>

<cpp:define pos:start="17:1" pos:end="17:13">#<cpp:directive pos:start="17:2" pos:end="17:7">define</cpp:directive> <cpp:macro pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">PUR</name></cpp:macro> <cpp:value pos:start="17:13" pos:end="17:13">2</cpp:value></cpp:define>

<cpp:define pos:start="19:1" pos:end="19:12">#<cpp:directive pos:start="19:2" pos:end="19:7">define</cpp:directive> <cpp:macro pos:start="19:9" pos:end="19:10"><name pos:start="19:9" pos:end="19:10">PL</name></cpp:macro> <cpp:value pos:start="19:12" pos:end="19:12">1</cpp:value></cpp:define>



    <decl_stmt pos:start="23:5" pos:end="23:13"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">x</name></decl>, <decl pos:start="23:12" pos:end="23:12"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:27"><decl pos:start="25:5" pos:end="25:26"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name> <init pos:start="25:11" pos:end="25:26">= <expr pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:26">first_fragment</name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:20"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:20">predicted_dc</name></decl>;</decl_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:69">/* DC values for the left, up-left, up, and up-right fragments */</comment>

    <decl_stmt pos:start="35:5" pos:end="35:25"><decl pos:start="35:5" pos:end="35:10"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:10">vl</name></decl>, <decl pos:start="35:13" pos:end="35:15"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:13" pos:end="35:15">vul</name></decl>, <decl pos:start="35:18" pos:end="35:19"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:18" pos:end="35:19">vu</name></decl>, <decl pos:start="35:22" pos:end="35:24"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:22" pos:end="35:24">vur</name></decl>;</decl_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:67">/* indexes for the left, up-left, up, and up-right fragments */</comment>

    <decl_stmt pos:start="41:5" pos:end="41:21"><decl pos:start="41:5" pos:end="41:9"><type pos:start="41:5" pos:end="41:7"><name pos:start="41:5" pos:end="41:7">int</name></type> <name pos:start="41:9" pos:end="41:9">l</name></decl>, <decl pos:start="41:12" pos:end="41:13"><type ref="prev" pos:start="41:5" pos:end="41:7"/><name pos:start="41:12" pos:end="41:13">ul</name></decl>, <decl pos:start="41:16" pos:end="41:16"><type ref="prev" pos:start="41:5" pos:end="41:7"/><name pos:start="41:16" pos:end="41:16">u</name></decl>, <decl pos:start="41:19" pos:end="41:20"><type ref="prev" pos:start="41:5" pos:end="41:7"/><name pos:start="41:19" pos:end="41:20">ur</name></decl>;</decl_stmt>



    <comment type="block" pos:start="45:5" pos:end="57:7">/*

     * The 6 fields mean:

     *   0: up-left multiplier

     *   1: up multiplier

     *   2: up-right multiplier

     *   3: left multiplier

     */</comment>

    <decl_stmt pos:start="59:5" pos:end="93:6"><decl pos:start="59:5" pos:end="93:5"><type pos:start="59:5" pos:end="59:20"><specifier pos:start="59:5" pos:end="59:10">static</specifier> <specifier pos:start="59:12" pos:end="59:16">const</specifier> <name pos:start="59:18" pos:end="59:20">int</name></type> <name pos:start="59:22" pos:end="59:47"><name pos:start="59:22" pos:end="59:40">predictor_transform</name><index pos:start="59:41" pos:end="59:44">[<expr pos:start="59:42" pos:end="59:43"><literal type="number" pos:start="59:42" pos:end="59:43">16</literal></expr>]</index><index pos:start="59:45" pos:end="59:47">[<expr pos:start="59:46" pos:end="59:46"><literal type="number" pos:start="59:46" pos:end="59:46">4</literal></expr>]</index></name> <init pos:start="59:49" pos:end="93:5">= <expr pos:start="59:51" pos:end="93:5"><block pos:start="59:51" pos:end="93:5">{

        <expr pos:start="61:9" pos:end="61:25"><block pos:start="61:9" pos:end="61:25">{  <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>,  <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>,  <expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>,  <expr pos:start="61:24" pos:end="61:24"><literal type="number" pos:start="61:24" pos:end="61:24">0</literal></expr>}</block></expr>,

        <expr pos:start="63:9" pos:end="63:25"><block pos:start="63:9" pos:end="63:25">{  <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>,  <expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">0</literal></expr>,  <expr pos:start="63:20" pos:end="63:20"><literal type="number" pos:start="63:20" pos:end="63:20">0</literal></expr>,<expr pos:start="63:22" pos:end="63:24"><literal type="number" pos:start="63:22" pos:end="63:24">128</literal></expr>}</block></expr>,        <comment type="line" pos:start="63:35" pos:end="63:39">// PL</comment>

        <expr pos:start="65:9" pos:end="65:25"><block pos:start="65:9" pos:end="65:25">{  <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>,  <expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>,<expr pos:start="65:18" pos:end="65:20"><literal type="number" pos:start="65:18" pos:end="65:20">128</literal></expr>,  <expr pos:start="65:24" pos:end="65:24"><literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr>}</block></expr>,        <comment type="line" pos:start="65:35" pos:end="65:40">// PUR</comment>

        <expr pos:start="67:9" pos:end="67:25"><block pos:start="67:9" pos:end="67:25">{  <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>,  <expr pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>, <expr pos:start="67:19" pos:end="67:20"><literal type="number" pos:start="67:19" pos:end="67:20">53</literal></expr>, <expr pos:start="67:23" pos:end="67:24"><literal type="number" pos:start="67:23" pos:end="67:24">75</literal></expr>}</block></expr>,        <comment type="line" pos:start="67:35" pos:end="67:43">// PUR|PL</comment>

        <expr pos:start="69:9" pos:end="69:25"><block pos:start="69:9" pos:end="69:25">{  <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>,<expr pos:start="69:14" pos:end="69:16"><literal type="number" pos:start="69:14" pos:end="69:16">128</literal></expr>,  <expr pos:start="69:20" pos:end="69:20"><literal type="number" pos:start="69:20" pos:end="69:20">0</literal></expr>,  <expr pos:start="69:24" pos:end="69:24"><literal type="number" pos:start="69:24" pos:end="69:24">0</literal></expr>}</block></expr>,        <comment type="line" pos:start="69:35" pos:end="69:39">// PU</comment>

        <expr pos:start="71:9" pos:end="71:25"><block pos:start="71:9" pos:end="71:25">{  <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>, <expr pos:start="71:15" pos:end="71:16"><literal type="number" pos:start="71:15" pos:end="71:16">64</literal></expr>,  <expr pos:start="71:20" pos:end="71:20"><literal type="number" pos:start="71:20" pos:end="71:20">0</literal></expr>, <expr pos:start="71:23" pos:end="71:24"><literal type="number" pos:start="71:23" pos:end="71:24">64</literal></expr>}</block></expr>,        <comment type="line" pos:start="71:35" pos:end="71:42">// PU|PL</comment>

        <expr pos:start="73:9" pos:end="73:25"><block pos:start="73:9" pos:end="73:25">{  <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>,<expr pos:start="73:14" pos:end="73:16"><literal type="number" pos:start="73:14" pos:end="73:16">128</literal></expr>,  <expr pos:start="73:20" pos:end="73:20"><literal type="number" pos:start="73:20" pos:end="73:20">0</literal></expr>,  <expr pos:start="73:24" pos:end="73:24"><literal type="number" pos:start="73:24" pos:end="73:24">0</literal></expr>}</block></expr>,        <comment type="line" pos:start="73:35" pos:end="73:43">// PU|PUR</comment>

        <expr pos:start="75:9" pos:end="75:25"><block pos:start="75:9" pos:end="75:25">{  <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>,  <expr pos:start="75:16" pos:end="75:16"><literal type="number" pos:start="75:16" pos:end="75:16">0</literal></expr>, <expr pos:start="75:19" pos:end="75:20"><literal type="number" pos:start="75:19" pos:end="75:20">53</literal></expr>, <expr pos:start="75:23" pos:end="75:24"><literal type="number" pos:start="75:23" pos:end="75:24">75</literal></expr>}</block></expr>,        <comment type="line" pos:start="75:35" pos:end="75:46">// PU|PUR|PL</comment>

        <expr pos:start="77:9" pos:end="77:25"><block pos:start="77:9" pos:end="77:25">{<expr pos:start="77:10" pos:end="77:12"><literal type="number" pos:start="77:10" pos:end="77:12">128</literal></expr>,  <expr pos:start="77:16" pos:end="77:16"><literal type="number" pos:start="77:16" pos:end="77:16">0</literal></expr>,  <expr pos:start="77:20" pos:end="77:20"><literal type="number" pos:start="77:20" pos:end="77:20">0</literal></expr>,  <expr pos:start="77:24" pos:end="77:24"><literal type="number" pos:start="77:24" pos:end="77:24">0</literal></expr>}</block></expr>,        <comment type="line" pos:start="77:35" pos:end="77:40">// PUL</comment>

        <expr pos:start="79:9" pos:end="79:25"><block pos:start="79:9" pos:end="79:25">{  <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>,  <expr pos:start="79:16" pos:end="79:16"><literal type="number" pos:start="79:16" pos:end="79:16">0</literal></expr>,  <expr pos:start="79:20" pos:end="79:20"><literal type="number" pos:start="79:20" pos:end="79:20">0</literal></expr>,<expr pos:start="79:22" pos:end="79:24"><literal type="number" pos:start="79:22" pos:end="79:24">128</literal></expr>}</block></expr>,        <comment type="line" pos:start="79:35" pos:end="79:43">// PUL|PL</comment>

        <expr pos:start="81:9" pos:end="81:25"><block pos:start="81:9" pos:end="81:25">{ <expr pos:start="81:11" pos:end="81:12"><literal type="number" pos:start="81:11" pos:end="81:12">64</literal></expr>,  <expr pos:start="81:16" pos:end="81:16"><literal type="number" pos:start="81:16" pos:end="81:16">0</literal></expr>, <expr pos:start="81:19" pos:end="81:20"><literal type="number" pos:start="81:19" pos:end="81:20">64</literal></expr>,  <expr pos:start="81:24" pos:end="81:24"><literal type="number" pos:start="81:24" pos:end="81:24">0</literal></expr>}</block></expr>,        <comment type="line" pos:start="81:35" pos:end="81:44">// PUL|PUR</comment>

        <expr pos:start="83:9" pos:end="83:25"><block pos:start="83:9" pos:end="83:25">{  <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>,  <expr pos:start="83:16" pos:end="83:16"><literal type="number" pos:start="83:16" pos:end="83:16">0</literal></expr>, <expr pos:start="83:19" pos:end="83:20"><literal type="number" pos:start="83:19" pos:end="83:20">53</literal></expr>, <expr pos:start="83:23" pos:end="83:24"><literal type="number" pos:start="83:23" pos:end="83:24">75</literal></expr>}</block></expr>,        <comment type="line" pos:start="83:35" pos:end="83:47">// PUL|PUR|PL</comment>

        <expr pos:start="85:9" pos:end="85:25"><block pos:start="85:9" pos:end="85:25">{  <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>,<expr pos:start="85:14" pos:end="85:16"><literal type="number" pos:start="85:14" pos:end="85:16">128</literal></expr>,  <expr pos:start="85:20" pos:end="85:20"><literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr>,  <expr pos:start="85:24" pos:end="85:24"><literal type="number" pos:start="85:24" pos:end="85:24">0</literal></expr>}</block></expr>,        <comment type="line" pos:start="85:35" pos:end="85:43">// PUL|PU</comment>

       <expr pos:start="87:8" pos:end="87:25"><block pos:start="87:8" pos:end="87:25">{<expr pos:start="87:9" pos:end="87:12"><operator pos:start="87:9" pos:end="87:9">-</operator><literal type="number" pos:start="87:10" pos:end="87:12">104</literal></expr>,<expr pos:start="87:14" pos:end="87:16"><literal type="number" pos:start="87:14" pos:end="87:16">116</literal></expr>,  <expr pos:start="87:20" pos:end="87:20"><literal type="number" pos:start="87:20" pos:end="87:20">0</literal></expr>,<expr pos:start="87:22" pos:end="87:24"><literal type="number" pos:start="87:22" pos:end="87:24">116</literal></expr>}</block></expr>,        <comment type="line" pos:start="87:35" pos:end="87:46">// PUL|PU|PL</comment>

        <expr pos:start="89:9" pos:end="89:25"><block pos:start="89:9" pos:end="89:25">{ <expr pos:start="89:11" pos:end="89:12"><literal type="number" pos:start="89:11" pos:end="89:12">24</literal></expr>, <expr pos:start="89:15" pos:end="89:16"><literal type="number" pos:start="89:15" pos:end="89:16">80</literal></expr>, <expr pos:start="89:19" pos:end="89:20"><literal type="number" pos:start="89:19" pos:end="89:20">24</literal></expr>,  <expr pos:start="89:24" pos:end="89:24"><literal type="number" pos:start="89:24" pos:end="89:24">0</literal></expr>}</block></expr>,        <comment type="line" pos:start="89:35" pos:end="89:47">// PUL|PU|PUR</comment>

       <expr pos:start="91:8" pos:end="91:25"><block pos:start="91:8" pos:end="91:25">{<expr pos:start="91:9" pos:end="91:12"><operator pos:start="91:9" pos:end="91:9">-</operator><literal type="number" pos:start="91:10" pos:end="91:12">104</literal></expr>,<expr pos:start="91:14" pos:end="91:16"><literal type="number" pos:start="91:14" pos:end="91:16">116</literal></expr>,  <expr pos:start="91:20" pos:end="91:20"><literal type="number" pos:start="91:20" pos:end="91:20">0</literal></expr>,<expr pos:start="91:22" pos:end="91:24"><literal type="number" pos:start="91:22" pos:end="91:24">116</literal></expr>}</block></expr>         <comment type="line" pos:start="91:35" pos:end="91:50">// PUL|PU|PUR|PL</comment>

    }</block></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="97:5" pos:end="107:58">/* This table shows which types of blocks can use other blocks for

     * prediction. For example, INTRA is the only mode in this table to

     * have a frame number of 0. That means INTRA blocks can only predict

     * from other INTRA blocks. There are 2 golden frame coding types;

     * blocks encoding in these modes can only predict from other blocks

     * that were encoded with these 1 of these 2 modes. */</comment>

    <decl_stmt pos:start="109:5" pos:end="127:6"><decl pos:start="109:5" pos:end="127:5"><type pos:start="109:5" pos:end="109:30"><specifier pos:start="109:5" pos:end="109:10">static</specifier> <specifier pos:start="109:12" pos:end="109:16">const</specifier> <name pos:start="109:18" pos:end="109:25">unsigned</name> <name pos:start="109:27" pos:end="109:30">char</name></type> <name pos:start="109:32" pos:end="109:50"><name pos:start="109:32" pos:end="109:47">compatible_frame</name><index pos:start="109:48" pos:end="109:50">[<expr pos:start="109:49" pos:end="109:49"><literal type="number" pos:start="109:49" pos:end="109:49">8</literal></expr>]</index></name> <init pos:start="109:52" pos:end="127:5">= <expr pos:start="109:54" pos:end="127:5"><block pos:start="109:54" pos:end="127:5">{

        <expr pos:start="111:9" pos:end="111:9"><literal type="number" pos:start="111:9" pos:end="111:9">1</literal></expr>,    <comment type="block" pos:start="111:15" pos:end="111:36">/* MODE_INTER_NO_MV */</comment>

        <expr pos:start="113:9" pos:end="113:9"><literal type="number" pos:start="113:9" pos:end="113:9">0</literal></expr>,    <comment type="block" pos:start="113:15" pos:end="113:30">/* MODE_INTRA */</comment>

        <expr pos:start="115:9" pos:end="115:9"><literal type="number" pos:start="115:9" pos:end="115:9">1</literal></expr>,    <comment type="block" pos:start="115:15" pos:end="115:38">/* MODE_INTER_PLUS_MV */</comment>

        <expr pos:start="117:9" pos:end="117:9"><literal type="number" pos:start="117:9" pos:end="117:9">1</literal></expr>,    <comment type="block" pos:start="117:15" pos:end="117:38">/* MODE_INTER_LAST_MV */</comment>

        <expr pos:start="119:9" pos:end="119:9"><literal type="number" pos:start="119:9" pos:end="119:9">1</literal></expr>,    <comment type="block" pos:start="119:15" pos:end="119:39">/* MODE_INTER_PRIOR_MV */</comment>

        <expr pos:start="121:9" pos:end="121:9"><literal type="number" pos:start="121:9" pos:end="121:9">2</literal></expr>,    <comment type="block" pos:start="121:15" pos:end="121:37">/* MODE_USING_GOLDEN */</comment>

        <expr pos:start="123:9" pos:end="123:9"><literal type="number" pos:start="123:9" pos:end="123:9">2</literal></expr>,    <comment type="block" pos:start="123:15" pos:end="123:34">/* MODE_GOLDEN_MV */</comment>

        <expr pos:start="125:9" pos:end="125:9"><literal type="number" pos:start="125:9" pos:end="125:9">1</literal></expr>     <comment type="block" pos:start="125:15" pos:end="125:38">/* MODE_INTER_FOUR_MV */</comment>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="129:5" pos:end="129:27"><decl pos:start="129:5" pos:end="129:26"><type pos:start="129:5" pos:end="129:7"><name pos:start="129:5" pos:end="129:7">int</name></type> <name pos:start="129:9" pos:end="129:26">current_frame_type</name></decl>;</decl_stmt>



    <comment type="block" pos:start="133:5" pos:end="133:68">/* there is a last DC predictor for each of the 3 frame types */</comment>

    <decl_stmt pos:start="135:5" pos:end="135:21"><decl pos:start="135:5" pos:end="135:20"><type pos:start="135:5" pos:end="135:9"><name pos:start="135:5" pos:end="135:9">short</name></type> <name pos:start="135:11" pos:end="135:20"><name pos:start="135:11" pos:end="135:17">last_dc</name><index pos:start="135:18" pos:end="135:20">[<expr pos:start="135:19" pos:end="135:19"><literal type="number" pos:start="135:19" pos:end="135:19">3</literal></expr>]</index></name></decl>;</decl_stmt>



    <decl_stmt pos:start="139:5" pos:end="139:22"><decl pos:start="139:5" pos:end="139:21"><type pos:start="139:5" pos:end="139:7"><name pos:start="139:5" pos:end="139:7">int</name></type> <name pos:start="139:9" pos:end="139:17">transform</name> <init pos:start="139:19" pos:end="139:21">= <expr pos:start="139:21" pos:end="139:21"><literal type="number" pos:start="139:21" pos:end="139:21">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:28"><expr pos:start="143:5" pos:end="143:27"><name pos:start="143:5" pos:end="143:7">vul</name> <operator pos:start="143:9" pos:end="143:9">=</operator> <name pos:start="143:11" pos:end="143:12">vu</name> <operator pos:start="143:14" pos:end="143:14">=</operator> <name pos:start="143:16" pos:end="143:18">vur</name> <operator pos:start="143:20" pos:end="143:20">=</operator> <name pos:start="143:22" pos:end="143:23">vl</name> <operator pos:start="143:25" pos:end="143:25">=</operator> <literal type="number" pos:start="143:27" pos:end="143:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:45"><expr pos:start="145:5" pos:end="145:44"><name pos:start="145:5" pos:end="145:14"><name pos:start="145:5" pos:end="145:11">last_dc</name><index pos:start="145:12" pos:end="145:14">[<expr pos:start="145:13" pos:end="145:13"><literal type="number" pos:start="145:13" pos:end="145:13">0</literal></expr>]</index></name> <operator pos:start="145:16" pos:end="145:16">=</operator> <name pos:start="145:18" pos:end="145:27"><name pos:start="145:18" pos:end="145:24">last_dc</name><index pos:start="145:25" pos:end="145:27">[<expr pos:start="145:26" pos:end="145:26"><literal type="number" pos:start="145:26" pos:end="145:26">1</literal></expr>]</index></name> <operator pos:start="145:29" pos:end="145:29">=</operator> <name pos:start="145:31" pos:end="145:40"><name pos:start="145:31" pos:end="145:37">last_dc</name><index pos:start="145:38" pos:end="145:40">[<expr pos:start="145:39" pos:end="145:39"><literal type="number" pos:start="145:39" pos:end="145:39">2</literal></expr>]</index></name> <operator pos:start="145:42" pos:end="145:42">=</operator> <literal type="number" pos:start="145:44" pos:end="145:44">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:34">/* for each fragment row... */</comment>

    <for pos:start="151:5" pos:end="317:5">for <control pos:start="151:9" pos:end="151:41">(<init pos:start="151:10" pos:end="151:15"><expr pos:start="151:10" pos:end="151:14"><name pos:start="151:10" pos:end="151:10">y</name> <operator pos:start="151:12" pos:end="151:12">=</operator> <literal type="number" pos:start="151:14" pos:end="151:14">0</literal></expr>;</init> <condition pos:start="151:17" pos:end="151:36"><expr pos:start="151:17" pos:end="151:35"><name pos:start="151:17" pos:end="151:17">y</name> <operator pos:start="151:19" pos:end="151:19">&lt;</operator> <name pos:start="151:21" pos:end="151:35">fragment_height</name></expr>;</condition> <incr pos:start="151:38" pos:end="151:40"><expr pos:start="151:38" pos:end="151:40"><name pos:start="151:38" pos:end="151:38">y</name><operator pos:start="151:39" pos:end="151:40">++</operator></expr></incr>)</control> <block pos:start="151:43" pos:end="317:5">{<block_content pos:start="157:9" pos:end="315:9">



        <comment type="block" pos:start="155:9" pos:end="155:43">/* for each fragment in a row... */</comment>

        <for pos:start="157:9" pos:end="315:9">for <control pos:start="157:13" pos:end="157:49">(<init pos:start="157:14" pos:end="157:19"><expr pos:start="157:14" pos:end="157:18"><name pos:start="157:14" pos:end="157:14">x</name> <operator pos:start="157:16" pos:end="157:16">=</operator> <literal type="number" pos:start="157:18" pos:end="157:18">0</literal></expr>;</init> <condition pos:start="157:21" pos:end="157:39"><expr pos:start="157:21" pos:end="157:38"><name pos:start="157:21" pos:end="157:21">x</name> <operator pos:start="157:23" pos:end="157:23">&lt;</operator> <name pos:start="157:25" pos:end="157:38">fragment_width</name></expr>;</condition> <incr pos:start="157:41" pos:end="157:48"><expr pos:start="157:41" pos:end="157:43"><name pos:start="157:41" pos:end="157:41">x</name><operator pos:start="157:42" pos:end="157:43">++</operator></expr><operator pos:start="157:44" pos:end="157:44">,</operator> <expr pos:start="157:46" pos:end="157:48"><name pos:start="157:46" pos:end="157:46">i</name><operator pos:start="157:47" pos:end="157:48">++</operator></expr></incr>)</control> <block pos:start="157:51" pos:end="315:9">{<block_content pos:start="163:13" pos:end="313:13">



            <comment type="block" pos:start="161:13" pos:end="161:60">/* reverse prediction if this block was coded */</comment>

            <if_stmt pos:start="163:13" pos:end="313:13"><if pos:start="163:13" pos:end="313:13">if <condition pos:start="163:16" pos:end="163:63">(<expr pos:start="163:17" pos:end="163:62"><name pos:start="163:17" pos:end="163:35"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:32">all_fragments</name><index pos:start="163:33" pos:end="163:35">[<expr pos:start="163:34" pos:end="163:34"><name pos:start="163:34" pos:end="163:34">i</name></expr>]</index></name><operator pos:start="163:36" pos:end="163:36">.</operator><name pos:start="163:37" pos:end="163:49">coding_method</name> <operator pos:start="163:51" pos:end="163:52">!=</operator> <name pos:start="163:54" pos:end="163:62">MODE_COPY</name></expr>)</condition> <block pos:start="163:65" pos:end="313:13">{<block_content pos:start="167:17" pos:end="311:17">



                <expr_stmt pos:start="167:17" pos:end="169:72"><expr pos:start="167:17" pos:end="169:71"><name pos:start="167:17" pos:end="167:34">current_frame_type</name> <operator pos:start="167:36" pos:end="167:36">=</operator>

                    <name pos:start="169:21" pos:end="169:71"><name pos:start="169:21" pos:end="169:36">compatible_frame</name><index pos:start="169:37" pos:end="169:71">[<expr pos:start="169:38" pos:end="169:70"><name pos:start="169:38" pos:end="169:56"><name pos:start="169:38" pos:end="169:38">s</name><operator pos:start="169:39" pos:end="169:40">-&gt;</operator><name pos:start="169:41" pos:end="169:53">all_fragments</name><index pos:start="169:54" pos:end="169:56">[<expr pos:start="169:55" pos:end="169:55"><name pos:start="169:55" pos:end="169:55">i</name></expr>]</index></name><operator pos:start="169:57" pos:end="169:57">.</operator><name pos:start="169:58" pos:end="169:70">coding_method</name></expr>]</index></name></expr>;</expr_stmt>



                <expr_stmt pos:start="173:17" pos:end="173:29"><expr pos:start="173:17" pos:end="173:28"><name pos:start="173:17" pos:end="173:25">transform</name><operator pos:start="173:26" pos:end="173:26">=</operator> <literal type="number" pos:start="173:28" pos:end="173:28">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="175:17" pos:end="185:17"><if pos:start="175:17" pos:end="185:17">if<condition pos:start="175:19" pos:end="175:21">(<expr pos:start="175:20" pos:end="175:20"><name pos:start="175:20" pos:end="175:20">x</name></expr>)</condition><block pos:start="175:22" pos:end="185:17">{<block_content pos:start="177:21" pos:end="183:40">

                    <expr_stmt pos:start="177:21" pos:end="177:27"><expr pos:start="177:21" pos:end="177:26"><name pos:start="177:21" pos:end="177:21">l</name><operator pos:start="177:22" pos:end="177:22">=</operator> <name pos:start="177:24" pos:end="177:24">i</name><operator pos:start="177:25" pos:end="177:25">-</operator><literal type="number" pos:start="177:26" pos:end="177:26">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="179:21" pos:end="179:37"><expr pos:start="179:21" pos:end="179:36"><name pos:start="179:21" pos:end="179:22">vl</name> <operator pos:start="179:24" pos:end="179:24">=</operator> <call pos:start="179:26" pos:end="179:36"><name pos:start="179:26" pos:end="179:33">DC_COEFF</name><argument_list pos:start="179:34" pos:end="179:36">(<argument pos:start="179:35" pos:end="179:35"><expr pos:start="179:35" pos:end="179:35"><name pos:start="179:35" pos:end="179:35">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="181:21" pos:end="183:40"><if pos:start="181:21" pos:end="183:40">if<condition pos:start="181:23" pos:end="181:61">(<expr pos:start="181:24" pos:end="181:60"><call pos:start="181:24" pos:end="181:37"><name pos:start="181:24" pos:end="181:34">FRAME_CODED</name><argument_list pos:start="181:35" pos:end="181:37">(<argument pos:start="181:36" pos:end="181:36"><expr pos:start="181:36" pos:end="181:36"><name pos:start="181:36" pos:end="181:36">l</name></expr></argument>)</argument_list></call> <operator pos:start="181:39" pos:end="181:40">&amp;&amp;</operator> <call pos:start="181:42" pos:end="181:60"><name pos:start="181:42" pos:end="181:57">COMPATIBLE_FRAME</name><argument_list pos:start="181:58" pos:end="181:60">(<argument pos:start="181:59" pos:end="181:59"><expr pos:start="181:59" pos:end="181:59"><name pos:start="181:59" pos:end="181:59">l</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="183:25" pos:end="183:40"><block_content pos:start="183:25" pos:end="183:40">

                        <expr_stmt pos:start="183:25" pos:end="183:40"><expr pos:start="183:25" pos:end="183:39"><name pos:start="183:25" pos:end="183:33">transform</name> <operator pos:start="183:35" pos:end="183:36">|=</operator> <name pos:start="183:38" pos:end="183:39">PL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="187:17" pos:end="221:17"><if pos:start="187:17" pos:end="221:17">if<condition pos:start="187:19" pos:end="187:21">(<expr pos:start="187:20" pos:end="187:20"><name pos:start="187:20" pos:end="187:20">y</name></expr>)</condition><block pos:start="187:22" pos:end="221:17">{<block_content pos:start="189:21" pos:end="219:21">

                    <expr_stmt pos:start="189:21" pos:end="189:40"><expr pos:start="189:21" pos:end="189:39"><name pos:start="189:21" pos:end="189:21">u</name><operator pos:start="189:22" pos:end="189:22">=</operator> <name pos:start="189:24" pos:end="189:24">i</name><operator pos:start="189:25" pos:end="189:25">-</operator><name pos:start="189:26" pos:end="189:39">fragment_width</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:37"><expr pos:start="191:21" pos:end="191:36"><name pos:start="191:21" pos:end="191:22">vu</name> <operator pos:start="191:24" pos:end="191:24">=</operator> <call pos:start="191:26" pos:end="191:36"><name pos:start="191:26" pos:end="191:33">DC_COEFF</name><argument_list pos:start="191:34" pos:end="191:36">(<argument pos:start="191:35" pos:end="191:35"><expr pos:start="191:35" pos:end="191:35"><name pos:start="191:35" pos:end="191:35">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="193:21" pos:end="195:40"><if pos:start="193:21" pos:end="195:40">if<condition pos:start="193:23" pos:end="193:61">(<expr pos:start="193:24" pos:end="193:60"><call pos:start="193:24" pos:end="193:37"><name pos:start="193:24" pos:end="193:34">FRAME_CODED</name><argument_list pos:start="193:35" pos:end="193:37">(<argument pos:start="193:36" pos:end="193:36"><expr pos:start="193:36" pos:end="193:36"><name pos:start="193:36" pos:end="193:36">u</name></expr></argument>)</argument_list></call> <operator pos:start="193:39" pos:end="193:40">&amp;&amp;</operator> <call pos:start="193:42" pos:end="193:60"><name pos:start="193:42" pos:end="193:57">COMPATIBLE_FRAME</name><argument_list pos:start="193:58" pos:end="193:60">(<argument pos:start="193:59" pos:end="193:59"><expr pos:start="193:59" pos:end="193:59"><name pos:start="193:59" pos:end="193:59">u</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="195:25" pos:end="195:40"><block_content pos:start="195:25" pos:end="195:40">

                        <expr_stmt pos:start="195:25" pos:end="195:40"><expr pos:start="195:25" pos:end="195:39"><name pos:start="195:25" pos:end="195:33">transform</name> <operator pos:start="195:35" pos:end="195:36">|=</operator> <name pos:start="195:38" pos:end="195:39">PU</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="197:21" pos:end="207:21"><if pos:start="197:21" pos:end="207:21">if<condition pos:start="197:23" pos:end="197:25">(<expr pos:start="197:24" pos:end="197:24"><name pos:start="197:24" pos:end="197:24">x</name></expr>)</condition><block pos:start="197:26" pos:end="207:21">{<block_content pos:start="199:25" pos:end="205:45">

                        <expr_stmt pos:start="199:25" pos:end="199:47"><expr pos:start="199:25" pos:end="199:46"><name pos:start="199:25" pos:end="199:26">ul</name><operator pos:start="199:27" pos:end="199:27">=</operator> <name pos:start="199:29" pos:end="199:29">i</name><operator pos:start="199:30" pos:end="199:30">-</operator><name pos:start="199:31" pos:end="199:44">fragment_width</name><operator pos:start="199:45" pos:end="199:45">-</operator><literal type="number" pos:start="199:46" pos:end="199:46">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="201:25" pos:end="201:43"><expr pos:start="201:25" pos:end="201:42"><name pos:start="201:25" pos:end="201:27">vul</name> <operator pos:start="201:29" pos:end="201:29">=</operator> <call pos:start="201:31" pos:end="201:42"><name pos:start="201:31" pos:end="201:38">DC_COEFF</name><argument_list pos:start="201:39" pos:end="201:42">(<argument pos:start="201:40" pos:end="201:41"><expr pos:start="201:40" pos:end="201:41"><name pos:start="201:40" pos:end="201:41">ul</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="203:25" pos:end="205:45"><if pos:start="203:25" pos:end="205:45">if<condition pos:start="203:27" pos:end="203:67">(<expr pos:start="203:28" pos:end="203:66"><call pos:start="203:28" pos:end="203:42"><name pos:start="203:28" pos:end="203:38">FRAME_CODED</name><argument_list pos:start="203:39" pos:end="203:42">(<argument pos:start="203:40" pos:end="203:41"><expr pos:start="203:40" pos:end="203:41"><name pos:start="203:40" pos:end="203:41">ul</name></expr></argument>)</argument_list></call> <operator pos:start="203:44" pos:end="203:45">&amp;&amp;</operator> <call pos:start="203:47" pos:end="203:66"><name pos:start="203:47" pos:end="203:62">COMPATIBLE_FRAME</name><argument_list pos:start="203:63" pos:end="203:66">(<argument pos:start="203:64" pos:end="203:65"><expr pos:start="203:64" pos:end="203:65"><name pos:start="203:64" pos:end="203:65">ul</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="205:29" pos:end="205:45"><block_content pos:start="205:29" pos:end="205:45">

                            <expr_stmt pos:start="205:29" pos:end="205:45"><expr pos:start="205:29" pos:end="205:44"><name pos:start="205:29" pos:end="205:37">transform</name> <operator pos:start="205:39" pos:end="205:40">|=</operator> <name pos:start="205:42" pos:end="205:44">PUL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="209:21" pos:end="219:21"><if pos:start="209:21" pos:end="219:21">if<condition pos:start="209:23" pos:end="209:46">(<expr pos:start="209:24" pos:end="209:45"><name pos:start="209:24" pos:end="209:24">x</name> <operator pos:start="209:26" pos:end="209:26">+</operator> <literal type="number" pos:start="209:28" pos:end="209:28">1</literal> <operator pos:start="209:30" pos:end="209:30">&lt;</operator> <name pos:start="209:32" pos:end="209:45">fragment_width</name></expr>)</condition><block pos:start="209:47" pos:end="219:21">{<block_content pos:start="211:25" pos:end="217:45">

                        <expr_stmt pos:start="211:25" pos:end="211:47"><expr pos:start="211:25" pos:end="211:46"><name pos:start="211:25" pos:end="211:26">ur</name><operator pos:start="211:27" pos:end="211:27">=</operator> <name pos:start="211:29" pos:end="211:29">i</name><operator pos:start="211:30" pos:end="211:30">-</operator><name pos:start="211:31" pos:end="211:44">fragment_width</name><operator pos:start="211:45" pos:end="211:45">+</operator><literal type="number" pos:start="211:46" pos:end="211:46">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="213:25" pos:end="213:43"><expr pos:start="213:25" pos:end="213:42"><name pos:start="213:25" pos:end="213:27">vur</name> <operator pos:start="213:29" pos:end="213:29">=</operator> <call pos:start="213:31" pos:end="213:42"><name pos:start="213:31" pos:end="213:38">DC_COEFF</name><argument_list pos:start="213:39" pos:end="213:42">(<argument pos:start="213:40" pos:end="213:41"><expr pos:start="213:40" pos:end="213:41"><name pos:start="213:40" pos:end="213:41">ur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="215:25" pos:end="217:45"><if pos:start="215:25" pos:end="217:45">if<condition pos:start="215:27" pos:end="215:67">(<expr pos:start="215:28" pos:end="215:66"><call pos:start="215:28" pos:end="215:42"><name pos:start="215:28" pos:end="215:38">FRAME_CODED</name><argument_list pos:start="215:39" pos:end="215:42">(<argument pos:start="215:40" pos:end="215:41"><expr pos:start="215:40" pos:end="215:41"><name pos:start="215:40" pos:end="215:41">ur</name></expr></argument>)</argument_list></call> <operator pos:start="215:44" pos:end="215:45">&amp;&amp;</operator> <call pos:start="215:47" pos:end="215:66"><name pos:start="215:47" pos:end="215:62">COMPATIBLE_FRAME</name><argument_list pos:start="215:63" pos:end="215:66">(<argument pos:start="215:64" pos:end="215:65"><expr pos:start="215:64" pos:end="215:65"><name pos:start="215:64" pos:end="215:65">ur</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="217:29" pos:end="217:45"><block_content pos:start="217:29" pos:end="217:45">

                            <expr_stmt pos:start="217:29" pos:end="217:45"><expr pos:start="217:29" pos:end="217:44"><name pos:start="217:29" pos:end="217:37">transform</name> <operator pos:start="217:39" pos:end="217:40">|=</operator> <name pos:start="217:42" pos:end="217:44">PUR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="225:17" pos:end="277:17"><if pos:start="225:17" pos:end="235:17">if <condition pos:start="225:20" pos:end="225:35">(<expr pos:start="225:21" pos:end="225:34"><name pos:start="225:21" pos:end="225:29">transform</name> <operator pos:start="225:31" pos:end="225:32">==</operator> <literal type="number" pos:start="225:34" pos:end="225:34">0</literal></expr>)</condition> <block pos:start="225:37" pos:end="235:17">{<block_content pos:start="233:21" pos:end="233:63">



                    <comment type="block" pos:start="229:21" pos:end="231:34">/* if there were no fragments to predict from, use last

                     * DC saved */</comment>

                    <expr_stmt pos:start="233:21" pos:end="233:63"><expr pos:start="233:21" pos:end="233:62"><name pos:start="233:21" pos:end="233:32">predicted_dc</name> <operator pos:start="233:34" pos:end="233:34">=</operator> <name pos:start="233:36" pos:end="233:62"><name pos:start="233:36" pos:end="233:42">last_dc</name><index pos:start="233:43" pos:end="233:62">[<expr pos:start="233:44" pos:end="233:61"><name pos:start="233:44" pos:end="233:61">current_frame_type</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="235:19" pos:end="277:17">else <block pos:start="235:24" pos:end="277:17">{<block_content pos:start="241:21" pos:end="275:21">



                    <comment type="block" pos:start="239:21" pos:end="239:67">/* apply the appropriate predictor transform */</comment>

                    <expr_stmt pos:start="241:21" pos:end="249:65"><expr pos:start="241:21" pos:end="249:64"><name pos:start="241:21" pos:end="241:32">predicted_dc</name> <operator pos:start="241:34" pos:end="241:34">=</operator>

                        <operator pos:start="243:25" pos:end="243:25">(</operator><name pos:start="243:26" pos:end="243:58"><name pos:start="243:26" pos:end="243:44">predictor_transform</name><index pos:start="243:45" pos:end="243:55">[<expr pos:start="243:46" pos:end="243:54"><name pos:start="243:46" pos:end="243:54">transform</name></expr>]</index><index pos:start="243:56" pos:end="243:58">[<expr pos:start="243:57" pos:end="243:57"><literal type="number" pos:start="243:57" pos:end="243:57">0</literal></expr>]</index></name> <operator pos:start="243:60" pos:end="243:60">*</operator> <name pos:start="243:62" pos:end="243:64">vul</name><operator pos:start="243:65" pos:end="243:65">)</operator> <operator pos:start="243:67" pos:end="243:67">+</operator>

                        <operator pos:start="245:25" pos:end="245:25">(</operator><name pos:start="245:26" pos:end="245:58"><name pos:start="245:26" pos:end="245:44">predictor_transform</name><index pos:start="245:45" pos:end="245:55">[<expr pos:start="245:46" pos:end="245:54"><name pos:start="245:46" pos:end="245:54">transform</name></expr>]</index><index pos:start="245:56" pos:end="245:58">[<expr pos:start="245:57" pos:end="245:57"><literal type="number" pos:start="245:57" pos:end="245:57">1</literal></expr>]</index></name> <operator pos:start="245:60" pos:end="245:60">*</operator> <name pos:start="245:62" pos:end="245:63">vu</name><operator pos:start="245:64" pos:end="245:64">)</operator> <operator pos:start="245:66" pos:end="245:66">+</operator>

                        <operator pos:start="247:25" pos:end="247:25">(</operator><name pos:start="247:26" pos:end="247:58"><name pos:start="247:26" pos:end="247:44">predictor_transform</name><index pos:start="247:45" pos:end="247:55">[<expr pos:start="247:46" pos:end="247:54"><name pos:start="247:46" pos:end="247:54">transform</name></expr>]</index><index pos:start="247:56" pos:end="247:58">[<expr pos:start="247:57" pos:end="247:57"><literal type="number" pos:start="247:57" pos:end="247:57">2</literal></expr>]</index></name> <operator pos:start="247:60" pos:end="247:60">*</operator> <name pos:start="247:62" pos:end="247:64">vur</name><operator pos:start="247:65" pos:end="247:65">)</operator> <operator pos:start="247:67" pos:end="247:67">+</operator>

                        <operator pos:start="249:25" pos:end="249:25">(</operator><name pos:start="249:26" pos:end="249:58"><name pos:start="249:26" pos:end="249:44">predictor_transform</name><index pos:start="249:45" pos:end="249:55">[<expr pos:start="249:46" pos:end="249:54"><name pos:start="249:46" pos:end="249:54">transform</name></expr>]</index><index pos:start="249:56" pos:end="249:58">[<expr pos:start="249:57" pos:end="249:57"><literal type="number" pos:start="249:57" pos:end="249:57">3</literal></expr>]</index></name> <operator pos:start="249:60" pos:end="249:60">*</operator> <name pos:start="249:62" pos:end="249:63">vl</name><operator pos:start="249:64" pos:end="249:64">)</operator></expr>;</expr_stmt>



                    <expr_stmt pos:start="253:21" pos:end="253:40"><expr pos:start="253:21" pos:end="253:39"><name pos:start="253:21" pos:end="253:32">predicted_dc</name> <operator pos:start="253:34" pos:end="253:35">/=</operator> <literal type="number" pos:start="253:37" pos:end="253:39">128</literal></expr>;</expr_stmt>



                    <comment type="block" pos:start="257:21" pos:end="259:48">/* check for outranging on the [ul u l] and

                     * [ul u ur l] predictors */</comment>

                    <if_stmt pos:start="261:21" pos:end="275:21"><if pos:start="261:21" pos:end="275:21">if <condition pos:start="261:24" pos:end="261:63">(<expr pos:start="261:25" pos:end="261:62"><operator pos:start="261:25" pos:end="261:25">(</operator><name pos:start="261:26" pos:end="261:34">transform</name> <operator pos:start="261:36" pos:end="261:37">==</operator> <literal type="number" pos:start="261:39" pos:end="261:40">13</literal><operator pos:start="261:41" pos:end="261:41">)</operator> <operator pos:start="261:43" pos:end="261:44">||</operator> <operator pos:start="261:46" pos:end="261:46">(</operator><name pos:start="261:47" pos:end="261:55">transform</name> <operator pos:start="261:57" pos:end="261:58">==</operator> <literal type="number" pos:start="261:60" pos:end="261:61">15</literal><operator pos:start="261:62" pos:end="261:62">)</operator></expr>)</condition> <block pos:start="261:65" pos:end="275:21">{<block_content pos:start="263:25" pos:end="273:47">

                        <if_stmt pos:start="263:25" pos:end="273:47"><if pos:start="263:25" pos:end="265:46">if <condition pos:start="263:28" pos:end="263:59">(<expr pos:start="263:29" pos:end="263:58"><call pos:start="263:29" pos:end="263:52"><name pos:start="263:29" pos:end="263:33">FFABS</name><argument_list pos:start="263:34" pos:end="263:52">(<argument pos:start="263:35" pos:end="263:51"><expr pos:start="263:35" pos:end="263:51"><name pos:start="263:35" pos:end="263:46">predicted_dc</name> <operator pos:start="263:48" pos:end="263:48">-</operator> <name pos:start="263:50" pos:end="263:51">vu</name></expr></argument>)</argument_list></call> <operator pos:start="263:54" pos:end="263:54">&gt;</operator> <literal type="number" pos:start="263:56" pos:end="263:58">128</literal></expr>)</condition><block type="pseudo" pos:start="265:29" pos:end="265:46"><block_content pos:start="265:29" pos:end="265:46">

                            <expr_stmt pos:start="265:29" pos:end="265:46"><expr pos:start="265:29" pos:end="265:45"><name pos:start="265:29" pos:end="265:40">predicted_dc</name> <operator pos:start="265:42" pos:end="265:42">=</operator> <name pos:start="265:44" pos:end="265:45">vu</name></expr>;</expr_stmt></block_content></block></if>

                        <if type="elseif" pos:start="267:25" pos:end="269:46">else if <condition pos:start="267:33" pos:end="267:64">(<expr pos:start="267:34" pos:end="267:63"><call pos:start="267:34" pos:end="267:57"><name pos:start="267:34" pos:end="267:38">FFABS</name><argument_list pos:start="267:39" pos:end="267:57">(<argument pos:start="267:40" pos:end="267:56"><expr pos:start="267:40" pos:end="267:56"><name pos:start="267:40" pos:end="267:51">predicted_dc</name> <operator pos:start="267:53" pos:end="267:53">-</operator> <name pos:start="267:55" pos:end="267:56">vl</name></expr></argument>)</argument_list></call> <operator pos:start="267:59" pos:end="267:59">&gt;</operator> <literal type="number" pos:start="267:61" pos:end="267:63">128</literal></expr>)</condition><block type="pseudo" pos:start="269:29" pos:end="269:46"><block_content pos:start="269:29" pos:end="269:46">

                            <expr_stmt pos:start="269:29" pos:end="269:46"><expr pos:start="269:29" pos:end="269:45"><name pos:start="269:29" pos:end="269:40">predicted_dc</name> <operator pos:start="269:42" pos:end="269:42">=</operator> <name pos:start="269:44" pos:end="269:45">vl</name></expr>;</expr_stmt></block_content></block></if>

                        <if type="elseif" pos:start="271:25" pos:end="273:47">else if <condition pos:start="271:33" pos:end="271:65">(<expr pos:start="271:34" pos:end="271:64"><call pos:start="271:34" pos:end="271:58"><name pos:start="271:34" pos:end="271:38">FFABS</name><argument_list pos:start="271:39" pos:end="271:58">(<argument pos:start="271:40" pos:end="271:57"><expr pos:start="271:40" pos:end="271:57"><name pos:start="271:40" pos:end="271:51">predicted_dc</name> <operator pos:start="271:53" pos:end="271:53">-</operator> <name pos:start="271:55" pos:end="271:57">vul</name></expr></argument>)</argument_list></call> <operator pos:start="271:60" pos:end="271:60">&gt;</operator> <literal type="number" pos:start="271:62" pos:end="271:64">128</literal></expr>)</condition><block type="pseudo" pos:start="273:29" pos:end="273:47"><block_content pos:start="273:29" pos:end="273:47">

                            <expr_stmt pos:start="273:29" pos:end="273:47"><expr pos:start="273:29" pos:end="273:46"><name pos:start="273:29" pos:end="273:40">predicted_dc</name> <operator pos:start="273:42" pos:end="273:42">=</operator> <name pos:start="273:44" pos:end="273:46">vul</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>



                <comment type="block" pos:start="281:17" pos:end="281:55">/* at long last, apply the predictor */</comment>

                <if_stmt pos:start="283:17" pos:end="293:17"><if pos:start="283:17" pos:end="293:17">if<condition pos:start="283:19" pos:end="283:38">(<expr pos:start="283:20" pos:end="283:37"><name pos:start="283:20" pos:end="283:31"><name pos:start="283:20" pos:end="283:20">s</name><operator pos:start="283:21" pos:end="283:22">-&gt;</operator><name pos:start="283:23" pos:end="283:28">coeffs</name><index pos:start="283:29" pos:end="283:31">[<expr pos:start="283:30" pos:end="283:30"><name pos:start="283:30" pos:end="283:30">i</name></expr>]</index></name><operator pos:start="283:32" pos:end="283:32">.</operator><name pos:start="283:33" pos:end="283:37">index</name></expr>)</condition><block pos:start="283:39" pos:end="293:17">{<block_content pos:start="285:21" pos:end="291:55">

                    <expr_stmt pos:start="285:21" pos:end="285:49"><expr pos:start="285:21" pos:end="285:48"><operator pos:start="285:21" pos:end="285:21">*</operator><name pos:start="285:22" pos:end="285:34"><name pos:start="285:22" pos:end="285:22">s</name><operator pos:start="285:23" pos:end="285:24">-&gt;</operator><name pos:start="285:25" pos:end="285:34">next_coeff</name></name><operator pos:start="285:35" pos:end="285:35">=</operator> <name pos:start="285:37" pos:end="285:48"><name pos:start="285:37" pos:end="285:37">s</name><operator pos:start="285:38" pos:end="285:39">-&gt;</operator><name pos:start="285:40" pos:end="285:45">coeffs</name><index pos:start="285:46" pos:end="285:48">[<expr pos:start="285:47" pos:end="285:47"><name pos:start="285:47" pos:end="285:47">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="287:21" pos:end="287:41"><expr pos:start="287:21" pos:end="287:40"><name pos:start="287:21" pos:end="287:32"><name pos:start="287:21" pos:end="287:21">s</name><operator pos:start="287:22" pos:end="287:23">-&gt;</operator><name pos:start="287:24" pos:end="287:29">coeffs</name><index pos:start="287:30" pos:end="287:32">[<expr pos:start="287:31" pos:end="287:31"><name pos:start="287:31" pos:end="287:31">i</name></expr>]</index></name><operator pos:start="287:33" pos:end="287:33">.</operator><name pos:start="287:34" pos:end="287:38">index</name><operator pos:start="287:39" pos:end="287:39">=</operator><literal type="number" pos:start="287:40" pos:end="287:40">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="289:21" pos:end="289:41"><expr pos:start="289:21" pos:end="289:40"><name pos:start="289:21" pos:end="289:32"><name pos:start="289:21" pos:end="289:21">s</name><operator pos:start="289:22" pos:end="289:23">-&gt;</operator><name pos:start="289:24" pos:end="289:29">coeffs</name><index pos:start="289:30" pos:end="289:32">[<expr pos:start="289:31" pos:end="289:31"><name pos:start="289:31" pos:end="289:31">i</name></expr>]</index></name><operator pos:start="289:33" pos:end="289:33">.</operator><name pos:start="289:34" pos:end="289:38">coeff</name><operator pos:start="289:39" pos:end="289:39">=</operator><literal type="number" pos:start="289:40" pos:end="289:40">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="291:21" pos:end="291:55"><expr pos:start="291:21" pos:end="291:54"><name pos:start="291:21" pos:end="291:32"><name pos:start="291:21" pos:end="291:21">s</name><operator pos:start="291:22" pos:end="291:23">-&gt;</operator><name pos:start="291:24" pos:end="291:29">coeffs</name><index pos:start="291:30" pos:end="291:32">[<expr pos:start="291:31" pos:end="291:31"><name pos:start="291:31" pos:end="291:31">i</name></expr>]</index></name><operator pos:start="291:33" pos:end="291:33">.</operator><name pos:start="291:34" pos:end="291:37">next</name><operator pos:start="291:38" pos:end="291:38">=</operator> <name pos:start="291:40" pos:end="291:52"><name pos:start="291:40" pos:end="291:40">s</name><operator pos:start="291:41" pos:end="291:42">-&gt;</operator><name pos:start="291:43" pos:end="291:52">next_coeff</name></name><operator pos:start="291:53" pos:end="291:54">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:51"><expr pos:start="295:17" pos:end="295:50"><name pos:start="295:17" pos:end="295:28"><name pos:start="295:17" pos:end="295:17">s</name><operator pos:start="295:18" pos:end="295:19">-&gt;</operator><name pos:start="295:20" pos:end="295:25">coeffs</name><index pos:start="295:26" pos:end="295:28">[<expr pos:start="295:27" pos:end="295:27"><name pos:start="295:27" pos:end="295:27">i</name></expr>]</index></name><operator pos:start="295:29" pos:end="295:29">.</operator><name pos:start="295:30" pos:end="295:34">coeff</name> <operator pos:start="295:36" pos:end="295:37">+=</operator> <name pos:start="295:39" pos:end="295:50">predicted_dc</name></expr>;</expr_stmt>

                <comment type="block" pos:start="297:17" pos:end="297:33">/* save the DC */</comment>

                <expr_stmt pos:start="299:17" pos:end="299:58"><expr pos:start="299:17" pos:end="299:57"><name pos:start="299:17" pos:end="299:43"><name pos:start="299:17" pos:end="299:23">last_dc</name><index pos:start="299:24" pos:end="299:43">[<expr pos:start="299:25" pos:end="299:42"><name pos:start="299:25" pos:end="299:42">current_frame_type</name></expr>]</index></name> <operator pos:start="299:45" pos:end="299:45">=</operator> <call pos:start="299:47" pos:end="299:57"><name pos:start="299:47" pos:end="299:54">DC_COEFF</name><argument_list pos:start="299:55" pos:end="299:57">(<argument pos:start="299:56" pos:end="299:56"><expr pos:start="299:56" pos:end="299:56"><name pos:start="299:56" pos:end="299:56">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="301:17" pos:end="311:17"><if pos:start="301:17" pos:end="311:17">if<condition pos:start="301:19" pos:end="301:60">(<expr pos:start="301:20" pos:end="301:59"><call pos:start="301:20" pos:end="301:30"><name pos:start="301:20" pos:end="301:27">DC_COEFF</name><argument_list pos:start="301:28" pos:end="301:30">(<argument pos:start="301:29" pos:end="301:29"><expr pos:start="301:29" pos:end="301:29"><name pos:start="301:29" pos:end="301:29">i</name></expr></argument>)</argument_list></call> <operator pos:start="301:32" pos:end="301:33">&amp;&amp;</operator> <operator pos:start="301:35" pos:end="301:35">!</operator><operator pos:start="301:36" pos:end="301:36">(</operator><name pos:start="301:37" pos:end="301:54"><name pos:start="301:37" pos:end="301:37">s</name><operator pos:start="301:38" pos:end="301:39">-&gt;</operator><name pos:start="301:40" pos:end="301:51">coeff_counts</name><index pos:start="301:52" pos:end="301:54">[<expr pos:start="301:53" pos:end="301:53"><name pos:start="301:53" pos:end="301:53">i</name></expr>]</index></name><operator pos:start="301:55" pos:end="301:55">&amp;</operator><literal type="number" pos:start="301:56" pos:end="301:58">127</literal><operator pos:start="301:59" pos:end="301:59">)</operator></expr>)</condition><block pos:start="301:61" pos:end="311:17">{<block_content pos:start="303:21" pos:end="309:49">

                    <expr_stmt pos:start="303:21" pos:end="303:44"><expr pos:start="303:21" pos:end="303:43"><name pos:start="303:21" pos:end="303:38"><name pos:start="303:21" pos:end="303:21">s</name><operator pos:start="303:22" pos:end="303:23">-&gt;</operator><name pos:start="303:24" pos:end="303:35">coeff_counts</name><index pos:start="303:36" pos:end="303:38">[<expr pos:start="303:37" pos:end="303:37"><name pos:start="303:37" pos:end="303:37">i</name></expr>]</index></name><operator pos:start="303:39" pos:end="303:39">=</operator> <literal type="number" pos:start="303:41" pos:end="303:43">129</literal></expr>;</expr_stmt>

<comment type="line" pos:start="305:1" pos:end="305:68">//                    s-&gt;all_fragments[i].next_coeff= s-&gt;next_coeff;</comment>

                    <expr_stmt pos:start="307:21" pos:end="307:53"><expr pos:start="307:21" pos:end="307:52"><name pos:start="307:21" pos:end="307:32"><name pos:start="307:21" pos:end="307:21">s</name><operator pos:start="307:22" pos:end="307:23">-&gt;</operator><name pos:start="307:24" pos:end="307:29">coeffs</name><index pos:start="307:30" pos:end="307:32">[<expr pos:start="307:31" pos:end="307:31"><name pos:start="307:31" pos:end="307:31">i</name></expr>]</index></name><operator pos:start="307:33" pos:end="307:33">.</operator><name pos:start="307:34" pos:end="307:37">next</name><operator pos:start="307:38" pos:end="307:38">=</operator> <name pos:start="307:40" pos:end="307:52"><name pos:start="307:40" pos:end="307:40">s</name><operator pos:start="307:41" pos:end="307:42">-&gt;</operator><name pos:start="307:43" pos:end="307:52">next_coeff</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="309:21" pos:end="309:49"><expr pos:start="309:21" pos:end="309:48"><operator pos:start="309:21" pos:end="309:21">(</operator><name pos:start="309:22" pos:end="309:34"><name pos:start="309:22" pos:end="309:22">s</name><operator pos:start="309:23" pos:end="309:24">-&gt;</operator><name pos:start="309:25" pos:end="309:34">next_coeff</name></name><operator pos:start="309:35" pos:end="309:36">++</operator><operator pos:start="309:37" pos:end="309:37">)</operator><operator pos:start="309:38" pos:end="309:39">-&gt;</operator><name pos:start="309:40" pos:end="309:43">next</name><operator pos:start="309:44" pos:end="309:44">=</operator><name pos:start="309:45" pos:end="309:48">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
