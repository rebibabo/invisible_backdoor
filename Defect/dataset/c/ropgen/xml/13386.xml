<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13386.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">sctp_write</name><parameter_list pos:start="1:22" pos:end="1:66">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">URLContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">h</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">buf</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:65"><decl pos:start="1:58" pos:end="1:65"><type pos:start="1:58" pos:end="1:65"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:65">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:41">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SCTPContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">h</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:41">(<expr pos:start="11:9" pos:end="11:40"><operator pos:start="11:9" pos:end="11:9">!</operator><operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:18"><name pos:start="11:11" pos:end="11:11">h</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:18">flags</name></name> <operator pos:start="11:20" pos:end="11:20">&amp;</operator> <name pos:start="11:22" pos:end="11:39">AVIO_FLAG_NONBLOCK</name><operator pos:start="11:40" pos:end="11:40">)</operator></expr>)</condition> <block pos:start="11:43" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:23">

        <expr_stmt pos:start="13:9" pos:end="13:37"><expr pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:36"><name pos:start="13:15" pos:end="13:26">sctp_wait_fd</name><argument_list pos:start="13:27" pos:end="13:36">(<argument pos:start="13:28" pos:end="13:32"><expr pos:start="13:28" pos:end="13:32"><name pos:start="13:28" pos:end="13:32"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:32">fd</name></name></expr></argument>, <argument pos:start="13:35" pos:end="13:35"><expr pos:start="13:35" pos:end="13:35"><literal type="number" pos:start="13:35" pos:end="13:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="17:23"><if pos:start="15:9" pos:end="17:23">if <condition pos:start="15:12" pos:end="15:20">(<expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:15">ret</name> <operator pos:start="15:17" pos:end="15:17">&lt;</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:23"><block_content pos:start="17:13" pos:end="17:23">

            <return pos:start="17:13" pos:end="17:23">return <expr pos:start="17:20" pos:end="17:22"><name pos:start="17:20" pos:end="17:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="39:40"><if pos:start="23:5" pos:end="37:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:22">max_streams</name></name></expr>)</condition> <block pos:start="23:25" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:69">

        <comment type="block" pos:start="25:9" pos:end="25:66">/*StreamId is introduced as a 2byte code into the stream*/</comment>

        <decl_stmt pos:start="27:9" pos:end="27:44"><decl pos:start="27:9" pos:end="27:43"><type pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:14">struct</name> <name pos:start="27:16" pos:end="27:30">sctp_sndrcvinfo</name></name></type> <name pos:start="27:32" pos:end="27:35">info</name> <init pos:start="27:37" pos:end="27:43">= <expr pos:start="27:39" pos:end="27:43"><block pos:start="27:39" pos:end="27:43">{ <expr pos:start="27:41" pos:end="27:41"><literal type="number" pos:start="27:41" pos:end="27:41">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:51"><expr pos:start="29:9" pos:end="29:50"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:12">info</name><operator pos:start="29:13" pos:end="29:13">.</operator><name pos:start="29:14" pos:end="29:25">sinfo_stream</name></name>           <operator pos:start="29:37" pos:end="29:37">=</operator> <call pos:start="29:39" pos:end="29:50"><name pos:start="29:39" pos:end="29:45">AV_RB16</name><argument_list pos:start="29:46" pos:end="29:50">(<argument pos:start="29:47" pos:end="29:49"><expr pos:start="29:47" pos:end="29:49"><name pos:start="29:47" pos:end="29:49">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:20"><if pos:start="31:9" pos:end="33:20">if <condition pos:start="31:12" pos:end="31:47">(<expr pos:start="31:13" pos:end="31:46"><name pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:16">info</name><operator pos:start="31:17" pos:end="31:17">.</operator><name pos:start="31:18" pos:end="31:29">sinfo_stream</name></name> <operator pos:start="31:31" pos:end="31:31">&gt;</operator> <name pos:start="31:33" pos:end="31:46"><name pos:start="31:33" pos:end="31:33">s</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:46">max_streams</name></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:20"><block_content pos:start="33:13" pos:end="33:20">

            <expr_stmt pos:start="33:13" pos:end="33:20"><expr pos:start="33:13" pos:end="33:19"><call pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:17">abort</name><argument_list pos:start="33:18" pos:end="33:19">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:69"><expr pos:start="35:9" pos:end="35:68"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:68"><name pos:start="35:15" pos:end="35:26">ff_sctp_send</name><argument_list pos:start="35:27" pos:end="35:68">(<argument pos:start="35:28" pos:end="35:32"><expr pos:start="35:28" pos:end="35:32"><name pos:start="35:28" pos:end="35:32"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:32">fd</name></name></expr></argument>, <argument pos:start="35:35" pos:end="35:41"><expr pos:start="35:35" pos:end="35:41"><name pos:start="35:35" pos:end="35:37">buf</name> <operator pos:start="35:39" pos:end="35:39">+</operator> <literal type="number" pos:start="35:41" pos:end="35:41">2</literal></expr></argument>, <argument pos:start="35:44" pos:end="35:51"><expr pos:start="35:44" pos:end="35:51"><name pos:start="35:44" pos:end="35:47">size</name> <operator pos:start="35:49" pos:end="35:49">-</operator> <literal type="number" pos:start="35:51" pos:end="35:51">2</literal></expr></argument>, <argument pos:start="35:54" pos:end="35:58"><expr pos:start="35:54" pos:end="35:58"><operator pos:start="35:54" pos:end="35:54">&amp;</operator><name pos:start="35:55" pos:end="35:58">info</name></expr></argument>, <argument pos:start="35:61" pos:end="35:67"><expr pos:start="35:61" pos:end="35:67"><name pos:start="35:61" pos:end="35:67">MSG_EOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="39:40">else<block type="pseudo" pos:start="39:9" pos:end="39:40"><block_content pos:start="39:9" pos:end="39:40">

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:39"><name pos:start="39:15" pos:end="39:18">send</name><argument_list pos:start="39:19" pos:end="39:39">(<argument pos:start="39:20" pos:end="39:24"><expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:20">s</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:24">fd</name></name></expr></argument>, <argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">buf</name></expr></argument>, <argument pos:start="39:32" pos:end="39:35"><expr pos:start="39:32" pos:end="39:35"><name pos:start="39:32" pos:end="39:35">size</name></expr></argument>, <argument pos:start="39:38" pos:end="39:38"><expr pos:start="39:38" pos:end="39:38"><literal type="number" pos:start="39:38" pos:end="39:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="43:5" pos:end="43:41">return <expr pos:start="43:12" pos:end="43:40"><ternary pos:start="43:12" pos:end="43:40"><condition pos:start="43:12" pos:end="43:20"><expr pos:start="43:12" pos:end="43:18"><name pos:start="43:12" pos:end="43:14">ret</name> <operator pos:start="43:16" pos:end="43:16">&lt;</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr> ?</condition><then pos:start="43:22" pos:end="43:34"> <expr pos:start="43:22" pos:end="43:34"><call pos:start="43:22" pos:end="43:34"><name pos:start="43:22" pos:end="43:32">ff_neterrno</name><argument_list pos:start="43:33" pos:end="43:34">()</argument_list></call></expr> </then><else pos:start="43:36" pos:end="43:40">: <expr pos:start="43:38" pos:end="43:40"><name pos:start="43:38" pos:end="43:40">ret</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
