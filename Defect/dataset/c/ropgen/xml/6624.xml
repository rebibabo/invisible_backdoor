<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6624.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:29">futex_wake</name><parameter_list pos:start="1:30" pos:end="1:51">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:39">QemuEvent</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">ev</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:50"><decl pos:start="1:46" pos:end="1:50"><type pos:start="1:46" pos:end="1:50"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:50">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="6:5" pos:end="14:5">


    <if_stmt pos:start="6:5" pos:end="14:5"><if pos:start="6:5" pos:end="10:5">if <condition pos:start="6:8" pos:end="6:15">(<expr pos:start="6:9" pos:end="6:14"><name pos:start="6:9" pos:end="6:9">n</name> <operator pos:start="6:11" pos:end="6:12">==</operator> <literal type="number" pos:start="6:14" pos:end="6:14">1</literal></expr>)</condition> <block pos:start="6:17" pos:end="10:5">{<block_content pos:start="8:9" pos:end="8:39">

        <expr_stmt pos:start="8:9" pos:end="8:39"><expr pos:start="8:9" pos:end="8:38"><call pos:start="8:9" pos:end="8:38"><name pos:start="8:9" pos:end="8:27">pthread_cond_signal</name><argument_list pos:start="8:28" pos:end="8:38">(<argument pos:start="8:29" pos:end="8:37"><expr pos:start="8:29" pos:end="8:37"><operator pos:start="8:29" pos:end="8:29">&amp;</operator><name pos:start="8:30" pos:end="8:37"><name pos:start="8:30" pos:end="8:31">ev</name><operator pos:start="8:32" pos:end="8:33">-&gt;</operator><name pos:start="8:34" pos:end="8:37">cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="10:7" pos:end="14:5">else <block pos:start="10:12" pos:end="14:5">{<block_content pos:start="12:9" pos:end="12:42">

        <expr_stmt pos:start="12:9" pos:end="12:42"><expr pos:start="12:9" pos:end="12:41"><call pos:start="12:9" pos:end="12:41"><name pos:start="12:9" pos:end="12:30">pthread_cond_broadcast</name><argument_list pos:start="12:31" pos:end="12:41">(<argument pos:start="12:32" pos:end="12:40"><expr pos:start="12:32" pos:end="12:40"><operator pos:start="12:32" pos:end="12:32">&amp;</operator><name pos:start="12:33" pos:end="12:40"><name pos:start="12:33" pos:end="12:34">ev</name><operator pos:start="12:35" pos:end="12:36">-&gt;</operator><name pos:start="12:37" pos:end="12:40">cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>


</block_content>}</block></function></unit>
