<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25403.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:5"><name pos:start="1:1" pos:end="1:5">int32</name></type> <name pos:start="1:7" pos:end="1:37">floatx80_to_int32_round_to_zero</name><parameter_list pos:start="1:38" pos:end="1:64">( <parameter pos:start="1:40" pos:end="1:62"><decl pos:start="1:40" pos:end="1:62"><type pos:start="1:40" pos:end="1:49"><name pos:start="1:40" pos:end="1:47">floatx80</name> <name pos:start="1:49" pos:end="1:49">a</name></type> <name pos:start="1:51" pos:end="1:62">STATUS_PARAM</name></decl></parameter> )</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">flag</name></type> <name pos:start="5:10" pos:end="5:14">aSign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">int32</name></type> <name pos:start="7:11" pos:end="7:14">aExp</name></decl>, <decl pos:start="7:17" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:17" pos:end="7:26">shiftCount</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:17">aSig</name></decl>, <decl pos:start="9:20" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:20" pos:end="9:28">savedASig</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">int32</name></type> <name pos:start="11:11" pos:end="11:11">z</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:8">aSig</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:35"><name pos:start="15:12" pos:end="15:30">extractFloatx80Frac</name><argument_list pos:start="15:31" pos:end="15:35">( <argument pos:start="15:33" pos:end="15:33"><expr pos:start="15:33" pos:end="15:33"><name pos:start="15:33" pos:end="15:33">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:8">aExp</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:34"><name pos:start="17:12" pos:end="17:29">extractFloatx80Exp</name><argument_list pos:start="17:30" pos:end="17:34">( <argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:9">aSign</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:36"><name pos:start="19:13" pos:end="19:31">extractFloatx80Sign</name><argument_list pos:start="19:32" pos:end="19:36">( <argument pos:start="19:34" pos:end="19:34"><expr pos:start="19:34" pos:end="19:34"><name pos:start="19:34" pos:end="19:34">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="35:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:24">( <expr pos:start="21:10" pos:end="21:22"><literal type="number" pos:start="21:10" pos:end="21:15">0x401E</literal> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <name pos:start="21:19" pos:end="21:22">aExp</name></expr> )</condition> <block pos:start="21:26" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:21">

        <if_stmt pos:start="23:9" pos:end="23:70"><if pos:start="23:9" pos:end="23:70">if <condition pos:start="23:12" pos:end="23:59">( <expr pos:start="23:14" pos:end="23:57"><operator pos:start="23:14" pos:end="23:14">(</operator> <name pos:start="23:16" pos:end="23:19">aExp</name> <operator pos:start="23:21" pos:end="23:22">==</operator> <literal type="number" pos:start="23:24" pos:end="23:29">0x7FFF</literal> <operator pos:start="23:31" pos:end="23:31">)</operator> <operator pos:start="23:33" pos:end="23:34">&amp;&amp;</operator> <operator pos:start="23:36" pos:end="23:36">(</operator><name pos:start="23:37" pos:end="23:44">uint64_t</name><operator pos:start="23:45" pos:end="23:45">)</operator> <operator pos:start="23:47" pos:end="23:47">(</operator> <name pos:start="23:49" pos:end="23:52">aSig</name><operator pos:start="23:53" pos:end="23:54">&lt;&lt;</operator><literal type="number" pos:start="23:55" pos:end="23:55">1</literal> <operator pos:start="23:57" pos:end="23:57">)</operator></expr> )</condition><block type="pseudo" pos:start="23:61" pos:end="23:70"><block_content pos:start="23:61" pos:end="23:70"> <expr_stmt pos:start="23:61" pos:end="23:70"><expr pos:start="23:61" pos:end="23:69"><name pos:start="23:61" pos:end="23:65">aSign</name> <operator pos:start="23:67" pos:end="23:67">=</operator> <literal type="number" pos:start="23:69" pos:end="23:69">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <goto pos:start="25:9" pos:end="25:21">goto <name pos:start="25:14" pos:end="25:20">invalid</name>;</goto>

    </block_content>}</block></if>

    <if type="elseif" pos:start="29:5" pos:end="35:5">else if <condition pos:start="29:13" pos:end="29:29">( <expr pos:start="29:15" pos:end="29:27"><name pos:start="29:15" pos:end="29:18">aExp</name> <operator pos:start="29:20" pos:end="29:20">&lt;</operator> <literal type="number" pos:start="29:22" pos:end="29:27">0x3FFF</literal></expr> )</condition> <block pos:start="29:31" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:17">

        <if_stmt pos:start="31:9" pos:end="31:80"><if pos:start="31:9" pos:end="31:80">if <condition pos:start="31:12" pos:end="31:27">( <expr pos:start="31:14" pos:end="31:25"><name pos:start="31:14" pos:end="31:17">aExp</name> <operator pos:start="31:19" pos:end="31:20">||</operator> <name pos:start="31:22" pos:end="31:25">aSig</name></expr> )</condition><block type="pseudo" pos:start="31:29" pos:end="31:80"><block_content pos:start="31:29" pos:end="31:80"> <expr_stmt pos:start="31:29" pos:end="31:80"><expr pos:start="31:29" pos:end="31:79"><call pos:start="31:29" pos:end="31:57"><name pos:start="31:29" pos:end="31:34">STATUS</name><argument_list pos:start="31:35" pos:end="31:57">(<argument pos:start="31:36" pos:end="31:56"><expr pos:start="31:36" pos:end="31:56"><name pos:start="31:36" pos:end="31:56">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="31:59" pos:end="31:60">|=</operator> <name pos:start="31:62" pos:end="31:79">float_flag_inexact</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:31"><expr pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:14">shiftCount</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:25">0x403E</literal> <operator pos:start="37:25" pos:end="37:25">-</operator> <name pos:start="37:27" pos:end="37:30">aExp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:21"><expr pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:13">savedASig</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:20">aSig</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:24"><expr pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:8">aSig</name> <operator pos:start="41:10" pos:end="41:12">&gt;&gt;=</operator> <name pos:start="41:14" pos:end="41:23">shiftCount</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:13"><expr pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:5">z</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <name pos:start="43:9" pos:end="43:12">aSig</name></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="45:25"><if pos:start="45:5" pos:end="45:25">if <condition pos:start="45:8" pos:end="45:16">( <expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:14">aSign</name></expr> )</condition><block type="pseudo" pos:start="45:18" pos:end="45:25"><block_content pos:start="45:18" pos:end="45:25"> <expr_stmt pos:start="45:18" pos:end="45:25"><expr pos:start="45:18" pos:end="45:24"><name pos:start="45:18" pos:end="45:18">z</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <operator pos:start="45:22" pos:end="45:22">-</operator> <name pos:start="45:24" pos:end="45:24">z</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:28">( <expr pos:start="47:10" pos:end="47:26"><operator pos:start="47:10" pos:end="47:10">(</operator> <name pos:start="47:12" pos:end="47:12">z</name> <operator pos:start="47:14" pos:end="47:14">&lt;</operator> <literal type="number" pos:start="47:16" pos:end="47:16">0</literal> <operator pos:start="47:18" pos:end="47:18">)</operator> <operator pos:start="47:20" pos:end="47:20">^</operator> <name pos:start="47:22" pos:end="47:26">aSign</name></expr> )</condition> <block pos:start="47:30" pos:end="55:5">{<block_content pos:start="49:2" pos:end="53:57">

 <label pos:start="49:2" pos:end="49:9"><name pos:start="49:2" pos:end="49:8">invalid</name>:</label>

        <macro pos:start="51:9" pos:end="51:51"><name pos:start="51:9" pos:end="51:19">float_raise</name><argument_list pos:start="51:20" pos:end="51:51">( <argument pos:start="51:22" pos:end="51:50">float_flag_invalid STATUS_VAR</argument>)</argument_list></macro><empty_stmt pos:start="51:52" pos:end="51:52">;</empty_stmt>

        <return pos:start="53:9" pos:end="53:57">return <expr pos:start="53:16" pos:end="53:56"><ternary pos:start="53:16" pos:end="53:56"><condition pos:start="53:16" pos:end="53:22"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20">aSign</name></expr> ?</condition><then pos:start="53:24" pos:end="53:43"> <expr pos:start="53:24" pos:end="53:43"><operator pos:start="53:24" pos:end="53:24">(</operator><name pos:start="53:25" pos:end="53:31">int32_t</name><operator pos:start="53:32" pos:end="53:32">)</operator> <literal type="number" pos:start="53:34" pos:end="53:43">0x80000000</literal></expr> </then><else pos:start="53:45" pos:end="53:56">: <expr pos:start="53:47" pos:end="53:56"><literal type="number" pos:start="53:47" pos:end="53:56">0x7FFFFFFF</literal></expr></else></ternary></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:44">( <expr pos:start="57:10" pos:end="57:42"><operator pos:start="57:10" pos:end="57:10">(</operator> <name pos:start="57:12" pos:end="57:15">aSig</name><operator pos:start="57:16" pos:end="57:17">&lt;&lt;</operator><name pos:start="57:18" pos:end="57:27">shiftCount</name> <operator pos:start="57:29" pos:end="57:29">)</operator> <operator pos:start="57:31" pos:end="57:32">!=</operator> <name pos:start="57:34" pos:end="57:42">savedASig</name></expr> )</condition> <block pos:start="57:46" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:60">

        <expr_stmt pos:start="59:9" pos:end="59:60"><expr pos:start="59:9" pos:end="59:59"><call pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:14">STATUS</name><argument_list pos:start="59:15" pos:end="59:37">(<argument pos:start="59:16" pos:end="59:36"><expr pos:start="59:16" pos:end="59:36"><name pos:start="59:16" pos:end="59:36">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="59:39" pos:end="59:40">|=</operator> <name pos:start="59:42" pos:end="59:59">float_flag_inexact</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><name pos:start="63:12" pos:end="63:12">z</name></expr>;</return>



</block_content>}</block></function>
</unit>
