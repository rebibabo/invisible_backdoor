<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1910.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mux_proc_byte</name><parameter_list pos:start="1:25" pos:end="1:68">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:40">CharDriverState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">chr</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:56">MuxDriver</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">d</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:67"><decl pos:start="1:62" pos:end="1:67"><type pos:start="1:62" pos:end="1:67"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:67">ch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <if_stmt pos:start="5:5" pos:end="87:5"><if pos:start="5:5" pos:end="77:5">if <condition pos:start="5:8" pos:end="5:27">(<expr pos:start="5:9" pos:end="5:26"><name pos:start="5:9" pos:end="5:26"><name pos:start="5:9" pos:end="5:9">d</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:26">term_got_escape</name></name></expr>)</condition> <block pos:start="5:29" pos:end="77:5">{<block_content pos:start="7:9" pos:end="75:9">

        <expr_stmt pos:start="7:9" pos:end="7:31"><expr pos:start="7:9" pos:end="7:30"><name pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:9">d</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:26">term_got_escape</name></name> <operator pos:start="7:28" pos:end="7:28">=</operator> <literal type="number" pos:start="7:30" pos:end="7:30">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="9:9" pos:end="11:27"><if pos:start="9:9" pos:end="11:27">if <condition pos:start="9:12" pos:end="9:35">(<expr pos:start="9:13" pos:end="9:34"><name pos:start="9:13" pos:end="9:14">ch</name> <operator pos:start="9:16" pos:end="9:17">==</operator> <name pos:start="9:19" pos:end="9:34">term_escape_char</name></expr>)</condition><block type="pseudo" pos:start="11:13" pos:end="11:27"><block_content pos:start="11:13" pos:end="11:27">

            <goto pos:start="11:13" pos:end="11:27">goto <name pos:start="11:18" pos:end="11:26">send_char</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="13:9" pos:end="75:9">switch<condition pos:start="13:15" pos:end="13:18">(<expr pos:start="13:16" pos:end="13:17"><name pos:start="13:16" pos:end="13:17">ch</name></expr>)</condition> <block pos:start="13:20" pos:end="75:9">{<block_content pos:start="15:9" pos:end="73:18">

        <case pos:start="15:9" pos:end="15:17">case <expr pos:start="15:14" pos:end="15:16"><literal type="char" pos:start="15:14" pos:end="15:16">'?'</literal></expr>:</case>

        <case pos:start="17:9" pos:end="17:17">case <expr pos:start="17:14" pos:end="17:16"><literal type="char" pos:start="17:14" pos:end="17:16">'h'</literal></expr>:</case>

            <expr_stmt pos:start="19:13" pos:end="19:32"><expr pos:start="19:13" pos:end="19:31"><call pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:26">mux_print_help</name><argument_list pos:start="19:27" pos:end="19:31">(<argument pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:30">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="21:13" pos:end="21:18">break;</break>

        <case pos:start="23:9" pos:end="23:17">case <expr pos:start="23:14" pos:end="23:16"><literal type="char" pos:start="23:14" pos:end="23:16">'x'</literal></expr>:</case>

            <block pos:start="25:13" pos:end="35:13">{<block_content pos:start="27:18" pos:end="33:23">

                 <decl_stmt pos:start="27:18" pos:end="27:60"><decl pos:start="27:18" pos:end="27:59"><type pos:start="27:18" pos:end="27:29"><specifier pos:start="27:18" pos:end="27:22">const</specifier> <name pos:start="27:24" pos:end="27:27">char</name> <modifier pos:start="27:29" pos:end="27:29">*</modifier></type><name pos:start="27:30" pos:end="27:33">term</name> <init pos:start="27:35" pos:end="27:59">=  <expr pos:start="27:38" pos:end="27:59"><literal type="string" pos:start="27:38" pos:end="27:59">"QEMU: Terminated\n\r"</literal></expr></init></decl>;</decl_stmt>

                 <expr_stmt pos:start="29:18" pos:end="29:71"><expr pos:start="29:18" pos:end="29:70"><call pos:start="29:18" pos:end="29:70"><name pos:start="29:18" pos:end="29:34">qemu_chr_fe_write</name><argument_list pos:start="29:35" pos:end="29:70">(<argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">chr</name></expr></argument>, <argument pos:start="29:41" pos:end="29:55"><expr pos:start="29:41" pos:end="29:55"><operator pos:start="29:41" pos:end="29:41">(</operator><name pos:start="29:42" pos:end="29:48">uint8_t</name> <operator pos:start="29:50" pos:end="29:50">*</operator><operator pos:start="29:51" pos:end="29:51">)</operator><name pos:start="29:52" pos:end="29:55">term</name></expr></argument>, <argument pos:start="29:58" pos:end="29:69"><expr pos:start="29:58" pos:end="29:69"><call pos:start="29:58" pos:end="29:69"><name pos:start="29:58" pos:end="29:63">strlen</name><argument_list pos:start="29:64" pos:end="29:69">(<argument pos:start="29:65" pos:end="29:68"><expr pos:start="29:65" pos:end="29:68"><name pos:start="29:65" pos:end="29:68">term</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                 <expr_stmt pos:start="31:18" pos:end="31:25"><expr pos:start="31:18" pos:end="31:24"><call pos:start="31:18" pos:end="31:24"><name pos:start="31:18" pos:end="31:21">exit</name><argument_list pos:start="31:22" pos:end="31:24">(<argument pos:start="31:23" pos:end="31:23"><expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                 <break pos:start="33:18" pos:end="33:23">break;</break>

            </block_content>}</block>

        <case pos:start="37:9" pos:end="37:17">case <expr pos:start="37:14" pos:end="37:16"><literal type="char" pos:start="37:14" pos:end="37:16">'s'</literal></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:29"><expr pos:start="39:13" pos:end="39:28"><call pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:26">blk_commit_all</name><argument_list pos:start="39:27" pos:end="39:28">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        <case pos:start="43:9" pos:end="43:17">case <expr pos:start="43:14" pos:end="43:16"><literal type="char" pos:start="43:14" pos:end="43:16">'b'</literal></expr>:</case>

            <expr_stmt pos:start="45:13" pos:end="45:52"><expr pos:start="45:13" pos:end="45:51"><call pos:start="45:13" pos:end="45:51"><name pos:start="45:13" pos:end="45:29">qemu_chr_be_event</name><argument_list pos:start="45:30" pos:end="45:51">(<argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">chr</name></expr></argument>, <argument pos:start="45:36" pos:end="45:50"><expr pos:start="45:36" pos:end="45:50"><name pos:start="45:36" pos:end="45:50">CHR_EVENT_BREAK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:17">case <expr pos:start="49:14" pos:end="49:16"><literal type="char" pos:start="49:14" pos:end="49:16">'c'</literal></expr>:</case>

            <comment type="block" pos:start="51:13" pos:end="51:54">/* Switch to the next registered device */</comment>

            <expr_stmt pos:start="53:13" pos:end="53:63"><expr pos:start="53:13" pos:end="53:62"><call pos:start="53:13" pos:end="53:62"><name pos:start="53:13" pos:end="53:30">mux_chr_send_event</name><argument_list pos:start="53:31" pos:end="53:62">(<argument pos:start="53:32" pos:end="53:32"><expr pos:start="53:32" pos:end="53:32"><name pos:start="53:32" pos:end="53:32">d</name></expr></argument>, <argument pos:start="53:35" pos:end="53:42"><expr pos:start="53:35" pos:end="53:42"><name pos:start="53:35" pos:end="53:42"><name pos:start="53:35" pos:end="53:35">d</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:42">focus</name></name></expr></argument>, <argument pos:start="53:45" pos:end="53:61"><expr pos:start="53:45" pos:end="53:61"><name pos:start="53:45" pos:end="53:61">CHR_EVENT_MUX_OUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:23"><expr pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:13">d</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:20">focus</name></name><operator pos:start="55:21" pos:end="55:22">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="59:29"><if pos:start="57:13" pos:end="59:29">if <condition pos:start="57:16" pos:end="57:39">(<expr pos:start="57:17" pos:end="57:38"><name pos:start="57:17" pos:end="57:24"><name pos:start="57:17" pos:end="57:17">d</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:24">focus</name></name> <operator pos:start="57:26" pos:end="57:27">&gt;=</operator> <name pos:start="57:29" pos:end="57:38"><name pos:start="57:29" pos:end="57:29">d</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:38">mux_cnt</name></name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:29"><block_content pos:start="59:17" pos:end="59:29">

                <expr_stmt pos:start="59:17" pos:end="59:29"><expr pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:17">d</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:24">focus</name></name> <operator pos:start="59:26" pos:end="59:26">=</operator> <literal type="number" pos:start="59:28" pos:end="59:28">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:62"><expr pos:start="61:13" pos:end="61:61"><call pos:start="61:13" pos:end="61:61"><name pos:start="61:13" pos:end="61:30">mux_chr_send_event</name><argument_list pos:start="61:31" pos:end="61:61">(<argument pos:start="61:32" pos:end="61:32"><expr pos:start="61:32" pos:end="61:32"><name pos:start="61:32" pos:end="61:32">d</name></expr></argument>, <argument pos:start="61:35" pos:end="61:42"><expr pos:start="61:35" pos:end="61:42"><name pos:start="61:35" pos:end="61:42"><name pos:start="61:35" pos:end="61:35">d</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:42">focus</name></name></expr></argument>, <argument pos:start="61:45" pos:end="61:60"><expr pos:start="61:45" pos:end="61:60"><name pos:start="61:45" pos:end="61:60">CHR_EVENT_MUX_IN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:17">case <expr pos:start="65:14" pos:end="65:16"><literal type="char" pos:start="65:14" pos:end="65:16">'t'</literal></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:43"><expr pos:start="67:13" pos:end="67:42"><name pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:13">d</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:25">timestamps</name></name> <operator pos:start="67:27" pos:end="67:27">=</operator> <operator pos:start="67:29" pos:end="67:29">!</operator><name pos:start="67:30" pos:end="67:42"><name pos:start="67:30" pos:end="67:30">d</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:42">timestamps</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:37"><expr pos:start="69:13" pos:end="69:36"><name pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:13">d</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:31">timestamps_start</name></name> <operator pos:start="69:33" pos:end="69:33">=</operator> <operator pos:start="69:35" pos:end="69:35">-</operator><literal type="number" pos:start="69:36" pos:end="69:36">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:29"><expr pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:24"><name pos:start="71:13" pos:end="71:13">d</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:24">linestart</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <literal type="number" pos:start="71:28" pos:end="71:28">0</literal></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if> <if type="elseif" pos:start="77:7" pos:end="81:5">else if <condition pos:start="77:15" pos:end="77:38">(<expr pos:start="77:16" pos:end="77:37"><name pos:start="77:16" pos:end="77:17">ch</name> <operator pos:start="77:19" pos:end="77:20">==</operator> <name pos:start="77:22" pos:end="77:37">term_escape_char</name></expr>)</condition> <block pos:start="77:40" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:31">

        <expr_stmt pos:start="79:9" pos:end="79:31"><expr pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:9">d</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:26">term_got_escape</name></name> <operator pos:start="79:28" pos:end="79:28">=</operator> <literal type="number" pos:start="79:30" pos:end="79:30">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="81:7" pos:end="87:5">else <block pos:start="81:12" pos:end="87:5">{<block_content pos:start="83:5" pos:end="85:17">

    <label pos:start="83:5" pos:end="83:14"><name pos:start="83:5" pos:end="83:13">send_char</name>:</label>

        <return pos:start="85:9" pos:end="85:17">return <expr pos:start="85:16" pos:end="85:16"><literal type="number" pos:start="85:16" pos:end="85:16">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
