<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19780.c" pos:tabs="8"><function pos:start="1:1" pos:end="36:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:13">AVInputFormat</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type><name pos:start="1:16" pos:end="1:37">av_probe_input_format3</name><parameter_list pos:start="1:38" pos:end="1:85">(<parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:49">AVProbeData</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">pd</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:68">is_opened</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:84"><decl pos:start="1:71" pos:end="1:84"><type pos:start="1:71" pos:end="1:84"><name pos:start="1:71" pos:end="1:73">int</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:84">score_ret</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="36:1">{<block_content pos:start="3:5" pos:end="35:15">
    <decl_stmt pos:start="3:5" pos:end="3:26"><decl pos:start="3:5" pos:end="3:25"><type pos:start="3:5" pos:end="3:15"><name pos:start="3:5" pos:end="3:15">AVProbeData</name></type> <name pos:start="3:17" pos:end="3:19">lpd</name> <init pos:start="3:21" pos:end="3:25">= <expr pos:start="3:23" pos:end="3:25"><operator pos:start="3:23" pos:end="3:23">*</operator><name pos:start="3:24" pos:end="3:25">pd</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:37"><decl pos:start="4:5" pos:end="4:30"><type pos:start="4:5" pos:end="4:19"><name pos:start="4:5" pos:end="4:17">AVInputFormat</name> <modifier pos:start="4:19" pos:end="4:19">*</modifier></type><name pos:start="4:20" pos:end="4:23">fmt1</name> <init pos:start="4:25" pos:end="4:30">= <expr pos:start="4:27" pos:end="4:30"><name pos:start="4:27" pos:end="4:30">NULL</name></expr></init></decl>, <decl pos:start="4:33" pos:end="4:36"><type ref="prev" pos:start="4:5" pos:end="4:19"><modifier pos:start="4:33" pos:end="4:33">*</modifier></type><name pos:start="4:34" pos:end="4:36">fmt</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">score</name></decl>, <decl pos:start="5:16" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:20">nodat</name> <init pos:start="5:22" pos:end="5:24">= <expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr></init></decl>, <decl pos:start="5:27" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:35">score_max</name><init pos:start="5:36" pos:end="5:37">=<expr pos:start="5:37" pos:end="5:37"><literal type="number" pos:start="5:37" pos:end="5:37">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="6:5" pos:end="13:5"><if pos:start="6:5" pos:end="13:5">if <condition pos:start="6:8" pos:end="6:74">(<expr pos:start="6:9" pos:end="6:73"><name pos:start="6:9" pos:end="6:20"><name pos:start="6:9" pos:end="6:11">lpd</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:20">buf_size</name></name> <operator pos:start="6:22" pos:end="6:22">&gt;</operator> <literal type="number" pos:start="6:24" pos:end="6:25">10</literal> <operator pos:start="6:27" pos:end="6:28">&amp;&amp;</operator> <call pos:start="6:30" pos:end="6:73"><name pos:start="6:30" pos:end="6:43">ff_id3v2_match</name><argument_list pos:start="6:44" pos:end="6:73">(<argument pos:start="6:45" pos:end="6:51"><expr pos:start="6:45" pos:end="6:51"><name pos:start="6:45" pos:end="6:51"><name pos:start="6:45" pos:end="6:47">lpd</name><operator pos:start="6:48" pos:end="6:48">.</operator><name pos:start="6:49" pos:end="6:51">buf</name></name></expr></argument>, <argument pos:start="6:54" pos:end="6:72"><expr pos:start="6:54" pos:end="6:72"><name pos:start="6:54" pos:end="6:72">ID3v2_DEFAULT_MAGIC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="6:76" pos:end="13:5">{<block_content pos:start="7:9" pos:end="12:22">
        <decl_stmt pos:start="7:9" pos:end="7:47"><decl pos:start="7:9" pos:end="7:46"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:18">id3len</name> <init pos:start="7:20" pos:end="7:46">= <expr pos:start="7:22" pos:end="7:46"><call pos:start="7:22" pos:end="7:46"><name pos:start="7:22" pos:end="7:37">ff_id3v2_tag_len</name><argument_list pos:start="7:38" pos:end="7:46">(<argument pos:start="7:39" pos:end="7:45"><expr pos:start="7:39" pos:end="7:45"><name pos:start="7:39" pos:end="7:45"><name pos:start="7:39" pos:end="7:41">lpd</name><operator pos:start="7:42" pos:end="7:42">.</operator><name pos:start="7:43" pos:end="7:45">buf</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="8:9" pos:end="12:22"><if pos:start="8:9" pos:end="11:9">if <condition pos:start="8:12" pos:end="8:39">(<expr pos:start="8:13" pos:end="8:38"><name pos:start="8:13" pos:end="8:24"><name pos:start="8:13" pos:end="8:15">lpd</name><operator pos:start="8:16" pos:end="8:16">.</operator><name pos:start="8:17" pos:end="8:24">buf_size</name></name> <operator pos:start="8:26" pos:end="8:26">&gt;</operator> <name pos:start="8:28" pos:end="8:33">id3len</name> <operator pos:start="8:35" pos:end="8:35">+</operator> <literal type="number" pos:start="8:37" pos:end="8:38">16</literal></expr>)</condition> <block pos:start="8:41" pos:end="11:9">{<block_content pos:start="9:13" pos:end="10:35">
            <expr_stmt pos:start="9:13" pos:end="9:30"><expr pos:start="9:13" pos:end="9:29"><name pos:start="9:13" pos:end="9:19"><name pos:start="9:13" pos:end="9:15">lpd</name><operator pos:start="9:16" pos:end="9:16">.</operator><name pos:start="9:17" pos:end="9:19">buf</name></name> <operator pos:start="9:21" pos:end="9:22">+=</operator> <name pos:start="9:24" pos:end="9:29">id3len</name></expr>;</expr_stmt>
            <expr_stmt pos:start="10:13" pos:end="10:35"><expr pos:start="10:13" pos:end="10:34"><name pos:start="10:13" pos:end="10:24"><name pos:start="10:13" pos:end="10:15">lpd</name><operator pos:start="10:16" pos:end="10:16">.</operator><name pos:start="10:17" pos:end="10:24">buf_size</name></name> <operator pos:start="10:26" pos:end="10:27">-=</operator> <name pos:start="10:29" pos:end="10:34">id3len</name></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="11:10" pos:end="12:22">else<block type="pseudo" pos:start="12:13" pos:end="12:22"><block_content pos:start="12:13" pos:end="12:22">
            <expr_stmt pos:start="12:13" pos:end="12:22"><expr pos:start="12:13" pos:end="12:21"><name pos:start="12:13" pos:end="12:17">nodat</name> <operator pos:start="12:19" pos:end="12:19">=</operator> <literal type="number" pos:start="12:21" pos:end="12:21">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:15"><expr pos:start="14:5" pos:end="14:14"><name pos:start="14:5" pos:end="14:7">fmt</name> <operator pos:start="14:9" pos:end="14:9">=</operator> <name pos:start="14:11" pos:end="14:14">NULL</name></expr>;</expr_stmt>
    <while pos:start="15:5" pos:end="33:5">while <condition pos:start="15:11" pos:end="15:42">(<expr pos:start="15:12" pos:end="15:41"><operator pos:start="15:12" pos:end="15:12">(</operator><name pos:start="15:13" pos:end="15:16">fmt1</name> <operator pos:start="15:18" pos:end="15:18">=</operator> <call pos:start="15:20" pos:end="15:40"><name pos:start="15:20" pos:end="15:34">av_iformat_next</name><argument_list pos:start="15:35" pos:end="15:40">(<argument pos:start="15:36" pos:end="15:39"><expr pos:start="15:36" pos:end="15:39"><name pos:start="15:36" pos:end="15:39">fmt1</name></expr></argument>)</argument_list></call><operator pos:start="15:41" pos:end="15:41">)</operator></expr>)</condition> <block pos:start="15:44" pos:end="33:5">{<block_content pos:start="16:9" pos:end="32:23">
        <if_stmt pos:start="16:9" pos:end="17:21"><if pos:start="16:9" pos:end="17:21">if <condition pos:start="16:12" pos:end="16:56">(<expr pos:start="16:13" pos:end="16:55"><operator pos:start="16:13" pos:end="16:13">!</operator><name pos:start="16:14" pos:end="16:22">is_opened</name> <operator pos:start="16:24" pos:end="16:25">==</operator> <operator pos:start="16:27" pos:end="16:27">!</operator><operator pos:start="16:28" pos:end="16:28">(</operator><name pos:start="16:29" pos:end="16:39"><name pos:start="16:29" pos:end="16:32">fmt1</name><operator pos:start="16:33" pos:end="16:34">-&gt;</operator><name pos:start="16:35" pos:end="16:39">flags</name></name> <operator pos:start="16:41" pos:end="16:41">&amp;</operator> <name pos:start="16:43" pos:end="16:54">AVFMT_NOFILE</name><operator pos:start="16:55" pos:end="16:55">)</operator></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:21"><block_content pos:start="17:13" pos:end="17:21">
            <continue pos:start="17:13" pos:end="17:21">continue;</continue></block_content></block></if></if_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:18"><expr pos:start="18:9" pos:end="18:17"><name pos:start="18:9" pos:end="18:13">score</name> <operator pos:start="18:15" pos:end="18:15">=</operator> <literal type="number" pos:start="18:17" pos:end="18:17">0</literal></expr>;</expr_stmt>
        <if_stmt pos:start="19:9" pos:end="27:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:29">(<expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:16">fmt1</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:28">read_probe</name></name></expr>)</condition> <block pos:start="19:31" pos:end="23:9">{<block_content pos:start="20:13" pos:end="22:72">
            <expr_stmt pos:start="20:13" pos:end="20:43"><expr pos:start="20:13" pos:end="20:42"><name pos:start="20:13" pos:end="20:17">score</name> <operator pos:start="20:19" pos:end="20:19">=</operator> <call pos:start="20:21" pos:end="20:42"><name pos:start="20:21" pos:end="20:36"><name pos:start="20:21" pos:end="20:24">fmt1</name><operator pos:start="20:25" pos:end="20:26">-&gt;</operator><name pos:start="20:27" pos:end="20:36">read_probe</name></name><argument_list pos:start="20:37" pos:end="20:42">(<argument pos:start="20:38" pos:end="20:41"><expr pos:start="20:38" pos:end="20:41"><operator pos:start="20:38" pos:end="20:38">&amp;</operator><name pos:start="20:39" pos:end="20:41">lpd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="21:13" pos:end="22:72"><if pos:start="21:13" pos:end="22:72">if<condition pos:start="21:15" pos:end="21:80">(<expr pos:start="21:16" pos:end="21:79"><name pos:start="21:16" pos:end="21:31"><name pos:start="21:16" pos:end="21:19">fmt1</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:31">extensions</name></name> <operator pos:start="21:33" pos:end="21:34">&amp;&amp;</operator> <call pos:start="21:36" pos:end="21:79"><name pos:start="21:36" pos:end="21:47">av_match_ext</name><argument_list pos:start="21:48" pos:end="21:79">(<argument pos:start="21:49" pos:end="21:60"><expr pos:start="21:49" pos:end="21:60"><name pos:start="21:49" pos:end="21:60"><name pos:start="21:49" pos:end="21:51">lpd</name><operator pos:start="21:52" pos:end="21:52">.</operator><name pos:start="21:53" pos:end="21:60">filename</name></name></expr></argument>, <argument pos:start="21:63" pos:end="21:78"><expr pos:start="21:63" pos:end="21:78"><name pos:start="21:63" pos:end="21:78"><name pos:start="21:63" pos:end="21:66">fmt1</name><operator pos:start="21:67" pos:end="21:68">-&gt;</operator><name pos:start="21:69" pos:end="21:78">extensions</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="22:17" pos:end="22:72"><block_content pos:start="22:17" pos:end="22:72">
                <expr_stmt pos:start="22:17" pos:end="22:72"><expr pos:start="22:17" pos:end="22:71"><name pos:start="22:17" pos:end="22:21">score</name> <operator pos:start="22:23" pos:end="22:23">=</operator> <call pos:start="22:25" pos:end="22:71"><name pos:start="22:25" pos:end="22:29">FFMAX</name><argument_list pos:start="22:30" pos:end="22:71">(<argument pos:start="22:31" pos:end="22:35"><expr pos:start="22:31" pos:end="22:35"><name pos:start="22:31" pos:end="22:35">score</name></expr></argument>, <argument pos:start="22:38" pos:end="22:70"><expr pos:start="22:38" pos:end="22:70"><ternary pos:start="22:38" pos:end="22:70"><condition pos:start="22:38" pos:end="22:44"><expr pos:start="22:38" pos:end="22:42"><name pos:start="22:38" pos:end="22:42">nodat</name></expr> ?</condition><then pos:start="22:46" pos:end="22:66"> <expr pos:start="22:46" pos:end="22:66"><name pos:start="22:46" pos:end="22:62">AVPROBE_SCORE_MAX</name><operator pos:start="22:63" pos:end="22:63">/</operator><literal type="number" pos:start="22:64" pos:end="22:65">4</literal><operator pos:start="22:65" pos:end="22:65">-</operator><literal type="number" pos:start="22:66" pos:end="22:66">1</literal></expr> </then><else pos:start="22:68" pos:end="22:70">: <expr pos:start="22:70" pos:end="22:70"><literal type="number" pos:start="22:70" pos:end="22:70">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="23:11" pos:end="27:9">else if <condition pos:start="23:19" pos:end="23:36">(<expr pos:start="23:20" pos:end="23:35"><name pos:start="23:20" pos:end="23:35"><name pos:start="23:20" pos:end="23:23">fmt1</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:35">extensions</name></name></expr>)</condition> <block pos:start="23:38" pos:end="27:9">{<block_content pos:start="24:13" pos:end="26:13">
            <if_stmt pos:start="24:13" pos:end="26:13"><if pos:start="24:13" pos:end="26:13">if <condition pos:start="24:16" pos:end="24:61">(<expr pos:start="24:17" pos:end="24:60"><call pos:start="24:17" pos:end="24:60"><name pos:start="24:17" pos:end="24:28">av_match_ext</name><argument_list pos:start="24:29" pos:end="24:60">(<argument pos:start="24:30" pos:end="24:41"><expr pos:start="24:30" pos:end="24:41"><name pos:start="24:30" pos:end="24:41"><name pos:start="24:30" pos:end="24:32">lpd</name><operator pos:start="24:33" pos:end="24:33">.</operator><name pos:start="24:34" pos:end="24:41">filename</name></name></expr></argument>, <argument pos:start="24:44" pos:end="24:59"><expr pos:start="24:44" pos:end="24:59"><name pos:start="24:44" pos:end="24:59"><name pos:start="24:44" pos:end="24:47">fmt1</name><operator pos:start="24:48" pos:end="24:49">-&gt;</operator><name pos:start="24:50" pos:end="24:59">extensions</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="24:63" pos:end="26:13">{<block_content pos:start="25:17" pos:end="25:27">
                <expr_stmt pos:start="25:17" pos:end="25:27"><expr pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:21">score</name> <operator pos:start="25:23" pos:end="25:23">=</operator> <literal type="number" pos:start="25:25" pos:end="25:26">50</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="28:9" pos:end="32:23"><if pos:start="28:9" pos:end="31:9">if <condition pos:start="28:12" pos:end="28:30">(<expr pos:start="28:13" pos:end="28:29"><name pos:start="28:13" pos:end="28:17">score</name> <operator pos:start="28:19" pos:end="28:19">&gt;</operator> <name pos:start="28:21" pos:end="28:29">score_max</name></expr>)</condition> <block pos:start="28:32" pos:end="31:9">{<block_content pos:start="29:13" pos:end="30:23">
            <expr_stmt pos:start="29:13" pos:end="29:30"><expr pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:21">score_max</name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:29">score</name></expr>;</expr_stmt>
            <expr_stmt pos:start="30:13" pos:end="30:23"><expr pos:start="30:13" pos:end="30:22"><name pos:start="30:13" pos:end="30:15">fmt</name> <operator pos:start="30:17" pos:end="30:17">=</operator> <name pos:start="30:19" pos:end="30:22">fmt1</name></expr>;</expr_stmt>
        </block_content>}</block></if><if type="elseif" pos:start="31:10" pos:end="32:23">else if <condition pos:start="31:18" pos:end="31:37">(<expr pos:start="31:19" pos:end="31:36"><name pos:start="31:19" pos:end="31:23">score</name> <operator pos:start="31:25" pos:end="31:26">==</operator> <name pos:start="31:28" pos:end="31:36">score_max</name></expr>)</condition><block type="pseudo" pos:start="32:13" pos:end="32:23"><block_content pos:start="32:13" pos:end="32:23">
            <expr_stmt pos:start="32:13" pos:end="32:23"><expr pos:start="32:13" pos:end="32:22"><name pos:start="32:13" pos:end="32:15">fmt</name> <operator pos:start="32:17" pos:end="32:17">=</operator> <name pos:start="32:19" pos:end="32:22">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></while>
    <expr_stmt pos:start="34:5" pos:end="34:26"><expr pos:start="34:5" pos:end="34:25"><operator pos:start="34:5" pos:end="34:5">*</operator><name pos:start="34:6" pos:end="34:14">score_ret</name><operator pos:start="34:15" pos:end="34:15">=</operator> <name pos:start="34:17" pos:end="34:25">score_max</name></expr>;</expr_stmt>
    <return pos:start="35:5" pos:end="35:15">return <expr pos:start="35:12" pos:end="35:14"><name pos:start="35:12" pos:end="35:14">fmt</name></expr>;</return>
</block_content>}</block></function></unit>
