<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24954.c" pos:tabs="8"><function pos:start="1:1" pos:end="18:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">bitmap_clear</name><parameter_list pos:start="1:18" pos:end="1:58">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><name pos:start="1:19" pos:end="1:26">unsigned</name> <name pos:start="1:28" pos:end="1:31">long</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">map</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:48"><decl pos:start="1:39" pos:end="1:48"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:42">long</name></type> <name pos:start="1:44" pos:end="1:48">start</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:57"><decl pos:start="1:51" pos:end="1:57"><type pos:start="1:51" pos:end="1:57"><name pos:start="1:51" pos:end="1:54">long</name></type> <name pos:start="1:56" pos:end="1:57">nr</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="18:1">{<block_content pos:start="3:5" pos:end="17:5">
    <decl_stmt pos:start="3:5" pos:end="3:45"><decl pos:start="3:5" pos:end="3:44"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:12">unsigned</name> <name pos:start="3:14" pos:end="3:17">long</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:20">p</name> <init pos:start="3:22" pos:end="3:44">= <expr pos:start="3:24" pos:end="3:44"><name pos:start="3:24" pos:end="3:26">map</name> <operator pos:start="3:28" pos:end="3:28">+</operator> <call pos:start="3:30" pos:end="3:44"><name pos:start="3:30" pos:end="3:37">BIT_WORD</name><argument_list pos:start="3:38" pos:end="3:44">(<argument pos:start="3:39" pos:end="3:43"><expr pos:start="3:39" pos:end="3:43"><name pos:start="3:39" pos:end="3:43">start</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:33"><decl pos:start="4:5" pos:end="4:32"><type pos:start="4:5" pos:end="4:14"><specifier pos:start="4:5" pos:end="4:9">const</specifier> <name pos:start="4:11" pos:end="4:14">long</name></type> <name pos:start="4:16" pos:end="4:19">size</name> <init pos:start="4:21" pos:end="4:32">= <expr pos:start="4:23" pos:end="4:32"><name pos:start="4:23" pos:end="4:27">start</name> <operator pos:start="4:29" pos:end="4:29">+</operator> <name pos:start="4:31" pos:end="4:32">nr</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:64"><decl pos:start="5:5" pos:end="5:63"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:21">bits_to_clear</name> <init pos:start="5:23" pos:end="5:63">= <expr pos:start="5:25" pos:end="5:63"><name pos:start="5:25" pos:end="5:37">BITS_PER_LONG</name> <operator pos:start="5:39" pos:end="5:39">-</operator> <operator pos:start="5:41" pos:end="5:41">(</operator><name pos:start="5:42" pos:end="5:46">start</name> <operator pos:start="5:48" pos:end="5:48">%</operator> <name pos:start="5:50" pos:end="5:62">BITS_PER_LONG</name><operator pos:start="5:63" pos:end="5:63">)</operator></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:64"><decl pos:start="6:5" pos:end="6:63"><type pos:start="6:5" pos:end="6:17"><name pos:start="6:5" pos:end="6:12">unsigned</name> <name pos:start="6:14" pos:end="6:17">long</name></type> <name pos:start="6:19" pos:end="6:31">mask_to_clear</name> <init pos:start="6:33" pos:end="6:63">= <expr pos:start="6:35" pos:end="6:63"><call pos:start="6:35" pos:end="6:63"><name pos:start="6:35" pos:end="6:56">BITMAP_FIRST_WORD_MASK</name><argument_list pos:start="6:57" pos:end="6:63">(<argument pos:start="6:58" pos:end="6:62"><expr pos:start="6:58" pos:end="6:62"><name pos:start="6:58" pos:end="6:62">start</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <while pos:start="7:5" pos:end="13:5">while <condition pos:start="7:11" pos:end="7:35">(<expr pos:start="7:12" pos:end="7:34"><name pos:start="7:12" pos:end="7:13">nr</name> <operator pos:start="7:15" pos:end="7:15">-</operator> <name pos:start="7:17" pos:end="7:29">bits_to_clear</name> <operator pos:start="7:31" pos:end="7:32">&gt;=</operator> <literal type="number" pos:start="7:34" pos:end="7:34">0</literal></expr>)</condition> <block pos:start="7:37" pos:end="13:5">{<block_content pos:start="8:9" pos:end="12:12">
        <expr_stmt pos:start="8:9" pos:end="8:29"><expr pos:start="8:9" pos:end="8:28"><operator pos:start="8:9" pos:end="8:9">*</operator><name pos:start="8:10" pos:end="8:10">p</name> <operator pos:start="8:12" pos:end="8:13">&amp;=</operator> <operator pos:start="8:15" pos:end="8:15">~</operator><name pos:start="8:16" pos:end="8:28">mask_to_clear</name></expr>;</expr_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:28"><expr pos:start="9:9" pos:end="9:27"><name pos:start="9:9" pos:end="9:10">nr</name> <operator pos:start="9:12" pos:end="9:13">-=</operator> <name pos:start="9:15" pos:end="9:27">bits_to_clear</name></expr>;</expr_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:38"><expr pos:start="10:9" pos:end="10:37"><name pos:start="10:9" pos:end="10:21">bits_to_clear</name> <operator pos:start="10:23" pos:end="10:23">=</operator> <name pos:start="10:25" pos:end="10:37">BITS_PER_LONG</name></expr>;</expr_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:29"><expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:21">mask_to_clear</name> <operator pos:start="11:23" pos:end="11:23">=</operator> <operator pos:start="11:25" pos:end="11:25">~</operator><literal type="number" pos:start="11:26" pos:end="11:28">0UL</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:12"><expr pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:9">p</name><operator pos:start="12:10" pos:end="12:11">++</operator></expr>;</expr_stmt>
    </block_content>}</block></while>
    <if_stmt pos:start="14:5" pos:end="17:5"><if pos:start="14:5" pos:end="17:5">if <condition pos:start="14:8" pos:end="14:11">(<expr pos:start="14:9" pos:end="14:10"><name pos:start="14:9" pos:end="14:10">nr</name></expr>)</condition> <block pos:start="14:13" pos:end="17:5">{<block_content pos:start="15:9" pos:end="16:29">
        <expr_stmt pos:start="15:9" pos:end="15:53"><expr pos:start="15:9" pos:end="15:52"><name pos:start="15:9" pos:end="15:21">mask_to_clear</name> <operator pos:start="15:23" pos:end="15:24">&amp;=</operator> <call pos:start="15:26" pos:end="15:52"><name pos:start="15:26" pos:end="15:46">BITMAP_LAST_WORD_MASK</name><argument_list pos:start="15:47" pos:end="15:52">(<argument pos:start="15:48" pos:end="15:51"><expr pos:start="15:48" pos:end="15:51"><name pos:start="15:48" pos:end="15:51">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:29"><expr pos:start="16:9" pos:end="16:28"><operator pos:start="16:9" pos:end="16:9">*</operator><name pos:start="16:10" pos:end="16:10">p</name> <operator pos:start="16:12" pos:end="16:13">&amp;=</operator> <operator pos:start="16:15" pos:end="16:15">~</operator><name pos:start="16:16" pos:end="16:28">mask_to_clear</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function></unit>
