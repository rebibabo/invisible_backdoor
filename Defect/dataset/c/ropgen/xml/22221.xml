<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22221.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">control_out</name><parameter_list pos:start="1:24" pos:end="1:58">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:36">VirtIODevice</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">vdev</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:53">VirtQueue</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">vq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:28">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:20">VirtQueueElement</name></type> <name pos:start="5:22" pos:end="5:25">elem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIOSerial</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">vser</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:14">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:8">vser</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:30"><name pos:start="15:12" pos:end="15:24">VIRTIO_SERIAL</name><argument_list pos:start="15:25" pos:end="15:30">(<argument pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:12"><expr pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:7">len</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <literal type="number" pos:start="19:11" pos:end="19:11">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:15"><expr pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:7">buf</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:14">NULL</name></expr>;</expr_stmt>

    <while pos:start="23:5" pos:end="59:5">while <condition pos:start="23:11" pos:end="23:36">(<expr pos:start="23:12" pos:end="23:35"><call pos:start="23:12" pos:end="23:35"><name pos:start="23:12" pos:end="23:24">virtqueue_pop</name><argument_list pos:start="23:25" pos:end="23:35">(<argument pos:start="23:26" pos:end="23:27"><expr pos:start="23:26" pos:end="23:27"><name pos:start="23:26" pos:end="23:27">vq</name></expr></argument>, <argument pos:start="23:30" pos:end="23:34"><expr pos:start="23:30" pos:end="23:34"><operator pos:start="23:30" pos:end="23:30">&amp;</operator><name pos:start="23:31" pos:end="23:34">elem</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:38" pos:end="59:5">{<block_content pos:start="25:9" pos:end="57:37">

        <decl_stmt pos:start="25:9" pos:end="25:23"><decl pos:start="25:9" pos:end="25:22"><type pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:14">size_t</name></type> <name pos:start="25:16" pos:end="25:22">cur_len</name></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:54"><expr pos:start="29:9" pos:end="29:53"><name pos:start="29:9" pos:end="29:15">cur_len</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:53"><name pos:start="29:19" pos:end="29:26">iov_size</name><argument_list pos:start="29:27" pos:end="29:53">(<argument pos:start="29:28" pos:end="29:38"><expr pos:start="29:28" pos:end="29:38"><name pos:start="29:28" pos:end="29:38"><name pos:start="29:28" pos:end="29:31">elem</name><operator pos:start="29:32" pos:end="29:32">.</operator><name pos:start="29:33" pos:end="29:38">out_sg</name></name></expr></argument>, <argument pos:start="29:41" pos:end="29:52"><expr pos:start="29:41" pos:end="29:52"><name pos:start="29:41" pos:end="29:52"><name pos:start="29:41" pos:end="29:44">elem</name><operator pos:start="29:45" pos:end="29:45">.</operator><name pos:start="29:46" pos:end="29:52">out_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="31:9" pos:end="37:11">/*

         * Allocate a new buf only if we didn't have one previously or

         * if the size of the buf differs

         */</comment>

        <if_stmt pos:start="39:9" pos:end="49:9"><if pos:start="39:9" pos:end="49:9">if <condition pos:start="39:12" pos:end="39:26">(<expr pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:19">cur_len</name> <operator pos:start="39:21" pos:end="39:21">&gt;</operator> <name pos:start="39:23" pos:end="39:25">len</name></expr>)</condition> <block pos:start="39:28" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:26">

            <expr_stmt pos:start="41:13" pos:end="41:24"><expr pos:start="41:13" pos:end="41:23"><call pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:18">g_free</name><argument_list pos:start="41:19" pos:end="41:23">(<argument pos:start="41:20" pos:end="41:22"><expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:36"><expr pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:15">buf</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:35"><name pos:start="45:19" pos:end="45:26">g_malloc</name><argument_list pos:start="45:27" pos:end="45:35">(<argument pos:start="45:28" pos:end="45:34"><expr pos:start="45:28" pos:end="45:34"><name pos:start="45:28" pos:end="45:34">cur_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:26"><expr pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:15">len</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:25">cur_len</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:63"><expr pos:start="51:9" pos:end="51:62"><call pos:start="51:9" pos:end="51:62"><name pos:start="51:9" pos:end="51:18">iov_to_buf</name><argument_list pos:start="51:19" pos:end="51:62">(<argument pos:start="51:20" pos:end="51:30"><expr pos:start="51:20" pos:end="51:30"><name pos:start="51:20" pos:end="51:30"><name pos:start="51:20" pos:end="51:23">elem</name><operator pos:start="51:24" pos:end="51:24">.</operator><name pos:start="51:25" pos:end="51:30">out_sg</name></name></expr></argument>, <argument pos:start="51:33" pos:end="51:44"><expr pos:start="51:33" pos:end="51:44"><name pos:start="51:33" pos:end="51:44"><name pos:start="51:33" pos:end="51:36">elem</name><operator pos:start="51:37" pos:end="51:37">.</operator><name pos:start="51:38" pos:end="51:44">out_num</name></name></expr></argument>, <argument pos:start="51:47" pos:end="51:47"><expr pos:start="51:47" pos:end="51:47"><literal type="number" pos:start="51:47" pos:end="51:47">0</literal></expr></argument>, <argument pos:start="51:50" pos:end="51:52"><expr pos:start="51:50" pos:end="51:52"><name pos:start="51:50" pos:end="51:52">buf</name></expr></argument>, <argument pos:start="51:55" pos:end="51:61"><expr pos:start="51:55" pos:end="51:61"><name pos:start="51:55" pos:end="51:61">cur_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:51"><expr pos:start="55:9" pos:end="55:50"><call pos:start="55:9" pos:end="55:50"><name pos:start="55:9" pos:end="55:30">handle_control_message</name><argument_list pos:start="55:31" pos:end="55:50">(<argument pos:start="55:32" pos:end="55:35"><expr pos:start="55:32" pos:end="55:35"><name pos:start="55:32" pos:end="55:35">vser</name></expr></argument>, <argument pos:start="55:38" pos:end="55:40"><expr pos:start="55:38" pos:end="55:40"><name pos:start="55:38" pos:end="55:40">buf</name></expr></argument>, <argument pos:start="55:43" pos:end="55:49"><expr pos:start="55:43" pos:end="55:49"><name pos:start="55:43" pos:end="55:49">cur_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:37"><expr pos:start="57:9" pos:end="57:36"><call pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:22">virtqueue_push</name><argument_list pos:start="57:23" pos:end="57:36">(<argument pos:start="57:24" pos:end="57:25"><expr pos:start="57:24" pos:end="57:25"><name pos:start="57:24" pos:end="57:25">vq</name></expr></argument>, <argument pos:start="57:28" pos:end="57:32"><expr pos:start="57:28" pos:end="57:32"><operator pos:start="57:28" pos:end="57:28">&amp;</operator><name pos:start="57:29" pos:end="57:32">elem</name></expr></argument>, <argument pos:start="57:35" pos:end="57:35"><expr pos:start="57:35" pos:end="57:35"><literal type="number" pos:start="57:35" pos:end="57:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="61:5" pos:end="61:16"><expr pos:start="61:5" pos:end="61:15"><call pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:10">g_free</name><argument_list pos:start="61:11" pos:end="61:15">(<argument pos:start="61:12" pos:end="61:14"><expr pos:start="61:12" pos:end="61:14"><name pos:start="61:12" pos:end="61:14">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:28"><expr pos:start="63:5" pos:end="63:27"><call pos:start="63:5" pos:end="63:27"><name pos:start="63:5" pos:end="63:17">virtio_notify</name><argument_list pos:start="63:18" pos:end="63:27">(<argument pos:start="63:19" pos:end="63:22"><expr pos:start="63:19" pos:end="63:22"><name pos:start="63:19" pos:end="63:22">vdev</name></expr></argument>, <argument pos:start="63:25" pos:end="63:26"><expr pos:start="63:25" pos:end="63:26"><name pos:start="63:25" pos:end="63:26">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
