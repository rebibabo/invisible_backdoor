<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1758.c" pos:tabs="8"><function pos:start="1:1" pos:end="467:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">BlockDriverState</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:42">bdrv_open_inherit</name><parameter_list pos:start="1:43" pos:end="11:56">(<parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:63">filename</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:64"><decl pos:start="3:44" pos:end="3:64"><type pos:start="3:44" pos:end="3:64"><specifier pos:start="3:44" pos:end="3:48">const</specifier> <name pos:start="3:50" pos:end="3:53">char</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:64">reference</name></decl></parameter>,

                                           <parameter pos:start="5:44" pos:end="5:57"><decl pos:start="5:44" pos:end="5:57"><type pos:start="5:44" pos:end="5:57"><name pos:start="5:44" pos:end="5:48">QDict</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:57">options</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:68"><decl pos:start="5:60" pos:end="5:68"><type pos:start="5:60" pos:end="5:68"><name pos:start="5:60" pos:end="5:62">int</name></type> <name pos:start="5:64" pos:end="5:68">flags</name></decl></parameter>,

                                           <parameter pos:start="7:44" pos:end="7:67"><decl pos:start="7:44" pos:end="7:67"><type pos:start="7:44" pos:end="7:67"><name pos:start="7:44" pos:end="7:59">BlockDriverState</name> <modifier pos:start="7:61" pos:end="7:61">*</modifier></type><name pos:start="7:62" pos:end="7:67">parent</name></decl></parameter>,

                                           <parameter pos:start="9:44" pos:end="9:74"><decl pos:start="9:44" pos:end="9:74"><type pos:start="9:44" pos:end="9:74"><specifier pos:start="9:44" pos:end="9:48">const</specifier> <name pos:start="9:50" pos:end="9:62">BdrvChildRole</name> <modifier pos:start="9:64" pos:end="9:64">*</modifier></type><name pos:start="9:65" pos:end="9:74">child_role</name></decl></parameter>,

                                           <parameter pos:start="11:44" pos:end="11:55"><decl pos:start="11:44" pos:end="11:55"><type pos:start="11:44" pos:end="11:55"><name pos:start="11:44" pos:end="11:48">Error</name> <modifier pos:start="11:50" pos:end="11:50">*</modifier><modifier pos:start="11:51" pos:end="11:51">*</modifier></type><name pos:start="11:52" pos:end="11:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="467:1">{<block_content pos:start="15:5" pos:end="465:16">

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">BdrvChild</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:19">file</name> <init pos:start="17:21" pos:end="17:26">= <expr pos:start="17:23" pos:end="17:26"><name pos:start="17:23" pos:end="17:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:20">BlockDriverState</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:15">BlockDriver</name> <modifier pos:start="21:17" pos:end="21:17">*</modifier></type><name pos:start="21:18" pos:end="21:20">drv</name> <init pos:start="21:22" pos:end="21:27">= <expr pos:start="21:24" pos:end="21:27"><name pos:start="21:24" pos:end="21:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:24"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:16"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:14">char</name> <modifier pos:start="23:16" pos:end="23:16">*</modifier></type><name pos:start="23:17" pos:end="23:23">drvname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:24"><decl pos:start="25:5" pos:end="25:23"><type pos:start="25:5" pos:end="25:16"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:14">char</name> <modifier pos:start="25:16" pos:end="25:16">*</modifier></type><name pos:start="25:17" pos:end="25:23">backing</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:28"><decl pos:start="27:5" pos:end="27:27"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:9">Error</name> <modifier pos:start="27:11" pos:end="27:11">*</modifier></type><name pos:start="27:12" pos:end="27:20">local_err</name> <init pos:start="27:22" pos:end="27:27">= <expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:35"><decl pos:start="29:5" pos:end="29:34"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:9">QDict</name> <modifier pos:start="29:11" pos:end="29:11">*</modifier></type><name pos:start="29:12" pos:end="29:27">snapshot_options</name> <init pos:start="29:29" pos:end="29:34">= <expr pos:start="29:31" pos:end="29:34"><name pos:start="29:31" pos:end="29:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:27"><decl pos:start="31:5" pos:end="31:26"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:22">snapshot_flags</name> <init pos:start="31:24" pos:end="31:26">= <expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><call pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:10">assert</name><argument_list pos:start="35:11" pos:end="35:33">(<argument pos:start="35:12" pos:end="35:32"><expr pos:start="35:12" pos:end="35:32"><operator pos:start="35:12" pos:end="35:12">!</operator><name pos:start="35:13" pos:end="35:22">child_role</name> <operator pos:start="35:24" pos:end="35:25">||</operator> <operator pos:start="35:27" pos:end="35:27">!</operator><name pos:start="35:28" pos:end="35:32">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><call pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:10">assert</name><argument_list pos:start="37:11" pos:end="37:34">(<argument pos:start="37:12" pos:end="37:33"><expr pos:start="37:12" pos:end="37:33"><operator pos:start="37:12" pos:end="37:12">!</operator><name pos:start="37:13" pos:end="37:22">child_role</name> <operator pos:start="37:24" pos:end="37:25">==</operator> <operator pos:start="37:27" pos:end="37:27">!</operator><name pos:start="37:28" pos:end="37:33">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="75:5"><if pos:start="41:5" pos:end="75:5">if <condition pos:start="41:8" pos:end="41:18">(<expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:17">reference</name></expr>)</condition> <block pos:start="41:20" pos:end="75:5">{<block_content pos:start="43:9" pos:end="73:18">

        <decl_stmt pos:start="43:9" pos:end="43:71"><decl pos:start="43:9" pos:end="43:70"><type pos:start="43:9" pos:end="43:12"><name pos:start="43:9" pos:end="43:12">bool</name></type> <name pos:start="43:14" pos:end="43:30">options_non_empty</name> <init pos:start="43:32" pos:end="43:70">= <expr pos:start="43:34" pos:end="43:70"><ternary pos:start="43:34" pos:end="43:70"><condition pos:start="43:34" pos:end="43:42"><expr pos:start="43:34" pos:end="43:40"><name pos:start="43:34" pos:end="43:40">options</name></expr> ?</condition><then pos:start="43:44" pos:end="43:62"> <expr pos:start="43:44" pos:end="43:62"><call pos:start="43:44" pos:end="43:62"><name pos:start="43:44" pos:end="43:53">qdict_size</name><argument_list pos:start="43:54" pos:end="43:62">(<argument pos:start="43:55" pos:end="43:61"><expr pos:start="43:55" pos:end="43:61"><name pos:start="43:55" pos:end="43:61">options</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="43:64" pos:end="43:70">: <expr pos:start="43:66" pos:end="43:70"><name pos:start="43:66" pos:end="43:70">false</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><call pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:15">QDECREF</name><argument_list pos:start="45:16" pos:end="45:24">(<argument pos:start="45:17" pos:end="45:23"><expr pos:start="45:17" pos:end="45:23"><name pos:start="45:17" pos:end="45:23">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:42">(<expr pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:20">filename</name> <operator pos:start="49:22" pos:end="49:23">||</operator> <name pos:start="49:25" pos:end="49:41">options_non_empty</name></expr>)</condition> <block pos:start="49:44" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:24">

            <expr_stmt pos:start="51:13" pos:end="53:63"><expr pos:start="51:13" pos:end="53:62"><call pos:start="51:13" pos:end="53:62"><name pos:start="51:13" pos:end="51:22">error_setg</name><argument_list pos:start="51:23" pos:end="53:62">(<argument pos:start="51:24" pos:end="51:27"><expr pos:start="51:24" pos:end="51:27"><name pos:start="51:24" pos:end="51:27">errp</name></expr></argument>, <argument pos:start="51:30" pos:end="53:61"><expr pos:start="51:30" pos:end="53:61"><literal type="string" pos:start="51:30" pos:end="51:78">"Cannot reference an existing block device with "</literal>

                       <literal type="string" pos:start="53:24" pos:end="53:61">"additional options or a new filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:24">return <expr pos:start="55:20" pos:end="55:23"><name pos:start="55:20" pos:end="55:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:56"><expr pos:start="61:9" pos:end="61:55"><name pos:start="61:9" pos:end="61:10">bs</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <call pos:start="61:14" pos:end="61:55"><name pos:start="61:14" pos:end="61:27">bdrv_lookup_bs</name><argument_list pos:start="61:28" pos:end="61:55">(<argument pos:start="61:29" pos:end="61:37"><expr pos:start="61:29" pos:end="61:37"><name pos:start="61:29" pos:end="61:37">reference</name></expr></argument>, <argument pos:start="61:40" pos:end="61:48"><expr pos:start="61:40" pos:end="61:48"><name pos:start="61:40" pos:end="61:48">reference</name></expr></argument>, <argument pos:start="61:51" pos:end="61:54"><expr pos:start="61:51" pos:end="61:54"><name pos:start="61:51" pos:end="61:54">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="67:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:16">(<expr pos:start="63:13" pos:end="63:15"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:15">bs</name></expr>)</condition> <block pos:start="63:18" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:24">

            <return pos:start="65:13" pos:end="65:24">return <expr pos:start="65:20" pos:end="65:23"><name pos:start="65:20" pos:end="65:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:21"><expr pos:start="71:9" pos:end="71:20"><call pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:16">bdrv_ref</name><argument_list pos:start="71:17" pos:end="71:20">(<argument pos:start="71:18" pos:end="71:19"><expr pos:start="71:18" pos:end="71:19"><name pos:start="71:18" pos:end="71:19">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><name pos:start="73:16" pos:end="73:17">bs</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:20"><expr pos:start="79:5" pos:end="79:19"><name pos:start="79:5" pos:end="79:6">bs</name> <operator pos:start="79:8" pos:end="79:8">=</operator> <call pos:start="79:10" pos:end="79:19"><name pos:start="79:10" pos:end="79:17">bdrv_new</name><argument_list pos:start="79:18" pos:end="79:19">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:44">/* NULL means an empty set of options */</comment>

    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:24">(<expr pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:15">options</name> <operator pos:start="85:17" pos:end="85:18">==</operator> <name pos:start="85:20" pos:end="85:23">NULL</name></expr>)</condition> <block pos:start="85:26" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:30">

        <expr_stmt pos:start="87:9" pos:end="87:30"><expr pos:start="87:9" pos:end="87:29"><name pos:start="87:9" pos:end="87:15">options</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:29"><name pos:start="87:19" pos:end="87:27">qdict_new</name><argument_list pos:start="87:28" pos:end="87:29">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:69">/* json: syntax counts as explicit options, as if in the QDict */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:56"><expr pos:start="95:5" pos:end="95:55"><call pos:start="95:5" pos:end="95:55"><name pos:start="95:5" pos:end="95:23">parse_json_protocol</name><argument_list pos:start="95:24" pos:end="95:55">(<argument pos:start="95:25" pos:end="95:31"><expr pos:start="95:25" pos:end="95:31"><name pos:start="95:25" pos:end="95:31">options</name></expr></argument>, <argument pos:start="95:34" pos:end="95:42"><expr pos:start="95:34" pos:end="95:42"><operator pos:start="95:34" pos:end="95:34">&amp;</operator><name pos:start="95:35" pos:end="95:42">filename</name></expr></argument>, <argument pos:start="95:45" pos:end="95:54"><expr pos:start="95:45" pos:end="95:54"><operator pos:start="95:45" pos:end="95:45">&amp;</operator><name pos:start="95:46" pos:end="95:54">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:18">(<expr pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:17">local_err</name></expr>)</condition> <block pos:start="97:20" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:18">

        <goto pos:start="99:9" pos:end="99:18">goto <name pos:start="99:14" pos:end="99:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:56"><expr pos:start="105:5" pos:end="105:55"><name pos:start="105:5" pos:end="105:24"><name pos:start="105:5" pos:end="105:6">bs</name><operator pos:start="105:7" pos:end="105:8">-&gt;</operator><name pos:start="105:9" pos:end="105:24">explicit_options</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <call pos:start="105:28" pos:end="105:55"><name pos:start="105:28" pos:end="105:46">qdict_clone_shallow</name><argument_list pos:start="105:47" pos:end="105:55">(<argument pos:start="105:48" pos:end="105:54"><expr pos:start="105:48" pos:end="105:54"><name pos:start="105:48" pos:end="105:54">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="117:5"><if pos:start="109:5" pos:end="117:5">if <condition pos:start="109:8" pos:end="109:19">(<expr pos:start="109:9" pos:end="109:18"><name pos:start="109:9" pos:end="109:18">child_role</name></expr>)</condition> <block pos:start="109:21" pos:end="117:5">{<block_content pos:start="111:9" pos:end="115:73">

        <expr_stmt pos:start="111:9" pos:end="111:35"><expr pos:start="111:9" pos:end="111:34"><name pos:start="111:9" pos:end="111:25"><name pos:start="111:9" pos:end="111:10">bs</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:25">inherits_from</name></name> <operator pos:start="111:27" pos:end="111:27">=</operator> <name pos:start="111:29" pos:end="111:34">parent</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="115:73"><expr pos:start="113:9" pos:end="115:72"><call pos:start="113:9" pos:end="115:72"><name pos:start="113:9" pos:end="113:35"><name pos:start="113:9" pos:end="113:18">child_role</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:35">inherit_options</name></name><argument_list pos:start="113:36" pos:end="115:72">(<argument pos:start="113:37" pos:end="113:42"><expr pos:start="113:37" pos:end="113:42"><operator pos:start="113:37" pos:end="113:37">&amp;</operator><name pos:start="113:38" pos:end="113:42">flags</name></expr></argument>, <argument pos:start="113:45" pos:end="113:51"><expr pos:start="113:45" pos:end="113:51"><name pos:start="113:45" pos:end="113:51">options</name></expr></argument>,

                                    <argument pos:start="115:37" pos:end="115:54"><expr pos:start="115:37" pos:end="115:54"><name pos:start="115:37" pos:end="115:54"><name pos:start="115:37" pos:end="115:42">parent</name><operator pos:start="115:43" pos:end="115:44">-&gt;</operator><name pos:start="115:45" pos:end="115:54">open_flags</name></name></expr></argument>, <argument pos:start="115:57" pos:end="115:71"><expr pos:start="115:57" pos:end="115:71"><name pos:start="115:57" pos:end="115:71"><name pos:start="115:57" pos:end="115:62">parent</name><operator pos:start="115:63" pos:end="115:64">-&gt;</operator><name pos:start="115:65" pos:end="115:71">options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:68"><expr pos:start="121:5" pos:end="121:67"><name pos:start="121:5" pos:end="121:7">ret</name> <operator pos:start="121:9" pos:end="121:9">=</operator> <call pos:start="121:11" pos:end="121:67"><name pos:start="121:11" pos:end="121:27">bdrv_fill_options</name><argument_list pos:start="121:28" pos:end="121:67">(<argument pos:start="121:29" pos:end="121:36"><expr pos:start="121:29" pos:end="121:36"><operator pos:start="121:29" pos:end="121:29">&amp;</operator><name pos:start="121:30" pos:end="121:36">options</name></expr></argument>, <argument pos:start="121:39" pos:end="121:46"><expr pos:start="121:39" pos:end="121:46"><name pos:start="121:39" pos:end="121:46">filename</name></expr></argument>, <argument pos:start="121:49" pos:end="121:54"><expr pos:start="121:49" pos:end="121:54"><operator pos:start="121:49" pos:end="121:49">&amp;</operator><name pos:start="121:50" pos:end="121:54">flags</name></expr></argument>, <argument pos:start="121:57" pos:end="121:66"><expr pos:start="121:57" pos:end="121:66"><operator pos:start="121:57" pos:end="121:57">&amp;</operator><name pos:start="121:58" pos:end="121:66">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="127:5"><if pos:start="123:5" pos:end="127:5">if <condition pos:start="123:8" pos:end="123:18">(<expr pos:start="123:9" pos:end="123:17"><name pos:start="123:9" pos:end="123:17">local_err</name></expr>)</condition> <block pos:start="123:20" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:18">

        <goto pos:start="125:9" pos:end="125:18">goto <name pos:start="125:14" pos:end="125:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="131:5" pos:end="135:64">/* Set the BDRV_O_RDWR and BDRV_O_ALLOW_RDWR flags.

     * FIXME: we're parsing the QDict to avoid having to create a

     * QemuOpts just for this, but neither option is optimal. */</comment>

    <if_stmt pos:start="137:5" pos:end="147:5"><if pos:start="137:5" pos:end="143:5">if <condition pos:start="137:8" pos:end="139:64">(<expr pos:start="137:9" pos:end="139:63"><call pos:start="137:9" pos:end="137:71"><name pos:start="137:9" pos:end="137:17">g_strcmp0</name><argument_list pos:start="137:18" pos:end="137:71">(<argument pos:start="137:19" pos:end="137:64"><expr pos:start="137:19" pos:end="137:64"><call pos:start="137:19" pos:end="137:64"><name pos:start="137:19" pos:end="137:35">qdict_get_try_str</name><argument_list pos:start="137:36" pos:end="137:64">(<argument pos:start="137:37" pos:end="137:43"><expr pos:start="137:37" pos:end="137:43"><name pos:start="137:37" pos:end="137:43">options</name></expr></argument>, <argument pos:start="137:46" pos:end="137:63"><expr pos:start="137:46" pos:end="137:63"><name pos:start="137:46" pos:end="137:63">BDRV_OPT_READ_ONLY</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="137:67" pos:end="137:70"><expr pos:start="137:67" pos:end="137:70"><literal type="string" pos:start="137:67" pos:end="137:70">"on"</literal></expr></argument>)</argument_list></call> <operator pos:start="137:73" pos:end="137:74">&amp;&amp;</operator>

        <operator pos:start="139:9" pos:end="139:9">!</operator><call pos:start="139:10" pos:end="139:63"><name pos:start="139:10" pos:end="139:27">qdict_get_try_bool</name><argument_list pos:start="139:28" pos:end="139:63">(<argument pos:start="139:29" pos:end="139:35"><expr pos:start="139:29" pos:end="139:35"><name pos:start="139:29" pos:end="139:35">options</name></expr></argument>, <argument pos:start="139:38" pos:end="139:55"><expr pos:start="139:38" pos:end="139:55"><name pos:start="139:38" pos:end="139:55">BDRV_OPT_READ_ONLY</name></expr></argument>, <argument pos:start="139:58" pos:end="139:62"><expr pos:start="139:58" pos:end="139:62"><name pos:start="139:58" pos:end="139:62">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:66" pos:end="143:5">{<block_content pos:start="141:9" pos:end="141:51">

        <expr_stmt pos:start="141:9" pos:end="141:51"><expr pos:start="141:9" pos:end="141:50"><name pos:start="141:9" pos:end="141:13">flags</name> <operator pos:start="141:15" pos:end="141:16">|=</operator> <operator pos:start="141:18" pos:end="141:18">(</operator><name pos:start="141:19" pos:end="141:29">BDRV_O_RDWR</name> <operator pos:start="141:31" pos:end="141:31">|</operator> <name pos:start="141:33" pos:end="141:49">BDRV_O_ALLOW_RDWR</name><operator pos:start="141:50" pos:end="141:50">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="143:7" pos:end="147:5">else <block pos:start="143:12" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:30">

        <expr_stmt pos:start="145:9" pos:end="145:30"><expr pos:start="145:9" pos:end="145:29"><name pos:start="145:9" pos:end="145:13">flags</name> <operator pos:start="145:15" pos:end="145:16">&amp;=</operator> <operator pos:start="145:18" pos:end="145:18">~</operator><name pos:start="145:19" pos:end="145:29">BDRV_O_RDWR</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="151:5" pos:end="165:5"><if pos:start="151:5" pos:end="165:5">if <condition pos:start="151:8" pos:end="151:32">(<expr pos:start="151:9" pos:end="151:31"><name pos:start="151:9" pos:end="151:13">flags</name> <operator pos:start="151:15" pos:end="151:15">&amp;</operator> <name pos:start="151:17" pos:end="151:31">BDRV_O_SNAPSHOT</name></expr>)</condition> <block pos:start="151:34" pos:end="165:5">{<block_content pos:start="153:9" pos:end="163:62">

        <expr_stmt pos:start="153:9" pos:end="153:39"><expr pos:start="153:9" pos:end="153:38"><name pos:start="153:9" pos:end="153:24">snapshot_options</name> <operator pos:start="153:26" pos:end="153:26">=</operator> <call pos:start="153:28" pos:end="153:38"><name pos:start="153:28" pos:end="153:36">qdict_new</name><argument_list pos:start="153:37" pos:end="153:38">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="157:51"><expr pos:start="155:9" pos:end="157:50"><call pos:start="155:9" pos:end="157:50"><name pos:start="155:9" pos:end="155:34">bdrv_temp_snapshot_options</name><argument_list pos:start="155:35" pos:end="157:50">(<argument pos:start="155:36" pos:end="155:50"><expr pos:start="155:36" pos:end="155:50"><operator pos:start="155:36" pos:end="155:36">&amp;</operator><name pos:start="155:37" pos:end="155:50">snapshot_flags</name></expr></argument>, <argument pos:start="155:53" pos:end="155:68"><expr pos:start="155:53" pos:end="155:68"><name pos:start="155:53" pos:end="155:68">snapshot_options</name></expr></argument>,

                                   <argument pos:start="157:36" pos:end="157:40"><expr pos:start="157:36" pos:end="157:40"><name pos:start="157:36" pos:end="157:40">flags</name></expr></argument>, <argument pos:start="157:43" pos:end="157:49"><expr pos:start="157:43" pos:end="157:49"><name pos:start="157:43" pos:end="157:49">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="159:9" pos:end="159:61">/* Let bdrv_backing_options() override "read-only" */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:47"><expr pos:start="161:9" pos:end="161:46"><call pos:start="161:9" pos:end="161:46"><name pos:start="161:9" pos:end="161:17">qdict_del</name><argument_list pos:start="161:18" pos:end="161:46">(<argument pos:start="161:19" pos:end="161:25"><expr pos:start="161:19" pos:end="161:25"><name pos:start="161:19" pos:end="161:25">options</name></expr></argument>, <argument pos:start="161:28" pos:end="161:45"><expr pos:start="161:28" pos:end="161:45"><name pos:start="161:28" pos:end="161:45">BDRV_OPT_READ_ONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:62"><expr pos:start="163:9" pos:end="163:61"><call pos:start="163:9" pos:end="163:61"><name pos:start="163:9" pos:end="163:28">bdrv_backing_options</name><argument_list pos:start="163:29" pos:end="163:61">(<argument pos:start="163:30" pos:end="163:35"><expr pos:start="163:30" pos:end="163:35"><operator pos:start="163:30" pos:end="163:30">&amp;</operator><name pos:start="163:31" pos:end="163:35">flags</name></expr></argument>, <argument pos:start="163:38" pos:end="163:44"><expr pos:start="163:38" pos:end="163:44"><name pos:start="163:38" pos:end="163:44">options</name></expr></argument>, <argument pos:start="163:47" pos:end="163:51"><expr pos:start="163:47" pos:end="163:51"><name pos:start="163:47" pos:end="163:51">flags</name></expr></argument>, <argument pos:start="163:54" pos:end="163:60"><expr pos:start="163:54" pos:end="163:60"><name pos:start="163:54" pos:end="163:60">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:27"><expr pos:start="169:5" pos:end="169:26"><name pos:start="169:5" pos:end="169:18"><name pos:start="169:5" pos:end="169:6">bs</name><operator pos:start="169:7" pos:end="169:8">-&gt;</operator><name pos:start="169:9" pos:end="169:18">open_flags</name></name> <operator pos:start="169:20" pos:end="169:20">=</operator> <name pos:start="169:22" pos:end="169:26">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:26"><expr pos:start="171:5" pos:end="171:25"><name pos:start="171:5" pos:end="171:15"><name pos:start="171:5" pos:end="171:6">bs</name><operator pos:start="171:7" pos:end="171:8">-&gt;</operator><name pos:start="171:9" pos:end="171:15">options</name></name> <operator pos:start="171:17" pos:end="171:17">=</operator> <name pos:start="171:19" pos:end="171:25">options</name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:43"><expr pos:start="173:5" pos:end="173:42"><name pos:start="173:5" pos:end="173:11">options</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <call pos:start="173:15" pos:end="173:42"><name pos:start="173:15" pos:end="173:33">qdict_clone_shallow</name><argument_list pos:start="173:34" pos:end="173:42">(<argument pos:start="173:35" pos:end="173:41"><expr pos:start="173:35" pos:end="173:41"><name pos:start="173:35" pos:end="173:41">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="177:5" pos:end="177:44">/* Find the right image format driver */</comment>

    <expr_stmt pos:start="179:5" pos:end="179:51"><expr pos:start="179:5" pos:end="179:50"><name pos:start="179:5" pos:end="179:11">drvname</name> <operator pos:start="179:13" pos:end="179:13">=</operator> <call pos:start="179:15" pos:end="179:50"><name pos:start="179:15" pos:end="179:31">qdict_get_try_str</name><argument_list pos:start="179:32" pos:end="179:50">(<argument pos:start="179:33" pos:end="179:39"><expr pos:start="179:33" pos:end="179:39"><name pos:start="179:33" pos:end="179:39">options</name></expr></argument>, <argument pos:start="179:42" pos:end="179:49"><expr pos:start="179:42" pos:end="179:49"><literal type="string" pos:start="179:42" pos:end="179:49">"driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="181:5" pos:end="193:5"><if pos:start="181:5" pos:end="193:5">if <condition pos:start="181:8" pos:end="181:16">(<expr pos:start="181:9" pos:end="181:15"><name pos:start="181:9" pos:end="181:15">drvname</name></expr>)</condition> <block pos:start="181:18" pos:end="193:5">{<block_content pos:start="183:9" pos:end="191:9">

        <expr_stmt pos:start="183:9" pos:end="183:40"><expr pos:start="183:9" pos:end="183:39"><name pos:start="183:9" pos:end="183:11">drv</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <call pos:start="183:15" pos:end="183:39"><name pos:start="183:15" pos:end="183:30">bdrv_find_format</name><argument_list pos:start="183:31" pos:end="183:39">(<argument pos:start="183:32" pos:end="183:38"><expr pos:start="183:32" pos:end="183:38"><name pos:start="183:32" pos:end="183:38">drvname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="185:9" pos:end="191:9"><if pos:start="185:9" pos:end="191:9">if <condition pos:start="185:12" pos:end="185:17">(<expr pos:start="185:13" pos:end="185:16"><operator pos:start="185:13" pos:end="185:13">!</operator><name pos:start="185:14" pos:end="185:16">drv</name></expr>)</condition> <block pos:start="185:19" pos:end="191:9">{<block_content pos:start="187:13" pos:end="189:22">

            <expr_stmt pos:start="187:13" pos:end="187:62"><expr pos:start="187:13" pos:end="187:61"><call pos:start="187:13" pos:end="187:61"><name pos:start="187:13" pos:end="187:22">error_setg</name><argument_list pos:start="187:23" pos:end="187:61">(<argument pos:start="187:24" pos:end="187:27"><expr pos:start="187:24" pos:end="187:27"><name pos:start="187:24" pos:end="187:27">errp</name></expr></argument>, <argument pos:start="187:30" pos:end="187:51"><expr pos:start="187:30" pos:end="187:51"><literal type="string" pos:start="187:30" pos:end="187:51">"Unknown driver: '%s'"</literal></expr></argument>, <argument pos:start="187:54" pos:end="187:60"><expr pos:start="187:54" pos:end="187:60"><name pos:start="187:54" pos:end="187:60">drvname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="189:13" pos:end="189:22">goto <name pos:start="189:18" pos:end="189:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:50"><expr pos:start="197:5" pos:end="197:49"><call pos:start="197:5" pos:end="197:49"><name pos:start="197:5" pos:end="197:10">assert</name><argument_list pos:start="197:11" pos:end="197:49">(<argument pos:start="197:12" pos:end="197:48"><expr pos:start="197:12" pos:end="197:48"><name pos:start="197:12" pos:end="197:18">drvname</name> <operator pos:start="197:20" pos:end="197:21">||</operator> <operator pos:start="197:23" pos:end="197:23">!</operator><operator pos:start="197:24" pos:end="197:24">(</operator><name pos:start="197:25" pos:end="197:29">flags</name> <operator pos:start="197:31" pos:end="197:31">&amp;</operator> <name pos:start="197:33" pos:end="197:47">BDRV_O_PROTOCOL</name><operator pos:start="197:48" pos:end="197:48">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:52"><expr pos:start="201:5" pos:end="201:51"><name pos:start="201:5" pos:end="201:11">backing</name> <operator pos:start="201:13" pos:end="201:13">=</operator> <call pos:start="201:15" pos:end="201:51"><name pos:start="201:15" pos:end="201:31">qdict_get_try_str</name><argument_list pos:start="201:32" pos:end="201:51">(<argument pos:start="201:33" pos:end="201:39"><expr pos:start="201:33" pos:end="201:39"><name pos:start="201:33" pos:end="201:39">options</name></expr></argument>, <argument pos:start="201:42" pos:end="201:50"><expr pos:start="201:42" pos:end="201:50"><literal type="string" pos:start="201:42" pos:end="201:50">"backing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="203:5" pos:end="209:5"><if pos:start="203:5" pos:end="209:5">if <condition pos:start="203:8" pos:end="203:36">(<expr pos:start="203:9" pos:end="203:35"><name pos:start="203:9" pos:end="203:15">backing</name> <operator pos:start="203:17" pos:end="203:18">&amp;&amp;</operator> <operator pos:start="203:20" pos:end="203:20">*</operator><name pos:start="203:21" pos:end="203:27">backing</name> <operator pos:start="203:29" pos:end="203:30">==</operator> <literal type="char" pos:start="203:32" pos:end="203:35">'\0'</literal></expr>)</condition> <block pos:start="203:38" pos:end="209:5">{<block_content pos:start="205:9" pos:end="207:38">

        <expr_stmt pos:start="205:9" pos:end="205:35"><expr pos:start="205:9" pos:end="205:34"><name pos:start="205:9" pos:end="205:13">flags</name> <operator pos:start="205:15" pos:end="205:16">|=</operator> <name pos:start="205:18" pos:end="205:34">BDRV_O_NO_BACKING</name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:38"><expr pos:start="207:9" pos:end="207:37"><call pos:start="207:9" pos:end="207:37"><name pos:start="207:9" pos:end="207:17">qdict_del</name><argument_list pos:start="207:18" pos:end="207:37">(<argument pos:start="207:19" pos:end="207:25"><expr pos:start="207:19" pos:end="207:25"><name pos:start="207:19" pos:end="207:25">options</name></expr></argument>, <argument pos:start="207:28" pos:end="207:36"><expr pos:start="207:28" pos:end="207:36"><literal type="string" pos:start="207:28" pos:end="207:36">"backing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="213:5" pos:end="213:46">/* Open image file without format layer */</comment>

    <if_stmt pos:start="215:5" pos:end="227:5"><if pos:start="215:5" pos:end="227:5">if <condition pos:start="215:8" pos:end="215:39">(<expr pos:start="215:9" pos:end="215:38"><operator pos:start="215:9" pos:end="215:9">(</operator><name pos:start="215:10" pos:end="215:14">flags</name> <operator pos:start="215:16" pos:end="215:16">&amp;</operator> <name pos:start="215:18" pos:end="215:32">BDRV_O_PROTOCOL</name><operator pos:start="215:33" pos:end="215:33">)</operator> <operator pos:start="215:35" pos:end="215:36">==</operator> <literal type="number" pos:start="215:38" pos:end="215:38">0</literal></expr>)</condition> <block pos:start="215:41" pos:end="227:5">{<block_content pos:start="217:9" pos:end="225:9">

        <expr_stmt pos:start="217:9" pos:end="219:62"><expr pos:start="217:9" pos:end="219:61"><name pos:start="217:9" pos:end="217:12">file</name> <operator pos:start="217:14" pos:end="217:14">=</operator> <call pos:start="217:16" pos:end="219:61"><name pos:start="217:16" pos:end="217:30">bdrv_open_child</name><argument_list pos:start="217:31" pos:end="219:61">(<argument pos:start="217:32" pos:end="217:39"><expr pos:start="217:32" pos:end="217:39"><name pos:start="217:32" pos:end="217:39">filename</name></expr></argument>, <argument pos:start="217:42" pos:end="217:48"><expr pos:start="217:42" pos:end="217:48"><name pos:start="217:42" pos:end="217:48">options</name></expr></argument>, <argument pos:start="217:51" pos:end="217:56"><expr pos:start="217:51" pos:end="217:56"><literal type="string" pos:start="217:51" pos:end="217:56">"file"</literal></expr></argument>, <argument pos:start="217:59" pos:end="217:60"><expr pos:start="217:59" pos:end="217:60"><name pos:start="217:59" pos:end="217:60">bs</name></expr></argument>,

                               <argument pos:start="219:32" pos:end="219:42"><expr pos:start="219:32" pos:end="219:42"><operator pos:start="219:32" pos:end="219:32">&amp;</operator><name pos:start="219:33" pos:end="219:42">child_file</name></expr></argument>, <argument pos:start="219:45" pos:end="219:48"><expr pos:start="219:45" pos:end="219:48"><name pos:start="219:45" pos:end="219:48">true</name></expr></argument>, <argument pos:start="219:51" pos:end="219:60"><expr pos:start="219:51" pos:end="219:60"><operator pos:start="219:51" pos:end="219:51">&amp;</operator><name pos:start="219:52" pos:end="219:60">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="225:9"><if pos:start="221:9" pos:end="225:9">if <condition pos:start="221:12" pos:end="221:22">(<expr pos:start="221:13" pos:end="221:21"><name pos:start="221:13" pos:end="221:21">local_err</name></expr>)</condition> <block pos:start="221:24" pos:end="225:9">{<block_content pos:start="223:13" pos:end="223:22">

            <goto pos:start="223:13" pos:end="223:22">goto <name pos:start="223:18" pos:end="223:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="231:5" pos:end="231:30">/* Image format probing */</comment>

    <expr_stmt pos:start="233:5" pos:end="233:22"><expr pos:start="233:5" pos:end="233:21"><name pos:start="233:5" pos:end="233:14"><name pos:start="233:5" pos:end="233:6">bs</name><operator pos:start="233:7" pos:end="233:8">-&gt;</operator><name pos:start="233:9" pos:end="233:14">probed</name></name> <operator pos:start="233:16" pos:end="233:16">=</operator> <operator pos:start="233:18" pos:end="233:18">!</operator><name pos:start="233:19" pos:end="233:21">drv</name></expr>;</expr_stmt>

    <if_stmt pos:start="235:5" pos:end="277:5"><if pos:start="235:5" pos:end="271:5">if <condition pos:start="235:8" pos:end="235:21">(<expr pos:start="235:9" pos:end="235:20"><operator pos:start="235:9" pos:end="235:9">!</operator><name pos:start="235:10" pos:end="235:12">drv</name> <operator pos:start="235:14" pos:end="235:15">&amp;&amp;</operator> <name pos:start="235:17" pos:end="235:20">file</name></expr>)</condition> <block pos:start="235:23" pos:end="271:5">{<block_content pos:start="237:9" pos:end="269:73">

        <expr_stmt pos:start="237:9" pos:end="237:66"><expr pos:start="237:9" pos:end="237:65"><name pos:start="237:9" pos:end="237:11">ret</name> <operator pos:start="237:13" pos:end="237:13">=</operator> <call pos:start="237:15" pos:end="237:65"><name pos:start="237:15" pos:end="237:31">find_image_format</name><argument_list pos:start="237:32" pos:end="237:65">(<argument pos:start="237:33" pos:end="237:36"><expr pos:start="237:33" pos:end="237:36"><name pos:start="237:33" pos:end="237:36">file</name></expr></argument>, <argument pos:start="237:39" pos:end="237:46"><expr pos:start="237:39" pos:end="237:46"><name pos:start="237:39" pos:end="237:46">filename</name></expr></argument>, <argument pos:start="237:49" pos:end="237:52"><expr pos:start="237:49" pos:end="237:52"><operator pos:start="237:49" pos:end="237:49">&amp;</operator><name pos:start="237:50" pos:end="237:52">drv</name></expr></argument>, <argument pos:start="237:55" pos:end="237:64"><expr pos:start="237:55" pos:end="237:64"><operator pos:start="237:55" pos:end="237:55">&amp;</operator><name pos:start="237:56" pos:end="237:64">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="239:9" pos:end="243:9"><if pos:start="239:9" pos:end="243:9">if <condition pos:start="239:12" pos:end="239:20">(<expr pos:start="239:13" pos:end="239:19"><name pos:start="239:13" pos:end="239:15">ret</name> <operator pos:start="239:17" pos:end="239:17">&lt;</operator> <literal type="number" pos:start="239:19" pos:end="239:19">0</literal></expr>)</condition> <block pos:start="239:22" pos:end="243:9">{<block_content pos:start="241:13" pos:end="241:22">

            <goto pos:start="241:13" pos:end="241:22">goto <name pos:start="241:18" pos:end="241:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="245:9" pos:end="265:11">/*

         * This option update would logically belong in bdrv_fill_options(),

         * but we first need to open bs-&gt;file for the probing to work, while

         * opening bs-&gt;file already requires the (mostly) final set of options

         * so that cache mode etc. can be inherited.

         *

         * Adding the driver later is somewhat ugly, but it's not an option

         * that would ever be inherited, so it's correct. We just need to make

         * sure to update both bs-&gt;options (which has the full effective

         * options for bs) and options (which has file.* already removed).

         */</comment>

        <expr_stmt pos:start="267:9" pos:end="267:77"><expr pos:start="267:9" pos:end="267:76"><call pos:start="267:9" pos:end="267:76"><name pos:start="267:9" pos:end="267:17">qdict_put</name><argument_list pos:start="267:18" pos:end="267:76">(<argument pos:start="267:19" pos:end="267:29"><expr pos:start="267:19" pos:end="267:29"><name pos:start="267:19" pos:end="267:29"><name pos:start="267:19" pos:end="267:20">bs</name><operator pos:start="267:21" pos:end="267:22">-&gt;</operator><name pos:start="267:23" pos:end="267:29">options</name></name></expr></argument>, <argument pos:start="267:32" pos:end="267:39"><expr pos:start="267:32" pos:end="267:39"><literal type="string" pos:start="267:32" pos:end="267:39">"driver"</literal></expr></argument>, <argument pos:start="267:42" pos:end="267:75"><expr pos:start="267:42" pos:end="267:75"><call pos:start="267:42" pos:end="267:75"><name pos:start="267:42" pos:end="267:57">qstring_from_str</name><argument_list pos:start="267:58" pos:end="267:75">(<argument pos:start="267:59" pos:end="267:74"><expr pos:start="267:59" pos:end="267:74"><name pos:start="267:59" pos:end="267:74"><name pos:start="267:59" pos:end="267:61">drv</name><operator pos:start="267:62" pos:end="267:63">-&gt;</operator><name pos:start="267:64" pos:end="267:74">format_name</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:73"><expr pos:start="269:9" pos:end="269:72"><call pos:start="269:9" pos:end="269:72"><name pos:start="269:9" pos:end="269:17">qdict_put</name><argument_list pos:start="269:18" pos:end="269:72">(<argument pos:start="269:19" pos:end="269:25"><expr pos:start="269:19" pos:end="269:25"><name pos:start="269:19" pos:end="269:25">options</name></expr></argument>, <argument pos:start="269:28" pos:end="269:35"><expr pos:start="269:28" pos:end="269:35"><literal type="string" pos:start="269:28" pos:end="269:35">"driver"</literal></expr></argument>, <argument pos:start="269:38" pos:end="269:71"><expr pos:start="269:38" pos:end="269:71"><call pos:start="269:38" pos:end="269:71"><name pos:start="269:38" pos:end="269:53">qstring_from_str</name><argument_list pos:start="269:54" pos:end="269:71">(<argument pos:start="269:55" pos:end="269:70"><expr pos:start="269:55" pos:end="269:70"><name pos:start="269:55" pos:end="269:70"><name pos:start="269:55" pos:end="269:57">drv</name><operator pos:start="269:58" pos:end="269:59">-&gt;</operator><name pos:start="269:60" pos:end="269:70">format_name</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="271:7" pos:end="277:5">else if <condition pos:start="271:15" pos:end="271:20">(<expr pos:start="271:16" pos:end="271:19"><operator pos:start="271:16" pos:end="271:16">!</operator><name pos:start="271:17" pos:end="271:19">drv</name></expr>)</condition> <block pos:start="271:22" pos:end="277:5">{<block_content pos:start="273:9" pos:end="275:18">

        <expr_stmt pos:start="273:9" pos:end="273:63"><expr pos:start="273:9" pos:end="273:62"><call pos:start="273:9" pos:end="273:62"><name pos:start="273:9" pos:end="273:18">error_setg</name><argument_list pos:start="273:19" pos:end="273:62">(<argument pos:start="273:20" pos:end="273:23"><expr pos:start="273:20" pos:end="273:23"><name pos:start="273:20" pos:end="273:23">errp</name></expr></argument>, <argument pos:start="273:26" pos:end="273:61"><expr pos:start="273:26" pos:end="273:61"><literal type="string" pos:start="273:26" pos:end="273:61">"Must specify either driver or file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="275:9" pos:end="275:18">goto <name pos:start="275:14" pos:end="275:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="281:5" pos:end="281:79">/* BDRV_O_PROTOCOL must be set iff a protocol BDS is about to be created */</comment>

    <expr_stmt pos:start="283:5" pos:end="283:65"><expr pos:start="283:5" pos:end="283:64"><call pos:start="283:5" pos:end="283:64"><name pos:start="283:5" pos:end="283:10">assert</name><argument_list pos:start="283:11" pos:end="283:64">(<argument pos:start="283:12" pos:end="283:63"><expr pos:start="283:12" pos:end="283:63"><operator pos:start="283:12" pos:end="283:12">!</operator><operator pos:start="283:13" pos:end="283:13">!</operator><operator pos:start="283:14" pos:end="283:14">(</operator><name pos:start="283:15" pos:end="283:19">flags</name> <operator pos:start="283:21" pos:end="283:21">&amp;</operator> <name pos:start="283:23" pos:end="283:37">BDRV_O_PROTOCOL</name><operator pos:start="283:38" pos:end="283:38">)</operator> <operator pos:start="283:40" pos:end="283:41">==</operator> <operator pos:start="283:43" pos:end="283:43">!</operator><operator pos:start="283:44" pos:end="283:44">!</operator><name pos:start="283:45" pos:end="283:63"><name pos:start="283:45" pos:end="283:47">drv</name><operator pos:start="283:48" pos:end="283:49">-&gt;</operator><name pos:start="283:50" pos:end="283:63">bdrv_file_open</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="285:5" pos:end="287:75">/* file must be NULL if a protocol BDS is about to be created

     * (the inverse results in an error message from bdrv_open_common()) */</comment>

    <expr_stmt pos:start="289:5" pos:end="289:48"><expr pos:start="289:5" pos:end="289:47"><call pos:start="289:5" pos:end="289:47"><name pos:start="289:5" pos:end="289:10">assert</name><argument_list pos:start="289:11" pos:end="289:47">(<argument pos:start="289:12" pos:end="289:46"><expr pos:start="289:12" pos:end="289:46"><operator pos:start="289:12" pos:end="289:12">!</operator><operator pos:start="289:13" pos:end="289:13">(</operator><name pos:start="289:14" pos:end="289:18">flags</name> <operator pos:start="289:20" pos:end="289:20">&amp;</operator> <name pos:start="289:22" pos:end="289:36">BDRV_O_PROTOCOL</name><operator pos:start="289:37" pos:end="289:37">)</operator> <operator pos:start="289:39" pos:end="289:40">||</operator> <operator pos:start="289:42" pos:end="289:42">!</operator><name pos:start="289:43" pos:end="289:46">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="293:5" pos:end="293:24">/* Open the image */</comment>

    <expr_stmt pos:start="295:5" pos:end="295:58"><expr pos:start="295:5" pos:end="295:57"><name pos:start="295:5" pos:end="295:7">ret</name> <operator pos:start="295:9" pos:end="295:9">=</operator> <call pos:start="295:11" pos:end="295:57"><name pos:start="295:11" pos:end="295:26">bdrv_open_common</name><argument_list pos:start="295:27" pos:end="295:57">(<argument pos:start="295:28" pos:end="295:29"><expr pos:start="295:28" pos:end="295:29"><name pos:start="295:28" pos:end="295:29">bs</name></expr></argument>, <argument pos:start="295:32" pos:end="295:35"><expr pos:start="295:32" pos:end="295:35"><name pos:start="295:32" pos:end="295:35">file</name></expr></argument>, <argument pos:start="295:38" pos:end="295:44"><expr pos:start="295:38" pos:end="295:44"><name pos:start="295:38" pos:end="295:44">options</name></expr></argument>, <argument pos:start="295:47" pos:end="295:56"><expr pos:start="295:47" pos:end="295:56"><operator pos:start="295:47" pos:end="295:47">&amp;</operator><name pos:start="295:48" pos:end="295:56">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="297:5" pos:end="301:5"><if pos:start="297:5" pos:end="301:5">if <condition pos:start="297:8" pos:end="297:16">(<expr pos:start="297:9" pos:end="297:15"><name pos:start="297:9" pos:end="297:11">ret</name> <operator pos:start="297:13" pos:end="297:13">&lt;</operator> <literal type="number" pos:start="297:15" pos:end="297:15">0</literal></expr>)</condition> <block pos:start="297:18" pos:end="301:5">{<block_content pos:start="299:9" pos:end="299:18">

        <goto pos:start="299:9" pos:end="299:18">goto <name pos:start="299:14" pos:end="299:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="305:5" pos:end="311:5"><if pos:start="305:5" pos:end="311:5">if <condition pos:start="305:8" pos:end="305:35">(<expr pos:start="305:9" pos:end="305:34"><name pos:start="305:9" pos:end="305:12">file</name> <operator pos:start="305:14" pos:end="305:15">&amp;&amp;</operator> <operator pos:start="305:17" pos:end="305:17">(</operator><name pos:start="305:18" pos:end="305:25"><name pos:start="305:18" pos:end="305:19">bs</name><operator pos:start="305:20" pos:end="305:21">-&gt;</operator><name pos:start="305:22" pos:end="305:25">file</name></name> <operator pos:start="305:27" pos:end="305:28">!=</operator> <name pos:start="305:30" pos:end="305:33">file</name><operator pos:start="305:34" pos:end="305:34">)</operator></expr>)</condition> <block pos:start="305:37" pos:end="311:5">{<block_content pos:start="307:9" pos:end="309:20">

        <expr_stmt pos:start="307:9" pos:end="307:35"><expr pos:start="307:9" pos:end="307:34"><call pos:start="307:9" pos:end="307:34"><name pos:start="307:9" pos:end="307:24">bdrv_unref_child</name><argument_list pos:start="307:25" pos:end="307:34">(<argument pos:start="307:26" pos:end="307:27"><expr pos:start="307:26" pos:end="307:27"><name pos:start="307:26" pos:end="307:27">bs</name></expr></argument>, <argument pos:start="307:30" pos:end="307:33"><expr pos:start="307:30" pos:end="307:33"><name pos:start="307:30" pos:end="307:33">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:20"><expr pos:start="309:9" pos:end="309:19"><name pos:start="309:9" pos:end="309:12">file</name> <operator pos:start="309:14" pos:end="309:14">=</operator> <name pos:start="309:16" pos:end="309:19">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="315:5" pos:end="315:44">/* If there is a backing file, use it */</comment>

    <if_stmt pos:start="317:5" pos:end="327:5"><if pos:start="317:5" pos:end="327:5">if <condition pos:start="317:8" pos:end="317:41">(<expr pos:start="317:9" pos:end="317:40"><operator pos:start="317:9" pos:end="317:9">(</operator><name pos:start="317:10" pos:end="317:14">flags</name> <operator pos:start="317:16" pos:end="317:16">&amp;</operator> <name pos:start="317:18" pos:end="317:34">BDRV_O_NO_BACKING</name><operator pos:start="317:35" pos:end="317:35">)</operator> <operator pos:start="317:37" pos:end="317:38">==</operator> <literal type="number" pos:start="317:40" pos:end="317:40">0</literal></expr>)</condition> <block pos:start="317:43" pos:end="327:5">{<block_content pos:start="319:9" pos:end="325:9">

        <expr_stmt pos:start="319:9" pos:end="319:73"><expr pos:start="319:9" pos:end="319:72"><name pos:start="319:9" pos:end="319:11">ret</name> <operator pos:start="319:13" pos:end="319:13">=</operator> <call pos:start="319:15" pos:end="319:72"><name pos:start="319:15" pos:end="319:36">bdrv_open_backing_file</name><argument_list pos:start="319:37" pos:end="319:72">(<argument pos:start="319:38" pos:end="319:39"><expr pos:start="319:38" pos:end="319:39"><name pos:start="319:38" pos:end="319:39">bs</name></expr></argument>, <argument pos:start="319:42" pos:end="319:48"><expr pos:start="319:42" pos:end="319:48"><name pos:start="319:42" pos:end="319:48">options</name></expr></argument>, <argument pos:start="319:51" pos:end="319:59"><expr pos:start="319:51" pos:end="319:59"><literal type="string" pos:start="319:51" pos:end="319:59">"backing"</literal></expr></argument>, <argument pos:start="319:62" pos:end="319:71"><expr pos:start="319:62" pos:end="319:71"><operator pos:start="319:62" pos:end="319:62">&amp;</operator><name pos:start="319:63" pos:end="319:71">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="321:9" pos:end="325:9"><if pos:start="321:9" pos:end="325:9">if <condition pos:start="321:12" pos:end="321:20">(<expr pos:start="321:13" pos:end="321:19"><name pos:start="321:13" pos:end="321:15">ret</name> <operator pos:start="321:17" pos:end="321:17">&lt;</operator> <literal type="number" pos:start="321:19" pos:end="321:19">0</literal></expr>)</condition> <block pos:start="321:22" pos:end="325:9">{<block_content pos:start="323:13" pos:end="323:32">

            <goto pos:start="323:13" pos:end="323:32">goto <name pos:start="323:18" pos:end="323:31">close_and_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="331:5" pos:end="331:30"><expr pos:start="331:5" pos:end="331:29"><call pos:start="331:5" pos:end="331:29"><name pos:start="331:5" pos:end="331:25">bdrv_refresh_filename</name><argument_list pos:start="331:26" pos:end="331:29">(<argument pos:start="331:27" pos:end="331:28"><expr pos:start="331:27" pos:end="331:28"><name pos:start="331:27" pos:end="331:28">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="335:5" pos:end="335:48">/* Check if any unknown options were used */</comment>

    <if_stmt pos:start="337:5" pos:end="361:5"><if pos:start="337:5" pos:end="361:5">if <condition pos:start="337:8" pos:end="337:46">(<expr pos:start="337:9" pos:end="337:45"><name pos:start="337:9" pos:end="337:15">options</name> <operator pos:start="337:17" pos:end="337:18">&amp;&amp;</operator> <operator pos:start="337:20" pos:end="337:20">(</operator><call pos:start="337:21" pos:end="337:39"><name pos:start="337:21" pos:end="337:30">qdict_size</name><argument_list pos:start="337:31" pos:end="337:39">(<argument pos:start="337:32" pos:end="337:38"><expr pos:start="337:32" pos:end="337:38"><name pos:start="337:32" pos:end="337:38">options</name></expr></argument>)</argument_list></call> <operator pos:start="337:41" pos:end="337:42">!=</operator> <literal type="number" pos:start="337:44" pos:end="337:44">0</literal><operator pos:start="337:45" pos:end="337:45">)</operator></expr>)</condition> <block pos:start="337:48" pos:end="361:5">{<block_content pos:start="339:9" pos:end="359:28">

        <decl_stmt pos:start="339:9" pos:end="339:55"><decl pos:start="339:9" pos:end="339:54"><type pos:start="339:9" pos:end="339:26"><specifier pos:start="339:9" pos:end="339:13">const</specifier> <name pos:start="339:15" pos:end="339:24">QDictEntry</name> <modifier pos:start="339:26" pos:end="339:26">*</modifier></type><name pos:start="339:27" pos:end="339:31">entry</name> <init pos:start="339:33" pos:end="339:54">= <expr pos:start="339:35" pos:end="339:54"><call pos:start="339:35" pos:end="339:54"><name pos:start="339:35" pos:end="339:45">qdict_first</name><argument_list pos:start="339:46" pos:end="339:54">(<argument pos:start="339:47" pos:end="339:53"><expr pos:start="339:47" pos:end="339:53"><name pos:start="339:47" pos:end="339:53">options</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="341:9" pos:end="355:9"><if pos:start="341:9" pos:end="347:9">if <condition pos:start="341:12" pos:end="341:36">(<expr pos:start="341:13" pos:end="341:35"><name pos:start="341:13" pos:end="341:17">flags</name> <operator pos:start="341:19" pos:end="341:19">&amp;</operator> <name pos:start="341:21" pos:end="341:35">BDRV_O_PROTOCOL</name></expr>)</condition> <block pos:start="341:38" pos:end="347:9">{<block_content pos:start="343:13" pos:end="345:61">

            <expr_stmt pos:start="343:13" pos:end="345:61"><expr pos:start="343:13" pos:end="345:60"><call pos:start="343:13" pos:end="345:60"><name pos:start="343:13" pos:end="343:22">error_setg</name><argument_list pos:start="343:23" pos:end="345:60">(<argument pos:start="343:24" pos:end="343:27"><expr pos:start="343:24" pos:end="343:27"><name pos:start="343:24" pos:end="343:27">errp</name></expr></argument>, <argument pos:start="343:30" pos:end="345:29"><expr pos:start="343:30" pos:end="345:29"><literal type="string" pos:start="343:30" pos:end="343:78">"Block protocol '%s' doesn't support the option "</literal>

                       <literal type="string" pos:start="345:24" pos:end="345:29">"'%s'"</literal></expr></argument>, <argument pos:start="345:32" pos:end="345:47"><expr pos:start="345:32" pos:end="345:47"><name pos:start="345:32" pos:end="345:47"><name pos:start="345:32" pos:end="345:34">drv</name><operator pos:start="345:35" pos:end="345:36">-&gt;</operator><name pos:start="345:37" pos:end="345:47">format_name</name></name></expr></argument>, <argument pos:start="345:50" pos:end="345:59"><expr pos:start="345:50" pos:end="345:59"><name pos:start="345:50" pos:end="345:59"><name pos:start="345:50" pos:end="345:54">entry</name><operator pos:start="345:55" pos:end="345:56">-&gt;</operator><name pos:start="345:57" pos:end="345:59">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="347:11" pos:end="355:9">else <block pos:start="347:16" pos:end="355:9">{<block_content pos:start="349:13" pos:end="353:53">

            <expr_stmt pos:start="349:13" pos:end="353:53"><expr pos:start="349:13" pos:end="353:52"><call pos:start="349:13" pos:end="353:52"><name pos:start="349:13" pos:end="349:22">error_setg</name><argument_list pos:start="349:23" pos:end="353:52">(<argument pos:start="349:24" pos:end="349:27"><expr pos:start="349:24" pos:end="349:27"><name pos:start="349:24" pos:end="349:27">errp</name></expr></argument>,

                       <argument pos:start="351:24" pos:end="351:75"><expr pos:start="351:24" pos:end="351:75"><literal type="string" pos:start="351:24" pos:end="351:75">"Block format '%s' does not support the option '%s'"</literal></expr></argument>,

                       <argument pos:start="353:24" pos:end="353:39"><expr pos:start="353:24" pos:end="353:39"><name pos:start="353:24" pos:end="353:39"><name pos:start="353:24" pos:end="353:26">drv</name><operator pos:start="353:27" pos:end="353:28">-&gt;</operator><name pos:start="353:29" pos:end="353:39">format_name</name></name></expr></argument>, <argument pos:start="353:42" pos:end="353:51"><expr pos:start="353:42" pos:end="353:51"><name pos:start="353:42" pos:end="353:51"><name pos:start="353:42" pos:end="353:46">entry</name><operator pos:start="353:47" pos:end="353:48">-&gt;</operator><name pos:start="353:49" pos:end="353:51">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <goto pos:start="359:9" pos:end="359:28">goto <name pos:start="359:14" pos:end="359:27">close_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="365:5" pos:end="381:5"><if pos:start="365:5" pos:end="369:5">if <condition pos:start="365:8" pos:end="365:31">(<expr pos:start="365:9" pos:end="365:30"><operator pos:start="365:9" pos:end="365:9">!</operator><call pos:start="365:10" pos:end="365:30"><name pos:start="365:10" pos:end="365:26">bdrv_key_required</name><argument_list pos:start="365:27" pos:end="365:30">(<argument pos:start="365:28" pos:end="365:29"><expr pos:start="365:28" pos:end="365:29"><name pos:start="365:28" pos:end="365:29">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="365:33" pos:end="369:5">{<block_content pos:start="367:9" pos:end="367:46">

        <expr_stmt pos:start="367:9" pos:end="367:46"><expr pos:start="367:9" pos:end="367:45"><call pos:start="367:9" pos:end="367:45"><name pos:start="367:9" pos:end="367:35">bdrv_parent_cb_change_media</name><argument_list pos:start="367:36" pos:end="367:45">(<argument pos:start="367:37" pos:end="367:38"><expr pos:start="367:37" pos:end="367:38"><name pos:start="367:37" pos:end="367:38">bs</name></expr></argument>, <argument pos:start="367:41" pos:end="367:44"><expr pos:start="367:41" pos:end="367:44"><name pos:start="367:41" pos:end="367:44">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="369:7" pos:end="381:5">else if <condition pos:start="369:15" pos:end="373:52">(<expr pos:start="369:16" pos:end="373:51"><operator pos:start="369:16" pos:end="369:16">!</operator><call pos:start="369:17" pos:end="369:51"><name pos:start="369:17" pos:end="369:30">runstate_check</name><argument_list pos:start="369:31" pos:end="369:51">(<argument pos:start="369:32" pos:end="369:50"><expr pos:start="369:32" pos:end="369:50"><name pos:start="369:32" pos:end="369:50">RUN_STATE_PRELAUNCH</name></expr></argument>)</argument_list></call>

               <operator pos:start="371:16" pos:end="371:17">&amp;&amp;</operator> <operator pos:start="371:19" pos:end="371:19">!</operator><call pos:start="371:20" pos:end="371:54"><name pos:start="371:20" pos:end="371:33">runstate_check</name><argument_list pos:start="371:34" pos:end="371:54">(<argument pos:start="371:35" pos:end="371:53"><expr pos:start="371:35" pos:end="371:53"><name pos:start="371:35" pos:end="371:53">RUN_STATE_INMIGRATE</name></expr></argument>)</argument_list></call>

               <operator pos:start="373:16" pos:end="373:17">&amp;&amp;</operator> <operator pos:start="373:19" pos:end="373:19">!</operator><call pos:start="373:20" pos:end="373:51"><name pos:start="373:20" pos:end="373:33">runstate_check</name><argument_list pos:start="373:34" pos:end="373:51">(<argument pos:start="373:35" pos:end="373:50"><expr pos:start="373:35" pos:end="373:50"><name pos:start="373:35" pos:end="373:50">RUN_STATE_PAUSED</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="373:54" pos:end="381:5">{<block_content pos:start="375:9" pos:end="379:28"> <comment type="block" pos:start="373:56" pos:end="373:65">/* HACK */</comment>

        <expr_stmt pos:start="375:9" pos:end="377:75"><expr pos:start="375:9" pos:end="377:74"><call pos:start="375:9" pos:end="377:74"><name pos:start="375:9" pos:end="375:18">error_setg</name><argument_list pos:start="375:19" pos:end="377:74">(<argument pos:start="375:20" pos:end="375:23"><expr pos:start="375:20" pos:end="375:23"><name pos:start="375:20" pos:end="375:23">errp</name></expr></argument>,

                   <argument pos:start="377:20" pos:end="377:73"><expr pos:start="377:20" pos:end="377:73"><literal type="string" pos:start="377:20" pos:end="377:73">"Guest must be stopped for opening of encrypted image"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="379:9" pos:end="379:28">goto <name pos:start="379:14" pos:end="379:27">close_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="385:5" pos:end="385:21"><expr pos:start="385:5" pos:end="385:20"><call pos:start="385:5" pos:end="385:20"><name pos:start="385:5" pos:end="385:11">QDECREF</name><argument_list pos:start="385:12" pos:end="385:20">(<argument pos:start="385:13" pos:end="385:19"><expr pos:start="385:13" pos:end="385:19"><name pos:start="385:13" pos:end="385:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="389:5" pos:end="391:40">/* For snapshot=on, create a temporary qcow2 overlay. bs points to the

     * temporary snapshot afterwards. */</comment>

    <if_stmt pos:start="393:5" pos:end="421:5"><if pos:start="393:5" pos:end="421:5">if <condition pos:start="393:8" pos:end="393:23">(<expr pos:start="393:9" pos:end="393:22"><name pos:start="393:9" pos:end="393:22">snapshot_flags</name></expr>)</condition> <block pos:start="393:25" pos:end="421:5">{<block_content pos:start="395:9" pos:end="419:25">

        <decl_stmt pos:start="395:9" pos:end="395:38"><decl pos:start="395:9" pos:end="395:37"><type pos:start="395:9" pos:end="395:26"><name pos:start="395:9" pos:end="395:24">BlockDriverState</name> <modifier pos:start="395:26" pos:end="395:26">*</modifier></type><name pos:start="395:27" pos:end="395:37">snapshot_bs</name></decl>;</decl_stmt>

        <expr_stmt pos:start="397:9" pos:end="399:78"><expr pos:start="397:9" pos:end="399:77"><name pos:start="397:9" pos:end="397:19">snapshot_bs</name> <operator pos:start="397:21" pos:end="397:21">=</operator> <call pos:start="397:23" pos:end="399:77"><name pos:start="397:23" pos:end="397:47">bdrv_append_temp_snapshot</name><argument_list pos:start="397:48" pos:end="399:77">(<argument pos:start="397:49" pos:end="397:50"><expr pos:start="397:49" pos:end="397:50"><name pos:start="397:49" pos:end="397:50">bs</name></expr></argument>, <argument pos:start="397:53" pos:end="397:66"><expr pos:start="397:53" pos:end="397:66"><name pos:start="397:53" pos:end="397:66">snapshot_flags</name></expr></argument>,

                                                <argument pos:start="399:49" pos:end="399:64"><expr pos:start="399:49" pos:end="399:64"><name pos:start="399:49" pos:end="399:64">snapshot_options</name></expr></argument>, <argument pos:start="399:67" pos:end="399:76"><expr pos:start="399:67" pos:end="399:76"><operator pos:start="399:67" pos:end="399:67">&amp;</operator><name pos:start="399:68" pos:end="399:76">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="401:9" pos:end="401:32"><expr pos:start="401:9" pos:end="401:31"><name pos:start="401:9" pos:end="401:24">snapshot_options</name> <operator pos:start="401:26" pos:end="401:26">=</operator> <name pos:start="401:28" pos:end="401:31">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="403:9" pos:end="407:9"><if pos:start="403:9" pos:end="407:9">if <condition pos:start="403:12" pos:end="403:22">(<expr pos:start="403:13" pos:end="403:21"><name pos:start="403:13" pos:end="403:21">local_err</name></expr>)</condition> <block pos:start="403:24" pos:end="407:9">{<block_content pos:start="405:13" pos:end="405:32">

            <goto pos:start="405:13" pos:end="405:32">goto <name pos:start="405:18" pos:end="405:31">close_and_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="409:9" pos:end="415:70">/* We are not going to return bs but the overlay on top of it

         * (snapshot_bs); thus, we have to drop the strong reference to bs

         * (which we obtained by calling bdrv_new()). bs will not be deleted,

         * though, because the overlay still has a reference to it. */</comment>

        <expr_stmt pos:start="417:9" pos:end="417:23"><expr pos:start="417:9" pos:end="417:22"><call pos:start="417:9" pos:end="417:22"><name pos:start="417:9" pos:end="417:18">bdrv_unref</name><argument_list pos:start="417:19" pos:end="417:22">(<argument pos:start="417:20" pos:end="417:21"><expr pos:start="417:20" pos:end="417:21"><name pos:start="417:20" pos:end="417:21">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="419:9" pos:end="419:25"><expr pos:start="419:9" pos:end="419:24"><name pos:start="419:9" pos:end="419:10">bs</name> <operator pos:start="419:12" pos:end="419:12">=</operator> <name pos:start="419:14" pos:end="419:24">snapshot_bs</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="425:5" pos:end="425:14">return <expr pos:start="425:12" pos:end="425:13"><name pos:start="425:12" pos:end="425:13">bs</name></expr>;</return>



<label pos:start="429:1" pos:end="429:5"><name pos:start="429:1" pos:end="429:4">fail</name>:</label>

    <if_stmt pos:start="431:5" pos:end="435:5"><if pos:start="431:5" pos:end="435:5">if <condition pos:start="431:8" pos:end="431:21">(<expr pos:start="431:9" pos:end="431:20"><name pos:start="431:9" pos:end="431:12">file</name> <operator pos:start="431:14" pos:end="431:15">!=</operator> <name pos:start="431:17" pos:end="431:20">NULL</name></expr>)</condition> <block pos:start="431:23" pos:end="435:5">{<block_content pos:start="433:9" pos:end="433:35">

        <expr_stmt pos:start="433:9" pos:end="433:35"><expr pos:start="433:9" pos:end="433:34"><call pos:start="433:9" pos:end="433:34"><name pos:start="433:9" pos:end="433:24">bdrv_unref_child</name><argument_list pos:start="433:25" pos:end="433:34">(<argument pos:start="433:26" pos:end="433:27"><expr pos:start="433:26" pos:end="433:27"><name pos:start="433:26" pos:end="433:27">bs</name></expr></argument>, <argument pos:start="433:30" pos:end="433:33"><expr pos:start="433:30" pos:end="433:33"><name pos:start="433:30" pos:end="433:33">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="437:5" pos:end="437:30"><expr pos:start="437:5" pos:end="437:29"><call pos:start="437:5" pos:end="437:29"><name pos:start="437:5" pos:end="437:11">QDECREF</name><argument_list pos:start="437:12" pos:end="437:29">(<argument pos:start="437:13" pos:end="437:28"><expr pos:start="437:13" pos:end="437:28"><name pos:start="437:13" pos:end="437:28">snapshot_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="439:5" pos:end="439:34"><expr pos:start="439:5" pos:end="439:33"><call pos:start="439:5" pos:end="439:33"><name pos:start="439:5" pos:end="439:11">QDECREF</name><argument_list pos:start="439:12" pos:end="439:33">(<argument pos:start="439:13" pos:end="439:32"><expr pos:start="439:13" pos:end="439:32"><name pos:start="439:13" pos:end="439:32"><name pos:start="439:13" pos:end="439:14">bs</name><operator pos:start="439:15" pos:end="439:16">-&gt;</operator><name pos:start="439:17" pos:end="439:32">explicit_options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="441:5" pos:end="441:25"><expr pos:start="441:5" pos:end="441:24"><call pos:start="441:5" pos:end="441:24"><name pos:start="441:5" pos:end="441:11">QDECREF</name><argument_list pos:start="441:12" pos:end="441:24">(<argument pos:start="441:13" pos:end="441:23"><expr pos:start="441:13" pos:end="441:23"><name pos:start="441:13" pos:end="441:23"><name pos:start="441:13" pos:end="441:14">bs</name><operator pos:start="441:15" pos:end="441:16">-&gt;</operator><name pos:start="441:17" pos:end="441:23">options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="443:5" pos:end="443:21"><expr pos:start="443:5" pos:end="443:20"><call pos:start="443:5" pos:end="443:20"><name pos:start="443:5" pos:end="443:11">QDECREF</name><argument_list pos:start="443:12" pos:end="443:20">(<argument pos:start="443:13" pos:end="443:19"><expr pos:start="443:13" pos:end="443:19"><name pos:start="443:13" pos:end="443:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="445:5" pos:end="445:23"><expr pos:start="445:5" pos:end="445:22"><name pos:start="445:5" pos:end="445:15"><name pos:start="445:5" pos:end="445:6">bs</name><operator pos:start="445:7" pos:end="445:8">-&gt;</operator><name pos:start="445:9" pos:end="445:15">options</name></name> <operator pos:start="445:17" pos:end="445:17">=</operator> <name pos:start="445:19" pos:end="445:22">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="447:5" pos:end="447:19"><expr pos:start="447:5" pos:end="447:18"><call pos:start="447:5" pos:end="447:18"><name pos:start="447:5" pos:end="447:14">bdrv_unref</name><argument_list pos:start="447:15" pos:end="447:18">(<argument pos:start="447:16" pos:end="447:17"><expr pos:start="447:16" pos:end="447:17"><name pos:start="447:16" pos:end="447:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="449:5" pos:end="449:37"><expr pos:start="449:5" pos:end="449:36"><call pos:start="449:5" pos:end="449:36"><name pos:start="449:5" pos:end="449:19">error_propagate</name><argument_list pos:start="449:20" pos:end="449:36">(<argument pos:start="449:21" pos:end="449:24"><expr pos:start="449:21" pos:end="449:24"><name pos:start="449:21" pos:end="449:24">errp</name></expr></argument>, <argument pos:start="449:27" pos:end="449:35"><expr pos:start="449:27" pos:end="449:35"><name pos:start="449:27" pos:end="449:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="451:5" pos:end="451:16">return <expr pos:start="451:12" pos:end="451:15"><name pos:start="451:12" pos:end="451:15">NULL</name></expr>;</return>



<label pos:start="455:1" pos:end="455:15"><name pos:start="455:1" pos:end="455:14">close_and_fail</name>:</label>

    <expr_stmt pos:start="457:5" pos:end="457:19"><expr pos:start="457:5" pos:end="457:18"><call pos:start="457:5" pos:end="457:18"><name pos:start="457:5" pos:end="457:14">bdrv_unref</name><argument_list pos:start="457:15" pos:end="457:18">(<argument pos:start="457:16" pos:end="457:17"><expr pos:start="457:16" pos:end="457:17"><name pos:start="457:16" pos:end="457:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="459:5" pos:end="459:30"><expr pos:start="459:5" pos:end="459:29"><call pos:start="459:5" pos:end="459:29"><name pos:start="459:5" pos:end="459:11">QDECREF</name><argument_list pos:start="459:12" pos:end="459:29">(<argument pos:start="459:13" pos:end="459:28"><expr pos:start="459:13" pos:end="459:28"><name pos:start="459:13" pos:end="459:28">snapshot_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="461:5" pos:end="461:21"><expr pos:start="461:5" pos:end="461:20"><call pos:start="461:5" pos:end="461:20"><name pos:start="461:5" pos:end="461:11">QDECREF</name><argument_list pos:start="461:12" pos:end="461:20">(<argument pos:start="461:13" pos:end="461:19"><expr pos:start="461:13" pos:end="461:19"><name pos:start="461:13" pos:end="461:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="463:5" pos:end="463:37"><expr pos:start="463:5" pos:end="463:36"><call pos:start="463:5" pos:end="463:36"><name pos:start="463:5" pos:end="463:19">error_propagate</name><argument_list pos:start="463:20" pos:end="463:36">(<argument pos:start="463:21" pos:end="463:24"><expr pos:start="463:21" pos:end="463:24"><name pos:start="463:21" pos:end="463:24">errp</name></expr></argument>, <argument pos:start="463:27" pos:end="463:35"><expr pos:start="463:27" pos:end="463:35"><name pos:start="463:27" pos:end="463:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="465:5" pos:end="465:16">return <expr pos:start="465:12" pos:end="465:15"><name pos:start="465:12" pos:end="465:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
