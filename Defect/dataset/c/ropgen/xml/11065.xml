<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11065.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_mb_info</name><parameter_list pos:start="1:26" pos:end="3:63">(<parameter pos:start="1:27" pos:end="1:45"><decl pos:start="1:27" pos:end="1:45"><type pos:start="1:27" pos:end="1:45"><name pos:start="1:27" pos:end="1:40">IVI4DecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:58">IVIBandDesc</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">band</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:33">IVITile</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">tile</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:62"><decl pos:start="3:42" pos:end="3:62"><type pos:start="3:42" pos:end="3:62"><name pos:start="3:42" pos:end="3:55">AVCodecContext</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:62">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="225:1">{<block_content pos:start="7:5" pos:end="223:13">

    <decl_stmt pos:start="7:5" pos:end="9:39"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>         <name pos:start="7:17" pos:end="7:17">x</name></decl>, <decl pos:start="7:20" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:20">y</name></decl>, <decl pos:start="7:23" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:26">mv_x</name></decl>, <decl pos:start="7:29" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:32">mv_y</name></decl>, <decl pos:start="7:35" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:42">mv_delta</name></decl>, <decl pos:start="7:45" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:45" pos:end="7:48">offs</name></decl>, <decl pos:start="7:51" pos:end="7:59"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:51" pos:end="7:59">mb_offset</name></decl>, <decl pos:start="7:62" pos:end="7:72"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:62" pos:end="7:72">blks_per_mb</name></decl>,

                <decl pos:start="9:17" pos:end="9:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="9:17" pos:end="9:24">mv_scale</name></decl>, <decl pos:start="9:27" pos:end="9:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="9:27" pos:end="9:38">mb_type_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:13">IVIMbInfo</name>   <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">mb</name></decl>, <decl pos:start="11:22" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:17"><modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:28">ref_mb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:56"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type>         <name pos:start="13:17" pos:end="13:26">row_offset</name> <init pos:start="13:28" pos:end="13:56">= <expr pos:start="13:30" pos:end="13:56"><name pos:start="13:30" pos:end="13:42"><name pos:start="13:30" pos:end="13:33">band</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:42">mb_size</name></name> <operator pos:start="13:44" pos:end="13:44">*</operator> <name pos:start="13:46" pos:end="13:56"><name pos:start="13:46" pos:end="13:49">band</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:56">pitch</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:6">mb</name>     <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:22"><name pos:start="17:14" pos:end="17:17">tile</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:22">mbs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:10">ref_mb</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:26"><name pos:start="19:14" pos:end="19:17">tile</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:26">ref_mbs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:8">offs</name>   <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:23"><name pos:start="21:14" pos:end="21:17">tile</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:23">ypos</name></name> <operator pos:start="21:25" pos:end="21:25">*</operator> <name pos:start="21:27" pos:end="21:37"><name pos:start="21:27" pos:end="21:30">band</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:37">pitch</name></name> <operator pos:start="21:39" pos:end="21:39">+</operator> <name pos:start="21:41" pos:end="21:50"><name pos:start="21:41" pos:end="21:44">tile</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:50">xpos</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:62"><expr pos:start="25:5" pos:end="25:61"><name pos:start="25:5" pos:end="25:15">blks_per_mb</name>  <operator pos:start="25:18" pos:end="25:18">=</operator> <ternary pos:start="25:20" pos:end="25:61"><condition pos:start="25:20" pos:end="25:55"><expr pos:start="25:20" pos:end="25:52"><name pos:start="25:20" pos:end="25:32"><name pos:start="25:20" pos:end="25:23">band</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:32">mb_size</name></name>   <operator pos:start="25:36" pos:end="25:37">!=</operator> <name pos:start="25:39" pos:end="25:52"><name pos:start="25:39" pos:end="25:42">band</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:52">blk_size</name></name></expr>  ?</condition><then pos:start="25:57" pos:end="25:57"> <expr pos:start="25:57" pos:end="25:57"><literal type="number" pos:start="25:57" pos:end="25:57">4</literal></expr> </then><else pos:start="25:59" pos:end="25:61">: <expr pos:start="25:61" pos:end="25:61"><literal type="number" pos:start="25:61" pos:end="25:61">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:62"><expr pos:start="27:5" pos:end="27:61"><name pos:start="27:5" pos:end="27:16">mb_type_bits</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <ternary pos:start="27:20" pos:end="27:61"><condition pos:start="27:20" pos:end="27:55"><expr pos:start="27:20" pos:end="27:53"><name pos:start="27:20" pos:end="27:34"><name pos:start="27:20" pos:end="27:22">ctx</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:34">frame_type</name></name> <operator pos:start="27:36" pos:end="27:37">==</operator> <name pos:start="27:39" pos:end="27:53">FRAMETYPE_BIDIR</name></expr> ?</condition><then pos:start="27:57" pos:end="27:57"> <expr pos:start="27:57" pos:end="27:57"><literal type="number" pos:start="27:57" pos:end="27:57">2</literal></expr> </then><else pos:start="27:59" pos:end="27:61">: <expr pos:start="27:61" pos:end="27:61"><literal type="number" pos:start="27:61" pos:end="27:61">1</literal></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:41">/* scale factor for motion vectors */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:77"><expr pos:start="33:5" pos:end="33:76"><name pos:start="33:5" pos:end="33:12">mv_scale</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <operator pos:start="33:16" pos:end="33:16">(</operator><name pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:19">ctx</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:27">planes</name><index pos:start="33:28" pos:end="33:30">[<expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">0</literal></expr>]</index></name><operator pos:start="33:31" pos:end="33:31">.</operator><name pos:start="33:32" pos:end="33:39"><name pos:start="33:32" pos:end="33:36">bands</name><index pos:start="33:37" pos:end="33:39">[<expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">0</literal></expr>]</index></name><operator pos:start="33:40" pos:end="33:40">.</operator><name pos:start="33:41" pos:end="33:47">mb_size</name> <operator pos:start="33:49" pos:end="33:50">&gt;&gt;</operator> <literal type="number" pos:start="33:52" pos:end="33:52">3</literal><operator pos:start="33:53" pos:end="33:53">)</operator> <operator pos:start="33:55" pos:end="33:55">-</operator> <operator pos:start="33:57" pos:end="33:57">(</operator><name pos:start="33:58" pos:end="33:70"><name pos:start="33:58" pos:end="33:61">band</name><operator pos:start="33:62" pos:end="33:63">-&gt;</operator><name pos:start="33:64" pos:end="33:70">mb_size</name></name> <operator pos:start="33:72" pos:end="33:73">&gt;&gt;</operator> <literal type="number" pos:start="33:75" pos:end="33:75">3</literal><operator pos:start="33:76" pos:end="33:76">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:20"><expr pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:8">mv_x</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <name pos:start="35:12" pos:end="35:15">mv_y</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>;</expr_stmt>



    <for pos:start="39:5" pos:end="215:5">for <control pos:start="39:9" pos:end="39:75">(<init pos:start="39:10" pos:end="39:24"><expr pos:start="39:10" pos:end="39:23"><name pos:start="39:10" pos:end="39:10">y</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:23"><name pos:start="39:14" pos:end="39:17">tile</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:23">ypos</name></name></expr>;</init> <condition pos:start="39:26" pos:end="39:55"><expr pos:start="39:26" pos:end="39:54"><name pos:start="39:26" pos:end="39:26">y</name> <operator pos:start="39:28" pos:end="39:28">&lt;</operator> <name pos:start="39:30" pos:end="39:39"><name pos:start="39:30" pos:end="39:33">tile</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:39">ypos</name></name> <operator pos:start="39:41" pos:end="39:41">+</operator> <name pos:start="39:43" pos:end="39:54"><name pos:start="39:43" pos:end="39:46">tile</name><operator pos:start="39:47" pos:end="39:48">-&gt;</operator><name pos:start="39:49" pos:end="39:54">height</name></name></expr>;</condition> <incr pos:start="39:57" pos:end="39:74"><expr pos:start="39:57" pos:end="39:74"><name pos:start="39:57" pos:end="39:57">y</name> <operator pos:start="39:59" pos:end="39:60">+=</operator> <name pos:start="39:62" pos:end="39:74"><name pos:start="39:62" pos:end="39:65">band</name><operator pos:start="39:66" pos:end="39:67">-&gt;</operator><name pos:start="39:68" pos:end="39:74">mb_size</name></name></expr></incr>)</control> <block pos:start="39:77" pos:end="215:5">{<block_content pos:start="41:9" pos:end="213:27">

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:17">mb_offset</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:24">offs</name></expr>;</expr_stmt>



        <for pos:start="45:9" pos:end="209:9">for <control pos:start="45:13" pos:end="45:78">(<init pos:start="45:14" pos:end="45:28"><expr pos:start="45:14" pos:end="45:27"><name pos:start="45:14" pos:end="45:14">x</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:27"><name pos:start="45:18" pos:end="45:21">tile</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:27">xpos</name></name></expr>;</init> <condition pos:start="45:30" pos:end="45:58"><expr pos:start="45:30" pos:end="45:57"><name pos:start="45:30" pos:end="45:30">x</name> <operator pos:start="45:32" pos:end="45:32">&lt;</operator> <name pos:start="45:34" pos:end="45:43"><name pos:start="45:34" pos:end="45:37">tile</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:43">xpos</name></name> <operator pos:start="45:45" pos:end="45:45">+</operator> <name pos:start="45:47" pos:end="45:57"><name pos:start="45:47" pos:end="45:50">tile</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:57">width</name></name></expr>;</condition> <incr pos:start="45:60" pos:end="45:77"><expr pos:start="45:60" pos:end="45:77"><name pos:start="45:60" pos:end="45:60">x</name> <operator pos:start="45:62" pos:end="45:63">+=</operator> <name pos:start="45:65" pos:end="45:77"><name pos:start="45:65" pos:end="45:68">band</name><operator pos:start="45:69" pos:end="45:70">-&gt;</operator><name pos:start="45:71" pos:end="45:77">mb_size</name></name></expr></incr>)</control> <block pos:start="45:80" pos:end="209:9">{<block_content pos:start="47:13" pos:end="207:39">

            <expr_stmt pos:start="47:13" pos:end="47:29"><expr pos:start="47:13" pos:end="47:28"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:14">mb</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:20">xpos</name></name>     <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:28">x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:29"><expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:14">mb</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:20">ypos</name></name>     <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:28">y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:37"><expr pos:start="51:13" pos:end="51:36"><name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:14">mb</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:24">buf_offs</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:36">mb_offset</name></expr>;</expr_stmt>



            <if_stmt pos:start="55:13" pos:end="197:13"><if pos:start="55:13" pos:end="107:13">if <condition pos:start="55:16" pos:end="55:36">(<expr pos:start="55:17" pos:end="55:35"><call pos:start="55:17" pos:end="55:35"><name pos:start="55:17" pos:end="55:25">get_bits1</name><argument_list pos:start="55:26" pos:end="55:35">(<argument pos:start="55:27" pos:end="55:34"><expr pos:start="55:27" pos:end="55:34"><operator pos:start="55:27" pos:end="55:27">&amp;</operator><name pos:start="55:28" pos:end="55:34"><name pos:start="55:28" pos:end="55:30">ctx</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:34">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:38" pos:end="107:13">{<block_content pos:start="57:17" pos:end="105:17">

                <if_stmt pos:start="57:17" pos:end="63:17"><if pos:start="57:17" pos:end="63:17">if <condition pos:start="57:20" pos:end="57:55">(<expr pos:start="57:21" pos:end="57:54"><name pos:start="57:21" pos:end="57:35"><name pos:start="57:21" pos:end="57:23">ctx</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:35">frame_type</name></name> <operator pos:start="57:37" pos:end="57:38">==</operator> <name pos:start="57:40" pos:end="57:54">FRAMETYPE_INTRA</name></expr>)</condition> <block pos:start="57:57" pos:end="63:17">{<block_content pos:start="59:21" pos:end="61:47">

                    <expr_stmt pos:start="59:21" pos:end="59:91"><expr pos:start="59:21" pos:end="59:90"><call pos:start="59:21" pos:end="59:90"><name pos:start="59:21" pos:end="59:26">av_log</name><argument_list pos:start="59:27" pos:end="59:90">(<argument pos:start="59:28" pos:end="59:32"><expr pos:start="59:28" pos:end="59:32"><name pos:start="59:28" pos:end="59:32">avctx</name></expr></argument>, <argument pos:start="59:35" pos:end="59:46"><expr pos:start="59:35" pos:end="59:46"><name pos:start="59:35" pos:end="59:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:49" pos:end="59:89"><expr pos:start="59:49" pos:end="59:89"><literal type="string" pos:start="59:49" pos:end="59:89">"Empty macroblock in an INTRA picture!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="61:21" pos:end="61:47">return <expr pos:start="61:28" pos:end="61:46"><name pos:start="61:28" pos:end="61:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:29"><expr pos:start="65:17" pos:end="65:28"><name pos:start="65:17" pos:end="65:24"><name pos:start="65:17" pos:end="65:18">mb</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:24">type</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <literal type="number" pos:start="65:28" pos:end="65:28">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="65:31" pos:end="65:70">/* empty macroblocks are always INTER */</comment>

                <expr_stmt pos:start="67:17" pos:end="67:29"><expr pos:start="67:17" pos:end="67:28"><name pos:start="67:17" pos:end="67:23"><name pos:start="67:17" pos:end="67:18">mb</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:23">cbp</name></name>  <operator pos:start="67:26" pos:end="67:26">=</operator> <literal type="number" pos:start="67:28" pos:end="67:28">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="67:31" pos:end="67:56">/* all blocks are empty */</comment>



                <expr_stmt pos:start="71:17" pos:end="71:32"><expr pos:start="71:17" pos:end="71:31"><name pos:start="71:17" pos:end="71:27"><name pos:start="71:17" pos:end="71:18">mb</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:27">q_delta</name></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <literal type="number" pos:start="71:31" pos:end="71:31">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="73:17" pos:end="81:17"><if pos:start="73:17" pos:end="81:17">if <condition pos:start="73:20" pos:end="73:65">(<expr pos:start="73:21" pos:end="73:64"><operator pos:start="73:21" pos:end="73:21">!</operator><name pos:start="73:22" pos:end="73:32"><name pos:start="73:22" pos:end="73:25">band</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:32">plane</name></name> <operator pos:start="73:34" pos:end="73:35">&amp;&amp;</operator> <operator pos:start="73:37" pos:end="73:37">!</operator><name pos:start="73:38" pos:end="73:51"><name pos:start="73:38" pos:end="73:41">band</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:51">band_num</name></name> <operator pos:start="73:53" pos:end="73:54">&amp;&amp;</operator> <name pos:start="73:56" pos:end="73:64"><name pos:start="73:56" pos:end="73:58">ctx</name><operator pos:start="73:59" pos:end="73:60">-&gt;</operator><name pos:start="73:61" pos:end="73:64">in_q</name></name></expr>)</condition> <block pos:start="73:67" pos:end="81:17">{<block_content pos:start="75:21" pos:end="79:60">

                    <expr_stmt pos:start="75:21" pos:end="77:60"><expr pos:start="75:21" pos:end="77:59"><name pos:start="75:21" pos:end="75:31"><name pos:start="75:21" pos:end="75:22">mb</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:31">q_delta</name></name> <operator pos:start="75:33" pos:end="75:33">=</operator> <call pos:start="75:35" pos:end="77:59"><name pos:start="75:35" pos:end="75:42">get_vlc2</name><argument_list pos:start="75:43" pos:end="77:59">(<argument pos:start="75:44" pos:end="75:51"><expr pos:start="75:44" pos:end="75:51"><operator pos:start="75:44" pos:end="75:44">&amp;</operator><name pos:start="75:45" pos:end="75:51"><name pos:start="75:45" pos:end="75:47">ctx</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:51">gb</name></name></expr></argument>, <argument pos:start="75:54" pos:end="75:75"><expr pos:start="75:54" pos:end="75:75"><name pos:start="75:54" pos:end="75:75"><name pos:start="75:54" pos:end="75:56">ctx</name><operator pos:start="75:57" pos:end="75:58">-&gt;</operator><name pos:start="75:59" pos:end="75:64">mb_vlc</name><operator pos:start="75:65" pos:end="75:65">.</operator><name pos:start="75:66" pos:end="75:68">tab</name><operator pos:start="75:69" pos:end="75:70">-&gt;</operator><name pos:start="75:71" pos:end="75:75">table</name></name></expr></argument>,

                                           <argument pos:start="77:44" pos:end="77:55"><expr pos:start="77:44" pos:end="77:55"><name pos:start="77:44" pos:end="77:55">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="77:58" pos:end="77:58"><expr pos:start="77:58" pos:end="77:58"><literal type="number" pos:start="77:58" pos:end="77:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:60"><expr pos:start="79:21" pos:end="79:59"><name pos:start="79:21" pos:end="79:31"><name pos:start="79:21" pos:end="79:22">mb</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:31">q_delta</name></name> <operator pos:start="79:33" pos:end="79:33">=</operator> <call pos:start="79:35" pos:end="79:59"><name pos:start="79:35" pos:end="79:46">IVI_TOSIGNED</name><argument_list pos:start="79:47" pos:end="79:59">(<argument pos:start="79:48" pos:end="79:58"><expr pos:start="79:48" pos:end="79:58"><name pos:start="79:48" pos:end="79:58"><name pos:start="79:48" pos:end="79:49">mb</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:58">q_delta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="85:17" pos:end="85:40"><expr pos:start="85:17" pos:end="85:39"><name pos:start="85:17" pos:end="85:24"><name pos:start="85:17" pos:end="85:18">mb</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:24">mv_x</name></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:35"><name pos:start="85:28" pos:end="85:29">mb</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:35">mv_y</name></name> <operator pos:start="85:37" pos:end="85:37">=</operator> <literal type="number" pos:start="85:39" pos:end="85:39">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="85:42" pos:end="85:69">/* no motion vector coded */</comment>

                <if_stmt pos:start="87:17" pos:end="105:17"><if pos:start="87:17" pos:end="105:17">if <condition pos:start="87:20" pos:end="87:37">(<expr pos:start="87:21" pos:end="87:36"><name pos:start="87:21" pos:end="87:36"><name pos:start="87:21" pos:end="87:24">band</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:36">inherit_mv</name></name></expr>)</condition> <block pos:start="87:39" pos:end="105:17">{<block_content pos:start="91:21" pos:end="103:21">

                    <comment type="block" pos:start="89:21" pos:end="89:51">/* motion vector inheritance */</comment>

                    <if_stmt pos:start="91:21" pos:end="103:21"><if pos:start="91:21" pos:end="97:21">if <condition pos:start="91:24" pos:end="91:33">(<expr pos:start="91:25" pos:end="91:32"><name pos:start="91:25" pos:end="91:32">mv_scale</name></expr>)</condition> <block pos:start="91:35" pos:end="97:21">{<block_content pos:start="93:25" pos:end="95:72">

                        <expr_stmt pos:start="93:25" pos:end="93:72"><expr pos:start="93:25" pos:end="93:71"><name pos:start="93:25" pos:end="93:32"><name pos:start="93:25" pos:end="93:26">mb</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:32">mv_x</name></name> <operator pos:start="93:34" pos:end="93:34">=</operator> <call pos:start="93:36" pos:end="93:71"><name pos:start="93:36" pos:end="93:47">ivi_scale_mv</name><argument_list pos:start="93:48" pos:end="93:71">(<argument pos:start="93:49" pos:end="93:60"><expr pos:start="93:49" pos:end="93:60"><name pos:start="93:49" pos:end="93:60"><name pos:start="93:49" pos:end="93:54">ref_mb</name><operator pos:start="93:55" pos:end="93:56">-&gt;</operator><name pos:start="93:57" pos:end="93:60">mv_x</name></name></expr></argument>, <argument pos:start="93:63" pos:end="93:70"><expr pos:start="93:63" pos:end="93:70"><name pos:start="93:63" pos:end="93:70">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="95:25" pos:end="95:72"><expr pos:start="95:25" pos:end="95:71"><name pos:start="95:25" pos:end="95:32"><name pos:start="95:25" pos:end="95:26">mb</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:32">mv_y</name></name> <operator pos:start="95:34" pos:end="95:34">=</operator> <call pos:start="95:36" pos:end="95:71"><name pos:start="95:36" pos:end="95:47">ivi_scale_mv</name><argument_list pos:start="95:48" pos:end="95:71">(<argument pos:start="95:49" pos:end="95:60"><expr pos:start="95:49" pos:end="95:60"><name pos:start="95:49" pos:end="95:60"><name pos:start="95:49" pos:end="95:54">ref_mb</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:60">mv_y</name></name></expr></argument>, <argument pos:start="95:63" pos:end="95:70"><expr pos:start="95:63" pos:end="95:70"><name pos:start="95:63" pos:end="95:70">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="97:23" pos:end="103:21">else <block pos:start="97:28" pos:end="103:21">{<block_content pos:start="99:25" pos:end="101:48">

                        <expr_stmt pos:start="99:25" pos:end="99:48"><expr pos:start="99:25" pos:end="99:47"><name pos:start="99:25" pos:end="99:32"><name pos:start="99:25" pos:end="99:26">mb</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:32">mv_x</name></name> <operator pos:start="99:34" pos:end="99:34">=</operator> <name pos:start="99:36" pos:end="99:47"><name pos:start="99:36" pos:end="99:41">ref_mb</name><operator pos:start="99:42" pos:end="99:43">-&gt;</operator><name pos:start="99:44" pos:end="99:47">mv_x</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="101:25" pos:end="101:48"><expr pos:start="101:25" pos:end="101:47"><name pos:start="101:25" pos:end="101:32"><name pos:start="101:25" pos:end="101:26">mb</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:32">mv_y</name></name> <operator pos:start="101:34" pos:end="101:34">=</operator> <name pos:start="101:36" pos:end="101:47"><name pos:start="101:36" pos:end="101:41">ref_mb</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:47">mv_y</name></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="107:15" pos:end="197:13">else <block pos:start="107:20" pos:end="197:13">{<block_content pos:start="109:17" pos:end="195:17">

                <if_stmt pos:start="109:17" pos:end="121:17"><if pos:start="109:17" pos:end="113:17">if <condition pos:start="109:20" pos:end="109:37">(<expr pos:start="109:21" pos:end="109:36"><name pos:start="109:21" pos:end="109:36"><name pos:start="109:21" pos:end="109:24">band</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:36">inherit_mv</name></name></expr>)</condition> <block pos:start="109:39" pos:end="113:17">{<block_content pos:start="111:21" pos:end="111:44">

                    <expr_stmt pos:start="111:21" pos:end="111:44"><expr pos:start="111:21" pos:end="111:43"><name pos:start="111:21" pos:end="111:28"><name pos:start="111:21" pos:end="111:22">mb</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:28">type</name></name> <operator pos:start="111:30" pos:end="111:30">=</operator> <name pos:start="111:32" pos:end="111:43"><name pos:start="111:32" pos:end="111:37">ref_mb</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:43">type</name></name></expr>;</expr_stmt> <comment type="block" pos:start="111:46" pos:end="111:95">/* copy mb_type from corresponding reference mb */</comment>

                </block_content>}</block></if> <if type="elseif" pos:start="113:19" pos:end="117:17">else if <condition pos:start="113:27" pos:end="113:62">(<expr pos:start="113:28" pos:end="113:61"><name pos:start="113:28" pos:end="113:42"><name pos:start="113:28" pos:end="113:30">ctx</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:42">frame_type</name></name> <operator pos:start="113:44" pos:end="113:45">==</operator> <name pos:start="113:47" pos:end="113:61">FRAMETYPE_INTRA</name></expr>)</condition> <block pos:start="113:64" pos:end="117:17">{<block_content pos:start="115:21" pos:end="115:33">

                    <expr_stmt pos:start="115:21" pos:end="115:33"><expr pos:start="115:21" pos:end="115:32"><name pos:start="115:21" pos:end="115:28"><name pos:start="115:21" pos:end="115:22">mb</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:28">type</name></name> <operator pos:start="115:30" pos:end="115:30">=</operator> <literal type="number" pos:start="115:32" pos:end="115:32">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="115:35" pos:end="115:80">/* mb_type is always INTRA for intra-frames */</comment>

                </block_content>}</block></if> <else pos:start="117:19" pos:end="121:17">else <block pos:start="117:24" pos:end="121:17">{<block_content pos:start="119:21" pos:end="119:64">

                    <expr_stmt pos:start="119:21" pos:end="119:64"><expr pos:start="119:21" pos:end="119:63"><name pos:start="119:21" pos:end="119:28"><name pos:start="119:21" pos:end="119:22">mb</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:28">type</name></name> <operator pos:start="119:30" pos:end="119:30">=</operator> <call pos:start="119:32" pos:end="119:63"><name pos:start="119:32" pos:end="119:39">get_bits</name><argument_list pos:start="119:40" pos:end="119:63">(<argument pos:start="119:41" pos:end="119:48"><expr pos:start="119:41" pos:end="119:48"><operator pos:start="119:41" pos:end="119:41">&amp;</operator><name pos:start="119:42" pos:end="119:48"><name pos:start="119:42" pos:end="119:44">ctx</name><operator pos:start="119:45" pos:end="119:46">-&gt;</operator><name pos:start="119:47" pos:end="119:48">gb</name></name></expr></argument>, <argument pos:start="119:51" pos:end="119:62"><expr pos:start="119:51" pos:end="119:62"><name pos:start="119:51" pos:end="119:62">mb_type_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="125:17" pos:end="125:58"><expr pos:start="125:17" pos:end="125:57"><name pos:start="125:17" pos:end="125:23"><name pos:start="125:17" pos:end="125:18">mb</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:23">cbp</name></name> <operator pos:start="125:25" pos:end="125:25">=</operator> <call pos:start="125:27" pos:end="125:57"><name pos:start="125:27" pos:end="125:34">get_bits</name><argument_list pos:start="125:35" pos:end="125:57">(<argument pos:start="125:36" pos:end="125:43"><expr pos:start="125:36" pos:end="125:43"><operator pos:start="125:36" pos:end="125:36">&amp;</operator><name pos:start="125:37" pos:end="125:43"><name pos:start="125:37" pos:end="125:39">ctx</name><operator pos:start="125:40" pos:end="125:41">-&gt;</operator><name pos:start="125:42" pos:end="125:43">gb</name></name></expr></argument>, <argument pos:start="125:46" pos:end="125:56"><expr pos:start="125:46" pos:end="125:56"><name pos:start="125:46" pos:end="125:56">blks_per_mb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="129:17" pos:end="129:32"><expr pos:start="129:17" pos:end="129:31"><name pos:start="129:17" pos:end="129:27"><name pos:start="129:17" pos:end="129:18">mb</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:27">q_delta</name></name> <operator pos:start="129:29" pos:end="129:29">=</operator> <literal type="number" pos:start="129:31" pos:end="129:31">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="131:17" pos:end="145:17"><if pos:start="131:17" pos:end="135:17">if <condition pos:start="131:20" pos:end="131:41">(<expr pos:start="131:21" pos:end="131:40"><name pos:start="131:21" pos:end="131:40"><name pos:start="131:21" pos:end="131:24">band</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:40">inherit_qdelta</name></name></expr>)</condition> <block pos:start="131:43" pos:end="135:17">{<block_content pos:start="133:21" pos:end="133:62">

                    <if_stmt pos:start="133:21" pos:end="133:62"><if pos:start="133:21" pos:end="133:62">if <condition pos:start="133:24" pos:end="133:31">(<expr pos:start="133:25" pos:end="133:30"><name pos:start="133:25" pos:end="133:30">ref_mb</name></expr>)</condition><block type="pseudo" pos:start="133:33" pos:end="133:62"><block_content pos:start="133:33" pos:end="133:62"> <expr_stmt pos:start="133:33" pos:end="133:62"><expr pos:start="133:33" pos:end="133:61"><name pos:start="133:33" pos:end="133:43"><name pos:start="133:33" pos:end="133:34">mb</name><operator pos:start="133:35" pos:end="133:36">-&gt;</operator><name pos:start="133:37" pos:end="133:43">q_delta</name></name> <operator pos:start="133:45" pos:end="133:45">=</operator> <name pos:start="133:47" pos:end="133:61"><name pos:start="133:47" pos:end="133:52">ref_mb</name><operator pos:start="133:53" pos:end="133:54">-&gt;</operator><name pos:start="133:55" pos:end="133:61">q_delta</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="135:19" pos:end="145:17">else if <condition pos:start="135:27" pos:end="137:38">(<expr pos:start="135:28" pos:end="137:37"><name pos:start="135:28" pos:end="135:34"><name pos:start="135:28" pos:end="135:29">mb</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:34">cbp</name></name> <operator pos:start="135:36" pos:end="135:37">||</operator> <operator pos:start="135:39" pos:end="135:39">(</operator><operator pos:start="135:40" pos:end="135:40">!</operator><name pos:start="135:41" pos:end="135:51"><name pos:start="135:41" pos:end="135:44">band</name><operator pos:start="135:45" pos:end="135:46">-&gt;</operator><name pos:start="135:47" pos:end="135:51">plane</name></name> <operator pos:start="135:53" pos:end="135:54">&amp;&amp;</operator> <operator pos:start="135:56" pos:end="135:56">!</operator><name pos:start="135:57" pos:end="135:70"><name pos:start="135:57" pos:end="135:60">band</name><operator pos:start="135:61" pos:end="135:62">-&gt;</operator><name pos:start="135:63" pos:end="135:70">band_num</name></name> <operator pos:start="135:72" pos:end="135:73">&amp;&amp;</operator>

                           <name pos:start="137:28" pos:end="137:36"><name pos:start="137:28" pos:end="137:30">ctx</name><operator pos:start="137:31" pos:end="137:32">-&gt;</operator><name pos:start="137:33" pos:end="137:36">in_q</name></name><operator pos:start="137:37" pos:end="137:37">)</operator></expr>)</condition> <block pos:start="137:40" pos:end="145:17">{<block_content pos:start="139:21" pos:end="143:60">

                    <expr_stmt pos:start="139:21" pos:end="141:60"><expr pos:start="139:21" pos:end="141:59"><name pos:start="139:21" pos:end="139:31"><name pos:start="139:21" pos:end="139:22">mb</name><operator pos:start="139:23" pos:end="139:24">-&gt;</operator><name pos:start="139:25" pos:end="139:31">q_delta</name></name> <operator pos:start="139:33" pos:end="139:33">=</operator> <call pos:start="139:35" pos:end="141:59"><name pos:start="139:35" pos:end="139:42">get_vlc2</name><argument_list pos:start="139:43" pos:end="141:59">(<argument pos:start="139:44" pos:end="139:51"><expr pos:start="139:44" pos:end="139:51"><operator pos:start="139:44" pos:end="139:44">&amp;</operator><name pos:start="139:45" pos:end="139:51"><name pos:start="139:45" pos:end="139:47">ctx</name><operator pos:start="139:48" pos:end="139:49">-&gt;</operator><name pos:start="139:50" pos:end="139:51">gb</name></name></expr></argument>, <argument pos:start="139:54" pos:end="139:75"><expr pos:start="139:54" pos:end="139:75"><name pos:start="139:54" pos:end="139:75"><name pos:start="139:54" pos:end="139:56">ctx</name><operator pos:start="139:57" pos:end="139:58">-&gt;</operator><name pos:start="139:59" pos:end="139:64">mb_vlc</name><operator pos:start="139:65" pos:end="139:65">.</operator><name pos:start="139:66" pos:end="139:68">tab</name><operator pos:start="139:69" pos:end="139:70">-&gt;</operator><name pos:start="139:71" pos:end="139:75">table</name></name></expr></argument>,

                                           <argument pos:start="141:44" pos:end="141:55"><expr pos:start="141:44" pos:end="141:55"><name pos:start="141:44" pos:end="141:55">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="141:58" pos:end="141:58"><expr pos:start="141:58" pos:end="141:58"><literal type="number" pos:start="141:58" pos:end="141:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:60"><expr pos:start="143:21" pos:end="143:59"><name pos:start="143:21" pos:end="143:31"><name pos:start="143:21" pos:end="143:22">mb</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:31">q_delta</name></name> <operator pos:start="143:33" pos:end="143:33">=</operator> <call pos:start="143:35" pos:end="143:59"><name pos:start="143:35" pos:end="143:46">IVI_TOSIGNED</name><argument_list pos:start="143:47" pos:end="143:59">(<argument pos:start="143:48" pos:end="143:58"><expr pos:start="143:48" pos:end="143:58"><name pos:start="143:48" pos:end="143:58"><name pos:start="143:48" pos:end="143:49">mb</name><operator pos:start="143:50" pos:end="143:51">-&gt;</operator><name pos:start="143:52" pos:end="143:58">q_delta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="149:17" pos:end="195:17"><if pos:start="149:17" pos:end="153:17">if <condition pos:start="149:20" pos:end="149:30">(<expr pos:start="149:21" pos:end="149:29"><operator pos:start="149:21" pos:end="149:21">!</operator><name pos:start="149:22" pos:end="149:29"><name pos:start="149:22" pos:end="149:23">mb</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:29">type</name></name></expr>)</condition> <block pos:start="149:32" pos:end="153:17">{<block_content pos:start="151:21" pos:end="151:44">

                    <expr_stmt pos:start="151:21" pos:end="151:44"><expr pos:start="151:21" pos:end="151:43"><name pos:start="151:21" pos:end="151:28"><name pos:start="151:21" pos:end="151:22">mb</name><operator pos:start="151:23" pos:end="151:24">-&gt;</operator><name pos:start="151:25" pos:end="151:28">mv_x</name></name> <operator pos:start="151:30" pos:end="151:30">=</operator> <name pos:start="151:32" pos:end="151:39"><name pos:start="151:32" pos:end="151:33">mb</name><operator pos:start="151:34" pos:end="151:35">-&gt;</operator><name pos:start="151:36" pos:end="151:39">mv_y</name></name> <operator pos:start="151:41" pos:end="151:41">=</operator> <literal type="number" pos:start="151:43" pos:end="151:43">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="151:46" pos:end="151:97">/* there is no motion vector in intra-macroblocks */</comment>

                </block_content>}</block></if> <else pos:start="153:19" pos:end="195:17">else <block pos:start="153:24" pos:end="195:17">{<block_content pos:start="155:21" pos:end="193:21">

                    <if_stmt pos:start="155:21" pos:end="193:21"><if pos:start="155:21" pos:end="173:21">if <condition pos:start="155:24" pos:end="155:41">(<expr pos:start="155:25" pos:end="155:40"><name pos:start="155:25" pos:end="155:40"><name pos:start="155:25" pos:end="155:28">band</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:40">inherit_mv</name></name></expr>)</condition> <block pos:start="155:43" pos:end="173:21">{<block_content pos:start="159:25" pos:end="171:25">

                        <comment type="block" pos:start="157:25" pos:end="157:55">/* motion vector inheritance */</comment>

                        <if_stmt pos:start="159:25" pos:end="171:25"><if pos:start="159:25" pos:end="165:25">if <condition pos:start="159:28" pos:end="159:37">(<expr pos:start="159:29" pos:end="159:36"><name pos:start="159:29" pos:end="159:36">mv_scale</name></expr>)</condition> <block pos:start="159:39" pos:end="165:25">{<block_content pos:start="161:29" pos:end="163:76">

                            <expr_stmt pos:start="161:29" pos:end="161:76"><expr pos:start="161:29" pos:end="161:75"><name pos:start="161:29" pos:end="161:36"><name pos:start="161:29" pos:end="161:30">mb</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:36">mv_x</name></name> <operator pos:start="161:38" pos:end="161:38">=</operator> <call pos:start="161:40" pos:end="161:75"><name pos:start="161:40" pos:end="161:51">ivi_scale_mv</name><argument_list pos:start="161:52" pos:end="161:75">(<argument pos:start="161:53" pos:end="161:64"><expr pos:start="161:53" pos:end="161:64"><name pos:start="161:53" pos:end="161:64"><name pos:start="161:53" pos:end="161:58">ref_mb</name><operator pos:start="161:59" pos:end="161:60">-&gt;</operator><name pos:start="161:61" pos:end="161:64">mv_x</name></name></expr></argument>, <argument pos:start="161:67" pos:end="161:74"><expr pos:start="161:67" pos:end="161:74"><name pos:start="161:67" pos:end="161:74">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="163:29" pos:end="163:76"><expr pos:start="163:29" pos:end="163:75"><name pos:start="163:29" pos:end="163:36"><name pos:start="163:29" pos:end="163:30">mb</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:36">mv_y</name></name> <operator pos:start="163:38" pos:end="163:38">=</operator> <call pos:start="163:40" pos:end="163:75"><name pos:start="163:40" pos:end="163:51">ivi_scale_mv</name><argument_list pos:start="163:52" pos:end="163:75">(<argument pos:start="163:53" pos:end="163:64"><expr pos:start="163:53" pos:end="163:64"><name pos:start="163:53" pos:end="163:64"><name pos:start="163:53" pos:end="163:58">ref_mb</name><operator pos:start="163:59" pos:end="163:60">-&gt;</operator><name pos:start="163:61" pos:end="163:64">mv_y</name></name></expr></argument>, <argument pos:start="163:67" pos:end="163:74"><expr pos:start="163:67" pos:end="163:74"><name pos:start="163:67" pos:end="163:74">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="165:27" pos:end="171:25">else <block pos:start="165:32" pos:end="171:25">{<block_content pos:start="167:29" pos:end="169:52">

                            <expr_stmt pos:start="167:29" pos:end="167:52"><expr pos:start="167:29" pos:end="167:51"><name pos:start="167:29" pos:end="167:36"><name pos:start="167:29" pos:end="167:30">mb</name><operator pos:start="167:31" pos:end="167:32">-&gt;</operator><name pos:start="167:33" pos:end="167:36">mv_x</name></name> <operator pos:start="167:38" pos:end="167:38">=</operator> <name pos:start="167:40" pos:end="167:51"><name pos:start="167:40" pos:end="167:45">ref_mb</name><operator pos:start="167:46" pos:end="167:47">-&gt;</operator><name pos:start="167:48" pos:end="167:51">mv_x</name></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="169:29" pos:end="169:52"><expr pos:start="169:29" pos:end="169:51"><name pos:start="169:29" pos:end="169:36"><name pos:start="169:29" pos:end="169:30">mb</name><operator pos:start="169:31" pos:end="169:32">-&gt;</operator><name pos:start="169:33" pos:end="169:36">mv_y</name></name> <operator pos:start="169:38" pos:end="169:38">=</operator> <name pos:start="169:40" pos:end="169:51"><name pos:start="169:40" pos:end="169:45">ref_mb</name><operator pos:start="169:46" pos:end="169:47">-&gt;</operator><name pos:start="169:48" pos:end="169:51">mv_y</name></name></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="173:23" pos:end="193:21">else <block pos:start="173:28" pos:end="193:21">{<block_content pos:start="177:25" pos:end="191:40">

                        <comment type="block" pos:start="175:25" pos:end="175:57">/* decode motion vector deltas */</comment>

                        <expr_stmt pos:start="177:25" pos:end="179:61"><expr pos:start="177:25" pos:end="179:60"><name pos:start="177:25" pos:end="177:32">mv_delta</name> <operator pos:start="177:34" pos:end="177:34">=</operator> <call pos:start="177:36" pos:end="179:60"><name pos:start="177:36" pos:end="177:43">get_vlc2</name><argument_list pos:start="177:44" pos:end="179:60">(<argument pos:start="177:45" pos:end="177:52"><expr pos:start="177:45" pos:end="177:52"><operator pos:start="177:45" pos:end="177:45">&amp;</operator><name pos:start="177:46" pos:end="177:52"><name pos:start="177:46" pos:end="177:48">ctx</name><operator pos:start="177:49" pos:end="177:50">-&gt;</operator><name pos:start="177:51" pos:end="177:52">gb</name></name></expr></argument>, <argument pos:start="177:55" pos:end="177:76"><expr pos:start="177:55" pos:end="177:76"><name pos:start="177:55" pos:end="177:76"><name pos:start="177:55" pos:end="177:57">ctx</name><operator pos:start="177:58" pos:end="177:59">-&gt;</operator><name pos:start="177:60" pos:end="177:65">mb_vlc</name><operator pos:start="177:66" pos:end="177:66">.</operator><name pos:start="177:67" pos:end="177:69">tab</name><operator pos:start="177:70" pos:end="177:71">-&gt;</operator><name pos:start="177:72" pos:end="177:76">table</name></name></expr></argument>,

                                            <argument pos:start="179:45" pos:end="179:56"><expr pos:start="179:45" pos:end="179:56"><name pos:start="179:45" pos:end="179:56">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="179:59" pos:end="179:59"><expr pos:start="179:59" pos:end="179:59"><literal type="number" pos:start="179:59" pos:end="179:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="181:25" pos:end="181:55"><expr pos:start="181:25" pos:end="181:54"><name pos:start="181:25" pos:end="181:28">mv_y</name> <operator pos:start="181:30" pos:end="181:31">+=</operator> <call pos:start="181:33" pos:end="181:54"><name pos:start="181:33" pos:end="181:44">IVI_TOSIGNED</name><argument_list pos:start="181:45" pos:end="181:54">(<argument pos:start="181:46" pos:end="181:53"><expr pos:start="181:46" pos:end="181:53"><name pos:start="181:46" pos:end="181:53">mv_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="183:25" pos:end="185:61"><expr pos:start="183:25" pos:end="185:60"><name pos:start="183:25" pos:end="183:32">mv_delta</name> <operator pos:start="183:34" pos:end="183:34">=</operator> <call pos:start="183:36" pos:end="185:60"><name pos:start="183:36" pos:end="183:43">get_vlc2</name><argument_list pos:start="183:44" pos:end="185:60">(<argument pos:start="183:45" pos:end="183:52"><expr pos:start="183:45" pos:end="183:52"><operator pos:start="183:45" pos:end="183:45">&amp;</operator><name pos:start="183:46" pos:end="183:52"><name pos:start="183:46" pos:end="183:48">ctx</name><operator pos:start="183:49" pos:end="183:50">-&gt;</operator><name pos:start="183:51" pos:end="183:52">gb</name></name></expr></argument>, <argument pos:start="183:55" pos:end="183:76"><expr pos:start="183:55" pos:end="183:76"><name pos:start="183:55" pos:end="183:76"><name pos:start="183:55" pos:end="183:57">ctx</name><operator pos:start="183:58" pos:end="183:59">-&gt;</operator><name pos:start="183:60" pos:end="183:65">mb_vlc</name><operator pos:start="183:66" pos:end="183:66">.</operator><name pos:start="183:67" pos:end="183:69">tab</name><operator pos:start="183:70" pos:end="183:71">-&gt;</operator><name pos:start="183:72" pos:end="183:76">table</name></name></expr></argument>,

                                            <argument pos:start="185:45" pos:end="185:56"><expr pos:start="185:45" pos:end="185:56"><name pos:start="185:45" pos:end="185:56">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="185:59" pos:end="185:59"><expr pos:start="185:59" pos:end="185:59"><literal type="number" pos:start="185:59" pos:end="185:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="187:25" pos:end="187:55"><expr pos:start="187:25" pos:end="187:54"><name pos:start="187:25" pos:end="187:28">mv_x</name> <operator pos:start="187:30" pos:end="187:31">+=</operator> <call pos:start="187:33" pos:end="187:54"><name pos:start="187:33" pos:end="187:44">IVI_TOSIGNED</name><argument_list pos:start="187:45" pos:end="187:54">(<argument pos:start="187:46" pos:end="187:53"><expr pos:start="187:46" pos:end="187:53"><name pos:start="187:46" pos:end="187:53">mv_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="189:25" pos:end="189:40"><expr pos:start="189:25" pos:end="189:39"><name pos:start="189:25" pos:end="189:32"><name pos:start="189:25" pos:end="189:26">mb</name><operator pos:start="189:27" pos:end="189:28">-&gt;</operator><name pos:start="189:29" pos:end="189:32">mv_x</name></name> <operator pos:start="189:34" pos:end="189:34">=</operator> <name pos:start="189:36" pos:end="189:39">mv_x</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="191:25" pos:end="191:40"><expr pos:start="191:25" pos:end="191:39"><name pos:start="191:25" pos:end="191:32"><name pos:start="191:25" pos:end="191:26">mb</name><operator pos:start="191:27" pos:end="191:28">-&gt;</operator><name pos:start="191:29" pos:end="191:32">mv_y</name></name> <operator pos:start="191:34" pos:end="191:34">=</operator> <name pos:start="191:36" pos:end="191:39">mv_y</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="201:13" pos:end="201:17"><expr pos:start="201:13" pos:end="201:16"><name pos:start="201:13" pos:end="201:14">mb</name><operator pos:start="201:15" pos:end="201:16">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="203:13" pos:end="205:25"><if pos:start="203:13" pos:end="205:25">if <condition pos:start="203:16" pos:end="203:23">(<expr pos:start="203:17" pos:end="203:22"><name pos:start="203:17" pos:end="203:22">ref_mb</name></expr>)</condition><block type="pseudo" pos:start="205:17" pos:end="205:25"><block_content pos:start="205:17" pos:end="205:25">

                <expr_stmt pos:start="205:17" pos:end="205:25"><expr pos:start="205:17" pos:end="205:24"><name pos:start="205:17" pos:end="205:22">ref_mb</name><operator pos:start="205:23" pos:end="205:24">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:39"><expr pos:start="207:13" pos:end="207:38"><name pos:start="207:13" pos:end="207:21">mb_offset</name> <operator pos:start="207:23" pos:end="207:24">+=</operator> <name pos:start="207:26" pos:end="207:38"><name pos:start="207:26" pos:end="207:29">band</name><operator pos:start="207:30" pos:end="207:31">-&gt;</operator><name pos:start="207:32" pos:end="207:38">mb_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="213:9" pos:end="213:27"><expr pos:start="213:9" pos:end="213:26"><name pos:start="213:9" pos:end="213:12">offs</name> <operator pos:start="213:14" pos:end="213:15">+=</operator> <name pos:start="213:17" pos:end="213:26">row_offset</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="219:5" pos:end="219:29"><expr pos:start="219:5" pos:end="219:28"><call pos:start="219:5" pos:end="219:28"><name pos:start="219:5" pos:end="219:18">align_get_bits</name><argument_list pos:start="219:19" pos:end="219:28">(<argument pos:start="219:20" pos:end="219:27"><expr pos:start="219:20" pos:end="219:27"><operator pos:start="219:20" pos:end="219:20">&amp;</operator><name pos:start="219:21" pos:end="219:27"><name pos:start="219:21" pos:end="219:23">ctx</name><operator pos:start="219:24" pos:end="219:25">-&gt;</operator><name pos:start="219:26" pos:end="219:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="223:5" pos:end="223:13">return <expr pos:start="223:12" pos:end="223:12"><literal type="number" pos:start="223:12" pos:end="223:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
