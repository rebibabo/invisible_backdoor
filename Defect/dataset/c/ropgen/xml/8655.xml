<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8655.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">virtio_ccw_set_guest_notifier</name><parameter_list pos:start="1:41" pos:end="3:70">(<parameter pos:start="1:42" pos:end="1:61"><decl pos:start="1:42" pos:end="1:61"><type pos:start="1:42" pos:end="1:61"><name pos:start="1:42" pos:end="1:56">VirtioCcwDevice</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">dev</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:68"><decl pos:start="1:64" pos:end="1:68"><type pos:start="1:64" pos:end="1:68"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:68">n</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:52"><decl pos:start="3:42" pos:end="3:52"><type pos:start="3:42" pos:end="3:52"><name pos:start="3:42" pos:end="3:45">bool</name></type> <name pos:start="3:47" pos:end="3:52">assign</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:69"><decl pos:start="3:55" pos:end="3:69"><type pos:start="3:55" pos:end="3:69"><name pos:start="3:55" pos:end="3:58">bool</name></type> <name pos:start="3:60" pos:end="3:69">with_irqfd</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:13">

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIODevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">vdev</name> <init pos:start="7:24" pos:end="7:57">= <expr pos:start="7:26" pos:end="7:57"><call pos:start="7:26" pos:end="7:57"><name pos:start="7:26" pos:end="7:46">virtio_bus_get_device</name><argument_list pos:start="7:47" pos:end="7:57">(<argument pos:start="7:48" pos:end="7:56"><expr pos:start="7:48" pos:end="7:56"><operator pos:start="7:48" pos:end="7:48">&amp;</operator><name pos:start="7:49" pos:end="7:56"><name pos:start="7:49" pos:end="7:51">dev</name><operator pos:start="7:52" pos:end="7:53">-&gt;</operator><name pos:start="7:54" pos:end="7:56">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">VirtQueue</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:17">vq</name> <init pos:start="9:19" pos:end="9:45">= <expr pos:start="9:21" pos:end="9:45"><call pos:start="9:21" pos:end="9:45"><name pos:start="9:21" pos:end="9:36">virtio_get_queue</name><argument_list pos:start="9:37" pos:end="9:45">(<argument pos:start="9:38" pos:end="9:41"><expr pos:start="9:38" pos:end="9:41"><name pos:start="9:38" pos:end="9:41">vdev</name></expr></argument>, <argument pos:start="9:44" pos:end="9:44"><expr pos:start="9:44" pos:end="9:44"><name pos:start="9:44" pos:end="9:44">n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:66"><decl pos:start="11:5" pos:end="11:65"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">EventNotifier</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:27">notifier</name> <init pos:start="11:29" pos:end="11:65">= <expr pos:start="11:31" pos:end="11:65"><call pos:start="11:31" pos:end="11:65"><name pos:start="11:31" pos:end="11:61">virtio_queue_get_guest_notifier</name><argument_list pos:start="11:62" pos:end="11:65">(<argument pos:start="11:63" pos:end="11:64"><expr pos:start="11:63" pos:end="11:64"><name pos:start="11:63" pos:end="11:64">vq</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:56"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21">VirtioDeviceClass</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:24">k</name> <init pos:start="13:26" pos:end="13:56">= <expr pos:start="13:28" pos:end="13:56"><call pos:start="13:28" pos:end="13:56"><name pos:start="13:28" pos:end="13:50">VIRTIO_DEVICE_GET_CLASS</name><argument_list pos:start="13:51" pos:end="13:56">(<argument pos:start="13:52" pos:end="13:55"><expr pos:start="13:52" pos:end="13:55"><name pos:start="13:52" pos:end="13:55">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="89:5"><if pos:start="17:5" pos:end="71:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">assign</name></expr>)</condition> <block pos:start="17:17" pos:end="71:5">{<block_content pos:start="19:9" pos:end="69:9">

        <decl_stmt pos:start="19:9" pos:end="19:49"><decl pos:start="19:9" pos:end="19:48"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">r</name> <init pos:start="19:15" pos:end="19:48">= <expr pos:start="19:17" pos:end="19:48"><call pos:start="19:17" pos:end="19:48"><name pos:start="19:17" pos:end="19:35">event_notifier_init</name><argument_list pos:start="19:36" pos:end="19:48">(<argument pos:start="19:37" pos:end="19:44"><expr pos:start="19:37" pos:end="19:44"><name pos:start="19:37" pos:end="19:44">notifier</name></expr></argument>, <argument pos:start="19:47" pos:end="19:47"><expr pos:start="19:47" pos:end="19:47"><literal type="number" pos:start="19:47" pos:end="19:47">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:18">(<expr pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:13">r</name> <operator pos:start="23:15" pos:end="23:15">&lt;</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>)</condition> <block pos:start="23:20" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:21">

            <return pos:start="25:13" pos:end="25:21">return <expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">r</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:73"><expr pos:start="29:9" pos:end="29:72"><call pos:start="29:9" pos:end="29:72"><name pos:start="29:9" pos:end="29:50">virtio_queue_set_guest_notifier_fd_handler</name><argument_list pos:start="29:51" pos:end="29:72">(<argument pos:start="29:52" pos:end="29:53"><expr pos:start="29:52" pos:end="29:53"><name pos:start="29:52" pos:end="29:53">vq</name></expr></argument>, <argument pos:start="29:56" pos:end="29:59"><expr pos:start="29:56" pos:end="29:59"><name pos:start="29:56" pos:end="29:59">true</name></expr></argument>, <argument pos:start="29:62" pos:end="29:71"><expr pos:start="29:62" pos:end="29:71"><name pos:start="29:62" pos:end="29:71">with_irqfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="45:9"><if pos:start="31:9" pos:end="45:9">if <condition pos:start="31:12" pos:end="31:23">(<expr pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:22">with_irqfd</name></expr>)</condition> <block pos:start="31:25" pos:end="45:9">{<block_content pos:start="33:13" pos:end="43:13">

            <expr_stmt pos:start="33:13" pos:end="33:45"><expr pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:13">r</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:44"><name pos:start="33:17" pos:end="33:36">virtio_ccw_add_irqfd</name><argument_list pos:start="33:37" pos:end="33:44">(<argument pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:40">dev</name></expr></argument>, <argument pos:start="33:43" pos:end="33:43"><expr pos:start="33:43" pos:end="33:43"><name pos:start="33:43" pos:end="33:43">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="43:13"><if pos:start="35:13" pos:end="43:13">if <condition pos:start="35:16" pos:end="35:18">(<expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">r</name></expr>)</condition> <block pos:start="35:20" pos:end="43:13">{<block_content pos:start="37:17" pos:end="41:25">

                <expr_stmt pos:start="37:17" pos:end="39:71"><expr pos:start="37:17" pos:end="39:70"><call pos:start="37:17" pos:end="39:70"><name pos:start="37:17" pos:end="37:58">virtio_queue_set_guest_notifier_fd_handler</name><argument_list pos:start="37:59" pos:end="39:70">(<argument pos:start="37:60" pos:end="37:61"><expr pos:start="37:60" pos:end="37:61"><name pos:start="37:60" pos:end="37:61">vq</name></expr></argument>, <argument pos:start="37:64" pos:end="37:68"><expr pos:start="37:64" pos:end="37:68"><name pos:start="37:64" pos:end="37:68">false</name></expr></argument>,

                                                           <argument pos:start="39:60" pos:end="39:69"><expr pos:start="39:60" pos:end="39:69"><name pos:start="39:60" pos:end="39:69">with_irqfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="41:17" pos:end="41:25">return <expr pos:start="41:24" pos:end="41:24"><name pos:start="41:24" pos:end="41:24">r</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="47:9" pos:end="53:11">/*

         * We do not support individual masking for channel devices, so we

         * need to manually trigger any guest masking callbacks here.

         */</comment>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:35">(<expr pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:13">k</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:34">guest_notifier_mask</name></name></expr>)</condition> <block pos:start="55:37" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:51">

            <expr_stmt pos:start="57:13" pos:end="57:51"><expr pos:start="57:13" pos:end="57:50"><call pos:start="57:13" pos:end="57:50"><name pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:13">k</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:34">guest_notifier_mask</name></name><argument_list pos:start="57:35" pos:end="57:50">(<argument pos:start="57:36" pos:end="57:39"><expr pos:start="57:36" pos:end="57:39"><name pos:start="57:36" pos:end="57:39">vdev</name></expr></argument>, <argument pos:start="57:42" pos:end="57:42"><expr pos:start="57:42" pos:end="57:42"><name pos:start="57:42" pos:end="57:42">n</name></expr></argument>, <argument pos:start="57:45" pos:end="57:49"><expr pos:start="57:45" pos:end="57:49"><name pos:start="57:45" pos:end="57:49">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="61:9" pos:end="61:43">/* get lost events and re-inject */</comment>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="65:47">(<expr pos:start="63:13" pos:end="65:46"><name pos:start="63:13" pos:end="63:37"><name pos:start="63:13" pos:end="63:13">k</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:37">guest_notifier_pending</name></name> <operator pos:start="63:39" pos:end="63:40">&amp;&amp;</operator>

            <call pos:start="65:13" pos:end="65:46"><name pos:start="65:13" pos:end="65:37"><name pos:start="65:13" pos:end="65:13">k</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:37">guest_notifier_pending</name></name><argument_list pos:start="65:38" pos:end="65:46">(<argument pos:start="65:39" pos:end="65:42"><expr pos:start="65:39" pos:end="65:42"><name pos:start="65:39" pos:end="65:42">vdev</name></expr></argument>, <argument pos:start="65:45" pos:end="65:45"><expr pos:start="65:45" pos:end="65:45"><name pos:start="65:45" pos:end="65:45">n</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:49" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:41">

            <expr_stmt pos:start="67:13" pos:end="67:41"><expr pos:start="67:13" pos:end="67:40"><call pos:start="67:13" pos:end="67:40"><name pos:start="67:13" pos:end="67:30">event_notifier_set</name><argument_list pos:start="67:31" pos:end="67:40">(<argument pos:start="67:32" pos:end="67:39"><expr pos:start="67:32" pos:end="67:39"><name pos:start="67:32" pos:end="67:39">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="89:5">else <block pos:start="71:12" pos:end="89:5">{<block_content pos:start="73:9" pos:end="87:41">

        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:35">(<expr pos:start="73:13" pos:end="73:34"><name pos:start="73:13" pos:end="73:34"><name pos:start="73:13" pos:end="73:13">k</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:34">guest_notifier_mask</name></name></expr>)</condition> <block pos:start="73:37" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:50">

            <expr_stmt pos:start="75:13" pos:end="75:50"><expr pos:start="75:13" pos:end="75:49"><call pos:start="75:13" pos:end="75:49"><name pos:start="75:13" pos:end="75:34"><name pos:start="75:13" pos:end="75:13">k</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:34">guest_notifier_mask</name></name><argument_list pos:start="75:35" pos:end="75:49">(<argument pos:start="75:36" pos:end="75:39"><expr pos:start="75:36" pos:end="75:39"><name pos:start="75:36" pos:end="75:39">vdev</name></expr></argument>, <argument pos:start="75:42" pos:end="75:42"><expr pos:start="75:42" pos:end="75:42"><name pos:start="75:42" pos:end="75:42">n</name></expr></argument>, <argument pos:start="75:45" pos:end="75:48"><expr pos:start="75:45" pos:end="75:48"><name pos:start="75:45" pos:end="75:48">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="79:9" pos:end="83:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:23">(<expr pos:start="79:13" pos:end="79:22"><name pos:start="79:13" pos:end="79:22">with_irqfd</name></expr>)</condition> <block pos:start="79:25" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:44">

            <expr_stmt pos:start="81:13" pos:end="81:44"><expr pos:start="81:13" pos:end="81:43"><call pos:start="81:13" pos:end="81:43"><name pos:start="81:13" pos:end="81:35">virtio_ccw_remove_irqfd</name><argument_list pos:start="81:36" pos:end="81:43">(<argument pos:start="81:37" pos:end="81:39"><expr pos:start="81:37" pos:end="81:39"><name pos:start="81:37" pos:end="81:39">dev</name></expr></argument>, <argument pos:start="81:42" pos:end="81:42"><expr pos:start="81:42" pos:end="81:42"><name pos:start="81:42" pos:end="81:42">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:74"><expr pos:start="85:9" pos:end="85:73"><call pos:start="85:9" pos:end="85:73"><name pos:start="85:9" pos:end="85:50">virtio_queue_set_guest_notifier_fd_handler</name><argument_list pos:start="85:51" pos:end="85:73">(<argument pos:start="85:52" pos:end="85:53"><expr pos:start="85:52" pos:end="85:53"><name pos:start="85:52" pos:end="85:53">vq</name></expr></argument>, <argument pos:start="85:56" pos:end="85:60"><expr pos:start="85:56" pos:end="85:60"><name pos:start="85:56" pos:end="85:60">false</name></expr></argument>, <argument pos:start="85:63" pos:end="85:72"><expr pos:start="85:63" pos:end="85:72"><name pos:start="85:63" pos:end="85:72">with_irqfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:41"><expr pos:start="87:9" pos:end="87:40"><call pos:start="87:9" pos:end="87:40"><name pos:start="87:9" pos:end="87:30">event_notifier_cleanup</name><argument_list pos:start="87:31" pos:end="87:40">(<argument pos:start="87:32" pos:end="87:39"><expr pos:start="87:32" pos:end="87:39"><name pos:start="87:32" pos:end="87:39">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
