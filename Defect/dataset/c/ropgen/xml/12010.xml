<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12010.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">get_cox</name><parameter_list pos:start="1:19" pos:end="1:69">(<parameter pos:start="1:20" pos:end="1:44"><decl pos:start="1:20" pos:end="1:44"><type pos:start="1:20" pos:end="1:44"><name pos:start="1:20" pos:end="1:41">Jpeg2000DecoderContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:68"><decl pos:start="1:47" pos:end="1:68"><type pos:start="1:47" pos:end="1:68"><name pos:start="1:47" pos:end="1:65">Jpeg2000CodingStyle</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:68">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:16">byte</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:31"><if pos:start="9:5" pos:end="11:31">if <condition pos:start="9:8" pos:end="9:32">(<expr pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:18"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:18">buf_end</name></name> <operator pos:start="9:20" pos:end="9:20">-</operator> <name pos:start="9:22" pos:end="9:27"><name pos:start="9:22" pos:end="9:22">s</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:27">buf</name></name> <operator pos:start="9:29" pos:end="9:29">&lt;</operator> <literal type="number" pos:start="9:31" pos:end="9:31">5</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:31"><block_content pos:start="11:9" pos:end="11:31">

        <return pos:start="11:9" pos:end="11:31">return <expr pos:start="11:16" pos:end="11:30"><call pos:start="11:16" pos:end="11:30"><name pos:start="11:16" pos:end="11:22">AVERROR</name><argument_list pos:start="11:23" pos:end="11:30">(<argument pos:start="11:24" pos:end="11:29"><expr pos:start="11:24" pos:end="11:29"><name pos:start="11:24" pos:end="11:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:53"><expr pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:5">c</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:17">nreslevels</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <call pos:start="13:21" pos:end="13:48"><name pos:start="13:21" pos:end="13:39">bytestream_get_byte</name><argument_list pos:start="13:40" pos:end="13:48">(<argument pos:start="13:41" pos:end="13:47"><expr pos:start="13:41" pos:end="13:47"><operator pos:start="13:41" pos:end="13:41">&amp;</operator><name pos:start="13:42" pos:end="13:47"><name pos:start="13:42" pos:end="13:42">s</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:47">buf</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:50" pos:end="13:50">+</operator> <literal type="number" pos:start="13:52" pos:end="13:52">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="13:55" pos:end="13:85">// num of resolution levels - 1</comment>



    <comment type="block" pos:start="17:5" pos:end="17:55">/* compute number of resolution levels to decode */</comment>

    <if_stmt pos:start="19:5" pos:end="25:67"><if pos:start="19:5" pos:end="21:33">if <condition pos:start="19:8" pos:end="19:44">(<expr pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:9">c</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:21">nreslevels</name></name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:43"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:43">reduction_factor</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:33"><block_content pos:start="21:9" pos:end="21:33">

        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:9">c</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:28">nreslevels2decode</name></name> <operator pos:start="21:30" pos:end="21:30">=</operator> <literal type="number" pos:start="21:32" pos:end="21:32">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="23:5" pos:end="25:67">else<block type="pseudo" pos:start="25:9" pos:end="25:67"><block_content pos:start="25:9" pos:end="25:67">

        <expr_stmt pos:start="25:9" pos:end="25:67"><expr pos:start="25:9" pos:end="25:66"><name pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:9">c</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:28">nreslevels2decode</name></name> <operator pos:start="25:30" pos:end="25:30">=</operator> <name pos:start="25:32" pos:end="25:44"><name pos:start="25:32" pos:end="25:32">c</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:44">nreslevels</name></name> <operator pos:start="25:46" pos:end="25:46">-</operator> <name pos:start="25:48" pos:end="25:66"><name pos:start="25:48" pos:end="25:48">s</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:66">reduction_factor</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:59"><expr pos:start="29:5" pos:end="29:58"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:5">c</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:22">log2_cblk_width</name></name>  <operator pos:start="29:25" pos:end="29:25">=</operator> <call pos:start="29:27" pos:end="29:54"><name pos:start="29:27" pos:end="29:45">bytestream_get_byte</name><argument_list pos:start="29:46" pos:end="29:54">(<argument pos:start="29:47" pos:end="29:53"><expr pos:start="29:47" pos:end="29:53"><operator pos:start="29:47" pos:end="29:47">&amp;</operator><name pos:start="29:48" pos:end="29:53"><name pos:start="29:48" pos:end="29:48">s</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:53">buf</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:56" pos:end="29:56">+</operator> <literal type="number" pos:start="29:58" pos:end="29:58">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="29:61" pos:end="29:73">// cblk width</comment>

    <expr_stmt pos:start="31:5" pos:end="31:59"><expr pos:start="31:5" pos:end="31:58"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:5">c</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:23">log2_cblk_height</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <call pos:start="31:27" pos:end="31:54"><name pos:start="31:27" pos:end="31:45">bytestream_get_byte</name><argument_list pos:start="31:46" pos:end="31:54">(<argument pos:start="31:47" pos:end="31:53"><expr pos:start="31:47" pos:end="31:53"><operator pos:start="31:47" pos:end="31:47">&amp;</operator><name pos:start="31:48" pos:end="31:53"><name pos:start="31:48" pos:end="31:48">s</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:53">buf</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:56" pos:end="31:56">+</operator> <literal type="number" pos:start="31:58" pos:end="31:58">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="31:61" pos:end="31:74">// cblk height</comment>



    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:5">c</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:17">cblk_style</name></name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:48"><name pos:start="35:21" pos:end="35:39">bytestream_get_byte</name><argument_list pos:start="35:40" pos:end="35:48">(<argument pos:start="35:41" pos:end="35:47"><expr pos:start="35:41" pos:end="35:47"><operator pos:start="35:41" pos:end="35:41">&amp;</operator><name pos:start="35:42" pos:end="35:47"><name pos:start="35:42" pos:end="35:42">s</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:47">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:27">(<expr pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:9">c</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:21">cblk_style</name></name> <operator pos:start="37:23" pos:end="37:24">!=</operator> <literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr>)</condition> <block pos:start="37:29" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:18"> <comment type="line" pos:start="37:31" pos:end="37:43">// cblk style</comment>

        <expr_stmt pos:start="39:9" pos:end="39:75"><expr pos:start="39:9" pos:end="39:74"><call pos:start="39:9" pos:end="39:74"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:74">(<argument pos:start="39:16" pos:end="39:23"><expr pos:start="39:16" pos:end="39:23"><name pos:start="39:16" pos:end="39:23"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:23">avctx</name></name></expr></argument>, <argument pos:start="39:26" pos:end="39:37"><expr pos:start="39:26" pos:end="39:37"><name pos:start="39:26" pos:end="39:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:40" pos:end="39:73"><expr pos:start="39:40" pos:end="39:73"><literal type="string" pos:start="39:40" pos:end="39:73">"no extra cblk styles supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:48"><expr pos:start="45:5" pos:end="45:47"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:5">c</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:16">transform</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:47"><name pos:start="45:20" pos:end="45:38">bytestream_get_byte</name><argument_list pos:start="45:39" pos:end="45:47">(<argument pos:start="45:40" pos:end="45:46"><expr pos:start="45:40" pos:end="45:46"><operator pos:start="45:40" pos:end="45:40">&amp;</operator><name pos:start="45:41" pos:end="45:46"><name pos:start="45:41" pos:end="45:41">s</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:46">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="45:50" pos:end="45:75">// DWT transformation type</comment>

    <comment type="block" pos:start="47:5" pos:end="47:54">/* set integer 9/7 DWT in case of BITEXACT flag */</comment>

    <if_stmt pos:start="49:5" pos:end="51:36"><if pos:start="49:5" pos:end="51:36">if <condition pos:start="49:8" pos:end="49:78">(<expr pos:start="49:9" pos:end="49:77"><operator pos:start="49:9" pos:end="49:9">(</operator><name pos:start="49:10" pos:end="49:24"><name pos:start="49:10" pos:end="49:10">s</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:17">avctx</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:24">flags</name></name> <operator pos:start="49:26" pos:end="49:26">&amp;</operator> <name pos:start="49:28" pos:end="49:46">CODEC_FLAG_BITEXACT</name><operator pos:start="49:47" pos:end="49:47">)</operator> <operator pos:start="49:49" pos:end="49:50">&amp;&amp;</operator> <operator pos:start="49:52" pos:end="49:52">(</operator><name pos:start="49:53" pos:end="49:64"><name pos:start="49:53" pos:end="49:53">c</name><operator pos:start="49:54" pos:end="49:55">-&gt;</operator><name pos:start="49:56" pos:end="49:64">transform</name></name> <operator pos:start="49:66" pos:end="49:67">==</operator> <name pos:start="49:69" pos:end="49:76">FF_DWT97</name><operator pos:start="49:77" pos:end="49:77">)</operator></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:36"><block_content pos:start="51:9" pos:end="51:36">

        <expr_stmt pos:start="51:9" pos:end="51:36"><expr pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:9">c</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:20">transform</name></name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:35">FF_DWT97_INT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="69:5"><if pos:start="55:5" pos:end="69:5">if <condition pos:start="55:8" pos:end="55:37">(<expr pos:start="55:9" pos:end="55:36"><name pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:9">c</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:15">csty</name></name> <operator pos:start="55:17" pos:end="55:17">&amp;</operator> <name pos:start="55:19" pos:end="55:36">JPEG2000_CSTY_PREC</name></expr>)</condition> <block pos:start="55:39" pos:end="69:5">{<block_content pos:start="57:9" pos:end="67:9">

        <decl_stmt pos:start="57:9" pos:end="57:14"><decl pos:start="57:9" pos:end="57:13"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:13">i</name></decl>;</decl_stmt>

        <for pos:start="59:9" pos:end="67:9">for <control pos:start="59:13" pos:end="59:43">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:38"><expr pos:start="59:21" pos:end="59:37"><name pos:start="59:21" pos:end="59:21">i</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:37"><name pos:start="59:25" pos:end="59:25">c</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:37">nreslevels</name></name></expr>;</condition> <incr pos:start="59:40" pos:end="59:42"><expr pos:start="59:40" pos:end="59:42"><name pos:start="59:40" pos:end="59:40">i</name><operator pos:start="59:41" pos:end="59:42">++</operator></expr></incr>)</control> <block pos:start="59:45" pos:end="67:9">{<block_content pos:start="61:13" pos:end="65:57">

            <expr_stmt pos:start="61:13" pos:end="61:48"><expr pos:start="61:13" pos:end="61:47"><name pos:start="61:13" pos:end="61:16">byte</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:47"><name pos:start="61:20" pos:end="61:38">bytestream_get_byte</name><argument_list pos:start="61:39" pos:end="61:47">(<argument pos:start="61:40" pos:end="61:46"><expr pos:start="61:40" pos:end="61:46"><operator pos:start="61:40" pos:end="61:40">&amp;</operator><name pos:start="61:41" pos:end="61:46"><name pos:start="61:41" pos:end="61:41">s</name><operator pos:start="61:42" pos:end="61:43">-&gt;</operator><name pos:start="61:44" pos:end="61:46">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:57"><expr pos:start="63:13" pos:end="63:56"><name pos:start="63:13" pos:end="63:34"><name pos:start="63:13" pos:end="63:13">c</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:31">log2_prec_widths</name><index pos:start="63:32" pos:end="63:34">[<expr pos:start="63:33" pos:end="63:33"><name pos:start="63:33" pos:end="63:33">i</name></expr>]</index></name>  <operator pos:start="63:37" pos:end="63:37">=</operator>  <name pos:start="63:40" pos:end="63:43">byte</name>       <operator pos:start="63:51" pos:end="63:51">&amp;</operator> <literal type="number" pos:start="63:53" pos:end="63:56">0x0F</literal></expr>;</expr_stmt>    <comment type="line" pos:start="63:62" pos:end="63:76">// precinct PPx</comment>

            <expr_stmt pos:start="65:13" pos:end="65:57"><expr pos:start="65:13" pos:end="65:56"><name pos:start="65:13" pos:end="65:35"><name pos:start="65:13" pos:end="65:13">c</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:32">log2_prec_heights</name><index pos:start="65:33" pos:end="65:35">[<expr pos:start="65:34" pos:end="65:34"><name pos:start="65:34" pos:end="65:34">i</name></expr>]</index></name> <operator pos:start="65:37" pos:end="65:37">=</operator> <operator pos:start="65:39" pos:end="65:39">(</operator><name pos:start="65:40" pos:end="65:43">byte</name> <operator pos:start="65:45" pos:end="65:46">&gt;&gt;</operator> <literal type="number" pos:start="65:48" pos:end="65:48">4</literal><operator pos:start="65:49" pos:end="65:49">)</operator> <operator pos:start="65:51" pos:end="65:51">&amp;</operator> <literal type="number" pos:start="65:53" pos:end="65:56">0x0F</literal></expr>;</expr_stmt>    <comment type="line" pos:start="65:62" pos:end="65:76">// precinct PPy</comment>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
