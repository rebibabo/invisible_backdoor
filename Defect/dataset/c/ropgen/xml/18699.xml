<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18699.c" pos:tabs="8"><function pos:start="1:1" pos:end="240:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">qmp_drive_backup</name><parameter_list pos:start="1:22" pos:end="15:35">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><specifier pos:start="1:23" pos:end="1:27">const</specifier> <name pos:start="1:29" pos:end="1:32">char</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">device</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:60">target</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:37"><decl pos:start="3:23" pos:end="3:37"><type pos:start="3:23" pos:end="3:37"><name pos:start="3:23" pos:end="3:26">bool</name></type> <name pos:start="3:28" pos:end="3:37">has_format</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:57"><decl pos:start="3:40" pos:end="3:57"><type pos:start="3:40" pos:end="3:57"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:49">char</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:57">format</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:46"><decl pos:start="5:23" pos:end="5:46"><type pos:start="5:23" pos:end="5:46"><name pos:start="5:23" pos:end="5:41"><name pos:start="5:23" pos:end="5:26">enum</name> <name pos:start="5:28" pos:end="5:41">MirrorSyncMode</name></name></type> <name pos:start="5:43" pos:end="5:46">sync</name></decl></parameter>,

                      <parameter pos:start="7:23" pos:end="7:35"><decl pos:start="7:23" pos:end="7:35"><type pos:start="7:23" pos:end="7:35"><name pos:start="7:23" pos:end="7:26">bool</name></type> <name pos:start="7:28" pos:end="7:35">has_mode</name></decl></parameter>, <parameter pos:start="7:38" pos:end="7:59"><decl pos:start="7:38" pos:end="7:59"><type pos:start="7:38" pos:end="7:59"><name pos:start="7:38" pos:end="7:54"><name pos:start="7:38" pos:end="7:41">enum</name> <name pos:start="7:43" pos:end="7:54">NewImageMode</name></name></type> <name pos:start="7:56" pos:end="7:59">mode</name></decl></parameter>,

                      <parameter pos:start="9:23" pos:end="9:36"><decl pos:start="9:23" pos:end="9:36"><type pos:start="9:23" pos:end="9:36"><name pos:start="9:23" pos:end="9:26">bool</name></type> <name pos:start="9:28" pos:end="9:36">has_speed</name></decl></parameter>, <parameter pos:start="9:39" pos:end="9:51"><decl pos:start="9:39" pos:end="9:51"><type pos:start="9:39" pos:end="9:51"><name pos:start="9:39" pos:end="9:45">int64_t</name></type> <name pos:start="9:47" pos:end="9:51">speed</name></decl></parameter>,

                      <parameter pos:start="11:23" pos:end="11:46"><decl pos:start="11:23" pos:end="11:46"><type pos:start="11:23" pos:end="11:46"><name pos:start="11:23" pos:end="11:26">bool</name></type> <name pos:start="11:28" pos:end="11:46">has_on_source_error</name></decl></parameter>, <parameter pos:start="11:49" pos:end="11:79"><decl pos:start="11:49" pos:end="11:79"><type pos:start="11:49" pos:end="11:79"><name pos:start="11:49" pos:end="11:63">BlockdevOnError</name></type> <name pos:start="11:65" pos:end="11:79">on_source_error</name></decl></parameter>,

                      <parameter pos:start="13:23" pos:end="13:46"><decl pos:start="13:23" pos:end="13:46"><type pos:start="13:23" pos:end="13:46"><name pos:start="13:23" pos:end="13:26">bool</name></type> <name pos:start="13:28" pos:end="13:46">has_on_target_error</name></decl></parameter>, <parameter pos:start="13:49" pos:end="13:79"><decl pos:start="13:49" pos:end="13:79"><type pos:start="13:49" pos:end="13:79"><name pos:start="13:49" pos:end="13:63">BlockdevOnError</name></type> <name pos:start="13:65" pos:end="13:79">on_target_error</name></decl></parameter>,

                      <parameter pos:start="15:23" pos:end="15:34"><decl pos:start="15:23" pos:end="15:34"><type pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:27">Error</name> <modifier pos:start="15:29" pos:end="15:29">*</modifier><modifier pos:start="15:30" pos:end="15:30">*</modifier></type><name pos:start="15:31" pos:end="15:34">errp</name></decl></parameter>)</parameter_list>

<block pos:start="17:1" pos:end="240:1">{<block_content pos:start="19:5" pos:end="238:37">

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:20">BlockDriverState</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:32"><decl pos:start="21:5" pos:end="21:31"><type pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:20">BlockDriverState</name> <modifier pos:start="21:22" pos:end="21:22">*</modifier></type><name pos:start="21:23" pos:end="21:31">target_bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:36"><decl pos:start="23:5" pos:end="23:35"><type pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:20">BlockDriverState</name> <modifier pos:start="23:22" pos:end="23:22">*</modifier></type><name pos:start="23:23" pos:end="23:28">source</name> <init pos:start="23:30" pos:end="23:35">= <expr pos:start="23:32" pos:end="23:35"><name pos:start="23:32" pos:end="23:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:27"><type pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:14">AioContext</name> <modifier pos:start="25:16" pos:end="25:16">*</modifier></type><name pos:start="25:17" pos:end="25:27">aio_context</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:28"><decl pos:start="27:5" pos:end="27:27"><type pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:15">BlockDriver</name> <modifier pos:start="27:17" pos:end="27:17">*</modifier></type><name pos:start="27:18" pos:end="27:20">drv</name> <init pos:start="27:22" pos:end="27:27">= <expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:28"><decl pos:start="29:5" pos:end="29:27"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:9">Error</name> <modifier pos:start="29:11" pos:end="29:11">*</modifier></type><name pos:start="29:12" pos:end="29:20">local_err</name> <init pos:start="29:22" pos:end="29:27">= <expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:14"><decl pos:start="31:5" pos:end="31:13"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:17"><decl pos:start="33:5" pos:end="33:16"><type pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:11">int64_t</name></type> <name pos:start="33:13" pos:end="33:16">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:12"><decl pos:start="35:5" pos:end="35:11"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:19">(<expr pos:start="39:9" pos:end="39:18"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:18">has_speed</name></expr>)</condition> <block pos:start="39:21" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:18">

        <expr_stmt pos:start="41:9" pos:end="41:18"><expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:13">speed</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <literal type="number" pos:start="41:17" pos:end="41:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:29">(<expr pos:start="45:9" pos:end="45:28"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:28">has_on_source_error</name></expr>)</condition> <block pos:start="45:31" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:51">

        <expr_stmt pos:start="47:9" pos:end="47:51"><expr pos:start="47:9" pos:end="47:50"><name pos:start="47:9" pos:end="47:23">on_source_error</name> <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:50">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:29">(<expr pos:start="51:9" pos:end="51:28"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:28">has_on_target_error</name></expr>)</condition> <block pos:start="51:31" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:51">

        <expr_stmt pos:start="53:9" pos:end="53:51"><expr pos:start="53:9" pos:end="53:50"><name pos:start="53:9" pos:end="53:23">on_target_error</name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:50">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:18">(<expr pos:start="57:9" pos:end="57:17"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:17">has_mode</name></expr>)</condition> <block pos:start="57:20" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:45">

        <expr_stmt pos:start="59:9" pos:end="59:45"><expr pos:start="59:9" pos:end="59:44"><name pos:start="59:9" pos:end="59:12">mode</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:44">NEW_IMAGE_MODE_ABSOLUTE_PATHS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:27"><expr pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:6">bs</name> <operator pos:start="65:8" pos:end="65:8">=</operator> <call pos:start="65:10" pos:end="65:26"><name pos:start="65:10" pos:end="65:18">bdrv_find</name><argument_list pos:start="65:19" pos:end="65:26">(<argument pos:start="65:20" pos:end="65:25"><expr pos:start="65:20" pos:end="65:25"><name pos:start="65:20" pos:end="65:25">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:12">(<expr pos:start="67:9" pos:end="67:11"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:11">bs</name></expr>)</condition> <block pos:start="67:14" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:15">

        <expr_stmt pos:start="69:9" pos:end="69:55"><expr pos:start="69:9" pos:end="69:54"><call pos:start="69:9" pos:end="69:54"><name pos:start="69:9" pos:end="69:17">error_set</name><argument_list pos:start="69:18" pos:end="69:54">(<argument pos:start="69:19" pos:end="69:22"><expr pos:start="69:19" pos:end="69:22"><name pos:start="69:19" pos:end="69:22">errp</name></expr></argument>, <argument pos:start="69:25" pos:end="69:45"><expr pos:start="69:25" pos:end="69:45"><name pos:start="69:25" pos:end="69:45">QERR_DEVICE_NOT_FOUND</name></expr></argument>, <argument pos:start="69:48" pos:end="69:53"><expr pos:start="69:48" pos:end="69:53"><name pos:start="69:48" pos:end="69:53">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:43"><expr pos:start="77:5" pos:end="77:42"><name pos:start="77:5" pos:end="77:15">aio_context</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <call pos:start="77:19" pos:end="77:42"><name pos:start="77:19" pos:end="77:38">bdrv_get_aio_context</name><argument_list pos:start="77:39" pos:end="77:42">(<argument pos:start="77:40" pos:end="77:41"><expr pos:start="77:40" pos:end="77:41"><name pos:start="77:40" pos:end="77:41">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:37"><expr pos:start="79:5" pos:end="79:36"><call pos:start="79:5" pos:end="79:36"><name pos:start="79:5" pos:end="79:23">aio_context_acquire</name><argument_list pos:start="79:24" pos:end="79:36">(<argument pos:start="79:25" pos:end="79:35"><expr pos:start="79:25" pos:end="79:35"><name pos:start="79:25" pos:end="79:35">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="85:40">/* Although backup_run has this check too, we need to use bs-&gt;drv below, so

     * do an early check redundantly. */</comment>

    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:30">(<expr pos:start="87:9" pos:end="87:29"><operator pos:start="87:9" pos:end="87:9">!</operator><call pos:start="87:10" pos:end="87:29"><name pos:start="87:10" pos:end="87:25">bdrv_is_inserted</name><argument_list pos:start="87:26" pos:end="87:29">(<argument pos:start="87:27" pos:end="87:28"><expr pos:start="87:27" pos:end="87:28"><name pos:start="87:27" pos:end="87:28">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:32" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:17">

        <expr_stmt pos:start="89:9" pos:end="89:59"><expr pos:start="89:9" pos:end="89:58"><call pos:start="89:9" pos:end="89:58"><name pos:start="89:9" pos:end="89:17">error_set</name><argument_list pos:start="89:18" pos:end="89:58">(<argument pos:start="89:19" pos:end="89:22"><expr pos:start="89:19" pos:end="89:22"><name pos:start="89:19" pos:end="89:22">errp</name></expr></argument>, <argument pos:start="89:25" pos:end="89:49"><expr pos:start="89:25" pos:end="89:49"><name pos:start="89:25" pos:end="89:49">QERR_DEVICE_HAS_NO_MEDIUM</name></expr></argument>, <argument pos:start="89:52" pos:end="89:57"><expr pos:start="89:52" pos:end="89:57"><name pos:start="89:52" pos:end="89:57">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="91:9" pos:end="91:17">goto <name pos:start="91:14" pos:end="91:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:20">(<expr pos:start="97:9" pos:end="97:19"><operator pos:start="97:9" pos:end="97:9">!</operator><name pos:start="97:10" pos:end="97:19">has_format</name></expr>)</condition> <block pos:start="97:22" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:79">

        <expr_stmt pos:start="99:9" pos:end="99:79"><expr pos:start="99:9" pos:end="99:78"><name pos:start="99:9" pos:end="99:14">format</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <ternary pos:start="99:18" pos:end="99:78"><condition pos:start="99:18" pos:end="99:50"><expr pos:start="99:18" pos:end="99:48"><name pos:start="99:18" pos:end="99:21">mode</name> <operator pos:start="99:23" pos:end="99:24">==</operator> <name pos:start="99:26" pos:end="99:48">NEW_IMAGE_MODE_EXISTING</name></expr> ?</condition><then pos:start="99:52" pos:end="99:55"> <expr pos:start="99:52" pos:end="99:55"><name pos:start="99:52" pos:end="99:55">NULL</name></expr> </then><else pos:start="99:57" pos:end="99:78">: <expr pos:start="99:59" pos:end="99:78"><name pos:start="99:59" pos:end="99:78"><name pos:start="99:59" pos:end="99:60">bs</name><operator pos:start="99:61" pos:end="99:62">-&gt;</operator><name pos:start="99:63" pos:end="99:65">drv</name><operator pos:start="99:66" pos:end="99:67">-&gt;</operator><name pos:start="99:68" pos:end="99:78">format_name</name></name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="103:5" pos:end="115:5"><if pos:start="103:5" pos:end="115:5">if <condition pos:start="103:8" pos:end="103:15">(<expr pos:start="103:9" pos:end="103:14"><name pos:start="103:9" pos:end="103:14">format</name></expr>)</condition> <block pos:start="103:17" pos:end="115:5">{<block_content pos:start="105:9" pos:end="113:9">

        <expr_stmt pos:start="105:9" pos:end="105:39"><expr pos:start="105:9" pos:end="105:38"><name pos:start="105:9" pos:end="105:11">drv</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:38"><name pos:start="105:15" pos:end="105:30">bdrv_find_format</name><argument_list pos:start="105:31" pos:end="105:38">(<argument pos:start="105:32" pos:end="105:37"><expr pos:start="105:32" pos:end="105:37"><name pos:start="105:32" pos:end="105:37">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="113:9"><if pos:start="107:9" pos:end="113:9">if <condition pos:start="107:12" pos:end="107:17">(<expr pos:start="107:13" pos:end="107:16"><operator pos:start="107:13" pos:end="107:13">!</operator><name pos:start="107:14" pos:end="107:16">drv</name></expr>)</condition> <block pos:start="107:19" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:21">

            <expr_stmt pos:start="109:13" pos:end="109:63"><expr pos:start="109:13" pos:end="109:62"><call pos:start="109:13" pos:end="109:62"><name pos:start="109:13" pos:end="109:21">error_set</name><argument_list pos:start="109:22" pos:end="109:62">(<argument pos:start="109:23" pos:end="109:26"><expr pos:start="109:23" pos:end="109:26"><name pos:start="109:23" pos:end="109:26">errp</name></expr></argument>, <argument pos:start="109:29" pos:end="109:53"><expr pos:start="109:29" pos:end="109:53"><name pos:start="109:29" pos:end="109:53">QERR_INVALID_BLOCK_FORMAT</name></expr></argument>, <argument pos:start="109:56" pos:end="109:61"><expr pos:start="109:56" pos:end="109:61"><name pos:start="109:56" pos:end="109:61">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="111:13" pos:end="111:21">goto <name pos:start="111:18" pos:end="111:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>




    <if_stmt pos:start="120:5" pos:end="124:5"><if pos:start="120:5" pos:end="124:5">if <condition pos:start="120:8" pos:end="120:66">(<expr pos:start="120:9" pos:end="120:65"><call pos:start="120:9" pos:end="120:65"><name pos:start="120:9" pos:end="120:26">bdrv_op_is_blocked</name><argument_list pos:start="120:27" pos:end="120:65">(<argument pos:start="120:28" pos:end="120:29"><expr pos:start="120:28" pos:end="120:29"><name pos:start="120:28" pos:end="120:29">bs</name></expr></argument>, <argument pos:start="120:32" pos:end="120:58"><expr pos:start="120:32" pos:end="120:58"><name pos:start="120:32" pos:end="120:58">BLOCK_OP_TYPE_BACKUP_SOURCE</name></expr></argument>, <argument pos:start="120:61" pos:end="120:64"><expr pos:start="120:61" pos:end="120:64"><name pos:start="120:61" pos:end="120:64">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="120:68" pos:end="124:5">{<block_content pos:start="122:9" pos:end="122:17">

        <goto pos:start="122:9" pos:end="122:17">goto <name pos:start="122:14" pos:end="122:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="128:5" pos:end="128:41"><expr pos:start="128:5" pos:end="128:40"><name pos:start="128:5" pos:end="128:9">flags</name> <operator pos:start="128:11" pos:end="128:11">=</operator> <name pos:start="128:13" pos:end="128:26"><name pos:start="128:13" pos:end="128:14">bs</name><operator pos:start="128:15" pos:end="128:16">-&gt;</operator><name pos:start="128:17" pos:end="128:26">open_flags</name></name> <operator pos:start="128:28" pos:end="128:28">|</operator> <name pos:start="128:30" pos:end="128:40">BDRV_O_RDWR</name></expr>;</expr_stmt>



    <comment type="block" pos:start="132:5" pos:end="134:20">/* See if we have a backing HD we can use to create our new image

     * on top of. */</comment>

    <if_stmt pos:start="136:5" pos:end="146:5"><if pos:start="136:5" pos:end="146:5">if <condition pos:start="136:8" pos:end="136:37">(<expr pos:start="136:9" pos:end="136:36"><name pos:start="136:9" pos:end="136:12">sync</name> <operator pos:start="136:14" pos:end="136:15">==</operator> <name pos:start="136:17" pos:end="136:36">MIRROR_SYNC_MODE_TOP</name></expr>)</condition> <block pos:start="136:39" pos:end="146:5">{<block_content pos:start="138:9" pos:end="144:9">

        <expr_stmt pos:start="138:9" pos:end="138:32"><expr pos:start="138:9" pos:end="138:31"><name pos:start="138:9" pos:end="138:14">source</name> <operator pos:start="138:16" pos:end="138:16">=</operator> <name pos:start="138:18" pos:end="138:31"><name pos:start="138:18" pos:end="138:19">bs</name><operator pos:start="138:20" pos:end="138:21">-&gt;</operator><name pos:start="138:22" pos:end="138:31">backing_hd</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="140:9" pos:end="144:9"><if pos:start="140:9" pos:end="144:9">if <condition pos:start="140:12" pos:end="140:20">(<expr pos:start="140:13" pos:end="140:19"><operator pos:start="140:13" pos:end="140:13">!</operator><name pos:start="140:14" pos:end="140:19">source</name></expr>)</condition> <block pos:start="140:22" pos:end="144:9">{<block_content pos:start="142:13" pos:end="142:41">

            <expr_stmt pos:start="142:13" pos:end="142:41"><expr pos:start="142:13" pos:end="142:40"><name pos:start="142:13" pos:end="142:16">sync</name> <operator pos:start="142:18" pos:end="142:18">=</operator> <name pos:start="142:20" pos:end="142:40">MIRROR_SYNC_MODE_FULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="148:5" pos:end="152:5"><if pos:start="148:5" pos:end="152:5">if <condition pos:start="148:8" pos:end="148:38">(<expr pos:start="148:9" pos:end="148:37"><name pos:start="148:9" pos:end="148:12">sync</name> <operator pos:start="148:14" pos:end="148:15">==</operator> <name pos:start="148:17" pos:end="148:37">MIRROR_SYNC_MODE_NONE</name></expr>)</condition> <block pos:start="148:40" pos:end="152:5">{<block_content pos:start="150:9" pos:end="150:20">

        <expr_stmt pos:start="150:9" pos:end="150:20"><expr pos:start="150:9" pos:end="150:19"><name pos:start="150:9" pos:end="150:14">source</name> <operator pos:start="150:16" pos:end="150:16">=</operator> <name pos:start="150:18" pos:end="150:19">bs</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="156:5" pos:end="156:30"><expr pos:start="156:5" pos:end="156:29"><name pos:start="156:5" pos:end="156:8">size</name> <operator pos:start="156:10" pos:end="156:10">=</operator> <call pos:start="156:12" pos:end="156:29"><name pos:start="156:12" pos:end="156:25">bdrv_getlength</name><argument_list pos:start="156:26" pos:end="156:29">(<argument pos:start="156:27" pos:end="156:28"><expr pos:start="156:27" pos:end="156:28"><name pos:start="156:27" pos:end="156:28">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="158:5" pos:end="164:5"><if pos:start="158:5" pos:end="164:5">if <condition pos:start="158:8" pos:end="158:17">(<expr pos:start="158:9" pos:end="158:16"><name pos:start="158:9" pos:end="158:12">size</name> <operator pos:start="158:14" pos:end="158:14">&lt;</operator> <literal type="number" pos:start="158:16" pos:end="158:16">0</literal></expr>)</condition> <block pos:start="158:19" pos:end="164:5">{<block_content pos:start="160:9" pos:end="162:17">

        <expr_stmt pos:start="160:9" pos:end="160:63"><expr pos:start="160:9" pos:end="160:62"><call pos:start="160:9" pos:end="160:62"><name pos:start="160:9" pos:end="160:24">error_setg_errno</name><argument_list pos:start="160:25" pos:end="160:62">(<argument pos:start="160:26" pos:end="160:29"><expr pos:start="160:26" pos:end="160:29"><name pos:start="160:26" pos:end="160:29">errp</name></expr></argument>, <argument pos:start="160:32" pos:end="160:36"><expr pos:start="160:32" pos:end="160:36"><operator pos:start="160:32" pos:end="160:32">-</operator><name pos:start="160:33" pos:end="160:36">size</name></expr></argument>, <argument pos:start="160:39" pos:end="160:61"><expr pos:start="160:39" pos:end="160:61"><literal type="string" pos:start="160:39" pos:end="160:61">"bdrv_getlength failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="162:9" pos:end="162:17">goto <name pos:start="162:14" pos:end="162:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="168:5" pos:end="188:5"><if pos:start="168:5" pos:end="188:5">if <condition pos:start="168:8" pos:end="168:40">(<expr pos:start="168:9" pos:end="168:39"><name pos:start="168:9" pos:end="168:12">mode</name> <operator pos:start="168:14" pos:end="168:15">!=</operator> <name pos:start="168:17" pos:end="168:39">NEW_IMAGE_MODE_EXISTING</name></expr>)</condition> <block pos:start="168:42" pos:end="188:5">{<block_content pos:start="170:9" pos:end="186:9">

        <expr_stmt pos:start="170:9" pos:end="170:30"><expr pos:start="170:9" pos:end="170:29"><call pos:start="170:9" pos:end="170:29"><name pos:start="170:9" pos:end="170:14">assert</name><argument_list pos:start="170:15" pos:end="170:29">(<argument pos:start="170:16" pos:end="170:28"><expr pos:start="170:16" pos:end="170:28"><name pos:start="170:16" pos:end="170:21">format</name> <operator pos:start="170:23" pos:end="170:24">&amp;&amp;</operator> <name pos:start="170:26" pos:end="170:28">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="172:9" pos:end="186:9"><if pos:start="172:9" pos:end="180:9">if <condition pos:start="172:12" pos:end="172:19">(<expr pos:start="172:13" pos:end="172:18"><name pos:start="172:13" pos:end="172:18">source</name></expr>)</condition> <block pos:start="172:21" pos:end="180:9">{<block_content pos:start="174:13" pos:end="178:60">

            <expr_stmt pos:start="174:13" pos:end="178:60"><expr pos:start="174:13" pos:end="178:59"><call pos:start="174:13" pos:end="178:59"><name pos:start="174:13" pos:end="174:27">bdrv_img_create</name><argument_list pos:start="174:28" pos:end="178:59">(<argument pos:start="174:29" pos:end="174:34"><expr pos:start="174:29" pos:end="174:34"><name pos:start="174:29" pos:end="174:34">target</name></expr></argument>, <argument pos:start="174:37" pos:end="174:42"><expr pos:start="174:37" pos:end="174:42"><name pos:start="174:37" pos:end="174:42">format</name></expr></argument>, <argument pos:start="174:45" pos:end="174:60"><expr pos:start="174:45" pos:end="174:60"><name pos:start="174:45" pos:end="174:60"><name pos:start="174:45" pos:end="174:50">source</name><operator pos:start="174:51" pos:end="174:52">-&gt;</operator><name pos:start="174:53" pos:end="174:60">filename</name></name></expr></argument>,

                            <argument pos:start="176:29" pos:end="176:52"><expr pos:start="176:29" pos:end="176:52"><name pos:start="176:29" pos:end="176:52"><name pos:start="176:29" pos:end="176:34">source</name><operator pos:start="176:35" pos:end="176:36">-&gt;</operator><name pos:start="176:37" pos:end="176:39">drv</name><operator pos:start="176:40" pos:end="176:41">-&gt;</operator><name pos:start="176:42" pos:end="176:52">format_name</name></name></expr></argument>, <argument pos:start="176:55" pos:end="176:58"><expr pos:start="176:55" pos:end="176:58"><name pos:start="176:55" pos:end="176:58">NULL</name></expr></argument>,

                            <argument pos:start="178:29" pos:end="178:32"><expr pos:start="178:29" pos:end="178:32"><name pos:start="178:29" pos:end="178:32">size</name></expr></argument>, <argument pos:start="178:35" pos:end="178:39"><expr pos:start="178:35" pos:end="178:39"><name pos:start="178:35" pos:end="178:39">flags</name></expr></argument>, <argument pos:start="178:42" pos:end="178:51"><expr pos:start="178:42" pos:end="178:51"><operator pos:start="178:42" pos:end="178:42">&amp;</operator><name pos:start="178:43" pos:end="178:51">local_err</name></expr></argument>, <argument pos:start="178:54" pos:end="178:58"><expr pos:start="178:54" pos:end="178:58"><name pos:start="178:54" pos:end="178:58">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="180:11" pos:end="186:9">else <block pos:start="180:16" pos:end="186:9">{<block_content pos:start="182:13" pos:end="184:60">

            <expr_stmt pos:start="182:13" pos:end="184:60"><expr pos:start="182:13" pos:end="184:59"><call pos:start="182:13" pos:end="184:59"><name pos:start="182:13" pos:end="182:27">bdrv_img_create</name><argument_list pos:start="182:28" pos:end="184:59">(<argument pos:start="182:29" pos:end="182:34"><expr pos:start="182:29" pos:end="182:34"><name pos:start="182:29" pos:end="182:34">target</name></expr></argument>, <argument pos:start="182:37" pos:end="182:42"><expr pos:start="182:37" pos:end="182:42"><name pos:start="182:37" pos:end="182:42">format</name></expr></argument>, <argument pos:start="182:45" pos:end="182:48"><expr pos:start="182:45" pos:end="182:48"><name pos:start="182:45" pos:end="182:48">NULL</name></expr></argument>, <argument pos:start="182:51" pos:end="182:54"><expr pos:start="182:51" pos:end="182:54"><name pos:start="182:51" pos:end="182:54">NULL</name></expr></argument>, <argument pos:start="182:57" pos:end="182:60"><expr pos:start="182:57" pos:end="182:60"><name pos:start="182:57" pos:end="182:60">NULL</name></expr></argument>,

                            <argument pos:start="184:29" pos:end="184:32"><expr pos:start="184:29" pos:end="184:32"><name pos:start="184:29" pos:end="184:32">size</name></expr></argument>, <argument pos:start="184:35" pos:end="184:39"><expr pos:start="184:35" pos:end="184:39"><name pos:start="184:35" pos:end="184:39">flags</name></expr></argument>, <argument pos:start="184:42" pos:end="184:51"><expr pos:start="184:42" pos:end="184:51"><operator pos:start="184:42" pos:end="184:42">&amp;</operator><name pos:start="184:43" pos:end="184:51">local_err</name></expr></argument>, <argument pos:start="184:54" pos:end="184:58"><expr pos:start="184:54" pos:end="184:58"><name pos:start="184:54" pos:end="184:58">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="192:5" pos:end="198:5"><if pos:start="192:5" pos:end="198:5">if <condition pos:start="192:8" pos:end="192:18">(<expr pos:start="192:9" pos:end="192:17"><name pos:start="192:9" pos:end="192:17">local_err</name></expr>)</condition> <block pos:start="192:20" pos:end="198:5">{<block_content pos:start="194:9" pos:end="196:17">

        <expr_stmt pos:start="194:9" pos:end="194:41"><expr pos:start="194:9" pos:end="194:40"><call pos:start="194:9" pos:end="194:40"><name pos:start="194:9" pos:end="194:23">error_propagate</name><argument_list pos:start="194:24" pos:end="194:40">(<argument pos:start="194:25" pos:end="194:28"><expr pos:start="194:25" pos:end="194:28"><name pos:start="194:25" pos:end="194:28">errp</name></expr></argument>, <argument pos:start="194:31" pos:end="194:39"><expr pos:start="194:31" pos:end="194:39"><name pos:start="194:31" pos:end="194:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="196:9" pos:end="196:17">goto <name pos:start="196:14" pos:end="196:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="202:5" pos:end="202:21"><expr pos:start="202:5" pos:end="202:20"><name pos:start="202:5" pos:end="202:13">target_bs</name> <operator pos:start="202:15" pos:end="202:15">=</operator> <name pos:start="202:17" pos:end="202:20">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="204:5" pos:end="204:76"><expr pos:start="204:5" pos:end="204:75"><name pos:start="204:5" pos:end="204:7">ret</name> <operator pos:start="204:9" pos:end="204:9">=</operator> <call pos:start="204:11" pos:end="204:75"><name pos:start="204:11" pos:end="204:19">bdrv_open</name><argument_list pos:start="204:20" pos:end="204:75">(<argument pos:start="204:21" pos:end="204:30"><expr pos:start="204:21" pos:end="204:30"><operator pos:start="204:21" pos:end="204:21">&amp;</operator><name pos:start="204:22" pos:end="204:30">target_bs</name></expr></argument>, <argument pos:start="204:33" pos:end="204:38"><expr pos:start="204:33" pos:end="204:38"><name pos:start="204:33" pos:end="204:38">target</name></expr></argument>, <argument pos:start="204:41" pos:end="204:44"><expr pos:start="204:41" pos:end="204:44"><name pos:start="204:41" pos:end="204:44">NULL</name></expr></argument>, <argument pos:start="204:47" pos:end="204:50"><expr pos:start="204:47" pos:end="204:50"><name pos:start="204:47" pos:end="204:50">NULL</name></expr></argument>, <argument pos:start="204:53" pos:end="204:57"><expr pos:start="204:53" pos:end="204:57"><name pos:start="204:53" pos:end="204:57">flags</name></expr></argument>, <argument pos:start="204:60" pos:end="204:62"><expr pos:start="204:60" pos:end="204:62"><name pos:start="204:60" pos:end="204:62">drv</name></expr></argument>, <argument pos:start="204:65" pos:end="204:74"><expr pos:start="204:65" pos:end="204:74"><operator pos:start="204:65" pos:end="204:65">&amp;</operator><name pos:start="204:66" pos:end="204:74">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="206:5" pos:end="212:5"><if pos:start="206:5" pos:end="212:5">if <condition pos:start="206:8" pos:end="206:16">(<expr pos:start="206:9" pos:end="206:15"><name pos:start="206:9" pos:end="206:11">ret</name> <operator pos:start="206:13" pos:end="206:13">&lt;</operator> <literal type="number" pos:start="206:15" pos:end="206:15">0</literal></expr>)</condition> <block pos:start="206:18" pos:end="212:5">{<block_content pos:start="208:9" pos:end="210:17">

        <expr_stmt pos:start="208:9" pos:end="208:41"><expr pos:start="208:9" pos:end="208:40"><call pos:start="208:9" pos:end="208:40"><name pos:start="208:9" pos:end="208:23">error_propagate</name><argument_list pos:start="208:24" pos:end="208:40">(<argument pos:start="208:25" pos:end="208:28"><expr pos:start="208:25" pos:end="208:28"><name pos:start="208:25" pos:end="208:28">errp</name></expr></argument>, <argument pos:start="208:31" pos:end="208:39"><expr pos:start="208:31" pos:end="208:39"><name pos:start="208:31" pos:end="208:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="210:9" pos:end="210:17">goto <name pos:start="210:14" pos:end="210:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="216:5" pos:end="216:49"><expr pos:start="216:5" pos:end="216:48"><call pos:start="216:5" pos:end="216:48"><name pos:start="216:5" pos:end="216:24">bdrv_set_aio_context</name><argument_list pos:start="216:25" pos:end="216:48">(<argument pos:start="216:26" pos:end="216:34"><expr pos:start="216:26" pos:end="216:34"><name pos:start="216:26" pos:end="216:34">target_bs</name></expr></argument>, <argument pos:start="216:37" pos:end="216:47"><expr pos:start="216:37" pos:end="216:47"><name pos:start="216:37" pos:end="216:47">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="220:5" pos:end="222:47"><expr pos:start="220:5" pos:end="222:46"><call pos:start="220:5" pos:end="222:46"><name pos:start="220:5" pos:end="220:16">backup_start</name><argument_list pos:start="220:17" pos:end="222:46">(<argument pos:start="220:18" pos:end="220:19"><expr pos:start="220:18" pos:end="220:19"><name pos:start="220:18" pos:end="220:19">bs</name></expr></argument>, <argument pos:start="220:22" pos:end="220:30"><expr pos:start="220:22" pos:end="220:30"><name pos:start="220:22" pos:end="220:30">target_bs</name></expr></argument>, <argument pos:start="220:33" pos:end="220:37"><expr pos:start="220:33" pos:end="220:37"><name pos:start="220:33" pos:end="220:37">speed</name></expr></argument>, <argument pos:start="220:40" pos:end="220:43"><expr pos:start="220:40" pos:end="220:43"><name pos:start="220:40" pos:end="220:43">sync</name></expr></argument>, <argument pos:start="220:46" pos:end="220:60"><expr pos:start="220:46" pos:end="220:60"><name pos:start="220:46" pos:end="220:60">on_source_error</name></expr></argument>, <argument pos:start="220:63" pos:end="220:77"><expr pos:start="220:63" pos:end="220:77"><name pos:start="220:63" pos:end="220:77">on_target_error</name></expr></argument>,

                 <argument pos:start="222:18" pos:end="222:29"><expr pos:start="222:18" pos:end="222:29"><name pos:start="222:18" pos:end="222:29">block_job_cb</name></expr></argument>, <argument pos:start="222:32" pos:end="222:33"><expr pos:start="222:32" pos:end="222:33"><name pos:start="222:32" pos:end="222:33">bs</name></expr></argument>, <argument pos:start="222:36" pos:end="222:45"><expr pos:start="222:36" pos:end="222:45"><operator pos:start="222:36" pos:end="222:36">&amp;</operator><name pos:start="222:37" pos:end="222:45">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="224:5" pos:end="232:5"><if pos:start="224:5" pos:end="232:5">if <condition pos:start="224:8" pos:end="224:26">(<expr pos:start="224:9" pos:end="224:25"><name pos:start="224:9" pos:end="224:17">local_err</name> <operator pos:start="224:19" pos:end="224:20">!=</operator> <name pos:start="224:22" pos:end="224:25">NULL</name></expr>)</condition> <block pos:start="224:28" pos:end="232:5">{<block_content pos:start="226:9" pos:end="230:17">

        <expr_stmt pos:start="226:9" pos:end="226:30"><expr pos:start="226:9" pos:end="226:29"><call pos:start="226:9" pos:end="226:29"><name pos:start="226:9" pos:end="226:18">bdrv_unref</name><argument_list pos:start="226:19" pos:end="226:29">(<argument pos:start="226:20" pos:end="226:28"><expr pos:start="226:20" pos:end="226:28"><name pos:start="226:20" pos:end="226:28">target_bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="228:9" pos:end="228:41"><expr pos:start="228:9" pos:end="228:40"><call pos:start="228:9" pos:end="228:40"><name pos:start="228:9" pos:end="228:23">error_propagate</name><argument_list pos:start="228:24" pos:end="228:40">(<argument pos:start="228:25" pos:end="228:28"><expr pos:start="228:25" pos:end="228:28"><name pos:start="228:25" pos:end="228:28">errp</name></expr></argument>, <argument pos:start="228:31" pos:end="228:39"><expr pos:start="228:31" pos:end="228:39"><name pos:start="228:31" pos:end="228:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="230:9" pos:end="230:17">goto <name pos:start="230:14" pos:end="230:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



<label pos:start="236:1" pos:end="236:4"><name pos:start="236:1" pos:end="236:3">out</name>:</label>

    <expr_stmt pos:start="238:5" pos:end="238:37"><expr pos:start="238:5" pos:end="238:36"><call pos:start="238:5" pos:end="238:36"><name pos:start="238:5" pos:end="238:23">aio_context_release</name><argument_list pos:start="238:24" pos:end="238:36">(<argument pos:start="238:25" pos:end="238:35"><expr pos:start="238:25" pos:end="238:35"><name pos:start="238:25" pos:end="238:35">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
